LavaPack.loadBundle([[4,{"../../shared/constants/app":4892,"../../shared/constants/metametrics":4904,"../../shared/constants/offscreen-communication":4910,"../../shared/modules/browser-runtime.utils":4938,"../../shared/modules/mv3.utils":4952,"../../shared/modules/object.utils":4954,"../../test/e2e/background-socket/socket-background-to-mocha":4969,"../../test/e2e/default-fixture":4971,"../../test/stub/keyring-bridge":4977,"../../ui/selectors":6535,"./constants/marketing-site-whitelist":6,"./constants/sentry-state":7,"./first-time-state":36,"./fixtures/generate-wallet-state":37,"./lib/createStreamSink":65,"./lib/ens-ipfs/setup":72,"./lib/get-first-preferred-lang-code":74,"./lib/getObjStructure":75,"./lib/local-store":77,"./lib/migrator":81,"./lib/network-store":83,"./lib/notification-manager":84,"./lib/setup-initial-state-hooks":109,"./lib/util":130,"./metamask-controller":131,"./migrations":274,"./offscreen":275,"./platforms/extension":276,"@metamask/controller-utils":1217,"@metamask/notification-services-controller":1791,"@metamask/obs-store":1801,"@metamask/snaps-rpc-methods":2287,"@metamask/utils":2613,"debounce-stream":3538,"eth-rpc-errors":3621,events:3706,"extension-port-stream":3709,loglevel:4247,"readable-stream":4654,"webextension-polyfill":4871},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.loadStateFromPersistence=Se,r.setupController=Ne,r.statePersistenceEvents=void 0,e("./lib/setup-initial-state-hooks");var n=B(e("events")),a=e("readable-stream"),o=B(e("debounce-stream")),s=B(e("loglevel")),i=B(e("webextension-polyfill")),l=e("@metamask/obs-store"),c=e("@metamask/utils"),u=e("@metamask/controller-utils"),d=B(e("extension-port-stream")),f=e("eth-rpc-errors"),p=e("@metamask/snaps-rpc-methods"),m=e("@metamask/notification-services-controller"),E=e("../../shared/constants/app"),g=e("../../shared/constants/metametrics"),T=e("../../shared/modules/browser-runtime.utils"),C=e("../../shared/modules/mv3.utils"),b=e("../../shared/modules/object.utils"),S=(e("../../test/e2e/default-fixture"),e("../../test/e2e/background-socket/socket-background-to-mocha"),e("../../shared/constants/offscreen-communication"),e("../../test/stub/keyring-bridge")),_=e("../../ui/selectors"),h=B(e("./migrations")),N=B(e("./lib/migrator")),M=B(e("./platforms/extension")),v=B(e("./lib/local-store")),A=B(e("./lib/network-store")),O=e("./constants/sentry-state"),w=B(e("./lib/createStreamSink")),I=j(e("./lib/notification-manager")),R=j(e("./metamask-controller")),y=B(e("./first-time-state")),P=B(e("./lib/get-first-preferred-lang-code")),k=B(e("./lib/getObjStructure")),L=B(e("./lib/ens-ipfs/setup")),U=e("./lib/util"),F=(e("./fixtures/generate-wallet-state"),e("./offscreen")),D=e("./constants/marketing-site-whitelist");function V(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(V=function(e){return e?r:t})(e)}function j(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=V(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var s=a?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(n,o,s):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function B(e){return e&&e.__esModule?e:{default:e}}const x="#0376C9",G="#D73847",Y=9,K=!1,q=K?new A.default:new v.default;global.stateHooks.getMostRecentPersistedState=()=>q.mostRecentRetrievedState;const{sentry:H}=global;let $={...y.default};const z={[E.ENVIRONMENT_TYPE_POPUP]:!0,[E.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[E.ENVIRONMENT_TYPE_FULLSCREEN]:!0},Q=["trezor-connect"];s.default.setLevel("info",!1);const W=new M.default,J=new I.default;let X=0,Z=!1,ee=!1;const te={},re={};let ne,ae;const oe={};K&&(global.stateHooks.metamaskGetState=q.get.bind(q));const se=new URL("https://metamask.github.io/phishing-warning/v4.0.0/"),ie=se.toString(),le=1e3,ce=r.statePersistenceEvents=new n.default,{promise:ue,resolve:de,reject:fe}=(0,U.deferredPromise)(),pe=async()=>{const e=await i.default.tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>((0,T.checkForLastErrorAndLog)(),e))).catch((()=>{(0,T.checkForLastErrorAndLog)()}));for(const t of e)i.default.tabs.sendMessage(t.id,{name:E.EXTENSION_MESSAGES.READY}).then((()=>{(0,T.checkForLastErrorAndLog)()})).catch((()=>{(0,T.checkForLastErrorAndLog)()}))};let me,Ee,ge;function Te(){const e=(new Date).toISOString();i.default.storage.session.set({timestamp:e})}async function Ce(){try{const t=C.isManifestV3?(0,F.createOffscreen)():null,r=await Se(),n=r.data,a=await(0,P.default)();let o;if(C.isManifestV3){var e;if(!1!==(null===(e=n.PreferencesController)||void 0===e?void 0:e.enableMV3TimestampSave)){const e=2e3;Te(),setInterval(Te,e)}const t=await i.default.storage.session.get(["isFirstMetaMaskControllerSetup"]);o=(null==t?void 0:t.isFirstMetaMaskControllerSetup)===undefined,await i.default.storage.session.set({isFirstMetaMaskControllerSetup:o})}Ne(n,a,K?{keyrings:{trezorBridge:S.FakeTrezorBridge,ledgerBridge:S.FakeLedgerBridge}}:{},o,r.meta,t),function(e){async function t(e,t){try{return await i.default.tabs.update(e,{url:t})}catch(e){return null==H?void 0:H.captureException(e)}}const r=!C.isManifestV3;i.default.webRequest.onBeforeRequest.addListener((n=>{if(n.tabId===i.default.tabs.TAB_ID_NONE)return{};const{completedOnboarding:a}=e.onboardingController.state;if(!a)return{};if(!e.preferencesController.store.getState().usePhishDetect)return{};if(n.initiator&&new URL(n.initiator).host===se.host)return{};const{hostname:o,href:s,searchParams:l}=new URL(n.url);if(K&&l.has("IN_TEST_BYPASS_EARLY_PHISHING_DETECTION"))return{};e.phishingController.maybeUpdateState();const c=e.phishingController.test(n.url),u=e.phishingController.isBlockedRequest(n.url);if(!(null!=c&&c.result||u.result))return{};let d;d=null!=c&&c.result&&u.result?`${c.type} and ${u.type}`:null!=c&&c.result?c.type:u.type,e.metaMetricsController.trackEvent({event:g.MetaMetricsEventName.PhishingPageDisplayed,category:g.MetaMetricsEventCategory.Phishing,properties:{url:o,reason:d}});const f=new URLSearchParams({hostname:o,href:s}),p=new URL(ie);p.hash=f.toString();const m=p.toString();return r?"sub_frame"===n.type?(t(n.tabId,m),{cancel:!0}):{redirectUrl:m}:(t(n.tabId,m),{})}),{types:["main_frame","sub_frame","xmlhttprequest"],urls:["http://*/*","https://*/*"]},r?["blocking"]:[])}(ne),C.isManifestV3||await async function(){let e;try{const t=new URL(ie);let r,n;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const a=new Promise(((e,t)=>{r=e,n=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>n(new be)),le),await a}catch(e){e instanceof be?console.warn("Phishing warning page timeout; page not guaranteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await pe(),s.default.info("MetaMask initialization complete."),de()}catch(e){fe(e)}}i.default.runtime.onConnect.addListener((async(...e)=>{await ue,me(...e)})),i.default.runtime.onConnectExternal.addListener((async(...e)=>{var t;await ue;null!==(t=e[0].sender.tab)&&void 0!==t&&t.id,Ee(...e)}));class be extends Error{constructor(){super("Timeout failed")}}async function Se(){const e=new N.default({migrations:h.default,defaultVersion:null});if(e.on("error",console.warn),ae=await q.get()||e.generateInitialState($),ae&&!ae.data&&(ae=e.generateInitialState($),H.captureMessage("MetaMask - Empty vault found - unable to recover")),e.on("error",(e=>{const t=(0,k.default)(ae);H.captureException(e,{extra:{vaultStructure:t}})})),ae=await e.migrateData(ae),!ae)throw new Error("MetaMask - migrator returned undefined");if(!(0,c.isObject)(ae.meta))throw new Error(`MetaMask - migrator metadata has invalid type '${typeof ae.meta}'`);if("number"!=typeof ae.meta.version)throw new Error(`MetaMask - migrator metadata version has invalid type '${typeof ae.meta.version}'`);if(!(0,c.isObject)(ae.data))throw new Error(`MetaMask - migrator data has invalid type '${typeof ae.data}'`);return q.setMetadata(ae.meta),q.set(ae.data),ae}function _e(e){var t;const{metaMetricsId:r}=ne.metaMetricsController.state;if(!(0,U.shouldEmitDappViewedEvent)(r))return;const n=ne.controllerMessenger.call("PermissionController:getPermissions",e),a=null==n||null===(t=n.eth_accounts)||void 0===t||null===(t=t.caveats[0])||void 0===t?void 0:t.value.length;if(!a)return;const o=ne.controllerMessenger.call("PreferencesController:getState"),s=Object.keys(o.identities).length;ne.metaMetricsController.trackEvent({event:g.MetaMetricsEventName.DappViewed,category:g.MetaMetricsEventCategory.InpageProvider,referrer:{url:e},properties:{is_first_visit:!1,number_of_accounts:s,number_of_accounts_connected:a}})}function he(e){if(!e.sender||!e.sender.tab||!e.sender.url)return;const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:n}=r;Object.keys(oe).includes(t)||(oe[t]=n);const a=ne.controllerMessenger.call("PermissionController:hasPermissions",n),o="New Tab"!==e.sender.tab.title;a&&o&&_e(n)}function Ne(e,t,r,n,c,T){var S;ne=new R.default({infuraProjectId:"6112dc49493d4424ab7099c7bc1c7ee0",showUserConfirmation:Me,initState:e,initLangCode:t,platform:W,notificationManager:J,browser:i.default,getRequestAccountTabIds:()=>re,getOpenMetamaskTabsIds:()=>te,localStore:q,overrides:r,isFirstMetaMaskControllerSetup:n,currentMigrationVersion:c.version,featureFlags:{},offscreenPromise:T}),(0,L.default)({getCurrentChainId:()=>(0,_.getCurrentChainId)({metamask:ne.networkController.state}),getIpfsGateway:ne.preferencesController.getIpfsGateway.bind(ne.preferencesController),getUseAddressBarEnsResolution:()=>ne.preferencesController.store.getState().useAddressBarEnsResolution,provider:ne.provider}),(0,a.pipeline)((0,l.storeAsStream)(ne.store),(0,o.default)(1e3),(0,w.default)((async e=>{await q.set(e),ce.emit("state-persisted",e)})),(e=>{s.default.error("MetaMask - Persistence pipeline failed",e)})),S=ne,global.stateHooks.getSentryAppState=function(){const e=S.memStore.getState();return(0,b.maskObject)(e,O.SENTRY_BACKGROUND_STATE)};const h=()=>X>0||Boolean(Object.keys(te).length)||Z,N=(e,t)=>{if(!1===e)ne.onClientClosed();else{if(t===E.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(te).length))return;ne.onEnvironmentTypeClosed(t)}};function M(e,t){return e>t?`${t}+`:String(e)}function v(){const e=A(),t=function(){try{const{isNotificationServicesEnabled:e,isFeatureAnnouncementsEnabled:t}=ne.notificationServicesController.state,r=Object.values(ne.notificationController.state.notifications).filter((e=>null===e.readDate)).length,n=t?ne.notificationServicesController.state.metamaskNotificationsList.filter((e=>!e.isRead&&e.type===m.NotificationServicesController.Constants.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT)).length:0,a=e?ne.notificationServicesController.state.metamaskNotificationsList.filter((e=>!e.isRead&&e.type!==m.NotificationServicesController.Constants.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT)).length:0;return r+n+a}catch(e){return console.error("Failed to get unread notifications count:",e),0}}();let r="",n=x;e?r=M(e,Y):t>0&&(r=M(t,Y),n=G);try{const e={text:r},t={color:n};C.isManifestV3?(i.default.action.setBadgeText(e),i.default.action.setBadgeBackgroundColor(t)):(i.default.browserAction.setBadgeText(e),i.default.browserAction.setBadgeBackgroundColor(t))}catch(e){console.error("Error updating browser badge:",e)}}function A(){try{let e=ne.appStateController.waitingForUnlock.length+ne.approvalController.getTotalApprovalCount();return ne.preferencesController.getUseRequestQueue()&&(e+=ne.queuedRequestController.state.queuedRequestCount),e}catch(e){return console.error("Failed to get pending approval count:",e),0}}me=async e=>{var t;const n=e.name;if(Q.includes(e.name))return;let o=!1;const s=(0,U.getPlatform)(),l=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(o=s===E.PLATFORM_FIREFOX?z[n]:(null==l?void 0:l.origin)===`chrome-extension://${i.default.runtime.id}`,o){var c;const t=(null==r||null===(c=r.getPortStream)||void 0===c?void 0:c.call(r,e))||new d.default(e);if(ne.isClientOpen=!0,ne.setupTrustedCommunication(t,e.sender),n===E.ENVIRONMENT_TYPE_POPUP&&(X+=1,(0,a.finished)(t,(()=>{X-=1;const e=h();ne.isClientOpen=e,N(e,E.ENVIRONMENT_TYPE_POPUP)}))),n===E.ENVIRONMENT_TYPE_NOTIFICATION&&(Z=!0,(0,a.finished)(t,(()=>{Z=!1;const e=h();ne.isClientOpen=e,N(e,E.ENVIRONMENT_TYPE_NOTIFICATION)}))),n===E.ENVIRONMENT_TYPE_FULLSCREEN){const r=e.sender.tab.id;te[r]=!0,(0,a.finished)(t,(()=>{delete te[r];const e=h();ne.isClientOpen=e,N(e,E.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(l&&l.origin===se.origin&&l.pathname===se.pathname){var u;const t=(null==r||null===(u=r.getPortStream)||void 0===u?void 0:u.call(r,e))||new d.default(e);ne.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:n}=r;he(e),e.onMessage.addListener((e=>{e.data&&e.data.method===E.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS&&(re[n]=t)}))}if(l&&D.COOKIE_ID_MARKETING_WHITELIST_ORIGINS.some((e=>e===l.origin))){var f;const t=(null==r||null===(f=r.getPortStream)||void 0===f?void 0:f.call(r,e))||new d.default(e);ne.setUpCookieHandlerCommunication({connectionStream:t})}Ee(e)}},Ee=e=>{var t;const n=(null==r||null===(t=r.getPortStream)||void 0===t?void 0:t.call(r,e))||new d.default(e);ne.setupUntrustedCommunicationEip1193({connectionStream:n,sender:e.sender})},ge=async e=>{var t;if(Q.includes(e.name))return;e.sender&&e.sender.tab&&e.sender.url&&he(e);const n=(null==r||null===(t=r.getPortStream)||void 0===t?void 0:t.call(r,e))||new d.default(e);ne.setupUntrustedCommunicationCaip({connectionStream:n,sender:e.sender})},null!=r&&r.registerConnectListeners&&r.registerConnectListeners(me,Ee),v(),ne.decryptMessageController.hub.on(R.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,v),ne.encryptionPublicKeyController.hub.on(R.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,v),ne.signatureController.hub.on(R.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,v),ne.appStateController.on(R.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,v),ne.controllerMessenger.subscribe(R.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,v),ne.controllerMessenger.subscribe(R.METAMASK_CONTROLLER_EVENTS.QUEUED_REQUEST_STATE_CHANGE,v),ne.controllerMessenger.subscribe(R.METAMASK_CONTROLLER_EVENTS.METAMASK_NOTIFICATIONS_LIST_UPDATED,v),ne.controllerMessenger.subscribe(R.METAMASK_CONTROLLER_EVENTS.METAMASK_NOTIFICATIONS_MARK_AS_READ,v),ne.controllerMessenger.subscribe(R.METAMASK_CONTROLLER_EVENTS.NOTIFICATIONS_STATE_CHANGE,v),J.on(I.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{e?A()>0&&Me():(ne.signatureController.rejectUnapproved(g.REJECT_NOTIFICATION_CLOSE_SIG),ne.decryptMessageController.rejectUnapproved(g.REJECT_NOTIFICATION_CLOSE),ne.encryptionPublicKeyController.rejectUnapproved(g.REJECT_NOTIFICATION_CLOSE),Object.values(ne.approvalController.state.pendingApprovals).forEach((({id:e,type:t})=>{switch(t){case u.ApprovalType.SnapDialogAlert:case u.ApprovalType.SnapDialogPrompt:case p.DIALOG_APPROVAL_TYPES.default:ne.approvalController.accept(e,null);break;case u.ApprovalType.SnapDialogConfirmation:case E.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountCreation:case E.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountRemoval:case E.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.showSnapAccountRedirect:ne.approvalController.accept(e,!1);break;default:ne.approvalController.reject(e,f.ethErrors.provider.userRejectedRequest())}}))),v()})),Object.values(ne.snapController.state.snaps).some((e=>!e.preinstalled))&&ne.snapController.updateBlockedSnaps()}async function Me(){const e=await W.getActiveTabs(),t=Boolean(e.find((e=>te[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!ee&&(r||0===X)&&!t){ee=!0;try{const e=ne.appStateController.getCurrentPopupId();await J.showPopup((e=>ne.appStateController.setCurrentPopupId(e)),e)}finally{ee=!1}}}const ve=()=>{if(ne)return ne.metaMetricsController.updateTraits({[g.MetaMetricsUserTrait.InstallDateExt]:(new Date).toISOString().split("T")[0]}),void ne.metaMetricsController.addEventBeforeMetricsOptIn({category:g.MetaMetricsEventCategory.App,event:g.MetaMetricsEventName.AppInstalled,properties:{}});setTimeout((()=>{ve()}),500)};async function Ae(){Boolean(await q.get())||(ve(),W.openExtensionInBrowser()),i.default.tabs.onActivated.addListener((e=>{if(ne){const{tabId:t}=e,r=oe[t];r&&ne.permissionController.state.subjects[r]!==undefined&&_e(r)}}))}(async function(){await Ae();try{await Ce(),q.cleanUpMostRecentRetrievedState()}catch(e){s.default.error(e)}})()}}},{package:"$root$",file:"app/scripts/background.js"}]],[4],{});