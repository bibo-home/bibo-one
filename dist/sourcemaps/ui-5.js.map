{"version":3,"sources":["ui/components/multichain/network-list-item/index.js","ui/components/multichain/network-list-item/network-list-item.tsx","ui/components/multichain/network-list-menu/add-block-explorer-modal/add-block-explorer-modal.tsx","ui/components/multichain/network-list-menu/add-rpc-url-modal/add-rpc-url-modal.tsx","ui/components/multichain/network-list-menu/index.js","ui/components/multichain/network-list-menu/network-confirmation-popover/network-confirmation-popover.tsx","ui/components/multichain/network-list-menu/network-list-menu.tsx","ui/components/multichain/network-list-menu/network-list-search/network-list-search.tsx","ui/components/multichain/network-list-menu/popular-network-list/popular-network-list.tsx","ui/components/multichain/network-list-menu/rpc-list-item.tsx","ui/components/multichain/network-list-menu/select-rpc-url-modal/select-rpc-url-modal.tsx","ui/components/multichain/nft-item/index.js","ui/components/multichain/nft-item/nft-item.js","ui/components/multichain/notification-detail-address/index.ts","ui/components/multichain/notification-detail-address/notification-detail-address.tsx","ui/components/multichain/notification-detail-asset/index.ts","ui/components/multichain/notification-detail-asset/notification-detail-asset.tsx","ui/components/multichain/notification-detail-block-explorer-button/index.ts","ui/components/multichain/notification-detail-block-explorer-button/notification-detail-block-explorer-button.tsx","ui/components/multichain/notification-detail-button/index.ts","ui/components/multichain/notification-detail-button/notification-detail-button.tsx","ui/components/multichain/notification-detail-collection/index.ts","ui/components/multichain/notification-detail-collection/notification-detail-collection.tsx","ui/components/multichain/notification-detail-copy-button/index.ts","ui/components/multichain/notification-detail-copy-button/notification-detail-copy-button.tsx","ui/components/multichain/notification-detail-info/index.ts","ui/components/multichain/notification-detail-info/notification-detail-info.tsx","ui/components/multichain/notification-detail-network-fee/index.ts","ui/components/multichain/notification-detail-network-fee/notification-detail-network-fee.tsx","ui/components/multichain/notification-detail-nft/index.ts","ui/components/multichain/notification-detail-nft/notification-detail-nft.tsx","ui/components/multichain/notification-detail-title/index.ts","ui/components/multichain/notification-detail-title/notification-detail-title.tsx","ui/components/multichain/notification-detail/index.ts","ui/components/multichain/notification-detail/notification-detail.tsx","ui/components/multichain/notification-list-item-icon/index.js","ui/components/multichain/notification-list-item-icon/notification-list-item-icon.tsx","ui/components/multichain/notification-list-item-snap/index.ts","ui/components/multichain/notification-list-item-snap/notification-list-item-snap.tsx","ui/components/multichain/notification-list-item-text/index.ts","ui/components/multichain/notification-list-item-text/notification-list-item-text.tsx","ui/components/multichain/notification-list-item/index.ts","ui/components/multichain/notification-list-item/notification-list-item.tsx","ui/components/multichain/notifications-page/index.js","ui/components/multichain/notifications-page/notifications-page.tsx","ui/components/multichain/notifications-settings-account/index.ts","ui/components/multichain/notifications-settings-account/notifications-settings-account.tsx","ui/components/multichain/notifications-settings-box/index.ts","ui/components/multichain/notifications-settings-box/notifications-settings-box.tsx","ui/components/multichain/notifications-settings-type/index.ts","ui/components/multichain/notifications-settings-type/notifications-settings-type.tsx","ui/components/multichain/notifications-tag-counter/index.ts","ui/components/multichain/notifications-tag-counter/notifications-tag-counter.tsx","ui/components/multichain/pages/connections/components/no-connection.tsx","ui/components/multichain/pages/connections/connections.tsx","ui/components/multichain/pages/connections/index.js","ui/components/multichain/pages/index.js","ui/components/multichain/pages/page/components/content/content.tsx","ui/components/multichain/pages/page/components/content/index.ts","ui/components/multichain/pages/page/components/footer/footer.tsx","ui/components/multichain/pages/page/components/footer/index.ts","ui/components/multichain/pages/page/components/header/header.tsx","ui/components/multichain/pages/page/components/header/index.ts","ui/components/multichain/pages/page/index.ts","ui/components/multichain/pages/page/page.tsx","ui/components/multichain/pages/permissions-page/connection-list-item.js","ui/components/multichain/pages/permissions-page/connection-list-tooltip/connection-list-tooltip.js","ui/components/multichain/pages/permissions-page/permissions-page.js","ui/components/multichain/pages/send/components/account-picker.tsx","ui/components/multichain/pages/send/components/address-book.tsx","ui/components/multichain/pages/send/components/domain-input-resolution-cell.tsx","ui/components/multichain/pages/send/components/hex.tsx","ui/components/multichain/pages/send/components/index.ts","ui/components/multichain/pages/send/components/network-picker.tsx","ui/components/multichain/pages/send/components/quote-card/hooks/useEthFeeData.tsx","ui/components/multichain/pages/send/components/quote-card/hooks/useGetConversionRate.tsx","ui/components/multichain/pages/send/components/quote-card/hooks/useTranslatedNetworkName.tsx","ui/components/multichain/pages/send/components/quote-card/hooks/utils.ts","ui/components/multichain/pages/send/components/quote-card/index.tsx","ui/components/multichain/pages/send/components/recipient-content.tsx","ui/components/multichain/pages/send/components/recipient-input.tsx","ui/components/multichain/pages/send/components/recipient.tsx","ui/components/multichain/pages/send/components/send-page-row.tsx","ui/components/multichain/pages/send/components/your-accounts.tsx","ui/components/multichain/pages/send/index.js","ui/components/multichain/pages/send/send.js","ui/components/multichain/permission-details-modal/index.ts","ui/components/multichain/permission-details-modal/permission-details-modal.tsx","ui/components/multichain/product-tour-popover/index.js","ui/components/multichain/product-tour-popover/product-tour-popover.js","ui/components/multichain/ramps-card/ramps-card.js","ui/components/multichain/receive-modal/index.js","ui/components/multichain/receive-modal/receive-modal.js","ui/components/multichain/toast/index.ts","ui/components/multichain/toast/toast.tsx","ui/components/multichain/token-list-item/index.ts","ui/components/multichain/token-list-item/price/percentage-and-amount-change/percentage-and-amount-change.tsx","ui/components/multichain/token-list-item/price/percentage-change/percentage-change.tsx","ui/components/multichain/token-list-item/token-list-item.tsx","ui/components/ui/account-list/account-list.js","ui/components/ui/account-list/index.js","ui/components/ui/account-mismatch-warning/account-mismatch-warning.component.js","ui/components/ui/actionable-message/actionable-message.js","ui/components/ui/actionable-message/index.js","ui/components/ui/alert/index.js","ui/components/ui/box/box.js","ui/components/ui/box/index.js","ui/components/ui/button-group/button-group.component.js","ui/components/ui/button-group/index.js","ui/components/ui/button/button.component.js","ui/components/ui/button/index.js","ui/components/ui/callout/callout.js","ui/components/ui/callout/index.js","ui/components/ui/check-box/check-box.component.js","ui/components/ui/check-box/index.js","ui/components/ui/chip/chip-with-input.js","ui/components/ui/chip/chip.js","ui/components/ui/chip/index.js","ui/components/ui/confusable/confusable.component.js","ui/components/ui/confusable/index.js","ui/components/ui/currency-display/currency-display.component.js","ui/components/ui/currency-display/index.js","ui/components/ui/definition-list/definition-list.js","ui/components/ui/definition-list/index.js","ui/components/ui/delineator/delineator.tsx","ui/components/ui/delineator/delineator.types.ts","ui/components/ui/delineator/index.ts","ui/components/ui/delineator/utils.ts","ui/components/ui/deprecated-networks/deprecated-networks.js","ui/components/ui/dialog/index.js","ui/components/ui/disclosure/disclosure.constants.ts","ui/components/ui/disclosure/disclosure.js","ui/components/ui/disclosure/index.js","ui/components/ui/dropdown/dropdown.js","ui/components/ui/dropdown/index.js","ui/components/ui/editable-label/editable-label.js","ui/components/ui/error-message/error-message.component.js","ui/components/ui/error-message/index.js","ui/components/ui/export-text-container/export-text-container.component.js","ui/components/ui/export-text-container/index.js","ui/components/ui/form-combo-field/form-combo-field.tsx","ui/components/ui/form-field/form-field.js","ui/components/ui/form-field/index.js","ui/components/ui/hex-to-decimal/hex-to-decimal.component.js","ui/components/ui/hex-to-decimal/index.js","ui/components/ui/icon-button/icon-button.js","ui/components/ui/icon-button/index.js","ui/components/ui/icon-with-fallback/icon-with-fallback.component.js","ui/components/ui/icon-with-fallback/index.js","ui/components/ui/icon/icon-eye-slash.js","ui/components/ui/icon/icon-eye.js","ui/components/ui/icon/info-icon-inverted.component.js","ui/components/ui/icon/info-icon.component.js","ui/components/ui/icon/preloader/index.js","ui/components/ui/icon/preloader/preloader-icon.component.js","ui/components/ui/icon/search-icon.js","ui/components/ui/icon/sun-check-icon.component.js","ui/components/ui/identicon/blockieIdenticon/index.js","ui/components/ui/identicon/identicon.component.js","ui/components/ui/identicon/identicon.container.js","ui/components/ui/identicon/index.js","ui/components/ui/info-tooltip/index.js","ui/components/ui/info-tooltip/info-tooltip-icon.js","ui/components/ui/info-tooltip/info-tooltip.js","ui/components/ui/jazzicon/index.js","ui/components/ui/loading-heartbeat/index.js","ui/components/ui/loading-indicator/index.js","ui/components/ui/loading-indicator/loading-indicator.js","ui/components/ui/loading-screen/index.js","ui/components/ui/loading-screen/loading-screen.component.js","ui/components/ui/logo/logo-lattice.js","ui/components/ui/logo/logo-ledger.js","ui/components/ui/logo/logo-qr-based.js","ui/components/ui/logo/logo-trezor.js","ui/components/ui/mascot/index.js","ui/components/ui/mascot/mascot.component.js","ui/components/ui/menu/index.js","ui/components/ui/menu/menu-item.js","ui/components/ui/menu/menu.js","ui/components/ui/metafox-logo/horizontal-logo.js","ui/components/ui/metafox-logo/index.js","ui/components/ui/metafox-logo/metafox-logo.component.js","ui/components/ui/new-network-info/new-network-info.js","ui/components/ui/nft-collection-image/nft-collection-image.js","ui/components/ui/nickname-popover/index.js","ui/components/ui/nickname-popover/nickname-popover.component.js","ui/components/ui/numeric-input/numeric-input.component.js","ui/components/ui/page-container/index.js","ui/components/ui/page-container/page-container-footer/index.js","ui/components/ui/page-container/page-container-footer/page-container-footer.component.js","ui/components/ui/page-container/page-container-header/index.js"],"names":["_networkListItem","require","_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_classnames","_interopRequireDefault","_propTypes","_designSystem","_componentLibrary","_useI18nContext","_accounts","_tooltip","_networkListItemMenu","obj","WeakMap","NetworkListItem","name","iconSrc","iconSize","AvatarNetworkSize","Md","rpcEndpoint","chainId","selected","focus","onClick","onDeleteClick","onEditClick","onRpcEndpointClick","startAccessory","showEndAccessory","useI18nContext","networkRef","useRef","networkListItemMenuElement","setNetworkListItemMenuElement","useState","setNetworkListItemMenuRef","ref","networkOptionsMenuOpen","setNetworkOptionsMenuOpen","useEffect","current","createElement","Box","paddingLeft","paddingRight","paddingTop","paddingBottom","gap","backgroundColor","BackgroundColor","primaryMuted","transparent","className","display","Display","Flex","alignItems","AlignItems","center","justifyContent","JustifyContent","spaceBetween","width","BlockSize","Full","marginTop","borderRadius","BorderRadius","pill","primaryDefault","AvatarNetwork","borderColor","BorderColor","backgroundDefault","getAvatarNetworkColor","src","size","flexDirection","FlexDirection","Column","flexStart","style","overflow","Text","color","TextColor","textDefault","ellipsis","onKeyDown","key","stopPropagation","tabIndex","length","title","position","wrapperClassName","padding","as","variant","TextVariant","bodySmMedium","textAlternative","URL","url","host","Icon","marginLeft","IconColor","iconAlternative","IconName","ArrowDown","IconSize","Xs","ButtonIcon","iconName","MoreVertical","ariaLabel","ButtonIconSize","Sm","NetworkListItemMenu","anchorElement","isOpen","onClose","exports","propTypes","string","isRequired","bool","func","node","_util","onAdded","setUrl","error","setError","isWebUrl","undefined","height","FormTextField","FormTextFieldSize","Lg","textFieldProps","LG","Boolean","id","label","inputProps","labelProps","children","bodyMdMedium","onChange","target","value","autoFocus","HelpText","severity","HelpTextSeverity","Danger","ButtonPrimary","disabled","ButtonPrimarySize","async","nameRef","placeholder","inputRef","_networkListMenu","_reactRedux","_controllerUtils","_approvalController","_popover","_confirmation","_selectors","showPopover","setShowPopover","unapprovedConfirmations","useSelector","getUnapprovedConfirmations","anAddNetworkConfirmationFromMetaMaskExists","find","confirmation","origin","ORIGIN_METAMASK","type","ApprovalType","AddEthereumChain","redirectToHomeOnZeroConfirmations","_reactBeautifulDnd","_fuse","URI","_networkController","_actions","_network","_toggleButton","_metametrics","_metametrics2","_metamask","_networksForm","_networksFormState","_popularNetworkList","_networkListSearch","_addRpcUrlModal","_selectRpcUrlModal","_addBlockExplorerModal","_extends","assign","bind","arguments","source","apply","this","ACTION_MODES","NetworkListMenu","dispatch","useDispatch","trackEvent","useContext","MetaMetricsContext","showTestNetworks","getShowTestNetworks","currentChainId","getCurrentChainId","selectedTabOrigin","getOriginOfCurrentTab","useRequestQueue","getUseRequestQueue","isUnlocked","getIsUnlocked","domains","getAllDomains","orderedNetworksList","getOrderedNetworksList","isAddingNewNetwork","getIsAddingNewNetwork","isMultiRpcOnboarding","getIsMultiRpcOnboarding","completedOnboarding","getCompletedOnboarding","onboardedInThisUISession","getOnboardedInThisUISession","showNetworkBanner","getShowNetworkBanner","networkConfigurations","getNetworkConfigurationsByChainId","editingChainId","editCompleted","getEditedNetwork","currentlyOnTestNetwork","TEST_CHAINS","includes","nonTestNetworks","testNetworks","useMemo","entries","reduce","nonTestNetworksList","testNetworksList","network","editedNetwork","_Object$entries$find","actionMode","setActionMode","ADD_EDIT","LIST","networkFormState","useNetworkFormState","rpcUrls","setRpcUrls","blockExplorers","setBlockExplorers","sortNetworks","networks","values","sort","b","findIndex","networkId","orderedNetworks","setOrderedNetworks","onDragEnd","result","destination","newOrderedNetworks","removed","splice","index","updateNetworksList","map","featuredNetworksNotYetEnabled","FEATURED_RPCS","filter","localeCompare","searchQuery","setSearchQuery","focusSearch","setFocusSearch","searchNetworks","query","threshold","location","distance","maxPatternLength","minMatchCharLength","shouldSort","keys","search","searchedEnabledNetworks","searchedFeaturedNetworks","searchedTestNetworks","showMultiRpcSelectors","some","rpcEndpoints","generateNetworkListItem","isCurrentNetwork","canDeleteNetwork","CHAIN_IDS","MAINNET","LINEA_MAINNET","CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP","defaultRpcEndpointIndex","networkClientId","setActiveNetwork","toggleNetworkMenu","setNetworkClientIdForDomain","event","MetaMetricsEventName","NavNetworkSwitched","category","MetaMetricsEventCategory","Network","properties","chain_id","from_network","to_network","showModal","onConfirm","setEditedNetwork","nickname","SELECT_RPC","onBack","ADD_RPC","ADD_EXPLORER_URL","clear","Modal","ModalOverlay","ModalContent","modalDialogProps","ModalHeader","headingSm","textAlign","TextAlign","Center","Fragment","BannerBase","marginRight","marginBottom","backgroundAlternative","alt","hideNetworkBanner","description","textMuted","DragDropContext","Droppable","droppableId","provided","droppableProps","innerRef","Draggable","draggableId","providedDrag","draggableProps","dragHandleProps","searchAddNetworkResults","onToggle","setShowTestNetworks","TestNetworksDisplayed","ButtonSecondary","ButtonSecondarySize","startIconName","Add","startIconProps","block","AddNetworkButtonClick","existingNetwork","onRpcAdd","onBlockExplorerAdd","_rpcUrls$rpcEndpoints","every","equal","RpcEndpointType","Custom","_blockExplorers$block","blockExplorerUrls","defaultBlockExplorerUrlIndex","SelectRpcUrlModal","networkConfiguration","TextFieldSearch","TextFieldSearchSize","onFocus","onBlur","clearButtonOnClick","clearButtonProps","MD","_app","_zendeskUrl","isPopUp","getEnvironmentType","ENVIRONMENT_TYPE_POPUP","setIsOpen","handleMouseEnter","handleMouseLeave","referenceElement","setReferenceElement","popoverContent","InlineFlex","bodyMd","onMouseEnter","Info","iconMuted","Popover","PopoverPosition","Top","matchWidth","flip","hasArrow","onMouseLeave","ButtonLink","ButtonLinkSize","Inherit","externalLink","global","platform","openTab","UNKNOWN_NETWORK","Button","ButtonVariant","Link","requestUserApproval","requestData","rpcUrl","ticker","nativeCurrency","rpcPrefs","blockExplorerUrl","imageUrl","chainName","referrer","MetaMetricsNetworkEventSource","NewAddNetworkFlow","stripKeyFromInfuraUrl","endpoint","modifiedEndpoint","endsWith","replace","infuraProjectId","stripProtocol","pathname","Infura","displayEndpoint","borderWidth","borderStyle","BorderStyle","solid","bodySm","_rpcListItem","image","margin","updateNetwork","_nftItem","_nftDefaultImage","NftItem","networkName","networkSrc","tokenId","clickable","isIpfsURL","badgeWrapperClassname","testNetworkBackgroundColor","getTestNetworkBackgroundColor","isIpfsEnabled","getIpfsGateway","openSeaEnabled","getOpenSeaEnabled","nftImageComponentToRender","Block","BadgeWrapper","anchorElementShape","BadgeWrapperAnchorElementShape","circular","positionObj","top","right","badge","_notificationDetailAddress","_notificationDetail","_notificationDetailCopyButton","_hexstringUtils","SideText","side","bodyLgMedium","fontWeight","FontWeight","Medium","NotificationDetailAddress","address","checksummedAddress","toChecksumHexAddress","displayAddress","shortenAddress","NotificationDetail","icon","AvatarAccount","primaryTextLeft","secondaryTextLeft","NotificationDetailCopyButton","text","displayText","_notificationDetailAsset","createTextComponent","NotificationDetailAsset","detail","fiatValue","_icon$badge","badgeIcon","AvatarToken","AvatarTokenSize","infoDefault","badgeWrapper","BadgeWrapperPosition","topRight","borderMuted","Normal","primaryTextRight","secondaryTextRight","_notificationDetailBlockExplorerButton","_notification","_notificationDetailButton","NotificationDetailBlockExplorerButton","notification","txHash","_networkConfiguration","chainIdHex","toHex","blockExplorerConfig","getNetworkDetailsByChainId","configuredBlockExplorer","blockExplorerButtonText","NotificationDetailButton","Secondary","href","isExternal","_notificationServicesController","TRIGGER_TYPES","NotificationServicesController","Constants","endIconName","ButtonSize","Arrow2UpRight","NotificationInteraction","NotificationDetailClicked","notification_id","notification_type","FEATURES_ANNOUNCEMENT","clicked_item","_notificationDetailCollection","NotificationDetailCollection","collection","badgeSrc","ipfsImageIsRenderable","openseaImageIsRenderable","textVariant","_useCopyToClipboard","_time","copied","handleCopy","useCopyToClipboard","MINUTE","tooltipTitle","ButtonBase","CopySuccess","Copy","ButtonBaseSize","_notificationDetailInfo","NotificationDetailInfo","action","AvatarIcon","_notificationDetailNetworkFee","_conversion","_preloaderIcon","FeeDetail","NotificationDetailNetworkFee","networkFees","setNetworkFees","networkFeesError","setNetworkFeesError","decimalToHex","getNativeCurrency","networkFeesData","getNetworkFees","transactionFee","transactionFeeInEther","transactionFeeInEth","transactionFeeInUsd","gasLimitUnits","gasLimit","gasUsedUnits","gasUsed","baseFee","priorityFee","maxFeePerGas","err","fetchNetworkFees","errorDefault","Gas","infoMuted","nativeCurrencySymbol","flexEnd","ArrowUp","marginInlineEnd","toString","_notificationDetailNft","NotificationDetailNft","tokenName","tokenSrc","_notificationDetailTitle","NotificationDetailTitle","date","paddingInlineStart","paddingInlineEnd","overflowWrap","OverflowWrap","BreakWord","bodyXs","Left","Right","_notificationListItemIcon","NotificationListItemIconType","NftImage","isIpfs","useNftImageRenderability","SM","iconComponents","Token","none","Nft","NotificationListItemIcon","IconComponent","NotificationIcon","bottomRight","AvatarIconSize","iconProps","infoInverse","getBadge","XL","_notificationListItemSnap","_notificationListItemText","_snapUiMarkdown","_snapIcon","NotificationListItemSnap","isRead","snapMessage","createdAt","snapId","handleSnapClick","handleSnapButton","cursor","Row","FullCircle","SnapIcon","avatarSize","NotificationListItemText","formatMenuItemDate","SnapUIMarkdown","markdown","items","renderItems","highlighted","getRandomKey","textColor","separator","inherit","_notificationListItem","NotificationListItem","amount","_notificationsPage","history","_reactRouterDom","useHistory","None","_metafoxLogo","unsetIconHeight","push","_routes","DEFAULT_ROUTE","_page","Page","_notificationsSettingsAccount","checksumAddress","_notificationsSettingsBox","loading","dataTestId","_notificationsSettingsType","stretch","_notificationsTagCounter","_useCounter","NotificationsTagCounter","noLabel","notificationsUnreadCount","useUnreadNotificationsCounter","left","zIndex","errorInverse","NoConnectionContent","_accountListMenu","_","_connectAccountsModal","_disconnectAllModal","_noConnection","Connections","_permittedAccountsByO","showConnectAccountsModal","setShowConnectAccountsModal","showDisconnectAllModal","setShowDisconnectAllModal","showAccountDisconnectedToast","setShowAccountDisconnectedToast","showConnectedAccountsUpdatedToast","setShowConnectedAccountsUpdatedToast","showDisconnectedAllAccountsUpdatedToast","setShowDisconnectedAllAccountsUpdatedToast","urlParams","useParams","securedOrigin","decodeURIComponent","activeTabOrigin","subjectMetadata","getConnectedSitesList","connectedSiteMetadata","getSubjectMetadata","openMetaMaskTabs","state","appState","activeTab","unconnectedAccounts","getUnconnectedAccounts","connectedAccounts","getOrderedConnectedAccountsForConnectedDapp","selectedAccount","getSelectedAccount","internalAccounts","getInternalAccounts","mergedAccounts","mergeAccounts","permittedAccountsByOrigin","getPermittedAccountsByOrigin","subjects","getPermissionSubjects","currentTabHasNoAccounts","tabToConnect","connectedSubjectsMetadata","permittedAccounts","getPermittedAccountsForSelectedTab","latestSelected","_account","indexOfAccountWIthHighestLastSelected","currentAccountToCompare","metadata","lastSelected","Header","ArrowLeft","iconDefault","goBack","iconUrl","AvatarFavicon","AvatarFaviconSize","Global","headingMd","getURLHost","Content","account","_connectedSites$accou","connectedSite","isSelectedAccount","mergedAccountsProps","isAccountActive","AccountListItem","accountsCount","connectedAvatar","menuType","AccountListItemMenuTypes","Connection","currentTabOrigin","isActive","onActionClick","ConnectAccountsModal","onAccountsUpdate","DisconnectAllModal","DisconnectType","Account","hostname","subject","permissionMethodNames","permissions","parentCapability","permissionsRecord","removePermissionsFor","disconnectAllAccounts","Footer","ToastContainer","Toast","startAdornment","Logout","danger","requestId","requestAccountsPermissionWithId","CONNECT_ROUTE","requestAccountsPermission","_connections","_permissionsPage","props","_content","_footer","endAccessory","textProps","HeaderBase","bodyMdBold","_header","_permissionController","_connectionListTooltip","ConnectionListItem","connection","isSnap","subjectType","SubjectType","Snap","baseline","alignSelf","networkIconUrl","FiveTwelfths","flexGrow","packageName","Max","ConnectionListTooltip","flex","ArrowRight","object","_reactTippy","_avatarGroup","_connection$addresses","_connection$addresses2","_connection$addresses3","_connection$addresses4","addressIconList","addresses","slice","avatarValue","avatarAccountVariant","getUseBlockie","AvatarAccountVariant","Blockies","Jazzicon","Tooltip","html","overlayInverse","paddingInline","addressToNameMap","AvatarAccountSize","arrow","offset","delay","duration","trigger","theme","tag","AvatarGroup","members","limit","avatarType","AvatarType","ACCOUNT","_productTourPopover","_connectionListItem","PermissionsPage","headerRef","totalConnections","setTotalConnections","sitesConnectionsList","getConnectedSitesListWithNetworkInfo","showPermissionsTour","getShowPermissionsTour","Color","ProductTour","closeMenu","hidePermissionsTour","connectionList","itemKey","hostName","safeEncodedHost","encodeURIComponent","CONNECTIONS","handleConnectionClick","_keyringApi","_accountPicker","_i18n","_send","_2","SendPageAccountPicker","I18nContext","internalAccount","getSelectedInternalAccount","showAccountPicker","setShowAccountPicker","sendStage","getSendStage","SEND_STAGES","EDIT","onAccountListMenuClose","useCallback","SendPageRow","Label","AccountPicker","showAddress","addressProps","Start","AccountListMenu","accountListItemProps","showOptions","showAccountCreation","allowedAccountTypes","EthAccountType","Eoa","Erc4337","_contactList","SendPageAddressBook","addressBook","getAddressBook","contacts","txList","getCurrentNetworkTransactions","reverse","nonContacts","nonContact","nonContactTx","transaction","txParams","to","toLowerCase","timestamp","time","userInput","getRecipientUserInput","contactFuse","weight","recentFuse","searchForContacts","setCollection","searchForRecents","selectRecipient","addHistoryEntry","sendRecipientSelected","Send","inputType","excludeMetaMetricsId","updateRecipient","updateRecipientUserInput","Bold","CONTACT_LIST_ROUTE","_confusable","DomainInputResolutionCell","domainName","resolvingSnap","protocol","titleRef","breakpointRef","isTitleOverflowing","setIsTitleOverflowing","_titleRef$current$tex","isOverflowing","offsetWidth","scrollWidth","breakpointLength","textContent","OverflowingTitle","containerClassName","asText","input","confusableWrapperName","Snaps","bottom","badgeContainerProps","ellipsify","_textarea","SendHexData","data","getSendHexData","Textarea","onInput","newData","updateSendHexData","defaultValue","_sendPageRow","_networkPicker","_yourAccounts","_recipientInput","_addressBook","_recipient","_recipientContent","_hex","_quoteCard","_domainInputResolutionCell","SendPageNetworkPicker","_currentNetwork$rpcPr","currentNetwork","getCurrentNetwork","PickerNetwork","selectedNativeConversionRate","getConversionRate","currentCurrency","getCurrentCurrency","networkAndAccountSupports1559","checkNetworkAndAccountSupports1559","medium","gasPrice","maybeGasFee","getGasFeeEstimates","gasFee1559","suggestedMaxFeePerGas","isSwapsChain","getIsSwapsChain","gasPriceNon1559","_swaps","getUsedSwapsGasPrice","fetchAndSetSwapsGasPriceInfo","rawGasPrice","formattedFiatGasFee","formattedEthGasFee","ethGasFee","_Numeric","Numeric","_utils","isHexString","_common","EtherDenomination","GWEI","times","toDenomination","ETH","fiatGasFee","applyConversionRate","toNumber","_confirmTx","formatCurrency","_utils2","toFixedNoTrailingZeros","_sendAsset$details","_receiveAsset$details","_sendAsset$details3","_receiveAsset$details3","bestQuote","getBestQuote","sendAsset","receiveAsset","getCurrentDraftTransaction","sourceTokenSymbol","_transaction","AssetType","native","details","symbol","destinationTokenSymbol","_sendAsset$details2","_receiveAsset$details2","primaryTokenAmount","_transactionsControllerUtils","calcTokenAmount","sourceAmount","decimals","NATIVE_CURRENCY_DECIMALS","secondaryTokenAmount","destinationAmount","conversionRateFromPrimaryToSecondary","divide","round","BSC","POLYGON","LOCALHOST","GOERLI","AVALANCHE","OPTIMISM","ARBITRUM","ZKSYNC_ERA","BASE","TRAILING_ZEROS","valueWithNoTrailingZeros","toFixed","scrollRef","_bestQuote$approvalNe","sendAnalytics","getSendAnalyticProperties","translatedNetworkName","_useTranslatedNetworkName","isSwapQuoteLoading","timeLeft","setTimeLeft","_useEthFeeData","gasParams","maxGas","Number","hexToDecimal","approvalNeeded","gas","formattedConversionRate","_useGetConversionRate","prevBestQuote","isQuoteJustLoaded","_scrollRef$current","scrollIntoView","behavior","sendSwapQuoteFetched","is_first_fetch","sensitiveProperties","REFRESH_INTERVAL","updateSendQuote","timeout","setTimeout","SECOND","clearTimeout","infoText","timeLeftFormatted","interactive","tooltipInnerClassName","tooltipArrowClassName","aspectRatio","Swaps","_uiUtils","GAS_FEES_LEARN_MORE_URL","rel","_infoTooltipIcon","fillColor","fee","CONSENSYS_TERMS_OF_USE","_useGetAssetImageUrl","_stringUtils","_assetPickerModalTabs","SendPageRecipientContent","requireContractAddressAcknowledgement","onAssetChange","_tokenList$sendAsset$","_sendAsset$details$ad","_sendAsset$details4","sendAmount","isSwapAllowed","isBasicFunctionality","getUseExternalServices","isSwapAndSendDisabledForNetwork","getIsSwapAndSendDisabledForNetwork","swapsBlockedTokens","getSwapsBlockedTokens","memoizedSwapsBlockedTokens","Set","nativeCurrencyImageUrl","getNativeCurrencyImage","tokenList","getTokenList","ipfsGateway","nftImageURL","token","isLoadingInitialQuotes","isBasicSend","isEqualCaseInsensitive","showHexDataFlag","getSendHexDataFeatureFlagState","asset","getSendAsset","showHexData","NFT","BannerAlert","BannerAlertSeverity","actionButtonLabel","actionButtonOnClick","acknowledgeRecipientWarning","actionButtonProps","CONTRACT_ADDRESS_LINK","AssetPickerAmount","header","sendingAsset","newAsset","isAmountLoading","isDisabled","visibleTabs","TabName","TOKENS","QuoteCard","_domainInput","SendPageRecipientInput","recipient","getRecipient","isUsingMyAccountsForRecipientSearch","getIsUsingMyAccountForRecipientSearch","onValidAddressTyped","internalSearch","selectedAddress","selectedName","onPaste","onReset","resetRecipientInput","scanQrCode","Transactions","legacy_event","showQrScanner","_domains","_tabs","CONTACTS_TAB_KEY","ACCOUNTS_TAB_KEY","SendPageRecipient","domainResolutions","getDomainResolutions","domainError","getDomainError","domainWarning","getDomainWarning","showErrorBanner","showWarningBanner","warning","contents","domainResolution","resolvedAddress","addressBookEntryName","Tabs","defaultActiveTabKey","Tab","tabKey","SendPageYourAccounts","Warning","defaultAllowedAccountTypes","accounts","getUpdatedAndSortedAccounts","isPinned","pinned","_send2","_history","_useUpdateSwapsState","_helpers","_transactionActivityLog","_components","SendPage","startedNewDraftTransaction","draftTransactionExists","getDraftTransactionExists","draftTransaction","transactionAsset","swapQuotesError","draftTransactionID","getDraftTransactionID","mostRecentOverviewPage","getMostRecentOverviewPage","isSwapAndSend","getIsDraftSwapAndSend","useLocation","isSubmitting","setIsSubmitting","handleSelectToken","isReceived","tokenType","toUpperCase","TokenStandard","ERC20","standard","ERC721","isERC721","ERC1155","unknown","updateSendAsset","skipComputeEstimatedGasLimit","sendAssetSelected","is_destination_asset_picker_modal","is_nft","new_asset_symbol","new_asset_address","SEND_ROUTE","handleAssetPickerClick","isDest","sendTokenModalOpened","cleanup","resetSendState","startNewDraftTransaction","window","addEventListener","cleanUrl","split","pushState","hash","removeEventListener","onCancel","cancelTx","sendFlowExited","nextRoute","sendSwapQuoteError","showKnownRecipientWarning","recipientWarningAcknowledged","getRecipientWarningAcknowledgement","sendErrors","getSendErrors","isInvalidSendForm","isSendFormInvalid","smartTransactions","smartTransactionsListSelector","isSmartTransactionPending","status","SmartTransactionStatus","pending","isGasTooLow","gasFee","INSUFFICIENT_FUNDS_ERROR","submitDisabled","isSendFormShown","DRAFT","handleSelectSendToken","newToken","onAmountChange","newAmountRaw","newAmountFormatted","updateSendAmount","hideOnClick","preventDefault","signTransaction","TRANSACTION_ERRORED_EVENT","_permissionDetailsModal","_lodash","_permission","_permissionCell","PermissionDetailsModal","useBlockie","permissionLabels","flatten","getPermissionDescription","permissionName","permissionValue","subjectName","getSubjectName","ModalBody","permission","avatarIcon","leftIcon","dateApproved","ModalFooter","_menu","prevIcon","currentStep","totalSteps","prevClick","productTourDirection","Menu","onHide","Size","primaryInverse","instanceOf","Element","_multichain","_useRamps","_locale","RAMPS_CARD_VARIANT_TYPES","TOKEN","ACTIVITY","BTC","RAMPS_CARD_VARIANTS","illustrationSrc","gradient","body","metamaskEntryMap","RampsMetaMaskEntry","TokensBanner","NftBanner","ActivityBanner","BtcBanner","RampsCard","handleOnClick","openBuyCryptoInPdapp","currentLocale","getCurrentLocale","getMultichainCurrentNetwork","getMultichainDefaultToken","isTokenVariant","EmptyBuyBannerDisplayed","Navigation","locale","NavBuyButtonClicked","token_symbol","background","oneOf","oneOfType","_receiveModal","_qrCodeView","ReceiveModal","getInternalAccountByAddress","Qr","accountName","_toast","_preferences","actionText","autoHideTime","onAutoHideToast","document","documentElement","dataset","shouldDisplay","setShouldDisplay","ThemeType","light","dark","_tokenListItem","_bignumber","_ethereumjsUtil","PercentageAndAmountChange","fiatCurrency","getIntlLocale","balanceValue","getSelectedAccountCachedBalance","conversionRate","marketData","getTokensMarketData","balanceChange","_marketData$zeroAddre","percentage1d","zeroAddress","pricePercentChange1d","numeric","WEI","isZero","toBase","BigNumber","ROUND_HALF_DOWN","isValidAmount","successDefault","formattedValue","formatValue","formattedValuePrice","options","notation","compactDisplay","maximumFractionDigits","Intl","NumberFormat","currency","format","minimumFractionDigits","whiteSpace","renderPercentageWithNumber","PercentageChange","_portfolio","_percentageChange","TokenListItem","tokenSymbol","tokenImage","primary","secondary","tooltipText","isOriginalTokenSymbol","isNativeCurrency","isStakeable","showPercentage","_tokensMarketData$add","_tokensMarketData$zer","isEvm","getMultichainIsEvm","getMultichainCurrentChainId","metaMetricsId","getMetaMetricsId","isMetaMetricsEnabled","getParticipateInMetaMetrics","isMarketingEnabled","getDataCollectionForMarketing","showScamWarning","showScamWarningModal","setShowScamWarningModal","tokensMarketData","tokenPercentageChange","tokenTitle","CURRENCY_SYMBOLS","getTokenTitle","tokenMainTitleToDisplay","stakeableTitle","getPortfolioUrl","StakingEntryPointClicked","Tokens","Stake","TokenDetailsOpened","Half","OneThird","InlineBlock","TwoThirds","End","NETWORKS_ROUTE","_identicon","_userPreferencedCurrencyDisplay","AccountList","selectNewAccountViaModal","addressLastConnectedMap","selectedAccounts","allAreSelected","deselectAll","selectAll","handleAccountClick","selectedAccountScrollRef","useLayoutEffect","_selectedAccountScrol","firstSelectedAccount","checked","isIndeterminate","Checkbox","isChecked","marginInlineStart","overflowX","addressLabel","balance","isEvmAccountType","handleEvmAccountClick","diameter","minWidth","textWrap","PRIMARY","flexWrap","suffix","numberOfDecimals","ethNumberOfDecimals","suffixProps","arrayOf","shape","lastConnectedDate","memo","prevProps","nextProps","isEqual","_accountList","_infoIcon","AccountMismatchWarning","Severity","_infoTooltip","CLASSNAME_WITH_RIGHT_BUTTON","typeHash","success","ActionableMessage","message","primaryAction","primaryActionV2","secondaryAction","infoTooltipText","withRightButton","useIcon","iconFillColor","roundedButtons","onAutoHide","actionableMessageClassName","onlyOneAction","contentText","number","_actionableMessage","_usePrevious","Alert","visible","setVisible","setClassName","lastVisible","usePrevious","msg","MILLISECOND","BASE_CLASS_NAME","Sizes","ValidSize","ValidBlockSize","ValidSizeAndAuto","ValidBackgroundColor","ValidBorderColors","ValidTextColors","ValidIconColors","ValidAlignItem","ValidJustifyContent","ArrayOfValidSizes","MultipleSizes","ArrayOfValidBlockSizes","MultipleBlockSizes","ArrayOfValidSizesAndAuto","MultipleSizesAndAuto","ArrayOfValidBorderColors","MultipleBorderColors","ArrayOfValidBackgroundColor","MultipleBackgroundColor","ArrayOfValidTextColors","ArrayOfValidIconColors","MultipleTextColors","ArrayOfValidAlignItems","MultipleAlignItems","ArrayOfValidJustifyContents","MultipleJustifyContents","isValidSize","isValidString","generateClassNames","memoize","validatorFn","classesObject","singleArrayItemProp","Array","isArray","singleValue","BREAKPOINTS","console","log","forwardRef","marginInline","boxClassName","Component","ariaLabelProp","FlexWrap","_box","_defineProperty","arg","hint","prim","Symbol","toPrimitive","res","TypeError","String","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","ButtonGroup","PureComponent","constructor","args","super","activeButtonIndex","noButtonActiveByDefault","defaultActiveButtonIndex","componentDidUpdate","prevState","newActiveButtonIndex","setState","handleButtonClick","renderButtons","Children","child","role","_child$props$onClick","_child$props","render","array","_buttonGroup","CLASSNAME_DEFAULT","link","inline","raised","submit","large","rounded","buttonProps","doRounding","Tag","onKeyUp","_button","_infoIconInverted","Callout","dismiss","isFirst","isLast","isMultiple","setRemoved","calloutClassName","Close","_callout","CHECKBOX_STATE","CHECKED","INDETERMINATE","UNCHECKED","CheckBox","indeterminate","readOnly","defaultProps","_checkBox","ChipWithInput","borderDefault","inputValue","setInputValue","_urlIcon","Chip","leftIconUrl","rightIcon","maxContent","displayInlineBlock","isInteractive","onKeyPress","omit","_chip","_unicodeConfusables","_uuid","Confusable","confusables","point","similarTo","zeroWidth","v4","_useCurrencyDisplay","CurrencyDisplay","displayValue","prefix","prefixComponent","hideLabel","hideTitle","denomination","prefixComponentWrapperProps","parts","useCurrencyDisplay","Wrap","CurrencyDisplayPropTypes","_currencyDisplay","MARGIN_MAP","XS","DefinitionList","dictionary","termTypography","definitionTypography","tooltips","warnings","gapSize","term","definition","bodySmBold","warningDefault","objectOf","_definitionList","Loader","ExpandableIcon","isExpanded","headerComponent","isCollapsible","isLoading","onHeaderClick","getIconPropsByType","delineator__header","overrideTextComponentColorByType","component","contentBoxProps","Container","wrapperBoxProps","Delineator","isExpandedProp","onExpandChange","setIsExpanded","shouldShowContent","handleHeaderClick","newExpandedState","DelineatorType","_delineator","defaultIconProps","inverseIconColorProp","Error","overlayAlternative","getTextColorByType","cloneElement","isClosed","setIsClosed","LINEA_GOERLI","ARBITRUM_GOERLI","OPTIMISM_GOERLI","DEPRECATED_NETWORKS","AURORA","startsWith","Dialog","DisclosureVariant","_disclosure","Disclosure","isScrollToBottomOnOpen","disclosureFooterEl","open","setOpen","_disclosureFooterEl$c","Arrow","renderSummaryByType","Default","Dropdown","selectedOption","_onChange","option","exact","_dropdown","_deprecated","EditableLabel","isEditing","handleSubmit","isValidAccountName","onSubmit","trim","renderEditing","errorMessage","getAccountNameErrorMessage","context","required","helpText","Check","renderReadonly","wordBreak","Edit","ErrorMessage","errorKey","contextTypes","_errorMessage","ExportTextContainer","onClickCopy","_exportTextContainer","hideDropdownIfNoOptions","maxDropdownHeight","noOptionsText","onOptionClick","dropdownVisible","setDropdownVisible","valueRef","valueWidth","setValueWidth","_valueRef$current","handleBlur","_e$relatedTarget","relatedTarget","handleChange","handleOptionClick","_inputRef$current","handleClearClick","_inputRef$current2","Option","handleClick","nativeEvent","stopImmediatePropagation","primaryLabel","secondaryLabel","maxHeight","dropdownHeight","setDropdownHeight","_ref$current","scrollHeight","_numericInput","FormField","titleText","TitleTextCustomComponent","titleUnit","TitleUnitCustomComponent","TooltipCustomComponent","titleDetail","titleDetailWrapperProps","titleHeadingWrapperProps","detailText","password","allowDecimals","warningProps","passwordStrength","passwordStrengthText","wrappingLabelProps","_formField","HexToDecimal","decimalValue","_hexToDecimal","defaultRender","inner","IconButton","tooltipRender","otherProps","renderWrapper","_iconButton","IconWithFallback","fallbackClassName","iconError","setIconError","onError","charAt","_iconWithFallback","IconEyeSlash","fill","xmlns","viewBox","d","IconEye","InfoIconInverted","SEVERITIES","SUCCESS","WARNING","DANGER","INFO","InfoIcon","Preloader","fillRule","clipRule","maskUnits","x","y","mask","SearchIcon","SunCheck","reverseColors","sunColor","checkColor","_blockieIdenticon","_jazzicon","getStyles","Identicon","imageLoadingError","getAssetImageURL","getImage","componentDidMount","loadImage","renderImage","imageBorder","renderJazzicon","renderBlockie","renderBlockieOrJazzIcon","shouldComponentUpdate","nextState","getTokenImage","_tokenList$address$to","getNftImage","_watchedNftContracts$","watchedNftContracts","logo","nftImage","addBorder","_nft","connect","metamask","getNftContractsByAddressOnCurrentChain","InfoTooltipIcon","positionArrowClassMap","InfoTooltip","_gas","_useShouldAnimateGasEstimations","LOADING_CLASS","LoadingHeartBeat","estimateUsed","useShouldAnimateGasEstimations","active","getGasLoadingAnimationIsShowing","isMetamaskSuggestedGasEstimate","_loadingIndicator","LoadingIndicator","_loadingScreen","_spinner","LoadingScreen","loadingMessage","showLoadingSpinner","isValidElement","element","LogoLattice","LogoLedger","LogoQRBased","LogoTrezor","_mascot","_logo","_buildTypes","Mascot","followMouse","pxNotRatio","meshJson","getBuildSpecificAsset","mascotContainer","createRef","refollowMouse","debounce","setFollowMouse","unfollowMouse","handleAnimationEvents","animations","animationEventEmitter","on","lookAt","lookAtAndRender","appendChild","container","directionTargetMap","horizontalMiddle","verticalMiddle","up","down","middle","directionTargetGenerator","getBoundingClientRect","lookAtTarget","lookAtDirection","prevTarget","prevDirection","prevFollowMouse","componentWillUnmount","removeAllListeners","remove","stopAnimation","_menuItem","MenuItem","iconColor","subtitle","showInfoDot","displayName","_reactDom","_reactPopper","popperOptions","popperElement","setPopperElement","popoverContainerElement","getElementById","attributes","styles","usePopper","createPortal","popper","LOGO_WIDTH","LOGO_HEIGHT","TEXT_COLOR","MetaFoxHorizontalLogo","themeProps","setTheme","getAttribute","transform","strokeLinecap","strokeLinejoin","stroke","os","_horizontalLogo","MetaFoxLogo","isOnboarding","tokenDetectionSupported","setTokenDetectionSupported","showPopup","setShowPopup","setIsLoading","autoDetectToken","getUseTokenDetection","areExternalServicesEnabled","providerConfig","getProviderConfig","isBridgeChain","getIsBridgeChain","onCloseClick","setFirstTimeUsedNetwork","checkTokenDetection","fetchedTokenData","_fetchWithCache","_tokens","TOKEN_API_METASWAP_CODEFI_URL","functionName","isTokenDetectionSupported","centerTitle","headerProps","footer","USER_GUIDE_CUSTOM_NETWORKS","avatarNetworkProps","align","Bridge","Coin","_useNftsCollections","NftCollectionImage","assetName","tokenAddress","_tokenList$tokenAddre","collections","useNftsCollections","nftTokenListImage","_assetName$","collectionName","collectionImage","renderCollectionImageOrName","_nicknamePopover","NicknamePopover","onAdd","explorerLink","onAddClick","blockExplorerLinkText","getBlockExplorerLinkText","firstPart","NumericInput","_match$","newValue","match","DECIMAL_REGEX","exec","parseFloat","min","_pageContainerHeader","_pageContainerFooter","_pageContainer","PageContainerFooter","cancelText","submitText","submitButtonType","hideCancel","cancelButtonType","buttonSizeLarge","footerClassName","footerButtonClassName"],"mappings":"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","file":"../metamask/ui-5.js","sourcesContent":["export { NetworkListItem } from './network-list-item';\n","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  JustifyContent,\n  TextColor,\n  IconColor,\n  FlexDirection,\n  TextVariant,\n  BorderColor,\n} from '../../../helpers/constants/design-system';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../component-library';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { getAvatarNetworkColor } from '../../../helpers/utils/accounts';\nimport Tooltip from '../../ui/tooltip/tooltip';\nimport { NetworkListItemMenu } from '../network-list-item-menu';\n\n// TODO: Consider increasing this. This tooltip is\n// rendering when it has enough room to see everything\nconst MAXIMUM_CHARACTERS_WITHOUT_TOOLTIP = 20;\n\nexport const NetworkListItem = ({\n  name,\n  iconSrc,\n  iconSize = AvatarNetworkSize.Md,\n  rpcEndpoint,\n  chainId,\n  selected = false,\n  focus = true,\n  onClick,\n  onDeleteClick,\n  onEditClick,\n  onRpcEndpointClick,\n  startAccessory,\n  showEndAccessory = true,\n}: {\n  name: string;\n  iconSrc?: string;\n  iconSize?: AvatarNetworkSize;\n  rpcEndpoint?: { name?: string; url: string };\n  chainId?: string;\n  selected?: boolean;\n  onClick: () => void;\n  onRpcEndpointClick?: () => void;\n  onDeleteClick?: () => void;\n  onEditClick?: () => void;\n  focus?: boolean;\n  startAccessory?: ReactNode;\n  showEndAccessory?: boolean;\n}) => {\n  const t = useI18nContext();\n  const networkRef = useRef<HTMLInputElement>(null);\n\n  const [networkListItemMenuElement, setNetworkListItemMenuElement] =\n    useState();\n\n  // I can't find a type that satisfies this.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const setNetworkListItemMenuRef = (ref: any) => {\n    setNetworkListItemMenuElement(ref);\n  };\n  const [networkOptionsMenuOpen, setNetworkOptionsMenuOpen] = useState(false);\n\n  const renderButton = () => {\n    return onDeleteClick || onEditClick ? (\n      <ButtonIcon\n        iconName={IconName.MoreVertical}\n        ref={setNetworkListItemMenuRef}\n        data-testid={`network-list-item-options-button-${chainId}`}\n        ariaLabel={t('networkOptions')}\n        onClick={(e: React.MouseEvent) => {\n          e.stopPropagation();\n          setNetworkOptionsMenuOpen(true);\n        }}\n        size={ButtonIconSize.Sm}\n      />\n    ) : null;\n  };\n  useEffect(() => {\n    if (networkRef.current && focus) {\n      networkRef.current.focus();\n    }\n  }, [networkRef, focus]);\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation(); // Prevent the event from reaching the parent container\n      onClick();\n    }\n  };\n\n  return (\n    <Box\n      paddingLeft={4}\n      paddingRight={4}\n      paddingTop={rpcEndpoint ? 2 : 4}\n      paddingBottom={rpcEndpoint ? 2 : 4}\n      gap={4}\n      backgroundColor={\n        selected ? BackgroundColor.primaryMuted : BackgroundColor.transparent\n      }\n      className={classnames('multichain-network-list-item', {\n        'multichain-network-list-item--selected': selected,\n      })}\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.spaceBetween}\n      width={BlockSize.Full}\n      onClick={onClick}\n    >\n      {startAccessory ? <Box marginTop={1}>{startAccessory}</Box> : null}\n      {selected && (\n        <Box\n          className=\"multichain-network-list-item__selected-indicator\"\n          borderRadius={BorderRadius.pill}\n          backgroundColor={BackgroundColor.primaryDefault}\n        />\n      )}\n      <AvatarNetwork\n        borderColor={BorderColor.backgroundDefault}\n        backgroundColor={getAvatarNetworkColor(name)}\n        name={name}\n        src={iconSrc}\n        size={iconSize}\n      />\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={AlignItems.flexStart}\n        justifyContent={JustifyContent.flexStart}\n        width={BlockSize.Full}\n        style={{ overflow: 'hidden' }}\n      >\n        <Box\n          width={BlockSize.Full}\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          data-testid={name}\n        >\n          <Text\n            ref={networkRef}\n            color={TextColor.textDefault}\n            backgroundColor={BackgroundColor.transparent}\n            ellipsis\n            onKeyDown={handleKeyPress}\n            tabIndex={0} // Enable keyboard focus\n          >\n            {name?.length > MAXIMUM_CHARACTERS_WITHOUT_TOOLTIP ? (\n              <Tooltip\n                title={name}\n                position=\"bottom\"\n                wrapperClassName=\"multichain-network-list-item__tooltip\"\n              >\n                {name}\n              </Tooltip>\n            ) : (\n              name\n            )}\n          </Text>\n        </Box>\n        {rpcEndpoint && (\n          <Box\n            className=\"multichain-network-list-item__rpc-endpoint\"\n            display={Display.Flex}\n            alignItems={AlignItems.center}\n            data-testid={`network-rpc-name-button-${chainId}`}\n            onClick={(e: React.MouseEvent) => {\n              e.stopPropagation();\n              onRpcEndpointClick?.();\n            }}\n          >\n            <Text\n              padding={0}\n              backgroundColor={BackgroundColor.transparent}\n              as=\"button\"\n              variant={TextVariant.bodySmMedium}\n              color={TextColor.textAlternative}\n            >\n              {rpcEndpoint.name ?? new URL(rpcEndpoint.url).host}\n            </Text>\n            <Icon\n              marginLeft={1}\n              color={IconColor.iconAlternative}\n              name={IconName.ArrowDown}\n              size={IconSize.Xs}\n            />\n          </Box>\n        )}\n      </Box>\n\n      {renderButton()}\n      {showEndAccessory ? (\n        <NetworkListItemMenu\n          anchorElement={networkListItemMenuElement}\n          isOpen={networkOptionsMenuOpen}\n          onDeleteClick={onDeleteClick}\n          onEditClick={onEditClick}\n          onClose={() => setNetworkOptionsMenuOpen(false)}\n        />\n      ) : null}\n    </Box>\n  );\n};\n\nNetworkListItem.propTypes = {\n  /**\n   * The name of the network\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Path to the Icon image\n   */\n  iconSrc: PropTypes.string,\n  /**\n   * Icon network size\n   */\n  iconSize: PropTypes.string,\n  /**\n   * Represents if the network item is selected\n   */\n  selected: PropTypes.bool,\n  /**\n   * Executes when the item is clicked\n   */\n  onClick: PropTypes.func.isRequired,\n  /**\n   * Executes when the delete icon is clicked\n   */\n  onDeleteClick: PropTypes.func,\n  /**\n   * Executes when the edit icon is clicked\n   */\n  onEditClick: PropTypes.func,\n  /**\n   * Represents if the network item should be keyboard selected\n   */\n  focus: PropTypes.bool,\n  /**\n   * Represents start accessory\n   */\n  startAccessory: PropTypes.node,\n  /**\n   * Represents if we need to show menu option\n   */\n  showEndAccessory: PropTypes.bool,\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  ButtonPrimary,\n  ButtonPrimarySize,\n  FormTextField,\n  FormTextFieldSize,\n  HelpText,\n  HelpTextSeverity,\n} from '../../../component-library';\nimport {\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { isWebUrl } from '../../../../../app/scripts/lib/util';\n\nconst AddBlockExplorerModal = ({\n  onAdded,\n}: {\n  onAdded: (url: string) => void;\n}) => {\n  const t = useI18nContext();\n  const [url, setUrl] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    if (url && url?.length > 0 && !isWebUrl(url)) {\n      setError(t('urlErrorMsg'));\n    } else {\n      setError(undefined);\n    }\n  }, [url]);\n\n  return (\n    <Box\n      className=\"add-block-explorer-modal\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      justifyContent={JustifyContent.spaceBetween}\n      height={BlockSize.Full}\n    >\n      <Box paddingLeft={4} paddingRight={4}>\n        <FormTextField\n          size={FormTextFieldSize.Lg}\n          textFieldProps={{ borderRadius: BorderRadius.LG }}\n          error={Boolean(error)}\n          id=\"additional-rpc-url\"\n          label={t('blockExplorerUrl')}\n          inputProps={{\n            'data-testid': 'explorer-url-input',\n          }}\n          labelProps={{\n            children: undefined,\n            variant: TextVariant.bodyMdMedium,\n          }}\n          onChange={(e) => setUrl(e.target.value)}\n          autoFocus\n        />\n        {error && (\n          <HelpText severity={HelpTextSeverity.Danger}>{error}</HelpText>\n        )}\n      </Box>\n      <Box\n        className=\"add-block-explorer-modal__footer\"\n        backgroundColor={BackgroundColor.backgroundDefault}\n        padding={4}\n        width={BlockSize.Full}\n      >\n        <ButtonPrimary\n          width={BlockSize.Full}\n          disabled={Boolean(error)}\n          size={ButtonPrimarySize.Lg}\n          onClick={async () => {\n            if (url) {\n              onAdded(url);\n            }\n          }}\n        >\n          {t('addUrl')}\n        </ButtonPrimary>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddBlockExplorerModal;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Box,\n  ButtonPrimary,\n  ButtonPrimarySize,\n  FormTextField,\n  FormTextFieldSize,\n  HelpText,\n  HelpTextSeverity,\n} from '../../../component-library';\nimport {\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { isWebUrl } from '../../../../../app/scripts/lib/util';\n\nconst AddRpcUrlModal = ({\n  onAdded,\n}: {\n  onAdded: (url: string, name?: string) => void;\n}) => {\n  const t = useI18nContext();\n\n  const [url, setUrl] = useState<string>();\n  const [error, setError] = useState<string>();\n  const nameRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (url && !isWebUrl(url)) {\n      setError(isWebUrl(`https://${url}`) ? t('urlErrorMsg') : t('invalidRPC'));\n    } else {\n      setError(undefined);\n    }\n  }, [url]);\n\n  return (\n    <Box\n      className=\"add-rpc-modal\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      justifyContent={JustifyContent.spaceBetween}\n      height={BlockSize.Full}\n    >\n      <Box paddingTop={4} paddingLeft={4} paddingRight={4}>\n        <FormTextField\n          id=\"rpcUrl\"\n          size={FormTextFieldSize.Lg}\n          error={Boolean(error)}\n          label={t('rpcUrl')}\n          placeholder={t('enterRpcUrl')}\n          textFieldProps={{ borderRadius: BorderRadius.LG }}\n          labelProps={{\n            children: undefined,\n            variant: TextVariant.bodyMdMedium,\n          }}\n          inputProps={{\n            'data-testid': 'rpc-url-input-test',\n          }}\n          onChange={(e) => setUrl(e.target.value)}\n          autoFocus\n        />\n        {error && (\n          <HelpText severity={HelpTextSeverity.Danger}>{error}</HelpText>\n        )}\n        <FormTextField\n          id=\"rpcName\"\n          size={FormTextFieldSize.Lg}\n          inputProps={{\n            'data-testid': 'rpc-name-input-test',\n          }}\n          placeholder={t('enterANameToIdentifyTheUrl')}\n          paddingTop={4}\n          inputRef={nameRef}\n          label={t('rpcNameOptional')}\n          textFieldProps={{ borderRadius: BorderRadius.LG }}\n          labelProps={{\n            children: undefined,\n            variant: TextVariant.bodyMdMedium,\n          }}\n        />\n      </Box>\n\n      <Box\n        className=\"add-rpc-modal__footer\"\n        backgroundColor={BackgroundColor.backgroundDefault}\n        padding={4}\n        width={BlockSize.Full}\n      >\n        <ButtonPrimary\n          width={BlockSize.Full}\n          disabled={Boolean(error)}\n          size={ButtonPrimarySize.Lg}\n          onClick={async () => {\n            if (url && !error && nameRef.current) {\n              onAdded(url, nameRef.current.value || undefined);\n            }\n          }}\n        >\n          {t('addUrl')}\n        </ButtonPrimary>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddRpcUrlModal;\n","export { NetworkListMenu } from './network-list-menu';\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ApprovalType } from '@metamask/controller-utils';\nimport { ORIGIN_METAMASK } from '@metamask/approval-controller';\nimport Popover from '../../../ui/popover';\nimport ConfirmationPage from '../../../../pages/confirmations/confirmation/confirmation';\nimport { getUnapprovedConfirmations } from '../../../../selectors';\n\nconst NetworkConfirmationPopover = () => {\n  const [showPopover, setShowPopover] = useState(false);\n\n  const unapprovedConfirmations = useSelector(getUnapprovedConfirmations);\n\n  useEffect(() => {\n    const anAddNetworkConfirmationFromMetaMaskExists =\n      unapprovedConfirmations?.find(\n        (confirmation) =>\n          confirmation.origin === ORIGIN_METAMASK &&\n          confirmation.type === ApprovalType.AddEthereumChain,\n      );\n\n    if (!showPopover && anAddNetworkConfirmationFromMetaMaskExists) {\n      setShowPopover(true);\n    } else if (showPopover && !anAddNetworkConfirmationFromMetaMaskExists) {\n      setShowPopover(false);\n    }\n  }, [unapprovedConfirmations, showPopover]);\n\n  if (!showPopover) {\n    return null;\n  }\n\n  return (\n    <Popover data-testid=\"network-popover\">\n      <ConfirmationPage redirectToHomeOnZeroConfirmations={false} />\n    </Popover>\n  );\n};\n\nexport default NetworkConfirmationPopover;\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Fuse from 'fuse.js';\nimport * as URI from 'uri-js';\nimport {\n  NetworkConfiguration,\n  RpcEndpointType,\n} from '@metamask/network-controller';\nimport { Hex } from '@metamask/utils';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { NetworkListItem } from '../network-list-item';\nimport {\n  hideNetworkBanner,\n  setActiveNetwork,\n  setShowTestNetworks,\n  showModal,\n  toggleNetworkMenu,\n  updateNetworksList,\n  setNetworkClientIdForDomain,\n  setEditedNetwork,\n} from '../../../store/actions';\nimport {\n  CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP,\n  CHAIN_IDS,\n  FEATURED_RPCS,\n  TEST_CHAINS,\n} from '../../../../shared/constants/network';\nimport {\n  getCurrentChainId,\n  getShowTestNetworks,\n  getOnboardedInThisUISession,\n  getShowNetworkBanner,\n  getOriginOfCurrentTab,\n  getUseRequestQueue,\n  getEditedNetwork,\n  getNetworkConfigurationsByChainId,\n  getOrderedNetworksList,\n  getIsAddingNewNetwork,\n  getIsMultiRpcOnboarding,\n  getAllDomains,\n} from '../../../selectors';\nimport ToggleButton from '../../ui/toggle-button';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  Box,\n  ButtonSecondary,\n  ButtonSecondarySize,\n  Modal,\n  ModalOverlay,\n  Text,\n  BannerBase,\n  IconName,\n  ModalContent,\n  ModalHeader,\n  AvatarNetworkSize,\n} from '../../component-library';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport {\n  getCompletedOnboarding,\n  getIsUnlocked,\n} from '../../../ducks/metamask/metamask';\nimport NetworksForm from '../../../pages/settings/networks-tab/networks-form';\nimport { useNetworkFormState } from '../../../pages/settings/networks-tab/networks-form/networks-form-state';\nimport PopularNetworkList from './popular-network-list/popular-network-list';\nimport NetworkListSearch from './network-list-search/network-list-search';\nimport AddRpcUrlModal from './add-rpc-url-modal/add-rpc-url-modal';\nimport { SelectRpcUrlModal } from './select-rpc-url-modal/select-rpc-url-modal';\nimport AddBlockExplorerModal from './add-block-explorer-modal/add-block-explorer-modal';\n\nexport enum ACTION_MODES {\n  // Displays the search box and network list\n  LIST,\n  // Displays the form to add or edit a network\n  ADD_EDIT,\n  // Displays the page for adding an additional RPC URL\n  ADD_RPC,\n  // Displays the page for adding an additional explorer URL\n  ADD_EXPLORER_URL,\n  // Displays the page for selecting an RPC URL\n  SELECT_RPC,\n}\n\nexport const NetworkListMenu = ({ onClose }: { onClose: () => void }) => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const showTestNetworks = useSelector(getShowTestNetworks);\n  const currentChainId = useSelector(getCurrentChainId);\n  const selectedTabOrigin = useSelector(getOriginOfCurrentTab);\n  const useRequestQueue = useSelector(getUseRequestQueue);\n  const isUnlocked = useSelector(getIsUnlocked);\n  const domains = useSelector(getAllDomains);\n  const orderedNetworksList = useSelector(getOrderedNetworksList);\n  const isAddingNewNetwork = useSelector(getIsAddingNewNetwork);\n  const isMultiRpcOnboarding = useSelector(getIsMultiRpcOnboarding);\n  const completedOnboarding = useSelector(getCompletedOnboarding);\n  const onboardedInThisUISession = useSelector(getOnboardedInThisUISession);\n  const showNetworkBanner = useSelector(getShowNetworkBanner);\n  const networkConfigurations = useSelector(getNetworkConfigurationsByChainId);\n  const { chainId: editingChainId, editCompleted } =\n    useSelector(getEditedNetwork) ?? {};\n\n  const currentlyOnTestNetwork = (TEST_CHAINS as Hex[]).includes(\n    currentChainId,\n  );\n\n  const [nonTestNetworks, testNetworks] = useMemo(\n    () =>\n      Object.entries(networkConfigurations).reduce(\n        ([nonTestNetworksList, testNetworksList], [chainId, network]) => {\n          const isTest = (TEST_CHAINS as string[]).includes(chainId);\n          (isTest ? testNetworksList : nonTestNetworksList)[chainId] = network;\n          return [nonTestNetworksList, testNetworksList];\n        },\n        [\n          {} as Record<string, NetworkConfiguration>,\n          {} as Record<string, NetworkConfiguration>,\n        ],\n      ),\n    [networkConfigurations],\n  );\n\n  // The network currently being edited, or undefined\n  // if the user is not currently editing a network.\n  const editedNetwork = useMemo(\n    () =>\n      !editingChainId || editCompleted\n        ? undefined\n        : Object.entries(networkConfigurations).find(\n            ([chainId]) => chainId === editingChainId,\n          )?.[1],\n    [editingChainId, editCompleted, networkConfigurations],\n  );\n\n  // Tracks which page the user is on\n  const [actionMode, setActionMode] = useState(\n    isAddingNewNetwork || editedNetwork\n      ? ACTION_MODES.ADD_EDIT\n      : ACTION_MODES.LIST,\n  );\n\n  const networkFormState = useNetworkFormState(editedNetwork);\n  const { rpcUrls, setRpcUrls, blockExplorers, setBlockExplorers } =\n    networkFormState;\n\n  const sortNetworks = (networks: Record<string, NetworkConfiguration>) =>\n    Object.values(networks).sort(\n      (a, b) =>\n        orderedNetworksList.findIndex(\n          ({ networkId }) => networkId === a.chainId,\n        ) -\n        orderedNetworksList.findIndex(\n          ({ networkId }) => networkId === b.chainId,\n        ),\n    );\n\n  const [orderedNetworks, setOrderedNetworks] = useState(\n    sortNetworks(nonTestNetworks),\n  );\n  useEffect(\n    () => setOrderedNetworks(sortNetworks(nonTestNetworks)),\n    [nonTestNetworks, orderedNetworksList],\n  );\n\n  // Re-orders networks when the user drag + drops them\n  const onDragEnd = (result: DropResult) => {\n    if (result.destination) {\n      const newOrderedNetworks = [...orderedNetworks];\n      const [removed] = newOrderedNetworks.splice(result.source.index, 1);\n      newOrderedNetworks.splice(result.destination.index, 0, removed);\n      dispatch(updateNetworksList(newOrderedNetworks.map((n) => n.chainId)));\n      setOrderedNetworks(newOrderedNetworks);\n    }\n  };\n\n  const featuredNetworksNotYetEnabled = useMemo(\n    () =>\n      FEATURED_RPCS.filter(\n        ({ chainId }) => !networkConfigurations[chainId],\n      ).sort((a, b) => a.name.localeCompare(b.name)),\n    [networkConfigurations],\n  );\n\n  // Searches networks by user input\n  const [searchQuery, setSearchQuery] = useState('');\n  const [focusSearch, setFocusSearch] = useState(false);\n\n  const searchNetworks = <T,>(networks: T[], query: string) =>\n    searchQuery === ''\n      ? networks\n      : new Fuse(networks, {\n          threshold: 0.2,\n          location: 0,\n          distance: 100,\n          maxPatternLength: 32,\n          minMatchCharLength: 1,\n          shouldSort: false, // Maintain network order instead of ordering by search score\n          keys: ['name', 'chainId', 'nativeCrrency'],\n        }).search(query);\n\n  const searchedEnabledNetworks = searchNetworks(orderedNetworks, searchQuery);\n  const searchedFeaturedNetworks = searchNetworks(\n    featuredNetworksNotYetEnabled,\n    searchQuery,\n  );\n  const searchedTestNetworks = searchNetworks(\n    Object.values(testNetworks),\n    searchQuery,\n  );\n\n  // If any network has multiple RPC endpoints, show multi-rpc selectors for all networks\n  const showMultiRpcSelectors = [\n    ...searchedEnabledNetworks,\n    ...searchedTestNetworks,\n  ].some((network) => network.rpcEndpoints.length > 1);\n\n  // Renders a network in the network list\n  const generateNetworkListItem = (network: NetworkConfiguration) => {\n    const isCurrentNetwork = network.chainId === currentChainId;\n    const canDeleteNetwork =\n      isUnlocked &&\n      !isCurrentNetwork &&\n      network.chainId !== CHAIN_IDS.MAINNET &&\n      network.chainId !== CHAIN_IDS.LINEA_MAINNET;\n\n    return (\n      <NetworkListItem\n        name={network.name}\n        iconSrc={\n          CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[\n            network.chainId as keyof typeof CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP\n          ]\n        }\n        iconSize={AvatarNetworkSize.Sm}\n        rpcEndpoint={\n          showMultiRpcSelectors\n            ? network.rpcEndpoints[network.defaultRpcEndpointIndex]\n            : undefined\n        }\n        key={network.chainId}\n        chainId={network.chainId}\n        selected={isCurrentNetwork && !focusSearch}\n        focus={isCurrentNetwork && !focusSearch}\n        onClick={() => {\n          const { networkClientId } =\n            network.rpcEndpoints[network.defaultRpcEndpointIndex];\n          dispatch(setActiveNetwork(networkClientId));\n          dispatch(toggleNetworkMenu());\n\n          // If presently on a dapp, communicate a change to\n          // the dapp via silent switchEthereumChain that the\n          // network has changed due to user action\n          if (\n            useRequestQueue &&\n            selectedTabOrigin &&\n            domains[selectedTabOrigin]\n          ) {\n            setNetworkClientIdForDomain(selectedTabOrigin, networkClientId);\n          }\n\n          trackEvent({\n            event: MetaMetricsEventName.NavNetworkSwitched,\n            category: MetaMetricsEventCategory.Network,\n            properties: {\n              location: 'Network Menu',\n              chain_id: currentChainId,\n              from_network: currentChainId,\n              to_network: network.chainId,\n            },\n          });\n        }}\n        onDeleteClick={\n          canDeleteNetwork\n            ? () => {\n                dispatch(toggleNetworkMenu());\n                dispatch(\n                  showModal({\n                    name: 'CONFIRM_DELETE_NETWORK',\n                    target: network.chainId,\n                    onConfirm: () => undefined,\n                  }),\n                );\n              }\n            : undefined\n        }\n        onEditClick={() => {\n          dispatch(\n            setEditedNetwork({\n              chainId: network.chainId,\n              nickname: network.name,\n            }),\n          );\n          setActionMode(ACTION_MODES.ADD_EDIT);\n        }}\n        onRpcEndpointClick={() => {\n          setActionMode(ACTION_MODES.SELECT_RPC);\n          dispatch(setEditedNetwork({ chainId: network.chainId }));\n        }}\n      />\n    );\n  };\n\n  const render = () => {\n    if (actionMode === ACTION_MODES.LIST) {\n      return (\n        <>\n          <Box className=\"multichain-network-list-menu\">\n            <NetworkListSearch\n              searchQuery={searchQuery}\n              setSearchQuery={setSearchQuery}\n              setFocusSearch={setFocusSearch}\n            />\n            {completedOnboarding &&\n              !onboardedInThisUISession &&\n              showNetworkBanner &&\n              !searchQuery && (\n                <BannerBase\n                  marginLeft={4}\n                  marginRight={4}\n                  borderRadius={BorderRadius.LG}\n                  padding={4}\n                  marginBottom={4}\n                  marginTop={2}\n                  backgroundColor={BackgroundColor.backgroundAlternative}\n                  startAccessory={\n                    <Box\n                      display={Display.Flex}\n                      alignItems={AlignItems.center}\n                      justifyContent={JustifyContent.center}\n                    >\n                      <img\n                        src=\"./images/dragging-animation.svg\"\n                        alt=\"drag-and-drop\"\n                      />\n                    </Box>\n                  }\n                  onClose={() => hideNetworkBanner()}\n                  description={t('dragAndDropBanner')}\n                />\n              )}\n            <Box>\n              {searchedEnabledNetworks.length > 0 && (\n                <Box\n                  padding={4}\n                  display={Display.Flex}\n                  justifyContent={JustifyContent.spaceBetween}\n                >\n                  <Text color={TextColor.textAlternative}>\n                    {t('enabledNetworks')}\n                  </Text>\n                </Box>\n              )}\n\n              {searchedEnabledNetworks.length === 0 &&\n              searchedFeaturedNetworks.length === 0 &&\n              searchedTestNetworks.length === 0 &&\n              focusSearch ? (\n                <Text\n                  paddingLeft={4}\n                  paddingRight={4}\n                  color={TextColor.textMuted}\n                  data-testid=\"multichain-network-menu-popover-no-results\"\n                >\n                  {t('noNetworksFound')}\n                </Text>\n              ) : (\n                <DragDropContext onDragEnd={onDragEnd}>\n                  <Droppable droppableId=\"characters\">\n                    {(provided) => (\n                      <Box\n                        className=\"characters\"\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                      >\n                        {searchedEnabledNetworks.map((network, index) => {\n                          return (\n                            <Draggable\n                              key={network.chainId}\n                              draggableId={network.chainId}\n                              index={index}\n                            >\n                              {(providedDrag) => (\n                                <Box\n                                  ref={providedDrag.innerRef}\n                                  {...providedDrag.draggableProps}\n                                  {...providedDrag.dragHandleProps}\n                                >\n                                  {generateNetworkListItem(network)}\n                                </Box>\n                              )}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </Box>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n              )}\n\n              <PopularNetworkList\n                searchAddNetworkResults={searchedFeaturedNetworks}\n                data-testid=\"add-popular-network-view\"\n              />\n              {searchedTestNetworks.length > 0 ? (\n                <Box\n                  paddingBottom={4}\n                  paddingTop={4}\n                  paddingLeft={4}\n                  display={Display.Flex}\n                  justifyContent={JustifyContent.spaceBetween}\n                >\n                  <Text color={TextColor.textAlternative}>\n                    {t('showTestnetNetworks')}\n                  </Text>\n                  <ToggleButton\n                    value={showTestNetworks || currentlyOnTestNetwork}\n                    disabled={currentlyOnTestNetwork}\n                    onToggle={(value: boolean) => {\n                      dispatch(setShowTestNetworks(!value));\n                      if (!value) {\n                        trackEvent({\n                          event: MetaMetricsEventName.TestNetworksDisplayed,\n                          category: MetaMetricsEventCategory.Network,\n                        });\n                      }\n                    }}\n                  />\n                </Box>\n              ) : null}\n\n              {showTestNetworks || currentlyOnTestNetwork ? (\n                <Box className=\"multichain-network-list-menu\">\n                  {searchedTestNetworks.map((network) =>\n                    generateNetworkListItem(network),\n                  )}\n                </Box>\n              ) : null}\n            </Box>\n          </Box>\n\n          <Box padding={4}>\n            <ButtonSecondary\n              size={ButtonSecondarySize.Lg}\n              startIconName={IconName.Add}\n              startIconProps={{ marginRight: 2 }}\n              block\n              onClick={() => {\n                trackEvent({\n                  event: MetaMetricsEventName.AddNetworkButtonClick,\n                  category: MetaMetricsEventCategory.Network,\n                });\n                setActionMode(ACTION_MODES.ADD_EDIT);\n              }}\n            >\n              {t('addACustomNetwork')}\n            </ButtonSecondary>\n          </Box>\n        </>\n      );\n    } else if (actionMode === ACTION_MODES.ADD_EDIT) {\n      return (\n        <NetworksForm\n          networkFormState={networkFormState}\n          existingNetwork={editedNetwork}\n          onRpcAdd={() => setActionMode(ACTION_MODES.ADD_RPC)}\n          onBlockExplorerAdd={() =>\n            setActionMode(ACTION_MODES.ADD_EXPLORER_URL)\n          }\n        />\n      );\n    } else if (actionMode === ACTION_MODES.ADD_RPC) {\n      return (\n        <AddRpcUrlModal\n          onAdded={(url, name) => {\n            // Note: We could choose to rename the URL if it already exists with a different name\n            if (rpcUrls.rpcEndpoints?.every((e) => !URI.equal(e.url, url))) {\n              setRpcUrls({\n                rpcEndpoints: [\n                  ...rpcUrls.rpcEndpoints,\n                  { url, name, type: RpcEndpointType.Custom },\n                ],\n                defaultRpcEndpointIndex: rpcUrls.rpcEndpoints.length,\n              });\n            }\n            setActionMode(ACTION_MODES.ADD_EDIT);\n          }}\n        />\n      );\n    } else if (actionMode === ACTION_MODES.ADD_EXPLORER_URL) {\n      return (\n        <AddBlockExplorerModal\n          onAdded={(url) => {\n            if (blockExplorers.blockExplorerUrls?.every((u) => u !== url)) {\n              setBlockExplorers({\n                blockExplorerUrls: [...blockExplorers.blockExplorerUrls, url],\n                defaultBlockExplorerUrlIndex:\n                  blockExplorers.blockExplorerUrls.length,\n              });\n            }\n            setActionMode(ACTION_MODES.ADD_EDIT);\n          }}\n        />\n      );\n    } else if (actionMode === ACTION_MODES.SELECT_RPC && editedNetwork) {\n      return (\n        <SelectRpcUrlModal\n          networkConfiguration={networkConfigurations[editedNetwork.chainId]}\n        />\n      );\n    }\n    return null; // Should not be reachable\n  };\n\n  let title;\n  if (actionMode === ACTION_MODES.LIST) {\n    title = t('networkMenuHeading');\n  } else if (actionMode === ACTION_MODES.ADD_EDIT && !editedNetwork) {\n    title = t('addACustomNetwork');\n  } else if (actionMode === ACTION_MODES.ADD_RPC) {\n    title = t('addRpcUrl');\n  } else if (actionMode === ACTION_MODES.ADD_EXPLORER_URL) {\n    title = t('addBlockExplorerUrl');\n  } else if (actionMode === ACTION_MODES.SELECT_RPC) {\n    title = t('selectRpcUrl');\n  } else {\n    title = editedNetwork?.name ?? '';\n  }\n\n  let onBack;\n  if (actionMode === ACTION_MODES.ADD_EDIT) {\n    onBack = () => {\n      editedNetwork ? dispatch(setEditedNetwork()) : networkFormState.clear();\n\n      setActionMode(ACTION_MODES.LIST);\n    };\n  } else if (\n    actionMode === ACTION_MODES.ADD_RPC ||\n    actionMode === ACTION_MODES.ADD_EXPLORER_URL\n  ) {\n    onBack = () => setActionMode(ACTION_MODES.ADD_EDIT);\n  }\n\n  if (isMultiRpcOnboarding) {\n    onBack = onClose;\n  }\n\n  return (\n    <Modal isOpen onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent\n        padding={0}\n        className=\"multichain-network-list-menu-content-wrapper\"\n        modalDialogProps={{\n          className: 'multichain-network-list-menu-content-wrapper__dialog',\n          display: Display.Flex,\n          flexDirection: FlexDirection.Column,\n          paddingTop: 0,\n          paddingBottom: 0,\n        }}\n      >\n        <ModalHeader\n          paddingTop={4}\n          paddingRight={4}\n          paddingBottom={actionMode === ACTION_MODES.SELECT_RPC ? 0 : 4}\n          onClose={onClose}\n          onBack={onBack}\n        >\n          <Text\n            ellipsis\n            variant={TextVariant.headingSm}\n            textAlign={TextAlign.Center}\n          >\n            {title}\n          </Text>\n        </ModalHeader>\n        {render()}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  Box,\n  ButtonIconSize,\n  TextFieldSearch,\n  TextFieldSearchSize,\n} from '../../../component-library';\nimport {\n  BlockSize,\n  BorderRadius,\n} from '../../../../helpers/constants/design-system';\n\nconst NetworkListSearch = ({\n  searchQuery,\n  setSearchQuery,\n  setFocusSearch,\n}: {\n  searchQuery: string;\n  setSearchQuery: (query: string) => void;\n  setFocusSearch: (val: boolean) => void;\n}) => {\n  const t = useI18nContext();\n\n  return (\n    <Box paddingLeft={4} paddingRight={4} paddingBottom={2} paddingTop={0}>\n      <TextFieldSearch\n        size={TextFieldSearchSize.Lg}\n        width={BlockSize.Full}\n        placeholder={t('search')}\n        autoFocus\n        value={searchQuery}\n        onFocus={() => setFocusSearch(true)}\n        onBlur={() => setFocusSearch(false)}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        clearButtonOnClick={() => setSearchQuery('')}\n        clearButtonProps={{\n          size: ButtonIconSize.Sm,\n        }}\n        inputProps={{ 'data-testid': 'network-redesign-modal-search-input' }}\n        borderRadius={BorderRadius.MD}\n        data-testid=\"search-list\"\n      />\n    </Box>\n  );\n};\n\nexport default NetworkListSearch;\n","import React, { useState, useMemo } from 'react';\nimport { ApprovalType } from '@metamask/controller-utils';\nimport { useDispatch } from 'react-redux';\nimport { AddNetworkFields } from '@metamask/network-controller';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  Box,\n  Text,\n  AvatarNetwork,\n  Button,\n  AvatarNetworkSize,\n  ButtonVariant,\n  IconName,\n  Icon,\n  IconSize,\n  ButtonLinkSize,\n  ButtonLink,\n  Popover,\n  PopoverPosition,\n} from '../../../component-library';\nimport { MetaMetricsNetworkEventSource } from '../../../../../shared/constants/metametrics';\nimport {\n  ENVIRONMENT_TYPE_POPUP,\n  ORIGIN_METAMASK,\n} from '../../../../../shared/constants/app';\nimport {\n  requestUserApproval,\n  toggleNetworkMenu,\n} from '../../../../store/actions';\nimport { getEnvironmentType } from '../../../../../app/scripts/lib/util';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  JustifyContent,\n  TextColor,\n  IconColor,\n  TextVariant,\n  BorderColor,\n} from '../../../../helpers/constants/design-system';\nimport { CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP } from '../../../../../shared/constants/network';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\n\nconst PopularNetworkList = ({\n  searchAddNetworkResults,\n}: {\n  searchAddNetworkResults: AddNetworkFields[];\n}) => {\n  const t = useI18nContext();\n  const isPopUp = getEnvironmentType() === ENVIRONMENT_TYPE_POPUP;\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsOpen(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsOpen(false);\n  };\n\n  const [referenceElement, setReferenceElement] = useState();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const setBoxRef = (ref: any) => {\n    setReferenceElement(ref);\n  };\n\n  // Memoize the popover content so it only updates when searchAddNetworkResults changes\n  const popoverContent = useMemo(() => {\n    if (Object.keys(searchAddNetworkResults).length === 0) {\n      return null;\n    }\n\n    return (\n      <Box\n        marginTop={4}\n        marginBottom={4}\n        display={Display.Flex}\n        justifyContent={JustifyContent.spaceBetween}\n      >\n        <Box display={Display.InlineFlex}>\n          <Text color={TextColor.textAlternative} variant={TextVariant.bodyMd}>\n            {t('additionalNetworks')}\n          </Text>\n\n          <Box onMouseEnter={handleMouseEnter} marginTop={1}>\n            <Icon\n              className=\"add-network__warning-icon\"\n              name={IconName.Info}\n              color={IconColor.iconMuted}\n              size={IconSize.Sm}\n              marginLeft={2}\n            />\n            <Popover\n              referenceElement={referenceElement}\n              position={PopoverPosition.Top}\n              isOpen={isOpen}\n              matchWidth\n              flip\n              hasArrow\n              backgroundColor={BackgroundColor.backgroundAlternative}\n              onMouseLeave={handleMouseLeave}\n            >\n              {t('popularNetworkAddToolTip', [\n                <Box key=\"learn-more-link\">\n                  <ButtonLink\n                    size={ButtonLinkSize.Inherit}\n                    externalLink\n                    onClick={() => {\n                      global.platform.openTab({\n                        url: ZENDESK_URLS.UNKNOWN_NETWORK,\n                      });\n                    }}\n                  >\n                    {t('learnMoreUpperCase')}\n                  </ButtonLink>\n                </Box>,\n              ])}\n            </Popover>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }, [searchAddNetworkResults, referenceElement, isOpen]);\n\n  return (\n    <Box className=\"new-network-list__networks-container\">\n      <Box\n        marginTop={isPopUp ? 0 : 4}\n        marginBottom={1}\n        paddingLeft={4}\n        paddingRight={4}\n        ref={setBoxRef}\n      >\n        {popoverContent}\n        {searchAddNetworkResults.map((network) => (\n          <Box\n            key={network.chainId}\n            display={Display.Flex}\n            alignItems={AlignItems.center}\n            justifyContent={JustifyContent.spaceBetween}\n            paddingBottom={4}\n            paddingTop={4}\n            className=\"new-network-list__list-of-networks\"\n            data-testid={`popular-network-${network.chainId}`}\n            onMouseEnter={handleMouseLeave}\n          >\n            <Box display={Display.Flex} alignItems={AlignItems.center}>\n              <AvatarNetwork\n                borderColor={BorderColor.backgroundDefault}\n                size={AvatarNetworkSize.Sm}\n                src={\n                  CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[\n                    network.chainId as keyof typeof CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP\n                  ]\n                }\n                name={network.name}\n              />\n              <Box marginLeft={4}>\n                <Text\n                  color={TextColor.textDefault}\n                  backgroundColor={BackgroundColor.transparent}\n                  ellipsis\n                >\n                  {network.name}\n                </Text>\n              </Box>\n            </Box>\n            <Box\n              display={Display.Flex}\n              alignItems={AlignItems.center}\n              marginLeft={1}\n            >\n              <Button\n                type={ButtonVariant.Link}\n                className=\"add-network__add-button\"\n                variant={ButtonVariant.Link}\n                data-testid=\"test-add-button\"\n                onClick={async () => {\n                  dispatch(toggleNetworkMenu());\n                  await dispatch(\n                    requestUserApproval({\n                      origin: ORIGIN_METAMASK,\n                      type: ApprovalType.AddEthereumChain,\n                      requestData: {\n                        chainId: network.chainId,\n                        rpcUrl:\n                          network.rpcEndpoints[network.defaultRpcEndpointIndex]\n                            .url,\n                        ticker: network.nativeCurrency,\n                        rpcPrefs: {\n                          blockExplorerUrl:\n                            network.defaultBlockExplorerUrlIndex === undefined\n                              ? undefined\n                              : network.blockExplorerUrls[\n                                  network.defaultBlockExplorerUrlIndex\n                                ],\n                        },\n                        imageUrl:\n                          CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[\n                            network.chainId as keyof typeof CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP\n                          ],\n                        chainName: network.name,\n                        referrer: ORIGIN_METAMASK,\n                        source: MetaMetricsNetworkEventSource.NewAddNetworkFlow,\n                      },\n                    }),\n                  );\n                }}\n              >\n                {t('add')}\n              </Button>\n            </Box>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PopularNetworkList;\n","import { RpcEndpointType } from '@metamask/network-controller';\nimport React from 'react';\nimport { infuraProjectId } from '../../../../shared/constants/network';\nimport { Box, Text } from '../../component-library';\nimport {\n  Display,\n  FlexDirection,\n  BorderStyle,\n  BorderColor,\n  TextColor,\n  TextVariant,\n  BackgroundColor,\n  BlockSize,\n} from '../../../helpers/constants/design-system';\n\nexport const stripKeyFromInfuraUrl = (endpoint: string) => {\n  let modifiedEndpoint = endpoint;\n\n  if (modifiedEndpoint.endsWith('/v3/{infuraProjectId}')) {\n    modifiedEndpoint = modifiedEndpoint.replace('/v3/{infuraProjectId}', '');\n  } else if (modifiedEndpoint.endsWith(`/v3/${infuraProjectId}`)) {\n    modifiedEndpoint = modifiedEndpoint.replace(`/v3/${infuraProjectId}`, '');\n  }\n\n  return modifiedEndpoint;\n};\n\nexport const stripProtocol = (endpoint: string) => {\n  const url = new URL(endpoint);\n  return `${url.host}${url.pathname === '/' ? '' : url.pathname}`;\n};\n\n// This components represents an RPC endpoint in a list,\n// currently when selecting or editing endpoints for a network.\nconst RpcListItem = ({\n  rpcEndpoint,\n}: {\n  rpcEndpoint: {\n    name?: string;\n    url: string;\n    type: RpcEndpointType;\n  };\n}) => {\n  const { url, type } = rpcEndpoint;\n  const name = type === RpcEndpointType.Infura ? 'Infura' : rpcEndpoint.name;\n\n  const displayEndpoint = (endpoint?: string) =>\n    endpoint ? stripProtocol(stripKeyFromInfuraUrl(endpoint)) : '\\u00A0';\n\n  const padding = name ? 2 : 4;\n\n  return (\n    <Box\n      className=\"rpc-list-item\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      paddingTop={padding}\n      paddingBottom={padding}\n      {...(!name && {\n        borderWidth: 2,\n        borderStyle: BorderStyle.solid,\n        borderColor: BorderColor.transparent,\n      })}\n    >\n      <Box>\n        <Text\n          as=\"button\"\n          padding={0}\n          width={BlockSize.Full}\n          color={name ? TextColor.textDefault : TextColor.textAlternative}\n          variant={name ? TextVariant.bodyMdMedium : TextVariant.bodySm}\n          backgroundColor={BackgroundColor.transparent}\n          ellipsis\n        >\n          {name || displayEndpoint(url)}\n        </Text>\n      </Box>\n      {name && (\n        <Box>\n          <Text\n            color={TextColor.textAlternative}\n            variant={TextVariant.bodySm}\n            ellipsis\n          >\n            {displayEndpoint(url)}\n          </Text>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default RpcListItem;\n","import React from 'react';\nimport { NetworkConfiguration } from '@metamask/network-controller';\nimport classnames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Box,\n  Text,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  Display,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP } from '../../../../../shared/constants/network';\nimport {\n  setActiveNetwork,\n  setEditedNetwork,\n  toggleNetworkMenu,\n  updateNetwork,\n} from '../../../../store/actions';\nimport RpcListItem from '../rpc-list-item';\n\nexport const SelectRpcUrlModal = ({\n  networkConfiguration,\n}: {\n  networkConfiguration: NetworkConfiguration;\n}) => {\n  const dispatch = useDispatch();\n\n  const image =\n    CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[\n      networkConfiguration.chainId as keyof typeof CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP\n    ];\n\n  return (\n    <Box>\n      <Box display={Display.Flex}>\n        <Box\n          margin=\"auto\"\n          paddingTop={1}\n          paddingBottom={8}\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n        >\n          {image && (\n            <AvatarNetwork\n              src={image}\n              name={networkConfiguration.name}\n              size={AvatarNetworkSize.Sm}\n              marginRight={1}\n            />\n          )}\n          <Text variant={TextVariant.bodySm} color={TextColor.textAlternative}>\n            {networkConfiguration.name}\n          </Text>\n        </Box>\n      </Box>\n\n      {networkConfiguration.rpcEndpoints.map((rpcEndpoint, index) => (\n        <Box\n          alignItems={AlignItems.center}\n          paddingLeft={4}\n          paddingRight={4}\n          display={Display.Flex}\n          key={rpcEndpoint.url}\n          onClick={() => {\n            dispatch(\n              updateNetwork({\n                ...networkConfiguration,\n                defaultRpcEndpointIndex: index,\n              }),\n            );\n            dispatch(setActiveNetwork(rpcEndpoint.networkClientId));\n            dispatch(setEditedNetwork());\n            dispatch(toggleNetworkMenu());\n          }}\n          className={classnames('select-rpc-url__item', {\n            'select-rpc-url__item--selected':\n              index === networkConfiguration.defaultRpcEndpointIndex,\n          })}\n        >\n          {index === networkConfiguration.defaultRpcEndpointIndex && (\n            <Box\n              className=\"select-rpc-url__item-selected-pill\"\n              borderRadius={BorderRadius.pill}\n              backgroundColor={BackgroundColor.primaryDefault}\n            />\n          )}\n          <RpcListItem rpcEndpoint={rpcEndpoint} />\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default SelectRpcUrlModal;\n","export { NftItem } from './nft-item';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport NftDefaultImage from '../../app/assets/nfts/nft-default-image/nft-default-image';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  BadgeWrapper,\n  BadgeWrapperAnchorElementShape,\n  Box,\n} from '../../component-library';\nimport {\n  BackgroundColor,\n  Display,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\nimport {\n  getIpfsGateway,\n  getOpenSeaEnabled,\n  getTestNetworkBackgroundColor,\n} from '../../../selectors';\n\nexport const NftItem = ({\n  alt,\n  name,\n  src,\n  networkName,\n  networkSrc,\n  tokenId,\n  onClick,\n  clickable,\n  isIpfsURL,\n  badgeWrapperClassname,\n}) => {\n  const testNetworkBackgroundColor = useSelector(getTestNetworkBackgroundColor);\n  const isIpfsEnabled = useSelector(getIpfsGateway);\n  const openSeaEnabled = useSelector(getOpenSeaEnabled);\n\n  const ipfsImageIsRenderable = isIpfsEnabled && isIpfsURL && src;\n  const openseaImageIsRenderable = openSeaEnabled && src && !isIpfsURL;\n\n  const nftImageComponentToRender =\n    ipfsImageIsRenderable || openseaImageIsRenderable ? (\n      <Box\n        className=\"nft-item__item nft-item__item-image\"\n        data-testid=\"nft-image\"\n        as=\"img\"\n        src={src}\n        alt={alt}\n        display={Display.Block}\n        justifyContent={JustifyContent.center}\n      />\n    ) : (\n      <NftDefaultImage\n        className=\"nft-item__default-image\"\n        data-testid=\"nft-default-image\"\n        name={name}\n        tokenId={tokenId}\n        clickable={clickable && isIpfsURL}\n      />\n    );\n\n  return (\n    <Box\n      className=\"nft-item__container\"\n      data-testid=\"nft-item\"\n      as=\"button\"\n      onClick={onClick}\n    >\n      <BadgeWrapper\n        className={classnames(\n          'nft-item__badge-wrapper',\n          badgeWrapperClassname,\n          {\n            'nft-item__badge-wrapper__clickable': clickable,\n          },\n        )}\n        anchorElementShape={BadgeWrapperAnchorElementShape.circular}\n        positionObj={{ top: -4, right: -4 }}\n        display={Display.Block}\n        badge={\n          <AvatarNetwork\n            className=\"nft-item__network-badge\"\n            backgroundColor={testNetworkBackgroundColor}\n            data-testid=\"nft-network-badge\"\n            size={AvatarNetworkSize.Sm}\n            name={networkName}\n            src={networkSrc}\n            borderWidth={2}\n            borderColor={BackgroundColor.backgroundDefault}\n            /* We are using BackgroundColor.backgroundDefault here because\n             * there is no equivalent BorderColor to get the \"cutout\" effect\n             */\n          />\n        }\n      >\n        {nftImageComponentToRender}\n      </BadgeWrapper>\n    </Box>\n  );\n};\n\nNftItem.propTypes = {\n  /**\n   * NFT media source\n   */\n  src: PropTypes.string,\n  /**\n   * Alt text for the NFT\n   */\n  alt: PropTypes.string.isRequired,\n  /**\n   * The NFT's name\n   */\n  name: PropTypes.string,\n  /**\n   * Name of the network the NFT lives on\n   */\n  networkName: PropTypes.string.isRequired,\n  /**\n   * Image that represents the network\n   */\n  networkSrc: PropTypes.string,\n  /**\n   * Token ID of the NFT\n   */\n  tokenId: PropTypes.string.isRequired,\n  /**\n   * Executes when the NFT is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Represents if the NFT is clickable for larger image\n   */\n  clickable: PropTypes.bool,\n  /**\n   * Whether the src url resolve to ipfs\n   */\n  isIpfsURL: PropTypes.bool,\n  badgeWrapperClassname: PropTypes.string,\n};\n","export { NotificationDetailAddress } from './notification-detail-address';\n","import React from 'react';\nimport type { FC } from 'react';\nimport { NotificationDetail } from '../notification-detail';\nimport { NotificationDetailCopyButton } from '../notification-detail-copy-button';\nimport { AvatarAccount, Text } from '../../component-library';\nimport {\n  FontWeight,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { shortenAddress } from '../../../helpers/utils/util';\nimport { toChecksumHexAddress } from '../../../../shared/modules/hexstring-utils';\n\nexport type NotificationDetailAddressProps = {\n  side: string;\n  address: string;\n};\n\nconst SideText: FC<{ side: string }> = ({ side }) => (\n  <Text variant={TextVariant.bodyLgMedium} fontWeight={FontWeight.Medium}>\n    {side}\n  </Text>\n);\n\n/**\n * A component to display a side text.\n *\n * @param props - The component props.\n * @param props.side - The side text to display.\n * @param props.address - The address to display.\n * @returns The rendered component.\n */\nexport const NotificationDetailAddress: FC<NotificationDetailAddressProps> = ({\n  side,\n  address,\n}): JSX.Element => {\n  const checksummedAddress = toChecksumHexAddress(address);\n  const displayAddress = shortenAddress(checksummedAddress);\n\n  return (\n    <NotificationDetail\n      icon={<AvatarAccount address={address} />}\n      primaryTextLeft={<SideText side={side} />}\n      secondaryTextLeft={\n        <NotificationDetailCopyButton\n          text={address}\n          displayText={displayAddress}\n        />\n      }\n    />\n  );\n};\n","export { NotificationDetailAsset } from './notification-detail-asset';\n","import React from 'react';\nimport type { FC } from 'react';\n\nimport { NotificationDetail } from '../notification-detail';\nimport {\n  AvatarTokenSize,\n  AvatarToken,\n  BadgeWrapper,\n  BadgeWrapperPosition,\n  Text,\n} from '../../component-library';\nimport {\n  BackgroundColor,\n  BorderColor,\n  FontWeight,\n  TextVariant,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\ntype BadgeProps = {\n  src: string;\n  position?: BadgeWrapperPosition;\n};\n\ntype IconProps = {\n  src: string;\n  badge?: BadgeProps;\n};\n\nexport type NotificationDetailAssetProps = {\n  icon: IconProps;\n  label: string;\n  detail: string;\n  fiatValue?: string;\n  value?: string;\n};\n\nconst createTextComponent = (\n  variant: TextVariant,\n  fontWeight: FontWeight,\n  color: TextColor,\n  children: string,\n) => (\n  <Text variant={variant} fontWeight={fontWeight} color={color}>\n    {children}\n  </Text>\n);\n\n/**\n * A component to display a notification detail with an asset.\n * The asset includes an icon, a label, a detail, a fiat value, and a value.\n *\n * @param props - The component props.\n * @param props.icon - The tokem icon to display with a badge.\n * @param props.label - The label to display.\n * @param props.detail - The detail to display.\n * @param props.fiatValue - The fiat value to display.\n * @param props.value - The value to display.\n * @returns The rendered component.\n */\nexport const NotificationDetailAsset: FC<NotificationDetailAssetProps> = ({\n  icon,\n  label,\n  detail,\n  fiatValue,\n  value,\n}): JSX.Element => {\n  const badgeIcon = (\n    <AvatarToken\n      src={icon.badge?.src}\n      size={AvatarTokenSize.Sm}\n      backgroundColor={BackgroundColor.infoDefault}\n      borderColor={BorderColor.backgroundDefault}\n      borderWidth={2}\n    />\n  );\n\n  const badgeWrapper = icon.badge ? (\n    <BadgeWrapper\n      position={icon.badge.position || BadgeWrapperPosition.topRight}\n      badge={badgeIcon}\n    >\n      <AvatarToken\n        src={icon.src}\n        borderColor={BorderColor.borderMuted}\n        className=\"notification-detail-asset__icon\"\n      />\n    </BadgeWrapper>\n  ) : (\n    <AvatarToken\n      src={icon.src}\n      borderColor={BorderColor.borderMuted}\n      className=\"notification-detail-asset__icon\"\n    />\n  );\n\n  const primaryTextLeft = createTextComponent(\n    TextVariant.bodyLgMedium,\n    FontWeight.Medium,\n    TextColor.textDefault,\n    label,\n  );\n  const secondaryTextLeft = createTextComponent(\n    TextVariant.bodyMd,\n    FontWeight.Normal,\n    TextColor.textAlternative,\n    detail,\n  );\n  const primaryTextRight = value\n    ? createTextComponent(\n        TextVariant.bodyLgMedium,\n        FontWeight.Medium,\n        TextColor.textDefault,\n        value,\n      )\n    : undefined;\n  const secondaryTextRight = fiatValue\n    ? createTextComponent(\n        TextVariant.bodyMd,\n        FontWeight.Normal,\n        TextColor.textAlternative,\n        fiatValue,\n      )\n    : undefined;\n\n  return (\n    <NotificationDetail\n      icon={badgeWrapper}\n      primaryTextLeft={primaryTextLeft}\n      secondaryTextLeft={secondaryTextLeft}\n      primaryTextRight={primaryTextRight}\n      secondaryTextRight={secondaryTextRight}\n    />\n  );\n};\n","export { NotificationDetailBlockExplorerButton } from './notification-detail-block-explorer-button';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport type { NotificationServicesController } from '@metamask/notification-services-controller';\nimport { toHex } from '@metamask/controller-utils';\nimport { getNetworkConfigurationsByChainId } from '../../../selectors';\nimport { CHAIN_IDS } from '../../../../shared/constants/network';\nimport { ButtonVariant } from '../../component-library';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { getNetworkDetailsByChainId } from '../../../helpers/utils/notification.util';\nimport { NotificationDetailButton } from '../notification-detail-button';\n\ntype Notification = NotificationServicesController.Types.INotification;\n\ntype NotificationDetailBlockExplorerButtonProps = {\n  notification: Notification;\n  chainId: number;\n  txHash: string;\n  id: string;\n};\n\nexport const NotificationDetailBlockExplorerButton = ({\n  notification,\n  chainId,\n  txHash,\n  id,\n}: NotificationDetailBlockExplorerButtonProps) => {\n  const t = useI18nContext();\n\n  const chainIdHex = toHex(chainId);\n  const { blockExplorerConfig } = getNetworkDetailsByChainId(\n    chainIdHex as keyof typeof CHAIN_IDS,\n  );\n\n  const networkConfigurations = useSelector(getNetworkConfigurationsByChainId);\n  const networkConfiguration = networkConfigurations[chainIdHex];\n  const configuredBlockExplorer =\n    networkConfiguration?.blockExplorerUrls?.[\n      networkConfiguration.defaultBlockExplorerUrlIndex ?? -1\n    ];\n\n  const blockExplorerUrl = configuredBlockExplorer ?? blockExplorerConfig?.url;\n\n  const getBlockExplorerButtonText = () => {\n    if (configuredBlockExplorer) {\n      return t('notificationItemCheckBlockExplorer');\n    }\n    if (blockExplorerConfig?.name) {\n      return t('notificationTransactionSuccessView', [\n        blockExplorerConfig.name,\n      ]);\n    }\n    return t('notificationItemCheckBlockExplorer');\n  };\n\n  const blockExplorerButtonText = getBlockExplorerButtonText();\n\n  if (!blockExplorerUrl) {\n    return null;\n  }\n\n  return (\n    <NotificationDetailButton\n      notification={notification}\n      variant={ButtonVariant.Secondary}\n      text={blockExplorerButtonText}\n      href={`${blockExplorerUrl}/tx/${txHash}`}\n      id={id}\n      isExternal={true}\n    />\n  );\n};\n","export { NotificationDetailButton } from './notification-detail-button';\n","import React, { useContext } from 'react';\nimport { NotificationServicesController } from '@metamask/notification-services-controller';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport {\n  Button,\n  ButtonVariant,\n  ButtonSize,\n  IconName,\n} from '../../component-library';\nimport { BlockSize } from '../../../helpers/constants/design-system';\n\ntype Notification = NotificationServicesController.Types.INotification;\n\nconst { TRIGGER_TYPES } = NotificationServicesController.Constants;\n\ntype NotificationDetailButtonProps = {\n  notification: Notification;\n  variant: ButtonVariant;\n  text: string;\n  href: string;\n  id: string;\n  isExternal?: boolean;\n  endIconName?: boolean;\n};\n\nexport const NotificationDetailButton = ({\n  notification,\n  variant = ButtonVariant.Secondary,\n  text,\n  href,\n  id,\n  isExternal = false,\n  endIconName = true,\n}: NotificationDetailButtonProps) => {\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const onClick = () => {\n    trackEvent({\n      category: MetaMetricsEventCategory.NotificationInteraction,\n      event: MetaMetricsEventName.NotificationDetailClicked,\n      properties: {\n        notification_id: notification.id,\n        notification_type: notification.type,\n        ...(notification.type !== TRIGGER_TYPES.FEATURES_ANNOUNCEMENT && {\n          chain_id: notification?.chain_id,\n        }),\n        clicked_item: 'block_explorer',\n      },\n    });\n  };\n\n  return (\n    <Button\n      key={id}\n      href={href}\n      variant={variant}\n      externalLink={isExternal}\n      size={ButtonSize.Lg}\n      width={BlockSize.Full}\n      endIconName={endIconName ? IconName.Arrow2UpRight : undefined}\n      onClick={onClick}\n    >\n      {text}\n    </Button>\n  );\n};\n","export { NotificationDetailCollection } from './notification-detail-collection';\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getIpfsGateway, getOpenSeaEnabled } from '../../../selectors';\nimport NftDefaultImage from '../../app/assets/nfts/nft-default-image/nft-default-image';\nimport { isIpfsURL } from '../../../helpers/utils/notification.util';\n\nimport { NotificationDetail } from '../notification-detail';\nimport {\n  AvatarToken,\n  BadgeWrapper,\n  BadgeWrapperPosition,\n  Box,\n  Text,\n  AvatarTokenSize,\n} from '../../component-library';\nimport {\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  Display,\n  FontWeight,\n  JustifyContent,\n  TextVariant,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\ntype IconProps = {\n  src: string;\n  badgeSrc: string;\n};\n\nexport type NotificationDetailCollectionProps = {\n  icon: IconProps;\n  label: string;\n  collection: string;\n};\n\nexport const NotificationDetailCollection: FC<\n  NotificationDetailCollectionProps\n> = ({ icon, label, collection }) => {\n  const { badgeSrc, src } = icon;\n\n  const isIpfsEnabled = useSelector(getIpfsGateway);\n  const openSeaEnabled = useSelector(getOpenSeaEnabled);\n\n  const ipfsImageIsRenderable = isIpfsEnabled && isIpfsURL(src) && src;\n  const openseaImageIsRenderable = openSeaEnabled && src && !isIpfsURL(src);\n\n  const badgeIcon = (\n    <AvatarToken\n      src={badgeSrc}\n      backgroundColor={BackgroundColor.infoDefault}\n      borderColor={BorderColor.backgroundDefault}\n      borderWidth={2}\n      size={AvatarTokenSize.Sm}\n    />\n  );\n\n  const badgeWrapper = (\n    <BadgeWrapper position={BadgeWrapperPosition.topRight} badge={badgeIcon}>\n      {ipfsImageIsRenderable || openseaImageIsRenderable ? (\n        <Box\n          as=\"img\"\n          src={src}\n          display={Display.Block}\n          justifyContent={JustifyContent.center}\n          backgroundColor={BackgroundColor.primaryMuted}\n          borderRadius={BorderRadius.LG}\n          className=\"notification-detail-collection__image\"\n        />\n      ) : (\n        <NftDefaultImage\n          className=\"nft-item__default-image notification-detail-collection__image\"\n          data-testid=\"nft-default-image\"\n          clickable={false}\n        />\n      )}\n    </BadgeWrapper>\n  );\n\n  const createTextComponent = (\n    textVariant: TextVariant,\n    fontWeight: FontWeight,\n    color: TextColor,\n    children: string,\n  ) => (\n    <Text variant={textVariant} fontWeight={fontWeight} color={color}>\n      {children}\n    </Text>\n  );\n\n  const primaryTextLeft = createTextComponent(\n    TextVariant.bodyLgMedium,\n    FontWeight.Medium,\n    TextColor.textDefault,\n    label,\n  );\n  const secondaryTextLeft = createTextComponent(\n    TextVariant.bodyMd,\n    FontWeight.Normal,\n    TextColor.textAlternative,\n    collection,\n  );\n\n  return (\n    <NotificationDetail\n      icon={badgeWrapper}\n      primaryTextLeft={primaryTextLeft}\n      secondaryTextLeft={secondaryTextLeft}\n    />\n  );\n};\n","export { NotificationDetailCopyButton } from './notification-detail-copy-button';\n","import React, { useContext } from 'react';\nimport type { FC } from 'react';\nimport { NotificationServicesController } from '@metamask/notification-services-controller';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport {\n  ButtonBase,\n  IconName,\n  Box,\n  ButtonBaseSize,\n} from '../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  FontWeight,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { useCopyToClipboard } from '../../../hooks/useCopyToClipboard';\nimport Tooltip from '../../ui/tooltip/tooltip';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { MINUTE } from '../../../../shared/constants/time';\n\ntype Notification = NotificationServicesController.Types.INotification;\nconst { TRIGGER_TYPES } = NotificationServicesController.Constants;\n\nexport type NotificationDetailCopyButtonProps = {\n  notification?: Notification;\n  text: string;\n  displayText: string;\n  color?: TextColor;\n};\n\n/**\n * A component to display a button that copies a given text to the clipboard when clicked.\n * The button includes a tooltip that displays a message based on whether the text has been copied or not.\n *\n * @param props - The component props.\n * @param props.notification - The notification object.\n * @param props.text - The text to be copied when the button is clicked.\n * @param props.displayText - The text to be displayed on the button.\n * @param [props.color] - The color of the text.\n * @returns The rendered component.\n */\nexport const NotificationDetailCopyButton: FC<\n  NotificationDetailCopyButtonProps\n> = ({\n  notification,\n  text,\n  displayText,\n  color = TextColor.textAlternative,\n}): JSX.Element => {\n  const [copied, handleCopy] = useCopyToClipboard(MINUTE);\n  const t = useI18nContext();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const tooltipText = copied ? t('copiedExclamation') : t('copyToClipboard');\n  const tooltipTitle = tooltipText;\n\n  const onClick = () => {\n    typeof handleCopy === 'function' && handleCopy(text);\n    if (notification) {\n      trackEvent({\n        category: MetaMetricsEventCategory.NotificationInteraction,\n        event: MetaMetricsEventName.NotificationDetailClicked,\n        properties: {\n          notification_id: notification.id,\n          notification_type: notification.type,\n          ...(notification.type !== TRIGGER_TYPES.FEATURES_ANNOUNCEMENT && {\n            chain_id: notification?.chain_id,\n          }),\n          clicked_item: 'tx_id',\n        },\n      });\n    }\n  };\n\n  return (\n    <Tooltip position=\"bottom\" title={tooltipTitle}>\n      <ButtonBase\n        backgroundColor={BackgroundColor.transparent}\n        onClick={onClick}\n        paddingRight={0}\n        paddingLeft={0}\n        variant={TextVariant.bodyMd}\n        fontWeight={FontWeight.Normal}\n        color={color}\n        endIconName={copied ? IconName.CopySuccess : IconName.Copy}\n        alignItems={AlignItems.center}\n        data-testid=\"address-copy-button-text\"\n        size={ButtonBaseSize.Sm}\n      >\n        <Box display={Display.Flex}>{displayText}</Box>\n      </ButtonBase>\n    </Tooltip>\n  );\n};\n","export { NotificationDetailInfo } from './notification-detail-info';\n","import React from 'react';\nimport type { FC } from 'react';\n\nimport { NotificationDetail } from '../notification-detail';\nimport { AvatarIcon, IconName, Text } from '../../component-library';\nimport {\n  BackgroundColor,\n  FontWeight,\n  TextVariant,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\ntype IconProps = {\n  iconName: IconName;\n  color: TextColor;\n  backgroundColor: BackgroundColor;\n};\n\nexport type NotificationDetailInfoProps = {\n  icon: IconProps;\n  label: string;\n  detail: string;\n  action?: JSX.Element;\n};\n\n/**\n * A component to display a notification detail with an icon, a label, a detail, and an action.\n *\n * @param props - The component props.\n * @param props.icon - The icon to display.\n * @param props.label - The label to display.\n * @param props.detail - The detail to display.\n * @param [props.action] - The action to display.\n * @returns The rendered component.\n */\nexport const NotificationDetailInfo: FC<NotificationDetailInfoProps> = ({\n  icon,\n  label,\n  detail,\n  action,\n}): JSX.Element => {\n  return (\n    <NotificationDetail\n      icon={<AvatarIcon {...icon} />}\n      primaryTextLeft={\n        <Text\n          variant={TextVariant.bodyLgMedium}\n          fontWeight={FontWeight.Medium}\n          color={TextColor.textDefault}\n        >\n          {label}\n        </Text>\n      }\n      secondaryTextLeft={\n        <Text\n          variant={TextVariant.bodyMd}\n          fontWeight={FontWeight.Normal}\n          color={TextColor.textAlternative}\n        >\n          {detail}\n        </Text>\n      }\n      secondaryTextRight={action}\n    />\n  );\n};\n","export { NotificationDetailNetworkFee } from './notification-detail-network-fee';\n","import React, { useContext, useState, useEffect } from 'react';\nimport type { FC } from 'react';\nimport type { NotificationServicesController } from '@metamask/notification-services-controller';\n\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  getNetworkFees,\n  getNetworkDetailsByChainId,\n} from '../../../helpers/utils/notification.util';\nimport { decimalToHex } from '../../../../shared/modules/conversion.utils';\nimport { CHAIN_IDS } from '../../../../shared/constants/network';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\n\nimport { NotificationDetail } from '../notification-detail';\nimport {\n  AvatarIcon,\n  Box,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  FontWeight,\n  JustifyContent,\n  TextVariant,\n  TextColor,\n  BlockSize,\n  IconColor,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\nimport Preloader from '../../ui/icon/preloader/preloader-icon.component';\n\ntype OnChainRawNotificationsWithNetworkFields =\n  NotificationServicesController.Types.OnChainRawNotificationsWithNetworkFields;\n\ntype NetworkFees = {\n  transactionFee: {\n    transactionFeeInEther: string;\n    transactionFeeInUsd: string;\n  };\n  gasLimitUnits: number;\n  gasUsedUnits: number;\n  baseFee: string | null;\n  priorityFee: string | null;\n  maxFeePerGas: string | null;\n} | null;\n\nexport type NotificationDetailNetworkFeeProps = {\n  notification: OnChainRawNotificationsWithNetworkFields;\n};\n\nconst FeeDetail = ({ label, value }: { label: string; value: string }) => (\n  <Box\n    display={Display.Flex}\n    justifyContent={JustifyContent.spaceBetween}\n    padding={4}\n  >\n    <Text\n      color={TextColor.textDefault}\n      variant={TextVariant.bodyMd}\n      fontWeight={FontWeight.Normal}\n    >\n      {label}\n    </Text>\n    <Text\n      color={TextColor.textAlternative}\n      variant={TextVariant.bodyMd}\n      fontWeight={FontWeight.Normal}\n    >\n      {value}\n    </Text>\n  </Box>\n);\n\n/**\n * NotificationDetailNetworkFee component displays the network fee details.\n *\n * @param props - The props object.\n * @param props.notification - The notification object.\n * @returns The NotificationDetailNetworkFee component.\n */\nexport const NotificationDetailNetworkFee: FC<\n  NotificationDetailNetworkFeeProps\n> = ({ notification }) => {\n  const t = useI18nContext();\n  const trackEvent = useContext(MetaMetricsContext);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [networkFees, setNetworkFees] = useState<NetworkFees>(null);\n  const [networkFeesError, setNetworkFeesError] = useState<boolean>(false);\n\n  const getNativeCurrency = (n: OnChainRawNotificationsWithNetworkFields) => {\n    const chainId = decimalToHex(n.chain_id);\n    return getNetworkDetailsByChainId(`0x${chainId}` as keyof typeof CHAIN_IDS);\n  };\n\n  const nativeCurrency = getNativeCurrency(notification);\n\n  useEffect(() => {\n    const fetchNetworkFees = async () => {\n      try {\n        const networkFeesData = await getNetworkFees(notification);\n        if (networkFeesData) {\n          setNetworkFees({\n            transactionFee: {\n              transactionFeeInEther: networkFeesData.transactionFeeInEth,\n              transactionFeeInUsd: networkFeesData.transactionFeeInUsd,\n            },\n            gasLimitUnits: networkFeesData.gasLimit,\n            gasUsedUnits: networkFeesData.gasUsed,\n            baseFee: networkFeesData.baseFee,\n            priorityFee: networkFeesData.priorityFee,\n            maxFeePerGas: networkFeesData.maxFeePerGas,\n          });\n        }\n      } catch (err) {\n        setNetworkFeesError(true);\n      }\n    };\n    fetchNetworkFees();\n  }, []);\n\n  const handleClick = () => {\n    if (!isOpen) {\n      trackEvent({\n        category: MetaMetricsEventCategory.NotificationInteraction,\n        event: MetaMetricsEventName.NotificationDetailClicked,\n        properties: {\n          notification_id: notification.id,\n          notification_type: notification.type,\n          chain_id: notification.chain_id,\n          clicked_item: 'fee_details',\n        },\n      });\n    }\n    setIsOpen(!isOpen);\n  };\n\n  if (!networkFees && !networkFeesError) {\n    return (\n      <Box\n        height={BlockSize.Full}\n        width={BlockSize.Full}\n        display={Display.Flex}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        flexDirection={FlexDirection.Column}\n        data-testid=\"notifications-list-loading\"\n      >\n        <Preloader size={36} />\n      </Box>\n    );\n  }\n\n  if (!networkFees && networkFeesError) {\n    return (\n      <Box\n        height={BlockSize.Full}\n        width={BlockSize.Full}\n        display={Display.Flex}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        flexDirection={FlexDirection.Column}\n        data-testid=\"notifications-list-loading\"\n        paddingTop={4}\n      >\n        <Text\n          as=\"p\"\n          color={TextColor.errorDefault}\n          variant={TextVariant.bodyMd}\n        >\n          {t('notificationItemError')}\n        </Text>\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      width={BlockSize.Full}\n      backgroundColor={BackgroundColor.transparent}\n      padding={0}\n    >\n      <NotificationDetail\n        icon={\n          <AvatarIcon\n            iconName={IconName.Gas}\n            color={TextColor.infoDefault}\n            backgroundColor={BackgroundColor.infoMuted}\n          />\n        }\n        primaryTextLeft={\n          <Text\n            variant={TextVariant.bodyLgMedium}\n            fontWeight={FontWeight.Medium}\n            color={TextColor.textDefault}\n          >\n            {t('notificationDetailNetworkFee')}\n          </Text>\n        }\n        secondaryTextLeft={\n          <Text\n            variant={TextVariant.bodyMd}\n            fontWeight={FontWeight.Normal}\n            color={TextColor.textAlternative}\n          >\n            {networkFees?.transactionFee.transactionFeeInEther}{' '}\n            {nativeCurrency?.nativeCurrencySymbol} (\n            {networkFees?.transactionFee.transactionFeeInUsd} USD)\n          </Text>\n        }\n        secondaryTextRight={\n          <Box\n            paddingLeft={0}\n            paddingRight={0}\n            paddingTop={0}\n            backgroundColor={BackgroundColor.transparent}\n            display={Display.InlineFlex}\n            alignItems={AlignItems.center}\n            justifyContent={JustifyContent.flexEnd}\n            gap={2}\n            as=\"button\"\n            onClick={handleClick}\n          >\n            <Text color={TextColor.primaryDefault} variant={TextVariant.bodyMd}>\n              {t('notificationDetail')}\n            </Text>\n            <Icon\n              name={isOpen ? IconName.ArrowUp : IconName.ArrowDown}\n              color={IconColor.primaryDefault}\n              size={IconSize.Sm}\n              marginInlineEnd={1}\n            />\n          </Box>\n        }\n      />\n      {isOpen && (\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          justifyContent={JustifyContent.flexStart}\n          width={BlockSize.Full}\n        >\n          <FeeDetail\n            label={t('notificationDetailGasLimit')}\n            value={networkFees?.gasLimitUnits.toString() || ''}\n          />\n          <FeeDetail\n            label={t('notificationDetailGasUsed')}\n            value={networkFees?.gasUsedUnits.toString() || ''}\n          />\n          <FeeDetail\n            label={t('notificationDetailBaseFee')}\n            value={networkFees?.baseFee || ''}\n          />\n          <FeeDetail\n            label={t('notificationDetailPriorityFee')}\n            value={networkFees?.priorityFee || ''}\n          />\n          <FeeDetail\n            label={t('notificationDetailMaxFee')}\n            value={networkFees?.maxFeePerGas || ''}\n          />\n        </Box>\n      )}\n    </Box>\n  );\n};\n","export { NotificationDetailNft } from './notification-detail-nft';\n","import React, { FC } from 'react';\nimport { Box } from '../../component-library';\nimport { NftItem } from '../nft-item';\nimport {\n  AlignItems,\n  Display,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\n\nexport type NotificationDetailNftProps = {\n  networkName: string;\n  networkSrc: string;\n  tokenName: string;\n  tokenId: string;\n  tokenSrc: string;\n};\n\n/**\n * A component that renders a notification detail for an NFT.\n *\n * @param props - The component props.\n * @param props.networkSrc - The URL of the badge icon.\n * @param props.tokenId - The ID of the NFT.\n * @param props.tokenName - The name of the NFT.\n * @param props.tokenSrc - The URL of the NFT icon.\n * @param props.networkName - The name of the network.\n * @returns The NotificationDetailNft component.\n */\nexport const NotificationDetailNft: FC<NotificationDetailNftProps> = ({\n  networkSrc,\n  tokenId,\n  tokenName,\n  tokenSrc,\n  networkName,\n}) => (\n  <Box\n    paddingTop={1}\n    paddingBottom={4}\n    display={Display.Flex}\n    alignItems={AlignItems.center}\n    justifyContent={JustifyContent.center}\n  >\n    <Box className=\"notification-detail-nft__image\">\n      <NftItem\n        networkSrc={networkSrc}\n        src={tokenSrc}\n        name={tokenName}\n        alt={tokenName}\n        networkName={networkName}\n        tokenId={tokenId}\n      />\n    </Box>\n  </Box>\n);\n","export { NotificationDetailTitle } from './notification-detail-title';\n","import React from 'react';\nimport type { FC } from 'react';\n\nimport {\n  AlignItems,\n  BlockSize,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextVariant,\n  TextAlign,\n  OverflowWrap,\n} from '../../../helpers/constants/design-system';\nimport { Box, Text } from '../../component-library';\n\nexport type NotificationDetailTitleProps = {\n  title: string;\n  date?: string;\n};\n\n/**\n * NotificationDetailTitle component.\n * This component displays the title and date of a notification.\n *\n * @param props - Component props.\n * @param props.title - The title of the notification.\n * @param props.date - The date of the notification.\n * @returns The NotificationDetailTitle component.\n */\nexport const NotificationDetailTitle: FC<NotificationDetailTitleProps> = ({\n  title,\n  date,\n}): JSX.Element => {\n  return (\n    <Box\n      display={Display.Flex}\n      justifyContent={JustifyContent.center}\n      alignItems={AlignItems.center}\n      width={BlockSize.Full}\n      flexDirection={FlexDirection.Column}\n      paddingInlineStart={8}\n      paddingInlineEnd={8}\n    >\n      <Text\n        variant={TextVariant.headingSm}\n        textAlign={TextAlign.Center}\n        overflowWrap={OverflowWrap.BreakWord}\n      >\n        {title}\n      </Text>\n      <Text variant={TextVariant.bodyXs}>{date}</Text>\n    </Box>\n  );\n};\n","export { NotificationDetail } from './notification-detail';\n","import React from 'react';\nimport type { FC } from 'react';\n\nimport { Box } from '../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n} from '../../../helpers/constants/design-system';\n\nexport type NotificationDetailProps = {\n  icon: JSX.Element;\n  primaryTextLeft: JSX.Element;\n  primaryTextRight?: JSX.Element;\n  secondaryTextLeft: JSX.Element;\n  secondaryTextRight?: JSX.Element;\n};\n\n/**\n * `NotificationDetail` is a component that displays a single notification item.\n *\n * @param props - The properties object.\n * @param props.icon - The icon for the notification.\n * @param props.primaryTextLeft - The primary text for the left side of the notification.\n * @param props.primaryTextRight - The primary text for the right side of the notification.\n * @param props.secondaryTextLeft - The secondary text for the left side of the notification.\n * @param props.secondaryTextRight - The secondary text for the right side of the notification.\n * @returns Returns a notification list item component.\n */\nexport const NotificationDetail: FC<NotificationDetailProps> = ({\n  icon,\n  primaryTextLeft,\n  primaryTextRight,\n  secondaryTextLeft,\n  secondaryTextRight,\n}): JSX.Element => {\n  return (\n    <Box\n      display={Display.Flex}\n      justifyContent={JustifyContent.spaceBetween}\n      alignItems={AlignItems.flexStart}\n      width={BlockSize.Full}\n      paddingBottom={2}\n      paddingRight={4}\n      paddingLeft={4}\n      paddingTop={2}\n      backgroundColor={BackgroundColor.transparent}\n    >\n      <Box\n        display={Display.Flex}\n        gap={4}\n        paddingRight={4}\n        height={BlockSize.Full}\n        alignItems={AlignItems.flexStart}\n      >\n        <Box height={BlockSize.Full} className=\"notification-detail__icon\">\n          {icon}\n        </Box>\n\n        <Box\n          display={Display.Block}\n          flexDirection={FlexDirection.Column}\n          alignItems={AlignItems.flexStart}\n          textAlign={TextAlign.Left}\n        >\n          {/* The item in the left side of the primary row */}\n          {primaryTextLeft}\n          {/* The item in the left side of the secondary row */}\n          {secondaryTextLeft}\n        </Box>\n      </Box>\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={AlignItems.flexEnd}\n        textAlign={TextAlign.Right}\n        className=\"notification-detail__right-container\"\n      >\n        {/* The item in the right side of the primary row */}\n        {primaryTextRight ?? null}\n        {/* The item in the right side of the secondary row */}\n        {secondaryTextRight ?? null}\n      </Box>\n    </Box>\n  );\n};\n","export { NotificationListItemIcon } from './notification-list-item-icon';\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getIpfsGateway, getOpenSeaEnabled } from '../../../selectors';\nimport NftDefaultImage from '../../app/assets/nfts/nft-default-image/nft-default-image';\nimport { isIpfsURL } from '../../../helpers/utils/notification.util';\n\nimport {\n  AvatarIcon,\n  AvatarIconSize,\n  AvatarToken,\n  AvatarTokenSize,\n  BadgeWrapper,\n  BadgeWrapperPosition,\n  Box,\n  IconName,\n  IconSize,\n} from '../../component-library';\nimport {\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  BorderStyle,\n  Display,\n  IconColor,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\n\nexport enum NotificationListItemIconType {\n  Token = 'token',\n  Nft = 'nft',\n}\n\nexport type BadgeProps = {\n  icon: IconName;\n  position?: BadgeWrapperPosition;\n};\n\nexport type NotificationListItemIconProps = {\n  type: NotificationListItemIconType;\n  value: string;\n  badge?: BadgeProps;\n};\n\nconst useNftImageRenderability = (src: string) => {\n  const isIpfsEnabled = useSelector(getIpfsGateway);\n  const openSeaEnabled = useSelector(getOpenSeaEnabled);\n  const isIpfs = isIpfsURL(src);\n\n  const ipfsImageIsRenderable = isIpfsEnabled && isIpfs && src;\n  const openseaImageIsRenderable = openSeaEnabled && src && !isIpfs;\n\n  return { ipfsImageIsRenderable, openseaImageIsRenderable, isIpfs };\n};\n\nconst AvatarTokenComponent = ({ src }: { src: string }): JSX.Element => (\n  <AvatarToken\n    data-testid=\"avatar-token\"\n    src={src}\n    borderStyle={BorderStyle.none}\n    size={AvatarTokenSize.Md}\n  />\n);\n\nconst NftImage = ({ src }: { src: string }): JSX.Element => {\n  const { ipfsImageIsRenderable, openseaImageIsRenderable, isIpfs } =\n    useNftImageRenderability(src);\n\n  return ipfsImageIsRenderable || openseaImageIsRenderable ? (\n    <Box\n      data-testid=\"nft-image\"\n      as=\"img\"\n      src={src}\n      display={Display.Block}\n      justifyContent={JustifyContent.center}\n      backgroundColor={BackgroundColor.primaryMuted}\n      borderRadius={BorderRadius.SM}\n      className=\"notification-list-item-icon__image\"\n    />\n  ) : (\n    <NftDefaultImage\n      className=\"nft-item__default-image notification-list-item-icon__image\"\n      data-testid=\"nft-default-image\"\n      clickable={isIpfs}\n    />\n  );\n};\n\nconst DefaultIcon = (): JSX.Element => (\n  <Box\n    data-testid=\"default-icon\"\n    as=\"img\"\n    display={Display.Block}\n    borderRadius={BorderRadius.SM}\n    backgroundColor={BackgroundColor.backgroundDefault}\n    className=\"notification-list-item-icon__image\"\n  />\n);\n\nconst getBadge = (badge: BadgeProps, children: JSX.Element): JSX.Element => {\n  return (\n    <BadgeWrapper\n      data-testid=\"badge-wrapper\"\n      position={badge.position || BadgeWrapperPosition.bottomRight}\n      badge={\n        <AvatarIcon\n          iconName={badge.icon}\n          size={AvatarIconSize.Sm}\n          backgroundColor={BackgroundColor.infoDefault}\n          borderColor={BorderColor.backgroundDefault}\n          borderWidth={2}\n          iconProps={{\n            name: badge.icon,\n            color: IconColor.infoInverse,\n            size: IconSize.Xs,\n          }}\n        />\n      }\n    >\n      {children}\n    </BadgeWrapper>\n  );\n};\n\nconst iconComponents = {\n  [NotificationListItemIconType.Token]: AvatarTokenComponent,\n  [NotificationListItemIconType.Nft]: ({ src }: { src: string }) => (\n    <NftImage src={src} />\n  ),\n  default: DefaultIcon,\n};\n\n/**\n * Renders a notification list item icon.\n *\n * @param props - The properties object.\n * @param props.type - The type of the notification item icon.\n * @param props.value - The value of the notification item icon.\n * @param props.badge - The badge of the notification item icon.\n * @returns A JSX element.\n */\nexport const NotificationListItemIcon: FC<NotificationListItemIconProps> = ({\n  type,\n  value,\n  badge,\n}): JSX.Element => {\n  const IconComponent = iconComponents[type] || iconComponents.default;\n  const NotificationIcon = <IconComponent src={value} />;\n\n  return (\n    <>\n      {badge ? (\n        getBadge(badge, NotificationIcon)\n      ) : (\n        <Box borderRadius={BorderRadius.XL}>{NotificationIcon}</Box>\n      )}\n    </>\n  );\n};\n","export { NotificationListItemSnap } from './notification-list-item-snap';\n","import React from 'react';\n\nimport { Box, Icon, IconName, Text, IconSize } from '../../component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  BackgroundColor,\n  Display,\n  FlexDirection,\n  FontWeight,\n  JustifyContent,\n  IconColor,\n  TextColor,\n  TextVariant,\n  TextAlign,\n} from '../../../helpers/constants/design-system';\nimport type { NotificationListItemTextProps } from '../notification-list-item-text/notification-list-item-text';\nimport { NotificationListItemText } from '../notification-list-item-text';\nimport { formatMenuItemDate } from '../../../helpers/utils/notification.util';\nimport { SnapUIMarkdown } from '../../app/snaps/snap-ui-markdown';\nimport { SnapIcon } from '../../app/snaps/snap-icon';\n\nexport type NotificationListItemSnapProps = {\n  id: string;\n  snapId: string;\n  isRead: boolean;\n  title: NotificationListItemTextProps;\n  snapMessage: string;\n  createdAt: Date;\n  handleSnapClick?: () => void;\n  handleSnapButton?: () => void;\n};\n\n/**\n * `NotificationListItem` is a component that displays a single notification item.\n *\n * @param props - The properties object.\n * @param props.isRead - Indicates whether the notification has been read.\n * @param props.title - The title of the notification.\n * @param props.createdAt - The date of the notification.\n * @param props.id - The id of the notification.\n * @param props.snapId - The id of the Snap that created the notification.\n * @param props.handleSnapClick - The function to call when the notification is clicked.\n * @param props.handleSnapButton - The function to call when the snap button is clicked.\n * @param props.snapMessage - The snap message to display on the notification.\n * @returns Returns a notification list item component.\n */\nexport const NotificationListItemSnap = ({\n  id,\n  isRead,\n  title,\n  snapMessage,\n  createdAt,\n  snapId,\n  handleSnapClick,\n  handleSnapButton,\n}: NotificationListItemSnapProps) => {\n  const handleClick = () => {\n    handleSnapClick?.();\n  };\n\n  const handleButtonClick = () => {\n    handleSnapButton?.();\n  };\n\n  return (\n    <Box\n      className={`notification-list-item ${\n        isRead ? '' : 'notification-list-item--unread'\n      }`}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      justifyContent={JustifyContent.spaceBetween}\n      alignItems={AlignItems.flexStart}\n      width={BlockSize.Full}\n      paddingBottom={3}\n      paddingRight={5}\n      paddingLeft={5}\n      paddingTop={3}\n      key={id}\n      onClick={handleClick}\n      style={{ cursor: 'pointer' }}\n    >\n      <Box\n        display={Display.Flex}\n        justifyContent={JustifyContent.spaceBetween}\n        flexDirection={FlexDirection.Row}\n        alignItems={AlignItems.flexStart}\n        width={BlockSize.Full}\n        backgroundColor={BackgroundColor.transparent}\n        gap={4}\n        height={BlockSize.Full}\n        style={{ paddingLeft: '6px', paddingRight: '6px', paddingTop: '2px' }}\n      >\n        {!isRead && (\n          <Box\n            display={Display.Block}\n            className=\"notification-list-item__unread-dot__wrapper--snap\"\n          >\n            <Icon\n              name={IconName.FullCircle}\n              color={IconColor.primaryDefault}\n              className=\"notification-list-item__unread-dot__dot\"\n              data-testid=\"unread-dot\"\n            />\n          </Box>\n        )}\n\n        <Box height={BlockSize.Full} className=\"notification-list-item__icon\">\n          <SnapIcon snapId={snapId} avatarSize={IconSize.Md} />\n        </Box>\n\n        <Box\n          display={Display.Flex}\n          gap={4}\n          height={BlockSize.Full}\n          alignItems={AlignItems.flexStart}\n          width={BlockSize.Full}\n        >\n          <Box\n            display={Display.Block}\n            flexDirection={FlexDirection.Column}\n            alignItems={AlignItems.flexStart}\n            textAlign={TextAlign.Left}\n            width={BlockSize.Full}\n          >\n            <Box\n              display={Display.Flex}\n              flexDirection={FlexDirection.Row}\n              alignItems={AlignItems.flexStart}\n              justifyContent={JustifyContent.spaceBetween}\n            >\n              {/* Notification Title */}\n              <Box onClick={handleButtonClick}>\n                <NotificationListItemText\n                  {...title}\n                  color={TextColor.primaryDefault}\n                />\n              </Box>\n\n              {/* Date */}\n              <Text\n                color={TextColor.textMuted}\n                variant={TextVariant.bodySm}\n                fontWeight={FontWeight.Normal}\n                as=\"p\"\n              >\n                {formatMenuItemDate(createdAt)}\n              </Text>\n            </Box>\n\n            {/* Snap Message */}\n            <Box\n              color={TextColor.textDefault}\n              className=\"snap-notifications__item__details__message\"\n            >\n              <SnapUIMarkdown markdown>{snapMessage}</SnapUIMarkdown>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","export { NotificationListItemText } from './notification-list-item-text';\n","import React, { FC } from 'react';\n\nimport { Text } from '../../component-library';\nimport {\n  FontWeight,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { getRandomKey } from '../../../helpers/utils/notification.util';\n\nexport type NotificationListItemTextItemProps = {\n  text: string;\n  highlighted?: boolean;\n};\n\nexport type NotificationListItemTextProps = {\n  items: NotificationListItemTextItemProps[];\n  variant?: TextVariant;\n  color?: TextColor;\n};\n\n/**\n * A component to render a list of notification item titles\n *\n * @param props - The properties of the component\n * @param props.items - The list of items to render\n * @param props.variant - The text variant of the component\n * @param props.color - The text color of the component\n * @returns A JSX element\n */\nexport const NotificationListItemText: FC<NotificationListItemTextProps> = ({\n  items,\n  variant = TextVariant.bodySm,\n  color = TextColor.textDefault,\n}) => {\n  const renderItems = items.map(({ text, highlighted }, index) => {\n    const key = getRandomKey(text, index);\n    const textColor = highlighted ? TextColor.infoDefault : color;\n    const separator = index !== items.length - 1 && ' ';\n\n    return (\n      <Text\n        key={key}\n        as=\"span\"\n        variant={TextVariant.inherit}\n        fontWeight={FontWeight.Normal}\n        color={textColor}\n      >\n        {text}\n        {separator}\n      </Text>\n    );\n  });\n\n  return (\n    <Text as=\"p\" variant={variant}>\n      {renderItems}\n    </Text>\n  );\n};\n","export { NotificationListItem } from './notification-list-item';\n","import React from 'react';\n\nimport { Box, Icon, IconName, Text } from '../../component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  BackgroundColor,\n  Display,\n  FlexDirection,\n  FontWeight,\n  JustifyContent,\n  IconColor,\n  TextColor,\n  TextVariant,\n  TextAlign,\n} from '../../../helpers/constants/design-system';\nimport type { NotificationListItemIconProps } from '../notification-list-item-icon/notification-list-item-icon';\nimport type { NotificationListItemTextProps } from '../notification-list-item-text/notification-list-item-text';\nimport { NotificationListItemIcon } from '../notification-list-item-icon';\nimport { NotificationListItemText } from '../notification-list-item-text';\nimport { formatMenuItemDate } from '../../../helpers/utils/notification.util';\n\nexport type NotificationListItemProps = {\n  id: string;\n  isRead: boolean;\n  icon: NotificationListItemIconProps;\n  title: NotificationListItemTextProps;\n  description: NotificationListItemTextProps;\n  createdAt: Date;\n  amount?: string;\n  onClick?: () => void;\n};\n\n/**\n * `NotificationListItem` is a component that displays a single notification item.\n *\n * @param props - The properties object.\n * @param props.isRead - Indicates whether the notification has been read.\n * @param props.icon - The icon of the notification.\n * @param props.title - The title of the notification.\n * @param props.description - The description of the notification.\n * @param props.createdAt - The date of the notification.\n * @param props.amount - The amount associated with the notification, if applicable.\n * @param props.id - The id of the notification.\n * @param props.onClick - The function to call when the notification is clicked.\n * @returns Returns a notification list item component.\n */\nexport const NotificationListItem = ({\n  id,\n  isRead,\n  icon,\n  title,\n  description,\n  createdAt,\n  amount,\n  onClick,\n}: NotificationListItemProps) => {\n  const handleClick = () => {\n    onClick?.();\n  };\n\n  return (\n    <Box\n      className={`notification-list-item ${\n        isRead ? '' : 'notification-list-item--unread'\n      }`}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      justifyContent={JustifyContent.spaceBetween}\n      alignItems={AlignItems.flexStart}\n      width={BlockSize.Full}\n      paddingBottom={3}\n      paddingRight={5}\n      paddingLeft={5}\n      paddingTop={3}\n      key={id}\n    >\n      <Box\n        display={Display.Flex}\n        justifyContent={JustifyContent.spaceBetween}\n        flexDirection={FlexDirection.Row}\n        alignItems={AlignItems.flexStart}\n        as=\"button\"\n        onClick={handleClick}\n        width={BlockSize.Full}\n        backgroundColor={BackgroundColor.transparent}\n      >\n        {!isRead && (\n          <Box\n            display={Display.Block}\n            className=\"notification-list-item__unread-dot__wrapper\"\n          >\n            <Icon\n              name={IconName.FullCircle}\n              color={IconColor.primaryDefault}\n              className=\"notification-list-item__unread-dot__dot\"\n              data-testid=\"unread-dot\"\n            />\n          </Box>\n        )}\n\n        <Box\n          display={Display.Flex}\n          gap={4}\n          paddingRight={4}\n          height={BlockSize.Full}\n          alignItems={AlignItems.flexStart}\n        >\n          <Box height={BlockSize.Full} className=\"notification-list-item__icon\">\n            <NotificationListItemIcon {...icon} />\n          </Box>\n\n          <Box\n            display={Display.Block}\n            flexDirection={FlexDirection.Column}\n            alignItems={AlignItems.flexStart}\n            textAlign={TextAlign.Left}\n            width={BlockSize.Full}\n          >\n            {/* Notification Title */}\n            <NotificationListItemText\n              {...title}\n              color={TextColor.textAlternative}\n            />\n            {/* Notification Description */}\n            <NotificationListItemText {...description} />\n          </Box>\n        </Box>\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          alignItems={AlignItems.flexEnd}\n          textAlign={TextAlign.Right}\n          className=\"notification-list-item__right-container\"\n        >\n          {/* Date */}\n          <Text\n            color={TextColor.textMuted}\n            variant={TextVariant.bodySm}\n            fontWeight={FontWeight.Normal}\n            as=\"p\"\n          >\n            {formatMenuItemDate(createdAt)}\n          </Text>\n          {/* Amount */}\n          {amount && (\n            <Text\n              color={TextColor.textDefault}\n              variant={TextVariant.bodyMd}\n              fontWeight={FontWeight.Normal}\n              as=\"p\"\n            >\n              {amount}\n            </Text>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","export { NotificationsPage } from './notifications-page';\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box } from '../../component-library';\nimport {\n  AlignItems,\n  Display,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\nimport MetafoxLogo from '../../ui/metafox-logo';\nimport {\n} from '../../../selectors';\nimport { DEFAULT_ROUTE } from '../../../helpers/constants/routes';\n\nimport { Page } from '../pages/page';\n\nexport type NotificationsPageProps = {\n  children: React.ReactNode;\n};\n\nexport function NotificationsPage({ children }: NotificationsPageProps) {\n  const history = useHistory();\n\n\n  return (\n    <div className=\"main-container\" data-testid=\"notifications-page\">\n      <Box\n        display={[Display.None, Display.Flex]}\n        alignItems={AlignItems.center}\n        margin={2}\n        className=\"multichain-app-header-logo\"\n        data-testid=\"app-header-logo\"\n        justifyContent={JustifyContent.center}\n      >\n        <MetafoxLogo\n          unsetIconHeight\n          onClick={() => history.push(DEFAULT_ROUTE)}\n        />\n      </Box>\n      <Page>{children}</Page>\n    </div>\n  );\n}\n","export { NotificationsSettingsAccount } from './notifications-settings-account';\n","import React from 'react';\nimport { toChecksumHexAddress } from '@metamask/controller-utils';\nimport { AvatarAccount, Box, Text } from '../../component-library';\nimport {\n  BlockSize,\n  Display,\n  JustifyContent,\n  FlexDirection,\n  AlignItems,\n  TextVariant,\n  TextAlign,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport { shortenAddress } from '../../../helpers/utils/util';\n\nexport type NotificationsSettingsAccountProps = {\n  address: string;\n  name?: string;\n};\n\nexport function NotificationsSettingsAccount({\n  address,\n  name,\n}: NotificationsSettingsAccountProps) {\n  const checksumAddress = toChecksumHexAddress(address);\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      alignItems={AlignItems.center}\n      gap={4}\n    >\n      <AvatarAccount address={checksumAddress} />\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={AlignItems.flexStart}\n        justifyContent={JustifyContent.spaceBetween}\n        width={BlockSize.Full}\n      >\n        <Text variant={TextVariant.bodyLgMedium} textAlign={TextAlign.Left}>\n          {name ?? checksumAddress}\n        </Text>\n        <Text\n          variant={TextVariant.bodyMd}\n          textAlign={TextAlign.Left}\n          color={TextColor.textAlternative}\n        >\n          {shortenAddress(checksumAddress)}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n","export { NotificationsSettingsBox } from './notifications-settings-box';\n","import React from 'react';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { Box, Text } from '../../component-library';\nimport ToggleButton from '../../ui/toggle-button';\nimport {\n  BlockSize,\n  Display,\n  JustifyContent,\n  FlexDirection,\n  AlignItems,\n  TextColor,\n  TextAlign,\n} from '../../../helpers/constants/design-system';\nimport Preloader from '../../ui/icon/preloader/preloader-icon.component';\n\nexport type NotificationsSettingsBoxProps = {\n  children?: React.ReactNode;\n  value: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n  error?: string | null;\n  onToggle: () => void;\n};\n\nexport function NotificationsSettingsBox({\n  children,\n  value,\n  loading = false,\n  disabled = false,\n  error = null,\n  onToggle,\n}: NotificationsSettingsBoxProps) {\n  const t = useI18nContext();\n\n  return (\n    <Box width={BlockSize.Full}>\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.spaceBetween}\n        width={BlockSize.Full}\n        gap={4}\n        className=\"notifications-settings-box\"\n      >\n        {children}\n        <Box className=\"notifications-settings-box__toggle\">\n          {loading ? (\n            <Box textAlign={TextAlign.Right}>\n              <Preloader size={24} />\n            </Box>\n          ) : (\n            <ToggleButton\n              value={value}\n              onToggle={onToggle}\n              disabled={disabled}\n              dataTestId=\"test-toggle\"\n              className=\"notifications-settings-box__toggle\"\n            />\n          )}\n        </Box>\n      </Box>\n      {error && (\n        <Box paddingTop={0}>\n          <Text as=\"p\" color={TextColor.errorDefault} paddingTop={2}>\n            {t('notificationsSettingsBoxError')}\n          </Text>\n        </Box>\n      )}\n    </Box>\n  );\n}\n","export { NotificationsSettingsType } from './notifications-settings-type';\n","import React from 'react';\nimport { Box, Icon, IconName, IconSize, Text } from '../../component-library';\nimport {\n  BlockSize,\n  Display,\n  JustifyContent,\n  FlexDirection,\n  AlignItems,\n  TextVariant,\n  TextAlign,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\nexport type NotificationsSettingsTypeProps = {\n  icon?: IconName;\n  title: string;\n  text?: string;\n};\n\nexport function NotificationsSettingsType({\n  icon,\n  title,\n  text,\n}: NotificationsSettingsTypeProps) {\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      alignItems={AlignItems.center}\n      gap={4}\n    >\n      {icon && <Icon name={icon} size={IconSize.Lg} data-testid=\"icon\" />}\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={AlignItems.stretch}\n        justifyContent={JustifyContent.spaceBetween}\n        width={BlockSize.Full}\n      >\n        <Text variant={TextVariant.bodyLgMedium} textAlign={TextAlign.Left}>\n          {title}\n        </Text>\n        {text && (\n          <Text\n            variant={TextVariant.bodyMd}\n            textAlign={TextAlign.Left}\n            color={TextColor.textAlternative}\n          >\n            {text}\n          </Text>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","export { NotificationsTagCounter } from './notifications-tag-counter';\n","import React from 'react';\nimport { useUnreadNotificationsCounter } from '../../../hooks/metamask-notifications/useCounter';\nimport { Box, Text } from '../../component-library';\nimport {\n  BackgroundColor,\n  BorderRadius,\n  BorderStyle,\n  Display,\n  TextColor,\n  TextVariant,\n  TextAlign,\n} from '../../../helpers/constants/design-system';\n\ntype NotificationsTagCounterProps = {\n  noLabel?: boolean;\n};\n\nexport const NotificationsTagCounter = ({\n  noLabel = false,\n}: NotificationsTagCounterProps) => {\n  const { notificationsUnreadCount } = useUnreadNotificationsCounter();\n\n  if (notificationsUnreadCount === 0) {\n    return null;\n  }\n\n  if (noLabel) {\n    return (\n      <Box\n        display={Display.Block}\n        className=\"notification-list-item__unread-dot__wrapper\"\n        style={{\n          position: 'absolute',\n          cursor: 'pointer',\n          top: '-5px',\n          left: '10px',\n          zIndex: 1,\n        }}\n        backgroundColor={BackgroundColor.errorDefault}\n        borderStyle={BorderStyle.none}\n        borderRadius={BorderRadius.LG}\n        paddingTop={0}\n        paddingBottom={0}\n        paddingLeft={0}\n        paddingRight={0}\n      >\n        <Text\n          color={TextColor.errorInverse}\n          variant={TextVariant.bodyXs}\n          className=\"notifications-tag-counter__unread-dot\"\n          textAlign={TextAlign.Center}\n        >\n          {notificationsUnreadCount > 10 ? '9+' : notificationsUnreadCount}\n        </Text>\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      backgroundColor={BackgroundColor.errorDefault}\n      borderStyle={BorderStyle.none}\n      borderRadius={BorderRadius.LG}\n      paddingTop={0}\n      paddingBottom={0}\n      className=\"notifications-tag-counter\"\n    >\n      <Text\n        color={TextColor.errorInverse}\n        variant={TextVariant.bodySm}\n        data-testid=\"global-menu-notification-count\"\n        className=\"notifications-tag-counter__text\"\n        textAlign={TextAlign.Center}\n      >\n        {notificationsUnreadCount > 10 ? '9+' : notificationsUnreadCount}\n      </Text>\n    </Box>\n  );\n};\n","import React from 'react';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { Box, Text } from '../../../../component-library';\n\nexport const NoConnectionContent = () => {\n  const t = useI18nContext();\n  return (\n    <Box\n      className=\"connections-page__no-site-connected-content\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.center}\n      gap={2}\n      paddingLeft={4}\n      paddingRight={4}\n    >\n      <Text variant={TextVariant.bodyMdMedium} textAlign={TextAlign.Center}>\n        {t('noConnectedAccountTitle')}\n      </Text>\n\n      <Text variant={TextVariant.bodyMd} textAlign={TextAlign.Center}>\n        {t('noConnectedAccountDescription')}\n      </Text>\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { NonEmptyArray } from '@metamask/utils';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { CONNECT_ROUTE } from '../../../../helpers/constants/routes';\nimport { getURLHost } from '../../../../helpers/utils/util';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  getConnectedSitesList,\n  getInternalAccounts,\n  getOrderedConnectedAccountsForConnectedDapp,\n  getPermissionSubjects,\n  getPermittedAccountsByOrigin,\n  getPermittedAccountsForSelectedTab,\n  getSelectedAccount,\n  getSubjectMetadata,\n  getUnconnectedAccounts,\n} from '../../../../selectors';\nimport {\n  AvatarFavicon,\n  AvatarFaviconSize,\n  Box,\n  Button,\n  ButtonIcon,\n  ButtonIconSize,\n  ButtonPrimary,\n  ButtonPrimarySize,\n  ButtonSize,\n  ButtonVariant,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../component-library';\nimport { mergeAccounts } from '../../account-list-menu/account-list-menu';\nimport {\n  AccountListItem,\n  AccountListItemMenuTypes,\n  Toast,\n  ToastContainer,\n} from '../..';\nimport { Content, Footer, Header, Page } from '../page';\nimport { ConnectAccountsModal } from '../../connect-accounts-modal/connect-accounts-modal';\nimport {\n  requestAccountsPermissionWithId,\n  removePermissionsFor,\n} from '../../../../store/actions';\nimport {\n  DisconnectAllModal,\n  DisconnectType,\n} from '../../disconnect-all-modal/disconnect-all-modal';\nimport {\n  AccountType,\n  ConnectedSites,\n  SubjectsType,\n} from './components/connections.types';\nimport { NoConnectionContent } from './components/no-connection';\n\nexport const Connections = () => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [showConnectAccountsModal, setShowConnectAccountsModal] =\n    useState(false);\n  const [showDisconnectAllModal, setShowDisconnectAllModal] = useState(false);\n  const [showAccountDisconnectedToast, setShowAccountDisconnectedToast] =\n    useState(''); // This is not boolean because we need the account name from the menu when a single account is disconnected\n  const [\n    showConnectedAccountsUpdatedToast,\n    setShowConnectedAccountsUpdatedToast,\n  ] = useState(false);\n  const [\n    showDisconnectedAllAccountsUpdatedToast,\n    setShowDisconnectedAllAccountsUpdatedToast,\n  ] = useState(false);\n\n  const urlParams: { origin: string } = useParams();\n  const securedOrigin = decodeURIComponent(urlParams.origin);\n\n  const activeTabOrigin: string = securedOrigin;\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const subjectMetadata: { [key: string]: any } = useSelector(\n    getConnectedSitesList,\n  );\n  const siteMetadata = useSelector(getSubjectMetadata);\n  const connectedSiteMetadata = siteMetadata[activeTabOrigin];\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { openMetaMaskTabs } = useSelector((state: any) => state.appState);\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { id } = useSelector((state: any) => state.activeTab);\n  const unconnectedAccounts = useSelector((state) =>\n    getUnconnectedAccounts(state, activeTabOrigin),\n  );\n  const connectedAccounts = useSelector((state) =>\n    getOrderedConnectedAccountsForConnectedDapp(state, activeTabOrigin),\n  );\n  const selectedAccount = useSelector(getSelectedAccount);\n  const internalAccounts = useSelector(getInternalAccounts);\n  const mergedAccounts = mergeAccounts(\n    connectedAccounts,\n    internalAccounts,\n  ) as AccountType[];\n\n  const permittedAccountsByOrigin = useSelector(\n    getPermittedAccountsByOrigin,\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) as { [key: string]: any[] };\n  const subjects = useSelector(getPermissionSubjects);\n  const currentTabHasNoAccounts =\n    !permittedAccountsByOrigin[activeTabOrigin]?.length;\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let tabToConnect: { origin: any } = { origin: null };\n  if (activeTabOrigin && currentTabHasNoAccounts && !openMetaMaskTabs[id]) {\n    tabToConnect = {\n      origin: activeTabOrigin,\n    };\n  }\n  const requestAccountsPermission = async () => {\n    const requestId = await dispatch(\n      requestAccountsPermissionWithId(tabToConnect.origin),\n    );\n    history.push(`${CONNECT_ROUTE}/${requestId}`);\n  };\n  const connectedSubjectsMetadata = subjectMetadata[activeTabOrigin];\n\n  const permittedAccounts = useSelector((state) =>\n    getPermittedAccountsForSelectedTab(state, activeTabOrigin),\n  );\n\n  const disconnectAllAccounts = () => {\n    const subject = (subjects as SubjectsType)[activeTabOrigin];\n\n    if (subject) {\n      const permissionMethodNames = Object.values(subject.permissions).map(\n        ({ parentCapability }: { parentCapability: string }) =>\n          parentCapability,\n      ) as string[];\n      if (permissionMethodNames.length > 0) {\n        const permissionsRecord: Record<string, string[]> = {\n          [activeTabOrigin]: permissionMethodNames,\n        };\n\n        dispatch(\n          removePermissionsFor(\n            permissionsRecord as Record<string, NonEmptyArray<string>>,\n          ),\n        );\n      }\n\n      setShowDisconnectAllModal(false);\n      setShowDisconnectedAllAccountsUpdatedToast(true);\n    }\n  };\n\n  // In the mergeAccounts, we need the lastSelected value to determine which connectedAccount was last selected.\n  const latestSelected = mergedAccounts.findIndex(\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (_account: any, index: any) => {\n      return (\n        index ===\n        mergedAccounts.reduce(\n          (\n            indexOfAccountWIthHighestLastSelected: number,\n            currentAccountToCompare: AccountType,\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            i: any,\n          ) => {\n            const currentLastSelected =\n              currentAccountToCompare.metadata.lastSelected ?? 0;\n            const accountAtIndexLastSelected = mergedAccounts[\n              indexOfAccountWIthHighestLastSelected\n            ].metadata.lastSelected\n              ? i\n              : indexOfAccountWIthHighestLastSelected;\n\n            return currentLastSelected > accountAtIndexLastSelected\n              ? i\n              : indexOfAccountWIthHighestLastSelected;\n          },\n          0,\n        )\n      );\n    },\n  );\n\n  return (\n    <Page\n      data-testid=\"connections-page\"\n      className=\"main-container connections-page\"\n    >\n      <Header\n        backgroundColor={BackgroundColor.backgroundDefault}\n        startAccessory={\n          <ButtonIcon\n            ariaLabel={t('back')}\n            iconName={IconName.ArrowLeft}\n            className=\"connections-header__start-accessory\"\n            color={IconColor.iconDefault}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onClick={() => (history as any).goBack()}\n            size={ButtonIconSize.Sm}\n          />\n        }\n      >\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          gap={2}\n          justifyContent={JustifyContent.center}\n          className=\"connections-header__title\"\n        >\n          {connectedSubjectsMetadata?.iconUrl ? (\n            <AvatarFavicon\n              name={connectedSubjectsMetadata.name}\n              size={AvatarFaviconSize.Sm}\n              src={connectedSubjectsMetadata.iconUrl}\n            />\n          ) : (\n            <Icon\n              name={IconName.Global}\n              size={IconSize.Sm}\n              color={IconColor.iconDefault}\n            />\n          )}\n          <Text\n            as=\"span\"\n            variant={TextVariant.headingMd}\n            textAlign={TextAlign.Center}\n            ellipsis\n          >\n            {getURLHost(securedOrigin)}\n          </Text>\n        </Box>\n      </Header>\n      <Content padding={0}>\n        {permittedAccounts.length > 0 && mergeAccounts.length > 0 ? (\n          <Box>\n            {/* TODO: Replace `any` with type */}\n            {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n            {mergedAccounts.map((account: AccountType, index: any) => {\n              const connectedSites: ConnectedSites = {};\n              const connectedSite = connectedSites[account.address]?.find(\n                ({ origin }) => origin === activeTabOrigin,\n              );\n              const isSelectedAccount =\n                selectedAccount.address === account.address;\n              // Match the index of latestSelected Account with the index of all the accounts and set the active status\n              const mergedAccountsProps = {\n                ...account,\n                isAccountActive: index === latestSelected,\n              };\n              return (\n                <AccountListItem\n                  account={mergedAccountsProps}\n                  key={account.address}\n                  accountsCount={mergedAccounts.length}\n                  selected={isSelectedAccount}\n                  connectedAvatar={connectedSite?.iconUrl}\n                  menuType={AccountListItemMenuTypes.Connection}\n                  currentTabOrigin={activeTabOrigin}\n                  isActive={\n                    mergedAccountsProps.isAccountActive ? t('active') : null\n                  }\n                  onActionClick={setShowAccountDisconnectedToast}\n                />\n              );\n            })}\n          </Box>\n        ) : (\n          <NoConnectionContent />\n        )}\n        {showConnectAccountsModal ? (\n          <ConnectAccountsModal\n            onClose={() => setShowConnectAccountsModal(false)}\n            onAccountsUpdate={() => setShowConnectedAccountsUpdatedToast(true)}\n            activeTabOrigin={activeTabOrigin}\n          />\n        ) : null}\n        {showDisconnectAllModal ? (\n          <DisconnectAllModal\n            type={DisconnectType.Account}\n            hostname={activeTabOrigin}\n            onClose={() => setShowDisconnectAllModal(false)}\n            onClick={() => disconnectAllAccounts()}\n          />\n        ) : null}\n      </Content>\n      <Footer>\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          width={BlockSize.Full}\n          gap={4}\n        >\n          {showConnectedAccountsUpdatedToast ? (\n            <ToastContainer>\n              <Toast\n                text={t('connectedAccountsToast')}\n                onClose={() => setShowConnectedAccountsUpdatedToast(false)}\n                startAdornment={\n                  <AvatarFavicon\n                    name={connectedSubjectsMetadata?.name}\n                    size={AvatarFaviconSize.Sm}\n                    src={connectedSubjectsMetadata?.iconUrl}\n                  />\n                }\n              />\n            </ToastContainer>\n          ) : null}\n          {showDisconnectedAllAccountsUpdatedToast ? (\n            <ToastContainer>\n              <Toast\n                text={t('disconnectedAllAccountsToast', [\n                  getURLHost(activeTabOrigin),\n                ])}\n                onClose={() =>\n                  setShowDisconnectedAllAccountsUpdatedToast(false)\n                }\n                startAdornment={\n                  <AvatarFavicon\n                    name={connectedSiteMetadata?.name}\n                    size={AvatarFaviconSize.Sm}\n                    src={connectedSiteMetadata?.iconUrl}\n                  />\n                }\n              />\n            </ToastContainer>\n          ) : null}\n          {showAccountDisconnectedToast.length > 0 ? (\n            <ToastContainer>\n              <Toast\n                text={t('disconnectedSingleAccountToast', [\n                  showAccountDisconnectedToast,\n                  getURLHost(activeTabOrigin),\n                ])}\n                onClose={() => setShowAccountDisconnectedToast('')}\n                startAdornment={\n                  <AvatarFavicon\n                    name={connectedSiteMetadata?.name}\n                    size={AvatarFaviconSize.Sm}\n                    src={connectedSiteMetadata?.iconUrl}\n                  />\n                }\n              />\n            </ToastContainer>\n          ) : null}\n          {permittedAccounts.length > 0 && mergeAccounts.length > 0 ? (\n            <Box\n              display={Display.Flex}\n              gap={2}\n              flexDirection={FlexDirection.Column}\n              width={BlockSize.Full}\n              data-test-id=\"connections-button\"\n            >\n              <Button\n                size={ButtonSize.Lg}\n                block\n                variant={ButtonVariant.Secondary}\n                disabled={unconnectedAccounts.length === 0}\n                startIconName={IconName.Add}\n                onClick={() => setShowConnectAccountsModal(true)}\n              >\n                {t('connectMoreAccounts')}\n              </Button>\n              <Button\n                size={ButtonSize.Lg}\n                block\n                variant={ButtonVariant.Secondary}\n                startIconName={IconName.Logout}\n                danger\n                onClick={() => setShowDisconnectAllModal(true)}\n              >\n                {t('disconnectAllAccounts')}\n              </Button>\n            </Box>\n          ) : (\n            <ButtonPrimary\n              size={ButtonPrimarySize.Lg}\n              block\n              data-test-id=\"no-connections-button\"\n              onClick={() => dispatch(requestAccountsPermission())}\n            >\n              {t('connectAccounts')}\n            </ButtonPrimary>\n          )}\n        </Box>\n      </Footer>\n    </Page>\n  );\n};\n","export { Connections } from './connections';\n","export { Connections } from './connections';\nexport { PermissionsPage } from './permissions-page/permissions-page';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Box } from '../../../../../component-library';\nimport {\n  BlockSize,\n  Display,\n  FlexDirection,\n} from '../../../../../../helpers/constants/design-system';\nimport type { StyleUtilityProps } from '../../../../../component-library/box';\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ninterface ContentProps extends StyleUtilityProps {\n  /**\n   * Elements that go in the page content section\n   */\n  children: React.ReactNode | React.ReactNode[];\n  /**\n   * Additional CSS class provided to the content\n   */\n  className?: string;\n}\n\nexport const Content = ({\n  children,\n  className = '',\n  ...props\n}: ContentProps) => {\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      width={BlockSize.Full}\n      padding={4}\n      height={BlockSize.Full}\n      className={classnames('multichain-page-content', className)}\n      {...props}\n    >\n      {children}\n    </Box>\n  );\n};\n","export { Content } from './content';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Box } from '../../../../../component-library';\nimport {\n  BlockSize,\n  Display,\n} from '../../../../../../helpers/constants/design-system';\n\nimport type { StyleUtilityProps } from '../../../../../component-library/box';\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ninterface FooterProps extends StyleUtilityProps {\n  /**\n   * Elements that go in the page footer\n   */\n  children: React.ReactNode | React.ReactNode[];\n  /**\n   * Additional CSS class provided to the footer\n   */\n  className?: string;\n}\n\nexport const Footer = ({ children, className = '', ...props }: FooterProps) => {\n  return (\n    <Box\n      padding={4}\n      display={Display.Flex}\n      width={BlockSize.Full}\n      gap={4}\n      className={classnames('multichain-page-footer', className)}\n      {...props}\n    >\n      {children}\n    </Box>\n  );\n};\n","export { Footer } from './footer';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { HeaderBase, Text } from '../../../../../component-library';\nimport {\n  BlockSize,\n  Display,\n  TextAlign,\n  TextVariant,\n  JustifyContent,\n} from '../../../../../../helpers/constants/design-system';\n\nimport type { StyleUtilityProps } from '../../../../../component-library/box';\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ninterface HeaderProps extends StyleUtilityProps {\n  /**\n   * Elements that go in the page footer\n   */\n  children?: React.ReactNode | React.ReactNode[];\n  /**\n   * Elements that go in the header end accessory\n   */\n  endAccessory?: React.ReactNode | React.ReactNode[];\n  /**\n   * Elements that go in the header start accessory\n   */\n  startAccessory?: React.ReactNode | React.ReactNode[];\n  /**\n   * Additional CSS class provided to the footer\n   */\n  className?: string;\n  /**\n   * Additional props to pass to the text\n   */\n  textProps?: React.ComponentProps<typeof Text>;\n}\n\nexport const Header = ({\n  children,\n  endAccessory = null,\n  startAccessory = null,\n  className = '',\n  textProps,\n  ...props\n}: HeaderProps) => {\n  return (\n    <HeaderBase\n      padding={4}\n      width={BlockSize.Full}\n      justifyContent={JustifyContent.center}\n      className={classnames('multichain-page-header', className)}\n      startAccessory={startAccessory}\n      endAccessory={endAccessory}\n      {...props}\n    >\n      <Text\n        display={Display.Block}\n        variant={TextVariant.bodyMdBold}\n        textAlign={TextAlign.Center}\n        paddingInlineStart={8}\n        paddingInlineEnd={8}\n        ellipsis\n        {...textProps}\n      >\n        {children}\n      </Text>\n    </HeaderBase>\n  );\n};\n","export { Header } from './header';\n","export { Page } from './page';\nexport { Header } from './components/header';\nexport { Content } from './components/content';\nexport { Footer } from './components/footer';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Box } from '../../../component-library';\nimport {\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexDirection,\n  JustifyContent,\n} from '../../../../helpers/constants/design-system';\n\nimport type { StyleUtilityProps } from '../../../component-library/box';\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ninterface PageProps extends StyleUtilityProps {\n  /**\n   * Elements that go in the page footer\n   */\n  children: React.ReactNode | React.ReactNode[];\n  /**\n   * Additional CSS class provided to the footer\n   */\n  className?: string;\n}\n\nexport const Page = ({ children, className = '', ...props }: PageProps) => {\n  return (\n    <Box\n      width={BlockSize.Full}\n      height={BlockSize.Full}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      justifyContent={JustifyContent.center}\n      backgroundColor={BackgroundColor.backgroundAlternative}\n      className=\"multichain-page\"\n    >\n      <Box\n        width={BlockSize.Full}\n        height={BlockSize.Full}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        backgroundColor={BackgroundColor.backgroundDefault}\n        className={classnames('multichain-page__inner-container', className)}\n        {...props}\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nPage.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SubjectType } from '@metamask/permission-controller';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  AvatarFavicon,\n  AvatarNetwork,\n  AvatarNetworkSize,\n  BadgeWrapper,\n  Box,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../component-library';\nimport { getURLHost } from '../../../../helpers/utils/util';\nimport { getAvatarNetworkColor } from '../../../../helpers/utils/accounts';\nimport { SnapIcon } from '../../../app/snaps/snap-icon';\nimport { ConnectionListTooltip } from './connection-list-tooltip/connection-list-tooltip';\n\nexport const ConnectionListItem = ({ connection, onClick }) => {\n  const t = useI18nContext();\n  const isSnap = connection.subjectType === SubjectType.Snap;\n\n  return (\n    <Box\n      data-testid=\"connection-list-item\"\n      as=\"button\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      alignItems={AlignItems.baseline}\n      width={BlockSize.Full}\n      backgroundColor={BackgroundColor.backgroundDefault}\n      onClick={onClick}\n      padding={4}\n      gap={4}\n      className=\"multichain-connection-list-item\"\n    >\n      <Box\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        style={{ alignSelf: 'center' }}\n      >\n        {isSnap ? (\n          <SnapIcon\n            className=\"connection-list-item__snap-avatar\"\n            snapId={connection.id}\n            avatarSize={IconSize.Md}\n          />\n        ) : (\n          <BadgeWrapper\n            badge={\n              <AvatarNetwork\n                data-testid=\"connection-list-item__avatar-network-badge\"\n                size={AvatarNetworkSize.Xs}\n                name={connection.networkName}\n                src={connection.networkIconUrl}\n                borderWidth={1}\n                borderColor={BackgroundColor.backgroundDefault}\n                backgroundColor={getAvatarNetworkColor(connection.networkName)}\n              />\n            }\n          >\n            <AvatarFavicon\n              data-testid=\"connection-list-item__avatar-favicon\"\n              src={connection.iconUrl}\n            />\n          </BadgeWrapper>\n        )}\n      </Box>\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        width={BlockSize.FiveTwelfths}\n        style={{ alignSelf: 'center', flexGrow: '1' }}\n      >\n        <Text variant={TextVariant.bodyMd} textAlign={TextAlign.Left} ellipsis>\n          {isSnap ? connection.packageName : getURLHost(connection.origin)}\n        </Text>\n        {isSnap ? null : (\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Row}\n            alignItems={AlignItems.center}\n            gap={1}\n          >\n            <Text\n              as=\"span\"\n              width={BlockSize.Max}\n              color={TextColor.textAlternative}\n              variant={TextVariant.bodyMd}\n            >\n              {t('connectedWith')}\n            </Text>\n            <ConnectionListTooltip connection={connection} />\n          </Box>\n        )}\n      </Box>\n      <Box\n        display={Display.Flex}\n        justifyContent={JustifyContent.flexEnd}\n        alignItems={AlignItems.center}\n        style={{ flex: '1', alignSelf: 'center' }}\n        gap={2}\n      >\n        <Icon\n          display={Display.Flex}\n          name={IconName.ArrowRight}\n          color={IconColor.iconDefault}\n          size={IconSize.Sm}\n          backgroundColor={BackgroundColor.backgroundDefault}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nConnectionListItem.propTypes = {\n  /**\n   * The connection data to display\n   */\n  connection: PropTypes.object.isRequired,\n  /**\n   * The function to call when the connection is clicked\n   */\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'react-tippy';\nimport { useSelector } from 'react-redux';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderStyle,\n  Display,\n  FlexDirection,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { AvatarType } from '../../../avatar-group/avatar-group.types';\nimport { AvatarGroup } from '../../..';\nimport {\n  AvatarAccount,\n  AvatarAccountSize,\n  AvatarAccountVariant,\n  Box,\n  Text,\n} from '../../../../component-library';\nimport { getUseBlockie } from '../../../../../selectors';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\n\nexport const ConnectionListTooltip = ({ connection }) => {\n  const t = useI18nContext();\n  const AVATAR_GROUP_LIMIT = 5;\n  const TOOLTIP_LIMIT = 7;\n  const addressIconList = connection.addresses\n    ?.slice(0, TOOLTIP_LIMIT)\n    .map((address) => ({\n      avatarValue: address,\n    }));\n  const useBlockie = useSelector(getUseBlockie);\n  const avatarAccountVariant = useBlockie\n    ? AvatarAccountVariant.Blockies\n    : AvatarAccountVariant.Jazzicon;\n\n  return (\n    <Tooltip\n      position=\"bottom\"\n      html={\n        <Box display={Display.Flex} flexDirection={FlexDirection.Column}>\n          <Text\n            color={TextColor.overlayInverse}\n            variant={TextVariant.headingSm}\n            paddingInline={10}\n          >\n            {t('connectedAccounts')}\n          </Text>\n          <Box display={Display.Flex} flexDirection={FlexDirection.Column}>\n            {connection.addresses?.slice(0, TOOLTIP_LIMIT).map((address) => {\n              return (\n                <Box\n                  display={Display.Flex}\n                  flexDirection={FlexDirection.Row}\n                  alignItems={AlignItems.center}\n                  textAlign={TextAlign.Left}\n                  key={`cl-tooltip-${connection.addressToNameMap[address]}-${address}`}\n                  padding={1}\n                  paddingInline={2}\n                  gap={2}\n                >\n                  <AvatarAccount\n                    size={AvatarAccountSize.Xs}\n                    address={address}\n                    variant={avatarAccountVariant}\n                    borderStyle={BorderStyle.none}\n                  />\n                  <Text\n                    color={TextColor.overlayInverse}\n                    variant={TextVariant.bodyMdMedium}\n                    data-testid=\"connection-list-item-connected-account-name\"\n                    ellipsis\n                  >\n                    {connection.addressToNameMap[address]}\n                  </Text>\n                </Box>\n              );\n            })}\n            {connection.addresses?.length > TOOLTIP_LIMIT && (\n              <Box\n                display={Display.Flex}\n                alignItems={AlignItems.center}\n                textAlign={TextAlign.Left}\n                paddingInline={2}\n              >\n                <Text\n                  color={TextColor.textMuted}\n                  variant={TextVariant.bodyMdMedium}\n                  data-testid=\"connection-list-item-plus-more-tooltip\"\n                >\n                  {t('plusMore', [\n                    connection.addresses?.length - TOOLTIP_LIMIT,\n                  ])}\n                </Text>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      }\n      arrow\n      offset={0}\n      delay={50}\n      duration={0}\n      size=\"small\"\n      title={t('alertDisableTooltip')}\n      trigger=\"mouseenter focus\"\n      theme=\"dark\"\n      tag=\"div\"\n    >\n      <AvatarGroup\n        members={addressIconList}\n        limit={AVATAR_GROUP_LIMIT}\n        avatarType={AvatarType.ACCOUNT}\n        borderColor={BackgroundColor.backgroundDefault}\n      />\n    </Tooltip>\n  );\n};\nConnectionListTooltip.propTypes = {\n  /**\n   * The connection data to display\n   */\n  connection: PropTypes.object.isRequired,\n};\n","import classnames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Content, Header, Page } from '../page';\nimport {\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n  Text,\n} from '../../../component-library';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  BackgroundColor,\n  BlockSize,\n  Color,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport {\n  CONNECTIONS,\n  DEFAULT_ROUTE,\n} from '../../../../helpers/constants/routes';\nimport {\n  getOnboardedInThisUISession,\n  getShowPermissionsTour,\n  getConnectedSitesListWithNetworkInfo,\n} from '../../../../selectors';\nimport { ProductTour } from '../../product-tour-popover';\nimport { hidePermissionsTour } from '../../../../store/actions';\nimport { ConnectionListItem } from './connection-list-item';\n\nexport const PermissionsPage = () => {\n  const t = useI18nContext();\n  const history = useHistory();\n  const headerRef = useRef();\n  const [totalConnections, setTotalConnections] = useState(0);\n  const sitesConnectionsList = useSelector(\n    getConnectedSitesListWithNetworkInfo,\n  );\n  const showPermissionsTour = useSelector(getShowPermissionsTour);\n  const onboardedInThisUISession = useSelector(getOnboardedInThisUISession);\n\n  useEffect(() => {\n    setTotalConnections(Object.keys(sitesConnectionsList).length);\n  }, [sitesConnectionsList]);\n\n  const handleConnectionClick = (connection) => {\n    const hostName = connection.origin;\n    const safeEncodedHost = encodeURIComponent(hostName);\n    history.push(`${CONNECTIONS}/${safeEncodedHost}`);\n  };\n\n  const renderConnectionsList = (connectionList) =>\n    Object.entries(connectionList).map(([itemKey, connection]) => {\n      return (\n        <ConnectionListItem\n          data-testid=\"connection-list-item\"\n          key={itemKey}\n          connection={connection}\n          onClick={() => handleConnectionClick(connection)}\n        />\n      );\n    });\n\n  return (\n    <Page className=\"main-container\" data-testid=\"permissions-page\">\n      <Header\n        backgroundColor={BackgroundColor.backgroundDefault}\n        startAccessory={\n          <ButtonIcon\n            ariaLabel={t('back')}\n            iconName={IconName.ArrowLeft}\n            className=\"connections-header__start-accessory\"\n            color={Color.iconDefault}\n            onClick={() => history.push(DEFAULT_ROUTE)}\n            size={ButtonIconSize.Sm}\n          />\n        }\n      >\n        <Text\n          as=\"span\"\n          variant={TextVariant.headingMd}\n          textAlign={TextAlign.Center}\n        >\n          {t('permissions')}\n        </Text>\n      </Header>\n      {showPermissionsTour && !onboardedInThisUISession ? (\n        <ProductTour\n          closeMenu={hidePermissionsTour}\n          className={classnames(\n            'multichain-product-tour-menu__permissions-page-tour',\n          )}\n          data-testid=\"permissions-page-product-tour\"\n          anchorElement={headerRef.current}\n          title={t('permissionsPageTourTitle')}\n          description={t('permissionsPageTourDescription')}\n          onClick={hidePermissionsTour}\n          positionObj=\"44%\"\n        />\n      ) : null}\n      <Content padding={0}>\n        <Box ref={headerRef}></Box>\n        {totalConnections > 0 ? (\n          renderConnectionsList(sitesConnectionsList)\n        ) : (\n          <Box\n            data-testid=\"no-connections\"\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n            justifyContent={JustifyContent.center}\n            height={BlockSize.Full}\n            gap={2}\n          >\n            <Text\n              variant={TextVariant.bodyMdMedium}\n              backgroundColor={BackgroundColor.backgroundDefault}\n              textAlign={TextAlign.Center}\n            >\n              {t('permissionsPageEmptyContent')}\n            </Text>\n            <Text\n              variant={TextVariant.bodyMd}\n              color={TextColor.textAlternative}\n              backgroundColor={BackgroundColor.backgroundDefault}\n              textAlign={TextAlign.Center}\n            >\n              {t('permissionsPageEmptySubContent')}\n            </Text>\n          </Box>\n        )}\n      </Content>\n    </Page>\n  );\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { EthAccountType } from '@metamask/keyring-api';\nimport { getSelectedInternalAccount } from '../../../../../selectors';\nimport { Label } from '../../../../component-library';\nimport { AccountPicker } from '../../../account-picker';\nimport {\n  BlockSize,\n  BorderColor,\n  Display,\n  JustifyContent,\n  TextAlign,\n} from '../../../../../helpers/constants/design-system';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport { AccountListMenu } from '../../..';\nimport { SEND_STAGES, getSendStage } from '../../../../../ducks/send';\nimport { SendPageRow } from '.';\n\nexport const SendPageAccountPicker = () => {\n  const t = useContext(I18nContext);\n  const internalAccount = useSelector(getSelectedInternalAccount);\n\n  const [showAccountPicker, setShowAccountPicker] = useState(false);\n\n  const sendStage = useSelector(getSendStage);\n  const disabled = SEND_STAGES.EDIT === sendStage;\n  const accountListItemProps = { showOptions: false };\n  const onAccountListMenuClose = useCallback(() => {\n    setShowAccountPicker(false);\n  }, []);\n\n  return (\n    <SendPageRow>\n      <Label paddingBottom={2}>{t('from')}</Label>\n      <AccountPicker\n        className=\"multichain-send-page__account-picker\"\n        address={internalAccount.address}\n        name={internalAccount.metadata.name}\n        onClick={() => setShowAccountPicker(true)}\n        showAddress\n        borderColor={BorderColor.borderMuted}\n        borderWidth={1}\n        paddingTop={4}\n        paddingBottom={4}\n        paddingLeft={3}\n        block\n        justifyContent={JustifyContent.flexStart}\n        addressProps={{\n          display: Display.Flex,\n          textAlign: TextAlign.Start,\n        }}\n        labelProps={{\n          style: { flexGrow: 1, textAlign: 'start' },\n          paddingInlineStart: 1,\n          className: 'multichain-send-page__account-picker__label',\n        }}\n        textProps={{\n          display: Display.Flex,\n          width: BlockSize.Full,\n        }}\n        width={BlockSize.Full}\n        disabled={disabled}\n        data-testid=\"send-page-account-picker\"\n      />\n      {showAccountPicker ? (\n        <AccountListMenu\n          accountListItemProps={accountListItemProps}\n          showAccountCreation={false}\n          onClose={onAccountListMenuClose}\n          allowedAccountTypes={[EthAccountType.Eoa, EthAccountType.Erc4337]}\n        />\n      ) : null}\n    </SendPageRow>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Fuse from 'fuse.js';\nimport { Box, Text } from '../../../../component-library';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport ContactList from '../../../../app/contact-list';\nimport {\n  getAddressBook,\n  getCurrentNetworkTransactions,\n} from '../../../../../selectors';\nimport {\n  addHistoryEntry,\n  getRecipientUserInput,\n  updateRecipient,\n  updateRecipientUserInput,\n} from '../../../../../ducks/send';\nimport {\n  FontWeight,\n  TextAlign,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport { CONTACT_LIST_ROUTE } from '../../../../../helpers/constants/routes';\nimport { MetaMetricsContext } from '../../../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../../shared/constants/metametrics';\nimport { SendPageRow } from '.';\n\nexport const SendPageAddressBook = () => {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const addressBook = useSelector(getAddressBook);\n  const contacts = addressBook.filter(({ name }) => Boolean(name));\n  const currentNetworkTransactions = useSelector(getCurrentNetworkTransactions);\n\n  const txList = [...currentNetworkTransactions].reverse();\n  const nonContacts = addressBook\n    .filter(({ name }) => !name)\n    .map((nonContact) => {\n      const nonContactTx = txList.find(\n        (transaction) =>\n          transaction.txParams.to === nonContact.address.toLowerCase(),\n      );\n      return { ...nonContact, timestamp: nonContactTx?.time };\n    });\n\n  const userInput = useSelector(getRecipientUserInput);\n  const contactFuse = new Fuse(contacts, {\n    shouldSort: true,\n    threshold: 0.45,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 1,\n    keys: [\n      { name: 'name', weight: 0.5 },\n      { name: 'address', weight: 0.5 },\n    ],\n  });\n\n  const recentFuse = new Fuse(nonContacts, {\n    shouldSort: true,\n    threshold: 0.45,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 1,\n    keys: [{ name: 'address', weight: 0.5 }],\n  });\n\n  const searchForContacts = () => {\n    if (userInput) {\n      contactFuse.setCollection(contacts);\n      return contactFuse.search(userInput);\n    }\n\n    return contacts;\n  };\n\n  const searchForRecents = () => {\n    if (userInput) {\n      recentFuse.setCollection(nonContacts);\n      return recentFuse.search(userInput);\n    }\n\n    return nonContacts;\n  };\n\n  const selectRecipient = (\n    address = '',\n    nickname = '',\n    type = 'user input',\n  ) => {\n    dispatch(\n      addHistoryEntry(\n        `sendFlow - User clicked recipient from ${type}. address: ${address}, nickname ${nickname}`,\n      ),\n    );\n    trackEvent(\n      {\n        event: MetaMetricsEventName.sendRecipientSelected,\n        category: MetaMetricsEventCategory.Send,\n        properties: {\n          location: 'address book',\n          inputType: type,\n        },\n      },\n      { excludeMetaMetricsId: false },\n    );\n    dispatch(updateRecipient({ address, nickname }));\n    dispatch(updateRecipientUserInput(address));\n  };\n\n  return (\n    <SendPageRow>\n      {addressBook.length ? (\n        <>\n          <ContactList\n            addressBook={addressBook}\n            searchForContacts={searchForContacts}\n            searchForRecents={searchForRecents}\n            selectRecipient={(address = '', name = '') => {\n              selectRecipient(\n                address,\n                name,\n                `${name ? 'contact' : 'recent'} list`,\n              );\n            }}\n          />\n        </>\n      ) : (\n        <Box padding={6} textAlign={TextAlign.Center}>\n          <Text marginBottom={4} fontWeight={FontWeight.Bold}>\n            {t('sendNoContactsTitle')}\n          </Text>\n          <Text color={TextColor.textAlternative}>\n            {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore: Expected 0-1 arguments, but got 2.\n              t('sendNoContactsDescription', [\n                <Text\n                  as=\"a\"\n                  href={`#${CONTACT_LIST_ROUTE}`}\n                  color={TextColor.primaryDefault}\n                >\n                  {t('sendNoContactsConversionText')}\n                </Text>,\n              ])\n            }\n          </Text>\n        </Box>\n      )}\n    </SendPageRow>\n  );\n};\n","import React, { useContext, useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport Confusable from '../../../../ui/confusable';\nimport {\n  AvatarAccount,\n  Box,\n  AvatarIcon,\n  AvatarIconSize,\n  BadgeWrapper,\n  IconName,\n  Text,\n} from '../../../../component-library';\nimport {\n  AlignItems,\n  Display,\n  BackgroundColor,\n  BorderColor,\n  IconColor,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { ellipsify } from '../../../../../pages/confirmations/send/send.utils';\nimport Tooltip from '../../../../ui/tooltip';\n\ntype DomainInputResolutionCellArgs = {\n  address: string;\n  protocol?: string;\n  domainName: string;\n  resolvingSnap?: string;\n  onClick: () => void;\n};\n\nexport const DomainInputResolutionCell = ({\n  address,\n  domainName,\n  resolvingSnap = '',\n  onClick,\n  protocol,\n}: DomainInputResolutionCellArgs) => {\n  const t: (key: string, params: unknown[]) => string = useContext(I18nContext);\n  const titleRef = useRef<null | HTMLDivElement>(null);\n  const breakpointRef = useRef<null | number>(null);\n  const [isTitleOverflowing, setIsTitleOverflowing] = useState(false);\n\n  useEffect(() => {\n    if (!titleRef.current) {\n      return;\n    }\n\n    let isOverflowing =\n      titleRef.current.offsetWidth < titleRef.current.scrollWidth;\n    const breakpointLength = titleRef.current.textContent?.length;\n\n    if (isOverflowing && !breakpointRef.current && breakpointLength) {\n      breakpointRef.current = breakpointLength;\n    }\n\n    if (!isOverflowing) {\n      if (breakpointRef.current) {\n        if (domainName.length >= breakpointRef.current) {\n          isOverflowing = true;\n        } else {\n          isOverflowing = false;\n          breakpointRef.current = null;\n        }\n      }\n    }\n\n    if (isOverflowing !== isTitleOverflowing) {\n      setIsTitleOverflowing(isOverflowing);\n    }\n  }, [domainName, isTitleOverflowing]);\n\n  const OverflowingTitle = () => (\n    <Tooltip\n      containerClassName=\"multichain-send-page__recipient__item__title-tooltip\"\n      wrapperClassName=\"multichain-send-page__recipient__item__title-tooltip-container\"\n      position=\"bottom\"\n      title={domainName}\n    >\n      <Confusable\n        asText\n        input={domainName}\n        confusableWrapperName=\"multichain-send-page__recipient__item__title-confusable-wrapper\"\n      />\n    </Tooltip>\n  );\n\n  // Snap provided resolution.\n  return (\n    <Box\n      key={address}\n      className=\"multichain-send-page__recipient__item\"\n      onClick={() => onClick()}\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      paddingBottom={2}\n      style={{ cursor: 'pointer' }}\n    >\n      <Tooltip title={t('suggestedBySnap', [resolvingSnap])}>\n        <BadgeWrapper\n          badge={\n            <AvatarIcon\n              iconName={IconName.Snaps}\n              size={AvatarIconSize.Xs}\n              className=\"multichain-send-page__recipient__item__avatar\"\n              backgroundColor={BackgroundColor.infoDefault}\n              borderColor={BorderColor.backgroundDefault}\n              borderWidth={2}\n              iconProps={{\n                color: IconColor.infoInverse,\n                style: { width: '12px', height: '12px' },\n                name: IconName.Snaps,\n              }}\n            />\n          }\n          positionObj={{\n            bottom: '25%',\n            right: '10%',\n          }}\n          badgeContainerProps={{\n            className: 'multichain-send-page__recipient__item__badge',\n          }}\n        >\n          <AvatarAccount address={address} />\n        </BadgeWrapper>\n      </Tooltip>\n      <Box\n        className=\"multichain-send-page__recipient__item__content\"\n        paddingLeft={4}\n        style={{ overflow: 'hidden' }}\n      >\n        <Box\n          ref={titleRef}\n          className=\"multichain-send-page__recipient__item__title\"\n          data-testid=\"multichain-send-page__recipient__item__title\"\n          display={Display.Flex}\n        >\n          {isTitleOverflowing ? (\n            <OverflowingTitle />\n          ) : (\n            <Confusable asText input={domainName} />\n          )}\n        </Box>\n        <Text color={TextColor.textAlternative}>{ellipsify(address)}</Text>\n        <Box\n          className=\"multichain-send-page__recipient__item__subtitle\"\n          data-testid=\"multichain-send-page__recipient__item__subtitle\"\n        >\n          <Text color={TextColor.textAlternative} variant={TextVariant.bodySm}>\n            {protocol}\n          </Text>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nDomainInputResolutionCell.propTypes = {\n  address: PropTypes.string.isRequired,\n  domainName: PropTypes.string.isRequired,\n  resolvingSnap: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  protocol: PropTypes.string,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { Label } from '../../../../component-library';\nimport { getSendHexData, updateSendHexData } from '../../../../../ducks/send';\nimport { Textarea } from '../../../../component-library/textarea';\nimport { SendPageRow } from '.';\n\nexport const SendHexData = () => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  const data = useSelector(getSendHexData);\n\n  return (\n    <SendPageRow>\n      <Label>{t('hexData')}</Label>\n      <Textarea\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onInput={(event: any) => {\n          const newData = event.target.value.replace(/\\n/gu, '') || null;\n          dispatch(updateSendHexData(newData ?? ''));\n        }}\n        placeholder={t('optional')}\n        defaultValue={data || ''}\n        data-testid=\"send-hex-textarea\"\n      />\n    </SendPageRow>\n  );\n};\n","export { SendPageRow } from './send-page-row';\nexport { SendPageAccountPicker } from './account-picker';\nexport { SendPageNetworkPicker } from './network-picker';\nexport { SendPageYourAccounts } from './your-accounts';\nexport { SendPageRecipientInput } from './recipient-input';\nexport { SendPageAddressBook } from './address-book';\nexport { SendPageRecipient } from './recipient';\nexport { SendPageRecipientContent } from './recipient-content';\nexport { SendHexData } from './hex';\nexport { QuoteCard } from './quote-card';\nexport { DomainInputResolutionCell } from './domain-input-resolution-cell';\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCurrentNetwork } from '../../../../../selectors';\nimport { toggleNetworkMenu } from '../../../../../store/actions';\nimport { PickerNetwork } from '../../../../component-library';\nimport { SendPageRow } from '.';\n\nexport const SendPageNetworkPicker = () => {\n  const currentNetwork = useSelector(getCurrentNetwork);\n  const dispatch = useDispatch();\n\n  return (\n    <SendPageRow>\n      <PickerNetwork\n        label={currentNetwork?.nickname ?? ''}\n        src={currentNetwork?.rpcPrefs?.imageUrl}\n        onClick={() => dispatch(toggleNetworkMenu())}\n        data-testid=\"send-page-network-picker\"\n      />\n    </SendPageRow>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isHexString } from '@metamask/utils';\nimport { Numeric } from '../../../../../../../../shared/modules/Numeric';\nimport {\n  getConversionRate,\n  getGasFeeEstimates,\n  getNativeCurrency,\n} from '../../../../../../../ducks/metamask/metamask';\nimport { EtherDenomination } from '../../../../../../../../shared/constants/common';\nimport {\n  getCurrentCurrency,\n  checkNetworkAndAccountSupports1559,\n  getCurrentChainId,\n  getIsSwapsChain,\n} from '../../../../../../../selectors/selectors';\nimport {\n  fetchAndSetSwapsGasPriceInfo,\n  getUsedSwapsGasPrice,\n} from '../../../../../../../ducks/swaps/swaps';\nimport { formatCurrency } from '../../../../../../../helpers/utils/confirm-tx.util';\nimport { toFixedNoTrailingZeros } from './utils';\n\nexport default function useEthFeeData(gasLimit = 0) {\n  const dispatch = useDispatch();\n  const nativeCurrencySymbol = useSelector(getNativeCurrency);\n\n  const selectedNativeConversionRate = useSelector(getConversionRate);\n\n  const currentCurrency = useSelector(getCurrentCurrency);\n\n  const networkAndAccountSupports1559 = useSelector(\n    checkNetworkAndAccountSupports1559,\n  );\n  const { medium, gasPrice: maybeGasFee } = useSelector(getGasFeeEstimates);\n\n  // remove this logic once getGasFeeEstimates is typed\n  const gasFee1559 = maybeGasFee ?? medium?.suggestedMaxFeePerGas;\n\n  const chainId = useSelector(getCurrentChainId);\n  const isSwapsChain = useSelector(getIsSwapsChain);\n\n  const gasPriceNon1559 = useSelector(getUsedSwapsGasPrice);\n\n  useEffect(() => {\n    if (!isSwapsChain) {\n      return;\n    }\n\n    if (!networkAndAccountSupports1559) {\n      dispatch(fetchAndSetSwapsGasPriceInfo());\n    }\n  }, [dispatch, chainId, networkAndAccountSupports1559, isSwapsChain]);\n\n  return useMemo(() => {\n    const rawGasPrice = networkAndAccountSupports1559\n      ? gasFee1559\n      : gasPriceNon1559;\n\n    if (!rawGasPrice) {\n      return { formattedFiatGasFee: '', formattedEthGasFee: '' };\n    }\n\n    const ethGasFee = new Numeric(\n      rawGasPrice,\n      isHexString(rawGasPrice) ? 16 : 10,\n      EtherDenomination.GWEI,\n    )\n      .times(new Numeric(gasLimit, 10))\n      .toDenomination(EtherDenomination.ETH);\n\n    const fiatGasFee = selectedNativeConversionRate\n      ? ethGasFee.applyConversionRate(selectedNativeConversionRate).toNumber()\n      : undefined;\n\n    const formattedFiatGasFee = fiatGasFee\n      ? formatCurrency(new Numeric(fiatGasFee, 10).toString(), currentCurrency)\n      : '';\n\n    const formattedEthGasFee = `${toFixedNoTrailingZeros(\n      ethGasFee.toNumber(),\n    )} ${nativeCurrencySymbol}`;\n\n    return { formattedFiatGasFee, formattedEthGasFee };\n  }, [\n    networkAndAccountSupports1559,\n    medium?.suggestedMaxFeePerGas,\n    gasPriceNon1559,\n    gasLimit,\n    selectedNativeConversionRate,\n    currentCurrency,\n    nativeCurrencySymbol,\n  ]);\n}\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getBestQuote,\n  getCurrentDraftTransaction,\n} from '../../../../../../../ducks/send';\nimport { AssetType } from '../../../../../../../../shared/constants/transaction';\nimport { calcTokenAmount } from '../../../../../../../../shared/lib/transactions-controller-utils';\nimport { Numeric } from '../../../../../../../../shared/modules/Numeric';\nimport { Quote } from '../../../../../../../ducks/send/swap-and-send-utils';\nimport { getNativeCurrency } from '../../../../../../../ducks/metamask/metamask';\n\nconst NATIVE_CURRENCY_DECIMALS = 18;\n\nexport default function useGetConversionRate() {\n  const bestQuote: Quote | undefined = useSelector(getBestQuote);\n  const { sendAsset, receiveAsset } = useSelector(getCurrentDraftTransaction);\n\n  const nativeCurrencySymbol = useSelector(getNativeCurrency);\n\n  const sourceTokenSymbol =\n    sendAsset?.type === AssetType.native\n      ? nativeCurrencySymbol\n      : sendAsset?.details?.symbol;\n\n  const destinationTokenSymbol =\n    receiveAsset?.type === AssetType.native\n      ? nativeCurrencySymbol\n      : receiveAsset?.details?.symbol;\n\n  const formattedConversionRate = useMemo(() => {\n    if (bestQuote && sendAsset && receiveAsset) {\n      const primaryTokenAmount = calcTokenAmount(\n        bestQuote.sourceAmount,\n        sendAsset.details?.decimals || NATIVE_CURRENCY_DECIMALS,\n      );\n      const secondaryTokenAmount = calcTokenAmount(\n        bestQuote.destinationAmount,\n        receiveAsset.details?.decimals || NATIVE_CURRENCY_DECIMALS,\n      );\n\n      const conversionRateFromPrimaryToSecondary = new Numeric(\n        secondaryTokenAmount,\n      )\n        .divide(primaryTokenAmount)\n        .round(9)\n        .toNumber();\n\n      return `1 ${sourceTokenSymbol} = ${conversionRateFromPrimaryToSecondary} ${destinationTokenSymbol}`;\n    }\n\n    return undefined;\n  }, [\n    bestQuote?.sourceAmount,\n    bestQuote?.destinationAmount,\n    sendAsset?.details?.decimals,\n    receiveAsset?.details?.decimals,\n    sourceTokenSymbol,\n    destinationTokenSymbol,\n  ]);\n\n  return formattedConversionRate;\n}\n","import { useSelector } from 'react-redux';\nimport { toHex } from '@metamask/controller-utils';\nimport { CHAIN_IDS } from '../../../../../../../../shared/constants/network';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { getCurrentChainId } from '../../../../../../../selectors';\n\nexport default function useTranslatedNetworkName() {\n  const chainId = useSelector(getCurrentChainId);\n  const t = useI18nContext();\n\n  switch (toHex(chainId)) {\n    case CHAIN_IDS.MAINNET:\n      return t('networkNameEthereum');\n    case CHAIN_IDS.BSC:\n      return t('networkNameBSC');\n    case CHAIN_IDS.POLYGON:\n      return t('networkNamePolygon');\n    case CHAIN_IDS.LOCALHOST:\n      return t('networkNameTestnet');\n    case CHAIN_IDS.GOERLI:\n      return t('networkNameGoerli');\n    case CHAIN_IDS.AVALANCHE:\n      return t('networkNameAvalanche');\n    case CHAIN_IDS.OPTIMISM:\n      return t('networkNameOpMainnet');\n    case CHAIN_IDS.ARBITRUM:\n      return t('networkNameArbitrum');\n    case CHAIN_IDS.ZKSYNC_ERA:\n      return t('networkNameZkSyncEra');\n    case CHAIN_IDS.LINEA_MAINNET:\n      return t('networkNameLinea');\n    case CHAIN_IDS.BASE:\n      return t('networkNameBase');\n    default:\n      return undefined;\n  }\n}\n","const MAX_TOKEN_DECIMALS = 7;\nconst TRAILING_ZEROS = /0+$/u;\n\nexport const toFixedNoTrailingZeros = (\n  value: number,\n  decimals = MAX_TOKEN_DECIMALS,\n) => {\n  const valueWithNoTrailingZeros = value\n    .toFixed(decimals)\n    .replace(TRAILING_ZEROS, '');\n\n  return valueWithNoTrailingZeros.endsWith('.')\n    ? valueWithNoTrailingZeros.slice(0, -1)\n    : valueWithNoTrailingZeros;\n};\n","import React, { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, ButtonLink, Text } from '../../../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  TextColor,\n  TextVariant,\n} from '../../../../../../helpers/constants/design-system';\nimport {\n  getCurrentDraftTransaction,\n  getBestQuote,\n  updateSendQuote,\n  getSendAnalyticProperties,\n} from '../../../../../../ducks/send';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { SECOND } from '../../../../../../../shared/constants/time';\nimport { Quote } from '../../../../../../ducks/send/swap-and-send-utils';\nimport Tooltip from '../../../../../ui/tooltip';\nimport InfoTooltipIcon from '../../../../../ui/info-tooltip/info-tooltip-icon';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../../../shared/constants/metametrics';\nimport {\n  CONSENSYS_TERMS_OF_USE,\n  GAS_FEES_LEARN_MORE_URL,\n} from '../../../../../../../shared/lib/ui-utils';\nimport { MetaMetricsContext } from '../../../../../../contexts/metametrics';\nimport { hexToDecimal } from '../../../../../../../shared/modules/conversion.utils';\nimport useEthFeeData from './hooks/useEthFeeData';\nimport useTranslatedNetworkName from './hooks/useTranslatedNetworkName';\nimport useGetConversionRate from './hooks/useGetConversionRate';\n\ntype QuoteCardProps = {\n  scrollRef: React.RefObject<HTMLDivElement>;\n};\n\n// update literal below if over 60 seconds\nconst REFRESH_INTERVAL = 30;\n\n/**\n * All the info about the current quote; handles polling and displaying the best quote\n *\n * @param options0\n * @param options0.scrollRef - ref to scroll to quote on quote load\n */\nexport function QuoteCard({ scrollRef }: QuoteCardProps) {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const sendAnalytics = useSelector(getSendAnalyticProperties);\n\n  const translatedNetworkName = useTranslatedNetworkName();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const { isSwapQuoteLoading } = useSelector(getCurrentDraftTransaction);\n\n  const bestQuote: Quote | undefined = useSelector(getBestQuote);\n\n  const [timeLeft, setTimeLeft] = useState<number | undefined>(undefined);\n\n  const { formattedEthGasFee, formattedFiatGasFee } = useEthFeeData(\n    (bestQuote?.gasParams.maxGas || 0) +\n      Number(hexToDecimal(bestQuote?.approvalNeeded?.gas || '0x0')),\n  );\n\n  const formattedConversionRate = useGetConversionRate();\n\n  const prevBestQuote = useRef(bestQuote);\n\n  useEffect(() => {\n    const isQuoteJustLoaded = bestQuote && prevBestQuote.current === undefined;\n\n    prevBestQuote.current = bestQuote;\n    // scroll to quote on initial load\n    if (isQuoteJustLoaded) {\n      scrollRef.current?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n      });\n    }\n\n    if (bestQuote) {\n      trackEvent(\n        {\n          event: MetaMetricsEventName.sendSwapQuoteFetched,\n          category: MetaMetricsEventCategory.Send,\n          properties: {\n            is_first_fetch: isQuoteJustLoaded,\n          },\n          sensitiveProperties: {\n            ...sendAnalytics,\n          },\n        },\n        { excludeMetaMetricsId: false },\n      );\n      setTimeLeft(REFRESH_INTERVAL);\n    } else {\n      setTimeLeft(undefined);\n    }\n  }, [bestQuote]);\n\n  useEffect(() => {\n    if (isSwapQuoteLoading || timeLeft === undefined) {\n      return;\n    }\n\n    if (timeLeft <= 0) {\n      dispatch(updateSendQuote(false, true));\n    }\n\n    const timeout = setTimeout(() => setTimeLeft(timeLeft - 1), SECOND);\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(timeout);\n  }, [timeLeft]);\n\n  const infoText = useMemo(() => {\n    if (isSwapQuoteLoading) {\n      return t('swapFetchingQuotes');\n    } else if (bestQuote) {\n      const timeLeftFormatted = `0${timeLeft}`.slice(-2);\n      return timeLeft\n        ? t('swapNewQuoteIn', [`0:${timeLeftFormatted}`])\n        : undefined;\n    }\n    return undefined;\n  }, [isSwapQuoteLoading, bestQuote, timeLeft]);\n\n  const isContent = Boolean(infoText || bestQuote);\n\n  if (!isContent) {\n    return null;\n  }\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.flexStart}\n      gap={2}\n    >\n      {/* TIMER/FETCH INFO */}\n      {infoText && (\n        <Text\n          color={TextColor.textAlternative}\n          variant={TextVariant.bodySm}\n          className=\"quote-card__fetch-status\"\n        >\n          {infoText}\n        </Text>\n      )}\n      {/* QUOTE CARD */}\n      {bestQuote && (\n        <Box\n          backgroundColor={BackgroundColor.backgroundAlternative}\n          borderRadius={BorderRadius.LG}\n          width={BlockSize.Full}\n          gap={2}\n          padding={3}\n        >\n          <Box display={Display.Flex} alignItems={AlignItems.center}>\n            <Text\n              className=\"quote-card__text\"\n              color={TextColor.textAlternative}\n              marginRight={'auto'}\n              variant={TextVariant.bodySm}\n            >\n              {t('quoteRate')}\n            </Text>\n            <Text\n              marginLeft={'auto'}\n              variant={TextVariant.bodySm}\n              data-testid=\"quote-card__conversion-rate\"\n            >\n              {formattedConversionRate}\n            </Text>\n          </Box>\n          <Box display={Display.Flex} alignItems={AlignItems.center}>\n            <Box\n              display={Display.Flex}\n              marginRight={'auto'}\n              gap={1}\n              alignItems={AlignItems.center}\n            >\n              <Text\n                variant={TextVariant.bodySm}\n                color={TextColor.textAlternative}\n              >\n                {t('transactionDetailGasHeading')}\n              </Text>\n              <Tooltip\n                interactive\n                position=\"left\"\n                containerClassName=\"info-tooltip__tooltip-container\"\n                tooltipInnerClassName=\"info-tooltip__tooltip-content\"\n                tooltipArrowClassName=\"info-tooltip__left-tooltip-arrow\"\n                style={{ display: 'flex', height: '12px', aspectRatio: '1' }}\n                html={\n                  <>\n                    <p>{t('swapGasFeesSummary', [translatedNetworkName])}</p>\n                    <p>{t('swapGasFeesDetails')}</p>\n                    <p>\n                      <a\n                        onClick={() => {\n                          /* istanbul ignore next */\n                          trackEvent({\n                            event: 'Clicked \"Gas Fees: Learn More\" Link',\n                            category: MetaMetricsEventCategory.Swaps,\n                          });\n                          global.platform.openTab({\n                            url: GAS_FEES_LEARN_MORE_URL,\n                          });\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {t('swapGasFeesLearnMore')}\n                      </a>\n                    </p>\n                  </>\n                }\n                theme=\"tippy-tooltip-info\"\n              >\n                <InfoTooltipIcon fillColor=\"var(--color-icon-alternative)\" />\n              </Tooltip>\n            </Box>\n            <Box display={Display.Flex} marginLeft={'auto'}>\n              <Text\n                variant={TextVariant.bodySm}\n                data-testid=\"quote-card__gas-fee\"\n              >\n                {formattedEthGasFee}\n              </Text>\n              {formattedFiatGasFee && (\n                <Text\n                  color={TextColor.textAlternative}\n                  variant={TextVariant.bodySm}\n                  marginLeft={1}\n                  data-testid=\"quote-card__fiat-gas-fee\"\n                >\n                  ≈ {formattedFiatGasFee}\n                </Text>\n              )}\n            </Box>\n          </Box>\n        </Box>\n      )}\n      {/* FEE INFO */}\n      {bestQuote && (\n        <Text color={TextColor.textAlternative} variant={TextVariant.bodySm}>\n          {t('swapIncludesMMFeeAlt', [bestQuote?.fee])}\n        </Text>\n      )}\n      {/* TOS LINK; doubles as anchor for scroll ref */}\n      {bestQuote && (\n        <ButtonLink\n          variant={TextVariant.bodySm}\n          href={CONSENSYS_TERMS_OF_USE}\n          target=\"_blank\"\n          className=\"quote-card__TOS\"\n        >\n          {t('termsOfService')}\n        </ButtonLink>\n      )}\n      {/* SCROLL REF ANCHOR */}\n      <div ref={scrollRef} />\n    </Box>\n  );\n}\n","import React, {\n  useCallback,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  useMemo,\n  ///: END:ONLY_INCLUDE_IF\n  useRef,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { TokenListMap } from '@metamask/assets-controllers';\n///: END:ONLY_INCLUDE_IF\nimport {\n  BannerAlert,\n  BannerAlertSeverity,\n  Box,\n} from '../../../../component-library';\nimport {\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  getNativeCurrency,\n  ///: END:ONLY_INCLUDE_IF\n  getSendHexDataFeatureFlagState,\n} from '../../../../../ducks/metamask/metamask';\nimport {\n  Asset,\n  acknowledgeRecipientWarning,\n  getBestQuote,\n  getCurrentDraftTransaction,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  getIsSwapAndSendDisabledForNetwork,\n  getSwapsBlockedTokens,\n  ///: END:ONLY_INCLUDE_IF\n  getSendAsset,\n} from '../../../../../ducks/send';\nimport { AssetType } from '../../../../../../shared/constants/transaction';\nimport { CONTRACT_ADDRESS_LINK } from '../../../../../helpers/constants/common';\nimport { Display } from '../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { AssetPickerAmount } from '../../..';\nimport { decimalToHex } from '../../../../../../shared/modules/conversion.utils';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport {\n  getIpfsGateway,\n  getIsSwapsChain,\n  getNativeCurrencyImage,\n  getTokenList,\n  getUseExternalServices,\n} from '../../../../../selectors';\nimport useGetAssetImageUrl from '../../../../../hooks/useGetAssetImageUrl';\n///: END:ONLY_INCLUDE_IF\n\nimport type { Quote } from '../../../../../ducks/send/swap-and-send-utils';\nimport { isEqualCaseInsensitive } from '../../../../../../shared/modules/string-utils';\nimport { AssetPicker } from '../../../asset-picker-amount/asset-picker';\nimport { TabName } from '../../../asset-picker-amount/asset-picker-modal/asset-picker-modal-tabs';\nimport { SendHexData, SendPageRow, QuoteCard } from '.';\n\nexport const SendPageRecipientContent = ({\n  requireContractAddressAcknowledgement,\n  onAssetChange,\n  onClick,\n}: {\n  requireContractAddressAcknowledgement: boolean;\n  onAssetChange: (newAsset: Asset, isReceived: boolean) => void;\n  onClick: () => React.ComponentProps<typeof AssetPicker>['onClick'];\n}) => {\n  const t = useI18nContext();\n\n  const {\n    receiveAsset,\n    sendAsset,\n    amount: sendAmount,\n    isSwapQuoteLoading,\n  } = useSelector(getCurrentDraftTransaction);\n\n  let isSwapAllowed;\n\n\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  const isBasicFunctionality = useSelector(getUseExternalServices);\n  const isSwapsChain = useSelector(getIsSwapsChain);\n  const isSwapAndSendDisabledForNetwork = useSelector(\n    getIsSwapAndSendDisabledForNetwork,\n  );\n  const swapsBlockedTokens = useSelector(getSwapsBlockedTokens);\n  const memoizedSwapsBlockedTokens = useMemo(() => {\n    return new Set(swapsBlockedTokens);\n  }, [swapsBlockedTokens]);\n\n  const nativeCurrencySymbol = useSelector(getNativeCurrency);\n  const nativeCurrencyImageUrl = useSelector(getNativeCurrencyImage);\n  const tokenList = useSelector(getTokenList) as TokenListMap;\n  const ipfsGateway = useSelector(getIpfsGateway);\n\n  const nftImageURL = useGetAssetImageUrl(\n    sendAsset.details?.image ?? null,\n    ipfsGateway,\n  );\n\n  isSwapAllowed =\n    isSwapsChain &&\n    !isSwapAndSendDisabledForNetwork &&\n    [AssetType.token, AssetType.native].includes(sendAsset.type) &&\n    isBasicFunctionality &&\n    !memoizedSwapsBlockedTokens.has(sendAsset.details?.address?.toLowerCase());\n  ///: END:ONLY_INCLUDE_IF\n\n  const bestQuote: Quote = useSelector(getBestQuote);\n\n  const isLoadingInitialQuotes = !bestQuote && isSwapQuoteLoading;\n\n  const isBasicSend = isEqualCaseInsensitive(\n    receiveAsset.details?.address ?? '',\n    sendAsset.details?.address ?? '',\n  );\n\n  const amount = isBasicSend\n    ? sendAmount\n    : { value: decimalToHex(bestQuote?.destinationAmount || '0') };\n\n  // Hex data\n  const showHexDataFlag = useSelector(getSendHexDataFeatureFlagState);\n  const asset = useSelector(getSendAsset);\n  const showHexData =\n    isBasicSend &&\n    showHexDataFlag &&\n    asset &&\n    asset.type !== AssetType.token &&\n    asset.type !== AssetType.NFT;\n\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  // Gas data\n  const dispatch = useDispatch();\n\n  return (\n    <Box>\n      {requireContractAddressAcknowledgement ? (\n        <SendPageRow>\n          <BannerAlert\n            severity={BannerAlertSeverity.Danger}\n            data-testid=\"send-warning\"\n            actionButtonLabel={t('tooltipApproveButton')}\n            actionButtonOnClick={() => {\n              dispatch(acknowledgeRecipientWarning());\n            }}\n            actionButtonProps={{ display: Display.Block, marginTop: 4 }}\n          >\n            {t('sendingToTokenContractWarning', [\n              <a\n                key=\"contractWarningSupport\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"send__warning-container__link\"\n                href={CONTRACT_ADDRESS_LINK}\n              >\n                {t('learnMoreUpperCase')}\n              </a>,\n            ])}\n          </BannerAlert>\n        </SendPageRow>\n      ) : null}\n      <SendPageRow>\n        <AssetPickerAmount\n          header={t('sendSelectReceiveAsset')}\n          asset={isSwapAllowed ? receiveAsset : sendAsset}\n          sendingAsset={\n            isSwapAllowed &&\n            sendAsset && {\n              image:\n                sendAsset.type === AssetType.native\n                  ? nativeCurrencyImageUrl\n                  : tokenList &&\n                    sendAsset.details &&\n                    (nftImageURL ||\n                      tokenList[sendAsset.details.address?.toLowerCase()]\n                        ?.iconUrl),\n              symbol: sendAsset?.details?.symbol || nativeCurrencySymbol,\n            }\n          }\n          onAssetChange={useCallback(\n            (newAsset) => onAssetChange(newAsset, isSwapAllowed),\n            [onAssetChange, isSwapAllowed],\n          )}\n          isAmountLoading={isLoadingInitialQuotes}\n          amount={amount}\n          isDisabled={!isSwapAllowed}\n          onClick={onClick}\n          visibleTabs={[TabName.TOKENS]}\n        />\n      </SendPageRow>\n      <QuoteCard scrollRef={scrollRef} />\n      {showHexData ? <SendHexData /> : null}\n      {/* SCROLL REF ANCHOR */}\n      <div ref={scrollRef} />\n    </Box>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Label } from '../../../../component-library';\nimport DomainInput from '../../../../../pages/confirmations/send/send-content/add-recipient/domain-input';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport {\n  addHistoryEntry,\n  getIsUsingMyAccountForRecipientSearch,\n  getRecipient,\n  getRecipientUserInput,\n  resetRecipientInput,\n  updateRecipient,\n  updateRecipientUserInput,\n} from '../../../../../ducks/send';\nimport { showQrScanner } from '../../../../../store/actions';\nimport { MetaMetricsContext } from '../../../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../../shared/constants/metametrics';\nimport { shortenAddress } from '../../../../../helpers/utils/util';\nimport { toChecksumHexAddress } from '../../../../../../shared/modules/hexstring-utils';\nimport { SendPageRow } from '.';\n\nexport const SendPageRecipientInput = () => {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const recipient = useSelector(getRecipient);\n  const userInput = useSelector(getRecipientUserInput);\n  const isUsingMyAccountsForRecipientSearch = useSelector(\n    getIsUsingMyAccountForRecipientSearch,\n  );\n\n  return (\n    <SendPageRow>\n      <Label paddingBottom={2}>{t('to')}</Label>\n      <DomainInput\n        userInput={userInput}\n        onChange={(address: string) =>\n          dispatch(updateRecipientUserInput(address))\n        }\n        onValidAddressTyped={async (address: string) => {\n          dispatch(\n            addHistoryEntry(`sendFlow - Valid address typed ${address}`),\n          );\n          await dispatch(updateRecipientUserInput(address));\n          trackEvent(\n            {\n              event: MetaMetricsEventName.sendRecipientSelected,\n              category: MetaMetricsEventCategory.Send,\n              properties: {\n                location: 'send page recipient input',\n                inputType: 'user input',\n              },\n            },\n            { excludeMetaMetricsId: false },\n          );\n          dispatch(updateRecipient({ address, nickname: '' }));\n        }}\n        internalSearch={isUsingMyAccountsForRecipientSearch}\n        selectedAddress={recipient.address}\n        selectedName={\n          recipient.nickname === recipient.address\n            ? shortenAddress(toChecksumHexAddress(recipient.address))\n            : recipient.nickname\n        }\n        onPaste={(text: string) => {\n          dispatch(\n            addHistoryEntry(\n              `sendFlow - User pasted ${text} into address field`,\n            ),\n          );\n        }}\n        onReset={() => dispatch(resetRecipientInput())}\n        scanQrCode={() => {\n          trackEvent({\n            event: 'Used QR scanner',\n            category: MetaMetricsEventCategory.Transactions,\n            properties: {\n              action: 'Edit Screen',\n              legacy_event: true,\n            },\n          });\n          dispatch(showQrScanner());\n        }}\n      />\n    </SendPageRow>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport {\n  addHistoryEntry,\n  getRecipient,\n  getRecipientUserInput,\n  updateRecipient,\n  updateRecipientUserInput,\n} from '../../../../../ducks/send';\nimport {\n  getDomainError,\n  getDomainResolutions,\n  getDomainWarning,\n} from '../../../../../ducks/domains';\nimport {\n  BannerAlert,\n  BannerAlertSeverity,\n  Box,\n} from '../../../../component-library';\nimport { Tab, Tabs } from '../../../../ui/tabs';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../../shared/constants/metametrics';\nimport { MetaMetricsContext } from '../../../../../contexts/metametrics';\nimport { DomainInputResolutionCell } from './domain-input-resolution-cell';\nimport { SendPageAddressBook, SendPageRow, SendPageYourAccounts } from '.';\n\nconst CONTACTS_TAB_KEY = 'contacts';\nconst ACCOUNTS_TAB_KEY = 'accounts';\n\nexport const SendPageRecipient = () => {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const recipient = useSelector(getRecipient);\n  const userInput = useSelector(getRecipientUserInput) || '';\n\n  const domainResolutions = useSelector(getDomainResolutions) || [];\n  const domainError = useSelector(getDomainError);\n  const domainWarning = useSelector(getDomainWarning);\n\n  const showErrorBanner =\n    domainError || (recipient.error && recipient.error !== 'required');\n  const showWarningBanner =\n    !showErrorBanner && (domainWarning || recipient.warning);\n\n  type DomainResolution = {\n    resolvedAddress: string;\n    resolvingSnap?: string;\n    protocol: string;\n    addressBookEntryName?: string;\n    domainName: string;\n  };\n\n  const onClick = (\n    address: string,\n    nickname: string,\n    type: string = 'user input',\n  ) => {\n    dispatch(\n      addHistoryEntry(\n        `sendFlow - User clicked recipient from ${type}. address: ${address}, nickname ${nickname}`,\n      ),\n    );\n    trackEvent(\n      {\n        event: MetaMetricsEventName.sendRecipientSelected,\n        category: MetaMetricsEventCategory.Send,\n        properties: {\n          location: 'send page recipient screen',\n          inputType: type,\n        },\n      },\n      { excludeMetaMetricsId: false },\n    );\n    dispatch(updateRecipient({ address, nickname }));\n    dispatch(updateRecipientUserInput(address));\n  };\n\n  let contents;\n  if (recipient.address) {\n    contents = (\n      <DomainInputResolutionCell\n        address={recipient.address}\n        domainName={recipient.nickname}\n        onClick={() => onClick(recipient.address, recipient.nickname)}\n      />\n    );\n  } else if (domainResolutions?.length > 0 && !recipient.error) {\n    contents = domainResolutions.map((domainResolution: DomainResolution) => {\n      const {\n        resolvedAddress,\n        resolvingSnap,\n        addressBookEntryName,\n        protocol,\n        domainName,\n      } = domainResolution;\n      return (\n        <DomainInputResolutionCell\n          key={`${resolvedAddress}${resolvingSnap}${protocol}`}\n          address={resolvedAddress}\n          domainName={addressBookEntryName ?? domainName}\n          onClick={() =>\n            onClick(\n              resolvedAddress,\n              addressBookEntryName ?? domainName,\n              'Domain resolution',\n            )\n          }\n          protocol={protocol}\n          resolvingSnap={resolvingSnap}\n        />\n      );\n    });\n  } else {\n    contents = (\n      <Tabs\n        defaultActiveTabKey={\n          userInput.length > 0 ? CONTACTS_TAB_KEY : ACCOUNTS_TAB_KEY\n        }\n      >\n        {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Tab tabKey={ACCOUNTS_TAB_KEY} name={t('yourAccounts')}>\n            <SendPageYourAccounts />\n          </Tab>\n        }\n        {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Tab\n            tabKey={CONTACTS_TAB_KEY}\n            name={t('contacts')}\n            data-testid=\"send-contacts-tab\"\n          >\n            <SendPageAddressBook />\n          </Tab>\n        }\n      </Tabs>\n    );\n  }\n\n  return (\n    <>\n      {showErrorBanner ? (\n        <SendPageRow>\n          <BannerAlert\n            severity={BannerAlertSeverity.Danger}\n            data-testid=\"send-recipient-error\"\n          >\n            {t(domainError ?? recipient.error)}\n          </BannerAlert>\n        </SendPageRow>\n      ) : null}\n      {showWarningBanner ? (\n        <SendPageRow>\n          <BannerAlert\n            severity={BannerAlertSeverity.Warning}\n            data-testid=\"send-recipient-warning\"\n          >\n            {t(domainWarning ?? recipient.warning)}\n          </BannerAlert>\n        </SendPageRow>\n      ) : null}\n      <Box className=\"multichain-send-page__recipient\">{contents}</Box>\n    </>\n  );\n};\n","import React from 'react';\nimport { Box } from '../../../../component-library';\nimport {\n  Display,\n  FlexDirection,\n} from '../../../../../helpers/constants/design-system';\n\nexport const SendPageRow = ({\n  children,\n}: {\n  children: React.ReactNode | React.ReactNode[];\n}) => (\n  <Box\n    display={Display.Flex}\n    paddingBottom={4}\n    flexDirection={FlexDirection.Column}\n  >\n    {children}\n  </Box>\n);\n","import React, { useContext, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  EthAccountType,\n  InternalAccount,\n  KeyringAccountType,\n} from '@metamask/keyring-api';\nimport {\n  getUpdatedAndSortedAccounts,\n  getInternalAccounts,\n  getSelectedInternalAccount,\n} from '../../../../../selectors';\nimport { AccountListItem } from '../../..';\nimport {\n  addHistoryEntry,\n  updateRecipient,\n  updateRecipientUserInput,\n} from '../../../../../ducks/send';\nimport { mergeAccounts } from '../../../account-list-menu/account-list-menu';\nimport { MetaMetricsContext } from '../../../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../../shared/constants/metametrics';\nimport { MergedInternalAccount } from '../../../../../selectors/selectors.types';\nimport { SendPageRow } from '.';\n\ntype SendPageYourAccountsProps = {\n  allowedAccountTypes?: KeyringAccountType[];\n};\n\nconst defaultAllowedAccountTypes = [EthAccountType.Eoa, EthAccountType.Erc4337];\n\nexport const SendPageYourAccounts = ({\n  allowedAccountTypes = defaultAllowedAccountTypes,\n}: SendPageYourAccountsProps) => {\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  // Your Accounts\n  const accounts = useSelector(getUpdatedAndSortedAccounts);\n  const internalAccounts = useSelector(getInternalAccounts);\n  const mergedAccounts: MergedInternalAccount[] = useMemo(() => {\n    return mergeAccounts(accounts, internalAccounts).filter(\n      (account: InternalAccount) => allowedAccountTypes.includes(account.type),\n    );\n  }, [accounts, internalAccounts]);\n  const selectedAccount = useSelector(getSelectedInternalAccount);\n\n  return (\n    <SendPageRow>\n      {/* TODO: Replace `any` with type */}\n      {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n      {mergedAccounts.map((account: any) => (\n        <AccountListItem\n          account={account}\n          selected={selectedAccount.address === account.address}\n          key={account.address}\n          isPinned={Boolean(account.pinned)}\n          onClick={() => {\n            dispatch(\n              addHistoryEntry(\n                `sendFlow - User clicked recipient from my accounts. address: ${account.address}, nickname ${account.name}`,\n              ),\n            );\n            trackEvent(\n              {\n                event: MetaMetricsEventName.sendRecipientSelected,\n                category: MetaMetricsEventCategory.Send,\n                properties: {\n                  location: 'my accounts',\n                  inputType: 'click',\n                },\n              },\n              { excludeMetaMetricsId: false },\n            );\n            dispatch(\n              updateRecipient({\n                address: account.address,\n                nickname: account.name,\n              }),\n            );\n            dispatch(updateRecipientUserInput(account.address));\n          }}\n        />\n      ))}\n    </SendPageRow>\n  );\n};\n","export { SendPage } from './send';\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Tooltip } from 'react-tippy';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport {\n  ButtonIcon,\n  ButtonIconSize,\n  ButtonPrimary,\n  ButtonPrimarySize,\n  ButtonSecondary,\n  ButtonSecondarySize,\n  IconName,\n  Box,\n} from '../../../component-library';\nimport { Content, Footer, Header, Page } from '../page';\nimport {\n  SEND_STAGES,\n  getCurrentDraftTransaction,\n  getDraftTransactionExists,\n  getDraftTransactionID,\n  getRecipient,\n  getRecipientWarningAcknowledgement,\n  getSendAnalyticProperties,\n  getSendErrors,\n  getSendStage,\n  isSendFormInvalid,\n  resetSendState,\n  signTransaction,\n  startNewDraftTransaction,\n  updateSendAmount,\n  updateSendAsset,\n} from '../../../../ducks/send';\nimport {\n  TokenStandard,\n  AssetType,\n  SmartTransactionStatus,\n} from '../../../../../shared/constants/transaction';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\nimport { INSUFFICIENT_FUNDS_ERROR } from '../../../../pages/confirmations/send/send.constants';\nimport { cancelTx, showQrScanner } from '../../../../store/actions';\nimport {\n  DEFAULT_ROUTE,\n  SEND_ROUTE,\n} from '../../../../helpers/constants/routes';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../shared/constants/metametrics';\nimport { getMostRecentOverviewPage } from '../../../../ducks/history/history';\nimport { AssetPickerAmount } from '../..';\nimport useUpdateSwapsState from '../../../../pages/swaps/hooks/useUpdateSwapsState';\nimport { getIsDraftSwapAndSend } from '../../../../ducks/send/helpers';\nimport { smartTransactionsListSelector } from '../../../../selectors';\nimport { TextVariant } from '../../../../helpers/constants/design-system';\nimport { TRANSACTION_ERRORED_EVENT } from '../../../app/transaction-activity-log/transaction-activity-log.constants';\nimport {\n  SendPageAccountPicker,\n  SendPageRecipientContent,\n  SendPageRecipient,\n  SendPageRecipientInput,\n} from './components';\n\nexport const SendPage = () => {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n\n  const startedNewDraftTransaction = useRef(false);\n  const draftTransactionExists = useSelector(getDraftTransactionExists);\n\n  const draftTransaction = useSelector(getCurrentDraftTransaction);\n\n  const {\n    sendAsset: transactionAsset,\n    amount,\n    swapQuotesError,\n  } = draftTransaction;\n\n  const draftTransactionID = useSelector(getDraftTransactionID);\n  const mostRecentOverviewPage = useSelector(getMostRecentOverviewPage);\n  const sendStage = useSelector(getSendStage);\n  const isSwapAndSend = getIsDraftSwapAndSend(draftTransaction);\n\n  const history = useHistory();\n  const location = useLocation();\n  const trackEvent = useContext(MetaMetricsContext);\n  const sendAnalytics = useSelector(getSendAnalyticProperties);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(undefined);\n\n  const handleSelectToken = useCallback(\n    (token, isReceived) => {\n      const tokenType = token.type.toUpperCase();\n      switch (tokenType) {\n        case TokenStandard.ERC20:\n        case 'TOKEN':\n          token.type = AssetType.token;\n          token.standard = TokenStandard.ERC20;\n          break;\n        case TokenStandard.ERC721:\n          token.type = AssetType.NFT;\n          token.standard = TokenStandard.ERC721;\n          token.isERC721 = true;\n          break;\n        case TokenStandard.ERC1155:\n          token.type = AssetType.NFT;\n          token.standard = TokenStandard.ERC1155;\n          break;\n        default:\n          if (tokenType === 'NATIVE') {\n            break;\n          }\n          token.type = AssetType.unknown;\n          token.standard = TokenStandard.none;\n          break;\n      }\n\n      token.image = token.image ?? token.iconUrl;\n\n      if (token.type === AssetType.native) {\n        dispatch(\n          updateSendAsset({\n            type: token.type,\n            details: token,\n            skipComputeEstimatedGasLimit: false,\n            isReceived,\n          }),\n        );\n      } else {\n        dispatch(\n          updateSendAsset({\n            type: token.type ?? AssetType.token,\n            details: {\n              ...token,\n              standard: token.standard ?? TokenStandard.ERC20,\n            },\n            skipComputeEstimatedGasLimit: false,\n            isReceived,\n          }),\n        );\n      }\n\n      trackEvent(\n        {\n          event: MetaMetricsEventName.sendAssetSelected,\n          category: MetaMetricsEventCategory.Send,\n          properties: {\n            is_destination_asset_picker_modal: Boolean(isReceived),\n            is_nft: false,\n          },\n          sensitiveProperties: {\n            ...sendAnalytics,\n            new_asset_symbol: token.symbol,\n            new_asset_address: token.address,\n          },\n        },\n        { excludeMetaMetricsId: false },\n      );\n      history.push(SEND_ROUTE);\n    },\n    [dispatch, history, sendAnalytics, trackEvent],\n  );\n\n  const handleAssetPickerClick = useCallback(\n    (isDest) => {\n      trackEvent(\n        {\n          event: MetaMetricsEventName.sendTokenModalOpened,\n          category: MetaMetricsEventCategory.Send,\n          properties: {\n            is_destination_asset_picker_modal: Boolean(isDest),\n          },\n          sensitiveProperties: {\n            ...sendAnalytics,\n          },\n        },\n        { excludeMetaMetricsId: false },\n      );\n    },\n    [sendAnalytics, trackEvent],\n  );\n\n  const cleanup = useCallback(() => {\n    dispatch(resetSendState());\n    setIsSubmitting(false);\n    setError(undefined);\n  }, [dispatch]);\n\n  /**\n   * It is possible to route to this page directly, either by typing in the url\n   * or by clicking the browser back button after progressing to the confirm\n   * screen. In the case where a draft transaction does not yet exist, this\n   * hook is responsible for creating it. We will assume that this is a native\n   * asset send.\n   */\n  useEffect(() => {\n    if (\n      draftTransactionExists === false &&\n      startedNewDraftTransaction.current === false\n    ) {\n      startedNewDraftTransaction.current = true;\n      dispatch(startNewDraftTransaction({ type: AssetType.native }));\n    }\n  }, [draftTransactionExists, dispatch]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', cleanup);\n  }, [cleanup]);\n\n  useEffect(() => {\n    if (location.search === '?scan=true') {\n      dispatch(showQrScanner());\n\n      // Clear the queryString param after showing the modal\n      const [cleanUrl] = window.location.href.split('?');\n      window.history.pushState({}, null, `${cleanUrl}`);\n      window.location.hash = '#send';\n    }\n  }, [location, dispatch]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetSendState());\n      window.removeEventListener('beforeunload', cleanup);\n    };\n  }, [dispatch, cleanup]);\n\n  const onCancel = () => {\n    if (draftTransactionID) {\n      dispatch(cancelTx({ id: draftTransactionID }));\n    }\n    dispatch(resetSendState());\n\n    trackEvent(\n      {\n        event: MetaMetricsEventName.sendFlowExited,\n        category: MetaMetricsEventCategory.Send,\n        sensitiveProperties: {\n          ...sendAnalytics,\n        },\n      },\n      { excludeMetaMetricsId: false },\n    );\n\n    const nextRoute =\n      sendStage === SEND_STAGES.EDIT ? DEFAULT_ROUTE : mostRecentOverviewPage;\n    history.push(nextRoute);\n  };\n\n  useEffect(() => {\n    if (swapQuotesError) {\n      trackEvent(\n        {\n          event: MetaMetricsEventName.sendSwapQuoteError,\n          category: MetaMetricsEventCategory.Send,\n          sensitiveProperties: {\n            ...sendAnalytics,\n          },\n        },\n        { excludeMetaMetricsId: false },\n      );\n    }\n    // sendAnalytics should not result in the event refiring\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trackEvent, swapQuotesError]);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    setIsSubmitting(true);\n    setError(undefined);\n\n    try {\n      await dispatch(signTransaction(history));\n\n      trackEvent({\n        category: MetaMetricsEventCategory.Transactions,\n        event: 'Complete',\n        properties: {\n          ...sendAnalytics,\n          action: isSwapAndSend ? 'Submit Immediately' : 'Edit Screen',\n          legacy_event: true,\n        },\n      });\n    } catch {\n      setError(TRANSACTION_ERRORED_EVENT);\n    } finally {\n      // prevents state update on unmounted component error\n      if (isSubmitting) {\n        setIsSubmitting(false);\n      }\n    }\n  };\n\n  // Submit button\n  const recipient = useSelector(getRecipient);\n  const showKnownRecipientWarning =\n    recipient.warning === 'knownAddressRecipient';\n  const recipientWarningAcknowledged = useSelector(\n    getRecipientWarningAcknowledgement,\n  );\n  const requireContractAddressAcknowledgement =\n    showKnownRecipientWarning && !recipientWarningAcknowledged;\n\n  const sendErrors = useSelector(getSendErrors);\n  const isInvalidSendForm = useSelector(isSendFormInvalid);\n\n  const smartTransactions = useSelector(smartTransactionsListSelector);\n\n  const isSmartTransactionPending = smartTransactions?.find(\n    ({ status }) => status === SmartTransactionStatus.pending,\n  );\n\n  const isGasTooLow =\n    sendErrors.gasFee === INSUFFICIENT_FUNDS_ERROR &&\n    sendErrors.amount !== INSUFFICIENT_FUNDS_ERROR;\n\n  const submitDisabled =\n    (isInvalidSendForm && !isGasTooLow) ||\n    requireContractAddressAcknowledgement ||\n    (isSwapAndSend && isSmartTransactionPending);\n\n  const isSendFormShown =\n    draftTransactionExists &&\n    [SEND_STAGES.EDIT, SEND_STAGES.DRAFT].includes(sendStage);\n\n  const handleSelectSendToken = useCallback(\n    (newToken) => handleSelectToken(newToken, false),\n    [handleSelectToken],\n  );\n\n  useUpdateSwapsState();\n\n  const onAmountChange = useCallback(\n    (newAmountRaw, newAmountFormatted) => {\n      dispatch(updateSendAmount(newAmountRaw, newAmountFormatted));\n      setError(undefined);\n    },\n    [dispatch],\n  );\n\n  let tooltipTitle = '';\n\n  if (isSwapAndSend) {\n    tooltipTitle = isSmartTransactionPending\n      ? t('isSigningOrSubmitting')\n      : t('sendSwapSubmissionWarning');\n  }\n\n  return (\n    <Page className=\"multichain-send-page\">\n      <Header\n        textProps={{\n          variant: TextVariant.headingSm,\n        }}\n        startAccessory={\n          <ButtonIcon\n            size={ButtonIconSize.Sm}\n            ariaLabel={t('back')}\n            iconName={IconName.ArrowLeft}\n            onClick={onCancel}\n          />\n        }\n      >\n        {t('send')}\n      </Header>\n      <Content>\n        <SendPageAccountPicker />\n        {isSendFormShown && (\n          <AssetPickerAmount\n            error={error}\n            header={t('sendSelectSendAsset')}\n            asset={transactionAsset}\n            amount={amount}\n            onAssetChange={handleSelectSendToken}\n            onAmountChange={onAmountChange}\n            onClick={() => handleAssetPickerClick(false)}\n          />\n        )}\n        <Box marginTop={6}>\n          <SendPageRecipientInput />\n          {isSendFormShown ? (\n            <SendPageRecipientContent\n              requireContractAddressAcknowledgement={\n                requireContractAddressAcknowledgement\n              }\n              onAssetChange={handleSelectToken}\n              onClick={() => handleAssetPickerClick(true)}\n            />\n          ) : (\n            <SendPageRecipient />\n          )}\n        </Box>\n      </Content>\n      <Footer>\n        <ButtonSecondary\n          className=\"multichain-send-page__nav-button\"\n          onClick={onCancel}\n          size={ButtonSecondarySize.Lg}\n          block\n        >\n          {sendStage === SEND_STAGES.EDIT ? t('reject') : t('cancel')}\n        </ButtonSecondary>\n        <Tooltip\n          // changing key forces remount on title change\n          key={tooltipTitle}\n          className=\"multichain-send-page__nav-button\"\n          title={tooltipTitle}\n          disabled={!isSwapAndSend}\n          arrow\n          hideOnClick={false}\n          // explicitly inherit display since Tooltip will default to block\n          style={{\n            display: 'inline-flex',\n          }}\n        >\n          <ButtonPrimary\n            onClick={onSubmit}\n            loading={isSubmitting}\n            size={ButtonPrimarySize.Lg}\n            disabled={submitDisabled || isSubmitting}\n            block\n          >\n            {t(isSwapAndSend ? 'confirm' : 'continue')}\n          </ButtonPrimary>\n        </Tooltip>\n      </Footer>\n    </Page>\n  );\n};\n","export { PermissionDetailsModal } from './permission-details-modal';\n","import React from 'react';\nimport { flatten } from 'lodash';\nimport { useSelector } from 'react-redux';\nimport {\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  Modal,\n  Box,\n  Text,\n  AvatarAccount,\n  ModalFooter,\n  Button,\n  IconName,\n  ButtonVariant,\n  AvatarAccountSize,\n  AvatarAccountVariant,\n  ModalBody,\n  ButtonSize,\n} from '../../component-library';\nimport { getUseBlockie } from '../../../selectors';\nimport { shortenAddress } from '../../../helpers/utils/util';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { getPermissionDescription } from '../../../helpers/utils/permission';\nimport PermissionCell from '../../app/permission-cell';\nimport {\n  Identity,\n  Permission,\n} from '../connected-accounts-menu/connected-accounts-menu.types';\nimport {\n  AlignItems,\n  Display,\n  JustifyContent,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\nexport const PermissionDetailsModal = ({\n  onClose,\n  onClick,\n  isOpen,\n  account,\n  permissions,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  onClick: () => void;\n  account: Identity;\n  permissions: Permission[];\n}) => {\n  const t = useI18nContext();\n  const useBlockie = useSelector(getUseBlockie);\n\n  const permissionLabels = flatten(\n    permissions.map(({ key, value }) =>\n      getPermissionDescription({\n        t,\n        permissionName: key,\n        permissionValue: value,\n        subjectName: '', // Used for snaps but for accounts we can set a default one. It's not used here. Done to avoid TS errors\n        getSubjectName: () => '', // Used for snaps but for accounts we can set a default one. It's not used here. Done to avoid TS errors\n      }),\n    ),\n  );\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      data-testid=\"permission-details-modal\"\n      onClose={onClose}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader onClose={onClose}>\n          <Box\n            display={Display.Flex}\n            alignItems={AlignItems.center}\n            justifyContent={JustifyContent.center}\n            gap={2}\n          >\n            <AvatarAccount\n              size={AvatarAccountSize.Sm}\n              address={account.address}\n              variant={\n                useBlockie\n                  ? AvatarAccountVariant.Blockies\n                  : AvatarAccountVariant.Jazzicon\n              }\n            />\n            <Text variant={TextVariant.headingSm}>\n              {account.metadata.name\n                ? account.metadata.name\n                : shortenAddress(account.address)}\n            </Text>\n          </Box>\n        </ModalHeader>\n        <ModalBody>\n          {permissionLabels.map((permission, index) => (\n            <PermissionCell\n              permissionName={permission.permissionName}\n              title={permission.label}\n              description={permission.description}\n              weight={permission.weight}\n              avatarIcon={permission.leftIcon}\n              // TODO: Replace `any` with type\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              dateApproved={(permission?.permissionValue as any).date}\n              key={`${permission.permissionName}-${index}`}\n            />\n          ))}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            startIconName={IconName.Logout}\n            variant={ButtonVariant.Secondary}\n            onClick={onClick}\n            size={ButtonSize.Lg}\n            danger\n            block\n            data-testid=\"disconnect\"\n          >\n            {t('disconnect')}\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n","export { ProductTour } from './product-tour-popover';\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  IconColor,\n  JustifyContent,\n  Size,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  Box,\n  ButtonBase,\n  ButtonIcon,\n  IconName,\n  Text,\n} from '../../component-library';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { Menu } from '../../ui/menu';\n\nexport const ProductTour = ({\n  className,\n  prevIcon,\n  title,\n  description,\n  currentStep,\n  totalSteps,\n  positionObj = '5%',\n  closeMenu,\n  anchorElement,\n  onClick,\n  prevClick,\n  productTourDirection,\n  ...props\n}) => {\n  const t = useI18nContext();\n  return (\n    <Menu\n      className={classnames(\n        'multichain-product-tour-menu',\n        {\n          'multichain-product-tour-menu--rtl': productTourDirection === 'rtl',\n        },\n        className,\n      )}\n      anchorElement={anchorElement}\n      onHide={closeMenu}\n      data-testid=\"multichain-product-tour-menu-popover\"\n      {...props}\n    >\n      <Box\n        className=\"multichain-product-tour-menu__container\"\n        backgroundColor={BackgroundColor.infoDefault}\n        borderRadius={BorderRadius.LG}\n        padding={4}\n      >\n        <Box\n          borderWidth={1}\n          className=\"multichain-product-tour-menu__arrow\"\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n          alignItems={AlignItems.center}\n          style={{ right: positionObj }}\n        />\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          className=\"multichain-product-tour-menu__header\"\n        >\n          {prevIcon ? (\n            <ButtonIcon\n              iconName={IconName.ArrowLeft}\n              size={Size.SM}\n              color={IconColor.infoInverse}\n              onClick={prevClick}\n              className=\"multichain-product-tour-menu__previous-icon\"\n              data-testid=\"multichain-product-tour-menu-popover-prevIcon\"\n            />\n          ) : null}\n          <Text\n            textAlign={TextAlign.Center}\n            variant={TextVariant.headingSm}\n            width={BlockSize.Full}\n            color={TextColor.infoInverse}\n          >\n            {title}\n          </Text>\n        </Box>\n        <Text\n          paddingBottom={2}\n          paddingTop={2}\n          color={TextColor.infoInverse}\n          variant={TextVariant.bodyMd}\n        >\n          {description}\n        </Text>\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          justifyContent={JustifyContent.spaceBetween}\n        >\n          <Text\n            paddingBottom={2}\n            paddingTop={2}\n            color={TextColor.infoInverse}\n            variant={TextVariant.bodyMd}\n            data-testid=\"multichain-product-tour-menu-popover-step-counter\"\n          >\n            {currentStep && totalSteps\n              ? `${currentStep} / ${totalSteps}`\n              : null}\n          </Text>\n          <ButtonBase\n            backgroundColor={BackgroundColor.primaryInverse}\n            color={TextColor.primaryDefault}\n            className=\"multichain-product-tour-menu__button\"\n            onClick={onClick}\n          >\n            {t('recoveryPhraseReminderConfirm')}\n          </ButtonBase>\n        </Box>\n      </Box>\n    </Menu>\n  );\n};\n\nProductTour.propTypes = {\n  /**\n   * The element that the menu should display next to\n   */\n  anchorElement: PropTypes.instanceOf(window.Element),\n  /**\n   * Function that closes this menu\n   */\n  closeMenu: PropTypes.func.isRequired,\n  /**\n   * Additional classNames to be added\n   */\n  className: PropTypes.string,\n  /**\n   * Boolean to decide whether to show prevIcon or not\n   */\n  prevIcon: PropTypes.bool,\n  /**\n   * Title of the popover\n   */\n  title: PropTypes.string,\n  /**\n   * Description of the popover\n   */\n  description: PropTypes.string,\n  /**\n   * Current step in the product tour\n   */\n  currentStep: PropTypes.string,\n  /**\n   * Total steps in the product tour\n   */\n  totalSteps: PropTypes.string,\n  /**\n   * PositionObj to decide the position of the popover tip\n   */\n  positionObj: PropTypes.string,\n  /**\n   * The onClick handler to be passed\n   */\n  onClick: PropTypes.func,\n  /**\n   * The handler to be passed to prevIcon\n   */\n  prevClick: PropTypes.func,\n  /**\n   * Direction to determine the css for menu component\n   */\n  productTourDirection: PropTypes.string,\n};\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport { Box, Text, ButtonBase } from '../../component-library';\nimport {\n  BorderRadius,\n  Display,\n  FlexDirection,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  getMultichainDefaultToken,\n  getMultichainCurrentNetwork,\n} from '../../../selectors/multichain';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport useRamps, {\n  RampsMetaMaskEntry,\n} from '../../../hooks/ramps/useRamps/useRamps';\nimport { ORIGIN_METAMASK } from '../../../../shared/constants/app';\nimport { getCurrentLocale } from '../../../ducks/locale/locale';\n\nconst darkenGradient =\n  'linear-gradient(rgba(0, 0, 0, 0.12),rgba(0, 0, 0, 0.12))';\n\nexport const RAMPS_CARD_VARIANT_TYPES = {\n  TOKEN: 'token',\n  NFT: 'nft',\n  ACTIVITY: 'activity',\n  BTC: 'btc',\n};\n\nexport const RAMPS_CARD_VARIANTS = {\n  [RAMPS_CARD_VARIANT_TYPES.TOKEN]: {\n    illustrationSrc: './images/ramps-card-token-illustration.png',\n    gradient:\n      // eslint-disable-next-line @metamask/design-tokens/color-no-hex\n      'linear-gradient(90deg, #0189EC 0%, #4B7AED 35%, #6774EE 58%, #706AF4 80.5%, #7C5BFC 100%)',\n    title: 'fundYourWallet',\n    body: 'getStartedByFundingWallet',\n  },\n  [RAMPS_CARD_VARIANT_TYPES.NFT]: {\n    illustrationSrc: './images/ramps-card-nft-illustration.png',\n    // eslint-disable-next-line @metamask/design-tokens/color-no-hex\n    gradient: 'linear-gradient(90deg, #F6822D 0%, #F894A7 52%, #ED94FB 92.5%)',\n    title: 'getStartedWithNFTs',\n    body: 'getStartedWithNFTsDescription',\n  },\n  [RAMPS_CARD_VARIANT_TYPES.ACTIVITY]: {\n    illustrationSrc: './images/ramps-card-activity-illustration.png',\n    gradient:\n      // eslint-disable-next-line @metamask/design-tokens/color-no-hex\n      'linear-gradient(90deg, #57C5DC 0%, #06BFDD 49.39%, #35A9C7 100%)',\n\n    title: 'startYourJourney',\n    body: 'startYourJourneyDescription',\n  },\n  [RAMPS_CARD_VARIANT_TYPES.BTC]: {\n    illustrationSrc: './images/ramps-card-btc-illustration.png',\n    gradient:\n      // eslint-disable-next-line @metamask/design-tokens/color-no-hex\n      'linear-gradient(90deg, #017ED9 0%, #446FD9 35%, #5E6AD9 58%, #635ED9 80.5%, #6855D9 92.5%, #6A4FD9 100%)',\n    title: 'fundYourWallet',\n    body: 'fundYourWalletDescription',\n  },\n};\n\nconst metamaskEntryMap = {\n  [RAMPS_CARD_VARIANT_TYPES.TOKEN]: RampsMetaMaskEntry.TokensBanner,\n  [RAMPS_CARD_VARIANT_TYPES.NFT]: RampsMetaMaskEntry.NftBanner,\n  [RAMPS_CARD_VARIANT_TYPES.ACTIVITY]: RampsMetaMaskEntry.ActivityBanner,\n  [RAMPS_CARD_VARIANT_TYPES.BTC]: RampsMetaMaskEntry.BtcBanner,\n};\n\nexport const RampsCard = ({ variant, handleOnClick }) => {\n  const t = useI18nContext();\n  const { gradient, illustrationSrc, title, body } =\n    RAMPS_CARD_VARIANTS[variant];\n  const { openBuyCryptoInPdapp } = useRamps(metamaskEntryMap[variant]);\n  const trackEvent = useContext(MetaMetricsContext);\n  const currentLocale = useSelector(getCurrentLocale);\n  const { chainId, nickname } = useSelector(getMultichainCurrentNetwork);\n  const { symbol } = useSelector(getMultichainDefaultToken);\n\n  const isTokenVariant = variant === RAMPS_CARD_VARIANT_TYPES.TOKEN;\n\n  useEffect(() => {\n    trackEvent({\n      event: MetaMetricsEventName.EmptyBuyBannerDisplayed,\n      category: MetaMetricsEventCategory.Navigation,\n      properties: {\n        // FIXME: This might not be a number for non-EVM networks\n        chain_id: chainId,\n        locale: currentLocale,\n        network: nickname,\n        referrer: ORIGIN_METAMASK,\n      },\n    });\n  }, [currentLocale, chainId, nickname, trackEvent]);\n\n  const onClick = useCallback(() => {\n    openBuyCryptoInPdapp(chainId);\n    trackEvent({\n      event: MetaMetricsEventName.NavBuyButtonClicked,\n      category: MetaMetricsEventCategory.Navigation,\n      properties: {\n        location: `${variant} tab`,\n        text: `Buy ${symbol}`,\n        // FIXME: This might not be a number for non-EVM networks\n        chain_id: chainId,\n        token_symbol: symbol,\n      },\n    });\n  }, [chainId, openBuyCryptoInPdapp, symbol, trackEvent, variant]);\n\n  return (\n    <Box\n      className={classnames('ramps-card', `ramps-card-${variant}`)}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      gap={2}\n      borderRadius={BorderRadius.LG}\n      margin={2}\n      style={{\n        background: `url(${illustrationSrc}) no-repeat right bottom / contain,\n            ${darkenGradient}, ${gradient}`,\n      }}\n    >\n      <Text className=\"ramps-card__title\" variant={TextVariant.headingSm}>\n        {t(title, [symbol])}\n      </Text>\n      <Text className=\"ramps-card__body\">{t(body, [symbol])}</Text>\n      <ButtonBase\n        className=\"ramps-card__cta-button\"\n        onClick={handleOnClick ?? onClick}\n      >\n        {isTokenVariant ? t('getStarted') : t('buyToken', [symbol])}\n      </ButtonBase>\n    </Box>\n  );\n};\n\nRampsCard.propTypes = {\n  variant: PropTypes.oneOf(Object.values(RAMPS_CARD_VARIANT_TYPES)),\n  handleOnClick: PropTypes.oneOfType([PropTypes.func, PropTypes.undefined]),\n};\n","export { ReceiveModal } from './receive-modal';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n} from '../../component-library';\nimport QrCodeView from '../../ui/qr-code-view';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { getInternalAccountByAddress } from '../../../selectors';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\n\nexport const ReceiveModal = ({ address, onClose }) => {\n  const t = useI18nContext();\n  const {\n    metadata: { name },\n  } = useSelector((state) => getInternalAccountByAddress(state, address));\n\n  return (\n    <Modal isOpen onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader marginBottom={4} onClose={onClose}>\n          {t('receive')}\n        </ModalHeader>\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          flexDirection={FlexDirection.Column}\n          paddingInlineEnd={4}\n          paddingInlineStart={4}\n        >\n          <QrCodeView Qr={{ data: address }} accountName={name} />\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nReceiveModal.propTypes = {\n  address: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","export { ToastContainer, Toast } from './toast';\n","import React, { useEffect, useState } from 'react';\nimport { ThemeType } from '../../../../shared/constants/preferences';\nimport { BannerBase, Box, ButtonLink, Text } from '../../component-library';\nimport {\n  BorderRadius,\n  Display,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\nexport const ToastContainer = ({\n  children,\n}: {\n  children: React.ReactNode | string;\n}) => <Box className=\"toasts-container\">{children}</Box>;\n\nexport const Toast = ({\n  startAdornment,\n  text,\n  actionText,\n  onActionClick,\n  onClose,\n  borderRadius,\n  textVariant,\n  autoHideTime,\n  onAutoHideToast,\n  dataTestId,\n}: {\n  startAdornment: React.ReactNode | React.ReactNode[];\n  text: string;\n  actionText?: string;\n  onActionClick?: () => void;\n  onClose: () => void;\n  borderRadius?: BorderRadius;\n  textVariant?: TextVariant;\n  autoHideTime?: number;\n  onAutoHideToast?: () => void;\n  dataTestId?: string;\n}) => {\n  const { theme } = document.documentElement.dataset;\n  const [shouldDisplay, setShouldDisplay] = useState(true);\n  useEffect(\n    function () {\n      if (!autoHideTime || autoHideTime === 0) {\n        return undefined;\n      }\n\n      const timeout = setTimeout(() => {\n        setShouldDisplay(false);\n        onAutoHideToast?.();\n      }, autoHideTime);\n\n      return function () {\n        clearTimeout(timeout);\n      };\n    },\n    [autoHideTime],\n  );\n\n  if (!shouldDisplay) {\n    return null;\n  }\n\n  return (\n    <BannerBase\n      data-theme={theme === ThemeType.light ? ThemeType.dark : ThemeType.light}\n      onClose={onClose}\n      borderRadius={borderRadius}\n    >\n      <Box display={Display.Flex} gap={4} data-testid={dataTestId}>\n        {startAdornment}\n        <Box>\n          <Text className=\"toast-text\" variant={textVariant}>\n            {text}\n          </Text>\n          {actionText && onActionClick ? (\n            <ButtonLink onClick={onActionClick}>{actionText}</ButtonLink>\n          ) : null}\n        </Box>\n      </Box>\n    </BannerBase>\n  );\n};\n","export { TokenListItem } from './token-list-item';\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BigNumber } from 'bignumber.js';\nimport { isHexString, zeroAddress } from 'ethereumjs-util';\nimport { Text, Box } from '../../../../component-library';\nimport {\n  Display,\n  FontWeight,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport {\n  getCurrentCurrency,\n  getSelectedAccountCachedBalance,\n  getTokensMarketData,\n} from '../../../../../selectors';\nimport { getIntlLocale } from '../../../../../ducks/locale/locale';\nimport { EtherDenomination } from '../../../../../../shared/constants/common';\nimport { Numeric } from '../../../../../../shared/modules/Numeric';\nimport {\n  getConversionRate,\n  getNativeCurrency,\n} from '../../../../../ducks/metamask/metamask';\nimport {\n  formatValue,\n  isValidAmount,\n} from '../../../../../../app/scripts/lib/util';\n\nconst renderPercentageWithNumber = (\n  value: string,\n  formattedValuePrice: string,\n  color: TextColor,\n) => {\n  return (\n    <Box display={Display.Flex}>\n      <Text\n        fontWeight={FontWeight.Normal}\n        variant={TextVariant.bodyMd}\n        color={color}\n        data-testid=\"token-increase-decrease-value\"\n        style={{ whiteSpace: 'pre' }}\n        ellipsis\n      >\n        {formattedValuePrice}\n      </Text>\n      <Text\n        fontWeight={FontWeight.Normal}\n        variant={TextVariant.bodyMd}\n        color={color}\n        data-testid=\"token-increase-decrease-percentage\"\n        ellipsis\n      >\n        {value}\n      </Text>\n    </Box>\n  );\n};\n\nexport const PercentageAndAmountChange = ({\n  value,\n}: {\n  value: number | null | undefined;\n}) => {\n  const fiatCurrency = useSelector(getCurrentCurrency);\n  const locale = useSelector(getIntlLocale);\n  const balanceValue = useSelector(getSelectedAccountCachedBalance);\n  const conversionRate = useSelector(getConversionRate);\n  const nativeCurrency = useSelector(getNativeCurrency);\n  const marketData = useSelector(getTokensMarketData);\n\n  const balanceChange = useMemo(() => {\n    // Extracts the 1-day percentage change in price from marketData using the zero address as a key.\n    const percentage1d = marketData?.[zeroAddress()]?.pricePercentChange1d;\n\n    // Checks if the balanceValue is in hex format. This is important for cryptocurrency balances which are often represented in hex.\n    if (isHexString(balanceValue)) {\n      // Converts the hex string balanceValue to a Numeric object for precise arithmetic operations. Assumes balance is in WEI (smallest Ether unit).\n      let numeric = new Numeric(balanceValue, 16, EtherDenomination.WEI);\n\n      // If the native currency of the balance is different from the fiat currency, applies a conversion rate to the balance.\n      if (nativeCurrency !== fiatCurrency) {\n        numeric = numeric.applyConversionRate(conversionRate);\n      }\n\n      // If the numeric balance is zero, immediately returns 0 to indicate no change.\n      if (numeric.isZero()) {\n        return 0;\n      }\n\n      // If there's a valid 1-day percentage change, calculates the balance change.\n      if (percentage1d) {\n        return numeric\n          .toBase(10)\n          .toDenomination(EtherDenomination.ETH)\n          .round(2, BigNumber.ROUND_HALF_DOWN)\n          .times(percentage1d, 10)\n          .divide(100, 10)\n          .toNumber();\n      }\n      // Returns null if balanceValue is not a hex string or if percentage1d is not available.\n      return null;\n    }\n    return null;\n  }, [marketData]);\n\n  let color = TextColor.textDefault;\n\n  if (isValidAmount(balanceChange)) {\n    if ((balanceChange as number) === 0) {\n      color = TextColor.textDefault;\n    } else if ((balanceChange as number) > 0) {\n      color = TextColor.successDefault;\n    } else {\n      color = TextColor.errorDefault;\n    }\n  }\n\n  const formattedValue = formatValue(balanceChange === 0 ? 0 : value, true);\n\n  let formattedValuePrice = '';\n  if (isValidAmount(balanceChange)) {\n    formattedValuePrice = (balanceChange as number) >= 0 ? '+' : '';\n\n    const options = {\n      notation: 'compact',\n      compactDisplay: 'short',\n      maximumFractionDigits: 2,\n    } as const;\n\n    try {\n      // For currencies compliant with ISO 4217 Standard\n      formattedValuePrice += `${Intl.NumberFormat(locale, {\n        ...options,\n        style: 'currency',\n        currency: fiatCurrency,\n      }).format(balanceChange as number)} `;\n    } catch {\n      // Non-standard Currency Codes\n      formattedValuePrice += `${Intl.NumberFormat(locale, {\n        ...options,\n        minimumFractionDigits: 2,\n        style: 'decimal',\n      }).format(balanceChange as number)} `;\n    }\n  }\n\n  return renderPercentageWithNumber(formattedValue, formattedValuePrice, color);\n};\n","import React from 'react';\nimport { Box, Text } from '../../../../component-library';\nimport {\n  Display,\n  FontWeight,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport {\n  formatValue,\n  isValidAmount,\n} from '../../../../../../app/scripts/lib/util';\n\nexport const PercentageChange = ({\n  value,\n  address,\n}: {\n  value: number | null | undefined;\n  address: `0x${string}`;\n}) => {\n  let color = TextColor.textDefault;\n\n  if (isValidAmount(value)) {\n    if ((value as number) === 0) {\n      color = TextColor.textDefault;\n    } else if ((value as number) > 0) {\n      color = TextColor.successDefault;\n    } else {\n      color = TextColor.errorDefault;\n    }\n  }\n\n  const formattedValue = formatValue(value, false);\n\n  return (\n    <Box display={Display.Flex}>\n      <Text\n        fontWeight={FontWeight.Normal}\n        variant={TextVariant.bodyMd}\n        color={color}\n        data-testid={`token-increase-decrease-percentage-${address}`}\n        ellipsis\n      >\n        {formattedValue}\n      </Text>\n    </Box>\n  );\n};\n\nexport default PercentageChange;\n","import React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { zeroAddress } from 'ethereumjs-util';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexDirection,\n  FontWeight,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  AvatarToken,\n  BadgeWrapper,\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  ButtonSecondary,\n  Icon,\n  IconName,\n  IconSize,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '../../component-library';\nimport {\n  getMetaMetricsId,\n  getTestNetworkBackgroundColor,\n  getTokensMarketData,\n  getParticipateInMetaMetrics,\n  getDataCollectionForMarketing,\n} from '../../../selectors';\nimport {\n  getMultichainCurrentChainId,\n  getMultichainCurrentNetwork,\n  getMultichainIsEvm,\n} from '../../../selectors/multichain';\nimport Tooltip from '../../ui/tooltip';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport { CURRENCY_SYMBOLS } from '../../../../shared/constants/network';\n\nimport { NETWORKS_ROUTE } from '../../../helpers/constants/routes';\nimport { setEditedNetwork } from '../../../store/actions';\nimport { getPortfolioUrl } from '../../../helpers/utils/portfolio';\nimport { PercentageChange } from './price/percentage-change/percentage-change';\n\ntype TokenListItemProps = {\n  className?: string;\n  onClick?: (arg?: string) => void;\n  tokenSymbol?: string;\n  tokenImage: string;\n  primary?: string;\n  secondary?: string | null;\n  title: string;\n  tooltipText?: string;\n  isOriginalTokenSymbol?: boolean | null;\n  isNativeCurrency?: boolean;\n  isStakeable?: boolean;\n  address?: string | null;\n  showPercentage?: boolean;\n};\n\nexport const TokenListItem = ({\n  className,\n  onClick,\n  tokenSymbol,\n  tokenImage,\n  primary,\n  secondary,\n  title,\n  tooltipText,\n  isOriginalTokenSymbol,\n  isNativeCurrency = false,\n  isStakeable = false,\n  address = null,\n  showPercentage = false,\n}: TokenListItemProps) => {\n  const t = useI18nContext();\n  const isEvm = useSelector(getMultichainIsEvm);\n  const trackEvent = useContext(MetaMetricsContext);\n  const chainId = useSelector(getMultichainCurrentChainId);\n  const metaMetricsId = useSelector(getMetaMetricsId);\n  const isMetaMetricsEnabled = useSelector(getParticipateInMetaMetrics);\n  const isMarketingEnabled = useSelector(getDataCollectionForMarketing);\n\n  // Scam warning\n  const showScamWarning =\n    isNativeCurrency && !isOriginalTokenSymbol && showPercentage;\n\n  const dispatch = useDispatch();\n  const [showScamWarningModal, setShowScamWarningModal] = useState(false);\n  const history = useHistory();\n\n  const getTokenTitle = () => {\n    if (!isOriginalTokenSymbol) {\n      return title;\n    }\n    // We only consider native token symbols!\n    switch (title) {\n      case CURRENCY_SYMBOLS.ETH:\n        return t('networkNameEthereum');\n      case CURRENCY_SYMBOLS.BTC:\n        return t('networkNameBitcoin');\n      default:\n        return title;\n    }\n  };\n\n  const tokensMarketData = useSelector(getTokensMarketData);\n\n  const tokenPercentageChange = address\n    ? tokensMarketData?.[address]?.pricePercentChange1d\n    : null;\n\n  const tokenTitle = getTokenTitle();\n  const tokenMainTitleToDisplay = showPercentage ? tokenTitle : tokenSymbol;\n\n  const stakeableTitle = (\n    <Box\n      as=\"button\"\n      backgroundColor={BackgroundColor.transparent}\n      data-testid={`staking-entrypoint-${chainId}`}\n      gap={1}\n      paddingInline={0}\n      paddingInlineStart={1}\n      paddingInlineEnd={1}\n      tabIndex={0}\n      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const url = getPortfolioUrl(\n          'stake',\n          'ext_stake_button',\n          metaMetricsId,\n          isMetaMetricsEnabled,\n          isMarketingEnabled,\n        );\n        global.platform.openTab({ url });\n        trackEvent({\n          event: MetaMetricsEventName.StakingEntryPointClicked,\n          category: MetaMetricsEventCategory.Tokens,\n          properties: {\n            location: 'Token List Item',\n            text: 'Stake',\n            // FIXME: This might not be a number for non-EVM accounts\n            chain_id: chainId,\n            token_symbol: tokenSymbol,\n          },\n        });\n      }}\n    >\n      <Text as=\"span\">•</Text>\n      <Text\n        as=\"span\"\n        color={TextColor.primaryDefault}\n        paddingInlineStart={1}\n        paddingInlineEnd={1}\n        fontWeight={FontWeight.Medium}\n      >\n        {t('stake')}\n      </Text>\n      <Icon\n        name={IconName.Stake}\n        size={IconSize.Sm}\n        color={IconColor.primaryDefault}\n      />\n    </Box>\n  );\n  // Used for badge icon\n  const currentNetwork = useSelector(getMultichainCurrentNetwork);\n  const testNetworkBackgroundColor = useSelector(getTestNetworkBackgroundColor);\n\n  return (\n    <Box\n      className={classnames('multichain-token-list-item', className || {})}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      gap={4}\n      data-testid=\"multichain-token-list-item\"\n      title={tooltipText ? t(tooltipText) : undefined}\n    >\n      <Box\n        className={classnames('multichain-token-list-item__container-cell', {\n          'multichain-token-list-item__container-cell--clickable':\n            onClick !== undefined,\n        })}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        paddingTop={2}\n        paddingBottom={2}\n        paddingLeft={4}\n        paddingRight={4}\n        data-testid=\"multichain-token-list-button\"\n        {...(onClick && {\n          as: 'a',\n          href: '#',\n          onClick: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n            e.preventDefault();\n\n            if (showScamWarningModal) {\n              return;\n            }\n\n            onClick();\n            trackEvent({\n              category: MetaMetricsEventCategory.Tokens,\n              event: MetaMetricsEventName.TokenDetailsOpened,\n              properties: {\n                location: 'Home',\n                // FIXME: This might not be a number for non-EVM accounts\n                chain_id: chainId,\n                token_symbol: tokenSymbol,\n              },\n            });\n          },\n        })}\n      >\n        <BadgeWrapper\n          badge={\n            <AvatarNetwork\n              size={AvatarNetworkSize.Xs}\n              name={currentNetwork?.nickname || ''}\n              src={currentNetwork?.rpcPrefs?.imageUrl}\n              backgroundColor={testNetworkBackgroundColor}\n              className=\"multichain-token-list-item__badge__avatar-network\"\n            />\n          }\n          marginRight={4}\n          className=\"multichain-token-list-item__badge\"\n        >\n          <AvatarToken name={tokenSymbol} src={tokenImage} />\n        </BadgeWrapper>\n        <Box\n          className=\"multichain-token-list-item__container-cell--text-container\"\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          width={BlockSize.Full}\n          style={{ flexGrow: 1, overflow: 'hidden' }}\n        >\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Row}\n            justifyContent={JustifyContent.spaceBetween}\n            gap={1}\n          >\n            <Box\n              width={isStakeable ? BlockSize.Half : BlockSize.OneThird}\n              display={Display.InlineBlock}\n            >\n              {title?.length > 12 ? (\n                <Tooltip\n                  position=\"bottom\"\n                  html={title}\n                  tooltipInnerClassName=\"multichain-token-list-item__tooltip\"\n                >\n                  <Text\n                    as=\"span\"\n                    fontWeight={FontWeight.Medium}\n                    variant={TextVariant.bodyMd}\n                    ellipsis\n                  >\n                    {isStakeable ? (\n                      <>\n                        {tokenMainTitleToDisplay} {stakeableTitle}\n                      </>\n                    ) : (\n                      tokenMainTitleToDisplay\n                    )}\n                  </Text>\n                </Tooltip>\n              ) : (\n                <Text\n                  as=\"span\"\n                  fontWeight={FontWeight.Medium}\n                  variant={TextVariant.bodyMd}\n                  ellipsis\n                >\n                  {isStakeable ? (\n                    <Box display={Display.InlineBlock}>\n                      {tokenMainTitleToDisplay}\n                      {stakeableTitle}\n                    </Box>\n                  ) : (\n                    tokenMainTitleToDisplay\n                  )}\n                </Text>\n              )}\n\n              {isEvm && !showPercentage ? (\n                <Text\n                  variant={TextVariant.bodyMd}\n                  color={TextColor.textAlternative}\n                  data-testid=\"multichain-token-list-item-token-name\"\n                  ellipsis\n                >\n                  {tokenTitle}\n                </Text>\n              ) : (\n                <PercentageChange\n                  value={\n                    isNativeCurrency\n                      ? tokensMarketData?.[zeroAddress()]?.pricePercentChange1d\n                      : tokenPercentageChange\n                  }\n                  address={\n                    isNativeCurrency\n                      ? (zeroAddress() as `0x${string}`)\n                      : (address as `0x${string}`)\n                  }\n                />\n              )}\n            </Box>\n\n            {showScamWarning ? (\n              <Box\n                display={Display.Flex}\n                flexDirection={FlexDirection.Column}\n                width={isStakeable ? BlockSize.Half : BlockSize.TwoThirds}\n                alignItems={AlignItems.flexEnd}\n              >\n                <ButtonIcon\n                  iconName={IconName.Danger}\n                  onClick={(\n                    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n                  ) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setShowScamWarningModal(true);\n                  }}\n                  color={IconColor.errorDefault}\n                  size={ButtonIconSize.Md}\n                  backgroundColor={BackgroundColor.transparent}\n                  data-testid=\"scam-warning\"\n                  ariaLabel={''}\n                />\n\n                <Text\n                  data-testid=\"multichain-token-list-item-value\"\n                  color={TextColor.textAlternative}\n                  variant={TextVariant.bodyMd}\n                  textAlign={TextAlign.End}\n                >\n                  {primary} {isNativeCurrency ? '' : tokenSymbol}\n                </Text>\n              </Box>\n            ) : (\n              <Box\n                display={Display.Flex}\n                flexDirection={FlexDirection.Column}\n                width={isStakeable ? BlockSize.Half : BlockSize.TwoThirds}\n                alignItems={AlignItems.flexEnd}\n              >\n                <Text\n                  fontWeight={FontWeight.Medium}\n                  variant={TextVariant.bodyMd}\n                  width={isStakeable ? BlockSize.Half : BlockSize.TwoThirds}\n                  textAlign={TextAlign.End}\n                  data-testid=\"multichain-token-list-item-secondary-value\"\n                  ellipsis={isStakeable}\n                >\n                  {secondary}\n                </Text>\n                <Text\n                  data-testid=\"multichain-token-list-item-value\"\n                  color={TextColor.textAlternative}\n                  variant={TextVariant.bodyMd}\n                  textAlign={TextAlign.End}\n                >\n                  {primary} {isNativeCurrency ? '' : tokenSymbol}\n                </Text>\n              </Box>\n            )}\n          </Box>\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Row}\n            justifyContent={JustifyContent.spaceBetween}\n            gap={1}\n          ></Box>\n        </Box>\n      </Box>\n      {isEvm && showScamWarningModal ? (\n        <Modal isOpen onClose={() => setShowScamWarningModal(false)}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>{t('nativeTokenScamWarningTitle')}</ModalHeader>\n            <ModalBody>\n              <Box marginTop={4} marginBottom={4}>\n                {t('nativeTokenScamWarningDescription', [tokenSymbol])}\n              </Box>\n            </ModalBody>\n            <ModalFooter>\n              <ButtonSecondary\n                onClick={() => {\n                  dispatch(setEditedNetwork({ chainId }));\n                  history.push(NETWORKS_ROUTE);\n                }}\n                block\n              >\n                {t('nativeTokenScamWarningConversion')}\n              </ButtonSecondary>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      ) : null}\n    </Box>\n  );\n};\n","import React, { memo, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { isEqual } from 'lodash';\nimport { isEvmAccountType } from '@metamask/keyring-api';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport Identicon from '../identicon';\nimport UserPreferencedCurrencyDisplay from '../../app/user-preferenced-currency-display';\nimport { PRIMARY } from '../../../helpers/constants/common';\nimport Tooltip from '../tooltip';\nimport {\n  Box,\n  ButtonLink,\n  Checkbox,\n  Icon,\n  IconName,\n  Text,\n} from '../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  Color,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\nconst AccountList = ({\n  selectNewAccountViaModal,\n  accounts,\n  addressLastConnectedMap,\n  selectedAccounts,\n  nativeCurrency,\n  allAreSelected,\n  deselectAll,\n  selectAll,\n  handleAccountClick,\n}) => {\n  const t = useI18nContext();\n  const selectedAccountScrollRef = useRef(null);\n  useLayoutEffect(() => {\n    selectedAccountScrollRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, []);\n\n  const [firstSelectedAccount] = selectedAccounts;\n\n  const handleEvmAccountClick = (account) => {\n    if (!isEvmAccountType(account.type)) {\n      return;\n    }\n    handleAccountClick(account.address);\n  };\n\n  const Header = () => {\n    let checked = false;\n    let isIndeterminate = false;\n    if (allAreSelected()) {\n      checked = true;\n    } else if (selectedAccounts.size === 0) {\n      checked = false;\n    } else {\n      isIndeterminate = true;\n    }\n\n    return (\n      <div\n        className={classnames({\n          'choose-account-list__header--one-item': accounts.length === 1,\n          'choose-account-list__header--multiple-items': accounts.length > 1,\n        })}\n      >\n        {accounts.length > 1 ? (\n          <div className=\"choose-account-list__select-all\">\n            <Checkbox\n              className=\"choose-account-list__header-check-box\"\n              data-testid=\"choose-account-list-operate-all-check-box\"\n              isChecked={checked}\n              isIndeterminate={isIndeterminate}\n              onClick={() => (allAreSelected() ? deselectAll() : selectAll())}\n            />\n            <Text\n              as=\"div\"\n              className=\"choose-account-list__text-grey\"\n              color={TextColor.textAlternative}\n            >\n              {t('selectAll')}\n            </Text>\n            <Tooltip\n              position=\"bottom\"\n              html={\n                <div style={{ width: 200, padding: 4 }}>\n                  {t('selectingAllWillAllow')}\n                </div>\n              }\n            >\n              <Icon\n                name={IconName.Info}\n                color={IconColor.iconMuted}\n                className=\"info-circle\"\n                marginInlineStart={2}\n              />\n            </Tooltip>\n          </div>\n        ) : null}\n        <ButtonLink\n          color={TextColor.infoDefault}\n          variant={TextVariant.bodyMdMedium}\n          style={{\n            cursor: 'pointer',\n          }}\n          onClick={() => selectNewAccountViaModal(handleAccountClick)}\n        >\n          {t('newAccount')}\n        </ButtonLink>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"choose-account-list\">\n      <Header />\n      <div className=\"choose-account-list__wrapper\">\n        <Box\n          className=\"choose-account-list__list\"\n          style={{ overflowX: 'hidden' }}\n        >\n          {accounts.map((account, index) => {\n            const { address, addressLabel, balance } = account;\n            const isSelectedAccount = selectedAccounts.has(address);\n            return (\n              <Box\n                display={Display.Flex}\n                width={BlockSize.Full}\n                key={`choose-account-list-${index}`}\n                data-testid={`choose-account-list-${index}`}\n                onClick={() => handleEvmAccountClick(account)}\n                className=\"choose-account-list__account\"\n                ref={\n                  isSelectedAccount && address === firstSelectedAccount\n                    ? selectedAccountScrollRef\n                    : null\n                }\n                backgroundColor={\n                  isSelectedAccount\n                    ? Color.primaryMuted\n                    : BackgroundColor.backgroundDefault\n                }\n              >\n                <Box\n                  display={Display.Flex}\n                  width={BlockSize.Full}\n                  alignItems={AlignItems.center}\n                >\n                  <Checkbox\n                    isChecked={isSelectedAccount}\n                    isDisabled={!isEvmAccountType(account.type)}\n                  />\n                  <Box marginLeft={2}>\n                    <Identicon diameter={34} address={address} />\n                  </Box>\n                  <Box\n                    display={Display.Flex}\n                    justifyContent={JustifyContent.spaceBetween}\n                    width={BlockSize.Full}\n                    paddingLeft={3}\n                    style={{\n                      minWidth: 0,\n                    }}\n                  >\n                    <Box\n                      display={Display.Flex}\n                      flexDirection={FlexDirection.Column}\n                      width={BlockSize.Full}\n                    >\n                      <Text\n                        variant={TextVariant.bodyMdMedium}\n                        style={{\n                          textWrap: 'nowrap',\n                        }}\n                        ellipsis\n                      >\n                        {addressLabel}\n                      </Text>\n                      <Box display={Display.Flex}>\n                        <UserPreferencedCurrencyDisplay\n                          account={account}\n                          type={PRIMARY}\n                          value={balance}\n                          style={{\n                            color: 'var(--color-text-alternative)',\n                            flexWrap: 'nowrap',\n                          }}\n                          suffix={nativeCurrency}\n                          numberOfDecimals={2}\n                          ethNumberOfDecimals={5}\n                          textProps={{\n                            color: TextColor.textAlternative,\n                            variant: TextVariant.bodySm,\n                          }}\n                          suffixProps={{\n                            color: TextColor.textAlternative,\n                            variant: TextVariant.bodySm,\n                          }}\n                        />\n                      </Box>\n                    </Box>\n                  </Box>\n                  {addressLastConnectedMap[address] ? (\n                    <Tooltip\n                      title={`${t('lastConnected')} ${\n                        addressLastConnectedMap[address]\n                      }`}\n                    >\n                      <Icon\n                        name={IconName.Info}\n                        color={IconColor.iconMuted}\n                        className=\"info-circle\"\n                        marginInlineStart={2}\n                      />\n                    </Tooltip>\n                  ) : null}\n                </Box>\n              </Box>\n            );\n          })}\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nAccountList.propTypes = {\n  /**\n   * Array of user account objects\n   */\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      address: PropTypes.string,\n      addressLabel: PropTypes.string,\n      lastConnectedDate: PropTypes.string,\n      balance: PropTypes.string,\n    }),\n  ).isRequired,\n  /**\n   * Function to select a new account via modal\n   */\n  selectNewAccountViaModal: PropTypes.func.isRequired,\n  /**\n   * A map of the last connected addresses\n   */\n  addressLastConnectedMap: PropTypes.object,\n  /**\n   * Native currency of current chain\n   */\n  nativeCurrency: PropTypes.string.isRequired,\n  /**\n   * Currently selected accounts\n   */\n  selectedAccounts: PropTypes.object.isRequired,\n  /**\n   * Function to check if all accounts are selected\n   */\n  allAreSelected: PropTypes.func.isRequired,\n  /**\n   * Function to deselect all accounts\n   */\n  deselectAll: PropTypes.func.isRequired,\n  /**\n   * Function to select all accounts\n   */\n  selectAll: PropTypes.func.isRequired,\n  /**\n   * Function to handle account click\n   */\n  handleAccountClick: PropTypes.func.isRequired,\n};\n\nexport default memo(AccountList, (prevProps, nextProps) => {\n  return isEqual(prevProps.selectedAccounts, nextProps.selectedAccounts);\n});\n","export { default } from './account-list';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../tooltip';\nimport { getSelectedAccount } from '../../../selectors';\nimport InfoIcon from '../icon/info-icon.component';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { Severity } from '../../../helpers/constants/design-system';\n\nexport default function AccountMismatchWarning({ address }) {\n  const selectedAccount = useSelector(getSelectedAccount);\n  const t = useI18nContext();\n  if (selectedAccount.address === address) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      position=\"bottom\"\n      html={<p>{t('notCurrentAccount')}</p>}\n      wrapperClassName=\"account-mismatch-warning__tooltip-wrapper\"\n      containerClassName=\"account-mismatch-warning__tooltip-container\"\n    >\n      <div\n        className=\"account-mismatch-warning__tooltip-container-icon\"\n        data-testid=\"account-mismatch-warning-tooltip\"\n      >\n        <InfoIcon severity={Severity.Warning} />\n      </div>\n    </Tooltip>\n  );\n}\n\nAccountMismatchWarning.propTypes = {\n  address: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport InfoTooltip from '../info-tooltip';\nimport InfoTooltipIcon from '../info-tooltip/info-tooltip-icon';\n\nconst CLASSNAME_WARNING = 'actionable-message--warning';\nconst CLASSNAME_DANGER = 'actionable-message--danger';\nconst CLASSNAME_SUCCESS = 'actionable-message--success';\nconst CLASSNAME_WITH_RIGHT_BUTTON = 'actionable-message--with-right-button';\n\nexport const typeHash = {\n  warning: CLASSNAME_WARNING,\n  danger: CLASSNAME_DANGER,\n  success: CLASSNAME_SUCCESS,\n  default: '',\n};\n\n/**\n * @deprecated `<ActionableMessage />` has been deprecated in favor of the `<BannerAlert />`\n * component in ./ui/components/component-library/banner-alert/banner-alert.js.\n * See storybook documentation for BannerAlert here:\n * {@see {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-banneralert--default-story#banneralert}}\n *\n * Help to replace `ActionableMessage` with `BannerAlert` by submitting a PR against\n * {@link https://github.com/MetaMask/metamask-extension/issues/19528}\n */\n\nexport default function ActionableMessage({\n  message = '',\n  primaryAction = null,\n  primaryActionV2 = null,\n  secondaryAction = null,\n  className = '',\n  infoTooltipText = '',\n  withRightButton = false,\n  type = 'default',\n  useIcon = false,\n  icon,\n  iconFillColor = '',\n  roundedButtons,\n  dataTestId,\n  autoHideTime = 0,\n  onAutoHide,\n}) {\n  const [shouldDisplay, setShouldDisplay] = useState(true);\n  useEffect(\n    function () {\n      if (autoHideTime === 0) {\n        return undefined;\n      }\n\n      const timeout = setTimeout(() => {\n        onAutoHide?.();\n        setShouldDisplay(false);\n      }, autoHideTime);\n\n      return function () {\n        clearTimeout(timeout);\n      };\n    },\n    [autoHideTime, onAutoHide],\n  );\n\n  const actionableMessageClassName = classnames(\n    'actionable-message',\n    typeHash[type],\n    withRightButton ? CLASSNAME_WITH_RIGHT_BUTTON : null,\n    className,\n    { 'actionable-message--with-icon': useIcon },\n  );\n\n  const onlyOneAction =\n    (primaryAction && !secondaryAction) || (secondaryAction && !primaryAction);\n\n  if (!shouldDisplay) {\n    return null;\n  }\n\n  return (\n    <div className={actionableMessageClassName} data-testid={dataTestId}>\n      {useIcon ? icon || <InfoTooltipIcon fillColor={iconFillColor} /> : null}\n      {infoTooltipText && (\n        <InfoTooltip\n          position=\"left\"\n          contentText={infoTooltipText}\n          wrapperClassName=\"actionable-message__info-tooltip-wrapper\"\n        />\n      )}\n      <div className=\"actionable-message__message\">{message}</div>\n      {primaryActionV2 && (\n        <button\n          className=\"actionable-message__action-v2\"\n          onClick={primaryActionV2.onClick}\n        >\n          {primaryActionV2.label}\n        </button>\n      )}\n      {(primaryAction || secondaryAction) && (\n        <div\n          className={classnames('actionable-message__actions', {\n            'actionable-message__actions--single': onlyOneAction,\n          })}\n        >\n          {primaryAction && (\n            <button\n              className={classnames(\n                'actionable-message__action',\n                'actionable-message__action--primary',\n                `actionable-message__action-${type}`,\n                {\n                  'actionable-message__action--rounded': roundedButtons,\n                },\n              )}\n              onClick={primaryAction.onClick}\n            >\n              {primaryAction.label}\n            </button>\n          )}\n          {secondaryAction && (\n            <button\n              className={classnames(\n                'actionable-message__action',\n                'actionable-message__action--secondary',\n                `actionable-message__action-${type}`,\n                {\n                  'actionable-message__action--rounded': roundedButtons,\n                },\n              )}\n              onClick={secondaryAction.onClick}\n            >\n              {secondaryAction.label}\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nActionableMessage.propTypes = {\n  /**\n   * Text inside actionable message\n   */\n  message: PropTypes.node.isRequired,\n  /**\n   * First button props that have label and onClick props\n   */\n  primaryAction: PropTypes.shape({\n    label: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  /**\n   * Another style of primary action.\n   * This probably shouldn't have been added. A `children` prop might have been more appropriate.\n   */\n  primaryActionV2: PropTypes.shape({\n    label: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  /**\n   * Second button props that have label and onClick props\n   */\n  secondaryAction: PropTypes.shape({\n    label: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  /**\n   * Additional css className for the component based on the parent css\n   */\n  className: PropTypes.string,\n  /**\n   * change color theme for the component that already predefined in css\n   */\n  type: PropTypes.oneOf(Object.keys(typeHash)),\n  /**\n   * change text align to left and button to bottom right\n   */\n  withRightButton: PropTypes.bool,\n  /**\n   * Add tooltip and custom message\n   */\n  infoTooltipText: PropTypes.string,\n  /**\n   * Add tooltip icon in the left component without message\n   */\n  useIcon: PropTypes.bool,\n  /**\n   * Custom icon component\n   */\n  icon: PropTypes.node,\n  /**\n   * change tooltip icon color\n   */\n  iconFillColor: PropTypes.string,\n  /**\n   * Whether the buttons are rounded\n   */\n  roundedButtons: PropTypes.bool,\n  dataTestId: PropTypes.string,\n  /**\n   * Whether the actionable message should auto-hide itself after a given amount of time\n   */\n  autoHideTime: PropTypes.number,\n  /**\n   * Callback when autoHide time expires\n   */\n  onAutoHide: PropTypes.func,\n};\n","export { default } from './actionable-message';\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { usePrevious } from '../../../hooks/usePrevious';\nimport { MILLISECOND } from '../../../../shared/constants/time';\n\nfunction Alert(props) {\n  const [visible, setVisible] = useState(false);\n  const [className, setClassName] = useState('');\n  const lastVisible = usePrevious(props.visible);\n\n  useEffect(() => {\n    const animateIn = () => {\n      setClassName('visible');\n      setVisible(true);\n    };\n\n    const animateOut = () => {\n      setClassName('hidden');\n\n      setTimeout((_) => {\n        setVisible(false);\n      }, MILLISECOND * 500);\n    };\n\n    if (!lastVisible && props.visible) {\n      animateIn(props.msg);\n    } else if (lastVisible && !props.visible) {\n      animateOut();\n    }\n  }, [lastVisible, props.msg, props.visible]);\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <div className={classnames('global-alert', className)}>\n      <a className=\"msg\">{props.msg}</a>\n    </div>\n  );\n}\n\nAlert.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  msg: PropTypes.string,\n};\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { memoize } from 'lodash';\nimport {\n  AlignItems,\n  BlockSize,\n  BorderStyle,\n  BackgroundColor,\n  BorderColor,\n  TextColor,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n  FlexDirection,\n  FlexWrap,\n  BREAKPOINTS,\n  BorderRadius,\n  Display,\n} from '../../../helpers/constants/design-system';\n\nconst BASE_CLASS_NAME = 'box';\nconst Sizes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nconst ValidSize = PropTypes.oneOf(Sizes);\nconst ValidBlockSize = PropTypes.oneOf(Object.values(BlockSize));\nconst ValidSizeAndAuto = PropTypes.oneOf([...Sizes, 'auto']);\nexport const ValidBackgroundColor = PropTypes.oneOf(\n  Object.values(BackgroundColor),\n);\nexport const ValidBorderColors = PropTypes.oneOf(Object.values(BorderColor));\nexport const ValidTextColors = PropTypes.oneOf(Object.values(TextColor));\nexport const ValidIconColors = PropTypes.oneOf(Object.values(IconColor));\nconst ValidAlignItem = PropTypes.oneOf(Object.values(AlignItems));\nconst ValidJustifyContent = PropTypes.oneOf(Object.values(JustifyContent));\n\nconst ArrayOfValidSizes = PropTypes.arrayOf(ValidSize);\nexport const MultipleSizes = PropTypes.oneOfType([\n  ValidSize,\n  ArrayOfValidSizes,\n]);\n\nconst ArrayOfValidBlockSizes = PropTypes.arrayOf(ValidBlockSize);\nexport const MultipleBlockSizes = PropTypes.oneOfType([\n  ValidBlockSize,\n  ArrayOfValidBlockSizes,\n]);\n\nconst ArrayOfValidSizesAndAuto = PropTypes.arrayOf(ValidSizeAndAuto);\nexport const MultipleSizesAndAuto = PropTypes.oneOfType([\n  ValidSizeAndAuto,\n  ArrayOfValidSizesAndAuto,\n]);\n\nconst ArrayOfValidBorderColors = PropTypes.arrayOf(ValidBorderColors);\nexport const MultipleBorderColors = PropTypes.oneOfType([\n  ValidBorderColors,\n  ArrayOfValidBorderColors,\n]);\n\nconst ArrayOfValidBackgroundColor = PropTypes.arrayOf(ValidBackgroundColor);\nexport const MultipleBackgroundColor = PropTypes.oneOfType([\n  ValidBackgroundColor,\n  ArrayOfValidBackgroundColor,\n]);\n\nconst ArrayOfValidTextColors = PropTypes.arrayOf(ValidTextColors);\nconst ArrayOfValidIconColors = PropTypes.arrayOf(ValidIconColors);\nexport const MultipleTextColors = PropTypes.oneOfType([\n  ValidTextColors,\n  ArrayOfValidTextColors,\n  ValidIconColors,\n  ArrayOfValidIconColors,\n]);\n\nconst ArrayOfValidAlignItems = PropTypes.arrayOf(ValidAlignItem);\nexport const MultipleAlignItems = PropTypes.oneOfType([\n  ValidAlignItem,\n  ArrayOfValidAlignItems,\n]);\n\nconst ArrayOfValidJustifyContents = PropTypes.arrayOf(ValidJustifyContent);\nexport const MultipleJustifyContents = PropTypes.oneOfType([\n  ValidJustifyContent,\n  ArrayOfValidJustifyContents,\n]);\n\nfunction isValidSize(type, value) {\n  // Only margin types allow 'auto'\n  return (\n    typeof value === 'number' ||\n    ((type === 'margin' ||\n      type === 'margin-top' ||\n      type === 'margin-right' ||\n      type === 'margin-bottom' ||\n      type === 'margin-left' ||\n      type === 'margin-inline' ||\n      type === 'margin-inline-start' ||\n      type === 'margin-inline-end') &&\n      value === 'auto')\n  );\n}\n\nfunction isValidString(type, value) {\n  return typeof type === 'string' && typeof value === 'string';\n}\n\n/**\n * Generate classnames\n * Generates classnames for different utility styles\n * Also accepts responsive props in the form of an array\n * Maps responsive props to mobile first breakpoints\n *\n * @param {string} type - The style declaration type \"margin\", \"margin-top\", \"padding\", \"display\" etc\n * @param {array || number || string} value - prop value being passed in array props are responsive props\n * @param {*} validatorFn - The validation function for each type of value\n * @returns\n */\n\nconst generateClassNames = memoize(\n  (type, value, validatorFn) => {\n    // if value does not exist return null\n    if (!value) {\n      return null;\n    }\n    const classesObject = {};\n    // if value is an array with single item e.g. marginTop={[1]}\n    const singleArrayItemProp =\n      Array.isArray(value) && value.length === 1 ? value[0] : undefined;\n    // if value single value e.g. marginTop={1}\n    const singleValueProp =\n      (!Array.isArray(value) && typeof value === 'string') ||\n      typeof value === 'number'\n        ? value\n        : undefined;\n    // single digit equals single value or single array item\n    const singleValue = singleValueProp || singleArrayItemProp;\n    // 0 is an acceptable value but is falsy in js\n    if (singleValue || singleValue === 0) {\n      // add base style without any breakpoint prefixes to classObject\n      classesObject[`${BASE_CLASS_NAME}--${type}-${singleValue}`] = validatorFn(\n        type,\n        singleValue,\n      );\n    } else {\n      // If array with more than one item\n      switch (value.length) {\n        case 4:\n          // add base/sm/md/lg\n          classesObject[`${BASE_CLASS_NAME}--${type}-${value[0]}`] =\n            value[0] && validatorFn(type, value[0]);\n          classesObject[\n            `${BASE_CLASS_NAME}--${BREAKPOINTS[1]}:${type}-${value[1]}`\n          ] = value[1] && validatorFn(type, value[1]);\n          classesObject[\n            `${BASE_CLASS_NAME}--${BREAKPOINTS[2]}:${type}-${value[2]}`\n          ] = value[2] && validatorFn(type, value[2]);\n          classesObject[\n            `${BASE_CLASS_NAME}--${BREAKPOINTS[3]}:${type}-${value[3]}`\n          ] = value[3] && validatorFn(type, value[3]);\n          break;\n        case 3:\n          // add base/sm/md\n          classesObject[`${BASE_CLASS_NAME}--${type}-${value[0]}`] =\n            value[0] && validatorFn(type, value[0]);\n          classesObject[\n            `${BASE_CLASS_NAME}--${BREAKPOINTS[1]}:${type}-${value[1]}`\n          ] = value[1] && validatorFn(type, value[1]);\n          classesObject[\n            `${BASE_CLASS_NAME}--${BREAKPOINTS[2]}:${type}-${value[2]}`\n          ] = value[2] && validatorFn(type, value[2]);\n          break;\n        case 2:\n          // add base/sm\n          classesObject[`${BASE_CLASS_NAME}--${type}-${value[0]}`] =\n            value[0] && validatorFn(type, value[0]);\n          classesObject[\n            `${BASE_CLASS_NAME}--${BREAKPOINTS[1]}:${type}-${value[1]}`\n          ] = value[1] && validatorFn(type, value[1]);\n          break;\n        default:\n          console.log(`Invalid array prop length: ${value.length}`);\n      }\n    }\n    return classesObject;\n  },\n  (type, value) => `${type}${value}`,\n);\n\n/**\n * @deprecated The JS version of the <Box /> component has been deprecated in favor of the new TS version from the component-library.\n * Please update your code to use the new <Box> component instead\n * import { Box } from '../../component-library';\n * The component API is the same so you should only have to update the import statement but you can find documentation for the new Box component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-box--docs}\n * If you would like to help with the replacement of the old Button component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/19526}\n */\nconst Box = React.forwardRef(function Box(\n  {\n    padding,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    paddingInline,\n    paddingInlineStart,\n    paddingInlineEnd,\n    margin,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    marginInline,\n    marginInlineStart,\n    marginInlineEnd,\n    borderColor,\n    borderWidth,\n    borderRadius,\n    borderStyle,\n    alignItems,\n    justifyContent,\n    textAlign,\n    flexDirection = FlexDirection.Row,\n    flexWrap,\n    gap,\n    display,\n    width,\n    height,\n    children,\n    className,\n    backgroundColor,\n    color,\n    ariaLabel,\n    as = 'div',\n    ...props\n  },\n  ref,\n) {\n  const boxClassName = classnames(\n    BASE_CLASS_NAME,\n    className,\n    // Margin\n    margin && generateClassNames('margin', margin, isValidSize),\n    marginTop && generateClassNames('margin-top', marginTop, isValidSize),\n    marginRight && generateClassNames('margin-right', marginRight, isValidSize),\n    marginBottom &&\n      generateClassNames('margin-bottom', marginBottom, isValidSize),\n    marginLeft && generateClassNames('margin-left', marginLeft, isValidSize),\n    marginInline &&\n      generateClassNames('margin-inline', marginInline, isValidSize),\n    marginInlineStart &&\n      generateClassNames('margin-inline-start', marginInlineStart, isValidSize),\n    marginInlineEnd &&\n      generateClassNames('margin-inline-end', marginInlineEnd, isValidSize),\n    // Padding\n    padding && generateClassNames('padding', padding, isValidSize),\n    paddingTop && generateClassNames('padding-top', paddingTop, isValidSize),\n    paddingRight &&\n      generateClassNames('padding-right', paddingRight, isValidSize),\n    paddingBottom &&\n      generateClassNames('padding-bottom', paddingBottom, isValidSize),\n    paddingLeft && generateClassNames('padding-left', paddingLeft, isValidSize),\n    paddingInline &&\n      generateClassNames('padding-inline', paddingInline, isValidSize),\n    paddingInlineStart &&\n      generateClassNames(\n        'padding-inline-start',\n        paddingInlineStart,\n        isValidSize,\n      ),\n    paddingInlineEnd &&\n      generateClassNames('padding-inline-end', paddingInlineEnd, isValidSize),\n    display && generateClassNames('display', display, isValidString),\n    gap && generateClassNames('gap', gap, isValidSize),\n    flexDirection &&\n      generateClassNames('flex-direction', flexDirection, isValidString),\n    flexWrap && generateClassNames('flex-wrap', flexWrap, isValidString),\n    justifyContent &&\n      generateClassNames('justify-content', justifyContent, isValidString),\n    alignItems && generateClassNames('align-items', alignItems, isValidString),\n    textAlign && generateClassNames('text-align', textAlign, isValidString),\n    width && generateClassNames('width', width, isValidString),\n    height && generateClassNames('height', height, isValidString),\n    color && generateClassNames('color', color, isValidString),\n    backgroundColor &&\n      generateClassNames('background-color', backgroundColor, isValidString),\n    borderRadius && generateClassNames('rounded', borderRadius, isValidString),\n    borderStyle &&\n      generateClassNames('border-style', borderStyle, isValidString),\n    borderColor &&\n      generateClassNames('border-color', borderColor, isValidString),\n    borderWidth && generateClassNames('border-width', borderWidth, isValidSize),\n    {\n      // Auto applied classes\n      // ---Borders---\n      // if borderWidth or borderColor is supplied w/o style, default to solid\n      'box--border-style-solid':\n        !borderStyle && (Boolean(borderWidth) || Boolean(borderColor)),\n      // if borderColor supplied w/o width, default to 1\n      'box--border-width-1': !borderWidth && Boolean(borderColor),\n      // ---Flex/Grid alignment---\n      // if justifyContent or alignItems supplied w/o display, default to flex\n      'box--display-flex':\n        !display && (Boolean(justifyContent) || Boolean(alignItems)),\n    },\n  );\n  // Apply Box styles to any other component using function pattern\n  if (typeof children === 'function') {\n    return children(boxClassName);\n  }\n  const Component = as;\n\n  const ariaLabelProp = {};\n  if (isCustomComponent(Component)) {\n    ariaLabelProp.ariaLabel = ariaLabel;\n  } else {\n    ariaLabelProp['aria-label'] = ariaLabel;\n  }\n\n  if (props['aria-label']) {\n    ariaLabelProp['aria-label'] = props['aria-label'];\n  }\n\n  return (\n    <Component className={boxClassName} ref={ref} {...props} {...ariaLabelProp}>\n      {children}\n    </Component>\n  );\n});\n\n// Both class or functional components have type function.\n// Built-in HTML elements (div, span, etc.) have type string.\nfunction isCustomComponent(element) {\n  return typeof element.type === 'function';\n}\n\nBox.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  flexDirection: PropTypes.oneOfType([\n    PropTypes.oneOf(Object.values(FlexDirection)),\n    PropTypes.arrayOf(PropTypes.oneOf(Object.values(FlexDirection))),\n  ]),\n  flexWrap: PropTypes.oneOfType([\n    PropTypes.oneOf(Object.values(FlexWrap)),\n    PropTypes.arrayOf(PropTypes.oneOf(Object.values(FlexWrap))),\n  ]),\n  gap: MultipleSizes,\n  margin: MultipleSizesAndAuto,\n  marginTop: MultipleSizesAndAuto,\n  marginBottom: MultipleSizesAndAuto,\n  marginRight: MultipleSizesAndAuto,\n  marginLeft: MultipleSizesAndAuto,\n  marginInline: MultipleSizesAndAuto,\n  marginInlineStart: MultipleSizesAndAuto,\n  marginInlineEnd: MultipleSizesAndAuto,\n  padding: MultipleSizes,\n  paddingTop: MultipleSizes,\n  paddingBottom: MultipleSizes,\n  paddingRight: MultipleSizes,\n  paddingLeft: MultipleSizes,\n  paddingInline: MultipleSizes,\n  paddingInlineStart: MultipleSizes,\n  paddingInlineEnd: MultipleSizes,\n  borderColor: MultipleBorderColors,\n  borderWidth: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  borderRadius: PropTypes.oneOfType([\n    PropTypes.oneOf(Object.values(BorderRadius)),\n    PropTypes.arrayOf(PropTypes.oneOf(Object.values(BorderRadius))),\n  ]),\n  borderStyle: PropTypes.oneOfType([\n    PropTypes.oneOf(Object.values(BorderStyle)),\n    PropTypes.arrayOf(PropTypes.oneOf(Object.values(BorderStyle))),\n  ]),\n  alignItems: MultipleAlignItems,\n  justifyContent: MultipleJustifyContents,\n  textAlign: PropTypes.oneOfType([\n    PropTypes.oneOf(Object.values(TextAlign)),\n    PropTypes.arrayOf(PropTypes.oneOf(Object.values(TextAlign))),\n  ]),\n  display: PropTypes.oneOfType([\n    PropTypes.oneOf(Object.values(Display)),\n    PropTypes.arrayOf(PropTypes.oneOf(Object.values(Display))),\n  ]),\n  width: MultipleBlockSizes,\n  height: MultipleBlockSizes,\n  backgroundColor: MultipleBackgroundColor,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  /**\n   * The polymorphic `as` prop allows you to change the root HTML element of the Box component\n   * Defaults to 'div'\n   */\n  as: PropTypes.string,\n  /**\n   * The color of the Typography component Should use the COLOR object from\n   * ./ui/helpers/constants/design-system.js\n   */\n  color: MultipleTextColors,\n  ariaLabel: PropTypes.string,\n  'aria-label': PropTypes.string,\n};\n\nexport default Box;\n","export {\n  default,\n  MultipleSizes,\n  MultipleSizesAndAuto,\n  ValidBackgroundColor,\n  ValidBorderColors,\n} from './box';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport default class ButtonGroup extends PureComponent {\n  static propTypes = {\n    /**\n     * change button active order\n     */\n    defaultActiveButtonIndex: PropTypes.number,\n    /**\n     * no button are active before clicked by the user\n     */\n    noButtonActiveByDefault: PropTypes.bool,\n    /**\n     * disabling every button inside button group\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Children must be an array of button components\n     */\n    children: PropTypes.array,\n    /**\n     * Adds a className to the root div of the of the ButtonGroup component\n     */\n    className: PropTypes.string,\n    /**\n     * adding style for button group component\n     */\n    style: PropTypes.object,\n    /**\n     * updating value of active button in button group component\n     */\n    newActiveButtonIndex: PropTypes.number,\n    /**\n     * options for rendering type of button, consist of 'default' and 'radiogroup'\n     */\n    variant: PropTypes.oneOf(['radiogroup', 'default']),\n  };\n\n  static defaultProps = {\n    className: 'button-group',\n    defaultActiveButtonIndex: 0,\n    variant: 'default',\n  };\n\n  state = {\n    activeButtonIndex: this.props.noButtonActiveByDefault\n      ? null\n      : this.props.defaultActiveButtonIndex,\n  };\n\n  componentDidUpdate(_, prevState) {\n    // Provides an API for dynamically updating the activeButtonIndex\n    if (\n      typeof this.props.newActiveButtonIndex === 'number' &&\n      prevState.activeButtonIndex !== this.props.newActiveButtonIndex\n    ) {\n      this.setState({ activeButtonIndex: this.props.newActiveButtonIndex });\n    }\n  }\n\n  handleButtonClick(activeButtonIndex) {\n    this.setState({ activeButtonIndex });\n  }\n\n  renderButtons() {\n    const { children, disabled, variant } = this.props;\n\n    return React.Children.map(children, (child, index) => {\n      return (\n        child && (\n          <button\n            role={variant === 'radiogroup' ? 'radio' : undefined}\n            aria-checked={index === this.state.activeButtonIndex}\n            className={classnames(\n              'button-group__button',\n              child.props.className,\n              {\n                'radio-button': variant === 'radiogroup',\n                'button-group__button--active':\n                  index === this.state.activeButtonIndex,\n                'radio-button--active':\n                  variant === 'radiogroup' &&\n                  index === this.state.activeButtonIndex,\n              },\n            )}\n            data-testid={`button-group__button${index}`}\n            onClick={() => {\n              this.handleButtonClick(index);\n              child.props.onClick?.();\n            }}\n            disabled={disabled || child.props.disabled}\n            key={index}\n          >\n            {child.props.children}\n          </button>\n        )\n      );\n    });\n  }\n\n  render() {\n    const { className, style, variant } = this.props;\n\n    return (\n      <div\n        className={classnames(className, {\n          'radio-button-group': variant === 'radiogroup',\n        })}\n        role={variant === 'radiogroup' ? 'radiogroup' : undefined}\n        style={style}\n      >\n        {this.renderButtons()}\n      </div>\n    );\n  }\n}\n","export { default } from './button-group.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst CLASSNAME_DEFAULT = 'btn-default';\nconst CLASSNAME_PRIMARY = 'btn-primary';\nconst CLASSNAME_SECONDARY = 'btn-secondary';\nconst CLASSNAME_RAISED = 'btn-raised';\nconst CLASSNAME_LARGE = 'btn--large';\nconst CLASSNAME_ROUNDED = 'btn--rounded';\nconst CLASSNAME_INLINE = 'btn--inline';\n\nconst typeHash = {\n  default: CLASSNAME_DEFAULT,\n  primary: CLASSNAME_PRIMARY,\n  secondary: CLASSNAME_SECONDARY,\n  warning: 'btn-warning',\n  danger: 'btn-danger',\n  'danger-primary': 'btn-danger-primary',\n  link: 'btn-link',\n  inline: CLASSNAME_INLINE,\n  raised: CLASSNAME_RAISED,\n};\n\n/**\n * @deprecated The <Button /> component has been deprecated in favor of the new <Button> component from the component-library.\n * Please update your code to use the new <Button> component instead, which can be found at ./ui/components/component-library/button/button.js.\n * You can find documentation for the new Button component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-button--default-story#button}\n * If you would like to help with the replacement of the old Button component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/18896}\n * @see {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-button--default-story#button}\n */\n\nconst Button = ({\n  type,\n  submit = false,\n  large,\n  children,\n  icon,\n  className,\n  rounded = true,\n  ...buttonProps\n}) => {\n  const doRounding = rounded && type !== 'link' && type !== 'inline';\n  // To support using the Button component to render styled links that are semantic html\n  // we swap the html tag we use to render this component and delete any buttonProps that\n  // we know to be erroneous attributes for a link. We will likely want to extract Link\n  // to its own component in the future.\n  let Tag = 'button';\n  if (type === 'link') {\n    Tag = 'a';\n  } else if (submit) {\n    buttonProps.type = 'submit';\n  }\n  if (type === 'link' && typeof buttonProps.onClick === 'function') {\n    buttonProps.onKeyUp ??= (event) => {\n      if (event.key === 'Enter') {\n        buttonProps.onClick();\n      }\n    };\n    buttonProps.role ??= 'button';\n    buttonProps.tabIndex ??= 0;\n  }\n  return (\n    <Tag\n      className={classnames(\n        'button',\n        doRounding && CLASSNAME_ROUNDED,\n        typeHash[type] || CLASSNAME_DEFAULT,\n        large && CLASSNAME_LARGE,\n        className,\n      )}\n      {...buttonProps}\n    >\n      {icon ? <span className=\"button__icon\">{icon}</span> : null}\n      {children}\n    </Tag>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * The type of variation a button can be.\n   * Can be one of 'default','primary','secondary','warning','danger','danger-primary' or 'link'\n   */\n  type: PropTypes.string,\n  /**\n   * If true sets the html 'type' attribute to type=\"submit\"\n   */\n  submit: PropTypes.bool,\n  /**\n   * Increase the height of the button to 54px\n   */\n  large: PropTypes.bool,\n  /**\n   * Additional className to provide on the root element of the button\n   */\n  className: PropTypes.string,\n  /**\n   * The children of the button component\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an icon component for an icon to appear on the left side of the button\n   */\n  icon: PropTypes.node,\n  /**\n   * Buttons are rounded by default.\n   */\n  rounded: PropTypes.bool,\n};\n\nexport default Button;\n","import Button from './button.component';\n\nexport default Button;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport InfoIconInverted from '../icon/info-icon-inverted.component';\nimport { Severity, TextColor } from '../../../helpers/constants/design-system';\nimport { MILLISECOND } from '../../../../shared/constants/time';\nimport { ButtonIcon, IconName, IconSize, Text } from '../../component-library';\n\n/**\n * @deprecated `<Callout />` has been deprecated in favor of the `<BannerAlert />`\n * component in ./ui/components/component-library/banner-alert/banner-alert.js.\n * See storybook documentation for BannerAlert here:\n * {@see {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-banneralert--default-story#banneralert}}\n *\n * Help to replace `Callout` with `BannerAlert` by submitting a PR\n */\n\nexport default function Callout({\n  severity,\n  children,\n  dismiss,\n  isFirst,\n  isLast,\n  isMultiple,\n}) {\n  const [removed, setRemoved] = useState(false);\n  const calloutClassName = classnames('callout', `callout--${severity}`, {\n    'callout--dismissed': removed === true,\n    'callout--multiple': isMultiple === true,\n    'callout--dismissible': Boolean(dismiss),\n    'callout--first': isFirst === true || isMultiple !== true,\n    'callout--last': isLast === true || isMultiple !== true,\n  });\n  // Clicking the close button will set removed state, which will trigger this\n  // effect to refire due to changing dependencies. When that happens, after a\n  // half of a second we fire the dismiss method from the parent. The\n  // consuming component is responsible for modifying state and then removing\n  // the element from the DOM.\n  useEffect(() => {\n    if (removed) {\n      setTimeout(() => {\n        dismiss();\n      }, MILLISECOND * 500);\n    }\n  }, [removed, dismiss]);\n  return (\n    <div className={calloutClassName}>\n      <InfoIconInverted severity={severity} />\n      <Text color={TextColor.textDefault} className=\"callout__content\">\n        {children}\n      </Text>\n      {dismiss && (\n        <ButtonIcon\n          iconName={IconName.Close}\n          size={IconSize.Sm}\n          className=\"callout__close-button\"\n          onClick={() => {\n            setRemoved(true);\n          }}\n          onKeyUp={(event) => {\n            if (event.key === 'Enter') {\n              setRemoved(true);\n            }\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nCallout.propTypes = {\n  severity: PropTypes.oneOf(Object.values(Severity)).isRequired,\n  children: PropTypes.node.isRequired,\n  dismiss: PropTypes.func,\n  isFirst: PropTypes.bool,\n  isLast: PropTypes.bool,\n  isMultiple: PropTypes.bool,\n};\n","export { default } from './callout';\n","import React, { useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst CHECKBOX_STATE = {\n  CHECKED: 'CHECKED',\n  INDETERMINATE: 'INDETERMINATE',\n  UNCHECKED: 'UNCHECKED',\n};\n\nexport const { CHECKED, INDETERMINATE, UNCHECKED } = CHECKBOX_STATE;\n\n/**\n * @deprecated The `<CheckBox />` component has been deprecated in favor of the new `<Checkbox>` component from the component-library.\n * Please update your code to use the new `<Checkbox>` component instead, which can be found at ui/components/component-library/checkbox/checkbox.tsx.\n * You can find documentation for the new Checkbox component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-checkbox--docs}\n * If you would like to help with the replacement of the old CheckBox component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20163}\n */\n\nconst CheckBox = ({\n  className,\n  disabled,\n  id,\n  onClick,\n  checked,\n  title,\n  dataTestId,\n}) => {\n  if (typeof checked === 'boolean') {\n    // eslint-disable-next-line no-param-reassign\n    checked = checked ? CHECKBOX_STATE.CHECKED : CHECKBOX_STATE.UNCHECKED;\n  }\n  const ref = useRef(null);\n  useLayoutEffect(() => {\n    ref.current.indeterminate = checked === CHECKBOX_STATE.INDETERMINATE;\n  }, [checked]);\n\n  return (\n    <input\n      checked={checked === CHECKBOX_STATE.CHECKED}\n      className={classnames('check-box', className, {\n        'far fa-square': checked === CHECKBOX_STATE.UNCHECKED,\n        'fa fa-check-square check-box__checked':\n          checked === CHECKBOX_STATE.CHECKED,\n        'fa fa-minus-square check-box__indeterminate':\n          checked === CHECKBOX_STATE.INDETERMINATE,\n      })}\n      disabled={disabled}\n      id={id}\n      onClick={\n        onClick\n          ? (event) => {\n              event.preventDefault();\n              onClick();\n            }\n          : null\n      }\n      readOnly\n      ref={ref}\n      title={title}\n      data-testid={dataTestId}\n      type=\"checkbox\"\n    />\n  );\n};\n\nCheckBox.propTypes = {\n  /**\n   * Add custom classname css\n   */\n  className: PropTypes.string,\n  /**\n   * Check if checkbox disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Checkbox ID\n   */\n  id: PropTypes.string,\n  /**\n   * Click handler\n   */\n  onClick: PropTypes.func,\n  /**\n   * Check if the checkbox are checked or not\n   */\n  checked: PropTypes.oneOf([...Object.keys(CHECKBOX_STATE), true, false])\n    .isRequired,\n  /**\n   * Show title\n   */\n  title: PropTypes.string,\n  /**\n   * Data test ID for checkbox Component\n   */\n  dataTestId: PropTypes.string,\n};\n\nCheckBox.defaultProps = {\n  className: undefined,\n  disabled: false,\n  id: undefined,\n};\n\nexport default CheckBox;\n","export {\n  default,\n  CHECKED,\n  INDETERMINATE,\n  UNCHECKED,\n} from './check-box.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { BorderColor } from '../../../helpers/constants/design-system';\nimport Chip from '.';\n\nexport function ChipWithInput({\n  dataTestId,\n  className,\n  borderColor = BorderColor.borderDefault,\n  inputValue,\n  setInputValue,\n}) {\n  return (\n    <Chip\n      className={classnames(className, 'chip--with-input')}\n      borderColor={borderColor}\n    >\n      {setInputValue && (\n        <input\n          data-testid={dataTestId}\n          type=\"text\"\n          className=\"chip__input\"\n          onChange={(e) => {\n            setInputValue(e.target.value);\n          }}\n          value={inputValue}\n        />\n      )}\n    </Chip>\n  );\n}\n\nChipWithInput.propTypes = {\n  dataTestId: PropTypes.string,\n  borderColor: PropTypes.oneOf(Object.values(BorderColor)),\n  className: PropTypes.string,\n  inputValue: PropTypes.string,\n  setInputValue: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { omit } from 'lodash';\nimport { Text } from '../../component-library';\nimport UrlIcon from '../url-icon';\nimport {\n  BackgroundColor,\n  BorderColor,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\n/**\n * @deprecated The `<Chip />` component has been deprecated in favor of the new `<Tag>` component from the component-library.\n * Please update your code to use the new `<Tag>` component instead, which can be found at ui/components/component-library/tag/tag.tsx.\n * You can find documentation for the new `Tag` component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-tag--docs}\n * If you would like to help with the replacement of the old `Chip` component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20487}\n */\n\nexport default function Chip({\n  dataTestId,\n  className,\n  children,\n  borderColor = BorderColor.borderDefault,\n  backgroundColor,\n  label,\n  labelProps = {},\n  leftIcon,\n  leftIconUrl = '',\n  rightIcon,\n  onClick,\n  maxContent = true,\n  displayInlineBlock = false,\n}) {\n  const onKeyPress = (event) => {\n    if (event.key === 'Enter' && onClick) {\n      onClick(event);\n    }\n  };\n\n  const isInteractive = typeof onClick === 'function';\n\n  return (\n    <div\n      data-testid={dataTestId}\n      onClick={onClick}\n      onKeyPress={onKeyPress}\n      className={classnames(className, 'chip', {\n        'chip--with-left-icon': Boolean(leftIcon),\n        'chip--with-right-icon': Boolean(rightIcon),\n        [`chip--border-color-${borderColor}`]: true,\n        [`chip--background-color-${backgroundColor}`]: true,\n        'chip--max-content': maxContent,\n        'chip--display-inline-block': displayInlineBlock,\n      })}\n      role={isInteractive ? 'button' : undefined}\n      tabIndex={isInteractive ? 0 : undefined}\n    >\n      {leftIcon && !leftIconUrl ? (\n        <div className=\"chip__left-icon\">{leftIcon}</div>\n      ) : null}\n      {leftIconUrl ? (\n        <UrlIcon className=\"chip__left-url-icon\" url={leftIconUrl} />\n      ) : null}\n      {children ?? (\n        <Text\n          className=\"chip__label\"\n          variant={TextVariant.bodySm}\n          as=\"span\"\n          color={TextColor.textAlternative}\n          {...labelProps}\n        >\n          {label}\n        </Text>\n      )}\n      {rightIcon ? <div className=\"chip__right-icon\">{rightIcon}</div> : null}\n    </div>\n  );\n}\n\nChip.propTypes = {\n  /**\n   * Data test id used for testing of the Chip component\n   */\n  dataTestId: PropTypes.string,\n  /**\n   * The border color of the Chip\n   */\n  borderColor: PropTypes.oneOf(Object.values(BorderColor)),\n  /**\n   * The background color of the Chip component\n   */\n  backgroundColor: PropTypes.oneOf(Object.values(BackgroundColor)),\n  /**\n   * The label of the Chip component has a default typography variant of h6 and is a span html element\n   */\n  label: PropTypes.string,\n  /**\n   * The label props of the component. Most Typography props can be used\n   */\n  labelProps: PropTypes.shape({\n    ...omit(TextVariant.propTypes, ['children', 'className']),\n  }),\n  /**\n   * Children will replace the label of the Chip component.\n   */\n  children: PropTypes.node,\n  /**\n   * An icon component that can be passed to appear on the left of the label\n   */\n  leftIcon: PropTypes.node,\n  /**\n   * An icon component that can be passed to appear on the right of the label\n   */\n  rightIcon: PropTypes.node,\n  /**\n   * The className of the Chip\n   */\n  className: PropTypes.string,\n  /**\n   * The onClick handler to be passed to the Chip component\n   */\n  onClick: PropTypes.func,\n  /**\n   * If the width: max-content; is used in css.\n   * max-content can overflow the parent's width and break designs\n   */\n  maxContent: PropTypes.bool,\n  /**\n   * Icon location\n   */\n  leftIconUrl: PropTypes.string,\n  /**\n   * Display or not the inline block\n   */\n  displayInlineBlock: PropTypes.bool,\n};\n","export { default } from './chip';\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { confusables } from 'unicode-confusables';\nimport { v4 as uuidv4 } from 'uuid';\nimport Tooltip from '../tooltip';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { Text } from '../../component-library';\n\nconst Confusable = ({ input, asText, confusableWrapperName = '' }) => {\n  const t = useI18nContext();\n  const confusableData = useMemo(() => {\n    return confusables(input);\n  }, [input]);\n\n  return confusableData.map(({ point, similarTo }) => {\n    const zeroWidth = similarTo === '';\n    if (similarTo === undefined) {\n      return asText ? <Text key={uuidv4()}>{point}</Text> : point;\n    }\n    return (\n      <Tooltip\n        key={uuidv4()}\n        tag=\"span\"\n        position=\"top\"\n        title={\n          zeroWidth\n            ? t('confusableZeroWidthUnicode')\n            : t('confusableUnicode', [point, similarTo])\n        }\n        wrapperClassName={confusableWrapperName}\n      >\n        <Text className=\"confusable__point\" as={asText ? 'p' : 'span'}>\n          {zeroWidth ? '?' : point}\n        </Text>\n      </Tooltip>\n    );\n  });\n};\n\nConfusable.propTypes = {\n  input: PropTypes.string.isRequired,\n  asText: PropTypes.bool,\n  confusableWrapperName: PropTypes.string,\n};\n\nexport default Confusable;\n","export { default } from './confusable.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useCurrencyDisplay } from '../../../hooks/useCurrencyDisplay';\nimport { EtherDenomination } from '../../../../shared/constants/common';\nimport { Text, Box } from '../../component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexWrap,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\n/* eslint-disable jsdoc/require-param-name */\n// eslint-disable-next-line jsdoc/require-param\n/** @param {PropTypes.InferProps<typeof CurrencyDisplayPropTypes>>} */\nexport default function CurrencyDisplay({\n  account,\n  value,\n  displayValue,\n  'data-testid': dataTestId,\n  style,\n  className,\n  prefix,\n  prefixComponent,\n  hideLabel,\n  hideTitle,\n  numberOfDecimals,\n  denomination,\n  currency,\n  suffix,\n  prefixComponentWrapperProps = {},\n  textProps = {},\n  suffixProps = {},\n  ...props\n}) {\n  const [title, parts] = useCurrencyDisplay(value, {\n    account,\n    displayValue,\n    prefix,\n    numberOfDecimals,\n    hideLabel,\n    denomination,\n    currency,\n    suffix,\n  });\n\n  return (\n    <Box\n      className={classnames('currency-display-component', className)}\n      data-testid={dataTestId}\n      style={style}\n      title={(!hideTitle && title) || null}\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      flexWrap={FlexWrap.Wrap}\n      {...props}\n    >\n      {prefixComponent ? (\n        <Box\n          className=\"currency-display-component__prefix\"\n          marginInlineEnd={1}\n          variant={TextVariant.inherit}\n          {...prefixComponentWrapperProps}\n        >\n          {prefixComponent}\n        </Box>\n      ) : null}\n      <Text\n        as=\"span\"\n        className=\"currency-display-component__text\"\n        ellipsis\n        variant={TextVariant.inherit}\n        {...textProps}\n      >\n        {parts.prefix}\n        {parts.value}\n      </Text>\n      {parts.suffix ? (\n        <Text\n          as=\"span\"\n          className=\"currency-display-component__suffix\"\n          marginInlineStart={1}\n          variant={TextVariant.inherit}\n          {...suffixProps}\n        >\n          {parts.suffix}\n        </Text>\n      ) : null}\n    </Box>\n  );\n}\n\nconst CurrencyDisplayPropTypes = {\n  className: PropTypes.string,\n  account: PropTypes.object,\n  currency: PropTypes.string,\n  'data-testid': PropTypes.string,\n  denomination: PropTypes.oneOf([\n    EtherDenomination.GWEI,\n    EtherDenomination.ETH,\n  ]),\n  displayValue: PropTypes.string,\n  hideLabel: PropTypes.bool,\n  hideTitle: PropTypes.bool,\n  numberOfDecimals: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  prefix: PropTypes.string,\n  prefixComponent: PropTypes.node,\n  style: PropTypes.object,\n  suffix: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  value: PropTypes.string,\n  prefixComponentWrapperProps: PropTypes.object,\n  textProps: PropTypes.object,\n  suffixProps: PropTypes.object,\n};\n\nCurrencyDisplay.propTypes = CurrencyDisplayPropTypes;\n","export { default } from './currency-display.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { omit } from 'lodash';\nimport {\n  Size,\n  TextVariant,\n  OverflowWrap,\n  TextColor,\n  IconColor,\n} from '../../../helpers/constants/design-system';\nimport Tooltip from '../tooltip';\nimport { Icon, IconName, IconSize, Text } from '../../component-library';\n\nconst MARGIN_MAP = {\n  [Size.XS]: 0,\n  [Size.SM]: 2,\n  [Size.MD]: 4,\n  [Size.LG]: 6,\n  [Size.XL]: 8,\n};\n\nexport default function DefinitionList({\n  dictionary,\n  termTypography = {},\n  definitionTypography = {},\n  tooltips = {},\n  warnings = {},\n  gapSize = Size.SM,\n}) {\n  return (\n    <dl className=\"definition-list\">\n      {Object.entries(dictionary).map(([term, definition]) => (\n        <React.Fragment key={`definition-for-${term}`}>\n          <Text\n            variant={TextVariant.bodySmBold}\n            {...termTypography}\n            marginTop={0}\n            marginBottom={1}\n            className=\"definition-list__term\"\n            as=\"dt\"\n          >\n            {term}\n            {tooltips[term] && (\n              <Tooltip\n                title={tooltips[term]}\n                position=\"top\"\n                containerClassName=\"definition-list__tooltip-wrapper\"\n              >\n                <Icon\n                  name={IconName.Info}\n                  size={IconSize.Sm}\n                  marginLeft={1}\n                  color={IconColor.iconDefault}\n                />\n              </Tooltip>\n            )}\n          </Text>\n          <Text\n            variant={TextVariant.bodySm}\n            color={TextColor.textAlternative}\n            {...definitionTypography}\n            marginTop={0}\n            marginBottom={MARGIN_MAP[gapSize]}\n            className=\"definition-list__definition\"\n            overflowWrap={OverflowWrap.BreakWord}\n            as=\"dd\"\n          >\n            {definition}\n          </Text>\n          {warnings[term] && (\n            <Text variant={TextVariant.bodySm} color={TextColor.warningDefault}>\n              {warnings[term]}\n            </Text>\n          )}\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n}\n\nDefinitionList.propTypes = {\n  gapSize: PropTypes.oneOf(Object.values(Size)),\n  dictionary: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  ),\n  tooltips: PropTypes.objectOf(PropTypes.string),\n  warnings: PropTypes.objectOf(PropTypes.string),\n  termTypography: PropTypes.shape({\n    ...omit(TextVariant.propTypes, ['tag', 'className', 'boxProps']),\n  }),\n  definitionTypography: PropTypes.shape({\n    ...omit(TextVariant.propTypes, ['tag', 'className', 'boxProps']),\n  }),\n};\n","export { default } from './definition-list';\n","import React, { useCallback, useState } from 'react';\nimport classnames from 'classnames';\nimport {\n  BorderRadius,\n  AlignItems,\n  BackgroundColor,\n  IconColor,\n  Display,\n  JustifyContent,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\nimport {\n  AvatarIcon,\n  Icon,\n  Box,\n  IconName,\n  IconSize,\n} from '../../component-library';\nimport Preloader from '../icon/preloader/preloader-icon.component';\nimport { DelineatorProps, DelineatorType } from './delineator.types';\nimport { getIconPropsByType, overrideTextComponentColorByType } from './utils';\n\nconst Loader = () => (\n  <div role=\"progressbar\">\n    <Preloader size={16} />\n  </div>\n);\n\n/**\n * Renders the icon on the right based on the loading state.\n *\n * @param options - Options bag\n * @param options.isExpanded - Whether the delineator is expanded.\n * @returns Either a loading spinner or an arrow icon.\n */\nconst ExpandableIcon = ({ isExpanded }: { isExpanded: boolean }) => {\n  return (\n    <Icon\n      name={isExpanded ? IconName.ArrowUp : IconName.ArrowDown}\n      size={IconSize.Sm}\n      color={IconColor.primaryDefault}\n    />\n  );\n};\n\nconst Header = ({\n  headerComponent,\n  iconName,\n  isCollapsible,\n  isExpanded,\n  isLoading,\n  isDisabled,\n  onHeaderClick,\n  type,\n}: {\n  headerComponent: DelineatorProps['headerComponent'];\n  iconName?: IconName;\n  isCollapsible: boolean;\n  isExpanded: boolean;\n  isLoading: boolean;\n  isDisabled: boolean;\n  onHeaderClick: () => void;\n  type?: DelineatorType;\n}) => {\n  const iconProps = getIconPropsByType(type);\n  return (\n    <Box\n      className={classnames({\n        delineator__header: true,\n        'delineator__header--expanded': isExpanded,\n        'delineator__header--loading': isLoading,\n        'delineator__header--disabled': isDisabled,\n      })}\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.spaceBetween}\n      paddingTop={2}\n      paddingRight={4}\n      paddingBottom={isExpanded ? 0 : 2}\n      paddingLeft={4}\n      onClick={onHeaderClick}\n    >\n      <Box display={Display.Flex} alignItems={AlignItems.center}>\n        {iconName && <AvatarIcon iconName={iconName} {...iconProps} />}\n        {overrideTextComponentColorByType({\n          component: headerComponent,\n          type,\n        })}\n      </Box>\n      {isCollapsible &&\n        (isLoading ? <Loader /> : <ExpandableIcon isExpanded={isExpanded} />)}\n    </Box>\n  );\n};\nconst Content = ({\n  children,\n  contentBoxProps,\n}: {\n  children: React.ReactNode;\n  contentBoxProps: DelineatorProps['contentBoxProps'];\n}) => {\n  return (\n    <Box\n      paddingTop={2}\n      paddingRight={4}\n      paddingBottom={4}\n      paddingLeft={4}\n      flexDirection={FlexDirection.Column}\n      {...contentBoxProps}\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst Container = ({\n  children,\n  wrapperBoxProps,\n}: {\n  children: React.ReactNode;\n  wrapperBoxProps: DelineatorProps['wrapperBoxProps'];\n}) => {\n  return (\n    <Box\n      className=\"delineator__wrapper\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      backgroundColor={BackgroundColor.backgroundDefault}\n      borderRadius={BorderRadius.LG}\n      {...wrapperBoxProps}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport const Delineator: React.FC<DelineatorProps> = ({\n  children,\n  headerComponent,\n  iconName,\n  isCollapsible = true,\n  isExpanded: isExpandedProp,\n  isLoading = false,\n  isDisabled = false,\n  onExpandChange,\n  type,\n  wrapperBoxProps,\n  contentBoxProps,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(isExpandedProp || false);\n  const shouldShowContent = !isCollapsible || (isCollapsible && isExpanded);\n\n  const handleHeaderClick = useCallback(() => {\n    if (isDisabled || isLoading || !isCollapsible) {\n      return;\n    }\n    const newExpandedState = !isExpanded;\n    onExpandChange?.(newExpandedState);\n    setIsExpanded(newExpandedState);\n  }, [isLoading, isCollapsible, isExpanded, isDisabled, onExpandChange]);\n\n  return (\n    <Container wrapperBoxProps={wrapperBoxProps}>\n      <Header\n        headerComponent={headerComponent}\n        iconName={iconName}\n        isCollapsible={isCollapsible}\n        isExpanded={isExpanded}\n        isLoading={isLoading}\n        isDisabled={isDisabled}\n        onHeaderClick={handleHeaderClick}\n        type={type}\n      />\n      {shouldShowContent && !isLoading && (\n        <Content contentBoxProps={contentBoxProps}>{children}</Content>\n      )}\n    </Container>\n  );\n};\n","import { Box, IconName, Text } from '../../component-library';\n\nexport type DelineatorProps = {\n  children?: React.ReactNode;\n  headerComponent: React.ReactElement<typeof Text>;\n  iconName?: IconName;\n  isCollapsible?: boolean;\n  isExpanded?: boolean;\n  isLoading?: boolean;\n  isDisabled?: boolean;\n  onExpandChange?: (isExpanded: boolean) => void;\n  type?: DelineatorType;\n  wrapperBoxProps?: React.ComponentProps<typeof Box>;\n  contentBoxProps?: React.ComponentProps<typeof Box>;\n};\n\nexport enum DelineatorType {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Error = 'error',\n  Default = 'default',\n}\n","export { Delineator } from './delineator';\n","import React from 'react';\nimport {\n  BackgroundColor,\n  IconColor,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport { AvatarIconSize, IconProps, Text } from '../../component-library';\nimport { DelineatorType } from './delineator.types';\n\nconst defaultIconProps = {\n  size: AvatarIconSize.Xs,\n};\n\n/*\n * Get the icon props based on the type of delineator.\n */\nexport const getIconPropsByType = (type?: DelineatorType) => {\n  let backgroundColor;\n  const inverseIconColorProp = {\n    color: IconColor.infoInverse,\n  } as IconProps<'span'>;\n\n  switch (type) {\n    case DelineatorType.Error:\n      backgroundColor = BackgroundColor.errorDefault;\n      break;\n    default:\n      backgroundColor = BackgroundColor.overlayAlternative;\n  }\n  return {\n    ...defaultIconProps,\n    iconProps: inverseIconColorProp,\n    backgroundColor,\n  };\n};\n\n/*\n * Get the text color based on the type of delineator.\n */\nconst getTextColorByType = (type?: DelineatorType) => {\n  switch (type) {\n    case DelineatorType.Error:\n      return TextColor.errorDefault;\n    default:\n      return TextColor.textDefault;\n  }\n};\n\n/*\n * Override the color of a Text component based on the type of delineator.\n */\nexport const overrideTextComponentColorByType = ({\n  component,\n  type,\n}: {\n  component: React.ReactElement<typeof Text>;\n  type?: DelineatorType;\n}) => {\n  const color = getTextColorByType(type);\n\n  return React.cloneElement(component, {\n    color,\n  } as React.ComponentProps<typeof Text>);\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  BackgroundColor,\n  BorderRadius,\n  Severity,\n} from '../../../helpers/constants/design-system';\n\nimport {\n  getCurrentNetwork,\n  getNetworkConfigurationsByChainId,\n} from '../../../selectors';\nimport { getCompletedOnboarding } from '../../../ducks/metamask/metamask';\nimport { BannerAlert, Box } from '../../component-library';\nimport {\n  CHAIN_IDS,\n  DEPRECATED_NETWORKS,\n} from '../../../../shared/constants/network';\nimport { updateNetwork } from '../../../store/actions';\n\nexport default function DeprecatedNetworks() {\n  const { chainId, rpcUrl } = useSelector(getCurrentNetwork) ?? {};\n  const networkConfigurations = useSelector(getNetworkConfigurationsByChainId);\n  const [isClosed, setIsClosed] = useState(false);\n  const completedOnboarding = useSelector(getCompletedOnboarding);\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  if (!completedOnboarding || isClosed) {\n    return null;\n  }\n\n  let props;\n  if (\n    // Goerli variants\n    chainId === CHAIN_IDS.GOERLI ||\n    chainId === CHAIN_IDS.LINEA_GOERLI ||\n    chainId === CHAIN_IDS.ARBITRUM_GOERLI ||\n    chainId === CHAIN_IDS.OPTIMISM_GOERLI\n  ) {\n    props = {\n      description: t('deprecatedGoerliNtwrkMsg'),\n      actionButtonLabel: t('learnMoreUpperCase'),\n      actionButtonProps: {\n        href: 'https://github.com/eth-clients/goerli#goerli-goerlitzer-testnet',\n        externalLink: true,\n      },\n    };\n  } else if (DEPRECATED_NETWORKS.includes(chainId)) {\n    props = { description: t('deprecatedNetwork') };\n  } else if (\n    chainId === CHAIN_IDS.AURORA &&\n    rpcUrl.startsWith('https://aurora-mainnet.infura.io/')\n  ) {\n    props = {\n      description: t('auroraRpcDeprecationMessage'),\n      actionButtonLabel: t('switchToNetwork', ['mainnet.aurora.dev']),\n      actionButtonOnClick: async () => {\n        setIsClosed(true);\n\n        const networkConfiguration = networkConfigurations[chainId];\n        networkConfiguration.rpcEndpoints[\n          networkConfiguration.defaultRpcEndpointIndex\n        ].url = 'https://mainnet.aurora.dev';\n\n        await dispatch(updateNetwork(networkConfiguration));\n      },\n    };\n  }\n\n  return props ? (\n    <Box\n      className=\"deprecated-networks\"\n      backgroundColor={BackgroundColor.backgroundDefault}\n      padding={4}\n      borderRadius={BorderRadius.SM}\n    >\n      <BannerAlert\n        severity={Severity.Warning}\n        onClose={() => setIsClosed(true)}\n        {...props}\n      />\n    </Box>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n/**\n * @deprecated The `<Dialog />` component has been deprecated in favor of the new `<BannerAlert>` component from the component-library.\n * Please update your code to use the new `<BannerAlert>` component instead, which can be found at ui/components/component-library/banner-alert/banner-alert.js.\n * You can find documentation for the new `BannerAlert` component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-banneralert--docs}\n * If you would like to help with the replacement of the old `Dialog` component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20463}\n */\n\nexport default function Dialog(props) {\n  const { children, type, className, onClick } = props;\n  return (\n    <div\n      className={classnames('dialog', className, {\n        'dialog--message': type === 'message',\n        'dialog--error': type === 'error',\n        'dialog--warning': type === 'warning',\n      })}\n      data-testid=\"dialog-message\"\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nDialog.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  type: PropTypes.oneOf(['message', 'error', 'warning']),\n  onClick: PropTypes.func,\n};\n","export enum DisclosureVariant {\n  Default = 'default',\n  Arrow = 'arrow',\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Icon, IconName, IconSize, Text } from '../../component-library';\nimport { Color, TextVariant } from '../../../helpers/constants/design-system';\nimport { DisclosureVariant } from './disclosure.constants';\n\n/**\n * @param {string} variant\n * @param {string} title\n * @param {string} size\n * @returns {JSX.Element}\n */\nconst renderSummaryByType = (variant, title, size) => {\n  switch (variant) {\n    case DisclosureVariant.Arrow: {\n      const textVariant =\n        size === 'small' ? TextVariant.bodySm : TextVariant.bodyMd;\n\n      return (\n        <summary className=\"disclosure__summary is-arrow\">\n          <Text color={Color.primaryDefault} variant={textVariant}>\n            {title}\n          </Text>\n          <Icon\n            className=\"disclosure__summary--icon\"\n            color={Color.primaryDefault}\n            name={IconName.ArrowUp}\n            size={IconSize.Sm}\n            marginInlineStart={2}\n          />\n        </summary>\n      );\n    }\n    default:\n      return (\n        <summary className=\"disclosure__summary\">\n          <Icon\n            className=\"disclosure__summary--icon\"\n            name={IconName.Add}\n            size={IconSize.Sm}\n            marginInlineEnd={2}\n          />\n          {title}\n        </summary>\n      );\n  }\n};\n\nconst Disclosure = ({\n  children,\n  isScrollToBottomOnOpen,\n  title,\n  size,\n  variant,\n}) => {\n  const disclosureFooterEl = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const scrollToBottom = () => {\n    disclosureFooterEl?.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    if (isScrollToBottomOnOpen && open) {\n      scrollToBottom();\n    }\n  }, [isScrollToBottomOnOpen, open]);\n\n  return (\n    <div\n      className=\"disclosure\"\n      data-testid=\"disclosure\"\n      onClick={() => setOpen((state) => !state)}\n    >\n      {title ? (\n        <details>\n          {renderSummaryByType(variant, title)}\n\n          <div className={classnames('disclosure__content', size)}>\n            {children}\n          </div>\n          <div ref={disclosureFooterEl} className=\"disclosure__footer\"></div>\n        </details>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nDisclosure.propTypes = {\n  children: PropTypes.node.isRequired,\n  isScrollToBottomOnOpen: PropTypes.bool,\n  size: PropTypes.string,\n  title: PropTypes.string,\n  variant: PropTypes.string,\n};\n\nDisclosure.defaultProps = {\n  isScrollToBottomOnOpen: false,\n  size: 'normal',\n  title: null,\n  variant: DisclosureVariant.Default,\n};\n\nexport default Disclosure;\n","export { default } from './disclosure';\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Icon, IconName, IconSize } from '../../component-library';\n\nconst Dropdown = ({\n  className,\n  disabled = false,\n  onChange,\n  options,\n  selectedOption = '',\n  style,\n  title,\n  'data-testid': dataTestId,\n}) => {\n  const _onChange = useCallback(\n    (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      onChange(event.target.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <div className={classnames('dropdown', className)}>\n      <select\n        className=\"dropdown__select\"\n        data-testid={dataTestId}\n        disabled={disabled}\n        title={title}\n        onChange={_onChange}\n        style={style}\n        value={selectedOption}\n      >\n        {options.map((option) => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.name || option.value}\n            </option>\n          );\n        })}\n      </select>\n      <Icon\n        name={IconName.ArrowDown}\n        size={IconSize.Sm}\n        className=\"dropdown__icon-caret-down\"\n      />\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  /**\n   * Additional css className to add to root of Dropdown component\n   */\n  className: PropTypes.string,\n  /**\n   * Disable dropdown by setting to true\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Title of the dropdown\n   */\n  title: PropTypes.string,\n  /**\n   * On options change handler\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Predefined options for component\n   */\n  options: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string,\n      value: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  /**\n   * Selected options of dropdown\n   */\n  selectedOption: PropTypes.string,\n  /**\n   * Add inline style for the component\n   */\n  style: PropTypes.object,\n  /**\n   * Unit testing test id\n   */\n  'data-testid': PropTypes.string,\n};\n\nexport default Dropdown;\n","export { default } from './dropdown';\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  AlignItems,\n  Color,\n  Display,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { getAccountNameErrorMessage } from '../../../helpers/utils/accounts';\nimport { ButtonIcon, IconName, Text, Box } from '../../component-library';\nimport { FormTextField } from '../../component-library/form-text-field/deprecated';\n\nexport default class EditableLabel extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    defaultValue: PropTypes.string,\n    className: PropTypes.string,\n    accounts: PropTypes.array,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  state = {\n    isEditing: false,\n    value: this.props.defaultValue || '',\n  };\n\n  async handleSubmit(isValidAccountName) {\n    if (!isValidAccountName) {\n      return;\n    }\n\n    await this.props.onSubmit(this.state.value.trim());\n    this.setState({ isEditing: false });\n  }\n\n  renderEditing() {\n    const { isValidAccountName, errorMessage } = getAccountNameErrorMessage(\n      this.props.accounts,\n      this.context,\n      this.state.value,\n      this.props.defaultValue,\n    );\n\n    return (\n      <Box\n        className={classnames('editable-label', this.props.className)}\n        display={Display.Flex}\n        gap={3}\n      >\n        <FormTextField\n          required\n          value={this.state.value}\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') {\n              this.handleSubmit(isValidAccountName);\n            }\n          }}\n          onChange={(event) => {\n            this.setState({ value: event.target.value });\n          }}\n          data-testid=\"editable-input\"\n          error={!isValidAccountName}\n          helpText={errorMessage}\n          autoFocus\n          placeholder={this.context.t('accountName')}\n        />\n        <ButtonIcon\n          iconName={IconName.Check}\n          onClick={() => this.handleSubmit(isValidAccountName)}\n          data-testid=\"save-account-label-input\"\n        />\n      </Box>\n    );\n  }\n\n  renderReadonly() {\n    return (\n      <Box display={Display.Flex} alignItems={AlignItems.center} gap={3}>\n        <Text\n          variant={TextVariant.bodyLgMedium}\n          style={{ wordBreak: 'break-word' }}\n        >\n          {this.state.value}\n        </Text>\n        <ButtonIcon\n          iconName={IconName.Edit}\n          ariaLabel={this.context.t('edit')}\n          data-testid=\"editable-label-button\"\n          onClick={() => this.setState({ isEditing: true })}\n          color={Color.iconDefault}\n        />\n      </Box>\n    );\n  }\n\n  render() {\n    return this.state.isEditing ? this.renderEditing() : this.renderReadonly();\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, IconName, IconSize } from '../../component-library';\nimport { IconColor } from '../../../helpers/constants/design-system';\n\n/**\n * @deprecated The `<ErrorMessage />` component has been deprecated in favor of the new `<BannerAlert>` component from the component-library.\n * Please update your code to use the new `<BannerAlert>` component instead, which can be found at ui/components/component-library/banner-alert/banner-alert.js.\n * You can find documentation for the new BannerAlert component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-banneralert--docs}\n * If you would like to help with the replacement of the old ErrorMessage component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20394}\n */\n\nconst ErrorMessage = (props, context) => {\n  const { errorMessage, errorKey } = props;\n  const error = errorKey ? context.t(errorKey) : errorMessage;\n\n  return (\n    <div className=\"error-message\">\n      <Icon\n        className=\"error-message__icon\"\n        name={IconName.Warning}\n        size={IconSize.Sm}\n        color={IconColor.errorDefault}\n        marginRight={2}\n      />\n      <div className=\"error-message__text\">{error}</div>\n    </div>\n  );\n};\n\nErrorMessage.propTypes = {\n  /**\n   * The text content for the error message\n   */\n  errorMessage: PropTypes.string,\n  /**\n   * The translate key for localization. Uses context.t(). Will override the error message\n   */\n  errorKey: PropTypes.string,\n};\n\nErrorMessage.contextTypes = {\n  t: PropTypes.func,\n};\n\nexport default ErrorMessage;\n","export { default } from './error-message.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { useCopyToClipboard } from '../../../hooks/useCopyToClipboard';\nimport {\n  AlignItems,\n  BorderColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { ButtonSecondary, Text, Box } from '../../component-library';\n\nfunction ExportTextContainer({ text = '', onClickCopy = null }) {\n  const ONE_MINUTE = 1000 * 60;\n  const t = useI18nContext();\n  const [copied, handleCopy] = useCopyToClipboard(ONE_MINUTE);\n\n  return (\n    <Box\n      display={Display.Flex}\n      justifyContent={JustifyContent.center}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.center}\n      borderColor={BorderColor.borderDefault}\n      borderRadius={BorderRadius.MD}\n      padding={4}\n      gap={4}\n    >\n      <Text\n        display={Display.Flex}\n        justifyContent={JustifyContent.center}\n        className=\"notranslate\"\n        variant={TextVariant.bodyLgMedium}\n        data-testid=\"srp_text\"\n      >\n        {text}\n      </Text>\n      <ButtonSecondary\n        className=\"export-text-container__button\"\n        block\n        onClick={() => {\n          if (onClickCopy) {\n            onClickCopy();\n          }\n          handleCopy(text);\n        }}\n      >\n        {copied ? t('copiedExclamation') : t('copyToClipboard')}\n      </ButtonSecondary>\n    </Box>\n  );\n}\n\nExportTextContainer.propTypes = {\n  text: PropTypes.string,\n  onClickCopy: PropTypes.func,\n};\n\nexport default React.memo(ExportTextContainer);\n","import ExportTextContainer from './export-text-container.component';\n\nexport default ExportTextContainer;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport classnames from 'classnames';\nimport { ButtonIcon, ButtonIconSize, IconName } from '../../component-library';\nimport { FormTextField } from '../../component-library/form-text-field/deprecated';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { Display, IconColor } from '../../../helpers/constants/design-system';\n\nexport type FormComboFieldOption = {\n  value: string;\n  primaryLabel?: string;\n  secondaryLabel?: string;\n};\n\nexport type FormComboFieldProps<Option extends FormComboFieldOption> = {\n  /** Whether to hide the 'no option' when there are no options to display. */\n  hideDropdownIfNoOptions?: boolean;\n\n  /** The maximum height of the dropdown in pixels. */\n  maxDropdownHeight?: number;\n\n  /** The text to display in the dropdown when there are no options to display. */\n  noOptionsText?: string;\n\n  /** Callback function to invoke when the value changes. */\n  onChange?: (value: string) => void;\n\n  /** Callback function to invoke when a dropdown option is clicked. */\n  onOptionClick?: (option: Option) => void;\n\n  /**\n   * The options to display in the dropdown.\n   */\n  options: Option[];\n\n  /** The placeholder text to display in the field when the value is empty. */\n  placeholder?: string;\n\n  /** The value to display in the field. */\n  value: string;\n};\n\nfunction Option({\n  option,\n  onClick,\n}: {\n  option: FormComboFieldOption;\n  onClick: (option: FormComboFieldOption) => void;\n}) {\n  const handleClick = useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      e.nativeEvent.stopImmediatePropagation();\n\n      onClick(option);\n    },\n    [onClick, option],\n  );\n\n  const { primaryLabel, secondaryLabel, value } = option;\n\n  return (\n    <div\n      tabIndex={0}\n      className=\"form-combo-field__option\"\n      onClick={handleClick}\n    >\n      <span className=\"form-combo-field__option-primary\">\n        {primaryLabel ?? value}\n      </span>\n      {secondaryLabel ? (\n        <span className=\"form-combo-field__option-secondary\">\n          {secondaryLabel}\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Dropdown<Option extends FormComboFieldOption>({\n  hideDropdownIfNoOptions,\n  maxDropdownHeight,\n  noOptionsText,\n  onOptionClick,\n  options,\n  width,\n}: {\n  hideDropdownIfNoOptions: boolean;\n  maxDropdownHeight?: number;\n  noOptionsText?: string;\n  onOptionClick: (option?: Option) => void;\n  options: Option[];\n  width: number;\n}) {\n  const t = useContext(I18nContext);\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ref = useRef<any>();\n  const maxHeight = maxDropdownHeight ?? 179;\n  const [dropdownHeight, setDropdownHeight] = useState(0);\n\n  useEffect(() => {\n    setDropdownHeight(ref.current?.scrollHeight ?? 0);\n  });\n\n  return (\n    <div\n      ref={ref}\n      style={{ width, maxHeight }}\n      className={classnames({\n        'form-combo-field__dropdown': true,\n        'form-combo-field__dropdown__scroll': dropdownHeight > maxHeight,\n      })}\n    >\n      {options.length === 0 && !hideDropdownIfNoOptions && (\n        <Option\n          option={{\n            primaryLabel: noOptionsText ?? t('comboNoOptions'),\n            value: '',\n          }}\n          onClick={() => onOptionClick(undefined)}\n        />\n      )}\n      {options.map((option, index) => (\n        <Option\n          key={index}\n          option={option}\n          onClick={() => {\n            onOptionClick(option);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default function FormComboField<Option extends FormComboFieldOption>({\n  hideDropdownIfNoOptions = false,\n  maxDropdownHeight,\n  noOptionsText,\n  onChange,\n  onOptionClick,\n  options,\n  placeholder,\n  value,\n}: FormComboFieldProps<Option>) {\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const valueRef = useRef<any>();\n  const [valueWidth, setValueWidth] = useState(0);\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const inputRef = useRef<any>(null);\n  const t = useContext(I18nContext);\n\n  useEffect(() => {\n    setValueWidth(valueRef.current?.offsetWidth);\n  });\n\n  const handleBlur = useCallback(\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e?: any) => {\n      if (e?.relatedTarget?.className !== 'form-combo-field__option') {\n        setDropdownVisible(false);\n      }\n    },\n    [setDropdownVisible],\n  );\n\n  const handleChange = useCallback(\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e: any) => {\n      onChange?.(e.target.value);\n    },\n    [onChange],\n  );\n\n  const handleOptionClick = useCallback(\n    (option?: Option) => {\n      setDropdownVisible(false);\n\n      if (option) {\n        handleChange({ target: { value: option.value } });\n        onOptionClick?.(option);\n      }\n\n      inputRef.current?.focus();\n    },\n    [setDropdownVisible, handleChange],\n  );\n\n  const handleClearClick = useCallback(() => {\n    handleChange({ target: { value: '' } });\n    inputRef.current?.focus();\n  }, [handleChange]);\n\n  return (\n    <div className=\"form-combo-field\" ref={valueRef}>\n      <div\n        onClick={() => {\n          setDropdownVisible(true);\n        }}\n      >\n        {/* @ts-ignore */}\n        <FormTextField\n          autoFocus\n          inputRef={inputRef}\n          placeholder={placeholder}\n          onBlur={handleBlur}\n          // TODO: Replace `any` with type\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          onKeyUp={(e: any) => {\n            if (e.key === 'Enter') {\n              handleBlur();\n            }\n          }}\n          value={value}\n          onChange={handleChange}\n          className={classnames({\n            'form-combo-field__value': true,\n            'form-combo-field__value-dropdown-visible': dropdownVisible,\n          })}\n          endAccessory={\n            <ButtonIcon\n              display={Display.Flex}\n              iconName={IconName.Close}\n              size={ButtonIconSize.Sm}\n              onClick={() => handleClearClick()}\n              color={IconColor.iconMuted}\n              ariaLabel={t('clear')}\n            />\n          }\n        />\n      </div>\n      {dropdownVisible && (\n        <Dropdown\n          hideDropdownIfNoOptions={hideDropdownIfNoOptions}\n          maxDropdownHeight={maxDropdownHeight}\n          noOptionsText={noOptionsText}\n          onOptionClick={handleOptionClick}\n          options={options}\n          width={valueWidth}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {\n  TextAlign,\n  Display,\n  TextVariant,\n  AlignItems,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\nimport NumericInput from '../numeric-input/numeric-input.component';\nimport InfoTooltip from '../info-tooltip/info-tooltip';\nimport { Text, Box } from '../../component-library';\n\n/**\n * @deprecated The `<FormField />` component has been deprecated in favor of the new `<FormTextField>` component from the component-library.\n * Please update your code to use the new `<FormTextField>` component instead, which can be found at ui/components/component-library/form-text-field/form-text-field.js.\n * You can find documentation for the new FormTextField component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-formtextfield--docs}\n * If you would like to help with the replacement of the old FormField component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/19737}\n */\n\nexport default function FormField({\n  dataTestId,\n  titleText = '',\n  TitleTextCustomComponent,\n  titleUnit = '',\n  TitleUnitCustomComponent,\n  tooltipText = '',\n  TooltipCustomComponent,\n  titleDetail = '',\n  titleDetailWrapperProps,\n  titleHeadingWrapperProps,\n  error,\n  onChange = undefined,\n  value = 0,\n  numeric,\n  detailText = '',\n  autoFocus = false,\n  password = false,\n  allowDecimals = false,\n  disabled = false,\n  placeholder,\n  warning,\n  warningProps,\n  passwordStrength,\n  passwordStrengthText,\n  id,\n  inputProps,\n  wrappingLabelProps,\n  inputRef,\n}) {\n  return (\n    <div\n      className={classNames('form-field', {\n        'form-field__row--error': error,\n      })}\n    >\n      <Box as=\"label\" {...wrappingLabelProps}>\n        <div className=\"form-field__heading\">\n          <Box\n            className=\"form-field__heading-title\"\n            display={Display.Flex}\n            alignItems={AlignItems.baseline}\n            {...titleHeadingWrapperProps}\n          >\n            {TitleTextCustomComponent ||\n              (titleText && (\n                <Text\n                  as=\"h6\"\n                  variant={TextVariant.bodySmBold}\n                  display={Display.InlineBlock}\n                >\n                  {titleText}\n                </Text>\n              ))}\n            {TitleUnitCustomComponent ||\n              (titleUnit && (\n                <Text\n                  as=\"h6\"\n                  variant={TextVariant.bodySm}\n                  color={TextColor.textAlternative}\n                  display={Display.InlineBlock}\n                >\n                  {titleUnit}\n                </Text>\n              ))}\n            {TooltipCustomComponent ||\n              (tooltipText && (\n                <InfoTooltip position=\"top\" contentText={tooltipText} />\n              ))}\n          </Box>\n          {titleDetail && (\n            <Box\n              className=\"form-field__heading-detail\"\n              textAlign={TextAlign.End}\n              marginRight={2}\n              {...titleDetailWrapperProps}\n            >\n              {titleDetail}\n            </Box>\n          )}\n        </div>\n        {numeric ? (\n          <NumericInput\n            error={error}\n            onChange={onChange}\n            value={value}\n            detailText={detailText}\n            autoFocus={autoFocus}\n            allowDecimals={allowDecimals}\n            disabled={disabled}\n            dataTestId={dataTestId}\n            placeholder={placeholder}\n            id={id}\n            inputRef={inputRef}\n          />\n        ) : (\n          <input\n            className={classNames('form-field__input', {\n              'form-field__input--error': error,\n              'form-field__input--warning': warning,\n            })}\n            onChange={(e) => onChange(e.target.value)}\n            value={value}\n            type={password ? 'password' : 'text'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            data-testid={dataTestId}\n            placeholder={placeholder}\n            id={id}\n            ref={inputRef}\n            {...inputProps}\n          />\n        )}\n        {error && (\n          <Text\n            color={TextColor.errorDefault}\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            className=\"form-field__error\"\n          >\n            {error}\n          </Text>\n        )}\n        {warning && (\n          <Text\n            color={TextColor.textAlternative}\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            className=\"form-field__warning\"\n            {...warningProps}\n          >\n            {warning}\n          </Text>\n        )}\n        {passwordStrength && (\n          <Text\n            color={TextColor.textDefault}\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            className=\"form-field__password-strength\"\n          >\n            {passwordStrength}\n          </Text>\n        )}\n        {passwordStrengthText && (\n          <Text\n            color={TextColor.textAlternative}\n            variant={TextVariant.bodyXs}\n            as=\"h6\"\n            className=\"form-field__password-strength-text\"\n          >\n            {passwordStrengthText}\n          </Text>\n        )}\n      </Box>\n    </div>\n  );\n}\n\nFormField.propTypes = {\n  /**\n   * Identifier for testing purpose\n   */\n  dataTestId: PropTypes.string,\n  /**\n   * Form Fields Title\n   */\n  titleText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * A custom component to replace the title text Typography component\n   * titleText will be ignored if this is provided\n   */\n  TitleTextCustomComponent: PropTypes.node,\n  /**\n   * Show unit (eg. ETH)\n   */\n  titleUnit: PropTypes.string,\n  /**\n   * A custom component to replace the title unit Typography component\n   * titleUnit will be ignored if this is provided\n   */\n  TitleUnitCustomComponent: PropTypes.node,\n  /**\n   * Add Tooltip and text content\n   */\n  tooltipText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * A custom component to replace the tooltip component\n   * tooltipText will be ignored if this is provided\n   */\n  TooltipCustomComponent: PropTypes.node,\n  /**\n   * Show content (text, image, component) in title\n   */\n  titleDetail: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * Props to pass to wrapping Box component of the titleDetail component\n   * Accepts all props of the Box component\n   */\n  titleDetailWrapperProps: PropTypes.shape({\n    ...Box.propTypes,\n  }),\n  /**\n   * Props to pass to wrapping Box component of the titleHeading component\n   * Accepts all props of the Box component\n   */\n  titleHeadingWrapperProps: PropTypes.shape({\n    ...Box.propTypes,\n  }),\n  /**\n   * Show error message\n   */\n  error: PropTypes.string,\n  /**\n   * Show warning message\n   */\n  warning: PropTypes.string,\n  /**\n   * Props to pass to the warning text component\n   * Accepts all props of the Text component\n   */\n  warningProps: PropTypes.shape({\n    ...Text.propTypes,\n  }),\n  /**\n   * Handler when fields change\n   */\n  onChange: PropTypes.func,\n  /**\n   * Field value\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Show detail text if field mode is numeric\n   */\n  detailText: PropTypes.string,\n  /**\n   * Set autofocus on render\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Set numeric mode, the default is text\n   */\n  numeric: PropTypes.bool,\n  /**\n   * Set password mode\n   */\n  password: PropTypes.bool,\n  /**\n   * Allow decimals on the field\n   */\n  allowDecimals: PropTypes.bool,\n  /**\n   * Check if the form disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Set the placeholder text for the input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Show password strength according to the score\n   */\n  passwordStrength: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * Show password strength description\n   */\n  passwordStrengthText: PropTypes.string,\n  /**\n   * The id of the input element. Should be used when the wrapping label is changed to a div to ensure accessibility.\n   */\n  id: PropTypes.string,\n  /**\n   * Any additional input attributes or overrides not provided by exposed props\n   */\n  inputProps: PropTypes.object,\n  /**\n   * The FormField is wrapped in a Box component that is rendered as a <label/> using the polymorphic \"as\" prop.\n   * This object allows you to override the rendering of the label by using the wrapperProps={{ as: 'div' }} prop.\n   * If used ensure the id prop is set on the input and a label element is present using htmlFor with the same id to ensure accessibility.\n   */\n  wrappingLabelProps: PropTypes.object,\n  /**\n   * ref for input component\n   */\n  inputRef: PropTypes.object,\n};\n","export { default } from './form-field';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { hexToDecimal } from '../../../../shared/modules/conversion.utils';\n\nexport default class HexToDecimal extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.string,\n  };\n\n  render() {\n    const { className, value } = this.props;\n    const decimalValue = hexToDecimal(value);\n\n    return <div className={className}>{decimalValue}</div>;\n  }\n}\n","export { default } from './hex-to-decimal.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Text } from '../../component-library';\nimport { TextVariant } from '../../../helpers/constants/design-system';\nimport Tooltip from '../tooltip/tooltip';\n\nconst defaultRender = (inner) => inner;\nexport default function IconButton(props) {\n  // Do not use destructuring in the parameter itself, otherwise ts will complain\n  // that optional props (like tooltipRender, disabled) must be passed!\n  const {\n    onClick,\n    Icon,\n    disabled,\n    label,\n    tooltipRender,\n    className,\n    ...otherProps\n  } = props;\n  const renderWrapper = tooltipRender ?? defaultRender;\n\n  return (\n    <button\n      className={classNames('icon-button', className, {\n        'icon-button--disabled': disabled,\n      })}\n      data-testid={otherProps['data-testid'] ?? undefined}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {renderWrapper(\n        <>\n          <div data-theme=\"light\" className=\"icon-button__circle\">\n            {Icon}\n          </div>\n          {label.length > 10 ? (\n            <Tooltip title={label} position=\"bottom\">\n              <Text\n                className=\"icon-button__label-large\"\n                ellipsis\n                variant={TextVariant.bodySm}\n              >\n                {label}\n              </Text>\n            </Tooltip>\n          ) : (\n            <Text\n              className=\"icon-button__label\"\n              ellipsis\n              variant={TextVariant.bodySm}\n            >\n              {label}\n            </Text>\n          )}\n        </>,\n      )}\n    </button>\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  Icon: PropTypes.object.isRequired,\n  disabled: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  tooltipRender: PropTypes.func,\n  className: PropTypes.string,\n  'data-testid': PropTypes.string,\n};\n","export { default } from './icon-button';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n/**\n * @deprecated The `<IconWithFallback />` component has been deprecated in favor of the new `<AvatarNetwork />` or `<AvatarFavicon />` component from the component-library.\n * Please update your code to use the new `<AvatarNetwork />` or `<AvatarFavicon />` component instead, which can be found at ui/components/component-library.\n * You can find documentation for the new `AvatarNetwork` or `AvatarFavicon` component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-avatarnetwork--docs}\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-avatarfavicon--docs}\n * If you would like to help with the replacement of the old `IconWithFallback` component, please submit a pull request\n */\n\nconst IconWithFallback = ({\n  name = '',\n  icon = null,\n  size,\n  className,\n  fallbackClassName,\n  wrapperClassName,\n  ...props\n}) => {\n  const [iconError, setIconError] = useState(false);\n  const style = size ? { height: `${size}px`, width: `${size}px` } : {};\n\n  const handleOnError = () => {\n    setIconError(true);\n  };\n\n  return (\n    <div className={classnames(wrapperClassName)} style={style}>\n      {!iconError && icon ? (\n        <img\n          onError={handleOnError}\n          src={icon}\n          style={style}\n          className={className}\n          alt={name || 'icon'}\n          {...props}\n        />\n      ) : (\n        <span\n          className={classnames(\n            'icon-with-fallback__fallback',\n            fallbackClassName,\n          )}\n        >\n          {name?.charAt(0).toUpperCase() || ''}\n        </span>\n      )}\n    </div>\n  );\n};\n\nIconWithFallback.propTypes = {\n  /**\n   * The img src of the icon\n   */\n  icon: PropTypes.string,\n  /**\n   * The name of the icon also used for the alt attribute of the image\n   */\n  name: PropTypes.string,\n  /**\n   * The size of the icon. Recommended sizes adhere to 8px grid: 16, 24, 32, 40\n   */\n  size: PropTypes.number,\n  /**\n   * className to apply to the image tag\n   */\n  className: PropTypes.string,\n  /**\n   * className to apply to the div that wraps the icon\n   */\n  wrapperClassName: PropTypes.string,\n  /**\n   * Additional className to apply to the fallback span tag\n   */\n  fallbackClassName: PropTypes.string,\n};\n\nexport default IconWithFallback;\n","export { default } from './icon-with-fallback.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @deprecated This has been deprecated in favor of the `<Icon />` component in ./ui/components/component-library/icon/icon.js\n * See storybook documentation for Icon here https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-icon--default-story#icon\n */\n\nconst IconEyeSlash = ({\n  size = 24,\n  color = 'currentColor',\n  ariaLabel,\n  className,\n}) => (\n  // This SVG is copied from `@fortawesome/fontawesome-free@5.13.0/regular/eye-slash.svg`.\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    className={className}\n    aria-label={ariaLabel}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 640 512\"\n  >\n    <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n  </svg>\n);\n\nIconEyeSlash.propTypes = {\n  /**\n   * The size of the Icon follows an 8px grid 2 = 16px, 3 = 24px etc\n   */\n  size: PropTypes.number,\n  /**\n   * The color of the icon accepts design token css variables\n   */\n  color: PropTypes.string,\n  /**\n   * An additional className to assign the Icon\n   */\n  className: PropTypes.string,\n  /**\n   * The aria-label of the icon for accessibility purposes\n   */\n  ariaLabel: PropTypes.string,\n};\n\nexport default IconEyeSlash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @deprecated This has been deprecated in favor of the `<Icon />` component in ./ui/components/component-library/icon/icon.js\n * See storybook documentation for Icon here https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-icon--default-story#icon\n */\n\nconst IconEye = ({\n  size = 24,\n  color = 'currentColor',\n  ariaLabel,\n  className,\n}) => (\n  // This SVG copied from `@fortawesome/fontawesome-free@5.13.0/regular/eye.svg`.\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    className={className}\n    aria-label={ariaLabel}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 576 512\"\n  >\n    <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n  </svg>\n);\n\nIconEye.propTypes = {\n  /**\n   * The size of the Icon follows an 8px grid 2 = 16px, 3 = 24px etc\n   */\n  size: PropTypes.number,\n  /**\n   * The color of the icon accepts design token css variables\n   */\n  color: PropTypes.string,\n  /**\n   * An additional className to assign the Icon\n   */\n  className: PropTypes.string,\n  /**\n   * The aria-label of the icon for accessibility purposes\n   */\n  ariaLabel: PropTypes.string,\n};\n\nexport default IconEye;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { SEVERITIES } from '../../../helpers/constants/design-system';\n\n/**\n * @deprecated This has been deprecated in favor of the `<Icon />` component in ./ui/components/component-library/icon/icon.js\n * See storybook documentation for Icon here https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-icon--default-story#icon\n */\n\nexport default function InfoIconInverted({ severity }) {\n  const className = classnames('info-icon', {\n    'info-icon--success': severity === SEVERITIES.SUCCESS,\n    'info-icon--warning': severity === SEVERITIES.WARNING,\n    'info-icon--danger': severity === SEVERITIES.DANGER,\n    'info-icon--info': severity === SEVERITIES.INFO,\n  });\n  return (\n    <svg\n      className={className}\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M15.75 8C15.75 3.75 12.25 0.25 8 0.25C3.71875 0.25 0.25 3.75 0.25 8C0.25 12.2812 3.71875 15.75 8 15.75C12.25 15.75 15.75 12.2812 15.75 8ZM8 9.5625C8.78125 9.5625 9.4375 10.2188 9.4375 11C9.4375 11.8125 8.78125 12.4375 8 12.4375C7.1875 12.4375 6.5625 11.8125 6.5625 11C6.5625 10.2188 7.1875 9.5625 8 9.5625ZM6.625 4.40625C6.59375 4.1875 6.78125 4 7 4H8.96875C9.1875 4 9.375 4.1875 9.34375 4.40625L9.125 8.65625C9.09375 8.875 8.9375 9 8.75 9H7.21875C7.03125 9 6.875 8.875 6.84375 8.65625L6.625 4.40625Z\" />\n    </svg>\n  );\n}\n\nInfoIconInverted.propTypes = {\n  /**\n   * Severity can be 1 of 4 states:'danger', 'warning', 'info' or 'success'\n   */\n  severity: PropTypes.oneOf(Object.values(SEVERITIES)),\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { SEVERITIES } from '../../../helpers/constants/design-system';\n\n/**\n * @deprecated This has been deprecated in favor of the `<Icon />` component in ./ui/components/component-library/icon/icon.js\n * See storybook documentation for Icon here https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-icon--default-story#icon\n */\n\nexport default function InfoIcon({ severity }) {\n  const className = classnames('info-icon', {\n    'info-icon--success': severity === SEVERITIES.SUCCESS,\n    'info-icon--warning': severity === SEVERITIES.WARNING,\n    'info-icon--danger': severity === SEVERITIES.DANGER,\n    'info-icon--info': severity === SEVERITIES.INFO,\n  });\n  return (\n    <svg\n      className={className}\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M7.2 5.6H8.8V4H7.2V5.6ZM8 14.4C4.472 14.4 1.6 11.528 1.6 8C1.6 4.472 4.472 1.6 8 1.6C11.528 1.6 14.4 4.472 14.4 8C14.4 11.528 11.528 14.4 8 14.4ZM8 0C6.94943 0 5.90914 0.206926 4.93853 0.608964C3.96793 1.011 3.08601 1.60028 2.34315 2.34315C0.842855 3.84344 0 5.87827 0 8C0 10.1217 0.842855 12.1566 2.34315 13.6569C3.08601 14.3997 3.96793 14.989 4.93853 15.391C5.90914 15.7931 6.94943 16 8 16C10.1217 16 12.1566 15.1571 13.6569 13.6569C15.1571 12.1566 16 10.1217 16 8C16 6.94943 15.7931 5.90914 15.391 4.93853C14.989 3.96793 14.3997 3.08601 13.6569 2.34315C12.914 1.60028 12.0321 1.011 11.0615 0.608964C10.0909 0.206926 9.05058 0 8 0ZM7.2 12H8.8V7.2H7.2V12Z\" />\n    </svg>\n  );\n}\n\nInfoIcon.propTypes = {\n  /**\n   * Severity can be 1 of 4 states:'danger', 'warning', 'info' or 'success'\n   */\n  severity: PropTypes.oneOf(Object.values(SEVERITIES)),\n};\n","export { default } from './preloader-icon.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst Preloader = ({ className, size }) => (\n  <svg\n    className={classnames('preloader__icon', className)}\n    width={size}\n    height={size}\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8 13.7143C4.84409 13.7143 2.28571 11.1559 2.28571 8C2.28571 4.84409 4.84409 2.28571 8 2.28571C11.1559 2.28571 13.7143 4.84409 13.7143 8C13.7143 11.1559 11.1559 13.7143 8 13.7143ZM8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16Z\"\n      fill=\"var(--color-primary-muted)\"\n    />\n    <mask\n      id=\"mask0\"\n      mask-type=\"alpha\"\n      maskUnits=\"userSpaceOnUse\"\n      x=\"0\"\n      y=\"0\"\n      width=\"16\"\n      height=\"16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 13.7143C4.84409 13.7143 2.28571 11.1559 2.28571 8C2.28571 4.84409 4.84409 2.28571 8 2.28571C11.1559 2.28571 13.7143 4.84409 13.7143 8C13.7143 11.1559 11.1559 13.7143 8 13.7143ZM8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16Z\"\n        fill=\"var(--color-primary-default)\"\n      />\n    </mask>\n    <g mask=\"url(#mask0)\">\n      <path\n        d=\"M6.85718 17.9999V11.4285V8.28564H-4.85711V17.9999H6.85718Z\"\n        fill=\"var(--color-primary-default)\"\n      />\n    </g>\n  </svg>\n);\n\nPreloader.defaultProps = {\n  className: undefined,\n};\n\nPreloader.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.number.isRequired,\n};\n\nexport default Preloader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @deprecated This has been deprecated in favor of the `<Icon />` component in ./ui/components/component-library/icon/icon.js\n * See storybook documentation for Icon here https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-icon--default-story#icon\n */\n\nconst SearchIcon = ({\n  size = 24,\n  color = 'currentColor',\n  ariaLabel,\n  className,\n}) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    className={className}\n    aria-label={ariaLabel}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\"\n  >\n    <path d=\"m235 427c-51 0-100-21-136-57-36-36-56-84-56-135 0-26 5-51 14-74 10-23 24-44 42-62 18-18 39-32 62-42 23-9 48-14 74-14 25 0 50 5 73 14 23 10 45 24 62 42 18 18 32 39 42 62 10 23 15 48 15 74 0 43-15 86-42 119l78 79c2 2 4 4 5 7 1 2 1 5 1 8 0 3 0 6-1 8-1 3-3 5-5 7-2 2-4 4-7 5-2 1-5 1-8 1-3 0-6 0-8-1-3-1-5-3-7-5l-79-78c-33 27-76 42-119 42z m0-43c82 0 149-67 149-149 0-83-67-150-149-150-83 0-150 67-150 150 0 82 67 149 150 149z\" />\n  </svg>\n);\n\nSearchIcon.propTypes = {\n  /**\n   * The size of the Icon follows an 8px grid 2 = 16px, 3 = 24px etc\n   */\n  size: PropTypes.number,\n  /**\n   * The color of the icon accepts design token css variables\n   */\n  color: PropTypes.string,\n  /**\n   * An additional className to assign the Icon\n   */\n  className: PropTypes.string,\n  /**\n   * The aria-label of the icon for accessibility purposes\n   */\n  ariaLabel: PropTypes.string,\n};\n\nexport default SearchIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @deprecated This has been deprecated in favor of the `<Icon />` component in ./ui/components/component-library/icon/icon.js\n * See storybook documentation for Icon here https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-icon--default-story#icon\n */\n\nexport default function SunCheck({ reverseColors }) {\n  const sunColor = reverseColors\n    ? 'var(--color-primary-default)'\n    : 'var(--color-primary-inverse)';\n  const checkColor = reverseColors\n    ? 'var(--color-primary-inverse)'\n    : 'var(--color-primary-default)';\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M13.2148 9.05384C13.432 8.40203 14.8878 7.92403 14.8878 7.20703C14.8878 6.49003 13.432 6.01204 13.2148 5.36022C12.9975 4.68668 13.8883 3.44823 13.4755 2.88332C13.0627 2.31842 11.607 2.77469 11.0421 2.3836C10.4771 1.97078 10.4771 0.449879 9.80361 0.232608C9.15179 0.0153358 8.26098 1.25378 7.54398 1.25378C6.82698 1.25378 5.91444 0.0153358 5.28435 0.232608C4.61081 0.449879 4.61081 1.99251 4.04591 2.3836C3.481 2.79641 2.02528 2.31842 1.61246 2.88332C1.19965 3.44823 2.09046 4.68668 1.87319 5.36022C1.65592 6.01204 0.200195 6.49003 0.200195 7.20703C0.200195 7.92403 1.65592 8.40203 1.87319 9.05384C2.09046 9.72738 1.19965 10.9658 1.61246 11.5307C2.02528 12.0956 3.481 11.6394 4.04591 12.0305C4.61081 12.4433 4.61081 13.9642 5.28435 14.1815C5.93617 14.3987 6.82698 13.1603 7.54398 13.1603C8.26098 13.1603 9.17352 14.3987 9.80361 14.1815C10.4771 13.9642 10.4771 12.4216 11.0421 12.0305C11.607 11.6176 13.0627 12.0956 13.4755 11.5307C13.8883 10.9658 12.9975 9.70566 13.2148 9.05384Z\"\n        fill={sunColor}\n      />\n      <path\n        d=\"M6.42285 10.084L4.13965 7.81445C4.07585 7.75065 4.04395 7.66862 4.04395 7.56836C4.04395 7.4681 4.07585 7.38607 4.13965 7.32227L4.64551 6.83008C4.70931 6.75716 4.78678 6.7207 4.87793 6.7207C4.97819 6.7207 5.06478 6.75716 5.1377 6.83008L6.66895 8.36133L9.9502 5.08008C10.0231 5.00716 10.1051 4.9707 10.1963 4.9707C10.2965 4.9707 10.3786 5.00716 10.4424 5.08008L10.9482 5.57227C11.012 5.63607 11.0439 5.7181 11.0439 5.81836C11.0439 5.91862 11.012 6.00065 10.9482 6.06445L6.91504 10.084C6.85124 10.1569 6.76921 10.1934 6.66895 10.1934C6.56868 10.1934 6.48665 10.1569 6.42285 10.084Z\"\n        fill={checkColor}\n      />\n    </svg>\n  );\n}\n\nSunCheck.propTypes = {\n  /**\n   * If true reverses the colors of the SunCheck icon\n   */\n  reverseColors: PropTypes.bool,\n};\n","export { default } from './blockieIdenticon.component';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { isEqual } from 'lodash';\nimport Jazzicon from '../jazzicon';\n\nimport { getAssetImageURL } from '../../../helpers/utils/util';\nimport BlockieIdenticon from './blockieIdenticon';\n\nconst getStyles = (diameter) => ({\n  height: diameter,\n  width: diameter,\n  borderRadius: diameter / 2,\n});\nconst getImage = async (image, ipfsGateway) => {\n  return await getAssetImageURL(image, ipfsGateway);\n};\n\nexport default class Identicon extends Component {\n  static propTypes = {\n    /**\n     * Adds blue border around the Identicon used for selected account.\n     * Increases the width and height of the Identicon by 8px\n     */\n    addBorder: PropTypes.bool,\n    /**\n     * Address used for generating random image\n     */\n    address: PropTypes.string,\n    /**\n     * Add custom css class\n     */\n    className: PropTypes.string,\n    /**\n     * Sets the width and height of the inner img element\n     * If addBorder is true will increase components height and width by 8px\n     */\n    diameter: PropTypes.number,\n    /**\n     * Used as the image source of the Identicon\n     */\n    image: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * Use the blockie type random image generator\n     */\n    useBlockie: PropTypes.bool,\n    /**\n     * The alt text of the image\n     */\n    alt: PropTypes.string,\n    /**\n     * Check if show image border\n     */\n    imageBorder: PropTypes.bool,\n    /**\n     * Add list of token in object\n     */\n    tokenList: PropTypes.object,\n    /**\n     * User preferred IPFS gateway\n     */\n    ipfsGateway: PropTypes.string,\n    /**\n     * Watched NFT contract data keyed by address\n     */\n    watchedNftContracts: PropTypes.object,\n  };\n\n  state = {\n    imageLoadingError: false,\n    imageUrl: '',\n  };\n\n  static defaultProps = {\n    addBorder: false,\n    address: undefined,\n    className: undefined,\n    diameter: 46,\n    image: undefined,\n    useBlockie: false,\n    alt: '',\n    tokenList: {},\n    watchedNftContracts: {},\n  };\n\n  loadImage = async () => {\n    const result = await getImage(this.props.image, this.props.ipfsGateway);\n    this.setState({ imageUrl: result });\n  };\n\n  async componentDidMount() {\n    this.loadImage();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.image !== this.props.image) {\n      this.loadImage();\n    }\n  }\n\n  renderImage() {\n    const { className, diameter, alt, imageBorder } = this.props;\n    let { image } = this.props;\n    const { imageUrl } = this.state;\n\n    if (Array.isArray(image) && image.length) {\n      image = image[0];\n    }\n\n    if (\n      typeof image === 'string' &&\n      image.toLowerCase().startsWith('ipfs://')\n    ) {\n      image = imageUrl;\n    }\n\n    return (\n      <img\n        className={classnames('identicon', className, {\n          'identicon__image-border': imageBorder,\n        })}\n        src={image}\n        style={getStyles(diameter)}\n        alt={alt}\n        onError={() => {\n          this.setState({ imageLoadingError: true });\n        }}\n      />\n    );\n  }\n\n  renderJazzicon() {\n    const { address, className, diameter, alt } = this.props;\n    const tokenList = this.getTokenList();\n\n    return (\n      <Jazzicon\n        address={address}\n        diameter={diameter}\n        className={classnames('identicon', className)}\n        style={getStyles(diameter)}\n        alt={alt}\n        tokenList={tokenList}\n      />\n    );\n  }\n\n  renderBlockie() {\n    const { address, className, diameter, alt } = this.props;\n\n    return (\n      <div\n        className={classnames('identicon', className)}\n        style={getStyles(diameter)}\n      >\n        <BlockieIdenticon address={address} diameter={diameter} alt={alt} />\n      </div>\n    );\n  }\n\n  renderBlockieOrJazzIcon() {\n    const { useBlockie } = this.props;\n    return useBlockie ? this.renderBlockie() : this.renderJazzicon();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // We only want to re-render if props are different.\n    return !isEqual(nextProps, this.props) || !isEqual(nextState, this.state);\n  }\n\n  getTokenImage() {\n    const { address, tokenList } = this.props;\n    return tokenList[address?.toLowerCase()]?.iconUrl;\n  }\n\n  getNftImage() {\n    const { address, watchedNftContracts } = this.props;\n    return watchedNftContracts[address?.toLowerCase()]?.logo;\n  }\n\n  getTokenList() {\n    const { address } = this.props;\n    const tokenImage = this.getTokenImage();\n    const nftImage = this.getNftImage();\n    const iconUrl = tokenImage || nftImage;\n\n    if (!iconUrl) {\n      return {};\n    }\n\n    return {\n      [address.toLowerCase()]: { iconUrl },\n    };\n  }\n\n  render() {\n    const { address, image, addBorder, diameter } = this.props;\n    const { imageLoadingError } = this.state;\n    const size = diameter + 8;\n\n    if (imageLoadingError) {\n      return this.renderBlockieOrJazzIcon();\n    }\n\n    if (image) {\n      return this.renderImage();\n    }\n\n    if (address) {\n      if (this.getTokenImage() || this.getNftImage()) {\n        return this.renderJazzicon();\n      }\n\n      return (\n        <div\n          className={classnames({ 'identicon__address-wrapper': addBorder })}\n          style={addBorder ? getStyles(size) : null}\n        >\n          {this.renderBlockieOrJazzIcon()}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={getStyles(diameter)}\n        className=\"identicon__image-border\"\n      ></div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { getTokenList } from '../../../selectors';\nimport { getNftContractsByAddressOnCurrentChain } from '../../../selectors/nft';\nimport Identicon from './identicon.component';\n\nconst mapStateToProps = (state) => {\n  const {\n    metamask: { useBlockie, ipfsGateway },\n  } = state;\n\n  return {\n    useBlockie,\n    tokenList: getTokenList(state),\n    ipfsGateway,\n    watchedNftContracts: getNftContractsByAddressOnCurrentChain(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Identicon);\n","export { default } from './identicon.container';\n","export { default } from './info-tooltip';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function InfoTooltipIcon({\n  fillColor = 'var(--color-icon-default)',\n}) {\n  return (\n    <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M5 0C2.2 0 0 2.2 0 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 2c.4 0 .7.3.7.7s-.3.7-.7.7-.7-.2-.7-.6.3-.8.7-.8zm.7 6H4.3V4.3h1.5V8z\"\n        fill={fillColor}\n      />\n    </svg>\n  );\n}\n\nInfoTooltipIcon.propTypes = {\n  fillColor: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from '../tooltip';\nimport InfoTooltipIcon from './info-tooltip-icon';\n\nconst positionArrowClassMap = {\n  top: 'info-tooltip__top-tooltip-arrow',\n  bottom: 'info-tooltip__bottom-tooltip-arrow',\n  left: 'info-tooltip__left-tooltip-arrow',\n  right: 'info-tooltip__right-tooltip-arrow',\n};\n\nexport default function InfoTooltip({\n  contentText = '',\n  position = '',\n  containerClassName,\n  wrapperClassName,\n  iconFillColor = 'var(--color-icon-alternative)',\n}) {\n  return (\n    <div className=\"info-tooltip\" data-testid=\"info-tooltip\">\n      <Tooltip\n        interactive\n        position={position}\n        containerClassName={classnames(\n          'info-tooltip__tooltip-container',\n          containerClassName,\n        )}\n        wrapperClassName={wrapperClassName}\n        tooltipInnerClassName=\"info-tooltip__tooltip-content\"\n        tooltipArrowClassName={positionArrowClassMap[position]}\n        html={contentText}\n        theme=\"tippy-tooltip-info\"\n      >\n        <InfoTooltipIcon fillColor={iconFillColor} />\n      </Tooltip>\n    </div>\n  );\n}\n\nInfoTooltip.propTypes = {\n  /**\n   * Text label that shows up after hover\n   */\n  contentText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * Shows position of the tooltip\n   */\n  position: PropTypes.oneOf(['top', 'left', 'bottom', 'right']),\n  /**\n   * Add custom CSS class for container\n   */\n  containerClassName: PropTypes.string,\n  /**\n   * Add custom CSS class for the wrapper\n   */\n  wrapperClassName: PropTypes.string,\n  /**\n   * Add color for the icon\n   */\n  iconFillColor: PropTypes.string,\n};\n","export { default } from './jazzicon.component';\n","import { useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { isMetamaskSuggestedGasEstimate } from '../../../helpers/utils/gas';\nimport { getGasLoadingAnimationIsShowing } from '../../../ducks/app/app';\nimport { useShouldAnimateGasEstimations } from '../../../hooks/useShouldAnimateGasEstimations';\n\nconst BASE_CLASS = 'loading-heartbeat';\nconst LOADING_CLASS = `${BASE_CLASS}--active`;\n\nexport default function LoadingHeartBeat({\n  estimateUsed,\n  backgroundColor = 'var(--color-background-default)',\n}) {\n  useShouldAnimateGasEstimations();\n  const active = useSelector(getGasLoadingAnimationIsShowing);\n\n  if (\n    process.env.IN_TEST ||\n    (estimateUsed && !isMetamaskSuggestedGasEstimate(estimateUsed))\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      className={classNames('loading-heartbeat', {\n        [LOADING_CLASS]: active,\n      })}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      style={{ backgroundColor }}\n    ></div>\n  );\n}\n\nLoadingHeartBeat.propTypes = {\n  backgroundColor: PropTypes.string,\n  estimateUsed: PropTypes.string,\n};\n","export { default } from './loading-indicator';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '../../component-library';\n\nexport default function LoadingIndicator({\n  alt,\n  title,\n  isLoading,\n  children = null,\n  ...props\n}) {\n  return isLoading ? (\n    <Box className=\"loading-indicator\" {...props}>\n      <img\n        className=\"loading-indicator__spinner\"\n        alt={alt}\n        title={title}\n        src=\"images/loading.svg\"\n      />\n    </Box>\n  ) : (\n    children\n  );\n}\n\nLoadingIndicator.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  alt: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import LoadingScreen from './loading-screen.component';\n\nexport default LoadingScreen;\n","import React, { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner';\nimport { Box } from '../../component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\n\nconst LoadingScreen = ({\n  header,\n  loadingMessage,\n  showLoadingSpinner = true,\n}) => {\n  const renderMessage = () => {\n    if (!loadingMessage) {\n      return null;\n    }\n\n    return isValidElement(loadingMessage) ? (\n      loadingMessage\n    ) : (\n      <span style={{ textAlign: 'center' }}>{loadingMessage}</span>\n    );\n  };\n\n  return (\n    <Box className=\"loading-overlay\">\n      {header}\n      <Box className=\"loading-overlay__container\" marginBottom={3}>\n        {showLoadingSpinner && <Spinner className=\"loading-overlay__spinner\" />}\n      </Box>\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n      >\n        {renderMessage()}\n      </Box>\n    </Box>\n  );\n};\n\nLoadingScreen.propTypes = {\n  header: PropTypes.element,\n  loadingMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  showLoadingSpinner: PropTypes.bool,\n};\n\nexport default React.memo(LoadingScreen);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LogoLattice = ({\n  width = '100%',\n  color = 'var(--color-text-default)',\n  className,\n  ariaLabel,\n}) => {\n  return (\n    <svg\n      width={width}\n      fill={color}\n      className={className}\n      aria-label={ariaLabel}\n      viewBox=\"0 0 2546 491\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2460 15V30H2488H2516V140V250H2531H2546V125V0H2503H2460V15ZM1861 116.038C1796.99 123.881 1741.39 163.865 1712.97 222.5C1680.8 288.855 1690.83 365.835 1739.17 423.5C1778.97 470.987 1839.99 496.383 1898.79 489.935C1937.49 485.692 1976.26 467.949 2005.03 441.315L2010.98 435.803L1997.36 421.444L1983.74 407.085L1974.62 415.109C1953.06 434.078 1931.7 444.965 1904.88 450.669C1893.48 453.093 1867.95 453.103 1855.82 450.689C1837.26 446.995 1819.5 439.522 1802.54 428.264C1790.63 420.354 1773.3 403.429 1764.69 391.295C1752.74 374.459 1743.39 352.909 1738.81 331.648C1735.63 316.902 1735.66 289.005 1738.87 274C1751.85 213.28 1797.55 166.907 1855.82 155.311C1867.95 152.897 1893.48 152.907 1904.88 155.331C1931.7 161.035 1953.06 171.922 1974.62 190.891L1983.74 198.915L1997.38 184.534L2011.02 170.153L2003.26 163.053C1977.39 139.393 1945.42 123.844 1909.5 117.465C1898.75 115.555 1871.49 114.753 1861 116.038ZM0 303V485H120H240V465.5V446H140.5H41V283.5V121H20.5H0V303ZM407.496 297.75C364.676 394.963 328.599 476.871 327.325 479.769L325.009 485.038L347.632 484.769L370.256 484.5L386.106 448.5C394.823 428.7 403.087 410.135 404.469 407.245L406.983 401.99L508.152 402.245L609.321 402.5L627.41 443.719L645.5 484.938L668.135 484.969L690.769 485L655.85 405.75C636.645 362.163 600.584 280.269 575.716 223.763L530.5 121.027L507.925 121.013L485.35 121L407.496 297.75ZM749 140.5V160H810H871V322.5V485H891.5H912V322.5V160H973H1034V140.5V121H891.5H749V140.5ZM1133 140.5V160H1194H1255V322.5V485H1275.5H1296V322.5V160H1357H1418V140.5V121H1275.5H1133V140.5ZM1534 303V485H1554.5H1575V303V121H1554.5H1534V303ZM2120 303V485H2250.5H2381V465.5V446H2271.5H2162V382.5V319H2260.5H2359V299.5V280H2260.5H2162V220V160H2271.5H2381V140.5V121H2250.5H2120V303ZM550.073 267.125C572.858 318.894 591.65 361.644 591.833 362.125C592.022 362.621 555.677 363 507.976 363C428.21 363 423.821 362.908 424.447 361.25C426.983 354.537 507.62 173.036 508.073 173.02C508.388 173.009 527.288 215.356 550.073 267.125Z\"\n      />\n    </svg>\n  );\n};\n\nLogoLattice.propTypes = {\n  /**\n   * The width of the logo. Defaults to 100%\n   */\n  width: PropTypes.string,\n  /**\n   * The color of the logo defaults to var(--color-text-default)\n   */\n  color: PropTypes.string,\n  /**\n   * Additional className to add to the root svg\n   */\n  className: PropTypes.string,\n  /**\n   * Aria label to add to the logo component\n   */\n  ariaLabel: PropTypes.string,\n};\n\nexport default LogoLattice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LogoLedger = ({\n  width = '100%',\n  color = 'var(--color-text-default)',\n  className,\n  ariaLabel,\n}) => {\n  return (\n    <svg\n      width={width}\n      fill={color}\n      className={className}\n      aria-label={ariaLabel}\n      viewBox=\"0 0 2000.58 669.35\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"m1711.35 627.2v42.14h289.22v-190.05h-42.14v147.91zm0-627.2v42.14h247.08v147.92h42.14v-190.06zm-149.15 326v-97.92h66.11c32.23 0 43.8 10.74 43.8 40.08v17.35c0 30.16-11.16 40.49-43.8 40.49zm104.94 17.35c30.16-7.85 51.23-35.95 51.23-69.41 0-21.07-8.26-40.08-23.96-55.37-19.83-19.01-46.28-28.51-80.57-28.51h-92.96v289.22h41.32v-115.27h61.98c31.81 0 44.62 13.22 44.62 46.28v69h42.14v-62.39c0-45.45-10.74-62.8-43.8-67.76zm-347.88 9.5h127.26v-38.01h-127.26v-86.77h139.65v-38.01h-181.8v289.22h188v-38.01h-145.85zm-138.42 15.29v19.83c0 41.73-15.29 55.37-53.71 55.37h-9.09c-38.43 0-57.02-12.4-57.02-69.83v-77.68c0-57.84 19.42-69.83 57.84-69.83h8.26c37.6 0 49.58 14.05 49.99 52.89h45.45c-4.13-57.02-42.14-92.96-99.16-92.96-27.68 0-50.82 8.68-68.17 25.2-26.03 24.38-40.49 65.7-40.49 123.54 0 55.78 12.4 97.1 38.01 122.71 17.35 16.94 41.32 26.03 64.87 26.03 24.79 0 47.52-9.92 59.08-31.4h5.78v27.27h38.01v-149.15h-111.97v38.01zm-364.41-140.07h45.04c42.56 0 65.7 10.74 65.7 68.59v76.02c0 57.84-23.14 68.59-65.7 68.59h-45.04zm48.75 251.22c78.92 0 108.25-59.91 108.25-144.61 0-85.94-31.4-144.61-109.08-144.61h-89.25v289.22zm-289.63-126.44h127.26v-38.01h-127.26v-86.77h139.65v-38.01h-181.8v289.22h188v-38.01h-145.85zm-243.77-162.79h-42.14v289.22h190.06v-38.01h-147.92zm-331.78 289.23v190.06h289.22v-42.15h-247.08v-147.91zm0-479.29v190.06h42.14v-147.92h247.08v-42.14z\" />\n    </svg>\n  );\n};\n\nLogoLedger.propTypes = {\n  /**\n   * The width of the logo. Defaults to 100%\n   */\n  width: PropTypes.string,\n  /**\n   * The color of the logo defaults to var(--color-text-default)\n   */\n  color: PropTypes.string,\n  /**\n   * Additional className to add to the root svg\n   */\n  className: PropTypes.string,\n  /**\n   * Aria label to add to the logo component\n   */\n  ariaLabel: PropTypes.string,\n};\n\nexport default LogoLedger;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LogoQRBased = ({\n  width = '100%',\n  color = 'var(--color-text-default)',\n  className,\n  ariaLabel,\n}) => {\n  return (\n    <svg\n      width={width}\n      fill={color}\n      className={className}\n      aria-label={ariaLabel}\n      viewBox=\"0 0 107 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M1.3333 8H6.6667C7.403 8 8 7.403 8 6.6667V1.3333C8 0.597002 7.403 0 6.6667 0H1.3333C0.597 0 0 0.597002 0 1.3333V6.6667C0 7.403 0.597 8 1.3333 8ZM2.6667 2.6667H5.3333V5.3333H2.6667V2.6667ZM0.6667 13.3333H2C2.3682 13.3333 2.6667 13.0349 2.6667 12.6667V11.3333C2.6667 10.9651 2.3682 10.6667 2 10.6667H0.6667C0.2985 10.6667 0 10.9651 0 11.3333V12.6667C0 13.0349 0.2985 13.3333 0.6667 13.3333ZM6.6667 16H1.3333C0.597 16 0 16.597 0 17.3333V22.6667C0 23.403 0.597 24 1.3333 24H6.6667C7.403 24 8 23.403 8 22.6667V17.3333C8 16.597 7.403 16 6.6667 16ZM5.3333 21.3333H2.6667V18.6667H5.3333V21.3333ZM19.3333 24H23.3333C23.7015 24 24 23.7015 24 23.3333V19.3333C24 18.9651 23.7015 18.6667 23.3333 18.6667H22C21.6318 18.6667 21.3333 18.9651 21.3333 19.3333V21.3333H18.6667V23.3333C18.6667 23.7015 18.9651 24 19.3333 24ZM22.6667 0H17.3333C16.597 0 16 0.597002 16 1.3333V6.6667C16 7.403 16.597 8 17.3333 8H22.6667C23.403 8 24 7.403 24 6.6667V1.3333C24 0.597002 23.403 0 22.6667 0ZM21.3333 5.3333H18.6667V2.6667H21.3333V5.3333ZM6 10.6667C5.6318 10.6667 5.3333 10.9651 5.3333 11.3333V12.6667C5.3333 13.0349 5.6318 13.3333 6 13.3333H10.6667V10.6667H6ZM10.6667 15.3333C10.6667 15.7015 10.9651 16 11.3333 16H13.3333V18C13.3333 18.3682 13.6318 18.6667 14 18.6667H16V13.3333H10.6667V15.3333ZM10.6667 22V23.3333C10.6667 23.7015 10.9651 24 11.3333 24H15.3333C15.7015 24 16 23.7015 16 23.3333V21.3333H11.3333C10.9651 21.3333 10.6667 21.6318 10.6667 22ZM23.3333 10.6667H16.6667C16.2985 10.6667 16 10.9651 16 11.3333V13.3333H18.6667V15.3333C18.6667 15.7015 18.9651 16 19.3333 16H20.6667C21.0349 16 21.3333 15.7015 21.3333 15.3333V13.3333H23.3333C23.7015 13.3333 24 13.0349 24 12.6667V11.3333C24 10.9651 23.7015 10.6667 23.3333 10.6667ZM18.6667 21.3333V18.6667H16V21.3333H18.6667ZM11.3333 5.3333H12.6667C13.0349 5.3333 13.3333 5.0349 13.3333 4.6667V0.666698C13.3333 0.298498 13.0349 0 12.6667 0H11.3333C10.9651 0 10.6667 0.298498 10.6667 0.666698V4.6667C10.6667 5.0349 10.9651 5.3333 11.3333 5.3333ZM13.3333 10V8.6667C13.3333 8.2985 13.0349 8 12.6667 8H11.3333C10.9651 8 10.6667 8.2985 10.6667 8.6667V10.6667H12.6667C13.0349 10.6667 13.3333 10.3682 13.3333 10Z\" />\n      <path d=\"M38.592 18.192C37.7707 18.192 37.0027 18.0427 36.288 17.744C35.584 17.4347 34.9653 17.0187 34.432 16.496C33.8987 15.9627 33.4773 15.3387 33.168 14.624C32.8693 13.9093 32.72 13.1413 32.72 12.32C32.72 11.4987 32.8693 10.7307 33.168 10.016C33.4773 9.3013 33.8987 8.6827 34.432 8.16C34.9653 7.6267 35.584 7.2107 36.288 6.912C37.0027 6.6027 37.7707 6.448 38.592 6.448C39.4133 6.448 40.1813 6.6027 40.896 6.912C41.6107 7.2107 42.2293 7.6267 42.752 8.16C43.2853 8.6827 43.7013 9.3013 44 10.016C44.3093 10.7307 44.464 11.4987 44.464 12.32C44.464 13.0347 44.3467 13.7067 44.112 14.336C43.888 14.9653 43.5733 15.536 43.168 16.048L45.28 18H43.248L42.16 17.008C41.6693 17.3813 41.12 17.6747 40.512 17.888C39.904 18.0907 39.264 18.192 38.592 18.192ZM38.592 16.784C39.5413 16.784 40.3787 16.528 41.104 16.016L39.296 14.336L40.208 13.312L42.08 15.056C42.3573 14.6827 42.576 14.2667 42.736 13.808C42.896 13.3387 42.976 12.8427 42.976 12.32C42.976 11.7013 42.864 11.12 42.64 10.576C42.416 10.032 42.1067 9.5573 41.712 9.152C41.328 8.7467 40.864 8.432 40.32 8.208C39.7867 7.9733 39.2107 7.856 38.592 7.856C37.9733 7.856 37.3973 7.9733 36.864 8.208C36.3307 8.432 35.8667 8.7467 35.472 9.152C35.088 9.5573 34.784 10.032 34.56 10.576C34.336 11.12 34.224 11.7013 34.224 12.32C34.224 12.9493 34.336 13.536 34.56 14.08C34.784 14.6133 35.088 15.0827 35.472 15.488C35.8667 15.8933 36.3307 16.2133 36.864 16.448C37.3973 16.672 37.9733 16.784 38.592 16.784ZM46.9259 6.64H50.7979C51.3205 6.64 51.7899 6.7147 52.2059 6.864C52.6325 7.0133 52.9899 7.2267 53.2779 7.504C53.5765 7.7813 53.8005 8.112 53.9499 8.496C54.1099 8.88 54.1899 9.3067 54.1899 9.776C54.1899 10.608 53.9392 11.2907 53.4379 11.824C52.9472 12.3573 52.2592 12.688 51.3739 12.816L55.7579 18H53.8859L49.5179 12.832H48.4139V18H46.9259V6.64ZM50.6219 11.504C51.2725 11.504 51.7792 11.36 52.1419 11.072C52.5152 10.784 52.7019 10.352 52.7019 9.776C52.7019 9.2 52.5152 8.7627 52.1419 8.464C51.7792 8.1653 51.2725 8.016 50.6219 8.016H48.4139V11.504H50.6219ZM55.8681 12.832H59.948V14.208H55.8681V12.832ZM66.488 18.16C65.88 18.16 65.325 18.0267 64.824 17.76C64.323 17.4827 63.939 17.152 63.672 16.768V18H62.296V6H63.672V11.232C63.939 10.848 64.323 10.5227 64.824 10.256C65.325 9.9787 65.88 9.84 66.488 9.84C67.043 9.84 67.56 9.952 68.04 10.176C68.52 10.3893 68.936 10.688 69.288 11.072C69.64 11.4453 69.912 11.8827 70.104 12.384C70.307 12.8853 70.408 13.424 70.408 14C70.408 14.576 70.307 15.1147 70.104 15.616C69.912 16.1173 69.64 16.56 69.288 16.944C68.936 17.3173 68.52 17.616 68.04 17.84C67.56 18.0533 67.043 18.16 66.488 18.16ZM66.28 16.896C66.685 16.896 67.053 16.8213 67.384 16.672C67.715 16.5227 67.997 16.32 68.232 16.064C68.477 15.7973 68.664 15.488 68.792 15.136C68.931 14.784 69 14.4053 69 14C69 13.5947 68.931 13.216 68.792 12.864C68.664 12.512 68.477 12.208 68.232 11.952C67.997 11.6853 67.715 11.4773 67.384 11.328C67.053 11.1787 66.685 11.104 66.28 11.104C65.875 11.104 65.507 11.1787 65.176 11.328C64.845 11.4773 64.557 11.6853 64.312 11.952C64.077 12.208 63.891 12.512 63.752 12.864C63.624 13.216 63.56 13.5947 63.56 14C63.56 14.4053 63.624 14.784 63.752 15.136C63.891 15.488 64.077 15.7973 64.312 16.064C64.557 16.32 64.845 16.5227 65.176 16.672C65.507 16.8213 65.875 16.896 66.28 16.896ZM75.67 18.16C75.105 18.16 74.582 18.0533 74.102 17.84C73.633 17.616 73.222 17.3173 72.87 16.944C72.518 16.56 72.241 16.1173 72.038 15.616C71.846 15.1147 71.75 14.576 71.75 14C71.75 13.424 71.846 12.8853 72.038 12.384C72.241 11.8827 72.518 11.4453 72.87 11.072C73.222 10.688 73.633 10.3893 74.102 10.176C74.582 9.952 75.105 9.84 75.67 9.84C76.278 9.84 76.833 9.9787 77.334 10.256C77.835 10.5227 78.219 10.848 78.486 11.232V10H79.862V18H78.486V16.768C78.219 17.152 77.835 17.4827 77.334 17.76C76.833 18.0267 76.278 18.16 75.67 18.16ZM75.878 16.896C76.283 16.896 76.651 16.8213 76.982 16.672C77.313 16.5227 77.595 16.32 77.83 16.064C78.075 15.7973 78.262 15.488 78.39 15.136C78.529 14.784 78.598 14.4053 78.598 14C78.598 13.5947 78.529 13.216 78.39 12.864C78.262 12.512 78.075 12.208 77.83 11.952C77.595 11.6853 77.313 11.4773 76.982 11.328C76.651 11.1787 76.283 11.104 75.878 11.104C75.473 11.104 75.099 11.1787 74.758 11.328C74.427 11.4773 74.139 11.6853 73.894 11.952C73.659 12.208 73.473 12.512 73.334 12.864C73.206 13.216 73.142 13.5947 73.142 14C73.142 14.4053 73.206 14.784 73.334 15.136C73.473 15.488 73.659 15.7973 73.894 16.064C74.139 16.32 74.427 16.5227 74.758 16.672C75.099 16.8213 75.473 16.896 75.878 16.896ZM85.028 18.16C84.602 18.16 84.196 18.1067 83.812 18C83.428 17.8933 83.092 17.7387 82.804 17.536C82.516 17.3227 82.282 17.0613 82.1 16.752C81.919 16.4427 81.812 16.0853 81.78 15.68H83.188C83.231 15.9253 83.311 16.1333 83.428 16.304C83.556 16.464 83.706 16.5973 83.876 16.704C84.047 16.8107 84.228 16.8853 84.42 16.928C84.623 16.9707 84.831 16.992 85.044 16.992C85.482 16.992 85.844 16.9067 86.132 16.736C86.431 16.5547 86.58 16.288 86.58 15.936C86.58 15.616 86.479 15.3547 86.276 15.152C86.074 14.9493 85.732 14.784 85.252 14.656L84.1 14.352C83.407 14.1707 82.89 13.8773 82.548 13.472C82.207 13.0667 82.036 12.576 82.036 12C82.036 11.6693 82.106 11.3707 82.244 11.104C82.383 10.8373 82.575 10.6133 82.82 10.432C83.066 10.24 83.354 10.096 83.684 10C84.026 9.8933 84.399 9.84 84.804 9.84C85.231 9.84 85.615 9.8987 85.956 10.016C86.298 10.1333 86.591 10.2987 86.836 10.512C87.092 10.7147 87.295 10.9547 87.444 11.232C87.594 11.5093 87.684 11.808 87.716 12.128H86.34C86.234 11.776 86.042 11.4987 85.764 11.296C85.498 11.0933 85.178 10.992 84.804 10.992C84.42 10.992 84.095 11.0827 83.828 11.264C83.562 11.4347 83.428 11.6747 83.428 11.984C83.428 12.2827 83.524 12.5227 83.716 12.704C83.908 12.8747 84.218 13.0187 84.644 13.136L85.924 13.472C86.596 13.6427 87.103 13.9307 87.444 14.336C87.796 14.7307 87.972 15.232 87.972 15.84C87.972 16.2347 87.898 16.5813 87.748 16.88C87.599 17.168 87.391 17.408 87.124 17.6C86.858 17.792 86.543 17.9307 86.18 18.016C85.828 18.112 85.444 18.16 85.028 18.16ZM93.329 18.16C92.742 18.16 92.204 18.0587 91.713 17.856C91.222 17.6427 90.796 17.3493 90.433 16.976C90.081 16.6027 89.804 16.1653 89.601 15.664C89.398 15.152 89.297 14.5973 89.297 14C89.297 13.4133 89.388 12.8693 89.569 12.368C89.761 11.856 90.033 11.4133 90.385 11.04C90.737 10.6667 91.164 10.3733 91.665 10.16C92.166 9.9467 92.732 9.84 93.361 9.84C93.99 9.84 94.55 9.9627 95.041 10.208C95.542 10.4427 95.958 10.768 96.289 11.184C96.63 11.5893 96.876 12.0693 97.025 12.624C97.185 13.168 97.244 13.7493 97.201 14.368H90.689C90.7 14.7307 90.774 15.0667 90.913 15.376C91.062 15.6853 91.254 15.9573 91.489 16.192C91.724 16.416 92.001 16.592 92.321 16.72C92.641 16.848 92.982 16.912 93.345 16.912C93.846 16.912 94.294 16.8107 94.689 16.608C95.094 16.3947 95.42 16.048 95.665 15.568H97.073C96.977 15.92 96.822 16.256 96.609 16.576C96.396 16.8853 96.129 17.1573 95.809 17.392C95.5 17.6267 95.137 17.8133 94.721 17.952C94.305 18.0907 93.841 18.16 93.329 18.16ZM93.313 11.056C93.025 11.056 92.742 11.0987 92.465 11.184C92.188 11.2693 91.932 11.4027 91.697 11.584C91.473 11.7653 91.276 11.9947 91.105 12.272C90.934 12.5493 90.817 12.8853 90.753 13.28H95.745C95.617 12.5333 95.329 11.9787 94.881 11.616C94.433 11.2427 93.91 11.056 93.313 11.056ZM102.483 18.16C101.917 18.16 101.395 18.0533 100.915 17.84C100.445 17.616 100.035 17.3173 99.683 16.944C99.331 16.56 99.053 16.1173 98.851 15.616C98.659 15.1147 98.563 14.576 98.563 14C98.563 13.424 98.659 12.8853 98.851 12.384C99.053 11.8827 99.331 11.4453 99.683 11.072C100.035 10.688 100.445 10.3893 100.915 10.176C101.395 9.952 101.917 9.84 102.483 9.84C103.091 9.84 103.645 9.9787 104.147 10.256C104.648 10.5227 105.032 10.848 105.299 11.232V6H106.675V18H105.299V16.768C105.032 17.152 104.648 17.4827 104.147 17.76C103.645 18.0267 103.091 18.16 102.483 18.16ZM102.691 16.896C103.096 16.896 103.464 16.8213 103.795 16.672C104.125 16.5227 104.408 16.32 104.643 16.064C104.888 15.7973 105.075 15.488 105.203 15.136C105.341 14.784 105.411 14.4053 105.411 14C105.411 13.5947 105.341 13.216 105.203 12.864C105.075 12.512 104.888 12.208 104.643 11.952C104.408 11.6853 104.125 11.4773 103.795 11.328C103.464 11.1787 103.096 11.104 102.691 11.104C102.285 11.104 101.912 11.1787 101.571 11.328C101.24 11.4773 100.952 11.6853 100.707 11.952C100.472 12.208 100.285 12.512 100.147 12.864C100.019 13.216 99.955 13.5947 99.955 14C99.955 14.4053 100.019 14.784 100.147 15.136C100.285 15.488 100.472 15.7973 100.707 16.064C100.952 16.32 101.24 16.5227 101.571 16.672C101.912 16.8213 102.285 16.896 102.691 16.896Z\" />\n    </svg>\n  );\n};\n\nLogoQRBased.propTypes = {\n  /**\n   * The width of the logo. Defaults to 100%\n   */\n  width: PropTypes.string,\n  /**\n   * The color of the logo defaults to var(--color-text-default)\n   */\n  color: PropTypes.string,\n  /**\n   * Additional className to add to the root svg\n   */\n  className: PropTypes.string,\n  /**\n   * Aria label to add to the logo component\n   */\n  ariaLabel: PropTypes.string,\n};\n\nexport default LogoQRBased;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LogoTrezor = ({\n  width = '100%',\n  color = 'var(--color-text-default)',\n  className,\n  ariaLabel,\n}) => {\n  return (\n    <svg\n      width={width}\n      fill={color}\n      className={className}\n      aria-label={ariaLabel}\n      viewBox=\"0 0 1482 378\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"m915.31 115.89h154.82v40.74l-84.2 114.08h84.2v47.98h-154.82v-40.74l84.2-114.08h-84.2z\" />\n      <path d=\"m1437.7101 243.55c19-7.25 38.9301-26.26 38.9301-59.76 0-40.74-28.0601-67-69.71-67h-95.0601v201.9h52.51v-67.9h19.9199l37.12 67.9h60.66l-44.37-75.14zm-37.12-39.84h-36.21v-40.74h36.21c13.58 0 22.64 8.15 22.64 19.92 0 12.67-9.0601 20.82-22.64 20.82z\" />\n      <path d=\"m1184.2101 113.17c-61.5699 0-105 44.36-105 104.12s44.34 104.12 105 104.12 105.9301-44.37 105.9301-104.12-44.3701-104.12-105.9301-104.12zm0 161.16c-30.78 0-51.61-23.54-51.61-57 0-34.4 20.83-57 51.61-57s52.51 23.54 52.51 57-21.7301 56.9999-52.51 56.9999z\" />\n      <path d=\"m743.29 115.89h146.6701v47.08h-94.1601v29.87h91.44v46.18h-91.44v32.59h94.1601v47.08h-146.6701z\" />\n      <path d=\"m222.7 87.82c0-48-41.65-87.82-92.35-87.82s-92.35 39.84-92.35 87.82v28.07h-38v201.9l130.35 60.62 130.38-60.66v-201h-38zm-137.62 0c0-22.63 19.92-40.74 45.27-40.74s45.27 18.11 45.27 40.74v28.07h-90.54zm123.13 197.37-77.86 36.22-77.86-36.22v-121.32h155.72z\" />\n      <path d=\"m718.85 183.79c0-40.74-28.07-67-69.72-67h-95.0599v201.9h52.51v-67.9h19.92l37.12 67.9h60.68l-44.37-75.14c19-7.25 38.92-26.26 38.92-59.76zm-76.06 19.92h-36.21v-40.74h36.21c13.58 0 22.64 8.15 22.64 19.92 0 12.67-9.0601 20.82-22.6401 20.82z\" />\n      <path d=\"m366.66 115.89h163.87v47.98h-56.13v154.82h-52.52v-154.82h-55.22z\" />\n    </svg>\n  );\n};\n\nLogoTrezor.propTypes = {\n  /**\n   * The width of the logo. Defaults to 100%\n   */\n  width: PropTypes.string,\n  /**\n   * The color of the logo defaults to var(--color-text-default)\n   */\n  color: PropTypes.string,\n  /**\n   * Additional className to add to the root svg\n   */\n  className: PropTypes.string,\n  /**\n   * Aria label to add to the logo component\n   */\n  ariaLabel: PropTypes.string,\n};\n\nexport default LogoTrezor;\n","export { default } from './mascot.component';\n","import PropTypes from 'prop-types';\nimport React, { createRef, Component } from 'react';\nimport MetaMaskLogo from '@metamask/logo';\nimport { debounce } from 'lodash';\n\nimport { getBuildSpecificAsset } from '../../../helpers/utils/build-types';\n\nconst directionTargetGenerator = ({ top, left, height, width }) => {\n  const horizontalMiddle = left + width / 2;\n  const verticalMiddle = top + height / 2;\n  return {\n    up: { x: horizontalMiddle, y: top - height },\n    down: { x: horizontalMiddle, y: top + height * 2 },\n    left: { x: left - width, y: verticalMiddle },\n    right: { x: left + width * 2, y: verticalMiddle },\n    middle: { x: horizontalMiddle, y: verticalMiddle },\n  };\n};\n\nexport default class Mascot extends Component {\n  static propTypes = {\n    animationEventEmitter: PropTypes.object.isRequired,\n    width: PropTypes.string,\n    height: PropTypes.string,\n    followMouse: PropTypes.bool,\n    lookAtTarget: PropTypes.object,\n    lookAtDirection: PropTypes.oneOf(['up', 'down', 'left', 'right', 'middle']),\n  };\n\n  static defaultProps = {\n    width: '200',\n    height: '200',\n    followMouse: true,\n    lookAtTarget: {},\n    lookAtDirection: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { width, height, followMouse } = props;\n\n    this.logo = MetaMaskLogo({\n      followMouse,\n      pxNotRatio: true,\n      width,\n      height,\n      meshJson: getBuildSpecificAsset('foxMeshJson'),\n    });\n\n    this.mascotContainer = createRef();\n\n    this.refollowMouse = debounce(\n      this.logo.setFollowMouse.bind(this.logo, true),\n      1000,\n    );\n    this.unfollowMouse = this.logo.setFollowMouse.bind(this.logo, false);\n  }\n\n  handleAnimationEvents() {\n    // only setup listeners once\n    if (this.animations) {\n      return;\n    }\n    this.animations = this.props.animationEventEmitter;\n    this.animations.on('point', this.lookAt.bind(this));\n    this.animations.on(\n      'setFollowMouse',\n      this.logo.setFollowMouse.bind(this.logo),\n    );\n  }\n\n  lookAt(target) {\n    this.unfollowMouse();\n    this.logo.lookAtAndRender(target);\n    this.refollowMouse();\n  }\n\n  componentDidMount() {\n    this.mascotContainer.current.appendChild(this.logo.container);\n    this.directionTargetMap = directionTargetGenerator(\n      this.mascotContainer.current.getBoundingClientRect(),\n    );\n\n    const { lookAtTarget, lookAtDirection } = this.props;\n\n    if (lookAtTarget?.x && lookAtTarget?.y) {\n      this.logo.lookAtAndRender(lookAtTarget);\n    } else if (lookAtDirection) {\n      this.logo.lookAtAndRender(this.directionTargetMap[lookAtDirection]);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      lookAtTarget: prevTarget = {},\n      lookAtDirection: prevDirection = null,\n      followMouse: prevFollowMouse,\n    } = prevProps;\n    const { lookAtTarget = {}, followMouse, lookAtDirection } = this.props;\n\n    if (lookAtDirection && prevDirection !== lookAtDirection) {\n      this.logo.lookAtAndRender(this.directionTargetMap[lookAtDirection]);\n    } else if (\n      lookAtTarget?.x !== prevTarget?.x ||\n      lookAtTarget?.y !== prevTarget?.y\n    ) {\n      this.logo.lookAtAndRender(lookAtTarget);\n    }\n    if (prevFollowMouse !== followMouse) {\n      this.unfollowMouse();\n      followMouse && this.refollowMouse();\n    }\n  }\n\n  componentWillUnmount() {\n    this.animations = this.props.animationEventEmitter;\n    this.animations.removeAllListeners();\n    this.logo.container.remove();\n    this.logo.stopAnimation();\n  }\n\n  render() {\n    // this is a bit hacky\n    // the event emitter is on `this.props`\n    // and we dont get that until render\n    this.handleAnimationEvents();\n    return <div ref={this.mascotContainer} style={{ zIndex: 0 }} />;\n  }\n}\n","export { default as Menu } from './menu';\nexport { default as MenuItem } from './menu-item';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport {\n  BadgeWrapper,\n  BadgeWrapperAnchorElementShape,\n  BadgeWrapperPosition,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../component-library';\nimport {\n  Display,\n  IconColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\nconst MenuItem = React.forwardRef(\n  (\n    {\n      children,\n      className,\n      'data-testid': dataTestId,\n      iconName,\n      iconColor,\n      onClick,\n      subtitle,\n      disabled = false,\n      showInfoDot,\n    },\n    ref,\n  ) => (\n    <button\n      className={classnames('menu-item', className)}\n      data-testid={dataTestId}\n      onClick={onClick}\n      ref={ref}\n      disabled={disabled}\n    >\n      {iconName && showInfoDot && (\n        <BadgeWrapper\n          anchorElementShape={BadgeWrapperAnchorElementShape.circular}\n          display={Display.Block}\n          position={BadgeWrapperPosition.topRight}\n          positionObj={{ top: -6, right: 4 }}\n          badge={\n            <Icon\n              name={IconName.FullCircle}\n              size={IconSize.Xs}\n              color={IconColor.primaryDefault}\n              style={{ '--size': '10px' }}\n            />\n          }\n        >\n          <Icon name={iconName} size={IconSize.Sm} marginRight={2} />\n        </BadgeWrapper>\n      )}\n      {iconName && !showInfoDot && (\n        <Icon\n          name={iconName}\n          size={IconSize.Sm}\n          marginRight={2}\n          color={iconColor}\n        />\n      )}\n      <div>\n        <div>{children}</div>\n        {subtitle ? <Text variant={TextVariant.bodyXs}>{subtitle}</Text> : null}\n      </div>\n    </button>\n  ),\n);\n\nMenuItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  'data-testid': PropTypes.string,\n  iconName: PropTypes.string,\n  onClick: PropTypes.func,\n  subtitle: PropTypes.node,\n  disabled: PropTypes.bool,\n  showInfoDot: PropTypes.bool,\n  iconColor: PropTypes.string,\n};\n\nMenuItem.displayName = 'MenuItem';\n\nexport default MenuItem;\n","import PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { usePopper } from 'react-popper';\nimport classnames from 'classnames';\n\n/**\n * @deprecated The `<Menu />` component has been deprecated in favor of the new `<Popover>` component from the component-library.\n * Please update your code to use the new `<Popover>` component instead, which can be found at ui/components/component-library/popover/popover.tsx.\n * You can find documentation for the new `Popover` component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-popover--docs}\n * If you would like to help with the replacement of the old `Menu` component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20498}\n */\n\nconst Menu = ({\n  anchorElement,\n  children,\n  className,\n  'data-testid': dataTestId,\n  onHide,\n  popperOptions,\n}) => {\n  const [popperElement, setPopperElement] = useState(null);\n  const popoverContainerElement = useRef(\n    document.getElementById('popover-content'),\n  );\n\n  const { attributes, styles } = usePopper(\n    anchorElement,\n    popperElement,\n    popperOptions,\n  );\n\n  return createPortal(\n    <>\n      <div\n        className=\"menu__background\"\n        data-testid={dataTestId}\n        onClick={onHide}\n      />\n      <div\n        className={classnames('menu__container', className)}\n        data-testid={className}\n        ref={setPopperElement}\n        style={styles.popper}\n        {...attributes.popper}\n      >\n        {children}\n      </div>\n    </>,\n    popoverContainerElement.current,\n  );\n};\n\nMenu.propTypes = {\n  anchorElement: PropTypes.instanceOf(window.Element),\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onHide: PropTypes.func.isRequired,\n  popperOptions: PropTypes.object,\n  dataTestId: PropTypes.string,\n};\n\nMenu.defaultProps = {\n  anchorElement: undefined,\n  className: undefined,\n  popperOptions: undefined,\n};\n\nexport default Menu;\n","/* eslint-disable @metamask/design-tokens/color-no-hex*/\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeType } from '../../../../shared/constants/preferences';\n\nconst LOGO_WIDTH = 162;\nconst LOGO_HEIGHT = 30;\nconst TEXT_COLOR = 'var(--color-text-default)';\nconst FLASK_PILL_BACKGROUND = 'var(--color-overlay-alternative)';\nconst FLASK_PILL_TEXT = 'var(--color-overlay-inverse)';\nconst BETA_PILL_BACKGROUND = 'var(--color-primary-default)';\nconst BETA_PIL_TEXT = 'var(--color-primary-inverse)';\n\nexport default function MetaFoxHorizontalLogo({\n  theme: themeProps,\n  className,\n}) {\n  const [theme, setTheme] = useState(() =>\n    themeProps === undefined\n      ? document.documentElement.getAttribute('data-theme')\n      : themeProps,\n  );\n\n  useEffect(() => {\n    if (themeProps !== undefined) {\n      setTheme(themeProps);\n    }\n  }, [themeProps]);\n\n  const fill = theme === 'dark' ? 'rgb(255,255,255)' : 'rgb(22,22,22)';\n\n  switch (process.env.METAMASK_BUILD_TYPE) {\n    case 'beta':\n      return (\n        <svg\n          width={LOGO_WIDTH}\n          height={LOGO_HEIGHT}\n          viewBox=\"0 0 723 115\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n        >\n          <g clipPath=\"url(#clip0_3375_9161)\">\n            <path\n              d=\"M546.118 57.394C542.911 55.2721 539.373 53.7633 536.024 51.8772C533.854 50.6512 531.542 49.5668 529.655 48.0107C526.447 45.3702 527.108 40.1835 530.457 37.9202C535.269 34.7139 543.241 36.5057 544.09 43.0598C544.09 43.2012 544.232 43.2955 544.373 43.2955H551.638C551.826 43.2955 551.968 43.1541 551.921 42.9655C551.543 38.4389 549.798 34.6667 546.59 32.262C543.524 29.9515 540.033 28.7256 536.307 28.7256C517.107 28.7256 515.362 49.0481 525.693 55.4607C526.872 56.2152 537.014 61.3076 540.599 63.5237C544.184 65.7399 545.317 69.7949 543.76 73.0013C542.345 75.9247 538.665 77.9522 534.986 77.7165C530.976 77.4807 527.863 75.3117 526.778 71.9168C526.589 71.3038 526.495 70.125 526.495 69.6063C526.495 69.4649 526.353 69.3234 526.212 69.3234H518.334C518.192 69.3234 518.051 69.4649 518.051 69.6063C518.051 75.3117 519.466 78.4709 523.334 81.3472C526.966 84.082 530.929 85.2136 535.033 85.2136C545.788 85.2136 551.355 79.131 552.487 72.8127C553.477 66.6358 551.638 61.0718 546.118 57.394Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M204.069 29.7638H200.578H196.757C196.616 29.7638 196.521 29.8581 196.474 29.9524L190.011 51.2648C189.917 51.5477 189.54 51.5477 189.445 51.2648L182.983 29.9524C182.935 29.8109 182.841 29.7638 182.7 29.7638H178.879H175.388H170.671C170.529 29.7638 170.388 29.9052 170.388 30.0467V84.4594C170.388 84.6008 170.529 84.7423 170.671 84.7423H178.548C178.69 84.7423 178.831 84.6008 178.831 84.4594V43.1076C178.831 42.7776 179.303 42.7304 179.398 43.0133L185.907 64.4672L186.379 65.9761C186.426 66.1175 186.521 66.1647 186.662 66.1647H192.7C192.842 66.1647 192.936 66.0704 192.983 65.9761L193.455 64.4672L199.965 43.0133C200.059 42.6833 200.531 42.7776 200.531 43.1076V84.4594C200.531 84.6008 200.672 84.7423 200.814 84.7423H208.692C208.833 84.7423 208.975 84.6008 208.975 84.4594V30.0467C208.975 29.9052 208.833 29.7638 208.692 29.7638H204.069Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M425.498 29.7638C425.356 29.7638 425.262 29.8581 425.215 29.9524L418.752 51.2648C418.658 51.5477 418.28 51.5477 418.186 51.2648L411.723 29.9524C411.676 29.8109 411.582 29.7638 411.44 29.7638H399.458C399.317 29.7638 399.175 29.9052 399.175 30.0467V84.4594C399.175 84.6008 399.317 84.7423 399.458 84.7423H407.336C407.478 84.7423 407.619 84.6008 407.619 84.4594V43.1076C407.619 42.7776 408.091 42.7304 408.185 43.0133L414.695 64.4672L415.167 65.9761C415.214 66.1175 415.308 66.1647 415.45 66.1647H421.488C421.629 66.1647 421.724 66.0704 421.771 65.9761L422.243 64.4672L428.753 43.0133C428.847 42.6833 429.319 42.7776 429.319 43.1076V84.4594C429.319 84.6008 429.46 84.7423 429.602 84.7423H437.479C437.621 84.7423 437.763 84.6008 437.763 84.4594V30.0467C437.763 29.9052 437.621 29.7638 437.479 29.7638H425.498Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M323.887 29.7638H309.216H301.339H286.668C286.526 29.7638 286.385 29.9052 286.385 30.0467V36.8365C286.385 36.978 286.526 37.1194 286.668 37.1194H301.056V84.4594C301.056 84.6008 301.197 84.7423 301.339 84.7423H309.216C309.358 84.7423 309.499 84.6008 309.499 84.4594V37.1194H323.887C324.029 37.1194 324.17 36.978 324.17 36.8365V30.0467C324.17 29.9052 324.076 29.7638 323.887 29.7638Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M370.353 84.7419H377.523C377.712 84.7419 377.853 84.5533 377.806 84.3647L362.994 29.7633C362.947 29.6219 362.852 29.5747 362.711 29.5747H359.975H355.163H352.427C352.286 29.5747 352.191 29.669 352.144 29.7633L337.332 84.3647C337.285 84.5533 337.426 84.7419 337.615 84.7419H344.785C344.927 84.7419 345.021 84.6476 345.068 84.5533L349.361 68.6633C349.408 68.5218 349.503 68.4747 349.644 68.4747H365.494C365.636 68.4747 365.73 68.569 365.777 68.6633L370.07 84.5533C370.117 84.6476 370.259 84.7419 370.353 84.7419ZM351.531 60.6947L357.286 39.4294C357.38 39.1465 357.758 39.1465 357.852 39.4294L363.607 60.6947C363.654 60.8833 363.513 61.0719 363.324 61.0719H351.814C351.625 61.0719 351.484 60.8833 351.531 60.6947Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M492.625 84.7419H499.795C499.984 84.7419 500.126 84.5533 500.078 84.3647L485.266 29.7633C485.219 29.6219 485.125 29.5747 484.983 29.5747H482.247H477.436H474.699C474.558 29.5747 474.464 29.669 474.416 29.7633L459.604 84.3647C459.557 84.5533 459.699 84.7419 459.887 84.7419H467.057C467.199 84.7419 467.293 84.6476 467.341 84.5533L471.633 68.6633C471.68 68.5218 471.775 68.4747 471.916 68.4747H487.766C487.908 68.4747 488.002 68.569 488.049 68.6633L492.342 84.5533C492.389 84.6476 492.484 84.7419 492.625 84.7419ZM473.803 60.6947L479.558 39.4294C479.653 39.1465 480.03 39.1465 480.124 39.4294L485.879 60.6947C485.927 60.8833 485.785 61.0719 485.596 61.0719H474.086C473.898 61.0719 473.756 60.8833 473.803 60.6947Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M240.957 76.6786V59.7985C240.957 59.657 241.098 59.5155 241.24 59.5155H262.232C262.373 59.5155 262.515 59.3741 262.515 59.2326V52.4428C262.515 52.3014 262.373 52.1599 262.232 52.1599H241.24C241.098 52.1599 240.957 52.0185 240.957 51.877V37.4487C240.957 37.3073 241.098 37.1658 241.24 37.1658H265.109C265.251 37.1658 265.392 37.0243 265.392 36.8829V30.0931C265.392 29.9516 265.251 29.8102 265.109 29.8102H240.957H232.796C232.654 29.8102 232.513 29.9516 232.513 30.0931V37.1658V52.2071V59.5627V77.0087V84.4586C232.513 84.6001 232.654 84.7415 232.796 84.7415H240.957H266.1C266.242 84.7415 266.383 84.6001 266.383 84.4586V77.2916C266.383 77.1502 266.242 77.0087 266.1 77.0087H241.193C241.051 76.9616 240.957 76.8673 240.957 76.6786Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M618.103 84.2701L590.837 56.1207C590.742 56.0264 590.742 55.8378 590.837 55.7435L615.367 30.2817C615.555 30.0931 615.414 29.8102 615.178 29.8102H605.13C605.036 29.8102 604.989 29.8573 604.941 29.9045L584.138 51.4998C583.95 51.6884 583.667 51.547 583.667 51.3112V30.0931C583.667 29.9516 583.525 29.8102 583.384 29.8102H575.506C575.364 29.8102 575.223 29.9516 575.223 30.0931V84.5058C575.223 84.6473 575.364 84.7887 575.506 84.7887H583.384C583.525 84.7887 583.667 84.6473 583.667 84.5058V60.5529C583.667 60.3172 583.997 60.1757 584.138 60.3643L607.725 84.6944C607.772 84.7416 607.866 84.7887 607.913 84.7887H617.961C618.15 84.7416 618.291 84.4115 618.103 84.2701Z\"\n              fill={TEXT_COLOR}\n            />\n            <path\n              d=\"M713.276 103.602H641.398C636.03 103.602 631.674 99.2489 631.674 93.8841V72.7183C631.674 67.3536 636.03 63 641.398 63H713.276C718.644 63 723 67.3536 723 72.7183V93.8841C723 99.2566 718.644 103.602 713.276 103.602Z\"\n              fill={BETA_PILL_BACKGROUND}\n            />\n            <path\n              d=\"M646.82 74.3317H653.895C654.652 74.3317 655.378 74.4782 656.058 74.7713C656.737 75.0645 657.332 75.4579 657.85 75.9592C658.359 76.4606 658.761 77.0546 659.055 77.7334C659.348 78.4122 659.495 79.1373 659.495 79.9163C659.495 80.5874 659.371 81.1891 659.124 81.729C658.877 82.269 658.553 82.7395 658.143 83.1483C658.939 83.5572 659.58 84.1434 660.082 84.9225C660.576 85.7015 660.823 86.5886 660.823 87.5991C660.823 88.3782 660.677 89.0955 660.383 89.7666C660.09 90.4377 659.688 91.024 659.178 91.5253C658.668 92.0267 658.058 92.4201 657.363 92.7055C656.668 92.9909 655.911 93.1298 655.1 93.1298H646.828V74.3317H646.82ZM653.416 81.9296C653.98 81.9296 654.451 81.7522 654.822 81.3896C655.193 81.0271 655.378 80.5951 655.378 80.0783C655.378 79.5692 655.193 79.1218 654.822 78.7439C654.451 78.3659 653.98 78.1731 653.416 78.1731H651.03V81.9296H653.416V81.9296ZM654.745 89.2575C655.309 89.2575 655.78 89.0801 656.15 88.7176C656.521 88.355 656.707 87.9076 656.707 87.3831C656.707 86.874 656.513 86.4266 656.135 86.0564C655.757 85.6861 655.285 85.501 654.714 85.501H651.03V89.2575H654.745Z\"\n              fill={BETA_PIL_TEXT}\n            />\n            <path\n              d=\"M663.65 74.3242H675.576V78.3507H667.86V81.7139H673.985V85.7404H667.86V89.1035H675.576V93.13H663.65V74.3242Z\"\n              fill={BETA_PIL_TEXT}\n            />\n            <path\n              d=\"M682.172 78.3424H677.376V74.3159H691.263V78.3424H686.412V93.114H682.172V78.3424Z\"\n              fill={BETA_PIL_TEXT}\n            />\n            <path\n              d=\"M697.966 74.3242H701.782L709.838 93.1146H705.435L703.767 89.1421H695.973L694.305 93.1146H689.902L697.966 74.3242ZM697.495 85.4935H702.237L699.882 79.8549L697.495 85.4935Z\"\n              fill={BETA_PIL_TEXT}\n            />\n            <path\n              d=\"M116.318 0L68.514 35.3718L77.4034 14.526L116.318 0Z\"\n              fill=\"#E17726\"\n              stroke=\"#E17726\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M6.05249 0L53.4311 35.702L44.9672 14.526L6.05249 0Z\"\n              fill=\"#E27625\"\n              stroke=\"#E27625\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M99.1075 82.0154L86.3881 101.446L113.624 108.945L121.426 82.4398L99.1075 82.0154Z\"\n              fill=\"#E27625\"\n              stroke=\"#E27625\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M0.99292 82.4398L8.7475 108.945L35.9358 101.446L23.2637 82.0154L0.99292 82.4398Z\"\n              fill=\"#E27625\"\n              stroke=\"#E27625\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M34.4699 49.1904L26.9044 60.6037L53.8563 61.83L52.9579 32.8251L34.4699 49.1904Z\"\n              fill=\"#E27625\"\n              stroke=\"#E27625\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M87.9012 49.1902L69.1295 32.4948L68.5148 61.8298L95.4667 60.6035L87.9012 49.1902Z\"\n              fill=\"#E27625\"\n              stroke=\"#E27625\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M35.9357 101.446L52.2487 93.5703L38.2053 82.6287L35.9357 101.446Z\"\n              fill=\"#E27625\"\n              stroke=\"#E27625\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M70.1218 93.5703L86.3875 101.446L84.1652 82.6287L70.1218 93.5703Z\"\n              fill=\"#E27625\"\n              stroke=\"#E27625\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M86.3879 101.446L70.1222 93.5702L71.4461 104.135L71.3043 108.615L86.3879 101.446Z\"\n              fill=\"#D5BFB2\"\n              stroke=\"#D5BFB2\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M35.9359 101.446L51.0668 108.615L50.9722 104.135L52.2489 93.5703L35.9359 101.446Z\"\n              fill=\"#D5BFB2\"\n              stroke=\"#D5BFB2\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M51.3504 75.6485L37.8271 71.6869L47.3785 67.3008L51.3504 75.6485Z\"\n              fill=\"#233447\"\n              stroke=\"#233447\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M71.0199 75.6485L74.9918 67.3008L84.5904 71.6869L71.0199 75.6485Z\"\n              fill=\"#233447\"\n              stroke=\"#233447\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M35.9357 101.446L38.2999 82.0154L23.2635 82.4398L35.9357 101.446Z\"\n              fill=\"#CC6228\"\n              stroke=\"#CC6228\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M84.0706 82.0154L86.3875 101.446L99.1069 82.4398L84.0706 82.0154Z\"\n              fill=\"#CC6228\"\n              stroke=\"#CC6228\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M95.4661 60.6036L68.5142 61.8299L71.0202 75.6484L74.9921 67.3007L84.5907 71.6868L95.4661 60.6036Z\"\n              fill=\"#CC6228\"\n              stroke=\"#CC6228\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M37.827 71.6868L47.3784 67.3007L51.3503 75.6484L53.8563 61.8299L26.9044 60.6036L37.827 71.6868Z\"\n              fill=\"#CC6228\"\n              stroke=\"#CC6228\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M26.9044 60.6038L38.2053 82.6286L37.827 71.6869L26.9044 60.6038Z\"\n              fill=\"#E27525\"\n              stroke=\"#E27525\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M84.5912 71.6868L84.1656 82.6285L95.4665 60.6036L84.5912 71.6868Z\"\n              fill=\"#E27525\"\n              stroke=\"#E27525\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M53.8565 61.83L51.3505 75.6485L54.5185 91.9667L55.2278 70.4607L53.8565 61.83Z\"\n              fill=\"#E27525\"\n              stroke=\"#E27525\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M68.5146 61.83L67.1907 70.4135L67.8526 91.9667L71.0207 75.6485L68.5146 61.83Z\"\n              fill=\"#E27525\"\n              stroke=\"#E27525\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M71.0207 75.6484L67.8527 91.9666L70.1223 93.5701L84.1656 82.6284L84.5912 71.6868L71.0207 75.6484Z\"\n              fill=\"#F5841F\"\n              stroke=\"#F5841F\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M37.8271 71.6868L38.2054 82.6284L52.2488 93.5701L54.5184 91.9666L51.3504 75.6484L37.8271 71.6868Z\"\n              fill=\"#F5841F\"\n              stroke=\"#F5841F\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M71.3044 108.615L71.4462 104.135L70.2168 103.097H52.1543L50.9722 104.135L51.0668 108.615L35.9359 101.446L41.2317 105.785L51.9652 113.19H70.3587L81.1394 105.785L86.388 101.446L71.3044 108.615Z\"\n              fill=\"#C0AC9D\"\n              stroke=\"#C0AC9D\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M70.122 93.5702L67.8523 91.9667H54.5182L52.2486 93.5702L50.9719 104.135L52.154 103.097H70.2165L71.4459 104.135L70.122 93.5702Z\"\n              fill=\"#161616\"\n              stroke=\"#161616\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M118.352 37.6828L122.371 18.1575L116.319 0L70.1222 34.1928L87.901 49.1904L113.009 56.5006L118.541 50.0393L116.13 48.2943L119.96 44.8043L117.028 42.5405L120.858 39.6164L118.352 37.6828Z\"\n              fill=\"#763E1A\"\n              stroke=\"#763E1A\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M0 18.1575L4.06643 37.6828L1.4658 39.6164L5.34309 42.5405L2.41149 44.8043L6.24149 48.2943L3.83001 50.0393L9.36224 56.5006L34.4701 49.1904L52.2488 34.1928L6.05236 0L0 18.1575Z\"\n              fill=\"#763E1A\"\n              stroke=\"#763E1A\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M113.009 56.5005L87.9011 49.1903L95.4665 60.6036L84.1656 82.6285L99.1074 82.4398H121.425L113.009 56.5005Z\"\n              fill=\"#F5841F\"\n              stroke=\"#F5841F\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M34.47 49.1903L9.36219 56.5005L0.99292 82.4398H23.2637L38.2054 82.6285L26.9046 60.6036L34.47 49.1903Z\"\n              fill=\"#F5841F\"\n              stroke=\"#F5841F\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M68.5148 61.83L70.1225 34.1929L77.4042 14.5261H44.9674L52.2491 34.1929L53.8568 61.83L54.4715 70.5079L54.5188 91.9668H67.8529L67.9002 70.5079L68.5148 61.83Z\"\n              fill=\"#F5841F\"\n              stroke=\"#F5841F\"\n              strokeWidth=\"0.353718\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_3375_9161\">\n              <rect\n                width=\"723\"\n                height=\"114.133\"\n                fill=\"var(--color-text-default)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n      );\n    case 'flask':\n      return (\n        <svg\n          width={LOGO_WIDTH}\n          height={LOGO_HEIGHT}\n          viewBox=\"0 0 1532 247\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n        >\n          <g clipPath=\"url(#clip0)\">\n            <path\n              d=\"M148.354 134.603L152.72 74.4431L170.498 31.5908H94.5015L112.279 74.4431L116.645 134.603L117.997 153.579L118.101 200.289H146.898L147.002 153.579L148.354 134.603Z\"\n              fill=\"url(#paint0_linear)\"\n            />\n            <path\n              d=\"M244.727 123.029L190.355 107.077L206.781 131.996L182.246 179.957L214.682 179.54H262.92L244.727 123.029Z\"\n              fill=\"url(#paint1_linear)\"\n            />\n            <path\n              d=\"M74.6449 107.077L20.2726 123.029L2.18311 179.54H50.4216L82.7539 179.957L58.2188 131.996L74.6449 107.077Z\"\n              fill=\"url(#paint2_linear)\"\n            />\n            <path\n              d=\"M153.76 164.735L146.899 200.289L151.889 203.729L182.246 179.957L183.182 156.081L153.76 164.735Z\"\n              fill=\"#ACACAC\"\n            />\n            <path\n              d=\"M81.9224 156.081L82.7541 179.957L113.111 203.729L118.101 200.289L111.24 164.735L81.9224 156.081Z\"\n              fill=\"#ACACAC\"\n            />\n            <path\n              d=\"M256.267 82.0553L265 39.5158L251.9 0L151.889 74.4441L189.211 108.017L244.727 123.031L256.683 108.955L251.485 105.202L259.802 97.5906L253.46 92.5859L261.777 86.2258L256.267 82.0553Z\"\n              fill=\"url(#paint3_linear)\"\n            />\n            <path\n              d=\"M8.73266 82.0553L-0.000171178 39.5158L13.0991 0L113.111 74.4441L75.7884 108.017L20.2725 123.031L8.31682 108.955L13.5149 105.202L5.19795 97.5906L11.5396 92.5859L3.22265 86.2258L8.73266 82.0553Z\"\n              fill=\"url(#paint4_linear)\"\n            />\n            <path\n              d=\"M58.2188 131.997L81.9222 156.082L82.7539 179.958L58.2188 131.997Z\"\n              fill=\"#8D8D8D\"\n            />\n            <path\n              d=\"M206.781 131.997L182.246 179.958L183.181 156.082L206.781 131.997Z\"\n              fill=\"#8D8D8D\"\n            />\n            <path\n              d=\"M187.132 220.935L151.889 203.731L154.696 226.774L154.384 236.47L187.132 220.935Z\"\n              fill=\"#FF9F5A\"\n            />\n            <path\n              d=\"M77.8677 220.934L110.616 236.469L110.408 226.773L113.111 203.73L77.8677 220.934Z\"\n              fill=\"#FF9F5A\"\n            />\n            <path\n              d=\"M214.682 179.542L187.132 220.935L246.079 237.2L262.921 179.542H214.682Z\"\n              fill=\"url(#paint5_linear)\"\n            />\n            <path\n              d=\"M2.18311 179.542L18.921 237.2L77.8677 220.935L50.4216 179.542H2.18311Z\"\n              fill=\"url(#paint6_linear)\"\n            />\n            <path\n              d=\"M13.0991 0L113.111 74.4441L97.4126 31.5918L13.0991 0Z\"\n              fill=\"#757575\"\n            />\n            <path\n              d=\"M167.587 31.5918L151.889 74.4441L251.9 0L167.587 31.5918Z\"\n              fill=\"#757575\"\n            />\n            <path\n              d=\"M74.6448 107.079L58.2188 131.998L116.646 134.604L113.111 74.4443L74.6448 107.079Z\"\n              fill=\"url(#paint7_linear)\"\n            />\n            <path\n              d=\"M190.355 107.079L151.889 74.4443L148.354 134.604L206.781 131.998L190.355 107.079Z\"\n              fill=\"url(#paint8_linear)\"\n            />\n            <path\n              d=\"M77.8677 220.934L113.111 203.731L82.7539 179.959L77.8677 220.934Z\"\n              fill=\"url(#paint9_linear)\"\n            />\n            <path\n              d=\"M151.889 203.731L187.132 220.934L182.246 179.959L151.889 203.731Z\"\n              fill=\"url(#paint10_linear)\"\n            />\n            <path\n              d=\"M182.246 179.958L187.132 220.934L214.682 179.541L182.246 179.958Z\"\n              fill=\"url(#paint11_linear)\"\n            />\n            <path\n              d=\"M82.7539 179.958L77.8677 220.934L50.3177 179.541L82.7539 179.958Z\"\n              fill=\"url(#paint12_linear)\"\n            />\n            <path\n              d=\"M206.781 131.997L148.354 134.604L153.761 164.736L162.389 146.594L183.182 156.082L206.781 131.997Z\"\n              fill=\"#666666\"\n            />\n            <path\n              d=\"M81.9222 156.082L102.611 146.594L111.24 164.736L116.646 134.604L58.2188 131.997L81.9222 156.082Z\"\n              fill=\"#666666\"\n            />\n            <path\n              d=\"M153.76 164.736L147.002 153.579L148.354 134.604L153.76 164.736Z\"\n              fill=\"#8D8D8D\"\n            />\n            <path\n              d=\"M111.24 164.736L116.646 134.604L117.997 153.579L111.24 164.736Z\"\n              fill=\"#8D8D8D\"\n            />\n            <path\n              d=\"M147.003 153.58L153.76 164.736L146.899 200.29L147.003 153.58Z\"\n              fill=\"#8D8D8D\"\n            />\n            <path\n              d=\"M117.997 153.58L118.101 200.29L111.24 164.736L117.997 153.58Z\"\n              fill=\"#8D8D8D\"\n            />\n            <path\n              d=\"M154.571 236.345L154.696 226.773L152.097 224.48H112.903L110.408 226.773L110.616 236.47L77.8677 220.935L89.3035 230.318L112.591 246.479H152.409L175.696 230.318L187.132 220.935L154.571 236.345Z\"\n              fill=\"#DF7554\"\n            />\n            <path\n              d=\"M151.889 203.731L146.899 200.29H118.101L113.111 203.731L110.408 226.773L112.903 224.479H152.097L154.696 226.773L151.889 203.731Z\"\n              fill=\"#161616\"\n              stroke=\"#161616\"\n              strokeWidth=\"0.0657594\"\n              strokeMiterlimit=\"10\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M162.389 146.594L153.76 164.736L183.182 156.082L162.389 146.594Z\"\n              fill=\"#161616\"\n            />\n            <path\n              d=\"M102.611 146.594L111.24 164.736L81.9224 156.082L102.611 146.594Z\"\n              fill=\"#161616\"\n            />\n            <path\n              d=\"M256.683 108.955L251.485 105.202L259.802 97.5905L253.46 92.5859L261.777 86.2258L256.267 82.0553L265 39.5158L251.901 0L167.587 31.5918H97.4127L13.0993 0L0 39.5158L8.8368 82.0553L3.22283 86.2258L11.5398 92.5859L5.19812 97.5905L13.5151 105.202L8.31699 108.955L20.2727 123.031L2.18321 179.542L18.9211 237.199L77.8678 220.934L113.111 203.731L110.231 227.044L112.903 224.583L152.097 224.479L154.696 226.773L151.889 203.731L187.132 220.934L246.079 237.199L262.921 179.542L244.727 123.031L256.683 108.955Z\"\n              fill=\"url(#paint13_linear)\"\n              fillOpacity=\"0.1\"\n              style={{ mixBlendMode: 'color-dodge' }}\n            />\n            <path\n              d=\"M256.683 108.955L251.485 105.202L259.802 97.5905L253.46 92.5859L261.777 86.2258L256.267 82.0553L265 39.5158L251.901 0L167.587 31.5918H97.4127L13.0993 0L0 39.5158L8.8368 82.0553L3.22283 86.2258L11.5398 92.5859L5.19812 97.5905L13.5151 105.202L8.31699 108.955L20.2727 123.031L2.18321 179.542L18.9211 237.199L77.8678 220.934L113.111 203.731L117.997 200.186H125.275H139.829H147.107L151.889 203.731L187.132 220.934L246.079 237.199L262.921 179.542L244.727 123.031L256.683 108.955Z\"\n              fill=\"url(#paint14_radial)\"\n              style={{ mixBlendMode: 'overlay' }}\n            />\n          </g>\n          <path\n            d=\"M1166.17 120.732C1159.42 116.127 1151.72 112.742 1144.35 108.759C1139.75 106.295 1134.84 103.855 1130.83 100.47C1124.08 94.944 1125.3 83.5933 1132.67 78.6647C1143.11 71.9189 1160.02 75.603 1161.86 89.7167C1161.86 90.0154 1162.16 90.339 1162.48 90.339H1178.15C1178.44 90.339 1178.77 90.0403 1178.77 89.7167C1177.85 79.8844 1174.16 71.9189 1167.41 66.6916C1160.94 61.763 1153.27 59 1145.27 59C1104.11 59 1100.42 102.611 1122.54 116.426C1125 117.969 1146.82 129.021 1154.49 133.626C1162.16 138.53 1164.62 147.143 1161.24 153.888C1158.17 160.335 1150.18 164.318 1142.48 164.019C1133.89 163.721 1127.12 158.792 1124.98 151.424C1124.68 150.204 1124.36 147.74 1124.36 146.52C1124.36 146.222 1124.06 145.898 1123.73 145.898H1106.85C1106.55 145.898 1106.23 146.197 1106.23 146.52C1106.23 158.792 1109.29 165.563 1117.58 171.711C1125.25 177.536 1133.87 180 1142.78 180C1165.82 180 1177.8 166.807 1180.26 153.291C1182.13 140.372 1178.14 128.399 1166.17 120.732Z\"\n            fill={TEXT_COLOR}\n          />\n          <path\n            d=\"M433.192 61.4634H425.522H417.229C416.931 61.4634 416.607 61.7621 416.607 61.7621L402.786 107.514C402.487 108.136 401.865 108.136 401.566 107.514L388.044 61.7621C388.044 61.4634 387.745 61.4634 387.421 61.4634H379.129H371.758H361.623C361.299 61.4634 361 61.7621 361 62.0608V178.754C361 179.053 361.299 179.377 361.623 179.377H378.506C378.805 179.377 379.129 179.078 379.129 178.754V90.0145C379.129 89.3922 380.05 89.0935 380.349 89.7158L394.469 135.766L395.39 138.828C395.39 139.126 395.689 139.126 396.013 139.126H408.912C409.211 139.126 409.535 138.828 409.535 138.828L410.456 135.766L424.576 89.7158C424.576 89.0935 425.497 89.4171 425.497 90.0145V178.754C425.497 179.053 425.796 179.377 426.12 179.377H443.003C443.302 179.377 443.626 179.078 443.626 178.754V62.0608C443.626 61.7621 443.327 61.4385 443.003 61.4385L433.192 61.4634Z\"\n            fill={TEXT_COLOR}\n          />\n          <path\n            d=\"M907.506 61.4634C907.207 61.4634 906.883 61.7621 906.883 61.7621L893.063 107.514C892.764 108.136 892.141 108.136 891.842 107.514L878.022 61.7621C878.022 61.4634 877.723 61.4634 877.399 61.4634H851.6C851.301 61.4634 850.978 61.7621 850.978 62.0857V178.779C850.978 179.078 851.276 179.402 851.6 179.402H868.484C868.783 179.402 869.106 179.103 869.106 178.779V90.0145C869.106 89.3922 870.028 89.0935 870.327 89.7158L884.446 135.766L885.368 138.828C885.368 139.126 885.667 139.126 885.99 139.126H898.89C899.189 139.126 899.512 138.828 899.512 138.828L900.434 135.766L914.553 89.7158C914.852 89.0935 915.773 89.0935 915.773 90.0145V178.754C915.773 179.053 916.072 179.377 916.396 179.377H933.28C933.579 179.377 933.902 179.078 933.902 178.754V62.0608C933.902 61.7621 933.604 61.4385 933.28 61.4385L907.506 61.4634Z\"\n            fill={TEXT_COLOR}\n          />\n          <path\n            d=\"M690.01 61.4648H658.359H641.475H610.148C609.849 61.4648 609.525 61.7635 609.525 62.0871V76.5245C609.525 76.8232 609.824 77.1468 610.148 77.1468H640.877V178.482C640.877 178.781 641.176 179.104 641.5 179.104H658.384C658.683 179.104 659.006 178.806 659.006 178.482V77.1219H689.711C690.01 77.1219 690.333 76.8232 690.333 76.4996V62.0623C690.632 61.7635 690.309 61.4648 690.01 61.4648Z\"\n            fill={TEXT_COLOR}\n          />\n          <path\n            d=\"M789.545 179.377H804.91C805.208 179.377 805.532 179.078 805.532 178.456L773.582 61.4637C773.582 61.165 773.284 61.165 772.96 61.165H767.133H756.699H751.17C750.872 61.165 750.548 61.4637 750.548 61.4637L718.897 178.456C718.897 178.755 719.196 179.377 719.52 179.377H734.884C735.183 179.377 735.507 179.078 735.507 179.078L744.721 145.001C744.721 144.703 745.02 144.703 745.343 144.703H779.435C779.733 144.703 780.057 145.001 780.057 145.001L789.271 179.078C788.922 179.054 789.246 179.377 789.545 179.377ZM749.004 127.776L761.281 82.3232C761.58 81.7009 762.202 81.7009 762.501 82.3232L774.778 127.776C774.778 128.075 774.479 128.697 774.155 128.697H749.577C749.303 128.398 749.004 128.1 749.004 127.776Z\"\n            fill={TEXT_COLOR}\n          />\n          <path\n            d=\"M1051.59 179.377H1066.96C1067.26 179.377 1067.58 179.078 1067.58 178.456L1035.63 61.4637C1035.63 61.165 1035.33 61.165 1035.01 61.165H1029.18H1018.75H1012.92C1012.62 61.165 1012.3 61.4637 1012.3 61.4637L980.646 178.456C980.646 178.755 980.944 179.377 981.268 179.377H996.633C996.932 179.377 997.255 179.078 997.255 179.078L1006.47 145.001C1006.47 144.703 1006.77 144.703 1007.09 144.703H1041.18C1041.48 144.703 1041.81 145.001 1041.81 145.001L1051.02 179.078C1050.97 179.054 1051.27 179.377 1051.59 179.377ZM1011.03 127.776L1023.3 82.3232C1023.6 81.7009 1024.22 81.7009 1024.52 82.3232L1036.8 127.776C1036.8 128.075 1036.5 128.697 1036.18 128.697H1011.6C1011.35 128.398 1011.03 128.1 1011.03 127.776Z\"\n            fill={TEXT_COLOR}\n          />\n          <path\n            d=\"M512.132 162.176V125.934C512.132 125.635 512.431 125.311 512.755 125.311H557.604C557.903 125.311 558.227 125.013 558.227 124.689V110.252C558.227 109.953 557.928 109.629 557.604 109.629H512.755C512.456 109.629 512.132 109.331 512.132 109.007V77.7427C512.132 77.444 512.431 77.1204 512.755 77.1204H563.755C564.054 77.1204 564.377 76.8217 564.377 76.4981V62.0608C564.377 61.7621 564.079 61.4385 563.755 61.4385H512.132H494.626C494.327 61.4385 494.003 61.7372 494.003 62.0608V77.0955V109.331V124.988V162.45V178.406C494.003 178.705 494.302 179.028 494.626 179.028H512.132H566.195C566.494 179.028 566.818 178.73 566.818 178.406V163.048C566.818 162.749 566.519 162.425 566.195 162.425H512.755C512.456 162.799 512.132 162.475 512.132 162.176Z\"\n            fill={TEXT_COLOR}\n          />\n          <path\n            d=\"M1320.39 178.132L1262.02 117.645C1261.72 117.346 1261.72 117.022 1262.02 116.724L1314.54 62.3844C1314.83 62.0857 1314.54 61.4634 1314.24 61.4634H1292.72C1292.42 61.4634 1292.42 61.4634 1292.42 61.7621L1247.87 108.136C1247.57 108.435 1246.95 108.136 1246.95 107.837V62.0608C1246.95 61.7621 1246.65 61.4385 1246.33 61.4385H1229.44C1229.15 61.4385 1228.82 61.7372 1228.82 62.0608V178.754C1228.82 179.053 1229.12 179.377 1229.44 179.377H1246.33C1246.63 179.377 1246.95 179.078 1246.95 178.754V127.178C1246.95 126.556 1247.57 126.257 1247.87 126.88L1298.25 179.078L1298.55 179.377H1320.06C1320.69 179.377 1320.99 178.754 1320.39 178.132Z\"\n            fill={TEXT_COLOR}\n          />\n          <rect\n            x=\"1338\"\n            y=\"27\"\n            width=\"194\"\n            height=\"84\"\n            rx=\"12\"\n            fill={FLASK_PILL_BACKGROUND}\n          />\n          <path\n            d=\"M1358 50.6376H1380.89V58.7139H1366.33V65.515H1377.7V73.5913H1366.33V88.3624H1358V50.6376Z\"\n            fill={FLASK_PILL_TEXT}\n          />\n          <path\n            d=\"M1386.55 50.6376H1394.87V80.2861H1410.28V88.3624H1386.55V50.6376Z\"\n            fill={FLASK_PILL_TEXT}\n          />\n          <path\n            d=\"M1427.39 50.6376H1434.94L1450.86 88.3624H1442.17L1438.87 80.3924H1423.46L1420.16 88.3624H1411.47L1427.39 50.6376ZM1426.45 73.0599H1435.83L1431.16 61.7425L1426.45 73.0599Z\"\n            fill={FLASK_PILL_TEXT}\n          />\n          <path\n            d=\"M1464.82 89C1461.85 89 1459.18 88.4155 1456.81 87.2466C1454.43 86.0422 1452.51 84.3774 1451.04 82.252L1457.43 76.7793C1458.34 78.1253 1459.51 79.188 1460.94 79.9673C1462.38 80.7112 1463.77 81.0831 1465.13 81.0831C1466.53 81.0831 1467.63 80.7997 1468.43 80.233C1469.24 79.6308 1469.64 78.8692 1469.64 77.9482C1469.64 76.9918 1469.24 76.1594 1468.43 75.451C1467.67 74.7425 1466.34 74.0695 1464.45 73.4319L1461.83 72.5286C1458.8 71.5014 1456.47 70.0845 1454.87 68.2779C1453.26 66.436 1452.46 64.2221 1452.46 61.6362C1452.46 59.7943 1452.77 58.1649 1453.4 56.748C1454.06 55.2956 1454.95 54.0736 1456.07 53.0817C1457.22 52.0899 1458.59 51.3283 1460.16 50.797C1461.73 50.2657 1463.44 50 1465.29 50C1467.56 50 1469.69 50.3896 1471.68 51.1689C1473.67 51.9482 1475.54 53.2943 1477.29 55.2071L1471.84 61.0518C1470.97 59.9891 1469.97 59.2098 1468.85 58.7139C1467.74 58.1826 1466.58 57.9169 1465.4 57.9169C1464.84 57.9169 1464.28 57.97 1463.72 58.0763C1463.2 58.1826 1462.73 58.3597 1462.31 58.6076C1461.89 58.8556 1461.54 59.1567 1461.26 59.5109C1461.01 59.8651 1460.89 60.2902 1460.89 60.7861C1460.89 61.8134 1461.35 62.6281 1462.25 63.2302C1463.2 63.797 1464.66 64.4346 1466.65 65.1431L1469.27 66.0995C1471.96 67.0913 1474.11 68.5082 1475.72 70.3501C1477.36 72.1921 1478.16 74.53 1478.13 77.3638C1478.13 79.064 1477.79 80.6403 1477.13 82.0926C1476.47 83.5095 1475.54 84.7316 1474.35 85.7589C1473.2 86.7861 1471.81 87.5831 1470.16 88.1499C1468.56 88.7166 1466.78 89 1464.82 89Z\"\n            fill={FLASK_PILL_TEXT}\n          />\n          <path\n            d=\"M1492.17 71.4659V88.3624H1483.9V50.6376H1492.17V66.4183L1504.8 50.6376H1515.01L1500.35 68.7561L1518 88.3624H1507.31L1492.17 71.4659Z\"\n            fill={FLASK_PILL_TEXT}\n          />\n          <defs>\n            <linearGradient\n              id=\"paint0_linear\"\n              x1=\"132.5\"\n              y1=\"31.5908\"\n              x2=\"132.5\"\n              y2=\"200.289\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#8F8F8F\" />\n              <stop offset=\"1\" stopColor=\"#AEAEAE\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint1_linear\"\n              x1=\"222.583\"\n              y1=\"107.077\"\n              x2=\"222.583\"\n              y2=\"179.957\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#696969\" />\n              <stop offset=\"1\" stopColor=\"#A6A6A6\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint2_linear\"\n              x1=\"42.4685\"\n              y1=\"107.077\"\n              x2=\"42.4685\"\n              y2=\"179.957\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#696969\" />\n              <stop offset=\"1\" stopColor=\"#A6A6A6\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint3_linear\"\n              x1=\"184.533\"\n              y1=\"102.178\"\n              x2=\"279.867\"\n              y2=\"27.8973\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#1B1B1B\" />\n              <stop offset=\"1\" stopColor=\"#565656\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint4_linear\"\n              x1=\"80.4668\"\n              y1=\"102.178\"\n              x2=\"-14.8672\"\n              y2=\"27.8973\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#1B1B1B\" />\n              <stop offset=\"1\" stopColor=\"#565656\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint5_linear\"\n              x1=\"225.027\"\n              y1=\"179.542\"\n              x2=\"225.027\"\n              y2=\"237.2\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#787878\" />\n              <stop offset=\"1\" stopColor=\"#5E5E5E\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint6_linear\"\n              x1=\"40.0254\"\n              y1=\"179.542\"\n              x2=\"40.0254\"\n              y2=\"237.2\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#787878\" />\n              <stop offset=\"1\" stopColor=\"#5E5E5E\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint7_linear\"\n              x1=\"87.4322\"\n              y1=\"74.4443\"\n              x2=\"87.4322\"\n              y2=\"134.604\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#7A7A7A\" />\n              <stop offset=\"1\" stopColor=\"#949494\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint8_linear\"\n              x1=\"177.568\"\n              y1=\"74.4443\"\n              x2=\"177.568\"\n              y2=\"134.604\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#7A7A7A\" />\n              <stop offset=\"1\" stopColor=\"#949494\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint9_linear\"\n              x1=\"95.4893\"\n              y1=\"245.645\"\n              x2=\"95.4893\"\n              y2=\"-25.2885\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#7A7C7D\" />\n              <stop offset=\"1\" stopColor=\"#CECECF\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint10_linear\"\n              x1=\"169.51\"\n              y1=\"245.645\"\n              x2=\"169.51\"\n              y2=\"-25.2885\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#7A7C7D\" />\n              <stop offset=\"1\" stopColor=\"#CECECF\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint11_linear\"\n              x1=\"198.464\"\n              y1=\"126.784\"\n              x2=\"198.464\"\n              y2=\"234.065\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#3E3E3E\" />\n              <stop offset=\"1\" stopColor=\"#616161\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint12_linear\"\n              x1=\"66.5358\"\n              y1=\"126.784\"\n              x2=\"66.5358\"\n              y2=\"234.065\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#3E3E3E\" />\n              <stop offset=\"1\" stopColor=\"#616161\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint13_linear\"\n              x1=\"132.032\"\n              y1=\"31.279\"\n              x2=\"132.032\"\n              y2=\"258.573\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#FF60DC\" />\n              <stop offset=\"1\" stopColor=\"#6B71FF\" />\n            </linearGradient>\n            <radialGradient\n              id=\"paint14_radial\"\n              cx=\"0\"\n              cy=\"0\"\n              r=\"1\"\n              gradientUnits=\"userSpaceOnUse\"\n              gradientTransform=\"translate(132.032 26.5872) rotate(90) scale(218.953 244.615)\"\n            >\n              <stop stopColor=\"#FF60DC\" />\n              <stop offset=\"1\" stopColor=\"#6B71FF\" />\n            </radialGradient>\n            <clipPath id=\"clip0\">\n              <rect width=\"265\" height=\"247\" fill=\"white\" />\n            </clipPath>\n          </defs>\n        </svg>\n      );\n    case 'mmi':\n      return (\n        <svg\n          height={45}\n          viewBox=\"0 0 723 115\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n        >\n          <g transform=\"matrix(0.998558,0,0,1,0.000632449,0)\">\n            <rect\n              x=\"411.318\"\n              y=\"4.847\"\n              width=\"2.481\"\n              height=\"61.306\"\n              style={{ fill }}\n            />\n            <path\n              d=\"M437.965,19.099L441.766,19.099L441.766,48.117L437.965,48.117L437.965,19.099ZM448.849,27.682L452.364,27.682L452.364,30.829C453.073,29.603 453.999,28.704 455.143,28.132C456.288,27.559 457.527,27.273 458.863,27.273C460.007,27.273 461.056,27.464 462.01,27.845C462.963,28.227 463.767,28.785 464.421,29.521C465.102,30.23 465.634,31.101 466.015,32.137C466.396,33.145 466.587,34.276 466.587,35.529L466.587,48.117L463.113,48.117L463.113,36.06C463.113,34.344 462.664,32.995 461.764,32.014C460.893,31.006 459.734,30.502 458.29,30.502C457.473,30.502 456.696,30.666 455.961,30.992C455.252,31.319 454.626,31.81 454.081,32.464C453.563,33.091 453.141,33.867 452.814,34.793C452.514,35.72 452.364,36.783 452.364,37.981L452.364,48.117L448.849,48.117L448.849,27.682ZM479.088,48.526C477.263,48.526 475.628,48.145 474.184,47.382C472.74,46.592 471.704,45.393 471.078,43.785L473.938,42.191C474.32,43.226 474.988,44.03 475.941,44.602C476.922,45.147 477.985,45.42 479.129,45.42C480.11,45.42 480.941,45.188 481.622,44.725C482.331,44.235 482.685,43.553 482.685,42.682C482.685,41.946 482.426,41.333 481.908,40.842C481.391,40.352 480.464,39.902 479.129,39.494L477.086,38.84C475.396,38.349 474.116,37.6 473.244,36.592C472.399,35.556 471.977,34.317 471.977,32.873C471.977,32.001 472.154,31.224 472.508,30.543C472.889,29.834 473.394,29.249 474.02,28.785C474.674,28.295 475.423,27.927 476.268,27.682C477.113,27.409 478.026,27.273 479.006,27.273C480.532,27.273 481.867,27.587 483.012,28.213C484.156,28.813 485.069,29.685 485.75,30.829L483.134,32.627C482.671,31.973 482.085,31.428 481.377,30.992C480.696,30.529 479.865,30.298 478.884,30.298C478.012,30.298 477.222,30.516 476.513,30.952C475.832,31.388 475.492,31.987 475.492,32.75C475.492,33.377 475.682,33.935 476.064,34.426C476.472,34.916 477.249,35.338 478.393,35.693L480.641,36.387C482.412,36.932 483.775,37.682 484.728,38.635C485.709,39.589 486.2,40.842 486.2,42.395C486.2,43.376 486.023,44.248 485.668,45.011C485.314,45.774 484.81,46.414 484.156,46.932C483.53,47.45 482.78,47.845 481.908,48.117C481.036,48.39 480.096,48.526 479.088,48.526ZM499.046,48.322C498.147,48.322 497.316,48.199 496.553,47.954C495.79,47.681 495.122,47.3 494.55,46.809C494.005,46.292 493.569,45.638 493.242,44.848C492.943,44.058 492.793,43.131 492.793,42.068L492.793,30.911L488.46,30.911L488.46,27.682L492.793,27.682L492.793,22.001L496.308,22.001L496.308,27.682L502.193,27.682L502.193,30.911L496.308,30.911L496.308,41.619C496.308,42.927 496.594,43.84 497.166,44.357C497.738,44.848 498.583,45.093 499.7,45.093C500.136,45.093 500.572,45.066 501.008,45.011C501.471,44.929 501.866,44.82 502.193,44.684L502.193,47.831C501.757,47.967 501.28,48.076 500.763,48.158C500.245,48.267 499.673,48.322 499.046,48.322ZM508.481,22.205C507.773,22.205 507.174,21.974 506.683,21.51C506.193,21.02 505.947,20.421 505.947,19.712C505.947,19.031 506.193,18.445 506.683,17.955C507.174,17.464 507.773,17.219 508.481,17.219C509.19,17.219 509.776,17.464 510.239,17.955C510.702,18.445 510.934,19.031 510.934,19.712C510.934,20.421 510.702,21.02 510.239,21.51C509.776,21.974 509.19,22.205 508.481,22.205ZM506.683,27.682L510.198,27.682L510.198,48.117L506.683,48.117L506.683,27.682ZM524.79,48.322C523.891,48.322 523.06,48.199 522.297,47.954C521.534,47.681 520.866,47.3 520.294,46.809C519.749,46.292 519.313,45.638 518.986,44.848C518.686,44.058 518.537,43.131 518.537,42.068L518.537,30.911L514.204,30.911L514.204,27.682L518.537,27.682L518.537,22.001L522.051,22.001L522.051,27.682L527.937,27.682L527.937,30.911L522.051,30.911L522.051,41.619C522.051,42.927 522.338,43.84 522.91,44.357C523.482,44.848 524.327,45.093 525.444,45.093C525.88,45.093 526.316,45.066 526.752,45.011C527.215,44.929 527.61,44.82 527.937,44.684L527.937,47.831C527.501,47.967 527.024,48.076 526.506,48.158C525.989,48.267 525.416,48.322 524.79,48.322ZM539.661,48.526C538.544,48.526 537.522,48.335 536.596,47.954C535.669,47.545 534.879,46.987 534.225,46.278C533.571,45.57 533.054,44.711 532.672,43.703C532.318,42.668 532.141,41.51 532.141,40.229L532.141,27.682L535.656,27.682L535.656,39.698C535.656,41.414 536.064,42.777 536.882,43.785C537.726,44.793 538.857,45.297 540.274,45.297C541.064,45.297 541.8,45.134 542.481,44.807C543.19,44.453 543.789,43.962 544.279,43.335C544.797,42.682 545.206,41.891 545.506,40.965C545.805,40.039 545.955,38.99 545.955,37.818L545.955,27.682L549.47,27.682L549.47,48.117L545.955,48.117L545.955,44.97C545.274,46.169 544.375,47.068 543.258,47.668C542.168,48.24 540.969,48.526 539.661,48.526ZM564.024,48.322C563.125,48.322 562.294,48.199 561.531,47.954C560.768,47.681 560.101,47.3 559.528,46.809C558.983,46.292 558.548,45.638 558.221,44.848C557.921,44.058 557.771,43.131 557.771,42.068L557.771,30.911L553.439,30.911L553.439,27.682L557.771,27.682L557.771,22.001L561.286,22.001L561.286,27.682L567.171,27.682L567.171,30.911L561.286,30.911L561.286,41.619C561.286,42.927 561.572,43.84 562.144,44.357C562.716,44.848 563.561,45.093 564.678,45.093C565.114,45.093 565.55,45.066 565.986,45.011C566.449,44.929 566.844,44.82 567.171,44.684L567.171,47.831C566.735,47.967 566.258,48.076 565.741,48.158C565.223,48.267 564.651,48.322 564.024,48.322ZM573.46,22.205C572.751,22.205 572.152,21.974 571.661,21.51C571.171,21.02 570.926,20.421 570.926,19.712C570.926,19.031 571.171,18.445 571.661,17.955C572.152,17.464 572.751,17.219 573.46,17.219C574.168,17.219 574.754,17.464 575.217,17.955C575.68,18.445 575.912,19.031 575.912,19.712C575.912,20.421 575.68,21.02 575.217,21.51C574.754,21.974 574.168,22.205 573.46,22.205ZM571.661,27.682L575.176,27.682L575.176,48.117L571.661,48.117L571.661,27.682ZM590.912,48.526C589.359,48.526 587.929,48.254 586.621,47.709C585.313,47.136 584.182,46.374 583.229,45.42C582.275,44.466 581.526,43.349 580.981,42.068C580.463,40.761 580.204,39.371 580.204,37.9C580.204,36.428 580.463,35.052 580.981,33.772C581.526,32.464 582.275,31.333 583.229,30.379C584.182,29.426 585.313,28.676 586.621,28.132C587.929,27.559 589.359,27.273 590.912,27.273C592.438,27.273 593.855,27.559 595.163,28.132C596.471,28.676 597.602,29.426 598.555,30.379C599.509,31.333 600.245,32.464 600.762,33.772C601.307,35.052 601.58,36.428 601.58,37.9C601.58,39.371 601.307,40.761 600.762,42.068C600.245,43.349 599.509,44.466 598.555,45.42C597.602,46.374 596.471,47.136 595.163,47.709C593.855,48.254 592.438,48.526 590.912,48.526ZM590.912,45.256C591.975,45.256 592.942,45.066 593.814,44.684C594.686,44.303 595.422,43.785 596.021,43.131C596.648,42.45 597.125,41.673 597.452,40.801C597.806,39.902 597.983,38.935 597.983,37.9C597.983,36.892 597.806,35.938 597.452,35.039C597.125,34.14 596.648,33.363 596.021,32.709C595.422,32.028 594.686,31.497 593.814,31.115C592.942,30.734 591.975,30.543 590.912,30.543C589.85,30.543 588.883,30.734 588.011,31.115C587.139,31.497 586.389,32.028 585.763,32.709C585.136,33.363 584.646,34.14 584.291,35.039C583.964,35.938 583.801,36.892 583.801,37.9C583.801,38.935 583.964,39.902 584.291,40.801C584.646,41.673 585.136,42.45 585.763,43.131C586.389,43.785 587.139,44.303 588.011,44.684C588.883,45.066 589.85,45.256 590.912,45.256ZM606.625,27.682L610.14,27.682L610.14,30.829C610.848,29.603 611.775,28.704 612.919,28.132C614.064,27.559 615.303,27.273 616.638,27.273C617.783,27.273 618.832,27.464 619.785,27.845C620.739,28.227 621.543,28.785 622.197,29.521C622.878,30.23 623.409,31.101 623.791,32.137C624.172,33.145 624.363,34.276 624.363,35.529L624.363,48.117L620.889,48.117L620.889,36.06C620.889,34.344 620.439,32.995 619.54,32.014C618.668,31.006 617.51,30.502 616.066,30.502C615.249,30.502 614.472,30.666 613.737,30.992C613.028,31.319 612.401,31.81 611.857,32.464C611.339,33.091 610.916,33.867 610.59,34.793C610.29,35.72 610.14,36.783 610.14,37.981L610.14,48.117L606.625,48.117L606.625,27.682ZM639.112,48.526C637.668,48.526 636.333,48.254 635.107,47.709C633.908,47.136 632.859,46.374 631.96,45.42C631.06,44.439 630.352,43.308 629.834,42.028C629.344,40.747 629.099,39.371 629.099,37.9C629.099,36.428 629.344,35.052 629.834,33.772C630.352,32.491 631.06,31.374 631.96,30.42C632.859,29.439 633.908,28.676 635.107,28.132C636.333,27.559 637.668,27.273 639.112,27.273C640.665,27.273 642.082,27.627 643.362,28.336C644.643,29.017 645.624,29.848 646.305,30.829L646.305,27.682L649.82,27.682L649.82,48.117L646.305,48.117L646.305,44.97C645.624,45.951 644.643,46.796 643.362,47.504C642.082,48.185 640.665,48.526 639.112,48.526ZM639.643,45.297C640.679,45.297 641.619,45.106 642.463,44.725C643.308,44.344 644.03,43.826 644.629,43.172C645.256,42.491 645.733,41.701 646.06,40.801C646.414,39.902 646.591,38.935 646.591,37.9C646.591,36.864 646.414,35.897 646.06,34.998C645.733,34.099 645.256,33.322 644.629,32.668C644.03,31.987 643.308,31.456 642.463,31.074C641.619,30.693 640.679,30.502 639.643,30.502C638.608,30.502 637.654,30.693 636.782,31.074C635.938,31.456 635.202,31.987 634.575,32.668C633.976,33.322 633.499,34.099 633.145,34.998C632.818,35.897 632.654,36.864 632.654,37.9C632.654,38.935 632.818,39.902 633.145,40.801C633.499,41.701 633.976,42.491 634.575,43.172C635.202,43.826 635.938,44.344 636.782,44.725C637.654,45.106 638.608,45.297 639.643,45.297ZM656.436,17.464L659.951,17.464L659.951,48.117L656.436,48.117L656.436,17.464Z\"\n              style={{ fill, fillRule: 'nonzero' }}\n            />\n            <g>\n              <path\n                d=\"M341.696,35.934C339.688,34.605 337.473,33.66 335.377,32.479C334.018,31.711 332.571,31.032 331.39,30.058C329.382,28.404 329.796,25.156 331.892,23.738C334.904,21.73 339.895,22.853 340.426,26.957C340.426,27.046 340.515,27.105 340.603,27.105L345.151,27.105C345.269,27.105 345.358,27.016 345.328,26.898C345.092,24.063 343.999,21.701 341.991,20.195C340.072,18.748 337.887,17.98 335.554,17.98C323.535,17.98 322.443,30.707 328.91,34.723C329.648,35.196 335.997,38.385 338.241,39.773C340.485,41.161 341.194,43.7 340.22,45.708C339.334,47.539 337.03,48.809 334.727,48.661C332.217,48.514 330.268,47.155 329.589,45.029C329.471,44.645 329.412,43.907 329.412,43.582C329.412,43.494 329.323,43.405 329.235,43.405L324.303,43.405C324.215,43.405 324.126,43.494 324.126,43.582C324.126,47.155 325.012,49.134 327.433,50.935C329.707,52.648 332.188,53.356 334.757,53.356C341.489,53.356 344.974,49.547 345.683,45.59C346.303,41.722 345.151,38.237 341.696,35.934Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M130.465,18.618L122.994,18.618C122.905,18.618 122.846,18.677 122.816,18.736L118.771,32.084C118.712,32.261 118.476,32.261 118.417,32.084L114.371,18.736C114.342,18.648 114.282,18.618 114.194,18.618L106.664,18.618C106.575,18.618 106.487,18.707 106.487,18.795L106.487,52.872C106.487,52.961 106.575,53.05 106.664,53.05L111.595,53.05C111.684,53.05 111.772,52.961 111.772,52.872L111.772,26.975C111.772,26.768 112.068,26.739 112.127,26.916L116.202,40.352L116.497,41.297C116.527,41.385 116.586,41.415 116.674,41.415L120.454,41.415C120.543,41.415 120.602,41.356 120.631,41.297L120.927,40.352L125.002,26.916C125.061,26.709 125.356,26.768 125.356,26.975L125.356,52.872C125.356,52.961 125.445,53.05 125.533,53.05L130.465,53.05C130.553,53.05 130.642,52.961 130.642,52.872L130.642,18.795C130.642,18.707 130.553,18.618 130.465,18.618Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M266.19,18.618C266.102,18.618 266.043,18.677 266.013,18.736L261.968,32.084C261.908,32.261 261.672,32.261 261.613,32.084L257.568,18.736C257.538,18.648 257.479,18.618 257.39,18.618L249.89,18.618C249.801,18.618 249.713,18.707 249.713,18.795L249.713,52.872C249.713,52.961 249.801,53.05 249.89,53.05L254.821,53.05C254.91,53.05 254.999,52.961 254.999,52.872L254.999,26.975C254.999,26.768 255.294,26.739 255.353,26.916L259.428,40.352L259.723,41.297C259.753,41.385 259.812,41.415 259.9,41.415L263.68,41.415C263.769,41.415 263.828,41.356 263.857,41.297L264.153,40.352L268.228,26.916C268.287,26.709 268.582,26.768 268.582,26.975L268.582,52.872C268.582,52.961 268.671,53.05 268.759,53.05L273.691,53.05C273.779,53.05 273.868,52.961 273.868,52.872L273.868,18.795C273.868,18.707 273.779,18.618 273.691,18.618L266.19,18.618Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M202.58,18.618L179.281,18.618C179.193,18.618 179.104,18.707 179.104,18.795L179.104,23.048C179.104,23.136 179.193,23.225 179.281,23.225L188.288,23.225L188.288,52.872C188.288,52.961 188.376,53.05 188.465,53.05L193.396,53.05C193.485,53.05 193.574,52.961 193.574,52.872L193.574,23.225L202.58,23.225C202.669,23.225 202.757,23.136 202.757,23.048L202.757,18.795C202.757,18.707 202.698,18.618 202.58,18.618Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M231.658,53.049L236.147,53.049C236.265,53.049 236.353,52.931 236.324,52.813L227.052,18.618C227.022,18.53 226.963,18.5 226.875,18.5L220.437,18.5C220.349,18.5 220.289,18.559 220.26,18.618L210.988,52.813C210.958,52.931 211.047,53.049 211.165,53.049L215.653,53.049C215.742,53.049 215.801,52.99 215.831,52.931L218.518,42.98C218.547,42.891 218.606,42.862 218.695,42.862L228.617,42.862C228.705,42.862 228.764,42.921 228.794,42.98L231.481,52.931C231.511,52.99 231.599,53.049 231.658,53.049ZM219.876,37.989L223.479,24.672C223.538,24.494 223.774,24.494 223.833,24.672L227.436,37.989C227.465,38.108 227.376,38.226 227.258,38.226L220.053,38.226C219.935,38.226 219.846,38.108 219.876,37.989Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M308.198,53.049L312.687,53.049C312.805,53.049 312.893,52.931 312.864,52.813L303.592,18.618C303.562,18.53 303.503,18.5 303.415,18.5L296.977,18.5C296.889,18.5 296.829,18.559 296.8,18.618L287.528,52.813C287.498,52.931 287.587,53.049 287.705,53.049L292.193,53.049C292.282,53.049 292.341,52.99 292.371,52.931L295.058,42.98C295.087,42.891 295.146,42.862 295.235,42.862L305.157,42.862C305.245,42.862 305.304,42.921 305.334,42.98L308.021,52.931C308.051,52.99 308.11,53.049 308.198,53.049ZM296.416,37.989L300.019,24.672C300.078,24.494 300.314,24.494 300.373,24.672L303.976,37.989C304.005,38.108 303.917,38.226 303.798,38.226L296.593,38.226C296.475,38.226 296.387,38.108 296.416,37.989Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M150.669,48.018L150.669,37.446C150.669,37.358 150.757,37.269 150.846,37.269L163.986,37.269C164.075,37.269 164.164,37.18 164.164,37.092L164.164,32.84C164.164,32.751 164.075,32.662 163.986,32.662L150.846,32.662C150.757,32.662 150.669,32.574 150.669,32.485L150.669,23.449C150.669,23.361 150.757,23.272 150.846,23.272L165.788,23.272C165.876,23.272 165.965,23.183 165.965,23.095L165.965,18.843C165.965,18.754 165.876,18.665 165.788,18.665L145.56,18.665C145.472,18.665 145.383,18.754 145.383,18.843L145.383,52.89C145.383,52.979 145.472,53.067 145.56,53.067L166.408,53.067C166.497,53.067 166.585,52.979 166.585,52.89L166.585,48.402C166.585,48.313 166.497,48.224 166.408,48.224L150.816,48.224C150.728,48.195 150.669,48.136 150.669,48.018Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M386.745,52.772L369.677,35.143C369.618,35.084 369.618,34.966 369.677,34.907L385.033,18.961C385.151,18.843 385.062,18.665 384.914,18.665L378.625,18.665C378.566,18.665 378.536,18.695 378.506,18.724L365.484,32.249C365.366,32.367 365.189,32.279 365.189,32.131L365.189,18.843C365.189,18.754 365.1,18.665 365.012,18.665L360.08,18.665C359.992,18.665 359.903,18.754 359.903,18.843L359.903,52.92C359.903,53.008 359.992,53.097 360.08,53.097L365.012,53.097C365.1,53.097 365.189,53.008 365.189,52.92L365.189,37.919C365.189,37.771 365.395,37.682 365.484,37.801L380.249,53.038C380.278,53.067 380.337,53.097 380.367,53.097L386.657,53.097C386.775,53.067 386.863,52.861 386.745,52.772Z\"\n                style={{ fill, fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M72.896,0.305L43.118,22.493L48.655,9.417L72.896,0.305Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M4.209,0.306L33.722,22.7L28.45,9.417L4.209,0.306Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M62.175,51.752L54.252,63.94L71.217,68.644L76.077,52.018L62.175,51.752Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M1.057,52.018L5.888,68.644L22.824,63.94L14.93,51.752L1.057,52.018Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M21.911,31.161L17.198,38.32L33.987,39.089L33.428,20.895L21.911,31.161Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M55.194,31.161L43.501,20.688L43.118,39.089L59.907,38.32L55.194,31.161Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M22.824,63.939L32.986,58.999L24.238,52.136L22.824,63.939Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M44.12,58.999L54.252,63.939L52.867,52.136L44.12,58.999Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M54.252,63.939L44.12,58.999L44.944,65.626L44.856,68.436L54.252,63.939Z\"\n                style={{ fill: 'rgb(215,193,179)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M22.824,63.941L32.249,68.437L32.19,65.627L32.986,59L22.824,63.941Z\"\n                style={{ fill: 'rgb(215,193,179)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M32.426,47.757L24.002,45.272L29.952,42.521L32.426,47.757Z\"\n                style={{ fill: 'rgb(47,52,59)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M44.679,47.757L47.153,42.521L53.132,45.272L44.679,47.757Z\"\n                style={{ fill: 'rgb(47,52,59)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M22.824,63.94L24.297,51.751L14.93,52.018L22.824,63.94Z\"\n                style={{ fill: 'rgb(73,123,248)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M52.808,51.751L54.252,63.94L62.175,52.018L52.808,51.751Z\"\n                style={{ fill: 'rgb(73,123,248)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M59.907,38.32L43.118,39.089L44.679,47.757L47.153,42.521L53.132,45.272L59.907,38.32Z\"\n                style={{ fill: 'rgb(73,123,248)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M24.002,45.272L29.952,42.521L32.426,47.757L33.987,39.089L17.198,38.32L24.002,45.272Z\"\n                style={{ fill: 'rgb(73,123,248)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M17.198,38.322L24.238,52.137L24.002,45.274L17.198,38.322Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M53.133,45.272L52.867,52.135L59.907,38.32L53.133,45.272Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M33.987,39.089L32.426,47.757L34.4,57.993L34.841,44.503L33.987,39.089Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M43.118,39.089L42.293,44.473L42.706,57.993L44.679,47.757L43.118,39.089Z\"\n                style={{ fill: 'rgb(109,149,249)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M44.679,47.758L42.706,57.994L44.12,59L52.867,52.136L53.133,45.273L44.679,47.758Z\"\n                style={{ fill: 'rgb(182,202,252)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M24.002,45.273L24.238,52.136L32.986,59L34.399,57.994L32.426,47.758L24.002,45.273Z\"\n                style={{ fill: 'rgb(182,202,252)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M44.856,68.436L44.944,65.625L44.178,64.975L32.927,64.975L32.19,65.625L32.249,68.436L22.824,63.939L26.123,66.661L32.809,71.305L44.267,71.305L50.982,66.661L54.252,63.939L44.856,68.436Z\"\n                style={{ fill: 'rgb(192,173,158)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M44.119,58.999L42.706,57.993L34.4,57.993L32.986,58.999L32.19,65.625L32.927,64.975L44.178,64.975L44.944,65.625L44.119,58.999Z\"\n                style={{ fill: 'rgb(47,52,59)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M74.163,23.943L76.667,11.695L72.896,0.305L44.12,21.753L55.194,31.161L70.835,35.746L74.281,31.693L72.778,30.599L75.164,28.41L73.338,26.99L75.724,25.156L74.163,23.943Z\"\n                style={{ fill: 'rgb(44,86,221)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M0.439,11.697L2.972,23.945L1.352,25.158L3.767,26.992L1.941,28.412L4.327,30.601L2.824,31.695L6.271,35.748L21.911,31.163L32.986,21.755L4.209,0.307L0.439,11.697Z\"\n                style={{ fill: 'rgb(44,86,221)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M70.834,35.747L55.194,31.161L59.907,38.32L52.867,52.136L62.175,52.018L76.077,52.018L70.834,35.747Z\"\n                style={{ fill: 'rgb(182,202,252)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M21.911,31.161L6.271,35.747L1.057,52.018L14.93,52.018L24.238,52.136L17.198,38.32L21.911,31.161Z\"\n                style={{ fill: 'rgb(182,202,252)', fillRule: 'nonzero' }}\n              />\n              <path\n                d=\"M43.118,39.089L44.119,21.753L48.655,9.417L28.45,9.417L32.985,21.753L33.987,39.089L34.37,44.532L34.399,57.993L42.705,57.993L42.735,44.532L43.118,39.089Z\"\n                style={{ fill: 'rgb(182,202,252)', fillRule: 'nonzero' }}\n              />\n            </g>\n          </g>\n        </svg>\n      );\n    default:\n      return (\n        <svg\n          height={LOGO_HEIGHT}\n          viewBox=\"0 0 1311 242\"\n          width={LOGO_WIDTH}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n        >\n          <g fill=\"none\">\n            <g fill={TEXT_COLOR} transform=\"translate(361 61)\">\n              <path d=\"m796.7 60.9c-6.8-4.5-14.3-7.7-21.4-11.7-4.6-2.6-9.5-4.9-13.5-8.2-6.8-5.6-5.4-16.6 1.7-21.4 10.2-6.8 27.1-3 28.9 10.9 0 .3.3.5.6.5h15.4c.4 0 .7-.3.6-.7-.8-9.6-4.5-17.6-11.3-22.7-6.5-4.9-13.9-7.5-21.8-7.5-40.7 0-44.4 43.1-22.5 56.7 2.5 1.6 24 12.4 31.6 17.1s10 13.3 6.7 20.1c-3 6.2-10.8 10.5-18.6 10-8.5-.5-15.1-5.1-17.4-12.3-.4-1.3-.6-3.8-.6-4.9 0-.3-.3-.6-.6-.6h-16.7c-.3 0-.6.3-.6.6 0 12.1 3 18.8 11.2 24.9 7.7 5.8 16.1 8.2 24.8 8.2 22.8 0 34.6-12.9 37-26.3 2.1-13.1-1.8-24.9-13.5-32.7z\" />\n              <path d=\"m71.6 2.3h-7.4-8.1c-.3 0-.5.2-.6.4l-13.7 45.2c-.2.6-1 .6-1.2 0l-13.7-45.2c-.1-.3-.3-.4-.6-.4h-8.1-7.4-10c-.3 0-.6.3-.6.6v115.4c0 .3.3.6.6.6h16.7c.3 0 .6-.3.6-.6v-87.7c0-.7 1-.8 1.2-.2l13.8 45.5 1 3.2c.1.3.3.4.6.4h12.8c.3 0 .5-.2.6-.4l1-3.2 13.8-45.5c.2-.7 1.2-.5 1.2.2v87.7c0 .3.3.6.6.6h16.7c.3 0 .6-.3.6-.6v-115.4c0-.3-.3-.6-.6-.6z\" />\n              <path d=\"m541 2.3c-.3 0-.5.2-.6.4l-13.7 45.2c-.2.6-1 .6-1.2 0l-13.7-45.2c-.1-.3-.3-.4-.6-.4h-25.4c-.3 0-.6.3-.6.6v115.4c0 .3.3.6.6.6h16.7c.3 0 .6-.3.6-.6v-87.7c0-.7 1-.8 1.2-.2l13.8 45.5 1 3.2c.1.3.3.4.6.4h12.8c.3 0 .5-.2.6-.4l1-3.2 13.8-45.5c.2-.7 1.2-.5 1.2.2v87.7c0 .3.3.6.6.6h16.7c.3 0 .6-.3.6-.6v-115.4c0-.3-.3-.6-.6-.6z\" />\n              <path d=\"m325.6 2.3h-31.1-16.7-31.1c-.3 0-.6.3-.6.6v14.4c0 .3.3.6.6.6h30.5v100.4c0 .3.3.6.6.6h16.7c.3 0 .6-.3.6-.6v-100.4h30.5c.3 0 .6-.3.6-.6v-14.4c0-.3-.2-.6-.6-.6z\" />\n              <path d=\"m424.1 118.9h15.2c.4 0 .7-.4.6-.8l-31.4-115.8c-.1-.3-.3-.4-.6-.4h-5.8-10.2-5.8c-.3 0-.5.2-.6.4l-31.4 115.8c-.1.4.2.8.6.8h15.2c.3 0 .5-.2.6-.4l9.1-33.7c.1-.3.3-.4.6-.4h33.6c.3 0 .5.2.6.4l9.1 33.7c.1.2.4.4.6.4zm-39.9-51 12.2-45.1c.2-.6 1-.6 1.2 0l12.2 45.1c.1.4-.2.8-.6.8h-24.4c-.4 0-.7-.4-.6-.8z\" />\n              <path d=\"m683.3 118.9h15.2c.4 0 .7-.4.6-.8l-31.4-115.8c-.1-.3-.3-.4-.6-.4h-5.8-10.2-5.8c-.3 0-.5.2-.6.4l-31.4 115.8c-.1.4.2.8.6.8h15.2c.3 0 .5-.2.6-.4l9.1-33.7c.1-.3.3-.4.6-.4h33.6c.3 0 .5.2.6.4l9.1 33.7c.1.2.3.4.6.4zm-39.9-51 12.2-45.1c.2-.6 1-.6 1.2 0l12.2 45.1c.1.4-.2.8-.6.8h-24.4c-.4 0-.7-.4-.6-.8z\" />\n              <path d=\"m149.8 101.8v-35.8c0-.3.3-.6.6-.6h44.5c.3 0 .6-.3.6-.6v-14.4c0-.3-.3-.6-.6-.6h-44.5c-.3 0-.6-.3-.6-.6v-30.6c0-.3.3-.6.6-.6h50.6c.3 0 .6-.3.6-.6v-14.4c0-.3-.3-.6-.6-.6h-51.2-17.3c-.3 0-.6.3-.6.6v15 31.9 15.6 37 15.8c0 .3.3.6.6.6h17.3 53.3c.3 0 .6-.3.6-.6v-15.2c0-.3-.3-.6-.6-.6h-52.8c-.3-.1-.5-.3-.5-.7z\" />\n              <path d=\"m949.3 117.9-57.8-59.7c-.2-.2-.2-.6 0-.8l52-54c.4-.4.1-1-.4-1h-21.3c-.2 0-.3.1-.4.2l-44.1 45.8c-.4.4-1 .1-1-.4v-45c0-.3-.3-.6-.6-.6h-16.7c-.3 0-.6.3-.6.6v115.4c0 .3.3.6.6.6h16.7c.3 0 .6-.3.6-.6v-50.8c0-.5.7-.8 1-.4l50 51.6c.1.1.3.2.4.2h21.3c.4-.1.7-.8.3-1.1z\" />\n            </g>\n            <g\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(1 1)\"\n            >\n              <path\n                d=\"m246.1.2-101.1 75 18.8-44.2z\"\n                fill=\"#e17726\"\n                stroke=\"#e17726\"\n              />\n              <g fill=\"#e27625\" stroke=\"#e27625\" transform=\"translate(2)\">\n                <path d=\"m10.9.2 100.2 75.7-17.9-44.9z\" />\n                <path d=\"m207.7 174.1-26.9 41.2 57.6 15.9 16.5-56.2z\" />\n                <path d=\"m.2 175 16.4 56.2 57.5-15.9-26.8-41.2z\" />\n                <path d=\"m71 104.5-16 24.2 57 2.6-1.9-61.5z\" />\n                <path d=\"m184 104.5-39.7-35.4-1.3 62.2 57-2.6z\" />\n                <path d=\"m74.1 215.3 34.5-16.7-29.7-23.2z\" />\n                <path d=\"m146.4 198.6 34.4 16.7-4.7-39.9z\" />\n              </g>\n              <g fill=\"#d5bfb2\" stroke=\"#d5bfb2\" transform=\"translate(76 198)\">\n                <path d=\"m106.8 17.3-34.4-16.7 2.8 22.4-.3 9.5z\" />\n                <path d=\"m.1 17.3 32 15.2-.2-9.5 2.7-22.4z\" />\n              </g>\n              <path\n                d=\"m108.7 160.6-28.6-8.4 20.2-9.3z\"\n                fill=\"#233447\"\n                stroke=\"#233447\"\n              />\n              <path\n                d=\"m150.3 160.6 8.4-17.7 20.3 9.3z\"\n                fill=\"#233447\"\n                stroke=\"#233447\"\n              />\n              <g fill=\"#cc6228\" stroke=\"#cc6228\" transform=\"translate(49 128)\">\n                <path d=\"m27.1 87.3 5-41.2-31.8.9z\" />\n                <path d=\"m128.9 46.1 4.9 41.2 26.9-40.3z\" />\n                <path d=\"m153 .7-57 2.6 5.3 29.3 8.4-17.7 20.3 9.3z\" />\n                <path d=\"m31.1 24.2 20.2-9.3 8.4 17.7 5.3-29.3-57-2.6z\" />\n              </g>\n              <g fill=\"#e27525\" stroke=\"#e27525\" transform=\"translate(57 128)\">\n                <path d=\"m0 .7 23.9 46.7-.8-23.2z\" />\n                <path d=\"m122 24.2-.9 23.2 23.9-46.7z\" />\n                <path d=\"m57 3.3-5.3 29.3 6.7 34.6 1.5-45.6z\" />\n                <path d=\"m88 3.3-2.8 18.2 1.4 45.7 6.7-34.6z\" />\n              </g>\n              <path\n                d=\"m150.3 160.6-6.7 34.6 4.8 3.4 29.7-23.2.9-23.2z\"\n                fill=\"#f5841f\"\n                stroke=\"#f5841f\"\n              />\n              <path\n                d=\"m80.1 152.2.8 23.2 29.7 23.2 4.8-3.4-6.7-34.6z\"\n                fill=\"#f5841f\"\n                stroke=\"#f5841f\"\n              />\n              <path\n                d=\"m150.9 230.5.3-9.5-2.6-2.2h-38.2l-2.5 2.2.2 9.5-32-15.2 11.2 9.2 22.7 15.7h38.9l22.8-15.7 11.1-9.2z\"\n                fill=\"#c0ac9d\"\n                stroke=\"#c0ac9d\"\n              />\n              <path\n                d=\"m148.4 198.6-4.8-3.4h-28.2l-4.8 3.4-2.7 22.4 2.5-2.2h38.2l2.6 2.2z\"\n                fill=\"#161616\"\n                stroke=\"#161616\"\n              />\n              <g fill=\"#763e1a\" stroke=\"#763e1a\">\n                <path d=\"m250.4 80.1 8.5-41.4-12.8-38.5-97.7 72.5 37.6 31.8 53.1 15.5 11.7-13.7-5.1-3.7 8.1-7.4-6.2-4.8 8.1-6.2z\" />\n                <path d=\"m.1 38.7 8.6 41.4-5.5 4.1 8.2 6.2-6.2 4.8 8.1 7.4-5.1 3.7 11.7 13.7 53.1-15.5 37.6-31.8-97.7-72.5z\" />\n              </g>\n              <g fill=\"#f5841f\" stroke=\"#f5841f\">\n                <path d=\"m239.1 120-53.1-15.5 16 24.2-23.9 46.7 31.6-.4h47.2z\" />\n                <path d=\"m73 104.5-53.1 15.5-17.7 55h47.1l31.6.4-23.9-46.7z\" />\n                <path d=\"m145 131.3 3.4-58.6 15.4-41.7h-68.6l15.4 41.7 3.4 58.6 1.3 18.4.1 45.5h28.2l.1-45.5z\" />\n              </g>\n            </g>\n          </g>\n        </svg>\n      );\n  }\n}\n\nMetaFoxHorizontalLogo.propTypes = {\n  theme: PropTypes.oneOf([ThemeType.light, ThemeType.dark, ThemeType.os]),\n  className: PropTypes.string,\n};\n","export { default } from './metafox-logo.component';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Box } from '../../component-library';\nimport { BackgroundColor } from '../../../helpers/constants/design-system';\nimport MetaFoxHorizontalLogo from './horizontal-logo';\n\nexport default class MetaFoxLogo extends PureComponent {\n  static propTypes = {\n    onClick: PropTypes.func,\n    unsetIconHeight: PropTypes.bool,\n    isOnboarding: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onClick: undefined,\n  };\n\n  render() {\n    const {\n      onClick,\n      unsetIconHeight,\n      isOnboarding,\n    } = this.props;\n    const iconProps = unsetIconHeight ? {} : { height: 42, width: 42 };\n\n    iconProps.src = './images/logo/metamask-fox.svg';\n\n\n    let renderHorizontalLogo = () => (\n      <MetaFoxHorizontalLogo\n        className={classnames({\n          'app-header__metafox-logo--horizontal': !isOnboarding,\n          'onboarding-app-header__metafox-logo--horizontal': isOnboarding,\n        })}\n      />\n    );\n\n    let imageSrc = './images/logo/metamask-fox.svg';\n\n\n    return (\n      <Box\n        as=\"button\"\n        onClick={onClick}\n        className={classnames({\n          'app-header__logo-container': !isOnboarding,\n          'onboarding-app-header__logo-container': isOnboarding,\n          'app-header__logo-container--clickable': Boolean(onClick),\n        })}\n        backgroundColor={BackgroundColor.transparent}\n        data-testid=\"app-header-logo\"\n      >\n        {renderHorizontalLogo()}\n\n        <img\n          {...iconProps}\n          src={imageSrc}\n          className={classnames({\n            'app-header__metafox-logo--icon': !isOnboarding,\n            'onboarding-app-header__metafox-logo--icon': isOnboarding,\n          })}\n          alt=\"\"\n        />\n      </Box>\n    );\n  }\n}\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TOKEN_API_METASWAP_CODEFI_URL } from '../../../../shared/constants/tokens';\nimport fetchWithCache from '../../../../shared/lib/fetch-with-cache';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { getProviderConfig } from '../../../ducks/metamask/metamask';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderColor,\n  Color,\n  Display,\n  FlexDirection,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  getCurrentNetwork,\n  getIsBridgeChain,\n  getMetaMetricsId,\n  getUseTokenDetection,\n  getUseExternalServices,\n  getParticipateInMetaMetrics,\n  getDataCollectionForMarketing,\n} from '../../../selectors';\nimport { setFirstTimeUsedNetwork } from '../../../store/actions';\nimport {\n  PickerNetwork,\n  Text,\n  Box,\n  Button,\n  Icon,\n  IconName,\n  ButtonPrimarySize,\n  IconSize,\n  AvatarNetworkSize,\n} from '../../component-library';\nimport Popover from '../popover';\nimport { getPortfolioUrl } from '../../../helpers/utils/portfolio';\nimport ZENDESK_URLS from '../../../helpers/constants/zendesk-url';\n\nexport default function NewNetworkInfo() {\n  const t = useContext(I18nContext);\n  const [tokenDetectionSupported, setTokenDetectionSupported] = useState(false);\n  const [showPopup, setShowPopup] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const autoDetectToken = useSelector(getUseTokenDetection);\n  const areExternalServicesEnabled = useSelector(getUseExternalServices);\n  const providerConfig = useSelector(getProviderConfig);\n  const currentNetwork = useSelector(getCurrentNetwork);\n  const metaMetricsId = useSelector(getMetaMetricsId);\n  const isBridgeChain = useSelector(getIsBridgeChain);\n  const isMetaMetricsEnabled = useSelector(getParticipateInMetaMetrics);\n  const isMarketingEnabled = useSelector(getDataCollectionForMarketing);\n\n  const onCloseClick = () => {\n    setShowPopup(false);\n    setFirstTimeUsedNetwork(providerConfig.chainId);\n  };\n\n  const checkTokenDetection = useCallback(async () => {\n    setIsLoading(true);\n    const fetchedTokenData = await fetchWithCache({\n      url: `${TOKEN_API_METASWAP_CODEFI_URL}${providerConfig.chainId}?occurrenceFloor=100&includeNativeAssets=false`,\n      functionName: 'getIsTokenDetectionSupported',\n    });\n    const isTokenDetectionSupported = !fetchedTokenData?.error;\n    setTokenDetectionSupported(isTokenDetectionSupported);\n    setIsLoading(false);\n  }, [providerConfig.chainId]);\n\n  useEffect(() => {\n    if (!areExternalServicesEnabled) {\n      return;\n    }\n    checkTokenDetection();\n    // we want to only fetch once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    !isLoading &&\n    showPopup && (\n      <Popover\n        title={t('switchedTo')}\n        centerTitle\n        onClose={onCloseClick}\n        className=\"new-network-info__wrapper\"\n        headerProps={{ marginLeft: 6 }}\n        footer={\n          <>\n            <Button\n              variant=\"secondary\"\n              href={ZENDESK_URLS.USER_GUIDE_CUSTOM_NETWORKS}\n              externalLink\n              rel=\"noreferrer\"\n              size={ButtonPrimarySize.Md}\n              className=\"footer__button\"\n            >\n              <Text variant={TextVariant.bodySm} as=\"h6\" color={Color.inherit}>\n                {t('learnToBridge')}\n              </Text>\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={onCloseClick}\n              size={ButtonPrimarySize.Md}\n              className=\"footer__button\"\n            >\n              <Text variant={TextVariant.bodySm} as=\"h6\" color={Color.inherit}>\n                {t('recoveryPhraseReminderConfirm')}\n              </Text>\n            </Button>\n          </>\n        }\n      >\n        <Box\n          data-testid=\"new-network-info__wrapper\"\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n        >\n          <PickerNetwork\n            label={currentNetwork?.nickname}\n            src={currentNetwork?.rpcPrefs?.imageUrl}\n            marginLeft=\"auto\"\n            marginRight=\"auto\"\n            marginBottom={4}\n            iconProps={{ display: 'none' }} // do not show the dropdown icon\n            avatarNetworkProps={{ size: AvatarNetworkSize.Sm }}\n            as=\"div\" // do not render as a button\n            backgroundColor={BackgroundColor.transparent}\n            borderWidth={1}\n            borderColor={BorderColor.borderMuted}\n          />\n          <Text\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            color={Color.textDefault}\n            align={TextAlign.Start}\n            marginLeft={4}\n            marginTop={2}\n          >\n            {t('thingsToKeep')}\n          </Text>\n          <Box marginRight={4} marginLeft={4} marginTop={5}>\n            {providerConfig.ticker && (\n              <Box\n                display={Display.Flex}\n                alignItems={AlignItems.flexStart}\n                marginBottom={2}\n                paddingBottom={2}\n                data-testid=\"new-network-info__bullet-paragraph\"\n                gap={3}\n              >\n                <Box className=\"new-network-info__bullet-icon-container\">\n                  <Icon name={IconName.Gas} size={IconSize.Sm} />\n                </Box>\n                <Box flexDirection={FlexDirection.Column}>\n                  <Text\n                    variant={TextVariant.bodySmBold}\n                    as=\"h6\"\n                    color={TextColor.textDefault}\n                  >\n                    {t('gasIsETH', [providerConfig.ticker])}\n                  </Text>\n                  <Text\n                    variant={TextVariant.bodySm}\n                    as=\"h6\"\n                    color={TextColor.textDefault}\n                    display={Display.InlineBlock}\n                    key=\"nativeTokenInfo\"\n                  >\n                    {t('nativeToken', [providerConfig.ticker])}\n                  </Text>\n                </Box>\n              </Box>\n            )}\n            <Box\n              display={Display.Flex}\n              alignItems={AlignItems.flexStart}\n              marginBottom={2}\n              paddingBottom={2}\n              gap={3}\n            >\n              <Box className=\"new-network-info__bullet-icon-container\">\n                <Icon name={IconName.Bridge} size={IconSize.Sm} />\n              </Box>\n              <Box flexDirection={FlexDirection.Column}>\n                <Text\n                  variant={TextVariant.bodySmBold}\n                  as=\"h6\"\n                  color={TextColor.textDefault}\n                >\n                  {t('bridgeDontSend')}\n                </Text>\n                <Text\n                  variant={TextVariant.bodySm}\n                  as=\"h6\"\n                  color={TextColor.textDefault}\n                  display={Display.InlineBlock}\n                >\n                  {isBridgeChain\n                    ? t('attemptSendingAssetsWithPortfolio', [\n                        <a\n                          href={`${getPortfolioUrl(\n                            'bridge',\n                            'ext_bridge_new_network_info_link',\n                            metaMetricsId,\n                            isMetaMetricsEnabled,\n                            isMarketingEnabled,\n                          )}&destChain=${currentNetwork?.chainId}`}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          key=\"bridge-link\"\n                        >\n                          <Text\n                            variant={TextVariant.bodySm}\n                            as=\"h6\"\n                            color={TextColor.infoDefault}\n                            className=\"new-network-info__button\"\n                          >\n                            {t('metamaskPortfolio')}\n                          </Text>\n                        </a>,\n                      ])\n                    : t('attemptSendingAssets')}\n                </Text>\n              </Box>\n            </Box>\n\n            {!autoDetectToken || !tokenDetectionSupported ? (\n              <Box\n                display={Display.Flex}\n                alignItems={AlignItems.flexStart}\n                marginBottom={2}\n                paddingBottom={2}\n                data-testid=\"new-network-info__add-token-manually\"\n                gap={3}\n              >\n                <Box className=\"new-network-info__bullet-icon-container\">\n                  <Icon name={IconName.Coin} size={IconSize.Sm} />\n                </Box>\n                <Box flexDirection={FlexDirection.Column}>\n                  <Text\n                    variant={TextVariant.bodySmBold}\n                    as=\"h6\"\n                    color={TextColor.textDefault}\n                  >\n                    {t('addingTokens')}\n                  </Text>\n                  <Text\n                    variant={TextVariant.bodySm}\n                    as=\"h6\"\n                    color={Color.textDefault}\n                    display={Display.InlineBlock}\n                  >\n                    {t('tokenShowUp')}\n                    {t('clickToManuallyAdd')}\n                  </Text>\n                </Box>\n              </Box>\n            ) : null}\n          </Box>\n        </Box>\n      </Popover>\n    )\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Box from '../box';\nimport { Color, TextAlign } from '../../../helpers/constants/design-system';\nimport Identicon from '../identicon';\nimport { getTokenList } from '../../../selectors';\nimport { useNftsCollections } from '../../../hooks/useNftsCollections';\n\nexport default function NftCollectionImage({ assetName, tokenAddress }) {\n  const { collections } = useNftsCollections();\n  const tokenList = useSelector(getTokenList);\n  const nftTokenListImage = tokenList[tokenAddress.toLowerCase()]?.iconUrl;\n\n  const renderCollectionImageOrName = () => {\n    const collection = Object.values(collections).find(\n      ({ collectionName }) => collectionName === assetName,\n    );\n\n    if (collection?.collectionImage || nftTokenListImage) {\n      return (\n        <Identicon\n          diameter={24}\n          image={collection?.collectionImage || nftTokenListImage}\n        />\n      );\n    }\n    return (\n      <Box\n        color={Color.overlayInverse}\n        textAlign={TextAlign.Center}\n        className=\"collection-image-alt\"\n      >\n        {assetName?.[0]?.toUpperCase() ?? null}\n      </Box>\n    );\n  };\n\n  return <Box>{renderCollectionImageOrName()}</Box>;\n}\n\nNftCollectionImage.propTypes = {\n  assetName: PropTypes.string,\n  tokenAddress: PropTypes.string,\n};\n","export { default } from './nickname-popover.component';\n","import React, { useCallback, useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { I18nContext } from '../../../contexts/i18n';\nimport Tooltip from '../tooltip';\nimport Popover from '../popover';\nimport Button from '../button';\nimport Identicon from '../identicon';\nimport { shortenAddress } from '../../../helpers/utils/util';\nimport { useCopyToClipboard } from '../../../hooks/useCopyToClipboard';\nimport { getTokenList, getBlockExplorerLinkText } from '../../../selectors';\nimport { NETWORKS_ROUTE } from '../../../helpers/constants/routes';\nimport { ButtonIcon, IconName, IconSize } from '../../component-library';\n\nconst NicknamePopover = ({\n  address,\n  nickname,\n  onClose = null,\n  onAdd = null,\n  explorerLink,\n}) => {\n  const t = useContext(I18nContext);\n  const history = useHistory();\n\n  const onAddClick = useCallback(() => {\n    onAdd();\n  }, [onAdd]);\n\n  const [copied, handleCopy] = useCopyToClipboard();\n  const tokenList = useSelector(getTokenList);\n  const blockExplorerLinkText = useSelector(getBlockExplorerLinkText);\n\n  const routeToAddBlockExplorerUrl = () => {\n    history.push(`${NETWORKS_ROUTE}#blockExplorerUrl`);\n  };\n\n  const openBlockExplorer = () => {\n    global.platform.openTab({\n      url: explorerLink,\n    });\n  };\n\n  return (\n    <div className=\"nickname-popover\">\n      <Popover onClose={onClose} className=\"nickname-popover__popover-wrap\">\n        <Identicon\n          address={address}\n          diameter={36}\n          className=\"nickname-popover__identicon\"\n          image={tokenList[address.toLowerCase()]?.iconUrl}\n        />\n        <div className=\"nickname-popover__address\">\n          {nickname || shortenAddress(address)}\n        </div>\n        <div className=\"nickname-popover__public-address\">\n          <div className=\"nickname-popover__public-address__constant\">\n            {address}\n          </div>\n\n          <Tooltip\n            position=\"bottom\"\n            title={copied ? t('copiedExclamation') : t('copyToClipboard')}\n          >\n            <ButtonIcon\n              iconName={copied ? IconName.CopySuccess : IconName.Copy}\n              size={IconSize.Sm}\n              onClick={() => handleCopy(address)}\n            />\n          </Tooltip>\n        </div>\n\n        <div className=\"nickname-popover__view-on-block-explorer\">\n          <Button\n            type=\"link\"\n            className=\"nickname-popover__etherscan-link\"\n            onClick={\n              blockExplorerLinkText.firstPart === 'addBlockExplorer'\n                ? routeToAddBlockExplorerUrl\n                : openBlockExplorer\n            }\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title={\n              blockExplorerLinkText.firstPart === 'addBlockExplorer'\n                ? t('addBlockExplorer')\n                : t('etherscanView')\n            }\n          >\n            {blockExplorerLinkText.firstPart === 'addBlockExplorer'\n              ? t('addBlockExplorer')\n              : t('viewOnBlockExplorer')}\n          </Button>\n        </div>\n        <Button\n          type=\"primary\"\n          className=\"nickname-popover__footer-button\"\n          onClick={onAddClick}\n        >\n          {nickname ? t('editANickname') : t('addANickname')}\n        </Button>\n      </Popover>\n    </div>\n  );\n};\n\nNicknamePopover.propTypes = {\n  address: PropTypes.string,\n  nickname: PropTypes.string,\n  onClose: PropTypes.func,\n  onAdd: PropTypes.func,\n  explorerLink: PropTypes.string,\n};\n\nexport default NicknamePopover;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { DECIMAL_REGEX } from '../../../../shared/constants/tokens';\nimport { Text } from '../../component-library';\n\nexport default function NumericInput({\n  detailText = '',\n  value = 0,\n  onChange,\n  error = '',\n  autoFocus = false,\n  allowDecimals = true,\n  disabled = false,\n  dataTestId,\n  placeholder,\n  id,\n  name,\n  inputRef,\n}) {\n  return (\n    <div\n      className={classNames('numeric-input', { 'numeric-input--error': error })}\n    >\n      <input\n        type=\"number\"\n        value={value}\n        onKeyDown={(e) => {\n          if (!allowDecimals && e.key === '.') {\n            e.preventDefault();\n          }\n        }}\n        onChange={(e) => {\n          const newValue = e.target.value;\n          const match = DECIMAL_REGEX.exec(newValue);\n          if (match?.[1]?.length >= 15) {\n            return;\n          }\n          onChange?.(parseFloat(newValue || 0, 10));\n        }}\n        min=\"0\"\n        autoFocus={autoFocus}\n        disabled={disabled}\n        data-testid={dataTestId}\n        placeholder={placeholder}\n        id={id}\n        name={name}\n        ref={inputRef}\n      />\n      {detailText && (\n        <Text\n          color={TextColor.textAlternative}\n          variant={TextVariant.bodySm}\n          as=\"span\"\n        >\n          {detailText}\n        </Text>\n      )}\n    </div>\n  );\n}\n\nNumericInput.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  detailText: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  allowDecimals: PropTypes.bool,\n  disabled: PropTypes.bool,\n  dataTestId: PropTypes.string,\n  placeholder: PropTypes.string,\n  /**\n   * The name of the input\n   */\n  name: PropTypes.string,\n  /**\n   * The id of the input element. Should be used with htmlFor with a label element.\n   */\n  id: PropTypes.string,\n  inputRef: PropTypes.object,\n};\n","import PageContainerHeader from './page-container-header';\nimport PageContainerFooter from './page-container-footer';\n\nexport { default } from './page-container.component';\nexport { PageContainerHeader, PageContainerFooter };\n","export { default } from './page-container-footer.component';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Button from '../../button';\n\nexport default class PageContainerFooter extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    onCancel: PropTypes.func,\n    cancelText: PropTypes.string,\n    cancelButtonType: PropTypes.string,\n    onSubmit: PropTypes.func,\n    submitText: PropTypes.string,\n    disabled: PropTypes.bool,\n    submitButtonType: PropTypes.string,\n    hideCancel: PropTypes.bool,\n    buttonSizeLarge: PropTypes.bool,\n    footerClassName: PropTypes.string,\n    footerButtonClassName: PropTypes.string,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  render() {\n    const {\n      children,\n      onCancel,\n      cancelText,\n      onSubmit,\n      submitText,\n      disabled,\n      submitButtonType,\n      hideCancel,\n      cancelButtonType,\n      buttonSizeLarge = false,\n      footerClassName,\n      footerButtonClassName,\n    } = this.props;\n\n    return (\n      <div className={classnames('page-container__footer', footerClassName)}>\n        <footer>\n          {!hideCancel && (\n            <Button\n              type={cancelButtonType || 'secondary'}\n              large={buttonSizeLarge}\n              className={classnames(\n                'page-container__footer-button',\n                'page-container__footer-button__cancel',\n                footerButtonClassName,\n              )}\n              onClick={(e) => onCancel(e)}\n              data-testid=\"page-container-footer-cancel\"\n            >\n              {cancelText || this.context.t('cancel')}\n            </Button>\n          )}\n\n          <Button\n            type={submitButtonType || 'primary'}\n            large={buttonSizeLarge}\n            className={classnames(\n              'page-container__footer-button',\n              footerButtonClassName,\n            )}\n            disabled={disabled}\n            onClick={(e) => onSubmit(e)}\n            data-testid=\"page-container-footer-next\"\n          >\n            {submitText || this.context.t('next')}\n          </Button>\n        </footer>\n\n        {children && (\n          <div className=\"page-container__footer-secondary\">{children}</div>\n        )}\n      </div>\n    );\n  }\n}\n","export { default } from './page-container-header.component';\n"]}