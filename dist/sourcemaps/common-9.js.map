{"version":3,"sources":["ui/components/component-library/button-base/button-base.tsx","ui/components/component-library/button-base/button-base.types.ts","ui/components/component-library/button-base/index.ts","ui/components/component-library/button-icon/button-icon.tsx","ui/components/component-library/button-icon/button-icon.types.ts","ui/components/component-library/button-icon/index.ts","ui/components/component-library/button-link/button-link.tsx","ui/components/component-library/button-link/button-link.types.ts","ui/components/component-library/button-link/index.ts","ui/components/component-library/button-primary/button-primary.tsx","node_modules/@ethersproject/providers/lib/base-provider.js","ui/components/component-library/button-primary/button-primary.types.ts","ui/components/component-library/button-primary/index.ts","ui/components/component-library/button-secondary/button-secondary.tsx","ui/components/component-library/button-secondary/button-secondary.types.ts","ui/components/component-library/button-secondary/index.ts","ui/components/component-library/button/button.tsx","ui/components/component-library/button/button.types.ts","ui/components/component-library/button/index.ts","ui/components/component-library/checkbox/checkbox.tsx","ui/components/component-library/checkbox/index.ts","node_modules/@ethersproject/providers/lib/browser-ipc-provider.js","ui/components/component-library/container/container.tsx","ui/components/component-library/container/container.types.ts","ui/components/component-library/container/index.ts","ui/components/component-library/form-text-field/form-text-field.tsx","ui/components/component-library/form-text-field/form-text-field.types.ts","ui/components/component-library/form-text-field/index.ts","ui/components/component-library/header-base/header-base.tsx","ui/components/component-library/header-base/index.ts","node_modules/@ethersproject/providers/lib/browser-ws.js","ui/components/component-library/help-text/help-text.tsx","ui/components/component-library/help-text/help-text.types.ts","ui/components/component-library/help-text/index.ts","ui/components/component-library/icon/icon.tsx","ui/components/component-library/icon/icon.types.ts","ui/components/component-library/icon/index.ts","ui/components/component-library/index.ts","ui/components/component-library/input/index.ts","ui/components/component-library/input/input.tsx","ui/components/component-library/input/input.types.ts","node_modules/@ethersproject/providers/lib/cloudflare-provider.js","ui/components/component-library/label/index.ts","ui/components/component-library/label/label.tsx","ui/components/component-library/modal-body/index.ts","ui/components/component-library/modal-body/modal-body.tsx","ui/components/component-library/modal-content/index.ts","ui/components/component-library/modal-content/modal-content.tsx","ui/components/component-library/modal-content/modal-content.types.ts","ui/components/component-library/modal-focus/index.ts","node_modules/@ethersproject/providers/lib/etherscan-provider.js","ui/components/component-library/modal-focus/modal-focus.tsx","ui/components/component-library/modal-footer/index.ts","ui/components/component-library/modal-footer/modal-footer.tsx","ui/components/component-library/modal-header/index.ts","ui/components/component-library/modal-header/modal-header.tsx","ui/components/component-library/modal-overlay/index.ts","ui/components/component-library/modal-overlay/modal-overlay.tsx","ui/components/component-library/modal/index.ts","node_modules/@ethersproject/providers/lib/fallback-provider.js","ui/components/component-library/modal/modal.context.ts","ui/components/component-library/modal/modal.tsx","ui/components/component-library/picker-network/index.ts","ui/components/component-library/picker-network/picker-network.tsx","ui/components/component-library/popover-header/index.ts","ui/components/component-library/popover-header/popover-header.tsx","ui/components/component-library/popover/index.ts","ui/components/component-library/popover/popover.tsx","ui/components/component-library/popover/popover.types.ts","ui/components/component-library/select-button/index.ts","node_modules/@ethersproject/providers/lib/formatter.js","ui/components/component-library/select-button/select-button.tsx","ui/components/component-library/select-button/select-button.types.ts","ui/components/component-library/select-option/index.ts","ui/components/component-library/select-option/select-option.tsx","ui/components/component-library/select-wrapper/index.ts","ui/components/component-library/select-wrapper/select-wrapper.context.ts","ui/components/component-library/select-wrapper/select-wrapper.tsx","ui/components/component-library/tag-url/index.ts","ui/components/component-library/tag-url/tag-url.tsx","ui/components/component-library/tag/index.ts","node_modules/@ethersproject/providers/lib/index.js","ui/components/component-library/tag/tag.tsx","ui/components/component-library/text-field-search/index.ts","ui/components/component-library/text-field-search/text-field-search.tsx","ui/components/component-library/text-field-search/text-field-search.types.ts","ui/components/component-library/text-field/index.ts","ui/components/component-library/text-field/text-field.tsx","ui/components/component-library/text-field/text-field.types.ts","ui/components/component-library/text/index.ts","node_modules/@ethersproject/providers/lib/infura-provider.js","ui/components/component-library/text/text.tsx","ui/components/component-library/text/text.types.ts","node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.js","node_modules/@ethersproject/providers/lib/json-rpc-provider.js","node_modules/@ethersproject/providers/lib/nodesmith-provider.js","node_modules/@ethersproject/providers/lib/pocket-provider.js","node_modules/@ethersproject/providers/lib/url-json-rpc-provider.js","node_modules/@ethersproject/providers/lib/web3-provider.js","node_modules/@ethersproject/providers/lib/websocket-provider.js","node_modules/@ethersproject/providers/node_modules/bech32/index.js","node_modules/@ethersproject/random/lib/_version.js","node_modules/@ethersproject/random/lib/browser-random.js","node_modules/@ethersproject/random/lib/index.js","node_modules/@ethersproject/random/lib/shuffle.js","node_modules/@ethersproject/rlp/lib/_version.js","node_modules/@ethersproject/rlp/lib/index.js","node_modules/@ethersproject/sha2/lib/_version.js","node_modules/@ethersproject/sha2/lib/browser-sha2.js","node_modules/@ethersproject/sha2/lib/index.js","node_modules/@ethersproject/sha2/lib/types.js","node_modules/@ethersproject/signing-key/lib/_version.js","node_modules/@ethersproject/signing-key/lib/elliptic.js","node_modules/@ethersproject/signing-key/lib/index.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/curve/base.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/curve/edwards.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/curve/index.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/curve/mont.js","ui/components/ui/identicon/blockieIdenticon/blockieIdenticon.component.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/curve/short.js","ui/components/ui/jazzicon/jazzicon.component.tsx","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/curves.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/ec/index.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/ec/key.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/ec/signature.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/eddsa/index.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/eddsa/key.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/eddsa/signature.js","ui/contexts/i18n.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","ui/ducks/alerts/enums.js","ui/ducks/alerts/unconnected-account.js","ui/ducks/app/app.ts","ui/ducks/confirm-transaction/confirm-transaction.duck.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/lib/elliptic/utils.js","ui/ducks/domains.js","ui/ducks/gas/gas-action-constants.ts","ui/ducks/gas/gas.duck.js","ui/ducks/locale/locale.js","ui/ducks/metamask/metamask.js","node_modules/@ethersproject/signing-key/node_modules/elliptic/package.json","ui/ducks/send/helpers.js","ui/ducks/send/index.js","ui/ducks/send/send.js","ui/ducks/send/swap-and-send-utils.ts","ui/ducks/swaps/swaps.js","ui/helpers/constants/common.ts","ui/helpers/constants/design-system.ts","ui/helpers/constants/error-keys.js","node_modules/@ethersproject/solidity/lib/_version.js","ui/helpers/constants/notifications.ts","ui/helpers/constants/privacy-policy.ts","ui/helpers/constants/routes.ts","ui/helpers/constants/survey.ts","node_modules/@ethersproject/solidity/lib/index.js","ui/helpers/constants/transactions.js"],"names":["_react","_interopRequireDefault","require","_classnames","_","_designSystem","_buttonBase","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","exports","ButtonBase","forwardRef","as","block","children","className","href","ellipsis","externalLink","size","ButtonBaseSize","Md","startIconName","startIconProps","endIconName","endIconProps","loading","disabled","iconLoadingProps","textProps","color","TextColor","textDefault","iconColor","IconColor","iconDefault","props","ref","tag","tagProps","createElement","Text","backgroundColor","BackgroundColor","backgroundAlternative","variant","TextVariant","bodyMdMedium","transparent","rel","padding","paddingLeft","paddingRight","values","includes","display","Display","InlineFlex","justifyContent","JustifyContent","center","alignItems","AlignItems","borderRadius","BorderRadius","pill","Icon","name","IconSize","Sm","marginInlineEnd","inherit","marginInlineStart","IconName","Loading","_buttonBase2","_icon","_buttonIcon","buttonIconSizeToIconSize","ButtonIconSize","Lg","ButtonIcon","ariaLabel","iconName","iconProps","isDisabled","Box","String","Boolean","LG","_buttonIcon2","_buttonLink","ButtonLink","danger","ButtonLinkSize","Auto","Inherit","Color","errorDefault","primaryDefault","_buttonLink2","_buttonPrimary","ButtonPrimary","ButtonPrimarySize","errorInverse","primaryInverse","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","p","TypeError","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","t","g","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","push","__importDefault","mod","defineProperty","BaseProvider","Resolver","Event","abstract_provider_1","base64_1","basex_1","bignumber_1","bytes_1","constants_1","hash_1","networks_1","properties_1","sha2_1","strings_1","web_1","bech32_1","logger_1","_version_1","logger","Logger","version","formatter_1","checkTopic","topic","hexDataLength","throwArgumentError","toLowerCase","serializeTopics","topics","slice","map","isArray","unique_1","forEach","sorted","keys","sort","join","getEventTag","eventName","indexOf","ForkEvent","isForkEvent","warn","Error","address","getTime","Date","stall","duration","setTimeout","PollableEvents","listener","once","defineReadOnly","_lastBlockNumber","_inflight","get","type","hash","filter","enumerable","configurable","split","comps","data","pollable","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","hexZeroPad","BigNumber","from","toHexString","base58Encode","Base58","encode","concat","hexDataSlice","sha256","matcherIpfs","RegExp","matchers","_parseString","start","toUtf8String","_parseBytes","error","offset","toNumber","getIpfsLink","link","match","substring","numPad","arrayify","padded","Uint8Array","set","bytesPad","Math","ceil","encodeBytes","datas","byteCount","hexConcat","provider","resolvedAddress","formatter","supportsWildcard","_this","_supportsEip2544","to","eq","catch","code","errors","CALL_EXCEPTION","_fetch","selector","parameters","tx","parseBytes","error_1","_a","ccipReadEnabled","namehash","dnsEncode","throwError","transaction","_fetchBytes","_getAddress","coinType","hexBytes","coinInfo","UNSUPPORTED_OPERATION","operation","bytes","length_1","parseInt","length_2","length_3","version_1","words","toWords","unshift","getAddress","error_2","HashZero","callAddress","getAvatar","linkage","avatar","scheme","owner","_b","addr","tokenId","tokenOwner","_c","_d","balance","_e","_f","metadataUrl","_g","metadata","imageUrl","_h","content","getText","url","_resolvedAddress","isZero","toString","replace","fetchJson","JSON","stringify","image","getContentHash","ipfs","length_4","ipns","length_5","swarm","skynet","urlSafe_1","a","keyBytes","toUtf8Bytes","hexlify","defaultFormatter","nextPollId","_super","network","_newTarget","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","getStatic","emit","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","poll","NETWORK_ERROR","event","undefined","Formatter","getNetwork","ccipReadFetch","calldata","urls","sender","errorMessages","json","errorMessage","errorPassThrough","response","status","statusCode","message","SERVER_ERROR","m","_getInternalBlockNumber","maxAge","internalBlockNumber","reqTime","checkInternalBlockNumber","_internalBlockNumber","respTime","blockNumber","resolveProperties","perform","networkError","_setFastBlockNumber","pollId","runners","error_6","pollingInterval","abs","makeError","previousBlockNumber","eventBlockNumber","hash_2","runner","getTransactionReceipt","receipt","filter_1","fromBlock","toBlock","minFromBlock","getLogs","logs","log","blockHash","transactionHash","all","resetEventsBlock","polling","currentNetwork","chainId","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","_getFastBlockNumber","now","getBlockNumber","waitForTransaction","confirmations","timeout","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","func","minedHandler","on","removeListener","lastBlockNumber_1","startBlock","scannedBlock_1","replaceHandler_1","getTransactionCount","nonce","mined","ti","receipt_1","reason","getTransaction","getBlockWithTransactions","transactions","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","timer_1","TIMEOUT","unref","clearTimeout","getGasPrice","method","getBalance","addressOrName","blockTag","params","_getBlockTag","getCode","getStorageAt","position","hexValue","expectedHash","returnedHash","wait","confirms","sendTransaction","signedTransaction","hexTx","error_7","_getTransactionRequest","accessList","transactionRequest","_getFilter","_call","attempt","txSender","urlsOffset","urlsLength","urlsData","u","callbackSelector","extraData","ccipResult","error_8","redirects","signature","resolved","estimateGas","resolveName","_getBlock","blockHashOrBlockTag","includeTransactions","isHexString","blockNumber_1","blockWithTxs","blockWithTransactions","oncePoll","getBlock","transactionResponse","removed","arrayOf","filterLog","getEtherPrice","getResolver","currentName","resolver","_getResolver","addrData","ensAddress","lookupAddress","node","resolverAddr","nameOrAddress","resolverAddress","avatar_1","error_11","name_1","error_12","NOT_IMPLEMENTED","_startEvent","_stopEvent","_addEventListener","args","_i","stopped","eventTag","listenerCount","listeners","off","removeAllListeners","found","eventTag_1","Provider","_buttonPrimary2","_buttonSecondary","ButtonSecondary","ButtonSecondarySize","buttonColor","borderColor","_buttonSecondary2","_button","Button","ButtonVariant","Primary","Secondary","Link","ButtonSize","_button2","BUTTON_SIZES","SM","Size","MD","INHERIT","AUTO","auto","BUTTON_VARIANT","PRIMARY","SECONDARY","LINK","Checkbox","id","isChecked","isIndeterminate","isReadOnly","isRequired","onChange","inputProps","inputRef","title","sanitizedTitle","htmlFor","checked","readOnly","required","preventDefault","onKeyDown","margin","marginRight","backgroundDefault","BorderColor","borderDefault","borderWidth","Flex","CheckBold","MinusBold","_checkbox","IpcProvider","Container","maxWidth","ContainerMaxWidth","_container","_container2","_formTextField","FormTextField","autoComplete","autoFocus","defaultValue","helpText","helpTextProps","labelProps","startAccessory","maxLength","onBlur","onFocus","placeholder","endAccessory","FormTextFieldSize","textFieldProps","truncate","flexDirection","FlexDirection","Column","Label","TextField","HelpText","severity","HelpTextSeverity","Danger","marginTop","_formTextField2","r","_getRequireWildcardCache","has","getOwnPropertyDescriptor","_interopRequireWildcard","WeakMap","HeaderBase","childrenWrapperProps","startAccessoryWrapperProps","endAccessoryWrapperProps","startAccessoryRef","useRef","endAccessoryRef","accessoryMinWidth","setAccessoryMinWidth","useState","useEffect","handleResize","current","accMinWidth","max","scrollWidth","window","addEventListener","removeEventListener","getTitleStyles","useMemo","width","marginLeft","spaceBetween","style","minWidth","flexEnd","_headerBase","WebSocket","WS","logger_2","_text","bodyXs","Warning","warningDefault","Success","successDefault","Info","infoDefault","severityColor","Severity","_helpText","_helpText2","_box","InlineBlock","maskImage","WebkitMaskImage","_icon2","_avatarAccount","_avatarFavicon","_avatarIcon","_avatarNetwork","_avatarToken","_avatarBase","_badgeWrapper","_label","_pickerNetwork","_tag","_tagUrl","_input","_textField","_textFieldSearch","_modalContent","_modalOverlay","_modalFocus","_modal","_modalBody","_modalFooter","_bannerBase","_bannerAlert","_bannerTip","_popoverHeader","_popover","_modalHeader","_selectButton","_selectOption","_selectWrapper","_input2","Input","InputType","textVariant","bodyMd","disableStateStyles","borderStyle","BorderStyle","none","CloudflareProvider","url_json_rpc_provider_1","getApiKey","apiKey","getUrl","host","number","UrlJsonRpcProvider","fontWeight","FontWeight","Medium","ModalBody","_modalContent2","ModalContent","ModalContentSize","modalDialogProps","onClose","isClosedOnEscapeKey","isClosedOnOutsideClick","initialFocusRef","finalFocusRef","restoreFocus","useModalContext","modalDialogRef","handleEscKey","handleClickOutside","closest","contains","document","ModalFocus","BlockSize","Screen","height","flexStart","paddingTop","paddingBottom","role","Full","EtherscanProvider","transactions_1","getTransactionPostData","gasLimit","gasPrice","maxFeePerGs","maxPriorityFeePerGas","accessListify","storageKeys","getResult","throttleRetry","getJsonResult","jsonrpc","checkLogTag","checkError","responseText","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNPREDICTABLE_GAS_LIMIT","getBaseUrl","module","query","reduce","accum","baseUrl","getPostUrl","getPostData","apikey","fetch","post","payload","procFunc","connection","payloadStr","action","request","throttleSlotInterval","throttleCallback","isCommunityResource","showThrottleMessage","headers","deepCopy","postData","topic0","blocks","hex","boolean","txhash","parseFloat","ethusd","getHistory","endBlock","startblock","endblock","creates","contractAddress","item","timeStamp","timestamp","_reactFocusLock","FocusTrap","onActivation","useCallback","focus","onDeactivation","_finalFocusRef$curren","returnFocus","displayName","_useI18nContext","ModalFooter","submitButtonProps","onSubmit","cancelButtonProps","onCancel","containerProps","useI18nContext","flexWrap","FlexWrap","Wrap","gap","onClick","ModalHeader","closeButtonProps","onBack","backButtonProps","ArrowLeft","Close","headingSm","textAlign","TextAlign","Center","ModalOverlay","overlayDefault","_modal2","FallbackProvider","random_1","base_provider_1","checkNetworks","networks","median","maxDelta","middle","floor","serialize","isBigNumber","nextRid","cancel","timer","promise","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","getProcessFunc","normalize","configs","c","_highestBlockNumber","shallowCopy","quorum","tally","count","check","normalizedTally","waitForSync","providers","providerConfigs","configOrProvider","index","isProvider","stallTimeout","freeze","priority","total","networkOrReady","results","i_1","processFunc","currentBlockNumber","first","_loop_1","this_1","state_1","shuffled","t0","inflightWeight","_loop_2","waiting","rid","staller","getRunner","backend","race","errorCode","ModalContext","createContext","context","useContext","_reactDom","Modal","isOpen","createPortal","PickerNetwork","avatarNetworkProps","src","AvatarNetwork","AvatarNetworkSize","Xs","bodySm","ArrowDown","PopoverHeader","_popover2","_reactPopper","Popover","PopoverPosition","PopoverRole","Tooltip","hasArrow","matchWidth","preventOverflow","flip","referenceHidden","referenceElement","isPortal","arrowProps","onClickOutside","onPressEscKey","popperElement","setPopperElement","arrowElement","setArrowElement","popoverRef","styles","attributes","usePopper","placement","modifiers","enabled","options","element","contentStyle","clientWidth","PopoverContent","borderMuted","popper","arrow","Fragment","_selectButton2","isCommunityResourcable","address_1","formats","getDefaultFormats","bigNumber","allowNull","transactionIndex","maxFeePerGas","uint256","s","raw","receiptLog","logIndex","root","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","baseFeePerGas","allowFalsish","strict","AddressZero","getContractAddress","_block","format","author","_difficulty","gas","input","networkId","parse","value_1","byzantium","object","checkKey","checkValue","nullValue","replaceValue","array","throttleMessage","console","SelectButton","placeholderProp","SelectButtonSize","isBlock","isDanger","isDangerProp","isDisabledProp","description","descriptionProps","caretIconProps","valueProp","uncontrolledValue","uncontrolledValueProp","defaultValueProp","selectContext","SelectContext","isWithinSelectWrapper","isUncontrolledOpen","toggleUncontrolledOpen","contentToRender","labelRender","descriptionRender","startAccessoryRender","endAccessoryRender","contentIsPlainObject","isValidElement","isPlainObject","getPaddingBySize","textAlternative","SelectOption","setUncontrolledValue","onValueChange","isMultiSelect","onOpenChange","Block","_selectWrapper2","useSelectContext","SelectWrapper","triggerComponent","popoverProps","setIsUncontrolledOpen","setReferenceElement","wrapperRef","cloneElement","anchorRef","Bottom","TagUrl","actionButtonLabel","actionButtonProps","showLockIcon","avatarFaviconProps","lockIconProps","AvatarFavicon","Lock","iconAlternative","getDefaultProvider","JsonRpcSigner","WebSocketProvider","Web3Provider","StaticJsonRpcProvider","PocketProvider","NodesmithProvider","JsonRpcBatchProvider","JsonRpcProvider","InfuraWebSocketProvider","InfuraProvider","AnkrProvider","AlchemyWebSocketProvider","AlchemyProvider","alchemy_provider_1","ankr_provider_1","cloudflare_provider_1","etherscan_provider_1","fallback_provider_1","ipc_provider_1","infura_provider_1","json_rpc_provider_1","json_rpc_batch_provider_1","nodesmith_provider_1","pocket_provider_1","web3_provider_1","websocket_provider_1","_defaultProvider","Tag","_textFieldSearch2","TextFieldSearch","showClearButton","clearButtonOnClick","clearButtonProps","TextFieldType","Search","TextFieldSearchSize","_textField2","TextFieldSize","testId","InputComponent","internalInputRef","focused","setFocused","inputElementRef","_text2","defaultProjectId","password","projectId","projectSecret","getWebSocketProvider","apiKeyObj","assertArgument","INVALID_ARGUMENT","argument","allowGzip","user","fontStyle","textTransform","textDirection","overflowWrap","isBrandEvolution","displayMd","headingLg","headingMd","getTextElementDefault","computedClassName","dir","TextDirection","InvisibleCharacter","ValidTag","send","_nextId","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","abstract_signer_1","errorGas","spelunk","requireData","getLowerCase","_constructorGuard","constructorGuard","addressOrIndex","connect","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","accounts","sendUncheckedTransaction","fromAddress","estimate","hexlifyTransaction","ACTION_REJECTED","signTransaction","signMessage","messageData","_legacySignMessage","error_3","_signTypedData","domain","types","populated","error_4","_TypedDataEncoder","resolveNames","getPayload","unlock","Signer","allowedTransactionKeys","_eventLoopCache","defaultUrl","_cache","_uncachedDetectNetwork","serverError","getSigner","getUncheckedSigner","listAccounts","cache","prepareRequest","feeData","getFeeData","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","allowExtra","allowed","checkProperties","defaultApplicationId","applicationId","loadBalancer","applicationSecretKey","checkAbstract","buildWeb3LegacyFetcher","sendFunc","fetcher","path","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","ws_1","NextId","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","callback","sub","_subs","subscription","fauxPoll","_websocket","_detectNetwork","_subscribe","param","subIdPromise","subId","_subIds","emitReceipt_1","destroy","readyState","CONNECTING","onerror","close","ALPHABET","ALPHABET_MAP","z","x","charAt","polymodStep","pre","prefixChk","chk","charCodeAt","__decode","str","LIMIT","lowered","uppered","toUpperCase","lastIndexOf","wordChars","convert","inBits","outBits","pad","bits","maxV","decodeUnsafe","res","decode","toWordsUnsafe","fromWordsUnsafe","fromWords","randomBytes","anyGlobal","global","getGlobal","crypto","msCrypto","getRandomValues","buffer","shuffle_1","j","random","tmp","arrayifyInteger","unarrayifyInteger","_encode","payload_1","child","isBytesLike","_decodeChildren","childOffset","decoded","_decode","consumed","BUFFER_OVERRUN","lengthLength","computeHmac","sha512","ripemd160","hash_js_1","types_1","update","digest","algorithm","SupportedAlgorithm","hmac","EC","ec","computePublicKey","recoverPublicKey","SigningKey","elliptic_1","_curve","getCurve","privateKey","keyPair","keyFromPrivate","getPublic","_addPoint","other","p0","keyFromPublic","publicKey","p1","pub","add","encodeCompressed","signDigest","digestBytes","sign","canonical","splitSignature","recoveryParam","computeSharedSecret","otherKey","otherKeyPair","derive","isSigningKey","_isSigningKey","compressed","signingKey","sig","rs","recoverPubKey","elliptic","utils","rand","curve","curves","eddsa","BN","getNAF","getJSF","assert","BaseCurve","conf","red","prime","mont","zero","toRed","one","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","bitLength","adjustCount","div","cmpn","redN","_maxwellTrick","BasePoint","precomputed","point","validate","_fixedNafMul","k","doubles","_getDoubles","naf","I","nafW","repr","l","jpoint","mixedAdd","points","neg","toP","_wnafMul","w","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","cmp","toJ","redNeg","jsf","ja","jb","decodePoint","enc","toArray","byteLength","pointFromX","compact","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","dbl","inherits","Base","EdwardsCurve","twisted","mOneA","extended","umod","c2","redSqr","dd","redAdd","fromRed","oneC","Point","zOne","redMul","redInvm","_mulA","num","_mulC","odd","x2","rhs","redSub","lhs","y2","redSqrt","isOdd","pointFromY","isInfinity","fromJSON","inspect","_extDbl","redIAdd","redISub","h","nx","ny","nt","nz","_projDbl","_extAdd","_projAdd","mul","mulAdd","k1","k2","jmulAdd","zi","eqXToP","rx","xc","clone","iadd","base","short","edwards","MontCurve","i4","a24","aa","bb","diffAdd","diff","da","cb","iushrn","andln","jumlAdd","_propTypes","_blo","BlockieIdenticon","diameter","alt","blo","propTypes","string","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","isRed","inf","forceRed","JPoint","modn","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","x1","y1","q","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","p2","q1","q2","ax","_endoWnafMulAdd","npoints","ncoeffs","ineg","endoMul","toJSON","obj2point","ys1","dyinv","_precompute","negate","zinv","zinv2","ay","pz2","z2","u1","u2","s1","s2","h2","h3","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","zs","_jazzicon","_utils","_iconFactory","ethereumIconFactory","multichainIconFactory","IconFactory","stringToBytes","tokenList","namespace","container","imageNode","iconForAddress","appendChild","_container$current","firstChild","remove","PresetCurve","defineCurve","sha384","HmacDRBG","KeyPair","Signature","nh","priv","fromPrivate","fromPublic","genKeyPair","drbg","pers","persEnc","entropy","hmacStrength","entropyEnc","ns2","generate","iaddn","_truncateToN","msg","truncOnly","bkey","getPrivate","ns1","iter","kp","kpX","invm","verify","sinv","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","_importPrivate","privEnc","_importPublic","pubEnc","_importDER","Position","place","getLength","buf","initial","octetLen","val","rmPadding","constructLength","arr","octets","LN2","rlen","slen","toDER","backHalf","EDDSA","pointClass","encodingLength","secret","keyFromSecret","hashInt","messagePrefix","R","Rencoded","encodePoint","s_","pubBytes","S","makeSignature","SG","intFromLE","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","isPoint","cachedProperty","_secret","_pub","_pubBytes","privBytes","getSecret","_R","_S","_Rencoded","_Sencoded","Sencoded","toBytes","toHex","_reactRedux","_locale","_i18nHelper","_defineProperty","arg","hint","prim","toPrimitive","Number","_toPrimitive","_toPropertyKey","writable","I18nContext","I18nProvider","currentLocale","useSelector","getCurrentLocale","getCurrentLocaleMessages","en","getEnLocaleMessages","getMessage","defaultProps","LegacyI18nProvider","Component","getChildContext","render","ALERT_STATE","CLOSED","ERROR","LOADING","OPEN","_toolkit","_browser","_alerts","actionConstants","_actions","_selectors","_enums","AlertTypes","unconnectedAccount","initialState","state","createSlice","reducers","connectAccountFailed","connectAccountRequested","connectAccountSucceeded","disableAlertFailed","disableAlertRequested","disableAlertSucceeded","dismissAlert","switchAccountFailed","switchAccountRequested","switchAccountSucceeded","switchedToUnconnectedAccount","extraReducers","SELECTED_ADDRESS_CHANGED","actions","reducer","getAlertState","alertIsOpen","dismissAndDisableAlert","async","dispatch","setAlertEnabledness","captureException","switchToAccount","accountId","getState","setSelectedInternalAccount","internalAccount","getInternalAccount","setSelectedAccount","connectAccount","selectedAddress","getSelectedInternalAccount","origin","getOriginOfCurrentTab","addPermittedAccount","_action$payload","_action$payload2","appState","NETWORK_DROPDOWN_OPEN","networkDropdownOpen","NETWORK_DROPDOWN_CLOSE","IMPORT_NFTS_MODAL_OPEN","importNftsModal","open","IMPORT_NFTS_MODAL_CLOSE","SHOW_BASIC_FUNCTIONALITY_MODAL_OPEN","showBasicFunctionalityModal","SHOW_BASIC_FUNCTIONALITY_MODAL_CLOSE","ONBOARDING_TOGGLE_BASIC_FUNCTIONALITY_ON","externalServicesOnboardingToggleState","ONBOARDING_TOGGLE_BASIC_FUNCTIONALITY_OFF","SHOW_IPFS_MODAL_OPEN","showIpfsModalOpen","SHOW_IPFS_MODAL_CLOSE","IMPORT_TOKENS_POPOVER_OPEN","importTokensModalOpen","IMPORT_TOKENS_POPOVER_CLOSE","DEPRECATED_NETWORK_POPOVER_OPEN","deprecatedNetworkModalOpen","DEPRECATED_NETWORK_POPOVER_CLOSE","ALERT_OPEN","alertOpen","alertMessage","ALERT_CLOSE","SET_ACCOUNT_DETAILS_ADDRESS","accountDetailsAddress","QR_CODE_DETECTED","qrCodeData","SET_SMART_TRANSACTIONS_ERROR","smartTransactionsError","DISMISS_SMART_TRANSACTIONS_ERROR_MESSAGE","smartTransactionsErrorMessageDismissed","MODAL_OPEN","modalProps","modal","modalState","previousModalState","MODAL_CLOSE","CLEAR_ACCOUNT_DETAILS","accountDetail","SHOW_SEND_TOKEN_PAGE","LOCK_METAMASK","warning","GO_HOME","SHOW_ACCOUNTS_PAGE","isLoading","scrollToBottom","SHOW_CONF_TX_PAGE","txId","COMPLETED_TX","UNLOCK_FAILED","UNLOCK_SUCCEEDED","SET_HARDWARE_WALLET_DEFAULT_HD_PATH","device","newDefaults","defaultHdPaths","SHOW_LOADING","loadingMessage","HIDE_LOADING","SHOW_NFT_STILL_FETCHING_INDICATION","isNftStillFetchingIndication","SHOW_NFT_DETECTION_ENABLEMENT_TOAST","showNftDetectionEnablementToast","HIDE_NFT_STILL_FETCHING_INDICATION","DISPLAY_WARNING","HIDE_WARNING","SHOW_PRIVATE_KEY","SET_SELECTED_NETWORK_CONFIGURATION_ID","selectedNetworkConfigurationId","SET_NEW_NETWORK_ADDED","networkConfigurationId","nickname","newNetworkAddedName","newNetworkAddedConfigurationId","SET_EDIT_NETWORK","editedNetwork","SET_NEW_TOKENS_IMPORTED","newTokensImported","SET_NEW_TOKENS_IMPORTED_ERROR","newTokensImportedError","SET_NEW_NFT_ADDED_MESSAGE","newNftAddedMessage","SET_REMOVE_NFT_MESSAGE","removeNftMessage","SET_REQUEST_ACCOUNT_TABS","requestAccountTabs","SET_OPEN_METAMASK_TAB_IDS","openMetaMaskTabs","HIDE_WHATS_NEW_POPUP","showWhatsNewPopup","CAPTURE_SINGLE_EXCEPTION","singleExceptions","TOGGLE_GAS_LOADING_ANIMATION","gasLoadingAnimationIsShowing","SET_WEBHID_CONNECTED_STATUS","ledgerWebHidConnectedStatus","SET_LEDGER_TRANSPORT_STATUS","ledgerTransportStatus","TOGGLE_CURRENCY_INPUT_SWITCH","sendInputCurrencySwitched","ONBOARDED_IN_THIS_UI_SESSION","onboardedInThisUISession","SET_CUSTOM_TOKEN_AMOUNT","customTokenAmount","TOGGLE_NETWORK_MENU","isAddingNewNetwork","isMultiRpcOnboarding","SHOW_KEYRING_SNAP_REMOVAL_RESULT","showKeyringRemovalSnapModal","keyringRemovalSnapModal","HIDE_KEYRING_SNAP_REMOVAL_RESULT","snapName","_hardwareWallets","shouldClose","menuOpen","buyView","trezor","ledger","lattice","networksTabSelectedRpcUrl","currentWindowTab","showTermsOfUsePopup","testKey","WebHIDConnectedStatuses","unknown","HardwareTransportStates","snapsInstallPrivacyWarningShown","CLEAR_CONFIRM_TRANSACTION","initState","UPDATE_TX_DATA","txData","UPDATE_TOKEN_DATA","tokenData","UPDATE_TOKEN_PROPS","tokenProps","UPDATE_TRANSACTION_AMOUNTS","fiatTransactionAmount","ethTransactionAmount","hexTransactionAmount","UPDATE_TRANSACTION_FEES","fiatTransactionFee","ethTransactionFee","hexTransactionFee","UPDATE_TRANSACTION_TOTALS","fiatTransactionTotal","ethTransactionTotal","hexTransactionTotal","UPDATE_NONCE","maxValueMode","SET_MAX_VALUE_MODE","transactionId","unconfirmedTransactionsHashSelector","txParams","updateTxDataAndCalculate","tokenAddress","_transaction","parseStandardTokenTransactionData","tokens","_metamask","getTokens","currentToken","find","_stringUtils","isEqualCaseInsensitive","updateTokenProps","decimals","updateTokenData","updateNonce","_conversion","hexToDecimal","updateTxData","_confirmTx","_customGas","createActionType","updateTransactionAmounts","amounts","updateTransactionFees","fees","updateTransactionTotals","totals","currentCurrency","currentCurrencySelector","conversionRate","conversionRateSelector","nativeCurrency","getNativeCurrency","getAveragePriceEstimateInHexWEI","getValueFromWeiHex","fromCurrency","toCurrency","numberOfDecimals","getHexGasTotal","getTransactionFee","addFiat","addEth","sumHexes","minAssert","minUtils","zero2","fill","ws","isubn","m8","d1","d2","m14","m24","computer","resolutions","domainName","trimmedDomainName","trim","stage","initializeDomainSlice","lookupStart","_loglevel","info","getCurrentChainId","chainIdInt","fetchResolutions","lookupEnd","_snapsRpcMethods","_send","_actionConstants","_hexstringUtils","domainInitialState","filteredResolutions","resolution","BURN_ADDRESS","NO_RESOLUTION_FOR_DOMAIN","enableDomainLookup","resetDomainResolution","builder","addCase","CHAIN_CHANGED","subjects","getPermissionSubjects","filteredNameLookupSnapsIds","getNameLookupSnapsIds","snapId","_subjects$snapId","permission","permissions","chainIdCaveat","getChainIdsCaveat","lookupMatchersCaveat","getLookupMatchersCaveat","tlds","schemes","some","tld","endsWith","startsWith","allSettled","handleSnapRequest","handler","successfulResolutions","idx","resolvedAddresses","_getSnapMetadata","_getAddressBookEntry","resolvingSnap","getSnapMetadata","addressBookEntryName","getAddressBookEntry","RESET_CUSTOM_DATA","SET_CUSTOM_GAS_LIMIT","SET_CUSTOM_GAS_PRICE","_gasActionConstants","customData","price","limit","_lodash","cloneDeep","newLimit","newPrice","SET_CURRENT_LOCALE","messages","locale","_reselect","localeMessages","getIntlLocale","createSelector","Intl","getCanonicalLocales","metamaskState","UPDATE_METAMASK_STATE","isUnlocked","SET_ACCOUNT_LABEL","account","accountToUpdate","internalAccounts","UPDATE_CUSTOM_NONCE","customNonceValue","TOGGLE_ACCOUNT_MENU","isAccountMenuOpen","isNetworkMenuOpen","UPDATE_TRANSACTION_PARAMS","newTx","SET_PARTICIPATE_IN_METAMETRICS","participateInMetaMetrics","SET_DATA_COLLECTION_FOR_MARKETING","dataCollectionForMarketing","CLOSE_WELCOME_SCREEN","welcomeScreenSeen","SET_PENDING_TOKENS","pendingTokens","CLEAR_PENDING_TOKENS","COMPLETE_ONBOARDING","completedOnboarding","RESET_ONBOARDING","firstTimeFlowType","isInitialized","onboardingTabs","seedPhraseBackedUp","SET_FIRST_TIME_FLOW_TYPE","SET_NEXT_NONCE","nextNonce","SET_CONFIRMATION_EXCHANGE_RATES","confirmationExchangeRates","metamask","keyrings","kr","_keyring","KeyringType","currentBlockGasLimit","_state$metamask$curre","currencyRates","getProviderConfig","ticker","estimatedGasFeeTimeBounds","_state$metamask$gasFe3","gasFeeEstimatesByChainId","networkAndAccountSupports1559","checkNetworkAndAccountSupports1559","gasEstimateType","getGasEstimateType","isEIP1559TolerableEstimateType","_gas","GasEstimateTypes","feeMarket","ethGasPrice","networkClientId","getGasEstimateTypeByChainId","gasFeeEstimates","getGasFeeEstimatesByChainId","networkCongestion","NetworkCongestionThresholds","busy","ledgerTransportType","nftsDropdownState","featureFlags","sendHexData","fromAccounts","accountsWithSendEtherInfoSelector","addressBookAccounts","getAddressBook","keyring","findKeyringForAddress","_state$metamask$netwo","selectedNetworkClientId","getSelectedNetworkClientId","networksMetadata","EIPS","expectHexWei","txParamsCopy","_gas2","setCustomGasPrice","toHexWei","_ethereumjsUtil","addHexPrefix","decGWEIToHexWEI","updatedTx","customGasLimit","setCustomGasLimit","updateTransactionGasFees","_transactionController","_networkController","_preferences","selectedAccount","networkConfigurations","addressBook","useBlockie","currentBlockGasLimitByChainId","preferences","autoLockTimeLimit","DEFAULT_AUTO_LOCK_TIME_LIMIT","showExtensionInFullSizeView","showFiatInTestnets","showTestNetworks","smartTransactionsOptInStatus","useNativeCurrencyAsPrimaryCurrency","petnamesEnabled","featureNotificationsEnabled","showMultiRpcModal","knownMethodData","use4ByteResolution","ETH","getAlertEnabledness","alertEnabledness","getNetworkConfigurationsByChainId","networkConfigurationsByChainId","rpcEndpoint","rpcEndpoints","_network$blockExplore","blockExplorerUrl","blockExplorerUrls","defaultBlockExplorerUrlIndex","rpcPrefs","RpcEndpointType","Custom","rpcUrl","getUnconnectedAccountAlertEnabledness","getWeb3ShimUsageAlertEnabledness","web3ShimUsage","getUnconnectedAccountAlertShown","unconnectedAccountAlertShownOrigins","getPendingTokens","getNfts","_allNfts$selectedAddr","allNfts","getTransactionGasFeeEstimates","_state$confirmTransac","transactionMetadata","confirmTransaction","getTransactionGasFeeEstimatesByChainId","_state$confirmTransac2","getNftContracts","_allNftContracts$sele","allNftContracts","getTransactionGasFeeEstimateType","transactionGasFeeEstimates","getTransactionGasFeeEstimateTypeByChainId","gasFeeControllerEstimateType","transactionGasFeeEstimateType","_state$metamask$gasFe","_state$metamask$gasFe2","gasFeeControllerEstimates","mergeGasFeeEstimates","getGasFeeEstimates","stripHexPrefix","main","files","scripts","lint","unit","test","repository","keywords","license","bugs","homepage","devDependencies","brfs","coveralls","eslint","grunt","istanbul","mocha","dependencies","brorand","sendToken","isNonStandardEthChain","isSimpleSendOnNonStandardNetwork","blockGasLimit","MIN_GAS_LIMIT_HEX","GAS_LIMITS","BASE_TOKEN_ESTIMATE","paramsForGasEstimate","getAssetTransferData","toAddress","amount","isContractAddress","_contractUtils","readAddressAsContract","eth","SIMPLE","_Numeric","Numeric","times","round","_bignumber","ROUND_DOWN","toPrefixedHexString","bufferMultiplier","CHAIN_ID_TO_GAS_LIMIT_BUFFER_MAP","estimatedGasLimit","estimateWithBuffer","addGasBuffer","sendState","_draftTransaction$fro","_draftTransaction$sen","_draftTransaction$fro2","_draftTransaction$fro3","draftTransaction","draftTransactions","currentTransactionUUID","fromAccount","sendAsset","AssetType","token","details","generateERC20TransferData","recipient","NFT","standard","TokenStandard","ERC721","generateERC721TransferData","generateERC1155TransferData","native","userInputHexData","eip1559support","TransactionEnvelopeType","legacy","accountAddress","contract","_humanStandardTokenAbi","at","usersToken","balanceOf","_transactionsControllerUtils","calcTokenAmount","_draftTransaction$sen2","_draftTransaction$rec","receiveAsset","gasPriceEstimate","gasPriceInDecGwei","gasPriceAsNumber","getGasPriceInHexWei","_swaps","_util","_common","_swaps2","addAdjustedReturnToQuotes","quotes","destinationAsset","medium","maybeGasFee","gasFee1559","suggestedMaxFeePerGas","gasPriceNon1559","getUsedSwapsGasPrice","contractExchangeRates","getTokenExchangeRates","getConfirmationExchangeRates","mergedRates","destinationAddress","toChecksumAddress","destToNativeConversionRate","fetchTokenExchangeRates","quote","_quote$approvalNeeded","totalGasLimit","gasParams","maxGas","approvalNeeded","gasPriceInNative","EtherDenomination","GWEI","toDenomination","adjustAmountReceivedInNative","destinationAmount","SWAPS_CHAINID_DEFAULT_TOKEN_MAP","minus","calculateBestQuote","quotesArray","best","assetType","clearPreviousDrafts","getUnapprovedTransactions","getTargetAccount","prevSwapAndSendInput","amountMode","draftTxParams","addNewDraft","draftTransactionInitialState","history","AMOUNT_MODES","MAX","updateAmountMode","updateAmountToMax","updateSendQuote","updateSendAmount","getAddressBookEntryOrAccountName","updateSendAsset","initialAssetSet","_transaction2","tokenAmountInDec","_metamaskControllerUtils","getTokenValueParam","_tokenUtil","getTokenAddressParam","tokenAmountInHex","decimalToHex","getTokenIdParam","initializeSendState","_getCurrentDraftTrans4","getCurrentDraftTransaction","getSendAsset","isMainnet","getIsMainnet","showAdvancedGasFields","getAdvancedInlineGasShown","gasIsSetInModal","GAS_INPUT_MODES","CUSTOM","INLINE","BASIC","_getCurrentDraftTrans","_getCurrentDraftTrans2","_getCurrentDraftTrans3","gasTotal","_getSendAsset2","_getSendAsset3","isERC721","_getCurrentDraftTrans6","INSUFFICIENT_FUNDS_ERROR","recipientMode","RECIPIENT_SEARCH_MODES","MY_ACCOUNTS","gasLimitMinimum","recipientInput","_getCurrentDraftTrans8","recipientWarningAcknowledged","_getCurrentDraftTrans5","_getSendAsset","_getCurrentDraftTrans9","_getCurrentDraftTrans10","gasFee","_getRecipient","getRecipient","swapsBlockedTokens","gasTotalForLayer1","SEND_STATUSES","INVALID","SEND_STAGES","INACTIVE","showLoadingIndication","addHistoryEntry","_domains","updateRecipientUserInput","updateRecipient","validateRecipientUserInput","hideLoadingIndication","resetSendState","gasEstimatePollToken","gasFeeStopPollingByPollingToken","removePollingTokenFromAppState","_getCurrentDraftTrans7","isSwapAndSend","_helpers","getIsDraftSwapAndSend","quotesAsArray","bestQuote","trade","generateTransactionParams","prevSwapAndSendData","setPrevSwapAndSend","EDIT","transactionType","RECIPIENT_TYPES","SMART_CONTRACT","TransactionType","contractInteraction","simpleSend","tokenMethodTransferFrom","tokenMethodSafeTransferFrom","tokenMethodTransfer","_draftTransaction$sen7","_draftTransaction$rec7","_draftTransaction$rec8","_draftTransaction$rec9","_draftTransaction$sen8","_draftTransaction$sen9","unapprovedSendTx","rejectPendingApproval","_ethRpcErrors","ethErrors","userRejectedRequest","NATIVE_CURRENCY_DECIMALS","sourceTokenSymbol","destinationTokenSymbol","destinationTokenDecimals","destinationTokenAddress","sourceTokenDecimals","swapTokenValue","toBase","shiftedBy","swapAndSendRecipient","sourceTokenAddress","sourceTokenAmount","sourceAmount","destinationTokenAmount","meta","swapAndSend","approvalTxId","addTransactionAndWaitForPublish","requireApproval","swapApproval","swaps","hasApproveTx","swapAndSendTxId","sendFlowHistory","setDefaultHomeActiveTabName","_routes","DEFAULT_ROUTE","basicSendTxId","addTransactionAndRouteToConfirmationPage","CONFIRM_TRANSACTION_ROUTE","_confirmTransaction","setMaxValueMode","_unapprovedTx$sendFlo","unapprovedTxs","unapprovedTx","eip1559OnlyTxParamsToUpdate","userEditedGasLimit","originalGasEstimate","editingTx","updateTransactionSendFlowHistory","updateEditableParams","asset","skipComputeEstimatedGasLimit","INPUT","updateGasFees","manuallyEdited","hexData","updateUserInputHexData","updateRecipientSearchMode","CONTACT_LIST","_uuid","_send2","_transactions","_errorKeys","_time","_swapAndSendUtils","RECENT_REQUEST_ERROR","FETCH_DELAY","SECOND","ADD_RECIPIENT","DRAFT","VALID","wasManuallyEdited","isSwapQuoteLoading","swapQuotesError","swapQuotesLatestRequestTimestamp","timeToFetchQuotes","disabledSwapAndSendNetworks","gasEstimateIsLoading","computeEstimatedGasLimit","createAsyncThunk","thunkApi","_transaction$dappSugg","getIsNonStandardEthChain","getSelectedInternalAccountWithBalance","getLayer1GasFee","transactionParams","dappSuggestedGasFees","_draftTransaction$rec2","estimateGasLimitForSend","chainHasChanged","getCurrentNetworkEIP1559Compatibility","getSelectedAccount","rejectWithValue","gasFeeStartPollingByNetworkClientId","addPollingTokenToAppState","getRoundedGasPrice","getSender","getIsSwapsChain","getUseExternalServices","fetchBlockedTokens","getDisabledSwapAndSendNetworksFromAPI","calcGasTotal","useTokenDetection","getUseTokenDetection","tokenAddressList","getTokenList","latestFetchTime","fetchSwapAndSendQuotes","requestTimestamp","_draftTransaction$rec4","_quotes","_draftTransaction$rec3","getSwapAndSendQuotes","sourceToken","destinationToken","SWAPS_QUOTES_ERROR","SWAPS_NO_QUOTES","v4","entry","calculateGasTotal","caseReducers","validateAmountField","validateGasField","validateSendState","multiplier","_gasTotal","lessThanOrEqualTo","updateAsset","isReceived","targetAsset","CONTRACT_ADDRESS_ERROR","updateGasFeeEstimates","suggestedMaxPriorityFeePerGas","isAutomaticUpdate","updateGasLimit","updateLayer1Fees","updateRecipientWarning","updateRecipientType","updateDraftTransactionStatus","acknowledgeRecipientWarning","useCustomGas","useDefaultGas","amountValue","ERC1155","NEGATIVE_OR_ZERO_AMOUNT_TOKENS_ERROR","isERC1155BalanceSufficient","tokenBalance","isFloat","FLOAT_TOKENS_ERROR","isTokenBalanceSufficient","INSUFFICIENT_TOKENS_ERROR","isBalanceSufficient","isInsufficientWithoutGas","INSUFFICIENT_FUNDS_FOR_GAS_ERROR","insufficientFunds","_draftTransaction$sen3","isProbablyAnAssetContract","isBurnAddress","isPossibleAddress","isValidHexAddress","mixedCaseUseChecksum","INVALID_RECIPIENT_ADDRESS_ERROR","isOriginContractAddress","checkExistingAddresses","KNOWN_RECIPIENT_ADDRESS_WARNING","_draftTransaction$sen4","_draftTransaction$sen5","_draftTransaction$rec5","_draftTransaction$rec6","_bestQuote$gasParams","getIsIgnorableAmountError","derivedGasPrice","divide","lessThan","zeroAddress","ACCOUNT_CHANGED","ADDRESS_BOOK_UPDATED","_addressBook$draftTra","CLEAR_SWAP_AND_SEND_STATE","pending","GAS_FEE_ESTIMATES_UPDATED","_action$meta","isRefreshingQuotes","SELECTED_ACCOUNT_CHANGED","scannedAddress","allowNonPrefixed","debouncedValidateRecipientUserInput","debounce","userInput","debouncedComputeEstimatedGasLimit","debouncedAddHistoryEntry","isComputingSendGasLimit","isComputingSendGasLimitUrgent","_sendState$draftTrans","currentTime","nicknameFromAddressBookEntryOrAccountName","sendingAddress","tokenMap","inputIsValidHexAddress","isSmartContractAddress","getTokenMetadata","getTokenStandardAndDetails","hexAmount","decimalAmount","logAmount","_draftTransaction$sen6","providedDetails","_STANDARD_TO_REQUIRED","missingProperty","ERC20","property","_balance$providedDeta","hexBalance","getBalancesInSingleCall","showModal","INVALID_ASSET_TYPE","isCurrentOwner","isNftOwner","err","displayWarning","getCurrentTransactionUUID","getBestQuote","getSendLayer1GasFee","getIsNativeSendPossible","baseGasTotal","nativeBalance","_getSelectedInternalA","draft","checksummedAddress","toChecksumHexAddress","ensResolutionsByAddress","getEnsResolutionByAddress","getIsSwapAndSendDisabledForNetwork","_state$name","getSendAnalyticProperties","nativeCurrencySymbol","_draftTransaction$sen10","_draftTransaction$rec10","_draftTransaction$rec11","_draftTransaction$sen11","_draftTransaction$rec12","_draftTransaction$sen12","NATIVE_CURRENCY_ADDRESS","userInputTokenAmount","is_swap_and_send","chain_id","token_amount_source","token_amount_dest_estimate","token_symbol_source","token_symbol_destination","token_address_source","token_address_destination","results_count","quotes_load_time_ms","aggregator_list","aggregator","aggregator_recommended","analyticsError","blockedChains","featureFlagResponse","fetchSwapsFeatureFlags","ALLOWED_PROD_SWAPS_CHAIN_IDS","_featureFlagResponse$","getNetworkNameByChainId","slippage","SWAP_AND_SEND_SLIPPAGE","queryString","URLSearchParams","BASE_URL","SWAPS_API_VERSION","tradesResponse","_fetchWithCache","fetchOptions","SWAPS_CLIENT_ID","cacheOptions","cacheRefreshTime","functionName","_swapsUtils","validateData","QUOTE_VALIDATORS","constructedTrade","addHexPrefixToObjectValues","validator","isNumber","validHex","truthyString","approvalTx","truthyDigitString","SWAPS_API_V2_BASE_URL","uuid","cancelSmartTransaction","isFeatureFlagLoaded","errorObj","parseSmartTransactionsError","setCurrentSmartTransactionsError","average","getSwapGasPriceEstimateData","customGasPrice","getSwapsCustomizationModalPrice","WEI","greaterThan","_selectors2","_metametrics","_app","GAS_PRICES_LOADING_STATES","INITIAL","FAILED","COMPLETED","aggregatorMetadata","approveTxId","tradeTxId","balanceError","fetchingQuotes","fromToken","fromTokenInputValue","fromTokenError","maxSlippage","Slippage","quotesFetchStartTime","reviewSwapClickedTimestamp","topAssets","toToken","customGas","priceEstimates","fallBackPrice","currentSmartTransactionsError","swapsSTXLoading","transactionSettingsOpened","latestAddedTokenTo","swapsSlice","clearSwapsState","navigatedBackToBuildQuote","retriedGetQuotes","setAggregatorMetadata","setBalanceError","setFetchingQuotes","setLatestAddedTokenTo","setFromToken","setFromTokenInputValue","setFromTokenError","setIsFeatureFlagLoaded","setMaxSlippage","setQuotesFetchStartTime","setReviewSwapClickedTimestamp","setTopAssets","setToToken","swapCustomGasModalClosed","swapCustomGasModalPriceEdited","swapCustomGasModalLimitEdited","swapGasPriceEstimatesFetchStarted","swapGasPriceEstimatesFetchFailed","swapGasPriceEstimatesFetchCompleted","retrievedFallbackSwapsGasPrice","errorType","StxErrorTypes","unavailable","setSwapsSTXSubmitLoading","setTransactionSettingsOpened","getAggregatorMetadata","getBalanceError","getFromToken","getFromTokenError","getFromTokenInputValue","getIsFeatureFlagLoaded","getSwapsSTXLoading","getMaxSlippage","getTopAssets","getToToken","getFetchingQuotes","getLatestAddedTokenTo","getQuotesFetchStartTime","getReviewSwapClickedTimestamp","getSwapsCustomizationModalLimit","swapGasPriceEstimateIsLoading","swapGasEstimateLoadingHasFailed","getSwapsFallbackGasPrice","getCurrentSmartTransactionsError","getTransactionSettingsOpened","getSwapsState","swapsState","getSwapsFeatureIsLive","swapsFeatureIsLive","getSmartTransactionsError","getSmartTransactionsErrorMessageDismissed","getCurrentSmartTransactionsEnabled","smartTransactionsEnabled","getSmartTransactionsEnabled","getSwapRedesignEnabled","_state$metamask$swaps","swapRedesign","swapsFeatureFlags","extensionActive","getSwapsQuoteRefreshTime","swapsQuoteRefreshTime","getSwapsQuotePrefetchingRefreshTime","swapsQuotePrefetchingRefreshTime","getBackgroundSwapRouteState","routeState","getCustomSwapsGas","customMaxGas","getCustomSwapsGasPrice","getCustomMaxFeePerGas","customMaxFeePerGas","getCustomMaxPriorityFeePerGas","customMaxPriorityFeePerGas","getSwapsUserFeeLevel","swapsUserFeeLevel","getFetchParams","fetchParams","getQuotes","getQuotesLastFetched","quotesLastFetched","getSelectedQuote","selectedAggId","getSwapsErrorKey","_getSwapsState","errorKey","getShowQuoteLoadingScreen","showQuoteLoadingScreen","getSwapsTokens","getSwapsWelcomeMessageSeenStatus","swapsWelcomeMessageHasBeenShown","getTopQuote","topAggId","getApproveTxId","getTradeTxId","getUsedQuote","getDestinationTokenInfo","_getFetchParams","metaData","destinationTokenInfo","getApproveTxParams","_getSwapsState2","customApproveTxData","getCurrentSmartTransactions","_state$metamask$smart","smartTransactionsState","smartTransactions","getPendingSmartTransactions","currentSmartTransactions","stx","SmartTransactionStatus","getSmartTransactionFees","_state$metamask$smart2","getSmartTransactionEstimatedGas","_state$metamask$smart3","estimatedGas","getSwapsNetworkConfig","swapsStxGetTransactionsRefreshTime","swapsStxBatchStatusRefreshTime","swapsStxStatusDeadline","swapsStxMaxFeeMultiplier","quoteRefreshTime","quotePrefetchingRefreshTime","stxGetTransactionsRefreshTime","stxBatchStatusRefreshTime","stxStatusDeadline","stxMaxFeeMultiplier","setSwapToToken","setSwapQuotesFetchStartTime","setSwapsFromToken","navigateBackToBuildQuote","setBackgroundSwapRouteState","BUILD_QUOTE_ROUTE","prepareForRetryGetQuotes","resetSwapsPostFetchState","prepareToLeaveSwaps","resetBackgroundSwapsState","swapsQuoteSelected","aggId","setSelectedQuoteAggId","setSwapsTxGasLimit","fetchAndSetSwapsGasPriceInfo","basicEstimates","fetchMetaSwapsGasPriceEstimates","fast","setSwapsTxGasPrice","fetchSwapsLivenessAndFeatureFlags","swapsLivenessForNetwork","setSwapsFeatureFlags","ALLOWED_SMART_TRANSACTIONS_CHAIN_IDS","fetchSmartTransactionsLiveness","IN_PROGRESS_TRANSACTION_STATUSES","regularTxPending","disableStxIfRegularTxInProgress","getTransactions","searchCriteria","getSwapsLivenessForNetwork","setSwapsLiveness","fetchQuotesAndSetQuoteState","inputValue","trackEvent","pageRedirectionDisabled","_fetchParams$metaData","_fetchParams$metaData2","_fetchParams$metaData3","SWAPS_MAINTENANCE_ROUTE","swapsDefaultToken","getSwapsDefaultToken","fetchParamsFromToken","sourceTokenInfo","selectedFromToken","selectedToToken","fromTokenAddress","fromTokenSymbol","fromTokenDecimals","iconUrl","fromTokenIconUrl","fromTokenBalance","toTokenAddress","toTokenSymbol","toTokenDecimals","toTokenIconUrl","LOADING_QUOTES_ROUTE","addToken","gt","swapsTokens","hardwareWalletUsed","isHardwareWallet","hardwareWalletType","getHardwareWalletType","getSmartTransactionsOptInStatus","currentSmartTransactionsEnabled","category","MetaMetricsEventCategory","Swaps","sensitiveProperties","token_from","token_from_amount","token_to","request_type","custom_slippage","is_hardware_wallet","hardware_wallet_type","stx_enabled","current_stx_enabled","stx_user_opt_in","anonymizedData","_Object$values","fetchStartTime","fetchAndSetQuotesPromise","fetchAndSetQuotes","sourceDecimals","accountBalance","gasPriceFetchPromise","fetchedQuotes","setSwapsErrorKey","QUOTES_NOT_AVAILABLE_ERROR","_Object$values2","newSelectedQuote","tokenToAmountToString","token_to_amount","response_time","best_quote_source","available_quotes","setInitialGasEstimate","SWAPS_FETCH_ORDER_CONFLICT","debug","ERROR_FETCHING_QUOTES","signAndSendSwapsSmartTransaction","unsignedTransaction","additionalTrackingParams","_getTopQuote","_getQuotes","_getTopQuote2","_getTopQuote3","_usedQuote$savings","_usedQuote$savings2","_usedQuote$savings3","_usedQuote$savings4","usedQuote","swapsNetworkConfig","setSmartTransactionsRefreshInterval","usedTradeTxParams","destinationValue","toPrecision","swapMetaData","other_quote_selected","other_quote_selected_source","average_savings","savings","performance_savings","performance","fee_savings","fee","median_metamask_fee","medianMetaMaskFee","isContractAddressValid","captureMessage","extra","contract_address","SWAP_FAILED_ERROR","SWAPS_ERROR_ROUTE","approveTxParams","approvalTxUuid","updatedApproveTxParams","_fees$tradeTxFees","fetchSwapsSmartTransactionFees","fallbackOnNotEnoughFunds","_fees$approvalTxFees","approvalTxFees","signAndSendSmartTransaction","smartTransactionFees","tradeTxFees","updateSmartTransaction","ORIGIN_METAMASK","swap","SMART_TRANSACTION_STATUS_ROUTE","fetchSwapsGasPrices","_e$message","ethQuery","gasPriceInDecGWEI","hexWEIToDecGWEI","networkGasPriceError","fetchSmartTransactionFees","notEnoughFunds","signAndSendTransactions","_usedQuote$approvalNe","_getTopQuote4","_getQuotes2","_getTopQuote5","_getTopQuote6","_usedQuote$savings5","_usedQuote$savings6","_usedQuote$savings7","_usedQuote$savings8","customSwapsGas","stopPollingForQuotes","AWAITING_SWAP_ROUTE","fastGasEstimate","baseAndPriorityFeePerGas","decEstimatedBaseFee","high","estimatedBaseFee","addHexes","gasEstimate","maxGasLimit","calculateMaxGasLimit","gasMultiplier","usedGasPrice","usdConversionRate","getUSDConversionRate","usedGasLimitEstimate","gasEstimateWithRefund","averageGas","totalGasLimitEstimate","plus","gasEstimateTotalInUSD","gas_fees","estimated_gas","suggested_gas_price","used_gas_price","max_fee_per_gas","max_priority_fee_per_gas","base_and_priority_fee_per_gas","MetaMetricsEventName","SwapStarted","finalApproveTxMeta","AWAITING_SIGNATURES_ROUTE","_finalApproveTxMeta","CONTRACT_DATA_DISABLED_ERROR","forceUpdateMetamaskState","METAMETRICS_SETTINGS_LINK","SUPPORT_REQUEST_LINK","CONTRACT_ADDRESS_LINK","PASSWORD_MIN_LENGTH","OUTDATED_BROWSER_VERSIONS","chrome","edge","firefox","opera","BROKEN_PRERENDER_BROWSER_VERSIONS","FIXED_PRERENDER_BROWSER_VERSIONS","windows","macos","TypographyVariant","FLEX_DIRECTION","ROW","ROW_REVERSE","COLUMN","COLUMN_REVERSE","FLEX_WRAP","WRAP","WRAP_REVERSE","NO_WRAP","DISPLAY","BLOCK","FLEX","GRID","INLINE_BLOCK","INLINE_FLEX","INLINE_GRID","LIST_ITEM","NONE","FRACTIONS","HALF","ONE_THIRD","TWO_THIRDS","ONE_FOURTH","TWO_FOURTHS","THREE_FOURTHS","ONE_FIFTH","TWO_FIFTHS","THREE_FIFTHS","FOUR_FIFTHS","ONE_SIXTH","TWO_SIXTHS","THREE_SIXTHS","FOUR_SIXTHS","FIVE_SIXTHS","ONE_TWELFTH","TWO_TWELFTHS","THREE_TWELFTHS","FOUR_TWELFTHS","FIVE_TWELFTHS","SIX_TWELFTHS","SEVEN_TWELFTHS","EIGHT_TWELFTHS","NINE_TWELFTHS","TEN_TWELFTHS","ELEVEN_TWELFTHS","BLOCK_SIZES","SCREEN","MIN","FULL","TEXT_ALIGN","LEFT","CENTER","RIGHT","JUSTIFY","END","START","TextTransform","TEXT_TRANSFORM","UPPERCASE","LOWERCASE","CAPITALIZE","FONT_WEIGHT","BOLD","MEDIUM","NORMAL","OverflowWrap","OVERFLOW_WRAP","BREAK_WORD","ANYWHERE","FontStyle","FONT_STYLE","ITALIC","SEVERITIES","DANGER","WARNING","INFO","SUCCESS","BREAKPOINTS","INSUFFICIENT_FUNDS_ERROR_KEY","GAS_LIMIT_TOO_LOW_ERROR_KEY","TRANSACTION_ERROR_KEY","ETH_GAS_PRICE_FETCH_WARNING_KEY","GAS_PRICE_FETCH_FAILURE_ERROR_KEY","GAS_PRICE_EXCESSIVE_ERROR_KEY","UNSENDABLE_ASSET_ERROR_KEY","INSUFFICIENT_FUNDS_FOR_GAS_ERROR_KEY","IS_SIGNING_OR_SUBMITTING","USER_OP_CONTRACT_DEPLOY_ERROR_KEY","NOTIFICATIONS_EXPIRATION_DELAY","PRIVACY_POLICY_DATE","UNLOCK_ROUTE","LOCK_ROUTE","ASSET_ROUTE","SETTINGS_ROUTE","GENERAL_ROUTE","ADVANCED_ROUTE","EXPERIMENTAL_ROUTE","DEVELOPER_OPTIONS_ROUTE","SECURITY_ROUTE","ABOUT_US_ROUTE","ALERTS_ROUTE","NETWORKS_ROUTE","NETWORKS_FORM_ROUTE","ADD_NETWORK_ROUTE","ADD_POPULAR_CUSTOM_NETWORK","CONTACT_LIST_ROUTE","CONTACT_EDIT_ROUTE","CONTACT_ADD_ROUTE","CONTACT_VIEW_ROUTE","REVEAL_SEED_ROUTE","RESTORE_VAULT_ROUTE","IMPORT_TOKEN_ROUTE","IMPORT_TOKENS_ROUTE","CONFIRM_IMPORT_TOKEN_ROUTE","CONFIRM_ADD_SUGGESTED_TOKEN_ROUTE","NEW_ACCOUNT_ROUTE","CONFIRM_ADD_SUGGESTED_NFT_ROUTE","CONNECT_HARDWARE_ROUTE","SEND_ROUTE","CONNECTIONS","PERMISSIONS","TOKEN_DETAILS","CONNECT_ROUTE","CONNECT_CONFIRM_PERMISSIONS_ROUTE","CONNECT_SNAPS_CONNECT_ROUTE","CONNECT_SNAP_INSTALL_ROUTE","CONNECT_SNAP_UPDATE_ROUTE","CONNECT_SNAP_RESULT_ROUTE","SNAPS_ROUTE","SNAPS_VIEW_ROUTE","NOTIFICATIONS_ROUTE","NOTIFICATIONS_SETTINGS_ROUTE","CONNECTED_ROUTE","CONNECTED_ACCOUNTS_ROUTE","PREPARE_SWAP_ROUTE","CROSS_CHAIN_SWAP_ROUTE","SWAPS_ROUTE","SWAPS_NOTIFICATION_ROUTE","VIEW_QUOTE_ROUTE","ONBOARDING_ROUTE","ONBOARDING_REVIEW_SRP_ROUTE","ONBOARDING_CONFIRM_SRP_ROUTE","ONBOARDING_CREATE_PASSWORD_ROUTE","ONBOARDING_COMPLETION_ROUTE","MMI_ONBOARDING_COMPLETION_ROUTE","ONBOARDING_UNLOCK_ROUTE","ONBOARDING_HELP_US_IMPROVE_ROUTE","ONBOARDING_IMPORT_WITH_SRP_ROUTE","ONBOARDING_SECURE_YOUR_WALLET_ROUTE","ONBOARDING_PRIVACY_SETTINGS_ROUTE","ONBOARDING_PIN_EXTENSION_ROUTE","ONBOARDING_WELCOME_ROUTE","ONBOARDING_METAMETRICS","CONFIRM_SEND_ETHER_PATH","CONFIRM_SEND_TOKEN_PATH","CONFIRM_DEPLOY_CONTRACT_PATH","CONFIRM_APPROVE_PATH","CONFIRM_SET_APPROVAL_FOR_ALL_PATH","CONFIRM_TRANSFER_FROM_PATH","CONFIRM_SAFE_TRANSFER_FROM_PATH","CONFIRM_TOKEN_METHOD_PATH","CONFIRM_INCREASE_ALLOWANCE_PATH","SIGNATURE_REQUEST_PATH","DECRYPT_MESSAGE_REQUEST_PATH","ENCRYPTION_PUBLIC_KEY_REQUEST_PATH","CONFIRMATION_V_NEXT_ROUTE","PATH_NAME_MAP","SURVEY_DATE","SURVEY_GMT","SURVEY_START_HOUR","SURVEY_END_HOUR","SURVEY_START_TIME","SURVEY_END_TIME","keccak256","pack","keccak256_1","regexBytes","regexNumber","regexArray","Zeros","_pack","zeroPad","toTwos","baseType_1","result_1","tight","PENDING_STATUS_HASH","TransactionStatus","unapproved","approved","submitted","PRIORITY_STATUS_HASH","confirmed","TOKEN_CATEGORY_HASH","tokenMethodApprove","tokenMethodSetApprovalForAll","tokenMethodIncreaseAllowance"],"mappings":"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,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,kEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,sEAIAP,IAAA,CACAc,IAAA,EACAP,OAAA,CACA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,iEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEA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","file":"../metamask/common-9.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { IconName, Icon, IconSize, Text } from '..';\nimport {\n  AlignItems,\n  Display,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n  BorderRadius,\n  BackgroundColor,\n  IconColor,\n} from '../../../helpers/constants/design-system';\nimport type { PolymorphicRef } from '../box';\nimport type { TextProps } from '../text';\nimport {\n  ButtonBaseProps,\n  ButtonBaseSize,\n  ButtonBaseComponent,\n} from './button-base.types';\n\nexport const ButtonBase: ButtonBaseComponent = React.forwardRef(\n  <C extends React.ElementType = 'button' | 'a'>(\n    {\n      as,\n      block,\n      children,\n      className = '',\n      href,\n      ellipsis = false,\n      externalLink,\n      size = ButtonBaseSize.Md,\n      startIconName,\n      startIconProps,\n      endIconName,\n      endIconProps,\n      loading,\n      disabled,\n      iconLoadingProps,\n      textProps,\n      color = TextColor.textDefault,\n      iconColor = IconColor.iconDefault,\n      ...props\n    }: ButtonBaseProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const tag = href ? 'a' : as || 'button';\n    const tagProps = href && tag === 'a' ? { href, ...props } : props;\n\n    return (\n      <Text\n        as={tag}\n        backgroundColor={BackgroundColor.backgroundAlternative}\n        variant={TextVariant.bodyMdMedium}\n        color={loading ? TextColor.transparent : color}\n        ref={ref}\n        {...(tag === 'button' ? { disabled } : {})}\n        {...(href && externalLink\n          ? { target: '_blank', rel: 'noopener noreferrer' }\n          : {})}\n        padding={0}\n        paddingLeft={4}\n        paddingRight={4}\n        ellipsis={ellipsis}\n        className={classnames(\n          'mm-button-base',\n          {\n            [`mm-button-base--size-${size}`]:\n              Object.values(ButtonBaseSize).includes(size),\n            'mm-button-base--loading': loading || false,\n            'mm-button-base--disabled': disabled || false,\n            'mm-button-base--block': block || false,\n            'mm-button-base--ellipsis': ellipsis,\n          },\n          className,\n        )}\n        display={Display.InlineFlex}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        borderRadius={BorderRadius.pill}\n        {...(tagProps as TextProps<C>)}\n      >\n        {startIconName && (\n          <Icon\n            name={startIconName}\n            size={IconSize.Sm}\n            marginInlineEnd={1}\n            {...startIconProps}\n            color={loading ? IconColor.transparent : startIconProps?.color}\n          />\n        )}\n        {/*\n         * If children is a string and doesn't need truncation or loading\n         * prevent html bloat by rendering just the string\n         * otherwise render with wrapper to allow truncation or loading\n         */}\n        {typeof children === 'string' && !ellipsis && !loading ? (\n          children\n        ) : (\n          <Text\n            as=\"span\"\n            ellipsis={ellipsis}\n            variant={TextVariant.inherit}\n            color={loading ? TextColor.transparent : color}\n            {...textProps}\n          >\n            {children}\n          </Text>\n        )}\n        {endIconName && (\n          <Icon\n            name={endIconName}\n            size={IconSize.Sm}\n            marginInlineStart={1}\n            {...endIconProps}\n            color={loading ? IconColor.transparent : endIconProps?.color}\n          />\n        )}\n        {loading && (\n          <Icon\n            className=\"mm-button-base__icon-loading\"\n            name={IconName.Loading}\n            color={iconColor}\n            size={IconSize.Md}\n            {...iconLoadingProps}\n          />\n        )}\n      </Text>\n    );\n  },\n);\n","import { ReactNode } from 'react';\nimport type { PolymorphicComponentPropWithRef } from '../box';\nimport { IconColor } from '../../../helpers/constants/design-system';\nimport { TextDirection, TextProps, TextStyleUtilityProps } from '../text';\nimport { IconName } from '../icon';\nimport type { IconProps } from '../icon';\n\nexport enum ButtonBaseSize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\nexport type ValidButtonTagType = 'button' | 'a';\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface ButtonBaseStyleUtilityProps\n  extends Omit<TextStyleUtilityProps, 'as' | 'children' | 'ellipsis'> {\n  /**\n   * The polymorphic `as` prop allows you to change the root HTML element of the Button component between `button` and `a` tag\n   *\n   */\n  as?: ValidButtonTagType;\n  /**\n   * Boolean prop to quickly activate box prop display block\n   */\n  block?: boolean;\n  /**\n   * The children to be rendered inside the ButtonBase\n   */\n  children?: ReactNode;\n  /**\n   * Boolean to disable button\n   */\n  disabled?: boolean;\n  /**\n   * When an `href` prop is passed, ButtonBase will automatically change the root element to be an `a` (anchor) tag\n   */\n  href?: string;\n  /**\n   * Used for long strings that can be cut off...\n   */\n  ellipsis?: boolean;\n  /**\n   * Boolean indicating if the link targets external content, it will cause the link to open in a new tab\n   */\n  externalLink?: boolean;\n  /**\n   * Add icon to start (left side) of button text passing icon name\n   * The name of the icon to display. Should be one of IconName\n   */\n  startIconName?: IconName;\n  /**\n   * iconProps accepts all the props from Icon\n   */\n  startIconProps?: Partial<IconProps<'span'>>;\n  /**\n   * Add icon to end (right side) of button text passing icon name\n   * The name of the icon to display. Should be one of IconName\n   */\n  endIconName?: IconName;\n  /**\n   * iconProps accepts all the props from Icon\n   */\n  endIconProps?: Partial<IconProps<'span'>>;\n  /**\n   * iconLoadingProps accepts all the props from Icon\n   */\n  iconLoadingProps?: Partial<IconProps<'span'>>;\n  /**\n   * Boolean to show loading spinner in button\n   */\n  loading?: boolean;\n  /**\n   * The size of the ButtonBase.\n   * Possible values could be 'Size.SM'(32px), 'Size.MD'(40px), 'Size.LG'(48px),\n   */\n  size?: ButtonBaseSize;\n  /**\n   * textProps are additional props to pass to the Text component that wraps the button children\n   */\n  textProps?: TextProps<'span'>;\n  /**\n   * Specifies where to display the linked URL.\n   */\n  target?: string;\n  /**\n   * Specifies the relationship between the current document and\n   * the linked URL.\n   */\n  rel?: string;\n  /**\n   * Sets the color of the button icon.\n   */\n  iconColor?: IconColor;\n  /**\n   * Direction of the text content within the button (\"ltr\" or \"rtl\").\n   */\n  textDirection?: TextDirection;\n}\n\nexport type ButtonBaseProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ButtonBaseStyleUtilityProps>;\n\nexport type ButtonBaseComponent = <\n  C extends React.ElementType = 'button' | 'a',\n>(\n  props: ButtonBaseProps<C>,\n) => React.ReactElement | null;\n","export { ButtonBase } from './button-base';\nexport { ButtonBaseSize } from './button-base.types';\nexport type { ButtonBaseProps } from './button-base.types';\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  Display,\n  IconColor,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\n\nimport { Box, Icon } from '..';\nimport { IconSize } from '../icon';\nimport { BoxProps, PolymorphicRef } from '../box';\nimport {\n  ButtonIconSize,\n  ButtonIconProps,\n  ButtonIconComponent,\n} from './button-icon.types';\n\nconst buttonIconSizeToIconSize: Record<ButtonIconSize, IconSize> = {\n  [ButtonIconSize.Sm]: IconSize.Sm,\n  [ButtonIconSize.Md]: IconSize.Md,\n  [ButtonIconSize.Lg]: IconSize.Lg,\n};\n\nexport const ButtonIcon: ButtonIconComponent = React.forwardRef(\n  <C extends React.ElementType = 'button' | 'a'>(\n    {\n      ariaLabel,\n      as,\n      className = '',\n      color = IconColor.iconDefault,\n      href,\n      size = ButtonIconSize.Lg,\n      iconName,\n      disabled,\n      iconProps,\n      ...props\n    }: ButtonIconProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const tag = href ? 'a' : as || 'button';\n    const isDisabled = disabled && tag === 'button';\n    return (\n      <Box\n        aria-label={ariaLabel}\n        as={tag}\n        className={classnames(\n          'mm-button-icon',\n          `mm-button-icon--size-${String(size)}`,\n          {\n            'mm-button-icon--disabled': Boolean(disabled),\n          },\n          className,\n        )}\n        color={color}\n        {...(isDisabled ? { disabled: true } : {})} // only allow disabled attribute to be passed down to the Box when the as prop is equal to a button element\n        display={Display.InlineFlex}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        borderRadius={BorderRadius.LG}\n        backgroundColor={BackgroundColor.transparent}\n        {...(href ? { href } : {})}\n        ref={ref}\n        {...(props as BoxProps<C>)}\n      >\n        <Icon\n          name={iconName}\n          size={buttonIconSizeToIconSize[size]}\n          {...iconProps}\n        />\n      </Box>\n    );\n  },\n);\n","import { IconName, IconProps } from '../icon';\nimport { IconColor } from '../../../helpers/constants/design-system';\nimport { PolymorphicComponentPropWithRef, StyleUtilityProps } from '../box';\n\nexport enum ButtonIconSize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\n/**\n * Makes all props optional so that if a prop object is used not ALL required props need to be passed\n * TODO: Move to appropriate place in app as this will be highly reusable\n */\ntype MakePropsOptional<T> = {\n  [K in keyof T]?: T[K];\n};\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface ButtonIconStyleUtilityProps extends StyleUtilityProps {\n  /**\n   * String that adds an accessible name for ButtonIcon\n   */\n  ariaLabel: string;\n  /**\n   * The polymorphic `as` prop allows you to change the root HTML element of the Button component between `button` and `a` tag\n   */\n  as?: 'button' | 'a';\n  /**\n   * An additional className to apply to the ButtonIcon.\n   */\n  className?: string;\n  /**\n   * The color of the ButtonIcon component should use the IconColor object from\n   * ./ui/helpers/constants/design-system.js\n   */\n  color?: IconColor;\n  /**\n   * Boolean to disable button\n   */\n  disabled?: boolean;\n  /**\n   * When an `href` prop is passed, ButtonIcon will automatically change the root element to be an `a` (anchor) tag\n   */\n  href?: string;\n  /**\n   * The name of the icon to display. Should be one of IconName\n   */\n  iconName: IconName;\n  /**\n   * iconProps accepts all the props from Icon\n   */\n  iconProps?: MakePropsOptional<IconProps<'span'>>;\n  /**\n   * The size of the ButtonIcon.\n   * Possible values could be 'ButtonIconSize.Sm' 24px, 'ButtonIconSize.Lg' 32px,\n   */\n  size?: ButtonIconSize;\n}\n\nexport type ButtonIconProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ButtonIconStyleUtilityProps>;\n\nexport type ButtonIconComponent = <C extends React.ElementType = 'button'>(\n  props: ButtonIconProps<C>,\n) => React.ReactElement | null;\n","export { ButtonIcon } from './button-icon';\nexport { ButtonIconSize } from './button-icon.types';\nexport type { ButtonIconProps } from './button-icon.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { ButtonBase, IconSize } from '..';\nimport {\n  BackgroundColor,\n  Color,\n} from '../../../helpers/constants/design-system';\nimport type { PolymorphicRef } from '../box';\nimport type { ButtonBaseProps } from '../button-base';\nimport type { ButtonLinkProps } from './button-link.types';\nimport { ButtonLinkSize, ButtonLinkComponent } from './button-link.types';\n\nexport const ButtonLink: ButtonLinkComponent = React.forwardRef(\n  <C extends React.ElementType = 'button' | 'a'>(\n    {\n      className = '',\n      color,\n      danger = false,\n      disabled = false,\n      loading = false,\n      size = ButtonLinkSize.Auto,\n      endIconProps,\n      startIconProps,\n      ...props\n    }: ButtonLinkProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    return (\n      <ButtonBase\n        className={classnames(className, 'mm-button-link', {\n          'mm-button-link--type-danger': danger,\n          'mm-button-link--disabled': disabled,\n          'mm-button-link--loading': loading,\n          'mm-button-link--size-inherit': size === ButtonLinkSize.Inherit,\n          'mm-button-link--size-auto': size === ButtonLinkSize.Auto,\n        })}\n        paddingLeft={0}\n        paddingRight={0}\n        size={size === ButtonLinkSize.Inherit ? null : size}\n        backgroundColor={BackgroundColor.transparent}\n        color={color || (danger ? Color.errorDefault : Color.primaryDefault)}\n        borderRadius={null}\n        startIconProps={{\n          size:\n            size === ButtonLinkSize.Inherit ? IconSize.Inherit : IconSize.Sm,\n          ...startIconProps,\n          className:\n            size === ButtonLinkSize.Inherit\n              ? `mm-button-link--size-inherit__icon ${\n                  startIconProps?.className || ''\n                }`\n              : '',\n        }}\n        endIconProps={{\n          size:\n            size === ButtonLinkSize.Inherit ? IconSize.Inherit : IconSize.Sm,\n          ...endIconProps,\n          className:\n            size === ButtonLinkSize.Inherit\n              ? `mm-button-link--size-inherit__icon ${\n                  endIconProps?.className || ''\n                }`\n              : '',\n        }}\n        iconLoadingProps={{\n          size:\n            size === ButtonLinkSize.Inherit ? IconSize.Inherit : IconSize.Md,\n          color: color || (danger ? Color.errorDefault : Color.primaryDefault),\n        }}\n        ref={ref}\n        {...{ disabled, loading, ...(props as ButtonBaseProps<C>) }}\n      />\n    );\n  },\n);\n","import React from 'react';\n\nimport type { PolymorphicComponentPropWithRef } from '../box';\nimport type { ButtonBaseStyleUtilityProps } from '../button-base/button-base.types';\n\nexport enum ButtonLinkSize {\n  Auto = 'auto',\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n  Inherit = 'inherit',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface ButtonLinkStyleUtilityProps\n  extends Omit<ButtonBaseStyleUtilityProps, 'size'> {\n  /**\n   * Boolean to change button type to Danger when true\n   */\n  danger?: boolean;\n  /**\n   * Boolean to disable button\n   */\n  disabled?: boolean;\n  /**\n   * Boolean to show loading spinner in button\n   */\n  loading?: boolean;\n  /**\n   * Possible size values: 'ButtonLinkSize.Auto'(auto), 'ButtonLinkSize.Sm'(32px), 'ButtonLinkSize.Md'(40px), 'ButtonLinkSize.Lg'(48px), 'ButtonLinkSize.Inherit'(inherits parents font-size)\n   * Default value is 'ButtonLinkSize.Auto'.\n   */\n  size?: ButtonLinkSize;\n}\n\nexport type ButtonLinkProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ButtonLinkStyleUtilityProps>;\n\nexport type ButtonLinkComponent = <\n  C extends React.ElementType = 'button' | 'a',\n>(\n  props: ButtonLinkProps<C>,\n) => React.ReactElement | null;\n","export { ButtonLink } from './button-link';\nexport { ButtonLinkSize } from './button-link.types';\nexport type { ButtonLinkProps } from './button-link.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { ButtonBase } from '../button-base';\nimport {\n  BackgroundColor,\n  IconColor,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport type { PolymorphicRef } from '../box';\nimport type { ButtonBaseProps } from '../button-base';\nimport type { ButtonPrimaryProps } from './button-primary.types';\nimport {\n  ButtonPrimarySize,\n  ButtonPrimaryComponent,\n} from './button-primary.types';\n\nexport const ButtonPrimary: ButtonPrimaryComponent = React.forwardRef(\n  <C extends React.ElementType = 'button' | 'a'>(\n    {\n      className = '',\n      danger = false,\n      disabled = false,\n      size = ButtonPrimarySize.Md,\n      ...props\n    }: ButtonPrimaryProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    return (\n      <ButtonBase\n        backgroundColor={\n          danger ? BackgroundColor.errorDefault : BackgroundColor.primaryDefault\n        }\n        color={danger ? TextColor.errorInverse : TextColor.primaryInverse}\n        className={classnames(className, 'mm-button-primary', {\n          'mm-button-primary--type-danger': danger,\n          'mm-button-primary--disabled': disabled,\n        })}\n        iconLoadingProps={{\n          color: danger ? IconColor.errorInverse : IconColor.primaryInverse,\n        }}\n        size={size}\n        ref={ref}\n        data-theme=\"light\"\n        {...{ disabled, ...(props as ButtonBaseProps<C>) }}\n      />\n    );\n  },\n);\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseProvider = exports.Resolver = exports.Event = void 0;\nvar abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nvar base64_1 = require(\"@ethersproject/base64\");\nvar basex_1 = require(\"@ethersproject/basex\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar constants_1 = require(\"@ethersproject/constants\");\nvar hash_1 = require(\"@ethersproject/hash\");\nvar networks_1 = require(\"@ethersproject/networks\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar sha2_1 = require(\"@ethersproject/sha2\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar web_1 = require(\"@ethersproject/web\");\nvar bech32_1 = __importDefault(require(\"bech32\"));\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar formatter_1 = require(\"./formatter\");\nvar MAX_CCIP_REDIRECTS = 10;\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if ((0, bytes_1.hexDataLength)(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map(function (topic) {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            var unique_1 = {};\n            topic.forEach(function (topic) {\n                unique_1[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            var sorted = Object.keys(unique_1);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map(function (topic) {\n        if (topic === \"\") {\n            return [];\n        }\n        var comps = topic.split(\"|\").map(function (topic) {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if ((0, bytes_1.hexDataLength)(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (abstract_provider_1.ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nvar PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nvar Event = /** @class */ (function () {\n    function Event(tag, listener, once) {\n        (0, properties_1.defineReadOnly)(this, \"tag\", tag);\n        (0, properties_1.defineReadOnly)(this, \"listener\", listener);\n        (0, properties_1.defineReadOnly)(this, \"once\", once);\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n    Object.defineProperty(Event.prototype, \"event\", {\n        get: function () {\n            switch (this.type) {\n                case \"tx\":\n                    return this.hash;\n                case \"filter\":\n                    return this.filter;\n            }\n            return this.tag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Event.prototype, \"type\", {\n        get: function () {\n            return this.tag.split(\":\")[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Event.prototype, \"hash\", {\n        get: function () {\n            var comps = this.tag.split(\":\");\n            if (comps[0] !== \"tx\") {\n                return null;\n            }\n            return comps[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Event.prototype, \"filter\", {\n        get: function () {\n            var comps = this.tag.split(\":\");\n            if (comps[0] !== \"filter\") {\n                return null;\n            }\n            var address = comps[1];\n            var topics = deserializeTopics(comps[2]);\n            var filter = {};\n            if (topics.length > 0) {\n                filter.topics = topics;\n            }\n            if (address && address !== \"*\") {\n                filter.address = address;\n            }\n            return filter;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Event.prototype.pollable = function () {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    };\n    return Event;\n}());\nexports.Event = Event;\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nvar coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return basex_1.Base58.encode((0, bytes_1.concat)([data, (0, bytes_1.hexDataSlice)((0, sha2_1.sha256)((0, sha2_1.sha256)(data)), 0, 4)]));\n}\nvar matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nvar matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result, start) {\n    try {\n        return (0, strings_1.toUtf8String)(_parseBytes(result, start));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    var offset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, start, start + 32)).toNumber();\n    var length = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, offset, offset + 32)).toNumber();\n    return (0, bytes_1.hexDataSlice)(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return \"https://gateway.ipfs.io/ipfs/\" + link;\n}\nfunction numPad(value) {\n    var result = (0, bytes_1.arrayify)(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    var padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    var result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    var result = [];\n    var byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (var i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n    for (var i = 0; i < datas.length; i++) {\n        var data = (0, bytes_1.arrayify)(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return (0, bytes_1.hexConcat)(result);\n}\nvar Resolver = /** @class */ (function () {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    function Resolver(provider, address, name, resolvedAddress) {\n        (0, properties_1.defineReadOnly)(this, \"provider\", provider);\n        (0, properties_1.defineReadOnly)(this, \"name\", name);\n        (0, properties_1.defineReadOnly)(this, \"address\", provider.formatter.address(address));\n        (0, properties_1.defineReadOnly)(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    Resolver.prototype.supportsWildcard = function () {\n        var _this = this;\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then(function (result) {\n                return bignumber_1.BigNumber.from(result).eq(1);\n            }).catch(function (error) {\n                if (error.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                    return false;\n                }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                _this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n        return this._supportsEip2544;\n    };\n    Resolver.prototype._fetch = function (selector, parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tx, parseBytes, result, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tx = {\n                            to: this.address,\n                            ccipReadEnabled: true,\n                            data: (0, bytes_1.hexConcat)([selector, (0, hash_1.namehash)(this.name), (parameters || \"0x\")])\n                        };\n                        parseBytes = false;\n                        return [4 /*yield*/, this.supportsWildcard()];\n                    case 1:\n                        if (_a.sent()) {\n                            parseBytes = true;\n                            // selector(\"resolve(bytes,bytes)\")\n                            tx.data = (0, bytes_1.hexConcat)([\"0x9061b923\", encodeBytes([(0, hash_1.dnsEncode)(this.name), tx.data])]);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.provider.call(tx)];\n                    case 3:\n                        result = _a.sent();\n                        if (((0, bytes_1.arrayify)(result).length % 32) === 4) {\n                            logger.throwError(\"resolver threw error\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                transaction: tx, data: result\n                            });\n                        }\n                        if (parseBytes) {\n                            result = _parseBytes(result, 0);\n                        }\n                        return [2 /*return*/, result];\n                    case 4:\n                        error_1 = _a.sent();\n                        if (error_1.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                            return [2 /*return*/, null];\n                        }\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Resolver.prototype._fetchBytes = function (selector, parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetch(selector, parameters)];\n                    case 1:\n                        result = _a.sent();\n                        if (result != null) {\n                            return [2 /*return*/, _parseBytes(result, 0)];\n                        }\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    Resolver.prototype._getAddress = function (coinType, hexBytes) {\n        var coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(\"unsupported coin type: \" + coinType, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getAddress(\" + coinType + \")\"\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        var bytes = (0, bytes_1.arrayify)(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            var p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                var length_1 = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length_1 * 2 && length_1 >= 1 && length_1 <= 75) {\n                    return base58Encode((0, bytes_1.concat)([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            var p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                var length_2 = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length_2 * 2 && length_2 >= 1 && length_2 <= 75) {\n                    return base58Encode((0, bytes_1.concat)([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            var length_3 = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            var version_1 = bytes[0];\n            if (version_1 === 0x00) {\n                if (length_3 !== 20 && length_3 !== 32) {\n                    version_1 = -1;\n                }\n            }\n            else {\n                version_1 = -1;\n            }\n            if (version_1 >= 0 && bytes.length === 2 + length_3 && length_3 >= 1 && length_3 <= 75) {\n                var words = bech32_1.default.toWords(bytes.slice(2));\n                words.unshift(version_1);\n                return bech32_1.default.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    };\n    Resolver.prototype.getAddress = function (coinType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, error_2, hexBytes, address;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (coinType == null) {\n                            coinType = 60;\n                        }\n                        if (!(coinType === 60)) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._fetch(\"0x3b3b57de\")];\n                    case 2:\n                        result = _a.sent();\n                        // No address\n                        if (result === \"0x\" || result === constants_1.HashZero) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, this.provider.formatter.callAddress(result)];\n                    case 3:\n                        error_2 = _a.sent();\n                        if (error_2.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                            return [2 /*return*/, null];\n                        }\n                        throw error_2;\n                    case 4: return [4 /*yield*/, this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType))];\n                    case 5:\n                        hexBytes = _a.sent();\n                        // No address\n                        if (hexBytes == null || hexBytes === \"0x\") {\n                            return [2 /*return*/, null];\n                        }\n                        address = this._getAddress(coinType, hexBytes);\n                        if (address == null) {\n                            logger.throwError(\"invalid or unsupported coin data\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"getAddress(\" + coinType + \")\",\n                                coinType: coinType,\n                                data: hexBytes\n                            });\n                        }\n                        return [2 /*return*/, address];\n                }\n            });\n        });\n    };\n    Resolver.prototype.getAvatar = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var linkage, avatar, i, match, scheme, _a, selector, owner, _b, comps, addr, tokenId, tokenOwner, _c, _d, balance, _e, _f, tx, metadataUrl, _g, metadata, imageUrl, ipfs, error_3;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        linkage = [{ type: \"name\", content: this.name }];\n                        _h.label = 1;\n                    case 1:\n                        _h.trys.push([1, 19, , 20]);\n                        return [4 /*yield*/, this.getText(\"avatar\")];\n                    case 2:\n                        avatar = _h.sent();\n                        if (avatar == null) {\n                            return [2 /*return*/, null];\n                        }\n                        i = 0;\n                        _h.label = 3;\n                    case 3:\n                        if (!(i < matchers.length)) return [3 /*break*/, 18];\n                        match = avatar.match(matchers[i]);\n                        if (match == null) {\n                            return [3 /*break*/, 17];\n                        }\n                        scheme = match[1].toLowerCase();\n                        _a = scheme;\n                        switch (_a) {\n                            case \"https\": return [3 /*break*/, 4];\n                            case \"data\": return [3 /*break*/, 5];\n                            case \"ipfs\": return [3 /*break*/, 6];\n                            case \"erc721\": return [3 /*break*/, 7];\n                            case \"erc1155\": return [3 /*break*/, 7];\n                        }\n                        return [3 /*break*/, 17];\n                    case 4:\n                        linkage.push({ type: \"url\", content: avatar });\n                        return [2 /*return*/, { linkage: linkage, url: avatar }];\n                    case 5:\n                        linkage.push({ type: \"data\", content: avatar });\n                        return [2 /*return*/, { linkage: linkage, url: avatar }];\n                    case 6:\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return [2 /*return*/, { linkage: linkage, url: getIpfsLink(avatar) }];\n                    case 7:\n                        selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n                        _b = this._resolvedAddress;\n                        if (_b) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.getAddress()];\n                    case 8:\n                        _b = (_h.sent());\n                        _h.label = 9;\n                    case 9:\n                        owner = (_b);\n                        comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, this.provider.formatter.address(comps[0])];\n                    case 10:\n                        addr = _h.sent();\n                        tokenId = (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(comps[1]).toHexString(), 32);\n                        if (!(scheme === \"erc721\")) return [3 /*break*/, 12];\n                        _d = (_c = this.provider.formatter).callAddress;\n                        return [4 /*yield*/, this.provider.call({\n                                to: addr, data: (0, bytes_1.hexConcat)([\"0x6352211e\", tokenId])\n                            })];\n                    case 11:\n                        tokenOwner = _d.apply(_c, [_h.sent()]);\n                        if (owner !== tokenOwner) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"owner\", content: tokenOwner });\n                        return [3 /*break*/, 14];\n                    case 12:\n                        if (!(scheme === \"erc1155\")) return [3 /*break*/, 14];\n                        _f = (_e = bignumber_1.BigNumber).from;\n                        return [4 /*yield*/, this.provider.call({\n                                to: addr, data: (0, bytes_1.hexConcat)([\"0x00fdd58e\", (0, bytes_1.hexZeroPad)(owner, 32), tokenId])\n                            })];\n                    case 13:\n                        balance = _f.apply(_e, [_h.sent()]);\n                        if (balance.isZero()) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"balance\", content: balance.toString() });\n                        _h.label = 14;\n                    case 14:\n                        tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: (0, bytes_1.hexConcat)([selector, tokenId])\n                        };\n                        _g = _parseString;\n                        return [4 /*yield*/, this.provider.call(tx)];\n                    case 15:\n                        metadataUrl = _g.apply(void 0, [_h.sent(), 0]);\n                        if (metadataUrl == null) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                        return [4 /*yield*/, (0, web_1.fetchJson)(metadataUrl)];\n                    case 16:\n                        metadata = _h.sent();\n                        if (!metadata) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                        imageUrl = metadata.image;\n                        if (typeof (imageUrl) !== \"string\") {\n                            return [2 /*return*/, null];\n                        }\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        }\n                        else {\n                            ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                return [2 /*return*/, null];\n                            }\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n                        linkage.push({ type: \"url\", content: imageUrl });\n                        return [2 /*return*/, { linkage: linkage, url: imageUrl }];\n                    case 17:\n                        i++;\n                        return [3 /*break*/, 3];\n                    case 18: return [3 /*break*/, 20];\n                    case 19:\n                        error_3 = _h.sent();\n                        return [3 /*break*/, 20];\n                    case 20: return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    Resolver.prototype.getContentHash = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var hexBytes, ipfs, length_4, ipns, length_5, swarm, skynet, urlSafe_1, hash;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetchBytes(\"0xbc1c58d1\")];\n                    case 1:\n                        hexBytes = _a.sent();\n                        // No contenthash\n                        if (hexBytes == null || hexBytes === \"0x\") {\n                            return [2 /*return*/, null];\n                        }\n                        ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n                        if (ipfs) {\n                            length_4 = parseInt(ipfs[3], 16);\n                            if (ipfs[4].length === length_4 * 2) {\n                                return [2 /*return*/, \"ipfs:/\\/\" + basex_1.Base58.encode(\"0x\" + ipfs[1])];\n                            }\n                        }\n                        ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n                        if (ipns) {\n                            length_5 = parseInt(ipns[3], 16);\n                            if (ipns[4].length === length_5 * 2) {\n                                return [2 /*return*/, \"ipns:/\\/\" + basex_1.Base58.encode(\"0x\" + ipns[1])];\n                            }\n                        }\n                        swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n                        if (swarm) {\n                            if (swarm[1].length === (32 * 2)) {\n                                return [2 /*return*/, \"bzz:/\\/\" + swarm[1]];\n                            }\n                        }\n                        skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n                        if (skynet) {\n                            if (skynet[1].length === (34 * 2)) {\n                                urlSafe_1 = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                                hash = (0, base64_1.encode)(\"0x\" + skynet[1]).replace(/[=+\\/]/g, function (a) { return (urlSafe_1[a]); });\n                                return [2 /*return*/, \"sia:/\\/\" + hash];\n                            }\n                        }\n                        return [2 /*return*/, logger.throwError(\"invalid or unsupported content hash data\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"getContentHash()\",\n                                data: hexBytes\n                            })];\n                }\n            });\n        });\n    };\n    Resolver.prototype.getText = function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var keyBytes, hexBytes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        keyBytes = (0, strings_1.toUtf8Bytes)(key);\n                        // The nodehash consumes the first slot, so the string pointer targets\n                        // offset 64, with the length at offset 64 and data starting at offset 96\n                        keyBytes = (0, bytes_1.concat)([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n                        // Pad to word-size (32 bytes)\n                        if ((keyBytes.length % 32) !== 0) {\n                            keyBytes = (0, bytes_1.concat)([keyBytes, (0, bytes_1.hexZeroPad)(\"0x\", 32 - (key.length % 32))]);\n                        }\n                        return [4 /*yield*/, this._fetchBytes(\"0x59d1d43c\", (0, bytes_1.hexlify)(keyBytes))];\n                    case 1:\n                        hexBytes = _a.sent();\n                        if (hexBytes == null || hexBytes === \"0x\") {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, (0, strings_1.toUtf8String)(hexBytes)];\n                }\n            });\n        });\n    };\n    return Resolver;\n}());\nexports.Resolver = Resolver;\nvar defaultFormatter = null;\nvar nextPollId = 1;\nvar BaseProvider = /** @class */ (function (_super) {\n    __extends(BaseProvider, _super);\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    function BaseProvider(network) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this) || this;\n        // Events being listened to\n        _this._events = [];\n        _this._emitted = { block: -2 };\n        _this.disableCcipRead = false;\n        _this.formatter = _newTarget.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        (0, properties_1.defineReadOnly)(_this, \"anyNetwork\", (network === \"any\"));\n        if (_this.anyNetwork) {\n            network = _this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            _this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch(function (error) { });\n            // Trigger initial network setting (async)\n            _this._ready().catch(function (error) { });\n        }\n        else {\n            var knownNetwork = (0, properties_1.getStatic)(_newTarget, \"getNetwork\")(network);\n            if (knownNetwork) {\n                (0, properties_1.defineReadOnly)(_this, \"_network\", knownNetwork);\n                _this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        _this._maxInternalBlockNumber = -1024;\n        _this._lastBlockNumber = -2;\n        _this._maxFilterBlockRange = 10;\n        _this._pollingInterval = 4000;\n        _this._fastQueryDate = 0;\n        return _this;\n    }\n    BaseProvider.prototype._ready = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var network, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this._network == null)) return [3 /*break*/, 7];\n                        network = null;\n                        if (!this._networkPromise) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._networkPromise];\n                    case 2:\n                        network = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_4 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (!(network == null)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.detectNetwork()];\n                    case 5:\n                        network = _a.sent();\n                        _a.label = 6;\n                    case 6:\n                        // This should never happen; every Provider sub-class should have\n                        // suggested a network by here (or have thrown).\n                        if (!network) {\n                            logger.throwError(\"no network detected\", logger_1.Logger.errors.UNKNOWN_ERROR, {});\n                        }\n                        // Possible this call stacked so do not call defineReadOnly again\n                        if (this._network == null) {\n                            if (this.anyNetwork) {\n                                this._network = network;\n                            }\n                            else {\n                                (0, properties_1.defineReadOnly)(this, \"_network\", network);\n                            }\n                            this.emit(\"network\", network, null);\n                        }\n                        _a.label = 7;\n                    case 7: return [2 /*return*/, this._network];\n                }\n            });\n        });\n    };\n    Object.defineProperty(BaseProvider.prototype, \"ready\", {\n        // This will always return the most recently established network.\n        // For \"any\", this can change (a \"network\" event is emitted before\n        // any change is reflected); otherwise this cannot change\n        get: function () {\n            var _this = this;\n            return (0, web_1.poll)(function () {\n                return _this._ready().then(function (network) {\n                    return network;\n                }, function (error) {\n                    // If the network isn't running yet, we will wait\n                    if (error.code === logger_1.Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                        return undefined;\n                    }\n                    throw error;\n                });\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // @TODO: Remove this and just create a singleton formatter\n    BaseProvider.getFormatter = function () {\n        if (defaultFormatter == null) {\n            defaultFormatter = new formatter_1.Formatter();\n        }\n        return defaultFormatter;\n    };\n    // @TODO: Remove this and just use getNetwork\n    BaseProvider.getNetwork = function (network) {\n        return (0, networks_1.getNetwork)((network == null) ? \"homestead\" : network);\n    };\n    BaseProvider.prototype.ccipReadFetch = function (tx, calldata, urls) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sender, data, errorMessages, i, url, href, json, result, errorMessage;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.disableCcipRead || urls.length === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        sender = tx.to.toLowerCase();\n                        data = calldata.toLowerCase();\n                        errorMessages = [];\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < urls.length)) return [3 /*break*/, 4];\n                        url = urls[i];\n                        href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n                        json = (url.indexOf(\"{data}\") >= 0) ? null : JSON.stringify({ data: data, sender: sender });\n                        return [4 /*yield*/, (0, web_1.fetchJson)({ url: href, errorPassThrough: true }, json, function (value, response) {\n                                value.status = response.statusCode;\n                                return value;\n                            })];\n                    case 2:\n                        result = _a.sent();\n                        if (result.data) {\n                            return [2 /*return*/, result.data];\n                        }\n                        errorMessage = (result.message || \"unknown error\");\n                        // 4xx indicates the result is not present; stop\n                        if (result.status >= 400 && result.status < 500) {\n                            return [2 /*return*/, logger.throwError(\"response not found during CCIP fetch: \" + errorMessage, logger_1.Logger.errors.SERVER_ERROR, { url: url, errorMessage: errorMessage })];\n                        }\n                        // 5xx indicates server issue; try the next url\n                        errorMessages.push(errorMessage);\n                        _a.label = 3;\n                    case 3:\n                        i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, logger.throwError(\"error encountered during CCIP fetch: \" + errorMessages.map(function (m) { return JSON.stringify(m); }).join(\", \"), logger_1.Logger.errors.SERVER_ERROR, {\n                            urls: urls,\n                            errorMessages: errorMessages\n                        })];\n                }\n            });\n        });\n    };\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    BaseProvider.prototype._getInternalBlockNumber = function (maxAge) {\n        return __awaiter(this, void 0, void 0, function () {\n            var internalBlockNumber, result, error_5, reqTime, checkInternalBlockNumber;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ready()];\n                    case 1:\n                        _a.sent();\n                        if (!(maxAge > 0)) return [3 /*break*/, 7];\n                        _a.label = 2;\n                    case 2:\n                        if (!this._internalBlockNumber) return [3 /*break*/, 7];\n                        internalBlockNumber = this._internalBlockNumber;\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, internalBlockNumber];\n                    case 4:\n                        result = _a.sent();\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return [2 /*return*/, result.blockNumber];\n                        }\n                        // Too old; fetch a new value\n                        return [3 /*break*/, 7];\n                    case 5:\n                        error_5 = _a.sent();\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            return [3 /*break*/, 7];\n                        }\n                        return [3 /*break*/, 6];\n                    case 6: return [3 /*break*/, 2];\n                    case 7:\n                        reqTime = getTime();\n                        checkInternalBlockNumber = (0, properties_1.resolveProperties)({\n                            blockNumber: this.perform(\"getBlockNumber\", {}),\n                            networkError: this.getNetwork().then(function (network) { return (null); }, function (error) { return (error); })\n                        }).then(function (_a) {\n                            var blockNumber = _a.blockNumber, networkError = _a.networkError;\n                            if (networkError) {\n                                // Unremember this bad internal block number\n                                if (_this._internalBlockNumber === checkInternalBlockNumber) {\n                                    _this._internalBlockNumber = null;\n                                }\n                                throw networkError;\n                            }\n                            var respTime = getTime();\n                            blockNumber = bignumber_1.BigNumber.from(blockNumber).toNumber();\n                            if (blockNumber < _this._maxInternalBlockNumber) {\n                                blockNumber = _this._maxInternalBlockNumber;\n                            }\n                            _this._maxInternalBlockNumber = blockNumber;\n                            _this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                            return { blockNumber: blockNumber, reqTime: reqTime, respTime: respTime };\n                        });\n                        this._internalBlockNumber = checkInternalBlockNumber;\n                        // Swallow unhandled exceptions; if needed they are handled else where\n                        checkInternalBlockNumber.catch(function (error) {\n                            // Don't null the dead (rejected) fetch, if it has already been updated\n                            if (_this._internalBlockNumber === checkInternalBlockNumber) {\n                                _this._internalBlockNumber = null;\n                            }\n                        });\n                        return [4 /*yield*/, checkInternalBlockNumber];\n                    case 8: return [2 /*return*/, (_a.sent()).blockNumber];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.poll = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var pollId, runners, blockNumber, error_6, i;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        pollId = nextPollId++;\n                        runners = [];\n                        blockNumber = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + this.pollingInterval / 2)];\n                    case 2:\n                        blockNumber = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_6 = _a.sent();\n                        this.emit(\"error\", error_6);\n                        return [2 /*return*/];\n                    case 4:\n                        this._setFastBlockNumber(blockNumber);\n                        // Emit a poll event after we have the latest (fast) block number\n                        this.emit(\"poll\", pollId, blockNumber);\n                        // If the block has not changed, meh.\n                        if (blockNumber === this._lastBlockNumber) {\n                            this.emit(\"didPoll\", pollId);\n                            return [2 /*return*/];\n                        }\n                        // First polling cycle, trigger a \"block\" events\n                        if (this._emitted.block === -2) {\n                            this._emitted.block = blockNumber - 1;\n                        }\n                        if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                            logger.warn(\"network block skew detected; skipping block events (emitted=\" + this._emitted.block + \" blockNumber\" + blockNumber + \")\");\n                            this.emit(\"error\", logger.makeError(\"network block skew detected\", logger_1.Logger.errors.NETWORK_ERROR, {\n                                blockNumber: blockNumber,\n                                event: \"blockSkew\",\n                                previousBlockNumber: this._emitted.block\n                            }));\n                            this.emit(\"block\", blockNumber);\n                        }\n                        else {\n                            // Notify all listener for each block that has passed\n                            for (i = this._emitted.block + 1; i <= blockNumber; i++) {\n                                this.emit(\"block\", i);\n                            }\n                        }\n                        // The emitted block was updated, check for obsolete events\n                        if (this._emitted.block !== blockNumber) {\n                            this._emitted.block = blockNumber;\n                            Object.keys(this._emitted).forEach(function (key) {\n                                // The block event does not expire\n                                if (key === \"block\") {\n                                    return;\n                                }\n                                // The block we were at when we emitted this event\n                                var eventBlockNumber = _this._emitted[key];\n                                // We cannot garbage collect pending transactions or blocks here\n                                // They should be garbage collected by the Provider when setting\n                                // \"pending\" events\n                                if (eventBlockNumber === \"pending\") {\n                                    return;\n                                }\n                                // Evict any transaction hashes or block hashes over 12 blocks\n                                // old, since they should not return null anyways\n                                if (blockNumber - eventBlockNumber > 12) {\n                                    delete _this._emitted[key];\n                                }\n                            });\n                        }\n                        // First polling cycle\n                        if (this._lastBlockNumber === -2) {\n                            this._lastBlockNumber = blockNumber - 1;\n                        }\n                        // Find all transaction hashes we are waiting on\n                        this._events.forEach(function (event) {\n                            switch (event.type) {\n                                case \"tx\": {\n                                    var hash_2 = event.hash;\n                                    var runner = _this.getTransactionReceipt(hash_2).then(function (receipt) {\n                                        if (!receipt || receipt.blockNumber == null) {\n                                            return null;\n                                        }\n                                        _this._emitted[\"t:\" + hash_2] = receipt.blockNumber;\n                                        _this.emit(hash_2, receipt);\n                                        return null;\n                                    }).catch(function (error) { _this.emit(\"error\", error); });\n                                    runners.push(runner);\n                                    break;\n                                }\n                                case \"filter\": {\n                                    // We only allow a single getLogs to be in-flight at a time\n                                    if (!event._inflight) {\n                                        event._inflight = true;\n                                        // This is the first filter for this event, so we want to\n                                        // restrict events to events that happened no earlier than now\n                                        if (event._lastBlockNumber === -2) {\n                                            event._lastBlockNumber = blockNumber - 1;\n                                        }\n                                        // Filter from the last *known* event; due to load-balancing\n                                        // and some nodes returning updated block numbers before\n                                        // indexing events, a logs result with 0 entries cannot be\n                                        // trusted and we must retry a range which includes it again\n                                        var filter_1 = event.filter;\n                                        filter_1.fromBlock = event._lastBlockNumber + 1;\n                                        filter_1.toBlock = blockNumber;\n                                        // Prevent fitler ranges from growing too wild, since it is quite\n                                        // likely there just haven't been any events to move the lastBlockNumber.\n                                        var minFromBlock = filter_1.toBlock - _this._maxFilterBlockRange;\n                                        if (minFromBlock > filter_1.fromBlock) {\n                                            filter_1.fromBlock = minFromBlock;\n                                        }\n                                        if (filter_1.fromBlock < 0) {\n                                            filter_1.fromBlock = 0;\n                                        }\n                                        var runner = _this.getLogs(filter_1).then(function (logs) {\n                                            // Allow the next getLogs\n                                            event._inflight = false;\n                                            if (logs.length === 0) {\n                                                return;\n                                            }\n                                            logs.forEach(function (log) {\n                                                // Only when we get an event for a given block number\n                                                // can we trust the events are indexed\n                                                if (log.blockNumber > event._lastBlockNumber) {\n                                                    event._lastBlockNumber = log.blockNumber;\n                                                }\n                                                // Make sure we stall requests to fetch blocks and txs\n                                                _this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                                _this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                                _this.emit(filter_1, log);\n                                            });\n                                        }).catch(function (error) {\n                                            _this.emit(\"error\", error);\n                                            // Allow another getLogs (the range was not updated)\n                                            event._inflight = false;\n                                        });\n                                        runners.push(runner);\n                                    }\n                                    break;\n                                }\n                            }\n                        });\n                        this._lastBlockNumber = blockNumber;\n                        // Once all events for this loop have been processed, emit \"didPoll\"\n                        Promise.all(runners).then(function () {\n                            _this.emit(\"didPoll\", pollId);\n                        }).catch(function (error) { _this.emit(\"error\", error); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Deprecated; do not use this\n    BaseProvider.prototype.resetEventsBlock = function (blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    };\n    Object.defineProperty(BaseProvider.prototype, \"network\", {\n        get: function () {\n            return this._network;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    BaseProvider.prototype.detectNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, logger.throwError(\"provider does not support network detection\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"provider.detectNetwork\"\n                    })];\n            });\n        });\n    };\n    BaseProvider.prototype.getNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var network, currentNetwork, error;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ready()];\n                    case 1:\n                        network = _a.sent();\n                        return [4 /*yield*/, this.detectNetwork()];\n                    case 2:\n                        currentNetwork = _a.sent();\n                        if (!(network.chainId !== currentNetwork.chainId)) return [3 /*break*/, 5];\n                        if (!this.anyNetwork) return [3 /*break*/, 4];\n                        this._network = currentNetwork;\n                        // Reset all internal block number guards and caches\n                        this._lastBlockNumber = -2;\n                        this._fastBlockNumber = null;\n                        this._fastBlockNumberPromise = null;\n                        this._fastQueryDate = 0;\n                        this._emitted.block = -2;\n                        this._maxInternalBlockNumber = -1024;\n                        this._internalBlockNumber = null;\n                        // The \"network\" event MUST happen before this method resolves\n                        // so any events have a chance to unregister, so we stall an\n                        // additional event loop before returning from /this/ call\n                        this.emit(\"network\", currentNetwork, network);\n                        return [4 /*yield*/, stall(0)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/, this._network];\n                    case 4:\n                        error = logger.makeError(\"underlying network changed\", logger_1.Logger.errors.NETWORK_ERROR, {\n                            event: \"changed\",\n                            network: network,\n                            detectedNetwork: currentNetwork\n                        });\n                        this.emit(\"error\", error);\n                        throw error;\n                    case 5: return [2 /*return*/, network];\n                }\n            });\n        });\n    };\n    Object.defineProperty(BaseProvider.prototype, \"blockNumber\", {\n        get: function () {\n            var _this = this;\n            this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(function (blockNumber) {\n                _this._setFastBlockNumber(blockNumber);\n            }, function (error) { });\n            return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseProvider.prototype, \"polling\", {\n        get: function () {\n            return (this._poller != null);\n        },\n        set: function (value) {\n            var _this = this;\n            if (value && !this._poller) {\n                this._poller = setInterval(function () { _this.poll(); }, this.pollingInterval);\n                if (!this._bootstrapPoll) {\n                    this._bootstrapPoll = setTimeout(function () {\n                        _this.poll();\n                        // We block additional polls until the polling interval\n                        // is done, to prevent overwhelming the poll function\n                        _this._bootstrapPoll = setTimeout(function () {\n                            // If polling was disabled, something may require a poke\n                            // since starting the bootstrap poll and it was disabled\n                            if (!_this._poller) {\n                                _this.poll();\n                            }\n                            // Clear out the bootstrap so we can do another\n                            _this._bootstrapPoll = null;\n                        }, _this.pollingInterval);\n                    }, 0);\n                }\n            }\n            else if (!value && this._poller) {\n                clearInterval(this._poller);\n                this._poller = null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseProvider.prototype, \"pollingInterval\", {\n        get: function () {\n            return this._pollingInterval;\n        },\n        set: function (value) {\n            var _this = this;\n            if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n                throw new Error(\"invalid polling interval\");\n            }\n            this._pollingInterval = value;\n            if (this._poller) {\n                clearInterval(this._poller);\n                this._poller = setInterval(function () { _this.poll(); }, this._pollingInterval);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseProvider.prototype._getFastBlockNumber = function () {\n        var _this = this;\n        var now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then(function (blockNumber) {\n                if (_this._fastBlockNumber == null || blockNumber > _this._fastBlockNumber) {\n                    _this._fastBlockNumber = blockNumber;\n                }\n                return _this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    };\n    BaseProvider.prototype._setFastBlockNumber = function (blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    };\n    BaseProvider.prototype.waitForTransaction = function (transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null)];\n            });\n        });\n    };\n    BaseProvider.prototype._waitForTransaction = function (transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var receipt;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getTransactionReceipt(transactionHash)];\n                    case 1:\n                        receipt = _a.sent();\n                        // Receipt is already good\n                        if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                            return [2 /*return*/, receipt];\n                        }\n                        // Poll until the receipt is good...\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                var cancelFuncs = [];\n                                var done = false;\n                                var alreadyDone = function () {\n                                    if (done) {\n                                        return true;\n                                    }\n                                    done = true;\n                                    cancelFuncs.forEach(function (func) { func(); });\n                                    return false;\n                                };\n                                var minedHandler = function (receipt) {\n                                    if (receipt.confirmations < confirmations) {\n                                        return;\n                                    }\n                                    if (alreadyDone()) {\n                                        return;\n                                    }\n                                    resolve(receipt);\n                                };\n                                _this.on(transactionHash, minedHandler);\n                                cancelFuncs.push(function () { _this.removeListener(transactionHash, minedHandler); });\n                                if (replaceable) {\n                                    var lastBlockNumber_1 = replaceable.startBlock;\n                                    var scannedBlock_1 = null;\n                                    var replaceHandler_1 = function (blockNumber) { return __awaiter(_this, void 0, void 0, function () {\n                                        var _this = this;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    if (done) {\n                                                        return [2 /*return*/];\n                                                    }\n                                                    // Wait 1 second; this is only used in the case of a fault, so\n                                                    // we will trade off a little bit of latency for more consistent\n                                                    // results and fewer JSON-RPC calls\n                                                    return [4 /*yield*/, stall(1000)];\n                                                case 1:\n                                                    // Wait 1 second; this is only used in the case of a fault, so\n                                                    // we will trade off a little bit of latency for more consistent\n                                                    // results and fewer JSON-RPC calls\n                                                    _a.sent();\n                                                    this.getTransactionCount(replaceable.from).then(function (nonce) { return __awaiter(_this, void 0, void 0, function () {\n                                                        var mined, block, ti, tx, receipt_1, reason;\n                                                        return __generator(this, function (_a) {\n                                                            switch (_a.label) {\n                                                                case 0:\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    if (!(nonce <= replaceable.nonce)) return [3 /*break*/, 1];\n                                                                    lastBlockNumber_1 = blockNumber;\n                                                                    return [3 /*break*/, 9];\n                                                                case 1: return [4 /*yield*/, this.getTransaction(transactionHash)];\n                                                                case 2:\n                                                                    mined = _a.sent();\n                                                                    if (mined && mined.blockNumber != null) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    // First time scanning. We start a little earlier for some\n                                                                    // wiggle room here to handle the eventually consistent nature\n                                                                    // of blockchain (e.g. the getTransactionCount was for a\n                                                                    // different block)\n                                                                    if (scannedBlock_1 == null) {\n                                                                        scannedBlock_1 = lastBlockNumber_1 - 3;\n                                                                        if (scannedBlock_1 < replaceable.startBlock) {\n                                                                            scannedBlock_1 = replaceable.startBlock;\n                                                                        }\n                                                                    }\n                                                                    _a.label = 3;\n                                                                case 3:\n                                                                    if (!(scannedBlock_1 <= blockNumber)) return [3 /*break*/, 9];\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    return [4 /*yield*/, this.getBlockWithTransactions(scannedBlock_1)];\n                                                                case 4:\n                                                                    block = _a.sent();\n                                                                    ti = 0;\n                                                                    _a.label = 5;\n                                                                case 5:\n                                                                    if (!(ti < block.transactions.length)) return [3 /*break*/, 8];\n                                                                    tx = block.transactions[ti];\n                                                                    // Successfully mined!\n                                                                    if (tx.hash === transactionHash) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    if (!(tx.from === replaceable.from && tx.nonce === replaceable.nonce)) return [3 /*break*/, 7];\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    return [4 /*yield*/, this.waitForTransaction(tx.hash, confirmations)];\n                                                                case 6:\n                                                                    receipt_1 = _a.sent();\n                                                                    // Already resolved or rejected (prolly a timeout)\n                                                                    if (alreadyDone()) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    reason = \"replaced\";\n                                                                    if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                                        reason = \"repriced\";\n                                                                    }\n                                                                    else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                                        reason = \"cancelled\";\n                                                                    }\n                                                                    // Explain why we were replaced\n                                                                    reject(logger.makeError(\"transaction was replaced\", logger_1.Logger.errors.TRANSACTION_REPLACED, {\n                                                                        cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                                        reason: reason,\n                                                                        replacement: this._wrapTransaction(tx),\n                                                                        hash: transactionHash,\n                                                                        receipt: receipt_1\n                                                                    }));\n                                                                    return [2 /*return*/];\n                                                                case 7:\n                                                                    ti++;\n                                                                    return [3 /*break*/, 5];\n                                                                case 8:\n                                                                    scannedBlock_1++;\n                                                                    return [3 /*break*/, 3];\n                                                                case 9:\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    this.once(\"block\", replaceHandler_1);\n                                                                    return [2 /*return*/];\n                                                            }\n                                                        });\n                                                    }); }, function (error) {\n                                                        if (done) {\n                                                            return;\n                                                        }\n                                                        _this.once(\"block\", replaceHandler_1);\n                                                    });\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); };\n                                    if (done) {\n                                        return;\n                                    }\n                                    _this.once(\"block\", replaceHandler_1);\n                                    cancelFuncs.push(function () {\n                                        _this.removeListener(\"block\", replaceHandler_1);\n                                    });\n                                }\n                                if (typeof (timeout) === \"number\" && timeout > 0) {\n                                    var timer_1 = setTimeout(function () {\n                                        if (alreadyDone()) {\n                                            return;\n                                        }\n                                        reject(logger.makeError(\"timeout exceeded\", logger_1.Logger.errors.TIMEOUT, { timeout: timeout }));\n                                    }, timeout);\n                                    if (timer_1.unref) {\n                                        timer_1.unref();\n                                    }\n                                    cancelFuncs.push(function () { clearTimeout(timer_1); });\n                                }\n                            })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getBlockNumber = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._getInternalBlockNumber(0)];\n            });\n        });\n    };\n    BaseProvider.prototype.getGasPrice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.perform(\"getGasPrice\", {})];\n                    case 2:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getGasPrice\",\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getBalance = function (addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getBalance\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getBalance\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getTransactionCount = function (addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getTransactionCount\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result).toNumber()];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getTransactionCount\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getCode = function (addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getCode\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getCode\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getStorageAt = function (addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag),\n                                position: Promise.resolve(position).then(function (p) { return (0, bytes_1.hexValue)(p); })\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getStorageAt\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getStorageAt\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // This should be called by any subclass wrapping a TransactionResponse\n    BaseProvider.prototype._wrapTransaction = function (tx, hash, startBlock) {\n        var _this = this;\n        if (hash != null && (0, bytes_1.hexDataLength)(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        var result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", logger_1.Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = function (confirms, timeout) { return __awaiter(_this, void 0, void 0, function () {\n            var replacement, receipt;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (confirms == null) {\n                            confirms = 1;\n                        }\n                        if (timeout == null) {\n                            timeout = 0;\n                        }\n                        replacement = undefined;\n                        if (confirms !== 0 && startBlock != null) {\n                            replacement = {\n                                data: tx.data,\n                                from: tx.from,\n                                nonce: tx.nonce,\n                                to: tx.to,\n                                value: tx.value,\n                                startBlock: startBlock\n                            };\n                        }\n                        return [4 /*yield*/, this._waitForTransaction(tx.hash, confirms, timeout, replacement)];\n                    case 1:\n                        receipt = _a.sent();\n                        if (receipt == null && confirms === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        // No longer pending, allow the polling loop to garbage collect this\n                        this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n                        if (receipt.status === 0) {\n                            logger.throwError(\"transaction failed\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                transactionHash: tx.hash,\n                                transaction: tx,\n                                receipt: receipt\n                            });\n                        }\n                        return [2 /*return*/, receipt];\n                }\n            });\n        }); };\n        return result;\n    };\n    BaseProvider.prototype.sendTransaction = function (signedTransaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var hexTx, tx, blockNumber, hash, error_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.resolve(signedTransaction).then(function (t) { return (0, bytes_1.hexlify)(t); })];\n                    case 2:\n                        hexTx = _a.sent();\n                        tx = this.formatter.transaction(signedTransaction);\n                        if (tx.confirmations == null) {\n                            tx.confirmations = 0;\n                        }\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                    case 3:\n                        blockNumber = _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this.perform(\"sendTransaction\", { signedTransaction: hexTx })];\n                    case 5:\n                        hash = _a.sent();\n                        return [2 /*return*/, this._wrapTransaction(tx, hash, blockNumber)];\n                    case 6:\n                        error_7 = _a.sent();\n                        error_7.transaction = tx;\n                        error_7.transactionHash = tx.hash;\n                        throw error_7;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getTransactionRequest = function (transaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var values, tx, _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, transaction];\n                    case 1:\n                        values = _c.sent();\n                        tx = {};\n                        [\"from\", \"to\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? _this._getAddress(v) : null); });\n                        });\n                        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? bignumber_1.BigNumber.from(v) : null); });\n                        });\n                        [\"type\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return ((v != null) ? v : null); });\n                        });\n                        if (values.accessList) {\n                            tx.accessList = this.formatter.accessList(values.accessList);\n                        }\n                        [\"data\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? (0, bytes_1.hexlify)(v) : null); });\n                        });\n                        _b = (_a = this.formatter).transactionRequest;\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)(tx)];\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getFilter = function (filter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, filter];\n                    case 1:\n                        filter = _c.sent();\n                        result = {};\n                        if (filter.address != null) {\n                            result.address = this._getAddress(filter.address);\n                        }\n                        [\"blockHash\", \"topics\"].forEach(function (key) {\n                            if (filter[key] == null) {\n                                return;\n                            }\n                            result[key] = filter[key];\n                        });\n                        [\"fromBlock\", \"toBlock\"].forEach(function (key) {\n                            if (filter[key] == null) {\n                                return;\n                            }\n                            result[key] = _this._getBlockTag(filter[key]);\n                        });\n                        _b = (_a = this.formatter).filter;\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)(result)];\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._call = function (transaction, blockTag, attempt) {\n        return __awaiter(this, void 0, void 0, function () {\n            var txSender, result, data, sender, urls, urlsOffset, urlsLength, urlsData, u, url, calldata, callbackSelector, extraData, ccipResult, tx, error_8;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (attempt >= MAX_CCIP_REDIRECTS) {\n                            logger.throwError(\"CCIP read exceeded maximum redirections\", logger_1.Logger.errors.SERVER_ERROR, {\n                                redirects: attempt,\n                                transaction: transaction\n                            });\n                        }\n                        txSender = transaction.to;\n                        return [4 /*yield*/, this.perform(\"call\", { transaction: transaction, blockTag: blockTag })];\n                    case 1:\n                        result = _a.sent();\n                        if (!(attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && ((0, bytes_1.hexDataLength)(result) % 32 === 4))) return [3 /*break*/, 5];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        data = (0, bytes_1.hexDataSlice)(result, 4);\n                        sender = (0, bytes_1.hexDataSlice)(data, 0, 32);\n                        if (!bignumber_1.BigNumber.from(sender).eq(txSender)) {\n                            logger.throwError(\"CCIP Read sender did not match\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction: transaction,\n                                data: result\n                            });\n                        }\n                        urls = [];\n                        urlsOffset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 32, 64)).toNumber();\n                        urlsLength = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, urlsOffset, urlsOffset + 32)).toNumber();\n                        urlsData = (0, bytes_1.hexDataSlice)(data, urlsOffset + 32);\n                        for (u = 0; u < urlsLength; u++) {\n                            url = _parseString(urlsData, u * 32);\n                            if (url == null) {\n                                logger.throwError(\"CCIP Read contained corrupt URL string\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                    name: \"OffchainLookup\",\n                                    signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                    transaction: transaction,\n                                    data: result\n                                });\n                            }\n                            urls.push(url);\n                        }\n                        calldata = _parseBytes(data, 64);\n                        // Get the callbackSelector (bytes4)\n                        if (!bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 100, 128)).isZero()) {\n                            logger.throwError(\"CCIP Read callback selector included junk\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction: transaction,\n                                data: result\n                            });\n                        }\n                        callbackSelector = (0, bytes_1.hexDataSlice)(data, 96, 100);\n                        extraData = _parseBytes(data, 128);\n                        return [4 /*yield*/, this.ccipReadFetch(transaction, calldata, urls)];\n                    case 3:\n                        ccipResult = _a.sent();\n                        if (ccipResult == null) {\n                            logger.throwError(\"CCIP Read disabled or provided no URLs\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction: transaction,\n                                data: result\n                            });\n                        }\n                        tx = {\n                            to: txSender,\n                            data: (0, bytes_1.hexConcat)([callbackSelector, encodeBytes([ccipResult, extraData])])\n                        };\n                        return [2 /*return*/, this._call(tx, blockTag, attempt + 1)];\n                    case 4:\n                        error_8 = _a.sent();\n                        if (error_8.code === logger_1.Logger.errors.SERVER_ERROR) {\n                            throw error_8;\n                        }\n                        return [3 /*break*/, 5];\n                    case 5:\n                        try {\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"call\",\n                                    params: { transaction: transaction, blockTag: blockTag },\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.call = function (transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolved;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                transaction: this._getTransactionRequest(transaction),\n                                blockTag: this._getBlockTag(blockTag),\n                                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n                            })];\n                    case 2:\n                        resolved = _a.sent();\n                        return [2 /*return*/, this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1)];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.estimateGas = function (transaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                transaction: this._getTransactionRequest(transaction)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"estimateGas\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"estimateGas\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getAddress = function (addressOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, addressOrName];\n                    case 1:\n                        addressOrName = _a.sent();\n                        if (typeof (addressOrName) !== \"string\") {\n                            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n                        }\n                        return [4 /*yield*/, this.resolveName(addressOrName)];\n                    case 2:\n                        address = _a.sent();\n                        if (address == null) {\n                            logger.throwError(\"ENS name not configured\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"resolveName(\" + JSON.stringify(addressOrName) + \")\"\n                            });\n                        }\n                        return [2 /*return*/, address];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getBlock = function (blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blockNumber, params, _a, error_9;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _b.sent();\n                        return [4 /*yield*/, blockHashOrBlockTag];\n                    case 2:\n                        blockHashOrBlockTag = _b.sent();\n                        blockNumber = -128;\n                        params = {\n                            includeTransactions: !!includeTransactions\n                        };\n                        if (!(0, bytes_1.isHexString)(blockHashOrBlockTag, 32)) return [3 /*break*/, 3];\n                        params.blockHash = blockHashOrBlockTag;\n                        return [3 /*break*/, 6];\n                    case 3:\n                        _b.trys.push([3, 5, , 6]);\n                        _a = params;\n                        return [4 /*yield*/, this._getBlockTag(blockHashOrBlockTag)];\n                    case 4:\n                        _a.blockTag = _b.sent();\n                        if ((0, bytes_1.isHexString)(params.blockTag)) {\n                            blockNumber = parseInt(params.blockTag.substring(2), 16);\n                        }\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_9 = _b.sent();\n                        logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\n                            var block, blockNumber_1, i, tx, confirmations, blockWithTxs;\n                            var _this = this;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, this.perform(\"getBlock\", params)];\n                                    case 1:\n                                        block = _a.sent();\n                                        // Block was not found\n                                        if (block == null) {\n                                            // For blockhashes, if we didn't say it existed, that blockhash may\n                                            // not exist. If we did see it though, perhaps from a log, we know\n                                            // it exists, and this node is just not caught up yet.\n                                            if (params.blockHash != null) {\n                                                if (this._emitted[\"b:\" + params.blockHash] == null) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                            }\n                                            // For block tags, if we are asking for a future block, we return null\n                                            if (params.blockTag != null) {\n                                                if (blockNumber > this._emitted.block) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                            }\n                                            // Retry on the next block\n                                            return [2 /*return*/, undefined];\n                                        }\n                                        if (!includeTransactions) return [3 /*break*/, 8];\n                                        blockNumber_1 = null;\n                                        i = 0;\n                                        _a.label = 2;\n                                    case 2:\n                                        if (!(i < block.transactions.length)) return [3 /*break*/, 7];\n                                        tx = block.transactions[i];\n                                        if (!(tx.blockNumber == null)) return [3 /*break*/, 3];\n                                        tx.confirmations = 0;\n                                        return [3 /*break*/, 6];\n                                    case 3:\n                                        if (!(tx.confirmations == null)) return [3 /*break*/, 6];\n                                        if (!(blockNumber_1 == null)) return [3 /*break*/, 5];\n                                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                                    case 4:\n                                        blockNumber_1 = _a.sent();\n                                        _a.label = 5;\n                                    case 5:\n                                        confirmations = (blockNumber_1 - tx.blockNumber) + 1;\n                                        if (confirmations <= 0) {\n                                            confirmations = 1;\n                                        }\n                                        tx.confirmations = confirmations;\n                                        _a.label = 6;\n                                    case 6:\n                                        i++;\n                                        return [3 /*break*/, 2];\n                                    case 7:\n                                        blockWithTxs = this.formatter.blockWithTransactions(block);\n                                        blockWithTxs.transactions = blockWithTxs.transactions.map(function (tx) { return _this._wrapTransaction(tx); });\n                                        return [2 /*return*/, blockWithTxs];\n                                    case 8: return [2 /*return*/, this.formatter.block(block)];\n                                }\n                            });\n                        }); }, { oncePoll: this })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getBlock = function (blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    };\n    BaseProvider.prototype.getBlockWithTransactions = function (blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    };\n    BaseProvider.prototype.getTransaction = function (transactionHash) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, transactionHash];\n                    case 2:\n                        transactionHash = _a.sent();\n                        params = { transactionHash: this.formatter.hash(transactionHash, true) };\n                        return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\n                                var result, tx, blockNumber, confirmations;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, this.perform(\"getTransaction\", params)];\n                                        case 1:\n                                            result = _a.sent();\n                                            if (result == null) {\n                                                if (this._emitted[\"t:\" + transactionHash] == null) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                                return [2 /*return*/, undefined];\n                                            }\n                                            tx = this.formatter.transactionResponse(result);\n                                            if (!(tx.blockNumber == null)) return [3 /*break*/, 2];\n                                            tx.confirmations = 0;\n                                            return [3 /*break*/, 4];\n                                        case 2:\n                                            if (!(tx.confirmations == null)) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                                        case 3:\n                                            blockNumber = _a.sent();\n                                            confirmations = (blockNumber - tx.blockNumber) + 1;\n                                            if (confirmations <= 0) {\n                                                confirmations = 1;\n                                            }\n                                            tx.confirmations = confirmations;\n                                            _a.label = 4;\n                                        case 4: return [2 /*return*/, this._wrapTransaction(tx)];\n                                    }\n                                });\n                            }); }, { oncePoll: this })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getTransactionReceipt = function (transactionHash) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, transactionHash];\n                    case 2:\n                        transactionHash = _a.sent();\n                        params = { transactionHash: this.formatter.hash(transactionHash, true) };\n                        return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\n                                var result, receipt, blockNumber, confirmations;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, this.perform(\"getTransactionReceipt\", params)];\n                                        case 1:\n                                            result = _a.sent();\n                                            if (result == null) {\n                                                if (this._emitted[\"t:\" + transactionHash] == null) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                                return [2 /*return*/, undefined];\n                                            }\n                                            // \"geth-etc\" returns receipts before they are ready\n                                            if (result.blockHash == null) {\n                                                return [2 /*return*/, undefined];\n                                            }\n                                            receipt = this.formatter.receipt(result);\n                                            if (!(receipt.blockNumber == null)) return [3 /*break*/, 2];\n                                            receipt.confirmations = 0;\n                                            return [3 /*break*/, 4];\n                                        case 2:\n                                            if (!(receipt.confirmations == null)) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                                        case 3:\n                                            blockNumber = _a.sent();\n                                            confirmations = (blockNumber - receipt.blockNumber) + 1;\n                                            if (confirmations <= 0) {\n                                                confirmations = 1;\n                                            }\n                                            receipt.confirmations = confirmations;\n                                            _a.label = 4;\n                                        case 4: return [2 /*return*/, receipt];\n                                    }\n                                });\n                            }); }, { oncePoll: this })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getLogs = function (filter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, logs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({ filter: this._getFilter(filter) })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getLogs\", params)];\n                    case 3:\n                        logs = _a.sent();\n                        logs.forEach(function (log) {\n                            if (log.removed == null) {\n                                log.removed = false;\n                            }\n                        });\n                        return [2 /*return*/, formatter_1.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getEtherPrice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this.perform(\"getEtherPrice\", {})];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getBlockTag = function (blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blockNumber;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, blockTag];\n                    case 1:\n                        blockTag = _a.sent();\n                        if (!(typeof (blockTag) === \"number\" && blockTag < 0)) return [3 /*break*/, 3];\n                        if (blockTag % 1) {\n                            logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                        }\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                    case 2:\n                        blockNumber = _a.sent();\n                        blockNumber += blockTag;\n                        if (blockNumber < 0) {\n                            blockNumber = 0;\n                        }\n                        return [2 /*return*/, this.formatter.blockTag(blockNumber)];\n                    case 3: return [2 /*return*/, this.formatter.blockTag(blockTag)];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getResolver = function (name) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentName, addr, resolver, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        currentName = name;\n                        _b.label = 1;\n                    case 1:\n                        if (!true) return [3 /*break*/, 6];\n                        if (currentName === \"\" || currentName === \".\") {\n                            return [2 /*return*/, null];\n                        }\n                        // Optimization since the eth node cannot change and does\n                        // not have a wildcard resolver\n                        if (name !== \"eth\" && currentName === \"eth\") {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, this._getResolver(currentName, \"getResolver\")];\n                    case 2:\n                        addr = _b.sent();\n                        if (!(addr != null)) return [3 /*break*/, 5];\n                        resolver = new Resolver(this, addr, name);\n                        _a = currentName !== name;\n                        if (!_a) return [3 /*break*/, 4];\n                        return [4 /*yield*/, resolver.supportsWildcard()];\n                    case 3:\n                        _a = !(_b.sent());\n                        _b.label = 4;\n                    case 4:\n                        // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                        if (_a) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, resolver];\n                    case 5:\n                        // Get the parent node\n                        currentName = currentName.split(\".\").slice(1).join(\".\");\n                        return [3 /*break*/, 1];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getResolver = function (name, operation) {\n        return __awaiter(this, void 0, void 0, function () {\n            var network, addrData, error_10;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (operation == null) {\n                            operation = \"ENS\";\n                        }\n                        return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        network = _a.sent();\n                        // No ENS...\n                        if (!network.ensAddress) {\n                            logger.throwError(\"network does not support ENS\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: operation, network: network.name });\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.call({\n                                to: network.ensAddress,\n                                data: (\"0x0178b8bf\" + (0, hash_1.namehash)(name).substring(2))\n                            })];\n                    case 3:\n                        addrData = _a.sent();\n                        return [2 /*return*/, this.formatter.callAddress(addrData)];\n                    case 4:\n                        error_10 = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.resolveName = function (name) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, name];\n                    case 1:\n                        name = _a.sent();\n                        // If it is already an address, nothing to resolve\n                        try {\n                            return [2 /*return*/, Promise.resolve(this.formatter.address(name))];\n                        }\n                        catch (error) {\n                            // If is is a hexstring, the address is bad (See #694)\n                            if ((0, bytes_1.isHexString)(name)) {\n                                throw error;\n                            }\n                        }\n                        if (typeof (name) !== \"string\") {\n                            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n                        }\n                        return [4 /*yield*/, this.getResolver(name)];\n                    case 2:\n                        resolver = _a.sent();\n                        if (!resolver) {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, resolver.getAddress()];\n                    case 3: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.lookupAddress = function (address) {\n        return __awaiter(this, void 0, void 0, function () {\n            var node, resolverAddr, name, _a, addr;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, address];\n                    case 1:\n                        address = _b.sent();\n                        address = this.formatter.address(address);\n                        node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                        return [4 /*yield*/, this._getResolver(node, \"lookupAddress\")];\n                    case 2:\n                        resolverAddr = _b.sent();\n                        if (resolverAddr == null) {\n                            return [2 /*return*/, null];\n                        }\n                        _a = _parseString;\n                        return [4 /*yield*/, this.call({\n                                to: resolverAddr,\n                                data: (\"0x691f3431\" + (0, hash_1.namehash)(node).substring(2))\n                            })];\n                    case 3:\n                        name = _a.apply(void 0, [_b.sent(), 0]);\n                        return [4 /*yield*/, this.resolveName(name)];\n                    case 4:\n                        addr = _b.sent();\n                        if (addr != address) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, name];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getAvatar = function (nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver, address, node, resolverAddress, avatar_1, error_11, name_1, _a, error_12, avatar;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        resolver = null;\n                        if (!(0, bytes_1.isHexString)(nameOrAddress)) return [3 /*break*/, 10];\n                        address = this.formatter.address(nameOrAddress);\n                        node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                        return [4 /*yield*/, this._getResolver(node, \"getAvatar\")];\n                    case 1:\n                        resolverAddress = _b.sent();\n                        if (!resolverAddress) {\n                            return [2 /*return*/, null];\n                        }\n                        // Try resolving the avatar against the addr.reverse resolver\n                        resolver = new Resolver(this, resolverAddress, node);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, resolver.getAvatar()];\n                    case 3:\n                        avatar_1 = _b.sent();\n                        if (avatar_1) {\n                            return [2 /*return*/, avatar_1.url];\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_11 = _b.sent();\n                        if (error_11.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\n                            throw error_11;\n                        }\n                        return [3 /*break*/, 5];\n                    case 5:\n                        _b.trys.push([5, 8, , 9]);\n                        _a = _parseString;\n                        return [4 /*yield*/, this.call({\n                                to: resolverAddress,\n                                data: (\"0x691f3431\" + (0, hash_1.namehash)(node).substring(2))\n                            })];\n                    case 6:\n                        name_1 = _a.apply(void 0, [_b.sent(), 0]);\n                        return [4 /*yield*/, this.getResolver(name_1)];\n                    case 7:\n                        resolver = _b.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        error_12 = _b.sent();\n                        if (error_12.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\n                            throw error_12;\n                        }\n                        return [2 /*return*/, null];\n                    case 9: return [3 /*break*/, 12];\n                    case 10: return [4 /*yield*/, this.getResolver(nameOrAddress)];\n                    case 11:\n                        // ENS name; forward lookup with wildcard\n                        resolver = _b.sent();\n                        if (!resolver) {\n                            return [2 /*return*/, null];\n                        }\n                        _b.label = 12;\n                    case 12: return [4 /*yield*/, resolver.getAvatar()];\n                    case 13:\n                        avatar = _b.sent();\n                        if (avatar == null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, avatar.url];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.perform = function (method, params) {\n        return logger.throwError(method + \" not implemented\", logger_1.Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    };\n    BaseProvider.prototype._startEvent = function (event) {\n        this.polling = (this._events.filter(function (e) { return e.pollable(); }).length > 0);\n    };\n    BaseProvider.prototype._stopEvent = function (event) {\n        this.polling = (this._events.filter(function (e) { return e.pollable(); }).length > 0);\n    };\n    BaseProvider.prototype._addEventListener = function (eventName, listener, once) {\n        var event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    };\n    BaseProvider.prototype.on = function (eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    };\n    BaseProvider.prototype.once = function (eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    };\n    BaseProvider.prototype.emit = function (eventName) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var result = false;\n        var stopped = [];\n        var eventTag = getEventTag(eventName);\n        this._events = this._events.filter(function (event) {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(function () {\n                event.listener.apply(_this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach(function (event) { _this._stopEvent(event); });\n        return result;\n    };\n    BaseProvider.prototype.listenerCount = function (eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        var eventTag = getEventTag(eventName);\n        return this._events.filter(function (event) {\n            return (event.tag === eventTag);\n        }).length;\n    };\n    BaseProvider.prototype.listeners = function (eventName) {\n        if (eventName == null) {\n            return this._events.map(function (event) { return event.listener; });\n        }\n        var eventTag = getEventTag(eventName);\n        return this._events\n            .filter(function (event) { return (event.tag === eventTag); })\n            .map(function (event) { return event.listener; });\n    };\n    BaseProvider.prototype.off = function (eventName, listener) {\n        var _this = this;\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        var stopped = [];\n        var found = false;\n        var eventTag = getEventTag(eventName);\n        this._events = this._events.filter(function (event) {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach(function (event) { _this._stopEvent(event); });\n        return this;\n    };\n    BaseProvider.prototype.removeAllListeners = function (eventName) {\n        var _this = this;\n        var stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            var eventTag_1 = getEventTag(eventName);\n            this._events = this._events.filter(function (event) {\n                if (event.tag !== eventTag_1) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach(function (event) { _this._stopEvent(event); });\n        return this;\n    };\n    return BaseProvider;\n}(abstract_provider_1.Provider));\nexports.BaseProvider = BaseProvider;\n//# sourceMappingURL=base-provider.js.map","import type { ButtonBaseStyleUtilityProps } from '../button-base/button-base.types';\nimport type { PolymorphicComponentPropWithRef } from '../box';\n\nexport enum ButtonPrimarySize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\nexport type ValidButtonTagType = 'button' | 'a';\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface ButtonPrimaryStyleUtilityProps\n  extends Omit<ButtonBaseStyleUtilityProps, 'size'> {\n  /**\n   * Boolean to change button type to Danger when true\n   */\n  danger?: boolean;\n  /**\n   * Boolean to disable button\n   */\n  disabled?: boolean;\n  /**\n   * Boolean to show loading spinner in button\n   */\n  loading?: boolean;\n  /**\n   * Possible size values: 'ButtonPrimarySize.Sm'(32px),\n   * 'ButtonPrimarySize.Md'(40px), 'ButtonPrimarySize.Lg'(48px)\n   * Default value is 'ButtonPrimarySize.Auto'.\n   */\n  size?: ButtonPrimarySize;\n}\n\nexport type ButtonPrimaryProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ButtonPrimaryStyleUtilityProps>;\n\nexport type ButtonPrimaryComponent = <\n  C extends React.ElementType = 'button' | 'a',\n>(\n  props: ButtonPrimaryProps<C>,\n) => React.ReactElement | null;\n","export { ButtonPrimary } from './button-primary';\nexport { ButtonPrimarySize } from './button-primary.types';\nexport type { ButtonPrimaryProps } from './button-primary.types';\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { ButtonBase, ButtonBaseProps } from '../button-base';\nimport { Color } from '../../../helpers/constants/design-system';\nimport { PolymorphicRef } from '../box';\nimport type { ButtonSecondaryProps } from './button-secondary.types';\nimport {\n  ButtonSecondarySize,\n  ButtonSecondaryComponent,\n} from './button-secondary.types';\n\nexport const ButtonSecondary: ButtonSecondaryComponent = React.forwardRef(\n  <C extends React.ElementType = 'button' | 'a'>(\n    {\n      className = '',\n      danger = false,\n      disabled = false,\n      size = ButtonSecondarySize.Md,\n      ...props\n    }: ButtonSecondaryProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const buttonColor = danger ? Color.errorDefault : Color.primaryDefault;\n    return (\n      <ButtonBase\n        backgroundColor={Color.transparent}\n        borderColor={buttonColor}\n        color={buttonColor}\n        className={classnames(className, 'mm-button-secondary', {\n          'mm-button-secondary--type-danger': danger,\n          'mm-button-secondary--disabled': disabled,\n        })}\n        size={size}\n        ref={ref}\n        {...{ disabled, ...(props as ButtonBaseProps<C>) }}\n      />\n    );\n  },\n);\n","import type { ButtonBaseStyleUtilityProps } from '../button-base/button-base.types';\nimport type { PolymorphicComponentPropWithRef } from '../box';\n\nexport enum ButtonSecondarySize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface ButtonSecondaryStyleUtilityProps\n  extends Omit<ButtonBaseStyleUtilityProps, 'size'> {\n  /**\n   * An additional className to apply to the ButtonSecondary.\n   */\n  className?: string;\n  /**\n   * When true, ButtonSecondary color becomes Danger.\n   */\n  danger?: boolean;\n  /**\n   * Boolean to disable button\n   */\n  disabled?: boolean;\n  /**\n   * Possible size values: 'ButtonSecondarySize.Sm'(32px), 'ButtonSecondarySize.Md'(40px), 'ButtonSecondarySize.Lg'(48px).\n   * Default value is 'ButtonSecondarySize.Md'.\n   */\n  size?: ButtonSecondarySize;\n}\n\nexport type ButtonSecondaryProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ButtonSecondaryStyleUtilityProps>;\n\nexport type ButtonSecondaryComponent = <\n  C extends React.ElementType = 'button' | 'a',\n>(\n  props: ButtonSecondaryProps<C>,\n) => React.ReactElement | null;\n","export { ButtonSecondary } from './button-secondary';\nexport { ButtonSecondarySize } from './button-secondary.types';\nexport type { ButtonSecondaryProps } from './button-secondary.types';\n","import React from 'react';\nimport type { PolymorphicRef } from '../box';\nimport { ButtonPrimary } from '../button-primary';\nimport { ButtonSecondary } from '../button-secondary';\nimport { ButtonLink } from '../button-link';\nimport type { ButtonPrimaryProps } from '../button-primary/button-primary.types';\nimport type { ButtonSecondaryProps } from '../button-secondary/button-secondary.types';\nimport type { ButtonLinkProps } from '../button-link/button-link.types';\nimport type { ButtonProps, ButtonComponent } from './button.types';\n\nimport { ButtonVariant } from './button.types';\n\nexport const Button: ButtonComponent = React.forwardRef(\n  <C extends React.ElementType = 'button' | 'a'>(\n    { variant, ...props }: ButtonProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    switch (variant) {\n      case ButtonVariant.Primary:\n        return (\n          <ButtonPrimary ref={ref} {...(props as ButtonPrimaryProps<C>)} />\n        );\n      case ButtonVariant.Secondary:\n        return (\n          <ButtonSecondary ref={ref} {...(props as ButtonSecondaryProps<C>)} />\n        );\n      case ButtonVariant.Link:\n        return <ButtonLink ref={ref} {...(props as ButtonLinkProps<C>)} />;\n      default:\n        return (\n          <ButtonPrimary ref={ref} {...(props as ButtonPrimaryProps<C>)} />\n        );\n    }\n  },\n);\n","import type { PolymorphicComponentPropWithRef } from '../box';\nimport type { ButtonPrimaryStyleUtilityProps } from '../button-primary/button-primary.types';\nimport type { ButtonSecondaryStyleUtilityProps } from '../button-secondary/button-secondary.types';\nimport type { ButtonLinkStyleUtilityProps } from '../button-link/button-link.types';\n\nexport enum ButtonSize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n  Inherit = 'inherit',\n  Auto = 'auto',\n}\n\nexport enum ButtonVariant {\n  Primary = 'primary',\n  Secondary = 'secondary',\n  Link = 'link',\n}\n\ntype ValidButtonSize = ButtonSize.Sm | ButtonSize.Md | ButtonSize.Lg;\n\ntype ButtonPropsByVariant = {\n  [ButtonVariant.Primary]: {\n    variant?: ButtonVariant.Primary;\n    size?: ValidButtonSize; // Allows for only ButtonSize.Sm, ButtonSize.Md, ButtonSize.Lg\n  } & Omit<ButtonPrimaryStyleUtilityProps, 'size' | 'variant'>;\n  [ButtonVariant.Secondary]: {\n    variant?: ButtonVariant.Secondary;\n    size?: ValidButtonSize; // Allows for only ButtonSize.Sm, ButtonSize.Md, ButtonSize.Lg\n  } & Omit<ButtonSecondaryStyleUtilityProps, 'size' | 'variant'>;\n  [ButtonVariant.Link]: {\n    variant?: ButtonVariant.Link;\n    size?: ButtonSize;\n  } & Omit<ButtonLinkStyleUtilityProps, 'size' | 'variant'>;\n};\n\ntype ButtonPropsMap = {\n  [variant in ButtonVariant]: ButtonPropsByVariant[variant];\n};\n\nexport type ButtonProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ButtonPropsMap[ButtonVariant]>;\n\nexport type ButtonComponent = <C extends React.ElementType = 'button' | 'a'>(\n  props: ButtonProps<C>,\n) => React.ReactElement | null;\n","import { Size } from '../../../helpers/constants/design-system';\n\nexport { Button } from './button';\nexport { ButtonSize, ButtonVariant } from './button.types';\nexport type { ButtonProps } from './button.types';\n\n/**\n * @deprecated `BUTTON_SIZES` const has been deprecated in favor of the `ButtonSize` enum which can still be imported from `ui/components/component-library`\n */\nexport const BUTTON_SIZES = {\n  SM: Size.SM,\n  MD: Size.MD,\n  LG: Size.LG,\n  INHERIT: Size.inherit,\n  AUTO: Size.auto,\n};\n/**\n * @deprecated `BUTTON_VARIANT` const has been deprecated in favor of the `ButtonVariant` enum which can still be imported from `ui/components/component-library`\n */\nexport const BUTTON_VARIANT = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  LINK: 'link',\n};\n","import React, { ChangeEvent, KeyboardEvent } from 'react';\nimport classnames from 'classnames';\n\nimport {\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  IconColor,\n  Display,\n  AlignItems,\n} from '../../../helpers/constants/design-system';\n\nimport type { PolymorphicRef, TextProps } from '..';\nimport { Box, Icon, IconName, Text } from '..';\n\nimport { CheckboxProps, CheckboxComponent } from './checkbox.types';\n\nexport const Checkbox: CheckboxComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      id,\n      isChecked,\n      isIndeterminate,\n      isDisabled,\n      isReadOnly,\n      isRequired,\n      onChange,\n      className = '',\n      iconProps,\n      inputProps,\n      inputRef,\n      title,\n      name,\n      label,\n      ...props\n    }: CheckboxProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const handleCheckboxKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        onChange?.(event as unknown as ChangeEvent<HTMLInputElement>);\n      }\n    };\n\n    // If no title is provided, use the label as the title only if the label is a string\n    const sanitizedTitle =\n      !title && typeof label === 'string' ? label : title || id;\n\n    return (\n      <Text\n        className={classnames('mm-checkbox', className, {\n          'mm-checkbox--disabled': Boolean(isDisabled),\n        })}\n        as=\"label\"\n        display={Display.InlineFlex}\n        alignItems={AlignItems.center}\n        ref={ref}\n        htmlFor={id}\n        {...(props as TextProps<C>)}\n      >\n        <span className=\"mm-checkbox__input-wrapper\">\n          <Box\n            as=\"input\"\n            type=\"checkbox\"\n            title={sanitizedTitle}\n            name={name}\n            id={id}\n            checked={isChecked}\n            disabled={isDisabled}\n            readOnly={isReadOnly}\n            required={isRequired}\n            data-indeterminate={isIndeterminate}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              if (isReadOnly) {\n                event.preventDefault();\n              } else {\n                onChange?.(event);\n              }\n            }}\n            onKeyDown={handleCheckboxKeyDown}\n            margin={0}\n            marginRight={label ? 2 : 0}\n            backgroundColor={\n              isChecked || isIndeterminate\n                ? BackgroundColor.primaryDefault\n                : BackgroundColor.backgroundDefault\n            }\n            borderColor={\n              isChecked || isIndeterminate\n                ? BorderColor.primaryDefault\n                : BorderColor.borderDefault\n            }\n            borderRadius={BorderRadius.SM}\n            borderWidth={2}\n            display={Display.Flex}\n            ref={inputRef}\n            {...inputProps}\n            className={classnames(\n              'mm-checkbox__input',\n              inputProps?.className ?? '',\n              {\n                'mm-checkbox__input--checked': Boolean(isChecked),\n                'mm-checkbox__input--indeterminate': Boolean(isIndeterminate),\n                'mm-checkbox__input--readonly': Boolean(isReadOnly),\n              },\n            )}\n          />\n          {(isChecked || isIndeterminate) && (\n            <Icon\n              color={IconColor.primaryInverse}\n              name={isChecked ? IconName.CheckBold : IconName.MinusBold}\n              className={classnames(\n                'mm-checkbox__icon',\n                iconProps?.className ?? '',\n              )}\n              {...iconProps}\n            />\n          )}\n        </span>\n        {label ? <span>{label}</span> : null}\n      </Text>\n    );\n  },\n);\n","export { Checkbox } from './checkbox';\nexport type { CheckboxProps } from './checkbox.types';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IpcProvider = void 0;\nvar IpcProvider = null;\nexports.IpcProvider = IpcProvider;\n//# sourceMappingURL=browser-ipc-provider.js.map","import React from 'react';\nimport classnames from 'classnames';\nimport type { PolymorphicRef, BoxProps } from '../box';\nimport { Box } from '..';\n\nimport { ContainerProps, ContainerComponent } from './container.types';\n\nexport const Container: ContainerComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    { children, className = '', maxWidth, ...props }: ContainerProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    return (\n      <Box\n        className={classnames(\n          'mm-container',\n          `mm-container--max-width-${maxWidth}`,\n          className,\n        )}\n        ref={ref}\n        {...(props as BoxProps<C>)}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n","import type {\n  StyleUtilityProps,\n  PolymorphicComponentPropWithRef,\n} from '../box';\n\nexport enum ContainerMaxWidth {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface ContainerStyleUtilityProps extends StyleUtilityProps {\n  /*\n   * Additional classNames to be added to the Container component\n   */\n  className?: string;\n  /**\n   * maxWidth prop sets the max-width of the Container component\n   * Sm (360px)\n   * Md (480px)\n   * Lg (720px)\n   */\n  maxWidth?: ContainerMaxWidth;\n}\n\nexport type ContainerProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ContainerStyleUtilityProps>;\n\nexport type ContainerComponent = <C extends React.ElementType = 'div'>(\n  props: ContainerProps<C>,\n) => React.ReactElement | null;\n","export { Container } from './container';\nexport type { ContainerProps } from './container.types';\nexport { ContainerMaxWidth } from './container.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  Display,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\nimport {\n  Box,\n  TextField,\n  HelpText,\n  HelpTextSeverity,\n  Label,\n  TextFieldSize,\n} from '..';\nimport { PolymorphicRef } from '../box';\nimport type { BoxProps } from '../box';\nimport { TextFieldProps } from '../text-field/text-field.types';\nimport {\n  FormTextFieldSize,\n  FormTextFieldProps,\n  FormTextFieldComponent,\n} from './form-text-field.types';\n\nexport const FormTextField: FormTextFieldComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      autoComplete,\n      autoFocus,\n      className = '',\n      defaultValue,\n      disabled,\n      isDisabled,\n      error,\n      helpText,\n      helpTextProps,\n      id,\n      inputProps,\n      inputRef,\n      label,\n      labelProps,\n      startAccessory,\n      maxLength,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      readOnly,\n      required,\n      endAccessory,\n      size = FormTextFieldSize.Md,\n      textFieldProps,\n      truncate,\n      type = 'text',\n      value,\n      ...props\n    }: FormTextFieldProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    return (\n      <Box\n        className={classnames(\n          'mm-form-text-field',\n          {\n            'mm-form-text-field--disabled':\n              Boolean(isDisabled) || Boolean(disabled),\n          },\n          className,\n        )}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        ref={ref}\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        {...(props as BoxProps<any>)}\n      >\n        {label && (\n          <Label\n            htmlFor={id}\n            {...labelProps}\n            className={classnames(\n              'mm-form-text-field__label',\n              labelProps?.className ?? '',\n            )}\n          >\n            {label}\n          </Label>\n        )}\n        <TextField\n          className={classnames(\n            'mm-form-text-field__text-field',\n            textFieldProps?.className ?? '',\n          )}\n          size={size as unknown as TextFieldSize}\n          {...{\n            autoComplete,\n            autoFocus,\n            defaultValue,\n            disabled,\n            error,\n            id,\n            inputProps,\n            inputRef,\n            startAccessory,\n            maxLength,\n            name,\n            onBlur,\n            onChange,\n            onFocus,\n            placeholder,\n            readOnly,\n            required,\n            endAccessory,\n            truncate,\n            type,\n            value,\n            ...(textFieldProps as TextFieldProps<'div'>),\n          }}\n        />\n        {helpText && (\n          <HelpText\n            severity={error ? HelpTextSeverity.Danger : undefined}\n            marginTop={1}\n            {...helpTextProps}\n            className={classnames(\n              'mm-form-text-field__help-text',\n              helpTextProps?.className ?? '',\n            )}\n          >\n            {helpText}\n          </HelpText>\n        )}\n      </Box>\n    );\n  },\n);\n","import React from 'react';\nimport type { PolymorphicComponentPropWithRef } from '../box';\nimport {\n  TextFieldStyleUtilityProps,\n  TextFieldProps,\n} from '../text-field/text-field.types';\nimport type { LabelProps } from '../label/label.types';\nimport type { HelpTextProps } from '../help-text/help-text.types';\n\nexport enum FormTextFieldSize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface FormTextFieldStyleUtilityProps\n  extends Omit<TextFieldStyleUtilityProps, 'size' | 'type'> {\n  /*\n   * Additional classNames to be added to the FormTextField component\n   */\n  className?: string;\n  /*\n   * size of the FormTextField using `FormTextFieldSize` enum\n   */\n  size?: FormTextFieldSize;\n  /*\n   * props to be passed to the TextField component\n   */\n  textFieldProps?: TextFieldProps<'div'>;\n  /*\n   * helpText to be rendered below the FormTextField\n   */\n  helpText?: string | React.ReactNode;\n  /*\n   * props to be passed to the HelpText component\n   */\n  helpTextProps?: HelpTextProps<'div'>;\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface FormTextFieldWithLabelProps\n  extends FormTextFieldStyleUtilityProps {\n  /*\n   * label to be rendered above the FormTextField\n   * if label is provided, id is required\n   */\n  label: string | React.ReactNode;\n  /*\n   * props to be passed to the Label component\n   */\n  labelProps?: LabelProps<'label'>;\n  id: string; // id is required when label is provided\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface FormTextFieldWithoutLabelProps\n  extends FormTextFieldStyleUtilityProps {\n  /*\n   * This is for when label is not provided, that way we can optionally still pass an id\n   */\n  label?: never;\n  labelProps?: never;\n  id?: string; // id is optional when label is not provided\n}\n\nexport type FormTextFieldProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<\n    C,\n    FormTextFieldWithLabelProps | FormTextFieldWithoutLabelProps\n  >;\n\nexport type FormTextFieldComponent = <C extends React.ElementType = 'div'>(\n  props: FormTextFieldProps<C>,\n) => React.ReactElement | null;\n","export { FormTextField } from './form-text-field';\nexport { FormTextFieldSize } from './form-text-field.types';\nexport type { FormTextFieldProps } from './form-text-field.types';\n","import React, { useRef, useEffect, useMemo, useState } from 'react';\nimport classnames from 'classnames';\nimport {\n  Display,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\nimport { Box } from '..';\n\nimport type { PolymorphicRef, BoxProps } from '../box';\n\nimport { HeaderBaseProps, HeaderBaseComponent } from './header-base.types';\n\nexport const HeaderBase: HeaderBaseComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      startAccessory,\n      endAccessory,\n      className = '',\n      children,\n      childrenWrapperProps,\n      startAccessoryWrapperProps,\n      endAccessoryWrapperProps,\n      ...props\n    }: HeaderBaseProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const startAccessoryRef = useRef<HTMLDivElement>(null);\n    const endAccessoryRef = useRef<HTMLDivElement>(null);\n    const [accessoryMinWidth, setAccessoryMinWidth] = useState<number>();\n\n    useEffect(() => {\n      function handleResize() {\n        if (startAccessoryRef.current && endAccessoryRef.current) {\n          const accMinWidth = Math.max(\n            startAccessoryRef.current.scrollWidth,\n            endAccessoryRef.current.scrollWidth,\n          );\n          setAccessoryMinWidth(accMinWidth);\n        } else if (startAccessoryRef.current && !endAccessoryRef.current) {\n          setAccessoryMinWidth(startAccessoryRef.current.scrollWidth);\n        } else if (!startAccessoryRef.current && endAccessoryRef.current) {\n          setAccessoryMinWidth(endAccessoryRef.current.scrollWidth);\n        } else {\n          setAccessoryMinWidth(0);\n        }\n      }\n\n      handleResize();\n      window.addEventListener('resize', handleResize);\n\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }, [startAccessoryRef, endAccessoryRef, children]);\n\n    const getTitleStyles = useMemo(() => {\n      if (startAccessory && !endAccessory && accessoryMinWidth) {\n        return {\n          marginRight: `${accessoryMinWidth}px`,\n          width: `calc(100% - ${accessoryMinWidth * 2}px)`,\n        };\n      } else if (!startAccessory && endAccessory && accessoryMinWidth) {\n        return {\n          marginLeft: `${accessoryMinWidth}px`,\n          width: `calc(100% - ${accessoryMinWidth * 2}px)`,\n        };\n      } else if (startAccessory && endAccessory && accessoryMinWidth) {\n        return {\n          width: `calc(100% - ${accessoryMinWidth * 2}px)`,\n        };\n      }\n      return {};\n    }, [accessoryMinWidth, startAccessory, endAccessory]);\n\n    return (\n      <Box\n        className={classnames('mm-header-base', className)}\n        ref={ref}\n        display={Display.Flex}\n        justifyContent={JustifyContent.spaceBetween}\n        {...(props as BoxProps<C>)}\n      >\n        {startAccessory && (\n          <Box\n            ref={startAccessoryRef}\n            style={\n              children\n                ? {\n                    minWidth: `${accessoryMinWidth}px`,\n                  }\n                : undefined\n            }\n            {...(startAccessoryWrapperProps as BoxProps<'div'>)}\n          >\n            {startAccessory}\n          </Box>\n        )}\n        {children && (\n          <Box\n            style={getTitleStyles}\n            {...(childrenWrapperProps as BoxProps<'div'>)}\n          >\n            {children}\n          </Box>\n        )}\n        {endAccessory && (\n          <Box\n            display={Display.Flex}\n            justifyContent={JustifyContent.flexEnd}\n            ref={endAccessoryRef}\n            style={\n              children\n                ? {\n                    minWidth: `${accessoryMinWidth}px`,\n                  }\n                : undefined\n            }\n            {...(endAccessoryWrapperProps as BoxProps<'div'>)}\n          >\n            {endAccessory}\n          </Box>\n        )}\n      </Box>\n    );\n  },\n);\n","export { HeaderBase } from './header-base';\nexport type {\n  HeaderBaseProps,\n  HeaderBaseComponent,\n  HeaderBaseStyleUtilityProps,\n} from './header-base.types';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocket = void 0;\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar WS = null;\nexports.WebSocket = WS;\ntry {\n    exports.WebSocket = WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    var logger_2 = new logger_1.Logger(_version_1.version);\n    exports.WebSocket = WS = function () {\n        logger_2.throwError(\"WebSockets not supported in this environment\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//# sourceMappingURL=browser-ws.js.map","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport {\n  TextVariant,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport { Text } from '../text';\nimport type { PolymorphicRef } from '../box';\nimport type { TextProps } from '../text';\nimport type { HelpTextProps, HelpTextComponent } from './help-text.types';\nimport { HelpTextSeverity } from '.';\n\nexport const HelpText: HelpTextComponent = forwardRef(\n  <C extends React.ElementType = 'p'>(\n    {\n      severity,\n      color = TextColor.textDefault,\n      className,\n      children,\n      ...props\n    }: HelpTextProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const severityColor = () => {\n      switch (severity) {\n        case HelpTextSeverity.Danger:\n          return TextColor.errorDefault;\n        case HelpTextSeverity.Warning:\n          return TextColor.warningDefault;\n        case HelpTextSeverity.Success:\n          return TextColor.successDefault;\n        case HelpTextSeverity.Info:\n          return TextColor.infoDefault;\n        // Defaults to HelpTextSeverity.Info\n        default:\n          return TextColor.textDefault;\n      }\n    };\n\n    return (\n      <Text\n        className={classnames('mm-help-text', className ?? '')}\n        ref={ref}\n        as={children && typeof children === 'object' ? 'div' : 'p'}\n        variant={TextVariant.bodyXs}\n        color={severity ? severityColor() : color}\n        {...(props as TextProps<C>)}\n      >\n        {children}\n      </Text>\n    );\n  },\n);\n","import PropTypes from 'prop-types';\nimport type { TextStyleUtilityProps } from '../text';\nimport type { PolymorphicComponentPropWithRef } from '../box';\nimport { Severity, TextColor } from '../../../helpers/constants/design-system';\n\nexport enum HelpTextSeverity {\n  Danger = Severity.Danger,\n  Warning = Severity.Warning,\n  Success = Severity.Success,\n  Info = Severity.Info,\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface HelpTextStyleUtilityProps extends TextStyleUtilityProps {\n  severity?: HelpTextSeverity | Severity;\n  /**\n   * The color of the HelpText will be overridden if there is a severity passed\n   * Defaults to Color.textDefault\n   */\n  color?: TextColor;\n  /**\n   * The content of the help-text\n   */\n  children: string | PropTypes.ReactNodeLike;\n  /**\n   * Additional classNames to be added to the HelpText component\n   */\n  className?: string;\n}\n\nexport type HelpTextProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, HelpTextStyleUtilityProps>;\n\nexport type HelpTextComponent = <C extends React.ElementType = 'span'>(\n  props: HelpTextProps<C>,\n) => React.ReactElement | null;\n","export { HelpText } from './help-text';\nexport { HelpTextSeverity } from './help-text.types';\nexport type { HelpTextProps } from './help-text.types';\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { IconColor, Display } from '../../../helpers/constants/design-system';\n\nimport { Box, BoxProps } from '../box';\nimport type { PolymorphicRef } from '../box';\n\nimport { IconSize, IconProps, IconComponent } from './icon.types';\n\nexport const Icon: IconComponent = React.forwardRef(\n  <C extends React.ElementType = 'span'>(\n    {\n      name,\n      size = IconSize.Md,\n      color = IconColor.inherit,\n      className = '',\n      style,\n      ...props\n    }: IconProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => (\n    <Box\n      className={classnames(className, 'mm-icon', `mm-icon--size-${size}`)}\n      ref={ref}\n      as=\"span\"\n      display={Display.InlineBlock}\n      color={color}\n      style={{\n        /**\n         * To reduce the possibility of injection attacks\n         * the icon component uses mask-image instead of rendering\n         * the svg directly.\n         */\n        maskImage: `url('./images/icons/${String(name)}.svg')`,\n        WebkitMaskImage: `url('./images/icons/${String(name)}.svg')`,\n        ...style,\n      }}\n      {...(props as BoxProps<C>)}\n    />\n  ),\n);\n","import React from 'react';\n\nimport { IconColor } from '../../../helpers/constants/design-system';\n\nimport type {\n  StyleUtilityProps,\n  PolymorphicComponentPropWithRef,\n} from '../box';\n\nexport enum IconSize {\n  Xs = 'xs',\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n  Xl = 'xl',\n  Inherit = 'inherit',\n}\n\n/**\n * The IconName enum contains all the possible icon names.\n *\n * Search for an icon: https://metamask.github.io/metamask-storybook/?path=/story/components-componentlibrary-icon--default-story\n *\n * Add an icon: https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-icon--default-story#adding-a-new-icon\n *\n */\n\nexport enum IconName {\n  AddSquare = 'add-square',\n  Add = 'add',\n  Arrow2Down = 'arrow-2-down',\n  Arrow2Left = 'arrow-2-left',\n  Arrow2Right = 'arrow-2-right',\n  Arrow2Up = 'arrow-2-up',\n  Arrow2UpRight = 'arrow-2-up-right',\n  ArrowDoubleLeft = 'arrow-double-left',\n  ArrowDoubleRight = 'arrow-double-right',\n  ArrowDown = 'arrow-down',\n  ArrowLeft = 'arrow-left',\n  ArrowRight = 'arrow-right',\n  ArrowUp = 'arrow-up',\n  BankToken = 'bank-token',\n  Bank = 'bank',\n  Book = 'book',\n  Bookmark = 'bookmark',\n  Bridge = 'bridge',\n  Calculator = 'calculator',\n  CardPos = 'card-pos',\n  CardToken = 'card-token',\n  Card = 'card',\n  Category = 'category',\n  Chart = 'chart',\n  CheckBold = 'check-bold',\n  Check = 'check',\n  Clock = 'clock',\n  Close = 'close',\n  CodeCircle = 'code-circle',\n  Coin = 'coin',\n  Confirmation = 'confirmation',\n  Connect = 'connect',\n  CopySuccess = 'copy-success',\n  Copy = 'copy',\n  Customize = 'customize',\n  Danger = 'danger',\n  Dark = 'dark',\n  Data = 'data',\n  Diagram = 'diagram',\n  DocumentCode = 'document-code',\n  DragDrop = 'drag-drop',\n  DraggingAnimation = 'dragging-animation',\n  PinningAnimation = 'pinning-animation',\n  Edit = 'edit',\n  Eraser = 'eraser',\n  Ethereum = 'ethereum',\n  Expand = 'expand',\n  Explore = 'explore',\n  Export = 'export',\n  EyeSlash = 'eye-slash',\n  Eye = 'eye',\n  Filter = 'filter',\n  Flag = 'flag',\n  FlashSlash = 'flash-slash',\n  Flash = 'flash',\n  FullCircle = 'full-circle',\n  Gas = 'gas',\n  GlobalSearch = 'global-search',\n  Global = 'global',\n  Graph = 'graph',\n  Hardware = 'hardware',\n  Heart = 'heart',\n  Hierarchy = 'hierarchy',\n  Home = 'home',\n  Import = 'import',\n  Info = 'info',\n  Key = 'key',\n  Light = 'light',\n  Link = 'link',\n  Loading = 'loading',\n  LockCircle = 'lock-circle',\n  LockSlash = 'lock-slash',\n  Lock = 'lock',\n  Login = 'login',\n  Logout = 'logout',\n  Menu = 'menu',\n  MessageQuestion = 'message-question',\n  Messages = 'messages',\n  MinusBold = 'minus-bold',\n  MinusSquare = 'minus-square',\n  Minus = 'minus',\n  Mobile = 'mobile',\n  Money = 'money',\n  Monitor = 'monitor',\n  MoreHorizontal = 'more-horizontal',\n  MoreVertical = 'more-vertical',\n  NotificationCircle = 'notification-circle',\n  Notification = 'notification',\n  PasswordCheck = 'password-check',\n  People = 'people',\n  Pin = 'pin',\n  ProgrammingArrows = 'programming-arrows',\n  Custody = 'custody',\n  Question = 'question',\n  Received = 'received',\n  Refresh = 'refresh',\n  Save = 'save',\n  ScanBarcode = 'scan-barcode',\n  ScanFocus = 'scan-focus',\n  Scan = 'scan',\n  Scroll = 'scroll',\n  Search = 'search',\n  SecurityCard = 'security-card',\n  SecurityCross = 'security-cross',\n  SecurityKey = 'security-key',\n  SecuritySearch = 'security-search',\n  SecuritySlash = 'security-slash',\n  SecurityTick = 'security-tick',\n  SecurityTime = 'security-time',\n  SecurityUser = 'security-user',\n  Security = 'security',\n  Send1 = 'send-1',\n  Send2 = 'send-2',\n  Setting = 'setting',\n  Slash = 'slash',\n  SnapsMobile = 'snaps-mobile',\n  SnapsPlus = 'snaps-plus',\n  Snaps = 'snaps',\n  Speedometer = 'speedometer',\n  Star = 'star',\n  Stake = 'stake',\n  Student = 'student',\n  SwapHorizontal = 'swap-horizontal',\n  SwapVertical = 'swap-vertical',\n  Tag = 'tag',\n  Tilde = 'tilde',\n  Timer = 'timer',\n  Trash = 'trash',\n  TrendDown = 'trend-down',\n  TrendUp = 'trend-up',\n  UserCircleAdd = 'user-circle-add',\n  UserCircleLink = 'user-circle-link',\n  UserCircleRemove = 'user-circle-remove',\n  UserCircle = 'user-circle',\n  User = 'user',\n  WalletCard = 'wallet-card',\n  WalletMoney = 'wallet-money',\n  Wallet = 'wallet',\n  Warning = 'warning',\n  Twitter = 'twitter',\n  QrCode = 'qr-code',\n  UserCheck = 'user-check',\n  Unpin = 'unpin',\n  Ban = 'ban',\n  Bold = 'bold',\n  CircleX = 'circle-x',\n  Download = 'download',\n  FileIcon = 'file',\n  Flask = 'flask',\n  Plug = 'plug',\n  Share = 'share',\n  Square = 'square',\n  Tint = 'tint',\n  Upload = 'upload',\n  Usb = 'usb',\n  Wifi = 'wifi',\n  PlusMinus = 'plus-minus',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface IconStyleUtilityProps extends StyleUtilityProps {\n  /**\n   * The name of the icon to display. Use the IconName enum\n   * Search for an icon: https://metamask.github.io/metamask-storybook/?path=/story/components-componentlibrary-icon--default-story\n   */\n  name: IconName;\n  /**\n   * The size of the Icon.\n   * Possible values could be IconSize.Xs (12px), IconSize.Sm (16px), IconSize.Md (20px), IconSize.Lg (24px), IconSize.Xl (32px), IconSize.Inherit (inherits font-size).\n   * Default value is IconSize.Md (20px).\n   */\n  size?: IconSize;\n  /**\n   * The color of the icon.\n   * Defaults to IconColor.inherit.\n   */\n  color?: IconColor;\n  /**\n   * An additional className to apply to the icon.\n   */\n  className?: string;\n  /**\n   * Addition style properties to apply to the icon.\n   * The Icon component uses inline styles to apply the icon's mask-image so be wary of overriding\n   */\n  style?: React.CSSProperties;\n}\n\nexport type IconProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, IconStyleUtilityProps>;\n\nexport type IconComponent = <C extends React.ElementType = 'span'>(\n  props: IconProps<C>,\n) => React.ReactElement | null;\n","export { Icon } from './icon';\nexport { IconName, IconSize } from './icon.types';\nexport type {\n  IconProps,\n  IconComponent,\n  IconStyleUtilityProps,\n} from './icon.types';\n","export {\n  AvatarAccount,\n  AvatarAccountSize,\n  AvatarAccountVariant,\n  AvatarAccountDiameter,\n} from './avatar-account';\nexport type { AvatarAccountProps } from './avatar-account';\nexport { AvatarFavicon, AvatarFaviconSize } from './avatar-favicon';\nexport type { AvatarFaviconProps } from './avatar-favicon';\nexport { AvatarIcon, AvatarIconSize } from './avatar-icon';\nexport type { AvatarIconProps } from './avatar-icon';\nexport { AvatarNetwork, AvatarNetworkSize } from './avatar-network';\nexport type { AvatarNetworkProps } from './avatar-network';\nexport { AvatarToken, AvatarTokenSize } from './avatar-token';\nexport type { AvatarTokenProps } from './avatar-token';\nexport { AvatarBase, AvatarBaseSize } from './avatar-base';\nexport type { AvatarBaseProps } from './avatar-base';\nexport {\n  BadgeWrapper,\n  BadgeWrapperPosition,\n  BadgeWrapperAnchorElementShape,\n} from './badge-wrapper';\nexport type { BadgeWrapperProps } from './badge-wrapper';\nexport { Box } from './box';\nexport type {\n  BoxProps,\n  BoxComponent,\n  StyleUtilityProps,\n  PolymorphicRef,\n  PolymorphicComponentPropWithRef,\n} from './box';\nexport {\n  Button,\n  ButtonVariant,\n  ButtonSize,\n  BUTTON_SIZES,\n  BUTTON_VARIANT,\n} from './button';\nexport type { ButtonProps } from './button';\nexport { ButtonBase, ButtonBaseSize } from './button-base';\nexport type { ButtonBaseProps } from './button-base';\nexport { ButtonIcon, ButtonIconSize } from './button-icon';\nexport type { ButtonIconProps } from './button-icon';\nexport { ButtonLink, ButtonLinkSize } from './button-link';\nexport type { ButtonLinkProps } from './button-link';\nexport { ButtonPrimary, ButtonPrimarySize } from './button-primary';\nexport type { ButtonPrimaryProps } from './button-primary';\nexport { ButtonSecondary, ButtonSecondarySize } from './button-secondary';\nexport type { ButtonSecondaryProps } from './button-secondary';\nexport { Checkbox } from './checkbox';\nexport type { CheckboxProps } from './checkbox';\nexport { Container, ContainerMaxWidth } from './container';\nexport type { ContainerProps } from './container';\nexport { FormTextField, FormTextFieldSize } from './form-text-field';\nexport type { FormTextFieldProps } from './form-text-field';\nexport { HeaderBase } from './header-base';\nexport type { HeaderBaseProps } from './header-base';\nexport { HelpText, HelpTextSeverity } from './help-text';\nexport type { HelpTextProps } from './help-text';\nexport { Icon, IconName, IconSize } from './icon';\nexport type { IconProps } from './icon';\nexport { Label } from './label';\nexport type { LabelProps } from './label';\nexport { PickerNetwork } from './picker-network';\nexport type { PickerNetworkProps } from './picker-network';\nexport { Tag } from './tag';\nexport type { TagProps } from './tag';\nexport { TagUrl } from './tag-url';\nexport type { TagUrlProps } from './tag-url';\nexport { Text, ValidTag, TextDirection, InvisibleCharacter } from './text';\nexport type { TextProps } from './text';\nexport { Input, InputType } from './input';\nexport type { InputProps } from './input';\nexport { TextField, TextFieldType, TextFieldSize } from './text-field';\nexport type { TextFieldProps } from './text-field';\nexport { TextFieldSearch, TextFieldSearchSize } from './text-field-search';\nexport type { TextFieldSearchProps } from './text-field-search';\nexport { ModalContent, ModalContentSize } from './modal-content';\nexport type { ModalContentProps } from './modal-content';\nexport { ModalOverlay } from './modal-overlay';\nexport type { ModalOverlayProps } from './modal-overlay';\nexport { ModalFocus } from './modal-focus';\nexport type { ModalFocusProps } from './modal-focus';\nexport { Modal, useModalContext } from './modal';\nexport type { ModalProps } from './modal';\nexport { ModalBody } from './modal-body';\nexport type { ModalBodyProps } from './modal-body';\nexport { ModalFooter } from './modal-footer';\nexport type { ModalFooterProps } from './modal-footer';\n\n// Molecules\nexport { BannerBase } from './banner-base';\nexport type { BannerBaseProps } from './banner-base';\nexport { BannerAlert, BannerAlertSeverity } from './banner-alert';\nexport type { BannerAlertProps } from './banner-alert';\nexport { BannerTip, BannerTipLogoType } from './banner-tip';\nexport type { BannerTipProps } from './banner-tip';\nexport { PopoverHeader } from './popover-header';\nexport type { PopoverHeaderProps } from './popover-header';\nexport { Popover, PopoverPosition, PopoverRole } from './popover';\nexport type { PopoverProps } from './popover';\nexport { ModalHeader } from './modal-header';\nexport type { ModalHeaderProps } from './modal-header';\nexport { SelectButton, SelectButtonSize } from './select-button';\nexport type { SelectButtonProps } from './select-button';\nexport { SelectOption } from './select-option';\nexport type { SelectOptionProps } from './select-option';\nexport {\n  SelectWrapper,\n  SelectContext,\n  useSelectContext,\n} from './select-wrapper';\nexport type { SelectWrapperProps } from './select-wrapper';\n","export { Input } from './input';\nexport { InputType } from './input.types';\n\nexport type { InputProps, InputComponent } from './input.types';\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport {\n  TextVariant,\n  BackgroundColor,\n  BorderStyle,\n} from '../../../helpers/constants/design-system';\n\nimport { Text, TextProps } from '../text';\nimport { PolymorphicRef } from '../box';\nimport { InputProps, InputType, InputComponent } from './input.types';\n\nexport const Input: InputComponent = React.forwardRef(\n  <C extends React.ElementType = 'input'>(\n    {\n      autoComplete,\n      autoFocus,\n      className = '',\n      defaultValue,\n      disabled,\n      error,\n      id,\n      maxLength,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      readOnly,\n      required,\n      type = InputType.Text,\n      value,\n      textVariant = TextVariant.bodyMd,\n      disableStateStyles,\n      ...props\n    }: InputProps<C>,\n    ref: PolymorphicRef<C>,\n  ) => (\n    <Text\n      className={classnames(\n        'mm-input',\n        {\n          'mm-input--disable-state-styles': Boolean(disableStateStyles),\n          'mm-input--disabled':\n            Boolean(disabled) && Boolean(disableStateStyles),\n        },\n        className,\n      )}\n      {...(error && { 'aria-invalid': error })}\n      as=\"input\"\n      autoComplete={autoComplete ? 'on' : 'off'}\n      autoFocus={autoFocus}\n      backgroundColor={BackgroundColor.transparent}\n      borderStyle={BorderStyle.none}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      id={id}\n      margin={0}\n      maxLength={maxLength}\n      name={name}\n      onBlur={onBlur}\n      onChange={onChange}\n      onFocus={onFocus}\n      padding={0}\n      placeholder={placeholder}\n      readOnly={readOnly}\n      ref={ref}\n      required={required}\n      value={value}\n      variant={textVariant}\n      type={type}\n      {...(props as TextProps<C>)}\n    />\n  ),\n);\n","import type {\n  StyleUtilityProps,\n  PolymorphicComponentPropWithRef,\n} from '../box';\n\nimport { TextVariant } from '../../../helpers/constants/design-system';\n\nexport enum InputType {\n  Text = 'text',\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Number = 'number',\n  Password = 'password',\n  Search = 'search',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface InputStyleProps extends StyleUtilityProps {\n  /**\n   * Autocomplete allows the browser to predict the value based on earlier typed values\n   */\n  autoComplete?: boolean;\n  /**\n   * If `true`, the input will be focused during the first mount.\n   */\n  autoFocus?: boolean;\n  /**\n   * An additional className to apply to the input\n   */\n  className?: string;\n  /**\n   * The default input value, useful when not controlling the component.\n   */\n  defaultValue?: string | number;\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Disables focus state by setting CSS outline: none;\n   * !!IMPORTANT!!\n   * If this is set to true ensure there is a proper fallback\n   * to enable accessibility for keyboard only and vision impaired users\n   */\n  disableStateStyles?: boolean;\n  /**\n   * If `true`, aria-invalid will be true\n   */\n  error?: boolean;\n  /**\n   * The id of the `input` element.\n   */\n  id?: string;\n  /**\n   * Max number of characters to allow\n   */\n  maxLength?: number;\n  /**\n   * Name attribute of the `input` element.\n   */\n  name?: string;\n  /**\n   * Callback fired on blur\n   */\n  onBlur?: () => void;\n  /**\n   * Callback fired when the value is changed.\n   */\n  onChange?: () => void;\n  /**\n   * Callback fired on focus\n   */\n  onFocus?: () => void;\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder?: string;\n  /**\n   * It prevents the user from changing the value of the field (not from interacting with the field).\n   */\n  readOnly?: boolean;\n  /**\n   * If `true`, the input will be required. Currently no visual difference is shown.\n   */\n  required?: boolean;\n  /**\n   * Use this to override the text variant of the Text component.\n   * Should only be used for approved custom input components\n   * Use the TextVariant enum\n   */\n  textVariant?: TextVariant;\n  /**\n   * Type of the input element. Can be InputType.Text, InputType.Password, InputType.Number\n   * Defaults to InputType.Text ('text')\n   * If you require another type add it to InputType\n   */\n  type?: InputType;\n  /**\n   * The input value, required for a controlled component.\n   */\n  value?: string | number;\n}\n\nexport type InputProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, InputStyleProps>;\n\nexport type InputComponent = <C extends React.ElementType = 'input'>(\n  props: InputProps<C>,\n) => React.ReactElement | null;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudflareProvider = void 0;\nvar url_json_rpc_provider_1 = require(\"./url-json-rpc-provider\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar CloudflareProvider = /** @class */ (function (_super) {\n    __extends(CloudflareProvider, _super);\n    function CloudflareProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CloudflareProvider.getApiKey = function (apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    };\n    CloudflareProvider.getUrl = function (network, apiKey) {\n        var host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    };\n    CloudflareProvider.prototype.perform = function (method, params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var block;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(method === \"getBlockNumber\")) return [3 /*break*/, 2];\n                        return [4 /*yield*/, _super.prototype.perform.call(this, \"getBlock\", { blockTag: \"latest\" })];\n                    case 1:\n                        block = _a.sent();\n                        return [2 /*return*/, block.number];\n                    case 2: return [2 /*return*/, _super.prototype.perform.call(this, method, params)];\n                }\n            });\n        });\n    };\n    return CloudflareProvider;\n}(url_json_rpc_provider_1.UrlJsonRpcProvider));\nexports.CloudflareProvider = CloudflareProvider;\n//# sourceMappingURL=cloudflare-provider.js.map","export { Label } from './label';\nexport type { LabelComponent, LabelProps } from './label.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Text } from '../text';\nimport type { TextProps } from '../text';\nimport {\n  FontWeight,\n  TextVariant,\n  Display,\n  AlignItems,\n} from '../../../helpers/constants/design-system';\nimport type { PolymorphicRef } from '../box';\nimport { LabelProps, LabelComponent } from './label.types';\n\nexport const Label: LabelComponent = React.forwardRef(\n  <C extends React.ElementType = 'label'>(\n    { htmlFor, className, children, ...props }: LabelProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    return (\n      <Text\n        className={classnames(\n          'mm-label',\n          { 'mm-label--html-for': Boolean(htmlFor) },\n          className ?? '',\n        )}\n        as=\"label\"\n        htmlFor={htmlFor}\n        variant={TextVariant.bodyMd}\n        fontWeight={FontWeight.Medium}\n        display={Display.InlineFlex}\n        alignItems={AlignItems.center}\n        ref={ref}\n        {...(props as TextProps<C>)}\n      >\n        {children}\n      </Text>\n    );\n  },\n);\n","export { ModalBody } from './modal-body';\nexport type {\n  ModalBodyProps,\n  ModalBodyComponent,\n  ModalBodyStyleUtilityProps,\n} from './modal-body.types';\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { Box } from '..';\nimport type { PolymorphicRef, BoxProps } from '../box';\n\nimport { ModalBodyProps, ModalBodyComponent } from './modal-body.types';\n\nexport const ModalBody: ModalBodyComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    { className = '', children, ...props }: ModalBodyProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => (\n    <Box\n      className={classnames('mm-modal-body', className)}\n      ref={ref}\n      paddingLeft={4}\n      paddingRight={4}\n      {...(props as BoxProps<C>)}\n    >\n      {children}\n    </Box>\n  ),\n);\n\nexport default ModalBody;\n","export { ModalContent } from './modal-content';\nexport { ModalContentSize } from './modal-content.types';\nexport type { ModalContentProps } from './modal-content.types';\n","import React, { useRef, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport {\n  BackgroundColor,\n  BorderRadius,\n  BlockSize,\n  Display,\n  JustifyContent,\n  AlignItems,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\n\nimport { Box, ModalFocus, useModalContext } from '..';\n\nimport { BoxProps } from '../box';\nimport type { PolymorphicRef } from '../box';\nimport {\n  ModalContentProps,\n  ModalContentSize,\n  ModalContentComponent,\n} from './modal-content.types';\n\nexport const ModalContent: ModalContentComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      className = '',\n      children,\n      size = ModalContentSize.Sm,\n      modalDialogProps,\n      ...props\n    }: ModalContentProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const {\n      onClose,\n      isClosedOnEscapeKey,\n      isClosedOnOutsideClick,\n      initialFocusRef,\n      finalFocusRef,\n      restoreFocus,\n      autoFocus,\n    } = useModalContext();\n    const modalDialogRef = useRef<HTMLElement>(null);\n    const handleEscKey = (event: KeyboardEvent) => {\n      if (isClosedOnEscapeKey && event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n      // Popover should be launched from within Modal but\n      // the Popover containing element is a sibling to modal,\n      // so this is required to ensure `onClose` isn't triggered\n      // when clicking on a popover item\n      if (\n        isClosedOnOutsideClick &&\n        (event.target as HTMLElement).closest('.mm-popover')\n      ) {\n        return;\n      }\n\n      if (\n        isClosedOnOutsideClick &&\n        modalDialogRef?.current &&\n        !modalDialogRef.current.contains(event.target as Node)\n      ) {\n        onClose();\n      }\n    };\n\n    useEffect(() => {\n      document.addEventListener('keydown', handleEscKey);\n      document.addEventListener('mousedown', handleClickOutside);\n\n      return () => {\n        document.removeEventListener('keydown', handleEscKey);\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, []);\n    return (\n      <ModalFocus\n        initialFocusRef={initialFocusRef}\n        finalFocusRef={finalFocusRef}\n        restoreFocus={restoreFocus}\n        autoFocus={autoFocus}\n      >\n        <Box\n          className={classnames('mm-modal-content', className)}\n          ref={ref}\n          display={Display.Flex}\n          width={BlockSize.Screen}\n          height={BlockSize.Screen}\n          justifyContent={JustifyContent.center}\n          alignItems={AlignItems.flexStart}\n          paddingRight={4}\n          paddingLeft={4}\n          paddingTop={[4, 8, 12]}\n          paddingBottom={[4, 8, 12]}\n          {...(props as BoxProps<C>)}\n        >\n          <Box\n            as=\"section\"\n            role=\"dialog\"\n            aria-modal=\"true\"\n            backgroundColor={BackgroundColor.backgroundDefault}\n            borderRadius={BorderRadius.LG}\n            width={BlockSize.Full}\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n            paddingTop={4}\n            paddingBottom={4}\n            ref={modalDialogRef}\n            {...modalDialogProps}\n            className={classnames(\n              'mm-modal-content__dialog',\n              `mm-modal-content__dialog--size-${size}`,\n              modalDialogProps?.className,\n            )}\n          >\n            {children}\n          </Box>\n        </Box>\n      </ModalFocus>\n    );\n  },\n);\n","import React from 'react';\nimport type {\n  PolymorphicComponentPropWithRef,\n  StyleUtilityProps,\n} from '../box';\n\n/*\n * ModalContent sizes\n * Currently there is only use case for one size of ModalContent in the extension\n * See audit https://www.figma.com/file/hxYqloYgmVcgsoiVqmGZ8K/Modal-Audit?node-id=481%3A244&t=XITeuRB1pRc09hiG-1\n * Not to say there won't be more in the future, but to prevent redundant code there is only one for now\n */\nexport enum ModalContentSize {\n  // 360px\n  Sm = 'sm',\n  // 480px\n  Md = 'md',\n  // 720px\n  Lg = 'lg',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface ModalContentStyleUtilityProps extends StyleUtilityProps {\n  /**\n   * The additional className of the ModalContent component\n   */\n  className?: string;\n  /**\n   * The content of the ModalContent component\n   */\n  children: React.ReactNode;\n  /**\n   * Use the size prop and ModalContentSize enum to change the max-width of the ModalContent\n   *\n   * ModalContentSize.Sm = 360px\n   * ModalContentSize.Md = 480px\n   * ModalContentSize.Lg = 720px\n   *\n   * @default ModalContentSize.Sm\n   */\n  size?: ModalContentSize;\n  /**\n   * Additional props to pass to the dialog node inside of ModalContent component\n   */\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  modalDialogProps?: any;\n}\n\nexport type ModalContentProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, ModalContentStyleUtilityProps>;\n\nexport type ModalContentComponent = <C extends React.ElementType = 'div'>(\n  props: ModalContentProps<C>,\n) => React.ReactElement | null;\n","export { ModalFocus } from './modal-focus';\nexport type { ModalFocusProps } from './modal-focus.types';\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EtherscanProvider = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar transactions_1 = require(\"@ethersproject/transactions\");\nvar web_1 = require(\"@ethersproject/web\");\nvar formatter_1 = require(\"./formatter\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar base_provider_1 = require(\"./base-provider\");\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    var result = {};\n    for (var key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        var value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = (0, bytes_1.hexValue)((0, bytes_1.hexlify)(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + (0, transactions_1.accessListify)(value).map(function (set) {\n                return \"{address:\\\"\" + set.address + \"\\\",storageKeys:[\\\"\" + set.storageKeys.join('\",\"') + \"\\\"]}\";\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = (0, bytes_1.hexlify)(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || typeof (result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        var error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        var error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        var error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        var error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === logger_1.Logger.errors.SERVER_ERROR) {\n        var e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            var data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if ((0, bytes_1.isHexString)(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                error: error,\n                data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    var message = error.message;\n    if (error.code === logger_1.Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", logger_1.Logger.errors.INSUFFICIENT_FUNDS, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", logger_1.Logger.errors.NONCE_EXPIRED, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", logger_1.Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    throw error;\n}\nvar EtherscanProvider = /** @class */ (function (_super) {\n    __extends(EtherscanProvider, _super);\n    function EtherscanProvider(network, apiKey) {\n        var _this = _super.call(this, network) || this;\n        (0, properties_1.defineReadOnly)(_this, \"baseUrl\", _this.getBaseUrl());\n        (0, properties_1.defineReadOnly)(_this, \"apiKey\", apiKey || null);\n        return _this;\n    }\n    EtherscanProvider.prototype.getBaseUrl = function () {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    };\n    EtherscanProvider.prototype.getUrl = function (module, params) {\n        var query = Object.keys(params).reduce(function (accum, key) {\n            var value = params[key];\n            if (value != null) {\n                accum += \"&\" + key + \"=\" + value;\n            }\n            return accum;\n        }, \"\");\n        var apiKey = ((this.apiKey) ? \"&apikey=\" + this.apiKey : \"\");\n        return this.baseUrl + \"/api?module=\" + module + query + apiKey;\n    };\n    EtherscanProvider.prototype.getPostUrl = function () {\n        return this.baseUrl + \"/api\";\n    };\n    EtherscanProvider.prototype.getPostData = function (module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    };\n    EtherscanProvider.prototype.fetch = function (module, params, post) {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, payload, procFunc, connection, payloadStr, result;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        url = (post ? this.getPostUrl() : this.getUrl(module, params));\n                        payload = (post ? this.getPostData(module, params) : null);\n                        procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            request: url,\n                            provider: this\n                        });\n                        connection = {\n                            url: url,\n                            throttleSlotInterval: 1000,\n                            throttleCallback: function (attempt, url) {\n                                if (_this.isCommunityResource()) {\n                                    (0, formatter_1.showThrottleMessage)();\n                                }\n                                return Promise.resolve(true);\n                            }\n                        };\n                        payloadStr = null;\n                        if (payload) {\n                            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                            payloadStr = Object.keys(payload).map(function (key) {\n                                return key + \"=\" + payload[key];\n                            }).join(\"&\");\n                        }\n                        return [4 /*yield*/, (0, web_1.fetchJson)(connection, payloadStr, procFunc || getJsonResult)];\n                    case 1:\n                        result = _a.sent();\n                        this.emit(\"debug\", {\n                            action: \"response\",\n                            request: url,\n                            response: (0, properties_1.deepCopy)(result),\n                            provider: this\n                        });\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    EtherscanProvider.prototype.detectNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.network];\n            });\n        });\n    };\n    EtherscanProvider.prototype.perform = function (method, params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, postData, error_1, postData, error_2, args, topic0, logs, blocks, i, log, block, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = method;\n                        switch (_a) {\n                            case \"getBlockNumber\": return [3 /*break*/, 1];\n                            case \"getGasPrice\": return [3 /*break*/, 2];\n                            case \"getBalance\": return [3 /*break*/, 3];\n                            case \"getTransactionCount\": return [3 /*break*/, 4];\n                            case \"getCode\": return [3 /*break*/, 5];\n                            case \"getStorageAt\": return [3 /*break*/, 6];\n                            case \"sendTransaction\": return [3 /*break*/, 7];\n                            case \"getBlock\": return [3 /*break*/, 8];\n                            case \"getTransaction\": return [3 /*break*/, 9];\n                            case \"getTransactionReceipt\": return [3 /*break*/, 10];\n                            case \"call\": return [3 /*break*/, 11];\n                            case \"estimateGas\": return [3 /*break*/, 15];\n                            case \"getLogs\": return [3 /*break*/, 19];\n                            case \"getEtherPrice\": return [3 /*break*/, 26];\n                        }\n                        return [3 /*break*/, 28];\n                    case 1: return [2 /*return*/, this.fetch(\"proxy\", { action: \"eth_blockNumber\" })];\n                    case 2: return [2 /*return*/, this.fetch(\"proxy\", { action: \"eth_gasPrice\" })];\n                    case 3: \n                    // Returns base-10 result\n                    return [2 /*return*/, this.fetch(\"account\", {\n                            action: \"balance\",\n                            address: params.address,\n                            tag: params.blockTag\n                        })];\n                    case 4: return [2 /*return*/, this.fetch(\"proxy\", {\n                            action: \"eth_getTransactionCount\",\n                            address: params.address,\n                            tag: params.blockTag\n                        })];\n                    case 5: return [2 /*return*/, this.fetch(\"proxy\", {\n                            action: \"eth_getCode\",\n                            address: params.address,\n                            tag: params.blockTag\n                        })];\n                    case 6: return [2 /*return*/, this.fetch(\"proxy\", {\n                            action: \"eth_getStorageAt\",\n                            address: params.address,\n                            position: params.position,\n                            tag: params.blockTag\n                        })];\n                    case 7: return [2 /*return*/, this.fetch(\"proxy\", {\n                            action: \"eth_sendRawTransaction\",\n                            hex: params.signedTransaction\n                        }, true).catch(function (error) {\n                            return checkError(\"sendTransaction\", error, params.signedTransaction);\n                        })];\n                    case 8:\n                        if (params.blockTag) {\n                            return [2 /*return*/, this.fetch(\"proxy\", {\n                                    action: \"eth_getBlockByNumber\",\n                                    tag: params.blockTag,\n                                    boolean: (params.includeTransactions ? \"true\" : \"false\")\n                                })];\n                        }\n                        throw new Error(\"getBlock by blockHash not implemented\");\n                    case 9: return [2 /*return*/, this.fetch(\"proxy\", {\n                            action: \"eth_getTransactionByHash\",\n                            txhash: params.transactionHash\n                        })];\n                    case 10: return [2 /*return*/, this.fetch(\"proxy\", {\n                            action: \"eth_getTransactionReceipt\",\n                            txhash: params.transactionHash\n                        })];\n                    case 11:\n                        if (params.blockTag !== \"latest\") {\n                            throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                        }\n                        postData = getTransactionPostData(params.transaction);\n                        postData.module = \"proxy\";\n                        postData.action = \"eth_call\";\n                        _c.label = 12;\n                    case 12:\n                        _c.trys.push([12, 14, , 15]);\n                        return [4 /*yield*/, this.fetch(\"proxy\", postData, true)];\n                    case 13: return [2 /*return*/, _c.sent()];\n                    case 14:\n                        error_1 = _c.sent();\n                        return [2 /*return*/, checkError(\"call\", error_1, params.transaction)];\n                    case 15:\n                        postData = getTransactionPostData(params.transaction);\n                        postData.module = \"proxy\";\n                        postData.action = \"eth_estimateGas\";\n                        _c.label = 16;\n                    case 16:\n                        _c.trys.push([16, 18, , 19]);\n                        return [4 /*yield*/, this.fetch(\"proxy\", postData, true)];\n                    case 17: return [2 /*return*/, _c.sent()];\n                    case 18:\n                        error_2 = _c.sent();\n                        return [2 /*return*/, checkError(\"estimateGas\", error_2, params.transaction)];\n                    case 19:\n                        args = { action: \"getLogs\" };\n                        if (params.filter.fromBlock) {\n                            args.fromBlock = checkLogTag(params.filter.fromBlock);\n                        }\n                        if (params.filter.toBlock) {\n                            args.toBlock = checkLogTag(params.filter.toBlock);\n                        }\n                        if (params.filter.address) {\n                            args.address = params.filter.address;\n                        }\n                        // @TODO: We can handle slightly more complicated logs using the logs API\n                        if (params.filter.topics && params.filter.topics.length > 0) {\n                            if (params.filter.topics.length > 1) {\n                                logger.throwError(\"unsupported topic count\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                            }\n                            if (params.filter.topics.length === 1) {\n                                topic0 = params.filter.topics[0];\n                                if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                    logger.throwError(\"unsupported topic format\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                                }\n                                args.topic0 = topic0;\n                            }\n                        }\n                        return [4 /*yield*/, this.fetch(\"logs\", args)];\n                    case 20:\n                        logs = _c.sent();\n                        blocks = {};\n                        i = 0;\n                        _c.label = 21;\n                    case 21:\n                        if (!(i < logs.length)) return [3 /*break*/, 25];\n                        log = logs[i];\n                        if (log.blockHash != null) {\n                            return [3 /*break*/, 24];\n                        }\n                        if (!(blocks[log.blockNumber] == null)) return [3 /*break*/, 23];\n                        return [4 /*yield*/, this.getBlock(log.blockNumber)];\n                    case 22:\n                        block = _c.sent();\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                        _c.label = 23;\n                    case 23:\n                        log.blockHash = blocks[log.blockNumber];\n                        _c.label = 24;\n                    case 24:\n                        i++;\n                        return [3 /*break*/, 21];\n                    case 25: return [2 /*return*/, logs];\n                    case 26:\n                        if (this.network.name !== \"homestead\") {\n                            return [2 /*return*/, 0.0];\n                        }\n                        _b = parseFloat;\n                        return [4 /*yield*/, this.fetch(\"stats\", { action: \"ethprice\" })];\n                    case 27: return [2 /*return*/, _b.apply(void 0, [(_c.sent()).ethusd])];\n                    case 28: return [3 /*break*/, 29];\n                    case 29: return [2 /*return*/, _super.prototype.perform.call(this, method, params)];\n                }\n            });\n        });\n    };\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    EtherscanProvider.prototype.getHistory = function (addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            var _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = {\n                            action: \"txlist\"\n                        };\n                        return [4 /*yield*/, this.resolveName(addressOrName)];\n                    case 1:\n                        params = (_a.address = (_b.sent()),\n                            _a.startblock = ((startBlock == null) ? 0 : startBlock),\n                            _a.endblock = ((endBlock == null) ? 99999999 : endBlock),\n                            _a.sort = \"asc\",\n                            _a);\n                        return [4 /*yield*/, this.fetch(\"account\", params)];\n                    case 2:\n                        result = _b.sent();\n                        return [2 /*return*/, result.map(function (tx) {\n                                [\"contractAddress\", \"to\"].forEach(function (key) {\n                                    if (tx[key] == \"\") {\n                                        delete tx[key];\n                                    }\n                                });\n                                if (tx.creates == null && tx.contractAddress != null) {\n                                    tx.creates = tx.contractAddress;\n                                }\n                                var item = _this.formatter.transactionResponse(tx);\n                                if (tx.timeStamp) {\n                                    item.timestamp = parseInt(tx.timeStamp);\n                                }\n                                return item;\n                            })];\n                }\n            });\n        });\n    };\n    EtherscanProvider.prototype.isCommunityResource = function () {\n        return (this.apiKey == null);\n    };\n    return EtherscanProvider;\n}(base_provider_1.BaseProvider));\nexports.EtherscanProvider = EtherscanProvider;\n//# sourceMappingURL=etherscan-provider.js.map","import React, { useCallback } from 'react';\nimport ReactFocusLock from 'react-focus-lock';\nimport type { ModalFocusProps } from './modal-focus.types';\n\n/**\n * Based on the ModalFocusScope component from chakra-ui\n * https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/modal/src/modal-focus.tsx\n */\n\nconst FocusTrap: typeof ReactFocusLock =\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (ReactFocusLock as any).default ?? ReactFocusLock;\n\nexport const ModalFocus: React.FC<ModalFocusProps> = ({\n  initialFocusRef,\n  finalFocusRef,\n  restoreFocus,\n  children,\n  autoFocus,\n  ...props\n}) => {\n  const onActivation = useCallback(() => {\n    if (initialFocusRef?.current) {\n      initialFocusRef.current.focus();\n    }\n  }, [initialFocusRef]);\n\n  const onDeactivation = useCallback(() => {\n    finalFocusRef?.current?.focus();\n  }, [finalFocusRef]);\n\n  const returnFocus = restoreFocus && !finalFocusRef;\n\n  return (\n    <FocusTrap\n      autoFocus={autoFocus}\n      onActivation={onActivation}\n      onDeactivation={onDeactivation}\n      returnFocus={returnFocus}\n      {...props}\n    >\n      {children}\n    </FocusTrap>\n  );\n};\n\nModalFocus.displayName = 'ModalFocus';\n","export { ModalFooter } from './modal-footer';\nexport type {\n  ModalFooterProps,\n  ModalFooterComponent,\n  ModalFooterStyleUtilityProps,\n} from './modal-footer.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  AlignItems,\n  Display,\n  FlexWrap,\n} from '../../../helpers/constants/design-system';\nimport type { PolymorphicRef, BoxProps } from '../box';\nimport type { ButtonProps } from '../button';\nimport {\n  Box,\n  Button,\n  ButtonSize,\n  ButtonVariant,\n  Container,\n  ContainerMaxWidth,\n} from '..';\nimport { ModalFooterProps, ModalFooterComponent } from './modal-footer.types';\n\nexport const ModalFooter: ModalFooterComponent = React.forwardRef(\n  <C extends React.ElementType = 'footer'>(\n    {\n      className = '',\n      children,\n      submitButtonProps,\n      onSubmit,\n      cancelButtonProps,\n      onCancel,\n      containerProps,\n      ...props\n    }: ModalFooterProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const t = useI18nContext();\n    return (\n      <Box\n        className={classnames('mm-modal-footer', className)}\n        ref={ref}\n        paddingLeft={4}\n        paddingRight={4}\n        paddingTop={4}\n        {...(props as BoxProps<C>)}\n      >\n        {children}\n        <Container\n          maxWidth={ContainerMaxWidth.Sm}\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          flexWrap={FlexWrap.Wrap}\n          marginLeft=\"auto\"\n          marginRight=\"auto\"\n          gap={4}\n          {...containerProps}\n        >\n          {onCancel && (\n            <Button\n              onClick={onCancel}\n              children={t('cancel')}\n              variant={ButtonVariant.Secondary}\n              {...(cancelButtonProps as ButtonProps<'button'>)}\n              size={ButtonSize.Lg} // TODO: There is a type issue with using variant, size and spreading props after size\n              className={classnames(\n                'mm-modal-footer__button',\n                cancelButtonProps?.className || '',\n              )}\n            />\n          )}\n          {onSubmit && (\n            <Button\n              size={ButtonSize.Lg}\n              onClick={onSubmit}\n              children={t('confirm')}\n              {...submitButtonProps}\n              className={classnames(\n                'mm-modal-footer__button',\n                submitButtonProps?.className || '',\n              )}\n            />\n          )}\n        </Container>\n      </Box>\n    );\n  },\n);\n\nexport default ModalFooter;\n","export { ModalHeader } from './modal-header';\nexport type { ModalHeaderProps } from './modal-header.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { HeaderBase, Text, ButtonIcon, ButtonIconSize, IconName } from '..';\nimport {\n  TextVariant,\n  TextAlign,\n  BlockSize,\n} from '../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { ModalHeaderProps } from '.';\n\nexport const ModalHeader: React.FC<ModalHeaderProps> = ({\n  children,\n  className = '',\n  startAccessory,\n  endAccessory,\n  onClose,\n  closeButtonProps,\n  onBack,\n  backButtonProps,\n  ...props\n}) => {\n  const t = useI18nContext();\n  return (\n    <HeaderBase\n      className={classnames('mm-modal-header', className)}\n      as=\"header\"\n      paddingLeft={4}\n      paddingRight={4}\n      paddingBottom={4}\n      childrenWrapperProps={{\n        width: BlockSize.Full,\n      }}\n      startAccessory={\n        startAccessory ||\n        (onBack && (\n          <ButtonIcon\n            iconName={IconName.ArrowLeft}\n            ariaLabel={t('back')}\n            size={ButtonIconSize.Sm}\n            onClick={onBack}\n            {...backButtonProps}\n          />\n        ))\n      }\n      endAccessory={\n        endAccessory ||\n        (onClose && (\n          <ButtonIcon\n            iconName={IconName.Close}\n            ariaLabel={t('close')}\n            size={ButtonIconSize.Sm}\n            onClick={onClose}\n            {...closeButtonProps}\n          />\n        ))\n      }\n      {...props}\n    >\n      {typeof children === 'string' ? (\n        <Text variant={TextVariant.headingSm} textAlign={TextAlign.Center}>\n          {children}\n        </Text>\n      ) : (\n        children\n      )}\n    </HeaderBase>\n  );\n};\n","export { ModalOverlay } from './modal-overlay';\nexport type {\n  ModalOverlayProps,\n  ModalOverlayComponent,\n  ModalOverlayStyleUtilityProps,\n} from './modal-overlay.types';\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport {\n  BackgroundColor,\n  BlockSize,\n} from '../../../helpers/constants/design-system';\n\nimport { Box, BoxProps } from '../box';\nimport type { PolymorphicRef } from '../box';\n\nimport {\n  ModalOverlayProps,\n  ModalOverlayComponent,\n} from './modal-overlay.types';\n\nexport const ModalOverlay: ModalOverlayComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    { onClick, className = '', ...props }: ModalOverlayProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => (\n    <Box\n      className={classnames('mm-modal-overlay', className)}\n      ref={ref}\n      backgroundColor={BackgroundColor.overlayDefault}\n      width={BlockSize.Full}\n      height={BlockSize.Full}\n      onClick={onClick}\n      aria-hidden=\"true\"\n      {...(props as BoxProps<C>)}\n    />\n  ),\n);\n\nexport default ModalOverlay;\n","export { Modal } from './modal';\nexport type { ModalProps } from './modal.types';\nexport { useModalContext } from './modal.context';\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FallbackProvider = void 0;\nvar abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar random_1 = require(\"@ethersproject/random\");\nvar web_1 = require(\"@ethersproject/web\");\nvar base_provider_1 = require(\"./base-provider\");\nvar formatter_1 = require(\"./formatter\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    var result = null;\n    for (var i = 0; i < networks.length; i++) {\n        var network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    var middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    var a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (bignumber_1.BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map(function (i) { return serialize(i); }));\n    }\n    else if (typeof (value) === \"object\") {\n        var keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map(function (key) {\n            var v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nvar nextRid = 1;\n;\nfunction stall(duration) {\n    var cancel = null;\n    var timer = null;\n    var promise = (new Promise(function (resolve) {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    var wait = function (func) {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel: cancel, getPromise: getPromise, wait: wait };\n}\nvar ForwardErrors = [\n    logger_1.Logger.errors.CALL_EXCEPTION,\n    logger_1.Logger.errors.INSUFFICIENT_FUNDS,\n    logger_1.Logger.errors.NONCE_EXPIRED,\n    logger_1.Logger.errors.REPLACEMENT_UNDERPRICED,\n    logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nvar ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    var result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: function () { return config.provider; } });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        var tally = {};\n        configs.forEach(function (c) {\n            var value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        var keys = Object.keys(tally);\n        for (var i = 0; i < keys.length; i++) {\n            var check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    var normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                var values = configs.map(function (c) { return c.result; });\n                // Get the median block number\n                var blockNumber = median(configs.map(function (c) { return c.result; }), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                var values = configs.map(function (c) { return c.result; });\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map(function (c) { return c.result; }));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = (0, properties_1.shallowCopy)(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = (0, properties_1.shallowCopy)(block);\n                    block.transactions = block.transactions.map(function (tx) {\n                        tx = (0, properties_1.shallowCopy)(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n        var provider;\n        return __generator(this, function (_a) {\n            provider = (config.provider);\n            if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n                return [2 /*return*/, provider];\n            }\n            return [2 /*return*/, (0, web_1.poll)(function () {\n                    return new Promise(function (resolve, reject) {\n                        setTimeout(function () {\n                            // We are synced\n                            if (provider.blockNumber >= blockNumber) {\n                                return resolve(provider);\n                            }\n                            // We're done; just quit\n                            if (config.cancelled) {\n                                return resolve(null);\n                            }\n                            // Try again, next block\n                            return resolve(undefined);\n                        }, 0);\n                    });\n                }, { oncePoll: provider })];\n        });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function () {\n        var provider, _a, filter;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    provider = config.provider;\n                    _a = method;\n                    switch (_a) {\n                        case \"getBlockNumber\": return [3 /*break*/, 1];\n                        case \"getGasPrice\": return [3 /*break*/, 1];\n                        case \"getEtherPrice\": return [3 /*break*/, 2];\n                        case \"getBalance\": return [3 /*break*/, 3];\n                        case \"getTransactionCount\": return [3 /*break*/, 3];\n                        case \"getCode\": return [3 /*break*/, 3];\n                        case \"getStorageAt\": return [3 /*break*/, 6];\n                        case \"getBlock\": return [3 /*break*/, 9];\n                        case \"call\": return [3 /*break*/, 12];\n                        case \"estimateGas\": return [3 /*break*/, 12];\n                        case \"getTransaction\": return [3 /*break*/, 15];\n                        case \"getTransactionReceipt\": return [3 /*break*/, 15];\n                        case \"getLogs\": return [3 /*break*/, 16];\n                    }\n                    return [3 /*break*/, 19];\n                case 1: return [2 /*return*/, provider[method]()];\n                case 2:\n                    if (provider.getEtherPrice) {\n                        return [2 /*return*/, provider.getEtherPrice()];\n                    }\n                    return [3 /*break*/, 19];\n                case 3:\n                    if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag))) return [3 /*break*/, 5];\n                    return [4 /*yield*/, waitForSync(config, currentBlockNumber)];\n                case 4:\n                    provider = _b.sent();\n                    _b.label = 5;\n                case 5: return [2 /*return*/, provider[method](params.address, params.blockTag || \"latest\")];\n                case 6:\n                    if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag))) return [3 /*break*/, 8];\n                    return [4 /*yield*/, waitForSync(config, currentBlockNumber)];\n                case 7:\n                    provider = _b.sent();\n                    _b.label = 8;\n                case 8: return [2 /*return*/, provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\")];\n                case 9:\n                    if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag))) return [3 /*break*/, 11];\n                    return [4 /*yield*/, waitForSync(config, currentBlockNumber)];\n                case 10:\n                    provider = _b.sent();\n                    _b.label = 11;\n                case 11: return [2 /*return*/, provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash)];\n                case 12:\n                    if (!(params.blockTag && (0, bytes_1.isHexString)(params.blockTag))) return [3 /*break*/, 14];\n                    return [4 /*yield*/, waitForSync(config, currentBlockNumber)];\n                case 13:\n                    provider = _b.sent();\n                    _b.label = 14;\n                case 14:\n                    if (method === \"call\" && params.blockTag) {\n                        return [2 /*return*/, provider[method](params.transaction, params.blockTag)];\n                    }\n                    return [2 /*return*/, provider[method](params.transaction)];\n                case 15: return [2 /*return*/, provider[method](params.transactionHash)];\n                case 16:\n                    filter = params.filter;\n                    if (!((filter.fromBlock && (0, bytes_1.isHexString)(filter.fromBlock)) || (filter.toBlock && (0, bytes_1.isHexString)(filter.toBlock)))) return [3 /*break*/, 18];\n                    return [4 /*yield*/, waitForSync(config, currentBlockNumber)];\n                case 17:\n                    provider = _b.sent();\n                    _b.label = 18;\n                case 18: return [2 /*return*/, provider.getLogs(filter)];\n                case 19: return [2 /*return*/, logger.throwError(\"unknown method error\", logger_1.Logger.errors.UNKNOWN_ERROR, {\n                        method: method,\n                        params: params\n                    })];\n            }\n        });\n    });\n}\nvar FallbackProvider = /** @class */ (function (_super) {\n    __extends(FallbackProvider, _super);\n    function FallbackProvider(providers, quorum) {\n        var _this = this;\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        var providerConfigs = providers.map(function (configOrProvider, index) {\n            if (abstract_provider_1.Provider.isProvider(configOrProvider)) {\n                var stallTimeout = (0, formatter_1.isCommunityResource)(configOrProvider) ? 2000 : 750;\n                var priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout: stallTimeout, priority: priority });\n            }\n            var config = (0, properties_1.shallowCopy)(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = (0, formatter_1.isCommunityResource)(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            var weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", \"providers[\" + index + \"].weight\", weight);\n            }\n            return Object.freeze(config);\n        });\n        var total = providerConfigs.reduce(function (accum, c) { return (accum + c.weight); }, 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        var networkOrReady = checkNetworks(providerConfigs.map(function (c) { return (c.provider).network; }));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise(function (resolve, reject) {\n                setTimeout(function () {\n                    _this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        _this = _super.call(this, networkOrReady) || this;\n        // Preserve a copy, so we do not get mutated\n        (0, properties_1.defineReadOnly)(_this, \"providerConfigs\", Object.freeze(providerConfigs));\n        (0, properties_1.defineReadOnly)(_this, \"quorum\", quorum);\n        _this._highestBlockNumber = -1;\n        return _this;\n    }\n    FallbackProvider.prototype.detectNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var networks;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.providerConfigs.map(function (c) { return c.provider.getNetwork(); }))];\n                    case 1:\n                        networks = _a.sent();\n                        return [2 /*return*/, checkNetworks(networks)];\n                }\n            });\n        });\n    };\n    FallbackProvider.prototype.perform = function (method, params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var results, i_1, result, processFunc, configs, currentBlockNumber, i, first, _loop_1, this_1, state_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(method === \"sendTransaction\")) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(this.providerConfigs.map(function (c) {\n                                return c.provider.sendTransaction(params.signedTransaction).then(function (result) {\n                                    return result.hash;\n                                }, function (error) {\n                                    return error;\n                                });\n                            }))];\n                    case 1:\n                        results = _a.sent();\n                        // Any success is good enough (other errors are likely \"already seen\" errors\n                        for (i_1 = 0; i_1 < results.length; i_1++) {\n                            result = results[i_1];\n                            if (typeof (result) === \"string\") {\n                                return [2 /*return*/, result];\n                            }\n                        }\n                        // They were all an error; pick the first error\n                        throw results[0];\n                    case 2:\n                        if (!(this._highestBlockNumber === -1 && method !== \"getBlockNumber\")) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.getBlockNumber()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        processFunc = getProcessFunc(this, method, params);\n                        configs = (0, random_1.shuffled)(this.providerConfigs.map(properties_1.shallowCopy));\n                        configs.sort(function (a, b) { return (a.priority - b.priority); });\n                        currentBlockNumber = this._highestBlockNumber;\n                        i = 0;\n                        first = true;\n                        _loop_1 = function () {\n                            var t0, inflightWeight, _loop_2, waiting, results, result, errors;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        t0 = now();\n                                        inflightWeight = configs.filter(function (c) { return (c.runner && ((t0 - c.start) < c.stallTimeout)); })\n                                            .reduce(function (accum, c) { return (accum + c.weight); }, 0);\n                                        _loop_2 = function () {\n                                            var config = configs[i++];\n                                            var rid = nextRid++;\n                                            config.start = now();\n                                            config.staller = stall(config.stallTimeout);\n                                            config.staller.wait(function () { config.staller = null; });\n                                            config.runner = getRunner(config, currentBlockNumber, method, params).then(function (result) {\n                                                config.done = true;\n                                                config.result = result;\n                                                if (_this.listenerCount(\"debug\")) {\n                                                    _this.emit(\"debug\", {\n                                                        action: \"request\",\n                                                        rid: rid,\n                                                        backend: exposeDebugConfig(config, now()),\n                                                        request: { method: method, params: (0, properties_1.deepCopy)(params) },\n                                                        provider: _this\n                                                    });\n                                                }\n                                            }, function (error) {\n                                                config.done = true;\n                                                config.error = error;\n                                                if (_this.listenerCount(\"debug\")) {\n                                                    _this.emit(\"debug\", {\n                                                        action: \"request\",\n                                                        rid: rid,\n                                                        backend: exposeDebugConfig(config, now()),\n                                                        request: { method: method, params: (0, properties_1.deepCopy)(params) },\n                                                        provider: _this\n                                                    });\n                                                }\n                                            });\n                                            if (this_1.listenerCount(\"debug\")) {\n                                                this_1.emit(\"debug\", {\n                                                    action: \"request\",\n                                                    rid: rid,\n                                                    backend: exposeDebugConfig(config, null),\n                                                    request: { method: method, params: (0, properties_1.deepCopy)(params) },\n                                                    provider: this_1\n                                                });\n                                            }\n                                            inflightWeight += config.weight;\n                                        };\n                                        // Start running enough to meet quorum\n                                        while (inflightWeight < this_1.quorum && i < configs.length) {\n                                            _loop_2();\n                                        }\n                                        waiting = [];\n                                        configs.forEach(function (c) {\n                                            if (c.done || !c.runner) {\n                                                return;\n                                            }\n                                            waiting.push(c.runner);\n                                            if (c.staller) {\n                                                waiting.push(c.staller.getPromise());\n                                            }\n                                        });\n                                        if (!waiting.length) return [3 /*break*/, 2];\n                                        return [4 /*yield*/, Promise.race(waiting)];\n                                    case 1:\n                                        _b.sent();\n                                        _b.label = 2;\n                                    case 2:\n                                        results = configs.filter(function (c) { return (c.done && c.error == null); });\n                                        if (!(results.length >= this_1.quorum)) return [3 /*break*/, 5];\n                                        result = processFunc(results);\n                                        if (result !== undefined) {\n                                            // Shut down any stallers\n                                            configs.forEach(function (c) {\n                                                if (c.staller) {\n                                                    c.staller.cancel();\n                                                }\n                                                c.cancelled = true;\n                                            });\n                                            return [2 /*return*/, { value: result }];\n                                        }\n                                        if (!!first) return [3 /*break*/, 4];\n                                        return [4 /*yield*/, stall(100).getPromise()];\n                                    case 3:\n                                        _b.sent();\n                                        _b.label = 4;\n                                    case 4:\n                                        first = false;\n                                        _b.label = 5;\n                                    case 5:\n                                        errors = configs.reduce(function (accum, c) {\n                                            if (!c.done || c.error == null) {\n                                                return accum;\n                                            }\n                                            var code = (c.error).code;\n                                            if (ForwardErrors.indexOf(code) >= 0) {\n                                                if (!accum[code]) {\n                                                    accum[code] = { error: c.error, weight: 0 };\n                                                }\n                                                accum[code].weight += c.weight;\n                                            }\n                                            return accum;\n                                        }, ({}));\n                                        Object.keys(errors).forEach(function (errorCode) {\n                                            var tally = errors[errorCode];\n                                            if (tally.weight < _this.quorum) {\n                                                return;\n                                            }\n                                            // Shut down any stallers\n                                            configs.forEach(function (c) {\n                                                if (c.staller) {\n                                                    c.staller.cancel();\n                                                }\n                                                c.cancelled = true;\n                                            });\n                                            var e = (tally.error);\n                                            var props = {};\n                                            ForwardProperties.forEach(function (name) {\n                                                if (e[name] == null) {\n                                                    return;\n                                                }\n                                                props[name] = e[name];\n                                            });\n                                            logger.throwError(e.reason || e.message, errorCode, props);\n                                        });\n                                        // All configs have run to completion; we will never get more data\n                                        if (configs.filter(function (c) { return !c.done; }).length === 0) {\n                                            return [2 /*return*/, \"break\"];\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        _a.label = 5;\n                    case 5:\n                        if (!true) return [3 /*break*/, 7];\n                        return [5 /*yield**/, _loop_1()];\n                    case 6:\n                        state_1 = _a.sent();\n                        if (typeof state_1 === \"object\")\n                            return [2 /*return*/, state_1.value];\n                        if (state_1 === \"break\")\n                            return [3 /*break*/, 7];\n                        return [3 /*break*/, 5];\n                    case 7:\n                        // Shut down any stallers; shouldn't be any\n                        configs.forEach(function (c) {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return [2 /*return*/, logger.throwError(\"failed to meet quorum\", logger_1.Logger.errors.SERVER_ERROR, {\n                                method: method,\n                                params: params,\n                                //results: configs.map((c) => c.result),\n                                //errors: configs.map((c) => c.error),\n                                results: configs.map(function (c) { return exposeDebugConfig(c); }),\n                                provider: this\n                            })];\n                }\n            });\n        });\n    };\n    return FallbackProvider;\n}(base_provider_1.BaseProvider));\nexports.FallbackProvider = FallbackProvider;\n//# sourceMappingURL=fallback-provider.js.map","import { createContext, useContext } from 'react';\n\nimport type { ModalProps } from './modal.types';\n\nexport type ModalContextType = Omit<ModalProps, 'children'>;\n\nexport const ModalContext = createContext<ModalContextType | undefined>(\n  undefined,\n);\n\nexport const useModalContext = () => {\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error(\n      'useModalContext must be used within a ModalProvider, Seems you forgot to wrap the components in \"<Modal />\"',\n    );\n  }\n  return context;\n};\n","import React, { forwardRef, Ref } from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\n\nimport { ModalProps } from './modal.types';\nimport { ModalContext } from './modal.context';\n\nexport const Modal = forwardRef(\n  (\n    {\n      className = '',\n      isOpen,\n      onClose,\n      children,\n      isClosedOnOutsideClick = true,\n      isClosedOnEscapeKey = true,\n      autoFocus = true,\n      initialFocusRef,\n      finalFocusRef,\n      restoreFocus,\n      ...props\n    }: ModalProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const context = {\n      isOpen,\n      onClose,\n      isClosedOnOutsideClick,\n      isClosedOnEscapeKey,\n      autoFocus,\n      initialFocusRef,\n      finalFocusRef,\n      restoreFocus,\n    };\n    return isOpen\n      ? ReactDOM.createPortal(\n          <ModalContext.Provider value={context}>\n            <div\n              className={classnames('mm-modal', className)}\n              ref={ref}\n              {...props}\n            >\n              {children}\n            </div>\n          </ModalContext.Provider>,\n          document.body,\n        )\n      : null;\n  },\n);\n\nexport default Modal;\n","export { PickerNetwork } from './picker-network';\nexport type {\n  PickerNetworkProps,\n  PickerNetworkComponent,\n} from './picker-network.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  AlignItems,\n  BorderRadius,\n  TextVariant,\n  IconColor,\n  BackgroundColor,\n  Display,\n} from '../../../helpers/constants/design-system';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Box,\n  IconName,\n  Icon,\n  IconSize,\n  Text,\n} from '..';\nimport { BoxProps, PolymorphicRef } from '../box';\nimport {\n  PickerNetworkComponent,\n  PickerNetworkProps,\n} from './picker-network.types';\n\nexport const PickerNetwork: PickerNetworkComponent = React.forwardRef(\n  <C extends React.ElementType = 'button'>(\n    {\n      className = '',\n      avatarNetworkProps,\n      iconProps,\n      label,\n      labelProps,\n      src,\n      ...props\n    }: PickerNetworkProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    return (\n      <Box\n        className={classnames('mm-picker-network', className)}\n        ref={ref}\n        as=\"button\"\n        backgroundColor={BackgroundColor.backgroundAlternative}\n        alignItems={AlignItems.center}\n        paddingLeft={2}\n        paddingRight={4}\n        gap={2}\n        borderRadius={BorderRadius.pill}\n        display={Display.Flex}\n        {...(props as BoxProps<C>)}\n      >\n        <AvatarNetwork\n          className=\"mm-picker-network__avatar-network\"\n          src={src}\n          name={label}\n          size={AvatarNetworkSize.Xs}\n          {...avatarNetworkProps}\n        />\n        <Text as=\"span\" ellipsis variant={TextVariant.bodySm} {...labelProps}>\n          {label}\n        </Text>\n        <Icon\n          className=\"mm-picker-network__arrow-down-icon\"\n          name={IconName.ArrowDown}\n          color={IconColor.iconDefault}\n          size={IconSize.Xs}\n          marginLeft=\"auto\"\n          {...iconProps}\n        />\n      </Box>\n    );\n  },\n);\n","export { PopoverHeader } from './popover-header';\nexport type { PopoverHeaderProps } from './popover-header.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { HeaderBase, ButtonIcon, ButtonIconSize, IconName, Text } from '..';\nimport {\n  IconColor,\n  TextVariant,\n  TextAlign,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { PopoverHeaderProps } from '.';\n\nexport const PopoverHeader: React.FC<PopoverHeaderProps> = ({\n  children,\n  className = '',\n  startAccessory,\n  endAccessory,\n  onClose,\n  closeButtonProps,\n  onBack,\n  backButtonProps,\n  ...props\n}) => {\n  const t = useI18nContext();\n  return (\n    <HeaderBase\n      className={classnames('mm-popover-header', className)}\n      startAccessory={\n        startAccessory ||\n        (onBack && (\n          <ButtonIcon\n            iconName={IconName.ArrowLeft}\n            color={IconColor.inherit}\n            ariaLabel={t('back')}\n            size={ButtonIconSize.Sm}\n            onClick={onBack}\n            {...backButtonProps}\n          />\n        ))\n      }\n      endAccessory={\n        endAccessory ||\n        (onClose && (\n          <ButtonIcon\n            iconName={IconName.Close}\n            color={IconColor.inherit}\n            ariaLabel={t('close')}\n            size={ButtonIconSize.Sm}\n            onClick={onClose}\n            {...closeButtonProps}\n          />\n        ))\n      }\n      {...props}\n    >\n      {typeof children === 'string' ? (\n        <Text\n          variant={TextVariant.headingSm}\n          textAlign={TextAlign.Center}\n          color={TextColor.inherit}\n        >\n          {children}\n        </Text>\n      ) : (\n        children\n      )}\n    </HeaderBase>\n  );\n};\n","export { Popover } from './popover';\nexport { PopoverPosition, PopoverRole } from './popover.types';\nexport type {\n  PopoverProps,\n  PopoverStyleUtilityProps,\n  PopoverComponent,\n} from './popover.types';\n","import React, { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { usePopper } from 'react-popper';\nimport classnames from 'classnames';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  Display,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\n\nimport { Box } from '..';\nimport type { BoxProps, PolymorphicRef } from '../box';\n\nimport {\n  PopoverProps,\n  PopoverComponent,\n  PopoverPosition,\n  PopoverRole,\n} from './popover.types';\n\nexport const Popover: PopoverComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      children,\n      className = '',\n      position = PopoverPosition.Auto,\n      role = PopoverRole.Tooltip,\n      hasArrow = false,\n      matchWidth,\n      preventOverflow = false,\n      offset = [0, 8],\n      flip = false,\n      referenceHidden = true,\n      referenceElement,\n      isOpen,\n      title,\n      isPortal = false,\n      arrowProps,\n      onClickOutside,\n      onPressEscKey,\n      ...props\n    }: PopoverProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const [popperElement, setPopperElement] = useState<HTMLElement | null>(\n      null,\n    );\n    const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null);\n    const popoverRef = React.useRef<HTMLElement | null>(null);\n\n    // Define Popper options\n    const { styles, attributes } = usePopper(referenceElement, popperElement, {\n      placement: position,\n      modifiers: [\n        {\n          name: 'preventOverflow',\n          enabled: position === PopoverPosition.Auto ? true : preventOverflow,\n        },\n        {\n          name: 'flip',\n          enabled: position === PopoverPosition.Auto ? true : flip,\n        },\n        {\n          name: 'arrow',\n          enabled: hasArrow,\n          options: {\n            element: arrowElement,\n          },\n        },\n        {\n          name: 'offset',\n          options: {\n            offset,\n          },\n        },\n      ],\n    });\n\n    // Define width to match reference element or auto\n    const contentStyle = {\n      width: matchWidth ? referenceElement?.clientWidth : 'auto',\n    };\n\n    // Esc key press\n    const handleEscKey = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        // Close the popover when the \"Esc\" key is pressed\n        if (onPressEscKey) {\n          onPressEscKey();\n        }\n      }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        isOpen &&\n        popoverRef.current &&\n        !popoverRef.current.contains(event.target as Node)\n      ) {\n        if (onClickOutside) {\n          onClickOutside();\n        }\n      }\n    };\n\n    useEffect(() => {\n      document.addEventListener('keydown', handleEscKey);\n      if (isOpen) {\n        document.addEventListener('click', handleClickOutside);\n      } else {\n        document.removeEventListener('click', handleClickOutside);\n      }\n\n      return () => {\n        document.removeEventListener('keydown', handleEscKey);\n        document.removeEventListener('click', handleClickOutside);\n      };\n    }, [onPressEscKey, isOpen, onClickOutside]);\n\n    const PopoverContent = (\n      <Box\n        borderColor={BorderColor.borderMuted}\n        borderRadius={BorderRadius.LG}\n        backgroundColor={BackgroundColor.backgroundDefault}\n        padding={4}\n        role={role}\n        className={classnames(\n          'mm-popover',\n          {\n            'mm-popover--open': Boolean(isOpen),\n            'mm-popover--reference-hidden': Boolean(referenceHidden),\n          },\n          className,\n        )}\n        ref={(element: PolymorphicRef<C>) => {\n          if (ref) {\n            if (typeof ref === 'function') {\n              ref(element);\n            } else {\n              (ref as React.MutableRefObject<C | null>).current = element;\n            }\n          }\n          setPopperElement(element);\n          popoverRef.current = element;\n        }}\n        {...attributes.popper}\n        {...(props as BoxProps<C>)}\n        style={{ ...styles.popper, ...contentStyle, ...props.style }}\n      >\n        {children}\n        {hasArrow && (\n          <Box\n            borderColor={BorderColor.borderMuted}\n            className={classnames('mm-popover__arrow')}\n            ref={setArrowElement}\n            display={Display.Flex}\n            justifyContent={JustifyContent.center}\n            alignItems={AlignItems.center}\n            style={styles.arrow}\n            {...attributes.arrow}\n            {...(arrowProps as BoxProps<'div'>)}\n          />\n        )}\n      </Box>\n    );\n\n    return (\n      <>\n        {isPortal\n          ? isOpen && createPortal(PopoverContent, document.body)\n          : isOpen && PopoverContent}\n      </>\n    );\n  },\n);\n","import React from 'react';\nimport type {\n  StyleUtilityProps,\n  PolymorphicComponentPropWithRef,\n  BoxProps,\n} from '../box';\n\nexport enum PopoverPosition {\n  Auto = 'auto',\n  Top = 'top',\n  TopStart = 'top-start',\n  TopEnd = 'top-end',\n  Right = 'right',\n  RightStart = 'right-start',\n  RightEnd = 'right-end',\n  Bottom = 'bottom',\n  BottomStart = 'bottom-start',\n  BottomEnd = 'bottom-end',\n  Left = 'left',\n  LeftStart = 'left-start',\n  LeftEnd = 'left-end',\n}\n\nexport enum PopoverRole {\n  Tooltip = 'tooltip',\n  Dialog = 'dialog',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface PopoverStyleUtilityProps extends StyleUtilityProps {\n  /**\n   * The contents within the Popover\n   */\n  children?: React.ReactNode;\n  /**\n   * Additional classNames to be added to the Popover component\n   */\n  className?: string;\n  /**\n   * The position of the Popover. Possible values could be  PopoverPosition.Auto, PopoverPosition.AutoStart, PopoverPosition.AutoEnd, PopoverPosition.Top, PopoverPosition.TopStart, PopoverPosition.TopEnd, PopoverPosition.Right, PopoverPosition.RightStart, PopoverPosition.RightEnd, PopoverPosition.Bottom, PopoverPosition.BottomStart, PopoverPosition.BottomEnd, PopoverPosition.Left, PopoverPosition.LeftStart, PopoverPosition.LeftEnd\n   */\n  position?: PopoverPosition;\n  /**\n   * Use `PopoverRole.Dialog` if the content is interactive, or `PopoverRole.Tooltip` for purely informational popovers.\n   */\n  role?: PopoverRole;\n  /**\n   * Boolean to show or hide the Popover arrow pointing to the reference element\n   * Default: false\n   */\n  hasArrow?: boolean;\n  /**\n   * Pass any `BoxProps` to the Popover arrow\n   */\n  arrowProps?: BoxProps<'div'>;\n  /**\n   * Boolean to control the width of the Popover to match the width of the reference element\n   * Default: false\n   */\n  matchWidth?: boolean;\n  /**\n   * Boolean to control the Popover overflow from the page\n   * When PopoverPosition.Auto this becomes true\n   * Default: false\n   */\n  preventOverflow?: boolean;\n  /**\n   * Boolean to allow the Popover to flip to the opposite side if there is not enough space in the current position\n   * When PopoverPosition.Auto this becomes true\n   * Default: false\n   */\n  flip?: boolean;\n  /**\n   * Boolean to allow the Popover to hide fully if the reference element is hidden\n   * Default: false\n   */\n  referenceHidden?: boolean;\n  /**\n   * Reference element to position the Popover\n   */\n  referenceElement?: HTMLElement | null;\n  /**\n   * Boolean to let the Popover know if it is open or not\n   */\n  isOpen?: boolean;\n  /**\n   * Offset to be applied to the Popover horizontal and vertical offsets in pixels\n   * Requires an array of two numbers\n   * default: [0, 8]\n   */\n  offset?: [number, number];\n  /**\n   * Boolean to allow the Popover to be rendered in a createPortal\n   */\n  isPortal?: boolean;\n  /**\n   * Pass a close function for the escape key callback to close the Popover\n   */\n  onPressEscKey?: () => void;\n  /**\n   * On click outside callback to close the Popover\n   */\n  onClickOutside?: () => void;\n}\n\nexport type PopoverProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, PopoverStyleUtilityProps>;\n\nexport type PopoverComponent = <C extends React.ElementType = 'div'>(\n  props: PopoverProps<C>,\n) => React.ReactElement | null;\n","export { SelectButton } from './select-button';\nexport { SelectButtonSize } from './select-button.types';\nexport type { SelectButtonProps } from './select-button.types';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showThrottleMessage = exports.isCommunityResource = exports.isCommunityResourcable = exports.Formatter = void 0;\nvar address_1 = require(\"@ethersproject/address\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar constants_1 = require(\"@ethersproject/constants\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar transactions_1 = require(\"@ethersproject/transactions\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar Formatter = /** @class */ (function () {\n    function Formatter() {\n        this.formats = this.getDefaultFormats();\n    }\n    Formatter.prototype.getDefaultFormats = function () {\n        var _this = this;\n        var formats = ({});\n        var address = this.address.bind(this);\n        var bigNumber = this.bigNumber.bind(this);\n        var blockTag = this.blockTag.bind(this);\n        var data = this.data.bind(this);\n        var hash = this.hash.bind(this);\n        var hex = this.hex.bind(this);\n        var number = this.number.bind(this);\n        var type = this.type.bind(this);\n        var strictData = function (v) { return _this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: Formatter.allowNull(address),\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = (0, properties_1.shallowCopy)(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    };\n    Formatter.prototype.accessList = function (accessList) {\n        return (0, transactions_1.accessListify)(accessList || []);\n    };\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    Formatter.prototype.number = function (number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return bignumber_1.BigNumber.from(number).toNumber();\n    };\n    Formatter.prototype.type = function (number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return bignumber_1.BigNumber.from(number).toNumber();\n    };\n    // Strict! Used on input.\n    Formatter.prototype.bigNumber = function (value) {\n        return bignumber_1.BigNumber.from(value);\n    };\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    Formatter.prototype.boolean = function (value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    };\n    Formatter.prototype.hex = function (value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if ((0, bytes_1.isHexString)(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    };\n    Formatter.prototype.data = function (value, strict) {\n        var result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    };\n    // Requires an address\n    // Strict! Used on input.\n    Formatter.prototype.address = function (value) {\n        return (0, address_1.getAddress)(value);\n    };\n    Formatter.prototype.callAddress = function (value) {\n        if (!(0, bytes_1.isHexString)(value, 32)) {\n            return null;\n        }\n        var address = (0, address_1.getAddress)((0, bytes_1.hexDataSlice)(value, 12));\n        return (address === constants_1.AddressZero) ? null : address;\n    };\n    Formatter.prototype.contractAddress = function (value) {\n        return (0, address_1.getContractAddress)(value);\n    };\n    // Strict! Used on input.\n    Formatter.prototype.blockTag = function (blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n            case \"finalized\":\n                return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || (0, bytes_1.isHexString)(blockTag)) {\n            return (0, bytes_1.hexValue)(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    };\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    Formatter.prototype.hash = function (value, strict) {\n        var result = this.hex(value, strict);\n        if ((0, bytes_1.hexDataLength)(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    };\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    Formatter.prototype.difficulty = function (value) {\n        if (value == null) {\n            return null;\n        }\n        var v = bignumber_1.BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    };\n    Formatter.prototype.uint256 = function (value) {\n        if (!(0, bytes_1.isHexString)(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return (0, bytes_1.hexZeroPad)(value, 32);\n    };\n    Formatter.prototype._block = function (value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        var difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        var result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : bignumber_1.BigNumber.from(difficulty));\n        return result;\n    };\n    Formatter.prototype.block = function (value) {\n        return this._block(value, this.formats.block);\n    };\n    Formatter.prototype.blockWithTransactions = function (value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    };\n    // Strict! Used on input.\n    Formatter.prototype.transactionRequest = function (value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    };\n    Formatter.prototype.transactionResponse = function (transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && bignumber_1.BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        var result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            var chainId = transaction.chainId;\n            if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            var chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    };\n    Formatter.prototype.transaction = function (value) {\n        return (0, transactions_1.parse)(value);\n    };\n    Formatter.prototype.receiptLog = function (value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    };\n    Formatter.prototype.receipt = function (value) {\n        var result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                var value_1 = bignumber_1.BigNumber.from(result.root).toNumber();\n                if (value_1 === 0 || value_1 === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value_1)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value_1;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    };\n    Formatter.prototype.topics = function (value) {\n        var _this = this;\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.topics(v); });\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    };\n    Formatter.prototype.filter = function (value) {\n        return Formatter.check(this.formats.filter, value);\n    };\n    Formatter.prototype.filterLog = function (value) {\n        return Formatter.check(this.formats.filterLog, value);\n    };\n    Formatter.check = function (format, object) {\n        var result = {};\n        for (var key in format) {\n            try {\n                var value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    };\n    // if value is null-ish, nullValue is returned\n    Formatter.allowNull = function (format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    };\n    // If value is false-ish, replaceValue is returned\n    Formatter.allowFalsish = function (format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    };\n    // Requires an Array satisfying check\n    Formatter.arrayOf = function (format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            var result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    };\n    return Formatter;\n}());\nexports.Formatter = Formatter;\nfunction isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexports.isCommunityResourcable = isCommunityResourcable;\nfunction isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\nexports.isCommunityResource = isCommunityResource;\n// Show the throttle message only once\nvar throttleMessage = false;\nfunction showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\nexports.showThrottleMessage = showThrottleMessage;\n//# sourceMappingURL=formatter.js.map","import React, { useContext } from 'react';\nimport classnames from 'classnames';\nimport { SelectContext } from '../select-wrapper';\nimport type { PolymorphicRef } from '../box';\nimport { Box, Icon, IconName, IconSize, Label, Text } from '..';\nimport type { TextProps } from '../text';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  SelectButtonProps,\n  SelectButtonComponent,\n  SelectButtonSize,\n} from './select-button.types';\n\n// Utility function to check for plain objects\nconst isPlainObject = (obj: unknown) => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    obj.constructor === Object &&\n    !React.isValidElement(obj)\n  );\n};\n\nexport const SelectButton: SelectButtonComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      className = '',\n      placeholder: placeholderProp,\n      children,\n      size = SelectButtonSize.Md,\n      isBlock,\n      isDanger: isDangerProp,\n      isDisabled: isDisabledProp,\n      disabled, // to allow our components to maintain intuitive building and support native HTML attribute\n      startAccessory,\n      endAccessory,\n      label,\n      labelProps,\n      description,\n      descriptionProps,\n      caretIconProps,\n      value: valueProp,\n      uncontrolledValue: uncontrolledValueProp,\n      defaultValue: defaultValueProp,\n      ...props\n    }: SelectButtonProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const selectContext = useContext(SelectContext);\n    const isWithinSelectWrapper = Boolean(selectContext);\n\n    const {\n      isOpen = false, // Default values for when not in SelectWrapper\n      isUncontrolledOpen = false,\n      toggleUncontrolledOpen,\n      isDanger = false,\n      isDisabled = false,\n      value = '',\n      uncontrolledValue = '',\n      defaultValue = '',\n      placeholder = '',\n    } = selectContext || {};\n\n    const contentToRender =\n      valueProp ||\n      uncontrolledValueProp ||\n      value ||\n      uncontrolledValue ||\n      defaultValueProp ||\n      defaultValue ||\n      placeholderProp ||\n      placeholder ||\n      children;\n\n    let labelRender = label;\n    let descriptionRender = description;\n    let startAccessoryRender = startAccessory;\n    let endAccessoryRender = endAccessory;\n\n    const contentIsPlainObject = isPlainObject(contentToRender);\n\n    if (contentIsPlainObject) {\n      if (contentToRender.label) {\n        labelRender = contentToRender.label;\n      }\n      if (contentToRender.description) {\n        descriptionRender = contentToRender.description;\n      }\n      if (contentToRender.startAccessory) {\n        startAccessoryRender = contentToRender.startAccessory;\n      }\n      if (contentToRender.endAccessory) {\n        endAccessoryRender = contentToRender.endAccessory;\n      }\n    }\n\n    const getPaddingBySize = () => {\n      switch (size) {\n        case SelectButtonSize.Sm:\n          return 1;\n        case SelectButtonSize.Md:\n          return 2;\n        case SelectButtonSize.Lg:\n          return 3;\n        default:\n          return 1;\n      }\n    };\n\n    return (\n      <Text\n        className={classnames(\n          'mm-select-button',\n          {\n            'mm-select-button--type-danger':\n              Boolean(isDanger) || Boolean(isDangerProp),\n            'mm-select-button--disabled':\n              Boolean(isDisabled) || Boolean(isDisabledProp),\n            'mm-select-button--block': Boolean(isBlock),\n            'mm-select-button--open':\n              Boolean(isOpen) || Boolean(isUncontrolledOpen),\n            [`mm-select-button--size-${size}`]:\n              Object.values(SelectButtonSize).includes(size),\n          },\n          className,\n        )}\n        ref={ref}\n        disabled={isDisabled || isDisabledProp || disabled}\n        as=\"button\"\n        onClick={isWithinSelectWrapper ? toggleUncontrolledOpen : undefined}\n        borderColor={BorderColor.borderDefault}\n        borderRadius={BorderRadius.MD}\n        backgroundColor={BackgroundColor.backgroundDefault}\n        paddingTop={getPaddingBySize()}\n        paddingBottom={getPaddingBySize()}\n        paddingLeft={4}\n        paddingRight={4}\n        display={Display.Flex}\n        height={BlockSize.Full}\n        width={isBlock && BlockSize.Full}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.spaceBetween}\n        gap={2}\n        {...(props as TextProps<C>)}\n      >\n        {startAccessoryRender}\n        <Box\n          as=\"span\"\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          width={BlockSize.Full}\n          className=\"mm-select-button__content\"\n        >\n          {labelRender && <Label>{labelRender}</Label>}\n          {descriptionRender && (\n            <Text\n              variant={TextVariant.bodySm}\n              color={TextColor.textAlternative}\n              ellipsis\n              {...descriptionProps}\n            >\n              {descriptionRender}\n            </Text>\n          )}\n          {!contentIsPlainObject && contentToRender}\n        </Box>\n\n        {endAccessoryRender}\n        <Icon\n          name={IconName.ArrowDown}\n          size={size === SelectButtonSize.Sm ? IconSize.Xs : IconSize.Sm}\n          {...caretIconProps}\n        />\n      </Text>\n    );\n  },\n);\n","import type {\n  StyleUtilityProps,\n  PolymorphicComponentPropWithRef,\n} from '../box';\nimport { IconProps } from '../icon';\nimport { LabelStyleUtilityProps } from '../label/label.types';\nimport { TextStyleUtilityProps } from '../text';\n\nexport enum SelectButtonSize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface SelectButtonStyleUtilityProps extends StyleUtilityProps {\n  /*\n   * Additional classNames to be added to the SelectButton component\n   */\n  className?: string;\n  /**\n   * The size of the SelectButton using SelectButtonSize enum\n   * Possible values: 'SelectButtonSize.Sm', 'SelectButtonSize.Md', 'SelectButtonSize.Lg'\n   */\n  size?: SelectButtonSize;\n  /*\n   * Placeholder for SelectButton component\n   * Using the example prop shape recommendation will help utilize the structure of this component:\n   * {\n   *   label: 'Label',\n   *   description: 'Description',\n   *   startAccessory: <AvatarAccount address=\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\" size={AvatarAccountSize.Sm} />,\n   *   endAccessory: <AvatarAccount address=\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\" size={AvatarAccountSize.Sm} />,\n   * }\n   */\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  placeholder?: any;\n  /*\n   * Value for `SelectButton` component\n   * Using the example prop shape recommendation will help utilize the structure of this component:\n   * {\n   *   label: 'Label',\n   *   description: 'Description',\n   *   startAccessory: <AvatarAccount address=\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\" size={AvatarAccountSize.Sm} />,\n   *   endAccessory: <AvatarAccount address=\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\" size={AvatarAccountSize.Sm} />,\n   * }\n   */\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value?: any;\n  /*\n   * DefaultValue for SelectButton component\n   * Using the example prop shape recommendation will help utilize the structure of this component:\n   * {\n   *   label: 'Label',\n   *   description: 'Description',\n   *   startAccessory: <AvatarAccount address=\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\" size={AvatarAccountSize.Sm} />,\n   *   endAccessory: <AvatarAccount address=\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\" size={AvatarAccountSize.Sm} />,\n   * }\n   */\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  defaultValue?: any;\n  /*\n   * isBlock boolean prop for SelectButton component to set display to block\n   */\n  isBlock?: boolean;\n  /*\n   * isDanger boolean for SelectButton component to set visual state to danger/error\n   */\n  isDanger?: boolean;\n  /*\n   * isDisabled boolean for SelectButton component to set visual state to disabled\n   */\n  isDisabled?: boolean;\n  /*\n   * Please use the `isDisabled` prop instead, this prop is added only for backwards compatibility and intuitive HTML support\n   */\n  disabled?: boolean;\n  /*\n   * label for SelectButton component that will display in the center content with the description below\n   */\n  label?: string | React.ReactNode;\n  /*\n   * labelProps to make changes to the label component within SelectButton\n   */\n  labelProps?: LabelStyleUtilityProps;\n  /*\n   * description for SelectButton component that will display below the label\n   */\n  description?: string | React.ReactNode;\n  /*\n   * descriptionProps to make changes to the label component within SelectButton\n   */\n  descriptionProps?: TextStyleUtilityProps;\n  /*\n   * startAccessory for SelectButton component that will display to the start of the content\n   */\n  startAccessory?: string | React.ReactNode;\n  /*\n   * endAccessory for SelectButton component that will display to the start of the content\n   */\n  endAccessory?: string | React.ReactNode;\n  /*\n   * caretIconProps to make changes to the caret Icon component at the end of SelectButton\n   */\n  caretIconProps?: IconProps<'span'>;\n}\n\nexport type SelectButtonProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, SelectButtonStyleUtilityProps>;\n\nexport type SelectButtonComponent = <C extends React.ElementType = 'div'>(\n  props: SelectButtonProps<C>,\n) => React.ReactElement | null;\n","export { SelectOption } from './select-option';\nexport type { SelectOptionProps } from './select-option.types';\n","import React, { useContext } from 'react';\nimport classnames from 'classnames';\nimport type { PolymorphicRef, BoxProps } from '../box';\nimport { Box } from '..';\nimport { SelectContext } from '../select-wrapper';\nimport { Display } from '../../../helpers/constants/design-system';\nimport {\n  SelectOptionProps,\n  SelectOptionComponent,\n} from './select-option.types';\n\nexport const SelectOption: SelectOptionComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    { className = '', value, children, ...props }: SelectOptionProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const selectContext = useContext(SelectContext);\n\n    if (!selectContext) {\n      throw new Error('SelectOption must be used within a SelectWrapper.');\n    }\n\n    const {\n      setUncontrolledValue,\n      onValueChange,\n      isMultiSelect,\n      isOpen,\n      onOpenChange,\n      toggleUncontrolledOpen,\n    } = selectContext;\n\n    const handleClick = () => {\n      // if there is an onValueChange prop, use that to set the value\n      if (onValueChange) {\n        onValueChange(value);\n      } else {\n        setUncontrolledValue(value);\n      }\n\n      // When not a multiselect, close the popover on click\n      if (!isMultiSelect && isOpen) {\n        onOpenChange(!isOpen);\n      } else if (!isMultiSelect) {\n        toggleUncontrolledOpen();\n      }\n    };\n\n    return (\n      <Box\n        className={classnames('mm-select-option', className)}\n        ref={ref}\n        onClick={handleClick}\n        as=\"button\"\n        display={Display.Block}\n        {...(props as BoxProps<C>)}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n","export { SelectWrapper } from './select-wrapper';\nexport type { SelectWrapperProps } from './select-wrapper.types';\nexport { SelectContext, useSelectContext } from './select-wrapper.context';\n","import { useContext, createContext } from 'react';\nimport { SelectContextType } from './select-wrapper.types';\n\nexport const SelectContext = createContext<SelectContextType | undefined>(\n  undefined,\n);\n\nexport const useSelectContext = () => {\n  const context = useContext(SelectContext);\n\n  if (!context) {\n    throw new Error('useSelectContext must be used within a SelectWrapper');\n  }\n\n  return context;\n};\n","import React, { useState, useRef } from 'react';\nimport classnames from 'classnames';\nimport type { PolymorphicRef, BoxProps } from '../box';\nimport { Box, Popover, PopoverPosition } from '..';\nimport {\n  SelectWrapperComponent,\n  SelectWrapperProps,\n} from './select-wrapper.types';\nimport { SelectContext } from './select-wrapper.context';\n\nexport const SelectWrapper: SelectWrapperComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      className = '',\n      defaultValue,\n      value,\n      onValueChange,\n      placeholder,\n      isDanger,\n      isDisabled,\n      isOpen,\n      onOpenChange,\n      isMultiSelect,\n      triggerComponent,\n      popoverProps,\n      children,\n      onBlur,\n      ...props\n    }: SelectWrapperProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [uncontrolledValue, setUncontrolledValue] = useState<any | null>();\n    const [isUncontrolledOpen, setIsUncontrolledOpen] =\n      useState<boolean>(false);\n    const [referenceElement, setReferenceElement] =\n      useState<HTMLElement | null>();\n    const popoverRef = useRef<HTMLDivElement | null>(null);\n    const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n    const setBoxRef = (anchorRef: HTMLElement | null) => {\n      setReferenceElement(anchorRef);\n    };\n\n    const toggleUncontrolledOpen = () => {\n      if (isUncontrolledOpen && onBlur) {\n        onBlur();\n      }\n      setIsUncontrolledOpen(!isUncontrolledOpen);\n    };\n\n    const handleClickOutside = () => {\n      setIsUncontrolledOpen(false);\n      if (onOpenChange) {\n        onOpenChange(false);\n      }\n      if (onBlur) {\n        onBlur();\n      }\n    };\n\n    return (\n      <SelectContext.Provider\n        value={{\n          isOpen,\n          onOpenChange,\n          isUncontrolledOpen,\n          setIsUncontrolledOpen,\n          toggleUncontrolledOpen,\n          isDisabled,\n          isDanger,\n          defaultValue,\n          value,\n          onValueChange,\n          uncontrolledValue,\n          setUncontrolledValue,\n          placeholder,\n          isMultiSelect,\n        }}\n      >\n        <Box\n          className={classnames('mm-select-wrapper', className)}\n          ref={wrapperRef && ref}\n          {...(props as BoxProps<C>)}\n        >\n          {triggerComponent &&\n            React.cloneElement(triggerComponent, {\n              ref: setBoxRef,\n            })}\n          <Popover\n            isOpen={isOpen || isUncontrolledOpen}\n            position={PopoverPosition.Bottom}\n            onClickOutside={handleClickOutside}\n            matchWidth\n            referenceElement={referenceElement}\n            referenceHidden={false}\n            padding={0}\n            ref={popoverRef}\n            {...popoverProps}\n            className={classnames(\n              'mm-select-wrapper__popover',\n              popoverProps?.className || '',\n            )}\n          >\n            {children}\n          </Popover>\n        </Box>\n      </SelectContext.Provider>\n    );\n  },\n);\n","export { TagUrl } from './tag-url';\nexport type { TagUrlProps } from './tag-url.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  Display,\n  IconColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  AvatarFavicon,\n  ButtonLink,\n  Box,\n  IconName,\n  Icon,\n  IconSize,\n  Text,\n  ButtonLinkSize,\n} from '..';\nimport { BoxProps, PolymorphicRef } from '../box';\nimport { TagUrlComponent, TagUrlProps } from './tag-url.types';\n\nexport const TagUrl: TagUrlComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      label,\n      labelProps,\n      actionButtonLabel,\n      actionButtonProps,\n      src,\n      showLockIcon,\n      avatarFaviconProps,\n      lockIconProps,\n      className = '',\n      ...props\n    }: TagUrlProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    return (\n      <Box\n        className={classnames('mm-tag-url', className)}\n        ref={ref}\n        backgroundColor={BackgroundColor.backgroundDefault}\n        borderColor={BorderColor.borderDefault}\n        borderWidth={1}\n        alignItems={AlignItems.center}\n        paddingLeft={2}\n        paddingRight={4}\n        gap={2}\n        borderRadius={BorderRadius.pill}\n        display={Display.Flex}\n        {...(props as BoxProps<C>)}\n      >\n        <AvatarFavicon src={src} name={label} {...avatarFaviconProps} />\n        {showLockIcon && (\n          <Icon\n            className=\"mm-tag-url__lock-icon\"\n            name={IconName.Lock}\n            color={IconColor.iconAlternative}\n            size={IconSize.Sm}\n            aria-label=\"https://\"\n            role=\"img\"\n            {...lockIconProps}\n          />\n        )}\n        <Text variant={TextVariant.bodyMd} ellipsis {...labelProps}>\n          {label}\n        </Text>\n        {actionButtonLabel && (\n          <ButtonLink\n            as=\"a\"\n            size={ButtonLinkSize.Sm}\n            paddingLeft={0}\n            paddingRight={0}\n            marginLeft={2}\n            marginRight={2}\n            {...actionButtonProps}\n          >\n            {actionButtonLabel}\n          </ButtonLink>\n        )}\n      </Box>\n    );\n  },\n);\n","export { Tag } from './tag';\nexport type { TagProps } from './tag.types';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Formatter = exports.showThrottleMessage = exports.isCommunityResourcable = exports.isCommunityResource = exports.getNetwork = exports.getDefaultProvider = exports.JsonRpcSigner = exports.IpcProvider = exports.WebSocketProvider = exports.Web3Provider = exports.StaticJsonRpcProvider = exports.PocketProvider = exports.NodesmithProvider = exports.JsonRpcBatchProvider = exports.JsonRpcProvider = exports.InfuraWebSocketProvider = exports.InfuraProvider = exports.EtherscanProvider = exports.CloudflareProvider = exports.AnkrProvider = exports.AlchemyWebSocketProvider = exports.AlchemyProvider = exports.FallbackProvider = exports.UrlJsonRpcProvider = exports.Resolver = exports.BaseProvider = exports.Provider = void 0;\nvar abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return abstract_provider_1.Provider; } });\nvar networks_1 = require(\"@ethersproject/networks\");\nObject.defineProperty(exports, \"getNetwork\", { enumerable: true, get: function () { return networks_1.getNetwork; } });\nvar base_provider_1 = require(\"./base-provider\");\nObject.defineProperty(exports, \"BaseProvider\", { enumerable: true, get: function () { return base_provider_1.BaseProvider; } });\nObject.defineProperty(exports, \"Resolver\", { enumerable: true, get: function () { return base_provider_1.Resolver; } });\nvar alchemy_provider_1 = require(\"./alchemy-provider\");\nObject.defineProperty(exports, \"AlchemyProvider\", { enumerable: true, get: function () { return alchemy_provider_1.AlchemyProvider; } });\nObject.defineProperty(exports, \"AlchemyWebSocketProvider\", { enumerable: true, get: function () { return alchemy_provider_1.AlchemyWebSocketProvider; } });\nvar ankr_provider_1 = require(\"./ankr-provider\");\nObject.defineProperty(exports, \"AnkrProvider\", { enumerable: true, get: function () { return ankr_provider_1.AnkrProvider; } });\nvar cloudflare_provider_1 = require(\"./cloudflare-provider\");\nObject.defineProperty(exports, \"CloudflareProvider\", { enumerable: true, get: function () { return cloudflare_provider_1.CloudflareProvider; } });\nvar etherscan_provider_1 = require(\"./etherscan-provider\");\nObject.defineProperty(exports, \"EtherscanProvider\", { enumerable: true, get: function () { return etherscan_provider_1.EtherscanProvider; } });\nvar fallback_provider_1 = require(\"./fallback-provider\");\nObject.defineProperty(exports, \"FallbackProvider\", { enumerable: true, get: function () { return fallback_provider_1.FallbackProvider; } });\nvar ipc_provider_1 = require(\"./ipc-provider\");\nObject.defineProperty(exports, \"IpcProvider\", { enumerable: true, get: function () { return ipc_provider_1.IpcProvider; } });\nvar infura_provider_1 = require(\"./infura-provider\");\nObject.defineProperty(exports, \"InfuraProvider\", { enumerable: true, get: function () { return infura_provider_1.InfuraProvider; } });\nObject.defineProperty(exports, \"InfuraWebSocketProvider\", { enumerable: true, get: function () { return infura_provider_1.InfuraWebSocketProvider; } });\nvar json_rpc_provider_1 = require(\"./json-rpc-provider\");\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } });\nObject.defineProperty(exports, \"JsonRpcSigner\", { enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcSigner; } });\nvar json_rpc_batch_provider_1 = require(\"./json-rpc-batch-provider\");\nObject.defineProperty(exports, \"JsonRpcBatchProvider\", { enumerable: true, get: function () { return json_rpc_batch_provider_1.JsonRpcBatchProvider; } });\nvar nodesmith_provider_1 = require(\"./nodesmith-provider\");\nObject.defineProperty(exports, \"NodesmithProvider\", { enumerable: true, get: function () { return nodesmith_provider_1.NodesmithProvider; } });\nvar pocket_provider_1 = require(\"./pocket-provider\");\nObject.defineProperty(exports, \"PocketProvider\", { enumerable: true, get: function () { return pocket_provider_1.PocketProvider; } });\nvar url_json_rpc_provider_1 = require(\"./url-json-rpc-provider\");\nObject.defineProperty(exports, \"StaticJsonRpcProvider\", { enumerable: true, get: function () { return url_json_rpc_provider_1.StaticJsonRpcProvider; } });\nObject.defineProperty(exports, \"UrlJsonRpcProvider\", { enumerable: true, get: function () { return url_json_rpc_provider_1.UrlJsonRpcProvider; } });\nvar web3_provider_1 = require(\"./web3-provider\");\nObject.defineProperty(exports, \"Web3Provider\", { enumerable: true, get: function () { return web3_provider_1.Web3Provider; } });\nvar websocket_provider_1 = require(\"./websocket-provider\");\nObject.defineProperty(exports, \"WebSocketProvider\", { enumerable: true, get: function () { return websocket_provider_1.WebSocketProvider; } });\nvar formatter_1 = require(\"./formatter\");\nObject.defineProperty(exports, \"Formatter\", { enumerable: true, get: function () { return formatter_1.Formatter; } });\nObject.defineProperty(exports, \"isCommunityResourcable\", { enumerable: true, get: function () { return formatter_1.isCommunityResourcable; } });\nObject.defineProperty(exports, \"isCommunityResource\", { enumerable: true, get: function () { return formatter_1.isCommunityResource; } });\nObject.defineProperty(exports, \"showThrottleMessage\", { enumerable: true, get: function () { return formatter_1.showThrottleMessage; } });\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        var match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\":\n                case \"https\":\n                    return new json_rpc_provider_1.JsonRpcProvider(network);\n                case \"ws\":\n                case \"wss\":\n                    return new websocket_provider_1.WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    var n = (0, networks_1.getNetwork)(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", logger_1.Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider: fallback_provider_1.FallbackProvider,\n        AlchemyProvider: alchemy_provider_1.AlchemyProvider,\n        AnkrProvider: ankr_provider_1.AnkrProvider,\n        CloudflareProvider: cloudflare_provider_1.CloudflareProvider,\n        EtherscanProvider: etherscan_provider_1.EtherscanProvider,\n        InfuraProvider: infura_provider_1.InfuraProvider,\n        JsonRpcProvider: json_rpc_provider_1.JsonRpcProvider,\n        NodesmithProvider: nodesmith_provider_1.NodesmithProvider,\n        PocketProvider: pocket_provider_1.PocketProvider,\n        Web3Provider: web3_provider_1.Web3Provider,\n        IpcProvider: ipc_provider_1.IpcProvider,\n    }, options);\n}\nexports.getDefaultProvider = getDefaultProvider;\n//# sourceMappingURL=index.js.map","import React from 'react';\nimport classnames from 'classnames';\nimport { Box, Icon, IconSize, Text } from '..';\nimport type { BoxProps, PolymorphicRef } from '../box';\n\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  Display,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\nimport { TagComponent, TagProps } from './tag.types';\n\nexport const Tag: TagComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      label,\n      className = '',\n      labelProps,\n      startIconName,\n      startIconProps,\n      ...props\n    }: TagProps<C>,\n    ref: PolymorphicRef<C>,\n  ) => {\n    return (\n      <Box\n        ref={ref}\n        className={classnames('mm-tag', className)}\n        backgroundColor={BackgroundColor.backgroundDefault}\n        borderColor={BorderColor.borderDefault}\n        borderWidth={1}\n        alignItems={AlignItems.center}\n        paddingLeft={1}\n        paddingRight={1}\n        gap={1}\n        borderRadius={BorderRadius.pill}\n        display={Display.Flex}\n        {...(props as BoxProps<C>)}\n      >\n        {startIconName ? (\n          <Icon name={startIconName} size={IconSize.Xs} {...startIconProps} />\n        ) : null}\n        <Text variant={TextVariant.bodySm} {...labelProps}>\n          {label}\n        </Text>\n      </Box>\n    );\n  },\n);\n","export { TextFieldSearch } from './text-field-search';\nexport type {\n  TextFieldSearchProps,\n  TextFieldSearchStyleUtilityProps,\n} from './text-field-search.types';\nexport { TextFieldSearchSize } from './text-field-search.types';\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  ButtonIcon,\n  ButtonIconSize,\n  Icon,\n  IconName,\n  IconSize,\n  TextField,\n  TextFieldType,\n} from '..';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { TextFieldProps } from '../text-field/text-field.types';\nimport { PolymorphicRef } from '../box';\nimport {\n  TextFieldSearchProps,\n  TextFieldSearchComponent,\n} from './text-field-search.types';\n\nexport const TextFieldSearch: TextFieldSearchComponent = React.forwardRef(\n  <C extends React.ElementType = 'input'>(\n    {\n      className = '',\n      showClearButton = true,\n      clearButtonOnClick,\n      clearButtonProps,\n      endAccessory,\n      inputProps,\n      value,\n      onChange,\n      ...props\n    }: TextFieldSearchProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const t = useI18nContext();\n\n    return (\n      <TextField\n        className={classnames('mm-text-field-search', className)}\n        ref={ref}\n        value={value}\n        onChange={onChange}\n        type={TextFieldType.Search}\n        endAccessory={\n          value && showClearButton ? (\n            <>\n              <ButtonIcon\n                className=\"mm-text-field__button-clear\"\n                data-testid=\"text-field-search-clear-button\"\n                ariaLabel={t('clear')}\n                iconName={IconName.Close}\n                size={ButtonIconSize.Sm}\n                onClick={clearButtonOnClick}\n                {...clearButtonProps}\n              />\n              {endAccessory}\n            </>\n          ) : (\n            endAccessory\n          )\n        }\n        startAccessory={<Icon name={IconName.Search} size={IconSize.Sm} />}\n        inputProps={{\n          marginRight: showClearButton ? 6 : 0,\n          ...inputProps,\n        }}\n        {...(props as TextFieldProps<C>)}\n      />\n    );\n  },\n);\n","import React from 'react';\nimport type { PolymorphicComponentPropWithRef } from '../box';\nimport { TextFieldProps } from '../text-field/text-field.types';\nimport { ButtonIconProps } from '../button-icon';\nimport { InputProps } from '../input';\n\nexport enum TextFieldSearchSize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\n/**\n * Makes all props optional so that if a prop object is used not ALL required props need to be passed\n * TODO: Move to appropriate place in app as this will be highly reusable\n */\ntype MakePropsOptional<T> = {\n  [K in keyof T]?: T[K];\n};\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface TextFieldSearchStyleUtilityProps\n  extends Omit<TextFieldProps<'input'>, 'type' | 'size'> {\n  /**\n   * The value of the TextFieldSearch\n   */\n  value?: string | number;\n  /**\n   * The onChange handler of the TextFieldSearch\n   */\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  /**\n   * The clear button for the TextFieldSearch.\n   * Defaults to true\n   */\n  showClearButton?: boolean;\n  /**\n   * The onClick handler for the clear button\n   * Required unless showClearButton is false\n   */\n  clearButtonOnClick?: () => void;\n  /**\n   * The props to pass to the clear button\n   */\n  clearButtonProps?: MakePropsOptional<ButtonIconProps<'button'>>;\n  /**\n   * An additional className to apply to the TextFieldSearch\n   */\n  className?: string;\n  /**\n   * Component to appear on the right side of the input\n   */\n  endAccessory?: React.ReactNode;\n  /**\n   * Attributes applied to the `input` element.\n   */\n  inputProps?: InputProps<'input'>;\n  /**\n   * The size of the TextFieldSearch\n   */\n  size?: TextFieldSearchSize;\n}\n\nexport type TextFieldSearchProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, TextFieldSearchStyleUtilityProps>;\n\nexport type TextFieldSearchComponent = <C extends React.ElementType = 'input'>(\n  props: TextFieldSearchProps<C>,\n) => React.ReactElement | null;\n","export { TextField } from './text-field';\nexport type {\n  TextFieldProps,\n  TextFieldStyleUtilityProps,\n} from './text-field.types';\nexport { TextFieldSize, TextFieldType } from './text-field.types';\n","import React, { useState, useRef, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport {\n  Display,\n  AlignItems,\n  BorderRadius,\n  BackgroundColor,\n} from '../../../helpers/constants/design-system';\n\nimport { Box, Input } from '..';\n\nimport { BoxProps, PolymorphicRef } from '../box';\nimport { InputProps } from '../input';\nimport {\n  TextFieldComponent,\n  TextFieldProps,\n  TextFieldSize,\n  TextFieldType,\n} from './text-field.types';\n\nexport const TextField: TextFieldComponent = React.forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      autoComplete,\n      autoFocus,\n      className = '',\n      defaultValue,\n      disabled,\n      error,\n      id,\n      inputProps,\n      inputRef,\n      startAccessory,\n      endAccessory,\n      maxLength,\n      name,\n      onBlur,\n      onChange,\n      onClick,\n      onFocus,\n      placeholder,\n      readOnly,\n      required,\n      size = TextFieldSize.Md,\n      testId,\n      type = TextFieldType.Text,\n      truncate = true,\n      value,\n      InputComponent = Input,\n      ...props\n    }: TextFieldProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const internalInputRef = useRef<HTMLInputElement | null>(null);\n    const [focused, setFocused] = useState(false);\n\n    useEffect(() => {\n      // The blur won't fire when the disabled state is set on a focused input.\n      // We need to set the focused state manually.\n      if (disabled) {\n        setFocused(false);\n      }\n    }, [disabled]);\n\n    const handleClick = (event: React.MouseEvent<HTMLInputElement>) => {\n      const { current } = internalInputRef;\n\n      if (current) {\n        current.focus();\n        setFocused(true);\n      }\n\n      if (onClick && !disabled) {\n        onClick?.(event);\n      }\n    };\n\n    const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n      setFocused(false);\n      onBlur?.(event);\n    };\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n      setFocused(true);\n      onFocus?.(event);\n    };\n\n    const handleInputRef = (inputElementRef: HTMLInputElement | null) => {\n      // Assign the input element reference to the internal reference\n      internalInputRef.current = inputElementRef;\n\n      // Check if an external ref (inputRef) is provided and is a ref object\n      if (inputRef && 'current' in inputRef) {\n        // Assign the input element reference to the external ref\n        inputRef.current = inputElementRef;\n      }\n      // Check if an external ref (inputRef) is a callback function\n      else if (typeof inputRef === 'function') {\n        // Call the inputRef function, passing the input element reference\n        inputRef(inputElementRef);\n      }\n    };\n\n    return (\n      <Box\n        ref={ref}\n        className={classnames(\n          'mm-text-field',\n          `mm-text-field--size-${size}`,\n          {\n            'mm-text-field--focused': focused && !disabled,\n            'mm-text-field--error': Boolean(error),\n            'mm-text-field--disabled': Boolean(disabled),\n            'mm-text-field--truncate': truncate,\n          },\n          className,\n        )}\n        display={Display.InlineFlex}\n        backgroundColor={BackgroundColor.backgroundDefault}\n        alignItems={AlignItems.center}\n        borderWidth={1}\n        borderRadius={BorderRadius.SM}\n        paddingLeft={startAccessory ? 4 : 0}\n        paddingRight={endAccessory ? 4 : 0}\n        onClick={handleClick}\n        {...(props as BoxProps<C>)}\n      >\n        {startAccessory}\n        <InputComponent\n          {...(error && { 'aria-invalid': error })}\n          autoComplete={autoComplete}\n          autoFocus={autoFocus}\n          backgroundColor={BackgroundColor.transparent}\n          data-testid={testId}\n          defaultValue={defaultValue}\n          disabled={disabled}\n          focused={focused.toString()}\n          id={id}\n          margin={0}\n          maxLength={maxLength}\n          name={name}\n          onBlur={handleBlur}\n          onChange={onChange}\n          onFocus={handleFocus}\n          padding={0}\n          paddingLeft={startAccessory ? 2 : 4}\n          paddingRight={endAccessory ? 2 : 4}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          ref={handleInputRef}\n          required={required}\n          value={value}\n          type={type}\n          disableStateStyles\n          {...(inputProps as InputProps<C>)} // before className so input className isn't overridden\n          className={classnames(\n            'mm-text-field__input',\n            inputProps?.className ?? '',\n          )}\n        />\n        {endAccessory}\n      </Box>\n    );\n  },\n);\n","import React from 'react';\nimport type {\n  PolymorphicComponentPropWithRef,\n  StyleUtilityProps,\n} from '../box';\nimport { InputProps } from '../input';\nimport { InputComponent } from '../input/input.types';\n\nexport enum TextFieldSize {\n  Sm = 'sm',\n  Md = 'md',\n  Lg = 'lg',\n}\n\nexport enum TextFieldType {\n  Text = 'text',\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Number = 'number',\n  Password = 'password',\n  Search = 'search',\n}\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface TextFieldStyleUtilityProps\n  extends Omit<StyleUtilityProps, 'type'> {\n  /**\n   * Autocomplete allows the browser to predict the value based on earlier typed values\n   */\n  autoComplete?: boolean;\n  /**\n   * If `true`, the input will be focused during the first mount.\n   */\n  autoFocus?: boolean;\n  /**\n   * An additional className to apply to the text-field\n   */\n  className?: string;\n  /**\n   * The default input value, useful when not controlling the component.\n   */\n  defaultValue?: string | number;\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled?: boolean;\n  /**\n   * If `true`, the input will indicate an error\n   */\n  error?: boolean;\n  /**\n   * The id of the `input` element.\n   */\n  id?: string;\n  /**\n   * The component that is rendered as the input\n   * Defaults to the Text component\n   */\n  InputComponent?: InputComponent;\n  /**\n   * Attributes applied to the `input` element.\n   */\n  inputProps?: InputProps<'input'>;\n  /**\n   * Component to appear on the left side of the input\n   */\n  startAccessory?: React.ReactNode;\n  /**\n   * Component to appear on the right side of the input\n   */\n  endAccessory?: React.ReactNode;\n  /**\n   * Use inputRef to pass a ref to the html input element.\n   */\n  inputRef?:\n    | React.MutableRefObject<HTMLInputElement | null>\n    | ((instance: HTMLInputElement | null) => void);\n  /**\n   * Max number of characters to allow\n   */\n  maxLength?: number;\n  /**\n   * Name attribute of the `input` element.\n   */\n  name?: string;\n  /**\n   * Callback fired on blur\n   */\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  /**\n   * Callback fired when the value is changed.\n   */\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  /**\n   * Callback fired when the TextField is clicked on\n   */\n  onClick?: (event: React.MouseEvent<HTMLInputElement>) => void;\n  /**\n   * Callback fired on focus\n   */\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder?: string;\n  /**\n   * It prevents the user from changing the value of the field (not from interacting with the field).\n   */\n  readOnly?: boolean;\n  /**\n   * If `true`, the input will be required. Currently no visual difference is shown.\n   */\n  required?: boolean;\n  /**\n   * The size of the text field. Changes the height of the component\n   * Accepts TextFieldSize.Sm(32px), TextFieldSize.Md(40px), TextFieldSize.Lg(48px)\n   */\n  size?: TextFieldSize;\n  /**\n   * Type of the input element. Can be TextFieldType.Text, TextFieldType.Password, TextFieldType.Number\n   * Defaults to TextFieldType.Text ('text')\n   */\n  type?: TextFieldType;\n  /**\n   * If true will ellipse the text of the input\n   * Defaults to true\n   */\n  truncate?: boolean;\n  /**\n   * The input value, required for a controlled component.\n   */\n  value?: string | number;\n  /**\n   * Data test ID for the InputComponent component\n   */\n  testId?: string;\n}\n\nexport type TextFieldProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, TextFieldStyleUtilityProps>;\n\nexport type TextFieldComponent = <C extends React.ElementType = 'div'>(\n  props: TextFieldProps<C>,\n) => React.ReactElement | null;\n","export { Text } from './text';\nexport { ValidTag, TextDirection, InvisibleCharacter } from './text.types';\nexport type {\n  TextStyleUtilityProps,\n  TextProps,\n  ValidTagType,\n} from './text.types';\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InfuraProvider = exports.InfuraWebSocketProvider = void 0;\nvar properties_1 = require(\"@ethersproject/properties\");\nvar websocket_provider_1 = require(\"./websocket-provider\");\nvar formatter_1 = require(\"./formatter\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar url_json_rpc_provider_1 = require(\"./url-json-rpc-provider\");\nvar defaultProjectId = \"84842078b09946638c03157f83405213\";\nvar InfuraWebSocketProvider = /** @class */ (function (_super) {\n    __extends(InfuraWebSocketProvider, _super);\n    function InfuraWebSocketProvider(network, apiKey) {\n        var _this = this;\n        var provider = new InfuraProvider(network, apiKey);\n        var connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        var url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        _this = _super.call(this, url, network) || this;\n        (0, properties_1.defineReadOnly)(_this, \"apiKey\", provider.projectId);\n        (0, properties_1.defineReadOnly)(_this, \"projectId\", provider.projectId);\n        (0, properties_1.defineReadOnly)(_this, \"projectSecret\", provider.projectSecret);\n        return _this;\n    }\n    InfuraWebSocketProvider.prototype.isCommunityResource = function () {\n        return (this.projectId === defaultProjectId);\n    };\n    return InfuraWebSocketProvider;\n}(websocket_provider_1.WebSocketProvider));\nexports.InfuraWebSocketProvider = InfuraWebSocketProvider;\nvar InfuraProvider = /** @class */ (function (_super) {\n    __extends(InfuraProvider, _super);\n    function InfuraProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InfuraProvider.getWebSocketProvider = function (network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    };\n    InfuraProvider.getApiKey = function (apiKey) {\n        var apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    };\n    InfuraProvider.getUrl = function (network, apiKey) {\n        var host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        var connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: function (attempt, url) {\n                if (apiKey.projectId === defaultProjectId) {\n                    (0, formatter_1.showThrottleMessage)();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    };\n    InfuraProvider.prototype.isCommunityResource = function () {\n        return (this.projectId === defaultProjectId);\n    };\n    return InfuraProvider;\n}(url_json_rpc_provider_1.UrlJsonRpcProvider));\nexports.InfuraProvider = InfuraProvider;\n//# sourceMappingURL=infura-provider.js.map","import React from 'react';\nimport classnames from 'classnames';\n\nimport {\n  TextVariant,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\nimport { Box } from '..';\n\nimport type { PolymorphicRef, BoxProps } from '../box';\n\nimport { TextProps, TextComponent } from './text.types';\n\nconst getTextElementDefault = (variant: TextVariant) => {\n  switch (variant) {\n    case TextVariant.displayMd:\n      return 'h1';\n    case TextVariant.headingLg:\n      return 'h2';\n    case TextVariant.headingMd:\n      return 'h3';\n    case TextVariant.headingSm:\n      return 'h4';\n    case TextVariant.inherit:\n      return 'span';\n    // TextVariant.bodyLgMedium, TextVariant.bodyMd, TextVariant.bodyMdBold, TextVariant.bodySm, TextVariant.bodySmBold, TextVariant.bodyXs use default 'p' tag\n    default:\n      return 'p';\n  }\n};\n\nexport const Text: TextComponent = React.forwardRef(\n  <C extends React.ElementType = 'p'>(\n    {\n      variant = TextVariant.bodyMd,\n      fontWeight,\n      fontStyle,\n      textTransform,\n      textAlign,\n      textDirection,\n      overflowWrap,\n      ellipsis,\n      className = '',\n      children,\n      isBrandEvolution, // Enables Brand Evolution Typography do not use unless you are working on the brand evolution\n      ...props\n    }: TextProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    // Set tag based on variant\n    // If as prop is passed tag will be overridden\n    const tag = getTextElementDefault(variant);\n    const computedClassName = classnames(\n      'mm-text',\n      className,\n      `mm-text--${variant}`,\n      {\n        [`mm-text--font-weight-${fontWeight}`]: Boolean(fontWeight),\n        [`mm-text--font-style-${fontStyle}`]: Boolean(fontStyle),\n        [`mm-text--ellipsis`]: Boolean(ellipsis),\n        [`mm-text--text-transform-${textTransform}`]: Boolean(textTransform),\n        [`mm-text--text-align-${textAlign}`]: Boolean(textAlign),\n        [`mm-text--overflow-wrap-${overflowWrap}`]: Boolean(overflowWrap),\n        [`mm-text--${variant}-brand-evo`]: Boolean(isBrandEvolution),\n      },\n    );\n\n    return (\n      <Box\n        className={classnames(computedClassName)}\n        as={tag}\n        dir={textDirection}\n        ref={ref}\n        color={TextColor.textDefault}\n        {...(props as BoxProps<C>)}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n","import React from 'react';\nimport {\n  FontWeight,\n  FontStyle,\n  TextVariant,\n  TextTransform,\n  OverflowWrap,\n} from '../../../helpers/constants/design-system';\n\nimport type {\n  StyleUtilityProps,\n  PolymorphicComponentPropWithRef,\n} from '../box';\n\nexport enum TextDirection {\n  LeftToRight = 'ltr',\n  RightToLeft = 'rtl',\n  Auto = 'auto',\n}\n\n/**\n * The InvisibleCharacter is a very useful tool if you want to make sure a line of text\n * takes up vertical space even if it's empty.\n */\nexport const InvisibleCharacter = '\\u200B';\n\n/**\n * @deprecated ValidTag enum is deprecated in favor of a union of strings.\n * To change the root html element tag of the Text component, use the `as` prop and string value.\n * e.g. `<Text as=\"h1\">Hello World</Text>`\n *\n * Contribute to replacing the enum with a union of string by submitting a PR\n */\n\nexport enum ValidTag {\n  Dd = 'dd',\n  Div = 'div',\n  Dt = 'dt',\n  Em = 'em',\n  H1 = 'h1',\n  H2 = 'h2',\n  H3 = 'h3',\n  H4 = 'h4',\n  H5 = 'h5',\n  H6 = 'h6',\n  Li = 'li',\n  P = 'p',\n  Span = 'span',\n  Strong = 'strong',\n  Ul = 'ul',\n  Label = 'label',\n  Input = 'input',\n  Header = 'header',\n}\n\nexport type ValidTagType =\n  | 'dd'\n  | 'div'\n  | 'dt'\n  | 'em'\n  | 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6'\n  | 'li'\n  | 'p'\n  | 'span'\n  | 'strong'\n  | 'ul'\n  | 'label'\n  | 'input'\n  | 'header'\n  | 'a'\n  | 'button';\n\n// TODO: Convert to a `type` in a future major version.\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface TextStyleUtilityProps extends StyleUtilityProps {\n  /**\n   * Additional className to assign the Text component\n   */\n  className?: string;\n  /**\n   * The text content of the Text component\n   */\n  children?: React.ReactNode;\n  /**\n   * The variation of font styles including sizes and weights of the Text component\n   * Possible values:\n   * `displayMd` large screen: 48px / small screen: 32px,\n   * `headingLg` large screen: 32px / small screen: 24px,\n   * `headingMd` large screen: 24px / small screen: 18px,\n   * `headingSm` large screen: 18px / small screen: 16px,\n   * `bodyLgMedium` large screen: 18px / small screen: 16px,\n   * `bodyMd` large screen: 16px / small screen: 14px,\n   * `bodyMdMedium` large screen: 16px / small screen: 14px,\n   * `bodyMdBold` large screen: 16px / small screen: 14px,\n   * `bodySm` large screen: 14px / small screen: 12px,\n   * `bodySmMedium` large screen: 14px / small screen: 12px,\n   * `bodySmBold` large screen: 14px / small screen: 12px,\n   * `bodyXsMedium` large screen: 12px / small screen: 10px,\n   * `bodyXs` large screen: 12px / small screen: 10px,\n   * `inherit`\n   */\n  variant?: TextVariant;\n  /**\n   * The font-weight of the Text component. Should use the FontWeight enum from\n   * ./ui/helpers/constants/design-system.js\n   */\n  fontWeight?: FontWeight;\n  /**\n   * The font-style of the Text component. Should use the FontStyle enum from\n   * ./ui/helpers/constants/design-system.js\n   */\n  fontStyle?: FontStyle;\n  /**\n   * The textTransform of the Text component. Should use the TextTransform enum from\n   * ./ui/helpers/constants/design-system.js\n   */\n  textTransform?: TextTransform;\n  /**\n   * Change the dir (direction) global attribute of text to support the direction a language is written\n   * Possible values: `LEFT_TO_RIGHT` (default), `RIGHT_TO_LEFT`, `AUTO` (user agent decides)\n   */\n  textDirection?: TextDirection;\n  /**\n   * The overflow-wrap of the Text component. Should use the OverflowWrap enum from\n   * ./ui/helpers/constants/design-system.js\n   */\n  overflowWrap?: OverflowWrap;\n  /**\n   * Used for long strings that can be cut off...\n   */\n  ellipsis?: boolean;\n  /**\n   * Enable Brand Evolution Typography\n   * Do not use unless you are working on the brand evolution\n   */\n  isBrandEvolution?: boolean;\n}\n\nexport type TextProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<C, TextStyleUtilityProps>;\n\nexport type TextComponent = <C extends React.ElementType = 'span'>(\n  props: TextProps<C>,\n) => React.ReactElement | null;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcBatchProvider = void 0;\nvar properties_1 = require(\"@ethersproject/properties\");\nvar web_1 = require(\"@ethersproject/web\");\nvar json_rpc_provider_1 = require(\"./json-rpc-provider\");\n// Experimental\nvar JsonRpcBatchProvider = /** @class */ (function (_super) {\n    __extends(JsonRpcBatchProvider, _super);\n    function JsonRpcBatchProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    JsonRpcBatchProvider.prototype.send = function (method, params) {\n        var _this = this;\n        var request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        var inflightRequest = { request: request, resolve: null, reject: null };\n        var promise = new Promise(function (resolve, reject) {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(function () {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                var batch = _this._pendingBatch;\n                _this._pendingBatch = null;\n                _this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                var request = batch.map(function (inflight) { return inflight.request; });\n                _this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: (0, properties_1.deepCopy)(request),\n                    provider: _this\n                });\n                return (0, web_1.fetchJson)(_this.connection, JSON.stringify(request)).then(function (result) {\n                    _this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: _this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach(function (inflightRequest, index) {\n                        var payload = result[index];\n                        if (payload.error) {\n                            var error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, function (error) {\n                    _this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: _this\n                    });\n                    batch.forEach(function (inflightRequest) {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    };\n    return JsonRpcBatchProvider;\n}(json_rpc_provider_1.JsonRpcProvider));\nexports.JsonRpcBatchProvider = JsonRpcBatchProvider;\n//# sourceMappingURL=json-rpc-batch-provider.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.JsonRpcSigner = void 0;\nvar abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar hash_1 = require(\"@ethersproject/hash\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar transactions_1 = require(\"@ethersproject/transactions\");\nvar web_1 = require(\"@ethersproject/web\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar base_provider_1 = require(\"./base-provider\");\nvar errorGas = [\"call\", \"estimateGas\"];\nfunction spelunk(value, requireData) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(\"reverted\")) {\n        var data = (0, bytes_1.isHexString)(value.data) ? value.data : null;\n        if (!requireData || data) {\n            return { message: value.message, data: data };\n        }\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (var key in value) {\n            var result = spelunk(value[key], requireData);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction checkError(method, error, params) {\n    var transaction = params.transaction || params.signedTransaction;\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        var result = spelunk(error, true);\n        if (result) {\n            return result.data;\n        }\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", logger_1.Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\",\n            transaction: transaction,\n            error: error\n        });\n    }\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        var result = spelunk(error.body, false);\n        if (result == null) {\n            result = spelunk(error, false);\n        }\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message,\n                method: method,\n                transaction: transaction,\n                error: error\n            });\n        }\n    }\n    // @TODO: Should we spelunk for message too?\n    var message = error.message;\n    if (error.code === logger_1.Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", logger_1.Logger.errors.INSUFFICIENT_FUNDS, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", logger_1.Logger.errors.NONCE_EXPIRED, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", logger_1.Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_1.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error: error,\n            method: method,\n            transaction: transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        var error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nvar _constructorGuard = {};\nvar JsonRpcSigner = /** @class */ (function (_super) {\n    __extends(JsonRpcSigner, _super);\n    function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {\n        var _this = _super.call(this) || this;\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        (0, properties_1.defineReadOnly)(_this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            (0, properties_1.defineReadOnly)(_this, \"_address\", _this.provider.formatter.address(addressOrIndex));\n            (0, properties_1.defineReadOnly)(_this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            (0, properties_1.defineReadOnly)(_this, \"_index\", addressOrIndex);\n            (0, properties_1.defineReadOnly)(_this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n        return _this;\n    }\n    JsonRpcSigner.prototype.connect = function (provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    };\n    JsonRpcSigner.prototype.connectUnchecked = function () {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    };\n    JsonRpcSigner.prototype.getAddress = function () {\n        var _this = this;\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then(function (accounts) {\n            if (accounts.length <= _this._index) {\n                logger.throwError(\"unknown account #\" + _this._index, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return _this.provider.formatter.address(accounts[_this._index]);\n        });\n    };\n    JsonRpcSigner.prototype.sendUncheckedTransaction = function (transaction) {\n        var _this = this;\n        transaction = (0, properties_1.shallowCopy)(transaction);\n        var fromAddress = this.getAddress().then(function (address) {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            var estimate = (0, properties_1.shallowCopy)(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(function (to) { return __awaiter(_this, void 0, void 0, function () {\n                var address;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (to == null) {\n                                return [2 /*return*/, null];\n                            }\n                            return [4 /*yield*/, this.provider.resolveName(to)];\n                        case 1:\n                            address = _a.sent();\n                            if (address == null) {\n                                logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                            }\n                            return [2 /*return*/, address];\n                    }\n                });\n            }); });\n        }\n        return (0, properties_1.resolveProperties)({\n            tx: (0, properties_1.resolveProperties)(transaction),\n            sender: fromAddress\n        }).then(function (_a) {\n            var tx = _a.tx, sender = _a.sender;\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            var hexTx = _this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return _this.provider.send(\"eth_sendTransaction\", [hexTx]).then(function (hash) {\n                return hash;\n            }, function (error) {\n                if (typeof (error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", logger_1.Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    };\n    JsonRpcSigner.prototype.signTransaction = function (transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    };\n    JsonRpcSigner.prototype.sendTransaction = function (transaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blockNumber, hash, error_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval)];\n                    case 1:\n                        blockNumber = _a.sent();\n                        return [4 /*yield*/, this.sendUncheckedTransaction(transaction)];\n                    case 2:\n                        hash = _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\n                                var tx;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, this.provider.getTransaction(hash)];\n                                        case 1:\n                                            tx = _a.sent();\n                                            if (tx === null) {\n                                                return [2 /*return*/, undefined];\n                                            }\n                                            return [2 /*return*/, this.provider._wrapTransaction(tx, hash, blockNumber)];\n                                    }\n                                });\n                            }); }, { oncePoll: this.provider })];\n                    case 4: \n                    // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                    // for a response, and we need the actual transaction, so we poll\n                    // for it; it should show up very quickly\n                    return [2 /*return*/, _a.sent()];\n                    case 5:\n                        error_1 = _a.sent();\n                        error_1.transactionHash = hash;\n                        throw error_1;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    JsonRpcSigner.prototype.signMessage = function (message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, address, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        data = ((typeof (message) === \"string\") ? (0, strings_1.toUtf8Bytes)(message) : message);\n                        return [4 /*yield*/, this.getAddress()];\n                    case 1:\n                        address = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.provider.send(\"personal_sign\", [(0, bytes_1.hexlify)(data), address.toLowerCase()])];\n                    case 3: return [2 /*return*/, _a.sent()];\n                    case 4:\n                        error_2 = _a.sent();\n                        if (typeof (error_2.message) === \"string\" && error_2.message.match(/user denied/i)) {\n                            logger.throwError(\"user rejected signing\", logger_1.Logger.errors.ACTION_REJECTED, {\n                                action: \"signMessage\",\n                                from: address,\n                                messageData: message\n                            });\n                        }\n                        throw error_2;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    JsonRpcSigner.prototype._legacySignMessage = function (message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, address, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        data = ((typeof (message) === \"string\") ? (0, strings_1.toUtf8Bytes)(message) : message);\n                        return [4 /*yield*/, this.getAddress()];\n                    case 1:\n                        address = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.provider.send(\"eth_sign\", [address.toLowerCase(), (0, bytes_1.hexlify)(data)])];\n                    case 3: \n                    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n                    return [2 /*return*/, _a.sent()];\n                    case 4:\n                        error_3 = _a.sent();\n                        if (typeof (error_3.message) === \"string\" && error_3.message.match(/user denied/i)) {\n                            logger.throwError(\"user rejected signing\", logger_1.Logger.errors.ACTION_REJECTED, {\n                                action: \"_legacySignMessage\",\n                                from: address,\n                                messageData: message\n                            });\n                        }\n                        throw error_3;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    JsonRpcSigner.prototype._signTypedData = function (domain, types, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var populated, address, error_4;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, hash_1._TypedDataEncoder.resolveNames(domain, types, value, function (name) {\n                            return _this.provider.resolveName(name);\n                        })];\n                    case 1:\n                        populated = _a.sent();\n                        return [4 /*yield*/, this.getAddress()];\n                    case 2:\n                        address = _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, this.provider.send(\"eth_signTypedData_v4\", [\n                                address.toLowerCase(),\n                                JSON.stringify(hash_1._TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n                            ])];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5:\n                        error_4 = _a.sent();\n                        if (typeof (error_4.message) === \"string\" && error_4.message.match(/user denied/i)) {\n                            logger.throwError(\"user rejected signing\", logger_1.Logger.errors.ACTION_REJECTED, {\n                                action: \"_signTypedData\",\n                                from: address,\n                                messageData: { domain: populated.domain, types: types, value: populated.value }\n                            });\n                        }\n                        throw error_4;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    JsonRpcSigner.prototype.unlock = function (password) {\n        return __awaiter(this, void 0, void 0, function () {\n            var provider, address;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        provider = this.provider;\n                        return [4 /*yield*/, this.getAddress()];\n                    case 1:\n                        address = _a.sent();\n                        return [2 /*return*/, provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null])];\n                }\n            });\n        });\n    };\n    return JsonRpcSigner;\n}(abstract_signer_1.Signer));\nexports.JsonRpcSigner = JsonRpcSigner;\nvar UncheckedJsonRpcSigner = /** @class */ (function (_super) {\n    __extends(UncheckedJsonRpcSigner, _super);\n    function UncheckedJsonRpcSigner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UncheckedJsonRpcSigner.prototype.sendTransaction = function (transaction) {\n        var _this = this;\n        return this.sendUncheckedTransaction(transaction).then(function (hash) {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: function (confirmations) { return _this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    };\n    return UncheckedJsonRpcSigner;\n}(JsonRpcSigner));\nvar allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nvar JsonRpcProvider = /** @class */ (function (_super) {\n    __extends(JsonRpcProvider, _super);\n    function JsonRpcProvider(url, network) {\n        var _this = this;\n        var networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise(function (resolve, reject) {\n                setTimeout(function () {\n                    _this.detectNetwork().then(function (network) {\n                        resolve(network);\n                    }, function (error) {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        _this = _super.call(this, networkOrReady) || this;\n        // Default URL\n        if (!url) {\n            url = (0, properties_1.getStatic)(_this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            (0, properties_1.defineReadOnly)(_this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            (0, properties_1.defineReadOnly)(_this, \"connection\", Object.freeze((0, properties_1.shallowCopy)(url)));\n        }\n        _this._nextId = 42;\n        return _this;\n    }\n    Object.defineProperty(JsonRpcProvider.prototype, \"_cache\", {\n        get: function () {\n            if (this._eventLoopCache == null) {\n                this._eventLoopCache = {};\n            }\n            return this._eventLoopCache;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonRpcProvider.defaultUrl = function () {\n        return \"http:/\\/localhost:8545\";\n    };\n    JsonRpcProvider.prototype.detectNetwork = function () {\n        var _this = this;\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(function () {\n                _this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    };\n    JsonRpcProvider.prototype._uncachedDetectNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var chainId, error_5, error_6, getNetwork;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, timer(0)];\n                    case 1:\n                        _a.sent();\n                        chainId = null;\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 9]);\n                        return [4 /*yield*/, this.send(\"eth_chainId\", [])];\n                    case 3:\n                        chainId = _a.sent();\n                        return [3 /*break*/, 9];\n                    case 4:\n                        error_5 = _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        _a.trys.push([5, 7, , 8]);\n                        return [4 /*yield*/, this.send(\"net_version\", [])];\n                    case 6:\n                        chainId = _a.sent();\n                        return [3 /*break*/, 8];\n                    case 7:\n                        error_6 = _a.sent();\n                        return [3 /*break*/, 8];\n                    case 8: return [3 /*break*/, 9];\n                    case 9:\n                        if (chainId != null) {\n                            getNetwork = (0, properties_1.getStatic)(this.constructor, \"getNetwork\");\n                            try {\n                                return [2 /*return*/, getNetwork(bignumber_1.BigNumber.from(chainId).toNumber())];\n                            }\n                            catch (error) {\n                                return [2 /*return*/, logger.throwError(\"could not detect network\", logger_1.Logger.errors.NETWORK_ERROR, {\n                                        chainId: chainId,\n                                        event: \"invalidNetwork\",\n                                        serverError: error\n                                    })];\n                            }\n                        }\n                        return [2 /*return*/, logger.throwError(\"could not detect network\", logger_1.Logger.errors.NETWORK_ERROR, {\n                                event: \"noNetwork\"\n                            })];\n                }\n            });\n        });\n    };\n    JsonRpcProvider.prototype.getSigner = function (addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    };\n    JsonRpcProvider.prototype.getUncheckedSigner = function (addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    };\n    JsonRpcProvider.prototype.listAccounts = function () {\n        var _this = this;\n        return this.send(\"eth_accounts\", []).then(function (accounts) {\n            return accounts.map(function (a) { return _this.formatter.address(a); });\n        });\n    };\n    JsonRpcProvider.prototype.send = function (method, params) {\n        var _this = this;\n        var request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: (0, properties_1.deepCopy)(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        var cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        var result = (0, web_1.fetchJson)(this.connection, JSON.stringify(request), getResult).then(function (result) {\n            _this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: _this\n            });\n            return result;\n        }, function (error) {\n            _this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: _this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(function () {\n                _this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    };\n    JsonRpcProvider.prototype.prepareRequest = function (method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), (0, bytes_1.hexZeroPad)(params.position, 32), params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                var hexlifyTransaction = (0, properties_1.getStatic)(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                var hexlifyTransaction = (0, properties_1.getStatic)(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    };\n    JsonRpcProvider.prototype.perform = function (method, params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tx, feeData, args, error_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(method === \"call\" || method === \"estimateGas\")) return [3 /*break*/, 2];\n                        tx = params.transaction;\n                        if (!(tx && tx.type != null && bignumber_1.BigNumber.from(tx.type).isZero())) return [3 /*break*/, 2];\n                        if (!(tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getFeeData()];\n                    case 1:\n                        feeData = _a.sent();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = (0, properties_1.shallowCopy)(params);\n                            params.transaction = (0, properties_1.shallowCopy)(tx);\n                            delete params.transaction.type;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        args = this.prepareRequest(method, params);\n                        if (args == null) {\n                            logger.throwError(method + \" not implemented\", logger_1.Logger.errors.NOT_IMPLEMENTED, { operation: method });\n                        }\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, this.send(args[0], args[1])];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5:\n                        error_7 = _a.sent();\n                        return [2 /*return*/, checkError(method, error_7, params)];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    JsonRpcProvider.prototype._startEvent = function (event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        _super.prototype._startEvent.call(this, event);\n    };\n    JsonRpcProvider.prototype._startPending = function () {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        var self = this;\n        var pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    var seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch(function (error) { });\n            }\n            poll();\n            return filterId;\n        }).catch(function (error) { });\n    };\n    JsonRpcProvider.prototype._stopEvent = function (event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        _super.prototype._stopEvent.call(this, event);\n    };\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    JsonRpcProvider.hexlifyTransaction = function (transaction, allowExtra) {\n        // Check only allowed properties are given\n        var allowed = (0, properties_1.shallowCopy)(allowedTransactionKeys);\n        if (allowExtra) {\n            for (var key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        (0, properties_1.checkProperties)(transaction, allowed);\n        var result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            var value = (0, bytes_1.hexValue)(bignumber_1.BigNumber.from(transaction[key]));\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = (0, bytes_1.hexlify)(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = (0, transactions_1.accessListify)(transaction.accessList);\n        }\n        return result;\n    };\n    return JsonRpcProvider;\n}(base_provider_1.BaseProvider));\nexports.JsonRpcProvider = JsonRpcProvider;\n//# sourceMappingURL=json-rpc-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodesmithProvider = void 0;\nvar url_json_rpc_provider_1 = require(\"./url-json-rpc-provider\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\n// Special API key provided by Nodesmith for ethers.js\nvar defaultApiKey = \"ETHERS_JS_SHARED\";\nvar NodesmithProvider = /** @class */ (function (_super) {\n    __extends(NodesmithProvider, _super);\n    function NodesmithProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodesmithProvider.getApiKey = function (apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    };\n    NodesmithProvider.getUrl = function (network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        var host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    };\n    return NodesmithProvider;\n}(url_json_rpc_provider_1.UrlJsonRpcProvider));\nexports.NodesmithProvider = NodesmithProvider;\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PocketProvider = void 0;\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar url_json_rpc_provider_1 = require(\"./url-json-rpc-provider\");\nvar defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nvar PocketProvider = /** @class */ (function (_super) {\n    __extends(PocketProvider, _super);\n    function PocketProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PocketProvider.getApiKey = function (apiKey) {\n        var apiKeyObj = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n        }\n        else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n        }\n        else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    };\n    PocketProvider.getUrl = function (network, apiKey) {\n        var host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        var url = \"https://\" + host + \"/v1/lb/\" + apiKey.applicationId;\n        var connection = { headers: {}, url: url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    };\n    PocketProvider.prototype.isCommunityResource = function () {\n        return (this.applicationId === defaultApplicationId);\n    };\n    return PocketProvider;\n}(url_json_rpc_provider_1.UrlJsonRpcProvider));\nexports.PocketProvider = PocketProvider;\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlJsonRpcProvider = exports.StaticJsonRpcProvider = void 0;\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar json_rpc_provider_1 = require(\"./json-rpc-provider\");\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nvar StaticJsonRpcProvider = /** @class */ (function (_super) {\n    __extends(StaticJsonRpcProvider, _super);\n    function StaticJsonRpcProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StaticJsonRpcProvider.prototype.detectNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var network;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        network = this.network;\n                        if (!(network == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, _super.prototype.detectNetwork.call(this)];\n                    case 1:\n                        network = _a.sent();\n                        if (!network) {\n                            logger.throwError(\"no network detected\", logger_1.Logger.errors.UNKNOWN_ERROR, {});\n                        }\n                        // If still not set, set it\n                        if (this._network == null) {\n                            // A static network does not support \"any\"\n                            (0, properties_1.defineReadOnly)(this, \"_network\", network);\n                            this.emit(\"network\", network, null);\n                        }\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, network];\n                }\n            });\n        });\n    };\n    return StaticJsonRpcProvider;\n}(json_rpc_provider_1.JsonRpcProvider));\nexports.StaticJsonRpcProvider = StaticJsonRpcProvider;\nvar UrlJsonRpcProvider = /** @class */ (function (_super) {\n    __extends(UrlJsonRpcProvider, _super);\n    function UrlJsonRpcProvider(network, apiKey) {\n        var _newTarget = this.constructor;\n        var _this = this;\n        logger.checkAbstract(_newTarget, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = (0, properties_1.getStatic)(_newTarget, \"getNetwork\")(network);\n        apiKey = (0, properties_1.getStatic)(_newTarget, \"getApiKey\")(apiKey);\n        var connection = (0, properties_1.getStatic)(_newTarget, \"getUrl\")(network, apiKey);\n        _this = _super.call(this, connection, network) || this;\n        if (typeof (apiKey) === \"string\") {\n            (0, properties_1.defineReadOnly)(_this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach(function (key) {\n                (0, properties_1.defineReadOnly)(_this, key, apiKey[key]);\n            });\n        }\n        return _this;\n    }\n    UrlJsonRpcProvider.prototype._startPending = function () {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    };\n    UrlJsonRpcProvider.prototype.isCommunityResource = function () {\n        return false;\n    };\n    UrlJsonRpcProvider.prototype.getSigner = function (address) {\n        return logger.throwError(\"API provider does not support signing\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    };\n    UrlJsonRpcProvider.prototype.listAccounts = function () {\n        return Promise.resolve([]);\n    };\n    // Return a defaultApiKey if null, otherwise validate the API key\n    UrlJsonRpcProvider.getApiKey = function (apiKey) {\n        return apiKey;\n    };\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    UrlJsonRpcProvider.getUrl = function (network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", logger_1.Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    };\n    return UrlJsonRpcProvider;\n}(StaticJsonRpcProvider));\nexports.UrlJsonRpcProvider = UrlJsonRpcProvider;\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Web3Provider = void 0;\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar json_rpc_provider_1 = require(\"./json-rpc-provider\");\nvar _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    var fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        var _this = this;\n        var request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise(function (resolve, reject) {\n            _this.emit(\"debug\", {\n                action: \"request\",\n                fetcher: fetcher,\n                request: (0, properties_1.deepCopy)(request),\n                provider: _this\n            });\n            sendFunc(request, function (error, response) {\n                if (error) {\n                    _this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher: fetcher,\n                        error: error,\n                        request: request,\n                        provider: _this\n                    });\n                    return reject(error);\n                }\n                _this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher: fetcher,\n                    request: request,\n                    response: response,\n                    provider: _this\n                });\n                if (response.error) {\n                    var error_1 = new Error(response.error.message);\n                    error_1.code = response.error.code;\n                    error_1.data = response.error.data;\n                    return reject(error_1);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        var _this = this;\n        if (params == null) {\n            params = [];\n        }\n        var request = { method: method, params: params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: (0, properties_1.deepCopy)(request),\n            provider: this\n        });\n        return provider.request(request).then(function (response) {\n            _this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request: request,\n                response: response,\n                provider: _this\n            });\n            return response;\n        }, function (error) {\n            _this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request: request,\n                error: error,\n                provider: _this\n            });\n            throw error;\n        });\n    };\n}\nvar Web3Provider = /** @class */ (function (_super) {\n    __extends(Web3Provider, _super);\n    function Web3Provider(provider, network) {\n        var _this = this;\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        var path = null;\n        var jsonRpcFetchFunc = null;\n        var subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        _this = _super.call(this, path, network) || this;\n        (0, properties_1.defineReadOnly)(_this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        (0, properties_1.defineReadOnly)(_this, \"provider\", subprovider);\n        return _this;\n    }\n    Web3Provider.prototype.send = function (method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    };\n    return Web3Provider;\n}(json_rpc_provider_1.JsonRpcProvider));\nexports.Web3Provider = Web3Provider;\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketProvider = void 0;\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar json_rpc_provider_1 = require(\"./json-rpc-provider\");\nvar ws_1 = require(\"./ws\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nvar NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nvar WebSocketProvider = /** @class */ (function (_super) {\n    __extends(WebSocketProvider, _super);\n    function WebSocketProvider(url, network) {\n        var _this = this;\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        if (typeof (url) === \"string\") {\n            _this = _super.call(this, url, network) || this;\n        }\n        else {\n            _this = _super.call(this, \"_websocket\", network) || this;\n        }\n        _this._pollingInterval = -1;\n        _this._wsReady = false;\n        if (typeof (url) === \"string\") {\n            (0, properties_1.defineReadOnly)(_this, \"_websocket\", new ws_1.WebSocket(_this.connection.url));\n        }\n        else {\n            (0, properties_1.defineReadOnly)(_this, \"_websocket\", url);\n        }\n        (0, properties_1.defineReadOnly)(_this, \"_requests\", {});\n        (0, properties_1.defineReadOnly)(_this, \"_subs\", {});\n        (0, properties_1.defineReadOnly)(_this, \"_subIds\", {});\n        (0, properties_1.defineReadOnly)(_this, \"_detectNetwork\", _super.prototype.detectNetwork.call(_this));\n        // Stall sending requests until the socket is open...\n        _this.websocket.onopen = function () {\n            _this._wsReady = true;\n            Object.keys(_this._requests).forEach(function (id) {\n                _this.websocket.send(_this._requests[id].payload);\n            });\n        };\n        _this.websocket.onmessage = function (messageEvent) {\n            var data = messageEvent.data;\n            var result = JSON.parse(data);\n            if (result.id != null) {\n                var id = String(result.id);\n                var request = _this._requests[id];\n                delete _this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    _this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: _this\n                    });\n                }\n                else {\n                    var error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        (0, properties_1.defineReadOnly)(error, \"code\", result.error.code || null);\n                        (0, properties_1.defineReadOnly)(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    _this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: _this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                var sub = _this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        var fauxPoll = setInterval(function () {\n            _this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n        return _this;\n    }\n    Object.defineProperty(WebSocketProvider.prototype, \"websocket\", {\n        // Cannot narrow the type of _websocket, as that is not backwards compatible\n        // so we add a getter and let the WebSocket be a public API.\n        get: function () { return this._websocket; },\n        enumerable: false,\n        configurable: true\n    });\n    WebSocketProvider.prototype.detectNetwork = function () {\n        return this._detectNetwork;\n    };\n    Object.defineProperty(WebSocketProvider.prototype, \"pollingInterval\", {\n        get: function () {\n            return 0;\n        },\n        set: function (value) {\n            logger.throwError(\"cannot set polling interval on WebSocketProvider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setPollingInterval\"\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebSocketProvider.prototype.resetEventsBlock = function (blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    };\n    WebSocketProvider.prototype.poll = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, null];\n            });\n        });\n    };\n    Object.defineProperty(WebSocketProvider.prototype, \"polling\", {\n        set: function (value) {\n            if (!value) {\n                return;\n            }\n            logger.throwError(\"cannot set polling on WebSocketProvider\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setPolling\"\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebSocketProvider.prototype.send = function (method, params) {\n        var _this = this;\n        var rid = NextId++;\n        return new Promise(function (resolve, reject) {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            var payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            _this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: _this\n            });\n            _this._requests[String(rid)] = { callback: callback, payload: payload };\n            if (_this._wsReady) {\n                _this.websocket.send(payload);\n            }\n        });\n    };\n    WebSocketProvider.defaultUrl = function () {\n        return \"ws:/\\/localhost:8546\";\n    };\n    WebSocketProvider.prototype._subscribe = function (tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function () {\n            var subIdPromise, subId;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        subIdPromise = this._subIds[tag];\n                        if (subIdPromise == null) {\n                            subIdPromise = Promise.all(param).then(function (param) {\n                                return _this.send(\"eth_subscribe\", param);\n                            });\n                            this._subIds[tag] = subIdPromise;\n                        }\n                        return [4 /*yield*/, subIdPromise];\n                    case 1:\n                        subId = _a.sent();\n                        this._subs[subId] = { tag: tag, processFunc: processFunc };\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WebSocketProvider.prototype._startEvent = function (event) {\n        var _this = this;\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], function (result) {\n                    var blockNumber = bignumber_1.BigNumber.from(result.number).toNumber();\n                    _this._emitted.block = blockNumber;\n                    _this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], function (result) {\n                    _this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], function (result) {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    _this.emit(event.filter, _this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                var emitReceipt_1 = function (event) {\n                    var hash = event.hash;\n                    _this.getTransactionReceipt(hash).then(function (receipt) {\n                        if (!receipt) {\n                            return;\n                        }\n                        _this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt_1(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], function (result) {\n                    _this._events.filter(function (e) { return (e.type === \"tx\"); }).forEach(emitReceipt_1);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    };\n    WebSocketProvider.prototype._stopEvent = function (event) {\n        var _this = this;\n        var tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter(function (e) { return (e.type === \"tx\"); }).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        var subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then(function (subId) {\n            if (!_this._subs[subId]) {\n                return;\n            }\n            delete _this._subs[subId];\n            _this.send(\"eth_unsubscribe\", [subId]);\n        });\n    };\n    WebSocketProvider.prototype.destroy = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.websocket.readyState === ws_1.WebSocket.CONNECTING)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, (new Promise(function (resolve) {\n                                _this.websocket.onopen = function () {\n                                    resolve(true);\n                                };\n                                _this.websocket.onerror = function () {\n                                    resolve(false);\n                                };\n                            }))];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // Hangup\n                        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n                        this.websocket.close(1000);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return WebSocketProvider;\n}(json_rpc_provider_1.JsonRpcProvider));\nexports.WebSocketProvider = WebSocketProvider;\n//# sourceMappingURL=websocket-provider.js.map","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = \"random/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nvar anyGlobal = getGlobal();\nvar crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nfunction randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    var result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return (0, bytes_1.arrayify)(result);\n}\nexports.randomBytes = randomBytes;\n;\n//# sourceMappingURL=browser-random.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shuffled = exports.randomBytes = void 0;\nvar random_1 = require(\"./random\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_1.randomBytes; } });\nvar shuffle_1 = require(\"./shuffle\");\nObject.defineProperty(exports, \"shuffled\", { enumerable: true, get: function () { return shuffle_1.shuffled; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shuffled = void 0;\nfunction shuffled(array) {\n    array = array.slice();\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\nexports.shuffled = shuffled;\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = \"rlp/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\n//See: https://github.com/ethereum/wiki/wiki/RLP\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nfunction arrayifyInteger(value) {\n    var result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    var result = 0;\n    for (var i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        var payload_1 = [];\n        object.forEach(function (child) {\n            payload_1 = payload_1.concat(_encode(child));\n        });\n        if (payload_1.length <= 55) {\n            payload_1.unshift(0xc0 + payload_1.length);\n            return payload_1;\n        }\n        var length_1 = arrayifyInteger(payload_1.length);\n        length_1.unshift(0xf7 + length_1.length);\n        return length_1.concat(payload_1);\n    }\n    if (!(0, bytes_1.isBytesLike)(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    var data = Array.prototype.slice.call((0, bytes_1.arrayify)(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    var length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return (0, bytes_1.hexlify)(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n    var result = [];\n    while (childOffset < offset + 1 + length) {\n        var decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        var lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        var length_2 = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length_2 > data.length) {\n            logger.throwError(\"data long segment too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length_2);\n    }\n    else if (data[offset] >= 0xc0) {\n        var length_3 = data[offset] - 0xc0;\n        if (offset + 1 + length_3 > data.length) {\n            logger.throwError(\"data array too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length_3);\n    }\n    else if (data[offset] >= 0xb8) {\n        var lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        var length_4 = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length_4 > data.length) {\n            logger.throwError(\"data array too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        var result = (0, bytes_1.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length_4));\n        return { consumed: (1 + lengthLength + length_4), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        var length_5 = data[offset] - 0x80;\n        if (offset + 1 + length_5 > data.length) {\n            logger.throwError(\"data too short\", logger_1.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        var result = (0, bytes_1.hexlify)(data.slice(offset + 1, offset + 1 + length_5));\n        return { consumed: (1 + length_5), result: result };\n    }\n    return { consumed: 1, result: (0, bytes_1.hexlify)(data[offset]) };\n}\nfunction decode(data) {\n    var bytes = (0, bytes_1.arrayify)(data);\n    var decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\nexports.decode = decode;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = \"sha2/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeHmac = exports.sha512 = exports.sha256 = exports.ripemd160 = void 0;\nvar hash_js_1 = __importDefault(require(\"hash.js\"));\n//const _ripemd160 = _hash.ripemd160;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar types_1 = require(\"./types\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nfunction ripemd160(data) {\n    return \"0x\" + (hash_js_1.default.ripemd160().update((0, bytes_1.arrayify)(data)).digest(\"hex\"));\n}\nexports.ripemd160 = ripemd160;\nfunction sha256(data) {\n    return \"0x\" + (hash_js_1.default.sha256().update((0, bytes_1.arrayify)(data)).digest(\"hex\"));\n}\nexports.sha256 = sha256;\nfunction sha512(data) {\n    return \"0x\" + (hash_js_1.default.sha512().update((0, bytes_1.arrayify)(data)).digest(\"hex\"));\n}\nexports.sha512 = sha512;\nfunction computeHmac(algorithm, key, data) {\n    if (!types_1.SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash_js_1.default.hmac(hash_js_1.default[algorithm], (0, bytes_1.arrayify)(key)).update((0, bytes_1.arrayify)(data)).digest(\"hex\");\n}\nexports.computeHmac = computeHmac;\n//# sourceMappingURL=browser-sha2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SupportedAlgorithm = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.computeHmac = void 0;\nvar sha2_1 = require(\"./sha2\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return sha2_1.computeHmac; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return sha2_1.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_1.sha512; } });\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", { enumerable: true, get: function () { return types_1.SupportedAlgorithm; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SupportedAlgorithm = void 0;\nvar SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm = exports.SupportedAlgorithm || (exports.SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = \"signing-key/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EC = void 0;\nvar elliptic_1 = __importDefault(require(\"elliptic\"));\nvar EC = elliptic_1.default.ec;\nexports.EC = EC;\n//# sourceMappingURL=elliptic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computePublicKey = exports.recoverPublicKey = exports.SigningKey = void 0;\nvar elliptic_1 = require(\"./elliptic\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new elliptic_1.EC(\"secp256k1\");\n    }\n    return _curve;\n}\nvar SigningKey = /** @class */ (function () {\n    function SigningKey(privateKey) {\n        (0, properties_1.defineReadOnly)(this, \"curve\", \"secp256k1\");\n        (0, properties_1.defineReadOnly)(this, \"privateKey\", (0, bytes_1.hexlify)(privateKey));\n        if ((0, bytes_1.hexDataLength)(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n        var keyPair = getCurve().keyFromPrivate((0, bytes_1.arrayify)(this.privateKey));\n        (0, properties_1.defineReadOnly)(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        (0, properties_1.defineReadOnly)(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n        (0, properties_1.defineReadOnly)(this, \"_isSigningKey\", true);\n    }\n    SigningKey.prototype._addPoint = function (other) {\n        var p0 = getCurve().keyFromPublic((0, bytes_1.arrayify)(this.publicKey));\n        var p1 = getCurve().keyFromPublic((0, bytes_1.arrayify)(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    };\n    SigningKey.prototype.signDigest = function (digest) {\n        var keyPair = getCurve().keyFromPrivate((0, bytes_1.arrayify)(this.privateKey));\n        var digestBytes = (0, bytes_1.arrayify)(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        var signature = keyPair.sign(digestBytes, { canonical: true });\n        return (0, bytes_1.splitSignature)({\n            recoveryParam: signature.recoveryParam,\n            r: (0, bytes_1.hexZeroPad)(\"0x\" + signature.r.toString(16), 32),\n            s: (0, bytes_1.hexZeroPad)(\"0x\" + signature.s.toString(16), 32),\n        });\n    };\n    SigningKey.prototype.computeSharedSecret = function (otherKey) {\n        var keyPair = getCurve().keyFromPrivate((0, bytes_1.arrayify)(this.privateKey));\n        var otherKeyPair = getCurve().keyFromPublic((0, bytes_1.arrayify)(computePublicKey(otherKey)));\n        return (0, bytes_1.hexZeroPad)(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    };\n    SigningKey.isSigningKey = function (value) {\n        return !!(value && value._isSigningKey);\n    };\n    return SigningKey;\n}());\nexports.SigningKey = SigningKey;\nfunction recoverPublicKey(digest, signature) {\n    var sig = (0, bytes_1.splitSignature)(signature);\n    var rs = { r: (0, bytes_1.arrayify)(sig.r), s: (0, bytes_1.arrayify)(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey((0, bytes_1.arrayify)(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction computePublicKey(key, compressed) {\n    var bytes = (0, bytes_1.arrayify)(key);\n    if (bytes.length === 32) {\n        var signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return (0, bytes_1.hexlify)(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return (0, bytes_1.hexlify)(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\nexports.computePublicKey = computePublicKey;\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { blo } from 'blo';\n\nconst BlockieIdenticon = ({ address, diameter, alt = '', borderRadius }) => {\n  return (\n    <img\n      src={blo(address)}\n      height={diameter}\n      width={diameter}\n      style={{\n        borderRadius,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nBlockieIdenticon.propTypes = {\n  address: PropTypes.string.isRequired,\n  diameter: PropTypes.number.isRequired,\n  alt: PropTypes.string,\n  borderRadius: PropTypes.string,\n};\n\nexport default BlockieIdenticon;\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","import React, { useEffect, useRef } from 'react';\nimport jazzicon from '@metamask/jazzicon';\nimport { stringToBytes } from '@metamask/utils';\nimport iconFactoryGenerator, {\n  IconFactory,\n} from '../../../helpers/utils/icon-factory';\n\n/**\n * Generates a seed for Jazzicon based on the provided address.\n *\n * Our existing seed generation for Ethereum addresses does not work with\n * arbitrary string inputs. Since it assumes the address can be parsed as\n * hexadecimal, however that assumption does not hold for all multichain\n * addresses. Therefore we choose to use a byte array as the seed for multichain\n * addresses. This works since the underlying Mersenne Twister PRNG can be\n * seeded with an array as well.\n *\n * @param address - The blockchain address to generate the seed for.\n * @returns The seed for Jazzicon.\n */\nfunction generateSeed(address: string) {\n  return Array.from(stringToBytes(address.normalize('NFKC').toLowerCase()));\n}\n\nconst ethereumIconFactory = iconFactoryGenerator(jazzicon);\nconst multichainIconFactory = new IconFactory(jazzicon, generateSeed);\n\n/**\n * Renders a Jazzicon component based on the provided address. Utilizes a React ref to manage the DOM element for the icon.\n *\n * @param props - The component props.\n * @param props.address - The blockchain address to generate the icon for.\n * @param props.className - Optional. Additional CSS classes to apply to the container div.\n * @param props.diameter - Optional. The diameter of the icon. Defaults to 46 pixels.\n * @param props.style - Optional. Inline styles for the container div.\n * @param props.tokenList - Optional. An object mapping addresses to token metadata, used to optionally override Jazzicon with specific icons.\n * @param props.namespace - Optional. The namespace to use for the seed generation. Defaults to 'eip155'.\n * @returns A React component displaying a Jazzicon or custom icon.\n */\nfunction Jazzicon({\n  address,\n  className,\n  diameter = 46,\n  style,\n  tokenList = {},\n  namespace = 'eip155',\n}: {\n  address: string;\n  className?: string;\n  diameter?: number;\n  style?: React.CSSProperties;\n  tokenList?: { [address: string]: { iconUrl?: string } };\n  namespace?: string;\n}) {\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      // eslint-disable-next-line consistent-return\n      return;\n    }\n\n    const iconFactory =\n      namespace === 'eip155' ? ethereumIconFactory : multichainIconFactory;\n\n    const imageNode = iconFactory.iconForAddress(\n      address,\n      diameter,\n      tokenList[address?.toLowerCase()],\n    );\n\n    container.current.appendChild(imageNode);\n\n    // Clean-up function to remove the icon from the DOM\n    // eslint-disable-next-line consistent-return\n    return () => {\n      while (container.current?.firstChild) {\n        container.current.firstChild.remove();\n      }\n    };\n  }, [address, diameter, tokenList]);\n\n  return <div ref={container} className={className} style={style} />;\n}\n\nexport default Jazzicon;\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","import React, { Component, createContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  getCurrentLocale,\n  getCurrentLocaleMessages,\n  getEnLocaleMessages,\n} from '../ducks/locale/locale';\nimport { getMessage } from '../helpers/utils/i18n-helper';\n\nexport const I18nContext = createContext((key) => `[${key}]`);\n\nexport const I18nProvider = (props) => {\n  const currentLocale = useSelector(getCurrentLocale);\n  const current = useSelector(getCurrentLocaleMessages);\n  const en = useSelector(getEnLocaleMessages);\n\n  const t = useMemo(() => {\n    return (key, ...args) =>\n      getMessage(currentLocale, current, key, ...args) ||\n      getMessage(currentLocale, en, key, ...args);\n  }, [currentLocale, current, en]);\n\n  return (\n    <I18nContext.Provider value={t}>{props.children}</I18nContext.Provider>\n  );\n};\n\nI18nProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nI18nProvider.defaultProps = {\n  children: undefined,\n};\n\nexport class LegacyI18nProvider extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    children: undefined,\n  };\n\n  static contextType = I18nContext;\n\n  static childContextTypes = {\n    t: PropTypes.func,\n  };\n\n  getChildContext() {\n    return {\n      t: this.context,\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","export const ALERT_STATE = {\n  CLOSED: 'CLOSED',\n  ERROR: 'ERROR',\n  LOADING: 'LOADING',\n  OPEN: 'OPEN',\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { captureException } from '@sentry/browser';\n\nimport { AlertTypes } from '../../../shared/constants/alerts';\nimport * as actionConstants from '../../store/actionConstants';\nimport {\n  addPermittedAccount,\n  setAlertEnabledness,\n  setSelectedAccount,\n  setSelectedInternalAccount,\n} from '../../store/actions';\nimport {\n  getInternalAccount,\n  getOriginOfCurrentTab,\n  getSelectedInternalAccount,\n} from '../../selectors';\nimport { ALERT_STATE } from './enums';\n\n// Constants\n\nconst name = AlertTypes.unconnectedAccount;\n\nconst initialState = {\n  state: ALERT_STATE.CLOSED,\n};\n\n// Slice (reducer plus auto-generated actions and action creators)\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    connectAccountFailed: (state) => {\n      state.state = ALERT_STATE.ERROR;\n    },\n    connectAccountRequested: (state) => {\n      state.state = ALERT_STATE.LOADING;\n    },\n    connectAccountSucceeded: (state) => {\n      state.state = ALERT_STATE.CLOSED;\n    },\n    disableAlertFailed: (state) => {\n      state.state = ALERT_STATE.ERROR;\n    },\n    disableAlertRequested: (state) => {\n      state.state = ALERT_STATE.LOADING;\n    },\n    disableAlertSucceeded: (state) => {\n      state.state = ALERT_STATE.CLOSED;\n    },\n    dismissAlert: (state) => {\n      state.state = ALERT_STATE.CLOSED;\n    },\n    switchAccountFailed: (state) => {\n      state.state = ALERT_STATE.ERROR;\n    },\n    switchAccountRequested: (state) => {\n      state.state = ALERT_STATE.LOADING;\n    },\n    switchAccountSucceeded: (state) => {\n      state.state = ALERT_STATE.CLOSED;\n    },\n    switchedToUnconnectedAccount: (state) => {\n      state.state = ALERT_STATE.OPEN;\n    },\n  },\n  extraReducers: {\n    [actionConstants.SELECTED_ADDRESS_CHANGED]: (state) => {\n      // close the alert if the account is switched while it's open\n      if (state.state === ALERT_STATE.OPEN) {\n        state.state = ALERT_STATE.CLOSED;\n      }\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\n\nexport default reducer;\n\n// Selectors\n\nexport const getAlertState = (state) => state[name].state;\n\nexport const alertIsOpen = (state) => state[name].state !== ALERT_STATE.CLOSED;\n\n// Actions / action-creators\n\nconst {\n  connectAccountFailed,\n  connectAccountRequested,\n  connectAccountSucceeded,\n  disableAlertFailed,\n  disableAlertRequested,\n  disableAlertSucceeded,\n  dismissAlert,\n  switchAccountFailed,\n  switchAccountRequested,\n  switchAccountSucceeded,\n  switchedToUnconnectedAccount,\n} = actions;\n\nexport { dismissAlert, switchedToUnconnectedAccount };\n\nexport const dismissAndDisableAlert = () => {\n  return async (dispatch) => {\n    try {\n      await dispatch(disableAlertRequested());\n      await setAlertEnabledness(name, false);\n      await dispatch(disableAlertSucceeded());\n    } catch (error) {\n      console.error(error);\n      captureException(error);\n      await dispatch(disableAlertFailed());\n    }\n  };\n};\n\nexport const switchToAccount = (accountId) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    try {\n      await dispatch(switchAccountRequested());\n      await dispatch(setSelectedInternalAccount(accountId));\n      const internalAccount = getInternalAccount(state, accountId);\n      await dispatch(setSelectedAccount(internalAccount.address));\n      await dispatch(switchAccountSucceeded());\n    } catch (error) {\n      console.error(error);\n      captureException(error);\n      await dispatch(switchAccountFailed());\n    }\n  };\n};\n\nexport const connectAccount = () => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const { address: selectedAddress } = getSelectedInternalAccount(state);\n    const origin = getOriginOfCurrentTab(state);\n    try {\n      await dispatch(connectAccountRequested());\n      await dispatch(addPermittedAccount(origin, selectedAddress));\n      await dispatch(connectAccountSucceeded());\n    } catch (error) {\n      console.error(error);\n      captureException(error);\n      await dispatch(connectAccountFailed());\n    }\n  };\n};\n","import { AnyAction, Action } from 'redux';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport {\n  WebHIDConnectedStatuses,\n  HardwareTransportStates,\n} from '../../../shared/constants/hardware-wallets';\nimport * as actionConstants from '../../store/actionConstants';\n\ntype AppState = {\n  shouldClose: boolean;\n  menuOpen: boolean;\n  modal: {\n    open: boolean;\n    modalState: {\n      name: string | null;\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      props: Record<string, any>;\n    };\n    previousModalState: {\n      name: string | null;\n    };\n  };\n  alertOpen: boolean;\n  alertMessage: string | null;\n  qrCodeData: {\n    type?: string | null;\n    values?: { address?: string | null };\n  } | null;\n  networkDropdownOpen: boolean;\n  importNftsModal: {\n    open: boolean;\n    tokenAddress?: string;\n    tokenId?: string;\n    ignoreErc20Token?: boolean;\n  };\n  showIpfsModalOpen: boolean;\n  keyringRemovalSnapModal: {\n    snapName: string;\n    result: 'success' | 'failure' | 'none';\n  };\n  showKeyringRemovalSnapModal: boolean;\n  importTokensModalOpen: boolean;\n  deprecatedNetworkModalOpen: boolean;\n  accountDetail: {\n    subview?: string;\n    accountExport?: string;\n    privateKey?: string;\n  };\n  isLoading: boolean;\n  isNftStillFetchingIndication: boolean;\n  showNftDetectionEnablementToast: boolean;\n  loadingMessage: string | null;\n  scrollToBottom: boolean;\n  warning: string | null | undefined;\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  buyView: Record<string, any>;\n  defaultHdPaths: {\n    trezor: string;\n    ledger: string;\n    lattice: string;\n  };\n  networksTabSelectedRpcUrl: string | null;\n  requestAccountTabs: Record<string, number>; // [url.origin]: tab.id\n  openMetaMaskTabs: Record<string, boolean>; // openMetamaskTabsIDs[tab.id]): true/false\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  currentWindowTab: Record<string, any>; // tabs.tab https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/tabs/Tab\n  showWhatsNewPopup: boolean;\n  showTermsOfUsePopup: boolean;\n  singleExceptions: {\n    testKey: string | null;\n  };\n  gasLoadingAnimationIsShowing: boolean;\n  smartTransactionsError: string | null;\n  smartTransactionsErrorMessageDismissed: boolean;\n  ledgerWebHidConnectedStatus: WebHIDConnectedStatuses;\n  ledgerTransportStatus: HardwareTransportStates;\n  showBasicFunctionalityModal: boolean;\n  externalServicesOnboardingToggleState: boolean;\n  newNftAddedMessage: string;\n  removeNftMessage: string;\n  newNetworkAddedName: string;\n  editedNetwork:\n    | {\n        chainId: string;\n        nickname?: string;\n        editCompleted?: boolean;\n        newNetwork?: boolean;\n      }\n    | undefined;\n  newNetworkAddedConfigurationId: string;\n  selectedNetworkConfigurationId: string;\n  sendInputCurrencySwitched: boolean;\n  newTokensImported: string;\n  newTokensImportedError: string;\n  onboardedInThisUISession: boolean;\n  customTokenAmount: string;\n  txId: string | null;\n  accountDetailsAddress: string;\n  snapsInstallPrivacyWarningShown: boolean;\n  isAddingNewNetwork: boolean;\n  isMultiRpcOnboarding: boolean;\n};\n\ntype AppSliceState = {\n  appState: AppState;\n};\n\n// default state\nconst initialState: AppState = {\n  shouldClose: false,\n  menuOpen: false,\n  modal: {\n    open: false,\n    modalState: {\n      name: null,\n      props: {},\n    },\n    previousModalState: {\n      name: null,\n    },\n  },\n  alertOpen: false,\n  alertMessage: null,\n  qrCodeData: null,\n  networkDropdownOpen: false,\n  importNftsModal: { open: false },\n  showIpfsModalOpen: false,\n  showBasicFunctionalityModal: false,\n  externalServicesOnboardingToggleState: true,\n  keyringRemovalSnapModal: {\n    snapName: '',\n    result: 'none',\n  },\n  showKeyringRemovalSnapModal: false,\n  importTokensModalOpen: false,\n  deprecatedNetworkModalOpen: false,\n  accountDetail: {\n    privateKey: '',\n  },\n  // Used to display loading indicator\n  isLoading: false,\n  // Used to show a spinner at the bottom of the page when we are still fetching nfts\n  isNftStillFetchingIndication: false,\n  // Used to display a toast after the user enables the nft auto detection from the notice banner\n  showNftDetectionEnablementToast: false,\n  loadingMessage: null,\n  // Used to display error text\n  warning: null,\n  buyView: {},\n  defaultHdPaths: {\n    trezor: `m/44'/60'/0'/0`,\n    ledger: `m/44'/60'/0'/0/0`,\n    lattice: `m/44'/60'/0'/0`,\n  },\n  networksTabSelectedRpcUrl: '',\n  requestAccountTabs: {},\n  openMetaMaskTabs: {},\n  currentWindowTab: {},\n  showWhatsNewPopup: true,\n  showTermsOfUsePopup: true,\n  singleExceptions: {\n    testKey: null,\n  },\n  gasLoadingAnimationIsShowing: false,\n  smartTransactionsError: null,\n  smartTransactionsErrorMessageDismissed: false,\n  ledgerWebHidConnectedStatus: WebHIDConnectedStatuses.unknown,\n  ledgerTransportStatus: HardwareTransportStates.none,\n  newNftAddedMessage: '',\n  removeNftMessage: '',\n  newNetworkAddedName: '',\n  editedNetwork: undefined,\n  newNetworkAddedConfigurationId: '',\n  selectedNetworkConfigurationId: '',\n  sendInputCurrencySwitched: false,\n  newTokensImported: '',\n  newTokensImportedError: '',\n  onboardedInThisUISession: false,\n  customTokenAmount: '',\n  scrollToBottom: true,\n  txId: null,\n  accountDetailsAddress: '',\n  snapsInstallPrivacyWarningShown: false,\n  isAddingNewNetwork: false,\n  isMultiRpcOnboarding: false,\n};\n\nexport default function reduceApp(\n  state: AppState,\n  action: AnyAction,\n): AppState {\n  const appState: AppState = {\n    ...initialState,\n    ...state,\n  };\n\n  switch (action.type) {\n    // dropdown methods\n    case actionConstants.NETWORK_DROPDOWN_OPEN:\n      return {\n        ...appState,\n        networkDropdownOpen: true,\n      };\n\n    case actionConstants.NETWORK_DROPDOWN_CLOSE:\n      return {\n        ...appState,\n        networkDropdownOpen: false,\n      };\n\n    case actionConstants.IMPORT_NFTS_MODAL_OPEN:\n      return {\n        ...appState,\n        importNftsModal: {\n          open: true,\n          ...action.payload,\n        },\n      };\n\n    case actionConstants.IMPORT_NFTS_MODAL_CLOSE:\n      return {\n        ...appState,\n        importNftsModal: {\n          open: false,\n        },\n      };\n\n    case actionConstants.SHOW_BASIC_FUNCTIONALITY_MODAL_OPEN:\n      return {\n        ...appState,\n        showBasicFunctionalityModal: true,\n      };\n\n    case actionConstants.SHOW_BASIC_FUNCTIONALITY_MODAL_CLOSE:\n      return {\n        ...appState,\n        showBasicFunctionalityModal: false,\n      };\n\n    case actionConstants.ONBOARDING_TOGGLE_BASIC_FUNCTIONALITY_ON:\n      return {\n        ...appState,\n        externalServicesOnboardingToggleState: true,\n      };\n    case actionConstants.ONBOARDING_TOGGLE_BASIC_FUNCTIONALITY_OFF:\n      return {\n        ...appState,\n        externalServicesOnboardingToggleState: false,\n      };\n\n    case actionConstants.SHOW_IPFS_MODAL_OPEN:\n      return {\n        ...appState,\n        showIpfsModalOpen: true,\n      };\n\n    case actionConstants.SHOW_IPFS_MODAL_CLOSE:\n      return {\n        ...appState,\n        showIpfsModalOpen: false,\n      };\n\n    case actionConstants.IMPORT_TOKENS_POPOVER_OPEN:\n      return {\n        ...appState,\n        importTokensModalOpen: true,\n      };\n\n    case actionConstants.IMPORT_TOKENS_POPOVER_CLOSE:\n      return {\n        ...appState,\n        importTokensModalOpen: false,\n      };\n\n    case actionConstants.DEPRECATED_NETWORK_POPOVER_OPEN:\n      return {\n        ...appState,\n        deprecatedNetworkModalOpen: true,\n      };\n\n    case actionConstants.DEPRECATED_NETWORK_POPOVER_CLOSE:\n      return {\n        ...appState,\n        deprecatedNetworkModalOpen: false,\n      };\n\n    // alert methods\n    case actionConstants.ALERT_OPEN:\n      return {\n        ...appState,\n        alertOpen: true,\n        alertMessage: action.payload,\n      };\n\n    case actionConstants.ALERT_CLOSE:\n      return {\n        ...appState,\n        alertOpen: false,\n        alertMessage: null,\n      };\n\n    case actionConstants.SET_ACCOUNT_DETAILS_ADDRESS: {\n      return {\n        ...appState,\n        accountDetailsAddress: action.payload,\n      };\n    }\n\n    // qr scanner methods\n    case actionConstants.QR_CODE_DETECTED:\n      return {\n        ...appState,\n        qrCodeData: action.value,\n      };\n\n    // Smart Transactions errors.\n    case actionConstants.SET_SMART_TRANSACTIONS_ERROR:\n      return {\n        ...appState,\n        smartTransactionsError: action.payload,\n      };\n\n    case actionConstants.DISMISS_SMART_TRANSACTIONS_ERROR_MESSAGE:\n      return {\n        ...appState,\n        smartTransactionsErrorMessageDismissed: true,\n      };\n\n    // modal methods:\n    case actionConstants.MODAL_OPEN: {\n      const { name, ...modalProps } = action.payload;\n\n      return {\n        ...appState,\n        modal: {\n          open: true,\n          modalState: {\n            name,\n            props: { ...modalProps },\n          },\n          previousModalState: { ...appState.modal.modalState },\n        },\n      };\n    }\n\n    case actionConstants.MODAL_CLOSE:\n      return {\n        ...appState,\n        modal: {\n          ...appState.modal,\n          open: false,\n          modalState: { name: null, props: {} },\n          previousModalState: { ...appState.modal.modalState },\n        },\n      };\n\n    case actionConstants.CLEAR_ACCOUNT_DETAILS:\n      return {\n        ...appState,\n        accountDetail: {\n          privateKey: '',\n        },\n      };\n    case actionConstants.SHOW_SEND_TOKEN_PAGE:\n      return {\n        ...appState,\n        warning: null,\n      };\n\n    case actionConstants.LOCK_METAMASK:\n      return {\n        ...appState,\n        warning: null,\n      };\n\n    // accounts\n    case actionConstants.GO_HOME:\n      return {\n        ...appState,\n        accountDetail: {\n          privateKey: '',\n        },\n        warning: null,\n      };\n\n    case actionConstants.SHOW_ACCOUNTS_PAGE:\n      return {\n        ...appState,\n        isLoading: false,\n        warning: null,\n        scrollToBottom: false,\n      };\n\n    case actionConstants.SHOW_CONF_TX_PAGE:\n      return {\n        ...appState,\n        txId: action.id,\n        warning: null,\n        isLoading: false,\n      };\n\n    case actionConstants.COMPLETED_TX:\n      return {\n        ...appState,\n        warning: null,\n        txId: null,\n      };\n\n    case actionConstants.UNLOCK_FAILED:\n      return {\n        ...appState,\n        warning: action.value || 'Incorrect password. Try again.',\n      };\n\n    case actionConstants.UNLOCK_SUCCEEDED:\n      return {\n        ...appState,\n        warning: '',\n      };\n\n    case actionConstants.SET_HARDWARE_WALLET_DEFAULT_HD_PATH: {\n      const { device, path } = action.payload;\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const newDefaults = { ...appState.defaultHdPaths } as any;\n      newDefaults[device] = path;\n\n      return {\n        ...appState,\n        defaultHdPaths: newDefaults,\n      };\n    }\n\n    case actionConstants.SHOW_LOADING:\n      return {\n        ...appState,\n        isLoading: true,\n        loadingMessage: action.payload,\n      };\n\n    case actionConstants.HIDE_LOADING:\n      return {\n        ...appState,\n        isLoading: false,\n      };\n\n    case actionConstants.SHOW_NFT_STILL_FETCHING_INDICATION:\n      return {\n        ...appState,\n        isNftStillFetchingIndication: true,\n      };\n    case actionConstants.SHOW_NFT_DETECTION_ENABLEMENT_TOAST:\n      return {\n        ...appState,\n        showNftDetectionEnablementToast: action.payload,\n      };\n\n    case actionConstants.HIDE_NFT_STILL_FETCHING_INDICATION:\n      return {\n        ...appState,\n        isNftStillFetchingIndication: false,\n      };\n\n    case actionConstants.DISPLAY_WARNING:\n      return {\n        ...appState,\n        warning: action.payload,\n        isLoading: false,\n      };\n\n    case actionConstants.HIDE_WARNING:\n      return {\n        ...appState,\n        warning: undefined,\n      };\n\n    case actionConstants.SHOW_PRIVATE_KEY:\n      return {\n        ...appState,\n        accountDetail: {\n          privateKey: action.payload,\n        },\n      };\n\n    case actionConstants.SET_SELECTED_NETWORK_CONFIGURATION_ID:\n      return {\n        ...appState,\n        selectedNetworkConfigurationId: action.payload,\n      };\n\n    case actionConstants.SET_NEW_NETWORK_ADDED: {\n      const { networkConfigurationId, nickname } = action.payload;\n      return {\n        ...appState,\n        newNetworkAddedName: nickname,\n        newNetworkAddedConfigurationId: networkConfigurationId,\n      };\n    }\n    case actionConstants.SET_EDIT_NETWORK: {\n      return {\n        ...appState,\n        editedNetwork: action.payload,\n      };\n    }\n    case actionConstants.SET_NEW_TOKENS_IMPORTED:\n      return {\n        ...appState,\n        newTokensImported: action.payload,\n      };\n\n    case actionConstants.SET_NEW_TOKENS_IMPORTED_ERROR:\n      return {\n        ...appState,\n        newTokensImportedError: action.payload,\n      };\n\n    case actionConstants.SET_NEW_NFT_ADDED_MESSAGE:\n      return {\n        ...appState,\n        newNftAddedMessage: action.payload,\n      };\n\n    case actionConstants.SET_REMOVE_NFT_MESSAGE:\n      return {\n        ...appState,\n        removeNftMessage: action.payload,\n      };\n\n    case actionConstants.SET_REQUEST_ACCOUNT_TABS:\n      return {\n        ...appState,\n        requestAccountTabs: action.value,\n      };\n\n    case actionConstants.SET_OPEN_METAMASK_TAB_IDS:\n      return {\n        ...appState,\n        openMetaMaskTabs: action.payload,\n      };\n\n    case actionConstants.HIDE_WHATS_NEW_POPUP:\n      return {\n        ...appState,\n        showWhatsNewPopup: false,\n      };\n\n    case actionConstants.CAPTURE_SINGLE_EXCEPTION:\n      return {\n        ...appState,\n        singleExceptions: {\n          ...appState.singleExceptions,\n          [action.value]: null,\n        },\n      };\n\n    case actionConstants.TOGGLE_GAS_LOADING_ANIMATION:\n      return {\n        ...appState,\n        gasLoadingAnimationIsShowing: action.payload,\n      };\n\n    case actionConstants.SET_WEBHID_CONNECTED_STATUS:\n      return {\n        ...appState,\n        ledgerWebHidConnectedStatus: action.payload,\n      };\n\n    case actionConstants.SET_LEDGER_TRANSPORT_STATUS:\n      return {\n        ...appState,\n        ledgerTransportStatus: action.payload,\n      };\n    case actionConstants.TOGGLE_CURRENCY_INPUT_SWITCH:\n      return {\n        ...appState,\n        sendInputCurrencySwitched: !appState.sendInputCurrencySwitched,\n      };\n    case actionConstants.ONBOARDED_IN_THIS_UI_SESSION:\n      return {\n        ...appState,\n        onboardedInThisUISession: action.payload,\n      };\n    case actionConstants.SET_CUSTOM_TOKEN_AMOUNT:\n      return {\n        ...appState,\n        customTokenAmount: action.payload,\n      };\n    case actionConstants.TOGGLE_NETWORK_MENU:\n      return {\n        ...appState,\n        isAddingNewNetwork: Boolean(action.payload?.isAddingNewNetwork),\n        isMultiRpcOnboarding: Boolean(action.payload?.isMultiRpcOnboarding),\n      };\n    ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n    case actionConstants.SHOW_KEYRING_SNAP_REMOVAL_RESULT:\n      return {\n        ...appState,\n        showKeyringRemovalSnapModal: true,\n        keyringRemovalSnapModal: {\n          ...action.payload,\n        },\n      };\n    case actionConstants.HIDE_KEYRING_SNAP_REMOVAL_RESULT:\n      return {\n        ...appState,\n        showKeyringRemovalSnapModal: false,\n        keyringRemovalSnapModal: {\n          snapName: '',\n          result: 'none',\n        },\n      };\n    ///: END:ONLY_INCLUDE_IF\n\n    default:\n      return appState;\n  }\n}\n\n// Action Creators\nexport function hideWhatsNewPopup(): Action {\n  return {\n    type: actionConstants.HIDE_WHATS_NEW_POPUP,\n  };\n}\n\nexport function openBasicFunctionalityModal(): Action {\n  return {\n    type: actionConstants.SHOW_BASIC_FUNCTIONALITY_MODAL_OPEN,\n  };\n}\n\nexport function hideBasicFunctionalityModal(): Action {\n  return {\n    type: actionConstants.SHOW_BASIC_FUNCTIONALITY_MODAL_CLOSE,\n  };\n}\n\nexport function onboardingToggleBasicFunctionalityOn(): Action {\n  return {\n    type: actionConstants.ONBOARDING_TOGGLE_BASIC_FUNCTIONALITY_ON,\n  };\n}\n\nexport function onboardingToggleBasicFunctionalityOff(): Action {\n  return {\n    type: actionConstants.ONBOARDING_TOGGLE_BASIC_FUNCTIONALITY_OFF,\n  };\n}\n\nexport function toggleGasLoadingAnimation(\n  payload: boolean,\n): PayloadAction<boolean> {\n  return { type: actionConstants.TOGGLE_GAS_LOADING_ANIMATION, payload };\n}\n\nexport function setLedgerWebHidConnectedStatus(\n  payload: WebHIDConnectedStatuses,\n): PayloadAction<WebHIDConnectedStatuses> {\n  return { type: actionConstants.SET_WEBHID_CONNECTED_STATUS, payload };\n}\n\nexport function setLedgerTransportStatus(\n  payload: HardwareTransportStates,\n): PayloadAction<HardwareTransportStates> {\n  return { type: actionConstants.SET_LEDGER_TRANSPORT_STATUS, payload };\n}\n\nexport function toggleCurrencySwitch(): Action {\n  return { type: actionConstants.TOGGLE_CURRENCY_INPUT_SWITCH };\n}\n\nexport function setOnBoardedInThisUISession(\n  payload: boolean,\n): PayloadAction<boolean> {\n  return { type: actionConstants.ONBOARDED_IN_THIS_UI_SESSION, payload };\n}\n\nexport function setCustomTokenAmount(payload: string): PayloadAction<string> {\n  return { type: actionConstants.SET_CUSTOM_TOKEN_AMOUNT, payload };\n}\n\n// Selectors\nexport function getQrCodeData(state: AppSliceState): {\n  type?: string | null;\n  values?: { address?: string | null };\n} | null {\n  return state.appState.qrCodeData;\n}\n\nexport function getGasLoadingAnimationIsShowing(state: AppSliceState): boolean {\n  return state.appState.gasLoadingAnimationIsShowing;\n}\n\nexport function getLedgerWebHidConnectedStatus(\n  state: AppSliceState,\n): string | null {\n  return state.appState.ledgerWebHidConnectedStatus;\n}\n\nexport function getLedgerTransportStatus(state: AppSliceState): string | null {\n  return state.appState.ledgerTransportStatus;\n}\n","import {\n  conversionRateSelector,\n  currentCurrencySelector,\n  unconfirmedTransactionsHashSelector,\n} from '../../selectors';\nimport { getNativeCurrency, getTokens } from '../metamask/metamask';\n\nimport {\n  getTransactionFee,\n  getHexGasTotal,\n  addFiat,\n  addEth,\n} from '../../helpers/utils/confirm-tx.util';\n\nimport {\n  getValueFromWeiHex,\n  hexToDecimal,\n  sumHexes,\n} from '../../../shared/modules/conversion.utils';\nimport { getAveragePriceEstimateInHexWEI } from '../../selectors/custom-gas';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\nimport { parseStandardTokenTransactionData } from '../../../shared/modules/transaction.utils';\n\n// Actions\nconst createActionType = (action) => `metamask/confirm-transaction/${action}`;\n\nconst UPDATE_TX_DATA = createActionType('UPDATE_TX_DATA');\nconst UPDATE_TOKEN_DATA = createActionType('UPDATE_TOKEN_DATA');\nconst UPDATE_TOKEN_PROPS = createActionType('UPDATE_TOKEN_PROPS');\nconst CLEAR_CONFIRM_TRANSACTION = createActionType('CLEAR_CONFIRM_TRANSACTION');\nconst UPDATE_TRANSACTION_AMOUNTS = createActionType(\n  'UPDATE_TRANSACTION_AMOUNTS',\n);\nconst UPDATE_TRANSACTION_FEES = createActionType('UPDATE_TRANSACTION_FEES');\nconst UPDATE_TRANSACTION_TOTALS = createActionType('UPDATE_TRANSACTION_TOTALS');\nconst UPDATE_NONCE = createActionType('UPDATE_NONCE');\nconst SET_MAX_VALUE_MODE = createActionType('SET_MAX_VALUE_MODE');\n\n// Initial state\nconst initState = {\n  txData: {},\n  tokenData: {},\n  tokenProps: {},\n  fiatTransactionAmount: '',\n  fiatTransactionFee: '',\n  fiatTransactionTotal: '',\n  ethTransactionAmount: '',\n  ethTransactionFee: '',\n  ethTransactionTotal: '',\n  hexTransactionAmount: '',\n  hexTransactionFee: '',\n  hexTransactionTotal: '',\n  nonce: '',\n  maxValueMode: {},\n};\n\n// Reducer\nexport default function reducer(state = initState, action = {}) {\n  switch (action.type) {\n    case UPDATE_TX_DATA:\n      return {\n        ...state,\n        txData: {\n          ...action.payload,\n        },\n      };\n    case UPDATE_TOKEN_DATA:\n      return {\n        ...state,\n        tokenData: {\n          ...action.payload,\n        },\n      };\n    case UPDATE_TOKEN_PROPS:\n      return {\n        ...state,\n        tokenProps: {\n          ...action.payload,\n        },\n      };\n    case UPDATE_TRANSACTION_AMOUNTS: {\n      const {\n        fiatTransactionAmount,\n        ethTransactionAmount,\n        hexTransactionAmount,\n      } = action.payload;\n      return {\n        ...state,\n        fiatTransactionAmount:\n          fiatTransactionAmount || state.fiatTransactionAmount,\n        ethTransactionAmount:\n          ethTransactionAmount || state.ethTransactionAmount,\n        hexTransactionAmount:\n          hexTransactionAmount || state.hexTransactionAmount,\n      };\n    }\n    case UPDATE_TRANSACTION_FEES: {\n      const { fiatTransactionFee, ethTransactionFee, hexTransactionFee } =\n        action.payload;\n      return {\n        ...state,\n        fiatTransactionFee: fiatTransactionFee || state.fiatTransactionFee,\n        ethTransactionFee: ethTransactionFee || state.ethTransactionFee,\n        hexTransactionFee: hexTransactionFee || state.hexTransactionFee,\n      };\n    }\n    case UPDATE_TRANSACTION_TOTALS: {\n      const { fiatTransactionTotal, ethTransactionTotal, hexTransactionTotal } =\n        action.payload;\n      return {\n        ...state,\n        fiatTransactionTotal:\n          fiatTransactionTotal || state.fiatTransactionTotal,\n        ethTransactionTotal: ethTransactionTotal || state.ethTransactionTotal,\n        hexTransactionTotal: hexTransactionTotal || state.hexTransactionTotal,\n      };\n    }\n    case UPDATE_NONCE:\n      return {\n        ...state,\n        nonce: action.payload,\n      };\n    case CLEAR_CONFIRM_TRANSACTION:\n      return {\n        ...initState,\n        maxValueMode: state.maxValueMode,\n      };\n    case SET_MAX_VALUE_MODE:\n      return {\n        ...state,\n        maxValueMode: {\n          ...state.maxValueMode,\n          [action.payload.transactionId]: action.payload.enabled,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function updateTxData(txData) {\n  return {\n    type: UPDATE_TX_DATA,\n    payload: txData,\n  };\n}\n\nexport function updateTokenData(tokenData) {\n  return {\n    type: UPDATE_TOKEN_DATA,\n    payload: tokenData,\n  };\n}\n\nexport function updateTokenProps(tokenProps) {\n  return {\n    type: UPDATE_TOKEN_PROPS,\n    payload: tokenProps,\n  };\n}\n\nexport function updateTransactionAmounts(amounts) {\n  return {\n    type: UPDATE_TRANSACTION_AMOUNTS,\n    payload: amounts,\n  };\n}\n\nexport function updateTransactionFees(fees) {\n  return {\n    type: UPDATE_TRANSACTION_FEES,\n    payload: fees,\n  };\n}\n\nexport function updateTransactionTotals(totals) {\n  return {\n    type: UPDATE_TRANSACTION_TOTALS,\n    payload: totals,\n  };\n}\n\nexport function updateNonce(nonce) {\n  return {\n    type: UPDATE_NONCE,\n    payload: nonce,\n  };\n}\n\nexport function updateTxDataAndCalculate(txData) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const currentCurrency = currentCurrencySelector(state);\n    const conversionRate = conversionRateSelector(state);\n    const nativeCurrency = getNativeCurrency(state);\n\n    dispatch(updateTxData(txData));\n\n    const { txParams: { value = '0x0', gas: gasLimit = '0x0' } = {} } = txData;\n\n    // if the gas price from our infura endpoint is null or undefined\n    // use the metaswap average price estimation as a fallback\n    let { txParams: { gasPrice } = {} } = txData;\n    if (!gasPrice) {\n      gasPrice = getAveragePriceEstimateInHexWEI(state) || '0x0';\n    }\n\n    const fiatTransactionAmount = getValueFromWeiHex({\n      value,\n      fromCurrency: nativeCurrency,\n      toCurrency: currentCurrency,\n      conversionRate,\n      numberOfDecimals: 2,\n    });\n    const ethTransactionAmount = getValueFromWeiHex({\n      value,\n      fromCurrency: nativeCurrency,\n      toCurrency: nativeCurrency,\n      conversionRate,\n      numberOfDecimals: 6,\n    });\n\n    dispatch(\n      updateTransactionAmounts({\n        fiatTransactionAmount,\n        ethTransactionAmount,\n        hexTransactionAmount: value,\n      }),\n    );\n\n    const hexTransactionFee = getHexGasTotal({ gasLimit, gasPrice });\n\n    const fiatTransactionFee = getTransactionFee({\n      value: hexTransactionFee,\n      fromCurrency: nativeCurrency,\n      toCurrency: currentCurrency,\n      numberOfDecimals: 2,\n      conversionRate,\n    });\n    const ethTransactionFee = getTransactionFee({\n      value: hexTransactionFee,\n      fromCurrency: nativeCurrency,\n      toCurrency: nativeCurrency,\n      numberOfDecimals: 6,\n      conversionRate,\n    });\n\n    dispatch(\n      updateTransactionFees({\n        fiatTransactionFee,\n        ethTransactionFee,\n        hexTransactionFee,\n      }),\n    );\n\n    const fiatTransactionTotal = addFiat(\n      fiatTransactionFee,\n      fiatTransactionAmount,\n    );\n    const ethTransactionTotal = addEth(ethTransactionFee, ethTransactionAmount);\n    const hexTransactionTotal = sumHexes(value, hexTransactionFee);\n\n    dispatch(\n      updateTransactionTotals({\n        fiatTransactionTotal,\n        ethTransactionTotal,\n        hexTransactionTotal,\n      }),\n    );\n  };\n}\n\nexport function setTransactionToConfirm(transactionId) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const unconfirmedTransactionsHash =\n      unconfirmedTransactionsHashSelector(state);\n    const transaction = unconfirmedTransactionsHash[transactionId];\n\n    if (!transaction) {\n      console.error(`Transaction with id ${transactionId} not found`);\n      return;\n    }\n\n    if (transaction.txParams) {\n      dispatch(updateTxDataAndCalculate(transaction));\n      const { txParams } = transaction;\n\n      if (txParams.data) {\n        const { to: tokenAddress, data } = txParams;\n\n        const tokenData = parseStandardTokenTransactionData(data);\n        const tokens = getTokens(state);\n        const currentToken = tokens?.find(({ address }) =>\n          isEqualCaseInsensitive(tokenAddress, address),\n        );\n\n        dispatch(\n          updateTokenProps({\n            decimals: currentToken?.decimals,\n            symbol: currentToken?.symbol,\n          }),\n        );\n        dispatch(updateTokenData(tokenData));\n      }\n\n      if (txParams.nonce) {\n        const nonce = hexToDecimal(txParams.nonce);\n\n        dispatch(updateNonce(nonce));\n      }\n    } else {\n      dispatch(updateTxData(transaction));\n    }\n  };\n}\n\nexport function clearConfirmTransaction() {\n  return {\n    type: CLEAR_CONFIRM_TRANSACTION,\n  };\n}\n\nexport function setMaxValueMode(transactionId, enabled) {\n  return {\n    type: SET_MAX_VALUE_MODE,\n    payload: {\n      transactionId,\n      enabled,\n    },\n  };\n}\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","import { createSlice } from '@reduxjs/toolkit';\nimport log from 'loglevel';\n\nimport {\n  getChainIdsCaveat,\n  getLookupMatchersCaveat,\n} from '@metamask/snaps-rpc-methods';\nimport {\n  getAddressBookEntry,\n  getCurrentChainId,\n  getNameLookupSnapsIds,\n  getPermissionSubjects,\n  getSnapMetadata,\n} from '../selectors';\nimport { handleSnapRequest } from '../store/actions';\nimport { NO_RESOLUTION_FOR_DOMAIN } from '../pages/confirmations/send/send.constants';\nimport { CHAIN_CHANGED } from '../store/actionConstants';\nimport { BURN_ADDRESS } from '../../shared/modules/hexstring-utils';\n\n// Local Constants\nconst ZERO_X_ERROR_ADDRESS = '0x';\n\nconst initialState = {\n  stage: 'UNINITIALIZED',\n  resolutions: null,\n  error: null,\n  warning: null,\n  chainId: null,\n  domainName: null,\n};\n\nexport const domainInitialState = initialState;\n\nconst name = 'DNS';\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    lookupStart: (state, action) => {\n      state.domainName = action.payload;\n      state.warning = 'loading';\n      state.error = null;\n    },\n    lookupEnd: (state, action) => {\n      // first clear out the previous state\n      state.resolutions = null;\n      state.error = null;\n      state.warning = null;\n      state.domainName = null;\n      const { resolutions, domainName } = action.payload;\n      const filteredResolutions = resolutions.filter((resolution) => {\n        return (\n          resolution.resolvedAddress !== BURN_ADDRESS &&\n          resolution.resolvedAddress !== ZERO_X_ERROR_ADDRESS\n        );\n      });\n      if (filteredResolutions.length > 0) {\n        state.resolutions = filteredResolutions;\n      } else if (domainName.length > 0) {\n        state.error = NO_RESOLUTION_FOR_DOMAIN;\n      }\n    },\n    enableDomainLookup: (state, action) => {\n      state.stage = 'INITIALIZED';\n      state.error = null;\n      state.resolutions = null;\n      state.warning = null;\n      state.chainId = action.payload;\n    },\n    resetDomainResolution: (state) => {\n      state.resolutions = null;\n      state.warning = null;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(CHAIN_CHANGED, (state, action) => {\n      if (action.payload !== state.chainId) {\n        state.stage = 'UNINITIALIZED';\n      }\n    });\n  },\n});\n\nconst { reducer, actions } = slice;\nexport default reducer;\n\nconst { lookupStart, lookupEnd, enableDomainLookup, resetDomainResolution } =\n  actions;\nexport { resetDomainResolution };\n\nexport function initializeDomainSlice() {\n  return (dispatch, getState) => {\n    const state = getState();\n    const chainId = getCurrentChainId(state);\n    dispatch(enableDomainLookup(chainId));\n  };\n}\n\nexport async function fetchResolutions({ domain, chainId, state }) {\n  const NAME_LOOKUP_PERMISSION = 'endowment:name-lookup';\n  const subjects = getPermissionSubjects(state);\n  const nameLookupSnaps = getNameLookupSnapsIds(state);\n\n  const filteredNameLookupSnapsIds = nameLookupSnaps.filter((snapId) => {\n    const permission = subjects[snapId]?.permissions[NAME_LOOKUP_PERMISSION];\n    const chainIdCaveat = getChainIdsCaveat(permission);\n    const lookupMatchersCaveat = getLookupMatchersCaveat(permission);\n\n    if (chainIdCaveat && !chainIdCaveat.includes(chainId)) {\n      return false;\n    }\n\n    if (lookupMatchersCaveat) {\n      const { tlds, schemes } = lookupMatchersCaveat;\n      return (\n        tlds?.some((tld) => domain.endsWith(`.${tld}`)) ||\n        schemes?.some((scheme) => domain.startsWith(`${scheme}:`))\n      );\n    }\n\n    return true;\n  });\n\n  // previous logic would switch request args based on the domain property to determine\n  // if this should have been a domain request or a reverse resolution request\n  // since reverse resolution is not supported in the send screen flow,\n  // the logic was changed to cancel the request, because otherwise a snap can erroneously\n  // check for the domain property without checking domain length and return faulty results.\n  if (domain.length === 0) {\n    return [];\n  }\n\n  const results = await Promise.allSettled(\n    filteredNameLookupSnapsIds.map((snapId) => {\n      return handleSnapRequest({\n        snapId,\n        origin: '',\n        handler: 'onNameLookup',\n        request: {\n          jsonrpc: '2.0',\n          method: ' ',\n          params: {\n            domain,\n            chainId,\n          },\n        },\n      });\n    }),\n  );\n\n  const filteredResults = results.reduce(\n    (successfulResolutions, result, idx) => {\n      if (result.status !== 'rejected' && result.value !== null) {\n        const resolutions = result.value.resolvedAddresses.map(\n          (resolution) => ({\n            ...resolution,\n            resolvingSnap: getSnapMetadata(\n              state,\n              filteredNameLookupSnapsIds[idx],\n            )?.name,\n            addressBookEntryName: getAddressBookEntry(\n              state,\n              resolution.resolvedAddress,\n            )?.name,\n          }),\n        );\n        return successfulResolutions.concat(resolutions);\n      }\n      return successfulResolutions;\n    },\n    [],\n  );\n\n  return filteredResults;\n}\n\nexport function lookupDomainName(domainName) {\n  return async (dispatch, getState) => {\n    const trimmedDomainName = domainName.trim();\n    let state = getState();\n    if (state[name].stage === 'UNINITIALIZED') {\n      await dispatch(initializeDomainSlice());\n    }\n    await dispatch(lookupStart(trimmedDomainName));\n    state = getState();\n    log.info(`Resolvers attempting to resolve name: ${trimmedDomainName}`);\n    let error;\n    const chainId = getCurrentChainId(state);\n    const chainIdInt = parseInt(chainId, 16);\n    const resolutions = await fetchResolutions({\n      domain: trimmedDomainName,\n      chainId: `eip155:${chainIdInt}`,\n      state,\n    });\n\n    // Due to the asynchronous nature of looking up domains, we could reach this point\n    // while a new lookup has started, if so we don't use the found result.\n    state = getState();\n    if (trimmedDomainName !== state[name].domainName) {\n      return;\n    }\n\n    await dispatch(\n      lookupEnd({\n        resolutions,\n        error,\n        chainId,\n        network: chainIdInt,\n        domainName: trimmedDomainName,\n      }),\n    );\n  };\n}\n\nexport function getDomainResolutions(state) {\n  return state[name].resolutions;\n}\n\nexport function getDomainError(state) {\n  return state[name].error;\n}\n\nexport function getDomainWarning(state) {\n  return state[name].warning;\n}\n","// This file has been separated because it is required in both the gas and send\n// slices. This created a circular dependency problem as both slices also\n// import from the actions and selectors files. This easiest path for\n// untangling is having the constants separate.\n\n// Actions\nexport const RESET_CUSTOM_DATA = 'metamask/gas/RESET_CUSTOM_DATA';\nexport const SET_CUSTOM_GAS_LIMIT = 'metamask/gas/SET_CUSTOM_GAS_LIMIT';\nexport const SET_CUSTOM_GAS_PRICE = 'metamask/gas/SET_CUSTOM_GAS_PRICE';\n","import { cloneDeep } from 'lodash';\nimport {\n  RESET_CUSTOM_DATA,\n  SET_CUSTOM_GAS_LIMIT,\n  SET_CUSTOM_GAS_PRICE,\n} from './gas-action-constants';\n\nconst initState = {\n  customData: {\n    price: null,\n    limit: null,\n  },\n};\n\n// Reducer\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case SET_CUSTOM_GAS_PRICE:\n      return {\n        ...state,\n        customData: {\n          ...state.customData,\n          price: action.value,\n        },\n      };\n    case SET_CUSTOM_GAS_LIMIT:\n      return {\n        ...state,\n        customData: {\n          ...state.customData,\n          limit: action.value,\n        },\n      };\n    case RESET_CUSTOM_DATA:\n      return {\n        ...state,\n        customData: cloneDeep(initState.customData),\n      };\n    default:\n      return state;\n  }\n}\n\nexport function setCustomGasPrice(newPrice) {\n  return {\n    type: SET_CUSTOM_GAS_PRICE,\n    value: newPrice,\n  };\n}\n\nexport function setCustomGasLimit(newLimit) {\n  return {\n    type: SET_CUSTOM_GAS_LIMIT,\n    value: newLimit,\n  };\n}\n","import { createSelector } from 'reselect';\nimport * as actionConstants from '../../store/actionConstants';\n\nexport default function reduceLocaleMessages(state = {}, { type, payload }) {\n  switch (type) {\n    case actionConstants.SET_CURRENT_LOCALE:\n      return {\n        ...state,\n        current: payload.messages,\n        currentLocale: payload.locale,\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n * This selector returns a code from file://./../../../app/_locales/index.json.\n *\n * NOT SAFE FOR INTL API USE. Use getIntlLocale instead for that.\n *\n * @param state\n * @returns {string} the user's selected locale.\n * These codes are not safe to use with the Intl API.\n */\nexport const getCurrentLocale = (state) => state.localeMessages.currentLocale;\n\n/**\n * This selector returns a\n * [BCP 47 Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)\n * for use with the Intl API.\n *\n * @returns {Intl.UnicodeBCP47LocaleIdentifier} the user's selected locale.\n */\nexport const getIntlLocale = createSelector(\n  getCurrentLocale,\n  (locale) => Intl.getCanonicalLocales(locale?.replace(/_/gu, '-'))[0],\n);\n\nexport const getCurrentLocaleMessages = (state) => state.localeMessages.current;\n\nexport const getEnLocaleMessages = (state) => state.localeMessages.en;\n","import { addHexPrefix, isHexString } from 'ethereumjs-util';\nimport { createSelector } from 'reselect';\nimport { mergeGasFeeEstimates } from '@metamask/transaction-controller';\nimport { RpcEndpointType } from '@metamask/network-controller';\nimport { AlertTypes } from '../../../shared/constants/alerts';\nimport {\n  GasEstimateTypes,\n  NetworkCongestionThresholds,\n} from '../../../shared/constants/gas';\nimport { KeyringType } from '../../../shared/constants/keyring';\nimport { DEFAULT_AUTO_LOCK_TIME_LIMIT } from '../../../shared/constants/preferences';\nimport { decGWEIToHexWEI } from '../../../shared/modules/conversion.utils';\nimport { stripHexPrefix } from '../../../shared/modules/hexstring-utils';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\nimport {\n  accountsWithSendEtherInfoSelector,\n  checkNetworkAndAccountSupports1559,\n  getAddressBook,\n  getSelectedNetworkClientId,\n  getSelectedInternalAccount,\n  getNetworkConfigurationsByChainId,\n} from '../../selectors';\nimport * as actionConstants from '../../store/actionConstants';\nimport { updateTransactionGasFees } from '../../store/actions';\nimport { setCustomGasLimit, setCustomGasPrice } from '../gas/gas.duck';\n\nconst initialState = {\n  isInitialized: false,\n  isUnlocked: false,\n  isAccountMenuOpen: false,\n  isNetworkMenuOpen: false,\n  internalAccounts: { accounts: {}, selectedAccount: '' },\n  transactions: [],\n  networkConfigurations: {},\n  addressBook: [],\n  confirmationExchangeRates: {},\n  pendingTokens: {},\n  customNonceValue: '',\n  useBlockie: false,\n  featureFlags: {},\n  welcomeScreenSeen: false,\n  currentLocale: '',\n  currentBlockGasLimit: '',\n  currentBlockGasLimitByChainId: {},\n  preferences: {\n    autoLockTimeLimit: DEFAULT_AUTO_LOCK_TIME_LIMIT,\n    showExtensionInFullSizeView: false,\n    showFiatInTestnets: false,\n    showTestNetworks: false,\n    smartTransactionsOptInStatus: false,\n    useNativeCurrencyAsPrimaryCurrency: true,\n    petnamesEnabled: true,\n    featureNotificationsEnabled: false,\n    showMultiRpcModal: false,\n  },\n  firstTimeFlowType: null,\n  completedOnboarding: false,\n  knownMethodData: {},\n  use4ByteResolution: true,\n  participateInMetaMetrics: null,\n  dataCollectionForMarketing: null,\n  nextNonce: null,\n  currencyRates: {\n    ETH: {\n      conversionRate: null,\n    },\n  },\n};\n\n/**\n * Temporary types for this slice so that inferrence of MetaMask state tree can\n * occur\n *\n * @param {typeof initialState} state - State\n * @param {any} action\n * @returns {typeof initialState}\n */\nexport default function reduceMetamask(state = initialState, action) {\n  // I don't think we should be spreading initialState into this. Once the\n  // state tree has begun by way of the first reduce call the initialState is\n  // set. The only time it should be used again is if we reset the state with a\n  // deliberate action. However, our tests are *relying upon the initialState\n  // tree above to be spread into the reducer as a way of hydrating the state\n  // for this slice*. I attempted to remove this and it caused nearly 40 test\n  // failures. We are going to refactor this slice anyways, possibly removing\n  // it so we will fix this issue when that time comes.\n  const metamaskState = { ...initialState, ...state };\n  switch (action.type) {\n    case actionConstants.UPDATE_METAMASK_STATE:\n      return { ...metamaskState, ...action.value };\n\n    case actionConstants.LOCK_METAMASK:\n      return {\n        ...metamaskState,\n        isUnlocked: false,\n      };\n\n    case actionConstants.SET_ACCOUNT_LABEL: {\n      const { account } = action.value;\n      const name = action.value.label;\n      const accountToUpdate = Object.values(\n        metamaskState.internalAccounts.accounts,\n      ).find((internalAccount) => {\n        return internalAccount.address.toLowerCase() === account.toLowerCase();\n      });\n\n      const internalAccounts = {\n        ...metamaskState.internalAccounts,\n        accounts: {\n          ...metamaskState.internalAccounts.accounts,\n          [accountToUpdate.id]: {\n            ...accountToUpdate,\n            metadata: {\n              ...accountToUpdate.metadata,\n              name,\n            },\n          },\n        },\n      };\n      return Object.assign(metamaskState, { internalAccounts });\n    }\n\n    case actionConstants.UPDATE_CUSTOM_NONCE:\n      return {\n        ...metamaskState,\n        customNonceValue: action.value,\n      };\n\n    case actionConstants.TOGGLE_ACCOUNT_MENU:\n      return {\n        ...metamaskState,\n        isAccountMenuOpen: !metamaskState.isAccountMenuOpen,\n      };\n\n    case actionConstants.TOGGLE_NETWORK_MENU:\n      return {\n        ...metamaskState,\n        isNetworkMenuOpen: !metamaskState.isNetworkMenuOpen,\n      };\n\n    case actionConstants.UPDATE_TRANSACTION_PARAMS: {\n      const { id: txId, value } = action;\n      let { transactions } = metamaskState;\n      transactions = transactions.map((tx) => {\n        if (tx.id === txId) {\n          const newTx = { ...tx };\n          newTx.txParams = value;\n          return newTx;\n        }\n        return tx;\n      });\n\n      return {\n        ...metamaskState,\n        transactions,\n      };\n    }\n\n    case actionConstants.SET_PARTICIPATE_IN_METAMETRICS:\n      return {\n        ...metamaskState,\n        participateInMetaMetrics: action.value,\n      };\n\n    case actionConstants.SET_DATA_COLLECTION_FOR_MARKETING:\n      return {\n        ...metamaskState,\n        dataCollectionForMarketing: action.value,\n      };\n\n    case actionConstants.CLOSE_WELCOME_SCREEN:\n      return {\n        ...metamaskState,\n        welcomeScreenSeen: true,\n      };\n\n    case actionConstants.SET_PENDING_TOKENS:\n      return {\n        ...metamaskState,\n        pendingTokens: { ...action.payload },\n      };\n\n    case actionConstants.CLEAR_PENDING_TOKENS: {\n      return {\n        ...metamaskState,\n        pendingTokens: {},\n      };\n    }\n\n    case actionConstants.COMPLETE_ONBOARDING: {\n      return {\n        ...metamaskState,\n        completedOnboarding: true,\n      };\n    }\n\n    case actionConstants.RESET_ONBOARDING: {\n      return {\n        ...metamaskState,\n        completedOnboarding: false,\n        firstTimeFlowType: null,\n        isInitialized: false,\n        isUnlocked: false,\n        onboardingTabs: {},\n        seedPhraseBackedUp: null,\n        welcomeScreenSeen: false,\n      };\n    }\n\n    case actionConstants.SET_FIRST_TIME_FLOW_TYPE: {\n      return {\n        ...metamaskState,\n        firstTimeFlowType: action.value,\n      };\n    }\n\n    case actionConstants.SET_NEXT_NONCE: {\n      return {\n        ...metamaskState,\n        nextNonce: action.payload,\n      };\n    }\n    case actionConstants.SET_CONFIRMATION_EXCHANGE_RATES:\n      return {\n        ...metamaskState,\n        confirmationExchangeRates: action.value,\n      };\n\n    default:\n      return metamaskState;\n  }\n}\n\nconst toHexWei = (value, expectHexWei) => {\n  return addHexPrefix(expectHexWei ? value : decGWEIToHexWEI(value));\n};\n\n// Action Creators\nexport function updateGasFees({\n  gasPrice,\n  gasLimit,\n  maxPriorityFeePerGas,\n  maxFeePerGas,\n  transaction,\n  expectHexWei = false,\n}) {\n  return async (dispatch) => {\n    const txParamsCopy = { ...transaction.txParams, gas: gasLimit };\n    if (gasPrice) {\n      dispatch(\n        setCustomGasPrice(toHexWei(txParamsCopy.gasPrice, expectHexWei)),\n      );\n      txParamsCopy.gasPrice = toHexWei(gasPrice, expectHexWei);\n    } else if (maxFeePerGas && maxPriorityFeePerGas) {\n      txParamsCopy.maxFeePerGas = toHexWei(maxFeePerGas, expectHexWei);\n      txParamsCopy.maxPriorityFeePerGas = addHexPrefix(\n        decGWEIToHexWEI(maxPriorityFeePerGas),\n      );\n    }\n    const updatedTx = {\n      ...transaction,\n      txParams: txParamsCopy,\n    };\n\n    const customGasLimit = isHexString(addHexPrefix(gasLimit))\n      ? addHexPrefix(gasLimit)\n      : addHexPrefix(gasLimit.toString(16));\n    dispatch(setCustomGasLimit(customGasLimit));\n    await dispatch(updateTransactionGasFees(updatedTx.id, updatedTx));\n  };\n}\n\n// Selectors\n\nexport const getAlertEnabledness = (state) => state.metamask.alertEnabledness;\n\n/**\n * Get the provider configuration for the current selected network.\n *\n * @param {object} state - Redux state object.\n */\nexport const getProviderConfig = createSelector(\n  (state) => getNetworkConfigurationsByChainId(state),\n  (state) => getSelectedNetworkClientId(state),\n  (networkConfigurationsByChainId, selectedNetworkClientId) => {\n    for (const network of Object.values(networkConfigurationsByChainId)) {\n      for (const rpcEndpoint of network.rpcEndpoints) {\n        if (rpcEndpoint.networkClientId === selectedNetworkClientId) {\n          const blockExplorerUrl =\n            network.blockExplorerUrls?.[network.defaultBlockExplorerUrlIndex];\n\n          return {\n            chainId: network.chainId,\n            ticker: network.nativeCurrency,\n            rpcPrefs: { ...(blockExplorerUrl && { blockExplorerUrl }) },\n            type:\n              rpcEndpoint.type === RpcEndpointType.Custom\n                ? 'rpc'\n                : rpcEndpoint.networkClientId,\n            ...(rpcEndpoint.type === RpcEndpointType.Custom && {\n              id: rpcEndpoint.networkClientId,\n              nickname: network.name,\n              rpcUrl: rpcEndpoint.url,\n            }),\n          };\n        }\n      }\n    }\n    return undefined; // should not be reachable\n  },\n);\n\nexport const getUnconnectedAccountAlertEnabledness = (state) =>\n  getAlertEnabledness(state)[AlertTypes.unconnectedAccount];\n\nexport const getWeb3ShimUsageAlertEnabledness = (state) =>\n  getAlertEnabledness(state)[AlertTypes.web3ShimUsage];\n\nexport const getUnconnectedAccountAlertShown = (state) =>\n  state.metamask.unconnectedAccountAlertShownOrigins;\n\nexport const getPendingTokens = (state) => state.metamask.pendingTokens;\n\nexport const getTokens = (state) => state.metamask.tokens;\n\nexport function getNftsDropdownState(state) {\n  return state.metamask.nftsDropdownState;\n}\n\nexport const getNfts = (state) => {\n  const {\n    metamask: { allNfts },\n  } = state;\n  const { address: selectedAddress } = getSelectedInternalAccount(state);\n\n  const { chainId } = getProviderConfig(state);\n\n  return allNfts?.[selectedAddress]?.[chainId] ?? [];\n};\n\nexport const getNftContracts = (state) => {\n  const {\n    metamask: { allNftContracts },\n  } = state;\n  const { address: selectedAddress } = getSelectedInternalAccount(state);\n  const { chainId } = getProviderConfig(state);\n  return allNftContracts?.[selectedAddress]?.[chainId] ?? [];\n};\n\nexport function getBlockGasLimit(state) {\n  return state.metamask.currentBlockGasLimit;\n}\n\nexport function getNativeCurrency(state) {\n  return getProviderConfig(state).ticker;\n}\n\nexport function getConversionRate(state) {\n  return state.metamask.currencyRates[getProviderConfig(state).ticker]\n    ?.conversionRate;\n}\n\nexport function getSendHexDataFeatureFlagState(state) {\n  return state.metamask.featureFlags.sendHexData;\n}\n\nexport function getSendToAccounts(state) {\n  const fromAccounts = accountsWithSendEtherInfoSelector(state);\n  const addressBookAccounts = getAddressBook(state);\n  return [...fromAccounts, ...addressBookAccounts];\n}\n\n/**\n * Function returns true if network details are fetched and it is found to not support EIP-1559\n *\n * @param state\n */\nexport function isNotEIP1559Network(state) {\n  const selectedNetworkClientId = getSelectedNetworkClientId(state);\n  return (\n    state.metamask.networksMetadata[selectedNetworkClientId].EIPS[1559] ===\n    false\n  );\n}\n\n/**\n * Function returns true if network details are fetched and it is found to support EIP-1559\n *\n * @param state\n * @param networkClientId - The optional network client ID to check for EIP-1559 support. Defaults to the currently selected network.\n */\nexport function isEIP1559Network(state, networkClientId) {\n  const selectedNetworkClientId = getSelectedNetworkClientId(state);\n\n  return (\n    state.metamask.networksMetadata?.[\n      networkClientId ?? selectedNetworkClientId\n    ].EIPS[1559] === true\n  );\n}\n\nfunction getGasFeeControllerEstimateType(state) {\n  return state.metamask.gasEstimateType;\n}\n\nfunction getGasFeeControllerEstimateTypeByChainId(state, chainId) {\n  return state.metamask.gasFeeEstimatesByChainId?.[chainId]?.gasEstimateType;\n}\n\nfunction getGasFeeControllerEstimates(state) {\n  return state.metamask.gasFeeEstimates;\n}\n\nfunction getGasFeeControllerEstimatesByChainId(state, chainId) {\n  return state.metamask.gasFeeEstimatesByChainId?.[chainId]?.gasFeeEstimates;\n}\n\nfunction getTransactionGasFeeEstimates(state) {\n  const transactionMetadata = state.confirmTransaction?.txData;\n  return transactionMetadata?.gasFeeEstimates;\n}\n\nfunction getTransactionGasFeeEstimatesByChainId(state, chainId) {\n  const transactionMetadata = state.confirmTransaction?.txData;\n  const transactionChainId = transactionMetadata?.chainId;\n\n  if (transactionChainId !== chainId) {\n    return undefined;\n  }\n\n  return transactionMetadata?.gasFeeEstimates;\n}\n\nconst getTransactionGasFeeEstimateType = createSelector(\n  getTransactionGasFeeEstimates,\n  (transactionGasFeeEstimates) => transactionGasFeeEstimates?.type,\n);\n\nconst getTransactionGasFeeEstimateTypeByChainId = createSelector(\n  getTransactionGasFeeEstimatesByChainId,\n  (transactionGasFeeEstimates) => transactionGasFeeEstimates?.type,\n);\n\nexport const getGasEstimateType = createSelector(\n  getGasFeeControllerEstimateType,\n  getTransactionGasFeeEstimateType,\n  (gasFeeControllerEstimateType, transactionGasFeeEstimateType) => {\n    return transactionGasFeeEstimateType ?? gasFeeControllerEstimateType;\n  },\n);\n\nexport const getGasEstimateTypeByChainId = createSelector(\n  getGasFeeControllerEstimateTypeByChainId,\n  getTransactionGasFeeEstimateTypeByChainId,\n  (gasFeeControllerEstimateType, transactionGasFeeEstimateType) => {\n    return transactionGasFeeEstimateType ?? gasFeeControllerEstimateType;\n  },\n);\n\nexport const getGasFeeEstimatesByChainId = createSelector(\n  getGasFeeControllerEstimatesByChainId,\n  getTransactionGasFeeEstimatesByChainId,\n  (gasFeeControllerEstimates, transactionGasFeeEstimates) => {\n    if (transactionGasFeeEstimates) {\n      return mergeGasFeeEstimates({\n        gasFeeControllerEstimates,\n        transactionGasFeeEstimates,\n      });\n    }\n\n    return gasFeeControllerEstimates;\n  },\n);\n\nexport const getGasFeeEstimates = createSelector(\n  getGasFeeControllerEstimates,\n  getTransactionGasFeeEstimates,\n  (gasFeeControllerEstimates, transactionGasFeeEstimates) => {\n    if (transactionGasFeeEstimates) {\n      return mergeGasFeeEstimates({\n        gasFeeControllerEstimates,\n        transactionGasFeeEstimates,\n      });\n    }\n\n    return gasFeeControllerEstimates;\n  },\n);\n\nexport function getEstimatedGasFeeTimeBounds(state) {\n  return state.metamask.estimatedGasFeeTimeBounds;\n}\n\nexport function getEstimatedGasFeeTimeBoundsByChainId(state, chainId) {\n  return state.metamask.gasFeeEstimatesByChainId?.[chainId]\n    ?.estimatedGasFeeTimeBounds;\n}\n\nexport function getIsGasEstimatesLoading(state) {\n  const networkAndAccountSupports1559 =\n    checkNetworkAndAccountSupports1559(state);\n  const gasEstimateType = getGasEstimateType(state);\n\n  // We consider the gas estimate to be loading if the gasEstimateType is\n  // 'NONE' or if the current gasEstimateType cannot be supported by the current\n  // network\n  const isEIP1559TolerableEstimateType =\n    gasEstimateType === GasEstimateTypes.feeMarket ||\n    gasEstimateType === GasEstimateTypes.ethGasPrice;\n  const isGasEstimatesLoading =\n    gasEstimateType === GasEstimateTypes.none ||\n    (networkAndAccountSupports1559 && !isEIP1559TolerableEstimateType) ||\n    (!networkAndAccountSupports1559 &&\n      gasEstimateType === GasEstimateTypes.feeMarket);\n\n  return isGasEstimatesLoading;\n}\n\nexport function getIsGasEstimatesLoadingByChainId(\n  state,\n  { chainId, networkClientId },\n) {\n  const networkAndAccountSupports1559 = checkNetworkAndAccountSupports1559(\n    state,\n    networkClientId,\n  );\n  const gasEstimateType = getGasEstimateTypeByChainId(state, chainId);\n\n  // We consider the gas estimate to be loading if the gasEstimateType is\n  // 'NONE' or if the current gasEstimateType cannot be supported by the current\n  // network\n  const isEIP1559TolerableEstimateType =\n    gasEstimateType === GasEstimateTypes.feeMarket ||\n    gasEstimateType === GasEstimateTypes.ethGasPrice;\n  const isGasEstimatesLoading =\n    gasEstimateType === GasEstimateTypes.none ||\n    (networkAndAccountSupports1559 && !isEIP1559TolerableEstimateType) ||\n    (!networkAndAccountSupports1559 &&\n      gasEstimateType === GasEstimateTypes.feeMarket);\n\n  return isGasEstimatesLoading;\n}\n\nexport function getIsNetworkBusyByChainId(state, chainId) {\n  const gasFeeEstimates = getGasFeeEstimatesByChainId(state, chainId);\n  return gasFeeEstimates?.networkCongestion >= NetworkCongestionThresholds.busy;\n}\n\nexport function getCompletedOnboarding(state) {\n  return state.metamask.completedOnboarding;\n}\nexport function getIsInitialized(state) {\n  return state.metamask.isInitialized;\n}\n\nexport function getIsUnlocked(state) {\n  return state.metamask.isUnlocked;\n}\n\nexport function getSeedPhraseBackedUp(state) {\n  return state.metamask.seedPhraseBackedUp;\n}\n\n/**\n * Given the redux state object and an address, finds a keyring that contains that address, if one exists\n *\n * @param {object} state - the redux state object\n * @param {string} address - the address to search for among the keyring addresses\n * @returns {object | undefined} The keyring which contains the passed address, or undefined\n */\nexport function findKeyringForAddress(state, address) {\n  const keyring = state.metamask.keyrings.find((kr) => {\n    return kr.accounts.some((account) => {\n      return (\n        isEqualCaseInsensitive(account, addHexPrefix(address)) ||\n        isEqualCaseInsensitive(account, stripHexPrefix(address))\n      );\n    });\n  });\n\n  return keyring;\n}\n\n/**\n * Given the redux state object, returns the users preferred ledger transport type\n *\n * @param {object} state - the redux state object\n * @returns {string} The users preferred ledger transport type. One of 'webhid' on chrome or 'u2f' on firefox\n */\nexport function getLedgerTransportType(state) {\n  return state.metamask.ledgerTransportType;\n}\n\n/**\n * Given the redux state object and an address, returns a boolean indicating whether the passed address is part of a Ledger keyring\n *\n * @param {object} state - the redux state object\n * @param {string} address - the address to search for among all keyring addresses\n * @returns {boolean} true if the passed address is part of a ledger keyring, and false otherwise\n */\nexport function isAddressLedger(state, address) {\n  const keyring = findKeyringForAddress(state, address);\n\n  return keyring?.type === KeyringType.ledger;\n}\n\n/**\n * Given the redux state object, returns a boolean indicating whether the user has any Ledger accounts added to MetaMask (i.e. Ledger keyrings\n * in state)\n *\n * @param {object} state - the redux state object\n * @returns {boolean} true if the user has a Ledger account and false otherwise\n */\nexport function doesUserHaveALedgerAccount(state) {\n  return state.metamask.keyrings.some((kr) => {\n    return kr.type === KeyringType.ledger;\n  });\n}\n","module.exports={\n  \"name\": \"elliptic\",\n  \"version\": \"6.5.4\",\n  \"description\": \"EC cryptography\",\n  \"main\": \"lib/elliptic.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint lib test\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:indutny/elliptic\"\n  },\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"author\": \"Fedor Indutny <fedor@indutny.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"devDependencies\": {\n    \"brfs\": \"^2.0.2\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^7.6.0\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-browserify\": \"^5.3.0\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-connect\": \"^3.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^5.0.0\",\n    \"grunt-mocha-istanbul\": \"^5.0.2\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^8.0.1\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.9\",\n    \"brorand\": \"^1.1.0\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.1\",\n    \"inherits\": \"^2.0.4\",\n    \"minimalistic-assert\": \"^1.0.1\",\n    \"minimalistic-crypto-utils\": \"^1.0.1\"\n  }\n}\n","import { addHexPrefix, toChecksumAddress } from 'ethereumjs-util';\nimport abi from 'human-standard-token-abi';\nimport BigNumber from 'bignumber.js';\nimport { TransactionEnvelopeType } from '@metamask/transaction-controller';\nimport { GAS_LIMITS, MIN_GAS_LIMIT_HEX } from '../../../shared/constants/gas';\nimport { calcTokenAmount } from '../../../shared/lib/transactions-controller-utils';\nimport { CHAIN_ID_TO_GAS_LIMIT_BUFFER_MAP } from '../../../shared/constants/network';\nimport {\n  AssetType,\n  TokenStandard,\n} from '../../../shared/constants/transaction';\nimport { readAddressAsContract } from '../../../shared/modules/contract-utils';\nimport {\n  addGasBuffer,\n  generateERC20TransferData,\n  generateERC721TransferData,\n  generateERC1155TransferData,\n  getAssetTransferData,\n} from '../../pages/confirmations/send/send.utils';\nimport {\n  checkNetworkAndAccountSupports1559,\n  getConfirmationExchangeRates,\n  getCurrentChainId,\n  getGasPriceInHexWei,\n  getTokenExchangeRates,\n} from '../../selectors';\nimport { estimateGas } from '../../store/actions';\nimport { Numeric } from '../../../shared/modules/Numeric';\nimport { getGasFeeEstimates, getNativeCurrency } from '../metamask/metamask';\nimport { getUsedSwapsGasPrice } from '../swaps/swaps';\nimport { fetchTokenExchangeRates } from '../../helpers/utils/util';\nimport { hexToDecimal } from '../../../shared/modules/conversion.utils';\nimport { EtherDenomination } from '../../../shared/constants/common';\nimport { SWAPS_CHAINID_DEFAULT_TOKEN_MAP } from '../../../shared/constants/swaps';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\n\nexport async function estimateGasLimitForSend({\n  selectedAddress,\n  value,\n  gasPrice,\n  sendToken,\n  to,\n  data,\n  isNonStandardEthChain,\n  chainId,\n  gasLimit,\n  ...options\n}) {\n  let isSimpleSendOnNonStandardNetwork = false;\n\n  // blockGasLimit may be a falsy, but defined, value when we receive it from\n  // state, so we use logical or to fall back to MIN_GAS_LIMIT_HEX. Some\n  // network implementations check the gas parameter supplied to\n  // eth_estimateGas for validity. For this reason, we set token sends\n  // blockGasLimit default to a higher number. Note that the current gasLimit\n  // on a BLOCK is 15,000,000 and will be 30,000,000 on mainnet after London.\n  // Meanwhile, MIN_GAS_LIMIT_HEX is 0x5208.\n  let blockGasLimit = MIN_GAS_LIMIT_HEX;\n  if (options.blockGasLimit) {\n    blockGasLimit = options.blockGasLimit;\n  } else if (sendToken) {\n    blockGasLimit = GAS_LIMITS.BASE_TOKEN_ESTIMATE;\n  }\n\n  // The parameters below will be sent to our background process to estimate\n  // how much gas will be used for a transaction. That background process is\n  // located in tx-gas-utils.js in the transaction controller folder.\n  const paramsForGasEstimate = { from: selectedAddress, value, gasPrice };\n\n  if (sendToken) {\n    if (!to) {\n      // If no to address is provided, we cannot generate the token transfer\n      // hexData. hexData in a transaction largely dictates how much gas will\n      // be consumed by a transaction. We must use our best guess, which is\n      // represented in the gas shared constants.\n      return GAS_LIMITS.BASE_TOKEN_ESTIMATE;\n    }\n    paramsForGasEstimate.value = '0x0';\n\n    // We have to generate the erc20/erc721 contract call to transfer tokens in\n    // order to get a proper estimate for gasLimit.\n    paramsForGasEstimate.data = getAssetTransferData({\n      sendToken,\n      fromAddress: selectedAddress,\n      toAddress: to,\n      amount: value,\n    });\n\n    paramsForGasEstimate.to = sendToken.address;\n  } else {\n    if (!data) {\n      // eth.getCode will return the compiled smart contract code at the\n      // address. If this returns 0x, 0x0 or a nullish value then the address\n      // is an externally owned account (NOT a contract account). For these\n      // types of transactions the gasLimit will always be 21,000 or 0x5208\n      const { isContractAddress } = to\n        ? await readAddressAsContract(global.eth, to)\n        : {};\n      if (!isContractAddress && !isNonStandardEthChain) {\n        return GAS_LIMITS.SIMPLE;\n      } else if (!isContractAddress && isNonStandardEthChain) {\n        isSimpleSendOnNonStandardNetwork = true;\n      }\n    }\n\n    paramsForGasEstimate.data = data;\n\n    if (to) {\n      paramsForGasEstimate.to = to;\n    }\n\n    if (!value || value === '0') {\n      // TODO: Figure out what's going on here. According to eth_estimateGas\n      // docs this value can be zero, or undefined, yet we are setting it to a\n      // value here when the value is undefined or zero. For more context:\n      // https://github.com/MetaMask/metamask-extension/pull/6195\n      paramsForGasEstimate.value = '0xff';\n    }\n  }\n\n  if (!isSimpleSendOnNonStandardNetwork) {\n    // If we do not yet have a gasLimit, we must call into our background\n    // process to get an estimate for gasLimit based on known parameters.\n    paramsForGasEstimate.gas = new Numeric(blockGasLimit, 16)\n      .times(new Numeric(0.95, 10))\n      .round(0, BigNumber.ROUND_DOWN)\n      .toPrefixedHexString();\n  }\n\n  // The buffer multipler reduces transaction failures by ensuring that the\n  // estimated gas is always sufficient. Without the multiplier, estimates\n  // for contract interactions can become inaccurate over time. This is because\n  // gas estimation is non-deterministic. The gas required for the exact same\n  // transaction call can change based on state of a contract or changes in the\n  // contracts environment (blockchain data or contracts it interacts with).\n  // Applying the 1.5 buffer has proven to be a useful guard against this non-\n  // deterministic behaviour.\n  //\n  // Gas estimation of simple sends should, however, be deterministic. As such\n  // no buffer is needed in those cases.\n  let bufferMultiplier = 1.5;\n  if (isSimpleSendOnNonStandardNetwork) {\n    bufferMultiplier = 1;\n  } else if (CHAIN_ID_TO_GAS_LIMIT_BUFFER_MAP[chainId]) {\n    bufferMultiplier = CHAIN_ID_TO_GAS_LIMIT_BUFFER_MAP[chainId];\n  }\n\n  try {\n    // Call into the background process that will simulate transaction\n    // execution on the node and return an estimate of gasLimit\n    const estimatedGasLimit = await estimateGas(paramsForGasEstimate);\n\n    const estimateWithBuffer = addGasBuffer(\n      estimatedGasLimit,\n      blockGasLimit,\n      bufferMultiplier,\n    );\n    return addHexPrefix(estimateWithBuffer);\n  } catch (error) {\n    const simulationFailed =\n      error.message.includes('Transaction execution error.') ||\n      error.message.includes(\n        'gas required exceeds allowance or always failing transaction',\n      ) ||\n      (CHAIN_ID_TO_GAS_LIMIT_BUFFER_MAP[chainId] &&\n        error.message.includes('gas required exceeds allowance'));\n    if (simulationFailed) {\n      const estimateWithBuffer = addGasBuffer(\n        paramsForGasEstimate?.gas ?? gasLimit,\n        blockGasLimit,\n        bufferMultiplier,\n      );\n      return addHexPrefix(estimateWithBuffer);\n    }\n    throw error;\n  }\n}\n\nexport const addAdjustedReturnToQuotes = async (\n  quotes,\n  state,\n  destinationAsset,\n) => {\n  if (!quotes?.length) {\n    return quotes;\n  }\n\n  try {\n    const chainId = getCurrentChainId(state);\n\n    // get gas price\n    const { medium, gasPrice: maybeGasFee } = getGasFeeEstimates(state);\n    const networkAndAccountSupports1559 =\n      checkNetworkAndAccountSupports1559(state);\n    // remove this logic once getGasFeeEstimates is typed\n    const gasFee1559 = maybeGasFee ?? medium?.suggestedMaxFeePerGas;\n    const gasPriceNon1559 = getUsedSwapsGasPrice(state);\n    const gasPrice = networkAndAccountSupports1559\n      ? gasFee1559\n      : gasPriceNon1559;\n\n    // get exchange rates from state\n    const contractExchangeRates = getTokenExchangeRates(state);\n    const confirmationExchangeRates = getConfirmationExchangeRates(state);\n    const mergedRates = {\n      ...contractExchangeRates,\n      ...confirmationExchangeRates,\n    };\n\n    const nativeCurrency = getNativeCurrency(state);\n    const destinationAddress = destinationAsset?.address\n      ? toChecksumAddress(destinationAsset.address)\n      : undefined;\n\n    // attempt to get the conversion rate from the state; native currency is 1\n    let destToNativeConversionRate = destinationAddress\n      ? mergedRates[destinationAddress]\n      : 1;\n\n    // if conversion rate isn't already in the state, fetch it\n    if (!destToNativeConversionRate && destinationAddress) {\n      destToNativeConversionRate = (\n        await fetchTokenExchangeRates(\n          nativeCurrency,\n          [destinationAddress],\n          chainId,\n        )\n      )[destinationAddress];\n    }\n\n    // if conversion rate isn't available, do not update the property\n    if (!destToNativeConversionRate) {\n      return quotes;\n    }\n\n    return quotes.map((quote) => {\n      // get trade+approval\n      const totalGasLimit =\n        (quote?.gasParams.maxGas || 0) +\n        Number(hexToDecimal(quote?.approvalNeeded?.gas || '0x0'));\n\n      // get gas price in ETH (assuming mainnet for simplicity)\n      const gasPriceInNative = new Numeric(gasPrice, 10, EtherDenomination.GWEI)\n        .times(totalGasLimit, 10)\n        .toDenomination(EtherDenomination.ETH);\n\n      // convert token to ETH using conversion rate\n      const destTokenReceivedInNative = quote.destinationAmount\n        ? new Numeric(\n            calcTokenAmount(\n              quote.destinationAmount,\n              destinationAsset?.decimals ||\n                SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].decimals,\n            ),\n            10,\n          ).times(destToNativeConversionRate, 10)\n        : undefined;\n\n      // subtract gas ETH value from token ETH value\n      const adjustAmountReceivedInNative = destTokenReceivedInNative\n        .minus(gasPriceInNative)\n        .toNumber();\n\n      // add to quote\n      return { ...quote, adjustAmountReceivedInNative };\n    });\n  } catch (error) {\n    // no action is needed since we fallback from this property\n    console.warn(\n      `Could not calculate adjusted return for quote selection: ${error}`,\n    );\n  }\n  return quotes;\n};\n\nexport const calculateBestQuote = (quotesArray) =>\n  quotesArray.reduce((best, current) => {\n    const currentValue =\n      current?.adjustAmountReceivedInNative ||\n      Number(current?.destinationAmount || 0);\n    const bestValue =\n      best?.adjustAmountReceivedInNative ||\n      Number(best?.destinationAmount || 0);\n\n    return currentValue > bestValue ? current : best;\n  }, quotesArray?.[0]);\n\n/**\n * Generates a txParams from the send slice.\n *\n * @param {import('.').SendState} sendState - the state of the send slice\n * @returns {import('@metamask/transaction-controller').TransactionParams} A txParams object that can be used to create a transaction or\n *  update an existing transaction.\n */\nexport function generateTransactionParams(sendState) {\n  const draftTransaction =\n    sendState.draftTransactions[sendState.currentTransactionUUID];\n\n  const txParams = {\n    // If the fromAccount has been specified we use that, if not we use the\n    // selected account.\n    from:\n      draftTransaction.fromAccount?.address ||\n      sendState.selectedAccount.address,\n    // gasLimit always needs to be set regardless of the asset being sent\n    // or the type of transaction.\n    gas: draftTransaction.gas.gasLimit,\n  };\n\n  switch (draftTransaction.sendAsset.type) {\n    case AssetType.token:\n      // When sending a token the to address is the contract address of\n      // the token being sent. The value is set to '0x0' and the data\n      // is generated from the recipient address, token being sent and\n      // amount.\n      txParams.to = draftTransaction.sendAsset.details.address;\n      txParams.value = '0x0';\n      txParams.data = generateERC20TransferData({\n        toAddress: draftTransaction.recipient.address,\n        amount: draftTransaction.amount.value,\n        sendToken: draftTransaction.sendAsset.details,\n      });\n      break;\n\n    case AssetType.NFT:\n      // When sending a token the to address is the contract address of\n      // the token being sent. The value is set to '0x0' and the data\n      // is generated from the recipient address, token being sent and\n      // amount.\n      txParams.to = draftTransaction.sendAsset.details.address;\n      txParams.value = '0x0';\n      txParams.data =\n        draftTransaction.sendAsset.details?.standard === TokenStandard.ERC721\n          ? generateERC721TransferData({\n              toAddress: draftTransaction.recipient.address,\n              fromAddress:\n                draftTransaction.fromAccount?.address ??\n                sendState.selectedAccount.address,\n              tokenId: draftTransaction.sendAsset.details.tokenId,\n            })\n          : generateERC1155TransferData({\n              toAddress: draftTransaction.recipient.address,\n              fromAddress:\n                draftTransaction.fromAccount?.address ??\n                sendState.selectedAccount.address,\n              tokenId: draftTransaction.sendAsset.details.tokenId,\n              amount: draftTransaction.amount.value,\n            });\n      break;\n    case AssetType.native:\n    default:\n      // When sending native currency the to and value fields use the\n      // recipient and amount values and the data key is either null or\n      // populated with the user input provided in hex field.\n      txParams.to = draftTransaction.recipient.address;\n      txParams.value = draftTransaction.amount.value;\n      txParams.data = draftTransaction.userInputHexData || '0x';\n  }\n\n  // We need to make sure that we only include the right gas fee fields\n  // based on the type of transaction the network supports. We will also set\n  // the type param here.\n  if (sendState.eip1559support) {\n    txParams.type = TransactionEnvelopeType.feeMarket;\n\n    txParams.maxFeePerGas = draftTransaction.gas.maxFeePerGas;\n    txParams.maxPriorityFeePerGas = draftTransaction.gas.maxPriorityFeePerGas;\n\n    if (!txParams.maxFeePerGas || txParams.maxFeePerGas === '0x0') {\n      txParams.maxFeePerGas = draftTransaction.gas.gasPrice;\n    }\n\n    if (\n      !txParams.maxPriorityFeePerGas ||\n      txParams.maxPriorityFeePerGas === '0x0'\n    ) {\n      txParams.maxPriorityFeePerGas = txParams.maxFeePerGas;\n    }\n  } else {\n    txParams.gasPrice = draftTransaction.gas.gasPrice;\n    txParams.type = TransactionEnvelopeType.legacy;\n  }\n\n  return txParams;\n}\n\n/**\n * This method is used to keep the original logic from the gas.duck.js file\n * after receiving a gasPrice from eth_gasPrice. First, the returned gasPrice\n * was converted to GWEI, then it was converted to a Number, then in the send\n * duck (here) we would use getGasPriceInHexWei to get back to hexWei. Now that\n * we receive a GWEI estimate from the controller, we still need to do this\n * weird conversion to get the proper rounding.\n *\n * @param {string} gasPriceEstimate\n * @returns {string}\n */\nexport function getRoundedGasPrice(gasPriceEstimate) {\n  const gasPriceInDecGwei = new Numeric(gasPriceEstimate, 10)\n    .round(9)\n    .toString();\n  const gasPriceAsNumber = Number(gasPriceInDecGwei);\n  return getGasPriceInHexWei(gasPriceAsNumber);\n}\n\nexport async function getERC20Balance(token, accountAddress) {\n  const contract = global.eth.contract(abi).at(token.address);\n  const usersToken = (await contract.balanceOf(accountAddress)) ?? null;\n  if (!usersToken) {\n    return '0x0';\n  }\n  const amount = calcTokenAmount(\n    usersToken.balance.toString(),\n    token.decimals,\n  ).toString(16);\n  return addHexPrefix(amount);\n}\n\n/**\n * returns if a given draft transaction is a swap and send\n *\n * @param {DraftTransaction} draftTransaction\n * @returns {boolean} true if the draft transaction is a swap and send\n */\nexport function getIsDraftSwapAndSend(draftTransaction) {\n  return !isEqualCaseInsensitive(\n    draftTransaction?.sendAsset?.details?.address || '',\n    draftTransaction?.receiveAsset?.details?.address || '',\n  );\n}\n","export * from './send';\n","import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n} from '@reduxjs/toolkit';\nimport BigNumber from 'bignumber.js';\nimport { addHexPrefix, zeroAddress } from 'ethereumjs-util';\nimport { cloneDeep, debounce } from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  TransactionEnvelopeType,\n  TransactionType,\n} from '@metamask/transaction-controller';\nimport { ethErrors } from 'eth-rpc-errors';\nimport {\n  decimalToHex,\n  hexToDecimal,\n} from '../../../shared/modules/conversion.utils';\nimport { GasEstimateTypes, GAS_LIMITS } from '../../../shared/constants/gas';\nimport {\n  CONTRACT_ADDRESS_ERROR,\n  FLOAT_TOKENS_ERROR,\n  INSUFFICIENT_FUNDS_ERROR,\n  INSUFFICIENT_FUNDS_FOR_GAS_ERROR,\n  INSUFFICIENT_TOKENS_ERROR,\n  NEGATIVE_OR_ZERO_AMOUNT_TOKENS_ERROR,\n  INVALID_RECIPIENT_ADDRESS_ERROR,\n  KNOWN_RECIPIENT_ADDRESS_WARNING,\n  RECIPIENT_TYPES,\n  SWAPS_NO_QUOTES,\n  SWAPS_QUOTES_ERROR,\n} from '../../pages/confirmations/send/send.constants';\n\nimport {\n  isBalanceSufficient,\n  isERC1155BalanceSufficient,\n  isTokenBalanceSufficient,\n} from '../../pages/confirmations/send/send.utils';\nimport {\n  getAdvancedInlineGasShown,\n  getCurrentChainId,\n  getGasPriceInHexWei,\n  getIsMainnet,\n  getTargetAccount,\n  getIsNonStandardEthChain,\n  checkNetworkAndAccountSupports1559,\n  getUseTokenDetection,\n  getTokenList,\n  getAddressBookEntryOrAccountName,\n  getEnsResolutionByAddress,\n  getSelectedAccount,\n  getSelectedInternalAccount,\n  getSelectedInternalAccountWithBalance,\n  getUnapprovedTransactions,\n  getSelectedNetworkClientId,\n  getIsSwapsChain,\n  getUseExternalServices,\n} from '../../selectors';\nimport {\n  displayWarning,\n  hideLoadingIndication,\n  showLoadingIndication,\n  updateEditableParams,\n  updateTransactionGasFees,\n  addPollingTokenToAppState,\n  removePollingTokenFromAppState,\n  isNftOwner,\n  getTokenStandardAndDetails,\n  showModal,\n  addTransactionAndRouteToConfirmationPage,\n  updateTransactionSendFlowHistory,\n  getCurrentNetworkEIP1559Compatibility,\n  getLayer1GasFee,\n  gasFeeStopPollingByPollingToken,\n  gasFeeStartPollingByNetworkClientId,\n  getBalancesInSingleCall,\n  estimateGas,\n  addTransactionAndWaitForPublish,\n  setDefaultHomeActiveTabName,\n  rejectPendingApproval,\n} from '../../store/actions';\nimport { setCustomGasLimit } from '../gas/gas.duck';\nimport {\n  QR_CODE_DETECTED,\n  SELECTED_ACCOUNT_CHANGED,\n  ACCOUNT_CHANGED,\n  ADDRESS_BOOK_UPDATED,\n  GAS_FEE_ESTIMATES_UPDATED,\n  CLEAR_SWAP_AND_SEND_STATE,\n} from '../../store/actionConstants';\nimport {\n  getTokenAddressParam,\n  getTokenMetadata,\n  getTokenIdParam,\n} from '../../helpers/utils/token-util';\nimport {\n  checkExistingAddresses,\n  isOriginContractAddress,\n} from '../../helpers/utils/util';\nimport {\n  getGasEstimateType,\n  getNativeCurrency,\n  getProviderConfig,\n  getTokens,\n} from '../metamask/metamask';\n\nimport { resetDomainResolution } from '../domains';\nimport {\n  isBurnAddress,\n  isPossibleAddress,\n  isValidHexAddress,\n  toChecksumHexAddress,\n} from '../../../shared/modules/hexstring-utils';\nimport { isSmartContractAddress } from '../../helpers/utils/transactions.util';\n\nimport {\n  AssetType,\n  TokenStandard,\n} from '../../../shared/constants/transaction';\nimport { INVALID_ASSET_TYPE } from '../../helpers/constants/error-keys';\nimport { SECOND } from '../../../shared/constants/time';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\nimport { parseStandardTokenTransactionData } from '../../../shared/modules/transaction.utils';\nimport { getTokenValueParam } from '../../../shared/lib/metamask-controller-utils';\nimport {\n  calcGasTotal,\n  calcTokenAmount,\n} from '../../../shared/lib/transactions-controller-utils';\nimport { Numeric } from '../../../shared/modules/Numeric';\nimport { EtherDenomination } from '../../../shared/constants/common';\nimport { SWAPS_CHAINID_DEFAULT_TOKEN_MAP } from '../../../shared/constants/swaps';\nimport { setMaxValueMode } from '../confirm-transaction/confirm-transaction.duck';\n// used for typing\n// eslint-disable-next-line no-unused-vars\nimport {\n  CONFIRM_TRANSACTION_ROUTE,\n  DEFAULT_ROUTE,\n} from '../../helpers/constants/routes';\nimport { fetchBlockedTokens } from '../../pages/swaps/swaps.util';\nimport {\n  getDisabledSwapAndSendNetworksFromAPI,\n  getSwapAndSendQuotes,\n} from './swap-and-send-utils';\nimport {\n  estimateGasLimitForSend,\n  generateTransactionParams,\n  getRoundedGasPrice,\n  calculateBestQuote,\n  addAdjustedReturnToQuotes,\n  getIsDraftSwapAndSend,\n} from './helpers';\n\nconst RECENT_REQUEST_ERROR =\n  'This has been replaced with a more recent request';\nconst FETCH_DELAY = SECOND;\n\n// typedef import statements\n/**\n * @typedef {(\n *  import('immer/dist/internal').WritableDraft<SendState>\n * )} SendStateDraft\n * @typedef {(\n *  import( '../../helpers/constants/common').TokenStandardStrings\n * )} TokenStandardStrings\n * @typedef {(\n *  import( '../../../shared/constants/tokens').TokenDetails\n * )} TokenDetails\n * @typedef {(\n *  import('@metamask/gas-fee-controller').LegacyGasPriceEstimate\n * )} LegacyGasPriceEstimate\n * @typedef {(\n *  import('@metamask/gas-fee-controller').GasFeeEstimates\n * )} GasFeeEstimates\n * @typedef {(\n *  import('@metamask/gas-fee-controller').EthGasPriceEstimate\n * )} EthGasPriceEstimate\n * @typedef {(\n *  import('@metamask/gas-fee-controller').GasEstimateType\n * )} GasEstimateType\n * @typedef {(\n *  import('redux').AnyAction\n * )} AnyAction\n */\n\n/**\n * @template R - Return type of the async function\n * @typedef {(\n *  import('redux-thunk').ThunkAction<R, MetaMaskState, unknown, AnyAction>\n * )} ThunkAction<R>\n */\n\n/**\n * This type will take a typical constant string mapped object and turn it into\n * a union type of the values.\n *\n * @template O - The object to make strings out of\n * @typedef {O[keyof O]} MapValuesToUnion<O>\n */\n\n/**\n * @typedef {object} SendStateStages\n * @property {'ADD_RECIPIENT'} ADD_RECIPIENT - The user is selecting which\n *  address to send an asset to.\n * @property {'DRAFT'} DRAFT - The send form is shown for a transaction yet to\n *  be sent to the Transaction Controller.\n * @property {'EDIT'} EDIT - The send form is shown for a transaction already\n *  submitted to the Transaction Controller but not yet confirmed. This happens\n *  when a confirmation is shown for a transaction and the 'edit' button in the\n *  header is clicked.\n * @property {'INACTIVE'} INACTIVE - The send state is idle, and hasn't yet\n *  fetched required data for gasPrice and gasLimit estimations, etc.\n */\n\n/**\n * The Stages that the send slice can be in\n *\n * @type {SendStateStages}\n */\nexport const SEND_STAGES = {\n  ADD_RECIPIENT: 'ADD_RECIPIENT',\n  DRAFT: 'DRAFT',\n  EDIT: 'EDIT',\n  INACTIVE: 'INACTIVE',\n};\n\n/**\n * @typedef {object} DraftTxStatus\n * @property {'INVALID'} INVALID - The transaction is invalid and cannot be\n *  submitted. There are a number of cases that would result in an invalid\n *  send state:\n *  1. The recipient is not yet defined\n *  2. The amount + gasTotal is greater than the user's balance when sending\n *     native currency\n *  3. The gasTotal is greater than the user's *native* balance\n *  4. The amount of sent asset is greater than the user's *asset* balance\n *  5. Gas price estimates failed to load entirely\n *  6. The gasLimit is less than 21000 (0x5208)\n * @property {'VALID'} VALID - The transaction is valid and can be submitted.\n */\n\n/**\n * The status of the send slice\n *\n * @type {DraftTxStatus}\n */\nexport const SEND_STATUSES = {\n  INVALID: 'INVALID',\n  VALID: 'VALID',\n};\n\n/**\n * @typedef {object} SendStateGasModes\n * @property {'BASIC'} BASIC - Shows the basic estimate slow/avg/fast buttons\n *  when on mainnet and the metaswaps API request is successful.\n * @property {'CUSTOM'} CUSTOM - Shows GasFeeDisplay component that is a read\n *  only display of the values the user has set in the advanced gas modal\n *  (stored in the gas duck under the customData key).\n * @property {'INLINE'} INLINE - Shows inline gasLimit/gasPrice fields when on\n *  any other network or metaswaps API fails and we use eth_gasPrice.\n */\n\n/**\n * Controls what is displayed in the send-gas-row component.\n *\n * @type {SendStateGasModes}\n */\nexport const GAS_INPUT_MODES = {\n  BASIC: 'BASIC',\n  CUSTOM: 'CUSTOM',\n  INLINE: 'INLINE',\n};\n\n/**\n * @typedef {object} SendStateAmountModes\n * @property {'INPUT'} INPUT - the user provides the amount by typing in the\n *  field.\n * @property {'MAX'} MAX - The user selects the MAX button and amount is\n *  calculated based on balance - (amount + gasTotal).\n */\n\n/**\n * The modes that the amount field can be set by\n *\n * @type {SendStateAmountModes}\n */\nexport const AMOUNT_MODES = {\n  INPUT: 'INPUT',\n  MAX: 'MAX',\n};\n\n/**\n * @typedef {object} SendStateRecipientModes\n * @property {'CONTACT_LIST'} CONTACT_LIST - The user is displayed a list of\n *  their contacts and addresses they have recently send to.\n * @property {'MY_ACCOUNTS'} MY_ACCOUNTS - the user is displayed a list of\n *  their own accounts to send to.\n */\n\n/**\n * The type of recipient list that is displayed to user\n *\n * @type {SendStateRecipientModes}\n */\nexport const RECIPIENT_SEARCH_MODES = {\n  CONTACT_LIST: 'CONTACT_LIST',\n  MY_ACCOUNTS: 'MY_ACCOUNTS',\n};\n\n/**\n * @typedef {object} Account\n * @property {string} address - The hex address of the account.\n * @property {string} balance - Hex string representing the native asset\n *  balance of the account the transaction will be sent from.\n */\n\n/**\n * @typedef {object} Amount\n * @property {string} [error] - Error to display for the amount field.\n * @property {string} value - A hex string representing the amount of the\n *  selected currency to send.\n */\n\n/**\n * @typedef {object} Asset\n * @property {string} balance - A hex string representing the balance\n *  that the user holds of the asset that they are attempting to send.\n * @property {TokenDetails} [details] - An object that describes the\n *  selected asset in the case that the user is sending a token or collectibe.\n *  Will be null when asset.type is 'NATIVE'.\n * @property {string} [error] - Error to display when there is an issue\n *  with the asset.\n * @property {AssetType} type - The type of asset that the user\n *  is attempting to send. Defaults to 'NATIVE' which represents the native\n *  asset of the chain. Can also be 'TOKEN' or 'NFT'.\n */\n\n/**\n * @typedef {object} GasFees\n * @property {string} [error] - error to display for gas fields.\n * @property {string} gasLimit - maximum gas needed for tx.\n * @property {string} gasPrice - price in wei to pay per gas.\n * @property {string} gasTotal - maximum total price in wei to pay.\n * @property {string} maxFeePerGas - Maximum price in wei to pay per gas.\n * @property {string} maxPriorityFeePerGas - Maximum priority fee in wei to pay\n *  per gas.\n */\n\n/**\n * An object that describes the intended recipient of a transaction.\n *\n * @typedef {object} Recipient\n * @property {string} address - The fully qualified address of the recipient.\n *  This is set after the recipient.userInput is validated, the userInput field\n *  is quickly updated to avoid delay between keystrokes and seeing the input\n *  field updated. After a debounce the address typed is validated and then the\n *  address field is updated. The address field is also set when the user\n *  selects a contact or account from the list, or an ENS resolution when\n *  typing ENS names.\n * @property {string} [error] - Error to display on the address field.\n * @property {string} nickname - The nickname that the user has added to their\n *  address book for the recipient.address.\n * @property {string} [warning] - Warning to display on the address field.\n */\n\n/**\n * @typedef {object} DraftTransaction\n * @property {Amount} amount - An object containing information about the\n *  amount of currency to send.\n * @property {Asset} sendAsset - An object that describes the asset that the user\n *  has selected to send.\n * @property {Account} [fromAccount] - The send flow is usually only relative to\n *  the currently selected account. When editing a transaction, however, the\n *  account may differ. In that case, the details of that account will be\n *  stored in this object within the draftTransaction.\n * @property {GasFees} gas - Details about the current gas settings\n * @property {Array<{event: string, timestamp: number}>} history - An array of\n *  entries that describe the user's journey through the send flow. This is\n *  sent to the controller for attaching to state logs for troubleshooting and\n *  support.\n * @property {string} [id] - If the transaction has already been added to the\n *  TransactionController this field will be populated with its id from the\n *  TransactionController state. This is required to be able to update the\n *  transaction in the controller.\n * @property {boolean} isSwapQuoteLoading – is a swap quote being fetched\n * @property {Quote[]} [quotes] – quotes for swaps\n * @property {Asset} receiveAsset - An object that describes the asset that the user\n *  has selected for the recipient to receive.\n * @property {Recipient} recipient - An object that describes the intended\n *  recipient of the transaction.\n * @property {string} [swapQuotesError] - error message for swap quotes\n * @property {number} [timeToFetchQuotes] time to fetch most recent swap+send quotes\n * @property {MapValuesToUnion<DraftTxStatus>} status - Describes the\n *  validity of the draft transaction, which will be either 'VALID' or\n *  'INVALID', depending on our ability to generate a valid txParams object for\n *  submission.\n * @property {string} transactionType - Determines type of transaction being\n *  sent, defaulted to 0x0 (legacy).\n * @property {string} [userInputHexData] - When a user has enabled custom hex\n *  data field in advanced options, they can supply data to the field which is\n *  stored under this key.\n */\n\n/**\n * @type {DraftTransaction}\n */\nexport const draftTransactionInitialState = {\n  amount: {\n    error: null,\n    value: '0x0',\n  },\n  sendAsset: {\n    balance: '0x0',\n    details: null,\n    error: null,\n    type: AssetType.native,\n  },\n  receiveAsset: {\n    balance: '0x0',\n    details: null,\n    error: null,\n    type: AssetType.native,\n  },\n  fromAccount: null,\n  gas: {\n    error: null,\n    gasLimit: '0x0',\n    gasPrice: '0x0',\n    gasTotal: '0x0',\n    maxFeePerGas: '0x0',\n    maxPriorityFeePerGas: '0x0',\n    wasManuallyEdited: false,\n  },\n  history: [],\n  id: null,\n  recipient: {\n    address: '',\n    error: null,\n    nickname: '',\n    warning: null,\n    type: '',\n    recipientWarningAcknowledged: false,\n  },\n  status: SEND_STATUSES.VALID,\n  transactionType: TransactionEnvelopeType.legacy,\n  userInputHexData: null,\n  isSwapQuoteLoading: false,\n  swapQuotesError: null,\n  swapQuotesLatestRequestTimestamp: null,\n  timeToFetchQuotes: null,\n  quotes: null,\n};\n\n/**\n * Describes the state tree of the send slice\n *\n * @typedef {object} SendState\n * @property {MapValuesToUnion<SendStateAmountModes>} amountMode - Describe\n *  whether the user has manually input an amount or if they have selected max\n *  to send the maximum amount of the selected currency.\n * @property {string} currentTransactionUUID - The UUID of the transaction\n *  currently being modified by the send flow. This UUID is generated upon\n *  initialization of the send flow, any previous UUIDs are discarded at\n *  clean up AND during initialization. When a transaction is edited a new UUID\n *  is generated for it and the state of that transaction is copied into a new\n *  entry in the draftTransactions object.\n * @property {string[]} disabledSwapAndSendNetworks - list of networks that are disabled for swap and send\n * @property {{[key: string]: DraftTransaction}} draftTransactions - An object keyed\n *  by UUID with draftTransactions as the values.\n * @property {boolean} eip1559support - tracks whether the current network\n *  supports EIP 1559 transactions.\n * @property {boolean} gasEstimateIsLoading - Indicates whether the gas\n *  estimate is loading.\n * @property {string} [gasEstimatePollToken] - String token identifying a\n *  listener for polling on the gasFeeController\n * @property {boolean} gasIsSetInModal - true if the user set custom gas in the\n *  custom gas modal\n * @property {string} gasLimitMinimum - minimum supported gasLimit.\n * @property {string} gasPriceEstimate - Expected price in wei necessary to\n *  pay per gas used for a transaction to be included in a reasonable timeframe.\n *  Comes from the GasFeeController.\n * @property {string} gasTotalForLayer1 -  Layer 1 gas fee total on multi-layer\n *  fee networks\n * @property {object} prevSwapAndSendInput - form inputs for the last submitted swap and send transaction\n * @property {string} recipientInput - The user input of the recipient\n *  which is updated quickly to avoid delays in the UI reflecting manual entry\n *  of addresses.\n * @property {MapValuesToUnion<SendStateRecipientModes>} recipientMode -\n *  Describes which list of recipients the user is shown on the add recipient\n *  screen. When this key is set to 'MY_ACCOUNTS' the user is shown the list of\n *  accounts they own. When it is 'CONTACT_LIST' the user is shown the list of\n *  contacts they have saved in MetaMask and any addresses they have recently\n *  sent to.\n * @property {Account} selectedAccount - The currently selected account in\n *  MetaMask. Native balance and address will be pulled from this account if a\n *  fromAccount is not specified in the draftTransaction object. During an edit\n *  the fromAccount is specified.\n * @property {MapValuesToUnion<SendStateStages>} stage - The stage of the\n *  send flow that the user has progressed to. Defaults to 'INACTIVE' which\n *  results in the send screen not being shown.\n * @property {string[]} swapsBlockedTokens - list of tokens that are blocked by the swaps-api\n */\n\n/**\n * @type {SendState}\n */\nexport const initialState = {\n  amountMode: AMOUNT_MODES.INPUT,\n  currentTransactionUUID: null,\n  disabledSwapAndSendNetworks: [],\n  draftTransactions: {},\n  eip1559support: false,\n  gasEstimateIsLoading: true,\n  gasEstimatePollToken: null,\n  gasIsSetInModal: false,\n  gasPriceEstimate: '0x0',\n  gasLimitMinimum: GAS_LIMITS.SIMPLE,\n  gasTotalForLayer1: null,\n  prevSwapAndSendInput: null,\n  recipientMode: RECIPIENT_SEARCH_MODES.CONTACT_LIST,\n  recipientInput: '',\n  selectedAccount: {\n    address: null,\n    balance: '0x0',\n  },\n  stage: SEND_STAGES.INACTIVE,\n  swapsBlockedTokens: [],\n};\n\n/**\n * TODO: We really need to start creating the metamask state type, and the\n * entire state tree of redux. Would be *extremely* valuable in future\n * typescript conversions. The metamask key is typed as an object on purpose\n * here because I cannot go so far in this work as to type that entire object.\n *\n * @typedef {object} MetaMaskState\n * @property {SendState} send - The state of the send flow.\n * @property {object} metamask - The state of the metamask store.\n */\n\nconst name = 'send';\n\n// After modification of specific fields in specific circumstances we must\n// recompute the gasLimit estimate to be as accurate as possible. the cases\n// that necessitate this logic are listed below:\n// 1. when the amount sent changes when sending a token due to the amount being\n//    part of the hex encoded data property of the transaction.\n// 2. when updating the data property while sending NATIVE currency (ex: ETH)\n//    because the data parameter defines function calls that the EVM will have\n//    to execute which is where a large chunk of gas is potentially consumed.\n// 3. when the recipient changes while sending a token due to the recipient's\n//    address being included in the hex encoded data property of the\n//    transaction\n// 4. when the asset being sent changes due to the contract address and details\n//    of the token being included in the hex encoded data property of the\n//    transaction. If switching to NATIVE currency (ex: ETH), the gasLimit will\n//    change due to hex data being removed (unless supplied by user).\n// This method computes the gasLimit estimate which is written to state in an\n// action handler in extraReducers.\nexport const computeEstimatedGasLimit = createAsyncThunk(\n  'send/computeEstimatedGasLimit',\n  async (_, thunkApi) => {\n    const state = thunkApi.getState();\n    const { send, metamask } = state;\n    const draftTransaction =\n      send.draftTransactions[send.currentTransactionUUID];\n    const unapprovedTxs = getUnapprovedTransactions(state);\n    const transaction = unapprovedTxs[draftTransaction.id];\n    const isNonStandardEthChain = getIsNonStandardEthChain(state);\n    const chainId = getCurrentChainId(state);\n    const selectedAccount = getSelectedInternalAccountWithBalance(state);\n\n    const gasTotalForLayer1 = await thunkApi.dispatch(\n      getLayer1GasFee({\n        transactionParams: {\n          gasPrice: draftTransaction.gas.gasPrice,\n          gas: draftTransaction.gas.gasLimit,\n          to: draftTransaction.recipient.address?.toLowerCase(),\n          value:\n            send.amountMode === AMOUNT_MODES.MAX\n              ? send.selectedAccount.balance\n              : draftTransaction.amount.value,\n          from: send.selectedAccount.address,\n          data: draftTransaction.userInputHexData,\n          type: '0x0',\n        },\n        chainId,\n      }),\n    );\n\n    if (\n      send.stage !== SEND_STAGES.EDIT ||\n      !transaction.dappSuggestedGasFees?.gas ||\n      !transaction.userEditedGasLimit\n    ) {\n      const gasLimit = await estimateGasLimitForSend({\n        gasPrice: draftTransaction.gas.gasPrice,\n        blockGasLimit: metamask.currentBlockGasLimit,\n        selectedAddress: selectedAccount.address,\n        sendToken: draftTransaction.sendAsset.details,\n        to: draftTransaction.recipient.address?.toLowerCase(),\n        value: draftTransaction.amount.value,\n        data: draftTransaction.userInputHexData,\n        isNonStandardEthChain,\n        chainId,\n        gasLimit: draftTransaction.gas.gasLimit,\n      });\n      await thunkApi.dispatch(setCustomGasLimit(gasLimit));\n      return {\n        gasLimit,\n        gasTotalForLayer1,\n      };\n    }\n    return null;\n  },\n);\n\n/**\n * @typedef {object} Asset\n * @property {AssetType} type - The type of asset that the user\n *  is attempting to send. Defaults to 'NATIVE' which represents the native\n *  asset of the chain. Can also be 'TOKEN' or 'NFT'.\n * @property {string} balance - A hex string representing the balance\n *  that the user holds of the asset that they are attempting to send.\n * @property {TokenDetails} [details] - An object that describes the\n *  selected asset in the case that the user is sending a token or collectibe.\n *  Will be null when asset.type is 'NATIVE'.\n * @property {string} [error] - Error to display when there is an issue\n *  with the asset.\n */\n\n/**\n * Responsible for initializing required state for the send slice.\n * This method is dispatched from the send page in the componentDidMount\n * method. It is also dispatched anytime the network changes to ensure that\n * the slice remains valid with changing token and account balances. To do so\n * it keys into state to get necessary values and computes a starting point for\n * the send slice. It returns the values that might change from this action and\n * those values are written to the slice in the `initializeSendState.fulfilled`\n * action handler.\n *\n * @type {import('@reduxjs/toolkit').AsyncThunk<any, { chainHasChanged: boolean }, {}>}\n */\nexport const initializeSendState = createAsyncThunk(\n  'send/initializeSendState',\n  async ({ chainHasChanged = false } = {}, thunkApi) => {\n    /**\n     * @typedef {object} ReduxState\n     * @property {object} metamask - Half baked type for the MetaMask object\n     * @property {SendState} send - the send state\n     */\n\n    /**\n     * @type {ReduxState}\n     */\n    const state = thunkApi.getState();\n    const isNonStandardEthChain = getIsNonStandardEthChain(state);\n    const selectedNetworkClientId = getSelectedNetworkClientId(state);\n    const chainId = getCurrentChainId(state);\n    let eip1559support = checkNetworkAndAccountSupports1559(state);\n    if (eip1559support === undefined) {\n      eip1559support = await getCurrentNetworkEIP1559Compatibility();\n    }\n    const account = getSelectedAccount(state);\n    const { send: sendState, metamask } = state;\n    const draftTransaction =\n      sendState.draftTransactions[sendState.currentTransactionUUID];\n\n    // If the draft transaction is not present, then this action has been\n    // dispatched out of sync with the intended flow. This is not always a bug.\n    // For instance, in the actions.js file we dispatch this action anytime the\n    // chain changes.\n    if (!draftTransaction) {\n      return thunkApi.rejectWithValue(\n        'draftTransaction not found, possibly not on send flow',\n      );\n    }\n\n    // Default gasPrice to 1 gwei if all estimation fails, this is only used\n    // for gasLimit estimation and won't be set directly in state. Instead, we\n    // will return the gasFeeEstimates and gasEstimateType so that the reducer\n    // can set the appropriate gas fees in state.\n    let gasPrice =\n      sendState.stage === SEND_STAGES.EDIT\n        ? draftTransaction.gas.gasPrice\n        : '0x1';\n    let gasEstimatePollToken = null;\n\n    // Instruct the background process that polling for gas prices should begin\n    gasEstimatePollToken = await gasFeeStartPollingByNetworkClientId(\n      selectedNetworkClientId,\n    );\n\n    addPollingTokenToAppState(gasEstimatePollToken);\n\n    const {\n      metamask: { gasFeeEstimates, gasEstimateType },\n    } = thunkApi.getState();\n\n    if (sendState.stage !== SEND_STAGES.EDIT) {\n      // Because we are only interested in getting a gasLimit estimation we only\n      // need to worry about gasPrice. So we use maxFeePerGas as gasPrice if we\n      // have a fee market estimation.\n      if (gasEstimateType === GasEstimateTypes.legacy) {\n        gasPrice = getGasPriceInHexWei(gasFeeEstimates.medium);\n      } else if (gasEstimateType === GasEstimateTypes.ethGasPrice) {\n        gasPrice = getRoundedGasPrice(gasFeeEstimates.gasPrice);\n      } else if (gasEstimateType === GasEstimateTypes.feeMarket) {\n        gasPrice = getGasPriceInHexWei(\n          gasFeeEstimates.medium.suggestedMaxFeePerGas,\n        );\n      } else {\n        gasPrice = gasFeeEstimates.gasPrice\n          ? getRoundedGasPrice(gasFeeEstimates.gasPrice)\n          : '0x0';\n      }\n    }\n\n    // Set a basic gasLimit in the event that other estimation fails\n    let { gasLimit } = draftTransaction.gas;\n    if (\n      gasEstimateType !== GasEstimateTypes.none &&\n      sendState.stage !== SEND_STAGES.EDIT &&\n      draftTransaction.recipient.address\n    ) {\n      gasLimit =\n        draftTransaction.sendAsset.type === AssetType.token ||\n        draftTransaction.sendAsset.type === AssetType.NFT\n          ? GAS_LIMITS.BASE_TOKEN_ESTIMATE\n          : GAS_LIMITS.SIMPLE;\n      // Run our estimateGasLimit logic to get a more accurate estimation of\n      // required gas. If this value isn't nullish, set it as the new gasLimit\n      const estimatedGasLimit = await estimateGasLimitForSend({\n        gasPrice,\n        blockGasLimit: metamask.currentBlockGasLimit,\n        selectedAddress: getSender(state),\n        sendToken: draftTransaction.sendAsset.details,\n        to: draftTransaction.recipient.address.toLowerCase(),\n        value: draftTransaction.amount.value,\n        data: draftTransaction.userInputHexData,\n        isNonStandardEthChain,\n        chainId,\n      });\n      gasLimit = estimatedGasLimit || gasLimit;\n    }\n\n    // We have to keep the gas slice in sync with the send slice state\n    // so that it'll be initialized correctly if the gas modal is opened.\n    await thunkApi.dispatch(setCustomGasLimit(gasLimit));\n\n    // There may be a case where the send has been canceled by the user while\n    // the gas estimate is being computed. So we check again to make sure that\n    // a currentTransactionUUID exists and matches the previous tx.\n    const newState = thunkApi.getState();\n    if (\n      newState.send.currentTransactionUUID !== sendState.currentTransactionUUID\n    ) {\n      return thunkApi.rejectWithValue(\n        `draftTransaction changed during initialization.\n        A new initializeSendState action must be dispatched.`,\n      );\n    }\n\n    const swapsBlockedTokens =\n      getIsSwapsChain(state) && getUseExternalServices(state)\n        ? (await fetchBlockedTokens(chainId)).map((t) => t.toLowerCase())\n        : [];\n\n    const disabledSwapAndSendNetworks =\n      await getDisabledSwapAndSendNetworksFromAPI();\n\n    return {\n      account,\n      chainId: getCurrentChainId(state),\n      tokens: getTokens(state),\n      chainHasChanged,\n      disabledSwapAndSendNetworks,\n      gasFeeEstimates,\n      gasEstimateType,\n      gasLimit,\n      gasTotal: addHexPrefix(calcGasTotal(gasLimit, gasPrice)),\n      gasEstimatePollToken,\n      eip1559support,\n      useTokenDetection: getUseTokenDetection(state),\n      tokenAddressList: Object.keys(getTokenList(state)),\n      swapsBlockedTokens,\n    };\n  },\n);\n\n// variable tracking the latestFetchTime\nlet latestFetchTime;\n\n/**\n * Fetch the swap and send transaction if the source and destination token do not match\n *\n * @param {string} requestTimestamp - the timestamp of the request\n * @returns {ThunkAction<void>}\n */\nconst fetchSwapAndSendQuotes = createAsyncThunk(\n  'send/fetchSwapAndSendQuotes',\n  async ({ requestTimestamp }, thunkApi) => {\n    const state = thunkApi.getState();\n    const sendState = state[name];\n\n    const chainId = getCurrentChainId(state);\n\n    const draftTransaction =\n      sendState.draftTransactions[sendState.currentTransactionUUID];\n\n    const sender = getSender(state);\n\n    const sourceAmount = hexToDecimal(draftTransaction.amount.value);\n\n    // return early if form isn't filled out\n    if (\n      !Number(sourceAmount) ||\n      !draftTransaction.sendAsset ||\n      !draftTransaction.receiveAsset ||\n      !draftTransaction.recipient.address\n    ) {\n      return { quotes: null, requestTimestamp };\n    }\n\n    let quotes = await new Promise((resolve, reject) =>\n      setTimeout(async () => {\n        if (requestTimestamp !== latestFetchTime) {\n          reject(new Error(RECENT_REQUEST_ERROR));\n        }\n\n        getSwapAndSendQuotes({\n          chainId,\n          sourceAmount,\n          sourceToken:\n            draftTransaction.sendAsset?.details?.address ||\n            SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].address,\n          destinationToken:\n            draftTransaction.receiveAsset?.details?.address ||\n            SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].address,\n          sender,\n          recipient: draftTransaction.recipient.address,\n        })\n          .then((response) => resolve(response))\n          .catch(() => reject(SWAPS_QUOTES_ERROR));\n      }, FETCH_DELAY),\n    );\n\n    for (const quote of quotes) {\n      if (quote.approvalNeeded) {\n        quote.approvalNeeded.gas = addHexPrefix(\n          await estimateGas(quote.approvalNeeded),\n        );\n      }\n    }\n\n    quotes = await addAdjustedReturnToQuotes(\n      quotes,\n      state,\n      draftTransaction.receiveAsset?.details,\n    );\n\n    if (!quotes?.length) {\n      throw new Error(SWAPS_NO_QUOTES);\n    }\n\n    return { quotes, requestTimestamp };\n  },\n);\n\n// Action Payload Typedefs\n/**\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<string>\n * )} SimpleStringPayload\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<MapValuesToUnion<SendStateAmountModes>>\n * )} SendStateAmountModePayload\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<DraftTransaction['asset']>\n * )} UpdateAssetPayload\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<Partial<\n *   Pick<DraftTransaction['recipient'], 'address' | 'nickname'>>\n *  >\n * )} updateRecipientPayload\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<SendState['recipientMode']>\n * )} UpdateRecipientModePayload\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<SendState['prevSwapAndSendInput']>\n * )} PrevSwapAndSendPayload\n */\n\n/**\n * @typedef {object} GasFeeUpdateParams\n * @property {TransactionType} transactionType - The transaction type\n * @property {string} [maxFeePerGas] - The maximum amount in hex wei to pay\n *  per gas on a FEE_MARKET transaction.\n * @property {string} [maxPriorityFeePerGas] - The maximum amount in hex\n *  wei to pay per gas as an incentive to miners on a FEE_MARKET\n *  transaction.\n * @property {string} [gasPrice] - The amount in hex wei to pay per gas on\n *  a LEGACY transaction.\n * @property {boolean} [isAutomaticUpdate] - true if the update is the\n *  result of a gas estimate update from the controller.\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<GasFeeUpdateParams>\n * )} GasFeeUpdatePayload\n */\n\n/**\n * @typedef {object} GasEstimateUpdateParams\n * @property {GasEstimateType} gasEstimateType - The type of gas estimation\n *  provided by the controller.\n * @property {(\n *  EthGasPriceEstimate | LegacyGasPriceEstimate | GasFeeEstimates\n * )} gasFeeEstimates - The gas fee estimates provided by the controller.\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<GasEstimateUpdateParams>\n * )} GasEstimateUpdatePayload\n */\n\n/**\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<DraftTransaction['asset']>\n * )} UpdateAssetPayload\n * @typedef {(\n *  import('@reduxjs/toolkit').PayloadAction<DraftTransaction>\n * )} DraftTransactionPayload\n */\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    /**\n     * Adds a new draft transaction to state, first generating a new UUID for\n     * the transaction and setting that as the currentTransactionUUID. If the\n     * draft has an id property set, the stage is set to EDIT.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {DraftTransactionPayload} action - An action with payload that is\n     *  a new draft transaction that will be added to state.\n     * @returns {void}\n     */\n    addNewDraft: (state, action) => {\n      state.currentTransactionUUID = uuidv4();\n      state.draftTransactions[state.currentTransactionUUID] = action.payload;\n      if (action.payload.id) {\n        state.stage = SEND_STAGES.EDIT;\n      } else {\n        state.stage = SEND_STAGES.ADD_RECIPIENT;\n      }\n    },\n    /**\n     * Adds an entry, with timestamp, to the draftTransaction history.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {SimpleStringPayload} action - An action with payload that is\n     *  a string to be added to the history of the draftTransaction\n     * @returns {void}\n     */\n    addHistoryEntry: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      if (draftTransaction) {\n        draftTransaction.history.push({\n          entry: action.payload,\n          timestamp: Date.now(),\n        });\n      }\n    },\n    /**\n     * gasTotal is computed based on gasPrice and gasLimit and set in state\n     * recomputes the maximum amount if the current amount mode is 'MAX' and\n     * sending the native token. ERC20 assets max amount is unaffected by\n     * gasTotal so does not need to be recomputed. Finally, validates the gas\n     * field and send state.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    calculateGasTotal: (state) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n\n      if (!draftTransaction) {\n        return;\n      }\n\n      // use maxFeePerGas as the multiplier if working with a FEE_MARKET transaction\n      // otherwise use gasPrice\n      if (\n        draftTransaction.transactionType === TransactionEnvelopeType.feeMarket\n      ) {\n        draftTransaction.gas.gasTotal = addHexPrefix(\n          calcGasTotal(\n            draftTransaction.gas.gasLimit,\n            draftTransaction.gas.maxFeePerGas,\n          ),\n        );\n      } else {\n        draftTransaction.gas.gasTotal = addHexPrefix(\n          calcGasTotal(\n            draftTransaction.gas.gasLimit,\n            draftTransaction.gas.gasPrice,\n          ),\n        );\n      }\n      if (\n        state.amountMode === AMOUNT_MODES.MAX &&\n        draftTransaction.sendAsset.type === AssetType.native\n      ) {\n        slice.caseReducers.updateAmountToMax(state);\n      }\n      slice.caseReducers.validateAmountField(state);\n      slice.caseReducers.validateGasField(state);\n      // validate send state\n      slice.caseReducers.validateSendState(state);\n    },\n    /**\n     * Clears all drafts from send state and drops the currentTransactionUUID.\n     * This is an important first step before adding a new draft transaction to\n     * avoid possible collision.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    clearPreviousDrafts: (state) => {\n      state.currentTransactionUUID = null;\n      state.draftTransactions = {};\n    },\n    /**\n     * Clears the send state by setting it to the initial value; preserves the previous swap and send input  object\n     *\n     * @param state - A writable draft of the send state to be\n     *  updated.\n     * @returns {SendState}\n     */\n    resetSendState: (state) => ({\n      ...initialState,\n      prevSwapAndSendInput: state.prevSwapAndSendInput,\n    }),\n    /**\n     * Sets the amount to the provided value and validates the field.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     * @param {PrevSwapAndSendPayload} action - An action with payload that is\n     */\n    setPrevSwapAndSend: (state, action) => {\n      state.prevSwapAndSendInput = action.payload;\n    },\n    /**\n     * sets the amount mode to the provided value as long as it is one of the\n     * supported modes (MAX|INPUT)\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {SendStateAmountModePayload} action - The amount mode\n     *  to set the state to.\n     * @returns {void}\n     */\n    updateAmountMode: (state, action) => {\n      if (Object.values(AMOUNT_MODES).includes(action.payload)) {\n        state.amountMode = action.payload;\n      }\n    },\n    /**\n     * computes the maximum amount of asset that can be sent and then calls\n     * the updateSendAmount action above with the computed value, which will\n     * revalidate the field and form.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    updateAmountToMax: (state) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      let amount = '0x0';\n      if (draftTransaction?.sendAsset.type === AssetType.token) {\n        const decimals = draftTransaction.sendAsset.details?.decimals ?? 0;\n\n        const multiplier = Math.pow(10, Number(decimals));\n\n        amount = new Numeric(draftTransaction.sendAsset.balance, 16)\n          .times(multiplier, 10)\n          .toString();\n      } else {\n        const _gasTotal = new Numeric(\n          draftTransaction.gas.gasTotal || '0x0',\n          16,\n        ).add(new Numeric(state.gasTotalForLayer1 ?? '0x0', 16));\n\n        amount = new Numeric(\n          draftTransaction.sendAsset.balance,\n          16,\n        ).lessThanOrEqualTo(_gasTotal)\n          ? '0'\n          : new Numeric(draftTransaction.sendAsset.balance, 16)\n              .minus(_gasTotal)\n              .toString();\n      }\n      slice.caseReducers.updateSendAmount(state, {\n        payload: amount,\n      });\n    },\n    /**\n     * Updates the currently selected asset\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {UpdateAssetPayload} action - The asset to set in the\n     *  draftTransaction.\n     * @returns {void}\n     */\n    updateAsset: (state, action) => {\n      const { asset, initialAssetSet, isReceived } = action.payload;\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n\n      const targetAsset =\n        draftTransaction[isReceived ? 'receiveAsset' : 'sendAsset'];\n\n      targetAsset.type = asset.type;\n      targetAsset.balance = asset.balance;\n      targetAsset.error = asset.error;\n\n      if (\n        targetAsset.type === AssetType.token ||\n        targetAsset.type === AssetType.NFT\n      ) {\n        targetAsset.details = asset.details;\n      } else {\n        // clear the details object when sending native currency\n        targetAsset.details = null;\n        if (draftTransaction.recipient.error === CONTRACT_ADDRESS_ERROR) {\n          // Errors related to sending tokens to their own contract address\n          // are no longer valid when sending native currency.\n          draftTransaction.recipient.error = null;\n        }\n      }\n\n      // if the send asset is set, match the receive asset\n      if (!isReceived) {\n        draftTransaction.receiveAsset = targetAsset;\n      }\n\n      // if amount mode is MAX update amount to max of new asset, otherwise set\n      // to zero. This will revalidate the send amount field.\n      if (state.amountMode === AMOUNT_MODES.MAX) {\n        // set amount mode back to input and change the send amount back to 0\n        state.amountMode = AMOUNT_MODES.INPUT;\n        slice.caseReducers.updateSendAmount(state, { payload: '0x0' });\n      } else if (initialAssetSet === false) {\n        if (isReceived) {\n          draftTransaction.quotes = draftTransactionInitialState.quotes;\n        } else {\n          slice.caseReducers.updateSendAmount(state, { payload: '0x0' });\n          slice.caseReducers.updateUserInputHexData(state, { payload: '' });\n        }\n      }\n      // validate send state\n      slice.caseReducers.validateSendState(state);\n    },\n    /**\n     * Sets the appropriate gas fees in state after receiving new estimates.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {GasEstimateUpdatePayload)} action - The gas fee update payload\n     * @returns {void}\n     */\n    updateGasFeeEstimates: (state, action) => {\n      const { gasFeeEstimates, gasEstimateType } = action.payload;\n      let gasPriceEstimate = '0x0';\n      switch (gasEstimateType) {\n        case GasEstimateTypes.feeMarket:\n          slice.caseReducers.updateGasFees(state, {\n            payload: {\n              transactionType: TransactionEnvelopeType.feeMarket,\n              maxFeePerGas: getGasPriceInHexWei(\n                gasFeeEstimates.medium.suggestedMaxFeePerGas,\n              ),\n              maxPriorityFeePerGas: getGasPriceInHexWei(\n                gasFeeEstimates.medium.suggestedMaxPriorityFeePerGas,\n              ),\n            },\n          });\n          break;\n        case GasEstimateTypes.legacy:\n          gasPriceEstimate = getRoundedGasPrice(gasFeeEstimates.medium);\n          slice.caseReducers.updateGasFees(state, {\n            payload: {\n              gasPrice: gasPriceEstimate,\n              type: TransactionEnvelopeType.legacy,\n              isAutomaticUpdate: true,\n            },\n          });\n          break;\n        case GasEstimateTypes.ethGasPrice:\n          gasPriceEstimate = getRoundedGasPrice(gasFeeEstimates.gasPrice);\n          slice.caseReducers.updateGasFees(state, {\n            payload: {\n              gasPrice: getRoundedGasPrice(gasFeeEstimates.gasPrice),\n              type: TransactionEnvelopeType.legacy,\n              isAutomaticUpdate: true,\n            },\n          });\n          break;\n        case GasEstimateTypes.none:\n        default:\n          break;\n      }\n      // Record the latest gasPriceEstimate for future comparisons\n      state.gasPriceEstimate = addHexPrefix(gasPriceEstimate);\n    },\n    /**\n     * Sets the appropriate gas fees in state and determines and sets the\n     * appropriate transactionType based on gas fee fields received.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {GasFeeUpdatePayload} action - The gas fees to update with\n     * @returns {void}\n     */\n    updateGasFees: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      if (draftTransaction) {\n        if (\n          action.payload.transactionType === TransactionEnvelopeType.feeMarket\n        ) {\n          draftTransaction.gas.maxFeePerGas = addHexPrefix(\n            action.payload.maxFeePerGas,\n          );\n          draftTransaction.gas.maxPriorityFeePerGas = addHexPrefix(\n            action.payload.maxPriorityFeePerGas,\n          );\n          draftTransaction.transactionType = TransactionEnvelopeType.feeMarket;\n        } else {\n          if (action.payload.manuallyEdited) {\n            draftTransaction.gas.wasManuallyEdited = true;\n          }\n\n          // Update the gas price if it has not been manually edited,\n          // or if this current action is a manual edit.\n          if (\n            !draftTransaction.gas.wasManuallyEdited ||\n            action.payload.manuallyEdited\n          ) {\n            draftTransaction.gas.gasPrice = addHexPrefix(\n              action.payload.gasPrice,\n            );\n          }\n          draftTransaction.transactionType = TransactionEnvelopeType.legacy;\n        }\n        slice.caseReducers.calculateGasTotal(state);\n      }\n    },\n    /**\n     * sets the provided gasLimit in state and then recomputes the gasTotal.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {SimpleStringPayload} action - The\n     *  gasLimit in hex to set in state.\n     * @returns {void}\n     */\n    updateGasLimit: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      if (draftTransaction) {\n        draftTransaction.gas.gasLimit = addHexPrefix(action.payload);\n        slice.caseReducers.calculateGasTotal(state);\n      }\n    },\n    /**\n     * sets the layer 1 fees total (for a multi-layer fee network)\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {SimpleStringPayload} action - the\n     *  gasTotalForLayer1 to set in hex wei.\n     * @returns {void}\n     */\n    updateLayer1Fees: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      state.gasTotalForLayer1 = action.payload;\n      if (\n        state.amountMode === AMOUNT_MODES.MAX &&\n        draftTransaction?.sendAsset.type === AssetType.native\n      ) {\n        slice.caseReducers.updateAmountToMax(state);\n      }\n    },\n    /**\n     * Updates the recipient of the draftTransaction\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {updateRecipientPayload} action - The recipient to set in the\n     *  draftTransaction.\n     * @returns {void}\n     */\n    updateRecipient: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      draftTransaction.recipient.error = null;\n      state.recipientInput = '';\n      draftTransaction.recipient.address = action.payload.address ?? '';\n      draftTransaction.recipient.nickname = action.payload.nickname ?? '';\n\n      if (draftTransaction.recipient.address === '') {\n        // If address is null we are clearing the recipient and must return\n        // to the ADD_RECIPIENT stage.\n        state.stage = SEND_STAGES.ADD_RECIPIENT;\n      } else {\n        // if an address is provided and an id exists, we progress to the EDIT\n        // stage, otherwise we progress to the DRAFT stage. We also reset the\n        // search mode for recipient search.\n        state.stage =\n          draftTransaction.id === null ? SEND_STAGES.DRAFT : SEND_STAGES.EDIT;\n        state.recipientMode = RECIPIENT_SEARCH_MODES.CONTACT_LIST;\n      }\n\n      // validate send state\n      slice.caseReducers.validateSendState(state);\n    },\n    /**\n     * Clears the user input and changes the recipient search mode to the\n     * specified value\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {UpdateRecipientModePayload} action - The mode to set the\n     *  recipient search to\n     * @returns {void}\n     */\n    updateRecipientSearchMode: (state, action) => {\n      state.recipientInput = '';\n      state.recipientMode = action.payload;\n    },\n\n    updateRecipientWarning: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      draftTransaction.recipient.warning = action.payload;\n    },\n\n    updateRecipientType: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      draftTransaction.recipient.type = action.payload;\n    },\n\n    updateDraftTransactionStatus: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      draftTransaction.status = action.payload;\n    },\n\n    acknowledgeRecipientWarning: (state) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      draftTransaction.recipient.recipientWarningAcknowledged = true;\n      slice.caseReducers.validateSendState(state);\n    },\n\n    /**\n     * Updates the value of the recipientInput key with what the user has\n     * typed into the recipient input field in the UI.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {SimpleStringPayload} action - the value the user has typed into\n     *  the recipient field.\n     * @returns {void}\n     */\n    updateRecipientUserInput: (state, action) => {\n      // Update the value in state to match what the user is typing into the\n      // input field\n      state.recipientInput = action.payload;\n    },\n    /**\n     * update current amount.value in state and run post update validation of\n     * the amount field and the send state.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {SimpleStringPayload} action - The hex string to be set as the\n     *  amount value.\n     * @returns {void}\n     */\n    updateSendAmount: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      draftTransaction.amount.value = addHexPrefix(action.payload);\n      // Once amount has changed, validate the field\n      slice.caseReducers.validateAmountField(state);\n      if (draftTransaction.sendAsset.type === AssetType.native) {\n        // if sending the native asset the amount being sent will impact the\n        // gas field as well because the gas validation takes into\n        // consideration the available balance minus amount sent before\n        // checking if there is enough left to cover the gas fee.\n        slice.caseReducers.validateGasField(state);\n      }\n    },\n    /**\n     * updates the userInputHexData state key\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @param {SimpleStringPayload} action - The hex string to be set as the\n     *  userInputHexData value.\n     * @returns {void}\n     */\n    updateUserInputHexData: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      draftTransaction.userInputHexData = action.payload;\n    },\n    /**\n     * Updates the gasIsSetInModal property to true which results in showing\n     * the gas fees from the custom gas modal in the send page.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    useCustomGas: (state) => {\n      state.gasIsSetInModal = true;\n    },\n    /**\n     * Updates the gasIsSetInModal property to false which results in showing\n     * the default gas price/limit fields in the send page.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    useDefaultGas: (state) => {\n      state.gasIsSetInModal = false;\n    },\n    /**\n     * Checks for the validity of the draftTransactions selected amount to send\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    validateAmountField: (state) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n\n      if (!draftTransaction) {\n        return;\n      }\n\n      const amountValue = new Numeric(draftTransaction.amount.value, 16);\n\n      switch (true) {\n        // INSUFFICIENT_TOKENS_ERROR if the user is attempting to transfer ERC1155 but has 0 amount selected\n        // prevents the user from transferring 0 tokens\n        case draftTransaction.sendAsset.type === AssetType.NFT &&\n          draftTransaction.sendAsset.details.standard ===\n            TokenStandard.ERC1155 &&\n          draftTransaction.amount.value === '0x0':\n          draftTransaction.amount.error = NEGATIVE_OR_ZERO_AMOUNT_TOKENS_ERROR;\n          if (draftTransaction.status !== SEND_STATUSES.INVALID) {\n            slice.caseReducers.validateSendState(state);\n          }\n          break;\n        // set error to INSUFFICIENT_TOKENS_ERROR if the token balance is lower\n        // than the amount of token the user is attempting to send.\n        case draftTransaction.sendAsset.type === AssetType.NFT &&\n          draftTransaction.sendAsset.details.standard ===\n            TokenStandard.ERC1155 &&\n          !isERC1155BalanceSufficient({\n            tokenBalance: draftTransaction.sendAsset.balance ?? '0x0',\n            amount: draftTransaction.amount.value,\n          }):\n          draftTransaction.amount.error = INSUFFICIENT_FUNDS_ERROR;\n          if (draftTransaction.status !== SEND_STATUSES.INVALID) {\n            slice.caseReducers.validateSendState(state);\n          }\n          break;\n\n        // if the amount of tokens is a float, set error to FLOAT_TOKENS_ERROR\n        case amountValue.isFloat() &&\n          draftTransaction.sendAsset.type === AssetType.NFT &&\n          draftTransaction.sendAsset.details.standard === TokenStandard.ERC1155:\n          draftTransaction.amount.error = FLOAT_TOKENS_ERROR;\n          if (draftTransaction.status !== SEND_STATUSES.INVALID) {\n            slice.caseReducers.validateSendState(state);\n          }\n          break;\n        // set error to INSUFFICIENT_TOKENS_ERROR if the token balance is lower\n        // than the amount of token the user is attempting to send.\n        case draftTransaction.sendAsset.type === AssetType.token &&\n          !isTokenBalanceSufficient({\n            tokenBalance: draftTransaction.sendAsset.balance ?? '0x0',\n            amount: draftTransaction.amount.value,\n            decimals: draftTransaction.sendAsset.details.decimals,\n          }):\n          draftTransaction.amount.error = INSUFFICIENT_TOKENS_ERROR;\n          if (draftTransaction.status !== SEND_STATUSES.INVALID) {\n            slice.caseReducers.validateSendState(state);\n          }\n          break;\n        // set error to INSUFFICIENT_FUNDS_FOR_GAS_ERROR if the account balance is lower\n        // than the total price of the transaction inclusive of gas fees.\n        case !isBalanceSufficient({\n          amount:\n            draftTransaction.sendAsset.type === AssetType.native\n              ? draftTransaction.amount.value\n              : undefined,\n          balance:\n            draftTransaction.sendAsset.type === AssetType.native\n              ? draftTransaction.sendAsset.balance\n              : state.selectedAccount.balance,\n          gasTotal: draftTransaction.gas.gasTotal ?? '0x0',\n        }): {\n          const isInsufficientWithoutGas =\n            draftTransaction.sendAsset.type === AssetType.native &&\n            !isBalanceSufficient({\n              amount: draftTransaction.amount.value,\n              balance: draftTransaction.sendAsset.balance,\n              gasTotal: '0x0', // assume gas is free\n            });\n\n          draftTransaction.amount.error = isInsufficientWithoutGas\n            ? INSUFFICIENT_FUNDS_ERROR\n            : INSUFFICIENT_FUNDS_FOR_GAS_ERROR;\n          if (draftTransaction.status !== SEND_STATUSES.INVALID) {\n            slice.caseReducers.validateSendState(state);\n          }\n          break;\n        }\n        // If none of the above are true, set error to null\n        default:\n          draftTransaction.amount.error = null;\n          if (draftTransaction.status === SEND_STATUSES.INVALID) {\n            slice.caseReducers.validateSendState(state);\n          }\n      }\n    },\n    /**\n     * Checks if the user has enough funds to cover the cost of gas, always\n     * uses the native currency and does not take into account the amount\n     * being sent. If the user has enough to cover cost of gas but not gas\n     * + amount then the error will be displayed on the amount field.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    validateGasField: (state) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n\n      if (!draftTransaction) {\n        return;\n      }\n\n      const insufficientFunds = !isBalanceSufficient({\n        amount:\n          draftTransaction.sendAsset.type === AssetType.native\n            ? draftTransaction.amount.value\n            : '0x0',\n        balance:\n          draftTransaction.fromAccount?.balance ??\n          state.selectedAccount.balance,\n        gasTotal: draftTransaction.gas.gasTotal ?? '0x0',\n      });\n\n      draftTransaction.gas.error = insufficientFunds\n        ? INSUFFICIENT_FUNDS_ERROR\n        : null;\n    },\n    validateRecipientUserInput: (state, action) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n\n      if (draftTransaction) {\n        if (\n          state.recipientMode === RECIPIENT_SEARCH_MODES.MY_ACCOUNTS ||\n          state.recipientInput === '' ||\n          state.recipientInput === null\n        ) {\n          draftTransaction.recipient.error = null;\n          draftTransaction.recipient.warning = null;\n        } else {\n          const { tokens, tokenAddressList, isProbablyAnAssetContract } =\n            action.payload;\n\n          if (\n            isBurnAddress(state.recipientInput) ||\n            (isPossibleAddress(state.recipientInput) &&\n              !isValidHexAddress(state.recipientInput, {\n                mixedCaseUseChecksum: true,\n              }))\n          ) {\n            draftTransaction.recipient.error = INVALID_RECIPIENT_ADDRESS_ERROR;\n          } else if (\n            isOriginContractAddress(\n              state.recipientInput,\n              draftTransaction.sendAsset?.details?.address,\n            )\n          ) {\n            draftTransaction.recipient.error = CONTRACT_ADDRESS_ERROR;\n          } else {\n            draftTransaction.recipient.error = null;\n          }\n          if (\n            (isValidHexAddress(state.recipientInput) &&\n              (tokenAddressList.find((address) =>\n                isEqualCaseInsensitive(address, state.recipientInput),\n              ) ||\n                checkExistingAddresses(state.recipientInput, tokens))) ||\n            isProbablyAnAssetContract\n          ) {\n            draftTransaction.recipient.warning =\n              KNOWN_RECIPIENT_ADDRESS_WARNING;\n          } else {\n            draftTransaction.recipient.warning = null;\n          }\n        }\n      }\n      slice.caseReducers.validateSendState(state);\n    },\n    /**\n     * Checks if the draftTransaction is currently valid. The following list of\n     * cases from the switch statement in this function describe when the\n     * transaction is invalid. Please keep this comment updated.\n     *\n     * case 1: State is invalid when amount field has an error.\n     * case 2: State is invalid when gas field has an error.\n     * case 3: State is invalid when asset field has an error.\n     * case 4: State is invalid if asset type is a token and the token details\n     *  are unknown.\n     * case 5: State is invalid if no recipient has been added.\n     * case 6: State is invalid if the send state is uninitialized.\n     * case 7: State is invalid if gas estimates are loading.\n     * case 8: State is invalid if gasLimit is less than the gasLimitMinimum.\n     *\n     * @param {SendStateDraft} state - A writable draft of the send state to be\n     *  updated.\n     * @returns {void}\n     */\n    validateSendState: (state) => {\n      const draftTransaction =\n        state.draftTransactions[state.currentTransactionUUID];\n      slice.caseReducers.addHistoryEntry(state, {\n        payload: 'Begin validating send state',\n      });\n\n      if (draftTransaction) {\n        const isSwapAndSend = getIsDraftSwapAndSend(draftTransaction);\n\n        const getIsIgnorableAmountError = () =>\n          [\n            INSUFFICIENT_TOKENS_ERROR,\n            INSUFFICIENT_FUNDS_ERROR,\n            INSUFFICIENT_FUNDS_FOR_GAS_ERROR,\n          ].includes(draftTransaction.amount.error) &&\n          !draftTransaction.sendAsset.balance;\n\n        const { quotes, gas } = draftTransaction;\n        const bestQuote = quotes ? calculateBestQuote(quotes) : undefined;\n\n        const derivedGasPrice =\n          hexToDecimal(gas?.gasTotal || '0x0') > 0 &&\n          hexToDecimal(gas?.gasLimit || '0x0') > 0\n            ? new Numeric(gas.gasTotal, 16).divide(gas.gasLimit, 16).toString()\n            : undefined;\n\n        switch (true) {\n          case Boolean(\n            draftTransaction.amount.error && !getIsIgnorableAmountError(),\n          ):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Amount is in error ${draftTransaction.amount.error}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case Boolean(draftTransaction.gas.error):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Gas is in error ${draftTransaction.gas.error}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case Boolean(draftTransaction.sendAsset.error):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Send asset is in error ${draftTransaction.sendAsset.error}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case Boolean(draftTransaction.receiveAsset.error):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Receive asset is in error ${draftTransaction.receiveAsset.error}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case draftTransaction.sendAsset.type === AssetType.token &&\n            draftTransaction.sendAsset.details === null:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: 'Send asset is TOKEN and token details is null',\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case draftTransaction.receiveAsset.type === AssetType.token &&\n            draftTransaction.receiveAsset.details === null:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: 'Receive asset is TOKEN and token details is null',\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case state.stage === SEND_STAGES.ADD_RECIPIENT:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Form is invalid because stage is ADD_RECIPIENT`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case state.stage === SEND_STAGES.INACTIVE:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Form is invalid because stage is INACTIVE`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case state.gasEstimateIsLoading:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Form is invalid because gasEstimateIsLoading`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case new BigNumber(draftTransaction.gas.gasLimit, 16).lessThan(\n            new BigNumber(state.gasLimitMinimum),\n          ):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Form is invalid because ${draftTransaction.gas.gasLimit} is lessThan ${state.gasLimitMinimum}`,\n            });\n\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case draftTransaction.recipient.warning === 'loading':\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Form is invalid because recipient warning is loading`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case draftTransaction.recipient.warning ===\n            KNOWN_RECIPIENT_ADDRESS_WARNING &&\n            draftTransaction.recipient.recipientWarningAcknowledged === false:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Form is invalid because recipient warning not acknolwedged`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case Boolean(\n            bestQuote &&\n              !isEqualCaseInsensitive(\n                bestQuote.recipient,\n                draftTransaction.recipient.address,\n              ),\n          ):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Recipient is not match ${draftTransaction.recipient.address} ${bestQuote.recipient}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case Boolean(\n            bestQuote &&\n              !isEqualCaseInsensitive(\n                bestQuote.trade.from,\n                state.selectedAccount.address,\n              ),\n          ):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Sender is not match ${state.selectedAccount.address} ${bestQuote.trade.from}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case Boolean(\n            bestQuote &&\n              !isEqualCaseInsensitive(\n                draftTransaction.sendAsset?.details?.address || zeroAddress(),\n                bestQuote.sourceToken,\n              ),\n          ):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Source token is not match ${draftTransaction.sendAsset?.details?.address} ${bestQuote.sourceToken}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case Boolean(\n            bestQuote &&\n              !isEqualCaseInsensitive(\n                bestQuote.destinationToken,\n                draftTransaction.receiveAsset?.details?.address ||\n                  zeroAddress(),\n              ),\n          ):\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Destination token is not match ${draftTransaction.receiveAsset?.details?.address} ${bestQuote.destinationToken}`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          case bestQuote &&\n            !isBalanceSufficient({\n              amount:\n                draftTransaction.sendAsset.type === AssetType.native\n                  ? draftTransaction.amount.value\n                  : undefined,\n              balance: state.selectedAccount.balance,\n              gasTotal: calcGasTotal(\n                new Numeric(\n                  bestQuote?.gasParams?.maxGas || 0,\n                  10,\n                ).toPrefixedHexString(),\n                derivedGasPrice ?? '0x0',\n              ),\n            }): {\n            if (!draftTransaction.amount.error) {\n              draftTransaction.amount.error = INSUFFICIENT_FUNDS_FOR_GAS_ERROR;\n            }\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          }\n          case isSwapAndSend && !bestQuote:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `No swap and send quote available`,\n            });\n            draftTransaction.status = SEND_STATUSES.INVALID;\n            break;\n          default:\n            slice.caseReducers.addHistoryEntry(state, {\n              payload: `Form is valid`,\n            });\n            draftTransaction.status = SEND_STATUSES.VALID;\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(ACCOUNT_CHANGED, (state, action) => {\n        // This event occurs when the user's account details update due to\n        // background state changes. If the account that is being updated is\n        // the current from account on the edit flow we need to update\n        // the balance for the account and revalidate the send state.\n        if (state.stage === SEND_STAGES.EDIT && action.payload.account) {\n          const draftTransaction =\n            state.draftTransactions[state.currentTransactionUUID];\n          if (\n            draftTransaction &&\n            draftTransaction.fromAccount &&\n            draftTransaction.fromAccount.address ===\n              action.payload.account.address\n          ) {\n            draftTransaction.fromAccount.balance =\n              action.payload.account.balance;\n            // We need to update the asset balance if the asset is the native\n            // network asset. Once we update the balance we recompute error state.\n            if (draftTransaction.sendAsset.type === AssetType.native) {\n              draftTransaction.sendAsset.balance =\n                action.payload.account.balance;\n            }\n            slice.caseReducers.validateAmountField(state);\n            slice.caseReducers.validateGasField(state);\n            slice.caseReducers.validateSendState(state);\n          }\n        }\n      })\n      .addCase(ADDRESS_BOOK_UPDATED, (state, action) => {\n        // When the address book updates from background state changes we need\n        // to check to see if an entry exists for the current address or if the\n        // entry changed.\n        const { addressBook } = action.payload;\n        const draftTransaction =\n          state.draftTransactions[state.currentTransactionUUID];\n        if (\n          draftTransaction &&\n          addressBook[draftTransaction.recipient.address]?.name\n        ) {\n          draftTransaction.recipient.nickname =\n            addressBook[draftTransaction.recipient.address].name;\n        }\n      })\n      .addCase(CLEAR_SWAP_AND_SEND_STATE, (state) => {\n        const draftTransaction =\n          state.draftTransactions[state.currentTransactionUUID];\n\n        draftTransaction.quotes = draftTransactionInitialState.quotes;\n        draftTransaction.swapQuotesError =\n          draftTransactionInitialState.swapQuotesError;\n        draftTransaction.isSwapQuoteLoading =\n          draftTransactionInitialState.isSwapQuoteLoading;\n        draftTransaction.swapQuotesLatestRequestTimestamp =\n          draftTransactionInitialState.swapQuotesLatestRequestTimestamp;\n        draftTransaction.timeToFetchQuotes =\n          draftTransactionInitialState.timeToFetchQuotes;\n      })\n      .addCase(computeEstimatedGasLimit.pending, (state) => {\n        // When we begin to fetch gasLimit we should indicate we are loading\n        // a gas estimate.\n        state.gasEstimateIsLoading = true;\n      })\n      .addCase(computeEstimatedGasLimit.fulfilled, (state, action) => {\n        // When we receive a new gasLimit from the computeEstimatedGasLimit\n        // thunk we need to update our gasLimit in the slice. We call into the\n        // caseReducer updateGasLimit to tap into the appropriate follow up\n        // checks and gasTotal calculation. First set gasEstimateIsLoading to\n        // false.\n        state.gasEstimateIsLoading = false;\n        if (action.payload?.gasLimit) {\n          slice.caseReducers.updateGasLimit(state, {\n            payload: action.payload.gasLimit,\n          });\n        }\n        if (action.payload?.gasTotalForLayer1) {\n          slice.caseReducers.updateLayer1Fees(state, {\n            payload: action.payload.gasTotalForLayer1,\n          });\n        }\n      })\n      .addCase(computeEstimatedGasLimit.rejected, (state) => {\n        // If gas estimation fails, we should set the loading state to false,\n        // because it is no longer loading\n        state.gasEstimateIsLoading = false;\n      })\n      .addCase(GAS_FEE_ESTIMATES_UPDATED, (state, action) => {\n        // When the gasFeeController updates its gas fee estimates we need to\n        // update and validate state based on those new values\n        slice.caseReducers.updateGasFeeEstimates(state, {\n          payload: action.payload,\n        });\n      })\n      .addCase(initializeSendState.pending, (state) => {\n        // when we begin initializing state, which can happen when switching\n        // chains even after loading the send flow, we set gasEstimateIsLoading\n        // as initialization will trigger a fetch for gasPrice estimates.\n        state.gasEstimateIsLoading = true;\n      })\n      .addCase(initializeSendState.fulfilled, (state, action) => {\n        // writes the computed initialized state values into the slice and then\n        // calculates slice validity using the caseReducers.\n        state.eip1559support = action.payload.eip1559support;\n        state.selectedAccount.address = action.payload.account.address;\n        state.selectedAccount.balance = action.payload.account.balance;\n        state.prevSwapAndSendInput = initialState.prevSwapAndSendInput;\n        const draftTransaction =\n          state.draftTransactions[state.currentTransactionUUID];\n        if (draftTransaction) {\n          draftTransaction.gas.gasLimit = action.payload.gasLimit;\n          draftTransaction.gas.gasTotal = action.payload.gasTotal;\n          if (action.payload.chainHasChanged) {\n            // If the state was reinitialized as a result of the user changing\n            // the network from the network dropdown, then the selected asset is\n            // no longer valid and should be set to the native asset for the\n            // network.\n            draftTransaction.sendAsset.type = AssetType.native;\n            draftTransaction.sendAsset.balance =\n              draftTransaction.fromAccount?.balance ??\n              state.selectedAccount.balance;\n            draftTransaction.sendAsset.details = null;\n\n            draftTransaction.receiveAsset =\n              draftTransactionInitialState.receiveAsset;\n          }\n        }\n        slice.caseReducers.updateGasFeeEstimates(state, {\n          payload: {\n            gasFeeEstimates: action.payload.gasFeeEstimates,\n            gasEstimateType: action.payload.gasEstimateType,\n          },\n        });\n        state.gasEstimatePollToken = action.payload.gasEstimatePollToken;\n        if (action.payload.gasEstimatePollToken) {\n          state.gasEstimateIsLoading = false;\n        }\n        if (state.stage !== SEND_STAGES.INACTIVE) {\n          slice.caseReducers.validateRecipientUserInput(state, {\n            payload: {\n              chainId: action.payload.chainId,\n              tokens: action.payload.tokens,\n              useTokenDetection: action.payload.useTokenDetection,\n              tokenAddressList: action.payload.tokenAddressList,\n            },\n          });\n        }\n        state.swapsBlockedTokens = action.payload.swapsBlockedTokens;\n        state.disabledSwapAndSendNetworks =\n          action.payload.disabledSwapAndSendNetworks;\n        if (state.amountMode === AMOUNT_MODES.MAX) {\n          slice.caseReducers.updateAmountToMax(state);\n        }\n        slice.caseReducers.validateAmountField(state);\n        slice.caseReducers.validateGasField(state);\n        slice.caseReducers.validateSendState(state);\n      })\n      .addCase(initializeSendState.rejected, (state) => {\n        state.prevSwapAndSendInput = initialState.prevSwapAndSendInput;\n      })\n      .addCase(fetchSwapAndSendQuotes.pending, (state, action) => {\n        const draftTransaction =\n          state.draftTransactions[state.currentTransactionUUID];\n\n        if (draftTransaction) {\n          if (!action.meta?.arg?.isRefreshingQuotes) {\n            draftTransaction.quotes = draftTransactionInitialState.quotes;\n          }\n          draftTransaction.swapQuotesError = null;\n          draftTransaction.isSwapQuoteLoading = true;\n          draftTransaction.swapQuotesLatestRequestTimestamp = Math.max(\n            action.meta.arg.requestTimestamp,\n            draftTransaction.swapQuotesLatestRequestTimestamp,\n          );\n        }\n        slice.caseReducers.validateSendState(state);\n      })\n      .addCase(fetchSwapAndSendQuotes.fulfilled, (state, action) => {\n        const draftTransaction =\n          state.draftTransactions[state.currentTransactionUUID];\n\n        if (\n          draftTransaction &&\n          action.payload.requestTimestamp ===\n            draftTransaction.swapQuotesLatestRequestTimestamp\n        ) {\n          draftTransaction.timeToFetchQuotes =\n            Date.now() - action.payload.requestTimestamp;\n          draftTransaction.isSwapQuoteLoading = false;\n          draftTransaction.swapQuotesError = null;\n          if (action.payload) {\n            draftTransaction.quotes = action.payload.quotes;\n          }\n        }\n        slice.caseReducers.validateSendState(state);\n      })\n      .addCase(fetchSwapAndSendQuotes.rejected, (state, action) => {\n        if (action.error.message === RECENT_REQUEST_ERROR) {\n          return;\n        }\n\n        const draftTransaction =\n          state.draftTransactions[state.currentTransactionUUID];\n\n        if (draftTransaction) {\n          draftTransaction.isSwapQuoteLoading = false;\n          draftTransaction.swapQuotesError = action.error.message;\n        }\n      })\n      .addCase(SELECTED_ACCOUNT_CHANGED, (state, action) => {\n        // This event occurs when the user selects a new account from the\n        // account menu, or the currently active account's balance updates.\n        // We only care about new transactions, not edits, here, because we use\n        // the fromAccount and ACCOUNT_CHANGED action for that.\n        if (state.stage !== SEND_STAGES.EDIT && action.payload.account) {\n          state.selectedAccount.balance = action.payload.account.balance;\n          state.selectedAccount.address = action.payload.account.address;\n          const draftTransaction =\n            state.draftTransactions[state.currentTransactionUUID];\n          // This action will occur even when we aren't on the send flow, which\n          // is okay as it keeps the selectedAccount details up to date. We do\n          // not need to validate anything if there isn't a current draft\n          // transaction. If there is, we need to update the asset balance if\n          // the asset is set to the native network asset, and then validate\n          // the transaction.\n          if (draftTransaction) {\n            if (draftTransaction?.sendAsset.type === AssetType.native) {\n              draftTransaction.sendAsset.balance =\n                action.payload.account.balance;\n            }\n\n            // If selected account was changed and selected asset is a token then\n            // reset asset to native asset\n            if (\n              draftTransaction?.sendAsset.type === AssetType.token ||\n              draftTransaction?.sendAsset.type === AssetType.NFT\n            ) {\n              draftTransaction.sendAsset.type =\n                draftTransactionInitialState.sendAsset.type;\n              draftTransaction.sendAsset.error =\n                draftTransactionInitialState.sendAsset.error;\n              draftTransaction.sendAsset.details =\n                draftTransactionInitialState.sendAsset.details;\n              draftTransaction.sendAsset.balance =\n                action.payload.account.balance;\n\n              draftTransaction.receiveAsset =\n                draftTransactionInitialState.receiveAsset;\n\n              draftTransaction.amount.value =\n                draftTransactionInitialState.amount.value;\n            }\n\n            slice.caseReducers.validateAmountField(state);\n            slice.caseReducers.validateGasField(state);\n            slice.caseReducers.validateSendState(state);\n          }\n        }\n      })\n      .addCase(QR_CODE_DETECTED, (state, action) => {\n        // When data is received from the QR Code Scanner we set the recipient\n        // as long as a valid address can be pulled from the data. If an\n        // address is pulled but it is invalid, we display an error.\n        const qrCodeData = action.value;\n        const draftTransaction =\n          state.draftTransactions[state.currentTransactionUUID];\n        if (qrCodeData && draftTransaction) {\n          if (qrCodeData.type === 'address') {\n            const scannedAddress = qrCodeData.values.address.toLowerCase();\n            if (\n              isValidHexAddress(scannedAddress, { allowNonPrefixed: false })\n            ) {\n              if (draftTransaction.recipient.address !== scannedAddress) {\n                slice.caseReducers.updateRecipient(state, {\n                  payload: { address: scannedAddress },\n                });\n              }\n            } else {\n              draftTransaction.recipient.error =\n                INVALID_RECIPIENT_ADDRESS_ERROR;\n            }\n          }\n        }\n      });\n  },\n});\n\nconst { actions, reducer } = slice;\n\nexport default reducer;\n\nconst {\n  useDefaultGas,\n  useCustomGas,\n  updateGasLimit,\n  validateRecipientUserInput,\n  updateRecipientSearchMode,\n  addHistoryEntry,\n  acknowledgeRecipientWarning,\n} = actions;\n\nexport {\n  useDefaultGas,\n  useCustomGas,\n  updateGasLimit,\n  addHistoryEntry,\n  acknowledgeRecipientWarning,\n};\n\n// Action Creators\n\n/**\n * This method is for usage when validating user input so that validation\n * is only run after a delay in typing of 300ms. Usage at callsites requires\n * passing in both the dispatch method and the payload to dispatch, which makes\n * it only applicable for use within action creators.\n */\nconst debouncedValidateRecipientUserInput = debounce(\n  (dispatch, payload, resolve) => {\n    dispatch(\n      addHistoryEntry(\n        `sendFlow - user typed ${payload.userInput} into recipient input field`,\n      ),\n    );\n    dispatch(validateRecipientUserInput(payload));\n    resolve();\n  },\n  300,\n);\n\nconst debouncedComputeEstimatedGasLimit = debounce(async (dispatch) => {\n  await dispatch(computeEstimatedGasLimit());\n}, 300);\n\nconst debouncedAddHistoryEntry = debounce((dispatch, payload) => {\n  dispatch(addHistoryEntry(payload));\n}, 100);\n\n/**\n * Begins a new draft transaction, derived from the txParams of an existing\n * transaction in the TransactionController. This action will first clear out\n * the previous draft transactions and currentTransactionUUID from state. This\n * action is one of the two entry points into the send flow. NOTE: You must\n * route to the send page *after* dispatching this action resolves to ensure\n * that the draftTransaction is properly created.\n *\n * @param {AssetType} assetType - The type of asset the transaction\n *  being edited was sending. The details of the asset will be retrieved from\n *  the transaction data in state.\n * @param {string} transactionId - The id of the transaction being edited.\n * @returns {ThunkAction<void>}\n */\nexport function editExistingTransaction(assetType, transactionId) {\n  return async (dispatch, getState) => {\n    await dispatch(actions.clearPreviousDrafts());\n    const state = getState();\n    const unapprovedTransactions = getUnapprovedTransactions(state);\n    const transaction = unapprovedTransactions[transactionId];\n    const account = getTargetAccount(state, transaction.txParams.from);\n\n    const isSwapAndSend = Boolean(state[name].prevSwapAndSendInput);\n\n    if (isSwapAndSend) {\n      const {\n        amountMode,\n        amount: { value: amount },\n        ...draftTxParams\n      } = state[name].prevSwapAndSendInput;\n\n      dispatch(\n        actions.addNewDraft({\n          ...draftTransactionInitialState,\n          ...draftTxParams,\n          id: transactionId,\n          fromAccount: account,\n          history: [\n            `sendFlow - user clicked edit on transaction with id ${transactionId} (swap and send)`,\n          ],\n        }),\n      );\n      if (amountMode === AMOUNT_MODES.MAX) {\n        dispatch(actions.updateAmountMode(AMOUNT_MODES.MAX));\n        dispatch(actions.updateAmountToMax());\n        dispatch(updateSendQuote());\n      } else {\n        dispatch(updateSendAmount(amount));\n      }\n    } else if (assetType === AssetType.native) {\n      await dispatch(\n        actions.addNewDraft({\n          ...draftTransactionInitialState,\n          id: transactionId,\n          fromAccount: account,\n          gas: {\n            ...draftTransactionInitialState.gas,\n            gasLimit: transaction.txParams.gas,\n            gasPrice: transaction.txParams.gasPrice,\n          },\n          userInputHexData: transaction.txParams.data,\n          recipient: {\n            ...draftTransactionInitialState.recipient,\n            address: transaction.txParams.to,\n            nickname:\n              getAddressBookEntryOrAccountName(\n                state,\n                transaction.txParams.to,\n              ) ?? '',\n          },\n          amount: {\n            ...draftTransactionInitialState.amount,\n            value: transaction.txParams.value,\n          },\n          history: [\n            `sendFlow - user clicked edit on transaction with id ${transactionId}`,\n          ],\n        }),\n      );\n      await dispatch(\n        updateSendAsset({ type: AssetType.native }, { initialAssetSet: true }),\n      );\n    } else {\n      const tokenData = parseStandardTokenTransactionData(\n        transaction.txParams.data,\n      );\n      const tokenAmountInDec =\n        assetType === AssetType.token ? getTokenValueParam(tokenData) : '1';\n      const address = getTokenAddressParam(tokenData);\n      const nickname = getAddressBookEntryOrAccountName(state, address) ?? '';\n\n      const tokenAmountInHex = addHexPrefix(decimalToHex(tokenAmountInDec));\n      await dispatch(\n        actions.addNewDraft({\n          ...draftTransactionInitialState,\n          id: transactionId,\n          fromAccount: account,\n          gas: {\n            ...draftTransactionInitialState.gas,\n            gasLimit: transaction.txParams.gas,\n            gasPrice: transaction.txParams.gasPrice,\n          },\n          userInputHexData: transaction.txParams.data,\n          recipient: {\n            ...draftTransactionInitialState.recipient,\n            address,\n            nickname,\n          },\n          amount: {\n            ...draftTransactionInitialState.amount,\n            value: tokenAmountInHex,\n          },\n          history: [\n            `sendFlow - user clicked edit on transaction with id ${transactionId}`,\n          ],\n        }),\n      );\n\n      await dispatch(\n        updateSendAsset(\n          {\n            type: assetType,\n            details: {\n              address: transaction.txParams.to,\n              ...(assetType === AssetType.NFT\n                ? {\n                    tokenId:\n                      getTokenIdParam(tokenData) ??\n                      getTokenValueParam(tokenData),\n                  }\n                : {}),\n            },\n          },\n          { initialAssetSet: true },\n        ),\n      );\n    }\n\n    await dispatch(initializeSendState());\n  };\n}\n\n/**\n * This method is a temporary placeholder to support the old UI in both the\n * gas modal and the send flow. Soon we won't need to modify gasPrice from the\n * send flow based on user input, it'll just be a shallow copy of the current\n * estimate. This method is necessary because the internal structure of this\n * slice has been changed such that it is agnostic to transaction envelope\n * type, and this method calls into the new structure in the appropriate way.\n *\n * @deprecated - don't extend the usage of this temporary method\n * @param {string} gasPrice - new gas price in hex wei\n * @returns {ThunkAction<void>}\n */\nexport function updateGasPrice(gasPrice) {\n  return (dispatch) => {\n    dispatch(\n      addHistoryEntry(`sendFlow - user set legacy gasPrice to ${gasPrice}`),\n    );\n    dispatch(\n      actions.updateGasFees({\n        gasPrice,\n        transactionType: TransactionEnvelopeType.legacy,\n        manuallyEdited: true,\n      }),\n    );\n  };\n}\n\nexport function updateSendQuote(\n  isComputingSendGasLimit = true,\n  isRefreshingQuotes = false,\n  isComputingSendGasLimitUrgent = true,\n) {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const sendState = state[name];\n\n    const draftTransaction =\n      sendState.draftTransactions?.[sendState?.currentTransactionUUID];\n\n    const isSwapAndSend = getIsDraftSwapAndSend(draftTransaction);\n    const {\n      quotes,\n      swapQuotesError,\n      isSwapQuoteLoading,\n      swapQuotesLatestRequestTimestamp,\n    } = draftTransaction ?? {};\n\n    if (isSwapAndSend) {\n      const currentTime = Date.now();\n      // set this synchronously so it can be used in fetchSwapAndSendQuotes thunks immediately\n      latestFetchTime = currentTime;\n      dispatch(\n        fetchSwapAndSendQuotes({\n          requestTimestamp: currentTime,\n          isRefreshingQuotes,\n        }),\n      );\n    } else if (\n      quotes ||\n      swapQuotesError ||\n      isSwapQuoteLoading ||\n      swapQuotesLatestRequestTimestamp\n    ) {\n      dispatch({\n        type: CLEAR_SWAP_AND_SEND_STATE,\n      });\n    }\n\n    if (isComputingSendGasLimit) {\n      if (isComputingSendGasLimitUrgent) {\n        await dispatch(computeEstimatedGasLimit());\n      } else {\n        await debouncedComputeEstimatedGasLimit(dispatch);\n      }\n    }\n  };\n}\n\n/**\n * Updates the recipient in state based on the input provided, and then will\n * recompute gas limit when sending a TOKEN asset type. Changing the recipient\n * address results in hex data changing because the recipient address is\n * encoded in the data instead of being in the 'to' field. The to field in a\n * token send will always be the token contract address.\n * If no nickname is provided, the address book state will be checked to see if\n * a nickname for the passed address has already been saved. This ensures the\n * (temporary) send state recipient nickname is consistent with the address book\n * nickname which has already been persisted to state.\n *\n * @param {object} recipient - Recipient information\n * @param {string} recipient.address - hex address to send the transaction to\n * @param {string} [recipient.nickname] - Alias for the address to display\n *  to the user\n * @returns {ThunkAction<void>}\n */\nexport function updateRecipient({ address, nickname }) {\n  return async (dispatch, getState) => {\n    // Do not addHistoryEntry here as this is called from a number of places\n    // each with significance to the user and transaction history.\n    const state = getState();\n    const nicknameFromAddressBookEntryOrAccountName =\n      getAddressBookEntryOrAccountName(state, address) ?? '';\n    await dispatch(\n      actions.updateRecipient({\n        address,\n        nickname: nickname || nicknameFromAddressBookEntryOrAccountName,\n      }),\n    );\n    await dispatch(updateSendQuote());\n  };\n}\n\n/**\n * This method is called to update the user's input into the ENS input field.\n * Once the field is updated, the field will be validated using a debounced\n * version of the validateRecipientUserInput action. This way validation only\n * occurs once the user has stopped typing.\n *\n * @param {string} userInput - the value that the user is typing into the field\n */\nexport function updateRecipientUserInput(userInput) {\n  return async (dispatch, getState) => {\n    dispatch(actions.updateRecipientWarning('loading'));\n    dispatch(actions.updateDraftTransactionStatus(SEND_STATUSES.INVALID));\n    await dispatch(actions.updateRecipientUserInput(userInput));\n    const state = getState();\n    const sendingAddress = getSender(state);\n    const chainId = getCurrentChainId(state);\n    const tokens = getTokens(state);\n    const useTokenDetection = getUseTokenDetection(state);\n    const tokenMap = getTokenList(state);\n    const tokenAddressList = Object.keys(tokenMap);\n\n    const inputIsValidHexAddress = isValidHexAddress(userInput);\n    let isProbablyAnAssetContract = false;\n    if (inputIsValidHexAddress) {\n      const smartContractAddress = await isSmartContractAddress(userInput);\n      if (smartContractAddress) {\n        dispatch(actions.updateRecipientType(RECIPIENT_TYPES.SMART_CONTRACT));\n        const { symbol, decimals } =\n          getTokenMetadata(userInput, tokenMap) || {};\n\n        isProbablyAnAssetContract = symbol && decimals !== undefined;\n\n        if (!isProbablyAnAssetContract) {\n          try {\n            const { standard } = await getTokenStandardAndDetails(\n              userInput,\n              sendingAddress,\n            );\n            isProbablyAnAssetContract = Boolean(standard);\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      }\n    }\n\n    return new Promise((resolve) => {\n      debouncedValidateRecipientUserInput(\n        dispatch,\n        {\n          userInput,\n          chainId,\n          tokens,\n          useTokenDetection,\n          tokenAddressList,\n          isProbablyAnAssetContract,\n        },\n        resolve,\n      );\n    });\n  };\n}\n\n/**\n * Updates the amount the user intends to send and performs side effects.\n * 1. If the current mode is MAX change to INPUT\n * 2. If sending a token, recompute the gasLimit estimate\n *\n * @param {string} hexAmount - hex string representing value\n * @param {string} [decimalAmount] - decimal string representing value\n * @returns {ThunkAction<void>}\n */\nexport function updateSendAmount(hexAmount, decimalAmount) {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch(actions.updateSendAmount(hexAmount));\n    if (state[name].amountMode === AMOUNT_MODES.MAX) {\n      dispatch(actions.updateAmountMode(AMOUNT_MODES.INPUT));\n    }\n    await dispatch(updateSendQuote(true, false, false));\n\n    if (decimalAmount === undefined) {\n      return;\n    }\n\n    const { ticker } = getProviderConfig(state);\n    const draftTransaction =\n      state[name].draftTransactions[state[name].currentTransactionUUID];\n    let logAmount = hexAmount;\n    if (draftTransaction.sendAsset.type === AssetType.token) {\n      logAmount = `${decimalAmount} ${draftTransaction.sendAsset.details?.symbol}`;\n    } else {\n      logAmount = `${decimalAmount} ${ticker || EtherDenomination.ETH}`;\n    }\n    debouncedAddHistoryEntry(\n      dispatch,\n      `sendFlow - user set amount to ${logAmount}`,\n    );\n  };\n}\n\n/**\n * updates the asset to send to one of NATIVE or TOKEN and ensures that the\n * asset balance is set. If sending a TOKEN also updates the asset details\n * object with the appropriate ERC20 details including address, symbol and\n * decimals.\n *\n * @param {object} payload - action payload\n * @param {string} payload.type - type of asset to send\n * @param {TokenDetails} [payload.details] - ERC20 details if sending TOKEN asset\n * @param {boolean} [payload.isReceived] - is the action updating the dest asset\n * @param payload.skipComputeEstimatedGasLimit\n * @returns {ThunkAction<void>}\n */\nexport function updateSendAsset(\n  { type, details: providedDetails, skipComputeEstimatedGasLimit, isReceived },\n  { initialAssetSet = false } = {},\n) {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const { ticker } = getProviderConfig(state);\n    const draftTransaction =\n      state[name].draftTransactions[state[name].currentTransactionUUID];\n    const sendingAddress = getSender(state);\n    const account = getTargetAccount(state, sendingAddress);\n    if (type === AssetType.native) {\n      const unapprovedTxs = getUnapprovedTransactions(state);\n      const unapprovedTx = unapprovedTxs?.[draftTransaction.id];\n\n      await dispatch(\n        addHistoryEntry(\n          `sendFlow - user set asset of type ${AssetType.native} with symbol ${\n            ticker ?? EtherDenomination.ETH\n          }`,\n        ),\n      );\n      await dispatch(\n        actions.updateAsset({\n          asset: {\n            type,\n            details: null,\n            balance: account.balance,\n            error: null,\n          },\n          initialAssetSet,\n          isReceived,\n        }),\n      );\n\n      // This is meant to handle cases where we are editing an unapprovedTx from the background state\n      // and its type is a token method. In such a case, the hex data will be the necessary hex data\n      // for calling the contract transfer method.\n      // Now that we are updating the transaction to be a send of a native asset type, we should\n      // set the hex data of the transaction being editing to be empty.\n      // then the user will not want to send any hex data now that they have change the\n      if (\n        unapprovedTx?.type === TransactionType.tokenMethodTransferFrom ||\n        unapprovedTx?.type === TransactionType.tokenMethodTransfer ||\n        unapprovedTx?.type === TransactionType.tokenMethodSafeTransferFrom\n      ) {\n        await dispatch(actions.updateUserInputHexData(''));\n      }\n    } else {\n      await dispatch(showLoadingIndication());\n\n      const STANDARD_TO_REQUIRED_PROPERTIES = {\n        // 'balance' must be last so that we know all other properties exist if `missingProperty` = 'balance'\n        [TokenStandard.ERC20]: isReceived\n          ? ['address', 'symbol', 'decimals']\n          : ['address', 'symbol', 'decimals', 'balance'],\n        [TokenStandard.ERC721]: ['address', 'symbol', 'tokenId'],\n        [TokenStandard.ERC1155]: ['address', 'symbol', 'tokenId'],\n      };\n\n      let missingProperty = STANDARD_TO_REQUIRED_PROPERTIES[\n        providedDetails.standard\n      ]?.find((property) => providedDetails[property] === undefined);\n\n      let details;\n\n      // attempt simple balance fetch if balance is missing\n      if (missingProperty === 'balance') {\n        const selectedNetworkClientId = getSelectedNetworkClientId(state);\n        const sender = getSender(state);\n\n        const balance = await getBalancesInSingleCall(\n          sender,\n          [providedDetails.address],\n          selectedNetworkClientId,\n        ).catch(() => ({}));\n\n        const hexBalance = balance[providedDetails.address]?.hex;\n\n        providedDetails.balance = hexBalance\n          ? addHexPrefix(hexBalance)\n          : undefined;\n\n        // regardless of if we get the balance or not, we should not consider it a missing property\n        missingProperty = undefined;\n      }\n\n      // if standard exists with all required properties, do not call getTokenStandardAndDetails\n      if (providedDetails.standard && !missingProperty) {\n        details = {\n          ...providedDetails,\n        };\n      } else {\n        details = {\n          ...providedDetails,\n          ...(await getTokenStandardAndDetails(\n            providedDetails.address,\n            sendingAddress,\n            providedDetails.tokenId,\n          ).catch((error) => {\n            // prevent infinite stuck loading state\n            dispatch(hideLoadingIndication());\n            throw error;\n          })),\n        };\n      }\n\n      await dispatch(hideLoadingIndication());\n\n      const asset = {\n        type,\n        details,\n        error: null,\n      };\n\n      if (details.standard === TokenStandard.ERC20) {\n        asset.balance =\n          details.balance && typeof details.decimals === 'number'\n            ? addHexPrefix(\n                calcTokenAmount(details.balance, details.decimals).toString(16),\n              )\n            : undefined;\n\n        await dispatch(\n          addHistoryEntry(\n            `sendFlow - user set asset to ERC20 token with symbol ${details.symbol} and address ${details.address}`,\n          ),\n        );\n      } else if (\n        details.standard === TokenStandard.ERC1155 ||\n        details.standard === TokenStandard.ERC721\n      ) {\n        if (type === AssetType.token) {\n          dispatch(\n            showModal({\n              name: 'CONVERT_TOKEN_TO_NFT',\n              tokenAddress: details.address,\n            }),\n          );\n          asset.error = INVALID_ASSET_TYPE;\n          throw new Error(INVALID_ASSET_TYPE);\n        } else {\n          let isCurrentOwner = true;\n          try {\n            isCurrentOwner = await isNftOwner(\n              sendingAddress,\n              details.address,\n              details.tokenId,\n            );\n          } catch (err) {\n            if (err.message.includes('Unable to verify ownership.')) {\n              // this would indicate that either our attempts to verify ownership failed because of network issues,\n              // or, somehow a token has been added to NFTs state with an incorrect chainId.\n            } else {\n              // Any other error is unexpected and should be surfaced.\n              dispatch(displayWarning(err.message));\n            }\n          }\n\n          if (isCurrentOwner) {\n            asset.error = null;\n            asset.balance = details.balance\n              ? addHexPrefix(details.balance)\n              : '0x1';\n          } else {\n            throw new Error(\n              'Send slice initialized as NFT send with an NFT not currently owned by the select account',\n            );\n          }\n          await dispatch(\n            addHistoryEntry(\n              `sendFlow - user set asset to NFT with tokenId ${details.tokenId} and address ${details.address}`,\n            ),\n          );\n        }\n      }\n\n      await dispatch(\n        actions.updateAsset({ asset, initialAssetSet, isReceived }),\n      );\n    }\n    await dispatch(\n      updateSendQuote(\n        initialAssetSet === false && !skipComputeEstimatedGasLimit,\n      ),\n    );\n  };\n}\n\n/**\n * When a user has enabled hex data field in advanced settings they will be\n * able to supply hex data on a transaction. This method updates the user\n * supplied data. Note, when sending native assets this will result in\n * recomputing estimated gasLimit. When sending a ERC20 asset this is not done\n * because the data sent in the transaction will be determined by the asset,\n * recipient and value, NOT what the user has supplied.\n *\n * @param {string} hexData - hex encoded string representing transaction data.\n * @returns {ThunkAction<void>}\n */\nexport function updateSendHexData(hexData) {\n  return async (dispatch, getState) => {\n    await dispatch(\n      addHistoryEntry(`sendFlow - user added custom hexData ${hexData}`),\n    );\n\n    await dispatch(actions.updateUserInputHexData(hexData));\n    const state = getState();\n    const draftTransaction =\n      state[name].draftTransactions[state[name].currentTransactionUUID];\n\n    await dispatch(\n      updateSendQuote(draftTransaction.sendAsset.type === AssetType.native),\n    );\n  };\n}\n\n/**\n * Sets the recipient search mode to show a list of the user's contacts and\n * recently interacted with addresses.\n *\n * @returns {ThunkAction<void>}\n */\nexport function useContactListForRecipientSearch() {\n  return (dispatch) => {\n    dispatch(\n      addHistoryEntry(\n        `sendFlow - user selected back to all on recipient screen`,\n      ),\n    );\n    dispatch(updateRecipientSearchMode(RECIPIENT_SEARCH_MODES.CONTACT_LIST));\n  };\n}\n\n/**\n * Sets the recipient search mode to show a list of the user's own accounts.\n *\n * @returns {ThunkAction<void>}\n */\nexport function useMyAccountsForRecipientSearch() {\n  return (dispatch) => {\n    dispatch(\n      addHistoryEntry(\n        `sendFlow - user selected transfer to my accounts on recipient screen`,\n      ),\n    );\n    dispatch(updateRecipientSearchMode(RECIPIENT_SEARCH_MODES.MY_ACCOUNTS));\n  };\n}\n\n/**\n * Clears out the recipient user input, ENS resolution and recipient validation.\n *\n * @returns {ThunkAction<void>}\n */\nexport function resetRecipientInput() {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const chainId = getCurrentChainId(state);\n    showLoadingIndication();\n    dispatch(addHistoryEntry(`sendFlow - user cleared recipient input`));\n    dispatch(resetDomainResolution());\n    dispatch(updateRecipientUserInput(''));\n    await dispatch(updateRecipient({ address: '', nickname: '' }));\n    dispatch(validateRecipientUserInput({ chainId }));\n    hideLoadingIndication();\n  };\n}\n\n/**\n * Resets the entire send state tree to the initial state. It also disconnects\n * polling from the gas controller if the token is present in state.\n *\n * @returns {ThunkAction<void>}\n */\nexport function resetSendState() {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch(actions.resetSendState());\n\n    if (state[name].gasEstimatePollToken) {\n      await gasFeeStopPollingByPollingToken(state[name].gasEstimatePollToken);\n      removePollingTokenFromAppState(state[name].gasEstimatePollToken);\n    }\n  };\n}\n\n/**\n * Signs a transaction or updates a transaction in state if editing.\n * This method is called when a user clicks the next button in the footer of\n * the send page, signaling that a transaction should be executed. This method\n * will create the transaction in state (by way of the various global provider\n * constructs) which will eventually (and fairly quickly from user perspective)\n * result in a confirmation window being displayed for the transaction.\n *\n * @returns {ThunkAction<void>}\n */\n\nexport function signTransaction(history) {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const { stage, eip1559support, amountMode } = state[name];\n    const draftTransaction =\n      state[name].draftTransactions[state[name].currentTransactionUUID];\n\n    let txParams;\n    const isSwapAndSend = getIsDraftSwapAndSend(draftTransaction);\n    const quotesAsArray = draftTransaction.quotes;\n    const bestQuote = quotesAsArray\n      ? calculateBestQuote(quotesAsArray)\n      : undefined;\n\n    if (isSwapAndSend) {\n      txParams = { ...bestQuote.trade };\n    } else {\n      txParams = generateTransactionParams(state[name]);\n    }\n\n    const { amount, sendAsset, receiveAsset, recipient } = draftTransaction;\n    const prevSwapAndSendData = {\n      amount: { ...amount },\n      sendAsset: { ...sendAsset },\n      receiveAsset: { ...receiveAsset },\n      recipient: { ...recipient },\n      amountMode: state[name].amountMode,\n    };\n\n    await dispatch(actions.setPrevSwapAndSend(prevSwapAndSendData));\n\n    // you can only edit a basic send transaction\n    if (stage === SEND_STAGES.EDIT && !isSwapAndSend) {\n      // When dealing with the edit flow there is already a transaction in\n      // state that we must update, this branch is responsible for that logic.\n      // We first must grab the previous transaction object from state and then\n      // merge in the modified txParams. Once the transaction has been modified\n      // we can send that to the background to update the transaction in state.\n      const unapprovedTxs = getUnapprovedTransactions(state);\n      const unapprovedTx = cloneDeep(unapprovedTxs[draftTransaction.id]);\n      // We only update the tx params that can be changed via the edit flow UX\n      const eip1559OnlyTxParamsToUpdate = {\n        data: txParams.data,\n        from: txParams.from,\n        to: txParams.to,\n        value: txParams.value,\n        gas: unapprovedTx?.userEditedGasLimit\n          ? unapprovedTx.txParams.gas\n          : txParams.gas,\n      };\n      unapprovedTx.originalGasEstimate = eip1559OnlyTxParamsToUpdate.gas;\n      const editingTx = {\n        ...unapprovedTx,\n        txParams: Object.assign(\n          unapprovedTx.txParams,\n          eip1559support ? eip1559OnlyTxParamsToUpdate : txParams,\n        ),\n      };\n\n      await dispatch(\n        addHistoryEntry(\n          `sendFlow - user clicked next and transaction should be updated in controller`,\n        ),\n      );\n      await dispatch(\n        updateTransactionSendFlowHistory(\n          draftTransaction.id,\n          unapprovedTx.sendFlowHistory?.length || 0,\n          draftTransaction.history,\n        ),\n      );\n      await dispatch(\n        updateEditableParams(draftTransaction.id, editingTx.txParams),\n      );\n      await dispatch(\n        updateTransactionGasFees(draftTransaction.id, editingTx.txParams),\n      );\n\n      history.push(CONFIRM_TRANSACTION_ROUTE);\n    } else {\n      let transactionType =\n        draftTransaction.recipient.type === RECIPIENT_TYPES.SMART_CONTRACT\n          ? TransactionType.contractInteraction\n          : TransactionType.simpleSend;\n\n      if (draftTransaction.sendAsset.type !== AssetType.native) {\n        if (draftTransaction.sendAsset.type === AssetType.NFT) {\n          if (\n            draftTransaction.sendAsset.details.standard === TokenStandard.ERC721\n          ) {\n            transactionType = TransactionType.tokenMethodTransferFrom;\n          } else {\n            transactionType = TransactionType.tokenMethodSafeTransferFrom;\n          }\n        } else {\n          transactionType = TransactionType.tokenMethodTransfer;\n        }\n      }\n      await dispatch(\n        addHistoryEntry(\n          `sendFlow - user clicked next and transaction should be added to controller`,\n        ),\n      );\n\n      let transactionId;\n\n      if (isSwapAndSend) {\n        // clear existing swap transaction if editing\n        if (stage === SEND_STAGES.EDIT) {\n          const unapprovedTxs = getUnapprovedTransactions(state);\n          const unapprovedSendTx = unapprovedTxs[draftTransaction.id];\n          if (unapprovedSendTx) {\n            await dispatch(\n              rejectPendingApproval(\n                unapprovedSendTx.id,\n                ethErrors.provider.userRejectedRequest().serialize(),\n              ),\n            );\n          }\n        }\n\n        const chainId = getCurrentChainId(state);\n        const NATIVE_CURRENCY_DECIMALS =\n          SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].decimals;\n\n        const sourceTokenSymbol =\n          draftTransaction.sendAsset.details?.symbol ||\n          getNativeCurrency(state);\n        const destinationTokenSymbol =\n          draftTransaction.receiveAsset.details?.symbol ||\n          getNativeCurrency(state);\n        const destinationTokenDecimals =\n          draftTransaction.receiveAsset.details?.decimals ||\n          NATIVE_CURRENCY_DECIMALS;\n        const destinationTokenAddress =\n          draftTransaction.receiveAsset.details?.address ||\n          SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].address;\n        const sourceTokenDecimals =\n          draftTransaction.sendAsset.details?.decimals ||\n          NATIVE_CURRENCY_DECIMALS;\n        const swapTokenValue = new Numeric(amount?.value || '0x0', 16)\n          .toBase(10)\n          .shiftedBy(sourceTokenDecimals)\n          .toString();\n\n        const swapAndSendRecipient = draftTransaction.recipient.address;\n        const sourceTokenAddress =\n          draftTransaction.sendAsset.details?.address ||\n          SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].address;\n        const sourceTokenAmount = bestQuote?.sourceAmount;\n        const destinationTokenAmount = bestQuote?.destinationAmount;\n\n        const meta = {\n          swapAndSendRecipient,\n          type: TransactionType.swapAndSend,\n          sourceTokenSymbol,\n          destinationTokenSymbol,\n          destinationTokenDecimals,\n          destinationTokenAddress,\n          swapTokenValue,\n          approvalTxId: undefined,\n          destinationTokenAmount,\n          sourceTokenAddress,\n          sourceTokenAmount,\n          sourceTokenDecimals,\n        };\n\n        if (bestQuote?.approvalNeeded) {\n          const { id } = await addTransactionAndWaitForPublish(\n            { ...bestQuote.approvalNeeded, amount: '0x0' },\n            {\n              requireApproval: false,\n              // TODO: create new type for swap+send approvals; works as stopgap bc swaps doesn't use this type for STXs in `submitSmartTransactionHook` (via `TransactionController`)\n              type: TransactionType.swapApproval,\n              swaps: {\n                hasApproveTx: true,\n                meta: {\n                  type: TransactionType.swapApproval,\n                  sourceTokenSymbol,\n                },\n              },\n            },\n          );\n          meta.approvalTxId = id;\n        }\n\n        const { id: swapAndSendTxId } = await addTransactionAndWaitForPublish(\n          txParams,\n          {\n            requireApproval: false,\n            sendFlowHistory: draftTransaction.history,\n            type: TransactionType.swapAndSend,\n            swaps: {\n              hasApproveTx: Boolean(bestQuote?.approvalNeeded),\n              meta,\n            },\n          },\n        );\n        transactionId = swapAndSendTxId;\n\n        await dispatch(setDefaultHomeActiveTabName('activity'));\n        history.push(DEFAULT_ROUTE);\n      } else {\n        // basic send\n        const { id: basicSendTxId } = await dispatch(\n          addTransactionAndRouteToConfirmationPage(txParams, {\n            sendFlowHistory: draftTransaction.history,\n            type: transactionType,\n          }),\n        );\n        transactionId = basicSendTxId;\n        history.push(CONFIRM_TRANSACTION_ROUTE);\n      }\n      await dispatch(\n        setMaxValueMode(\n          transactionId,\n          amountMode === AMOUNT_MODES.MAX &&\n            draftTransaction.sendAsset.type === AssetType.native,\n        ),\n      );\n    }\n    await dispatch(actions.setPrevSwapAndSend(prevSwapAndSendData));\n  };\n}\n\n/**\n * Toggles the amount.mode between INPUT and MAX modes.\n * As a result, the amount.value will change to either '0x0' when moving from\n * MAX to INPUT, or to the maximum allowable amount based on current asset when\n * moving from INPUT to MAX.\n *\n * @returns {ThunkAction<void>}\n */\nexport function toggleSendMaxMode() {\n  return async (dispatch, getState) => {\n    const state = getState();\n    if (state[name].amountMode === AMOUNT_MODES.MAX) {\n      await dispatch(actions.updateAmountMode(AMOUNT_MODES.INPUT));\n      await dispatch(actions.updateSendAmount('0x0'));\n      await dispatch(addHistoryEntry(`sendFlow - user toggled max mode off`));\n    } else {\n      await dispatch(actions.updateAmountMode(AMOUNT_MODES.MAX));\n      await dispatch(actions.updateAmountToMax());\n      await dispatch(addHistoryEntry(`sendFlow - user toggled max mode on`));\n    }\n\n    await dispatch(updateSendQuote());\n  };\n}\n\n/**\n * Begins a new draft transaction, clearing out the previous draft transactions\n * from state, and clearing the currentTransactionUUID. This action is one of\n * the two entry points into the send flow. NOTE: You must route to the send\n * page *after* dispatching this action resolves to ensure that the\n * draftTransaction is properly created.\n *\n * @param {Pick<Asset, 'type' | 'details'>} asset - A partial asset\n *  object containing at least the asset type. If specifying a non-native asset\n *  then the asset details must be included with at least the address.\n * @returns {ThunkAction<void>}\n */\nexport function startNewDraftTransaction(asset) {\n  return async (dispatch) => {\n    await dispatch(actions.clearPreviousDrafts());\n\n    await dispatch(\n      actions.addNewDraft({\n        ...draftTransactionInitialState,\n        history: [`sendFlow - User started new draft transaction`],\n      }),\n    );\n\n    await dispatch(\n      updateSendAsset({\n        type: asset.type ?? AssetType.native,\n        details: asset.details,\n        skipComputeEstimatedGasLimit: true,\n      }),\n    );\n\n    await dispatch(initializeSendState());\n  };\n}\n\n// Selectors\n/**\n * The following typedef is a shortcut for typing selectors below. It uses a\n * generic type, T, so that each selector can specify it's return type.\n *\n * @template T\n * @typedef {(state: MetaMaskState) => T} Selector\n */\n\n/**\n * Selector that returns the current draft transaction's UUID.\n *\n * @type {Selector<string>}\n */\nexport function getCurrentTransactionUUID(state) {\n  return state[name].currentTransactionUUID;\n}\n\n/**\n * Selector that returns the current draft transaction.\n *\n * @type {Selector<DraftTransaction>}\n */\nexport function getCurrentDraftTransaction(state) {\n  return state[name].draftTransactions[getCurrentTransactionUUID(state)] ?? {};\n}\n\n/**\n * Selector that returns the best swap and send quote\n *\n * @type {Selector?<Quote>}\n */\nexport const getBestQuote = createSelector(\n  getCurrentDraftTransaction,\n  ({ quotes, swapQuotesError }) => {\n    const quotesAsArray = quotes;\n    if (swapQuotesError || !quotesAsArray?.length) {\n      return undefined;\n    }\n\n    const bestQuote = calculateBestQuote(quotesAsArray);\n\n    return bestQuote;\n  },\n);\n\n/**\n * Selector that returns the layer 1 chain's gas fee, when applicable.\n *\n * @type {Selector<string>}\n */\nexport function getSendLayer1GasFee(state) {\n  return state[name].gasTotalForLayer1;\n}\n\n/**\n * Selector that returns if a native send is possible based on the current gas value\n *\n * @type {Selector<boolean>}\n */\nexport const getIsNativeSendPossible = createSelector(\n  getCurrentDraftTransaction,\n  getSendLayer1GasFee,\n  ({ gas: { gasTotal: baseGasTotal }, sendAsset }, gasTotalForLayer1) => {\n    if (sendAsset.type !== AssetType.native) {\n      return true;\n    }\n\n    const nativeBalance = sendAsset.balance;\n\n    const gasTotal = new Numeric(baseGasTotal || '0x0', 16).add(\n      new Numeric(gasTotalForLayer1 ?? '0x0', 16),\n    );\n\n    return gasTotal.lessThan(nativeBalance, 16);\n  },\n);\n\n/**\n * Selector that returns true if a draft transaction exists.\n *\n * @type {Selector<boolean>}\n */\nexport function getDraftTransactionExists(state) {\n  const draftTransaction = getCurrentDraftTransaction(state);\n  if (Object.keys(draftTransaction).length === 0) {\n    return false;\n  }\n  return true;\n}\n\n// Gas selectors\n\n/**\n * Selector that returns the current draft transaction's gasLimit.\n *\n * @type {Selector<?string>}\n */\nexport function getGasLimit(state) {\n  return getCurrentDraftTransaction(state).gas?.gasLimit;\n}\n\n/**\n * Selector that returns the current draft transaction's gasPrice.\n *\n * @type {Selector<?string>}\n */\nexport function getGasPrice(state) {\n  return getCurrentDraftTransaction(state).gas?.gasPrice;\n}\n\n/**\n * Selector that returns the current draft transaction's gasTotal.\n *\n * @type {Selector<?string>}\n */\nexport function getGasTotal(state) {\n  return getCurrentDraftTransaction(state).gas?.gasTotal;\n}\n\n/**\n * Selector that returns the error, if present, for the gas fields.\n *\n * @type {Selector<?string>}\n */\nexport function gasFeeIsInError(state) {\n  return Boolean(getCurrentDraftTransaction(state).gas?.error);\n}\n\n/**\n * Selector that returns the minimum gasLimit for the current network.\n *\n * @type {Selector<string>}\n */\nexport function getMinimumGasLimitForSend(state) {\n  return state[name].gasLimitMinimum;\n}\n\n/**\n * Selector that returns the current draft transaction's gasLimit.\n *\n * @type {Selector<MapValuesToUnion<SendStateGasModes>>}\n */\nexport function getGasInputMode(state) {\n  const isMainnet = getIsMainnet(state);\n  const gasEstimateType = getGasEstimateType(state);\n  const showAdvancedGasFields = getAdvancedInlineGasShown(state);\n  if (state[name].gasIsSetInModal) {\n    return GAS_INPUT_MODES.CUSTOM;\n  }\n  if ((!isMainnet && !process.env.IN_TEST) || showAdvancedGasFields) {\n    return GAS_INPUT_MODES.INLINE;\n  }\n\n  // We get eth_gasPrice estimation if the legacy API fails but we need to\n  // instruct the UI to render the INLINE inputs in this case, only on\n  // mainnet or IN_TEST.\n  if (\n    (isMainnet || process.env.IN_TEST) &&\n    gasEstimateType === GasEstimateTypes.ethGasPrice\n  ) {\n    return GAS_INPUT_MODES.INLINE;\n  }\n  return GAS_INPUT_MODES.BASIC;\n}\n\n// Asset Selectors\n/**\n * Selector that returns the asset the current draft transaction is sending.\n *\n * @type {Selector<?Asset>}\n */\nexport function getSendAsset(state) {\n  return getCurrentDraftTransaction(state).sendAsset;\n}\n\n/**\n * Selector that returns the contract address of the non-native asset that\n * the current transaction is sending, if it exists.\n *\n * @type {Selector<?string>}\n */\nexport function getSendAssetAddress(state) {\n  return getSendAsset(state)?.details?.address;\n}\n\n/**\n * Selector that returns a boolean value describing whether the currently\n * selected asset is sendable, based upon the standard of the token.\n *\n * @type {Selector<boolean>}\n */\nexport function getIsAssetSendable(state) {\n  if (getSendAsset(state)?.type === AssetType.native) {\n    return true;\n  }\n  return getSendAsset(state)?.details?.isERC721 === false;\n}\n\n/**\n * Selector that returns the asset error if it exists.\n *\n * @type {Selector<?string>}\n */\nexport function getAssetError(state) {\n  return getSendAsset(state).error;\n}\n\n// Amount Selectors\n/**\n * Selector that returns the amount that current draft transaction is sending.\n *\n * @type {Selector<?string>}\n */\nexport function getSendAmount(state) {\n  return getCurrentDraftTransaction(state).amount?.value;\n}\n\n/**\n * Selector that returns true if the user has enough native asset balance to\n * cover the cost of the transaction.\n *\n * @type {Selector<boolean>}\n */\nexport function getIsBalanceInsufficient(state) {\n  return (\n    getCurrentDraftTransaction(state).gas?.error === INSUFFICIENT_FUNDS_ERROR\n  );\n}\n\n/**\n * Selector that returns the amoung send mode, either MAX or INPUT.\n *\n * @type {Selector<boolean>}\n */\nexport function getSendMaxModeState(state) {\n  return state[name].amountMode === AMOUNT_MODES.MAX;\n}\n\n/**\n * Selector that returns the current draft transaction's data field.\n *\n * @type {Selector<?string>}\n */\nexport function getSendHexData(state) {\n  return getCurrentDraftTransaction(state).userInputHexData;\n}\n\n/**\n * Selector that returns the current draft transaction's id, if present.\n *\n * @type {Selector<?string>}\n */\nexport function getDraftTransactionID(state) {\n  return getCurrentDraftTransaction(state).id;\n}\n\n/**\n * Selector that returns true if there is an error on the amount field.\n *\n * @type {Selector<boolean>}\n */\nexport function sendAmountIsInError(state) {\n  return Boolean(getCurrentDraftTransaction(state).amount?.error);\n}\n\n/**\n * Selector that returns the address of the current send sender\n *\n * @type {Selector?<string>}\n */\nexport function getSender(state) {\n  const sendState = state[name];\n\n  const draftTransaction =\n    sendState.draftTransactions[sendState.currentTransactionUUID];\n\n  return (\n    draftTransaction?.fromAccount?.address ??\n    sendState.selectedAccount.address ??\n    getSelectedInternalAccount(state)?.address\n  );\n}\n\n// Recipient Selectors\n/**\n * Selector that returns the current draft transaction's recipient.\n *\n * @type {Selector<DraftTransaction['recipient']>}\n */\nexport function getRecipient(state) {\n  const draft = getCurrentDraftTransaction(state);\n  if (!draft.recipient) {\n    return {\n      address: '',\n      nickname: '',\n      error: null,\n      warning: null,\n    };\n  }\n  const checksummedAddress = toChecksumHexAddress(draft.recipient.address);\n  if (state.metamask.ensResolutionsByAddress) {\n    return {\n      ...draft.recipient,\n      nickname:\n        draft.recipient.nickname ||\n        getEnsResolutionByAddress(state, checksummedAddress),\n    };\n  }\n  return draft.recipient;\n}\n\n/**\n * Selector that returns the addres of the current draft transaction's\n * recipient.\n *\n * @type {Selector<?string>}\n */\nexport function getSendTo(state) {\n  return getRecipient(state)?.address;\n}\n\n/**\n * Selector that returns true if the current recipientMode is MY_ACCOUNTS\n *\n * @type {Selector<boolean>}\n */\nexport function getIsUsingMyAccountForRecipientSearch(state) {\n  return state[name].recipientMode === RECIPIENT_SEARCH_MODES.MY_ACCOUNTS;\n}\n\n/**\n * Selector that returns the value that the user has typed into the recipient\n * input field.\n *\n * @type {Selector<?string>}\n */\nexport function getRecipientUserInput(state) {\n  return state[name].recipientInput;\n}\n\nexport function getRecipientWarningAcknowledgement(state) {\n  return (\n    getCurrentDraftTransaction(state).recipient?.recipientWarningAcknowledged ??\n    false\n  );\n}\n\n// Overall validity and stage selectors\n\n/**\n * Selector that returns the gasFee and amount errors, if they exist.\n *\n * @type {Selector<{ gasFee?: string, amount?: string}>}\n */\nexport function getSendErrors(state) {\n  return {\n    gasFee: getCurrentDraftTransaction(state).gas?.error,\n    amount: getCurrentDraftTransaction(state).amount?.error,\n  };\n}\n\n/**\n * Selector that returns true if the stage is anything except INACTIVE\n *\n * @type {Selector<boolean>}\n */\nexport function isSendStateInitialized(state) {\n  return state[name].stage !== SEND_STAGES.INACTIVE;\n}\n\n/**\n * Selector that returns true if the current draft transaction is valid and in\n * a sendable state.\n *\n * @type {Selector<boolean>}\n */\nexport function isSendFormInvalid(state) {\n  const draftTransaction = getCurrentDraftTransaction(state);\n  if (!draftTransaction) {\n    return true;\n  }\n  return draftTransaction.status === SEND_STATUSES.INVALID;\n}\n\n/**\n * Selector that returns the current stage of the send flow\n *\n * @type {Selector<MapValuesToUnion<SendStateStages>>}\n */\nexport function getSendStage(state) {\n  return state[name].stage;\n}\n\nexport function hasSendLayer1GasFee(state) {\n  return state[name].gasTotalForLayer1 !== null;\n}\n\nexport function getSwapsBlockedTokens(state) {\n  return state[name].swapsBlockedTokens;\n}\n\nexport const getIsSwapAndSendDisabledForNetwork = createSelector(\n  (state) => getCurrentChainId(state),\n  (state) => state[name]?.disabledSwapAndSendNetworks ?? [],\n  (chainId, disabledSwapAndSendNetworks) => {\n    return disabledSwapAndSendNetworks.includes(chainId);\n  },\n);\n\nexport const getSendAnalyticProperties = createSelector(\n  (state) => getProviderConfig(state),\n  getCurrentDraftTransaction,\n  getBestQuote,\n  ({ chainId, ticker: nativeCurrencySymbol }, draftTransaction, bestQuote) => {\n    try {\n      const NATIVE_CURRENCY_DECIMALS =\n        SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].decimals;\n\n      const NATIVE_CURRENCY_ADDRESS =\n        SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId].address;\n\n      const isSwapAndSend = getIsDraftSwapAndSend(draftTransaction);\n      const {\n        quotes,\n        amount,\n        sendAsset,\n        receiveAsset,\n        swapQuotesError,\n        timeToFetchQuotes,\n      } = draftTransaction;\n\n      const sourceTokenSymbol =\n        draftTransaction?.sendAsset?.details?.symbol || nativeCurrencySymbol;\n      const destinationTokenSymbol =\n        draftTransaction?.receiveAsset?.details?.symbol || nativeCurrencySymbol;\n      const destinationTokenDecimals =\n        draftTransaction?.receiveAsset?.details?.decimals ||\n        NATIVE_CURRENCY_DECIMALS;\n\n      const sourceTokenDecimals =\n        draftTransaction?.sendAsset?.details?.decimals ||\n        NATIVE_CURRENCY_DECIMALS;\n\n      const userInputTokenAmount = new Numeric(amount?.value || '0x0', 16)\n        .toBase(10)\n        .shiftedBy(sourceTokenDecimals)\n        .toString();\n\n      const sourceTokenAmount = bestQuote?.sourceAmount;\n      const destinationTokenAmount = bestQuote?.destinationAmount;\n\n      const destinationTokenAddress =\n        draftTransaction?.receiveAsset?.details?.address ||\n        NATIVE_CURRENCY_ADDRESS;\n      const sourceTokenAddress =\n        draftTransaction?.sendAsset?.details?.address ||\n        NATIVE_CURRENCY_ADDRESS;\n\n      return {\n        is_swap_and_send: isSwapAndSend,\n        chain_id: chainId,\n        token_amount_source:\n          sourceTokenAmount && sourceTokenDecimals\n            ? calcTokenAmount(sourceTokenAmount, sourceTokenDecimals).toString()\n            : userInputTokenAmount,\n        token_amount_dest_estimate:\n          destinationTokenAmount && destinationTokenDecimals\n            ? calcTokenAmount(\n                destinationTokenAmount,\n                destinationTokenDecimals,\n              ).toString()\n            : undefined,\n        token_symbol_source: sourceTokenSymbol,\n        token_symbol_destination: destinationTokenSymbol,\n        token_address_source: sourceTokenAddress,\n        token_address_destination: destinationTokenAddress,\n        results_count: quotes?.length,\n        quotes_load_time_ms: timeToFetchQuotes,\n        aggregator_list: quotes?.map(\n          ({ aggregator, error }) => `${aggregator} (${error || 'no error'})`,\n        ),\n        aggregator_recommended: bestQuote?.aggregator,\n        errors: [\n          amount?.error,\n          sendAsset?.error,\n          receiveAsset?.error,\n          swapQuotesError,\n        ].filter(Boolean),\n      };\n    } catch (error) {\n      // ensure analytics do not break the app\n      return { analyticsError: error };\n    }\n  },\n);\n","import { isNumber } from 'lodash';\nimport {\n  ALLOWED_PROD_SWAPS_CHAIN_IDS,\n  SWAPS_API_V2_BASE_URL,\n  SWAPS_CLIENT_ID,\n  SWAPS_DEV_API_V2_BASE_URL,\n} from '../../../shared/constants/swaps';\nimport { SECOND } from '../../../shared/constants/time';\nimport fetchWithCache from '../../../shared/lib/fetch-with-cache';\nimport {\n  addHexPrefixToObjectValues,\n  truthyDigitString,\n  truthyString,\n  validHex,\n  validateData,\n} from '../../../shared/lib/swaps-utils';\nimport {\n  decimalToHex,\n  hexToDecimal,\n} from '../../../shared/modules/conversion.utils';\nimport { isValidHexAddress } from '../../../shared/modules/hexstring-utils';\nimport {\n  fetchSwapsFeatureFlags,\n  getNetworkNameByChainId,\n} from '../../pages/swaps/swaps.util';\n\ntype Address = `0x${string}`;\n\nexport type Request = {\n  chainId: number; // chain ID as decimal\n  sourceAmount: string; // big number string\n  sourceToken: Address;\n  destinationToken: Address;\n  sender: Address;\n  recipient: Address;\n  slippage?: string; // slippage as a percentage; e.g. '1.0' for 1%\n};\n\nexport type Quote = {\n  gasParams: {\n    maxGas: number;\n  };\n  trade: {\n    data: string;\n    to: string;\n    from: string;\n    value: string;\n  };\n  approvalNeeded: null | {\n    data: string;\n    to: string;\n    from: string;\n    gas?: string;\n  };\n  sourceAmount: string;\n  destinationAmount: string;\n  sourceToken: string;\n  destinationToken: string;\n  sender: string;\n  recipient: string;\n  aggregator: string;\n  aggregatorType: string;\n  error: null | object;\n  fee: number;\n  // added on later\n  adjustAmountReceivedInNative?: number;\n};\n\nconst QUOTE_VALIDATORS = [\n  {\n    property: 'gasParams',\n    type: 'object',\n    validator: (gasParams: Record<string, number>) =>\n      gasParams && isNumber(gasParams.maxGas),\n  },\n  {\n    property: 'trade',\n    type: 'object',\n    validator: (trade: Record<string, string>) =>\n      trade &&\n      validHex(trade.data) &&\n      isValidHexAddress(trade.to, { allowNonPrefixed: false }) &&\n      isValidHexAddress(trade.from, { allowNonPrefixed: false }) &&\n      truthyString(trade.value),\n  },\n  {\n    property: 'approvalNeeded',\n    type: 'object',\n    validator: (approvalTx: Record<string, string>) =>\n      approvalTx === null ||\n      (approvalTx &&\n        validHex(approvalTx.data) &&\n        isValidHexAddress(approvalTx.to, { allowNonPrefixed: false }) &&\n        isValidHexAddress(approvalTx.from, { allowNonPrefixed: false })),\n  },\n  {\n    property: 'sourceAmount',\n    type: 'string',\n    validator: truthyDigitString,\n  },\n  {\n    property: 'destinationAmount',\n    type: 'string',\n    validator: truthyDigitString,\n  },\n  {\n    property: 'sourceToken',\n    type: 'string',\n    validator: (input: string) =>\n      isValidHexAddress(input, { allowNonPrefixed: false }),\n  },\n  {\n    property: 'destinationToken',\n    type: 'string',\n    validator: (input: string) =>\n      isValidHexAddress(input, { allowNonPrefixed: false }),\n  },\n  {\n    property: 'sender',\n    type: 'string',\n    validator: (input: string) =>\n      isValidHexAddress(input, { allowNonPrefixed: false }),\n  },\n  {\n    property: 'recipient',\n    type: 'string',\n    validator: (input: string) =>\n      isValidHexAddress(input, { allowNonPrefixed: false }),\n  },\n  {\n    property: 'aggregator',\n    type: 'string',\n    validator: truthyString,\n  },\n  {\n    property: 'aggregatorType',\n    type: 'string',\n    validator: truthyString,\n  },\n  {\n    property: 'error',\n    type: 'object',\n    validator: (error: unknown) => error === null || typeof error === 'object',\n  },\n  {\n    property: 'fee',\n    type: 'number',\n  },\n];\n\nconst SWAP_AND_SEND_SLIPPAGE = '2';\n\nconst SWAPS_API_VERSION = 'v2';\n\nconst BASE_URL = process.env.SWAPS_USE_DEV_APIS\n  ? SWAPS_DEV_API_V2_BASE_URL\n  : SWAPS_API_V2_BASE_URL;\n\nexport async function getSwapAndSendQuotes(request: Request): Promise<Quote[]> {\n  const { chainId, ...params } = request;\n\n  params.slippage = params.slippage ?? SWAP_AND_SEND_SLIPPAGE;\n\n  const queryString = new URLSearchParams(params);\n\n  const url = `${BASE_URL}/${SWAPS_API_VERSION}/networks/${hexToDecimal(\n    chainId,\n  )}/quotes?${queryString}`;\n\n  const tradesResponse = await fetchWithCache({\n    url,\n    fetchOptions: {\n      method: 'GET',\n      headers: { 'X-Client-Id': SWAPS_CLIENT_ID },\n    },\n    cacheOptions: { cacheRefreshTime: 0, timeout: SECOND * 15 },\n    functionName: 'getSwapAndSendQuotes',\n  });\n\n  const newQuotes = tradesResponse\n    .map((quote: Quote) => {\n      if (\n        quote.trade &&\n        !quote.error &&\n        validateData(QUOTE_VALIDATORS, quote, url)\n      ) {\n        const constructedTrade = addHexPrefixToObjectValues({\n          to: quote.trade.to,\n          from: quote.trade.from,\n          data: quote.trade.data,\n          value: decimalToHex(quote.trade.value),\n          gas: decimalToHex(quote.gasParams.maxGas),\n        });\n\n        let { approvalNeeded } = quote;\n\n        if (approvalNeeded) {\n          approvalNeeded = addHexPrefixToObjectValues(\n            approvalNeeded,\n          ) as Quote['approvalNeeded'];\n        }\n\n        return {\n          ...quote,\n          slippage: params.slippage,\n          trade: constructedTrade,\n          approvalNeeded,\n        };\n      }\n      return undefined;\n    })\n    .filter(Boolean);\n\n  return newQuotes;\n}\n\nexport async function getDisabledSwapAndSendNetworksFromAPI(): Promise<\n  string[]\n> {\n  try {\n    const blockedChains: string[] = [];\n\n    const featureFlagResponse = await fetchSwapsFeatureFlags();\n\n    ALLOWED_PROD_SWAPS_CHAIN_IDS.forEach((chainId) => {\n      // explicitly look for disabled so that chains aren't turned off accidentally\n      if (\n        featureFlagResponse[getNetworkNameByChainId(chainId)]?.v2?.swapAndSend\n          ?.enabled === false\n      ) {\n        blockedChains.push(chainId);\n      }\n    });\n\n    return blockedChains;\n  } catch (error) {\n    // assume no networks are blocked since the quotes will not be fetched on an unavailable network anyways\n    return [];\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport BigNumber from 'bignumber.js';\nimport log from 'loglevel';\n\nimport { captureMessage } from '@sentry/browser';\n\nimport { TransactionType } from '@metamask/transaction-controller';\nimport {\n  addToken,\n  addTransactionAndWaitForPublish,\n  fetchAndSetQuotes,\n  forceUpdateMetamaskState,\n  resetSwapsPostFetchState,\n  setBackgroundSwapRouteState,\n  setInitialGasEstimate,\n  setSwapsErrorKey,\n  setSwapsTxGasPrice,\n  stopPollingForQuotes,\n  resetBackgroundSwapsState,\n  setSwapsLiveness,\n  setSwapsFeatureFlags,\n  setSelectedQuoteAggId,\n  setSwapsTxGasLimit,\n  fetchSmartTransactionsLiveness,\n  signAndSendSmartTransaction,\n  updateSmartTransaction,\n  setSmartTransactionsRefreshInterval,\n  fetchSmartTransactionFees,\n  cancelSmartTransaction,\n  getTransactions,\n} from '../../store/actions';\nimport {\n  AWAITING_SIGNATURES_ROUTE,\n  AWAITING_SWAP_ROUTE,\n  BUILD_QUOTE_ROUTE,\n  LOADING_QUOTES_ROUTE,\n  SWAPS_ERROR_ROUTE,\n  SWAPS_MAINTENANCE_ROUTE,\n  SMART_TRANSACTION_STATUS_ROUTE,\n} from '../../helpers/constants/routes';\nimport {\n  fetchSwapsFeatureFlags,\n  fetchSwapsGasPrices,\n  isContractAddressValid,\n  getSwapsLivenessForNetwork,\n  parseSmartTransactionsError,\n  StxErrorTypes,\n} from '../../pages/swaps/swaps.util';\nimport {\n  addHexes,\n  decGWEIToHexWEI,\n  decimalToHex,\n  getValueFromWeiHex,\n  hexWEIToDecGWEI,\n} from '../../../shared/modules/conversion.utils';\nimport {\n  getSelectedAccount,\n  getTokenExchangeRates,\n  getUSDConversionRate,\n  getSwapsDefaultToken,\n  getCurrentChainId,\n  isHardwareWallet,\n  getHardwareWalletType,\n  checkNetworkAndAccountSupports1559,\n  getSelectedNetworkClientId,\n  getSelectedInternalAccount,\n} from '../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../shared/modules/selectors';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../shared/constants/metametrics';\nimport {\n  ERROR_FETCHING_QUOTES,\n  QUOTES_NOT_AVAILABLE_ERROR,\n  CONTRACT_DATA_DISABLED_ERROR,\n  SWAP_FAILED_ERROR,\n  SWAPS_FETCH_ORDER_CONFLICT,\n  ALLOWED_SMART_TRANSACTIONS_CHAIN_IDS,\n  Slippage,\n} from '../../../shared/constants/swaps';\nimport {\n  IN_PROGRESS_TRANSACTION_STATUSES,\n  SmartTransactionStatus,\n} from '../../../shared/constants/transaction';\nimport { getGasFeeEstimates, getTokens } from '../metamask/metamask';\nimport { ORIGIN_METAMASK } from '../../../shared/constants/app';\nimport {\n  calcGasTotal,\n  calcTokenAmount,\n} from '../../../shared/lib/transactions-controller-utils';\nimport { EtherDenomination } from '../../../shared/constants/common';\nimport { Numeric } from '../../../shared/modules/Numeric';\nimport { calculateMaxGasLimit } from '../../../shared/lib/swaps-utils';\n\nexport const GAS_PRICES_LOADING_STATES = {\n  INITIAL: 'INITIAL',\n  LOADING: 'LOADING',\n  FAILED: 'FAILED',\n  COMPLETED: 'COMPLETED',\n};\n\nconst initialState = {\n  aggregatorMetadata: null,\n  approveTxId: null,\n  tradeTxId: null,\n  balanceError: false,\n  fetchingQuotes: false,\n  fromToken: null,\n  fromTokenInputValue: '',\n  fromTokenError: null,\n  isFeatureFlagLoaded: false,\n  maxSlippage: Slippage.default,\n  quotesFetchStartTime: null,\n  reviewSwapClickedTimestamp: null,\n  topAssets: {},\n  toToken: null,\n  customGas: {\n    price: null,\n    limit: null,\n    loading: GAS_PRICES_LOADING_STATES.INITIAL,\n    priceEstimates: {},\n    fallBackPrice: null,\n  },\n  currentSmartTransactionsError: '',\n  swapsSTXLoading: false,\n  transactionSettingsOpened: false,\n  latestAddedTokenTo: '',\n};\n\nconst slice = createSlice({\n  name: 'swaps',\n  initialState,\n  reducers: {\n    clearSwapsState: () => initialState,\n    navigatedBackToBuildQuote: (state) => {\n      state.approveTxId = null;\n      state.tradeTxId = null;\n      state.balanceError = false;\n      state.fetchingQuotes = false;\n      state.customGas.limit = null;\n      state.customGas.price = null;\n    },\n    retriedGetQuotes: (state) => {\n      state.approveTxId = null;\n      state.balanceError = false;\n      state.fetchingQuotes = false;\n    },\n    setAggregatorMetadata: (state, action) => {\n      state.aggregatorMetadata = action.payload;\n    },\n    setBalanceError: (state, action) => {\n      state.balanceError = action.payload;\n    },\n    setFetchingQuotes: (state, action) => {\n      state.fetchingQuotes = action.payload;\n    },\n    setLatestAddedTokenTo: (state, action) => {\n      state.latestAddedTokenTo = action.payload;\n    },\n    setFromToken: (state, action) => {\n      state.fromToken = action.payload;\n    },\n    setFromTokenInputValue: (state, action) => {\n      state.fromTokenInputValue = action.payload;\n    },\n    setFromTokenError: (state, action) => {\n      state.fromTokenError = action.payload;\n    },\n    setIsFeatureFlagLoaded: (state, action) => {\n      state.isFeatureFlagLoaded = action.payload;\n    },\n    setMaxSlippage: (state, action) => {\n      state.maxSlippage = action.payload;\n    },\n    setQuotesFetchStartTime: (state, action) => {\n      state.quotesFetchStartTime = action.payload;\n    },\n    setReviewSwapClickedTimestamp: (state, action) => {\n      state.reviewSwapClickedTimestamp = action.payload;\n    },\n    setTopAssets: (state, action) => {\n      state.topAssets = action.payload;\n    },\n    setToToken: (state, action) => {\n      state.toToken = action.payload;\n    },\n    swapCustomGasModalClosed: (state) => {\n      state.customGas.price = null;\n      state.customGas.limit = null;\n    },\n    swapCustomGasModalPriceEdited: (state, action) => {\n      state.customGas.price = action.payload;\n    },\n    swapCustomGasModalLimitEdited: (state, action) => {\n      state.customGas.limit = action.payload;\n    },\n    swapGasPriceEstimatesFetchStarted: (state) => {\n      state.customGas.loading = GAS_PRICES_LOADING_STATES.LOADING;\n    },\n    swapGasPriceEstimatesFetchFailed: (state) => {\n      state.customGas.loading = GAS_PRICES_LOADING_STATES.FAILED;\n    },\n    swapGasPriceEstimatesFetchCompleted: (state, action) => {\n      state.customGas.priceEstimates = action.payload.priceEstimates;\n      state.customGas.loading = GAS_PRICES_LOADING_STATES.COMPLETED;\n    },\n    retrievedFallbackSwapsGasPrice: (state, action) => {\n      state.customGas.fallBackPrice = action.payload;\n    },\n    setCurrentSmartTransactionsError: (state, action) => {\n      const isValidCurrentStxError =\n        Object.values(StxErrorTypes).includes(action.payload) ||\n        action.payload === undefined;\n      const errorType = isValidCurrentStxError\n        ? action.payload\n        : StxErrorTypes.unavailable;\n      state.currentSmartTransactionsError = errorType;\n    },\n    setSwapsSTXSubmitLoading: (state, action) => {\n      state.swapsSTXLoading = action.payload || false;\n    },\n    setTransactionSettingsOpened: (state, action) => {\n      state.transactionSettingsOpened = Boolean(action.payload);\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\n\nexport default reducer;\n\n// Selectors\n\nexport const getAggregatorMetadata = (state) => state.swaps.aggregatorMetadata;\n\nexport const getBalanceError = (state) => state.swaps.balanceError;\n\nexport const getFromToken = (state) => state.swaps.fromToken;\n\nexport const getFromTokenError = (state) => state.swaps.fromTokenError;\n\nexport const getFromTokenInputValue = (state) =>\n  state.swaps.fromTokenInputValue;\n\nexport const getIsFeatureFlagLoaded = (state) =>\n  state.swaps.isFeatureFlagLoaded;\n\nexport const getSwapsSTXLoading = (state) => state.swaps.swapsSTXLoading;\n\nexport const getMaxSlippage = (state) => state.swaps.maxSlippage;\n\nexport const getTopAssets = (state) => state.swaps.topAssets;\n\nexport const getToToken = (state) => state.swaps.toToken;\n\nexport const getFetchingQuotes = (state) => state.swaps.fetchingQuotes;\n\nexport const getLatestAddedTokenTo = (state) => state.swaps.latestAddedTokenTo;\n\nexport const getQuotesFetchStartTime = (state) =>\n  state.swaps.quotesFetchStartTime;\n\nexport const getReviewSwapClickedTimestamp = (state) =>\n  state.swaps.reviewSwapClickedTimestamp;\n\nexport const getSwapsCustomizationModalPrice = (state) =>\n  state.swaps.customGas.price;\n\nexport const getSwapsCustomizationModalLimit = (state) =>\n  state.swaps.customGas.limit;\n\nexport const swapGasPriceEstimateIsLoading = (state) =>\n  state.swaps.customGas.loading === GAS_PRICES_LOADING_STATES.LOADING;\n\nexport const swapGasEstimateLoadingHasFailed = (state) =>\n  state.swaps.customGas.loading === GAS_PRICES_LOADING_STATES.INITIAL;\n\nexport const getSwapGasPriceEstimateData = (state) =>\n  state.swaps.customGas.priceEstimates;\n\nexport const getSwapsFallbackGasPrice = (state) =>\n  state.swaps.customGas.fallBackPrice;\n\nexport const getCurrentSmartTransactionsError = (state) =>\n  state.swaps.currentSmartTransactionsError;\n\nexport const getTransactionSettingsOpened = (state) =>\n  state.swaps.transactionSettingsOpened;\n\nexport function shouldShowCustomPriceTooLowWarning(state) {\n  const { average } = getSwapGasPriceEstimateData(state);\n\n  const customGasPrice = getSwapsCustomizationModalPrice(state);\n\n  if (!customGasPrice || average === undefined) {\n    return false;\n  }\n\n  const customPriceRisksSwapFailure = new Numeric(\n    customGasPrice,\n    16,\n    EtherDenomination.WEI,\n  )\n    .toDenomination(EtherDenomination.GWEI)\n    .greaterThan(average, 10);\n\n  return customPriceRisksSwapFailure;\n}\n\n// Background selectors\n\nconst getSwapsState = (state) => state.metamask.swapsState;\n\nexport const getSwapsFeatureIsLive = (state) =>\n  state.metamask.swapsState.swapsFeatureIsLive;\n\nexport const getSmartTransactionsError = (state) =>\n  state.appState.smartTransactionsError;\n\nexport const getSmartTransactionsErrorMessageDismissed = (state) =>\n  state.appState.smartTransactionsErrorMessageDismissed;\n\nexport const getCurrentSmartTransactionsEnabled = (state) => {\n  const smartTransactionsEnabled = getSmartTransactionsEnabled(state);\n  const currentSmartTransactionsError = getCurrentSmartTransactionsError(state);\n  return smartTransactionsEnabled && !currentSmartTransactionsError;\n};\n\nexport const getSwapRedesignEnabled = (state) => {\n  const swapRedesign =\n    state.metamask.swapsState?.swapsFeatureFlags?.swapRedesign;\n  if (swapRedesign === undefined) {\n    return true; // By default show the redesign if we don't have feature flags returned yet.\n  }\n  return swapRedesign.extensionActive;\n};\n\nexport const getSwapsQuoteRefreshTime = (state) =>\n  state.metamask.swapsState.swapsQuoteRefreshTime;\n\nexport const getSwapsQuotePrefetchingRefreshTime = (state) =>\n  state.metamask.swapsState.swapsQuotePrefetchingRefreshTime;\n\nexport const getBackgroundSwapRouteState = (state) =>\n  state.metamask.swapsState.routeState;\n\nexport const getCustomSwapsGas = (state) =>\n  state.metamask.swapsState.customMaxGas;\n\nexport const getCustomSwapsGasPrice = (state) =>\n  state.metamask.swapsState.customGasPrice;\n\nexport const getCustomMaxFeePerGas = (state) =>\n  state.metamask.swapsState.customMaxFeePerGas;\n\nexport const getCustomMaxPriorityFeePerGas = (state) =>\n  state.metamask.swapsState.customMaxPriorityFeePerGas;\n\nexport const getSwapsUserFeeLevel = (state) =>\n  state.metamask.swapsState.swapsUserFeeLevel;\n\nexport const getFetchParams = (state) => state.metamask.swapsState.fetchParams;\n\nexport const getQuotes = (state) => state.metamask.swapsState.quotes;\n\nexport const getQuotesLastFetched = (state) =>\n  state.metamask.swapsState.quotesLastFetched;\n\nexport const getSelectedQuote = (state) => {\n  const { selectedAggId, quotes } = getSwapsState(state);\n  return quotes[selectedAggId];\n};\n\nexport const getSwapsErrorKey = (state) => getSwapsState(state)?.errorKey;\n\nexport const getShowQuoteLoadingScreen = (state) =>\n  state.swaps.showQuoteLoadingScreen;\n\nexport const getSwapsTokens = (state) => state.metamask.swapsState.tokens;\n\nexport const getSwapsWelcomeMessageSeenStatus = (state) =>\n  state.metamask.swapsWelcomeMessageHasBeenShown;\n\nexport const getTopQuote = (state) => {\n  const { topAggId, quotes } = getSwapsState(state);\n  return quotes[topAggId];\n};\n\nexport const getApproveTxId = (state) => state.metamask.swapsState.approveTxId;\n\nexport const getTradeTxId = (state) => state.metamask.swapsState.tradeTxId;\n\nexport const getUsedQuote = (state) =>\n  getSelectedQuote(state) || getTopQuote(state);\n\n// Compound selectors\n\nexport const getDestinationTokenInfo = (state) =>\n  getFetchParams(state)?.metaData?.destinationTokenInfo;\n\nexport const getUsedSwapsGasPrice = (state) =>\n  getCustomSwapsGasPrice(state) || getSwapsFallbackGasPrice(state);\n\nexport const getApproveTxParams = (state) => {\n  const { approvalNeeded } =\n    getSelectedQuote(state) || getTopQuote(state) || {};\n\n  if (!approvalNeeded) {\n    return null;\n  }\n  const data = getSwapsState(state)?.customApproveTxData || approvalNeeded.data;\n\n  const gasPrice = getUsedSwapsGasPrice(state);\n  return { ...approvalNeeded, gasPrice, data };\n};\n\nexport const getCurrentSmartTransactions = (state) => {\n  return state.metamask.smartTransactionsState?.smartTransactions?.[\n    getCurrentChainId(state)\n  ];\n};\n\nexport const getPendingSmartTransactions = (state) => {\n  const currentSmartTransactions = getCurrentSmartTransactions(state);\n  if (!currentSmartTransactions || currentSmartTransactions.length === 0) {\n    return [];\n  }\n  return currentSmartTransactions.filter(\n    (stx) => stx.status === SmartTransactionStatus.pending,\n  );\n};\n\nexport const getSmartTransactionFees = (state) => {\n  return state.metamask.smartTransactionsState?.fees;\n};\n\nexport const getSmartTransactionEstimatedGas = (state) => {\n  return state.metamask.smartTransactionsState?.estimatedGas;\n};\n\nexport const getSwapsNetworkConfig = (state) => {\n  const {\n    swapsQuoteRefreshTime,\n    swapsQuotePrefetchingRefreshTime,\n    swapsStxGetTransactionsRefreshTime,\n    swapsStxBatchStatusRefreshTime,\n    swapsStxStatusDeadline,\n    swapsStxMaxFeeMultiplier,\n  } = state.metamask.swapsState;\n  return {\n    quoteRefreshTime: swapsQuoteRefreshTime,\n    quotePrefetchingRefreshTime: swapsQuotePrefetchingRefreshTime,\n    stxGetTransactionsRefreshTime: swapsStxGetTransactionsRefreshTime,\n    stxBatchStatusRefreshTime: swapsStxBatchStatusRefreshTime,\n    stxStatusDeadline: swapsStxStatusDeadline,\n    stxMaxFeeMultiplier: swapsStxMaxFeeMultiplier,\n  };\n};\n\n// Actions / action-creators\n\nconst {\n  clearSwapsState,\n  navigatedBackToBuildQuote,\n  retriedGetQuotes,\n  swapGasPriceEstimatesFetchCompleted,\n  swapGasPriceEstimatesFetchStarted,\n  swapGasPriceEstimatesFetchFailed,\n  setAggregatorMetadata,\n  setBalanceError,\n  setFetchingQuotes,\n  setLatestAddedTokenTo,\n  setFromToken,\n  setFromTokenError,\n  setFromTokenInputValue,\n  setIsFeatureFlagLoaded,\n  setMaxSlippage,\n  setQuotesFetchStartTime,\n  setReviewSwapClickedTimestamp,\n  setTopAssets,\n  setToToken,\n  swapCustomGasModalPriceEdited,\n  swapCustomGasModalLimitEdited,\n  retrievedFallbackSwapsGasPrice,\n  swapCustomGasModalClosed,\n  setCurrentSmartTransactionsError,\n  setSwapsSTXSubmitLoading,\n  setTransactionSettingsOpened,\n} = actions;\n\nexport {\n  clearSwapsState,\n  setAggregatorMetadata,\n  setBalanceError,\n  setFetchingQuotes,\n  setLatestAddedTokenTo,\n  setFromToken as setSwapsFromToken,\n  setFromTokenError,\n  setFromTokenInputValue,\n  setIsFeatureFlagLoaded,\n  setMaxSlippage,\n  setQuotesFetchStartTime as setSwapQuotesFetchStartTime,\n  setReviewSwapClickedTimestamp,\n  setTopAssets,\n  setToToken as setSwapToToken,\n  swapCustomGasModalPriceEdited,\n  swapCustomGasModalLimitEdited,\n  swapCustomGasModalClosed,\n  setTransactionSettingsOpened,\n  slice as swapsSlice,\n};\n\nexport const navigateBackToBuildQuote = (history) => {\n  return async (dispatch) => {\n    // TODO: Ensure any fetch in progress is cancelled\n    await dispatch(setBackgroundSwapRouteState(''));\n    dispatch(navigatedBackToBuildQuote());\n    history.push(BUILD_QUOTE_ROUTE);\n  };\n};\n\nexport const prepareForRetryGetQuotes = () => {\n  return async (dispatch) => {\n    // TODO: Ensure any fetch in progress is cancelled\n    await dispatch(resetSwapsPostFetchState());\n    dispatch(retriedGetQuotes());\n  };\n};\n\nexport const prepareToLeaveSwaps = () => {\n  return async (dispatch) => {\n    dispatch(clearSwapsState());\n    await dispatch(resetBackgroundSwapsState());\n  };\n};\n\nexport const swapsQuoteSelected = (aggId) => {\n  return (dispatch) => {\n    dispatch(swapCustomGasModalLimitEdited(null));\n    dispatch(setSelectedQuoteAggId(aggId));\n    dispatch(setSwapsTxGasLimit(''));\n  };\n};\n\nexport const fetchAndSetSwapsGasPriceInfo = () => {\n  return async (dispatch) => {\n    const basicEstimates = await dispatch(fetchMetaSwapsGasPriceEstimates());\n\n    if (basicEstimates?.fast) {\n      dispatch(setSwapsTxGasPrice(decGWEIToHexWEI(basicEstimates.fast)));\n    }\n  };\n};\n\nconst disableStxIfRegularTxInProgress = (dispatch, transactions) => {\n  if (transactions?.length <= 0) {\n    return;\n  }\n  for (const transaction of transactions) {\n    if (IN_PROGRESS_TRANSACTION_STATUSES.includes(transaction.status)) {\n      dispatch(\n        setCurrentSmartTransactionsError(StxErrorTypes.regularTxPending),\n      );\n      break;\n    }\n  }\n};\n\nexport const fetchSwapsLivenessAndFeatureFlags = () => {\n  return async (dispatch, getState) => {\n    let swapsLivenessForNetwork = {\n      swapsFeatureIsLive: false,\n    };\n    const state = getState();\n    const chainId = getCurrentChainId(state);\n    try {\n      const swapsFeatureFlags = await fetchSwapsFeatureFlags();\n      await dispatch(setSwapsFeatureFlags(swapsFeatureFlags));\n      if (ALLOWED_SMART_TRANSACTIONS_CHAIN_IDS.includes(chainId)) {\n        await dispatch(setCurrentSmartTransactionsError(undefined));\n        await dispatch(fetchSmartTransactionsLiveness());\n        const transactions = await getTransactions({\n          searchCriteria: {\n            from: getSelectedInternalAccount(state)?.address,\n          },\n        });\n        disableStxIfRegularTxInProgress(dispatch, transactions);\n      }\n      swapsLivenessForNetwork = getSwapsLivenessForNetwork(\n        chainId,\n        swapsFeatureFlags,\n      );\n    } catch (error) {\n      log.error(\n        'Failed to fetch Swaps feature flags and Swaps liveness, defaulting to false.',\n        error,\n      );\n    }\n    await dispatch(setSwapsLiveness(swapsLivenessForNetwork));\n    dispatch(setIsFeatureFlagLoaded(true));\n    return swapsLivenessForNetwork;\n  };\n};\n\nconst isTokenAlreadyAdded = (tokenAddress, tokens) => {\n  if (!Array.isArray(tokens)) {\n    return false;\n  }\n  return tokens.find(\n    (token) => token.address.toLowerCase() === tokenAddress.toLowerCase(),\n  );\n};\n\nexport const fetchQuotesAndSetQuoteState = (\n  history,\n  inputValue,\n  maxSlippage,\n  trackEvent,\n  pageRedirectionDisabled,\n) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const chainId = getCurrentChainId(state);\n    let swapsLivenessForNetwork = {\n      swapsFeatureIsLive: false,\n    };\n    try {\n      const swapsFeatureFlags = await fetchSwapsFeatureFlags();\n      swapsLivenessForNetwork = getSwapsLivenessForNetwork(\n        chainId,\n        swapsFeatureFlags,\n      );\n    } catch (error) {\n      log.error('Failed to fetch Swaps liveness, defaulting to false.', error);\n    }\n    await dispatch(setSwapsLiveness(swapsLivenessForNetwork));\n\n    if (!swapsLivenessForNetwork.swapsFeatureIsLive) {\n      await history.push(SWAPS_MAINTENANCE_ROUTE);\n      return;\n    }\n\n    const fetchParams = getFetchParams(state);\n    const selectedAccount = getSelectedAccount(state);\n    const networkClientId = getSelectedNetworkClientId(state);\n    const balanceError = getBalanceError(state);\n    const swapsDefaultToken = getSwapsDefaultToken(state);\n    const fetchParamsFromToken =\n      fetchParams?.metaData?.sourceTokenInfo?.symbol ===\n      swapsDefaultToken.symbol\n        ? swapsDefaultToken\n        : fetchParams?.metaData?.sourceTokenInfo;\n    const selectedFromToken = getFromToken(state) || fetchParamsFromToken || {};\n    const selectedToToken =\n      getToToken(state) || fetchParams?.metaData?.destinationTokenInfo || {};\n    const {\n      address: fromTokenAddress,\n      symbol: fromTokenSymbol,\n      decimals: fromTokenDecimals,\n      iconUrl: fromTokenIconUrl,\n      balance: fromTokenBalance,\n    } = selectedFromToken;\n    const {\n      address: toTokenAddress,\n      symbol: toTokenSymbol,\n      decimals: toTokenDecimals,\n      iconUrl: toTokenIconUrl,\n    } = selectedToToken;\n    // pageRedirectionDisabled is true if quotes prefetching is active (a user is on the Build Quote page).\n    // In that case we just want to silently prefetch quotes without redirecting to the quotes loading page.\n    if (!pageRedirectionDisabled) {\n      await dispatch(setBackgroundSwapRouteState('loading'));\n      history.push(LOADING_QUOTES_ROUTE);\n    }\n    dispatch(setFetchingQuotes(true));\n\n    const contractExchangeRates = getTokenExchangeRates(state);\n\n    if (\n      toTokenAddress &&\n      toTokenSymbol !== swapsDefaultToken.symbol &&\n      contractExchangeRates[toTokenAddress] === undefined &&\n      !isTokenAlreadyAdded(toTokenAddress, getTokens(state))\n    ) {\n      await dispatch(\n        addToken(\n          {\n            address: toTokenAddress,\n            symbol: toTokenSymbol,\n            decimals: toTokenDecimals,\n            image: toTokenIconUrl,\n            networkClientId,\n          },\n          true,\n        ),\n      );\n      await dispatch(setLatestAddedTokenTo(toTokenAddress));\n    } else {\n      const latestAddedTokenTo = getLatestAddedTokenTo(state);\n      // Only reset the latest added Token To if it's a different token.\n      if (latestAddedTokenTo !== toTokenAddress) {\n        await dispatch(setLatestAddedTokenTo(''));\n      }\n    }\n\n    if (\n      fromTokenAddress &&\n      fromTokenSymbol !== swapsDefaultToken.symbol &&\n      !contractExchangeRates[fromTokenAddress] &&\n      fromTokenBalance &&\n      new BigNumber(fromTokenBalance, 16).gt(0)\n    ) {\n      dispatch(\n        addToken(\n          {\n            address: fromTokenAddress,\n            symbol: fromTokenSymbol,\n            decimals: fromTokenDecimals,\n            image: fromTokenIconUrl,\n            networkClientId,\n          },\n          true,\n        ),\n      );\n    }\n\n    const swapsTokens = getSwapsTokens(state);\n\n    const sourceTokenInfo =\n      swapsTokens?.find(({ address }) => address === fromTokenAddress) ||\n      selectedFromToken;\n    const destinationTokenInfo =\n      swapsTokens?.find(({ address }) => address === toTokenAddress) ||\n      selectedToToken;\n\n    dispatch(setFromToken(selectedFromToken));\n\n    const hardwareWalletUsed = isHardwareWallet(state);\n    const hardwareWalletType = getHardwareWalletType(state);\n    const networkAndAccountSupports1559 =\n      checkNetworkAndAccountSupports1559(state);\n    const smartTransactionsOptInStatus = getSmartTransactionsOptInStatus(state);\n    const smartTransactionsEnabled = getSmartTransactionsEnabled(state);\n    const currentSmartTransactionsEnabled =\n      getCurrentSmartTransactionsEnabled(state);\n    trackEvent({\n      event: 'Quotes Requested',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        token_from: fromTokenSymbol,\n        token_from_amount: String(inputValue),\n        token_to: toTokenSymbol,\n        request_type: balanceError ? 'Quote' : 'Order',\n        slippage: maxSlippage,\n        custom_slippage: maxSlippage !== Slippage.default,\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n        anonymizedData: true,\n      },\n    });\n\n    try {\n      const fetchStartTime = Date.now();\n      dispatch(setQuotesFetchStartTime(fetchStartTime));\n\n      const fetchAndSetQuotesPromise = dispatch(\n        fetchAndSetQuotes(\n          {\n            slippage: maxSlippage,\n            sourceToken: fromTokenAddress,\n            destinationToken: toTokenAddress,\n            value: inputValue,\n            fromAddress: selectedAccount.address,\n            balanceError,\n            sourceDecimals: fromTokenDecimals,\n          },\n          {\n            sourceTokenInfo,\n            destinationTokenInfo,\n            accountBalance: selectedAccount.balance,\n            chainId,\n          },\n        ),\n      );\n\n      const gasPriceFetchPromise = networkAndAccountSupports1559\n        ? null // For EIP 1559 we can get gas prices via \"useGasFeeEstimates\".\n        : dispatch(fetchAndSetSwapsGasPriceInfo());\n\n      const [[fetchedQuotes, selectedAggId]] = await Promise.all([\n        fetchAndSetQuotesPromise,\n        gasPriceFetchPromise,\n      ]);\n\n      if (Object.values(fetchedQuotes)?.length === 0) {\n        trackEvent({\n          event: 'No Quotes Available',\n          category: MetaMetricsEventCategory.Swaps,\n          sensitiveProperties: {\n            token_from: fromTokenSymbol,\n            token_from_amount: String(inputValue),\n            token_to: toTokenSymbol,\n            request_type: balanceError ? 'Quote' : 'Order',\n            slippage: maxSlippage,\n            custom_slippage: maxSlippage !== Slippage.default,\n            is_hardware_wallet: hardwareWalletUsed,\n            hardware_wallet_type: hardwareWalletType,\n            stx_enabled: smartTransactionsEnabled,\n            current_stx_enabled: currentSmartTransactionsEnabled,\n            stx_user_opt_in: smartTransactionsOptInStatus,\n          },\n        });\n        dispatch(setSwapsErrorKey(QUOTES_NOT_AVAILABLE_ERROR));\n      } else {\n        const newSelectedQuote = fetchedQuotes[selectedAggId];\n\n        const tokenToAmountBN = calcTokenAmount(\n          newSelectedQuote.destinationAmount,\n          newSelectedQuote.decimals || 18,\n        );\n\n        // Firefox and Chrome have different implementations of the APIs\n        // that we rely on for communication accross the app. On Chrome big\n        // numbers are converted into number strings, on firefox they remain\n        // Big Number objects. As such, we convert them here for both\n        // browsers.\n        const tokenToAmountToString = tokenToAmountBN.toString(10);\n\n        trackEvent({\n          event: 'Quotes Received',\n          category: MetaMetricsEventCategory.Swaps,\n          sensitiveProperties: {\n            token_from: fromTokenSymbol,\n            token_from_amount: String(inputValue),\n            token_to: toTokenSymbol,\n            token_to_amount: tokenToAmountToString,\n            request_type: balanceError ? 'Quote' : 'Order',\n            slippage: maxSlippage,\n            custom_slippage: maxSlippage !== Slippage.default,\n            response_time: Date.now() - fetchStartTime,\n            best_quote_source: newSelectedQuote.aggregator,\n            available_quotes: Object.values(fetchedQuotes)?.length,\n            is_hardware_wallet: hardwareWalletUsed,\n            hardware_wallet_type: hardwareWalletType,\n            stx_enabled: smartTransactionsEnabled,\n            current_stx_enabled: currentSmartTransactionsEnabled,\n            stx_user_opt_in: smartTransactionsOptInStatus,\n            anonymizedData: true,\n          },\n        });\n\n        dispatch(setInitialGasEstimate(selectedAggId));\n      }\n    } catch (e) {\n      // A newer swap request is running, so simply bail and let the newer request respond\n      if (e.message === SWAPS_FETCH_ORDER_CONFLICT) {\n        log.debug(`Swap fetch order conflict detected; ignoring older request`);\n        return;\n      }\n      // TODO: Check for any errors we should expect to occur in production, and report others to Sentry\n      log.error(`Error fetching quotes: `, e);\n\n      dispatch(setSwapsErrorKey(ERROR_FETCHING_QUOTES));\n    }\n\n    dispatch(setFetchingQuotes(false));\n  };\n};\n\nexport const signAndSendSwapsSmartTransaction = ({\n  unsignedTransaction,\n  trackEvent,\n  history,\n  additionalTrackingParams,\n}) => {\n  return async (dispatch, getState) => {\n    dispatch(setSwapsSTXSubmitLoading(true));\n    const state = getState();\n    const fetchParams = getFetchParams(state);\n    const hardwareWalletUsed = isHardwareWallet(state);\n    const hardwareWalletType = getHardwareWalletType(state);\n    const { metaData, value: swapTokenValue, slippage } = fetchParams;\n    const { sourceTokenInfo = {}, destinationTokenInfo = {} } = metaData;\n    const usedQuote = getUsedQuote(state);\n    const swapsNetworkConfig = getSwapsNetworkConfig(state);\n    const chainId = getCurrentChainId(state);\n\n    dispatch(\n      setSmartTransactionsRefreshInterval(\n        swapsNetworkConfig?.stxBatchStatusRefreshTime,\n      ),\n    );\n\n    const usedTradeTxParams = usedQuote.trade;\n\n    // update stx with data\n    const destinationValue = calcTokenAmount(\n      usedQuote.destinationAmount,\n      destinationTokenInfo.decimals || 18,\n    ).toPrecision(8);\n    const smartTransactionsOptInStatus = getSmartTransactionsOptInStatus(state);\n    const smartTransactionsEnabled = getSmartTransactionsEnabled(state);\n    const currentSmartTransactionsEnabled =\n      getCurrentSmartTransactionsEnabled(state);\n    const swapMetaData = {\n      token_from: sourceTokenInfo.symbol,\n      token_from_amount: String(swapTokenValue),\n      token_to: destinationTokenInfo.symbol,\n      token_to_amount: destinationValue,\n      slippage,\n      custom_slippage: slippage !== 2,\n      best_quote_source: getTopQuote(state)?.aggregator,\n      available_quotes: getQuotes(state)?.length,\n      other_quote_selected:\n        usedQuote.aggregator !== getTopQuote(state)?.aggregator,\n      other_quote_selected_source:\n        usedQuote.aggregator === getTopQuote(state)?.aggregator\n          ? ''\n          : usedQuote.aggregator,\n      average_savings: usedQuote.savings?.total,\n      performance_savings: usedQuote.savings?.performance,\n      fee_savings: usedQuote.savings?.fee,\n      median_metamask_fee: usedQuote.savings?.medianMetaMaskFee,\n      is_hardware_wallet: hardwareWalletUsed,\n      hardware_wallet_type: hardwareWalletType,\n      stx_enabled: smartTransactionsEnabled,\n      current_stx_enabled: currentSmartTransactionsEnabled,\n      stx_user_opt_in: smartTransactionsOptInStatus,\n      ...additionalTrackingParams,\n    };\n    trackEvent({\n      event: 'STX Swap Started',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: swapMetaData,\n    });\n\n    if (!isContractAddressValid(usedTradeTxParams.to, chainId)) {\n      captureMessage('Invalid contract address', {\n        extra: {\n          token_from: swapMetaData.token_from,\n          token_to: swapMetaData.token_to,\n          contract_address: usedTradeTxParams.to,\n        },\n      });\n      await dispatch(setSwapsErrorKey(SWAP_FAILED_ERROR));\n      history.push(SWAPS_ERROR_ROUTE);\n      return;\n    }\n\n    const approveTxParams = getApproveTxParams(state);\n    let approvalTxUuid;\n    let updatedApproveTxParams;\n    try {\n      if (approveTxParams) {\n        updatedApproveTxParams = {\n          ...approveTxParams,\n          value: '0x0',\n        };\n      }\n      const fees = await dispatch(\n        fetchSwapsSmartTransactionFees({\n          unsignedTransaction,\n          approveTxParams: updatedApproveTxParams,\n          fallbackOnNotEnoughFunds: true,\n        }),\n      );\n      if (!fees) {\n        log.error('\"fetchSwapsSmartTransactionFees\" failed');\n        dispatch(setSwapsSTXSubmitLoading(false));\n        dispatch(setCurrentSmartTransactionsError(StxErrorTypes.unavailable));\n        return;\n      }\n      if (approveTxParams) {\n        updatedApproveTxParams.gas = `0x${decimalToHex(\n          fees.approvalTxFees?.gasLimit || 0,\n        )}`;\n        updatedApproveTxParams.chainId = chainId;\n        approvalTxUuid = await dispatch(\n          signAndSendSmartTransaction({\n            unsignedTransaction: updatedApproveTxParams,\n            smartTransactionFees: fees.approvalTxFees,\n          }),\n        );\n      }\n      unsignedTransaction.gas = `0x${decimalToHex(\n        fees.tradeTxFees?.gasLimit || 0,\n      )}`;\n      unsignedTransaction.chainId = chainId;\n      const uuid = await dispatch(\n        signAndSendSmartTransaction({\n          unsignedTransaction,\n          smartTransactionFees: fees.tradeTxFees,\n        }),\n      );\n\n      const destinationTokenAddress = destinationTokenInfo.address;\n      const destinationTokenDecimals = destinationTokenInfo.decimals;\n      const destinationTokenSymbol = destinationTokenInfo.symbol;\n      const sourceTokenSymbol = sourceTokenInfo.symbol;\n      await dispatch(\n        updateSmartTransaction(uuid, {\n          origin: ORIGIN_METAMASK,\n          destinationTokenAddress,\n          destinationTokenDecimals,\n          destinationTokenSymbol,\n          sourceTokenSymbol,\n          swapMetaData,\n          swapTokenValue,\n          type: TransactionType.swap,\n        }),\n      );\n      if (approvalTxUuid) {\n        await dispatch(\n          updateSmartTransaction(approvalTxUuid, {\n            origin: ORIGIN_METAMASK,\n            type: TransactionType.swapApproval,\n            sourceTokenSymbol,\n          }),\n        );\n      }\n      history.push(SMART_TRANSACTION_STATUS_ROUTE);\n      dispatch(setSwapsSTXSubmitLoading(false));\n    } catch (e) {\n      console.log('signAndSendSwapsSmartTransaction error', e);\n      dispatch(setSwapsSTXSubmitLoading(false));\n      const {\n        swaps: { isFeatureFlagLoaded },\n      } = getState();\n      if (e.message.startsWith('Fetch error:') && isFeatureFlagLoaded) {\n        const errorObj = parseSmartTransactionsError(e.message);\n        dispatch(setCurrentSmartTransactionsError(errorObj?.error));\n      }\n    }\n  };\n};\n\nexport const signAndSendTransactions = (\n  history,\n  trackEvent,\n  additionalTrackingParams,\n) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const chainId = getCurrentChainId(state);\n    const hardwareWalletUsed = isHardwareWallet(state);\n    const networkAndAccountSupports1559 =\n      checkNetworkAndAccountSupports1559(state);\n    let swapsLivenessForNetwork = {\n      swapsFeatureIsLive: false,\n    };\n    try {\n      const swapsFeatureFlags = await fetchSwapsFeatureFlags();\n      swapsLivenessForNetwork = getSwapsLivenessForNetwork(\n        chainId,\n        swapsFeatureFlags,\n      );\n    } catch (error) {\n      log.error('Failed to fetch Swaps liveness, defaulting to false.', error);\n    }\n    await dispatch(setSwapsLiveness(swapsLivenessForNetwork));\n\n    if (!swapsLivenessForNetwork.swapsFeatureIsLive) {\n      await history.push(SWAPS_MAINTENANCE_ROUTE);\n      return;\n    }\n\n    const customSwapsGas = getCustomSwapsGas(state);\n    const customMaxFeePerGas = getCustomMaxFeePerGas(state);\n    const customMaxPriorityFeePerGas = getCustomMaxPriorityFeePerGas(state);\n    const fetchParams = getFetchParams(state);\n    const { metaData, value: swapTokenValue, slippage } = fetchParams;\n    const { sourceTokenInfo = {}, destinationTokenInfo = {} } = metaData;\n    await dispatch(setBackgroundSwapRouteState('awaiting'));\n    await dispatch(stopPollingForQuotes());\n\n    if (!hardwareWalletUsed) {\n      history.push(AWAITING_SWAP_ROUTE);\n    }\n\n    const { fast: fastGasEstimate } = getSwapGasPriceEstimateData(state);\n\n    let maxFeePerGas;\n    let maxPriorityFeePerGas;\n    let baseAndPriorityFeePerGas;\n    let decEstimatedBaseFee;\n\n    if (networkAndAccountSupports1559) {\n      const {\n        high: { suggestedMaxFeePerGas, suggestedMaxPriorityFeePerGas },\n        estimatedBaseFee = '0',\n      } = getGasFeeEstimates(state);\n      decEstimatedBaseFee = decGWEIToHexWEI(estimatedBaseFee);\n      maxFeePerGas =\n        customMaxFeePerGas || decGWEIToHexWEI(suggestedMaxFeePerGas);\n      maxPriorityFeePerGas =\n        customMaxPriorityFeePerGas ||\n        decGWEIToHexWEI(suggestedMaxPriorityFeePerGas);\n      baseAndPriorityFeePerGas = addHexes(\n        decEstimatedBaseFee,\n        maxPriorityFeePerGas,\n      );\n    }\n\n    const usedQuote = getUsedQuote(state);\n    const usedTradeTxParams = usedQuote.trade;\n\n    const estimatedGasLimit = new BigNumber(usedQuote?.gasEstimate || 0, 16)\n      .round(0)\n      .toString(16);\n\n    const maxGasLimit = calculateMaxGasLimit(\n      usedQuote?.gasEstimate,\n      usedQuote?.gasMultiplier,\n      usedQuote?.maxGas,\n      customSwapsGas,\n    );\n\n    const usedGasPrice = getUsedSwapsGasPrice(state);\n    usedTradeTxParams.gas = maxGasLimit;\n    if (networkAndAccountSupports1559) {\n      usedTradeTxParams.maxFeePerGas = maxFeePerGas;\n      usedTradeTxParams.maxPriorityFeePerGas = maxPriorityFeePerGas;\n      delete usedTradeTxParams.gasPrice;\n    } else {\n      usedTradeTxParams.gasPrice = usedGasPrice;\n    }\n\n    const usdConversionRate = getUSDConversionRate(state);\n    const destinationValue = calcTokenAmount(\n      usedQuote.destinationAmount,\n      destinationTokenInfo.decimals || 18,\n    ).toPrecision(8);\n    const usedGasLimitEstimate =\n      usedQuote?.gasEstimateWithRefund ||\n      `0x${decimalToHex(usedQuote?.averageGas || 0)}`;\n    const totalGasLimitEstimate = new BigNumber(usedGasLimitEstimate, 16)\n      .plus(usedQuote.approvalNeeded?.gas || '0x0', 16)\n      .toString(16);\n    const gasEstimateTotalInUSD = getValueFromWeiHex({\n      value: calcGasTotal(\n        totalGasLimitEstimate,\n        networkAndAccountSupports1559 ? baseAndPriorityFeePerGas : usedGasPrice,\n      ),\n      toCurrency: 'usd',\n      conversionRate: usdConversionRate,\n      numberOfDecimals: 6,\n    });\n    const smartTransactionsOptInStatus = getSmartTransactionsOptInStatus(state);\n    const smartTransactionsEnabled = getSmartTransactionsEnabled(state);\n    const currentSmartTransactionsEnabled =\n      getCurrentSmartTransactionsEnabled(state);\n    const swapMetaData = {\n      token_from: sourceTokenInfo.symbol,\n      token_from_amount: String(swapTokenValue),\n      token_to: destinationTokenInfo.symbol,\n      token_to_amount: destinationValue,\n      slippage,\n      custom_slippage: slippage !== 2,\n      best_quote_source: getTopQuote(state)?.aggregator,\n      available_quotes: getQuotes(state)?.length,\n      other_quote_selected:\n        usedQuote.aggregator !== getTopQuote(state)?.aggregator,\n      other_quote_selected_source:\n        usedQuote.aggregator === getTopQuote(state)?.aggregator\n          ? ''\n          : usedQuote.aggregator,\n      gas_fees: gasEstimateTotalInUSD,\n      estimated_gas: new BigNumber(estimatedGasLimit, 16).toString(10),\n      suggested_gas_price: fastGasEstimate,\n      used_gas_price: hexWEIToDecGWEI(usedGasPrice),\n      average_savings: usedQuote.savings?.total,\n      performance_savings: usedQuote.savings?.performance,\n      fee_savings: usedQuote.savings?.fee,\n      median_metamask_fee: usedQuote.savings?.medianMetaMaskFee,\n      is_hardware_wallet: hardwareWalletUsed,\n      hardware_wallet_type: getHardwareWalletType(state),\n      stx_enabled: smartTransactionsEnabled,\n      current_stx_enabled: currentSmartTransactionsEnabled,\n      stx_user_opt_in: smartTransactionsOptInStatus,\n      ...additionalTrackingParams,\n    };\n    if (networkAndAccountSupports1559) {\n      swapMetaData.max_fee_per_gas = maxFeePerGas;\n      swapMetaData.max_priority_fee_per_gas = maxPriorityFeePerGas;\n      swapMetaData.base_and_priority_fee_per_gas = baseAndPriorityFeePerGas;\n    }\n\n    trackEvent({\n      event: MetaMetricsEventName.SwapStarted,\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: swapMetaData,\n    });\n\n    if (!isContractAddressValid(usedTradeTxParams.to, chainId)) {\n      captureMessage('Invalid contract address', {\n        extra: {\n          token_from: swapMetaData.token_from,\n          token_to: swapMetaData.token_to,\n          contract_address: usedTradeTxParams.to,\n        },\n      });\n      await dispatch(setSwapsErrorKey(SWAP_FAILED_ERROR));\n      history.push(SWAPS_ERROR_ROUTE);\n      return;\n    }\n\n    let finalApproveTxMeta;\n    const approveTxParams = getApproveTxParams(state);\n\n    // For hardware wallets we go to the Awaiting Signatures page first and only after a user\n    // completes 1 or 2 confirmations, we redirect to the Awaiting Swap page.\n    if (hardwareWalletUsed) {\n      history.push(AWAITING_SIGNATURES_ROUTE);\n    }\n\n    if (approveTxParams) {\n      if (networkAndAccountSupports1559) {\n        approveTxParams.maxFeePerGas = maxFeePerGas;\n        approveTxParams.maxPriorityFeePerGas = maxPriorityFeePerGas;\n        delete approveTxParams.gasPrice;\n      }\n\n      try {\n        finalApproveTxMeta = await addTransactionAndWaitForPublish(\n          { ...approveTxParams, amount: '0x0' },\n          {\n            requireApproval: false,\n            type: TransactionType.swapApproval,\n            swaps: {\n              hasApproveTx: true,\n              meta: {\n                type: TransactionType.swapApproval,\n                sourceTokenSymbol: sourceTokenInfo.symbol,\n              },\n            },\n          },\n        );\n      } catch (e) {\n        await dispatch(setSwapsErrorKey(SWAP_FAILED_ERROR));\n        history.push(SWAPS_ERROR_ROUTE);\n        return;\n      }\n    }\n\n    try {\n      await addTransactionAndWaitForPublish(usedTradeTxParams, {\n        requireApproval: false,\n        type: TransactionType.swap,\n        swaps: {\n          hasApproveTx: Boolean(approveTxParams),\n          meta: {\n            estimatedBaseFee: decEstimatedBaseFee,\n            sourceTokenSymbol: sourceTokenInfo.symbol,\n            destinationTokenSymbol: destinationTokenInfo.symbol,\n            type: TransactionType.swap,\n            destinationTokenDecimals: destinationTokenInfo.decimals,\n            destinationTokenAddress: destinationTokenInfo.address,\n            swapMetaData,\n            swapTokenValue,\n            approvalTxId: finalApproveTxMeta?.id,\n          },\n        },\n      });\n    } catch (e) {\n      const errorKey = e.message.includes('EthAppPleaseEnableContractData')\n        ? CONTRACT_DATA_DISABLED_ERROR\n        : SWAP_FAILED_ERROR;\n      console.error(e);\n      await dispatch(setSwapsErrorKey(errorKey));\n      history.push(SWAPS_ERROR_ROUTE);\n      return;\n    }\n\n    // Only after a user confirms swapping on a hardware wallet (second `updateAndApproveTx` call above),\n    // we redirect to the Awaiting Swap page.\n    if (hardwareWalletUsed) {\n      history.push(AWAITING_SWAP_ROUTE);\n    }\n\n    await forceUpdateMetamaskState(dispatch);\n  };\n};\n\nexport function fetchMetaSwapsGasPriceEstimates() {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const chainId = getCurrentChainId(state);\n\n    dispatch(swapGasPriceEstimatesFetchStarted());\n\n    let priceEstimates;\n    try {\n      priceEstimates = await fetchSwapsGasPrices(chainId);\n    } catch (e) {\n      log.warn('Fetching swaps gas prices failed:', e);\n\n      if (!e.message?.match(/NetworkError|Fetch failed with status:/u)) {\n        throw e;\n      }\n\n      dispatch(swapGasPriceEstimatesFetchFailed());\n\n      try {\n        const gasPrice = await global.ethQuery.gasPrice();\n        const gasPriceInDecGWEI = hexWEIToDecGWEI(gasPrice.toString(10));\n\n        dispatch(retrievedFallbackSwapsGasPrice(gasPriceInDecGWEI));\n        return null;\n      } catch (networkGasPriceError) {\n        console.error(\n          `Failed to retrieve fallback gas price: `,\n          networkGasPriceError,\n        );\n        return null;\n      }\n    }\n\n    dispatch(\n      swapGasPriceEstimatesFetchCompleted({\n        priceEstimates,\n      }),\n    );\n    return priceEstimates;\n  };\n}\n\nexport function fetchSwapsSmartTransactionFees({\n  unsignedTransaction,\n  approveTxParams,\n  fallbackOnNotEnoughFunds = false,\n}) {\n  return async (dispatch, getState) => {\n    const {\n      swaps: { isFeatureFlagLoaded },\n    } = getState();\n    try {\n      return await dispatch(\n        fetchSmartTransactionFees(unsignedTransaction, approveTxParams),\n      );\n    } catch (e) {\n      if (e.message.startsWith('Fetch error:') && isFeatureFlagLoaded) {\n        const errorObj = parseSmartTransactionsError(e.message);\n        if (\n          fallbackOnNotEnoughFunds ||\n          errorObj?.error !== StxErrorTypes.notEnoughFunds\n        ) {\n          dispatch(setCurrentSmartTransactionsError(errorObj?.error));\n        }\n      }\n    }\n    return null;\n  };\n}\n\nexport function cancelSwapsSmartTransaction(uuid) {\n  return async (dispatch, getState) => {\n    try {\n      await dispatch(cancelSmartTransaction(uuid));\n    } catch (e) {\n      const {\n        swaps: { isFeatureFlagLoaded },\n      } = getState();\n      if (e.message.startsWith('Fetch error:') && isFeatureFlagLoaded) {\n        const errorObj = parseSmartTransactionsError(e.message);\n        dispatch(setCurrentSmartTransactionsError(errorObj?.error));\n      }\n    }\n  };\n}\n","export const PRIMARY = 'PRIMARY';\nexport const SECONDARY = 'SECONDARY';\n\nconst _contractAddressLink =\n  'https://support.metamask.io/managing-my-tokens/moving-your-tokens/why-am-i-being-warned-about-sending-tokens-to-a-contract/';\n\n\n// eslint-disable-next-line prefer-destructuring\nexport const METAMETRICS_SETTINGS_LINK =\n  'https://support.metamask.io/privacy-and-security/how-to-manage-your-metametrics-settings';\n// eslint-disable-next-line prefer-destructuring\nexport const SUPPORT_REQUEST_LINK = process.env.SUPPORT_REQUEST_LINK;\nexport const CONTRACT_ADDRESS_LINK = _contractAddressLink;\nexport const PASSWORD_MIN_LENGTH = 8;\nexport const OUTDATED_BROWSER_VERSIONS = {\n  // Chrome and Edge should match the latest Chrome version released ~2 years ago,\n  // or the earliest version that supports our MV3 functionality, whichever is higher\n  chrome: '<109',\n  edge: '<109',\n  // Firefox should match the previous extended support release\n  // Current ESR: 115\n  // Previous ESR: 102\n  firefox: '<102',\n  // Opera versions correspond to differently numbered Chromium versions.\n  // Opera should be set to the equivalent of the Chromium version set\n  // Opera 95 is based on Chromium 109\n  // See https://en.wikipedia.org/wiki/History_of_the_Opera_web_browser\n  opera: '<95',\n};\n\n/**\n * Specifies the browser and their versions where a regression in the extension port\n * stream established between the contentscript and background was breaking for\n * prerendered pages.\n *\n * @see {@link https://issues.chromium.org/issues/40273420}\n */\nexport const BROKEN_PRERENDER_BROWSER_VERSIONS = {\n  chrome: '>=113',\n  edge: '>=113',\n};\n\n/**\n * Specifies the browser and their versions on a specific OS where a fix for the\n * prerender regression specified in BROKEN_PRERENDER_BROWSER_VERSIONS was resolved.\n *\n * @see {@link https://chromium.googlesource.com/chromium/src/+/a88eee8a2798c1dc4d69b255ccad24fea5ff2d8b}\n */\nexport const FIXED_PRERENDER_BROWSER_VERSIONS = {\n  // https://chromiumdash.appspot.com/commits?commit=a88eee8a2798c1dc4d69b255ccad24fea5ff2d8b&platform=Windows\n  windows: {\n    chrome: '>=120',\n    edge: '>=120',\n  },\n  // https://chromiumdash.appspot.com/commits?commit=a88eee8a2798c1dc4d69b255ccad24fea5ff2d8b&platform=Mac\n  macos: {\n    chrome: '>=120',\n    edge: '>=120',\n  },\n  // https://chromiumdash.appspot.com/commits?commit=a88eee8a2798c1dc4d69b255ccad24fea5ff2d8b&platform=Linux\n  chrome: '>=121',\n  edge: '>=121',\n};\n","/**\n * A note about the existence of both singular and plural variable names here:\n * When dealing with a literal property name, e.g. AlignItems, the constant\n * should match the property. When detailing a collection of things, it should\n * match the plural form of the thing. e.g. Color, TextVariant, Size\n */\n\nexport enum Color {\n  backgroundDefault = 'background-default',\n  backgroundAlternative = 'background-alternative',\n  textDefault = 'text-default',\n  textAlternative = 'text-alternative',\n  textMuted = 'text-muted',\n  iconDefault = 'icon-default',\n  iconAlternative = 'icon-alternative',\n  iconMuted = 'icon-muted',\n  borderDefault = 'border-default',\n  borderMuted = 'border-muted',\n  overlayDefault = 'overlay-default',\n  overlayInverse = 'overlay-inverse',\n  primaryDefault = 'primary-default',\n  primaryAlternative = 'primary-alternative',\n  primaryMuted = 'primary-muted',\n  primaryInverse = 'primary-inverse',\n  errorDefault = 'error-default',\n  errorAlternative = 'error-alternative',\n  errorMuted = 'error-muted',\n  errorInverse = 'error-inverse',\n  warningDefault = 'warning-default',\n  warningMuted = 'warning-muted',\n  warningInverse = 'warning-inverse',\n  successDefault = 'success-default',\n  successMuted = 'success-muted',\n  successInverse = 'success-inverse',\n  infoDefault = 'info-default',\n  infoMuted = 'info-muted',\n  infoInverse = 'info-inverse',\n  mainnet = 'mainnet',\n  goerli = 'goerli',\n  sepolia = 'sepolia',\n  lineaGoerli = 'linea-goerli',\n  lineaGoerliInverse = 'linea-goerli-inverse',\n  lineaSepolia = 'linea-sepolia',\n  lineaSepoliaInverse = 'linea-sepolia-inverse',\n  lineaMainnet = 'linea-mainnet',\n  lineaMainnetInverse = 'linea-mainnet-inverse',\n  transparent = 'transparent',\n  localhost = 'localhost',\n  inherit = 'inherit',\n  goerliInverse = 'goerli-inverse',\n  sepoliaInverse = 'sepolia-inverse',\n}\n\nexport enum BackgroundColor {\n  backgroundDefault = 'background-default',\n  backgroundAlternative = 'background-alternative',\n  overlayDefault = 'overlay-default',\n  overlayAlternative = 'overlay-alternative',\n  primaryDefault = 'primary-default',\n  primaryAlternative = 'primary-alternative',\n  primaryMuted = 'primary-muted',\n  errorDefault = 'error-default',\n  errorAlternative = 'error-alternative',\n  errorMuted = 'error-muted',\n  warningDefault = 'warning-default',\n  warningMuted = 'warning-muted',\n  successDefault = 'success-default',\n  successMuted = 'success-muted',\n  infoDefault = 'info-default',\n  infoMuted = 'info-muted',\n  mainnet = 'mainnet',\n  goerli = 'goerli',\n  sepolia = 'sepolia',\n  lineaGoerli = 'linea-goerli',\n  lineaSepolia = 'linea-sepolia',\n  lineaMainnet = 'linea-mainnet',\n  transparent = 'transparent',\n  localhost = 'localhost',\n}\n\nexport enum BorderColor {\n  borderDefault = 'border-default',\n  borderMuted = 'border-muted',\n  primaryDefault = 'primary-default',\n  primaryAlternative = 'primary-alternative',\n  primaryMuted = 'primary-muted',\n  errorDefault = 'error-default',\n  errorAlternative = 'error-alternative',\n  errorMuted = 'error-muted',\n  warningDefault = 'warning-default',\n  warningMuted = 'warning-muted',\n  successDefault = 'success-default',\n  successMuted = 'success-muted',\n  infoDefault = 'info-default',\n  infoMuted = 'info-muted',\n  mainnet = 'mainnet',\n  goerli = 'goerli',\n  sepolia = 'sepolia',\n  lineaGoerli = 'linea-goerli',\n  lineaSepolia = 'linea-sepolia',\n  lineaMainnet = 'linea-mainnet',\n  transparent = 'transparent',\n  localhost = 'localhost',\n  backgroundDefault = 'background-default', // exception for border color when element is meant to look \"cut out\"\n}\n\nexport enum TextColor {\n  textDefault = 'text-default',\n  textAlternative = 'text-alternative',\n  textMuted = 'text-muted',\n  overlayInverse = 'overlay-inverse',\n  primaryDefault = 'primary-default',\n  primaryInverse = 'primary-inverse',\n  errorDefault = 'error-default',\n  errorAlternative = 'error-alternative',\n  errorInverse = 'error-inverse',\n  successDefault = 'success-default',\n  successInverse = 'success-inverse',\n  warningDefault = 'warning-default',\n  warningInverse = 'warning-inverse',\n  infoDefault = 'info-default',\n  infoInverse = 'info-inverse',\n  inherit = 'inherit',\n  goerli = 'goerli',\n  sepolia = 'sepolia',\n  lineaGoerli = 'linea-goerli',\n  lineaGoerliInverse = 'linea-goerli-inverse',\n  lineaSepolia = 'linea-sepolia',\n  lineaSepoliaInverse = 'linea-sepolia-inverse',\n  lineaMainnet = 'linea-mainnet',\n  lineaMainnetInverse = 'linea-mainnet-inverse',\n  goerliInverse = 'goerli-inverse',\n  sepoliaInverse = 'sepolia-inverse',\n  transparent = 'transparent',\n}\n\nexport enum IconColor {\n  iconDefault = 'icon-default',\n  iconAlternative = 'icon-alternative',\n  iconMuted = 'icon-muted',\n  overlayInverse = 'overlay-inverse',\n  primaryDefault = 'primary-default',\n  primaryInverse = 'primary-inverse',\n  errorDefault = 'error-default',\n  errorInverse = 'error-inverse',\n  successDefault = 'success-default',\n  successInverse = 'success-inverse',\n  warningDefault = 'warning-default',\n  warningInverse = 'warning-inverse',\n  infoDefault = 'info-default',\n  infoInverse = 'info-inverse',\n  inherit = 'inherit',\n  goerli = 'goerli',\n  sepolia = 'sepolia',\n  lineaGoerli = 'linea-goerli',\n  lineaGoerliInverse = 'linea-goerli-inverse',\n  lineaSepolia = 'linea-sepolia',\n  lineaSepoliaInverse = 'linea-sepolia-inverse',\n  lineaMainnet = 'linea-mainnet',\n  lineaMainnetInverse = 'linea-mainnet-inverse',\n  goerliInverse = 'goerli-inverse',\n  sepoliaInverse = 'sepolia-inverse',\n  transparent = 'transparent',\n}\n\nexport enum TypographyVariant {\n  H1 = 'h1',\n  H2 = 'h2',\n  H3 = 'h3',\n  H4 = 'h4',\n  H5 = 'h5',\n  H6 = 'h6',\n  H7 = 'h7',\n  H8 = 'h8',\n  H9 = 'h9',\n  paragraph = 'p',\n  span = 'span',\n}\n\nexport enum TextVariant {\n  displayMd = 'display-md',\n  headingLg = 'heading-lg',\n  headingMd = 'heading-md',\n  headingSm = 'heading-sm',\n  bodyLgMedium = 'body-lg-medium',\n  bodyMd = 'body-md',\n  bodyMdMedium = 'body-md-medium',\n  bodyMdBold = 'body-md-bold',\n  bodySm = 'body-sm',\n  bodySmMedium = 'body-sm-medium',\n  bodySmBold = 'body-sm-bold',\n  bodyXs = 'body-xs',\n  bodyXsMedium = 'body-xs-medium',\n  inherit = 'inherit',\n}\n\nexport enum Size {\n  XXS = 'xxs',\n  XS = 'xs',\n  SM = 'sm',\n  MD = 'md',\n  LG = 'lg',\n  XL = 'xl',\n  inherit = 'inherit', // Used for Text, Icon, and Button components to inherit the parent elements font-size\n  auto = 'auto',\n}\n\nexport enum BorderStyle {\n  dashed = 'dashed',\n  solid = 'solid',\n  dotted = 'dotted',\n  double = 'double',\n  none = 'none',\n}\n\nexport enum BorderRadius {\n  /**\n   * 2px\n   */\n  XS = 'xs',\n  /**\n   * 4px\n   */\n  SM = 'sm',\n  /**\n   * 6px\n   */\n  MD = 'md',\n  /**\n   * 8px\n   */\n  LG = 'lg',\n  /**\n   * 12px\n   */\n  XL = 'xl',\n  /**\n   * 0\n   */\n  none = 'none',\n  /**\n   * 9999px\n   */\n  pill = 'pill',\n  /**\n   * 50%\n   */\n  full = 'full',\n}\n\n// NOTE: The name of this enum is plural due to the name of property in css is `align-items`,\n// which is for aligning all items not one\nexport enum AlignItems {\n  flexStart = 'flex-start',\n  flexEnd = 'flex-end',\n  center = 'center',\n  baseline = 'baseline',\n  stretch = 'stretch',\n}\n\nexport enum JustifyContent {\n  flexStart = 'flex-start',\n  flexEnd = 'flex-end',\n  center = 'center',\n  spaceAround = 'space-around',\n  spaceBetween = 'space-between',\n  spaceEvenly = 'space-evenly',\n}\n\nexport enum FlexDirection {\n  Row = 'row',\n  RowReverse = 'row-reverse',\n  Column = 'column',\n  ColumnReverse = 'column-reverse',\n}\n\n/**\n * @deprecated `FLEX_DIRECTION` const has been deprecated in favor of the `FlexDirection` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `FLEX_DIRECTION` with `FlexDirection` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\n\nexport const FLEX_DIRECTION = {\n  ROW: 'row',\n  ROW_REVERSE: 'row-reverse',\n  COLUMN: 'column',\n  COLUMN_REVERSE: 'column-reverse',\n};\n\nexport enum FlexWrap {\n  Wrap = 'wrap',\n  WrapReverse = 'wrap-reverse',\n  NoWrap = 'nowrap',\n}\n\n/**\n * @deprecated `FLEX_WRAP` const has been deprecated in favor of the `FlexWrap` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `FLEX_WRAP` with `FlexWrap` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\n\nexport const FLEX_WRAP = {\n  WRAP: 'wrap',\n  WRAP_REVERSE: 'wrap-reverse',\n  NO_WRAP: 'nowrap',\n};\n\nexport enum Display {\n  Block = 'block',\n  Flex = 'flex',\n  Grid = 'grid',\n  InlineBlock = 'inline-block',\n  Inline = 'inline',\n  InlineFlex = 'inline-flex',\n  InlineGrid = 'inline-grid',\n  ListItem = 'list-item',\n  None = 'none',\n}\n\n/**\n * @deprecated `DISPLAY` const has been deprecated in favor of the `Display` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `DISPLAY` with `Display` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\n\nexport const DISPLAY = {\n  BLOCK: 'block',\n  FLEX: 'flex',\n  GRID: 'grid',\n  INLINE_BLOCK: 'inline-block',\n  INLINE: 'inline',\n  INLINE_FLEX: 'inline-flex',\n  INLINE_GRID: 'inline-grid',\n  LIST_ITEM: 'list-item',\n  NONE: 'none',\n};\n\n/**\n * @deprecated `FRACTIONS` const has been deprecated in favor of the `BlockSize` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `FRACTIONS` with `BlockSize` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\n\nexport const FRACTIONS = {\n  HALF: '1/2',\n  ONE_THIRD: '1/3',\n  TWO_THIRDS: '2/3',\n  ONE_FOURTH: '1/4',\n  TWO_FOURTHS: '2/4',\n  THREE_FOURTHS: '3/4',\n  ONE_FIFTH: '1/5',\n  TWO_FIFTHS: '2/5',\n  THREE_FIFTHS: '3/5',\n  FOUR_FIFTHS: '4/5',\n  ONE_SIXTH: '1/6',\n  TWO_SIXTHS: '2/6',\n  THREE_SIXTHS: '3/6',\n  FOUR_SIXTHS: '4/6',\n  FIVE_SIXTHS: '5/6',\n  ONE_TWELFTH: '1/12',\n  TWO_TWELFTHS: '2/12',\n  THREE_TWELFTHS: '3/12',\n  FOUR_TWELFTHS: '4/12',\n  FIVE_TWELFTHS: '5/12',\n  SIX_TWELFTHS: '6/12',\n  SEVEN_TWELFTHS: '7/12',\n  EIGHT_TWELFTHS: '8/12',\n  NINE_TWELFTHS: '9/12',\n  TEN_TWELFTHS: '10/12',\n  ELEVEN_TWELFTHS: '11/12',\n};\n\nexport enum BlockSize {\n  Zero = '0',\n  Half = '1/2',\n  OneThird = '1/3',\n  TwoThirds = '2/3',\n  OneFourth = '1/4',\n  TwoFourths = '2/4',\n  ThreeFourths = '3/4',\n  OneFifth = '1/5',\n  TwoFifths = '2/5',\n  ThreeFifths = '3/5',\n  FourFifths = '4/5',\n  OneSixth = '1/6',\n  TwoSixths = '2/6',\n  ThreeSixths = '3/6',\n  FourSixths = '4/6',\n  FiveSixths = '5/6',\n  OneTwelfth = '1/12',\n  TwoTwelfths = '2/12',\n  ThreeTwelfths = '3/12',\n  FourTwelfths = '4/12',\n  FiveTwelfths = '5/12',\n  SixTwelfths = '6/12',\n  SevenTwelfths = '7/12',\n  EightTwelfths = '8/12',\n  NineTwelfths = '9/12',\n  TenTwelfths = '10/12',\n  ElevenTwelfths = '11/12',\n  Screen = 'screen',\n  Max = 'max',\n  Min = 'min',\n  Full = 'full',\n}\n\n/**\n * @deprecated `BLOCK_SIZES` const has been deprecated in favor of the `BlockSize` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `BLOCK_SIZES` with `BlockSize` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\n\nexport const BLOCK_SIZES = {\n  ...FRACTIONS,\n  SCREEN: 'screen',\n  MAX: 'max',\n  MIN: 'min',\n  FULL: 'full',\n};\n\nexport enum TextAlign {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right',\n  Justify = 'justify',\n  End = 'end',\n  Start = 'start',\n}\n\n/**\n * @deprecated `TEXT_ALIGN` const has been deprecated in favor of the `TextAlign` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `TEXT_ALIGN` with `TextAlign` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\nexport const TEXT_ALIGN = {\n  LEFT: 'left',\n  CENTER: 'center',\n  RIGHT: 'right',\n  JUSTIFY: 'justify',\n  END: 'end',\n  START: 'start',\n};\n\nexport enum TextTransform {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Uppercase = 'uppercase',\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Lowercase = 'lowercase',\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Capitalize = 'capitalize',\n}\n\n/**\n * @deprecated `TEXT_TRANSFORM` const has been deprecated in favor of the `TextTransform` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `TEXT_TRANSFORM` with `TextTransform` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\nexport const TEXT_TRANSFORM = {\n  UPPERCASE: 'uppercase',\n  LOWERCASE: 'lowercase',\n  CAPITALIZE: 'capitalize',\n};\n\nexport enum FontWeight {\n  Bold = 'bold',\n  Medium = 'medium',\n  Normal = 'normal',\n}\n\n/**\n * @deprecated `FONT_WEIGHT` const has been deprecated in favor of the `FontWeight` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `FONT_WEIGHT` with `FontWeight` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\nexport const FONT_WEIGHT = {\n  BOLD: 'bold',\n  MEDIUM: 'medium',\n  NORMAL: 'normal',\n};\n\nexport enum OverflowWrap {\n  BreakWord = 'break-word',\n  Anywhere = 'anywhere',\n  Normal = 'normal',\n}\n\n/**\n * @deprecated `OVERFLOW_WRAP` const has been deprecated in favor of the `OverflowWrap` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `OVERFLOW_WRAP` with `OverflowWrap` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\nexport const OVERFLOW_WRAP = {\n  BREAK_WORD: 'break-word',\n  ANYWHERE: 'anywhere',\n  NORMAL: 'normal',\n};\n\nexport enum FontStyle {\n  Italic = 'italic',\n  Normal = 'normal',\n}\n\n/**\n * @deprecated `FONT_STYLE` const has been deprecated in favor of the `FontStyle` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `FONT_STYLE` with `FontStyle` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\nexport const FONT_STYLE = {\n  ITALIC: 'italic',\n  NORMAL: 'normal',\n};\n\nexport enum Severity {\n  Danger = 'danger',\n  Warning = 'warning',\n  Info = 'info',\n  Success = 'success',\n}\n\n/**\n * @deprecated `SEVERITIES` const has been deprecated in favor of the `Severity` enum which can still be imported from `ui/helpers/constants/design-system.ts`\n *\n * Help to replace `SEVERITIES` with `FontStyle` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/18714\n */\n\nexport const SEVERITIES = {\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n  SUCCESS: 'success',\n};\n\nexport const BREAKPOINTS = ['base', 'sm', 'md', 'lg'];\n","export const INSUFFICIENT_FUNDS_ERROR_KEY = 'insufficientFunds';\nexport const GAS_LIMIT_TOO_LOW_ERROR_KEY = 'gasLimitTooLow';\nexport const TRANSACTION_ERROR_KEY = 'transactionError';\nexport const ETH_GAS_PRICE_FETCH_WARNING_KEY = 'ethGasPriceFetchWarning';\nexport const GAS_PRICE_FETCH_FAILURE_ERROR_KEY = 'gasPriceFetchFailed';\nexport const GAS_PRICE_EXCESSIVE_ERROR_KEY = 'gasPriceExcessive';\nexport const UNSENDABLE_ASSET_ERROR_KEY = 'unsendableAsset';\nexport const INSUFFICIENT_FUNDS_FOR_GAS_ERROR_KEY = 'insufficientFundsForGas';\nexport const INVALID_ASSET_TYPE = 'invalidAssetType';\nexport const IS_SIGNING_OR_SUBMITTING = 'isSigningOrSubmitting';\nexport const USER_OP_CONTRACT_DEPLOY_ERROR_KEY = 'userOpContractDeployError';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = \"solidity/5.7.0\";\n//# sourceMappingURL=_version.js.map","// The time after which a notification should be deleted.\nexport const NOTIFICATIONS_EXPIRATION_DELAY = 10000;\n","// This date indicates the date of the latest privacy policy document\nconst PRIVACY_POLICY_DATE = '2024-06-18T12:00:00Z';\n\nexport { PRIVACY_POLICY_DATE };\n","const DEFAULT_ROUTE = '/';\nconst UNLOCK_ROUTE = '/unlock';\nconst LOCK_ROUTE = '/lock';\nconst ASSET_ROUTE = '/asset';\nconst SETTINGS_ROUTE = '/settings';\nconst GENERAL_ROUTE = '/settings/general';\nconst ADVANCED_ROUTE = '/settings/advanced';\n\nconst DEVELOPER_OPTIONS_ROUTE = '/settings/developer-options';\nconst EXPERIMENTAL_ROUTE = '/settings/experimental';\nconst SECURITY_ROUTE = '/settings/security';\nconst ABOUT_US_ROUTE = '/settings/about-us';\nconst ALERTS_ROUTE = '/settings/alerts';\nconst NETWORKS_ROUTE = '/settings/networks';\nconst NETWORKS_FORM_ROUTE = '/settings/networks/form';\nconst ADD_NETWORK_ROUTE = '/settings/networks/add-network';\nconst ADD_POPULAR_CUSTOM_NETWORK =\n  '/settings/networks/add-popular-custom-network';\nconst CONTACT_LIST_ROUTE = '/settings/contact-list';\nconst CONTACT_EDIT_ROUTE = '/settings/contact-list/edit-contact';\nconst CONTACT_ADD_ROUTE = '/settings/contact-list/add-contact';\nconst CONTACT_VIEW_ROUTE = '/settings/contact-list/view-contact';\nconst REVEAL_SEED_ROUTE = '/seed';\nconst RESTORE_VAULT_ROUTE = '/restore-vault';\nconst IMPORT_TOKEN_ROUTE = '/import-token';\nconst IMPORT_TOKENS_ROUTE = '/import-tokens';\nconst CONFIRM_IMPORT_TOKEN_ROUTE = '/confirm-import-token';\nconst CONFIRM_ADD_SUGGESTED_TOKEN_ROUTE = '/confirm-add-suggested-token';\nconst NEW_ACCOUNT_ROUTE = '/new-account';\nconst CONFIRM_ADD_SUGGESTED_NFT_ROUTE = '/confirm-add-suggested-nft';\nconst CONNECT_HARDWARE_ROUTE = '/new-account/connect';\nconst SEND_ROUTE = '/send';\nconst CONNECTIONS = '/connections';\nconst PERMISSIONS = '/permissions';\nconst TOKEN_DETAILS = '/token-details';\nconst CONNECT_ROUTE = '/connect';\nconst CONNECT_CONFIRM_PERMISSIONS_ROUTE = '/confirm-permissions';\nconst CONNECT_SNAPS_CONNECT_ROUTE = '/snaps-connect';\nconst CONNECT_SNAP_INSTALL_ROUTE = '/snap-install';\nconst CONNECT_SNAP_UPDATE_ROUTE = '/snap-update';\nconst CONNECT_SNAP_RESULT_ROUTE = '/snap-install-result';\nconst SNAPS_ROUTE = '/snaps';\nconst SNAPS_VIEW_ROUTE = '/snaps/view';\nconst NOTIFICATIONS_ROUTE = '/notifications';\nconst NOTIFICATIONS_SETTINGS_ROUTE = '/notifications/settings';\nconst CONNECTED_ROUTE = '/connected';\nconst CONNECTED_ACCOUNTS_ROUTE = '/connected/accounts';\nconst CROSS_CHAIN_SWAP_ROUTE = '/cross-chain';\nconst SWAPS_ROUTE = '/swaps';\nconst PREPARE_SWAP_ROUTE = '/swaps/prepare-swap-page';\nconst SWAPS_NOTIFICATION_ROUTE = '/swaps/notification-page';\nconst BUILD_QUOTE_ROUTE = '/swaps/build-quote';\nconst VIEW_QUOTE_ROUTE = '/swaps/view-quote';\nconst LOADING_QUOTES_ROUTE = '/swaps/loading-quotes';\nconst AWAITING_SIGNATURES_ROUTE = '/swaps/awaiting-signatures';\nconst SMART_TRANSACTION_STATUS_ROUTE = '/swaps/smart-transaction-status';\nconst AWAITING_SWAP_ROUTE = '/swaps/awaiting-swap';\nconst SWAPS_ERROR_ROUTE = '/swaps/swaps-error';\nconst SWAPS_MAINTENANCE_ROUTE = '/swaps/maintenance';\n\nconst ONBOARDING_ROUTE = '/onboarding';\nconst ONBOARDING_REVIEW_SRP_ROUTE = '/onboarding/review-recovery-phrase';\nconst ONBOARDING_CONFIRM_SRP_ROUTE = '/onboarding/confirm-recovery-phrase';\nconst ONBOARDING_CREATE_PASSWORD_ROUTE = '/onboarding/create-password';\nconst ONBOARDING_COMPLETION_ROUTE = '/onboarding/completion';\nconst MMI_ONBOARDING_COMPLETION_ROUTE = '/onboarding/account-completion';\nconst ONBOARDING_UNLOCK_ROUTE = '/onboarding/unlock';\nconst ONBOARDING_HELP_US_IMPROVE_ROUTE = '/onboarding/help-us-improve';\nconst ONBOARDING_IMPORT_WITH_SRP_ROUTE =\n  '/onboarding/import-with-recovery-phrase';\nconst ONBOARDING_SECURE_YOUR_WALLET_ROUTE = '/onboarding/secure-your-wallet';\nconst ONBOARDING_PRIVACY_SETTINGS_ROUTE = '/onboarding/privacy-settings';\nconst ONBOARDING_PIN_EXTENSION_ROUTE = '/onboarding/pin-extension';\nconst ONBOARDING_WELCOME_ROUTE = '/onboarding/welcome';\nconst ONBOARDING_METAMETRICS = '/onboarding/metametrics';\n\n\nconst CONFIRM_TRANSACTION_ROUTE = '/confirm-transaction';\nconst CONFIRM_SEND_ETHER_PATH = '/send-ether';\nconst CONFIRM_SEND_TOKEN_PATH = '/send-token';\nconst CONFIRM_DEPLOY_CONTRACT_PATH = '/deploy-contract';\nconst CONFIRM_APPROVE_PATH = '/approve';\nconst CONFIRM_SET_APPROVAL_FOR_ALL_PATH = '/set-approval-for-all';\nconst CONFIRM_TRANSFER_FROM_PATH = '/transfer-from';\nconst CONFIRM_SAFE_TRANSFER_FROM_PATH = '/safe-transfer-from';\nconst CONFIRM_TOKEN_METHOD_PATH = '/token-method';\nconst CONFIRM_INCREASE_ALLOWANCE_PATH = '/increase-allowance';\nconst SIGNATURE_REQUEST_PATH = '/signature-request';\nconst DECRYPT_MESSAGE_REQUEST_PATH = '/decrypt-message-request';\nconst ENCRYPTION_PUBLIC_KEY_REQUEST_PATH = '/encryption-public-key-request';\nconst CONFIRMATION_V_NEXT_ROUTE = '/confirmation';\n\n// Used to pull a convenient name for analytics tracking events. The key must\n// be react-router ready path, and can include params such as :id for popup windows\nconst PATH_NAME_MAP = {\n  [DEFAULT_ROUTE]: 'Home',\n  [UNLOCK_ROUTE]: 'Unlock Page',\n  [LOCK_ROUTE]: 'Lock Page',\n  [`${ASSET_ROUTE}/:asset/:id`]: `Asset Page`,\n  [`${ASSET_ROUTE}/image/:asset/:id`]: `Nft Image Page`,\n  [SETTINGS_ROUTE]: 'Settings Page',\n  [GENERAL_ROUTE]: 'General Settings Page',\n  [ADVANCED_ROUTE]: 'Advanced Settings Page',\n  // DEVELOPER_OPTIONS_ROUTE not included because we're not tracking analytics for this page\n  // [DEVELOPER_OPTIONS_ROUTE]: 'Experimental Settings Page',\n  [EXPERIMENTAL_ROUTE]: 'Experimental Settings Page',\n  [SECURITY_ROUTE]: 'Security Settings Page',\n  [ABOUT_US_ROUTE]: 'About Us Page',\n  [ALERTS_ROUTE]: 'Alerts Settings Page',\n  [NETWORKS_ROUTE]: 'Network Settings Page',\n  [NETWORKS_FORM_ROUTE]: 'Network Settings Page Form',\n  [ADD_NETWORK_ROUTE]: 'Add Network From Settings Page Form',\n  [ADD_POPULAR_CUSTOM_NETWORK]:\n    'Add Network From A List Of Popular Custom Networks',\n  [CONTACT_LIST_ROUTE]: 'Contact List Settings Page',\n  [`${CONTACT_EDIT_ROUTE}/:address`]: 'Edit Contact Settings Page',\n  [CONTACT_ADD_ROUTE]: 'Add Contact Settings Page',\n  [`${CONTACT_VIEW_ROUTE}/:address`]: 'View Contact Settings Page',\n  [REVEAL_SEED_ROUTE]: 'Reveal Secret Recovery Phrase Page',\n  [RESTORE_VAULT_ROUTE]: 'Restore Vault Page',\n  [IMPORT_TOKEN_ROUTE]: 'Import Token Page',\n  [CONFIRM_IMPORT_TOKEN_ROUTE]: 'Confirm Import Token Page',\n  [CONFIRM_ADD_SUGGESTED_TOKEN_ROUTE]: 'Confirm Add Suggested Token Page',\n  [IMPORT_TOKENS_ROUTE]: 'Import Tokens Page',\n  [NEW_ACCOUNT_ROUTE]: 'New Account Page',\n  [CONFIRM_ADD_SUGGESTED_NFT_ROUTE]: 'Confirm Add Suggested NFT Page',\n  [CONNECT_HARDWARE_ROUTE]: 'Connect Hardware Wallet Page',\n  [NOTIFICATIONS_ROUTE]: 'Notifications Page',\n  [NOTIFICATIONS_SETTINGS_ROUTE]: 'Notifications Settings Page',\n  [`${NOTIFICATIONS_ROUTE}/:uuid`]: 'Notification Detail Page',\n  [`${CONNECT_ROUTE}/:id${CONNECT_SNAPS_CONNECT_ROUTE}`]: 'Snaps Connect Page',\n  [`${CONNECT_ROUTE}/:id${CONNECT_SNAP_INSTALL_ROUTE}`]: 'Snap Install Page',\n  [`${CONNECT_ROUTE}/:id${CONNECT_SNAP_UPDATE_ROUTE}`]: 'Snap Update Page',\n  [`${CONNECT_ROUTE}/:id${CONNECT_SNAP_RESULT_ROUTE}`]:\n    'Snap Install Result Page',\n  [SNAPS_ROUTE]: 'Snaps List Page',\n  [`${SNAPS_VIEW_ROUTE}/:snapId`]: 'Snap View Page',\n  [SEND_ROUTE]: 'Send Page',\n  [CONNECTIONS]: 'Connections',\n  [PERMISSIONS]: 'Permissions',\n  [`${TOKEN_DETAILS}/:address`]: 'Token Details Page',\n  [`${CONNECT_ROUTE}/:id`]: 'Connect To Site Confirmation Page',\n  [`${CONNECT_ROUTE}/:id${CONNECT_CONFIRM_PERMISSIONS_ROUTE}`]:\n    'Grant Connected Site Permissions Confirmation Page',\n  [CONNECTED_ROUTE]: 'Sites Connected To This Account Page',\n  [CONNECTED_ACCOUNTS_ROUTE]: 'Accounts Connected To This Site Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id`]: 'Confirmation Root Page',\n  [CONFIRM_TRANSACTION_ROUTE]: 'Confirmation Root Page',\n  // TODO: rename when this is the only confirmation page\n  [CONFIRMATION_V_NEXT_ROUTE]: 'New Confirmation Page',\n  [`${CONFIRMATION_V_NEXT_ROUTE}/:id`]: 'New Confirmation Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_TOKEN_METHOD_PATH}`]:\n    'Confirm Token Method Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_SEND_ETHER_PATH}`]:\n    'Confirm Send Ether Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_SEND_TOKEN_PATH}`]:\n    'Confirm Send Token Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_DEPLOY_CONTRACT_PATH}`]:\n    'Confirm Deploy Contract Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_APPROVE_PATH}`]:\n    'Confirm Approve Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_SET_APPROVAL_FOR_ALL_PATH}`]:\n    'Confirm Set Approval For All Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_INCREASE_ALLOWANCE_PATH}`]:\n    'Confirm Increase Allowance Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_TRANSFER_FROM_PATH}`]:\n    'Confirm Transfer From Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${CONFIRM_SAFE_TRANSFER_FROM_PATH}`]:\n    'Confirm Safe Transfer From Transaction Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${SIGNATURE_REQUEST_PATH}`]:\n    'Signature Request Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${DECRYPT_MESSAGE_REQUEST_PATH}`]:\n    'Decrypt Message Request Page',\n  [`${CONFIRM_TRANSACTION_ROUTE}/:id${ENCRYPTION_PUBLIC_KEY_REQUEST_PATH}`]:\n    'Encryption Public Key Request Page',\n  [BUILD_QUOTE_ROUTE]: 'Swaps Build Quote Page',\n  [PREPARE_SWAP_ROUTE]: 'Prepare Swap Page',\n  [SWAPS_NOTIFICATION_ROUTE]: 'Swaps Notification Page',\n  [VIEW_QUOTE_ROUTE]: 'Swaps View Quotes Page',\n  [LOADING_QUOTES_ROUTE]: 'Swaps Loading Quotes Page',\n  [AWAITING_SWAP_ROUTE]: 'Swaps Awaiting Swaps Page',\n  [SWAPS_ERROR_ROUTE]: 'Swaps Error Page',\n};\n\nexport {\n  DEFAULT_ROUTE,\n  ALERTS_ROUTE,\n  ASSET_ROUTE,\n  UNLOCK_ROUTE,\n  LOCK_ROUTE,\n  SETTINGS_ROUTE,\n  REVEAL_SEED_ROUTE,\n  RESTORE_VAULT_ROUTE,\n  IMPORT_TOKEN_ROUTE,\n  CONFIRM_IMPORT_TOKEN_ROUTE,\n  CONFIRM_ADD_SUGGESTED_TOKEN_ROUTE,\n  IMPORT_TOKENS_ROUTE,\n  NEW_ACCOUNT_ROUTE,\n  CONFIRM_ADD_SUGGESTED_NFT_ROUTE,\n  CONNECT_HARDWARE_ROUTE,\n  SEND_ROUTE,\n  CONNECTIONS,\n  PERMISSIONS,\n  TOKEN_DETAILS,\n  CONFIRM_TRANSACTION_ROUTE,\n  CONFIRM_SEND_ETHER_PATH,\n  CONFIRM_SEND_TOKEN_PATH,\n  CONFIRM_DEPLOY_CONTRACT_PATH,\n  CONFIRM_APPROVE_PATH,\n  CONFIRM_SET_APPROVAL_FOR_ALL_PATH,\n  CONFIRM_TRANSFER_FROM_PATH,\n  CONFIRM_SAFE_TRANSFER_FROM_PATH,\n  CONFIRM_TOKEN_METHOD_PATH,\n  CONFIRM_INCREASE_ALLOWANCE_PATH,\n  SIGNATURE_REQUEST_PATH,\n  DECRYPT_MESSAGE_REQUEST_PATH,\n  ENCRYPTION_PUBLIC_KEY_REQUEST_PATH,\n  CONFIRMATION_V_NEXT_ROUTE,\n  ADVANCED_ROUTE,\n  DEVELOPER_OPTIONS_ROUTE,\n  EXPERIMENTAL_ROUTE,\n  SECURITY_ROUTE,\n  GENERAL_ROUTE,\n  ABOUT_US_ROUTE,\n  CONTACT_LIST_ROUTE,\n  CONTACT_EDIT_ROUTE,\n  CONTACT_ADD_ROUTE,\n  CONTACT_VIEW_ROUTE,\n  NETWORKS_ROUTE,\n  NETWORKS_FORM_ROUTE,\n  ADD_NETWORK_ROUTE,\n  ADD_POPULAR_CUSTOM_NETWORK,\n  CONNECT_ROUTE,\n  CONNECT_CONFIRM_PERMISSIONS_ROUTE,\n  CONNECT_SNAPS_CONNECT_ROUTE,\n  CONNECT_SNAP_INSTALL_ROUTE,\n  CONNECT_SNAP_UPDATE_ROUTE,\n  CONNECT_SNAP_RESULT_ROUTE,\n  NOTIFICATIONS_ROUTE,\n  NOTIFICATIONS_SETTINGS_ROUTE,\n  SNAPS_ROUTE,\n  SNAPS_VIEW_ROUTE,\n  CROSS_CHAIN_SWAP_ROUTE,\n  CONNECTED_ROUTE,\n  CONNECTED_ACCOUNTS_ROUTE,\n  PATH_NAME_MAP,\n  SWAPS_ROUTE,\n  PREPARE_SWAP_ROUTE,\n  SWAPS_NOTIFICATION_ROUTE,\n  BUILD_QUOTE_ROUTE,\n  VIEW_QUOTE_ROUTE,\n  LOADING_QUOTES_ROUTE,\n  AWAITING_SWAP_ROUTE,\n  AWAITING_SIGNATURES_ROUTE,\n  SWAPS_ERROR_ROUTE,\n  SWAPS_MAINTENANCE_ROUTE,\n  SMART_TRANSACTION_STATUS_ROUTE,\n  ONBOARDING_ROUTE,\n  ONBOARDING_HELP_US_IMPROVE_ROUTE,\n  ONBOARDING_CREATE_PASSWORD_ROUTE,\n  ONBOARDING_IMPORT_WITH_SRP_ROUTE,\n  ONBOARDING_SECURE_YOUR_WALLET_ROUTE,\n  ONBOARDING_REVIEW_SRP_ROUTE,\n  ONBOARDING_CONFIRM_SRP_ROUTE,\n  ONBOARDING_PRIVACY_SETTINGS_ROUTE,\n  ONBOARDING_COMPLETION_ROUTE,\n  MMI_ONBOARDING_COMPLETION_ROUTE,\n  ONBOARDING_UNLOCK_ROUTE,\n  ONBOARDING_PIN_EXTENSION_ROUTE,\n  ONBOARDING_WELCOME_ROUTE,\n  ONBOARDING_METAMETRICS,\n};\n","const SURVEY_DATE = 'February 28 2024';\nconst SURVEY_GMT = 'GMT-0600';\nconst SURVEY_START_HOUR = '12:00:00';\nconst SURVEY_END_HOUR = '13:00:00';\n\nconst SURVEY_START_TIME = `${SURVEY_START_HOUR} ${SURVEY_GMT}`;\nconst SURVEY_END_TIME = `${SURVEY_END_HOUR} ${SURVEY_GMT}`;\n\nexport {\n  SURVEY_DATE,\n  SURVEY_GMT,\n  SURVEY_START_HOUR,\n  SURVEY_END_HOUR,\n  SURVEY_START_TIME,\n  SURVEY_END_TIME,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = exports.keccak256 = exports.pack = void 0;\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nvar sha2_1 = require(\"@ethersproject/sha2\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nvar regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nvar regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nvar Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return (0, bytes_1.zeroPad)(value, 32);\n            }\n            return (0, bytes_1.arrayify)(value);\n        case \"string\":\n            return (0, strings_1.toUtf8Bytes)(value);\n        case \"bytes\":\n            return (0, bytes_1.arrayify)(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return (0, bytes_1.zeroPad)(value, 32);\n            }\n            return (0, bytes_1.arrayify)(value);\n    }\n    var match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        var size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = bignumber_1.BigNumber.from(value).toTwos(size);\n        return (0, bytes_1.zeroPad)(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if ((0, bytes_1.arrayify)(value).byteLength !== size) {\n            logger.throwArgumentError(\"invalid value for \" + type, \"value\", value);\n        }\n        if (isArray) {\n            return (0, bytes_1.arrayify)((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        var baseType_1 = match[1];\n        var count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(\"invalid array length for \" + type, \"value\", value);\n        }\n        var result_1 = [];\n        value.forEach(function (value) {\n            result_1.push(_pack(baseType_1, value, true));\n        });\n        return (0, bytes_1.concat)(result_1);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nfunction pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    var tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return (0, bytes_1.hexlify)((0, bytes_1.concat)(tight));\n}\nexports.pack = pack;\nfunction keccak256(types, values) {\n    return (0, keccak256_1.keccak256)(pack(types, values));\n}\nexports.keccak256 = keccak256;\nfunction sha256(types, values) {\n    return (0, sha2_1.sha256)(pack(types, values));\n}\nexports.sha256 = sha256;\n//# sourceMappingURL=index.js.map","import {\n  TransactionStatus,\n  TransactionType,\n} from '@metamask/transaction-controller';\n\nexport const PENDING_STATUS_HASH = {\n  [TransactionStatus.unapproved]: true,\n  [TransactionStatus.approved]: true,\n  [TransactionStatus.submitted]: true,\n};\n\nexport const PRIORITY_STATUS_HASH = {\n  ...PENDING_STATUS_HASH,\n  [TransactionStatus.confirmed]: true,\n};\n\nexport const TOKEN_CATEGORY_HASH = {\n  [TransactionType.tokenMethodApprove]: true,\n  [TransactionType.tokenMethodSetApprovalForAll]: true,\n  [TransactionType.tokenMethodTransfer]: true,\n  [TransactionType.tokenMethodTransferFrom]: true,\n  [TransactionType.tokenMethodIncreaseAllowance]: true,\n};\n"]}