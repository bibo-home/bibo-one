{"version":3,"sources":["node_modules/@metamask/snaps-rpc-methods/dist/restricted/getBip32Entropy.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/getBip32PublicKey.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/getBip44Entropy.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/getEntropy.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/getLocale.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/getPreferences.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/index.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/invokeSnap.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/manageAccounts.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/manageState.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/notify.cjs","node_modules/@metamask/snaps-rpc-methods/dist/utils.cjs","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/base-controller/dist/index.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-3YOPLPVY.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-6PXDVUYM.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-7A3VYLCK.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-B6PDRQ7N.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-F5TBMVWC.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-FYADAA2G.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-VBIZGGQL.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-VQPP5PWS.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-VSDHL2GQ.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-X4ZAW4QR.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-Z2XKIXLS.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/chunk-ZH4MLSXX.js","node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/permission-controller/dist/index.js","node_modules/@metamask/snaps-rpc-methods/node_modules/nanoid/index.browser.cjs","node_modules/@metamask/snaps-rpc-methods/node_modules/nanoid/url-alphabet/index.cjs","node_modules/@metamask/snaps-sdk/dist/error-wrappers.cjs","node_modules/@metamask/snaps-sdk/dist/errors.cjs","node_modules/@metamask/snaps-sdk/dist/images.cjs","node_modules/@metamask/snaps-sdk/dist/index.cjs","node_modules/@metamask/snaps-sdk/dist/internals/error-wrappers.cjs","node_modules/@metamask/snaps-sdk/dist/internals/errors.cjs","node_modules/@metamask/snaps-sdk/dist/internals/helpers.cjs","node_modules/@metamask/snaps-sdk/dist/internals/index.cjs","node_modules/@metamask/snaps-sdk/dist/internals/jsx.cjs","node_modules/@metamask/snaps-sdk/dist/internals/structs.cjs","node_modules/@metamask/snaps-sdk/dist/internals/svg.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/component.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Address.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Box.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Card.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Container.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Copyable.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Divider.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Footer.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Heading.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Icon.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Image.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Link.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Row.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Section.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Spinner.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Text.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Tooltip.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/Value.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Button.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Checkbox.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Dropdown.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Field.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/FileInput.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Form.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Input.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Option.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Radio.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/RadioGroup.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/Selector.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/SelectorOption.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/form/index.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/formatting/Bold.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/formatting/Italic.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/formatting/index.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/components/index.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/index.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/jsx-dev-runtime.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/jsx-runtime.cjs","node_modules/@metamask/snaps-sdk/dist/jsx/validation.cjs","node_modules/@metamask/snaps-sdk/dist/types/caip.cjs","node_modules/@metamask/snaps-sdk/dist/types/global.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/cronjob.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/home-page.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/index.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/keyring.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/lifecycle.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/name-lookup.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/rpc-request.cjs","app/scripts/controllers/permissions/enums.ts","node_modules/@metamask/snaps-sdk/dist/types/handlers/signature.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/transaction.cjs","node_modules/@metamask/snaps-sdk/dist/types/handlers/user-input.cjs","node_modules/@metamask/snaps-sdk/dist/types/index.cjs","node_modules/@metamask/snaps-sdk/dist/types/interface.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/create-interface.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/dialog.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-bip32-entropy.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-bip32-public-key.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-bip44-entropy.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-client-status.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-entropy.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-file.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-interface-state.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-locale.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-preferences.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/get-snaps.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/index.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/invoke-keyring.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/invoke-snap.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/manage-accounts.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/manage-state.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/methods.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/notify.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/request-snaps.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/resolve-interface.cjs","node_modules/@metamask/snaps-sdk/dist/types/methods/update-interface.cjs","node_modules/@metamask/snaps-sdk/dist/types/permissions.cjs","node_modules/@metamask/snaps-sdk/dist/types/provider.cjs","node_modules/@metamask/snaps-sdk/dist/types/snap.cjs","node_modules/@metamask/snaps-sdk/dist/ui/builder.cjs","node_modules/@metamask/snaps-sdk/dist/ui/component.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/address.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/button.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/copyable.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/divider.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/form.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/heading.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/image.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/index.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/input.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/panel.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/row.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/spinner.cjs","node_modules/@metamask/snaps-sdk/dist/ui/components/text.cjs","node_modules/@metamask/snaps-sdk/dist/ui/index.cjs","node_modules/@metamask/snaps-sdk/dist/ui/nodes.cjs","node_modules/@metamask/snaps-sdk/jsx-runtime.js","node_modules/@metamask/snaps-sdk/jsx.js","node_modules/@metamask/snaps-utils/dist/array.cjs","node_modules/@metamask/snaps-utils/dist/auxiliary-files.cjs","node_modules/@metamask/snaps-utils/dist/base64.cjs","node_modules/@metamask/snaps-utils/dist/bytes.cjs","node_modules/@metamask/snaps-utils/dist/caveats.cjs","node_modules/@metamask/snaps-utils/dist/checksum.cjs","node_modules/@metamask/snaps-utils/dist/constants.cjs","node_modules/@metamask/snaps-utils/dist/cronjob.cjs","node_modules/@metamask/snaps-utils/dist/deep-clone.cjs","node_modules/@metamask/snaps-utils/dist/default-endowments.cjs","node_modules/@metamask/snaps-utils/dist/derivation-paths.cjs","node_modules/@metamask/snaps-utils/dist/entropy.cjs","node_modules/@metamask/snaps-utils/dist/errors.cjs","node_modules/@metamask/snaps-utils/dist/handler-types.cjs","node_modules/@metamask/snaps-utils/dist/handlers.cjs","node_modules/@metamask/snaps-utils/dist/icon.cjs","node_modules/@metamask/snaps-utils/dist/iframe.cjs","node_modules/@metamask/snaps-utils/dist/index.cjs","node_modules/@metamask/snaps-utils/dist/json-rpc.cjs","node_modules/@metamask/snaps-utils/dist/json.cjs","node_modules/@metamask/snaps-utils/dist/localization.cjs","node_modules/@metamask/snaps-utils/dist/logging.cjs","node_modules/@metamask/snaps-utils/dist/manifest/index.cjs","node_modules/@metamask/snaps-utils/dist/manifest/validation.cjs","node_modules/@metamask/snaps-utils/dist/namespace.cjs","node_modules/@metamask/snaps-utils/dist/path.cjs","node_modules/@metamask/snaps-utils/dist/promise.cjs","node_modules/@metamask/snaps-utils/dist/snaps.cjs","node_modules/@metamask/snaps-utils/dist/strings.cjs","node_modules/@metamask/snaps-utils/dist/structs.cjs","node_modules/@metamask/snaps-utils/dist/svg.cjs","node_modules/@metamask/snaps-utils/dist/types.cjs","node_modules/@metamask/snaps-utils/dist/ui.cjs","node_modules/@metamask/snaps-utils/dist/validation.cjs","node_modules/@metamask/snaps-utils/dist/versions.cjs","node_modules/@metamask/snaps-utils/dist/virtual-file/VirtualFile.cjs","node_modules/@metamask/snaps-utils/dist/virtual-file/index.cjs","node_modules/@metamask/snaps-utils/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/base-controller/dist/index.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-3YOPLPVY.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-6PXDVUYM.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-7A3VYLCK.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-B6PDRQ7N.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-F5TBMVWC.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-FYADAA2G.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-VBIZGGQL.js","app/scripts/controllers/permissions/index.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-VQPP5PWS.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-VSDHL2GQ.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-X4ZAW4QR.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-Z2XKIXLS.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/chunk-ZH4MLSXX.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/permission-controller/dist/index.js","node_modules/@metamask/snaps-utils/node_modules/@metamask/slip44/slip44.json","node_modules/@metamask/snaps-utils/node_modules/nanoid/index.browser.cjs","node_modules/@metamask/snaps-utils/node_modules/nanoid/url-alphabet/index.cjs","node_modules/@metamask/superstruct/dist/error.cjs","node_modules/@metamask/superstruct/dist/index.cjs","node_modules/@metamask/superstruct/dist/struct.cjs","node_modules/@metamask/superstruct/dist/structs/coercions.cjs","node_modules/@metamask/superstruct/dist/structs/refinements.cjs","node_modules/@metamask/superstruct/dist/structs/types.cjs","node_modules/@metamask/superstruct/dist/structs/utilities.cjs","node_modules/@metamask/superstruct/dist/utils.cjs","node_modules/@metamask/swappable-obj-proxy/dist/createEventEmitterProxy.js","node_modules/@metamask/swappable-obj-proxy/dist/createSwappableProxy.js","node_modules/@metamask/swappable-obj-proxy/dist/index.js","node_modules/@metamask/swappable-obj-proxy/dist/types.js","node_modules/@metamask/transaction-controller/dist/TransactionController.cjs","node_modules/@metamask/transaction-controller/dist/constants.cjs","node_modules/@metamask/transaction-controller/dist/errors.cjs","node_modules/@metamask/transaction-controller/dist/gas-flows/DefaultGasFeeFlow.cjs","node_modules/@metamask/transaction-controller/dist/gas-flows/LineaGasFeeFlow.cjs","node_modules/@metamask/transaction-controller/dist/gas-flows/OptimismLayer1GasFeeFlow.cjs","node_modules/@metamask/transaction-controller/dist/gas-flows/OracleLayer1GasFeeFlow.cjs","node_modules/@metamask/transaction-controller/dist/gas-flows/ScrollLayer1GasFeeFlow.cjs","node_modules/@metamask/transaction-controller/dist/gas-flows/TestGasFeeFlow.cjs","node_modules/@metamask/transaction-controller/dist/helpers/EtherscanRemoteTransactionSource.cjs","node_modules/@metamask/transaction-controller/dist/helpers/GasFeePoller.cjs","node_modules/@metamask/transaction-controller/dist/helpers/IncomingTransactionHelper.cjs","node_modules/@metamask/transaction-controller/dist/helpers/MultichainTrackingHelper.cjs","node_modules/@metamask/transaction-controller/dist/helpers/PendingTransactionTracker.cjs","node_modules/@metamask/transaction-controller/dist/index.cjs","node_modules/@metamask/transaction-controller/dist/logger.cjs","node_modules/@metamask/transaction-controller/dist/types.cjs","node_modules/@metamask/transaction-controller/dist/utils/etherscan.cjs","node_modules/@metamask/transaction-controller/dist/utils/external-transactions.cjs","node_modules/@metamask/transaction-controller/dist/utils/gas-fees.cjs","node_modules/@metamask/transaction-controller/dist/utils/gas-flow.cjs","node_modules/@metamask/transaction-controller/dist/utils/gas.cjs","node_modules/@metamask/transaction-controller/dist/utils/history.cjs","node_modules/@metamask/transaction-controller/dist/utils/layer1-gas-fee-flow.cjs","node_modules/@metamask/transaction-controller/dist/utils/nonce.cjs","node_modules/@metamask/transaction-controller/dist/utils/retry.cjs","node_modules/@metamask/transaction-controller/dist/utils/simulation-api.cjs","node_modules/@metamask/transaction-controller/dist/utils/simulation.cjs","node_modules/@metamask/transaction-controller/dist/utils/swaps.cjs","node_modules/@metamask/transaction-controller/dist/utils/transaction-type.cjs","node_modules/@metamask/transaction-controller/dist/utils/utils.cjs","node_modules/@metamask/transaction-controller/dist/utils/validation.cjs","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/dist/NonceTracker.js","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/dist/index.js","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/node_modules/async-mutex/lib/Mutex.js","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/node_modules/async-mutex/lib/Semaphore.js","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/node_modules/async-mutex/lib/errors.js","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/node_modules/async-mutex/lib/index.js","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/node_modules/async-mutex/lib/tryAcquire.js","node_modules/@metamask/transaction-controller/node_modules/@metamask/nonce-tracker/node_modules/async-mutex/lib/withTimeout.js","app/scripts/controllers/permissions/selectors.js","node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/utils/dist/versions.cjs","node_modules/@ngraveio/bc-ur/dist/bytewords.js","node_modules/@ngraveio/bc-ur/dist/cbor.js","node_modules/@ngraveio/bc-ur/dist/errors.js","node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js","node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js","node_modules/@ngraveio/bc-ur/dist/fountainUtils.js","node_modules/@ngraveio/bc-ur/dist/index.js","node_modules/@ngraveio/bc-ur/dist/ur.js","node_modules/@ngraveio/bc-ur/dist/urDecoder.js","node_modules/@ngraveio/bc-ur/dist/urEncoder.js","node_modules/@ngraveio/bc-ur/dist/utils.js","node_modules/@ngraveio/bc-ur/dist/xoshiro.js","node_modules/@ngraveio/bc-ur/node_modules/bignumber.js/bignumber.js","node_modules/@noble/ciphers/_assert.js","node_modules/@noble/ciphers/_polyval.js","node_modules/@noble/ciphers/aes.js","node_modules/@noble/ciphers/crypto.js","node_modules/@noble/ciphers/utils.js","node_modules/@noble/ciphers/webcrypto.js","node_modules/@noble/curves/_shortw_utils.js","node_modules/@noble/curves/abstract/curve.js","node_modules/@noble/curves/abstract/edwards.js","node_modules/@noble/curves/abstract/hash-to-curve.js","node_modules/@noble/curves/abstract/modular.js","node_modules/@noble/curves/abstract/montgomery.js","node_modules/@noble/curves/abstract/utils.js","node_modules/@noble/curves/abstract/weierstrass.js","node_modules/@noble/curves/ed25519.js","node_modules/@noble/curves/secp256k1.js","node_modules/@noble/hashes/_assert.js","node_modules/@noble/hashes/_md.js","node_modules/@noble/hashes/_u64.js","node_modules/@noble/hashes/crypto.js","node_modules/@noble/hashes/hmac.js","node_modules/@noble/hashes/pbkdf2.js","node_modules/@noble/hashes/ripemd160.js","node_modules/@noble/hashes/scrypt.js","node_modules/@noble/hashes/sha256.js","node_modules/@noble/hashes/sha3.js","node_modules/@noble/hashes/sha512.js","node_modules/@noble/hashes/utils.js","node_modules/@popperjs/core/dist/cjs/popper.js","node_modules/@protobufjs/aspromise/index.js","node_modules/@protobufjs/base64/index.js","node_modules/@protobufjs/codegen/index.js","node_modules/@protobufjs/eventemitter/index.js","node_modules/@protobufjs/fetch/index.js","node_modules/@protobufjs/float/index.js","node_modules/@protobufjs/inquire/index.js","node_modules/@protobufjs/path/index.js","node_modules/@protobufjs/pool/index.js","node_modules/@protobufjs/utf8/index.js","node_modules/@reduxjs/toolkit/dist/index.js"],"names":["Object","defineProperty","exports","value","getBip32EntropyImplementation","getBip32EntropyBuilder","permission_controller_1","require","rpc_errors_1","snaps_utils_1","utils_1","utils_2","targetName","getMnemonic","getUnlockPromise","async","args","params","assert","getNode","curve","path","secretRecoveryPhrase","toJSON","freeze","specificationBuilder","methodHooks","permissionType","PermissionType","RestrictedMethod","allowedCaveats","SnapCaveatType","PermittedDerivationPaths","methodImplementation","validator","caveats","length","type","rpcErrors","invalidParams","message","subjectTypes","SubjectType","Snap","getBip32PublicKeyImplementation","getBip32PublicKeyBuilder","Bip32PublicKeyArgsStruct","superstruct_1","bip32entropy","object","Bip32PathStruct","CurveStruct","compressed","optional","boolean","assertStruct","node","compressedPublicKey","publicKey","getBip44EntropyImplementation","getBip44EntropyBuilder","key_tree_1","BIP44CoinTypeNode","fromDerivationPath","coinType","PermittedCoinTypes","getEntropyBuilder","GetEntropyArgsStruct","version","literal","salt","string","getEntropyImplementation","options","context","origin","mnemonicPhrase","deriveEntropy","input","magic","SIP_6_MAGIC_VALUE","getImplementation","getLocaleBuilder","methodName","getPreferences","_args","locale","getPreferencesBuilder","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","DIALOG_APPROVAL_TYPES","restrictedMethodPermissionBuilders","getEncryptionEntropy","WALLET_SNAP_PERMISSION_KEY","dialog_1","getBip32Entropy_1","getBip32PublicKey_1","getBip44Entropy_1","getEntropy_1","getLocale_1","getPreferences_1","invokeSnap_1","manageAccounts_1","manageState_1","notify_1","invokeSnap_2","manageState_2","dialogBuilder","invokeSnapBuilder","manageStateBuilder","notifyBuilder","manageAccountsBuilder","dialog_2","getInvokeSnapImplementation","handleSnapInstall","requestData","messagingSystem","snaps","permissions","permittedSnaps","metadata","dedupedSnaps","keys","reduce","filteredSnaps","snap","getSnap","handleSnapRpcRequest","snapId","request","invalidRequest","handler","HandlerType","OnRpcRequest","SnapIds","sideEffect","onPermitted","manageAccountsImplementation","SnapMessageStruct","union","method","array","JsonStruct","record","getSnapKeyring","keyring","handleKeyringSnapMessage","getValidatedParams","getManageStateImplementation","STORAGE_SIZE_LIMIT","STATE_ENCRYPTION_SALT","snaps_sdk_1","clearSnapState","getSnapState","updateSnapState","validatedParams","shouldEncrypt","encrypted","operation","ManageStateOperation","ClearState","GetState","UpdateState","newState","storageSizeLimit","isObject","values","includes","data","receivedNewState","size","getJsonSize","STATE_ENCRYPTION_MAGIC_VALUE","showNativeNotification","showInAppNotification","isOnPhishingList","maybeUpdatePhishingList","validateTextLinks","NotificationType","Native","InApp","isNotString","getPathPrefix","selectHooks","sha3_1","HARDENED_VALUE","assertExhaustive","hooks","hookNames","hookSubset","_hookName","hookName","inputBytes","stringToBytes","saltBytes","computedDerivationPath","hash","view","createDataView","index","pathIndex","getUint32","push","getDerivationPathArray","keccak_256","concatBytes","privateKey","SLIP10Node","derivationPath","add0x","prefix","slice","map","BaseControllerV1","constructor","config","state","defaultConfig","defaultState","disabled","name","internalConfig","internalState","internalListeners","initialState","initialConfig","initialize","configure","update","overwrite","fullUpdate","assign","key","notify","forEach","listener","subscribe","unsubscribe","findIndex","cb","splice","BaseControllerV1_default","_actions","_events","_initialEventPayloadGetters","_eventPayloadCache","_chunkUJFCPTF3js","_chunkZ4BLTVTBjs","WeakMap","ControllerMessenger","__privateAdd","Map","registerActionHandler","actionType","__privateGet","has","Error","set","unregisterActionHandler","delete","clearActions","clear","registerInitialEventPayload","eventType","getPayload","publish","payload","subscribers","selector","entries","previousValue","newValue","error","setTimeout","initialValue","clearEventSubscriptions","clearSubscriptions","getRestricted","allowedActions","allowedEvents","RestrictedControllerMessenger","controllerMessenger","_internalState","_immer","enablePatches","deriveStateFromMetadata","metadataProperty","derivedState","stateMetadata","String","propertyMetadata","stateProperty","BaseController","messenger","__privateSet","_","callback","nextState","patches","inversePatches","produceWithPatches","applyPatches","destroy","getAnonymizedState","getPersistentState","_controllerMessenger","_controllerName","_allowedActions","_allowedEvents","_isAllowedEvent","isAllowedEvent_fn","_isAllowedAction","isAllowedAction_fn","_isInCurrentNamespace","isInCurrentNamespace_fn","WeakSet","__privateMethod","startsWith","action","event","__accessCheck","obj","member","msg","TypeError","getter","add","setter","_chunkFTHCJ6HYjs","_chunkIURK6TKDjs","_chunkG42723LGjs","_chunkFYADAA2Gjs","_utils","isRestrictedMethodCaveatSpecification","specification","hasProperty","decorateWithCaveats","permission","caveatSpecifications","decorated","caveat","UnrecognizedCaveatTypeError","CaveatSpecificationMismatchError","decorator","_chunkVBIZGGQLjs","_chunk7A3VYLCKjs","_chunkX4ZAW4QRjs","rpc_methods_exports","__export","handlers","requestPermissionsHandler","getPermissionsHandler","revokePermissionsHandler","_controllerutils","methodNames","implementation","req","res","_next","end","requestPermissionsForOrigin","Array","isArray","isPlainObject","requestedPermissions","grantedPermissions","result","_chunk3YOPLPVYjs","_chunkZH4MLSXXjs","_chunkF5TBMVWCjs","_chunkVQPP5PWSjs","_chunkZ2XKIXLSjs","_basecontroller","_rpcerrors","_deepfreezestrict","_deepfreezestrict2","default","_nanoid","controllerName","_expectGetCaveatMerger","expectGetCaveatMerger_fn","_applyGrantedPermissions","applyGrantedPermissions_fn","_mergeIncrementalPermissions","mergeIncrementalPermissions_fn","_mergePermission","mergePermission_fn","_mergeCaveat","mergeCaveat_fn","_handleApprovedPermissions","handleApprovedPermissions_fn","CaveatMutatorOperation","CaveatMutatorOperation2","PermissionController","permissionSpecifications","unrestrictedMethods","super","subjects","anonymous","persist","_unrestrictedMethods","Set","_caveatSpecifications","validatePermissionSpecifications","_permissionSpecifications","registerMessageHandlers","createPermissionMiddleware","getPermissionMiddlewareFactory","executeRestrictedMethod","_executeRestrictedMethod","bind","getRestrictedMethod","isUnrestrictedMethod","getPermissionSpecification","getCaveatSpecification","caveatType","innerTargetName","isRestrictedMethodCaveat","clearState","getEndowments","getSubjectNames","getPermissions","hasPermission","hasPermissions","grantPermissions","grantPermissionsIncremental","subject","requestPermissions","requestPermissionsIncremental","revokeAllPermissions","target","revokePermissionForAllSubjects","revokePermissions","caveatValue","updateCaveat","_draftState","getTypedPermissionSpecification","requestingOrigin","failureError","methodNotFound","EndowmentPermissionDoesNotExistError","targetExists","hasSpecificationType","getPermission","Boolean","draftState","UnrecognizedSubjectError","revokePermission","subjectsAndPermissions","PermissionDoesNotExistError","deletePermission","hasCaveat","getCaveat","findCaveat","addCaveat","CaveatAlreadyExistsError","setCaveat","CaveatDoesNotExistError","validateCaveat","caveatIndex","existingCaveat","validateModifiedPermission","updatePermissionsByCaveat","targetCaveatType","mutator","targetCaveat","find","mutatorResult","parentCapability","deleteCaveat","removeCaveat","validatePermission","approvedPermissions","preserveExistingPermissions","mergePermissions","invokePermissionValidator","performCaveatValidation","subjectType","InvalidCaveatsPropertyError","seenCaveatTypes","ForbiddenCaveatError","DuplicateCaveatError","setValidatedPermissions","castDraft","constructCaveats","requestedCaveats","caveatArray","requestedCaveat","isNonEmptyArray","InvalidCaveatError","InvalidCaveatFieldsError","InvalidCaveatTypeError","CaveatMissingValueError","isValidJson","CaveatInvalidJsonError","id","nanoid","validateRequestedPermissions","permissionsRequest","approvedRequest","requestUserApproval","currentPermissions","newPermissions","permissionDiffMap","InvalidMergedPermissionsError","internalError","diff","validateApprovedPermissions","getSideEffects","sideEffectList","permittedHandlers","onFailure","failureHandlers","executeSideEffects","sideEffects","promiseResults","Promise","allSettled","permittedHandler","rejectedHandlers","filter","promise","status","failureHandlersList","all","failureHandler","reasons","reason","console","errors","originalMetadata","newId","newOrigin","originalId","mutatedId","originalOrigin","mutatedOrigin","JsonRpcError","acceptPermissionsRequest","hasApprovalRequest","PermissionsRequestNotFoundError","_rejectPermissionsRequest","rejectPermissionsRequest","userRejectedRequest","unauthorized","endowmentGetter","merger","CaveatMergerDoesNotExistError","InvalidSubjectIdentifierError","requestedTarget","approvedPermission","InvalidApprovedPermissionError","permissionOptions","invoker","factory","constructPermission","existingPermissions","incrementalRequestedPermissions","produce","draftExistingPermissions","leftPermissions","rightPermission","leftPermission","newPermission","caveatsDiff","caveatPairs","leftUniqueCaveats","rightUniqueCaveats","collectUniqueAndPairedCaveats","mergedCaveats","caveatDiffMap","diffMap","leftCaveat","rightCaveat","newCaveat","allCaveats","CaveatMergeTypeMismatchError","approvedMetadata","sideEffectsData","acc","i","_jsonrpcengine","createAsyncMiddleware","next","cause","caveatsProperty","receivedCaveat","errorCodes","rpc","leftCaveatType","rightCaveatType","caveatSpec","opts","providerErrors","internal","_req","getPermissionsForOrigin","MethodNames","MethodNames2","leftCaveats","rightCaveats","rightCaveatIndex","SubjectType2","subjectMetadata","SubjectMetadataController","_SubjectMetadataController","subjectCacheLimit","Number","isInteger","getTrimmedState","subjectHasPermissions","subjectsWithoutPermissionsEncounteredSinceStartup","getSubjectMetadata","addSubjectMetadata","newMetadata","extensionId","iconUrl","originToForget","cachedOrigin","trimMetadataState","newSubjectMetadata","revokePermissionsForOrigin","param","permissionKeys","__defProp","PermissionType2","date","Date","getTime","expectedType","_chunk6PXDVUYMjs","_chunkB6PDRQ7Njs","_chunkVSDHL2GQjs","permissionRpcMethods","urlAlphabet","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","defaultSize","getRandom","mask","Math","log","LN2","step","j","module","byte","toString","toUpperCase","customAlphabet","UserRejectedRequestError","UnsupportedMethodError","UnauthorizedError","DisconnectedError","ChainDisconnectedError","TransactionRejected","ResourceUnavailableError","ResourceNotFoundError","ParseError","MethodNotSupportedError","MethodNotFoundError","LimitExceededError","InvalidRequestError","InvalidParamsError","InvalidInputError","InternalError","internals_1","createSnapError","invalidInput","limitExceeded","methodNotSupported","parse","resourceNotFound","resourceUnavailable","transactionRejected","chainDisconnected","disconnected","unsupportedMethod","_SnapError_code","_SnapError_message","_SnapError_data","_SnapError_stack","__classPrivateFieldSet","receiver","kind","f","__classPrivateFieldGet","SnapError","getErrorMessage","getErrorCode","mergedData","getErrorData","stack","code","SNAP_ERROR_CODE","SNAP_ERROR_MESSAGE","serialize","getImageComponent","getImageData","ui_1","url","blob","fetch","then","response","ok","statusText","getRawImageData","arrayBuffer","bytesToBase64","width","height","imageData","image","trim","selectiveUnion","typedUnion","enumValue","getErrorStack","errors_1","fn","nullUnion","structs_1","structs","define","JSON","stringify","head","tail","struct","Struct","schema","constant","flatStructs","flat","Infinity","types","is","entry","coercer","refiner","join","svg","refine","removeUndefinedProps","props","fromEntries","createSnapComponent","rest","Address","component_1","Box","Card","Container","Copyable","Divider","Footer","Heading","Icon","IconName","Image","Link","Row","Section","Spinner","Text","Tooltip","Value","Button","Checkbox","Dropdown","Field","FileInput","Form","Input","Option","Radio","RadioGroup","Selector","SelectorOption","Bold","Italic","FieldChildUnionStruct","FormChildStruct","BoxChildStruct","assertJSXElement","isJSXElementUnsafe","isJSXElement","RootJSXElementStruct","JSXElementStruct","validation_1","jsxDEV","jsx_runtime_1","component","element","jsx","jsxs","ContainerStruct","SpinnerStruct","RowStruct","TooltipStruct","TooltipContentStruct","TooltipChildStruct","TextStruct","LinkStruct","HeadingStruct","ValueStruct","DividerStruct","CopyableStruct","FooterStruct","FooterChildStruct","SectionStruct","BoxStruct","BoxChildrenStruct","AddressStruct","FormattingStruct","ItalicStruct","BoldStruct","FormStruct","FieldStruct","FileInputStruct","RadioGroupStruct","RadioStruct","SelectorStruct","SelectorOptionStruct","CardStruct","DropdownStruct","OptionStruct","InputStruct","CheckboxStruct","ButtonStruct","IconStruct","ImageStruct","ElementStruct","StringElementStruct","KeyStruct","components_1","children","nestableStruct","lazy","nestable","nullable","singleChild","number","src","alt","IconNameStruct","color","variant","form","checked","label","placeholder","title","description","extra","accept","compact","BOX_INPUT_LEFT","BOX_INPUT_RIGHT","BOX_INPUT_BOTH","FIELD_CHILDREN_ARRAY","FieldChildStruct","tuple","address","HexChecksumAddressStruct","CaipAccountIdStruct","direction","alignment","center","FooterButtonStruct","some","child","sensitive","href","content","tooltip","NOTIFICATION_NAMES","SeverityLevel","UserInputEventStruct","FileUploadEventStruct","InputChangeEventStruct","FormSubmitEventStruct","FileStruct","ButtonClickEventStruct","GenericEventStruct","UserInputEventType","ButtonClickEvent","contentType","contents","FormSubmitEvent","InputChangeEvent","FileUploadEvent","file","InterfaceContextStruct","ComponentOrElementStruct","InterfaceStateStruct","FormStateStruct","StateStruct","jsx_1","handlers_1","ComponentStruct","DialogType","AuxiliaryFileEncoding","createBuilder","partialNode","assertIsComponent","isComponent","builder_1","nodes_1","LiteralStruct","NodeType","button","ButtonType","ButtonVariant","Primary","Secondary","buttonType","Submit","copyable","divider","NodeStruct","FormComponentStruct","button_1","input_1","heading","PanelStruct","panel","image_1","panel_1","InputType","inputType","Password","ParentStruct","address_1","copyable_1","divider_1","form_1","heading_1","row_1","spinner_1","text_1","Panel","row","RowVariant","RowComponentStruct","Default","Critical","Warning","spinner","text","markdown","unknown","isEqual","a","b","every","validateAuxiliaryFiles","encodeAuxiliaryFile","base64_1","constants_1","encoding","Base64","decoded","decodeBase64","Utf8","bytesToString","bytesToHex","files","MAX_FILE_SIZE","encodeBase64","bytes_1","getBytes","globalThis","resolve","reject","reader","FileReader","onload","replace","onerror","readAsDataURL","File","base64","VirtualFile_1","unwrapped","VirtualFile","checksumFiles","checksum","sha256_1","subtle","digest","sha256","checksums","sort","isCronjobSpecificationArray","CronjobSpecificationArrayStruct","isCronjobSpecification","CronjobSpecificationStruct","parseCronExpression","CronExpressionStruct","CronjobRpcRequestStruct","cron_parser_1","jsonrpc","JsonRpcVersionStruct","JsonRpcIdStruct","JsonRpcParamsStruct","parseExpression","expression","ensureStringExpression","__importDefault","mod","deepClone","rfdc_1","proto","circles","DEFAULT_ENDOWMENTS","getSlip44ProtocolName","getSnapDerivationPathName","SNAPS_DERIVATION_PATHS","slip44_1","array_1","pathMetadata","endsWith","_WrappedSnapError_error","_WrappedSnapError_message","_WrappedSnapError_stack","unwrapError","isWrappedSnapError","isSerializedSnapError","isSnapError","WrappedSnapError","SNAP_ERROR_WRAPPER_MESSAGE","SNAP_ERROR_WRAPPER_CODE","serializeCause","serialized","isJsonRpcError","getJsonRpcError","SNAP_EXPORT_NAMES","OnNameLookupResponseStruct","DomainResolutionResponseStruct","AddressResolutionResponseStruct","DomainResolutionStruct","AddressResolutionStruct","OnHomePageResponseStruct","OnHomePageResponseWithIdStruct","OnHomePageResponseWithContentStruct","OnSignatureResponseStruct","OnTransactionResponseStruct","OnTransactionResponseWithContentStruct","OnTransactionResponseWithIdStruct","OnTransactionSeverityResponseStruct","SNAP_EXPORTS","handler_types_1","required","snapExport","OnTransaction","OnCronjob","OnNameLookup","OnInstall","OnUpdate","OnKeyringRequest","OnHomePage","OnSignature","OnUserInput","severity","protocol","resolvedDomain","resolvedAddress","domainName","resolvedDomains","resolvedAddresses","getSvgDimensions","assertIsSnapIcon","SVG_MAX_BYTE_SIZE_TEXT","SVG_MAX_BYTE_SIZE","svg_1","floor","icon","byteLength","isSvg","parsed","parseSvg","viewBox","_minX","_minY","viewBoxWidth","viewBoxHeight","split","parsedWidth","parseInt","parsedHeight","createWindow","uri","sandbox","iframe","document","createElement","setAttribute","body","appendChild","addEventListener","contentWindow","assertIsJsonRpcSuccess","isOriginAllowed","assertIsKeyringOrigins","KeyringOriginsStruct","assertIsRpcOrigins","RpcOriginsStruct","AllowedOriginsStruct","checkAllowedOrigin","matcher","regex","RegExp","createOriginRegExp","test","dapps","allowedOrigins","ErrorWrapper","origins","Website","isJsonRpcSuccess","isJsonRpcFailure","getJsonSizeUnsafe","parseJson","json","getSafeJson","TextEncoder","encode","validateSnapManifestLocalizations","getLocalizedSnapManifest","translate","TRANSLATION_REGEX","getLocalizationFile","getValidatedLocalizationFiles","LocalizationFileStruct","LOCALIZABLE_FIELDS","json_1","localizationFiles","localizationFile","matches","matchAll","from","match","translation","messages","snapManifest","manifest","field","StructError","SyntaxError","logWarning","logError","logInfo","snapsLogger","createProjectLogger","optionalParams","warn","createSnapManifest","assertIsSnapManifest","isSnapManifest","SnapManifestStruct","InitialConnectionsStruct","SnapAuxilaryFilesStruct","PermissionsStruct","EmptyObjectStruct","HandlerCaveatsStruct","MaxRequestTimeStruct","MAXIMUM_REQUEST_TIMEOUT","MINIMUM_REQUEST_TIMEOUT","LookupMatchersStruct","ChainIdsStruct","SnapIdsStruct","SemVerRangeStruct","SnapGetBip32EntropyPermissionsStruct","Bip32EntropyStruct","FORBIDDEN_COIN_TYPES","cronjob_1","entropy_1","json_rpc_1","namespace_1","snaps_1","types_1","FORBIDDEN_PURPOSES","FORBIDDEN_PATHS","part","isValidBIP32PathSegment","forbiddenPath","enums","isValidSemVerRange","SnapIdStruct","ChainIdStruct","tlds","schemes","inMilliseconds","Duration","Second","Minute","integer","maxRequestTime","mergeStructs","jobs","chains","matchers","allowSignatureOrigin","allowTransactionOrigin","snap_dialog","snap_manageState","snap_manageAccounts","snap_notify","snap_getBip32Entropy","snap_getBip32PublicKey","snap_getBip44Entropy","snap_getEntropy","snap_getLocale","wallet_snap","intersection","VersionStruct","proposedName","repository","source","shasum","ChecksumStruct","location","npm","filePath","iconPath","packageName","NameStruct","registry","locales","initialConnections","initialPermissions","manifestVersion","$schema","NpmSnapFileNames","Manifest","isNamespace","isAccountIdArray","isAccountId","isChainId","isNamespaceId","NamespaceIdStruct","NamespaceStruct","ChainStruct","AccountAddressStruct","AccountIdArrayStruct","AccountIdStruct","ChainIdStringStruct","LimitedString","parseAccountId","parseChainId","ACCOUNT_ADDRESS_REGEX","ACCOUNT_ID_REGEX","CHAIN_ID_REGEX","chainId","exec","groups","namespace","reference","accountId","accountAddress","chain","pattern","methods","events","normalizeRelative","search","verifyRequestedSnapPermissions","isSnapPermitted","isCaipChainId","assertIsValidSnapId","stripSnapPrefix","getSnapPrefix","HttpSnapIdStruct","NpmSnapIdStruct","LocalSnapIdStruct","BaseSnapIdStruct","LOCALHOST_HOSTNAMES","validateSnapShasum","getSnapChecksum","SnapStatusEvents","SnapStatus","PROPOSED_NAME_REGEX","base_1","fast_json_stable_stringify_1","validate_npm_package_name_1","caveats_1","checksum_1","getChecksummableManifest","manifestCopy","clone","sourceCode","svgIcon","auxiliaryFiles","errorMessage","LocalSnapIdSubUrlStruct","hostname","empty","SnapIdPrefixes","possiblePrefix","local","validate","pathname","normalized","validForNewPackages","warnings","walletSnapPermission","indent","spaces","repeat","createUnion","validateUnion","getStructErrorMessage","getStructFailureMessage","getStructErrorPrefix","getUnionStructNames","getStructFromPath","createFromStruct","getError","arrayToGenerator","SnapsStructError","named","chalk_1","strings_1","colorFunction","enabled","suffix","failure","failures","colorize","item","green","bold","received","red","unionNames","refinement","structKey","coerce","keyUnion","innerStruct","keyError","objectValue","objectStructs","validationResults","objectStruct","validatedValue","validationError","innerError","mergedStruct","ctx","fast_xml_parser_1","trimmed","XMLParser","ignoreAttributes","parseAttributeValue","isValidUrl","SNAP_STREAM_NAMES","NpmSnapPackageJsonStruct","main","instance","URL","UrlStruct","serialiseJsx","walkJsx","getJsxChildren","hasChildren","getTotalTextLength","validateJsxLinks","validateLink","getJsxElementFromComponent","getTextChildren","marked_1","MAX_TEXT_LENGTH","ALLOWED_PROTOCOLS","getButtonVariant","getChildren","elements","getLinkText","token","tokens","flatMap","getTextChildFromToken","getTextChildFromTokens","rootTokens","lexer","gfm","walkTokens","link","sum","filterJsxChild","depth","childResult","serialiseProps","localeCompare","prop","legacyComponent","textSize","validateComponentTextSize","getElement","links","getMarkdownLinks","childNode","indentation","trailingNewline","validateFetchedSnap","icon_1","localization_1","resolveVersionRange","getTargetVersion","DEFAULT_REQUESTED_SNAP_VERSION","semver_1","versions","versionRange","maxSatisfyingNonPreRelease","maxSatisfying","includePrerelease","VersionRangeStruct","deep_clone_1","TextDecoder","decode","vfile","_caveatMutators","_backgroundApi","_enums","_specifications","_selectors","hex","symbol","cached","explanation","error_js_1","utils_js_1","tuples","run","shiftIterator","innerTuple","toFailures","defaulted","struct_js_1","types_js_1","condition","fallback","strict","ret","changed","nonempty","min","max","getSize","threshold","exclusive","regexp","minimum","maximum","expected","of","never","func","bigint","any","utilities_js_1","Element","arrayValue","print","isNaN","Class","Structs","valueType","Key","mapKey","mapValue","knowns","Never","unknowns","objectKey","setValue","InnerStruct","coerced","first","pick","partial","omit","dynamic","deprecated","isType","schemas","subschema","isStruct","toFailure","branch","getPrototypeOf","done","Symbol","iterator","isIterable","validationResult","innerKey","innerValue","iterable","createEventEmitterProxy","filterNoop","internalEvents","externalEventFilter","initialTarget","eventFilter","givenEventFilter","eventsAdded","setTarget","newTarget","oldTarget","addedWith","filtered","off","removeEvent","addedEvent","unwrappedHandler","Proxy","_target","wrappedHandler","handlerArgs","eventAdded","addedName","addedUnwrappedHandler","apply","createSwappableProxy","Function","_TransactionController_instances","_TransactionController_internalEvents","_TransactionController_incomingTransactionOptions","_TransactionController_pendingTransactionOptions","_TransactionController_trace","_TransactionController_transactionHistoryLimit","_TransactionController_isSimulationEnabled","_TransactionController_testGasFeeFlows","_TransactionController_multichainTrackingHelper","_TransactionController_retryTransaction","_TransactionController_createNonceTracker","_TransactionController_createIncomingTransactionHelper","_TransactionController_createPendingTransactionTracker","_TransactionController_checkForPendingTransactionAndStartPolling","_TransactionController_stopAllTracking","_TransactionController_removeIncomingTransactionHelperListeners","_TransactionController_addIncomingTransactionHelperListeners","_TransactionController_removePendingTransactionTrackerListeners","_TransactionController_addPendingTransactionTrackerListeners","_TransactionController_getNonceTrackerPendingTransactions","_TransactionController_getGasFeeFlows","_TransactionController_getLayer1GasFeeFlows","_TransactionController_updateTransactionInternal","_TransactionController_checkIfTransactionParamsUpdated","_TransactionController_onTransactionParamsUpdated","_TransactionController_updateSimulationData","_TransactionController_onGasFeePollerTransactionUpdate","_TransactionController_getNetworkClientId","_TransactionController_getGlobalNetworkClientId","_TransactionController_getGlobalChainId","_TransactionController_isCustomNetwork","_TransactionController_getSelectedAccount","TransactionController","ApprovalState","SPEED_UP_RATE","CANCEL_RATE","HARDFORK","common_1","tx_1","util_1","base_controller_1","controller_utils_1","eth_query_1","network_controller_1","nonce_tracker_1","async_mutex_1","eth_method_registry_1","events_1","lodash_1","uuid_1","DefaultGasFeeFlow_1","LineaGasFeeFlow_1","OptimismLayer1GasFeeFlow_1","ScrollLayer1GasFeeFlow_1","TestGasFeeFlow_1","EtherscanRemoteTransactionSource_1","GasFeePoller_1","IncomingTransactionHelper_1","MultichainTrackingHelper_1","PendingTransactionTracker_1","logger_1","external_transactions_1","gas_1","gas_fees_1","gas_flow_1","history_1","layer1_gas_fee_flow_1","nonce_1","retry_1","simulation_1","swaps_1","transaction_type_1","transactions","methodData","lastFetchedBlockNumbers","Hardfork","London","failTransaction","transactionMeta","actionId","newTransactionMeta","transactionId","note","skipValidation","draftTransactionMeta","TransactionStatus","failed","normalizeTxError","err","projectLogger","onTransactionStatusChange","emit","registryLookup","fourBytePrefix","registryMethod","lookup","parsedRegistryMethod","blockTracker","disableHistory","disableSendFlowHistory","disableSwaps","getCurrentAccountEIP1559Compatibility","getCurrentNetworkEIP1559Compatibility","getExternalPendingTransactions","getGasFeeEstimates","getNetworkClientRegistry","getNetworkState","getPermittedAccounts","getSavedGasFees","incomingTransactions","isMultichainEnabled","isSimulationEnabled","onNetworkStateChange","pendingTransactions","provider","securityProviderRequest","sign","testGasFeeFlows","trace","transactionHistoryLimit","EventEmitter","approvingTransactionIds","mutex","Mutex","signAbortCallbacks","pendingTransactionTracker","startIfPendingTransactions","checkForPendingTransactionAndStartPolling","isSendFlowHistoryDisabled","isHistoryDisabled","isSwapsDisabled","MethodRegistry","_chainId","_request","afterSign","beforeCheckPendingTransaction","beforePublish","getAdditionalSignArguments","transactionHash","nonceTracker","findNetworkClientIdByChainId","MultichainTrackingHelper","incomingTransactionOptions","getNetworkClientById","networkClientId","removeIncomingTransactionHelperListeners","removePendingTransactionTrackerListeners","createNonceTracker","createIncomingTransactionHelper","createPendingTransactionTracker","etherscanRemoteTransactionSource","EtherscanRemoteTransactionSource","includeTokenTransfers","incomingTransactionHelper","gasFeeFlows","layer1GasFeeFlows","GasFeePoller","getGasFeeControllerEstimates","getProvider","getTransactions","onStateChange","hub","on","getChainId","onBootCleanup","handleMethodData","releaseLock","acquire","knownFourBytePrefix","addTransaction","txParams","deviceConfirmedOn","requireApproval","securityAlertResponse","sendFlowHistory","swaps","traceContext","requestNetworkClientId","normalizeTransactionParams","isEIP1559Compatible","getEIP1559Compatibility","validateTxParams","validateTransactionOrigin","dappSuggestedGasFees","generateDappSuggestedGasFees","ethQuery","getEthQuery","transactionType","determineTransactionType","existingTransactionMeta","getTransactionWithActionId","addedTransactionMeta","cloneDeep","v1","unapproved","time","now","userEditedGasLimit","verifiedOnBlockchain","parentContext","updateGasProperties","securityProviderResponse","addInitialHistorySnapshot","updateSwapsTransaction","cancelTransaction","addMetadata","catch","processApproval","isExisting","startIncomingTransactionPolling","networkClientIds","start","stopIncomingTransactionPolling","stop","stopAllIncomingTransactionPolling","updateIncomingTransactions","stopTransaction","gasValues","estimatedBaseFee","rate","TransactionType","cancel","prepareTransactionParams","to","afterSubmit","speedUpTransaction","retry","estimateGas","transaction","estimatedGas","simulationFails","gas","estimateGasBuffered","multiplier","blockGasLimit","addGasBuffer","updateTransaction","updateSecurityAlertResponse","getTransaction","updatedTransactionMeta","wipeTransactions","ignoreNetwork","currentChainId","newTransactions","toLowerCase","trimTransactionsForState","confirmExternalTransaction","transactionReceipt","baseFeePerGas","addExternalTransaction","confirmed","txReceipt","markNonceDuplicatesDropped","updatePostBalance","updateTransactionSendFlowHistory","transactionID","currentSendFlowHistoryLength","sendFlowHistoryToAdd","validateIfTransactionUnapproved","updateTransactionGasFees","defaultGasEstimates","estimateUsed","estimateSuggested","gasLimit","gasPrice","maxPriorityFeePerGas","maxFeePerGas","originalGasEstimate","userFeeLevel","transactionGasFees","pickBy","updatedMeta","merge","updatePreviousGasParams","transactionPreviousGas","previousGas","getNonceLock","updateEditableParams","txId","editableParams","updatedTransaction","updateTransactionLayer1GasFee","approveTransactionsWithSameNonce","listOfTxParams","hasNonce","initialTx","common","getCommonConfiguration","initialTxAsEthTx","TransactionFactory","fromTxData","initialTxAsSerializedHex","bufferToHex","rawTransactions","nonceLock","fromAddress","nonce","nextNonce","nonceDetails","signExternalTransaction","updateCustodialTransaction","custodyId","submitted","signed","submittedTime","searchCriteria","initialList","filterToCurrentNetwork","limit","predicateMethods","mapValues","predicate","v","transactionsToFilter","filteredTransactions","sortBy","nonces","txs","txMeta","unshift","estimateGasFee","transactionParams","gasFeeFlow","getGasFeeFlow","gasFeeControllerData","getGasFees","getLayer1GasFee","getTransactionLayer1GasFee","normalizedTransactionParams","isEIP1559Transaction","TransactionEnvelopeType","feeMarket","legacy","updatedTransactionParams","unsignedTransaction","signedTransaction","clearUnapprovedTransactions","abortTransactionSigning","abortCallback","isCustomNetwork","updateGas","updateGasFees","eip1559","failIncompleteTransactions","incompleteTransactions","approved","shouldShowRequest","resultCallbacks","meta","isCompleted","isTransactionCompleted","finishedPromise","waitForTransactionFinished","acceptResult","requestApproval","approvalValue","customNonce","customNonceValue","isTxCompleted","approveTransaction","SkippedViaBeforePublishHook","success","finalMeta","cleanupTasks","getTransactionOrThrow","NotApproved","releaseNonce","getNextNonce","draftTxMeta","rawTx","signTransaction","preTxBalance","shouldUpdatePreTxBalance","swap","query","publishTransaction","Approved","task","rawTransaction","rejected","nonceNetworkSet","txsToKeep","tx","convertHexToDecimal","toDateString","isFinalState","reverse","isLocalFinalState","getApprovalId","ApprovalType","Transaction","ORIGIN_METAMASK","expectsResult","errorMessagePrefix","globalChainId","globalNetworkClientId","configuration","prepareUnsignedEthTx","customChainParams","defaultHardfork","Common","custom","onIncomingTransactions","added","updated","currentTransactions","updatedTransactions","originalTransaction","onUpdatedLastFetchedBlockNumbers","blockNumber","sameFromAndNetworkTransactions","confirmedTxs","pendingTxs","validateConfirmedExternalTransaction","history","sameNonceTransactions","incoming","sameNonceTransactionIds","replacedBy","replacedById","setTransactionStatusDropped","dropped","once","updateTransactionMetaRSV","signedTx","transactionMetaWithRsv","currentNetworkIsEIP1559Compatible","currentAccountIsEIP1559Compatible","unsignedEthTx","transactionMetaFromHook","transactionMetaWithRawTx","getNonceTrackerTransactions","getAndFormatTransactionsForNonceTracker","onConfirmedTransaction","approvalTransactionMeta","updatePostTransactionBalance","publishTransactionForRetry","isTransactionAlreadyConfirmedError","forceCheckTransaction","normalizeGasFeeValues","validateGasValues","newTxParams","getTransactionParamsWithIncreasedGasFee","newFee","oldFee","originalType","NonceTracker","getPendingTransactions","getConfirmedTransactions","IncomingTransactionHelper","getCurrentAccount","getLastFetchedBlockNumbers","isEnabled","queryEntireHistory","remoteTransactionSource","transactionLimit","updateTransactions","PendingTransactionTracker","isResubmitEnabled","getGlobalLock","acquireNonceLockForChainIdKey","stopAllTracking","removeAllListeners","TestGasFeeFlow","LineaGasFeeFlow","DefaultGasFeeFlow","OptimismLayer1GasFeeFlow","ScrollLayer1GasFeeFlow","skipHistory","updateTransactionHistory","newParams","originalParams","updatedProperties","updatedParams","simulationData","SimulationErrorCode","Disabled","tokenBalanceChanges","getSimulationData","gasFeeEstimates","gasFeeEstimatesLoaded","layer1GasFee","selectedNetworkClientId","NetworkClientType","Custom","isInfuraNetworkType","ABI_SIMULATION_ERC721_LEGACY","ABI_SIMULATION_ERC20_WRAPPED","GAS_BUFFER_CHAIN_OVERRIDES","ETHERSCAN_SUPPORTED_NETWORKS","DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX","DEFAULT_ETHERSCAN_DOMAIN","CHAIN_IDS","MAINNET","GOERLI","BASE","BASE_TESTNET","BSC","BSC_TESTNET","OPTIMISM","OPTIMISM_TESTNET","OPBNB","OPBNB_TESTNET","OPTIMISM_SEPOLIA","POLYGON","POLYGON_TESTNET","AVALANCHE","AVALANCHE_TESTNET","FANTOM","FANTOM_TESTNET","SEPOLIA","LINEA_GOERLI","LINEA_SEPOLIA","LINEA_MAINNET","MOONBEAM","MOONBEAM_TESTNET","MOONRIVER","GNOSIS","ARBITRUM","ZKSYNC_ERA","ZORA","SCROLL","SCROLL_SEPOLIA","domain","subdomain","inputs","indexed","SimulationRevertedError","SimulationInvalidResponseError","SimulationChainNotSupportedError","SimulationError","ChainNotSupported","InvalidResponse","Reverted","_DefaultGasFeeFlow_instances","_DefaultGasFeeFlow_getFeeMarkEstimates","_DefaultGasFeeFlow_getLegacyEstimates","_DefaultGasFeeFlow_getGasPriceEstimates","_DefaultGasFeeFlow_getFeeMarketLevel","_DefaultGasFeeFlow_getLegacyLevel","gas_fee_controller_1","createModuleLogger","matchesTransaction","_transactionMeta","gasEstimateType","GAS_ESTIMATE_TYPES","FEE_MARKET","LEGACY","ETH_GASPRICE","estimates","levels","GasFeeEstimateLevel","level","GasFeeEstimateType","FeeMarket","Legacy","GasPrice","gweiDecimalToWeiHex","suggestedMaxFeePerGas","suggestedMaxPriorityFeePerGas","_LineaGasFeeFlow_instances","_LineaGasFeeFlow_getLineaGasFees","_LineaGasFeeFlow_getLineaResponse","_LineaGasFeeFlow_getValuesFromMultipliers","_LineaGasFeeFlow_getMaxFees","_LineaGasFeeFlow_feesToString","LINEA_CHAIN_IDS","ChainId","BASE_FEE_MULTIPLIERS","low","medium","high","PRIORITY_FEE_MULTIPLIERS","lineaResponse","baseFees","priorityFees","priorityFeePerGas","maxFees","toHex","multipliers","base","hexToBN","muln","fees","OracleLayer1GasFeeFlow_1","OPTIMISM_STACK_CHAIN_IDS","OracleLayer1GasFeeFlow","_OracleLayer1GasFeeFlow_instances","_OracleLayer1GasFeeFlow_oracleAddress","_OracleLayer1GasFeeFlow_signTransaction","_OracleLayer1GasFeeFlow_getOracleLayer1GasFee","_OracleLayer1GasFeeFlow_buildUnserializedTransaction","_OracleLayer1GasFeeFlow_buildTransactionParams","_OracleLayer1GasFeeFlow_buildTransactionCommon","contracts_1","providers_1","GAS_PRICE_ORACLE_ABI","internalType","outputs","stateMutability","oracleAddress","getLayer1Fee","contract","Contract","Web3Provider","serializedTransaction","getL1Fee","layer1Fee","toHexString","unserializedTransaction","keyBuffer","Buffer","SCROLL_CHAIN_IDS","_TestGasFeeFlow_instances","_TestGasFeeFlow_counter","_TestGasFeeFlow_getValueForTotalFee","INCREMENT","gasHex","gasDecimal","difference","mediumMaxTarget","mediumPriorityTarget","lowMaxTarget","lowPriorityTarget","highMaxTarget","highPriorityTarget","totalFee","feeDecimal","ceil","_EtherscanRemoteTransactionSource_instances","_EtherscanRemoteTransactionSource_includeTokenTransfers","_EtherscanRemoteTransactionSource_isTokenRequestPending","_EtherscanRemoteTransactionSource_mutex","_EtherscanRemoteTransactionSource_releaseLockAfterInterval","_EtherscanRemoteTransactionSource_fetchNormalTransactions","_EtherscanRemoteTransactionSource_fetchTokenTransactions","_EtherscanRemoteTransactionSource_getResponseTransactions","_EtherscanRemoteTransactionSource_normalizeTransaction","_EtherscanRemoteTransactionSource_normalizeTokenTransaction","_EtherscanRemoteTransactionSource_normalizeTransactionBase","bn_js_1","etherscan_1","etherscanRequest","etherscanTransactions","fetchEtherscanTransactions","fetchEtherscanTokenTransactions","isSupportedNetwork","getLastBlockVariations","fetchTransactions","acquiredTime","acquireTime","elapsedTime","remainingTime","incomingTransactionsLogger","isError","isTransfer","transferInformation","contractAddress","decimals","tokenDecimal","tokenSymbol","timeStamp","msecs","BNToHex","gasUsed","_GasFeePoller_instances","_GasFeePoller_findNetworkClientIdByChainId","_GasFeePoller_gasFeeFlows","_GasFeePoller_getGasFeeControllerEstimates","_GasFeePoller_getProvider","_GasFeePoller_getTransactions","_GasFeePoller_layer1GasFeeFlows","_GasFeePoller_timeout","_GasFeePoller_running","_GasFeePoller_start","_GasFeePoller_stop","_GasFeePoller_onTimeout","_GasFeePoller_updateUnapprovedTransactions","_GasFeePoller_updateUnapprovedTransaction","_GasFeePoller_updateTransactionGasFeeEstimates","_GasFeePoller_updateTransactionLayer1GasFee","_GasFeePoller_getUnapprovedTransactions","_GasFeePoller_getGasFeeControllerData","clearTimeout","unapprovedTransactions","gasFeeControllerDataByChainId","gasFeeEstimatesResponse","networkClientIdsByChainId","transactionNetworkClientId","entryPromises","_IncomingTransactionHelper_instances","_IncomingTransactionHelper_blockTracker","_IncomingTransactionHelper_getCurrentAccount","_IncomingTransactionHelper_getLastFetchedBlockNumbers","_IncomingTransactionHelper_getLocalTransactions","_IncomingTransactionHelper_getChainId","_IncomingTransactionHelper_isEnabled","_IncomingTransactionHelper_isRunning","_IncomingTransactionHelper_mutex","_IncomingTransactionHelper_onLatestBlock","_IncomingTransactionHelper_queryEntireHistory","_IncomingTransactionHelper_remoteTransactionSource","_IncomingTransactionHelper_transactionLimit","_IncomingTransactionHelper_updateTransactions","_IncomingTransactionHelper_sortTransactionsByTime","_IncomingTransactionHelper_getNewTransactions","_IncomingTransactionHelper_getUpdatedTransactions","_IncomingTransactionHelper_isTransactionOutdated","_IncomingTransactionHelper_getLastFetchedBlockNumberDec","_IncomingTransactionHelper_getFromBlock","_IncomingTransactionHelper_updateLastFetchedBlockNumber","_IncomingTransactionHelper_getBlockNumberKey","_IncomingTransactionHelper_canStart","UPDATE_CHECKS","getLocalTransactions","blockNumberHex","addListener","removeListener","latestBlockNumberHex","latestBlockNumber","getLatestBlock","additionalLastFetchedKeys","fromBlock","account","remoteTransactions","localTransactions","new","remoteTxs","localTxs","remoteTx","localTx","getValue","lastFetchedKey","lastFetchedBlockNumber","additionalKeys","currentBlockNumberValue","currentAccount","_MultichainTrackingHelper_instances","_MultichainTrackingHelper_isMultichainEnabled","_MultichainTrackingHelper_provider","_MultichainTrackingHelper_nonceTracker","_MultichainTrackingHelper_incomingTransactionOptions","_MultichainTrackingHelper_findNetworkClientIdByChainId","_MultichainTrackingHelper_getNetworkClientById","_MultichainTrackingHelper_getNetworkClientRegistry","_MultichainTrackingHelper_removeIncomingTransactionHelperListeners","_MultichainTrackingHelper_removePendingTransactionTrackerListeners","_MultichainTrackingHelper_createNonceTracker","_MultichainTrackingHelper_createIncomingTransactionHelper","_MultichainTrackingHelper_createPendingTransactionTracker","_MultichainTrackingHelper_nonceMutexesByChainId","_MultichainTrackingHelper_trackingMap","_MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap","_MultichainTrackingHelper_refreshTrackingMap","_MultichainTrackingHelper_stopTrackingByNetworkClientId","_MultichainTrackingHelper_startTrackingByNetworkClientId","_MultichainTrackingHelper_refreshEtherscanRemoteTransactionSources","_MultichainTrackingHelper_getNetworkClient","trackers","networkClients","existingNetworkClientIds","chainIdsInRegistry","networkClient","op","nonceMutexesForChainId","nonceMutexForKey","releaseLockForChainIdKey","networkClientIdForChainId","_PendingTransactionTracker_instances","_PendingTransactionTracker_blockTracker","_PendingTransactionTracker_droppedBlockCountByHash","_PendingTransactionTracker_getChainId","_PendingTransactionTracker_getEthQuery","_PendingTransactionTracker_getTransactions","_PendingTransactionTracker_isResubmitEnabled","_PendingTransactionTracker_listener","_PendingTransactionTracker_getGlobalLock","_PendingTransactionTracker_publishTransaction","_PendingTransactionTracker_running","_PendingTransactionTracker_beforeCheckPendingTransaction","_PendingTransactionTracker_beforePublish","_PendingTransactionTracker_start","_PendingTransactionTracker_onLatestBlock","_PendingTransactionTracker_checkTransactions","_PendingTransactionTracker_resubmitTransactions","_PendingTransactionTracker_isKnownTransactionError","_PendingTransactionTracker_resubmitTransaction","_PendingTransactionTracker_isResubmitDue","_PendingTransactionTracker_checkTransaction","_PendingTransactionTracker_onTransactionConfirmed","_PendingTransactionTracker_isTransactionDropped","_PendingTransactionTracker_isNonceTaken","_PendingTransactionTracker_getPendingTransactions","_PendingTransactionTracker_warnTransaction","_PendingTransactionTracker_failTransaction","_PendingTransactionTracker_dropTransaction","_PendingTransactionTracker_updateTransaction","_PendingTransactionTracker_getTransactionReceipt","_PendingTransactionTracker_getBlockByHash","_PendingTransactionTracker_getNetworkTransactionCount","_PendingTransactionTracker_getCurrentChainTransactions","KNOWN_TRANSACTION_ERRORS","count","ids","knownError","retryCount","txMetaWithFirstRetryBlockNumber","firstRetryBlockNumber","blocksSinceFirstRetry","pow","receipt","isSuccess","blockHash","timestamp","blockTimestamp","updatedTxMeta","networkNextNonceHex","networkNextNonceNumber","droppedBlockCount","isUserOperation","warning","txHash","includeTransactionDetails","mergeGasFeeEstimates","MAX_TRANSACTION_HISTORY_LENGTH","DISPLAYED_TRANSACTION_HISTORY_PATHS","WalletDevice","UserFeeLevel","SimulationTokenStandard","TransactionController_1","getEtherscanApiHost","etherscanTxUrl","urlParams","apiUrl","paramKey","getEtherscanApiUrl","startBlock","offset","handleFetch","networkInfo","externalTxNonce","gweiDecToWEIBN","initialParams","savedGasFees","SWAP_TRANSACTION_TYPES","suggestedGasFees","gasFeeEstimateType","gasPriceDecimal","getSuggestedGasFees","getGasFeeRequest","maxBaseFee","getMaxFeePerGas","priorityFee","getMaxPriorityFeePerGas","getGasPrice","CUSTOM","DAPP_SUGGESTED","MEDIUM","getUserFeeLevel","estimateType","updateDefaultGasEstimates","getLegacyEstimate","transactionGasFeeEstimate","weiHexToGweiDec","gasFeeControllerEstimates","transactionGasFeeEstimates","transactionEstimateType","gasFeeControllerEstimate","DEFAULT_GAS_MULTIPLIER","FIXED_GAS","gasLimitHex","gasLimitBN","fractionBN","errorKey","debug","estimatedGasBN","maxGasBN","paddedGasBN","gt","estimatedGasHex","lt","paddedHex","maxHex","getCode","requiresFixedGas","bufferMultiplier","getGas","fast_json_patch_1","generateHistoryEntry","previousState","currentState","historyOperationsEntry","compare","replayHistory","transactionHistory","val","applyPatch","newDocument","snapshotFromTransactionMeta","snapshot","newHistoryEntry","updatedHistory","initialEntry","historyEntries","firstNonDisplayedEntryIndex","historyEntry","mergeTargetEntryIndex","firstIndexToMerge","firstEntryToMerge","secondEntryToMerge","beforeMergeState","afterMergeState","mergedHistoryEntry","compressTransactionHistory","layer1GasFeeFlow","getLayer1GasFeeFlow","existingNonce","transactionStatus","multiplyHex","decimalValue","decimalResult","originalTransactionParams","newGasValues","newGasPrice","currentGasPrice","getIncreasedGasPrice","new1559Values","currentMaxFeePerGas","currentMaxPriorityFeePerGas","getIncreased1559Values","simulateTransactions","BASE_URL","ENDPOINT_NETWORKS","requestIdCounter","getUrl","networkData","getNetworkData","chainIdDecimal","network","confirmations","getSimulationUrl","requestId","responseJson","getEvents","SupportedToken","abi_1","metamask_eth_abis_1","simulation_api_1","SUPPORTED_EVENTS","SUPPORTED_TOKEN_ABIS","ERC20","abi","abiERC20","standard","erc20","ERC721","abiERC721","erc721","ERC1155","abiERC1155","erc1155","ERC20_WRAPPED","ERC721_LEGACY","REVERTED_ERRORS","logs","extractLogs","callTrace","interfaces","supportedTokens","tokenType","Interface","getContractInterfaces","currentLog","eventLog","contractInterface","parseLog","e","abiInputs","arg","normalizeEventArgValue","normalizeEventArgs","tokenStandard","normalizedValue","skipPriorBalanceCheck","getEventTokenIds","tokenId","getValueFromBalanceTransaction","normalizedReturn","return","getBalanceTransactionData","encodeFunctionData","calls","nestedCall","getSimulationBalanceChange","previousBalance","newBalance","differenceBN","sub","isDecrease","isNeg","abs","isZero","withCallTrace","withLogs","transactionError","nativeBalanceChange","userAddress","transactionResponse","stateDiff","pre","balance","post","getNativeBalanceChange","balanceTxs","tokenKeys","before","after","userEvents","tokenIds","simulationToken","tokenKey","getTokenBalanceTransactions","prevBalanceTxIndex","balanceChange","change","getTokenBalanceChanges","simulationError","revertErrorMessage","SWAPS_CHAINID_DEFAULT_TOKEN_MAP","DEFAULT_TOKEN_ADDRESS","UPDATE_POST_TX_BALANCE_ATTEMPTS","UPDATE_POST_TX_BALANCE_TIMEOUT","ETH_SWAPS_TOKEN_OBJECT","BNB_SWAPS_TOKEN_OBJECT","MATIC_SWAPS_TOKEN_OBJECT","AVAX_SWAPS_TOKEN_OBJECT","TEST_ETH_SWAPS_TOKEN_OBJECT","GOERLI_SWAPS_TOKEN_OBJECT","ARBITRUM_SWAPS_TOKEN_OBJECT","OPTIMISM_SWAPS_TOKEN_OBJECT","ZKSYNC_ERA_SWAPS_TOKEN_OBJECT","isSwapsDefaultTokenAddress","sleep","ms","swapAndSend","swapApproval","hasApproveTx","swapsMeta","sourceTokenSymbol","swapApprovalTransaction","updateSwapApprovalTransaction","approvalTxId","destinationTokenAddress","destinationTokenAmount","destinationTokenDecimals","destinationTokenSymbol","sourceTokenAddress","sourceTokenAmount","sourceTokenDecimals","swapAndSendRecipient","swapMetaData","swapTokenValue","swapTransaction","updateSwapAndSendTransaction","updateSwapTransaction","latestTransactionMeta","attempt","postTransactionBalance","postTxBalance","isDefaultTokenAddress","delay","ESTIMATE_GAS_ERROR","ERC20Interface","ERC721Interface","ERC1155Interface","USDCInterface","abiFiatTokenV2","deployContract","getCodeResponse","contractCode","isContractAddress","readAddressAsContract","simpleSend","hasValue","contractInteractionResult","contractInteraction","parseTransaction","parseStandardTokenTransactionData","tokenMethodName","tokenMethodApprove","tokenMethodSetApprovalForAll","tokenMethodTransfer","tokenMethodTransferFrom","tokenMethodSafeTransferFrom","tokenMethodIncreaseAllowance","padHexToEvenLength","NORMALIZERS","normalizedTxParams","getKnownPropertyNames","hasOwnProp","isJsonCompatible","isStrictHexString","fnName","gasFeeValues","normalize","ensureProperTransactionEnvelopeTypeProvided","ensureMutuallyExclusiveFieldsNotProvided","fieldBeingValidated","mutuallyExclusiveField","ensureFieldIsString","permittedAddresses","selectedAddress","validateEnvelopeType","validateEIP1559Compatibility","isValidHexAddress","validateParamFrom","validateParamRecipient","intValue","isFinite","isSafeInteger","validateParamValue","validateParamData","validateParamChainId","validateGasFeeParams","_NonceTracker_provider","_NonceTracker_blockTracker","_NonceTracker_getPendingTransactions","_NonceTracker_getConfirmedTransactions","_NonceTracker_lockMap","assert_1","setProvider","globalMutex","_lookupMutex","_globalMutexFree","_takeMutex","networkNonceResult","_getNetworkNextNonce","highestLocallyConfirmed","_getHighestLocallyConfirmed","nextNetworkNonce","highestSuggested","localNonceResult","_getHighestContinuousFrom","lockId","baseCount","getTransactionCount","details","confirmedTransactions","highest","_getHighestNonce","txList","startPoint","NonceTracker_1","tslib_1","Semaphore_1","cancelError","_semaphore","__awaiter","_a","__generator","_b","sent","runExclusive","isLocked","waitForUnlock","release","Semaphore","_maxConcurrency","_cancelError","E_CANCELED","_queue","_waiters","_value","_this","locked","ticketPromise","_dispatch","trys","_currentReleaser","releaser","ticket","nextTicket","shift","released","_resolveWaiters","waiter","E_ALREADY_LOCKED","E_TIMEOUT","tryAcquire","withTimeout","Mutex_1","withTimeout_1","tryAcquire_1","sync","alreadyAcquiredError","timeout","timeoutError","isTimeout","handle","e_1","_reselect","_permissions","getPermittedAccountsByOrigin","createSelector","originToAccountsMap","_subject$permissions","eth_accounts","CaveatTypes","restrictReturnedAccounts","getChangedAccounts","newAccountsMap","previousAccountsMap","changedAccounts","newOrigins","newAccounts","AssertionError","errorPrefix","getErrorMessageWithoutTrailingPeriod","_object","paddingRequired","characterSet","letters","re","raw","valueToBytes","base64ToBytes","numberToBytes","signedBigIntToBytes","bigIntToBytes","hexToBytes","bytesToNumber","bytesToSignedBigInt","bytesToBigInt","assertIsBytes","isBytes","hex_1","HEX_MINIMUM_NUMBER_CHARACTER","HEX_MAXIMUM_NUMBER_CHARACTER","HEX_CHARACTER_OFFSET","getPrecomputedHexValues","lookupTable","padStart","getPrecomputedHexValuesBuilder","hexadecimal","BigInt","assertIsHexString","strippedValue","remove0x","c1","charCodeAt","c2","n1","n2","asIntN","MAX_SAFE_INTEGER","bigIntFits","numberValue","asUintN","normalizedValues","buffer","byteOffset","DataView","toCaipChainId","parseCaipAccountId","parseCaipChainId","isCaipAccountAddress","isCaipAccountId","isCaipReference","isCaipNamespace","KnownCaipNamespace","CaipAccountAddressStruct","CaipReferenceStruct","CaipNamespaceStruct","CaipChainIdStruct","CAIP_ACCOUNT_ADDRESS_REGEX","CAIP_ACCOUNT_ID_REGEX","CAIP_REFERENCE_REGEX","CAIP_NAMESPACE_REGEX","CAIP_CHAIN_ID_REGEX","caipChainId","caipAccountId","createHex","createBytes","createBigInt","createNumber","NumberLikeStruct","StrictHexStruct","NumberCoercer","BigIntCoercer","BytesCoercer","HexCoercer","_FrozenMap_map","_FrozenSet_set","FrozenSet","FrozenMap","callbackfn","thisArg","_map","value2","_set","wrapError","isErrorWithStack","isErrorWithMessage","isErrorWithCode","pony_cause_1","misc_1","isNullOrUndefined","originalError","ErrorWithCause","isValidChecksumAddress","getChecksumAddress","assertIsStrictHexString","isHexString","HexAddressStruct","HexStruct","unPrefixed","unPrefixedHash","character","nibbleIndex","hashCharacter","possibleChecksum","substring","possibleAddress","getJsonRpcIdValidator","assertIsJsonRpcError","assertIsJsonRpcFailure","assertIsJsonRpcResponse","isJsonRpcResponse","assertIsPendingJsonRpcResponse","isPendingJsonRpcResponse","JsonRpcResponseStruct","JsonRpcFailureStruct","JsonRpcSuccessStruct","PendingJsonRpcResponseStruct","assertIsJsonRpcRequest","isJsonRpcRequest","assertIsJsonRpcNotification","isJsonRpcNotification","JsonRpcNotificationStruct","JsonRpcRequestStruct","JsonRpcErrorStruct","jsonrpc2","UnsafeJsonStruct","exactOptional","hasOptional","propKey","propValue","permitEmptyString","permitFractions","permitNull","globalLogger","projectName","extend","moduleName","calculateNumberSize","calculateStringSize","isASCII","ESCAPE_CHARACTERS_REGEXP","JsonSize","objectToCheck","getOwnPropertyNames","total","hexToBigInt","hexToNumber","bigIntToHex","numberToHex","createDeferredPromise","suppressUnhandledRejection","innerResolve","innerReject","_error","timeSince","assertIsNonNegativeInteger","isNonNegativeInteger","duration","satisfiesVersionRange","gtRange","gtVersion","assertIsSemVerRange","assertIsSemVerVersion","isValidSemVerVersion","valid","validRange","range","version1","version2","gtr","satisfies","bytewordsLookUpTable","STYLES","getWord","addCRC","getCRCHex","encodeWithSeparator","word","separator","crcAppendedWord","w","encodeMinimal","byteword","BYTEWORD_LENGTH","getMinimalWord","_decode","wordLength","decodedString","partition","dim","x","y","decodeWord","bodyChecksum","style","MINIMAL","STANDARD","URI","cborDecode","cborEncode","cbor","isBuffer","InvalidChecksumError","InvalidSequenceComponentError","InvalidTypeError","InvalidPathLengthError","InvalidSchemeError","FountainDecoderPart","fountainUtils_1","_indexes","_fragment","indexes","fragment","fromEncoderPart","encoderPart","chooseFragments","seqNum","seqLength","isSimple","FountainDecoder","expectedMessageLength","expectedChecksum","expectedFragmentLength","processedPartsCount","expectedPartIndexes","lastPartIndexes","queuedParts","receivedPartIndexes","mixedParts","simpleParts","validatePart","messageLength","reducePartByPart","arrayContains","newIndexes","setDifference","newFragment","bufferXOR","reduceMixedBy","newMixed","mixedPart","reducedPart","processSimplePart","fragmentIndex","arraysEqual","sortedParts","joinFragments","getCRC","processMixedPart","p2","processQueuedItem","receivePart","isComplete","decoderPart","resultMessage","isFailure","resultError","expectedPartCount","getExpectedPartIndexes","getReceivedPartIndexes","getLastPartIndexes","estimatedPercentComplete","getProgress","fragments","concat","FountainEncoderPart","cbor_1","_seqNum","_seqLength","_messageLength","_checksum","fromCBOR","cborPayload","FountainEncoder","maxFragmentLength","firstSeqNum","minFragmentLength","fragmentLength","findNominalFragmentLength","_fragments","partitionMessage","toUint32","fragmentsLength","isSinglePart","mix","alloc","nextPart","mixed","maxFragmentCount","fragmentCount","remaining","fill","shuffle","chooseDegree","xoshiro_1","alias_sampling_1","seqLenth","rng","degreeProbabilities","nextDouble","items","nextInt","seed","intToBytes","degree","URDecoder","UREncoder","UR","ur_1","urEncoder_1","urDecoder_1","_cborPayload","_type","isURType","fromBuffer","buf","decodeCBOR","equals","ur2","fountainDecoder_1","bytewords_1","fountainEncoder_1","fountainDecoder","expected_type","decodeBody","components","lowercase","parseSequenceComponent","s","seq","resultUR","_ur","ur","fountainEncoder","encodeWhole","encodeSinglePart","encodePart","encodeUri","scheme","pathComponents","encodeUR","hasPrefix","sha256Hash","sha_js_1","crc_1","n","crc32","num","arr","ArrayBuffer","setUint32","c","indexOf","ar1","ar2","el","allocUnsafe","bignumber_js_1","jsbi_1","rotl","bitwiseXor","leftShift","signedRightShift","subtract","roll","div","MAX_UINT64","toNumber","nextByte","nextData","setS","bitwiseOr","multiply","t","globalObject","BigNumber","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","z","r","xc","yc","l","intCheck","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","configObject","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","ALPHABET","alphabetHasNormalDecimalDigits","caseChanged","isNum","_isBigNumber","round","DEBUG","format","rm","c0","ne","maxOrMin","normalise","pop","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","arguments","dp","rand","Uint32Array","copy","plus","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","p1","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","times","integerValue","isEqualTo","eq","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","intDigits","substr","toFraction","md","d0","d1","d2","exp","n0","toPrecision","amd","self","window","bool","lengths","outputLen","blockLen","exists","checkFinished","destroyed","finished","output","polyval","ghash","_toGHASHKey","_assert_js_1","BLOCK_SIZE","ZEROS16","ZEROS32","u32","swapLE","hiBit","GHASH","expectedLength","s0","s1","s2","s3","toBytes","kView","createView","k0","k1","k3","doubles","W","windows","windowSize","d3","_updateBlock","o0","o1","o2","o3","bytePos","bitPos","bit","e0","e1","e2","e3","b32","blocks","left","subarray","elm","digestInto","o32","Polyval","ghKey","wrapConstructorWithKey","hashCons","hashC","tmp","unsafe","siv","gcm","cfb","cbc","ecb","ctr","expandKeyDecLE","expandKeyLE","_polyval_js_1","EMPTY_BLOCK","POLY","mul2","mul","sbox","box","invSbox","rotr32_8","rotl32_8","genTtable","T0","T1","T2","T3","T01","T23","sbox2","Uint16Array","idx","tableEncoding","tableDecoding","xPowers","k32","Nk","subByte","applySbox","xk","encKey","apply0123","encrypt","rounds","t0","t1","t2","t3","decrypt","getDst","dst","ctrCounter","srcLen","c32","src32","dst32","u8","pos","ctr32","isLE","ctrPos","ctrNum","validateBlockDecrypt","validateBlockEncrypt","plaintext","pcks5","outLen","validatePCKS","lastByte","padPCKS","tmp32","paddingByte","computeTag","AAD","h","setBigUint64","wrapCipher","blockSize","nonceLength","processCtr","ciphertext","disablePadding","_out","iv","n32","ps0","ps1","ps2","ps3","processCfb","isEncrypt","next32","tagLength","_computeTag","authKey","tagMask","tag","deriveKeys","counter","nonceLen","passedTag","equalBytes","isBytes32","AAD_LIMIT","PLAIN_LIMIT","NONCE_LIMIT","CIPHER_LIMIT","derivedKey","d32","t32","processSiv","block","expectedTag","encryptBlock","decryptBlock","getWebcryptoSubtle","cr","bytesLength","u64Lengths","Hash","checkOpts","bytesToUtf8","utf8ToBytes","asyncLoop","nextTick","numberToBytesBE","bytesToNumberBE","u16","hexes","asciis","_0","_9","_A","_F","_f","asciiToBase16","char","hl","al","ai","hi","iters","tick","ts","arrays","pad","defaults","_32n","_u32_max","wh","wl","utils","managedNonce","crypto_1","argsEnc","argsDec","keyParams","cryptParams","iKey","importKey","mode","CBC","CTR","GCM","generate","algo","additionalData","getCryptParams","getHash","createCurve","curveDef","defHash","weierstrass_js_1","weierstrass","hmac_1","hmac","msgs","wNAF","bits","constTimeNegate","neg","negate","unsafeLadder","ZERO","_0n","_1n","double","precomputeWindow","points","precomputes","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","modular_js_1","validateField","Fp","validateObject","Gx","Gy","nBitLength","nByteLength","nLength","ORDER","twistedEdwards","CURVE","curve_js_1","ut","adjustScalarBytes","uvRatio","mapToCurve","validateOpts","CURVE_ORDER","prehash","cHash","cofactor","MASK","_2n","modP","u","isValid","inv","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","invertBatch","_setWindowSize","assertValidity","is0","X","Y","Z","T","X2","Y2","Z2","Z4","aX2","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","Z3","wnaf","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","_8n","ax","ay","zz","clearCofactor","fromHex","zip215","BYTES","normed","ensureBytes","bytesToNumberLE","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","numberToBytesLE","modN","modN_LE","hashed","pointBytes","hashDomainToScalar","verifyOpts","VERIFY_DEFAULT","getPublicKey","R","verify","sig","SB","ExtendedPoint","randomPrivateKey","precompute","expand_message_xmd","expand_message_xof","hash_to_field","isogenyMap","COEFF","xNum","xDen","yNum","yDen","createHasher","def","hashToCurve","DST","u0","u1","encodeToCurve","encodeDST","scalars","os2ip","i2osp","strxor","anum","lenInBytes","abytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","dkLen","expand","_DST","log2p","L","len_in_bytes","prb","elm_offset","tv","isNegativeLE","pow2","power","invert","tonelliShanks","FpSqrt","FIELD_FIELDS","BITS","FpPow","FpInvertBatch","FpDiv","lhs","rhs","FpIsSquare","legendreConst","eql","bitLen","redef","sqrtP","bitMask","sqr","sqrN","addN","subN","mulN","lst","cmov","fromBytes","FpSqrtOdd","root","FpSqrtEven","hashToPrivateScalar","groupOrder","hashLen","minLen","getFieldBytesLength","getMinHashLength","mapHashToField","fieldOrder","fieldLen","reduced","_3n","_4n","_5n","legendreC","Q","S","p1div4","Q1div2","g","ge","nv","nums","lastMultiplied","inverted","reduceRight","_nBitLength","bitLength","montgomery","montgomeryBits","powPminus2","Gu","montgomeryBytes","cswap","x_2","x_3","dummy","assertFieldElement","a24","encodeUCoordinate","scalarMult","pointU","uEnc","decodeUCoordinate","pu","x_1","sw","z_2","z_3","k_t","AA","BB","DA","CB","dacb","da_cb","z2","montgomeryLadder","decodeScalar","GuBytes","scalarMultBase","getSharedSecret","numberToHexUnpadded","numberToVarBytesBE","bitGet","bitSet","createHmacDrbg","qByteLen","hmacFn","u8n","reset","reseed","u8fr","gen","sl","pred","validators","optValidators","checkField","fieldName","isOptional","checkVal","validatorFns","function","stringOrUint8Array","DER","weierstrassPoints","bits2int","bits2int_modN","lowS","compressedLen","uncompressedLen","invN","ProjectivePoint","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","_c","isCompressed","cat","hasEvenY","sqrtError","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","toSig","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u2","multiplyAndAddUnsafe","hasHighS","normalizeS","toDERRawBytes","toDERHex","hexFromSig","toCompactRawBytes","toCompactHex","isValidPrivateKey","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","privateA","publicB","drbg","signature","sg","_sig","derError","Err","SWUFpSqrtRatio","mapToCurveSimpleSWU","sqrtRatio","tv1","tv2","tv3","tv4","tv5","tv6","b2n","h2b","_parseInt","sBytes","rBytesLeft","shl","rhl","rl","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","_isCompressed","x2","x3","assertGE","assertPrjPoint","px","py","pz","right","U1","U2","b3","t4","t5","k1neg","k2neg","k1p","k2p","fake","f1p","f2p","_bits","_2n_pow_c1_1","_2n_pow_c1","c3","c4","c5","c6","c7","isQR","tvv5","y1","hash_to_ristretto255","hashToRistretto255","RistrettoPoint","edwardsToMontgomery","x25519","ed25519ph","ed25519ctx","ed25519","ED25519_TORSION_SUBGROUP","edwardsToMontgomeryPub","edwardsToMontgomeryPriv","edwardsPriv","ed25519Defaults","sha512_1","edwards_js_1","hash_to_curve_js_1","montgomery_js_1","ED25519_P","ED25519_SQRT_M1","ed25519_pow_2_252_3","_10n","_20n","_40n","_80n","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","vx2","root1","root2","useRoot1","useRoot2","noRoot","sha512","ed25519_domain","edwardsPub","ELL2_C1","ELL2_C2","ELL2_C3","ELL2_C1_EDWARDS","map_to_curve_elligator2_edwards25519","xMn","xMd","yMn","yMd","ELL2_C4","ELL2_J","xd","x1n","gxd","gx1","y11","y12","x2n","y21","y22","gx2","xn","e4","map_to_curve_elligator2_curve25519","yn","yd","htf","assertRstPoint","RistPoint","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","Ns","Ns_D_is_sq","s_","Nt","W0","W1","W2","W3","ep","ap","R1","R2","emsg","u1_2","u2_2","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","one","two","uniform_bytes","schnorr","secp256k1","_shortw_utils_js_1","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","a1","b1","a2","POW_2_128","fe","TAGGED_HASH_PREFIXES","taggedHash","tagP","tagH","pointToBytes","numTo32b","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","k_","rx","schnorrVerify","pub","isoMap","mapSWU","HashMD","Maj","Chi","padOffset","take","process","dataView","roundClean","oview","_cloneInto","add5L","add5H","add4H","add4L","add3H","add3L","rotlBL","rotlBH","rotlSL","rotlSH","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","fromBig","U32_MASK64","le","Ah","Al","_l","_h","Bh","Bl","Cl","Ch","Dl","Dh","El","Eh","u64","HMAC","_key","iHash","oHash","pbkdf2Async","pbkdf2","hmac_js_1","pbkdf2Init","_password","_salt","_opts","asyncTick","password","DK","PRF","PRFSalt","pbkdf2Output","prfW","ti","Ti","setInt32","ui","ripemd160","RIPEMD160","_md_js_1","Rho","Id","idxL","idxR","shifts","shiftsL","shiftsR","Kl","Kr","group","R_BUF","h0","h1","h2","h3","h4","ar","bl","br","cl","dl","dr","er","rGroup","hbl","hbr","rr","sr","tl","tr","wrapConstructor","scryptAsync","scrypt","sha256_js_1","pbkdf2_js_1","XorAndSalsa","prev","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","BlockMix","scryptInit","maxmem","N","onProgress","blockSize32","memUsed","B32","V","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","byteSwap32","Pi","sha224","SHA256_K","SHA256_IV","SHA256_W","SHA256","W15","rotr","SHA224","shake256","shake128","keccak_512","keccak_384","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","_u64_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","enableXOF","posOut","state32","keccak","finish","writeInto","bufferOut","xofInto","xof","genShake","wrapXOFConstructorWithOpts","sha384","sha512_256","sha512_224","SHA512","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","wrapConstructorWithOpts","byteSwapIfBE","byteSwap","toStr","getBoundingClientRect","rect","top","bottom","getWindow","ownerDocument","defaultView","getWindowScroll","win","scrollLeft","pageXOffset","scrollTop","pageYOffset","isElement","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","getNodeName","nodeName","getDocumentElement","documentElement","getWindowScrollBarX","getComputedStyle","isScrollParent","_getComputedStyle","overflow","overflowX","overflowY","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","isOffsetParentAnElement","scroll","offsets","clientLeft","clientTop","getLayoutRect","clientRect","offsetWidth","offsetHeight","offsetLeft","offsetTop","getParentNode","assignedSlot","parentNode","host","getScrollParent","listScrollParents","list","_element$ownerDocumen","scrollParent","isBody","visualViewport","updatedList","isTableElement","getTrueOffsetParent","position","getOffsetParent","isFirefox","navigator","userAgent","currentNode","css","perspective","contain","willChange","getContainingBlock","auto","basePlacements","clippingParents","viewport","popper","variationPlacements","placement","placements","modifierPhases","order","modifiers","visited","modifier","requires","requiresIfExists","dep","depModifier","getBasePlacement","contains","parent","rootNode","getRootNode","isSameNode","rectToClientRect","getClientRectFromMixedType","clippingParent","html","clientWidth","clientHeight","getViewportRect","getInnerBoundingClientRect","winScroll","scrollWidth","scrollHeight","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","getVariation","getMainAxisFromPlacement","computeOffsets","_ref","basePlacement","variation","commonX","commonY","mainAxis","mergePaddingObject","paddingObject","expandToHashMap","hashMap","detectOverflow","_options","_options$placement","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","altContext","referenceElement","popperRect","rects","clippingClientRect","contextElement","referenceClientRect","popperOffsets","strategy","popperClientRect","elementClientRect","overflowOffsets","offsetData","modifiersData","axis","DEFAULT_OPTIONS","areValidElements","_len","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","pending","orderedModifiers","attributes","styles","effectCleanupFns","isDestroyed","setOptions","cleanupModifierEffects","scrollParents","phase","orderModifiers","merged","current","existing","mergeByName","_ref3","_ref3$options","effect","cleanupFn","noopFn","forceUpdate","_state$elements","_state$orderedModifie","_state$orderedModifie2","onFirstUpdate","passive","eventListeners","_options$scroll","_options$resize","resize","removeEventListener","popperOffsets$1","unsetSides","mapToStyles","_ref2","_Object$assign2","gpuAcceleration","adaptive","roundOffsets","dpr","devicePixelRatio","roundOffsetsByDPR","_ref3$x","_ref3$y","hasX","hasY","sideX","sideY","heightProp","widthProp","_Object$assign","commonStyles","computeStyles$1","_ref4","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","arrow","applyStyles$1","removeAttribute","initialStyles","margin","property","attribute","offset$1","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","hash$1","getOppositePlacement","matched","getOppositeVariationPlacement","computeAutoPlacement","flipVariations","_options$allowedAutoP","allowedAutoPlacements","placements$1","allowedPlacements","overflows","flip$1","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","check","_loop","_i","fittingPlacement","within","min$1","max$1","preventOverflow$1","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","tetherOffsetValue","mainSide","altSide","additive","maxLen","arrowElement","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMin","tetherMax","preventedOffset","_mainSide","_altSide","_offset","_min","_max","_preventedOffset","arrow$1","_state$modifiersData$","toPaddingObject","minProp","maxProp","endDiff","startDiff","clientSize","centerToReference","axisProp","centerOffset","_options$element","querySelector","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","hide$1","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","createPopper$1","createPopper","applyStyles","computeStyles","createPopperLite","flip","hide","b64","s64","parts","chunk","fromCharCode","invalidEncoding","codegen","functionParams","functionName","Codegen","formatStringOrScope","verbose","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","$0","$1","functionNameOverride","_listeners","evt","listeners","asPromise","fs","inquire","filename","xhr","readFile","XMLHttpRequest","binary","onreadystatechange","readyState","responseText","overrideMimeType","responseType","open","send","Float32Array","f32","f8b","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","exponent","readFloat_ieee754","readUint","uint","mantissa","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","eval","isAbsolute","absolute","originPath","includePath","alreadyNormalized","SIZE","slab","utf8","read","write"],"mappings":"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A,YAEA,GACArB,MAAA,IACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,GACArB,MAAA,IACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,GACArB,MAAA,IACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,GACArB,MAAA,IACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,GACArB,MAAA,IACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,eAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qCAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,mBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,sBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,UAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,cAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,IACArB,MAAA,KACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,0BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,wBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,yBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,+BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,oBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,0BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,4BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,0BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,wBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,2BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,wBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,0BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,mCAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,KAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,0BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,UACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,uBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,oBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,oBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,+BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,kCAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,4BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,0BAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,sBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kCAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,UACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,yBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,UACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,wBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,yBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,uBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,MAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,sBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,UACA9rC,KAAA,oBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,oBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,oBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,kBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,mBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,YAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,UAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,qBAEA,KACArB,MAAA,MACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,KACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,mBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,oBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,wBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,oBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,mBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,yBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,sBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,UACA9rC,KAAA,+BAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,2BAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,KACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,kBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,yBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,oBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,mBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,oBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,mBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,mBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,8BAEA,KACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,SACA9rC,KAAA,yBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,qBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,oBAEA,KACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,KACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,sBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,qBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,MACArB,MAAA,OACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,KACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,WAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,oBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,WAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,mBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,4BAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,sBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,MACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,aAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,MACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,MAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,uBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,YAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,sBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,kBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,WAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,UAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,OACArB,MAAA,QACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,mBAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,cAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,yBAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,gBAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,cAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,eAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,sBAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,4BAEA,QACArB,MAAA,SACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,sBAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,UAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,iBAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,SAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,iBAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,eAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,YAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,oBAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,WAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,aAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,WAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,YAEA,SACArB,MAAA,UACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,QAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,MAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,OAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,SAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,SAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,QAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,KACA9rC,KAAA,MAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,QACA9rC,KAAA,gBAEA,UACArB,MAAA,WACAktC,IAAA,aACAC,OAAA,MACA9rC,KAAA,cAEA,WACArB,MAAA,YACAktC,IAAA,aACAC,OAAA,OACA9rC,KAAA,aAEA,YACArB,MAAA,aACAktC,IAAA,aACAC,OAAA,GACA9rC,KAAA,QAEA,YACArB,MAAA,aACAktC,IAAA,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","file":"../metamask/common-2.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBip32EntropyImplementation = exports.getBip32EntropyBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst utils_2 = require(\"../utils.cjs\");\nconst targetName = 'snap_getBip32Entropy';\n/**\n * The specification builder for the `snap_getBip32Entropy` permission.\n * `snap_getBip32Entropy` lets the Snap control private keys for a particular\n * BIP-32 node.\n *\n * @param options - The specification builder options.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `snap_getBip32Entropy` permission.\n */\nconst specificationBuilder = ({ methodHooks }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName,\n        allowedCaveats: [snaps_utils_1.SnapCaveatType.PermittedDerivationPaths],\n        methodImplementation: getBip32EntropyImplementation(methodHooks),\n        validator: ({ caveats }) => {\n            if (caveats?.length !== 1 ||\n                caveats[0].type !== snaps_utils_1.SnapCaveatType.PermittedDerivationPaths) {\n                throw rpc_errors_1.rpcErrors.invalidParams({\n                    message: `Expected a single \"${snaps_utils_1.SnapCaveatType.PermittedDerivationPaths}\" caveat.`,\n                });\n            }\n        },\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nconst methodHooks = {\n    getMnemonic: true,\n    getUnlockPromise: true,\n};\nexports.getBip32EntropyBuilder = Object.freeze({\n    targetName,\n    specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `snap_getBip32Entropy`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getMnemonic - A function to retrieve the Secret Recovery Phrase of the user.\n * @param hooks.getUnlockPromise - A function that resolves once the MetaMask extension is unlocked\n * and prompts the user to unlock their MetaMask if it is locked.\n * @returns The method implementation which returns a `JsonSLIP10Node`.\n * @throws If the params are invalid.\n */\nfunction getBip32EntropyImplementation({ getMnemonic, getUnlockPromise, }) {\n    return async function getBip32Entropy(args) {\n        await getUnlockPromise(true);\n        const { params } = args;\n        (0, utils_1.assert)(params);\n        const node = await (0, utils_2.getNode)({\n            curve: params.curve,\n            path: params.path,\n            secretRecoveryPhrase: await getMnemonic(),\n        });\n        return node.toJSON();\n    };\n}\nexports.getBip32EntropyImplementation = getBip32EntropyImplementation;\n//# sourceMappingURL=getBip32Entropy.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBip32PublicKeyImplementation = exports.getBip32PublicKeyBuilder = exports.Bip32PublicKeyArgsStruct = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst utils_2 = require(\"../utils.cjs\");\nconst targetName = 'snap_getBip32PublicKey';\nexports.Bip32PublicKeyArgsStruct = (0, snaps_utils_1.bip32entropy)((0, superstruct_1.object)({\n    path: snaps_utils_1.Bip32PathStruct,\n    curve: snaps_utils_1.CurveStruct,\n    compressed: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n}));\n/**\n * The specification builder for the `snap_getBip32PublicKey` permission.\n * `snap_getBip32PublicKey` lets the Snap retrieve public keys for a particular\n * BIP-32 node.\n *\n * @param options - The specification builder options.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `snap_getBip32PublicKey` permission.\n */\nconst specificationBuilder = ({ methodHooks }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName,\n        allowedCaveats: [snaps_utils_1.SnapCaveatType.PermittedDerivationPaths],\n        methodImplementation: getBip32PublicKeyImplementation(methodHooks),\n        validator: ({ caveats }) => {\n            if (caveats?.length !== 1 ||\n                caveats[0].type !== snaps_utils_1.SnapCaveatType.PermittedDerivationPaths) {\n                throw rpc_errors_1.rpcErrors.invalidParams({\n                    message: `Expected a single \"${snaps_utils_1.SnapCaveatType.PermittedDerivationPaths}\" caveat.`,\n                });\n            }\n        },\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nconst methodHooks = {\n    getMnemonic: true,\n    getUnlockPromise: true,\n};\nexports.getBip32PublicKeyBuilder = Object.freeze({\n    targetName,\n    specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `snap_getBip32PublicKey`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getMnemonic - A function to retrieve the Secret Recovery Phrase of the user.\n * @param hooks.getUnlockPromise - A function that resolves once the MetaMask extension is unlocked\n * and prompts the user to unlock their MetaMask if it is locked.\n * @returns The method implementation which returns a public key.\n * @throws If the params are invalid.\n */\nfunction getBip32PublicKeyImplementation({ getMnemonic, getUnlockPromise, }) {\n    return async function getBip32PublicKey(args) {\n        await getUnlockPromise(true);\n        (0, utils_1.assertStruct)(args.params, exports.Bip32PublicKeyArgsStruct, 'Invalid BIP-32 public key params', rpc_errors_1.rpcErrors.invalidParams);\n        const { params } = args;\n        const node = await (0, utils_2.getNode)({\n            curve: params.curve,\n            path: params.path,\n            secretRecoveryPhrase: await getMnemonic(),\n        });\n        if (params.compressed) {\n            return node.compressedPublicKey;\n        }\n        return node.publicKey;\n    };\n}\nexports.getBip32PublicKeyImplementation = getBip32PublicKeyImplementation;\n//# sourceMappingURL=getBip32PublicKey.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBip44EntropyImplementation = exports.getBip44EntropyBuilder = void 0;\nconst key_tree_1 = require(\"@metamask/key-tree\");\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst targetName = 'snap_getBip44Entropy';\n/**\n * The specification builder for the `snap_getBip44Entropy` permission.\n * `snap_getBip44Entropy_*` lets the Snap control private keys for a particular\n * BIP-32 coin type.\n *\n * @param options - The specification builder options.\n * @param options.methodHooks - The RPC method hooks needed by the method\n * implementation.\n * @returns The specification for the `snap_getBip44Entropy` permission.\n */\nconst specificationBuilder = ({ methodHooks }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName,\n        allowedCaveats: [snaps_utils_1.SnapCaveatType.PermittedCoinTypes],\n        methodImplementation: getBip44EntropyImplementation(methodHooks),\n        validator: ({ caveats }) => {\n            if (caveats?.length !== 1 ||\n                caveats[0].type !== snaps_utils_1.SnapCaveatType.PermittedCoinTypes) {\n                throw rpc_errors_1.rpcErrors.invalidParams({\n                    message: `Expected a single \"${snaps_utils_1.SnapCaveatType.PermittedCoinTypes}\" caveat.`,\n                });\n            }\n        },\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nconst methodHooks = {\n    getMnemonic: true,\n    getUnlockPromise: true,\n};\nexports.getBip44EntropyBuilder = Object.freeze({\n    targetName,\n    specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `snap_getBip44Entropy`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getMnemonic - A function to retrieve the Secret Recovery Phrase\n * of the user.\n * @param hooks.getUnlockPromise - A function that resolves once the MetaMask\n * extension is unlocked and prompts the user to unlock their MetaMask if it is\n * locked.\n * @returns The method implementation which returns a `BIP44CoinTypeNode`.\n * @throws If the params are invalid.\n */\nfunction getBip44EntropyImplementation({ getMnemonic, getUnlockPromise, }) {\n    return async function getBip44Entropy(args) {\n        await getUnlockPromise(true);\n        // `args.params` is validated by the decorator, so it's safe to assert here.\n        const params = args.params;\n        const node = await key_tree_1.BIP44CoinTypeNode.fromDerivationPath([\n            await getMnemonic(),\n            `bip32:44'`,\n            `bip32:${params.coinType}'`,\n        ]);\n        return node.toJSON();\n    };\n}\nexports.getBip44EntropyImplementation = getBip44EntropyImplementation;\n//# sourceMappingURL=getBip44Entropy.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEntropyBuilder = exports.GetEntropyArgsStruct = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst utils_2 = require(\"../utils.cjs\");\nconst targetName = 'snap_getEntropy';\nexports.GetEntropyArgsStruct = (0, superstruct_1.object)({\n    version: (0, superstruct_1.literal)(1),\n    salt: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\nconst specificationBuilder = ({ allowedCaveats = null, methodHooks, }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName,\n        allowedCaveats,\n        methodImplementation: getEntropyImplementation(methodHooks),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nconst methodHooks = {\n    getMnemonic: true,\n    getUnlockPromise: true,\n};\nexports.getEntropyBuilder = Object.freeze({\n    targetName,\n    specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `snap_getEntropy`. The implementation\n * is based on the reference implementation of\n * [SIP-6](https://metamask.github.io/SIPs/SIPS/sip-6).\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getMnemonic - The method to get the mnemonic of the user's\n * primary keyring.\n * @param hooks.getUnlockPromise - The method to get a promise that resolves\n * once the extension is unlocked.\n * @returns The method implementation.\n */\nfunction getEntropyImplementation({ getMnemonic, getUnlockPromise, }) {\n    return async function getEntropy(options) {\n        const { params, context: { origin }, } = options;\n        (0, utils_1.assertStruct)(params, exports.GetEntropyArgsStruct, 'Invalid \"snap_getEntropy\" parameters', rpc_errors_1.rpcErrors.invalidParams);\n        await getUnlockPromise(true);\n        const mnemonicPhrase = await getMnemonic();\n        return (0, utils_2.deriveEntropy)({\n            input: origin,\n            salt: params.salt,\n            mnemonicPhrase,\n            magic: snaps_utils_1.SIP_6_MAGIC_VALUE,\n        });\n    };\n}\n//# sourceMappingURL=getEntropy.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getImplementation = exports.getLocaleBuilder = exports.specificationBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst methodName = 'snap_getLocale';\n/**\n * The specification builder for the `snap_getLocale` permission.\n * `snap_getLocale` allows snaps to get the user selected locale.\n *\n * @param options - The specification builder options.\n * @param options.allowedCaveats - The optional allowed caveats for the permission.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `snap_getLocale` permission.\n * @deprecated - To be removed in favor of `snap_getPreferences`.\n */\nconst specificationBuilder = ({ allowedCaveats = null, methodHooks }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName: methodName,\n        allowedCaveats,\n        methodImplementation: getImplementation(methodHooks),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.specificationBuilder = specificationBuilder;\nconst methodHooks = {\n    getPreferences: true,\n};\nexports.getLocaleBuilder = Object.freeze({\n    targetName: methodName,\n    specificationBuilder: exports.specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `snap_getLocale`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getPreferences - A function that returns the user selected preferences.\n * @returns The user selected locale.\n */\nfunction getImplementation({ getPreferences }) {\n    return async function implementation(_args) {\n        return getPreferences().locale;\n    };\n}\nexports.getImplementation = getImplementation;\n//# sourceMappingURL=getLocale.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getImplementation = exports.getPreferencesBuilder = exports.specificationBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst methodName = 'snap_getPreferences';\n/**\n * The specification builder for the `snap_getPreferences` permission.\n * `snap_getPreferences` allows snaps to access user preferences.\n *\n * @param options - The specification builder options.\n * @param options.allowedCaveats - The optional allowed caveats for the permission.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `snap_getPreferences` permission.\n */\nconst specificationBuilder = ({ allowedCaveats = null, methodHooks }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName: methodName,\n        allowedCaveats,\n        methodImplementation: getImplementation(methodHooks),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.specificationBuilder = specificationBuilder;\nconst methodHooks = {\n    getPreferences: true,\n};\nexports.getPreferencesBuilder = Object.freeze({\n    targetName: methodName,\n    specificationBuilder: exports.specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `snap_getPreferences`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getPreferences - A function that returns the user selected preferences.\n * @returns The user preferences.\n */\nfunction getImplementation({ getPreferences, }) {\n    return async function implementation(_args) {\n        return getPreferences();\n    };\n}\nexports.getImplementation = getImplementation;\n//# sourceMappingURL=getPreferences.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DIALOG_APPROVAL_TYPES = exports.restrictedMethodPermissionBuilders = exports.getEncryptionEntropy = exports.WALLET_SNAP_PERMISSION_KEY = void 0;\nconst dialog_1 = require(\"./dialog.cjs\");\nconst getBip32Entropy_1 = require(\"./getBip32Entropy.cjs\");\nconst getBip32PublicKey_1 = require(\"./getBip32PublicKey.cjs\");\nconst getBip44Entropy_1 = require(\"./getBip44Entropy.cjs\");\nconst getEntropy_1 = require(\"./getEntropy.cjs\");\nconst getLocale_1 = require(\"./getLocale.cjs\");\nconst getPreferences_1 = require(\"./getPreferences.cjs\");\nconst invokeSnap_1 = require(\"./invokeSnap.cjs\");\nconst manageAccounts_1 = require(\"./manageAccounts.cjs\");\nconst manageState_1 = require(\"./manageState.cjs\");\nconst notify_1 = require(\"./notify.cjs\");\nvar invokeSnap_2 = require(\"./invokeSnap.cjs\");\nObject.defineProperty(exports, \"WALLET_SNAP_PERMISSION_KEY\", { enumerable: true, get: function () { return invokeSnap_2.WALLET_SNAP_PERMISSION_KEY; } });\nvar manageState_2 = require(\"./manageState.cjs\");\nObject.defineProperty(exports, \"getEncryptionEntropy\", { enumerable: true, get: function () { return manageState_2.getEncryptionEntropy; } });\nexports.restrictedMethodPermissionBuilders = {\n    [dialog_1.dialogBuilder.targetName]: dialog_1.dialogBuilder,\n    [getBip32Entropy_1.getBip32EntropyBuilder.targetName]: getBip32Entropy_1.getBip32EntropyBuilder,\n    [getBip32PublicKey_1.getBip32PublicKeyBuilder.targetName]: getBip32PublicKey_1.getBip32PublicKeyBuilder,\n    [getBip44Entropy_1.getBip44EntropyBuilder.targetName]: getBip44Entropy_1.getBip44EntropyBuilder,\n    [getEntropy_1.getEntropyBuilder.targetName]: getEntropy_1.getEntropyBuilder,\n    [invokeSnap_1.invokeSnapBuilder.targetName]: invokeSnap_1.invokeSnapBuilder,\n    [manageState_1.manageStateBuilder.targetName]: manageState_1.manageStateBuilder,\n    [notify_1.notifyBuilder.targetName]: notify_1.notifyBuilder,\n    [manageAccounts_1.manageAccountsBuilder.targetName]: manageAccounts_1.manageAccountsBuilder,\n    [getLocale_1.getLocaleBuilder.targetName]: getLocale_1.getLocaleBuilder,\n    [getPreferences_1.getPreferencesBuilder.targetName]: getPreferences_1.getPreferencesBuilder,\n};\n__exportStar(require(\"./caveats/index.cjs\"), exports);\nvar dialog_2 = require(\"./dialog.cjs\");\nObject.defineProperty(exports, \"DIALOG_APPROVAL_TYPES\", { enumerable: true, get: function () { return dialog_2.DIALOG_APPROVAL_TYPES; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInvokeSnapImplementation = exports.invokeSnapBuilder = exports.handleSnapInstall = exports.WALLET_SNAP_PERMISSION_KEY = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nexports.WALLET_SNAP_PERMISSION_KEY = 'wallet_snap';\n/**\n * The side-effect method to handle the snap install.\n *\n * @param params - The side-effect params.\n * @param params.requestData - The request data associated to the requested permission.\n * @param params.messagingSystem - The messenger to call an action.\n * @returns The result of the Snap installation.\n */\nconst handleSnapInstall = async ({ requestData, messagingSystem }) => {\n    const snaps = requestData.permissions[exports.WALLET_SNAP_PERMISSION_KEY].caveats?.[0]\n        .value;\n    const permittedSnaps = messagingSystem.call(`SnapController:getPermitted`, requestData.metadata.origin);\n    const dedupedSnaps = Object.keys(snaps).reduce((filteredSnaps, snap) => {\n        if (!permittedSnaps[snap]) {\n            filteredSnaps[snap] = snaps[snap];\n        }\n        return filteredSnaps;\n    }, {});\n    return messagingSystem.call(`SnapController:install`, requestData.metadata.origin, dedupedSnaps);\n};\nexports.handleSnapInstall = handleSnapInstall;\n/**\n * The specification builder for the `wallet_snap_*` permission.\n *\n * `wallet_snap_*` attempts to invoke an RPC method of the specified Snap.\n *\n * Requesting its corresponding permission will attempt to connect to the Snap,\n * and install it if it's not available yet.\n *\n * @param options - The specification builder options.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `wallet_snap_*` permission.\n */\nconst specificationBuilder = ({ methodHooks }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName: exports.WALLET_SNAP_PERMISSION_KEY,\n        allowedCaveats: [snaps_utils_1.SnapCaveatType.SnapIds],\n        methodImplementation: getInvokeSnapImplementation(methodHooks),\n        validator: ({ caveats }) => {\n            if (caveats?.length !== 1 || caveats[0].type !== snaps_utils_1.SnapCaveatType.SnapIds) {\n                throw rpc_errors_1.rpcErrors.invalidParams({\n                    message: `Expected a single \"${snaps_utils_1.SnapCaveatType.SnapIds}\" caveat.`,\n                });\n            }\n        },\n        sideEffect: {\n            onPermitted: exports.handleSnapInstall,\n        },\n    };\n};\nconst methodHooks = {\n    getSnap: true,\n    handleSnapRpcRequest: true,\n};\nexports.invokeSnapBuilder = Object.freeze({\n    targetName: exports.WALLET_SNAP_PERMISSION_KEY,\n    specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `wallet_snap_*`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getSnap - A function that retrieves all information stored about a snap.\n * @param hooks.handleSnapRpcRequest - A function that sends an RPC request to a snap's RPC handler or throws if that fails.\n * @returns The method implementation which returns the result of `handleSnapRpcRequest`.\n * @throws If the params are invalid.\n */\nfunction getInvokeSnapImplementation({ getSnap, handleSnapRpcRequest, }) {\n    return async function invokeSnap(options) {\n        const { params = {}, context } = options;\n        const { snapId, request } = params;\n        if (!getSnap(snapId)) {\n            throw rpc_errors_1.rpcErrors.invalidRequest({\n                message: `The snap \"${snapId}\" is not installed. Please install it first, before invoking the snap.`,\n            });\n        }\n        const { origin } = context;\n        return (await handleSnapRpcRequest({\n            snapId,\n            origin,\n            request,\n            handler: snaps_utils_1.HandlerType.OnRpcRequest,\n        }));\n    };\n}\nexports.getInvokeSnapImplementation = getInvokeSnapImplementation;\n//# sourceMappingURL=invokeSnap.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.manageAccountsBuilder = exports.manageAccountsImplementation = exports.specificationBuilder = exports.methodName = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst SnapMessageStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.object)({\n        method: (0, superstruct_1.string)(),\n    }),\n    (0, superstruct_1.object)({\n        method: (0, superstruct_1.string)(),\n        params: (0, superstruct_1.union)([(0, superstruct_1.array)(utils_1.JsonStruct), (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct)]),\n    }),\n]);\nexports.methodName = 'snap_manageAccounts';\n/**\n * The specification builder for the `snap_manageAccounts` permission.\n * `snap_manageAccounts` lets the Snap manage a set of accounts via a custom keyring.\n *\n * @param options - The specification builder options.\n * @param options.allowedCaveats - The optional allowed caveats for the permission.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `snap_manageAccounts` permission.\n */\nconst specificationBuilder = ({ allowedCaveats = null, methodHooks, }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName: exports.methodName,\n        allowedCaveats,\n        methodImplementation: manageAccountsImplementation(methodHooks),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.specificationBuilder = specificationBuilder;\n/**\n * Builds the method implementation for `snap_manageAccounts`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.getSnapKeyring - A function to get the snap keyring.\n * @returns The method implementation which either returns `null` for a\n * successful state update/deletion or returns the decrypted state.\n * @throws If the params are invalid.\n */\nfunction manageAccountsImplementation({ getSnapKeyring, }) {\n    return async function manageAccounts(options) {\n        const { context: { origin }, params, } = options;\n        (0, superstruct_1.assert)(params, SnapMessageStruct);\n        const keyring = await getSnapKeyring(origin);\n        return await keyring.handleKeyringSnapMessage(origin, params);\n    };\n}\nexports.manageAccountsImplementation = manageAccountsImplementation;\nexports.manageAccountsBuilder = Object.freeze({\n    targetName: exports.methodName,\n    specificationBuilder: exports.specificationBuilder,\n    methodHooks: {\n        getSnapKeyring: true,\n    },\n});\n//# sourceMappingURL=manageAccounts.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidatedParams = exports.getManageStateImplementation = exports.getEncryptionEntropy = exports.STORAGE_SIZE_LIMIT = exports.manageStateBuilder = exports.specificationBuilder = exports.STATE_ENCRYPTION_SALT = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst utils_2 = require(\"../utils.cjs\");\n// The salt used for SIP-6-based entropy derivation.\nexports.STATE_ENCRYPTION_SALT = 'snap_manageState encryption';\nconst methodName = 'snap_manageState';\n/**\n * The specification builder for the `snap_manageState` permission.\n * `snap_manageState` lets the Snap store and manage some of its state on\n * your device.\n *\n * @param options - The specification builder options.\n * @param options.allowedCaveats - The optional allowed caveats for the permission.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `snap_manageState` permission.\n */\nconst specificationBuilder = ({ allowedCaveats = null, methodHooks, }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName: methodName,\n        allowedCaveats,\n        methodImplementation: getManageStateImplementation(methodHooks),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.specificationBuilder = specificationBuilder;\nconst methodHooks = {\n    getUnlockPromise: true,\n    clearSnapState: true,\n    getSnapState: true,\n    updateSnapState: true,\n};\nexports.manageStateBuilder = Object.freeze({\n    targetName: methodName,\n    specificationBuilder: exports.specificationBuilder,\n    methodHooks,\n});\nexports.STORAGE_SIZE_LIMIT = 104857600; // In bytes (100MB)\n/**\n * Get a deterministic encryption key to use for encrypting and decrypting the\n * state.\n *\n * This key should only be used for state encryption using `snap_manageState`.\n * To get other encryption keys, a different salt can be used.\n *\n * @param args - The encryption key args.\n * @param args.snapId - The ID of the snap to get the encryption key for.\n * @param args.mnemonicPhrase - The mnemonic phrase to derive the encryption key\n * from.\n * @returns The state encryption key.\n */\nasync function getEncryptionEntropy({ mnemonicPhrase, snapId, }) {\n    return await (0, utils_2.deriveEntropy)({\n        mnemonicPhrase,\n        input: snapId,\n        salt: exports.STATE_ENCRYPTION_SALT,\n        magic: snaps_utils_1.STATE_ENCRYPTION_MAGIC_VALUE,\n    });\n}\nexports.getEncryptionEntropy = getEncryptionEntropy;\n/**\n * Builds the method implementation for `snap_manageState`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.clearSnapState - A function that clears the state stored for a\n * snap.\n * @param hooks.getSnapState - A function that fetches the persisted decrypted\n * state for a snap.\n * @param hooks.updateSnapState - A function that updates the state stored for a\n * snap.\n * @param hooks.getUnlockPromise - A function that resolves once the MetaMask\n * extension is unlocked and prompts the user to unlock their MetaMask if it is\n * locked.\n * @returns The method implementation which either returns `null` for a\n * successful state update/deletion or returns the decrypted state.\n * @throws If the params are invalid.\n */\nfunction getManageStateImplementation({ getUnlockPromise, clearSnapState, getSnapState, updateSnapState, }) {\n    return async function manageState(options) {\n        const { params = {}, method, context: { origin }, } = options;\n        const validatedParams = getValidatedParams(params, method);\n        // If the encrypted param is undefined or null we default to true.\n        const shouldEncrypt = validatedParams.encrypted ?? true;\n        // We only need to prompt the user when the mnemonic is needed\n        // which it isn't for the clear operation or unencrypted storage.\n        if (shouldEncrypt &&\n            validatedParams.operation !== snaps_sdk_1.ManageStateOperation.ClearState) {\n            await getUnlockPromise(true);\n        }\n        switch (validatedParams.operation) {\n            case snaps_sdk_1.ManageStateOperation.ClearState:\n                clearSnapState(origin, shouldEncrypt);\n                return null;\n            case snaps_sdk_1.ManageStateOperation.GetState: {\n                return await getSnapState(origin, shouldEncrypt);\n            }\n            case snaps_sdk_1.ManageStateOperation.UpdateState: {\n                await updateSnapState(origin, validatedParams.newState, shouldEncrypt);\n                return null;\n            }\n            default:\n                throw rpc_errors_1.rpcErrors.invalidParams(`Invalid ${method} operation: \"${validatedParams.operation}\"`);\n        }\n    };\n}\nexports.getManageStateImplementation = getManageStateImplementation;\n/**\n * Validates the manageState method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @param method - RPC method name used for debugging errors.\n * @param storageSizeLimit - Maximum allowed size (in bytes) of a new state object.\n * @returns The validated method parameter object.\n */\nfunction getValidatedParams(params, method, storageSizeLimit = exports.STORAGE_SIZE_LIMIT) {\n    if (!(0, utils_1.isObject)(params)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected params to be a single object.',\n        });\n    }\n    const { operation, newState, encrypted } = params;\n    if (!operation ||\n        typeof operation !== 'string' ||\n        !Object.values(snaps_sdk_1.ManageStateOperation).includes(operation)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Must specify a valid manage state \"operation\".',\n        });\n    }\n    if (encrypted !== undefined && typeof encrypted !== 'boolean') {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: '\"encrypted\" parameter must be a boolean if specified.',\n        });\n    }\n    if (operation === snaps_sdk_1.ManageStateOperation.UpdateState) {\n        if (!(0, utils_1.isObject)(newState)) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Invalid ${method} \"updateState\" parameter: The new state must be a plain object.`,\n                data: {\n                    receivedNewState: typeof newState === 'undefined' ? 'undefined' : newState,\n                },\n            });\n        }\n        let size;\n        try {\n            // `getJsonSize` will throw if the state is not JSON serializable.\n            size = (0, utils_1.getJsonSize)(newState);\n        }\n        catch {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Invalid ${method} \"updateState\" parameter: The new state must be JSON serializable.`,\n                data: {\n                    receivedNewState: typeof newState === 'undefined' ? 'undefined' : newState,\n                },\n            });\n        }\n        if (size > storageSizeLimit) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Invalid ${method} \"updateState\" parameter: The new state must not exceed ${storageSizeLimit} bytes in size.`,\n                data: {\n                    receivedNewState: typeof newState === 'undefined' ? 'undefined' : newState,\n                },\n            });\n        }\n    }\n    return params;\n}\nexports.getValidatedParams = getValidatedParams;\n//# sourceMappingURL=manageState.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidatedParams = exports.getImplementation = exports.notifyBuilder = exports.specificationBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst methodName = 'snap_notify';\n/**\n * The specification builder for the `snap_notify` permission.\n * `snap_notify` allows snaps to send multiple types of notifications to its users.\n *\n * @param options - The specification builder options.\n * @param options.allowedCaveats - The optional allowed caveats for the permission.\n * @param options.methodHooks - The RPC method hooks needed by the method implementation.\n * @returns The specification for the `snap_notify` permission.\n */\nconst specificationBuilder = ({ allowedCaveats = null, methodHooks }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName: methodName,\n        allowedCaveats,\n        methodImplementation: getImplementation(methodHooks),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.specificationBuilder = specificationBuilder;\nconst methodHooks = {\n    showNativeNotification: true,\n    showInAppNotification: true,\n    isOnPhishingList: true,\n    maybeUpdatePhishingList: true,\n};\nexports.notifyBuilder = Object.freeze({\n    targetName: methodName,\n    specificationBuilder: exports.specificationBuilder,\n    methodHooks,\n});\n/**\n * Builds the method implementation for `snap_notify`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.showNativeNotification - A function that shows a native browser notification.\n * @param hooks.showInAppNotification - A function that shows a notification in the MetaMask UI.\n * @param hooks.isOnPhishingList - A function that checks for links against the phishing list.\n * @param hooks.maybeUpdatePhishingList - A function that updates the phishing list if needed.\n * @returns The method implementation which returns `null` on success.\n * @throws If the params are invalid.\n */\nfunction getImplementation({ showNativeNotification, showInAppNotification, isOnPhishingList, maybeUpdatePhishingList, }) {\n    return async function implementation(args) {\n        const { params, context: { origin }, } = args;\n        const validatedParams = getValidatedParams(params);\n        await maybeUpdatePhishingList();\n        (0, snaps_utils_1.validateTextLinks)(validatedParams.message, isOnPhishingList);\n        switch (validatedParams.type) {\n            case snaps_sdk_1.NotificationType.Native:\n                return await showNativeNotification(origin, validatedParams);\n            case snaps_sdk_1.NotificationType.InApp:\n                return await showInAppNotification(origin, validatedParams);\n            default:\n                throw rpc_errors_1.rpcErrors.invalidParams({\n                    message: 'Must specify a valid notification \"type\".',\n                });\n        }\n    };\n}\nexports.getImplementation = getImplementation;\n/**\n * Validates the notify method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @returns The validated method parameter object.\n */\nfunction getValidatedParams(params) {\n    if (!(0, utils_1.isObject)(params)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected params to be a single object.',\n        });\n    }\n    const { type, message } = params;\n    if (!type ||\n        typeof type !== 'string' ||\n        !Object.values(snaps_sdk_1.NotificationType).includes(type)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Must specify a valid notification \"type\".',\n        });\n    }\n    const isNotString = !message || typeof message !== 'string';\n    // Set to the max message length on a Mac notification for now.\n    if (type === snaps_sdk_1.NotificationType.Native &&\n        (isNotString || message.length >= 50)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Must specify a non-empty string \"message\" less than 50 characters long.',\n        });\n    }\n    if (type === snaps_sdk_1.NotificationType.InApp &&\n        (isNotString || message.length >= 500)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Must specify a non-empty string \"message\" less than 500 characters long.',\n        });\n    }\n    return params;\n}\nexports.getValidatedParams = getValidatedParams;\n//# sourceMappingURL=notify.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNode = exports.getPathPrefix = exports.deriveEntropy = exports.selectHooks = void 0;\nconst key_tree_1 = require(\"@metamask/key-tree\");\nconst utils_1 = require(\"@metamask/utils\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst HARDENED_VALUE = 0x80000000;\n/**\n * Returns the subset of the specified `hooks` that are included in the\n * `hookNames` object. This is a Principle of Least Authority (POLA) measure\n * to ensure that each RPC method implementation only has access to the\n * API \"hooks\" it needs to do its job.\n *\n * @param hooks - The hooks to select from.\n * @param hookNames - The names of the hooks to select.\n * @returns The selected hooks.\n * @template Hooks - The hooks to select from.\n * @template HookName - The names of the hooks to select.\n */\nfunction selectHooks(hooks, hookNames) {\n    if (hookNames) {\n        return Object.keys(hookNames).reduce((hookSubset, _hookName) => {\n            const hookName = _hookName;\n            hookSubset[hookName] = hooks[hookName];\n            return hookSubset;\n        }, {});\n    }\n    return undefined;\n}\nexports.selectHooks = selectHooks;\n/**\n * Get a BIP-32 derivation path array from a hash, which is compatible with\n * `@metamask/key-tree`. The hash is assumed to be 32 bytes long.\n *\n * @param hash - The hash to derive indices from.\n * @returns The derived indices as a {@link HardenedBIP32Node} array.\n */\nfunction getDerivationPathArray(hash) {\n    const array = [];\n    const view = (0, utils_1.createDataView)(hash);\n    for (let index = 0; index < 8; index++) {\n        const uint32 = view.getUint32(index * 4);\n        // This is essentially `index | 0x80000000`. Because JavaScript numbers are\n        // signed, we use the bitwise unsigned right shift operator to ensure that\n        // the result is a positive number.\n        // eslint-disable-next-line no-bitwise\n        const pathIndex = (uint32 | HARDENED_VALUE) >>> 0;\n        array.push(`bip32:${pathIndex - HARDENED_VALUE}'`);\n    }\n    return array;\n}\n/**\n * Derive entropy from the given mnemonic phrase and salt.\n *\n * This is based on the reference implementation of\n * [SIP-6](https://metamask.github.io/SIPs/SIPS/sip-6).\n *\n * @param options - The options for entropy derivation.\n * @param options.input - The input value to derive entropy from.\n * @param options.salt - An optional salt to use when deriving entropy.\n * @param options.mnemonicPhrase - The mnemonic phrase to use for entropy\n * derivation.\n * @param options.magic - A hardened BIP-32 index, which is used to derive the\n * root key from the mnemonic phrase.\n * @returns The derived entropy.\n */\nasync function deriveEntropy({ input, salt = '', mnemonicPhrase, magic, }) {\n    const inputBytes = (0, utils_1.stringToBytes)(input);\n    const saltBytes = (0, utils_1.stringToBytes)(salt);\n    // Get the derivation path from the snap ID.\n    const hash = (0, sha3_1.keccak_256)((0, utils_1.concatBytes)([inputBytes, (0, sha3_1.keccak_256)(saltBytes)]));\n    const computedDerivationPath = getDerivationPathArray(hash);\n    // Derive the private key using BIP-32.\n    const { privateKey } = await key_tree_1.SLIP10Node.fromDerivationPath({\n        derivationPath: [\n            mnemonicPhrase,\n            `bip32:${magic}`,\n            ...computedDerivationPath,\n        ],\n        curve: 'secp256k1',\n    });\n    // This should never happen, but this keeps TypeScript happy.\n    (0, utils_1.assert)(privateKey, 'Failed to derive the entropy.');\n    return (0, utils_1.add0x)(privateKey);\n}\nexports.deriveEntropy = deriveEntropy;\n/**\n * Get the path prefix to use for key derivation in `key-tree`. This assumes the\n * following:\n *\n * - The Secp256k1 curve always uses the BIP-32 specification.\n * - The Ed25519 curve always uses the SLIP-10 specification.\n * - The BIP-32-Ed25519 curve always uses the CIP-3 specification.\n *\n * While this does not matter in most situations (no known case at the time of\n * writing), `key-tree` requires a specific specification to be used.\n *\n * @param curve - The curve to get the path prefix for. The curve is NOT\n * validated by this function.\n * @returns The path prefix, i.e., `bip32` or `slip10`.\n */\nfunction getPathPrefix(curve) {\n    switch (curve) {\n        case 'secp256k1':\n            return 'bip32';\n        case 'ed25519':\n            return 'slip10';\n        case 'ed25519Bip32':\n            return 'cip3';\n        default:\n            return (0, utils_1.assertExhaustive)(curve);\n    }\n}\nexports.getPathPrefix = getPathPrefix;\n/**\n * Get a `key-tree`-compatible node.\n *\n * Note: This function assumes that all the parameters have been validated\n * beforehand.\n *\n * @param options - The derivation options.\n * @param options.curve - The curve to use for derivation.\n * @param options.secretRecoveryPhrase - The secret recovery phrase to use for\n * derivation.\n * @param options.path - The derivation path to use as array, starting with an\n * \"m\" as the first item.\n * @returns The `key-tree` SLIP-10 node.\n */\nasync function getNode({ curve, secretRecoveryPhrase, path, }) {\n    const prefix = getPathPrefix(curve);\n    return await key_tree_1.SLIP10Node.fromDerivationPath({\n        curve,\n        derivationPath: [\n            secretRecoveryPhrase,\n            ...path.slice(1).map((index) => `${prefix}:${index}`),\n        ],\n    });\n}\nexports.getNode = getNode;\n//# sourceMappingURL=utils.cjs.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/BaseControllerV1.ts\nvar BaseControllerV1 = class {\n  /**\n   * Creates a BaseControllerV1 instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config = {}, state = {}) {\n    /**\n     * Default options used to configure this controller\n     */\n    this.defaultConfig = {};\n    /**\n     * Default state set on this controller\n     */\n    this.defaultState = {};\n    /**\n     * Determines if listeners are notified of state changes\n     */\n    this.disabled = false;\n    /**\n     * Name of this controller used during composition\n     */\n    this.name = \"BaseController\";\n    this.internalConfig = this.defaultConfig;\n    this.internalState = this.defaultState;\n    this.internalListeners = [];\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns This controller instance.\n   */\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n  /**\n   * Retrieves current controller configuration options.\n   *\n   * @returns The current configuration.\n   */\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration.\n   *\n   * @param config - New configuration options.\n   * @param overwrite - Overwrite config instead of merging.\n   * @param fullUpdate - Boolean that defines if the update is partial or not.\n   */\n  configure(config, overwrite = false, fullUpdate = true) {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n      for (const key of Object.keys(this.internalConfig)) {\n        const value = this.internalConfig[key];\n        if (value !== void 0) {\n          this[key] = value;\n        }\n      }\n    } else {\n      for (const key of Object.keys(config)) {\n        if (this.internalConfig[key] !== void 0) {\n          const value = config[key];\n          this.internalConfig[key] = value;\n          this[key] = value;\n        }\n      }\n    }\n  }\n  /**\n   * Notifies all subscribed listeners of current state.\n   */\n  notify() {\n    if (this.disabled) {\n      return;\n    }\n    this.internalListeners.forEach((listener) => {\n      listener(this.internalState);\n    });\n  }\n  /**\n   * Adds new listener to be notified of state changes.\n   *\n   * @param listener - The callback triggered when state changes.\n   */\n  subscribe(listener) {\n    this.internalListeners.push(listener);\n  }\n  /**\n   * Removes existing listener from receiving state changes.\n   *\n   * @param listener - The callback to remove.\n   * @returns `true` if a listener is found and unsubscribed.\n   */\n  unsubscribe(listener) {\n    const index = this.internalListeners.findIndex((cb) => listener === cb);\n    index > -1 && this.internalListeners.splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Updates controller state.\n   *\n   * @param state - The new state.\n   * @param overwrite - Overwrite state instead of merging.\n   */\n  update(state, overwrite = false) {\n    this.internalState = overwrite ? Object.assign({}, state) : Object.assign({}, this.internalState, state);\n    this.notify();\n  }\n};\nvar BaseControllerV1_default = BaseControllerV1;\n\n\n\n\nexports.BaseControllerV1 = BaseControllerV1; exports.BaseControllerV1_default = BaseControllerV1_default;\n//# sourceMappingURL=chunk-FTHCJ6HY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/ControllerMessenger.ts\nvar _actions, _events, _initialEventPayloadGetters, _eventPayloadCache;\nvar ControllerMessenger = class {\n  constructor() {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _actions, /* @__PURE__ */ new Map());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _events, /* @__PURE__ */ new Map());\n    /**\n     * A map of functions for getting the initial event payload.\n     *\n     * Used only for events that represent state changes.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _initialEventPayloadGetters, /* @__PURE__ */ new Map());\n    /**\n     * A cache of selector return values for their respective handlers.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _eventPayloadCache, /* @__PURE__ */ new Map());\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw when a handler has been registered for this action type already.\n   * @template ActionType - A type union of Action type strings.\n   */\n  registerActionHandler(actionType, handler) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).has(actionType)) {\n      throw new Error(\n        `A handler for ${actionType} has already been registered`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).set(actionType, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @template ActionType - A type union of Action type strings.\n   */\n  unregisterActionHandler(actionType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).delete(actionType);\n  }\n  /**\n   * Unregister all action handlers.\n   *\n   * This prevents all actions from being called.\n   */\n  clearActions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).clear();\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    const handler = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).get(actionType);\n    if (!handler) {\n      throw new Error(`A handler for ${actionType} has not been registered`);\n    }\n    return handler(...params);\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).set(eventType, getPayload);\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * Note that this method should never throw directly. Any errors from\n   * subscribers are captured and re-thrown in a timeout handler.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @template EventType - A type union of Event type strings.\n   */\n  publish(eventType, ...payload) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (subscribers) {\n      for (const [handler, selector] of subscribers.entries()) {\n        try {\n          if (selector) {\n            const previousValue = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).get(handler);\n            const newValue = selector(...payload);\n            if (newValue !== previousValue) {\n              _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, newValue);\n              handler(newValue, previousValue);\n            }\n          } else {\n            handler(...payload);\n          }\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n      }\n    }\n  }\n  subscribe(eventType, handler, selector) {\n    let subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Map();\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).set(eventType, subscribers);\n    }\n    subscribers.set(handler, selector);\n    if (selector) {\n      const getPayload = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).get(eventType);\n      if (getPayload) {\n        const initialValue = selector(...getPayload());\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, initialValue);\n      }\n    }\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw when the given event handler is not registered for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  unsubscribe(eventType, handler) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers || !subscribers.has(handler)) {\n      throw new Error(`Subscription not found for event: ${eventType}`);\n    }\n    const selector = subscribers.get(handler);\n    if (selector) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).delete(handler);\n    }\n    subscribers.delete(handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  clearEventSubscriptions(eventType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).delete(eventType);\n  }\n  /**\n   * Clear all subscriptions.\n   *\n   * This will remove all subscribed handlers for all events.\n   */\n  clearSubscriptions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).clear();\n  }\n  /**\n   * Get a restricted controller messenger\n   *\n   * Returns a wrapper around the controller messenger instance that restricts access to actions\n   * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n   * to the listed events. The \"name\" provided grants ownership of any actions and events under\n   * that namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - Controller messenger options.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n   * module that this messenger has been created for. The authority to publish events and register\n   * actions under this namespace is granted to this restricted messenger instance.\n   * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n   * This must not include internal actions that are in the messenger's namespace.\n   * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n   * This must not include internal events that are in the messenger's namespace.\n   * @returns The restricted controller messenger.\n   */\n  getRestricted({\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    return new (0, _chunkUJFCPTF3js.RestrictedControllerMessenger)({\n      controllerMessenger: this,\n      name,\n      allowedActions,\n      allowedEvents\n    });\n  }\n};\n_actions = new WeakMap();\n_events = new WeakMap();\n_initialEventPayloadGetters = new WeakMap();\n_eventPayloadCache = new WeakMap();\n\n\n\nexports.ControllerMessenger = ControllerMessenger;\n//# sourceMappingURL=chunk-G42723LG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/BaseControllerV2.ts\nvar _immer = require('immer');\n_immer.enablePatches.call(void 0, );\nvar _internalState;\nvar BaseController = class {\n  /**\n   * Creates a BaseController instance.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Controller messaging system.\n   * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n   * parts should be persisted.\n   * @param options.name - The name of the controller, used as a namespace for events and actions.\n   * @param options.state - Initial controller state.\n   */\n  constructor({\n    messenger,\n    metadata,\n    name,\n    state\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _internalState, void 0);\n    this.messagingSystem = messenger;\n    this.name = name;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, _immer.freeze.call(void 0, state, true));\n    this.metadata = metadata;\n    this.messagingSystem.registerActionHandler(\n      `${name}:getState`,\n      () => this.state\n    );\n    this.messagingSystem.registerInitialEventPayload({\n      eventType: `${name}:stateChange`,\n      getPayload: () => [this.state, []]\n    });\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState);\n  }\n  set state(_) {\n    throw new Error(\n      `Controller state cannot be directly mutated; use 'update' method instead.`\n    );\n  }\n  /**\n   * Updates controller state. Accepts a callback that is passed a draft copy\n   * of the controller state. If a value is returned, it is set as the new\n   * state. Otherwise, any changes made within that callback to the draft are\n   * applied to the controller state.\n   *\n   * @param callback - Callback for updating state, passed a draft state\n   * object. Return a new state object or mutate the draft to update state.\n   * @returns An object that has the next state, patches applied in the update and inverse patches to\n   * rollback the update.\n   */\n  update(callback) {\n    const [nextState, patches, inversePatches] = _immer.produceWithPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), callback);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n    return { nextState, patches, inversePatches };\n  }\n  /**\n   * Applies immer patches to the current state. The patches come from the\n   * update function itself and can either be normal or inverse patches.\n   *\n   * @param patches - An array of immer patches that are to be applied to make\n   * or undo changes.\n   */\n  applyPatches(patches) {\n    const nextState = _immer.applyPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), patches);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n  }\n  /**\n   * Prepares the controller for garbage collection. This should be extended\n   * by any subclasses to clean up any additional connections or events.\n   *\n   * The only cleanup performed here is to remove listeners. While technically\n   * this is not required to ensure this instance is garbage collected, it at\n   * least ensures this instance won't be responsible for preventing the\n   * listeners from being garbage collected.\n   */\n  destroy() {\n    this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n  }\n};\n_internalState = new WeakMap();\nfunction getAnonymizedState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"anonymous\");\n}\nfunction getPersistentState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"persist\");\n}\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n  return Object.keys(state).reduce((derivedState, key) => {\n    try {\n      const stateMetadata = metadata[key];\n      if (!stateMetadata) {\n        throw new Error(`No metadata found for '${String(key)}'`);\n      }\n      const propertyMetadata = stateMetadata[metadataProperty];\n      const stateProperty = state[key];\n      if (typeof propertyMetadata === \"function\") {\n        derivedState[key] = propertyMetadata(stateProperty);\n      } else if (propertyMetadata) {\n        derivedState[key] = stateProperty;\n      }\n      return derivedState;\n    } catch (error) {\n      setTimeout(() => {\n        throw error;\n      });\n      return derivedState;\n    }\n  }, {});\n}\n\n\n\n\n\nexports.BaseController = BaseController; exports.getAnonymizedState = getAnonymizedState; exports.getPersistentState = getPersistentState;\n//# sourceMappingURL=chunk-IURK6TKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RestrictedControllerMessenger.ts\nvar _controllerMessenger, _controllerName, _allowedActions, _allowedEvents, _isAllowedEvent, isAllowedEvent_fn, _isAllowedAction, isAllowedAction_fn, _isInCurrentNamespace, isInCurrentNamespace_fn;\nvar RestrictedControllerMessenger = class {\n  /**\n   * Constructs a restricted controller messenger\n   *\n   * The provided allowlists grant the ability to call the listed actions and subscribe to the\n   * listed events. The \"name\" provided grants ownership of any actions and events under that\n   * namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - The controller options.\n   * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   */\n  constructor({\n    controllerMessenger,\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    /**\n     * Determine whether the given event type is allowed. Event types are\n     * allowed if they are in the current namespace or on the list of\n     * allowed events.\n     *\n     * @param eventType - The event type to check.\n     * @returns Whether the event type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedEvent);\n    /**\n     * Determine whether the given action type is allowed. Action types\n     * are allowed if they are in the current namespace or on the list of\n     * allowed actions.\n     *\n     * @param actionType - The action type to check.\n     * @returns Whether the action type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedAction);\n    /**\n     * Determine whether the given name is within the current namespace.\n     *\n     * @param name - The name to check\n     * @returns Whether the name is within the current namespace\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInCurrentNamespace);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerMessenger, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerName, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedActions, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedEvents, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerMessenger, controllerMessenger);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerName, name);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedActions, allowedActions);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedEvents, allowedEvents);\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * The action type this handler is registered under *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw if an action handler that is not in the current namespace is being registered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  registerActionHandler(action, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed registering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerActionHandler(action, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * The action type being unregistered *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unique identifier for this action.\n   * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  unregisterActionHandler(action) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed unregistering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unregisterActionHandler(action);\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * The action type being called must be on the action allowlist.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of allowed Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedAction, isAllowedAction_fn).call(this, actionType)) {\n      throw new Error(`Action missing from allow list: ${actionType}`);\n    }\n    const response = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).call(\n      actionType,\n      ...params\n    );\n    return response;\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * The event type *must* be in the current namespace\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerInitialEventPayload({\n      eventType,\n      getPayload\n    });\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * The event type being published *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @throws Will throw if an event that is not in the current namespace is being published.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  publish(event, ...payload) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).publish(event, ...payload);\n  }\n  subscribe(event, handler, selector) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    if (selector) {\n      return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler, selector);\n    }\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler);\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * The event type being unsubscribed to must be on the event allowlist.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw if the given event is not an allowed event for this controller messenger.\n   * @template EventType - A type union of allowed Event type strings.\n   */\n  unsubscribe(event, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unsubscribe(event, handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * The event type being cleared *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  clearEventSubscriptions(event) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed clearing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).clearEventSubscriptions(event);\n  }\n};\n_controllerMessenger = new WeakMap();\n_controllerName = new WeakMap();\n_allowedActions = new WeakMap();\n_allowedEvents = new WeakMap();\n_isAllowedEvent = new WeakSet();\nisAllowedEvent_fn = function(eventType) {\n  const allowedEvents = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedEvents);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType) || allowedEvents !== null && allowedEvents.includes(eventType);\n};\n_isAllowedAction = new WeakSet();\nisAllowedAction_fn = function(actionType) {\n  const allowedActions = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedActions);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, actionType) || allowedActions !== null && allowedActions.includes(actionType);\n};\n_isInCurrentNamespace = new WeakSet();\nisInCurrentNamespace_fn = function(name) {\n  return name.startsWith(`${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:`);\n};\n\n\n\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n//# sourceMappingURL=chunk-UJFCPTF3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFTHCJ6HYjs = require('./chunk-FTHCJ6HY.js');\n\n\n\n\nvar _chunkIURK6TKDjs = require('./chunk-IURK6TKD.js');\n\n\nvar _chunkG42723LGjs = require('./chunk-G42723LG.js');\n\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\nexports.BaseController = _chunkIURK6TKDjs.BaseController; exports.BaseControllerV1 = _chunkFTHCJ6HYjs.BaseControllerV1; exports.ControllerMessenger = _chunkG42723LGjs.ControllerMessenger; exports.RestrictedControllerMessenger = _chunkUJFCPTF3js.RestrictedControllerMessenger; exports.getAnonymizedState = _chunkIURK6TKDjs.getAnonymizedState; exports.getPersistentState = _chunkIURK6TKDjs.getPersistentState;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/Caveat.ts\nvar _utils = require('@metamask/utils');\nfunction isRestrictedMethodCaveatSpecification(specification) {\n  return _utils.hasProperty.call(void 0, specification, \"decorator\");\n}\nfunction decorateWithCaveats(methodImplementation, permission, caveatSpecifications) {\n  const { caveats } = permission;\n  if (!caveats) {\n    return methodImplementation;\n  }\n  let decorated = async (args) => methodImplementation(args);\n  for (const caveat of caveats) {\n    const specification = caveatSpecifications[caveat.type];\n    if (!specification) {\n      throw new (0, _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError)(caveat.type);\n    }\n    if (!isRestrictedMethodCaveatSpecification(specification)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatSpecificationMismatchError)(\n        specification,\n        \"RestrictedMethod\" /* RestrictedMethod */\n      );\n    }\n    decorated = specification.decorator(decorated, caveat);\n  }\n  return decorated;\n}\n\n\n\n\nexports.isRestrictedMethodCaveatSpecification = isRestrictedMethodCaveatSpecification; exports.decorateWithCaveats = decorateWithCaveats;\n//# sourceMappingURL=chunk-3YOPLPVY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkVBIZGGQLjs = require('./chunk-VBIZGGQL.js');\n\n\nvar _chunk7A3VYLCKjs = require('./chunk-7A3VYLCK.js');\n\n\nvar _chunkX4ZAW4QRjs = require('./chunk-X4ZAW4QR.js');\n\n\nvar _chunkZ2XKIXLSjs = require('./chunk-Z2XKIXLS.js');\n\n// src/rpc-methods/index.ts\nvar rpc_methods_exports = {};\n_chunkZ2XKIXLSjs.__export.call(void 0, rpc_methods_exports, {\n  handlers: () => handlers\n});\nvar handlers = [\n  _chunk7A3VYLCKjs.requestPermissionsHandler,\n  _chunkVBIZGGQLjs.getPermissionsHandler,\n  _chunkX4ZAW4QRjs.revokePermissionsHandler\n];\n\n\n\n\nexports.handlers = handlers; exports.rpc_methods_exports = rpc_methods_exports;\n//# sourceMappingURL=chunk-6PXDVUYM.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/rpc-methods/requestPermissions.ts\nvar _controllerutils = require('@metamask/controller-utils');\nvar requestPermissionsHandler = {\n  methodNames: [\"wallet_requestPermissions\" /* RequestPermissions */],\n  implementation: requestPermissionsImplementation,\n  hookNames: {\n    requestPermissionsForOrigin: true\n  }\n};\nasync function requestPermissionsImplementation(req, res, _next, end, { requestPermissionsForOrigin }) {\n  const { params } = req;\n  if (!Array.isArray(params) || !_controllerutils.isPlainObject.call(void 0, params[0])) {\n    return end(_chunkFYADAA2Gjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  const [requestedPermissions] = params;\n  const [grantedPermissions] = await requestPermissionsForOrigin(\n    requestedPermissions\n  );\n  res.result = Object.values(grantedPermissions);\n  return end();\n}\n\n\n\nexports.requestPermissionsHandler = requestPermissionsHandler;\n//# sourceMappingURL=chunk-7A3VYLCK.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\nvar _chunk3YOPLPVYjs = require('./chunk-3YOPLPVY.js');\n\n\n\n\n\nvar _chunkZH4MLSXXjs = require('./chunk-ZH4MLSXX.js');\n\n\nvar _chunkF5TBMVWCjs = require('./chunk-F5TBMVWC.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n\nvar _chunkVQPP5PWSjs = require('./chunk-VQPP5PWS.js');\n\n\n\nvar _chunkZ2XKIXLSjs = require('./chunk-Z2XKIXLS.js');\n\n// src/PermissionController.ts\nvar _basecontroller = require('@metamask/base-controller');\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _utils = require('@metamask/utils');\nvar _deepfreezestrict = require('deep-freeze-strict'); var _deepfreezestrict2 = _interopRequireDefault(_deepfreezestrict);\nvar _immer = require('immer');\nvar _nanoid = require('nanoid');\nvar controllerName = \"PermissionController\";\nfunction getStateMetadata() {\n  return { subjects: { anonymous: true, persist: true } };\n}\nfunction getDefaultState() {\n  return { subjects: {} };\n}\nvar CaveatMutatorOperation = /* @__PURE__ */ ((CaveatMutatorOperation2) => {\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"Noop\"] = 0] = \"Noop\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"UpdateValue\"] = 1] = \"UpdateValue\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"DeleteCaveat\"] = 2] = \"DeleteCaveat\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"RevokePermission\"] = 3] = \"RevokePermission\";\n  return CaveatMutatorOperation2;\n})(CaveatMutatorOperation || {});\nvar _expectGetCaveatMerger, expectGetCaveatMerger_fn, _applyGrantedPermissions, applyGrantedPermissions_fn, _mergeIncrementalPermissions, mergeIncrementalPermissions_fn, _mergePermission, mergePermission_fn, _mergeCaveat, mergeCaveat_fn, _handleApprovedPermissions, handleApprovedPermissions_fn;\nvar PermissionController = class extends _basecontroller.BaseController {\n  /**\n   * Constructs the PermissionController.\n   *\n   * @param options - Permission controller options.\n   * @param options.caveatSpecifications - The specifications of all caveats\n   * available to the controller. See {@link CaveatSpecificationMap} and the\n   * documentation for more details.\n   * @param options.permissionSpecifications - The specifications of all\n   * permissions available to the controller. See\n   * {@link PermissionSpecificationMap} and the README for more details.\n   * @param options.unrestrictedMethods - The callable names of all JSON-RPC\n   * methods ignored by the new controller.\n   * @param options.messenger - The controller messenger. See\n   * {@link BaseController} for more information.\n   * @param options.state - Existing state to hydrate the controller with at\n   * initialization.\n   */\n  constructor(options) {\n    const {\n      caveatSpecifications,\n      permissionSpecifications,\n      unrestrictedMethods,\n      messenger,\n      state = {}\n    } = options;\n    super({\n      name: controllerName,\n      metadata: getStateMetadata(),\n      messenger,\n      state: {\n        ...getDefaultState(),\n        ...state\n      }\n    });\n    /**\n     * Gets the merger function for the specified caveat. Throws if no\n     * merger exists.\n     *\n     * @param caveatType - The type of the caveat whose merger to get.\n     * @returns The caveat value merger function for the specified caveat type.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _expectGetCaveatMerger);\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _applyGrantedPermissions);\n    /**\n     * Merges a set of incrementally requested permissions into the existing permissions of\n     * the requesting subject. The merge is a right-biased union, where the existing\n     * permissions are the left-hand side, and the incrementally requested permissions are\n     * the right-hand side.\n     *\n     * @param existingPermissions - The subject's existing permissions.\n     * @param incrementalRequestedPermissions - The requested permissions to merge.\n     * @returns The merged permissions and the resulting diff.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergeIncrementalPermissions);\n    /**\n     * Performs a right-biased union between two permissions. The task of merging caveats\n     * of the same type between the two permissions is delegated to the corresponding\n     * caveat type's merger implementation.\n     *\n     * Throws if the left-hand and right-hand permissions both have a caveat whose\n     * specification does not provide a caveat value merger function.\n     *\n     * @param leftPermission - The left-hand permission to merge.\n     * @param rightPermission - The right-hand permission to merge.\n     * @returns The merged permission.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergePermission);\n    /**\n     * Merges two caveats of the same type. The task of merging the values of the\n     * two caveats is delegated to the corresponding caveat type's merger implementation.\n     *\n     * @param leftCaveat - The left-hand caveat to merge.\n     * @param rightCaveat - The right-hand caveat to merge.\n     * @returns The merged caveat and the diff between the two caveats.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergeCaveat);\n    /**\n     * Accepts a permissions request that has been approved by the user. This\n     * method should be called after the user has approved the request and the\n     * {@link ApprovalController} has resolved the user approval promise.\n     *\n     * @param options - Options bag.\n     * @param options.subject - The subject to grant permissions to.\n     * @param options.metadata - The metadata of the approved permissions request.\n     * @param options.preserveExistingPermissions - Whether to preserve the\n     * subject's existing permissions.\n     * @param options.approvedRequest - The approved permissions request to handle.\n     * @returns The granted permissions and request metadata.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _handleApprovedPermissions);\n    this._unrestrictedMethods = new Set(unrestrictedMethods);\n    this._caveatSpecifications = _deepfreezestrict2.default.call(void 0, { ...caveatSpecifications });\n    this.validatePermissionSpecifications(\n      permissionSpecifications,\n      this._caveatSpecifications\n    );\n    this._permissionSpecifications = _deepfreezestrict2.default.call(void 0, {\n      ...permissionSpecifications\n    });\n    this.registerMessageHandlers();\n    this.createPermissionMiddleware = _chunkF5TBMVWCjs.getPermissionMiddlewareFactory.call(void 0, {\n      executeRestrictedMethod: this._executeRestrictedMethod.bind(this),\n      getRestrictedMethod: this.getRestrictedMethod.bind(this),\n      isUnrestrictedMethod: this.unrestrictedMethods.has.bind(\n        this.unrestrictedMethods\n      )\n    });\n  }\n  /**\n   * The names of all JSON-RPC methods that will be ignored by the controller.\n   *\n   * @returns The names of all unrestricted JSON-RPC methods\n   */\n  get unrestrictedMethods() {\n    return this._unrestrictedMethods;\n  }\n  /**\n   * Gets a permission specification.\n   *\n   * @param targetName - The name of the permission specification to get.\n   * @returns The permission specification with the specified target name.\n   */\n  getPermissionSpecification(targetName) {\n    return this._permissionSpecifications[targetName];\n  }\n  /**\n   * Gets a caveat specification.\n   *\n   * @param caveatType - The type of the caveat specification to get.\n   * @returns The caveat specification with the specified type.\n   */\n  getCaveatSpecification(caveatType) {\n    return this._caveatSpecifications[caveatType];\n  }\n  /**\n   * Constructor helper for validating permission specifications.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param permissionSpecifications - The permission specifications passed to\n   * this controller's constructor.\n   * @param caveatSpecifications - The caveat specifications passed to this\n   * controller.\n   */\n  validatePermissionSpecifications(permissionSpecifications, caveatSpecifications) {\n    Object.entries(\n      permissionSpecifications\n    ).forEach(\n      ([\n        targetName,\n        { permissionType, targetName: innerTargetName, allowedCaveats }\n      ]) => {\n        if (!permissionType || !_utils.hasProperty.call(void 0, _chunkZH4MLSXXjs.PermissionType, permissionType)) {\n          throw new Error(`Invalid permission type: \"${permissionType}\"`);\n        }\n        if (!targetName) {\n          throw new Error(`Invalid permission target name: \"${targetName}\"`);\n        }\n        if (targetName !== innerTargetName) {\n          throw new Error(\n            `Invalid permission specification: target name \"${targetName}\" must match specification.targetName value \"${innerTargetName}\".`\n          );\n        }\n        if (allowedCaveats) {\n          allowedCaveats.forEach((caveatType) => {\n            if (!_utils.hasProperty.call(void 0, caveatSpecifications, caveatType)) {\n              throw new (0, _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError)(caveatType);\n            }\n            const specification = caveatSpecifications[caveatType];\n            const isRestrictedMethodCaveat = _chunk3YOPLPVYjs.isRestrictedMethodCaveatSpecification.call(void 0, specification);\n            if (permissionType === \"RestrictedMethod\" /* RestrictedMethod */ && !isRestrictedMethodCaveat || permissionType === \"Endowment\" /* Endowment */ && isRestrictedMethodCaveat) {\n              throw new (0, _chunkFYADAA2Gjs.CaveatSpecificationMismatchError)(\n                specification,\n                permissionType\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n  /**\n   * Constructor helper for registering the controller's messaging system\n   * actions.\n   */\n  registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:clearPermissions`,\n      () => this.clearState()\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getEndowments`,\n      (origin, targetName, requestData) => this.getEndowments(origin, targetName, requestData)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getSubjectNames`,\n      () => this.getSubjectNames()\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getPermissions`,\n      (origin) => this.getPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasPermission`,\n      (origin, targetName) => this.hasPermission(origin, targetName)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasPermissions`,\n      (origin) => this.hasPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:grantPermissions`,\n      this.grantPermissions.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:grantPermissionsIncremental`,\n      this.grantPermissionsIncremental.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:requestPermissions`,\n      (subject, permissions) => this.requestPermissions(subject, permissions)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:requestPermissionsIncremental`,\n      (subject, permissions) => this.requestPermissionsIncremental(subject, permissions)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokeAllPermissions`,\n      (origin) => this.revokeAllPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokePermissionForAllSubjects`,\n      (target) => this.revokePermissionForAllSubjects(target)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokePermissions`,\n      this.revokePermissions.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:updateCaveat`,\n      (origin, target, caveatType, caveatValue) => {\n        this.updateCaveat(\n          origin,\n          target,\n          caveatType,\n          caveatValue\n        );\n      }\n    );\n  }\n  /**\n   * Clears the state of the controller.\n   */\n  clearState() {\n    this.update((_draftState) => {\n      return {\n        ...getDefaultState()\n      };\n    });\n  }\n  /**\n   * Gets the permission specification corresponding to the given permission\n   * type and target name. Throws an error if the target name does not\n   * correspond to a permission, or if the specification is not of the\n   * given permission type.\n   *\n   * @template Type - The type of the permission specification to get.\n   * @param permissionType - The type of the permission specification to get.\n   * @param targetName - The name of the permission whose specification to get.\n   * @param requestingOrigin - The origin of the requesting subject, if any.\n   * Will be added to any thrown errors.\n   * @returns The specification object corresponding to the given type and\n   * target name.\n   */\n  getTypedPermissionSpecification(permissionType, targetName, requestingOrigin) {\n    const failureError = permissionType === \"RestrictedMethod\" /* RestrictedMethod */ ? _chunkFYADAA2Gjs.methodNotFound.call(void 0, \n      targetName,\n      requestingOrigin ? { origin: requestingOrigin } : void 0\n    ) : new (0, _chunkFYADAA2Gjs.EndowmentPermissionDoesNotExistError)(\n      targetName,\n      requestingOrigin\n    );\n    if (!this.targetExists(targetName)) {\n      throw failureError;\n    }\n    const specification = this.getPermissionSpecification(targetName);\n    if (!_chunkZH4MLSXXjs.hasSpecificationType.call(void 0, specification, permissionType)) {\n      throw failureError;\n    }\n    return specification;\n  }\n  /**\n   * Gets the implementation of the specified restricted method.\n   *\n   * A JSON-RPC error is thrown if the method does not exist.\n   *\n   * @see {@link PermissionController.executeRestrictedMethod} and\n   * {@link PermissionController.createPermissionMiddleware} for internal usage.\n   * @param method - The name of the restricted method.\n   * @param origin - The origin associated with the request for the restricted\n   * method, if any.\n   * @returns The restricted method implementation.\n   */\n  getRestrictedMethod(method, origin) {\n    return this.getTypedPermissionSpecification(\n      \"RestrictedMethod\" /* RestrictedMethod */,\n      method,\n      origin\n    ).methodImplementation;\n  }\n  /**\n   * Gets a list of all origins of subjects.\n   *\n   * @returns The origins (i.e. IDs) of all subjects.\n   */\n  getSubjectNames() {\n    return Object.keys(this.state.subjects);\n  }\n  /**\n   * Gets the permission for the specified target of the subject corresponding\n   * to the specified origin.\n   *\n   * @param origin - The origin of the subject.\n   * @param targetName - The method name as invoked by a third party (i.e., not\n   * a method key).\n   * @returns The permission if it exists, or undefined otherwise.\n   */\n  getPermission(origin, targetName) {\n    return this.state.subjects[origin]?.permissions[targetName];\n  }\n  /**\n   * Gets all permissions for the specified subject, if any.\n   *\n   * @param origin - The origin of the subject.\n   * @returns The permissions of the subject, if any.\n   */\n  getPermissions(origin) {\n    return this.state.subjects[origin]?.permissions;\n  }\n  /**\n   * Checks whether the subject with the specified origin has the specified\n   * permission.\n   *\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @returns Whether the subject has the permission.\n   */\n  hasPermission(origin, target) {\n    return Boolean(this.getPermission(origin, target));\n  }\n  /**\n   * Checks whether the subject with the specified origin has any permissions.\n   * Use this if you want to know if a subject \"exists\".\n   *\n   * @param origin - The origin of the subject to check.\n   * @returns Whether the subject has any permissions.\n   */\n  hasPermissions(origin) {\n    return Boolean(this.state.subjects[origin]);\n  }\n  /**\n   * Revokes all permissions from the specified origin.\n   *\n   * Throws an error of the origin has no permissions.\n   *\n   * @param origin - The origin whose permissions to revoke.\n   */\n  revokeAllPermissions(origin) {\n    this.update((draftState) => {\n      if (!draftState.subjects[origin]) {\n        throw new (0, _chunkFYADAA2Gjs.UnrecognizedSubjectError)(origin);\n      }\n      delete draftState.subjects[origin];\n    });\n  }\n  /**\n   * Revokes the specified permission from the subject with the specified\n   * origin.\n   *\n   * Throws an error if the subject or the permission does not exist.\n   *\n   * @param origin - The origin of the subject whose permission to revoke.\n   * @param target - The target name of the permission to revoke.\n   */\n  revokePermission(origin, target) {\n    this.revokePermissions({ [origin]: [target] });\n  }\n  /**\n   * Revokes the specified permissions from the specified subjects.\n   *\n   * Throws an error if any of the subjects or permissions do not exist.\n   *\n   * @param subjectsAndPermissions - An object mapping subject origins\n   * to arrays of permission target names to revoke.\n   */\n  revokePermissions(subjectsAndPermissions) {\n    this.update((draftState) => {\n      Object.keys(subjectsAndPermissions).forEach((origin) => {\n        if (!_utils.hasProperty.call(void 0, draftState.subjects, origin)) {\n          throw new (0, _chunkFYADAA2Gjs.UnrecognizedSubjectError)(origin);\n        }\n        subjectsAndPermissions[origin].forEach((target) => {\n          const { permissions } = draftState.subjects[origin];\n          if (!_utils.hasProperty.call(void 0, permissions, target)) {\n            throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n          }\n          this.deletePermission(draftState.subjects, origin, target);\n        });\n      });\n    });\n  }\n  /**\n   * Revokes all permissions corresponding to the specified target for all subjects.\n   * Does nothing if no subjects or no such permission exists.\n   *\n   * @param target - The name of the target to revoke all permissions for.\n   */\n  revokePermissionForAllSubjects(target) {\n    if (this.getSubjectNames().length === 0) {\n      return;\n    }\n    this.update((draftState) => {\n      Object.entries(draftState.subjects).forEach(([origin, subject]) => {\n        const { permissions } = subject;\n        if (_utils.hasProperty.call(void 0, permissions, target)) {\n          this.deletePermission(draftState.subjects, origin, target);\n        }\n      });\n    });\n  }\n  /**\n   * Deletes the permission identified by the given origin and target. If the\n   * permission is the single remaining permission of its subject, the subject\n   * is also deleted.\n   *\n   * @param subjects - The draft permission controller subjects.\n   * @param origin - The origin of the subject associated with the permission\n   * to delete.\n   * @param target - The target name of the permission to delete.\n   */\n  deletePermission(subjects, origin, target) {\n    const { permissions } = subjects[origin];\n    if (Object.keys(permissions).length > 1) {\n      delete permissions[target];\n    } else {\n      delete subjects[origin];\n    }\n  }\n  /**\n   * Checks whether the permission of the subject corresponding to the given\n   * origin has a caveat of the specified type.\n   *\n   * Throws an error if the subject does not have a permission with the\n   * specified target name.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to check for.\n   * @returns Whether the permission has the specified caveat.\n   */\n  hasCaveat(origin, target, caveatType) {\n    return Boolean(this.getCaveat(origin, target, caveatType));\n  }\n  /**\n   * Gets the caveat of the specified type, if any, for the permission of\n   * the subject corresponding to the given origin.\n   *\n   * Throws an error if the subject does not have a permission with the\n   * specified target name.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to get.\n   * @returns The caveat, or `undefined` if no such caveat exists.\n   */\n  getCaveat(origin, target, caveatType) {\n    const permission = this.getPermission(origin, target);\n    if (!permission) {\n      throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n    }\n    return _chunkZH4MLSXXjs.findCaveat.call(void 0, permission, caveatType);\n  }\n  /**\n   * Adds a caveat of the specified type, with the specified caveat value, to\n   * the permission corresponding to the given subject origin and permission\n   * target.\n   *\n   * For modifying existing caveats, use\n   * {@link PermissionController.updateCaveat}.\n   *\n   * Throws an error if no such permission exists, or if the caveat already\n   * exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to add.\n   * @param caveatValue - The value of the caveat to add.\n   */\n  addCaveat(origin, target, caveatType, caveatValue) {\n    if (this.hasCaveat(origin, target, caveatType)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatAlreadyExistsError)(origin, target, caveatType);\n    }\n    this.setCaveat(origin, target, caveatType, caveatValue);\n  }\n  /**\n   * Updates the value of the caveat of the specified type belonging to the\n   * permission corresponding to the given subject origin and permission\n   * target.\n   *\n   * For adding new caveats, use\n   * {@link PermissionController.addCaveat}.\n   *\n   * Throws an error if no such permission or caveat exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to update.\n   * @param caveatValue - The new value of the caveat.\n   */\n  updateCaveat(origin, target, caveatType, caveatValue) {\n    if (!this.hasCaveat(origin, target, caveatType)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(origin, target, caveatType);\n    }\n    this.setCaveat(origin, target, caveatType, caveatValue);\n  }\n  /**\n   * Sets the specified caveat on the specified permission. Overwrites existing\n   * caveats of the same type in-place (preserving array order), and adds the\n   * caveat to the end of the array otherwise.\n   *\n   * Throws an error if the permission does not exist or fails to validate after\n   * its caveats have been modified.\n   *\n   * @see {@link PermissionController.addCaveat}\n   * @see {@link PermissionController.updateCaveat}\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to set.\n   * @param caveatValue - The value of the caveat to set.\n   */\n  setCaveat(origin, target, caveatType, caveatValue) {\n    this.update((draftState) => {\n      const subject = draftState.subjects[origin];\n      if (!subject) {\n        throw new (0, _chunkFYADAA2Gjs.UnrecognizedSubjectError)(origin);\n      }\n      const permission = subject.permissions[target];\n      if (!permission) {\n        throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n      }\n      const caveat = {\n        type: caveatType,\n        value: caveatValue\n      };\n      this.validateCaveat(caveat, origin, target);\n      if (permission.caveats) {\n        const caveatIndex = permission.caveats.findIndex(\n          (existingCaveat) => existingCaveat.type === caveat.type\n        );\n        if (caveatIndex === -1) {\n          permission.caveats.push(caveat);\n        } else {\n          permission.caveats.splice(caveatIndex, 1, caveat);\n        }\n      } else {\n        permission.caveats = [caveat];\n      }\n      this.validateModifiedPermission(permission, origin);\n    });\n  }\n  /**\n   * Updates all caveats with the specified type for all subjects and\n   * permissions by applying the specified mutator function to them.\n   *\n   * ATTN: Permissions can be revoked entirely by the action of this method,\n   * read on for details.\n   *\n   * Caveat mutators are functions that receive a caveat value and return a\n   * tuple consisting of a {@link CaveatMutatorOperation} and, optionally, a new\n   * value to update the existing caveat with.\n   *\n   * For each caveat, depending on the mutator result, this method will:\n   * - Do nothing ({@link CaveatMutatorOperation.Noop})\n   * - Update the value of the caveat ({@link CaveatMutatorOperation.UpdateValue}). The caveat specification validator, if any, will be called after updating the value.\n   * - Delete the caveat ({@link CaveatMutatorOperation.DeleteCaveat}). The permission specification validator, if any, will be called after deleting the caveat.\n   * - Revoke the parent permission ({@link CaveatMutatorOperation.RevokePermission})\n   *\n   * This method throws if the validation of any caveat or permission fails.\n   *\n   * @param targetCaveatType - The type of the caveats to update.\n   * @param mutator - The mutator function which will be applied to all caveat\n   * values.\n   */\n  updatePermissionsByCaveat(targetCaveatType, mutator) {\n    if (Object.keys(this.state.subjects).length === 0) {\n      return;\n    }\n    this.update((draftState) => {\n      Object.values(draftState.subjects).forEach((subject) => {\n        Object.values(subject.permissions).forEach((permission) => {\n          const { caveats } = permission;\n          const targetCaveat = caveats?.find(\n            ({ type }) => type === targetCaveatType\n          );\n          if (!targetCaveat) {\n            return;\n          }\n          const mutatorResult = mutator(targetCaveat.value);\n          const { operation } = mutatorResult;\n          switch (operation) {\n            case 0 /* Noop */:\n              break;\n            case 1 /* UpdateValue */:\n              targetCaveat.value = mutatorResult.value;\n              this.validateCaveat(\n                targetCaveat,\n                subject.origin,\n                permission.parentCapability\n              );\n              break;\n            case 2 /* DeleteCaveat */:\n              this.deleteCaveat(permission, targetCaveatType, subject.origin);\n              break;\n            case 3 /* RevokePermission */:\n              this.deletePermission(\n                draftState.subjects,\n                subject.origin,\n                permission.parentCapability\n              );\n              break;\n            default: {\n              throw new Error(`Unrecognized mutation result: \"${operation}\"`);\n            }\n          }\n        });\n      });\n    });\n  }\n  /**\n   * Removes the caveat of the specified type from the permission corresponding\n   * to the given subject origin and target name.\n   *\n   * Throws an error if no such permission or caveat exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to remove.\n   */\n  removeCaveat(origin, target, caveatType) {\n    this.update((draftState) => {\n      const permission = draftState.subjects[origin]?.permissions[target];\n      if (!permission) {\n        throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n      }\n      if (!permission.caveats) {\n        throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(origin, target, caveatType);\n      }\n      this.deleteCaveat(permission, caveatType, origin);\n    });\n  }\n  /**\n   * Deletes the specified caveat from the specified permission. If no caveats\n   * remain after deletion, the permission's caveat property is set to `null`.\n   * The permission is validated after being modified.\n   *\n   * Throws an error if the permission does not have a caveat with the specified\n   * type.\n   *\n   * @param permission - The permission whose caveat to delete.\n   * @param caveatType - The type of the caveat to delete.\n   * @param origin - The origin the permission subject.\n   */\n  deleteCaveat(permission, caveatType, origin) {\n    if (!permission.caveats) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(\n        origin,\n        permission.parentCapability,\n        caveatType\n      );\n    }\n    const caveatIndex = permission.caveats.findIndex(\n      (existingCaveat) => existingCaveat.type === caveatType\n    );\n    if (caveatIndex === -1) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(\n        origin,\n        permission.parentCapability,\n        caveatType\n      );\n    }\n    if (permission.caveats.length === 1) {\n      permission.caveats = null;\n    } else {\n      permission.caveats.splice(caveatIndex, 1);\n    }\n    this.validateModifiedPermission(permission, origin);\n  }\n  /**\n   * Validates the specified modified permission. Should **always** be invoked\n   * on a permission after its caveats have been modified.\n   *\n   * Just like {@link PermissionController.validatePermission}, except that the\n   * corresponding target name and specification are retrieved first, and an\n   * error is thrown if the target name does not exist.\n   *\n   * @param permission - The modified permission to validate.\n   * @param origin - The origin associated with the permission.\n   */\n  validateModifiedPermission(permission, origin) {\n    if (!this.targetExists(permission.parentCapability)) {\n      throw new Error(\n        `Fatal: Existing permission target \"${permission.parentCapability}\" has no specification.`\n      );\n    }\n    this.validatePermission(\n      this.getPermissionSpecification(permission.parentCapability),\n      permission,\n      origin\n    );\n  }\n  /**\n   * Verifies the existence the specified permission target, i.e. whether it has\n   * a specification.\n   *\n   * @param target - The requested permission target.\n   * @returns Whether the permission target exists.\n   */\n  targetExists(target) {\n    return _utils.hasProperty.call(void 0, this._permissionSpecifications, target);\n  }\n  /**\n   * Grants _approved_ permissions to the specified subject. Every permission and\n   * caveat is stringently validated—including by calling their specification\n   * validators—and an error is thrown if validation fails.\n   *\n   * ATTN: This method does **not** prompt the user for approval. User consent must\n   * first be obtained through some other means.\n   *\n   * @see {@link PermissionController.requestPermissions} For initiating a\n   * permissions request requiring user approval.\n   * @param options - Options bag.\n   * @param options.approvedPermissions - The requested permissions approved by\n   * the user.\n   * @param options.requestData - Permission request data. Passed to permission\n   * factory functions.\n   * @param options.preserveExistingPermissions - Whether to preserve the\n   * subject's existing permissions.\n   * @param options.subject - The subject to grant permissions to.\n   * @returns The subject's new permission state. It may or may not have changed.\n   */\n  grantPermissions({\n    approvedPermissions,\n    requestData,\n    preserveExistingPermissions = true,\n    subject\n  }) {\n    return _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _applyGrantedPermissions, applyGrantedPermissions_fn).call(this, {\n      approvedPermissions,\n      subject,\n      mergePermissions: false,\n      preserveExistingPermissions,\n      requestData\n    });\n  }\n  /**\n   * Incrementally grants _approved_ permissions to the specified subject. Every\n   * permission and caveat is stringently validated—including by calling their\n   * specification validators—and an error is thrown if validation fails.\n   *\n   * ATTN: This method does **not** prompt the user for approval. User consent must\n   * first be obtained through some other means.\n   *\n   * @see {@link PermissionController.requestPermissionsIncremental} For initiating\n   * an incremental permissions request requiring user approval.\n   * @param options - Options bag.\n   * @param options.approvedPermissions - The requested permissions approved by\n   * the user.\n   * @param options.requestData - Permission request data. Passed to permission\n   * factory functions.\n   * @param options.subject - The subject to grant permissions to.\n   * @returns The subject's new permission state. It may or may not have changed.\n   */\n  grantPermissionsIncremental({\n    approvedPermissions,\n    requestData,\n    subject\n  }) {\n    return _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _applyGrantedPermissions, applyGrantedPermissions_fn).call(this, {\n      approvedPermissions,\n      subject,\n      mergePermissions: true,\n      preserveExistingPermissions: true,\n      requestData\n    });\n  }\n  /**\n   * Validates the specified permission by:\n   * - Ensuring that if `subjectTypes` is specified, the subject requesting the permission is of a type in the list.\n   * - Ensuring that its `caveats` property is either `null` or a non-empty array.\n   * - Ensuring that it only includes caveats allowed by its specification.\n   * - Ensuring that it includes no duplicate caveats (by caveat type).\n   * - Validating each caveat object, if `performCaveatValidation` is `true`.\n   * - Calling the validator of its specification, if one exists and `invokePermissionValidator` is `true`.\n   *\n   * An error is thrown if validation fails.\n   *\n   * @param specification - The specification of the permission.\n   * @param permission - The permission to validate.\n   * @param origin - The origin associated with the permission.\n   * @param validationOptions - Validation options.\n   * @param validationOptions.invokePermissionValidator - Whether to invoke the\n   * permission's consumer-specified validator function, if any.\n   * @param validationOptions.performCaveatValidation - Whether to invoke\n   * {@link PermissionController.validateCaveat} on each of the permission's\n   * caveats.\n   */\n  validatePermission(specification, permission, origin, { invokePermissionValidator, performCaveatValidation } = {\n    invokePermissionValidator: true,\n    performCaveatValidation: true\n  }) {\n    const { allowedCaveats, validator, targetName } = specification;\n    if (specification.subjectTypes?.length && specification.subjectTypes.length > 0) {\n      const metadata = this.messagingSystem.call(\n        \"SubjectMetadataController:getSubjectMetadata\",\n        origin\n      );\n      if (!metadata || metadata.subjectType === null || !specification.subjectTypes.includes(metadata.subjectType)) {\n        throw specification.permissionType === \"RestrictedMethod\" /* RestrictedMethod */ ? _chunkFYADAA2Gjs.methodNotFound.call(void 0, targetName, { origin }) : new (0, _chunkFYADAA2Gjs.EndowmentPermissionDoesNotExistError)(targetName, origin);\n      }\n    }\n    if (_utils.hasProperty.call(void 0, permission, \"caveats\")) {\n      const { caveats } = permission;\n      if (caveats !== null && !(Array.isArray(caveats) && caveats.length > 0)) {\n        throw new (0, _chunkFYADAA2Gjs.InvalidCaveatsPropertyError)(origin, targetName, caveats);\n      }\n      const seenCaveatTypes = /* @__PURE__ */ new Set();\n      caveats?.forEach((caveat) => {\n        if (performCaveatValidation) {\n          this.validateCaveat(caveat, origin, targetName);\n        }\n        if (!allowedCaveats?.includes(caveat.type)) {\n          throw new (0, _chunkFYADAA2Gjs.ForbiddenCaveatError)(caveat.type, origin, targetName);\n        }\n        if (seenCaveatTypes.has(caveat.type)) {\n          throw new (0, _chunkFYADAA2Gjs.DuplicateCaveatError)(caveat.type, origin, targetName);\n        }\n        seenCaveatTypes.add(caveat.type);\n      });\n    }\n    if (invokePermissionValidator && validator) {\n      validator(permission, origin, targetName);\n    }\n  }\n  /**\n   * Assigns the specified permissions to the subject with the given origin.\n   * Overwrites all existing permissions, and creates a subject entry if it\n   * doesn't already exist.\n   *\n   * ATTN: Assumes that the new permissions have been validated.\n   *\n   * @param origin - The origin of the grantee subject.\n   * @param permissions - The new permissions for the grantee subject.\n   */\n  setValidatedPermissions(origin, permissions) {\n    this.update((draftState) => {\n      if (!draftState.subjects[origin]) {\n        draftState.subjects[origin] = { origin, permissions: {} };\n      }\n      draftState.subjects[origin].permissions = _immer.castDraft.call(void 0, permissions);\n    });\n  }\n  /**\n   * Validates the requested caveats for the permission of the specified\n   * subject origin and target name and returns the validated caveat array.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param origin - The origin of the permission subject.\n   * @param target - The permission target name.\n   * @param requestedCaveats - The requested caveats to construct.\n   * @returns The constructed caveats.\n   */\n  constructCaveats(origin, target, requestedCaveats) {\n    const caveatArray = requestedCaveats?.map((requestedCaveat) => {\n      this.validateCaveat(requestedCaveat, origin, target);\n      const { type, value } = requestedCaveat;\n      return { type, value };\n    });\n    return caveatArray && _controllerutils.isNonEmptyArray.call(void 0, caveatArray) ? caveatArray : void 0;\n  }\n  /**\n   * This methods validates that the specified caveat is an object with the\n   * expected properties and types. It also ensures that a caveat specification\n   * exists for the requested caveat type, and calls the specification\n   * validator, if it exists, on the caveat object.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param caveat - The caveat object to validate.\n   * @param origin - The origin associated with the subject of the parent\n   * permission.\n   * @param target - The target name associated with the parent permission.\n   */\n  validateCaveat(caveat, origin, target) {\n    if (!_controllerutils.isPlainObject.call(void 0, caveat)) {\n      throw new (0, _chunkFYADAA2Gjs.InvalidCaveatError)(caveat, origin, target);\n    }\n    if (Object.keys(caveat).length !== 2) {\n      throw new (0, _chunkFYADAA2Gjs.InvalidCaveatFieldsError)(caveat, origin, target);\n    }\n    if (typeof caveat.type !== \"string\") {\n      throw new (0, _chunkFYADAA2Gjs.InvalidCaveatTypeError)(caveat, origin, target);\n    }\n    const specification = this.getCaveatSpecification(caveat.type);\n    if (!specification) {\n      throw new (0, _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError)(caveat.type, origin, target);\n    }\n    if (!_utils.hasProperty.call(void 0, caveat, \"value\") || caveat.value === void 0) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatMissingValueError)(caveat, origin, target);\n    }\n    if (!_controllerutils.isValidJson.call(void 0, caveat.value)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatInvalidJsonError)(caveat, origin, target);\n    }\n    specification.validator?.(caveat, origin, target);\n  }\n  /**\n   * Initiates a permission request that requires user approval.\n   *\n   * Either this or {@link PermissionController.requestPermissionsIncremental}\n   * should always be used to grant additional permissions to a subject,\n   * unless user approval has been obtained through some other means.\n   *\n   * Permissions are validated at every step of the approval process, and this\n   * method will reject if validation fails.\n   *\n   * @see {@link ApprovalController} For the user approval logic.\n   * @see {@link PermissionController.acceptPermissionsRequest} For the method\n   * that _accepts_ the request and resolves the user approval promise.\n   * @see {@link PermissionController.rejectPermissionsRequest} For the method\n   * that _rejects_ the request and the user approval promise.\n   * @param subject - The grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   * @param options - Additional options.\n   * @param options.id - The id of the permissions request. Defaults to a unique\n   * id.\n   * @param options.preserveExistingPermissions - Whether to preserve the\n   * subject's existing permissions. Defaults to `true`.\n   * @param options.metadata - Additional metadata about the permission request.\n   * @returns The granted permissions and request metadata.\n   */\n  async requestPermissions(subject, requestedPermissions, options = {}) {\n    const { origin } = subject;\n    const { id = _nanoid.nanoid.call(void 0, ), preserveExistingPermissions = true } = options;\n    this.validateRequestedPermissions(origin, requestedPermissions);\n    const metadata = {\n      ...options.metadata,\n      id,\n      origin\n    };\n    const permissionsRequest = {\n      metadata,\n      permissions: requestedPermissions\n    };\n    const approvedRequest = await this.requestUserApproval(permissionsRequest);\n    return await _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _handleApprovedPermissions, handleApprovedPermissions_fn).call(this, {\n      subject,\n      metadata,\n      preserveExistingPermissions,\n      approvedRequest\n    });\n  }\n  /**\n   * Initiates an incremental permission request that prompts for user approval.\n   * Incremental permission requests allow the caller to replace existing and/or\n   * add brand new permissions and caveats for the specified subject.\n   *\n   * Incremental permission request are merged with the subject's existing permissions\n   * through a right-biased union, where the incremental permission are the right-hand\n   * side of the merger. If both sides of the merger specify the same caveats for a\n   * given permission, the caveats are merged using their specification's caveat value\n   * merger property.\n   *\n   * Either this or {@link PermissionController.requestPermissions} should\n   * always be used to grant additional permissions to a subject, unless user\n   * approval has been obtained through some other means.\n   *\n   * Permissions are validated at every step of the approval process, and this\n   * method will reject if validation fails.\n   *\n   * @see {@link ApprovalController} For the user approval logic.\n   * @see {@link PermissionController.acceptPermissionsRequest} For the method\n   * that _accepts_ the request and resolves the user approval promise.\n   * @see {@link PermissionController.rejectPermissionsRequest} For the method\n   * that _rejects_ the request and the user approval promise.\n   * @param subject - The grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   * @param options - Additional options.\n   * @param options.id - The id of the permissions request. Defaults to a unique\n   * id.\n   * @param options.metadata - Additional metadata about the permission request.\n   * @returns The granted permissions and request metadata.\n   */\n  async requestPermissionsIncremental(subject, requestedPermissions, options = {}) {\n    const { origin } = subject;\n    const { id = _nanoid.nanoid.call(void 0, ) } = options;\n    this.validateRequestedPermissions(origin, requestedPermissions);\n    const currentPermissions = this.getPermissions(origin) ?? {};\n    const [newPermissions, permissionDiffMap] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeIncrementalPermissions, mergeIncrementalPermissions_fn).call(this, currentPermissions, requestedPermissions);\n    if (newPermissions === void 0 || permissionDiffMap === void 0) {\n      return [];\n    }\n    try {\n      this.validateRequestedPermissions(origin, newPermissions);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new (0, _chunkFYADAA2Gjs.InvalidMergedPermissionsError)(\n          origin,\n          error,\n          permissionDiffMap\n        );\n      }\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \"Unrecognized error type\", { error });\n    }\n    const metadata = {\n      ...options.metadata,\n      id,\n      origin\n    };\n    const permissionsRequest = {\n      metadata,\n      permissions: newPermissions,\n      diff: {\n        currentPermissions,\n        permissionDiffMap\n      }\n    };\n    const approvedRequest = await this.requestUserApproval(permissionsRequest);\n    return await _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _handleApprovedPermissions, handleApprovedPermissions_fn).call(this, {\n      subject,\n      metadata,\n      preserveExistingPermissions: false,\n      approvedRequest\n    });\n  }\n  /**\n   * Validates requested permissions. Throws if validation fails.\n   *\n   * This method ensures that the requested permissions are a properly\n   * formatted {@link RequestedPermissions} object, and performs the same\n   * validation as {@link PermissionController.grantPermissions}, except that\n   * consumer-specified permission validator functions are not called, since\n   * they are only called on fully constructed, approved permissions that are\n   * otherwise completely valid.\n   *\n   * Unrecognzied properties on requested permissions are ignored.\n   *\n   * @param origin - The origin of the grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   */\n  validateRequestedPermissions(origin, requestedPermissions) {\n    if (!_controllerutils.isPlainObject.call(void 0, requestedPermissions)) {\n      throw _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n        message: `Requested permissions for origin \"${origin}\" is not a plain object.`,\n        data: { origin, requestedPermissions }\n      });\n    }\n    if (Object.keys(requestedPermissions).length === 0) {\n      throw _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n        message: `Permissions request for origin \"${origin}\" contains no permissions.`,\n        data: { requestedPermissions }\n      });\n    }\n    for (const targetName of Object.keys(requestedPermissions)) {\n      const permission = requestedPermissions[targetName];\n      if (!this.targetExists(targetName)) {\n        throw _chunkFYADAA2Gjs.methodNotFound.call(void 0, targetName, { origin, requestedPermissions });\n      }\n      if (!_controllerutils.isPlainObject.call(void 0, permission) || permission.parentCapability !== void 0 && targetName !== permission.parentCapability) {\n        throw _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n          message: `Permissions request for origin \"${origin}\" contains invalid requested permission(s).`,\n          data: { origin, requestedPermissions }\n        });\n      }\n      this.validatePermission(\n        this.getPermissionSpecification(targetName),\n        // Typecast: The permission is still a \"PlainObject\" here.\n        permission,\n        origin,\n        { invokePermissionValidator: false, performCaveatValidation: true }\n      );\n    }\n  }\n  /**\n   * Adds a request to the {@link ApprovalController} using the\n   * {@link AddApprovalRequest} action. Also validates the resulting approved\n   * permissions request, and throws an error if validation fails.\n   *\n   * @param permissionsRequest - The permissions request object.\n   * @returns The approved permissions request object.\n   */\n  async requestUserApproval(permissionsRequest) {\n    const { origin, id } = permissionsRequest.metadata;\n    const approvedRequest = await this.messagingSystem.call(\n      \"ApprovalController:addRequest\",\n      {\n        id,\n        origin,\n        requestData: permissionsRequest,\n        type: \"wallet_requestPermissions\" /* RequestPermissions */\n      },\n      true\n    );\n    this.validateApprovedPermissions(approvedRequest, { id, origin });\n    return approvedRequest;\n  }\n  /**\n   * Reunites all the side-effects (onPermitted and onFailure) of the requested permissions inside a record of arrays.\n   *\n   * @param permissions - The approved permissions.\n   * @returns The {@link SideEffects} object containing the handlers arrays.\n   */\n  getSideEffects(permissions) {\n    return Object.keys(permissions).reduce(\n      (sideEffectList, targetName) => {\n        if (this.targetExists(targetName)) {\n          const specification = this.getPermissionSpecification(targetName);\n          if (specification.sideEffect) {\n            sideEffectList.permittedHandlers[targetName] = specification.sideEffect.onPermitted;\n            if (specification.sideEffect.onFailure) {\n              sideEffectList.failureHandlers[targetName] = specification.sideEffect.onFailure;\n            }\n          }\n        }\n        return sideEffectList;\n      },\n      { permittedHandlers: {}, failureHandlers: {} }\n    );\n  }\n  /**\n   * Executes the side-effects of the approved permissions while handling the errors if any.\n   * It will pass an instance of the {@link messagingSystem} and the request data associated with the permission request to the handlers through its params.\n   *\n   * @param sideEffects - the side-effect record created by {@link getSideEffects}\n   * @param requestData - the permissions requestData.\n   * @returns the value returned by all the `onPermitted` handlers in an array.\n   */\n  async executeSideEffects(sideEffects, requestData) {\n    const { permittedHandlers, failureHandlers } = sideEffects;\n    const params = {\n      requestData,\n      messagingSystem: this.messagingSystem\n    };\n    const promiseResults = await Promise.allSettled(\n      Object.values(permittedHandlers).map(\n        (permittedHandler) => permittedHandler(params)\n      )\n    );\n    const rejectedHandlers = promiseResults.filter(\n      (promise) => promise.status === \"rejected\"\n    );\n    if (rejectedHandlers.length > 0) {\n      const failureHandlersList = Object.values(failureHandlers);\n      if (failureHandlersList.length > 0) {\n        try {\n          await Promise.all(\n            failureHandlersList.map((failureHandler) => failureHandler(params))\n          );\n        } catch (error) {\n          throw _chunkFYADAA2Gjs.internalError.call(void 0, \"Unexpected error in side-effects\", { error });\n        }\n      }\n      const reasons = rejectedHandlers.map((handler) => handler.reason);\n      reasons.forEach((reason) => {\n        console.error(reason);\n      });\n      throw reasons.length > 1 ? _chunkFYADAA2Gjs.internalError.call(void 0, \n        \"Multiple errors occurred during side-effects execution\",\n        { errors: reasons }\n      ) : reasons[0];\n    }\n    return promiseResults.map(\n      ({ value }) => value\n    );\n  }\n  /**\n   * Validates an approved {@link PermissionsRequest} object. The approved\n   * request must have the required `metadata` and `permissions` properties,\n   * the `id` and `origin` of the `metadata` must match the original request\n   * metadata, and the requested permissions must be valid per\n   * {@link PermissionController.validateRequestedPermissions}. Any extra\n   * metadata properties are ignored.\n   *\n   * An error is thrown if validation fails.\n   *\n   * @param approvedRequest - The approved permissions request object.\n   * @param originalMetadata - The original request metadata.\n   */\n  validateApprovedPermissions(approvedRequest, originalMetadata) {\n    const { id, origin } = originalMetadata;\n    if (!_controllerutils.isPlainObject.call(void 0, approvedRequest) || !_controllerutils.isPlainObject.call(void 0, approvedRequest.metadata)) {\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" is invalid.`,\n        { data: { approvedRequest } }\n      );\n    }\n    const {\n      metadata: { id: newId, origin: newOrigin },\n      permissions\n    } = approvedRequest;\n    if (newId !== id) {\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" mutated its id.`,\n        { originalId: id, mutatedId: newId }\n      );\n    }\n    if (newOrigin !== origin) {\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" mutated its origin.`,\n        { originalOrigin: origin, mutatedOrigin: newOrigin }\n      );\n    }\n    try {\n      this.validateRequestedPermissions(origin, permissions);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw _chunkFYADAA2Gjs.internalError.call(void 0, \n          `Invalid approved permissions request: ${error.message}`,\n          error instanceof _rpcerrors.JsonRpcError ? error.data : void 0\n        );\n      }\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \"Unrecognized error type\", { error });\n    }\n  }\n  /**\n   * Accepts a permissions request created by\n   * {@link PermissionController.requestPermissions}.\n   *\n   * @param request - The permissions request.\n   */\n  async acceptPermissionsRequest(request) {\n    const { id } = request.metadata;\n    if (!this.hasApprovalRequest({ id })) {\n      throw new (0, _chunkFYADAA2Gjs.PermissionsRequestNotFoundError)(id);\n    }\n    if (Object.keys(request.permissions).length === 0) {\n      this._rejectPermissionsRequest(\n        id,\n        _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n          message: \"Must request at least one permission.\"\n        })\n      );\n      return;\n    }\n    try {\n      await this.messagingSystem.call(\n        \"ApprovalController:acceptRequest\",\n        id,\n        request\n      );\n    } catch (error) {\n      this._rejectPermissionsRequest(id, error);\n      throw error;\n    }\n  }\n  /**\n   * Rejects a permissions request created by\n   * {@link PermissionController.requestPermissions}.\n   *\n   * @param id - The id of the request to be rejected.\n   */\n  async rejectPermissionsRequest(id) {\n    if (!this.hasApprovalRequest({ id })) {\n      throw new (0, _chunkFYADAA2Gjs.PermissionsRequestNotFoundError)(id);\n    }\n    this._rejectPermissionsRequest(id, _chunkFYADAA2Gjs.userRejectedRequest.call(void 0, ));\n  }\n  /**\n   * Checks whether the {@link ApprovalController} has a particular permissions\n   * request.\n   *\n   * @see {@link PermissionController.acceptPermissionsRequest} and\n   * {@link PermissionController.rejectPermissionsRequest} for usage.\n   * @param options - The {@link HasApprovalRequest} options.\n   * @param options.id - The id of the approval request to check for.\n   * @returns Whether the specified request exists.\n   */\n  hasApprovalRequest(options) {\n    return this.messagingSystem.call(\"ApprovalController:hasRequest\", options);\n  }\n  /**\n   * Rejects the permissions request with the specified id, with the specified\n   * error as the reason. This method is effectively a wrapper around a\n   * messenger call for the `ApprovalController:rejectRequest` action.\n   *\n   * @see {@link PermissionController.acceptPermissionsRequest} and\n   * {@link PermissionController.rejectPermissionsRequest} for usage.\n   * @param id - The id of the request to reject.\n   * @param error - The error associated with the rejection.\n   * @returns Nothing\n   */\n  _rejectPermissionsRequest(id, error) {\n    return this.messagingSystem.call(\n      \"ApprovalController:rejectRequest\",\n      id,\n      error\n    );\n  }\n  /**\n   * Gets the subject's endowments per the specified endowment permission.\n   * Throws if the subject does not have the required permission or if the\n   * permission is not an endowment permission.\n   *\n   * @param origin - The origin of the subject whose endowments to retrieve.\n   * @param targetName - The name of the endowment permission. This must be a\n   * valid permission target name.\n   * @param requestData - Additional data associated with the request, if any.\n   * Forwarded to the endowment getter function for the permission.\n   * @returns The endowments, if any.\n   */\n  async getEndowments(origin, targetName, requestData) {\n    if (!this.hasPermission(origin, targetName)) {\n      throw _chunkFYADAA2Gjs.unauthorized.call(void 0, { data: { origin, targetName } });\n    }\n    return this.getTypedPermissionSpecification(\n      \"Endowment\" /* Endowment */,\n      targetName,\n      origin\n    ).endowmentGetter({ origin, requestData });\n  }\n  /**\n   * Executes a restricted method as the subject with the given origin.\n   * The specified params, if any, will be passed to the method implementation.\n   *\n   * ATTN: Great caution should be exercised in the use of this method.\n   * Methods that cause side effects or affect application state should\n   * be avoided.\n   *\n   * This method will first attempt to retrieve the requested restricted method\n   * implementation, throwing if it does not exist. The method will then be\n   * invoked as though the subject with the specified origin had invoked it with\n   * the specified parameters. This means that any existing caveats will be\n   * applied to the restricted method, and this method will throw if the\n   * restricted method or its caveat decorators throw.\n   *\n   * In addition, this method will throw if the subject does not have a\n   * permission for the specified restricted method.\n   *\n   * @param origin - The origin of the subject to execute the method on behalf\n   * of.\n   * @param targetName - The name of the method to execute. This must be a valid\n   * permission target name.\n   * @param params - The parameters to pass to the method implementation.\n   * @returns The result of the executed method.\n   */\n  async executeRestrictedMethod(origin, targetName, params) {\n    const methodImplementation = this.getRestrictedMethod(targetName, origin);\n    const result = await this._executeRestrictedMethod(\n      methodImplementation,\n      { origin },\n      targetName,\n      params\n    );\n    if (result === void 0) {\n      throw new Error(\n        `Internal request for method \"${targetName}\" as origin \"${origin}\" returned no result.`\n      );\n    }\n    return result;\n  }\n  /**\n   * An internal method used in the controller's `json-rpc-engine` middleware\n   * and {@link PermissionController.executeRestrictedMethod}. Calls the\n   * specified restricted method implementation after decorating it with the\n   * caveats of its permission. Throws if the subject does not have the\n   * requisite permission.\n   *\n   * ATTN: Parameter validation is the responsibility of the caller, or\n   * the restricted method implementation in the case of `params`.\n   *\n   * @see {@link PermissionController.executeRestrictedMethod} and\n   * {@link PermissionController.createPermissionMiddleware} for usage.\n   * @param methodImplementation - The implementation of the method to call.\n   * @param subject - Metadata about the subject that made the request.\n   * @param method - The method name\n   * @param params - Params needed for executing the restricted method\n   * @returns The result of the restricted method implementation\n   */\n  _executeRestrictedMethod(methodImplementation, subject, method, params = []) {\n    const { origin } = subject;\n    const permission = this.getPermission(origin, method);\n    if (!permission) {\n      throw _chunkFYADAA2Gjs.unauthorized.call(void 0, { data: { origin, method } });\n    }\n    return _chunk3YOPLPVYjs.decorateWithCaveats.call(void 0, \n      methodImplementation,\n      permission,\n      this._caveatSpecifications\n    )({ method, params, context: { origin } });\n  }\n};\n_expectGetCaveatMerger = new WeakSet();\nexpectGetCaveatMerger_fn = function(caveatType) {\n  const { merger } = this.getCaveatSpecification(caveatType);\n  if (merger === void 0) {\n    throw new (0, _chunkFYADAA2Gjs.CaveatMergerDoesNotExistError)(caveatType);\n  }\n  return merger;\n};\n_applyGrantedPermissions = new WeakSet();\napplyGrantedPermissions_fn = function({\n  approvedPermissions,\n  subject,\n  mergePermissions,\n  preserveExistingPermissions,\n  requestData\n}) {\n  const { origin } = subject;\n  if (!origin || typeof origin !== \"string\") {\n    throw new (0, _chunkFYADAA2Gjs.InvalidSubjectIdentifierError)(origin);\n  }\n  const permissions = preserveExistingPermissions ? {\n    ...this.getPermissions(origin)\n  } : {};\n  for (const [requestedTarget, approvedPermission] of Object.entries(\n    approvedPermissions\n  )) {\n    if (!this.targetExists(requestedTarget)) {\n      throw _chunkFYADAA2Gjs.methodNotFound.call(void 0, requestedTarget);\n    }\n    if (approvedPermission.parentCapability !== void 0 && requestedTarget !== approvedPermission.parentCapability) {\n      throw new (0, _chunkFYADAA2Gjs.InvalidApprovedPermissionError)(\n        origin,\n        requestedTarget,\n        approvedPermission\n      );\n    }\n    const targetName = requestedTarget;\n    const specification = this.getPermissionSpecification(targetName);\n    const caveats = this.constructCaveats(\n      origin,\n      targetName,\n      approvedPermission.caveats\n    );\n    const permissionOptions = {\n      caveats,\n      invoker: origin,\n      target: targetName\n    };\n    let permission;\n    let performCaveatValidation = true;\n    if (specification.factory) {\n      permission = specification.factory(permissionOptions, requestData);\n    } else {\n      permission = _chunkZH4MLSXXjs.constructPermission.call(void 0, permissionOptions);\n      performCaveatValidation = false;\n    }\n    if (mergePermissions) {\n      permission = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergePermission, mergePermission_fn).call(this, permissions[targetName], permission)[0];\n    }\n    this.validatePermission(specification, permission, origin, {\n      invokePermissionValidator: true,\n      performCaveatValidation\n    });\n    permissions[targetName] = permission;\n  }\n  this.setValidatedPermissions(origin, permissions);\n  return permissions;\n};\n_mergeIncrementalPermissions = new WeakSet();\nmergeIncrementalPermissions_fn = function(existingPermissions, incrementalRequestedPermissions) {\n  const permissionDiffMap = {};\n  const newPermissions = _immer.produce.call(void 0, \n    existingPermissions,\n    (draftExistingPermissions) => {\n      const leftPermissions = draftExistingPermissions;\n      Object.entries(incrementalRequestedPermissions).forEach(\n        ([targetName, rightPermission]) => {\n          const leftPermission = leftPermissions[targetName];\n          const [newPermission, caveatsDiff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergePermission, mergePermission_fn).call(this, leftPermission ?? {}, rightPermission);\n          if (leftPermission === void 0 || Object.keys(caveatsDiff).length > 0) {\n            leftPermissions[targetName] = newPermission;\n            permissionDiffMap[targetName] = caveatsDiff;\n          }\n        }\n      );\n    }\n  );\n  if (Object.keys(permissionDiffMap).length === 0) {\n    return [];\n  }\n  return [newPermissions, permissionDiffMap];\n};\n_mergePermission = new WeakSet();\nmergePermission_fn = function(leftPermission, rightPermission) {\n  const { caveatPairs, leftUniqueCaveats, rightUniqueCaveats } = _chunkVQPP5PWSjs.collectUniqueAndPairedCaveats.call(void 0, leftPermission, rightPermission);\n  const [mergedCaveats, caveatDiffMap] = caveatPairs.reduce(\n    ([caveats, diffMap], [leftCaveat, rightCaveat]) => {\n      const [newCaveat, diff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeCaveat, mergeCaveat_fn).call(this, leftCaveat, rightCaveat);\n      if (newCaveat !== void 0 && diff !== void 0) {\n        caveats.push(newCaveat);\n        diffMap[newCaveat.type] = diff;\n      } else {\n        caveats.push(leftCaveat);\n      }\n      return [caveats, diffMap];\n    },\n    [[], {}]\n  );\n  const mergedRightUniqueCaveats = rightUniqueCaveats.map((caveat) => {\n    const [newCaveat, diff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeCaveat, mergeCaveat_fn).call(this, void 0, caveat);\n    caveatDiffMap[newCaveat.type] = diff;\n    return newCaveat;\n  });\n  const allCaveats = [\n    ...mergedCaveats,\n    ...leftUniqueCaveats,\n    ...mergedRightUniqueCaveats\n  ];\n  const newPermission = {\n    ...leftPermission,\n    ...rightPermission,\n    ...allCaveats.length > 0 ? { caveats: allCaveats } : {}\n  };\n  return [newPermission, caveatDiffMap];\n};\n_mergeCaveat = new WeakSet();\nmergeCaveat_fn = function(leftCaveat, rightCaveat) {\n  if (leftCaveat !== void 0 && leftCaveat.type !== rightCaveat.type) {\n    throw new (0, _chunkFYADAA2Gjs.CaveatMergeTypeMismatchError)(leftCaveat.type, rightCaveat.type);\n  }\n  const merger = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _expectGetCaveatMerger, expectGetCaveatMerger_fn).call(this, rightCaveat.type);\n  if (leftCaveat === void 0) {\n    return [\n      {\n        ...rightCaveat\n      },\n      rightCaveat.value\n    ];\n  }\n  const [newValue, diff] = merger(leftCaveat.value, rightCaveat.value);\n  return newValue !== void 0 && diff !== void 0 ? [\n    {\n      type: rightCaveat.type,\n      value: newValue\n    },\n    diff\n  ] : [];\n};\n_handleApprovedPermissions = new WeakSet();\nhandleApprovedPermissions_fn = async function({\n  subject,\n  metadata,\n  preserveExistingPermissions,\n  approvedRequest\n}) {\n  const { permissions: approvedPermissions, ...requestData } = approvedRequest;\n  const approvedMetadata = { ...metadata };\n  const sideEffects = this.getSideEffects(approvedPermissions);\n  if (Object.values(sideEffects.permittedHandlers).length > 0) {\n    const sideEffectsData = await this.executeSideEffects(\n      sideEffects,\n      approvedRequest\n    );\n    approvedMetadata.data = Object.keys(sideEffects.permittedHandlers).reduce(\n      (acc, permission, i) => ({ [permission]: sideEffectsData[i], ...acc }),\n      {}\n    );\n  }\n  return [\n    this.grantPermissions({\n      subject,\n      approvedPermissions,\n      preserveExistingPermissions,\n      requestData\n    }),\n    approvedMetadata\n  ];\n};\n\n\n\n\nexports.CaveatMutatorOperation = CaveatMutatorOperation; exports.PermissionController = PermissionController;\n//# sourceMappingURL=chunk-B6PDRQ7N.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/permission-middleware.ts\nvar _jsonrpcengine = require('@metamask/json-rpc-engine');\nfunction getPermissionMiddlewareFactory({\n  executeRestrictedMethod,\n  getRestrictedMethod,\n  isUnrestrictedMethod\n}) {\n  return function createPermissionMiddleware(subject) {\n    const { origin } = subject;\n    if (typeof origin !== \"string\" || !origin) {\n      throw new Error('The subject \"origin\" must be a non-empty string.');\n    }\n    const permissionsMiddleware = async (req, res, next) => {\n      const { method, params } = req;\n      if (isUnrestrictedMethod(method)) {\n        return next();\n      }\n      const methodImplementation = getRestrictedMethod(method, origin);\n      const result = await executeRestrictedMethod(\n        methodImplementation,\n        subject,\n        method,\n        params\n      );\n      if (result === void 0) {\n        res.error = _chunkFYADAA2Gjs.internalError.call(void 0, \n          `Request for method \"${req.method}\" returned undefined result.`,\n          { request: req }\n        );\n        return void 0;\n      }\n      res.result = result;\n      return void 0;\n    };\n    return _jsonrpcengine.createAsyncMiddleware.call(void 0, permissionsMiddleware);\n  };\n}\n\n\n\nexports.getPermissionMiddlewareFactory = getPermissionMiddlewareFactory;\n//# sourceMappingURL=chunk-F5TBMVWC.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/errors.ts\n\n\n\n\n\nvar _rpcerrors = require('@metamask/rpc-errors');\nfunction unauthorized(opts) {\n  return _rpcerrors.providerErrors.unauthorized({\n    message: \"Unauthorized to perform action. Try requesting the required permission(s) first. For more information, see: https://docs.metamask.io/guide/rpc-api.html#permissions\",\n    data: opts.data\n  });\n}\nfunction methodNotFound(method, data) {\n  const message = `The method \"${method}\" does not exist / is not available.`;\n  const opts = { message };\n  if (data !== void 0) {\n    opts.data = data;\n  }\n  return _rpcerrors.rpcErrors.methodNotFound(opts);\n}\nfunction invalidParams(opts) {\n  return _rpcerrors.rpcErrors.invalidParams({\n    data: opts.data,\n    message: opts.message\n  });\n}\nfunction userRejectedRequest(data) {\n  return _rpcerrors.providerErrors.userRejectedRequest({ data });\n}\nfunction internalError(message, data) {\n  return _rpcerrors.rpcErrors.internal({ message, data });\n}\nvar InvalidSubjectIdentifierError = class extends Error {\n  constructor(origin) {\n    super(\n      `Invalid subject identifier: \"${typeof origin === \"string\" ? origin : typeof origin}\"`\n    );\n  }\n};\nvar UnrecognizedSubjectError = class extends Error {\n  constructor(origin) {\n    super(`Unrecognized subject: \"${origin}\" has no permissions.`);\n  }\n};\nvar CaveatMergerDoesNotExistError = class extends Error {\n  constructor(caveatType) {\n    super(`Caveat value merger does not exist for type: \"${caveatType}\"`);\n  }\n};\nvar InvalidMergedPermissionsError = class extends Error {\n  constructor(origin, cause, diff) {\n    super(\n      `Invalid merged permissions for subject \"${origin}\":\n${cause.message}`\n    );\n    this.cause = cause;\n    this.data = { diff };\n  }\n};\nvar InvalidApprovedPermissionError = class extends Error {\n  constructor(origin, target, approvedPermission) {\n    super(\n      `Invalid approved permission for origin \"${origin}\" and target \"${target}\".`\n    );\n    this.data = { origin, target, approvedPermission };\n  }\n};\nvar PermissionDoesNotExistError = class extends Error {\n  constructor(origin, target) {\n    super(`Subject \"${origin}\" has no permission for \"${target}\".`);\n  }\n};\nvar EndowmentPermissionDoesNotExistError = class extends Error {\n  constructor(target, origin) {\n    super(\n      `${origin ? `Subject \"${origin}\"` : \"Unknown subject\"} has no permission for \"${target}\".`\n    );\n    if (origin) {\n      this.data = { origin };\n    }\n  }\n};\nvar UnrecognizedCaveatTypeError = class extends Error {\n  constructor(caveatType, origin, target) {\n    super(`Unrecognized caveat type: \"${caveatType}\"`);\n    this.data = { caveatType };\n    if (origin !== void 0) {\n      this.data.origin = origin;\n    }\n    if (target !== void 0) {\n      this.data.target = target;\n    }\n  }\n};\nvar InvalidCaveatsPropertyError = class extends Error {\n  constructor(origin, target, caveatsProperty) {\n    super(\n      `The \"caveats\" property of permission for \"${target}\" of subject \"${origin}\" is invalid. It must be a non-empty array if specified.`\n    );\n    this.data = { origin, target, caveatsProperty };\n  }\n};\nvar CaveatDoesNotExistError = class extends Error {\n  constructor(origin, target, caveatType) {\n    super(\n      `Permission for \"${target}\" of subject \"${origin}\" has no caveat of type \"${caveatType}\".`\n    );\n  }\n};\nvar CaveatAlreadyExistsError = class extends Error {\n  constructor(origin, target, caveatType) {\n    super(\n      `Permission for \"${target}\" of subject \"${origin}\" already has a caveat of type \"${caveatType}\".`\n    );\n  }\n};\nvar InvalidCaveatError = class extends _rpcerrors.JsonRpcError {\n  constructor(receivedCaveat, origin, target) {\n    super(\n      _rpcerrors.errorCodes.rpc.invalidParams,\n      `Invalid caveat. Caveats must be plain objects.`,\n      { receivedCaveat }\n    );\n    this.data = { origin, target };\n  }\n};\nvar InvalidCaveatTypeError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat types must be strings. Received: \"${typeof caveat.type}\"`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar CaveatMissingValueError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat is missing \"value\" field.`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar CaveatInvalidJsonError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat \"value\" is invalid JSON.`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar InvalidCaveatFieldsError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(\n      `Caveat has unexpected number of fields: \"${Object.keys(caveat).length}\"`\n    );\n    this.data = { caveat, origin, target };\n  }\n};\nvar ForbiddenCaveatError = class extends Error {\n  constructor(caveatType, origin, targetName) {\n    super(\n      `Permissions for target \"${targetName}\" may not have caveats of type \"${caveatType}\".`\n    );\n    this.data = { caveatType, origin, target: targetName };\n  }\n};\nvar DuplicateCaveatError = class extends Error {\n  constructor(caveatType, origin, targetName) {\n    super(\n      `Permissions for target \"${targetName}\" contains multiple caveats of type \"${caveatType}\".`\n    );\n    this.data = { caveatType, origin, target: targetName };\n  }\n};\nvar CaveatMergeTypeMismatchError = class extends Error {\n  constructor(leftCaveatType, rightCaveatType) {\n    super(\n      `Cannot merge caveats of different types: \"${leftCaveatType}\" and \"${rightCaveatType}\".`\n    );\n    this.data = { leftCaveatType, rightCaveatType };\n  }\n};\nvar CaveatSpecificationMismatchError = class extends Error {\n  constructor(caveatSpec, permissionType) {\n    super(\n      `Caveat specification uses a mismatched type. Expected caveats for ${permissionType}`\n    );\n    this.data = { caveatSpec, permissionType };\n  }\n};\nvar PermissionsRequestNotFoundError = class extends Error {\n  constructor(id) {\n    super(`Permissions request with id \"${id}\" not found.`);\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.unauthorized = unauthorized; exports.methodNotFound = methodNotFound; exports.invalidParams = invalidParams; exports.userRejectedRequest = userRejectedRequest; exports.internalError = internalError; exports.InvalidSubjectIdentifierError = InvalidSubjectIdentifierError; exports.UnrecognizedSubjectError = UnrecognizedSubjectError; exports.CaveatMergerDoesNotExistError = CaveatMergerDoesNotExistError; exports.InvalidMergedPermissionsError = InvalidMergedPermissionsError; exports.InvalidApprovedPermissionError = InvalidApprovedPermissionError; exports.PermissionDoesNotExistError = PermissionDoesNotExistError; exports.EndowmentPermissionDoesNotExistError = EndowmentPermissionDoesNotExistError; exports.UnrecognizedCaveatTypeError = UnrecognizedCaveatTypeError; exports.InvalidCaveatsPropertyError = InvalidCaveatsPropertyError; exports.CaveatDoesNotExistError = CaveatDoesNotExistError; exports.CaveatAlreadyExistsError = CaveatAlreadyExistsError; exports.InvalidCaveatError = InvalidCaveatError; exports.InvalidCaveatTypeError = InvalidCaveatTypeError; exports.CaveatMissingValueError = CaveatMissingValueError; exports.CaveatInvalidJsonError = CaveatInvalidJsonError; exports.InvalidCaveatFieldsError = InvalidCaveatFieldsError; exports.ForbiddenCaveatError = ForbiddenCaveatError; exports.DuplicateCaveatError = DuplicateCaveatError; exports.CaveatMergeTypeMismatchError = CaveatMergeTypeMismatchError; exports.CaveatSpecificationMismatchError = CaveatSpecificationMismatchError; exports.PermissionsRequestNotFoundError = PermissionsRequestNotFoundError;\n//# sourceMappingURL=chunk-FYADAA2G.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/rpc-methods/getPermissions.ts\nvar getPermissionsHandler = {\n  methodNames: [\"wallet_getPermissions\" /* GetPermissions */],\n  implementation: getPermissionsImplementation,\n  hookNames: {\n    getPermissionsForOrigin: true\n  }\n};\nasync function getPermissionsImplementation(_req, res, _next, end, { getPermissionsForOrigin }) {\n  res.result = Object.values(getPermissionsForOrigin() || {});\n  return end();\n}\n\n\n\nexports.getPermissionsHandler = getPermissionsHandler;\n//# sourceMappingURL=chunk-VBIZGGQL.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/utils.ts\nvar MethodNames = /* @__PURE__ */ ((MethodNames2) => {\n  MethodNames2[\"RequestPermissions\"] = \"wallet_requestPermissions\";\n  MethodNames2[\"GetPermissions\"] = \"wallet_getPermissions\";\n  MethodNames2[\"RevokePermissions\"] = \"wallet_revokePermissions\";\n  return MethodNames2;\n})(MethodNames || {});\nfunction collectUniqueAndPairedCaveats(leftPermission, rightPermission) {\n  const leftCaveats = leftPermission?.caveats?.slice() ?? [];\n  const rightCaveats = rightPermission.caveats?.slice() ?? [];\n  const leftUniqueCaveats = [];\n  const caveatPairs = [];\n  leftCaveats.forEach((leftCaveat) => {\n    const rightCaveatIndex = rightCaveats.findIndex(\n      (rightCaveat) => rightCaveat.type === leftCaveat.type\n    );\n    if (rightCaveatIndex === -1) {\n      leftUniqueCaveats.push(leftCaveat);\n    } else {\n      caveatPairs.push([leftCaveat, rightCaveats[rightCaveatIndex]]);\n      rightCaveats.splice(rightCaveatIndex, 1);\n    }\n  });\n  return {\n    caveatPairs,\n    leftUniqueCaveats,\n    rightUniqueCaveats: [...rightCaveats]\n  };\n}\n\n\n\n\nexports.MethodNames = MethodNames; exports.collectUniqueAndPairedCaveats = collectUniqueAndPairedCaveats;\n//# sourceMappingURL=chunk-VQPP5PWS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/SubjectMetadataController.ts\nvar _basecontroller = require('@metamask/base-controller');\nvar controllerName = \"SubjectMetadataController\";\nvar SubjectType = /* @__PURE__ */ ((SubjectType2) => {\n  SubjectType2[\"Extension\"] = \"extension\";\n  SubjectType2[\"Internal\"] = \"internal\";\n  SubjectType2[\"Unknown\"] = \"unknown\";\n  SubjectType2[\"Website\"] = \"website\";\n  SubjectType2[\"Snap\"] = \"snap\";\n  return SubjectType2;\n})(SubjectType || {});\nvar stateMetadata = {\n  subjectMetadata: { persist: true, anonymous: false }\n};\nvar defaultState = {\n  subjectMetadata: {}\n};\nvar SubjectMetadataController = class _SubjectMetadataController extends _basecontroller.BaseController {\n  constructor({\n    messenger,\n    subjectCacheLimit,\n    state = {}\n  }) {\n    if (!Number.isInteger(subjectCacheLimit) || subjectCacheLimit < 1) {\n      throw new Error(\n        `subjectCacheLimit must be a positive integer. Received: \"${subjectCacheLimit}\"`\n      );\n    }\n    const hasPermissions = (origin) => {\n      return messenger.call(\"PermissionController:hasPermissions\", origin);\n    };\n    super({\n      name: controllerName,\n      metadata: stateMetadata,\n      messenger,\n      state: {\n        ..._SubjectMetadataController.getTrimmedState(state, hasPermissions)\n      }\n    });\n    this.subjectHasPermissions = hasPermissions;\n    this.subjectCacheLimit = subjectCacheLimit;\n    this.subjectsWithoutPermissionsEncounteredSinceStartup = /* @__PURE__ */ new Set();\n    this.messagingSystem.registerActionHandler(\n      // ESLint is confused by the string literal type.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getSubjectMetadata`,\n      this.getSubjectMetadata.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // ESLint is confused by the string literal type.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:addSubjectMetadata`,\n      this.addSubjectMetadata.bind(this)\n    );\n  }\n  /**\n   * Clears the state of this controller. Also resets the cache of subjects\n   * encountered since startup, so as to not prematurely reach the cache limit.\n   */\n  clearState() {\n    this.subjectsWithoutPermissionsEncounteredSinceStartup.clear();\n    this.update((_draftState) => {\n      return { ...defaultState };\n    });\n  }\n  /**\n   * Stores domain metadata for the given origin (subject). Deletes metadata for\n   * subjects without permissions in a FIFO manner once more than\n   * {@link SubjectMetadataController.subjectCacheLimit} distinct origins have\n   * been added since boot.\n   *\n   * In order to prevent a degraded user experience,\n   * metadata is never deleted for subjects with permissions, since metadata\n   * cannot yet be requested on demand.\n   *\n   * @param metadata - The subject metadata to store.\n   */\n  addSubjectMetadata(metadata) {\n    const { origin } = metadata;\n    const newMetadata = {\n      ...metadata,\n      extensionId: metadata.extensionId || null,\n      iconUrl: metadata.iconUrl || null,\n      name: metadata.name || null,\n      subjectType: metadata.subjectType || null\n    };\n    let originToForget = null;\n    if (this.subjectsWithoutPermissionsEncounteredSinceStartup.size >= this.subjectCacheLimit) {\n      const cachedOrigin = this.subjectsWithoutPermissionsEncounteredSinceStartup.values().next().value;\n      this.subjectsWithoutPermissionsEncounteredSinceStartup.delete(\n        cachedOrigin\n      );\n      if (!this.subjectHasPermissions(cachedOrigin)) {\n        originToForget = cachedOrigin;\n      }\n    }\n    this.subjectsWithoutPermissionsEncounteredSinceStartup.add(origin);\n    this.update((draftState) => {\n      draftState.subjectMetadata[origin] = newMetadata;\n      if (typeof originToForget === \"string\") {\n        delete draftState.subjectMetadata[originToForget];\n      }\n    });\n  }\n  /**\n   * Gets the subject metadata for the given origin, if any.\n   *\n   * @param origin - The origin for which to get the subject metadata.\n   * @returns The subject metadata, if any, or `undefined` otherwise.\n   */\n  getSubjectMetadata(origin) {\n    return this.state.subjectMetadata[origin];\n  }\n  /**\n   * Deletes all subjects without permissions from the controller's state.\n   */\n  trimMetadataState() {\n    this.update((draftState) => {\n      return _SubjectMetadataController.getTrimmedState(\n        draftState,\n        this.subjectHasPermissions\n      );\n    });\n  }\n  /**\n   * Returns a new state object that only includes subjects with permissions.\n   * This method is static because we want to call it in the constructor, before\n   * the controller's state is initialized.\n   *\n   * @param state - The state object to trim.\n   * @param hasPermissions - A function that returns a boolean indicating\n   * whether a particular subject (identified by its origin) has any\n   * permissions.\n   * @returns The new state object. If the specified `state` object has no\n   * subject metadata, the returned object will be equivalent to the default\n   * state of this controller.\n   */\n  static getTrimmedState(state, hasPermissions) {\n    const { subjectMetadata = {} } = state;\n    return {\n      subjectMetadata: Object.keys(subjectMetadata).reduce((newSubjectMetadata, origin) => {\n        if (hasPermissions(origin)) {\n          newSubjectMetadata[origin] = subjectMetadata[origin];\n        }\n        return newSubjectMetadata;\n      }, {})\n    };\n  }\n};\n\n\n\n\nexports.SubjectType = SubjectType; exports.SubjectMetadataController = SubjectMetadataController;\n//# sourceMappingURL=chunk-VSDHL2GQ.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/rpc-methods/revokePermissions.ts\n\n\nvar _utils = require('@metamask/utils');\nvar revokePermissionsHandler = {\n  methodNames: [\"wallet_revokePermissions\" /* RevokePermissions */],\n  implementation: revokePermissionsImplementation,\n  hookNames: {\n    revokePermissionsForOrigin: true\n  }\n};\nasync function revokePermissionsImplementation(req, res, _next, end, { revokePermissionsForOrigin }) {\n  const { params } = req;\n  const param = params?.[0];\n  if (!param) {\n    return end(_chunkFYADAA2Gjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  const permissionKeys = Object.keys(param);\n  if (!_utils.isNonEmptyArray.call(void 0, permissionKeys)) {\n    return end(_chunkFYADAA2Gjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  revokePermissionsForOrigin(permissionKeys);\n  res.result = null;\n  return end();\n}\n\n\n\nexports.revokePermissionsHandler = revokePermissionsHandler;\n//# sourceMappingURL=chunk-X4ZAW4QR.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\nexports.__export = __export; exports.__privateAdd = __privateAdd; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z2XKIXLS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/Permission.ts\nvar _nanoid = require('nanoid');\nfunction constructPermission(options) {\n  const { caveats = null, invoker, target } = options;\n  return {\n    id: _nanoid.nanoid.call(void 0, ),\n    parentCapability: target,\n    invoker,\n    caveats,\n    date: (/* @__PURE__ */ new Date()).getTime()\n  };\n}\nfunction findCaveat(permission, caveatType) {\n  return permission.caveats?.find((caveat) => caveat.type === caveatType);\n}\nvar PermissionType = /* @__PURE__ */ ((PermissionType2) => {\n  PermissionType2[\"RestrictedMethod\"] = \"RestrictedMethod\";\n  PermissionType2[\"Endowment\"] = \"Endowment\";\n  return PermissionType2;\n})(PermissionType || {});\nfunction hasSpecificationType(specification, expectedType) {\n  return specification.permissionType === expectedType;\n}\n\n\n\n\n\n\nexports.constructPermission = constructPermission; exports.findCaveat = findCaveat; exports.PermissionType = PermissionType; exports.hasSpecificationType = hasSpecificationType;\n//# sourceMappingURL=chunk-ZH4MLSXX.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunk6PXDVUYMjs = require('./chunk-6PXDVUYM.js');\nrequire('./chunk-VBIZGGQL.js');\nrequire('./chunk-7A3VYLCK.js');\nrequire('./chunk-X4ZAW4QR.js');\n\n\n\nvar _chunkB6PDRQ7Njs = require('./chunk-B6PDRQ7N.js');\n\n\n\nvar _chunk3YOPLPVYjs = require('./chunk-3YOPLPVY.js');\n\n\n\n\n\nvar _chunkZH4MLSXXjs = require('./chunk-ZH4MLSXX.js');\n\n\n\nvar _chunkVSDHL2GQjs = require('./chunk-VSDHL2GQ.js');\nrequire('./chunk-F5TBMVWC.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n\nvar _chunkVQPP5PWSjs = require('./chunk-VQPP5PWS.js');\nrequire('./chunk-Z2XKIXLS.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.CaveatAlreadyExistsError = _chunkFYADAA2Gjs.CaveatAlreadyExistsError; exports.CaveatDoesNotExistError = _chunkFYADAA2Gjs.CaveatDoesNotExistError; exports.CaveatInvalidJsonError = _chunkFYADAA2Gjs.CaveatInvalidJsonError; exports.CaveatMergeTypeMismatchError = _chunkFYADAA2Gjs.CaveatMergeTypeMismatchError; exports.CaveatMergerDoesNotExistError = _chunkFYADAA2Gjs.CaveatMergerDoesNotExistError; exports.CaveatMissingValueError = _chunkFYADAA2Gjs.CaveatMissingValueError; exports.CaveatMutatorOperation = _chunkB6PDRQ7Njs.CaveatMutatorOperation; exports.CaveatSpecificationMismatchError = _chunkFYADAA2Gjs.CaveatSpecificationMismatchError; exports.DuplicateCaveatError = _chunkFYADAA2Gjs.DuplicateCaveatError; exports.EndowmentPermissionDoesNotExistError = _chunkFYADAA2Gjs.EndowmentPermissionDoesNotExistError; exports.ForbiddenCaveatError = _chunkFYADAA2Gjs.ForbiddenCaveatError; exports.InvalidApprovedPermissionError = _chunkFYADAA2Gjs.InvalidApprovedPermissionError; exports.InvalidCaveatError = _chunkFYADAA2Gjs.InvalidCaveatError; exports.InvalidCaveatFieldsError = _chunkFYADAA2Gjs.InvalidCaveatFieldsError; exports.InvalidCaveatTypeError = _chunkFYADAA2Gjs.InvalidCaveatTypeError; exports.InvalidCaveatsPropertyError = _chunkFYADAA2Gjs.InvalidCaveatsPropertyError; exports.InvalidMergedPermissionsError = _chunkFYADAA2Gjs.InvalidMergedPermissionsError; exports.InvalidSubjectIdentifierError = _chunkFYADAA2Gjs.InvalidSubjectIdentifierError; exports.MethodNames = _chunkVQPP5PWSjs.MethodNames; exports.PermissionController = _chunkB6PDRQ7Njs.PermissionController; exports.PermissionDoesNotExistError = _chunkFYADAA2Gjs.PermissionDoesNotExistError; exports.PermissionType = _chunkZH4MLSXXjs.PermissionType; exports.PermissionsRequestNotFoundError = _chunkFYADAA2Gjs.PermissionsRequestNotFoundError; exports.SubjectMetadataController = _chunkVSDHL2GQjs.SubjectMetadataController; exports.SubjectType = _chunkVSDHL2GQjs.SubjectType; exports.UnrecognizedCaveatTypeError = _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError; exports.UnrecognizedSubjectError = _chunkFYADAA2Gjs.UnrecognizedSubjectError; exports.constructPermission = _chunkZH4MLSXXjs.constructPermission; exports.decorateWithCaveats = _chunk3YOPLPVYjs.decorateWithCaveats; exports.findCaveat = _chunkZH4MLSXXjs.findCaveat; exports.hasSpecificationType = _chunkZH4MLSXXjs.hasSpecificationType; exports.internalError = _chunkFYADAA2Gjs.internalError; exports.invalidParams = _chunkFYADAA2Gjs.invalidParams; exports.isRestrictedMethodCaveatSpecification = _chunk3YOPLPVYjs.isRestrictedMethodCaveatSpecification; exports.methodNotFound = _chunkFYADAA2Gjs.methodNotFound; exports.permissionRpcMethods = _chunk6PXDVUYMjs.rpc_methods_exports; exports.unauthorized = _chunkFYADAA2Gjs.unauthorized; exports.userRejectedRequest = _chunkFYADAA2Gjs.userRejectedRequest;\n//# sourceMappingURL=index.js.map","let { urlAlphabet } = require('./url-alphabet/index.cjs')\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nmodule.exports = { urlAlphabet }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRejectedRequestError = exports.UnsupportedMethodError = exports.UnauthorizedError = exports.DisconnectedError = exports.ChainDisconnectedError = exports.TransactionRejected = exports.ResourceUnavailableError = exports.ResourceNotFoundError = exports.ParseError = exports.MethodNotSupportedError = exports.MethodNotFoundError = exports.LimitExceededError = exports.InvalidRequestError = exports.InvalidParamsError = exports.InvalidInputError = exports.InternalError = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst internals_1 = require(\"./internals/index.cjs\");\n/**\n * A JSON-RPC 2.0 Internal (-32603) error.\n *\n * This can be thrown by a Snap to indicate that an internal error occurred,\n * without crashing the Snap.\n *\n * @see https://www.jsonrpc.org/specification#error_object\n */\nexports.InternalError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.internal);\n/**\n * An Ethereum JSON-RPC Invalid Input (-32000) error.\n *\n * This can be thrown by a Snap to indicate that the input to a method is\n * invalid, without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexports.InvalidInputError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.invalidInput);\n/**\n * A JSON-RPC 2.0 Invalid Params (-32602) error.\n *\n * This can be thrown by a Snap to indicate that the parameters to a method are\n * invalid, without crashing the Snap.\n *\n * @see https://www.jsonrpc.org/specification#error_object\n */\nexports.InvalidParamsError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.invalidParams);\n/**\n * A JSON-RPC 2.0 Invalid Request (-32600) error.\n *\n * This can be thrown by a Snap to indicate that the request is invalid, without\n * crashing the Snap.\n *\n * @see https://www.jsonrpc.org/specification#error_object\n */\nexports.InvalidRequestError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.invalidRequest);\n/**\n * An Ethereum JSON-RPC Limit Exceeded (-32005) error.\n *\n * This can be thrown by a Snap to indicate that a limit has been exceeded,\n * without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexports.LimitExceededError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.limitExceeded);\n/**\n * An Ethereum JSON-RPC Method Not Found (-32601) error.\n *\n * This can be thrown by a Snap to indicate that a method does not exist,\n * without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexports.MethodNotFoundError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.methodNotFound);\n/**\n * An Ethereum JSON-RPC Method Not Supported (-32004) error.\n *\n * This can be thrown by a Snap to indicate that a method is not supported,\n * without crashing the Snap.\n */\nexports.MethodNotSupportedError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.methodNotSupported);\n/**\n * A JSON-RPC 2.0 Parse (-32700) error.\n *\n * This can be thrown by a Snap to indicate that a request is not valid JSON,\n * without crashing the Snap.\n *\n * @see https://www.jsonrpc.org/specification#error_object\n */\nexports.ParseError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.parse);\n/**\n * An Ethereum JSON-RPC Resource Not Found (-32001) error.\n *\n * This can be thrown by a Snap to indicate that a resource does not exist,\n * without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexports.ResourceNotFoundError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.resourceNotFound);\n/**\n * An Ethereum JSON-RPC Resource Unavailable (-32002) error.\n *\n * This can be thrown by a Snap to indicate that a resource is unavailable,\n * without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexports.ResourceUnavailableError = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.resourceUnavailable);\n/**\n * An Ethereum JSON-RPC Transaction Rejected (-32003) error.\n *\n * This can be thrown by a Snap to indicate that a transaction was rejected,\n * without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexports.TransactionRejected = (0, internals_1.createSnapError)(rpc_errors_1.rpcErrors.transactionRejected);\n/**\n * An Ethereum Provider Chain Disconnected (4901) error.\n *\n * This can be thrown by a Snap to indicate that the provider is disconnected\n * from the requested chain, without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexports.ChainDisconnectedError = (0, internals_1.createSnapError)(rpc_errors_1.providerErrors.chainDisconnected);\n/**\n * An Ethereum Provider Disconnected (4900) error.\n *\n * This can be thrown by a Snap to indicate that the provider is disconnected,\n * without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexports.DisconnectedError = (0, internals_1.createSnapError)(rpc_errors_1.providerErrors.disconnected);\n/**\n * An Ethereum Provider Unauthorized (4100) error.\n *\n * This can be thrown by a Snap to indicate that the requested method / account\n * is not authorized by the user, without crashing the Snap.\n */\nexports.UnauthorizedError = (0, internals_1.createSnapError)(rpc_errors_1.providerErrors.unauthorized);\n/**\n * An Ethereum Provider Unsupported Method (4200) error.\n *\n * This can be thrown by a Snap to indicate that the requested method is not\n * supported by the provider, without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexports.UnsupportedMethodError = (0, internals_1.createSnapError)(rpc_errors_1.providerErrors.unsupportedMethod);\n/**\n * An Ethereum Provider User Rejected Request (4001) error.\n *\n * This can be thrown by a Snap to indicate that the user rejected the request,\n * without crashing the Snap.\n *\n * @see https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexports.UserRejectedRequestError = (0, internals_1.createSnapError)(rpc_errors_1.providerErrors.userRejectedRequest);\n//# sourceMappingURL=error-wrappers.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SnapError_code, _SnapError_message, _SnapError_data, _SnapError_stack;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnapError = void 0;\nconst internals_1 = require(\"./internals/index.cjs\");\n/**\n * A generic error which can be thrown by a Snap, without it causing the Snap to\n * crash.\n */\nclass SnapError extends Error {\n    /**\n     * Create a new `SnapError`.\n     *\n     * @param error - The error to create the `SnapError` from. If this is a\n     * `string`, it will be used as the error message. If this is an `Error`, its\n     * `message` property will be used as the error message. If this is a\n     * `JsonRpcError`, its `message` property will be used as the error message\n     * and its `code` property will be used as the error code. Otherwise, the\n     * error will be converted to a string and used as the error message.\n     * @param data - Additional data to include in the error. This will be merged\n     * with the error data, if any.\n     */\n    constructor(error, data = {}) {\n        const message = (0, internals_1.getErrorMessage)(error);\n        super(message);\n        _SnapError_code.set(this, void 0);\n        _SnapError_message.set(this, void 0);\n        _SnapError_data.set(this, void 0);\n        _SnapError_stack.set(this, void 0);\n        __classPrivateFieldSet(this, _SnapError_message, message, \"f\");\n        __classPrivateFieldSet(this, _SnapError_code, (0, internals_1.getErrorCode)(error), \"f\");\n        const mergedData = { ...(0, internals_1.getErrorData)(error), ...data };\n        if (Object.keys(mergedData).length > 0) {\n            __classPrivateFieldSet(this, _SnapError_data, mergedData, \"f\");\n        }\n        __classPrivateFieldSet(this, _SnapError_stack, super.stack, \"f\");\n    }\n    /**\n     * The error name.\n     *\n     * @returns The error name.\n     */\n    get name() {\n        return 'SnapError';\n    }\n    /**\n     * The error code.\n     *\n     * @returns The error code.\n     */\n    get code() {\n        return __classPrivateFieldGet(this, _SnapError_code, \"f\");\n    }\n    /**\n     * The error message.\n     *\n     * @returns The error message.\n     */\n    // This line is covered, but Jest doesn't pick it up for some reason.\n    /* istanbul ignore next */\n    get message() {\n        return __classPrivateFieldGet(this, _SnapError_message, \"f\");\n    }\n    /**\n     * Additional data for the error.\n     *\n     * @returns Additional data for the error.\n     */\n    get data() {\n        return __classPrivateFieldGet(this, _SnapError_data, \"f\");\n    }\n    /**\n     * The error stack.\n     *\n     * @returns The error stack.\n     */\n    // This line is covered, but Jest doesn't pick it up for some reason.\n    /* istanbul ignore next */\n    get stack() {\n        return __classPrivateFieldGet(this, _SnapError_stack, \"f\");\n    }\n    /**\n     * Convert the error to a JSON object.\n     *\n     * @returns The JSON object.\n     */\n    toJSON() {\n        return {\n            code: internals_1.SNAP_ERROR_CODE,\n            message: internals_1.SNAP_ERROR_MESSAGE,\n            data: {\n                cause: {\n                    code: this.code,\n                    message: this.message,\n                    stack: this.stack,\n                    ...(this.data ? { data: this.data } : {}),\n                },\n            },\n        };\n    }\n    /**\n     * Serialize the error to a JSON object. This is called by\n     * `@metamask/rpc-errors` when serializing the error.\n     *\n     * @returns The JSON object.\n     */\n    serialize() {\n        return this.toJSON();\n    }\n}\nexports.SnapError = SnapError;\n_SnapError_code = new WeakMap(), _SnapError_message = new WeakMap(), _SnapError_data = new WeakMap(), _SnapError_stack = new WeakMap();\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getImageComponent = exports.getImageData = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst ui_1 = require(\"./ui/index.cjs\");\n/**\n * Get raw image data from a URL.\n *\n * @param url - The URL to get the image data from.\n * @param options - The options to use when fetching the image data. This is\n * passed directly to `fetch`.\n * @returns A promise that resolves to the image data as a blob.\n */\nasync function getRawImageData(url, options) {\n    if (typeof fetch !== 'function') {\n        throw new Error(`Failed to fetch image data from \"${url}\": Using this function requires the \"endowment:network-access\" permission.`);\n    }\n    return fetch(url, options).then(async (response) => {\n        if (!response.ok) {\n            throw new Error(`Failed to fetch image data from \"${url}\": ${response.status} ${response.statusText}`);\n        }\n        const blob = await response.blob();\n        (0, utils_1.assert)(blob.type === 'image/jpeg' || blob.type === 'image/png', 'Expected image data to be a JPEG or PNG image.');\n        return blob;\n    });\n}\n/**\n * Get image data as data-string from a URL. This is useful for embedding images\n * inside of SVGs. Only JPEG and PNG images are supported.\n *\n * Note: This function uses `fetch` to get the image data. This means that using\n * it requires the `endowment:network-access` permission.\n *\n * @example\n * const imageData = await getImageData('https://cataas.com/cat');\n * const svg = `\n *   <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n *     <image href=\"${imageData}\" />\n *   </svg>\n * `;\n *\n * // Render the SVG in a Snap UI.\n * const ui = image(svg);\n * @param url - The URL to get the image data from.\n * @param options - The options to use when fetching the image data. This is\n * passed directly to `fetch`.\n * @returns A promise that resolves to the image data as a data-string.\n */\nasync function getImageData(url, options) {\n    const blob = await getRawImageData(url, options);\n    const bytes = new Uint8Array(await blob.arrayBuffer());\n    return `data:${blob.type};base64,${(0, utils_1.bytesToBase64)(bytes)}`;\n}\nexports.getImageData = getImageData;\n/**\n * Get an image component from a URL. This is useful for embedding images inside\n * Snap UIs. Only JPEG and PNG images are supported.\n *\n * Note: This function uses `fetch` to get the image data. This means that using\n * it requires the `endowment:network-access` permission.\n *\n * @example\n * const component = await getImage('https://cataas.com/cat');\n *\n * return await snap.request({\n *   method: 'snap_dialog',\n *   params: {\n *     type: 'alert',\n *     content: panel([\n *       component,\n *     ]),\n *   },\n * });\n * @param url - The URL to get the image data from.\n * @param options - The options to use when fetching and rendering the image.\n * @param options.width - The width of the image.\n * @param options.height - The height of the image. If this is not provided, the\n * width will be used as the height.\n * @param options.request - The options to use when fetching the image data.\n * This is passed directly to `fetch`.\n * @returns A promise that resolves to the image data as an image component.\n */\nasync function getImageComponent(url, { width, height = width, request }) {\n    (0, utils_1.assert)(typeof width === 'number' && width > 0, 'Expected width to be a number greater than 0.');\n    (0, utils_1.assert)(typeof height === 'number' && height > 0, 'Expected height to be a number greater than 0.');\n    const imageData = await getImageData(url, request);\n    const size = `width=\"${width}\" height=\"${height}\"`;\n    return (0, ui_1.image)(`<svg ${size.trim()} xmlns=\"http://www.w3.org/2000/svg\"><image ${size.trim()} href=\"${imageData}\" /></svg>`);\n}\nexports.getImageComponent = getImageComponent;\n//# sourceMappingURL=images.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assert = exports.selectiveUnion = exports.typedUnion = exports.enumValue = exports.union = exports.literal = exports.SNAP_ERROR_MESSAGE = exports.SNAP_ERROR_CODE = exports.getErrorStack = exports.getErrorMessage = exports.getErrorData = void 0;\nvar internals_1 = require(\"./internals/index.cjs\");\nObject.defineProperty(exports, \"getErrorData\", { enumerable: true, get: function () { return internals_1.getErrorData; } });\nObject.defineProperty(exports, \"getErrorMessage\", { enumerable: true, get: function () { return internals_1.getErrorMessage; } });\nObject.defineProperty(exports, \"getErrorStack\", { enumerable: true, get: function () { return internals_1.getErrorStack; } });\nObject.defineProperty(exports, \"SNAP_ERROR_CODE\", { enumerable: true, get: function () { return internals_1.SNAP_ERROR_CODE; } });\nObject.defineProperty(exports, \"SNAP_ERROR_MESSAGE\", { enumerable: true, get: function () { return internals_1.SNAP_ERROR_MESSAGE; } });\nObject.defineProperty(exports, \"literal\", { enumerable: true, get: function () { return internals_1.literal; } });\nObject.defineProperty(exports, \"union\", { enumerable: true, get: function () { return internals_1.union; } });\nObject.defineProperty(exports, \"enumValue\", { enumerable: true, get: function () { return internals_1.enumValue; } });\nObject.defineProperty(exports, \"typedUnion\", { enumerable: true, get: function () { return internals_1.typedUnion; } });\nObject.defineProperty(exports, \"selectiveUnion\", { enumerable: true, get: function () { return internals_1.selectiveUnion; } });\nvar utils_1 = require(\"@metamask/utils\");\nObject.defineProperty(exports, \"assert\", { enumerable: true, get: function () { return utils_1.assert; } });\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./error-wrappers.cjs\"), exports);\n__exportStar(require(\"./images.cjs\"), exports);\n__exportStar(require(\"./types/index.cjs\"), exports);\n__exportStar(require(\"./ui/index.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSnapError = void 0;\nconst errors_1 = require(\"../errors.cjs\");\n/**\n * Create a `SnapError` class from an error function from\n * `@metamask/rpc-errors`. This is useful for creating custom error classes\n * which can be thrown by a Snap.\n *\n * The created class will inherit the message, code, and data properties from\n * the error function.\n *\n * @param fn - The error function to create the class from.\n * @returns The created `SnapError` class.\n */\nfunction createSnapError(fn) {\n    return class SnapJsonRpcError extends errors_1.SnapError {\n        /**\n         * Create a new `SnapJsonRpcError` from a message and data.\n         *\n         * @param message - The message to create the error from.\n         * @param data - The data to create the error from.\n         */\n        constructor(message, data) {\n            if (typeof message === 'object') {\n                const error = fn();\n                super({\n                    code: error.code,\n                    message: error.message,\n                    data: message,\n                });\n                return;\n            }\n            const error = fn(message);\n            super({\n                code: error.code,\n                message: error.message,\n                data,\n            });\n        }\n    };\n}\nexports.createSnapError = createSnapError;\n//# sourceMappingURL=error-wrappers.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorData = exports.getErrorCode = exports.getErrorStack = exports.getErrorMessage = exports.SNAP_ERROR_MESSAGE = exports.SNAP_ERROR_CODE = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nexports.SNAP_ERROR_CODE = -31002;\nexports.SNAP_ERROR_MESSAGE = 'Snap Error';\n/**\n * Get the error message from an unknown error type.\n *\n * - If the error is an object with a `message` property, return the message.\n * - Otherwise, return the error converted to a string.\n *\n * @param error - The error to get the message from.\n * @returns The error message.\n * @internal\n */\nfunction getErrorMessage(error) {\n    if ((0, utils_1.isObject)(error) &&\n        (0, utils_1.hasProperty)(error, 'message') &&\n        typeof error.message === 'string') {\n        return error.message;\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Get the error stack from an unknown error type.\n *\n * @param error - The error to get the stack from.\n * @returns The error stack, or undefined if the error does not have a valid\n * stack.\n * @internal\n */\nfunction getErrorStack(error) {\n    if ((0, utils_1.isObject)(error) &&\n        (0, utils_1.hasProperty)(error, 'stack') &&\n        typeof error.stack === 'string') {\n        return error.stack;\n    }\n    return undefined;\n}\nexports.getErrorStack = getErrorStack;\n/**\n * Get the error code from an unknown error type.\n *\n * @param error - The error to get the code from.\n * @returns The error code, or `-32603` if the error does not have a valid code.\n * @internal\n */\nfunction getErrorCode(error) {\n    if ((0, utils_1.isObject)(error) &&\n        (0, utils_1.hasProperty)(error, 'code') &&\n        typeof error.code === 'number' &&\n        Number.isInteger(error.code)) {\n        return error.code;\n    }\n    return -32603;\n}\nexports.getErrorCode = getErrorCode;\n/**\n * Get the error data from an unknown error type.\n *\n * @param error - The error to get the data from.\n * @returns The error data, or an empty object if the error does not have valid\n * data.\n * @internal\n */\nfunction getErrorData(error) {\n    if ((0, utils_1.isObject)(error) &&\n        (0, utils_1.hasProperty)(error, 'data') &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        (0, utils_1.isValidJson)(error.data) &&\n        !Array.isArray(error.data)) {\n        return error.data;\n    }\n    return {};\n}\nexports.getErrorData = getErrorData;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=helpers.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./error-wrappers.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./helpers.cjs\"), exports);\n__exportStar(require(\"./structs.cjs\"), exports);\n__exportStar(require(\"./jsx.cjs\"), exports);\n__exportStar(require(\"./svg.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nullUnion = void 0;\nconst structs_1 = require(\"./structs.cjs\");\n/**\n * Create a union struct that uses `null` for the schema type, for better\n * compatibility with `Describe`.\n *\n * @param structs - The structs to union.\n * @returns The `superstruct` struct, which validates that the value satisfies\n * one of the structs.\n */\nfunction nullUnion(structs) {\n    return (0, structs_1.union)(structs);\n}\nexports.nullUnion = nullUnion;\n//# sourceMappingURL=jsx.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.selectiveUnion = exports.typedUnion = exports.enumValue = exports.union = exports.literal = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * A wrapper of `superstruct`'s `literal` struct that also defines the name of\n * the struct as the literal value.\n *\n * This is useful for improving the error messages returned by `superstruct`.\n * For example, instead of returning an error like:\n *\n * ```\n * Expected the value to satisfy a union of `literal | literal`, but received: \\\"baz\\\"\n * ```\n *\n * This struct will return an error like:\n *\n * ```\n * Expected the value to satisfy a union of `\"foo\" | \"bar\"`, but received: \\\"baz\\\"\n * ```\n *\n * @param value - The literal value.\n * @returns The `superstruct` struct, which validates that the value is equal\n * to the literal value.\n */\nfunction literal(value) {\n    return (0, superstruct_1.define)(JSON.stringify(value), (0, superstruct_1.literal)(value).validator);\n}\nexports.literal = literal;\n/**\n * A wrapper of `superstruct`'s `union` struct that also defines the schema as\n * the union of the schemas of the structs.\n *\n * This is useful for improving the error messages returned by `superstruct`.\n *\n * @param structs - The structs to union.\n * @param structs.\"0\" - The first struct.\n * @param structs.\"1\" - The remaining structs.\n * @returns The `superstruct` struct, which validates that the value satisfies\n * one of the structs.\n */\nfunction union([head, ...tail]) {\n    const struct = (0, superstruct_1.union)([head, ...tail]);\n    return new superstruct_1.Struct({\n        ...struct,\n        schema: [head, ...tail],\n    });\n}\nexports.union = union;\n/**\n * Superstruct struct for validating an enum value. This allows using both the\n * enum string values and the enum itself as values.\n *\n * @param constant - The enum to validate against.\n * @returns The superstruct struct.\n */\nfunction enumValue(constant) {\n    return literal(constant);\n}\nexports.enumValue = enumValue;\n/**\n * Create a custom union struct that validates exclusively based on a `type` field.\n *\n * This should improve error messaging for unions with many structs in them.\n *\n * @param structs - The structs to union.\n * @returns The `superstruct` struct, which validates that the value satisfies\n * one of the structs.\n */\nfunction typedUnion(structs) {\n    const flatStructs = structs\n        .map((struct) => struct.type === 'union' && Array.isArray(struct.schema)\n        ? struct.schema\n        : struct)\n        .flat(Infinity);\n    const types = flatStructs.map(({ schema }) => schema.type.type);\n    return new superstruct_1.Struct({\n        type: 'union',\n        schema: flatStructs,\n        *entries(value, context) {\n            if (!(0, utils_1.isPlainObject)(value) || !(0, utils_1.hasProperty)(value, 'type')) {\n                return;\n            }\n            const { type } = value;\n            const struct = flatStructs.find(({ schema }) => (0, superstruct_1.is)(type, schema.type));\n            if (!struct) {\n                return;\n            }\n            for (const entry of struct.entries(value, context)) {\n                yield entry;\n            }\n        },\n        coercer(value, context) {\n            if (!(0, utils_1.isPlainObject)(value) || !(0, utils_1.hasProperty)(value, 'type')) {\n                return value;\n            }\n            const { type } = value;\n            const struct = flatStructs.find(({ schema }) => (0, superstruct_1.is)(type, schema.type));\n            if (struct) {\n                return struct.coercer(value, context);\n            }\n            return value;\n        },\n        // At this point we know the value to be an object.\n        *refiner(value, context) {\n            const struct = flatStructs.find(({ schema }) => (0, superstruct_1.is)(value.type, schema.type));\n            yield* struct.refiner(value, context);\n        },\n        validator(value, context) {\n            if (!(0, utils_1.isPlainObject)(value) ||\n                !(0, utils_1.hasProperty)(value, 'type') ||\n                typeof value.type !== 'string') {\n                return `Expected type to be one of: ${types.join(', ')}, but received: undefined`;\n            }\n            const { type } = value;\n            const struct = flatStructs.find(({ schema }) => (0, superstruct_1.is)(type, schema.type));\n            if (struct) {\n                // This only validates the root of the struct, entries does the rest of the work.\n                return struct.validator(value, context);\n            }\n            return `Expected type to be one of: ${types.join(', ')}, but received: \"${type}\"`;\n        },\n    });\n}\nexports.typedUnion = typedUnion;\n/**\n * Create a custom union struct that uses a `selector` function for choosing\n * the validation path.\n *\n * @param selector - The selector function choosing the struct to validate with.\n * @returns The `superstruct` struct, which validates that the value satisfies\n * one of the structs.\n */\nfunction selectiveUnion(selector) {\n    return new superstruct_1.Struct({\n        type: 'union',\n        schema: null,\n        *entries(value, context) {\n            const struct = selector(value);\n            for (const entry of struct.entries(value, context)) {\n                yield entry;\n            }\n        },\n        *refiner(value, context) {\n            const struct = selector(value);\n            yield* struct.refiner(value, context);\n        },\n        coercer(value, context) {\n            const struct = selector(value);\n            return struct.coercer(value, context);\n        },\n        validator(value, context) {\n            const struct = selector(value);\n            // This only validates the root of the struct, entries does the rest of the work.\n            return struct.validator(value, context);\n        },\n    });\n}\nexports.selectiveUnion = selectiveUnion;\n//# sourceMappingURL=structs.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.svg = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\n/**\n * Get a Struct that validates a string as a valid SVG.\n *\n * @returns A Struct that validates a string as a valid SVG.\n * @internal\n */\nfunction svg() {\n    return (0, superstruct_1.refine)((0, superstruct_1.string)(), 'SVG', (value) => {\n        // This validation is intentionally very basic, we don't need to be that strict\n        // and merely have this extra validation as a helpful error if devs aren't\n        // passing in SVGs.\n        if (!value.includes('<svg')) {\n            return 'Value is not a valid SVG.';\n        }\n        return true;\n    });\n}\nexports.svg = svg;\n//# sourceMappingURL=svg.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSnapComponent = void 0;\n/**\n * Remove undefined props from an object.\n *\n * @param props - The object to remove undefined props from.\n * @returns The object without undefined props.\n */\nfunction removeUndefinedProps(props) {\n    return Object.fromEntries(Object.entries(props).filter(([, value]) => value !== undefined));\n}\n/**\n * Create a Snap component from a type. This is a helper function that creates a\n * Snap component function.\n *\n * @param type - The type of the component.\n * @returns A function that creates a Snap element.\n * @see SnapComponent\n */\nfunction createSnapComponent(type) {\n    return (props) => {\n        const { key = null, ...rest } = props;\n        return {\n            type,\n            props: removeUndefinedProps(rest),\n            key,\n        };\n    };\n}\nexports.createSnapComponent = createSnapComponent;\n//# sourceMappingURL=component.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Address';\n/**\n * An address component, which is used to display a CAIP-10 address or a Ethereum address.\n *\n * This component does not accept any children.\n *\n * @param props - The props of the component.\n * @param props.address - The address to display. This should be a\n * valid Ethereum address, starting with `0x`, or a valid CAIP-10 address.\n * @returns An address element.\n * @example\n * <Address address=\"0x1234567890123456789012345678901234567890\" />\n * @example\n * <Address address=\"eip155:1:0x1234567890123456789012345678901234567890\" />\n * @example\n * <Address address=\"bip122:000000000019d6689c085ae165831e93:128Lkh3S7CkDTBZ8W7BbpsN3YYizJMp8p6\" />\n */\nexports.Address = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Address.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Box = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Box';\n/**\n * A box component, which is used to group multiple components together.\n *\n * @param props - The props of the component.\n * @param props.children - The children of the box.\n * @returns A box element.\n * @example\n * <Box>\n *   <Text>Hello world!</Text>\n * </Box>\n */\nexports.Box = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Box.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Card = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Card';\n/**\n * A card component which can be used to display values within a card structure.\n *\n * @param props - The props of the component.\n * @param props.image - The image to show as part of the card, must be an SVG string.\n * @param props.title - The title.\n * @param props.description - The description, shown below the title.\n * @param props.value - The value, shown on the right side.\n * @param props.extra - An additional optional value shown below the value.\n * @returns A card element.\n * @example\n * <Card image=\"<svg />\" title=\"Title\" description=\"Description\" value=\"$1200\" extra=\"0.12 ETH\" />\n */\nexports.Card = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Card.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Container';\n/**\n * A container component, which is used to create a container with a box and a footer.\n *\n * @param props - The props of the component.\n * @param props.children - The Box and the Footer or the Box element.\n * @returns A container element.\n * @example\n * <Container>\n *   <Box>\n *     <Text>Hello world!</Text>\n *   </Box>\n *   <Footer>\n *     <Button name=\"cancel\">Cancel</Button>\n *     <Button name=\"confirm\">Confirm</Button>\n *   </Footer>\n * </Container>\n */\nexports.Container = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Container.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Copyable = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Copyable';\n/**\n * A copyable component, which is used to display text that can be copied by the\n * user.\n *\n * @param props - The props of the component.\n * @param props.value - The value to copy when the user clicks on the copyable\n * element.\n * @param props.sensitive - Whether the value is sensitive. If `true`, the value\n * will be hidden when the user is not interacting with the copyable element.\n * @example\n * <Copyable value=\"0x1234567890123456789012345678901234567890\" />\n * <Copyable value=\"0x1234567890123456789012345678901234567890\" sensitive />\n */\nexports.Copyable = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Copyable.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Divider = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Divider';\n/**\n * A divider component, which is used to create a horizontal line between\n * elements.\n *\n * This component does not have any props.\n *\n * @returns A divider element.\n * @example\n * <Divider />\n */\nexports.Divider = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Divider.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Footer = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Footer';\n/**\n * A footer component, which is used to create a footer with buttons.\n *\n * @param props - The props of the component.\n * @param props.children - The single or multiple buttons in the footer.\n * @returns A footer element.\n * @example\n * <Footer>\n *   <Button name=\"cancel\">Cancel</Button>\n *   <Button name=\"confirm\">Confirm</Button>\n * </Footer>\n */\nexports.Footer = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Footer.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heading = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Heading';\n/**\n * A heading component, which is used to display heading text.\n *\n * @param props - The props of the component.\n * @param props.children - The text to display in the heading.\n * @returns A heading element.\n * @example\n * <Heading>Hello world!</Heading>\n */\nexports.Heading = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Heading.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Icon = exports.IconName = void 0;\nconst component_1 = require(\"../component.cjs\");\n// Copied from https://github.com/MetaMask/metamask-extension/blob/develop/ui/components/component-library/icon/icon.types.ts\n// Currently requires manual syncing when new icon is added.\nvar IconName;\n(function (IconName) {\n    IconName[\"AddSquare\"] = \"add-square\";\n    IconName[\"Add\"] = \"add\";\n    IconName[\"Arrow2Down\"] = \"arrow-2-down\";\n    IconName[\"Arrow2Left\"] = \"arrow-2-left\";\n    IconName[\"Arrow2Right\"] = \"arrow-2-right\";\n    IconName[\"Arrow2Up\"] = \"arrow-2-up\";\n    IconName[\"Arrow2UpRight\"] = \"arrow-2-up-right\";\n    IconName[\"ArrowDoubleLeft\"] = \"arrow-double-left\";\n    IconName[\"ArrowDoubleRight\"] = \"arrow-double-right\";\n    IconName[\"ArrowDown\"] = \"arrow-down\";\n    IconName[\"ArrowLeft\"] = \"arrow-left\";\n    IconName[\"ArrowRight\"] = \"arrow-right\";\n    IconName[\"ArrowUp\"] = \"arrow-up\";\n    IconName[\"BankToken\"] = \"bank-token\";\n    IconName[\"Bank\"] = \"bank\";\n    IconName[\"Book\"] = \"book\";\n    IconName[\"Bookmark\"] = \"bookmark\";\n    IconName[\"Bridge\"] = \"bridge\";\n    IconName[\"Calculator\"] = \"calculator\";\n    IconName[\"CardPos\"] = \"card-pos\";\n    IconName[\"CardToken\"] = \"card-token\";\n    IconName[\"Card\"] = \"card\";\n    IconName[\"Category\"] = \"category\";\n    IconName[\"Chart\"] = \"chart\";\n    IconName[\"CheckBold\"] = \"check-bold\";\n    IconName[\"Check\"] = \"check\";\n    IconName[\"Clock\"] = \"clock\";\n    IconName[\"Close\"] = \"close\";\n    IconName[\"CodeCircle\"] = \"code-circle\";\n    IconName[\"Coin\"] = \"coin\";\n    IconName[\"Confirmation\"] = \"confirmation\";\n    IconName[\"Connect\"] = \"connect\";\n    IconName[\"CopySuccess\"] = \"copy-success\";\n    IconName[\"Copy\"] = \"copy\";\n    IconName[\"Customize\"] = \"customize\";\n    IconName[\"Danger\"] = \"danger\";\n    IconName[\"Dark\"] = \"dark\";\n    IconName[\"Data\"] = \"data\";\n    IconName[\"Diagram\"] = \"diagram\";\n    IconName[\"DocumentCode\"] = \"document-code\";\n    IconName[\"DragDrop\"] = \"drag-drop\";\n    IconName[\"DraggingAnimation\"] = \"dragging-animation\";\n    IconName[\"PinningAnimation\"] = \"pinning-animation\";\n    IconName[\"Edit\"] = \"edit\";\n    IconName[\"Eraser\"] = \"eraser\";\n    IconName[\"Ethereum\"] = \"ethereum\";\n    IconName[\"Expand\"] = \"expand\";\n    IconName[\"Explore\"] = \"explore\";\n    IconName[\"Export\"] = \"export\";\n    IconName[\"EyeSlash\"] = \"eye-slash\";\n    IconName[\"Eye\"] = \"eye\";\n    IconName[\"Filter\"] = \"filter\";\n    IconName[\"Flag\"] = \"flag\";\n    IconName[\"FlashSlash\"] = \"flash-slash\";\n    IconName[\"Flash\"] = \"flash\";\n    IconName[\"FullCircle\"] = \"full-circle\";\n    IconName[\"Gas\"] = \"gas\";\n    IconName[\"GlobalSearch\"] = \"global-search\";\n    IconName[\"Global\"] = \"global\";\n    IconName[\"Graph\"] = \"graph\";\n    IconName[\"Hardware\"] = \"hardware\";\n    IconName[\"Heart\"] = \"heart\";\n    IconName[\"Hierarchy\"] = \"hierarchy\";\n    IconName[\"Home\"] = \"home\";\n    IconName[\"Import\"] = \"import\";\n    IconName[\"Info\"] = \"info\";\n    IconName[\"Key\"] = \"key\";\n    IconName[\"Light\"] = \"light\";\n    IconName[\"Link\"] = \"link\";\n    IconName[\"Loading\"] = \"loading\";\n    IconName[\"LockCircle\"] = \"lock-circle\";\n    IconName[\"LockSlash\"] = \"lock-slash\";\n    IconName[\"Lock\"] = \"lock\";\n    IconName[\"Login\"] = \"login\";\n    IconName[\"Logout\"] = \"logout\";\n    IconName[\"Menu\"] = \"menu\";\n    IconName[\"MessageQuestion\"] = \"message-question\";\n    IconName[\"Messages\"] = \"messages\";\n    IconName[\"MinusBold\"] = \"minus-bold\";\n    IconName[\"MinusSquare\"] = \"minus-square\";\n    IconName[\"Minus\"] = \"minus\";\n    IconName[\"Mobile\"] = \"mobile\";\n    IconName[\"Money\"] = \"money\";\n    IconName[\"Monitor\"] = \"monitor\";\n    IconName[\"MoreHorizontal\"] = \"more-horizontal\";\n    IconName[\"MoreVertical\"] = \"more-vertical\";\n    IconName[\"NotificationCircle\"] = \"notification-circle\";\n    IconName[\"Notification\"] = \"notification\";\n    IconName[\"PasswordCheck\"] = \"password-check\";\n    IconName[\"People\"] = \"people\";\n    IconName[\"Pin\"] = \"pin\";\n    IconName[\"ProgrammingArrows\"] = \"programming-arrows\";\n    IconName[\"Custody\"] = \"custody\";\n    IconName[\"Question\"] = \"question\";\n    IconName[\"Received\"] = \"received\";\n    IconName[\"Refresh\"] = \"refresh\";\n    IconName[\"Save\"] = \"save\";\n    IconName[\"ScanBarcode\"] = \"scan-barcode\";\n    IconName[\"ScanFocus\"] = \"scan-focus\";\n    IconName[\"Scan\"] = \"scan\";\n    IconName[\"Scroll\"] = \"scroll\";\n    IconName[\"Search\"] = \"search\";\n    IconName[\"SecurityCard\"] = \"security-card\";\n    IconName[\"SecurityCross\"] = \"security-cross\";\n    IconName[\"SecurityKey\"] = \"security-key\";\n    IconName[\"SecuritySearch\"] = \"security-search\";\n    IconName[\"SecuritySlash\"] = \"security-slash\";\n    IconName[\"SecurityTick\"] = \"security-tick\";\n    IconName[\"SecurityTime\"] = \"security-time\";\n    IconName[\"SecurityUser\"] = \"security-user\";\n    IconName[\"Security\"] = \"security\";\n    IconName[\"Send1\"] = \"send-1\";\n    IconName[\"Send2\"] = \"send-2\";\n    IconName[\"Setting\"] = \"setting\";\n    IconName[\"Slash\"] = \"slash\";\n    IconName[\"SnapsMobile\"] = \"snaps-mobile\";\n    IconName[\"SnapsPlus\"] = \"snaps-plus\";\n    IconName[\"Snaps\"] = \"snaps\";\n    IconName[\"Speedometer\"] = \"speedometer\";\n    IconName[\"Star\"] = \"star\";\n    IconName[\"Stake\"] = \"stake\";\n    IconName[\"Student\"] = \"student\";\n    IconName[\"SwapHorizontal\"] = \"swap-horizontal\";\n    IconName[\"SwapVertical\"] = \"swap-vertical\";\n    IconName[\"Tag\"] = \"tag\";\n    IconName[\"Tilde\"] = \"tilde\";\n    IconName[\"Timer\"] = \"timer\";\n    IconName[\"Trash\"] = \"trash\";\n    IconName[\"TrendDown\"] = \"trend-down\";\n    IconName[\"TrendUp\"] = \"trend-up\";\n    IconName[\"UserCircleAdd\"] = \"user-circle-add\";\n    IconName[\"UserCircleLink\"] = \"user-circle-link\";\n    IconName[\"UserCircleRemove\"] = \"user-circle-remove\";\n    IconName[\"UserCircle\"] = \"user-circle\";\n    IconName[\"User\"] = \"user\";\n    IconName[\"WalletCard\"] = \"wallet-card\";\n    IconName[\"WalletMoney\"] = \"wallet-money\";\n    IconName[\"Wallet\"] = \"wallet\";\n    IconName[\"Warning\"] = \"warning\";\n    IconName[\"Twitter\"] = \"twitter\";\n    IconName[\"QrCode\"] = \"qr-code\";\n    IconName[\"UserCheck\"] = \"user-check\";\n    IconName[\"Unpin\"] = \"unpin\";\n    IconName[\"Ban\"] = \"ban\";\n    IconName[\"Bold\"] = \"bold\";\n    IconName[\"CircleX\"] = \"circle-x\";\n    IconName[\"Download\"] = \"download\";\n    IconName[\"FileIcon\"] = \"file\";\n    IconName[\"Flask\"] = \"flask\";\n    IconName[\"Plug\"] = \"plug\";\n    IconName[\"Share\"] = \"share\";\n    IconName[\"Square\"] = \"square\";\n    IconName[\"Tint\"] = \"tint\";\n    IconName[\"Upload\"] = \"upload\";\n    IconName[\"Usb\"] = \"usb\";\n    IconName[\"Wifi\"] = \"wifi\";\n    IconName[\"PlusMinus\"] = \"plus-minus\";\n})(IconName || (exports.IconName = IconName = {}));\nconst TYPE = 'Icon';\n/**\n * An icon component which is used to display an icon from a pre-defined list.\n *\n * @param props - The props of the component.\n * @param props.name - The name of the icon to display from a pre-defined list.\n * @param props.color - The color of the displayed icon.\n * @param props.size - The size of the displayed icon. Use `inherit` to size it the same as the text.\n * @returns An icon element.\n * @example\n * <Icon name=\"warning\" color=\"warning\" size=\"md\" />\n */\nexports.Icon = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Icon.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Image = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Image';\n/**\n * An image component, which is used to display an image.\n *\n * This component does not accept any children.\n *\n * @param props - The props of the component.\n * @param props.src - The URL of the image to display. This should be an SVG\n * string, and other formats such as PNG and JPEG are not supported directly.\n * You can use the `data:` URL scheme to embed images inside the SVG.\n * @param props.alt - The alternative text of the image, which describes the\n * image for users who cannot see it.\n * @returns An image element.\n * @example\n * <Image src=\"<svg>...</svg>\" alt=\"An example image\" />\n */\nexports.Image = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Image.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Link = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Link';\n/**\n * A link component, which is used to display a hyperlink.\n *\n * @param props - The props of the component.\n * @param props.children - The text to display in the link.\n * @param props.href - The URL to link to. This must be an `https` or `mailto`\n * URL. `http` is not allowed.\n * @returns A link element.\n * @example\n * <Link href=\"https://example.com\">Click here</Link>\n */\nexports.Link = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Link.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Row = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Row';\n/**\n * A row component, which is used to display a row of information.\n *\n * @param props - The props of the component.\n * @param props.label - The label of the row.\n * @param props.children - The content of the row. This can be an address, an\n * image, or text.\n * @param props.variant - The variant of the row.\n * @param props.tooltip - An optional tooltip to show for the row.\n * @returns A row element.\n * @example\n * <Row label=\"From\" variant=\"warning\" tooltip=\"This address has been deemed dangerous.\">\n *   <Address address=\"0x1234567890123456789012345678901234567890\" />\n * </Row>\n */\nexports.Row = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Row.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Section = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Section';\n/**\n * A section component, which is used to group multiple components together.\n * The component itself is 16px padded with a default background and a border radius of 8px.\n *\n * @param props - The props of the component.\n * @param props.children - The children of the section.\n * @param props.direction - The direction that the children are aligned.\n * @param props.alignment - The alignment of the children (a justify-content value).\n * @returns A section element.\n * @example\n * <Section>\n *   <Row label=\"From\">\n *     <Address address=\"0x1234567890123456789012345678901234567890\" />\n *   </Row>\n *   <Row label=\"To\" variant=\"warning\" tooltip=\"This address has been deemed dangerous.\">\n *     <Address address=\"0x0000000000000000000000000000000000000000\" />\n *   </Row>\n * </Section>\n */\nexports.Section = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Section.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Spinner = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Spinner';\n/**\n * A spinner component, which is used to display a spinner, indicating that some\n * operation is in progress.\n *\n * This component does not accept any props.\n *\n * @returns A spinner element.\n * @example\n * <Spinner />\n */\nexports.Spinner = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Spinner.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Text = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Text';\n/**\n * A text component, which is used to display text.\n *\n * @param props - The props of the component.\n * @param props.children - The text to display.\n * @returns A text element.\n * @example\n * <Text>\n *   Hello <Bold>world</Bold>!\n * </Text>\n * @example\n * <Text alignment=\"end\">\n *   Hello <Bold>world</Bold>!\n * </Text>\n */\nexports.Text = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Text.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tooltip = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Tooltip';\n/**\n * A tooltip component, which is used to display text in a tooltip.\n *\n * @param props - The props of the component.\n * @param props.children - The children of the tooltip.\n * @param props.content - The text to display in the tooltip.\n * @returns A tooltip element.\n * @example\n * <Tooltip content=\"Tooltip text\">\n *   <Text>Hello world!</Text>\n * </Tooltip>\n * @example\n * <Tooltip content={<Text>Text with <Bold>formatting</Bold></Text>}>\n *   <Text>Hello world!</Text>\n * </Tooltip>\n */\nexports.Tooltip = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Tooltip.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Value = void 0;\nconst component_1 = require(\"../component.cjs\");\nconst TYPE = 'Value';\n/**\n * A value component, which can be used to display two different text values side by side.\n *\n * This component can only be used as a child of the {@link Row} component.\n *\n * This component does not accept any children.\n *\n * @param props - The props of the component.\n * @param props.value - The value shown on the right side.\n * @param props.extra - The extra text shown on the left side.\n * @returns A value element.\n * @example\n * <Value value=\"0.05 ETH\" extra=\"$200\" />\n */\nexports.Value = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Value.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Button = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Button';\n/**\n * A button component, which is used to create a clickable button.\n *\n * @param props - The props of the component.\n * @param props.children - The text to display on the button. This should be a\n * string or an array of strings.\n * @returns A button element.\n * @example\n * <Button name=\"my-button\">Click me</Button>\n */\nexports.Button = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Button.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Checkbox = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Checkbox';\n/**\n * A checkbox component, which is used to create a checkbox.\n *\n * @param props - The props of the component.\n * @param props.name - The name of the checkbox. This is used to identify the\n * state in the form data.\n * @param props.checked - Whether the checkbox is checked or not.\n * @param props.label - An optional label for the checkbox.\n * @param props.variant - An optional variant for the checkbox.\n * @returns A checkbox element.\n * @example\n * <Checkbox name=\"accept-terms\" />\n */\nexports.Checkbox = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Checkbox.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dropdown = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Dropdown';\n/**\n * A dropdown component, which is used to create a dropdown.\n *\n * @param props - The props of the component.\n * @param props.name - The name of the dropdown field. This is used to identify the\n * state in the form data.\n * @param props.value - The selected value of the dropdown.\n * @param props.children - The children of the dropdown.\n * @returns A dropdown element.\n * @example\n * <Dropdown name=\"dropdown\">\n *  <Option value=\"option1\">Option 1</Option>\n *  <Option value=\"option2\">Option 2</Option>\n *  <Option value=\"option3\">Option 3</Option>\n * </Dropdown>\n */\nexports.Dropdown = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Dropdown.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Field';\n/**\n * A field component, which is used to create a form field. This component can\n * only be used as a child of the {@link Form} component.\n *\n * @param props - The props of the component.\n * @param props.label - The label of the field.\n * @param props.error - The error message of the field.\n * @param props.children - The input field and the submit button.\n * @returns A field element.\n * @example\n * <Field label=\"Username\">\n *   <Input name=\"username\" type=\"text\" />\n *   <Button type=\"submit\">Submit</Button>\n * </Field>\n * @example\n * <Field label=\"Upload file\">\n *   <FileInput name=\"file\" accept={['image/*']} multiple />\n * </Field>\n */\nexports.Field = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Field.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileInput = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'FileInput';\n/**\n * A file input component, which is used to create a file input field. This\n * component can only be used as a child of the {@link Field} component.\n *\n * The total size of the files that can be uploaded may not exceed 64 MB.\n *\n * @param props - The props of the component.\n * @param props.name - The name of the file input field. This is used to\n * identify the file input field in the form data.\n * @param props.accept - The file types that the file input field accepts. If\n * not specified, the file input field accepts all file types. For examples of\n * valid values, see the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept).\n * @param props.compact - Whether the file input field is compact. Default is\n * `false`.\n * @returns A file input element.\n * @example\n * <FileInput name=\"file\" accept={['image/*']} />\n * @example\n * <FileInput name=\"file\" compact />\n * @example\n * <Field label=\"Upload file\">\n *   <FileInput name=\"file\" />\n * </Field>\n */\nexports.FileInput = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=FileInput.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Form = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Form';\n/**\n * A form component, which is used to create a form.\n *\n * @param props - The props of the component.\n * @param props.children - The form fields. This should be a single field or an\n * array of fields.\n * @param props.name - The name of the form. This is used to identify the form\n * in the event handler.\n * @returns A form element.\n * @example\n * <Form name=\"my-form\">\n *   <Field label=\"Username\">\n *     <Input name=\"username\" type=\"text\" />\n *   </Field>\n *   <Button type=\"submit\">Submit</Button>\n * </Form>\n */\nexports.Form = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Form.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Input = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Input';\n/**\n * An input component, which is used to create an input field.\n *\n * @param props - The props of the component.\n * @param props.name - The name of the input field. This is used to identify the\n * input field in the form data.\n * @param props.type - The type of the input field.\n * @param props.value - The value of the input field.\n * @param props.placeholder - The placeholder text of the input field.\n * @returns An input element.\n * @example\n * <Input name=\"username\" type=\"text\" />\n */\nexports.Input = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Input.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Option = void 0;\nconst component_1 = require(\"../../component.cjs\");\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Dropdown_1 = require(\"./Dropdown.cjs\");\nconst TYPE = 'Option';\n/**\n * A dropdown option component, which is used to create a dropdown option. This component\n * can only be used as a child of the {@link Dropdown} component.\n *\n * @param props - The props of the component.\n * @param props.value - The value of the dropdown option. This is used to populate the\n * state in the form data.\n * @param props.children - The text to display.\n * @returns A dropdown option element.\n * @example\n * <Dropdown name=\"dropdown\">\n *  <Option value=\"option1\">Option 1</Option>\n *  <Option value=\"option2\">Option 2</Option>\n *  <Option value=\"option3\">Option 3</Option>\n * </Dropdown>\n */\nexports.Option = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Option.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Radio = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Radio';\n/**\n * A radio component, which is used to create a radio option. This component\n * can only be used as a child of the {@link RadioGroup} component.\n *\n * @param props - The props of the component.\n * @param props.value - The value of the radio option. This is used to populate the\n * state in the form data.\n * @param props.children - The text to display.\n * @returns A radio element.\n * @example\n * <RadioGroup name=\"radio-group\">\n *  <Radio value=\"option1\">Option 1</Radio>\n *  <Radio value=\"option2\">Option 2</Radio>\n *  <Radio value=\"option3\">Option 3</Radio>\n * </RadioGroup>\n */\nexports.Radio = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Radio.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RadioGroup = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'RadioGroup';\n/**\n * A RadioGroup component, used to display multiple choices, where only one can be chosen.\n *\n * @returns A RadioGroup element.\n * @example\n * <RadioGroup />\n */\nexports.RadioGroup = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=RadioGroup.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Selector = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Selector';\n/**\n * A selector component, which is used to create a selector.\n *\n * @param props - The props of the component.\n * @param props.name - The name of the selector field. This is used to identify the\n * state in the form data.\n * @param props.title - The title of the selector field. This is displayed in the UI.\n * @param props.value - The selected value of the selector.\n * @param props.children - The children of the selector.\n * @returns A selector element.\n * @example\n * <Selector name=\"selector\">\n *  <SelectorOption value=\"option1\"><Card title=\"Option 1\" value=\"Foo\" /></SelectorOption>\n *  <SelectorOption value=\"option2\"><Card title=\"Option 2\" value=\"Bar\" /></SelectorOption>\n *  <SelectorOption value=\"option3\"><Card title=\"Option 3\" value=\"Baz\" /></SelectorOption>\n * </Selector>\n */\nexports.Selector = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Selector.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectorOption = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'SelectorOption';\n/**\n * A selector option component, which is used to create a selector option. This component\n * can only be used as a child of the {@link Selector} component.\n *\n * @param props - The props of the component.\n * @param props.value - The value of the selector option. This is used to populate the\n * state in the form data.\n * @param props.children - The component to display.\n * @returns A selector option element.\n * @example\n * <Selector name=\"selector\">\n *  <SelectorOption value=\"option1\"><Card title=\"Option 1\" value=\"Foo\" /></SelectorOption>\n *  <SelectorOption value=\"option2\"><Card title=\"Option 2\" value=\"Bar\" /></SelectorOption>\n *  <SelectorOption value=\"option3\"><Card title=\"Option 3\" value=\"Baz\" /></SelectorOption>\n * </Selector>\n */\nexports.SelectorOption = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=SelectorOption.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Button.cjs\"), exports);\n__exportStar(require(\"./Checkbox.cjs\"), exports);\n__exportStar(require(\"./Dropdown.cjs\"), exports);\n__exportStar(require(\"./Option.cjs\"), exports);\n__exportStar(require(\"./Radio.cjs\"), exports);\n__exportStar(require(\"./RadioGroup.cjs\"), exports);\n__exportStar(require(\"./Field.cjs\"), exports);\n__exportStar(require(\"./FileInput.cjs\"), exports);\n__exportStar(require(\"./Form.cjs\"), exports);\n__exportStar(require(\"./Input.cjs\"), exports);\n__exportStar(require(\"./Selector.cjs\"), exports);\n__exportStar(require(\"./SelectorOption.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bold = void 0;\nconst component_1 = require(\"../../component.cjs\");\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Text_1 = require(\"../Text.cjs\");\nconst TYPE = 'Bold';\n/**\n * A bold component, which is used to display text in bold. This component can\n * only be used as a child of the {@link Text} component.\n *\n * @param props - The props of the component.\n * @param props.children - The text to display in bold.\n * @returns A bold element.\n * @example\n * <Text>\n *   Hello <Bold>world</Bold>!\n * </Text>\n */\nexports.Bold = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Bold.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Italic = void 0;\nconst component_1 = require(\"../../component.cjs\");\nconst TYPE = 'Italic';\n/**\n * An italic component, which is used to display text in italic. This componen\n * can only be used as a child of the {@link Text} component.\n *\n * @param props - The props of the component.\n * @param props.children - The text to display in italic. This should be a\n * string or an array of strings.\n * @returns An italic element.\n * @example\n * <Text>\n *   Hello <Italic>world</Italic>!\n * </Text>\n */\nexports.Italic = (0, component_1.createSnapComponent)(TYPE);\n//# sourceMappingURL=Italic.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Bold.cjs\"), exports);\n__exportStar(require(\"./Italic.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./form/index.cjs\"), exports);\n__exportStar(require(\"./formatting/index.cjs\"), exports);\n__exportStar(require(\"./Address.cjs\"), exports);\n__exportStar(require(\"./Box.cjs\"), exports);\n__exportStar(require(\"./Card.cjs\"), exports);\n__exportStar(require(\"./Copyable.cjs\"), exports);\n__exportStar(require(\"./Divider.cjs\"), exports);\n__exportStar(require(\"./Value.cjs\"), exports);\n__exportStar(require(\"./Heading.cjs\"), exports);\n__exportStar(require(\"./Icon.cjs\"), exports);\n__exportStar(require(\"./Image.cjs\"), exports);\n__exportStar(require(\"./Link.cjs\"), exports);\n__exportStar(require(\"./Row.cjs\"), exports);\n__exportStar(require(\"./Spinner.cjs\"), exports);\n__exportStar(require(\"./Text.cjs\"), exports);\n__exportStar(require(\"./Tooltip.cjs\"), exports);\n__exportStar(require(\"./Footer.cjs\"), exports);\n__exportStar(require(\"./Container.cjs\"), exports);\n__exportStar(require(\"./Section.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldChildUnionStruct = exports.FormChildStruct = exports.BoxChildStruct = exports.assertJSXElement = exports.isJSXElementUnsafe = exports.isJSXElement = exports.RootJSXElementStruct = exports.JSXElementStruct = void 0;\n__exportStar(require(\"./component.cjs\"), exports);\n__exportStar(require(\"./components/index.cjs\"), exports);\n__exportStar(require(\"./jsx-runtime.cjs\"), exports);\n__exportStar(require(\"./jsx-dev-runtime.cjs\"), exports);\nvar validation_1 = require(\"./validation.cjs\");\nObject.defineProperty(exports, \"JSXElementStruct\", { enumerable: true, get: function () { return validation_1.JSXElementStruct; } });\nObject.defineProperty(exports, \"RootJSXElementStruct\", { enumerable: true, get: function () { return validation_1.RootJSXElementStruct; } });\nObject.defineProperty(exports, \"isJSXElement\", { enumerable: true, get: function () { return validation_1.isJSXElement; } });\nObject.defineProperty(exports, \"isJSXElementUnsafe\", { enumerable: true, get: function () { return validation_1.isJSXElementUnsafe; } });\nObject.defineProperty(exports, \"assertJSXElement\", { enumerable: true, get: function () { return validation_1.assertJSXElement; } });\nObject.defineProperty(exports, \"BoxChildStruct\", { enumerable: true, get: function () { return validation_1.BoxChildStruct; } });\nObject.defineProperty(exports, \"FormChildStruct\", { enumerable: true, get: function () { return validation_1.FormChildStruct; } });\nObject.defineProperty(exports, \"FieldChildUnionStruct\", { enumerable: true, get: function () { return validation_1.FieldChildUnionStruct; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jsxDEV = void 0;\nconst jsx_runtime_1 = require(\"./jsx-runtime.cjs\");\nconst validation_1 = require(\"./validation.cjs\");\n/**\n * The JSX runtime for Snaps SDK components. This function is used to render\n * Snap components into a format that can be used by the Snaps.\n *\n * This is the \"development\" version of the runtime, which includes additional\n * validation, which is otherwise handled by MetaMask. To use this runtime,\n * specify `@metamask/snaps-sdk` as import source for JSX, and use\n * `react-jsxdev` as the pragma.\n *\n * @param component - The component to render.\n * @param props - The props to pass to the component.\n * @param key - The key of the component.\n * @returns The rendered component.\n * @see https://www.typescriptlang.org/tsconfig/#jsx\n */\nfunction jsxDEV(component, props, key) {\n    const element = (0, jsx_runtime_1.jsx)(component, props, key);\n    (0, validation_1.assertJSXElement)(element);\n    return element;\n}\nexports.jsxDEV = jsxDEV;\n//# sourceMappingURL=jsx-dev-runtime.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jsxs = exports.jsx = void 0;\n/**\n * The JSX runtime for Snaps SDK components. This function is used to render\n * Snap components into a format that can be used by the Snaps.\n *\n * This is the \"production\" version of the runtime, which does not include\n * additional validation, as it is handled by MetaMask. To use this runtime,\n * specify `@metamask/snaps-sdk` as import source for JSX, and use `react-jsx`\n * as the pragma.\n *\n * @param component - The component to render.\n * @param props - The props to pass to the component.\n * @param key - The key of the component.\n * @returns The rendered component.\n * @see https://www.typescriptlang.org/tsconfig/#jsx\n */\nfunction jsx(component, props, key) {\n    if (typeof component === 'string') {\n        // If component is a string, it is a built-in HTML element. This is not\n        // supported in Snaps, so we throw an error.\n        throw new Error(`An HTML element (\"${String(component)}\") was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.`);\n    }\n    if (!component) {\n        // If component is undefined, a JSX fragment `<>...</>` was used, which is\n        // not supported in Snaps.\n        throw new Error('A JSX fragment was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.');\n    }\n    return component({ ...props, key });\n}\nexports.jsx = jsx;\n/**\n * The JSX runtime for Snaps SDK components. This function is used to render\n * Snap components into a format that can be used by the Snaps.\n *\n * The `jsxs` function is used for rendering nested components.\n *\n * This is the \"production\" version of the runtime, which does not include\n * additional validation, as it is handled by MetaMask. To use this runtime,\n * specify `@metamask/snaps-sdk` as import source for JSX, and use `react-jsx`\n * as the pragma.\n *\n * @param component - The component to render.\n * @param props - The props to pass to the component.\n * @param key - The key of the component.\n * @returns The rendered component.\n * @see https://www.typescriptlang.org/tsconfig/#jsx\n */\nfunction jsxs(component, props, key) {\n    return jsx(component, props, key);\n}\nexports.jsxs = jsxs;\n//# sourceMappingURL=jsx-runtime.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertJSXElement = exports.isJSXElementUnsafe = exports.isJSXElement = exports.JSXElementStruct = exports.RootJSXElementStruct = exports.ContainerStruct = exports.BoxChildStruct = exports.SpinnerStruct = exports.RowStruct = exports.TooltipStruct = exports.TooltipContentStruct = exports.TooltipChildStruct = exports.TextStruct = exports.LinkStruct = exports.HeadingStruct = exports.ValueStruct = exports.DividerStruct = exports.CopyableStruct = exports.FooterStruct = exports.FooterChildStruct = exports.SectionStruct = exports.BoxStruct = exports.BoxChildrenStruct = exports.AddressStruct = exports.FormattingStruct = exports.ItalicStruct = exports.BoldStruct = exports.FormStruct = exports.FormChildStruct = exports.FieldStruct = exports.FieldChildUnionStruct = exports.FileInputStruct = exports.RadioGroupStruct = exports.RadioStruct = exports.SelectorStruct = exports.SelectorOptionStruct = exports.CardStruct = exports.DropdownStruct = exports.OptionStruct = exports.InputStruct = exports.CheckboxStruct = exports.ButtonStruct = exports.IconStruct = exports.ImageStruct = exports.ElementStruct = exports.StringElementStruct = exports.KeyStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst internals_1 = require(\"../internals/index.cjs\");\nconst components_1 = require(\"./components/index.cjs\");\n/**\n * A struct for the {@link Key} type.\n */\nexports.KeyStruct = (0, internals_1.nullUnion)([(0, superstruct_1.string)(), (0, superstruct_1.number)()]);\n/**\n * A struct for the {@link StringElement} type.\n */\nexports.StringElementStruct = children([\n    (0, superstruct_1.string)(),\n]);\n/**\n * A struct for the {@link GenericSnapElement} type.\n */\nexports.ElementStruct = (0, superstruct_1.object)({\n    type: (0, superstruct_1.string)(),\n    props: (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct),\n    key: (0, superstruct_1.nullable)(exports.KeyStruct),\n});\n/**\n * A helper function for creating a struct for a {@link Nestable} type.\n *\n * @param struct - The struct for the type to test.\n * @returns The struct for the nestable type.\n */\nfunction nestable(struct) {\n    const nestableStruct = (0, internals_1.selectiveUnion)((value) => {\n        if (Array.isArray(value)) {\n            return (0, superstruct_1.array)((0, superstruct_1.lazy)(() => nestableStruct));\n        }\n        return struct;\n    });\n    return nestableStruct;\n}\n/**\n * A helper function for creating a struct which allows children of a specific\n * type, as well as `null` and `boolean`.\n *\n * @param structs - The structs to allow as children.\n * @returns The struct for the children.\n */\nfunction children(structs) {\n    return nestable((0, superstruct_1.nullable)((0, internals_1.selectiveUnion)((value) => {\n        if (typeof value === 'boolean') {\n            return (0, superstruct_1.boolean)();\n        }\n        if (structs.length === 1) {\n            return structs[0];\n        }\n        return (0, internals_1.nullUnion)(structs);\n    })));\n}\n/**\n * A helper function for creating a struct which allows a single child of a specific\n * type, as well as `null` and `boolean`.\n *\n * @param struct - The struct to allow as a single child.\n * @returns The struct for the children.\n */\nfunction singleChild(struct) {\n    return (0, superstruct_1.nullable)((0, internals_1.selectiveUnion)((value) => {\n        if (typeof value === 'boolean') {\n            return (0, superstruct_1.boolean)();\n        }\n        return struct;\n    }));\n}\n/**\n * A helper function for creating a struct for a JSX element.\n *\n * @param name - The name of the element.\n * @param props - The props of the element.\n * @returns The struct for the element.\n */\nfunction element(name, props = {}) {\n    return (0, superstruct_1.object)({\n        type: (0, internals_1.literal)(name),\n        props: (0, superstruct_1.object)(props),\n        key: (0, superstruct_1.nullable)(exports.KeyStruct),\n    });\n}\n/**\n * A struct for the {@link ImageElement} type.\n */\nexports.ImageStruct = element('Image', {\n    src: (0, internals_1.svg)(),\n    alt: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\nconst IconNameStruct = (0, internals_1.nullUnion)(Object.values(components_1.IconName).map((name) => (0, internals_1.literal)(name)));\n/**\n * A struct for the {@link IconElement} type.\n */\nexports.IconStruct = element('Icon', {\n    name: IconNameStruct,\n    color: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('default'), (0, internals_1.literal)('primary'), (0, internals_1.literal)('muted')])),\n    size: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('md'), (0, internals_1.literal)('inherit')])),\n});\n/**\n * A struct for the {@link ButtonElement} type.\n */\nexports.ButtonStruct = element('Button', {\n    children: children([exports.StringElementStruct, exports.ImageStruct, exports.IconStruct]),\n    name: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    type: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('button'), (0, internals_1.literal)('submit')])),\n    variant: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('primary'), (0, internals_1.literal)('destructive')])),\n    disabled: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n    form: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\n/**\n * A struct for the {@link CheckboxElement} type.\n */\nexports.CheckboxStruct = element('Checkbox', {\n    name: (0, superstruct_1.string)(),\n    checked: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n    label: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    variant: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('default'), (0, internals_1.literal)('toggle')])),\n});\n/**\n * A struct for the {@link InputElement} type.\n */\nexports.InputStruct = element('Input', {\n    name: (0, superstruct_1.string)(),\n    type: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('text'), (0, internals_1.literal)('password'), (0, internals_1.literal)('number')])),\n    value: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    placeholder: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\n/**\n * A struct for the {@link OptionElement} type.\n */\nexports.OptionStruct = element('Option', {\n    value: (0, superstruct_1.string)(),\n    children: (0, superstruct_1.string)(),\n});\n/**\n * A struct for the {@link DropdownElement} type.\n */\nexports.DropdownStruct = element('Dropdown', {\n    name: (0, superstruct_1.string)(),\n    value: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    children: children([exports.OptionStruct]),\n});\n/**\n * A struct for the {@link CardElement} type.\n */\nexports.CardStruct = element('Card', {\n    image: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    title: (0, superstruct_1.string)(),\n    description: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    value: (0, superstruct_1.string)(),\n    extra: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\n/**\n * A struct for the {@link SelectorOptionElement} type.\n */\nexports.SelectorOptionStruct = element('SelectorOption', {\n    value: (0, superstruct_1.string)(),\n    children: exports.CardStruct,\n});\n/**\n * A struct for the {@link SelectorElement} type.\n */\nexports.SelectorStruct = element('Selector', {\n    name: (0, superstruct_1.string)(),\n    title: (0, superstruct_1.string)(),\n    value: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    children: children([exports.SelectorOptionStruct]),\n});\n/**\n * A struct for the {@link RadioElement} type.\n */\nexports.RadioStruct = element('Radio', {\n    value: (0, superstruct_1.string)(),\n    children: (0, superstruct_1.string)(),\n});\n/**\n * A struct for the {@link RadioGroupElement} type.\n */\nexports.RadioGroupStruct = element('RadioGroup', {\n    name: (0, superstruct_1.string)(),\n    value: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    children: children([exports.RadioStruct]),\n});\n/**\n * A struct for the {@link FileInputElement} type.\n */\nexports.FileInputStruct = element('FileInput', {\n    name: (0, superstruct_1.string)(),\n    accept: (0, internals_1.nullUnion)([(0, superstruct_1.optional)((0, superstruct_1.array)((0, superstruct_1.string)()))]),\n    compact: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n});\n/**\n * A subset of JSX elements that represent the tuple Box + Input of the Field children.\n */\nconst BOX_INPUT_LEFT = [\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    singleChild((0, superstruct_1.lazy)(() => exports.BoxChildStruct)),\n    exports.InputStruct,\n];\n/**\n * A subset of JSX elements that represent the tuple Input + Box of the Field children.\n */\nconst BOX_INPUT_RIGHT = [\n    exports.InputStruct,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    singleChild((0, superstruct_1.lazy)(() => exports.BoxChildStruct)),\n];\n/**\n * A subset of JSX elements that represent the tuple Box + Input + Box of the Field children.\n */\nconst BOX_INPUT_BOTH = [\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    singleChild((0, superstruct_1.lazy)(() => exports.BoxChildStruct)),\n    exports.InputStruct,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    singleChild((0, superstruct_1.lazy)(() => exports.BoxChildStruct)),\n];\n/**\n * A subset of JSX elements that are allowed as single children of the Field component.\n */\nconst FIELD_CHILDREN_ARRAY = [\n    exports.InputStruct,\n    exports.DropdownStruct,\n    exports.RadioGroupStruct,\n    exports.FileInputStruct,\n    exports.CheckboxStruct,\n    exports.SelectorStruct,\n];\n/**\n * A union of the allowed children of the Field component.\n * This is mainly used in the simulator for validation purposes.\n */\nexports.FieldChildUnionStruct = (0, internals_1.nullUnion)([\n    ...FIELD_CHILDREN_ARRAY,\n    ...BOX_INPUT_LEFT,\n    ...BOX_INPUT_RIGHT,\n    ...BOX_INPUT_BOTH,\n]);\n/**\n * A subset of JSX elements that are allowed as children of the Field component.\n */\nconst FieldChildStruct = (0, internals_1.nullUnion)([\n    (0, superstruct_1.tuple)(BOX_INPUT_LEFT),\n    (0, superstruct_1.tuple)(BOX_INPUT_RIGHT),\n    (0, superstruct_1.tuple)(BOX_INPUT_BOTH),\n    ...FIELD_CHILDREN_ARRAY,\n]);\n/**\n * A struct for the {@link FieldElement} type.\n */\nexports.FieldStruct = element('Field', {\n    label: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    error: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    children: FieldChildStruct,\n});\n/**\n * A subset of JSX elements that are allowed as children of the Form component.\n */\nexports.FormChildStruct = children(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\n[exports.FieldStruct, (0, superstruct_1.lazy)(() => exports.BoxChildStruct)]);\n/**\n * A struct for the {@link FormElement} type.\n */\nexports.FormStruct = element('Form', {\n    children: exports.FormChildStruct,\n    name: (0, superstruct_1.string)(),\n});\n/**\n * A struct for the {@link BoldElement} type.\n */\nexports.BoldStruct = element('Bold', {\n    children: children([\n        (0, superstruct_1.string)(),\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        (0, superstruct_1.lazy)(() => exports.ItalicStruct),\n    ]),\n});\n/**\n * A struct for the {@link ItalicElement} type.\n */\nexports.ItalicStruct = element('Italic', {\n    children: children([\n        (0, superstruct_1.string)(),\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        (0, superstruct_1.lazy)(() => exports.BoldStruct),\n    ]),\n});\nexports.FormattingStruct = (0, internals_1.typedUnion)([exports.BoldStruct, exports.ItalicStruct]);\n/**\n * A struct for the {@link AddressElement} type.\n */\nexports.AddressStruct = element('Address', {\n    address: (0, internals_1.nullUnion)([utils_1.HexChecksumAddressStruct, utils_1.CaipAccountIdStruct]),\n});\nexports.BoxChildrenStruct = children(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\n[(0, superstruct_1.lazy)(() => exports.BoxChildStruct)]);\n/**\n * A struct for the {@link BoxElement} type.\n */\nexports.BoxStruct = element('Box', {\n    children: exports.BoxChildrenStruct,\n    direction: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('horizontal'), (0, internals_1.literal)('vertical')])),\n    alignment: (0, superstruct_1.optional)((0, internals_1.nullUnion)([\n        (0, internals_1.literal)('start'),\n        (0, internals_1.literal)('center'),\n        (0, internals_1.literal)('end'),\n        (0, internals_1.literal)('space-between'),\n        (0, internals_1.literal)('space-around'),\n    ])),\n    center: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n});\nconst FooterButtonStruct = (0, superstruct_1.refine)(exports.ButtonStruct, 'FooterButton', (value) => {\n    if (typeof value.props.children === 'string' ||\n        typeof value.props.children === 'boolean' ||\n        value.props.children === null) {\n        return true;\n    }\n    if (Array.isArray(value.props.children)) {\n        const hasNonTextElements = value.props.children.some((child) => typeof child !== 'string' &&\n            typeof child !== 'boolean' &&\n            child !== null);\n        if (!hasNonTextElements) {\n            return true;\n        }\n    }\n    return 'Footer buttons may only contain text.';\n});\n/**\n * A struct for the {@link SectionElement} type.\n */\nexports.SectionStruct = element('Section', {\n    children: exports.BoxChildrenStruct,\n    direction: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('horizontal'), (0, internals_1.literal)('vertical')])),\n    alignment: (0, superstruct_1.optional)((0, internals_1.nullUnion)([\n        (0, internals_1.literal)('start'),\n        (0, internals_1.literal)('center'),\n        (0, internals_1.literal)('end'),\n        (0, internals_1.literal)('space-between'),\n        (0, internals_1.literal)('space-around'),\n    ])),\n});\n/**\n * A subset of JSX elements that are allowed as children of the Footer component.\n * This set should include a single button or a tuple of two buttons.\n */\nexports.FooterChildStruct = (0, internals_1.selectiveUnion)((value) => {\n    if (Array.isArray(value)) {\n        return (0, superstruct_1.tuple)([FooterButtonStruct, FooterButtonStruct]);\n    }\n    return FooterButtonStruct;\n});\n/**\n * A struct for the {@link FooterElement} type.\n */\nexports.FooterStruct = element('Footer', {\n    children: exports.FooterChildStruct,\n});\n/**\n * A struct for the {@link CopyableElement} type.\n */\nexports.CopyableStruct = element('Copyable', {\n    value: (0, superstruct_1.string)(),\n    sensitive: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n});\n/**\n * A struct for the {@link DividerElement} type.\n */\nexports.DividerStruct = element('Divider');\n/**\n * A struct for the {@link ValueElement} type.\n */\nexports.ValueStruct = element('Value', {\n    value: (0, superstruct_1.string)(),\n    extra: (0, superstruct_1.string)(),\n});\n/**\n * A struct for the {@link HeadingElement} type.\n */\nexports.HeadingStruct = element('Heading', {\n    children: exports.StringElementStruct,\n});\n/**\n * A struct for the {@link LinkElement} type.\n */\nexports.LinkStruct = element('Link', {\n    href: (0, superstruct_1.string)(),\n    children: children([exports.FormattingStruct, (0, superstruct_1.string)()]),\n});\n/**\n * A struct for the {@link TextElement} type.\n */\nexports.TextStruct = element('Text', {\n    children: children([\n        (0, internals_1.selectiveUnion)((value) => {\n            if (typeof value === 'string') {\n                return (0, superstruct_1.string)();\n            }\n            return (0, internals_1.typedUnion)([exports.BoldStruct, exports.ItalicStruct, exports.LinkStruct, exports.IconStruct]);\n        }),\n    ]),\n    alignment: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('start'), (0, internals_1.literal)('center'), (0, internals_1.literal)('end')])),\n    color: (0, superstruct_1.optional)((0, internals_1.nullUnion)([\n        (0, internals_1.literal)('default'),\n        (0, internals_1.literal)('alternative'),\n        (0, internals_1.literal)('muted'),\n        (0, internals_1.literal)('error'),\n        (0, internals_1.literal)('success'),\n        (0, internals_1.literal)('warning'),\n    ])),\n});\n/**\n * A subset of JSX elements that are allowed as children of the Tooltip component.\n * This set should include all text components and the Image.\n */\nexports.TooltipChildStruct = (0, internals_1.selectiveUnion)((value) => {\n    if (typeof value === 'boolean') {\n        return (0, superstruct_1.boolean)();\n    }\n    return (0, internals_1.typedUnion)([\n        exports.TextStruct,\n        exports.BoldStruct,\n        exports.ItalicStruct,\n        exports.LinkStruct,\n        exports.ImageStruct,\n        exports.IconStruct,\n    ]);\n});\n/**\n * A subset of JSX elements that are allowed as content of the Tooltip component.\n * This set should include all text components.\n */\nexports.TooltipContentStruct = (0, internals_1.selectiveUnion)((value) => {\n    if (typeof value === 'string') {\n        return (0, superstruct_1.string)();\n    }\n    return (0, internals_1.typedUnion)([\n        exports.TextStruct,\n        exports.BoldStruct,\n        exports.ItalicStruct,\n        exports.LinkStruct,\n        exports.IconStruct,\n    ]);\n});\n/**\n * A struct for the {@link TooltipElement} type.\n */\nexports.TooltipStruct = element('Tooltip', {\n    children: (0, superstruct_1.nullable)(exports.TooltipChildStruct),\n    content: exports.TooltipContentStruct,\n});\n/**\n * A struct for the {@link RowElement} type.\n */\nexports.RowStruct = element('Row', {\n    label: (0, superstruct_1.string)(),\n    children: (0, internals_1.typedUnion)([exports.AddressStruct, exports.ImageStruct, exports.TextStruct, exports.ValueStruct]),\n    variant: (0, superstruct_1.optional)((0, internals_1.nullUnion)([(0, internals_1.literal)('default'), (0, internals_1.literal)('warning'), (0, internals_1.literal)('critical')])),\n    tooltip: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\n/**\n * A struct for the {@link SpinnerElement} type.\n */\nexports.SpinnerStruct = element('Spinner');\n/**\n * A subset of JSX elements that are allowed as children of the Box component.\n * This set includes all components, except components that need to be nested in\n * another component (e.g., Field must be contained in a Form).\n */\nexports.BoxChildStruct = (0, internals_1.typedUnion)([\n    exports.AddressStruct,\n    exports.BoldStruct,\n    exports.BoxStruct,\n    exports.ButtonStruct,\n    exports.CopyableStruct,\n    exports.DividerStruct,\n    exports.DropdownStruct,\n    exports.RadioGroupStruct,\n    exports.FileInputStruct,\n    exports.FormStruct,\n    exports.HeadingStruct,\n    exports.InputStruct,\n    exports.ImageStruct,\n    exports.ItalicStruct,\n    exports.LinkStruct,\n    exports.RowStruct,\n    exports.SpinnerStruct,\n    exports.TextStruct,\n    exports.TooltipStruct,\n    exports.CheckboxStruct,\n    exports.CardStruct,\n    exports.IconStruct,\n    exports.SelectorStruct,\n    exports.SectionStruct,\n]);\n/**\n * A struct for the {@link ContainerElement} type.\n */\nexports.ContainerStruct = element('Container', {\n    children: (0, internals_1.selectiveUnion)((value) => {\n        if (Array.isArray(value)) {\n            return (0, superstruct_1.tuple)([exports.BoxChildStruct, exports.FooterStruct]);\n        }\n        return exports.BoxChildStruct;\n    }),\n});\n/**\n * For now, the allowed JSX elements at the root are the same as the allowed\n * children of the Box component.\n */\nexports.RootJSXElementStruct = (0, internals_1.typedUnion)([\n    exports.BoxChildStruct,\n    exports.ContainerStruct,\n]);\n/**\n * A struct for the {@link JSXElement} type.\n */\nexports.JSXElementStruct = (0, internals_1.typedUnion)([\n    exports.ButtonStruct,\n    exports.InputStruct,\n    exports.FileInputStruct,\n    exports.FieldStruct,\n    exports.FormStruct,\n    exports.BoldStruct,\n    exports.ItalicStruct,\n    exports.AddressStruct,\n    exports.BoxStruct,\n    exports.CopyableStruct,\n    exports.DividerStruct,\n    exports.HeadingStruct,\n    exports.ImageStruct,\n    exports.LinkStruct,\n    exports.RowStruct,\n    exports.SpinnerStruct,\n    exports.TextStruct,\n    exports.DropdownStruct,\n    exports.OptionStruct,\n    exports.RadioGroupStruct,\n    exports.RadioStruct,\n    exports.ValueStruct,\n    exports.TooltipStruct,\n    exports.CheckboxStruct,\n    exports.FooterStruct,\n    exports.ContainerStruct,\n    exports.CardStruct,\n    exports.IconStruct,\n    exports.SelectorStruct,\n    exports.SelectorOptionStruct,\n    exports.SectionStruct,\n]);\n/**\n * Check if a value is a JSX element.\n *\n * @param value - The value to check.\n * @returns True if the value is a JSX element, false otherwise.\n */\nfunction isJSXElement(value) {\n    return (0, superstruct_1.is)(value, exports.JSXElementStruct);\n}\nexports.isJSXElement = isJSXElement;\n/**\n * Check if a value is a JSX element, without validating all of its contents.\n * This is useful when you want to validate the structure of a value, but not\n * all the children.\n *\n * This should only be used when you are sure that the value is safe to use,\n * i.e., after using {@link isJSXElement}.\n *\n * @param value - The value to check.\n * @returns True if the value is a JSX element, false otherwise.\n */\nfunction isJSXElementUnsafe(value) {\n    return ((0, utils_1.isPlainObject)(value) &&\n        (0, utils_1.hasProperty)(value, 'type') &&\n        (0, utils_1.hasProperty)(value, 'props') &&\n        (0, utils_1.hasProperty)(value, 'key'));\n}\nexports.isJSXElementUnsafe = isJSXElementUnsafe;\n/**\n * Assert that a value is a JSX element.\n *\n * @param value - The value to check.\n * @throws If the value is not a JSX element.\n */\nfunction assertJSXElement(value) {\n    // TODO: We should use the error parsing utils from `snaps-utils` to improve\n    // the error messages. It currently includes colours and potentially other\n    // formatting that we might not want to include in the SDK.\n    if (!isJSXElement(value)) {\n        throw new Error(`Expected a JSX element, but received ${JSON.stringify(value)}. Please refer to the documentation for the supported JSX elements and their props.`);\n    }\n}\nexports.assertJSXElement = assertJSXElement;\n//# sourceMappingURL=validation.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=caip.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=global.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=cronjob.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=home-page.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./cronjob.cjs\"), exports);\n__exportStar(require(\"./home-page.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./lifecycle.cjs\"), exports);\n__exportStar(require(\"./name-lookup.cjs\"), exports);\n__exportStar(require(\"./rpc-request.cjs\"), exports);\n__exportStar(require(\"./transaction.cjs\"), exports);\n__exportStar(require(\"./signature.cjs\"), exports);\n__exportStar(require(\"./user-input.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=lifecycle.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=name-lookup.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=rpc-request.cjs.map","export enum NOTIFICATION_NAMES {\n  accountsChanged = 'metamask_accountsChanged',\n  unlockStateChanged = 'metamask_unlockStateChanged',\n  chainChanged = 'metamask_chainChanged',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=signature.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SeverityLevel = void 0;\n/**\n * The severity level of content being returned from a transaction insight.\n * Currently only one level is supported:\n *\n * - `critical` - The transaction is critical and should not be submitted by the\n * user.\n */\nvar SeverityLevel;\n(function (SeverityLevel) {\n    SeverityLevel[\"Critical\"] = \"critical\";\n})(SeverityLevel || (exports.SeverityLevel = SeverityLevel = {}));\n//# sourceMappingURL=transaction.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserInputEventStruct = exports.FileUploadEventStruct = exports.InputChangeEventStruct = exports.FormSubmitEventStruct = exports.FileStruct = exports.ButtonClickEventStruct = exports.GenericEventStruct = exports.UserInputEventType = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\n/**\n * The type of user input event fired.\n * Currently only three events are supported:\n *\n * - `ButtonClickEvent` - A button has been clicked in the UI.\n * - `FormSubmitEvent` - A Form has been submitted in the UI.\n * - `InputChangeEvent` - The value of an input field has changed in the UI.\n * - `FileUploadEvent` - A file has been uploaded in the UI.\n */\nvar UserInputEventType;\n(function (UserInputEventType) {\n    UserInputEventType[\"ButtonClickEvent\"] = \"ButtonClickEvent\";\n    UserInputEventType[\"FormSubmitEvent\"] = \"FormSubmitEvent\";\n    UserInputEventType[\"InputChangeEvent\"] = \"InputChangeEvent\";\n    UserInputEventType[\"FileUploadEvent\"] = \"FileUploadEvent\";\n})(UserInputEventType || (exports.UserInputEventType = UserInputEventType = {}));\nexports.GenericEventStruct = (0, superstruct_1.object)({\n    type: (0, superstruct_1.string)(),\n    name: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\nexports.ButtonClickEventStruct = (0, superstruct_1.assign)(exports.GenericEventStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(UserInputEventType.ButtonClickEvent),\n    name: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n}));\nexports.FileStruct = (0, superstruct_1.object)({\n    name: (0, superstruct_1.string)(),\n    size: (0, superstruct_1.number)(),\n    contentType: (0, superstruct_1.string)(),\n    contents: (0, superstruct_1.string)(),\n});\nexports.FormSubmitEventStruct = (0, superstruct_1.assign)(exports.GenericEventStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(UserInputEventType.FormSubmitEvent),\n    value: (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.string)(), exports.FileStruct, (0, superstruct_1.boolean)()]))),\n    name: (0, superstruct_1.string)(),\n}));\nexports.InputChangeEventStruct = (0, superstruct_1.assign)(exports.GenericEventStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(UserInputEventType.InputChangeEvent),\n    name: (0, superstruct_1.string)(),\n    value: (0, superstruct_1.union)([(0, superstruct_1.string)(), (0, superstruct_1.boolean)()]),\n}));\nexports.FileUploadEventStruct = (0, superstruct_1.assign)(exports.GenericEventStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(UserInputEventType.FileUploadEvent),\n    name: (0, superstruct_1.string)(),\n    file: (0, superstruct_1.nullable)(exports.FileStruct),\n}));\nexports.UserInputEventStruct = (0, superstruct_1.union)([\n    exports.ButtonClickEventStruct,\n    exports.FormSubmitEventStruct,\n    exports.InputChangeEventStruct,\n    exports.FileUploadEventStruct,\n]);\n//# sourceMappingURL=user-input.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// This is intentionally imported, rather than re-exported.\n/* eslint-disable import/no-unassigned-import */\nrequire(\"./global.cjs\");\nrequire(\"./images.cjs\");\n/* eslint-enable import/no-unassigned-import */\n__exportStar(require(\"./caip.cjs\"), exports);\n__exportStar(require(\"./handlers/index.cjs\"), exports);\n__exportStar(require(\"./methods/index.cjs\"), exports);\n__exportStar(require(\"./permissions.cjs\"), exports);\n__exportStar(require(\"./provider.cjs\"), exports);\n__exportStar(require(\"./snap.cjs\"), exports);\n__exportStar(require(\"./interface.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterfaceContextStruct = exports.ComponentOrElementStruct = exports.InterfaceStateStruct = exports.FormStateStruct = exports.StateStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst internals_1 = require(\"../internals/index.cjs\");\nconst jsx_1 = require(\"../jsx/index.cjs\");\nconst ui_1 = require(\"../ui/index.cjs\");\nconst handlers_1 = require(\"./handlers/index.cjs\");\n/**\n * To avoid typing problems with the interface state when manipulating it we\n * have to differentiate the state of a form (that will be contained inside the\n * root state) and the root state since a key in the root stat can contain\n * either the value of an input or a sub-state of a form.\n */\nexports.StateStruct = (0, superstruct_1.union)([handlers_1.FileStruct, (0, superstruct_1.string)(), (0, superstruct_1.boolean)()]);\nexports.FormStateStruct = (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.nullable)(exports.StateStruct));\nexports.InterfaceStateStruct = (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.union)([exports.FormStateStruct, (0, superstruct_1.nullable)(exports.StateStruct)]));\nexports.ComponentOrElementStruct = (0, internals_1.selectiveUnion)((value) => {\n    if ((0, utils_1.isObject)(value) && !(0, utils_1.hasProperty)(value, 'props')) {\n        return ui_1.ComponentStruct;\n    }\n    return jsx_1.RootJSXElementStruct;\n});\nexports.InterfaceContextStruct = (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct);\n//# sourceMappingURL=interface.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=create-interface.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogType = void 0;\n/**\n * The type of dialog to display.\n *\n * - `alert` - A dialog with a single button.\n * - `confirmation` - A dialog with two buttons, one to confirm and one to\n * cancel.\n * - `prompt` - A dialog with two buttons and a text input.\n */\nvar DialogType;\n(function (DialogType) {\n    DialogType[\"Alert\"] = \"alert\";\n    DialogType[\"Confirmation\"] = \"confirmation\";\n    DialogType[\"Prompt\"] = \"prompt\";\n})(DialogType || (exports.DialogType = DialogType = {}));\n//# sourceMappingURL=dialog.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-bip32-entropy.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-bip32-public-key.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-bip44-entropy.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-client-status.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-entropy.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuxiliaryFileEncoding = void 0;\n/**\n * The encoding to use when retrieving the file. Defaults to `Base64`.\n */\nvar AuxiliaryFileEncoding;\n(function (AuxiliaryFileEncoding) {\n    AuxiliaryFileEncoding[\"Base64\"] = \"base64\";\n    AuxiliaryFileEncoding[\"Hex\"] = \"hex\";\n    AuxiliaryFileEncoding[\"Utf8\"] = \"utf8\";\n})(AuxiliaryFileEncoding || (exports.AuxiliaryFileEncoding = AuxiliaryFileEncoding = {}));\n//# sourceMappingURL=get-file.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-interface-state.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-locale.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-preferences.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=get-snaps.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./create-interface.cjs\"), exports);\n__exportStar(require(\"./dialog.cjs\"), exports);\n__exportStar(require(\"./get-bip32-entropy.cjs\"), exports);\n__exportStar(require(\"./get-bip32-public-key.cjs\"), exports);\n__exportStar(require(\"./get-bip44-entropy.cjs\"), exports);\n__exportStar(require(\"./get-client-status.cjs\"), exports);\n__exportStar(require(\"./get-entropy.cjs\"), exports);\n__exportStar(require(\"./get-file.cjs\"), exports);\n__exportStar(require(\"./get-interface-state.cjs\"), exports);\n__exportStar(require(\"./get-locale.cjs\"), exports);\n__exportStar(require(\"./get-preferences.cjs\"), exports);\n__exportStar(require(\"./get-snaps.cjs\"), exports);\n__exportStar(require(\"./invoke-keyring.cjs\"), exports);\n__exportStar(require(\"./invoke-snap.cjs\"), exports);\n__exportStar(require(\"./manage-accounts.cjs\"), exports);\n__exportStar(require(\"./manage-state.cjs\"), exports);\n__exportStar(require(\"./methods.cjs\"), exports);\n__exportStar(require(\"./notify.cjs\"), exports);\n__exportStar(require(\"./request-snaps.cjs\"), exports);\n__exportStar(require(\"./update-interface.cjs\"), exports);\n__exportStar(require(\"./resolve-interface.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=invoke-keyring.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=invoke-snap.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=manage-accounts.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ManageStateOperation = void 0;\n/**\n * The operations that can be performed on the state.\n */\nvar ManageStateOperation;\n(function (ManageStateOperation) {\n    ManageStateOperation[\"ClearState\"] = \"clear\";\n    ManageStateOperation[\"GetState\"] = \"get\";\n    ManageStateOperation[\"UpdateState\"] = \"update\";\n})(ManageStateOperation || (exports.ManageStateOperation = ManageStateOperation = {}));\n//# sourceMappingURL=manage-state.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=methods.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotificationType = void 0;\n/**\n * The types of notifications that can be displayed.\n *\n * - `InApp` - A notification that is displayed in by the MetaMask extension.\n * - `Native` - A notification that is displayed by the operating system.\n */\nvar NotificationType;\n(function (NotificationType) {\n    NotificationType[\"InApp\"] = \"inApp\";\n    NotificationType[\"Native\"] = \"native\";\n})(NotificationType || (exports.NotificationType = NotificationType = {}));\n//# sourceMappingURL=notify.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=request-snaps.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=resolve-interface.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=update-interface.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=permissions.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=provider.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=snap.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBuilder = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * A function that returns a function to \"build\" a {@link Component}. It infers\n * the type of the component from the given struct, and performs validation on\n * the created component.\n *\n * The returned function can handle the node arguments in two ways:\n * 1. As a single object, with the keys corresponding to the node's properties,\n * excluding the `type` property.\n * 2. As an array of arguments, with the order corresponding to the given keys.\n *\n * @param type - The type of the component to build.\n * @param struct - The struct to use to validate the component.\n * @param keys - The keys of the component to use as arguments to the builder.\n * The order of the keys determines the order of the arguments.\n * @returns A function that builds a component of the given type.\n * @internal\n */\nfunction createBuilder(type, struct, keys = []) {\n    return (...args) => {\n        // Node passed as a single object.\n        if (args.length === 1 && (0, utils_1.isPlainObject)(args[0])) {\n            const node = { ...args[0], type };\n            // The user could be passing invalid values to the builder, so we need to\n            // validate them as per the component's struct.\n            (0, utils_1.assertStruct)(node, struct, `Invalid ${type} component`);\n            return node;\n        }\n        // Node passed as an array of arguments.\n        const node = keys.reduce((partialNode, key, index) => {\n            if (args[index] !== undefined) {\n                return {\n                    ...partialNode,\n                    [key]: args[index],\n                };\n            }\n            return partialNode;\n        }, { type });\n        // The user could be passing invalid values to the builder, so we need to\n        // validate them as per the component's struct.\n        (0, utils_1.assertStruct)(node, struct, `Invalid ${type} component`);\n        return node;\n    };\n}\nexports.createBuilder = createBuilder;\n//# sourceMappingURL=builder.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsComponent = exports.isComponent = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst components_1 = require(\"./components/index.cjs\");\n/**\n * Check if the given value is a {@link Component}. This performs recursive\n * validation of the component's children (if any).\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link Component}, `false` otherwise.\n */\nfunction isComponent(value) {\n    return (0, superstruct_1.is)(value, components_1.ComponentStruct);\n}\nexports.isComponent = isComponent;\n/**\n * Assert that the given value is a {@link Component}. This performs recursive\n * validation of the component's children (if any).\n *\n * @param value - The value to check.\n * @throws If the value is not a {@link Component}.\n */\nfunction assertIsComponent(value) {\n    (0, utils_1.assertStruct)(value, components_1.ComponentStruct, 'Invalid component');\n}\nexports.assertIsComponent = assertIsComponent;\n//# sourceMappingURL=component.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.address = exports.AddressStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nexports.AddressStruct = (0, superstruct_1.assign)(nodes_1.LiteralStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Address),\n    value: utils_1.HexChecksumAddressStruct,\n}));\n/**\n * Create an {@link Address} node.\n *\n * @param args - The node arguments. This can either be a string, or an object\n * with the `value` property.\n * @param args.value - The address to be rendered.\n * @returns The address node as an object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = address({ value: '0x4bbeeb066ed09b7aed07bf39eee0460dfa261520' });\n * const node = address('0x4bbeeb066ed09b7aed07bf39eee0460dfa261520');\n */\nexports.address = (0, builder_1.createBuilder)(nodes_1.NodeType.Address, exports.AddressStruct, [\n    'value',\n]);\n//# sourceMappingURL=address.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.button = exports.ButtonStruct = exports.ButtonType = exports.ButtonVariant = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst internals_1 = require(\"../../internals/index.cjs\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nvar ButtonVariant;\n(function (ButtonVariant) {\n    ButtonVariant[\"Primary\"] = \"primary\";\n    ButtonVariant[\"Secondary\"] = \"secondary\";\n})(ButtonVariant || (exports.ButtonVariant = ButtonVariant = {}));\nvar ButtonType;\n(function (ButtonType) {\n    ButtonType[\"Button\"] = \"button\";\n    ButtonType[\"Submit\"] = \"submit\";\n})(ButtonType || (exports.ButtonType = ButtonType = {}));\nexports.ButtonStruct = (0, superstruct_1.assign)(nodes_1.LiteralStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Button),\n    value: (0, superstruct_1.string)(),\n    variant: (0, superstruct_1.optional)((0, superstruct_1.union)([\n        (0, internals_1.enumValue)(ButtonVariant.Primary),\n        (0, internals_1.enumValue)(ButtonVariant.Secondary),\n    ])),\n    buttonType: (0, superstruct_1.optional)((0, superstruct_1.union)([(0, internals_1.enumValue)(ButtonType.Button), (0, internals_1.enumValue)(ButtonType.Submit)])),\n    name: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n}));\n/**\n * Create a {@link Button} node.\n *\n * @param args - The node arguments. This can be either a string, or an object\n * with a `value` property. A set of optional properties can be passed.\n * @param args.variant - The optional variant of the button.\n * @param args.value - The text content of the node.\n * @param args.name - The optional name of the button.\n * @returns The text node as object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * ```typescript\n * const node = button({  variant: 'primary', text: 'Hello, world!', name: 'myButton' });\n * const node = button('Hello, world!', 'button', 'myButton', 'primary');\n * const node = button('Hello, world!');\n * ```\n */\nexports.button = (0, builder_1.createBuilder)(nodes_1.NodeType.Button, exports.ButtonStruct, [\n    'value',\n    'buttonType',\n    'name',\n    'variant',\n]);\n//# sourceMappingURL=button.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.copyable = exports.CopyableStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nexports.CopyableStruct = (0, superstruct_1.assign)(nodes_1.LiteralStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Copyable),\n    value: (0, superstruct_1.string)(),\n    sensitive: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n}));\n/**\n * Create a {@link Copyable} component.\n *\n * @param args - The node arguments. This can either be a string, or an object\n * with the `text` property.\n * @param args.value - The text to be copied.\n * @param args.sensitive - Whether the value is sensitive or not. Sensitive\n * values are only displayed to the user after clicking on the component.\n * Defaults to false.\n * @returns A {@link Copyable} component.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = copyable('Hello, world!');\n * const node = copyable({ value: 'Hello, world!' });\n */\nexports.copyable = (0, builder_1.createBuilder)(nodes_1.NodeType.Copyable, exports.CopyableStruct, [\n    'value',\n    'sensitive',\n]);\n//# sourceMappingURL=copyable.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.divider = exports.DividerStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nexports.DividerStruct = (0, superstruct_1.assign)(nodes_1.NodeStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Divider),\n}));\n/**\n * Create a {@link Divider} node.\n *\n * @returns The divider node as object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = divider();\n */\nexports.divider = (0, builder_1.createBuilder)(nodes_1.NodeType.Divider, exports.DividerStruct);\n//# sourceMappingURL=divider.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.form = exports.FormStruct = exports.FormComponentStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nconst button_1 = require(\"./button.cjs\");\nconst input_1 = require(\"./input.cjs\");\nexports.FormComponentStruct = (0, superstruct_1.union)([input_1.InputStruct, button_1.ButtonStruct]);\nexports.FormStruct = (0, superstruct_1.assign)(nodes_1.NodeStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Form),\n    children: (0, superstruct_1.array)(exports.FormComponentStruct),\n    name: (0, superstruct_1.string)(),\n}));\n/**\n * Create a {@link Form} node.\n *\n * @param args - The node arguments. This can be either an array of children and a string, or\n * an object with a `name` and `children` property.\n * @param args.name - The form name used to identify it.\n * @param args.children - The child nodes of the form. This can be any valid\n * {@link FormComponent}.\n * @returns The form node as object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = form({\n *  name: 'myForm',\n *  children: [\n *    input({ name: 'myInput' }),\n *    button({ value: 'Hello, world!' }),\n *  ],\n * });\n *\n * const node = form('myForm', [input('myInput'), button('Hello, world!')]);\n */\nexports.form = (0, builder_1.createBuilder)(nodes_1.NodeType.Form, exports.FormStruct, [\n    'name',\n    'children',\n]);\n//# sourceMappingURL=form.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.heading = exports.HeadingStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nexports.HeadingStruct = (0, superstruct_1.assign)(nodes_1.LiteralStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Heading),\n    value: (0, superstruct_1.string)(),\n}));\n/**\n * Create a {@link Heading} node.\n *\n * @param args - The node arguments. This can either be a string, or an object\n * with the `value` property.\n * @param args.value - The heading text.\n * @returns The heading node as object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = heading({ value: 'Hello, world!' });\n * const node = heading('Hello, world!');\n */\nexports.heading = (0, builder_1.createBuilder)(nodes_1.NodeType.Heading, exports.HeadingStruct, [\n    'value',\n]);\n//# sourceMappingURL=heading.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.image = exports.ImageStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst internals_1 = require(\"../../internals/index.cjs\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nexports.ImageStruct = (0, superstruct_1.assign)(nodes_1.NodeStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Image),\n    value: (0, internals_1.svg)(),\n}));\n/**\n * Create an {@link Image} node.\n *\n * @param args - The node arguments. This can either be a string, or an object\n * with the `value` property.\n * @param args.value - The SVG image to be rendered. Must be a valid SVG string.\n * @returns The image node as object. Other image formats are supported by\n * embedding them as data URLs in the SVG.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = image({ value: '<svg />' });\n * const node = image('<svg />');\n */\nexports.image = (0, builder_1.createBuilder)(nodes_1.NodeType.Image, exports.ImageStruct, ['value']);\n//# sourceMappingURL=image.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PanelStruct = exports.panel = exports.ComponentStruct = exports.ImageStruct = exports.image = void 0;\n__exportStar(require(\"./address.cjs\"), exports);\n__exportStar(require(\"./copyable.cjs\"), exports);\n__exportStar(require(\"./divider.cjs\"), exports);\n__exportStar(require(\"./heading.cjs\"), exports);\nvar image_1 = require(\"./image.cjs\");\nObject.defineProperty(exports, \"image\", { enumerable: true, get: function () { return image_1.image; } });\nObject.defineProperty(exports, \"ImageStruct\", { enumerable: true, get: function () { return image_1.ImageStruct; } });\nvar panel_1 = require(\"./panel.cjs\");\nObject.defineProperty(exports, \"ComponentStruct\", { enumerable: true, get: function () { return panel_1.ComponentStruct; } });\nObject.defineProperty(exports, \"panel\", { enumerable: true, get: function () { return panel_1.panel; } });\nObject.defineProperty(exports, \"PanelStruct\", { enumerable: true, get: function () { return panel_1.PanelStruct; } });\n__exportStar(require(\"./spinner.cjs\"), exports);\n__exportStar(require(\"./text.cjs\"), exports);\n__exportStar(require(\"./row.cjs\"), exports);\n__exportStar(require(\"./button.cjs\"), exports);\n__exportStar(require(\"./input.cjs\"), exports);\n__exportStar(require(\"./form.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.input = exports.InputStruct = exports.InputType = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst internals_1 = require(\"../../internals/index.cjs\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\n/**\n * This replicates the available input types from the metamask extension.\n * https://github.com/MetaMask/metamask-extension/develop/ui/components/component-library/input/input.constants.js\n */\nvar InputType;\n(function (InputType) {\n    /* eslint-disable @typescript-eslint/no-shadow */\n    InputType[\"Text\"] = \"text\";\n    InputType[\"Number\"] = \"number\";\n    /* eslint-enable @typescript-eslint/no-shadow */\n    InputType[\"Password\"] = \"password\";\n})(InputType || (exports.InputType = InputType = {}));\nexports.InputStruct = (0, superstruct_1.assign)(nodes_1.LiteralStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Input),\n    value: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    name: (0, superstruct_1.string)(),\n    inputType: (0, superstruct_1.optional)((0, superstruct_1.union)([\n        (0, internals_1.enumValue)(InputType.Text),\n        (0, internals_1.enumValue)(InputType.Password),\n        (0, internals_1.enumValue)(InputType.Number),\n    ])),\n    placeholder: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    label: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    error: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n}));\n/**\n * Create a {@link Input} node.\n *\n * @param args - The node arguments. This can either be a name and an optional variant, value and placeholder or an object\n * with the properties: `inputType`, `value`, `variant`, `placeholder` and `name`.\n * @param args.name - The name for the input.\n * @param args.value - The value of the input.\n * @param args.inputType - An optional type, either `text`, `password` or `number`.\n * @param args.placeholder - An optional input placeholder.\n * @param args.label - An optional input label.\n * @param args.error - An optional error text.\n * @returns The input node as an object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = input('myInput');\n * const node = input('myInput', InputType.Text, 'my placeholder', 'myValue', 'myLabel');\n * const node = input({ name: 'myInput' });\n * const node = input({name: 'myInput', value: 'myValue', inputType: InputType.Password, placeholder: 'placeholder'})\n */\nexports.input = (0, builder_1.createBuilder)(nodes_1.NodeType.Input, exports.InputStruct, [\n    'name',\n    'inputType',\n    'placeholder',\n    'value',\n    'label',\n]);\n//# sourceMappingURL=input.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComponentStruct = exports.panel = exports.PanelStruct = exports.ParentStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst internals_1 = require(\"../../internals/index.cjs\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nconst address_1 = require(\"./address.cjs\");\nconst button_1 = require(\"./button.cjs\");\nconst copyable_1 = require(\"./copyable.cjs\");\nconst divider_1 = require(\"./divider.cjs\");\nconst form_1 = require(\"./form.cjs\");\nconst heading_1 = require(\"./heading.cjs\");\nconst image_1 = require(\"./image.cjs\");\nconst input_1 = require(\"./input.cjs\");\nconst row_1 = require(\"./row.cjs\");\nconst spinner_1 = require(\"./spinner.cjs\");\nconst text_1 = require(\"./text.cjs\");\n/**\n * @internal\n */\nexports.ParentStruct = (0, superstruct_1.assign)(nodes_1.NodeStruct, (0, superstruct_1.object)({\n    // This node references itself indirectly, so we need to use `lazy()`.\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    children: (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.ComponentStruct)),\n}));\n/**\n * @internal\n */\nexports.PanelStruct = (0, superstruct_1.assign)(exports.ParentStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Panel),\n}));\n/**\n * Create a {@link Panel} node.\n *\n * @param args - The node arguments. This can be either an array of children, or\n * an object with a `children` property.\n * @param args.children - The child nodes of the panel. This can be any valid\n * {@link Component}.\n * @returns The panel node as object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = panel({\n *  children: [\n *    heading({ text: 'Hello, world!' }),\n *    text({ text: 'This is a panel.' }),\n *  ],\n * });\n *\n * const node = panel([\n *   heading('Hello, world!'),\n *   text('This is a panel.'),\n * ]);\n */\nexports.panel = (0, builder_1.createBuilder)(nodes_1.NodeType.Panel, exports.PanelStruct, ['children']);\n// This is defined separately from `Component` to avoid circular dependencies.\nexports.ComponentStruct = (0, internals_1.typedUnion)([\n    copyable_1.CopyableStruct,\n    divider_1.DividerStruct,\n    heading_1.HeadingStruct,\n    image_1.ImageStruct,\n    exports.PanelStruct,\n    spinner_1.SpinnerStruct,\n    text_1.TextStruct,\n    row_1.RowStruct,\n    address_1.AddressStruct,\n    input_1.InputStruct,\n    form_1.FormStruct,\n    button_1.ButtonStruct,\n]);\n//# sourceMappingURL=panel.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.row = exports.RowStruct = exports.RowVariant = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst internals_1 = require(\"../../internals/index.cjs\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nconst address_1 = require(\"./address.cjs\");\nconst image_1 = require(\"./image.cjs\");\nconst text_1 = require(\"./text.cjs\");\nvar RowVariant;\n(function (RowVariant) {\n    RowVariant[\"Default\"] = \"default\";\n    RowVariant[\"Critical\"] = \"critical\";\n    RowVariant[\"Warning\"] = \"warning\";\n})(RowVariant || (exports.RowVariant = RowVariant = {}));\n// A subset of components made available to the row\nconst RowComponentStruct = (0, superstruct_1.union)([image_1.ImageStruct, text_1.TextStruct, address_1.AddressStruct]);\nexports.RowStruct = (0, superstruct_1.assign)(nodes_1.LiteralStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Row),\n    variant: (0, superstruct_1.optional)((0, superstruct_1.union)([\n        (0, internals_1.enumValue)(RowVariant.Default),\n        (0, internals_1.enumValue)(RowVariant.Critical),\n        (0, internals_1.enumValue)(RowVariant.Warning),\n    ])),\n    label: (0, superstruct_1.string)(),\n    value: RowComponentStruct,\n}));\n/**\n * Create a {@link Row} node.\n *\n * @param args - The node arguments. This can either be a string, a component and an optional variant or an object\n * with the properties: `label`, `value` and `variant`.\n * @param args.label - The label for the row.\n * @param args.value - Another component, is currently limited to `image`, `text` and `address`.\n * @param args.variant - An optional variant, either `default`, `warning` or `critical`.\n * @returns The row node as an object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = row({ label: 'Address', value: address('0x4bbeeb066ed09b7aed07bf39eee0460dfa261520') });\n * const node = row({ label: 'Address', value: address('0x4bbeeb066ed09b7aed07bf39eee0460dfa261520'), variant: RowVariant.Warning });\n * const node = row('Address', address('0x4bbeeb066ed09b7aed07bf39eee0460dfa261520'));\n * const node = row('Address', address('0x4bbeeb066ed09b7aed07bf39eee0460dfa261520'), RowVariant.Warning);\n */\nexports.row = (0, builder_1.createBuilder)(nodes_1.NodeType.Row, exports.RowStruct, [\n    'label',\n    'value',\n    'variant',\n]);\n//# sourceMappingURL=row.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.spinner = exports.SpinnerStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nexports.SpinnerStruct = (0, superstruct_1.assign)(nodes_1.NodeStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Spinner),\n}));\n/**\n * Create a {@link Spinner} node.\n *\n * @returns The spinner node as object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = spinner();\n */\nexports.spinner = (0, builder_1.createBuilder)(nodes_1.NodeType.Spinner, exports.SpinnerStruct);\n//# sourceMappingURL=spinner.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.text = exports.TextStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst builder_1 = require(\"../builder.cjs\");\nconst nodes_1 = require(\"../nodes.cjs\");\nexports.TextStruct = (0, superstruct_1.assign)(nodes_1.LiteralStruct, (0, superstruct_1.object)({\n    type: (0, superstruct_1.literal)(nodes_1.NodeType.Text),\n    value: (0, superstruct_1.string)(),\n    markdown: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n}));\n/**\n * Create a {@link Text} node.\n *\n * @param args - The node arguments. This can be either a string\n * and a boolean, or an object with a `value` property\n * and an optional `markdown` property.\n * @param args.value - The text content of the node.\n * @param args.markdown - An optional flag to enable or disable markdown. This\n * is enabled by default.\n * @returns The text node as object.\n * @deprecated Snaps component functions are deprecated, in favor of the new JSX\n * components. This function will be removed in a future release.\n * @example\n * const node = text({ value: 'Hello, world!' });\n * const node = text('Hello, world!');\n * const node = text({ value: 'Hello, world!', markdown: false });\n * const node = text('Hello, world!', false);\n */\nexports.text = (0, builder_1.createBuilder)(nodes_1.NodeType.Text, exports.TextStruct, [\n    'value',\n    'markdown',\n]);\n//# sourceMappingURL=text.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeType = void 0;\n__exportStar(require(\"./components/index.cjs\"), exports);\n__exportStar(require(\"./component.cjs\"), exports);\nvar nodes_1 = require(\"./nodes.cjs\");\nObject.defineProperty(exports, \"NodeType\", { enumerable: true, get: function () { return nodes_1.NodeType; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiteralStruct = exports.NodeStruct = exports.NodeType = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\n/**\n * The supported node types. This is based on SIP-7.\n *\n * @see https://metamask.github.io/SIPs/SIPS/sip-7\n */\nvar NodeType;\n(function (NodeType) {\n    NodeType[\"Copyable\"] = \"copyable\";\n    NodeType[\"Divider\"] = \"divider\";\n    NodeType[\"Heading\"] = \"heading\";\n    NodeType[\"Panel\"] = \"panel\";\n    NodeType[\"Spinner\"] = \"spinner\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    NodeType[\"Text\"] = \"text\";\n    NodeType[\"Image\"] = \"image\";\n    NodeType[\"Row\"] = \"row\";\n    NodeType[\"Address\"] = \"address\";\n    NodeType[\"Button\"] = \"button\";\n    NodeType[\"Input\"] = \"input\";\n    NodeType[\"Form\"] = \"form\";\n})(NodeType || (exports.NodeType = NodeType = {}));\n/**\n * @internal\n */\nexports.NodeStruct = (0, superstruct_1.object)({\n    type: (0, superstruct_1.string)(),\n});\n/**\n * @internal\n */\nexports.LiteralStruct = (0, superstruct_1.assign)(exports.NodeStruct, (0, superstruct_1.object)({\n    value: (0, superstruct_1.unknown)(),\n}));\n//# sourceMappingURL=nodes.cjs.map","/* eslint-disable */\n\n// Re-exported for compatibility with build tools that don't support the\n// `exports` field in package.json\nmodule.exports = require('./dist/jsx/jsx-runtime.cjs');\n","/* eslint-disable */\n\n// Re-exported for compatibility with build tools that don't support the\n// `exports` field in package.json\nmodule.exports = require('./dist/jsx/index.cjs');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEqual = void 0;\n/**\n * Checks if array `a` is equal to array `b`. Note that this does not do a deep\n * equality check. It only checks if the arrays are the same length and if each\n * element in `a` is equal to (`===`) the corresponding element in `b`.\n *\n * @param a - The first array to compare.\n * @param b - The second array to compare.\n * @returns `true` if the arrays are equal, `false` otherwise.\n */\nfunction isEqual(a, b) {\n    return a.length === b.length && a.every((value, index) => value === b[index]);\n}\nexports.isEqual = isEqual;\n//# sourceMappingURL=array.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAuxiliaryFiles = exports.encodeAuxiliaryFile = void 0;\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst utils_1 = require(\"@metamask/utils\");\nconst base64_1 = require(\"./base64.cjs\");\nconst constants_1 = require(\"./constants.cjs\");\n/**\n * Re-encodes an auxiliary file if needed depending on the requested file encoding.\n *\n * @param value - The base64 value stored for the auxiliary file.\n * @param encoding - The chosen encoding.\n * @returns The file encoded in the requested encoding.\n */\nasync function encodeAuxiliaryFile(value, encoding) {\n    // Input is assumed to be the stored file in base64.\n    if (encoding === snaps_sdk_1.AuxiliaryFileEncoding.Base64) {\n        return value;\n    }\n    // TODO: Use @metamask/utils for this\n    const decoded = await (0, base64_1.decodeBase64)(value);\n    if (encoding === snaps_sdk_1.AuxiliaryFileEncoding.Utf8) {\n        return (0, utils_1.bytesToString)(decoded);\n    }\n    return (0, utils_1.bytesToHex)(decoded);\n}\nexports.encodeAuxiliaryFile = encodeAuxiliaryFile;\n/**\n * Validate that auxiliary files used by the Snap are within size limits.\n *\n * @param files - A list of auxiliary files.\n */\nfunction validateAuxiliaryFiles(files) {\n    for (const file of files) {\n        (0, utils_1.assert)(file.size < constants_1.MAX_FILE_SIZE, 'Static files required by the Snap must be smaller than 64 MB.');\n    }\n}\nexports.validateAuxiliaryFiles = validateAuxiliaryFiles;\n//# sourceMappingURL=auxiliary-files.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeBase64 = exports.encodeBase64 = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst bytes_1 = require(\"./bytes.cjs\");\n/**\n * Provides fast, asynchronous base64 encoding.\n *\n * @param input - The input value, assumed to be coercable to bytes.\n * @returns A base64 string.\n */\nasync function encodeBase64(input) {\n    const bytes = (0, bytes_1.getBytes)(input);\n    // In the browser, FileReader is much faster than bytesToBase64.\n    if ('FileReader' in globalThis) {\n        return await new Promise((resolve, reject) => {\n            const reader = Object.assign(new FileReader(), {\n                onload: () => resolve(reader.result.replace('data:application/octet-stream;base64,', '')),\n                onerror: () => reject(reader.error),\n            });\n            reader.readAsDataURL(new File([bytes], '', { type: 'application/octet-stream' }));\n        });\n    }\n    return (0, utils_1.bytesToBase64)(bytes);\n}\nexports.encodeBase64 = encodeBase64;\n/**\n * Provides fast, asynchronous base64 decoding.\n *\n * @param base64 - A base64 string.\n * @returns A Uint8Array of bytes.\n */\nasync function decodeBase64(base64) {\n    const response = await fetch(`data:application/octet-stream;base64,${base64}`);\n    return new Uint8Array(await response.arrayBuffer());\n}\nexports.decodeBase64 = decodeBase64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBytes = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst VirtualFile_1 = require(\"./virtual-file/VirtualFile.cjs\");\n/**\n * Convert a bytes-like input value to a Uint8Array.\n *\n * @param bytes - A bytes-like value.\n * @returns The input value converted to a Uint8Array if necessary.\n */\nfunction getBytes(bytes) {\n    // Unwrap VirtualFiles to extract the content\n    // The content is then either a string or Uint8Array\n    const unwrapped = bytes instanceof VirtualFile_1.VirtualFile ? bytes.value : bytes;\n    if (typeof unwrapped === 'string') {\n        return (0, utils_1.stringToBytes)(unwrapped);\n    }\n    return unwrapped;\n}\nexports.getBytes = getBytes;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnapCaveatType = void 0;\nvar SnapCaveatType;\n(function (SnapCaveatType) {\n    /**\n     * Permitted derivation paths, used by `snap_getBip32Entropy`.\n     */\n    SnapCaveatType[\"PermittedDerivationPaths\"] = \"permittedDerivationPaths\";\n    /**\n     * Permitted coin types, used by `snap_getBip44Entropy`.\n     */\n    SnapCaveatType[\"PermittedCoinTypes\"] = \"permittedCoinTypes\";\n    /**\n     * Caveat specifying a snap cronjob.\n     */\n    SnapCaveatType[\"SnapCronjob\"] = \"snapCronjob\";\n    /**\n     * Caveat specifying access to the transaction origin, used by `endowment:transaction-insight`.\n     */\n    SnapCaveatType[\"TransactionOrigin\"] = \"transactionOrigin\";\n    /**\n     * Caveat specifying access to the signature origin, used by `endowment:signature-insight`.\n     */\n    SnapCaveatType[\"SignatureOrigin\"] = \"signatureOrigin\";\n    /**\n     * The origins that a Snap can receive JSON-RPC messages from.\n     */\n    SnapCaveatType[\"RpcOrigin\"] = \"rpcOrigin\";\n    /**\n     * The origins that a Snap can receive keyring messages from.\n     */\n    SnapCaveatType[\"KeyringOrigin\"] = \"keyringOrigin\";\n    /**\n     * Caveat specifying the snap IDs that can be interacted with.\n     */\n    SnapCaveatType[\"SnapIds\"] = \"snapIds\";\n    /**\n     * Caveat specifying the CAIP-2 chain IDs that a snap can service, currently limited to `endowment:name-lookup`.\n     */\n    SnapCaveatType[\"ChainIds\"] = \"chainIds\";\n    /**\n     * Caveat specifying the input that a name lookup snap can service, currently limited to `endowment:name-lookup`.\n     */\n    SnapCaveatType[\"LookupMatchers\"] = \"lookupMatchers\";\n    /**\n     * Caveat specifying the max request time for a handler endowment.\n     */\n    SnapCaveatType[\"MaxRequestTime\"] = \"maxRequestTime\";\n})(SnapCaveatType || (exports.SnapCaveatType = SnapCaveatType = {}));\n//# sourceMappingURL=caveats.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checksumFiles = exports.checksum = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst bytes_1 = require(\"./bytes.cjs\");\n/**\n * Calculates checksum for a single byte array.\n *\n * @param bytes - The byte array to calculate the checksum for.\n * @returns A single sha-256 checksum.\n */\nasync function checksum(bytes) {\n    const value = (0, bytes_1.getBytes)(bytes);\n    // Use crypto.subtle.digest whenever possible as it is faster.\n    if ('crypto' in globalThis &&\n        typeof globalThis.crypto === 'object' &&\n        crypto.subtle?.digest) {\n        return new Uint8Array(await crypto.subtle.digest('SHA-256', value));\n    }\n    return (0, sha256_1.sha256)(value);\n}\nexports.checksum = checksum;\n/**\n * Calculates checksum over multiple files in a reproducible way.\n *\n * 1. Sort all the files by their paths.\n * 2. Calculate sha-256 checksum of each file separately.\n * 3. Concatenate all the checksums into one buffer and sha-256 that buffer.\n *\n * The sorting of paths is done using {@link https://tc39.es/ecma262/#sec-islessthan UTF-16 Code Units}.\n *\n * @param files - The files over which to calculate the checksum.\n * @returns A single sha-256 checksum.\n */\nasync function checksumFiles(files) {\n    const checksums = await Promise.all([...files]\n        .sort((a, b) => {\n        (0, utils_1.assert)(a.path !== b.path, 'Tried to sort files with non-unique paths.');\n        if (a.path < b.path) {\n            return -1;\n        }\n        return 1;\n    })\n        .map(async (file) => checksum(file)));\n    return checksum((0, utils_1.concatBytes)(checksums));\n}\nexports.checksumFiles = checksumFiles;\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_FILE_SIZE = void 0;\n// The max file size for Snap source code and auxiliary files.\n// 64 MB - we chose this number because it is the size limit for postMessage\n// between the extension and the offscreen document enforced by Chrome.\nexports.MAX_FILE_SIZE = 64000000;\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCronjobSpecificationArray = exports.CronjobSpecificationArrayStruct = exports.isCronjobSpecification = exports.CronjobSpecificationStruct = exports.parseCronExpression = exports.CronExpressionStruct = exports.CronjobRpcRequestStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst cron_parser_1 = require(\"cron-parser\");\nexports.CronjobRpcRequestStruct = (0, superstruct_1.object)({\n    jsonrpc: (0, superstruct_1.optional)(utils_1.JsonRpcVersionStruct),\n    id: (0, superstruct_1.optional)(utils_1.JsonRpcIdStruct),\n    method: (0, superstruct_1.string)(),\n    params: (0, superstruct_1.optional)(utils_1.JsonRpcParamsStruct),\n});\nexports.CronExpressionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'CronExpression', (value) => {\n    try {\n        (0, cron_parser_1.parseExpression)(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n});\n/**\n * Parses a cron expression.\n *\n * @param expression - Expression to parse.\n * @returns A CronExpression class instance.\n */\nfunction parseCronExpression(expression) {\n    const ensureStringExpression = (0, superstruct_1.create)(expression, exports.CronExpressionStruct);\n    return (0, cron_parser_1.parseExpression)(ensureStringExpression);\n}\nexports.parseCronExpression = parseCronExpression;\nexports.CronjobSpecificationStruct = (0, superstruct_1.object)({\n    expression: exports.CronExpressionStruct,\n    request: exports.CronjobRpcRequestStruct,\n});\n/**\n * Check if the given value is a {@link CronjobSpecification} object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link CronjobSpecification} object.\n */\nfunction isCronjobSpecification(value) {\n    try {\n        (0, superstruct_1.create)(value, exports.CronjobSpecificationStruct);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isCronjobSpecification = isCronjobSpecification;\nexports.CronjobSpecificationArrayStruct = (0, superstruct_1.array)(exports.CronjobSpecificationStruct);\n/**\n * Check if the given value is an array of {@link CronjobSpecification} objects.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid array of {@link CronjobSpecification} objects.\n */\nfunction isCronjobSpecificationArray(value) {\n    try {\n        (0, superstruct_1.create)(value, exports.CronjobSpecificationArrayStruct);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isCronjobSpecificationArray = isCronjobSpecificationArray;\n//# sourceMappingURL=cronjob.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepClone = void 0;\nconst rfdc_1 = __importDefault(require(\"rfdc\"));\nexports.deepClone = (0, rfdc_1.default)({ proto: false, circles: false });\n//# sourceMappingURL=deep-clone.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ENDOWMENTS = void 0;\n/**\n * Global JavaScript APIs exposed by default to all snaps.\n */\nexports.DEFAULT_ENDOWMENTS = Object.freeze([\n    'atob',\n    'btoa',\n    'BigInt',\n    'console',\n    'crypto',\n    'Date',\n    'Math',\n    'setTimeout',\n    'clearTimeout',\n    'SubtleCrypto',\n    'TextDecoder',\n    'TextEncoder',\n    'URL',\n    'setInterval',\n    'clearInterval',\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array',\n    'BigInt64Array',\n    'BigUint64Array',\n    'DataView',\n    'ArrayBuffer',\n    // Used by fetch, but also as API for some packages that don't do network connections\n    // https://github.com/MetaMask/snaps-monorepo/issues/662\n    // https://github.com/MetaMask/snaps-monorepo/discussions/678\n    'AbortController',\n    'AbortSignal',\n]);\n//# sourceMappingURL=default-endowments.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSlip44ProtocolName = exports.getSnapDerivationPathName = exports.SNAPS_DERIVATION_PATHS = void 0;\nconst slip44_1 = __importDefault(require(\"@metamask/slip44\"));\nconst array_1 = require(\"./array.cjs\");\nexports.SNAPS_DERIVATION_PATHS = [\n    {\n        path: ['m', `44'`, `0'`],\n        curve: 'ed25519',\n        name: 'Test BIP-32 Path (ed25519)',\n    },\n    {\n        path: ['m', `44'`, `1'`],\n        curve: 'secp256k1',\n        name: 'Testnet',\n    },\n    {\n        path: ['m', `44'`, `0'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Legacy',\n    },\n    {\n        path: ['m', `49'`, `0'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Nested SegWit',\n    },\n    {\n        path: ['m', `49'`, `1'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Testnet Nested SegWit',\n    },\n    {\n        path: ['m', `84'`, `0'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Native SegWit',\n    },\n    {\n        path: ['m', `84'`, `1'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Testnet Native SegWit',\n    },\n    {\n        path: ['m', `86'`, `0'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Taproot',\n    },\n    {\n        path: ['m', `86'`, `1'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Testnet Taproot',\n    },\n    {\n        path: ['m', `44'`, `501'`],\n        curve: 'ed25519',\n        name: 'Solana',\n    },\n    {\n        path: ['m', `44'`, `501'`, \"0'\", \"0'\"],\n        curve: 'ed25519',\n        name: 'Solana',\n    },\n    {\n        path: ['m', `44'`, `2'`],\n        curve: 'secp256k1',\n        name: 'Litecoin',\n    },\n    {\n        path: ['m', `44'`, `3'`],\n        curve: 'secp256k1',\n        name: 'Dogecoin',\n    },\n    {\n        path: ['m', `44'`, `60'`],\n        curve: 'secp256k1',\n        name: 'Ethereum',\n    },\n    {\n        path: ['m', `44'`, `118'`],\n        curve: 'secp256k1',\n        name: 'Atom',\n    },\n    {\n        path: ['m', `44'`, `145'`],\n        curve: 'secp256k1',\n        name: 'Bitcoin Cash',\n    },\n    {\n        path: ['m', `44'`, `637'`],\n        curve: 'ed25519',\n        name: 'Aptos',\n    },\n    {\n        path: ['m', `44'`, `714'`],\n        curve: 'secp256k1',\n        name: 'Binance (BNB)',\n    },\n    {\n        path: ['m', `44'`, `784'`],\n        curve: 'ed25519',\n        name: 'Sui',\n    },\n    {\n        path: ['m', `44'`, `931'`],\n        curve: 'secp256k1',\n        name: 'THORChain (RUNE)',\n    },\n    {\n        path: ['m', `44'`, `330'`],\n        curve: 'secp256k1',\n        name: 'Terra (LUNA)',\n    },\n    {\n        path: ['m', `44'`, `459'`],\n        curve: 'secp256k1',\n        name: 'Kava',\n    },\n    {\n        path: ['m', `44'`, `529'`],\n        curve: 'secp256k1',\n        name: 'Secret Network',\n    },\n    {\n        path: ['m', `44'`, `397'`, `0'`],\n        curve: 'ed25519',\n        name: 'NEAR Protocol',\n    },\n    {\n        path: ['m', `44'`, `1'`, `0'`],\n        curve: 'ed25519',\n        name: 'Testnet',\n    },\n    {\n        path: ['m', `44'`, `472'`],\n        curve: 'ed25519',\n        name: 'Arweave',\n    },\n    {\n        path: ['m', `44'`, `12586'`],\n        curve: 'secp256k1',\n        name: 'Mina',\n    },\n    {\n        path: ['m', `44'`, `242'`],\n        curve: 'ed25519',\n        name: 'Nimiq',\n    },\n    {\n        path: ['m', `44'`, `1729'`, `0'`, `0'`],\n        curve: 'ed25519',\n        name: 'Tezos',\n    },\n    {\n        path: ['m', `1789'`, `0'`],\n        curve: 'ed25519',\n        name: 'Vega',\n    },\n    {\n        path: ['m', `1852'`, `1815'`],\n        curve: 'ed25519Bip32',\n        name: 'Cardano',\n    },\n    {\n        path: ['m', `44'`, `508'`, `0'`, `0'`, `0'`],\n        curve: 'ed25519',\n        name: 'MultiversX',\n    },\n    {\n        path: ['m', `44'`, `709'`],\n        curve: 'secp256k1',\n        name: 'Avail',\n    },\n];\n/**\n * Gets the name of a derivation path supported by snaps.\n *\n * @param path - The derivation path.\n * @param curve - The curve used to derive the keys.\n * @returns The name of the derivation path, otherwise null.\n */\nfunction getSnapDerivationPathName(path, curve) {\n    const pathMetadata = exports.SNAPS_DERIVATION_PATHS.find((derivationPath) => derivationPath.curve === curve && (0, array_1.isEqual)(derivationPath.path, path));\n    if (pathMetadata) {\n        return pathMetadata.name;\n    }\n    // If the curve is secp256k1 and the path is a valid BIP44 path\n    // we try looking for the network/protocol name in SLIP44\n    if (curve === 'secp256k1' &&\n        path[0] === 'm' &&\n        path[1] === `44'` &&\n        path[2].endsWith(`'`)) {\n        const coinType = path[2].slice(0, -1);\n        return getSlip44ProtocolName(coinType) ?? null;\n    }\n    return null;\n}\nexports.getSnapDerivationPathName = getSnapDerivationPathName;\n/**\n * Gets the name of the SLIP-44 protocol corresponding to the specified\n * `coin_type`.\n *\n * @param coinType - The SLIP-44 `coin_type` value whose name\n * to retrieve.\n * @returns The name of the protocol, otherwise null.\n */\nfunction getSlip44ProtocolName(coinType) {\n    if (String(coinType) === '1') {\n        return 'Test Networks';\n    }\n    return slip44_1.default[coinType]?.name ?? null;\n}\nexports.getSlip44ProtocolName = getSlip44ProtocolName;\n//# sourceMappingURL=derivation-paths.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STATE_ENCRYPTION_MAGIC_VALUE = exports.SIP_6_MAGIC_VALUE = void 0;\n// 0xd36e6170 - 0x80000000\nexports.SIP_6_MAGIC_VALUE = `1399742832'`;\n// `${bytesToNumber(keccak256('Snaps state encryption').slice(0, 4))}'`\nexports.STATE_ENCRYPTION_MAGIC_VALUE = `572232532'`;\n//# sourceMappingURL=entropy.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _WrappedSnapError_error, _WrappedSnapError_message, _WrappedSnapError_stack;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unwrapError = exports.isWrappedSnapError = exports.isSerializedSnapError = exports.isSnapError = exports.WrappedSnapError = exports.SNAP_ERROR_WRAPPER_MESSAGE = exports.SNAP_ERROR_WRAPPER_CODE = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst utils_1 = require(\"@metamask/utils\");\nexports.SNAP_ERROR_WRAPPER_CODE = -31001;\nexports.SNAP_ERROR_WRAPPER_MESSAGE = 'Wrapped Snap Error';\nclass WrappedSnapError extends Error {\n    /**\n     * Create a new `WrappedSnapError`.\n     *\n     * @param error - The error to create the `WrappedSnapError` from.\n     */\n    constructor(error) {\n        const message = (0, snaps_sdk_1.getErrorMessage)(error);\n        super(message);\n        _WrappedSnapError_error.set(this, void 0);\n        _WrappedSnapError_message.set(this, void 0);\n        _WrappedSnapError_stack.set(this, void 0);\n        __classPrivateFieldSet(this, _WrappedSnapError_error, error, \"f\");\n        __classPrivateFieldSet(this, _WrappedSnapError_message, message, \"f\");\n        __classPrivateFieldSet(this, _WrappedSnapError_stack, (0, snaps_sdk_1.getErrorStack)(error), \"f\");\n    }\n    /**\n     * The error name.\n     *\n     * @returns The error name.\n     */\n    get name() {\n        return 'WrappedSnapError';\n    }\n    /**\n     * The error message.\n     *\n     * @returns The error message.\n     */\n    get message() {\n        return __classPrivateFieldGet(this, _WrappedSnapError_message, \"f\");\n    }\n    /**\n     * The error stack.\n     *\n     * @returns The error stack.\n     */\n    get stack() {\n        return __classPrivateFieldGet(this, _WrappedSnapError_stack, \"f\");\n    }\n    /**\n     * Convert the error to a JSON object.\n     *\n     * @returns The JSON object.\n     */\n    toJSON() {\n        const cause = isSnapError(__classPrivateFieldGet(this, _WrappedSnapError_error, \"f\"))\n            ? __classPrivateFieldGet(this, _WrappedSnapError_error, \"f\").serialize()\n            : (0, rpc_errors_1.serializeCause)(__classPrivateFieldGet(this, _WrappedSnapError_error, \"f\"));\n        return {\n            code: exports.SNAP_ERROR_WRAPPER_CODE,\n            message: exports.SNAP_ERROR_WRAPPER_MESSAGE,\n            data: {\n                cause,\n            },\n        };\n    }\n    /**\n     * Serialize the error to a JSON object. This is called by\n     * `@metamask/rpc-errors` when serializing the error.\n     *\n     * @returns The JSON object.\n     */\n    serialize() {\n        return this.toJSON();\n    }\n}\nexports.WrappedSnapError = WrappedSnapError;\n_WrappedSnapError_error = new WeakMap(), _WrappedSnapError_message = new WeakMap(), _WrappedSnapError_stack = new WeakMap();\n/**\n * Check if an object is a `SnapError`.\n *\n * @param error - The object to check.\n * @returns Whether the object is a `SnapError`.\n */\nfunction isSnapError(error) {\n    if ((0, utils_1.isObject)(error) &&\n        'serialize' in error &&\n        typeof error.serialize === 'function') {\n        const serialized = error.serialize();\n        return (0, utils_1.isJsonRpcError)(serialized) && isSerializedSnapError(serialized);\n    }\n    return false;\n}\nexports.isSnapError = isSnapError;\n/**\n * Check if a JSON-RPC error is a `SnapError`.\n *\n * @param error - The object to check.\n * @returns Whether the object is a `SnapError`.\n */\nfunction isSerializedSnapError(error) {\n    return error.code === snaps_sdk_1.SNAP_ERROR_CODE && error.message === snaps_sdk_1.SNAP_ERROR_MESSAGE;\n}\nexports.isSerializedSnapError = isSerializedSnapError;\n/**\n * Check if a JSON-RPC error is a `WrappedSnapError`.\n *\n * @param error - The object to check.\n * @returns Whether the object is a `WrappedSnapError`.\n */\nfunction isWrappedSnapError(error) {\n    return ((0, utils_1.isJsonRpcError)(error) &&\n        error.code === exports.SNAP_ERROR_WRAPPER_CODE &&\n        error.message === exports.SNAP_ERROR_WRAPPER_MESSAGE);\n}\nexports.isWrappedSnapError = isWrappedSnapError;\n/**\n * Get a JSON-RPC error with the given code, message, stack, and data.\n *\n * @param code - The error code.\n * @param message - The error message.\n * @param stack - The error stack.\n * @param data - Additional data for the error.\n * @returns The JSON-RPC error.\n */\nfunction getJsonRpcError(code, message, stack, data) {\n    const error = new rpc_errors_1.JsonRpcError(code, message, data);\n    error.stack = stack;\n    return error;\n}\n/**\n * Attempt to unwrap an unknown error to a `JsonRpcError`. This function will\n * try to get the error code, message, and data from the error, and return a\n * `JsonRpcError` with those properties.\n *\n * @param error - The error to unwrap.\n * @returns A tuple containing the unwrapped error and a boolean indicating\n * whether the error was handled.\n */\nfunction unwrapError(error) {\n    // This logic is a bit complicated, but it's necessary to handle all the\n    // different types of errors that can be thrown by a Snap.\n    // If the error is a wrapped Snap error, unwrap it.\n    if (isWrappedSnapError(error)) {\n        // The wrapped error can be a JSON-RPC error, or an unknown error. If it's\n        // a JSON-RPC error, we can unwrap it further.\n        if ((0, utils_1.isJsonRpcError)(error.data.cause)) {\n            // If the JSON-RPC error is a wrapped Snap error, unwrap it further.\n            if (isSerializedSnapError(error.data.cause)) {\n                const { code, message, stack, data } = error.data.cause.data.cause;\n                return [getJsonRpcError(code, message, stack, data), true];\n            }\n            // Otherwise, we use the original JSON-RPC error.\n            const { code, message, stack, data } = error.data.cause;\n            return [getJsonRpcError(code, message, stack, data), false];\n        }\n        // Otherwise, we throw an internal error with the wrapped error as the\n        // message.\n        return [\n            getJsonRpcError(rpc_errors_1.errorCodes.rpc.internal, (0, snaps_sdk_1.getErrorMessage)(error.data.cause), (0, snaps_sdk_1.getErrorStack)(error.data.cause)),\n            false,\n        ];\n    }\n    // The error can be a non-wrapped JSON-RPC error, in which case we can just\n    // re-throw it with the same code, message, and data.\n    if ((0, utils_1.isJsonRpcError)(error)) {\n        const { code, message, stack, data } = error;\n        return [getJsonRpcError(code, message, stack, data), false];\n    }\n    // If the error is not a wrapped error, we don't know how to handle it, so we\n    // throw an internal error with the error as the message.\n    return [\n        getJsonRpcError(rpc_errors_1.errorCodes.rpc.internal, (0, snaps_sdk_1.getErrorMessage)(error), (0, snaps_sdk_1.getErrorStack)(error)),\n        false,\n    ];\n}\nexports.unwrapError = unwrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SNAP_EXPORT_NAMES = exports.HandlerType = void 0;\nvar HandlerType;\n(function (HandlerType) {\n    HandlerType[\"OnRpcRequest\"] = \"onRpcRequest\";\n    HandlerType[\"OnSignature\"] = \"onSignature\";\n    HandlerType[\"OnTransaction\"] = \"onTransaction\";\n    HandlerType[\"OnCronjob\"] = \"onCronjob\";\n    HandlerType[\"OnInstall\"] = \"onInstall\";\n    HandlerType[\"OnUpdate\"] = \"onUpdate\";\n    HandlerType[\"OnNameLookup\"] = \"onNameLookup\";\n    HandlerType[\"OnKeyringRequest\"] = \"onKeyringRequest\";\n    HandlerType[\"OnHomePage\"] = \"onHomePage\";\n    HandlerType[\"OnUserInput\"] = \"onUserInput\";\n})(HandlerType || (exports.HandlerType = HandlerType = {}));\nexports.SNAP_EXPORT_NAMES = Object.values(HandlerType);\n//# sourceMappingURL=handler-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OnNameLookupResponseStruct = exports.DomainResolutionResponseStruct = exports.AddressResolutionResponseStruct = exports.DomainResolutionStruct = exports.AddressResolutionStruct = exports.OnHomePageResponseStruct = exports.OnHomePageResponseWithIdStruct = exports.OnHomePageResponseWithContentStruct = exports.OnSignatureResponseStruct = exports.OnTransactionResponseStruct = exports.OnTransactionResponseWithContentStruct = exports.OnTransactionResponseWithIdStruct = exports.OnTransactionSeverityResponseStruct = exports.SNAP_EXPORTS = void 0;\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst handler_types_1 = require(\"./handler-types.cjs\");\nexports.SNAP_EXPORTS = {\n    [handler_types_1.HandlerType.OnRpcRequest]: {\n        type: handler_types_1.HandlerType.OnRpcRequest,\n        required: true,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnTransaction]: {\n        type: handler_types_1.HandlerType.OnTransaction,\n        required: true,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnCronjob]: {\n        type: handler_types_1.HandlerType.OnCronjob,\n        required: true,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnNameLookup]: {\n        type: handler_types_1.HandlerType.OnNameLookup,\n        required: true,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnInstall]: {\n        type: handler_types_1.HandlerType.OnInstall,\n        required: false,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnUpdate]: {\n        type: handler_types_1.HandlerType.OnUpdate,\n        required: false,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnKeyringRequest]: {\n        type: handler_types_1.HandlerType.OnKeyringRequest,\n        required: true,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnHomePage]: {\n        type: handler_types_1.HandlerType.OnHomePage,\n        required: true,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnSignature]: {\n        type: handler_types_1.HandlerType.OnSignature,\n        required: true,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n    [handler_types_1.HandlerType.OnUserInput]: {\n        type: handler_types_1.HandlerType.OnUserInput,\n        required: false,\n        validator: (snapExport) => {\n            return typeof snapExport === 'function';\n        },\n    },\n};\nexports.OnTransactionSeverityResponseStruct = (0, superstruct_1.object)({\n    severity: (0, superstruct_1.optional)((0, superstruct_1.literal)(snaps_sdk_1.SeverityLevel.Critical)),\n});\nexports.OnTransactionResponseWithIdStruct = (0, superstruct_1.assign)(exports.OnTransactionSeverityResponseStruct, (0, superstruct_1.object)({\n    id: (0, superstruct_1.string)(),\n}));\nexports.OnTransactionResponseWithContentStruct = (0, superstruct_1.assign)(exports.OnTransactionSeverityResponseStruct, (0, superstruct_1.object)({\n    content: snaps_sdk_1.ComponentOrElementStruct,\n}));\nexports.OnTransactionResponseStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([\n    exports.OnTransactionResponseWithContentStruct,\n    exports.OnTransactionResponseWithIdStruct,\n]));\nexports.OnSignatureResponseStruct = exports.OnTransactionResponseStruct;\nexports.OnHomePageResponseWithContentStruct = (0, superstruct_1.object)({\n    content: snaps_sdk_1.ComponentOrElementStruct,\n});\nexports.OnHomePageResponseWithIdStruct = (0, superstruct_1.object)({\n    id: (0, superstruct_1.string)(),\n});\nexports.OnHomePageResponseStruct = (0, superstruct_1.union)([\n    exports.OnHomePageResponseWithContentStruct,\n    exports.OnHomePageResponseWithIdStruct,\n]);\nexports.AddressResolutionStruct = (0, superstruct_1.object)({\n    protocol: (0, superstruct_1.string)(),\n    resolvedDomain: (0, superstruct_1.string)(),\n});\nexports.DomainResolutionStruct = (0, superstruct_1.object)({\n    protocol: (0, superstruct_1.string)(),\n    resolvedAddress: (0, superstruct_1.string)(),\n    domainName: (0, superstruct_1.string)(),\n});\nexports.AddressResolutionResponseStruct = (0, superstruct_1.object)({\n    resolvedDomains: (0, superstruct_1.size)((0, superstruct_1.array)(exports.AddressResolutionStruct), 1, Infinity),\n});\nexports.DomainResolutionResponseStruct = (0, superstruct_1.object)({\n    resolvedAddresses: (0, superstruct_1.size)((0, superstruct_1.array)(exports.DomainResolutionStruct), 1, Infinity),\n});\nexports.OnNameLookupResponseStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([exports.AddressResolutionResponseStruct, exports.DomainResolutionResponseStruct]));\n//# sourceMappingURL=handlers.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSvgDimensions = exports.assertIsSnapIcon = exports.SVG_MAX_BYTE_SIZE_TEXT = exports.SVG_MAX_BYTE_SIZE = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst svg_1 = require(\"./svg.cjs\");\nexports.SVG_MAX_BYTE_SIZE = 100000;\nexports.SVG_MAX_BYTE_SIZE_TEXT = `${Math.floor(exports.SVG_MAX_BYTE_SIZE / 1000)}kb`;\n/**\n * Assert that a virtual file containing a Snap icon is valid.\n *\n * @param icon - A virtual file containing a Snap icon.\n */\nfunction assertIsSnapIcon(icon) {\n    (0, utils_1.assert)(icon.path.endsWith('.svg'), 'Expected snap icon to end in \".svg\".');\n    const byteLength = typeof icon.value === 'string'\n        ? (0, utils_1.stringToBytes)(icon.value).byteLength\n        : icon.value.byteLength;\n    (0, utils_1.assert)(byteLength <= exports.SVG_MAX_BYTE_SIZE, `The specified SVG icon exceeds the maximum size of ${exports.SVG_MAX_BYTE_SIZE_TEXT}.`);\n    (0, utils_1.assert)((0, svg_1.isSvg)(icon.toString()), 'Snap icon must be a valid SVG.');\n}\nexports.assertIsSnapIcon = assertIsSnapIcon;\n/**\n * Extract the dimensions of an image from an SVG string if possible.\n *\n * @param svg - An SVG string.\n * @returns The height and width of the SVG or null.\n */\nfunction getSvgDimensions(svg) {\n    try {\n        const parsed = (0, svg_1.parseSvg)(svg);\n        const height = parsed['@_height'];\n        const width = parsed['@_width'];\n        if (height && width) {\n            return { height, width };\n        }\n        const viewBox = parsed['@_viewBox'];\n        if (viewBox) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_minX, _minY, viewBoxWidth, viewBoxHeight] = viewBox.split(' ');\n            if (viewBoxWidth && viewBoxHeight) {\n                const parsedWidth = parseInt(viewBoxWidth, 10);\n                const parsedHeight = parseInt(viewBoxHeight, 10);\n                (0, utils_1.assert)(Number.isInteger(parsedWidth) && parsedWidth > 0);\n                (0, utils_1.assert)(Number.isInteger(parsedHeight) && parsedHeight > 0);\n                return {\n                    width: parsedWidth,\n                    height: parsedHeight,\n                };\n            }\n        }\n    }\n    catch {\n        throw new Error('Snap icon must be a valid SVG.');\n    }\n    return null;\n}\nexports.getSvgDimensions = getSvgDimensions;\n//# sourceMappingURL=icon.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWindow = void 0;\n/**\n * Creates the iframe to be used as the execution environment. This may run\n * forever if the iframe never loads, but the promise should be wrapped in\n * an initialization timeout in the SnapController.\n *\n * @param uri - The iframe URI.\n * @param id - The ID to assign to the iframe.\n * @param sandbox - Whether to enable the sandbox attribute.\n * @returns A promise that resolves to the contentWindow of the iframe.\n */\nasync function createWindow(uri, id, sandbox = true) {\n    return await new Promise((resolve, reject) => {\n        const iframe = document.createElement('iframe');\n        // The order of operations appears to matter for everything except this\n        // attribute. We may as well set it here.\n        iframe.setAttribute('id', id);\n        iframe.setAttribute('data-testid', 'snaps-iframe');\n        if (sandbox) {\n            // For the sandbox property to have any effect it needs to be set before the iframe is appended.\n            // We apply this property as a principle of least authority (POLA)\n            // measure.\n            // Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n            iframe.setAttribute('sandbox', 'allow-scripts');\n        }\n        // In the past, we've had problems that appear to be symptomatic of the\n        // iframe firing the `load` event before its scripts are actually loaded,\n        // which has prevented snaps from executing properly. Therefore, we set\n        // the `src` attribute and append the iframe to the DOM before attaching\n        // the `load` listener.\n        //\n        // `load` should only fire when \"all dependent resources\" have been\n        // loaded, which includes scripts.\n        //\n        // MDN article for `load` event: https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n        // Re: `load` firing twice: https://stackoverflow.com/questions/10781880/dynamically-created-iframe-triggers-onload-event-twice/15880489#15880489\n        iframe.setAttribute('src', uri);\n        document.body.appendChild(iframe);\n        iframe.addEventListener('load', () => {\n            if (iframe.contentWindow) {\n                resolve(iframe.contentWindow);\n            }\n            else {\n                // We don't know of a case when this would happen, but better to fail\n                // fast if it does.\n                reject(new Error(`iframe.contentWindow not present on load for job \"${id}\".`));\n            }\n        });\n    });\n}\nexports.createWindow = createWindow;\n//# sourceMappingURL=iframe.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./array.cjs\"), exports);\n__exportStar(require(\"./auxiliary-files.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caveats.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./constants.cjs\"), exports);\n__exportStar(require(\"./cronjob.cjs\"), exports);\n__exportStar(require(\"./deep-clone.cjs\"), exports);\n__exportStar(require(\"./default-endowments.cjs\"), exports);\n__exportStar(require(\"./derivation-paths.cjs\"), exports);\n__exportStar(require(\"./entropy.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./handlers.cjs\"), exports);\n__exportStar(require(\"./handler-types.cjs\"), exports);\n__exportStar(require(\"./iframe.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./json-rpc.cjs\"), exports);\n__exportStar(require(\"./localization.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./manifest/index.cjs\"), exports);\n__exportStar(require(\"./namespace.cjs\"), exports);\n__exportStar(require(\"./path.cjs\"), exports);\n__exportStar(require(\"./snaps.cjs\"), exports);\n__exportStar(require(\"./strings.cjs\"), exports);\n__exportStar(require(\"./structs.cjs\"), exports);\n__exportStar(require(\"./types.cjs\"), exports);\n__exportStar(require(\"./ui.cjs\"), exports);\n__exportStar(require(\"./validation.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n__exportStar(require(\"./virtual-file/index.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsJsonRpcSuccess = exports.isOriginAllowed = exports.assertIsKeyringOrigins = exports.KeyringOriginsStruct = exports.assertIsRpcOrigins = exports.RpcOriginsStruct = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst AllowedOriginsStruct = (0, superstruct_1.array)((0, superstruct_1.refine)((0, superstruct_1.string)(), 'Allowed origin', (value) => {\n    const wildcards = value.split('*').length - 1;\n    if (wildcards > 2) {\n        return 'No more than two wildcards (\"*\") are allowed in an origin specifier.';\n    }\n    return true;\n}));\nexports.RpcOriginsStruct = (0, superstruct_1.refine)((0, superstruct_1.object)({\n    dapps: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n    snaps: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n    allowedOrigins: (0, superstruct_1.optional)(AllowedOriginsStruct),\n}), 'RPC origins', (value) => {\n    const hasOrigins = Boolean(value.snaps === true ||\n        value.dapps === true ||\n        (value.allowedOrigins && value.allowedOrigins.length > 0));\n    if (hasOrigins) {\n        return true;\n    }\n    return 'Must specify at least one JSON-RPC origin.';\n});\n/**\n * Asserts that the given value is a valid {@link RpcOrigins} object.\n *\n * @param value - The value to assert.\n * @param ErrorWrapper - An optional error wrapper to use. Defaults to\n * {@link AssertionError}.\n * @throws If the value is not a valid {@link RpcOrigins} object.\n */\nfunction assertIsRpcOrigins(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, utils_1.assertStruct)(value, exports.RpcOriginsStruct, 'Invalid JSON-RPC origins', ErrorWrapper);\n}\nexports.assertIsRpcOrigins = assertIsRpcOrigins;\nexports.KeyringOriginsStruct = (0, superstruct_1.object)({\n    allowedOrigins: (0, superstruct_1.optional)(AllowedOriginsStruct),\n});\n/**\n * Assert that the given value is a valid {@link KeyringOrigins} object.\n *\n * @param value - The value to assert.\n * @param ErrorWrapper - An optional error wrapper to use. Defaults to\n * {@link AssertionError}.\n * @throws If the value is not a valid {@link KeyringOrigins} object.\n */\nfunction assertIsKeyringOrigins(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, utils_1.assertStruct)(value, exports.KeyringOriginsStruct, 'Invalid keyring origins', ErrorWrapper);\n}\nexports.assertIsKeyringOrigins = assertIsKeyringOrigins;\n/**\n * Create regular expression for matching against an origin while allowing wildcards.\n *\n * The \"*\" symbol is treated as a wildcard and will match 0 or more characters.\n *\n * @param matcher - The string to create the regular expression with.\n * @returns The regular expression.\n */\nfunction createOriginRegExp(matcher) {\n    // Escape potential Regex characters\n    const escaped = matcher.replace(/[.*+?^${}()|[\\]\\\\]/gu, '\\\\$&');\n    // Support wildcards\n    const regex = escaped.replace(/\\\\\\*/gu, '.*');\n    return RegExp(`${regex}$`, 'u');\n}\n/**\n * Check whether an origin is allowed or not using a matcher string.\n *\n * The matcher string may be a specific origin to match or include wildcards.\n * The \"*\" symbol is treated as a wildcard and will match 0 or more characters.\n * Note: this means that https://*metamask.io matches both https://metamask.io\n * and https://snaps.metamask.io.\n *\n * @param matcher - The matcher string.\n * @param origin - The origin.\n * @returns Whether the origin is allowed.\n */\nfunction checkAllowedOrigin(matcher, origin) {\n    // If the matcher is a single wildcard or identical to the origin we can return true immediately.\n    if (matcher === '*' || matcher === origin) {\n        return true;\n    }\n    const regex = createOriginRegExp(matcher);\n    return regex.test(origin);\n}\n/**\n * Check if the given origin is allowed by the given JSON-RPC origins object.\n *\n * @param origins - The JSON-RPC origins object.\n * @param subjectType - The type of the origin.\n * @param origin - The origin to check.\n * @returns Whether the origin is allowed.\n */\nfunction isOriginAllowed(origins, subjectType, origin) {\n    // The MetaMask client is always allowed.\n    if (origin === 'metamask') {\n        return true;\n    }\n    // If the origin is in the `allowedOrigins` list, it is allowed.\n    if (origins.allowedOrigins?.some((matcher) => checkAllowedOrigin(matcher, origin))) {\n        return true;\n    }\n    // If the origin is a website and `dapps` is true, it is allowed.\n    if (subjectType === permission_controller_1.SubjectType.Website && origins.dapps) {\n        return true;\n    }\n    // If the origin is a snap and `snaps` is true, it is allowed.\n    return Boolean(subjectType === permission_controller_1.SubjectType.Snap && origins.snaps);\n}\nexports.isOriginAllowed = isOriginAllowed;\n/**\n * Assert that the given value is a successful JSON-RPC response. If the value\n * is not a success response, an error is thrown. If the value is an JSON-RPC\n * error, the error message is included in the thrown error.\n *\n * @param value - The value to check.\n * @throws If the value is not a JSON-RPC success response.\n */\nfunction assertIsJsonRpcSuccess(value) {\n    if (!(0, utils_1.isJsonRpcSuccess)(value)) {\n        if ((0, utils_1.isJsonRpcFailure)(value)) {\n            throw new Error(`JSON-RPC request failed: ${value.error.message}`);\n        }\n        throw new Error('Invalid JSON-RPC response.');\n    }\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n//# sourceMappingURL=json-rpc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonSizeUnsafe = exports.parseJson = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n// TODO: Upstream this to @metamask/utils\n/**\n * Parse JSON safely.\n *\n * Does multiple kinds of validation and strips unwanted properties like\n * `__proto__` and `constructor`.\n *\n * @param json - A JSON string to be parsed.\n * @returns The parsed JSON object.\n * @template Type - The type of the JSON object. The type is not actually\n * checked, but it is used to infer the return type.\n */\nfunction parseJson(json) {\n    return (0, utils_1.getSafeJson)(JSON.parse(json));\n}\nexports.parseJson = parseJson;\n/**\n * Get the size of a JSON blob without validating that is valid JSON.\n *\n * This may sometimes be preferred over `getJsonSize` for performance reasons.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSizeUnsafe(value) {\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSizeUnsafe = getJsonSizeUnsafe;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSnapManifestLocalizations = exports.getLocalizedSnapManifest = exports.translate = exports.TRANSLATION_REGEX = exports.getLocalizationFile = exports.getValidatedLocalizationFiles = exports.LocalizationFileStruct = exports.LOCALIZABLE_FIELDS = void 0;\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst json_1 = require(\"./json.cjs\");\nexports.LOCALIZABLE_FIELDS = ['description', 'proposedName'];\nexports.LocalizationFileStruct = (0, superstruct_1.object)({\n    locale: (0, superstruct_1.string)(),\n    messages: (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.object)({\n        message: (0, superstruct_1.string)(),\n        description: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n    })),\n});\n/**\n * Validate a list of localization files.\n *\n * @param localizationFiles - The localization files to validate.\n * @returns The validated localization files.\n * @throws If any of the files are considered invalid.\n */\nfunction getValidatedLocalizationFiles(localizationFiles) {\n    for (const file of localizationFiles) {\n        try {\n            file.result = (0, superstruct_1.create)((0, json_1.parseJson)(file.toString()), exports.LocalizationFileStruct);\n        }\n        catch (error) {\n            if (error instanceof superstruct_1.StructError) {\n                throw new Error(`Failed to validate localization file \"${file.path}\": ${error.message}.`);\n            }\n            if (error instanceof SyntaxError) {\n                throw new Error(`Failed to parse localization file \"${file.path}\" as JSON.`);\n            }\n            throw error;\n        }\n    }\n    return localizationFiles;\n}\nexports.getValidatedLocalizationFiles = getValidatedLocalizationFiles;\n/**\n * Get the localization file for a given locale. If the locale is not found,\n * the English localization file will be returned.\n *\n * @param locale - The locale to use.\n * @param localizationFiles - The localization files to use.\n * @returns The localization file, or `undefined` if no localization file was\n * found.\n */\nfunction getLocalizationFile(locale, localizationFiles) {\n    const file = localizationFiles.find((localizationFile) => localizationFile.locale === locale);\n    if (!file) {\n        return localizationFiles.find((localizationFile) => localizationFile.locale === 'en');\n    }\n    return file;\n}\nexports.getLocalizationFile = getLocalizationFile;\nexports.TRANSLATION_REGEX = /\\{\\{\\s?([a-zA-Z0-9-_\\s]+)\\s?\\}\\}/gu;\n/**\n * Translate a string using a localization file. This will replace all instances\n * of `{{key}}` with the localized version of `key`.\n *\n * @param value - The string to translate.\n * @param file - The localization file to use, or `undefined` if no localization\n * file was found.\n * @returns The translated string.\n * @throws If the string contains a key that is not present in the localization\n * file, or if no localization file was found.\n */\nfunction translate(value, file) {\n    const matches = value.matchAll(exports.TRANSLATION_REGEX);\n    const array = Array.from(matches);\n    return array.reduce((result, [match, key]) => {\n        if (!file) {\n            throw new Error(`Failed to translate \"${value}\": No localization file found.`);\n        }\n        const translation = file.messages[key.trim()];\n        if (!translation) {\n            throw new Error(`Failed to translate \"${value}\": No translation found for \"${key.trim()}\" in \"${file.locale}\" file.`);\n        }\n        return result.replace(match, translation.message);\n    }, value);\n}\nexports.translate = translate;\n/**\n * Get the localized Snap manifest for a given locale. This will replace all\n * localized strings in the manifest with the localized version.\n *\n * @param snapManifest - The Snap manifest to localize.\n * @param locale - The locale to use.\n * @param localizationFiles - The localization files to use.\n * @returns The localized Snap manifest.\n */\nfunction getLocalizedSnapManifest(snapManifest, locale, localizationFiles) {\n    const file = getLocalizationFile(locale, localizationFiles);\n    return exports.LOCALIZABLE_FIELDS.reduce((manifest, field) => {\n        const translation = translate(manifest[field], file);\n        return {\n            ...manifest,\n            [field]: translation,\n        };\n    }, snapManifest);\n}\nexports.getLocalizedSnapManifest = getLocalizedSnapManifest;\n/**\n * Validate the localization files for a Snap manifest.\n *\n * @param snapManifest - The Snap manifest to validate.\n * @param localizationFiles - The localization files to validate.\n * @throws If the manifest cannot be localized.\n */\nfunction validateSnapManifestLocalizations(snapManifest, localizationFiles) {\n    try {\n        // `translate` throws if the manifest cannot be localized, so we just attempt\n        // to translate the manifest using all localization files.\n        localizationFiles\n            .filter((file) => file.locale !== 'en')\n            .forEach((file) => {\n            getLocalizedSnapManifest(snapManifest, file.locale, localizationFiles);\n        });\n        // The manifest must be localizable in English.\n        getLocalizedSnapManifest(snapManifest, 'en', localizationFiles);\n    }\n    catch (error) {\n        throw new Error(`Failed to localize Snap manifest: ${(0, snaps_sdk_1.getErrorMessage)(error)}`);\n    }\n}\nexports.validateSnapManifestLocalizations = validateSnapManifestLocalizations;\n//# sourceMappingURL=localization.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logWarning = exports.logError = exports.logInfo = exports.snapsLogger = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n// The global logger used across the monorepo. Other projects should use this\n// to create a module logger.\nexports.snapsLogger = (0, utils_1.createProjectLogger)('snaps');\n/**\n * Log a message. Currently, this is just a wrapper around `console.log`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param message - The message to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nfunction logInfo(message, ...optionalParams) {\n    // eslint-disable-next-line no-console\n    console.log(message, ...optionalParams);\n}\nexports.logInfo = logInfo;\n/**\n * Log an error. Currently, this is just a wrapper around `console.error`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * These logs should always be visible, without requiring the user to enable\n * verbose logging (like setting a `DEBUG` environment variable), as they are\n * important for debugging snaps.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param error - The error to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nfunction logError(error, ...optionalParams) {\n    // eslint-disable-next-line no-console\n    console.error(error, ...optionalParams);\n}\nexports.logError = logError;\n/**\n * Log a warning. Currently, this is just a wrapper around `console.warn`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * These logs should always be visible, without requiring the user to enable\n * verbose logging (like setting a `DEBUG` environment variable), as they are\n * important for debugging snaps.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param message - The message to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nfunction logWarning(message, ...optionalParams) {\n    // eslint-disable-next-line no-console\n    console.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./validation.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSnapManifest = exports.assertIsSnapManifest = exports.isSnapManifest = exports.SnapManifestStruct = exports.InitialConnectionsStruct = exports.SnapAuxilaryFilesStruct = exports.PermissionsStruct = exports.EmptyObjectStruct = exports.HandlerCaveatsStruct = exports.MaxRequestTimeStruct = exports.MAXIMUM_REQUEST_TIMEOUT = exports.MINIMUM_REQUEST_TIMEOUT = exports.LookupMatchersStruct = exports.ChainIdsStruct = exports.SnapIdsStruct = exports.SemVerRangeStruct = exports.SnapGetBip32EntropyPermissionsStruct = exports.Bip32EntropyStruct = exports.CurveStruct = exports.bip32entropy = exports.Bip32PathStruct = exports.FORBIDDEN_COIN_TYPES = void 0;\nconst key_tree_1 = require(\"@metamask/key-tree\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst array_1 = require(\"../array.cjs\");\nconst cronjob_1 = require(\"../cronjob.cjs\");\nconst entropy_1 = require(\"../entropy.cjs\");\nconst json_rpc_1 = require(\"../json-rpc.cjs\");\nconst namespace_1 = require(\"../namespace.cjs\");\nconst snaps_1 = require(\"../snaps.cjs\");\nconst structs_1 = require(\"../structs.cjs\");\nconst types_1 = require(\"../types.cjs\");\n// BIP-43 purposes that cannot be used for entropy derivation. These are in the\n// string form, ending with `'`.\nconst FORBIDDEN_PURPOSES = [\n    entropy_1.SIP_6_MAGIC_VALUE,\n    entropy_1.STATE_ENCRYPTION_MAGIC_VALUE,\n];\nexports.FORBIDDEN_COIN_TYPES = [60];\nconst FORBIDDEN_PATHS = exports.FORBIDDEN_COIN_TYPES.map((coinType) => [\n    'm',\n    \"44'\",\n    `${coinType}'`,\n]);\nexports.Bip32PathStruct = (0, superstruct_1.refine)((0, superstruct_1.array)((0, superstruct_1.string)()), 'BIP-32 path', (path) => {\n    if (path.length === 0) {\n        return 'Path must be a non-empty BIP-32 derivation path array';\n    }\n    if (path[0] !== 'm') {\n        return 'Path must start with \"m\".';\n    }\n    if (path.length < 3) {\n        return 'Paths must have a length of at least three.';\n    }\n    if (path.slice(1).some((part) => !(0, key_tree_1.isValidBIP32PathSegment)(part))) {\n        return 'Path must be a valid BIP-32 derivation path array.';\n    }\n    if (FORBIDDEN_PURPOSES.includes(path[1])) {\n        return `The purpose \"${path[1]}\" is not allowed for entropy derivation.`;\n    }\n    if (FORBIDDEN_PATHS.some((forbiddenPath) => (0, array_1.isEqual)(path.slice(0, forbiddenPath.length), forbiddenPath))) {\n        return `The path \"${path.join('/')}\" is not allowed for entropy derivation.`;\n    }\n    return true;\n});\nconst bip32entropy = (struct) => (0, superstruct_1.refine)(struct, 'BIP-32 entropy', (value) => {\n    if (value.curve === 'ed25519' &&\n        value.path.slice(1).some((part) => !part.endsWith(\"'\"))) {\n        return 'Ed25519 does not support unhardened paths.';\n    }\n    return true;\n});\nexports.bip32entropy = bip32entropy;\nexports.CurveStruct = (0, superstruct_1.enums)([\n    'ed25519',\n    'secp256k1',\n    'ed25519Bip32',\n]);\n// Used outside @metamask/snap-utils\nexports.Bip32EntropyStruct = (0, exports.bip32entropy)((0, superstruct_1.type)({\n    path: exports.Bip32PathStruct,\n    curve: exports.CurveStruct,\n}));\nexports.SnapGetBip32EntropyPermissionsStruct = (0, superstruct_1.size)((0, superstruct_1.array)(exports.Bip32EntropyStruct), 1, Infinity);\nexports.SemVerRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'SemVer range', (value) => {\n    if ((0, utils_1.isValidSemVerRange)(value)) {\n        return true;\n    }\n    return 'Expected a valid SemVer range.';\n});\nexports.SnapIdsStruct = (0, superstruct_1.refine)((0, superstruct_1.record)(snaps_1.SnapIdStruct, (0, superstruct_1.object)({ version: (0, superstruct_1.optional)(exports.SemVerRangeStruct) })), 'SnapIds', (value) => {\n    if (Object.keys(value).length === 0) {\n        return false;\n    }\n    return true;\n});\nexports.ChainIdsStruct = (0, superstruct_1.size)((0, superstruct_1.array)(namespace_1.ChainIdStruct), 1, Infinity);\nexports.LookupMatchersStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.object)({\n        tlds: (0, superstruct_1.size)((0, superstruct_1.array)((0, superstruct_1.string)()), 1, Infinity),\n    }),\n    (0, superstruct_1.object)({\n        schemes: (0, superstruct_1.size)((0, superstruct_1.array)((0, superstruct_1.string)()), 1, Infinity),\n    }),\n    (0, superstruct_1.object)({\n        tlds: (0, superstruct_1.size)((0, superstruct_1.array)((0, superstruct_1.string)()), 1, Infinity),\n        schemes: (0, superstruct_1.size)((0, superstruct_1.array)((0, superstruct_1.string)()), 1, Infinity),\n    }),\n]);\nexports.MINIMUM_REQUEST_TIMEOUT = (0, utils_1.inMilliseconds)(5, utils_1.Duration.Second);\nexports.MAXIMUM_REQUEST_TIMEOUT = (0, utils_1.inMilliseconds)(3, utils_1.Duration.Minute);\nexports.MaxRequestTimeStruct = (0, superstruct_1.size)((0, superstruct_1.integer)(), exports.MINIMUM_REQUEST_TIMEOUT, exports.MAXIMUM_REQUEST_TIMEOUT);\n// Utility type to union with for all handler structs\nexports.HandlerCaveatsStruct = (0, superstruct_1.object)({\n    maxRequestTime: (0, superstruct_1.optional)(exports.MaxRequestTimeStruct),\n});\nexports.EmptyObjectStruct = (0, superstruct_1.object)({});\n/* eslint-disable @typescript-eslint/naming-convention */\nexports.PermissionsStruct = (0, superstruct_1.type)({\n    'endowment:cronjob': (0, superstruct_1.optional)((0, structs_1.mergeStructs)(exports.HandlerCaveatsStruct, (0, superstruct_1.object)({ jobs: cronjob_1.CronjobSpecificationArrayStruct }))),\n    'endowment:ethereum-provider': (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    'endowment:keyring': (0, superstruct_1.optional)((0, structs_1.mergeStructs)(exports.HandlerCaveatsStruct, json_rpc_1.KeyringOriginsStruct)),\n    'endowment:lifecycle-hooks': (0, superstruct_1.optional)(exports.HandlerCaveatsStruct),\n    'endowment:name-lookup': (0, superstruct_1.optional)((0, structs_1.mergeStructs)(exports.HandlerCaveatsStruct, (0, superstruct_1.object)({\n        chains: (0, superstruct_1.optional)(exports.ChainIdsStruct),\n        matchers: (0, superstruct_1.optional)(exports.LookupMatchersStruct),\n    }))),\n    'endowment:network-access': (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    'endowment:page-home': (0, superstruct_1.optional)(exports.HandlerCaveatsStruct),\n    'endowment:rpc': (0, superstruct_1.optional)((0, structs_1.mergeStructs)(exports.HandlerCaveatsStruct, json_rpc_1.RpcOriginsStruct)),\n    'endowment:signature-insight': (0, superstruct_1.optional)((0, structs_1.mergeStructs)(exports.HandlerCaveatsStruct, (0, superstruct_1.object)({\n        allowSignatureOrigin: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n    }))),\n    'endowment:transaction-insight': (0, superstruct_1.optional)((0, structs_1.mergeStructs)(exports.HandlerCaveatsStruct, (0, superstruct_1.object)({\n        allowTransactionOrigin: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),\n    }))),\n    'endowment:webassembly': (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    snap_dialog: (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    snap_manageState: (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    snap_manageAccounts: (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    snap_notify: (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    snap_getBip32Entropy: (0, superstruct_1.optional)(exports.SnapGetBip32EntropyPermissionsStruct),\n    snap_getBip32PublicKey: (0, superstruct_1.optional)(exports.SnapGetBip32EntropyPermissionsStruct),\n    snap_getBip44Entropy: (0, superstruct_1.optional)((0, superstruct_1.size)((0, superstruct_1.array)((0, superstruct_1.object)({ coinType: (0, superstruct_1.size)((0, superstruct_1.integer)(), 0, 2 ** 32 - 1) })), 1, Infinity)),\n    snap_getEntropy: (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    snap_getLocale: (0, superstruct_1.optional)(exports.EmptyObjectStruct),\n    wallet_snap: (0, superstruct_1.optional)(exports.SnapIdsStruct),\n});\nexports.SnapAuxilaryFilesStruct = (0, superstruct_1.array)((0, superstruct_1.string)());\nexports.InitialConnectionsStruct = (0, superstruct_1.record)((0, superstruct_1.intersection)([(0, superstruct_1.string)(), (0, types_1.uri)()]), (0, superstruct_1.object)({}));\nexports.SnapManifestStruct = (0, superstruct_1.object)({\n    version: utils_1.VersionStruct,\n    description: (0, superstruct_1.size)((0, superstruct_1.string)(), 1, 280),\n    proposedName: (0, superstruct_1.size)((0, superstruct_1.string)(), 1, 214),\n    repository: (0, superstruct_1.optional)((0, superstruct_1.object)({\n        type: (0, superstruct_1.size)((0, superstruct_1.string)(), 1, Infinity),\n        url: (0, superstruct_1.size)((0, superstruct_1.string)(), 1, Infinity),\n    })),\n    source: (0, superstruct_1.object)({\n        shasum: utils_1.ChecksumStruct,\n        location: (0, superstruct_1.object)({\n            npm: (0, superstruct_1.object)({\n                filePath: (0, superstruct_1.size)((0, superstruct_1.string)(), 1, Infinity),\n                iconPath: (0, superstruct_1.optional)((0, superstruct_1.size)((0, superstruct_1.string)(), 1, Infinity)),\n                packageName: types_1.NameStruct,\n                registry: (0, superstruct_1.union)([\n                    (0, superstruct_1.literal)('https://registry.npmjs.org'),\n                    (0, superstruct_1.literal)('https://registry.npmjs.org/'),\n                ]),\n            }),\n        }),\n        files: (0, superstruct_1.optional)(exports.SnapAuxilaryFilesStruct),\n        locales: (0, superstruct_1.optional)(exports.SnapAuxilaryFilesStruct),\n    }),\n    initialConnections: (0, superstruct_1.optional)(exports.InitialConnectionsStruct),\n    initialPermissions: exports.PermissionsStruct,\n    manifestVersion: (0, superstruct_1.literal)('0.1'),\n    $schema: (0, superstruct_1.optional)((0, superstruct_1.string)()), // enables JSON-Schema linting in VSC and other IDEs\n});\n/**\n * Check if the given value is a valid {@link SnapManifest} object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link SnapManifest} object.\n */\nfunction isSnapManifest(value) {\n    return (0, superstruct_1.is)(value, exports.SnapManifestStruct);\n}\nexports.isSnapManifest = isSnapManifest;\n/**\n * Assert that the given value is a valid {@link SnapManifest} object.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid {@link SnapManifest} object.\n */\nfunction assertIsSnapManifest(value) {\n    (0, utils_1.assertStruct)(value, exports.SnapManifestStruct, `\"${types_1.NpmSnapFileNames.Manifest}\" is invalid`);\n}\nexports.assertIsSnapManifest = assertIsSnapManifest;\n/**\n * Creates a {@link SnapManifest} object from JSON.\n *\n * @param value - The value to check.\n * @throws If the value cannot be coerced to a {@link SnapManifest} object.\n * @returns The created {@link SnapManifest} object.\n */\nfunction createSnapManifest(value) {\n    // TODO: Add a utility to prefix these errors similar to assertStruct\n    return (0, superstruct_1.create)(value, exports.SnapManifestStruct);\n}\nexports.createSnapManifest = createSnapManifest;\n//# sourceMappingURL=validation.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNamespace = exports.isAccountIdArray = exports.isAccountId = exports.isChainId = exports.isNamespaceId = exports.NamespaceIdStruct = exports.NamespaceStruct = exports.ChainStruct = exports.AccountAddressStruct = exports.AccountIdArrayStruct = exports.AccountIdStruct = exports.ChainIdStruct = exports.ChainIdStringStruct = exports.LimitedString = exports.parseAccountId = exports.parseChainId = exports.ACCOUNT_ADDRESS_REGEX = exports.ACCOUNT_ID_REGEX = exports.CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-a-zA-Z0-9]{1,32})$/u;\nexports.ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-a-zA-Z0-9]{1,32})):(?<accountAddress>[a-zA-Z0-9]{1,64})$/u;\nexports.ACCOUNT_ADDRESS_REGEX = /^(?<accountAddress>[a-zA-Z0-9]{1,64})$/u;\n/**\n * Parse a chain ID string to an object containing the namespace and reference.\n * This validates the chain ID before parsing it.\n *\n * @param chainId - The chain ID to validate and parse.\n * @returns The parsed chain ID.\n */\nfunction parseChainId(chainId) {\n    const match = exports.CHAIN_ID_REGEX.exec(chainId);\n    if (!match?.groups) {\n        throw new Error('Invalid chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseChainId = parseChainId;\n/**\n * Parse an account ID to an object containing the chain, chain ID and address.\n * This validates the account ID before parsing it.\n *\n * @param accountId - The account ID to validate and parse.\n * @returns The parsed account ID.\n */\nfunction parseAccountId(accountId) {\n    const match = exports.ACCOUNT_ID_REGEX.exec(accountId);\n    if (!match?.groups) {\n        throw new Error('Invalid account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseAccountId = parseAccountId;\n/**\n * A helper struct for a string with a minimum length of 1 and a maximum length\n * of 40.\n */\nexports.LimitedString = (0, superstruct_1.size)((0, superstruct_1.string)(), 1, 40);\nexports.ChainIdStringStruct = (0, superstruct_1.define)('Chain ID', (0, superstruct_1.string)().validator);\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.ChainIdStruct = (0, superstruct_1.pattern)(exports.ChainIdStringStruct, exports.CHAIN_ID_REGEX);\nexports.AccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.ACCOUNT_ID_REGEX);\nexports.AccountIdArrayStruct = (0, superstruct_1.array)(exports.AccountIdStruct);\nexports.AccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.ACCOUNT_ADDRESS_REGEX);\n/**\n * A chain descriptor.\n */\nexports.ChainStruct = (0, superstruct_1.object)({\n    id: exports.ChainIdStruct,\n    name: exports.LimitedString,\n});\nexports.NamespaceStruct = (0, superstruct_1.object)({\n    /**\n     * A list of supported chains in the namespace.\n     */\n    chains: (0, superstruct_1.array)(exports.ChainStruct),\n    /**\n     * A list of supported RPC methods on the namespace, that a DApp can call.\n     */\n    methods: (0, superstruct_1.optional)((0, superstruct_1.array)(exports.LimitedString)),\n    /**\n     * A list of supported RPC events on the namespace, that a DApp can listen to.\n     */\n    events: (0, superstruct_1.optional)((0, superstruct_1.array)(exports.LimitedString)),\n});\n/**\n * A CAIP-2 namespace, i.e., the first part of a chain ID.\n */\nexports.NamespaceIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^[-a-z0-9]{3,8}$/u);\n/**\n * Check if the given value is a CAIP-2 namespace ID.\n *\n * @param value - The value to check.\n * @returns Whether the value is a CAIP-2 namespace ID.\n */\nfunction isNamespaceId(value) {\n    return (0, superstruct_1.is)(value, exports.NamespaceIdStruct);\n}\nexports.isNamespaceId = isNamespaceId;\n/**\n * Check if the given value is a CAIP-2 chain ID.\n *\n * @param value - The value to check.\n * @returns Whether the value is a CAIP-2 chain ID.\n */\nfunction isChainId(value) {\n    return (0, superstruct_1.is)(value, exports.ChainIdStruct);\n}\nexports.isChainId = isChainId;\n/**\n * Check if the given value is a CAIP-10 account ID.\n *\n * @param value - The value to check.\n * @returns Whether the value is a CAIP-10 account ID.\n */\nfunction isAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.AccountIdStruct);\n}\nexports.isAccountId = isAccountId;\n/**\n * Check if the given value is an array of CAIP-10 account IDs.\n *\n * @param value - The value to check.\n * @returns Whether the value is an array of CAIP-10 account IDs.\n */\nfunction isAccountIdArray(value) {\n    return (0, superstruct_1.is)(value, exports.AccountIdArrayStruct);\n}\nexports.isAccountIdArray = isAccountIdArray;\n/**\n * Check if a value is a {@link Namespace}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link Namespace}.\n */\nfunction isNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.NamespaceStruct);\n}\nexports.isNamespace = isNamespace;\n//# sourceMappingURL=namespace.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeRelative = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Normalizes relative paths by optionally removing `./` prefix.\n *\n * @param path - Path to make normalize.\n * @returns The same path, with `./` prefix remove.\n */\n// TODO(ritave): Include NodeJS path polyfill and use path.normalize as well\nfunction normalizeRelative(path) {\n    (0, utils_1.assert)(!path.startsWith('/'));\n    (0, utils_1.assert)(path.search(/:|\\/\\//u) === -1, `Path \"${path}\" potentially an URI instead of local relative`);\n    if (path.startsWith('./')) {\n        return path.slice(2);\n    }\n    return path;\n}\nexports.normalizeRelative = normalizeRelative;\n//# sourceMappingURL=path.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyRequestedSnapPermissions = exports.isSnapPermitted = exports.isCaipChainId = exports.assertIsValidSnapId = exports.stripSnapPrefix = exports.getSnapPrefix = exports.SnapIdStruct = exports.HttpSnapIdStruct = exports.NpmSnapIdStruct = exports.LocalSnapIdStruct = exports.BaseSnapIdStruct = exports.LOCALHOST_HOSTNAMES = exports.validateSnapShasum = exports.getSnapChecksum = exports.SnapStatusEvents = exports.SnapStatus = exports.PROPOSED_NAME_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst base_1 = require(\"@scure/base\");\nconst fast_json_stable_stringify_1 = __importDefault(require(\"fast-json-stable-stringify\"));\nconst validate_npm_package_name_1 = __importDefault(require(\"validate-npm-package-name\"));\nconst caveats_1 = require(\"./caveats.cjs\");\nconst checksum_1 = require(\"./checksum.cjs\");\nconst types_1 = require(\"./types.cjs\");\n// This RegEx matches valid npm package names (with some exceptions) and space-\n// separated alphanumerical words, optionally with dashes and underscores.\n// The RegEx consists of two parts. The first part matches space-separated\n// words. It is based on the following Stackoverflow answer:\n// https://stackoverflow.com/a/34974982\n// The second part, after the pipe operator, is the same RegEx used for the\n// `name` field of the official package.json JSON Schema, except that we allow\n// mixed-case letters. It was originally copied from:\n// https://github.com/SchemaStore/schemastore/blob/81a16897c1dabfd98c72242a5fd62eb080ff76d8/src/schemas/json/package.json#L132-L138\nexports.PROPOSED_NAME_REGEX = /^(?:[A-Za-z0-9-_]+( [A-Za-z0-9-_]+)*)|(?:(?:@[A-Za-z0-9-*~][A-Za-z0-9-*._~]*\\/)?[A-Za-z0-9-~][A-Za-z0-9-._~]*)$/u;\nvar SnapStatus;\n(function (SnapStatus) {\n    SnapStatus[\"Installing\"] = \"installing\";\n    SnapStatus[\"Updating\"] = \"updating\";\n    SnapStatus[\"Running\"] = \"running\";\n    SnapStatus[\"Stopped\"] = \"stopped\";\n    SnapStatus[\"Crashed\"] = \"crashed\";\n})(SnapStatus || (exports.SnapStatus = SnapStatus = {}));\nvar SnapStatusEvents;\n(function (SnapStatusEvents) {\n    SnapStatusEvents[\"Start\"] = \"START\";\n    SnapStatusEvents[\"Stop\"] = \"STOP\";\n    SnapStatusEvents[\"Crash\"] = \"CRASH\";\n    SnapStatusEvents[\"Update\"] = \"UPDATE\";\n})(SnapStatusEvents || (exports.SnapStatusEvents = SnapStatusEvents = {}));\n/**\n * Gets a checksummable manifest by removing the shasum property and reserializing the JSON using a deterministic algorithm.\n *\n * @param manifest - The manifest itself.\n * @returns A virtual file containing the checksummable manifest.\n */\nfunction getChecksummableManifest(manifest) {\n    const manifestCopy = manifest.clone();\n    delete manifestCopy.result.source.shasum;\n    // We use fast-json-stable-stringify to deterministically serialize the JSON\n    // This is required before checksumming so we get reproducible checksums across platforms etc\n    manifestCopy.value = (0, fast_json_stable_stringify_1.default)(manifestCopy.result);\n    return manifestCopy;\n}\n/**\n * Calculates the Base64-encoded SHA-256 digest of all required Snap files.\n *\n * @param files - All required Snap files to be included in the checksum.\n * @returns The Base64-encoded SHA-256 digest of the source code.\n */\nasync function getSnapChecksum(files) {\n    const { manifest, sourceCode, svgIcon, auxiliaryFiles, localizationFiles } = files;\n    const all = [\n        getChecksummableManifest(manifest),\n        sourceCode,\n        svgIcon,\n        ...auxiliaryFiles,\n        ...localizationFiles,\n    ].filter((file) => file !== undefined);\n    return base_1.base64.encode(await (0, checksum_1.checksumFiles)(all));\n}\nexports.getSnapChecksum = getSnapChecksum;\n/**\n * Checks whether the `source.shasum` property of a Snap manifest matches the\n * shasum of the snap.\n *\n * @param files - All required Snap files to be included in the checksum.\n * @param errorMessage - The error message to throw if validation fails.\n */\nasync function validateSnapShasum(files, errorMessage = 'Invalid Snap manifest: manifest shasum does not match computed shasum.') {\n    if (files.manifest.result.source.shasum !== (await getSnapChecksum(files))) {\n        throw new Error(errorMessage);\n    }\n}\nexports.validateSnapShasum = validateSnapShasum;\nexports.LOCALHOST_HOSTNAMES = ['localhost', '127.0.0.1', '[::1]'];\n// Require snap ids to only consist of printable ASCII characters\nexports.BaseSnapIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^[\\x21-\\x7E]*$/u);\nconst LocalSnapIdSubUrlStruct = (0, types_1.uri)({\n    protocol: (0, superstruct_1.enums)(['http:', 'https:']),\n    hostname: (0, superstruct_1.enums)(exports.LOCALHOST_HOSTNAMES),\n    hash: (0, superstruct_1.empty)((0, superstruct_1.string)()),\n    search: (0, superstruct_1.empty)((0, superstruct_1.string)()),\n});\nexports.LocalSnapIdStruct = (0, superstruct_1.refine)(exports.BaseSnapIdStruct, 'local Snap Id', (value) => {\n    if (!value.startsWith(types_1.SnapIdPrefixes.local)) {\n        return `Expected local snap ID, got \"${value}\".`;\n    }\n    const [error] = (0, superstruct_1.validate)(value.slice(types_1.SnapIdPrefixes.local.length), LocalSnapIdSubUrlStruct);\n    return error ?? true;\n});\nexports.NpmSnapIdStruct = (0, superstruct_1.intersection)([\n    exports.BaseSnapIdStruct,\n    (0, types_1.uri)({\n        protocol: (0, superstruct_1.literal)(types_1.SnapIdPrefixes.npm),\n        pathname: (0, superstruct_1.refine)((0, superstruct_1.string)(), 'package name', function* (value) {\n            const normalized = value.startsWith('/') ? value.slice(1) : value;\n            const { errors, validForNewPackages, warnings } = (0, validate_npm_package_name_1.default)(normalized);\n            if (!validForNewPackages) {\n                if (errors === undefined) {\n                    (0, utils_1.assert)(warnings !== undefined);\n                    yield* warnings;\n                }\n                else {\n                    yield* errors;\n                }\n            }\n            return true;\n        }),\n        search: (0, superstruct_1.empty)((0, superstruct_1.string)()),\n        hash: (0, superstruct_1.empty)((0, superstruct_1.string)()),\n    }),\n]);\nexports.HttpSnapIdStruct = (0, superstruct_1.intersection)([\n    exports.BaseSnapIdStruct,\n    (0, types_1.uri)({\n        protocol: (0, superstruct_1.enums)(['http:', 'https:']),\n        search: (0, superstruct_1.empty)((0, superstruct_1.string)()),\n        hash: (0, superstruct_1.empty)((0, superstruct_1.string)()),\n    }),\n]);\nexports.SnapIdStruct = (0, superstruct_1.union)([exports.NpmSnapIdStruct, exports.LocalSnapIdStruct]);\n/**\n * Extracts the snap prefix from a snap ID.\n *\n * @param snapId - The snap ID to extract the prefix from.\n * @returns The snap prefix from a snap id, e.g. `npm:`.\n */\nfunction getSnapPrefix(snapId) {\n    const prefix = Object.values(types_1.SnapIdPrefixes).find((possiblePrefix) => snapId.startsWith(possiblePrefix));\n    if (prefix !== undefined) {\n        return prefix;\n    }\n    throw new Error(`Invalid or no prefix found for \"${snapId}\"`);\n}\nexports.getSnapPrefix = getSnapPrefix;\n/**\n * Strips snap prefix from a full snap ID.\n *\n * @param snapId - The snap ID to strip.\n * @returns The stripped snap ID.\n */\nfunction stripSnapPrefix(snapId) {\n    return snapId.replace(getSnapPrefix(snapId), '');\n}\nexports.stripSnapPrefix = stripSnapPrefix;\n/**\n * Assert that the given value is a valid snap ID.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid snap ID.\n */\nfunction assertIsValidSnapId(value) {\n    (0, utils_1.assertStruct)(value, exports.SnapIdStruct, 'Invalid snap ID');\n}\nexports.assertIsValidSnapId = assertIsValidSnapId;\n/**\n * Typeguard to ensure a chainId follows the CAIP-2 standard.\n *\n * @param chainId - The chainId being tested.\n * @returns `true` if the value is a valid CAIP chain id, and `false` otherwise.\n */\nfunction isCaipChainId(chainId) {\n    return (typeof chainId === 'string' &&\n        /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-a-zA-Z0-9]{1,32})$/u.test(chainId));\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Utility function to check if an origin has permission (and caveat) for a particular snap.\n *\n * @param permissions - An origin's permissions object.\n * @param snapId - The id of the snap.\n * @returns A boolean based on if an origin has the specified snap.\n */\nfunction isSnapPermitted(permissions, snapId) {\n    return Boolean((permissions?.wallet_snap?.caveats?.find((caveat) => caveat.type === caveats_1.SnapCaveatType.SnapIds) ?? {}).value?.[snapId]);\n}\nexports.isSnapPermitted = isSnapPermitted;\n/**\n * Checks whether the passed in requestedPermissions is a valid\n * permission request for a `wallet_snap` permission.\n *\n * @param requestedPermissions - The requested permissions.\n * @throws If the criteria is not met.\n */\nfunction verifyRequestedSnapPermissions(requestedPermissions) {\n    (0, utils_1.assert)((0, utils_1.isObject)(requestedPermissions), 'Requested permissions must be an object.');\n    const { wallet_snap: walletSnapPermission } = requestedPermissions;\n    (0, utils_1.assert)((0, utils_1.isObject)(walletSnapPermission), 'wallet_snap is missing from the requested permissions.');\n    const { caveats } = walletSnapPermission;\n    (0, utils_1.assert)(Array.isArray(caveats) && caveats.length === 1, 'wallet_snap must have a caveat property with a single-item array value.');\n    const [caveat] = caveats;\n    (0, utils_1.assert)((0, utils_1.isObject)(caveat) &&\n        caveat.type === caveats_1.SnapCaveatType.SnapIds &&\n        (0, utils_1.isObject)(caveat.value), `The requested permissions do not have a valid ${caveats_1.SnapCaveatType.SnapIds} caveat.`);\n}\nexports.verifyRequestedSnapPermissions = verifyRequestedSnapPermissions;\n//# sourceMappingURL=snaps.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.indent = void 0;\n/**\n * Indent a message by adding a number of spaces to the beginning of each line.\n *\n * @param message - The message to indent.\n * @param spaces - The number of spaces to indent by. Defaults to 2.\n * @returns The indented message.\n */\nfunction indent(message, spaces = 2) {\n    return message.replace(/^/gmu, ' '.repeat(spaces));\n}\nexports.indent = indent;\n//# sourceMappingURL=strings.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeStructs = exports.createUnion = exports.validateUnion = exports.getStructErrorMessage = exports.getStructFailureMessage = exports.getStructErrorPrefix = exports.getUnionStructNames = exports.getStructFromPath = exports.createFromStruct = exports.getError = exports.arrayToGenerator = exports.SnapsStructError = exports.named = void 0;\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst chalk_1 = require(\"chalk\");\nconst strings_1 = require(\"./strings.cjs\");\n/**\n * Colorize a value with a color function. This is useful for colorizing values\n * in error messages. If colorization is disabled, the original value is\n * returned.\n *\n * @param value - The value to colorize.\n * @param colorFunction - The color function to use.\n * @param enabled - Whether to colorize the value.\n * @returns The colorized value, or the original value if colorization is\n * disabled.\n */\nfunction color(value, colorFunction, enabled) {\n    if (enabled) {\n        return colorFunction(value);\n    }\n    return value;\n}\n/**\n * Define a struct, and also define the name of the struct as the given name.\n *\n * This is useful for improving the error messages returned by `superstruct`.\n *\n * @param name - The name of the struct.\n * @param struct - The struct.\n * @returns The struct.\n */\nfunction named(name, struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: name,\n    });\n}\nexports.named = named;\nclass SnapsStructError extends superstruct_1.StructError {\n    constructor(struct, prefix, suffix, failure, failures, colorize = true) {\n        super(failure, failures);\n        this.name = 'SnapsStructError';\n        this.message = `${prefix}.\\n\\n${getStructErrorMessage(struct, [...failures()], colorize)}${suffix ? `\\n\\n${suffix}` : ''}`;\n    }\n}\nexports.SnapsStructError = SnapsStructError;\n/**\n * Converts an array to a generator function that yields the items in the\n * array.\n *\n * @param array - The array.\n * @returns A generator function.\n * @yields The items in the array.\n */\nfunction* arrayToGenerator(array) {\n    for (const item of array) {\n        yield item;\n    }\n}\nexports.arrayToGenerator = arrayToGenerator;\n/**\n * Returns a `SnapsStructError` with the given prefix and suffix.\n *\n * @param options - The options.\n * @param options.struct - The struct that caused the error.\n * @param options.prefix - The prefix to add to the error message.\n * @param options.suffix - The suffix to add to the error message. Defaults to\n * an empty string.\n * @param options.error - The `superstruct` error to wrap.\n * @param options.colorize - Whether to colorize the value. Defaults to `true`.\n * @returns The `SnapsStructError`.\n */\nfunction getError({ struct, prefix, suffix = '', error, colorize, }) {\n    return new SnapsStructError(struct, prefix, suffix, error, () => arrayToGenerator(error.failures()), colorize);\n}\nexports.getError = getError;\n/**\n * A wrapper of `superstruct`'s `create` function that throws a\n * `SnapsStructError` instead of a `StructError`. This is useful for improving\n * the error messages returned by `superstruct`.\n *\n * @param value - The value to validate.\n * @param struct - The `superstruct` struct to validate the value against.\n * @param prefix - The prefix to add to the error message.\n * @param suffix - The suffix to add to the error message. Defaults to an empty\n * string.\n * @returns The validated value.\n */\nfunction createFromStruct(value, struct, prefix, suffix = '') {\n    try {\n        return (0, superstruct_1.create)(value, struct);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw getError({ struct, prefix, suffix, error });\n        }\n        throw error;\n    }\n}\nexports.createFromStruct = createFromStruct;\n/**\n * Get a struct from a failure path.\n *\n * @param struct - The struct.\n * @param path - The failure path.\n * @returns The struct at the failure path.\n */\nfunction getStructFromPath(struct, path) {\n    return path.reduce((result, key) => {\n        if ((0, utils_1.isObject)(struct.schema) && struct.schema[key]) {\n            return struct.schema[key];\n        }\n        return result;\n    }, struct);\n}\nexports.getStructFromPath = getStructFromPath;\n/**\n * Get the union struct names from a struct.\n *\n * @param struct - The struct.\n * @param colorize - Whether to colorize the value. Defaults to `true`.\n * @returns The union struct names, or `null` if the struct is not a union\n * struct.\n */\nfunction getUnionStructNames(struct, colorize = true) {\n    if (Array.isArray(struct.schema)) {\n        return struct.schema.map(({ type }) => color(type, chalk_1.green, colorize));\n    }\n    return null;\n}\nexports.getUnionStructNames = getUnionStructNames;\n/**\n * Get an error prefix from a `superstruct` failure. This is useful for\n * formatting the error message returned by `superstruct`.\n *\n * @param failure - The `superstruct` failure.\n * @param colorize - Whether to colorize the value. Defaults to `true`.\n * @returns The error prefix.\n */\nfunction getStructErrorPrefix(failure, colorize = true) {\n    if (failure.type === 'never' || failure.path.length === 0) {\n        return '';\n    }\n    return `At path: ${color(failure.path.join('.'), chalk_1.bold, colorize)} — `;\n}\nexports.getStructErrorPrefix = getStructErrorPrefix;\n/**\n * Get a string describing the failure. This is similar to the `message`\n * property of `superstruct`'s `Failure` type, but formats the value in a more\n * readable way.\n *\n * @param struct - The struct that caused the failure.\n * @param failure - The `superstruct` failure.\n * @param colorize - Whether to colorize the value. Defaults to `true`.\n * @returns A string describing the failure.\n */\nfunction getStructFailureMessage(struct, failure, colorize = true) {\n    const received = color(JSON.stringify(failure.value), chalk_1.red, colorize);\n    const prefix = getStructErrorPrefix(failure, colorize);\n    if (failure.type === 'union') {\n        const childStruct = getStructFromPath(struct, failure.path);\n        const unionNames = getUnionStructNames(childStruct, colorize);\n        if (unionNames) {\n            return `${prefix}Expected the value to be one of: ${unionNames.join(', ')}, but received: ${received}.`;\n        }\n        return `${prefix}${failure.message}.`;\n    }\n    if (failure.type === 'literal') {\n        // Superstruct's failure does not provide information about which literal\n        // value was expected, so we need to parse the message to get the literal.\n        const message = failure.message\n            .replace(/the literal `(.+)`,/u, `the value to be \\`${color('$1', chalk_1.green, colorize)}\\`,`)\n            .replace(/, but received: (.+)/u, `, but received: ${color('$1', chalk_1.red, colorize)}`);\n        return `${prefix}${message}.`;\n    }\n    if (failure.type === 'never') {\n        return `Unknown key: ${color(failure.path.join('.'), chalk_1.bold, colorize)}, received: ${received}.`;\n    }\n    if (failure.refinement === 'size') {\n        const message = failure.message\n            .replace(/length between `(\\d+)` and `(\\d+)`/u, `length between ${color('$1', chalk_1.green, colorize)} and ${color('$2', chalk_1.green, colorize)},`)\n            .replace(/length of `(\\d+)`/u, `length of ${color('$1', chalk_1.red, colorize)}`)\n            .replace(/a array/u, 'an array');\n        return `${prefix}${message}.`;\n    }\n    // Refinements we built ourselves have nice error messages\n    if (failure.refinement !== undefined) {\n        return `${prefix}${failure.message}.`;\n    }\n    return `${prefix}Expected a value of type ${color(failure.type, chalk_1.green, colorize)}, but received: ${received}.`;\n}\nexports.getStructFailureMessage = getStructFailureMessage;\n/**\n * Get a string describing the errors. This formats all the errors in a\n * human-readable way.\n *\n * @param struct - The struct that caused the failures.\n * @param failures - The `superstruct` failures.\n * @param colorize - Whether to colorize the value. Defaults to `true`.\n * @returns A string describing the errors.\n */\nfunction getStructErrorMessage(struct, failures, colorize = true) {\n    const formattedFailures = failures.map((failure) => (0, strings_1.indent)(`• ${getStructFailureMessage(struct, failure, colorize)}`));\n    return formattedFailures.join('\\n');\n}\nexports.getStructErrorMessage = getStructErrorMessage;\n/**\n * Validate a union struct, and throw readable errors if the value does not\n * satisfy the struct. This is useful for improving the error messages returned\n * by `superstruct`.\n *\n * @param value - The value to validate.\n * @param struct - The `superstruct` union struct to validate the value against.\n * This struct must be a union of object structs, and must have at least one\n * shared key to validate against.\n * @param structKey - The key to validate against. This key must be present in\n * all the object structs in the union struct, and is expected to be a literal\n * value.\n * @param coerce - Whether to coerce the value to satisfy the struct. Defaults\n * to `false`.\n * @returns The validated value.\n * @throws If the value does not satisfy the struct.\n * @example\n * const struct = union([\n *   object({ type: literal('a'), value: string() }),\n *   object({ type: literal('b'), value: number() }),\n *   object({ type: literal('c'), value: boolean() }),\n *   // ...\n * ]);\n *\n * // At path: type — Expected the value to be one of: \"a\", \"b\", \"c\", but received: \"d\".\n * validateUnion({ type: 'd', value: 'foo' }, struct, 'type');\n *\n * // At path: value — Expected a value of type string, but received: 42.\n * validateUnion({ type: 'a', value: 42 }, struct, 'value');\n */\nfunction validateUnion(value, struct, structKey, coerce = false) {\n    (0, utils_1.assert)(struct.schema, 'Expected a struct with a schema. Make sure to use `union` from `@metamask/snaps-sdk`.');\n    (0, utils_1.assert)(struct.schema.length > 0, 'Expected a non-empty array of structs.');\n    const keyUnion = struct.schema.map((innerStruct) => innerStruct.schema[structKey]);\n    const key = (0, superstruct_1.type)({\n        [structKey]: (0, snaps_sdk_1.union)(keyUnion),\n    });\n    const [keyError] = (0, superstruct_1.validate)(value, key, { coerce });\n    if (keyError) {\n        throw new Error(getStructFailureMessage(key, keyError.failures()[0], false));\n    }\n    // At this point it's guaranteed that the value is an object, so we can safely\n    // cast it to a Record.\n    const objectValue = value;\n    const objectStructs = struct.schema.filter((innerStruct) => (0, superstruct_1.is)(objectValue[structKey], innerStruct.schema[structKey]));\n    (0, utils_1.assert)(objectStructs.length > 0, 'Expected a struct to match the value.');\n    // We need to validate the value against all the object structs that match the\n    // struct key, and return the first validated value.\n    const validationResults = objectStructs.map((objectStruct) => (0, superstruct_1.validate)(objectValue, objectStruct, { coerce }));\n    const validatedValue = validationResults.find(([error]) => !error);\n    if (validatedValue) {\n        return validatedValue[1];\n    }\n    (0, utils_1.assert)(validationResults[0][0], 'Expected at least one error.');\n    // If there is no validated value, we need to find the error with the least\n    // number of failures (with the assumption that it's the most specific error).\n    const validationError = validationResults.reduce((error, [innerError]) => {\n        (0, utils_1.assert)(innerError, 'Expected an error.');\n        if (innerError.failures().length < error.failures().length) {\n            return innerError;\n        }\n        return error;\n    }, validationResults[0][0]);\n    throw new Error(getStructFailureMessage(struct, validationError.failures()[0], false));\n}\nexports.validateUnion = validateUnion;\n/**\n * Create a value with the coercion logic of a union struct, and throw readable\n * errors if the value does not satisfy the struct. This is useful for improving\n * the error messages returned by `superstruct`.\n *\n * @param value - The value to validate.\n * @param struct - The `superstruct` union struct to validate the value against.\n * This struct must be a union of object structs, and must have at least one\n * shared key to validate against.\n * @param structKey - The key to validate against. This key must be present in\n * all the object structs in the union struct, and is expected to be a literal\n * value.\n * @returns The validated value.\n * @throws If the value does not satisfy the struct.\n * @see validateUnion\n */\nfunction createUnion(value, struct, structKey) {\n    return validateUnion(value, struct, structKey, true);\n}\nexports.createUnion = createUnion;\n/**\n * Merge multiple structs into one, using superstruct `assign`.\n *\n * Differently from plain `assign`, this function also copies over refinements from each struct.\n *\n * @param structs - The `superstruct` structs to merge.\n * @returns The merged struct.\n */\nfunction mergeStructs(...structs) {\n    const mergedStruct = superstruct_1.assign(...structs);\n    return new superstruct_1.Struct({\n        ...mergedStruct,\n        *refiner(value, ctx) {\n            for (const struct of structs) {\n                yield* struct.refiner(value, ctx);\n            }\n        },\n    });\n}\nexports.mergeStructs = mergeStructs;\n//# sourceMappingURL=structs.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSvg = exports.parseSvg = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\n/**\n * Parse and validate a string as an SVG.\n *\n * @param svg - An SVG string.\n * @returns The SVG, its attributes and children in an object format.\n */\nfunction parseSvg(svg) {\n    try {\n        const trimmed = svg.trim();\n        (0, utils_1.assert)(trimmed.length > 0);\n        const parser = new fast_xml_parser_1.XMLParser({\n            ignoreAttributes: false,\n            parseAttributeValue: true,\n        });\n        const parsed = parser.parse(trimmed, true);\n        (0, utils_1.assert)((0, utils_1.hasProperty)(parsed, 'svg'));\n        // Empty SVGs are not returned as objects\n        if (!(0, utils_1.isObject)(parsed.svg)) {\n            return {};\n        }\n        return parsed.svg;\n    }\n    catch {\n        throw new Error('Snap icon must be a valid SVG.');\n    }\n}\nexports.parseSvg = parseSvg;\n/**\n * Validate that a string is a valid SVG.\n *\n * @param svg - An SVG string.\n * @returns True if the SVG is valid otherwise false.\n */\nfunction isSvg(svg) {\n    try {\n        parseSvg(svg);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isSvg = isSvg;\n//# sourceMappingURL=svg.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WALLET_SNAP_PERMISSION_KEY = exports.isValidUrl = exports.uri = exports.SNAP_STREAM_NAMES = exports.SnapIdPrefixes = exports.NpmSnapPackageJsonStruct = exports.NameStruct = exports.NpmSnapFileNames = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nvar NpmSnapFileNames;\n(function (NpmSnapFileNames) {\n    NpmSnapFileNames[\"PackageJson\"] = \"package.json\";\n    NpmSnapFileNames[\"Manifest\"] = \"snap.manifest.json\";\n})(NpmSnapFileNames || (exports.NpmSnapFileNames = NpmSnapFileNames = {}));\nexports.NameStruct = (0, superstruct_1.size)((0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:@[a-z0-9-*~][a-z0-9-*._~]*\\/)?[a-z0-9-~][a-z0-9-._~]*$/u), 1, 214);\n// Note we use `type` instead of `object` here, because the latter does not\n// allow unknown keys.\nexports.NpmSnapPackageJsonStruct = (0, superstruct_1.type)({\n    version: utils_1.VersionStruct,\n    name: exports.NameStruct,\n    main: (0, superstruct_1.optional)((0, superstruct_1.size)((0, superstruct_1.string)(), 1, Infinity)),\n    repository: (0, superstruct_1.optional)((0, superstruct_1.object)({\n        type: (0, superstruct_1.size)((0, superstruct_1.string)(), 1, Infinity),\n        url: (0, superstruct_1.size)((0, superstruct_1.string)(), 1, Infinity),\n    })),\n});\n/**\n * The possible prefixes for snap ids.\n */\n/* eslint-disable @typescript-eslint/naming-convention */\nvar SnapIdPrefixes;\n(function (SnapIdPrefixes) {\n    SnapIdPrefixes[\"npm\"] = \"npm:\";\n    SnapIdPrefixes[\"local\"] = \"local:\";\n})(SnapIdPrefixes || (exports.SnapIdPrefixes = SnapIdPrefixes = {}));\n/* eslint-enable @typescript-eslint/naming-convention */\n/* eslint-disable @typescript-eslint/naming-convention */\nvar SNAP_STREAM_NAMES;\n(function (SNAP_STREAM_NAMES) {\n    SNAP_STREAM_NAMES[\"JSON_RPC\"] = \"jsonRpc\";\n    SNAP_STREAM_NAMES[\"COMMAND\"] = \"command\";\n})(SNAP_STREAM_NAMES || (exports.SNAP_STREAM_NAMES = SNAP_STREAM_NAMES = {}));\nconst uri = (opts = {}) => (0, superstruct_1.refine)((0, superstruct_1.union)([(0, superstruct_1.string)(), (0, superstruct_1.instance)(URL)]), 'uri', (value) => {\n    try {\n        const url = new URL(value);\n        const UrlStruct = (0, superstruct_1.type)(opts);\n        (0, superstruct_1.assert)(url, UrlStruct);\n        return true;\n    }\n    catch {\n        return `Expected URL, got \"${value.toString()}\".`;\n    }\n});\nexports.uri = uri;\n/**\n * Returns whether a given value is a valid URL.\n *\n * @param url - The value to check.\n * @param opts - Optional constraints for url checking.\n * @returns Whether `url` is valid URL or not.\n */\nfunction isValidUrl(url, opts = {}) {\n    return (0, superstruct_1.is)(url, (0, exports.uri)(opts));\n}\nexports.isValidUrl = isValidUrl;\n// redefining here to avoid circular dependency\nexports.WALLET_SNAP_PERMISSION_KEY = 'wallet_snap';\n//# sourceMappingURL=types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialiseJsx = exports.walkJsx = exports.getJsxChildren = exports.hasChildren = exports.getTotalTextLength = exports.validateJsxLinks = exports.validateTextLinks = exports.validateLink = exports.getJsxElementFromComponent = exports.getTextChildren = void 0;\nconst jsx_runtime_1 = require(\"@metamask/snaps-sdk/jsx-runtime\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst jsx_1 = require(\"@metamask/snaps-sdk/jsx\");\nconst utils_1 = require(\"@metamask/utils\");\nconst marked_1 = require(\"marked\");\nconst MAX_TEXT_LENGTH = 50000; // 50 kb\nconst ALLOWED_PROTOCOLS = ['https:', 'mailto:'];\n/**\n * Get the button variant from a legacy button component variant.\n *\n * @param variant - The legacy button component variant.\n * @returns The button variant.\n */\nfunction getButtonVariant(variant) {\n    switch (variant) {\n        case 'primary':\n            return 'primary';\n        case 'secondary':\n            return 'destructive';\n        default:\n            return undefined;\n    }\n}\n/**\n * Get the children of a JSX element. If there is only one child, the child is\n * returned directly. Otherwise, the children are returned as an array.\n *\n * @param elements - The JSX elements.\n * @returns The child or children.\n */\nfunction getChildren(elements) {\n    if (elements.length === 1) {\n        return elements[0];\n    }\n    return elements;\n}\n/**\n * Get the text of a link token.\n *\n * @param token - The link token.\n * @returns The text of the link token.\n */\nfunction getLinkText(token) {\n    if (token.tokens && token.tokens.length > 0) {\n        return getChildren(token.tokens.flatMap(getTextChildFromToken));\n    }\n    return token.href;\n}\n/**\n * Get the text child from a list of markdown tokens.\n *\n * @param tokens - The markdown tokens.\n * @returns The text child.\n */\nfunction getTextChildFromTokens(tokens) {\n    return getChildren(tokens.flatMap(getTextChildFromToken));\n}\n/**\n * Get the text child from a markdown token.\n *\n * @param token - The markdown token.\n * @returns The text child.\n */\nfunction getTextChildFromToken(token) {\n    switch (token.type) {\n        case 'link': {\n            return (0, jsx_runtime_1.jsx)(jsx_1.Link, { href: token.href, children: getLinkText(token) });\n        }\n        case 'text':\n            return token.text;\n        case 'strong':\n            return ((0, jsx_runtime_1.jsx)(jsx_1.Bold, { children: getTextChildFromTokens(\n                // Due to the way `marked` is typed, `token.tokens` can be\n                // `undefined`, but it's a required field of `Tokens.Bold`, so we\n                // can safely cast it to `Token[]`.\n                token.tokens) }));\n        case 'em':\n            return ((0, jsx_runtime_1.jsx)(jsx_1.Italic, { children: getTextChildFromTokens(\n                // Due to the way `marked` is typed, `token.tokens` can be\n                // `undefined`, but it's a required field of `Tokens.Bold`, so we\n                // can safely cast it to `Token[]`.\n                token.tokens) }));\n        default:\n            return null;\n    }\n}\n/**\n * Get all text children from a markdown string.\n *\n * @param value - The markdown string.\n * @returns The text children.\n */\nfunction getTextChildren(value) {\n    const rootTokens = (0, marked_1.lexer)(value, { gfm: false });\n    const children = [];\n    (0, marked_1.walkTokens)(rootTokens, (token) => {\n        if (token.type === 'paragraph') {\n            if (children.length > 0) {\n                children.push('\\n\\n');\n            }\n            const { tokens } = token;\n            // We do not need to consider nesting deeper than 1 level here and we can therefore cast.\n            children.push(...tokens.flatMap(getTextChildFromToken));\n        }\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    return children.filter((child) => child !== null);\n}\nexports.getTextChildren = getTextChildren;\n/**\n * Validate the text size of a component. The text size is the total length of\n * all text in the component.\n *\n * @param component - The component to validate.\n * @throws An error if the text size exceeds the maximum allowed size.\n */\nfunction validateComponentTextSize(component) {\n    const textSize = getTotalTextLength(component);\n    (0, utils_1.assert)(textSize <= MAX_TEXT_LENGTH, `The text in a Snap UI may not be larger than ${MAX_TEXT_LENGTH / 1000} kB.`);\n}\n/**\n * Get a JSX element from a legacy UI component. This supports all legacy UI\n * components, and maps them to their JSX equivalents where possible.\n *\n * This function validates the text size of the component, but does not validate\n * the total size. The total size of the component should be validated before\n * calling this function.\n *\n * @param legacyComponent - The legacy UI component.\n * @returns The JSX element.\n */\nfunction getJsxElementFromComponent(legacyComponent) {\n    validateComponentTextSize(legacyComponent);\n    /**\n     * Get the JSX element for a component. This function is recursive and will\n     * call itself for child components.\n     *\n     * @param component - The component to convert to a JSX element.\n     * @returns The JSX element.\n     */\n    function getElement(component) {\n        switch (component.type) {\n            case snaps_sdk_1.NodeType.Address:\n                return (0, jsx_runtime_1.jsx)(jsx_1.Address, { address: component.value });\n            case snaps_sdk_1.NodeType.Button:\n                return ((0, jsx_runtime_1.jsx)(jsx_1.Button, { name: component.name, variant: getButtonVariant(component.variant), type: component.buttonType, children: component.value }));\n            case snaps_sdk_1.NodeType.Copyable:\n                return ((0, jsx_runtime_1.jsx)(jsx_1.Copyable, { value: component.value, sensitive: component.sensitive }));\n            case snaps_sdk_1.NodeType.Divider:\n                return (0, jsx_runtime_1.jsx)(jsx_1.Divider, {});\n            case snaps_sdk_1.NodeType.Form:\n                return ((0, jsx_runtime_1.jsx)(jsx_1.Form, { name: component.name, children: getChildren(component.children.map(getElement)) }));\n            case snaps_sdk_1.NodeType.Heading:\n                return (0, jsx_runtime_1.jsx)(jsx_1.Heading, { children: component.value });\n            case snaps_sdk_1.NodeType.Image:\n                // `Image` supports `alt`, but the legacy `Image` component does not.\n                return (0, jsx_runtime_1.jsx)(jsx_1.Image, { src: component.value });\n            case snaps_sdk_1.NodeType.Input:\n                return ((0, jsx_runtime_1.jsx)(jsx_1.Field, { label: component.label, error: component.error, children: (0, jsx_runtime_1.jsx)(jsx_1.Input, { name: component.name, type: component.inputType, value: component.value, placeholder: component.placeholder }) }));\n            case snaps_sdk_1.NodeType.Panel:\n                // `Panel` is renamed to `Box` in JSX.\n                return ((0, jsx_runtime_1.jsx)(jsx_1.Box, { children: getChildren(component.children.map(getElement)) }));\n            case snaps_sdk_1.NodeType.Row:\n                return ((0, jsx_runtime_1.jsx)(jsx_1.Row, { label: component.label, variant: component.variant, children: getElement(component.value) }));\n            case snaps_sdk_1.NodeType.Spinner:\n                return (0, jsx_runtime_1.jsx)(jsx_1.Spinner, {});\n            case snaps_sdk_1.NodeType.Text:\n                return (0, jsx_runtime_1.jsx)(jsx_1.Text, { children: getChildren(getTextChildren(component.value)) });\n            /* istanbul ignore next 2 */\n            default:\n                return (0, utils_1.assertExhaustive)(component);\n        }\n    }\n    return getElement(legacyComponent);\n}\nexports.getJsxElementFromComponent = getJsxElementFromComponent;\n/**\n * Extract all links from a Markdown text string using the `marked` lexer.\n *\n * @param text - The markdown text string.\n * @returns A list of URLs linked to in the string.\n */\nfunction getMarkdownLinks(text) {\n    const tokens = (0, marked_1.lexer)(text, { gfm: false });\n    const links = [];\n    // Walk the lexed tokens and collect all link tokens\n    (0, marked_1.walkTokens)(tokens, (token) => {\n        if (token.type === 'link') {\n            links.push(token);\n        }\n    });\n    return links;\n}\n/**\n * Validate a link against the phishing list.\n *\n * @param link - The link to validate.\n * @param isOnPhishingList - The function that checks the link against the\n * phishing list.\n */\nfunction validateLink(link, isOnPhishingList) {\n    try {\n        const url = new URL(link);\n        (0, utils_1.assert)(ALLOWED_PROTOCOLS.includes(url.protocol), `Protocol must be one of: ${ALLOWED_PROTOCOLS.join(', ')}.`);\n        const hostname = url.protocol === 'mailto:' ? url.pathname.split('@')[1] : url.hostname;\n        (0, utils_1.assert)(!isOnPhishingList(hostname), 'The specified URL is not allowed.');\n    }\n    catch (error) {\n        throw new Error(`Invalid URL: ${error?.code === 'ERR_ASSERTION' ? error.message : 'Unable to parse URL.'}`);\n    }\n}\nexports.validateLink = validateLink;\n/**\n * Search for Markdown links in a string and checks them against the phishing\n * list.\n *\n * @param text - The text to verify.\n * @param isOnPhishingList - The function that checks the link against the\n * phishing list.\n * @throws If the text contains a link that is not allowed.\n */\nfunction validateTextLinks(text, isOnPhishingList) {\n    const links = getMarkdownLinks(text);\n    for (const link of links) {\n        validateLink(link.href, isOnPhishingList);\n    }\n}\nexports.validateTextLinks = validateTextLinks;\n/**\n * Walk a JSX tree and validate each {@link LinkElement} node against the\n * phishing list.\n *\n * @param node - The JSX node to walk.\n * @param isOnPhishingList - The function that checks the link against the\n * phishing list.\n */\nfunction validateJsxLinks(node, isOnPhishingList) {\n    walkJsx(node, (childNode) => {\n        if (childNode.type !== 'Link') {\n            return;\n        }\n        validateLink(childNode.props.href, isOnPhishingList);\n    });\n}\nexports.validateJsxLinks = validateJsxLinks;\n/**\n * Calculate the total length of all text in the component.\n *\n * @param component - A custom UI component.\n * @returns The total length of all text components in the component.\n */\nfunction getTotalTextLength(component) {\n    const { type } = component;\n    switch (type) {\n        case snaps_sdk_1.NodeType.Panel:\n            return component.children.reduce(\n            // This is a bug in TypeScript: https://github.com/microsoft/TypeScript/issues/48313\n            // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n            (sum, node) => sum + getTotalTextLength(node), 0);\n        case snaps_sdk_1.NodeType.Row:\n            return getTotalTextLength(component.value);\n        case snaps_sdk_1.NodeType.Text:\n            return component.value.length;\n        default:\n            return 0;\n    }\n}\nexports.getTotalTextLength = getTotalTextLength;\n/**\n * Check if a JSX element has children.\n *\n * @param element - A JSX element.\n * @returns `true` if the element has children, `false` otherwise.\n */\nfunction hasChildren(element) {\n    return (0, utils_1.hasProperty)(element.props, 'children');\n}\nexports.hasChildren = hasChildren;\n/**\n * Filter a JSX child to remove `null`, `undefined`, plain booleans, and empty\n * strings.\n *\n * @param child - The JSX child to filter.\n * @returns `true` if the child is not `null`, `undefined`, a plain boolean, or\n * an empty string, `false` otherwise.\n */\nfunction filterJsxChild(child) {\n    return Boolean(child) && child !== true;\n}\n/**\n * Get the children of a JSX element as an array. If the element has only one\n * child, the child is returned as an array.\n *\n * @param element - A JSX element.\n * @returns The children of the element.\n */\nfunction getJsxChildren(element) {\n    if (hasChildren(element)) {\n        if (Array.isArray(element.props.children)) {\n            // @ts-expect-error - Each member of the union type has signatures, but\n            // none of those signatures are compatible with each other.\n            return element.props.children.filter(filterJsxChild).flat(Infinity);\n        }\n        if (element.props.children) {\n            return [element.props.children];\n        }\n    }\n    return [];\n}\nexports.getJsxChildren = getJsxChildren;\n/**\n * Walk a JSX tree and call a callback on each node.\n *\n * @param node - The JSX node to walk.\n * @param callback - The callback to call on each node.\n * @param depth - The current depth in the JSX tree for a walk.\n * @returns The result of the callback, if any.\n */\nfunction walkJsx(node, callback, depth = 0) {\n    if (Array.isArray(node)) {\n        for (const child of node) {\n            const childResult = walkJsx(child, callback, depth);\n            if (childResult !== undefined) {\n                return childResult;\n            }\n        }\n        return undefined;\n    }\n    const result = callback(node, depth);\n    if (result !== undefined) {\n        return result;\n    }\n    if ((0, utils_1.hasProperty)(node, 'props') &&\n        (0, utils_1.isPlainObject)(node.props) &&\n        (0, utils_1.hasProperty)(node.props, 'children')) {\n        const children = getJsxChildren(node);\n        for (const child of children) {\n            if ((0, utils_1.isPlainObject)(child)) {\n                const childResult = walkJsx(child, callback, depth + 1);\n                if (childResult !== undefined) {\n                    return childResult;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexports.walkJsx = walkJsx;\n/**\n * Serialise a JSX prop to a string.\n *\n * @param prop - The JSX prop.\n * @returns The serialised JSX prop.\n */\nfunction serialiseProp(prop) {\n    if (typeof prop === 'string') {\n        return `\"${prop}\"`;\n    }\n    return `{${JSON.stringify(prop)}}`;\n}\n/**\n * Serialise JSX props to a string.\n *\n * @param props - The JSX props.\n * @returns The serialised JSX props.\n */\nfunction serialiseProps(props) {\n    return Object.entries(props)\n        .filter(([key]) => key !== 'children')\n        .sort(([a], [b]) => a.localeCompare(b))\n        .map(([key, value]) => ` ${key}=${serialiseProp(value)}`)\n        .join('');\n}\n/**\n * Serialise a JSX node to a string.\n *\n * @param node - The JSX node.\n * @param indentation - The indentation level. Defaults to `0`. This should not\n * be set by the caller, as it is used for recursion.\n * @returns The serialised JSX node.\n */\nfunction serialiseJsx(node, indentation = 0) {\n    if (Array.isArray(node)) {\n        return node.map((child) => serialiseJsx(child, indentation)).join('');\n    }\n    const indent = '  '.repeat(indentation);\n    if (typeof node === 'string') {\n        return `${indent}${node}\\n`;\n    }\n    if (!node) {\n        return '';\n    }\n    const { type, props } = node;\n    const trailingNewline = indentation > 0 ? '\\n' : '';\n    if ((0, utils_1.hasProperty)(props, 'children')) {\n        const children = serialiseJsx(props.children, indentation + 1);\n        return `${indent}<${type}${serialiseProps(props)}>\\n${children}${indent}</${type}>${trailingNewline}`;\n    }\n    return `${indent}<${type}${serialiseProps(props)} />${trailingNewline}`;\n}\nexports.serialiseJsx = serialiseJsx;\n//# sourceMappingURL=ui.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateFetchedSnap = void 0;\nconst icon_1 = require(\"./icon.cjs\");\nconst localization_1 = require(\"./localization.cjs\");\nconst validation_1 = require(\"./manifest/validation.cjs\");\nconst snaps_1 = require(\"./snaps.cjs\");\n/**\n * Validates the files contained in a fetched snap.\n *\n * @param files - All potentially included files in a fetched snap.\n * @throws If any of the files are considered invalid.\n */\nasync function validateFetchedSnap(files) {\n    (0, validation_1.assertIsSnapManifest)(files.manifest.result);\n    await (0, snaps_1.validateSnapShasum)(files);\n    (0, localization_1.validateSnapManifestLocalizations)(files.manifest.result, files.localizationFiles.map((file) => file.result));\n    if (files.svgIcon) {\n        (0, icon_1.assertIsSnapIcon)(files.svgIcon);\n    }\n}\nexports.validateFetchedSnap = validateFetchedSnap;\n//# sourceMappingURL=validation.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveVersionRange = exports.getTargetVersion = exports.DEFAULT_REQUESTED_SNAP_VERSION = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst semver_1 = require(\"semver\");\nexports.DEFAULT_REQUESTED_SNAP_VERSION = '*';\n/**\n * Return the highest version in the list that satisfies the range, or `null` if\n * none of them do. For the satisfaction check, pre-release versions will only\n * be checked if no satisfactory non-prerelease version is found first.\n *\n * @param versions - The list of version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns The highest version in the list that satisfies the range,\n * or `null` if none of them do.\n */\nfunction getTargetVersion(versions, versionRange) {\n    const maxSatisfyingNonPreRelease = (0, semver_1.maxSatisfying)(versions, versionRange);\n    // By default don't use pre-release versions\n    if (maxSatisfyingNonPreRelease) {\n        return maxSatisfyingNonPreRelease;\n    }\n    // If no satisfying release version is found by default, try pre-release versions\n    return (0, semver_1.maxSatisfying)(versions, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.getTargetVersion = getTargetVersion;\n/**\n * Parse a version received by some subject attempting to access a snap.\n *\n * @param version - The received version value.\n * @returns `*` if the version is `undefined` or `latest\", otherwise returns\n * the specified version.\n */\nfunction resolveVersionRange(version) {\n    if (version === undefined || version === 'latest') {\n        return [undefined, exports.DEFAULT_REQUESTED_SNAP_VERSION];\n    }\n    return (0, superstruct_1.validate)(version, utils_1.VersionRangeStruct);\n}\nexports.resolveVersionRange = resolveVersionRange;\n//# sourceMappingURL=versions.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VirtualFile = void 0;\n// TODO(ritave): Move into separate package @metamask/vfile / @metamask/utils + @metamask/to-vfile when passes code review\n// TODO(ritave): Streaming vfile contents similar to vinyl maybe?\n// TODO(ritave): Move fixing manifest in cli and bundler plugins to write messages to vfile\n//               similar to unified instead of throwing \"ProgrammaticallyFixableErrors\".\n//\n// Using https://github.com/vfile/vfile would be helpful, but they only support ESM and we need to support CommonJS.\n// https://github.com/gulpjs/vinyl is also good, but they normalize paths, which we can't do, because\n// we're calculating checksums based on original path.\nconst utils_1 = require(\"@metamask/utils\");\nconst base_1 = require(\"@scure/base\");\nconst deep_clone_1 = require(\"../deep-clone.cjs\");\nclass VirtualFile {\n    constructor(value) {\n        let options;\n        if (typeof value === 'string' || value instanceof Uint8Array) {\n            options = { value };\n        }\n        else {\n            options = value;\n        }\n        this.value = options?.value ?? '';\n        // This situations happens when there's no .result used,\n        // we expect the file to have default generic in that situation:\n        // VirtualFile<unknown> which will handle undefined properly\n        //\n        // While not 100% type safe, it'll be way less frustrating to work with.\n        // The alternative would be to have VirtualFile.result be Result | undefined\n        // and that would result in needing to branch out and check in all situations.\n        //\n        // In short, optimizing for most common use case.\n        this.result = options?.result ?? undefined;\n        this.data = options?.data ?? {};\n        this.path = options?.path ?? '/';\n    }\n    get size() {\n        return typeof this.value === 'string'\n            ? this.value.length\n            : this.value.byteLength;\n    }\n    toString(encoding) {\n        if (typeof this.value === 'string') {\n            (0, utils_1.assert)(encoding === undefined, 'Tried to encode string.');\n            return this.value;\n        }\n        else if (this.value instanceof Uint8Array && encoding === 'hex') {\n            return (0, utils_1.bytesToHex)(this.value);\n        }\n        else if (this.value instanceof Uint8Array && encoding === 'base64') {\n            // For large files, this is quite slow, instead use `encodeBase64()`\n            // TODO: Use @metamask/utils for this\n            return base_1.base64.encode(this.value);\n        }\n        const decoder = new TextDecoder(encoding);\n        return decoder.decode(this.value);\n    }\n    clone() {\n        const vfile = new VirtualFile();\n        if (typeof this.value === 'string') {\n            vfile.value = this.value;\n        }\n        else {\n            // deep-clone doesn't clone Buffer properly, even if it's a sub-class of Uint8Array\n            vfile.value = this.value.slice(0);\n        }\n        vfile.result = (0, deep_clone_1.deepClone)(this.result);\n        vfile.data = (0, deep_clone_1.deepClone)(this.data);\n        vfile.path = this.path;\n        return vfile;\n    }\n}\nexports.VirtualFile = VirtualFile;\n//# sourceMappingURL=VirtualFile.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./VirtualFile.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/BaseControllerV1.ts\nvar BaseControllerV1 = class {\n  /**\n   * Creates a BaseControllerV1 instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config = {}, state = {}) {\n    /**\n     * Default options used to configure this controller\n     */\n    this.defaultConfig = {};\n    /**\n     * Default state set on this controller\n     */\n    this.defaultState = {};\n    /**\n     * Determines if listeners are notified of state changes\n     */\n    this.disabled = false;\n    /**\n     * Name of this controller used during composition\n     */\n    this.name = \"BaseController\";\n    this.internalConfig = this.defaultConfig;\n    this.internalState = this.defaultState;\n    this.internalListeners = [];\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns This controller instance.\n   */\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n  /**\n   * Retrieves current controller configuration options.\n   *\n   * @returns The current configuration.\n   */\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration.\n   *\n   * @param config - New configuration options.\n   * @param overwrite - Overwrite config instead of merging.\n   * @param fullUpdate - Boolean that defines if the update is partial or not.\n   */\n  configure(config, overwrite = false, fullUpdate = true) {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n      for (const key of Object.keys(this.internalConfig)) {\n        const value = this.internalConfig[key];\n        if (value !== void 0) {\n          this[key] = value;\n        }\n      }\n    } else {\n      for (const key of Object.keys(config)) {\n        if (this.internalConfig[key] !== void 0) {\n          const value = config[key];\n          this.internalConfig[key] = value;\n          this[key] = value;\n        }\n      }\n    }\n  }\n  /**\n   * Notifies all subscribed listeners of current state.\n   */\n  notify() {\n    if (this.disabled) {\n      return;\n    }\n    this.internalListeners.forEach((listener) => {\n      listener(this.internalState);\n    });\n  }\n  /**\n   * Adds new listener to be notified of state changes.\n   *\n   * @param listener - The callback triggered when state changes.\n   */\n  subscribe(listener) {\n    this.internalListeners.push(listener);\n  }\n  /**\n   * Removes existing listener from receiving state changes.\n   *\n   * @param listener - The callback to remove.\n   * @returns `true` if a listener is found and unsubscribed.\n   */\n  unsubscribe(listener) {\n    const index = this.internalListeners.findIndex((cb) => listener === cb);\n    index > -1 && this.internalListeners.splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Updates controller state.\n   *\n   * @param state - The new state.\n   * @param overwrite - Overwrite state instead of merging.\n   */\n  update(state, overwrite = false) {\n    this.internalState = overwrite ? Object.assign({}, state) : Object.assign({}, this.internalState, state);\n    this.notify();\n  }\n};\nvar BaseControllerV1_default = BaseControllerV1;\n\n\n\n\nexports.BaseControllerV1 = BaseControllerV1; exports.BaseControllerV1_default = BaseControllerV1_default;\n//# sourceMappingURL=chunk-FTHCJ6HY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/ControllerMessenger.ts\nvar _actions, _events, _initialEventPayloadGetters, _eventPayloadCache;\nvar ControllerMessenger = class {\n  constructor() {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _actions, /* @__PURE__ */ new Map());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _events, /* @__PURE__ */ new Map());\n    /**\n     * A map of functions for getting the initial event payload.\n     *\n     * Used only for events that represent state changes.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _initialEventPayloadGetters, /* @__PURE__ */ new Map());\n    /**\n     * A cache of selector return values for their respective handlers.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _eventPayloadCache, /* @__PURE__ */ new Map());\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw when a handler has been registered for this action type already.\n   * @template ActionType - A type union of Action type strings.\n   */\n  registerActionHandler(actionType, handler) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).has(actionType)) {\n      throw new Error(\n        `A handler for ${actionType} has already been registered`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).set(actionType, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @template ActionType - A type union of Action type strings.\n   */\n  unregisterActionHandler(actionType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).delete(actionType);\n  }\n  /**\n   * Unregister all action handlers.\n   *\n   * This prevents all actions from being called.\n   */\n  clearActions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).clear();\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    const handler = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).get(actionType);\n    if (!handler) {\n      throw new Error(`A handler for ${actionType} has not been registered`);\n    }\n    return handler(...params);\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).set(eventType, getPayload);\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * Note that this method should never throw directly. Any errors from\n   * subscribers are captured and re-thrown in a timeout handler.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @template EventType - A type union of Event type strings.\n   */\n  publish(eventType, ...payload) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (subscribers) {\n      for (const [handler, selector] of subscribers.entries()) {\n        try {\n          if (selector) {\n            const previousValue = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).get(handler);\n            const newValue = selector(...payload);\n            if (newValue !== previousValue) {\n              _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, newValue);\n              handler(newValue, previousValue);\n            }\n          } else {\n            handler(...payload);\n          }\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n      }\n    }\n  }\n  subscribe(eventType, handler, selector) {\n    let subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Map();\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).set(eventType, subscribers);\n    }\n    subscribers.set(handler, selector);\n    if (selector) {\n      const getPayload = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).get(eventType);\n      if (getPayload) {\n        const initialValue = selector(...getPayload());\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, initialValue);\n      }\n    }\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw when the given event handler is not registered for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  unsubscribe(eventType, handler) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers || !subscribers.has(handler)) {\n      throw new Error(`Subscription not found for event: ${eventType}`);\n    }\n    const selector = subscribers.get(handler);\n    if (selector) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).delete(handler);\n    }\n    subscribers.delete(handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  clearEventSubscriptions(eventType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).delete(eventType);\n  }\n  /**\n   * Clear all subscriptions.\n   *\n   * This will remove all subscribed handlers for all events.\n   */\n  clearSubscriptions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).clear();\n  }\n  /**\n   * Get a restricted controller messenger\n   *\n   * Returns a wrapper around the controller messenger instance that restricts access to actions\n   * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n   * to the listed events. The \"name\" provided grants ownership of any actions and events under\n   * that namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - Controller messenger options.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n   * module that this messenger has been created for. The authority to publish events and register\n   * actions under this namespace is granted to this restricted messenger instance.\n   * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n   * This must not include internal actions that are in the messenger's namespace.\n   * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n   * This must not include internal events that are in the messenger's namespace.\n   * @returns The restricted controller messenger.\n   */\n  getRestricted({\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    return new (0, _chunkUJFCPTF3js.RestrictedControllerMessenger)({\n      controllerMessenger: this,\n      name,\n      allowedActions,\n      allowedEvents\n    });\n  }\n};\n_actions = new WeakMap();\n_events = new WeakMap();\n_initialEventPayloadGetters = new WeakMap();\n_eventPayloadCache = new WeakMap();\n\n\n\nexports.ControllerMessenger = ControllerMessenger;\n//# sourceMappingURL=chunk-G42723LG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/BaseControllerV2.ts\nvar _immer = require('immer');\n_immer.enablePatches.call(void 0, );\nvar _internalState;\nvar BaseController = class {\n  /**\n   * Creates a BaseController instance.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Controller messaging system.\n   * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n   * parts should be persisted.\n   * @param options.name - The name of the controller, used as a namespace for events and actions.\n   * @param options.state - Initial controller state.\n   */\n  constructor({\n    messenger,\n    metadata,\n    name,\n    state\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _internalState, void 0);\n    this.messagingSystem = messenger;\n    this.name = name;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, _immer.freeze.call(void 0, state, true));\n    this.metadata = metadata;\n    this.messagingSystem.registerActionHandler(\n      `${name}:getState`,\n      () => this.state\n    );\n    this.messagingSystem.registerInitialEventPayload({\n      eventType: `${name}:stateChange`,\n      getPayload: () => [this.state, []]\n    });\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState);\n  }\n  set state(_) {\n    throw new Error(\n      `Controller state cannot be directly mutated; use 'update' method instead.`\n    );\n  }\n  /**\n   * Updates controller state. Accepts a callback that is passed a draft copy\n   * of the controller state. If a value is returned, it is set as the new\n   * state. Otherwise, any changes made within that callback to the draft are\n   * applied to the controller state.\n   *\n   * @param callback - Callback for updating state, passed a draft state\n   * object. Return a new state object or mutate the draft to update state.\n   * @returns An object that has the next state, patches applied in the update and inverse patches to\n   * rollback the update.\n   */\n  update(callback) {\n    const [nextState, patches, inversePatches] = _immer.produceWithPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), callback);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n    return { nextState, patches, inversePatches };\n  }\n  /**\n   * Applies immer patches to the current state. The patches come from the\n   * update function itself and can either be normal or inverse patches.\n   *\n   * @param patches - An array of immer patches that are to be applied to make\n   * or undo changes.\n   */\n  applyPatches(patches) {\n    const nextState = _immer.applyPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), patches);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n  }\n  /**\n   * Prepares the controller for garbage collection. This should be extended\n   * by any subclasses to clean up any additional connections or events.\n   *\n   * The only cleanup performed here is to remove listeners. While technically\n   * this is not required to ensure this instance is garbage collected, it at\n   * least ensures this instance won't be responsible for preventing the\n   * listeners from being garbage collected.\n   */\n  destroy() {\n    this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n  }\n};\n_internalState = new WeakMap();\nfunction getAnonymizedState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"anonymous\");\n}\nfunction getPersistentState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"persist\");\n}\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n  return Object.keys(state).reduce((derivedState, key) => {\n    try {\n      const stateMetadata = metadata[key];\n      if (!stateMetadata) {\n        throw new Error(`No metadata found for '${String(key)}'`);\n      }\n      const propertyMetadata = stateMetadata[metadataProperty];\n      const stateProperty = state[key];\n      if (typeof propertyMetadata === \"function\") {\n        derivedState[key] = propertyMetadata(stateProperty);\n      } else if (propertyMetadata) {\n        derivedState[key] = stateProperty;\n      }\n      return derivedState;\n    } catch (error) {\n      setTimeout(() => {\n        throw error;\n      });\n      return derivedState;\n    }\n  }, {});\n}\n\n\n\n\n\nexports.BaseController = BaseController; exports.getAnonymizedState = getAnonymizedState; exports.getPersistentState = getPersistentState;\n//# sourceMappingURL=chunk-IURK6TKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RestrictedControllerMessenger.ts\nvar _controllerMessenger, _controllerName, _allowedActions, _allowedEvents, _isAllowedEvent, isAllowedEvent_fn, _isAllowedAction, isAllowedAction_fn, _isInCurrentNamespace, isInCurrentNamespace_fn;\nvar RestrictedControllerMessenger = class {\n  /**\n   * Constructs a restricted controller messenger\n   *\n   * The provided allowlists grant the ability to call the listed actions and subscribe to the\n   * listed events. The \"name\" provided grants ownership of any actions and events under that\n   * namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - The controller options.\n   * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   */\n  constructor({\n    controllerMessenger,\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    /**\n     * Determine whether the given event type is allowed. Event types are\n     * allowed if they are in the current namespace or on the list of\n     * allowed events.\n     *\n     * @param eventType - The event type to check.\n     * @returns Whether the event type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedEvent);\n    /**\n     * Determine whether the given action type is allowed. Action types\n     * are allowed if they are in the current namespace or on the list of\n     * allowed actions.\n     *\n     * @param actionType - The action type to check.\n     * @returns Whether the action type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedAction);\n    /**\n     * Determine whether the given name is within the current namespace.\n     *\n     * @param name - The name to check\n     * @returns Whether the name is within the current namespace\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInCurrentNamespace);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerMessenger, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerName, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedActions, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedEvents, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerMessenger, controllerMessenger);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerName, name);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedActions, allowedActions);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedEvents, allowedEvents);\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * The action type this handler is registered under *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw if an action handler that is not in the current namespace is being registered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  registerActionHandler(action, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed registering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerActionHandler(action, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * The action type being unregistered *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unique identifier for this action.\n   * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  unregisterActionHandler(action) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed unregistering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unregisterActionHandler(action);\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * The action type being called must be on the action allowlist.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of allowed Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedAction, isAllowedAction_fn).call(this, actionType)) {\n      throw new Error(`Action missing from allow list: ${actionType}`);\n    }\n    const response = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).call(\n      actionType,\n      ...params\n    );\n    return response;\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * The event type *must* be in the current namespace\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerInitialEventPayload({\n      eventType,\n      getPayload\n    });\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * The event type being published *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @throws Will throw if an event that is not in the current namespace is being published.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  publish(event, ...payload) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).publish(event, ...payload);\n  }\n  subscribe(event, handler, selector) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    if (selector) {\n      return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler, selector);\n    }\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler);\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * The event type being unsubscribed to must be on the event allowlist.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw if the given event is not an allowed event for this controller messenger.\n   * @template EventType - A type union of allowed Event type strings.\n   */\n  unsubscribe(event, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unsubscribe(event, handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * The event type being cleared *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  clearEventSubscriptions(event) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed clearing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).clearEventSubscriptions(event);\n  }\n};\n_controllerMessenger = new WeakMap();\n_controllerName = new WeakMap();\n_allowedActions = new WeakMap();\n_allowedEvents = new WeakMap();\n_isAllowedEvent = new WeakSet();\nisAllowedEvent_fn = function(eventType) {\n  const allowedEvents = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedEvents);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType) || allowedEvents !== null && allowedEvents.includes(eventType);\n};\n_isAllowedAction = new WeakSet();\nisAllowedAction_fn = function(actionType) {\n  const allowedActions = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedActions);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, actionType) || allowedActions !== null && allowedActions.includes(actionType);\n};\n_isInCurrentNamespace = new WeakSet();\nisInCurrentNamespace_fn = function(name) {\n  return name.startsWith(`${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:`);\n};\n\n\n\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n//# sourceMappingURL=chunk-UJFCPTF3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFTHCJ6HYjs = require('./chunk-FTHCJ6HY.js');\n\n\n\n\nvar _chunkIURK6TKDjs = require('./chunk-IURK6TKD.js');\n\n\nvar _chunkG42723LGjs = require('./chunk-G42723LG.js');\n\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\nexports.BaseController = _chunkIURK6TKDjs.BaseController; exports.BaseControllerV1 = _chunkFTHCJ6HYjs.BaseControllerV1; exports.ControllerMessenger = _chunkG42723LGjs.ControllerMessenger; exports.RestrictedControllerMessenger = _chunkUJFCPTF3js.RestrictedControllerMessenger; exports.getAnonymizedState = _chunkIURK6TKDjs.getAnonymizedState; exports.getPersistentState = _chunkIURK6TKDjs.getPersistentState;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/Caveat.ts\nvar _utils = require('@metamask/utils');\nfunction isRestrictedMethodCaveatSpecification(specification) {\n  return _utils.hasProperty.call(void 0, specification, \"decorator\");\n}\nfunction decorateWithCaveats(methodImplementation, permission, caveatSpecifications) {\n  const { caveats } = permission;\n  if (!caveats) {\n    return methodImplementation;\n  }\n  let decorated = async (args) => methodImplementation(args);\n  for (const caveat of caveats) {\n    const specification = caveatSpecifications[caveat.type];\n    if (!specification) {\n      throw new (0, _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError)(caveat.type);\n    }\n    if (!isRestrictedMethodCaveatSpecification(specification)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatSpecificationMismatchError)(\n        specification,\n        \"RestrictedMethod\" /* RestrictedMethod */\n      );\n    }\n    decorated = specification.decorator(decorated, caveat);\n  }\n  return decorated;\n}\n\n\n\n\nexports.isRestrictedMethodCaveatSpecification = isRestrictedMethodCaveatSpecification; exports.decorateWithCaveats = decorateWithCaveats;\n//# sourceMappingURL=chunk-3YOPLPVY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkVBIZGGQLjs = require('./chunk-VBIZGGQL.js');\n\n\nvar _chunk7A3VYLCKjs = require('./chunk-7A3VYLCK.js');\n\n\nvar _chunkX4ZAW4QRjs = require('./chunk-X4ZAW4QR.js');\n\n\nvar _chunkZ2XKIXLSjs = require('./chunk-Z2XKIXLS.js');\n\n// src/rpc-methods/index.ts\nvar rpc_methods_exports = {};\n_chunkZ2XKIXLSjs.__export.call(void 0, rpc_methods_exports, {\n  handlers: () => handlers\n});\nvar handlers = [\n  _chunk7A3VYLCKjs.requestPermissionsHandler,\n  _chunkVBIZGGQLjs.getPermissionsHandler,\n  _chunkX4ZAW4QRjs.revokePermissionsHandler\n];\n\n\n\n\nexports.handlers = handlers; exports.rpc_methods_exports = rpc_methods_exports;\n//# sourceMappingURL=chunk-6PXDVUYM.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/rpc-methods/requestPermissions.ts\nvar _controllerutils = require('@metamask/controller-utils');\nvar requestPermissionsHandler = {\n  methodNames: [\"wallet_requestPermissions\" /* RequestPermissions */],\n  implementation: requestPermissionsImplementation,\n  hookNames: {\n    requestPermissionsForOrigin: true\n  }\n};\nasync function requestPermissionsImplementation(req, res, _next, end, { requestPermissionsForOrigin }) {\n  const { params } = req;\n  if (!Array.isArray(params) || !_controllerutils.isPlainObject.call(void 0, params[0])) {\n    return end(_chunkFYADAA2Gjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  const [requestedPermissions] = params;\n  const [grantedPermissions] = await requestPermissionsForOrigin(\n    requestedPermissions\n  );\n  res.result = Object.values(grantedPermissions);\n  return end();\n}\n\n\n\nexports.requestPermissionsHandler = requestPermissionsHandler;\n//# sourceMappingURL=chunk-7A3VYLCK.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\nvar _chunk3YOPLPVYjs = require('./chunk-3YOPLPVY.js');\n\n\n\n\n\nvar _chunkZH4MLSXXjs = require('./chunk-ZH4MLSXX.js');\n\n\nvar _chunkF5TBMVWCjs = require('./chunk-F5TBMVWC.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n\nvar _chunkVQPP5PWSjs = require('./chunk-VQPP5PWS.js');\n\n\n\nvar _chunkZ2XKIXLSjs = require('./chunk-Z2XKIXLS.js');\n\n// src/PermissionController.ts\nvar _basecontroller = require('@metamask/base-controller');\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _utils = require('@metamask/utils');\nvar _deepfreezestrict = require('deep-freeze-strict'); var _deepfreezestrict2 = _interopRequireDefault(_deepfreezestrict);\nvar _immer = require('immer');\nvar _nanoid = require('nanoid');\nvar controllerName = \"PermissionController\";\nfunction getStateMetadata() {\n  return { subjects: { anonymous: true, persist: true } };\n}\nfunction getDefaultState() {\n  return { subjects: {} };\n}\nvar CaveatMutatorOperation = /* @__PURE__ */ ((CaveatMutatorOperation2) => {\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"Noop\"] = 0] = \"Noop\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"UpdateValue\"] = 1] = \"UpdateValue\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"DeleteCaveat\"] = 2] = \"DeleteCaveat\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"RevokePermission\"] = 3] = \"RevokePermission\";\n  return CaveatMutatorOperation2;\n})(CaveatMutatorOperation || {});\nvar _expectGetCaveatMerger, expectGetCaveatMerger_fn, _applyGrantedPermissions, applyGrantedPermissions_fn, _mergeIncrementalPermissions, mergeIncrementalPermissions_fn, _mergePermission, mergePermission_fn, _mergeCaveat, mergeCaveat_fn, _handleApprovedPermissions, handleApprovedPermissions_fn;\nvar PermissionController = class extends _basecontroller.BaseController {\n  /**\n   * Constructs the PermissionController.\n   *\n   * @param options - Permission controller options.\n   * @param options.caveatSpecifications - The specifications of all caveats\n   * available to the controller. See {@link CaveatSpecificationMap} and the\n   * documentation for more details.\n   * @param options.permissionSpecifications - The specifications of all\n   * permissions available to the controller. See\n   * {@link PermissionSpecificationMap} and the README for more details.\n   * @param options.unrestrictedMethods - The callable names of all JSON-RPC\n   * methods ignored by the new controller.\n   * @param options.messenger - The controller messenger. See\n   * {@link BaseController} for more information.\n   * @param options.state - Existing state to hydrate the controller with at\n   * initialization.\n   */\n  constructor(options) {\n    const {\n      caveatSpecifications,\n      permissionSpecifications,\n      unrestrictedMethods,\n      messenger,\n      state = {}\n    } = options;\n    super({\n      name: controllerName,\n      metadata: getStateMetadata(),\n      messenger,\n      state: {\n        ...getDefaultState(),\n        ...state\n      }\n    });\n    /**\n     * Gets the merger function for the specified caveat. Throws if no\n     * merger exists.\n     *\n     * @param caveatType - The type of the caveat whose merger to get.\n     * @returns The caveat value merger function for the specified caveat type.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _expectGetCaveatMerger);\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _applyGrantedPermissions);\n    /**\n     * Merges a set of incrementally requested permissions into the existing permissions of\n     * the requesting subject. The merge is a right-biased union, where the existing\n     * permissions are the left-hand side, and the incrementally requested permissions are\n     * the right-hand side.\n     *\n     * @param existingPermissions - The subject's existing permissions.\n     * @param incrementalRequestedPermissions - The requested permissions to merge.\n     * @returns The merged permissions and the resulting diff.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergeIncrementalPermissions);\n    /**\n     * Performs a right-biased union between two permissions. The task of merging caveats\n     * of the same type between the two permissions is delegated to the corresponding\n     * caveat type's merger implementation.\n     *\n     * Throws if the left-hand and right-hand permissions both have a caveat whose\n     * specification does not provide a caveat value merger function.\n     *\n     * @param leftPermission - The left-hand permission to merge.\n     * @param rightPermission - The right-hand permission to merge.\n     * @returns The merged permission.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergePermission);\n    /**\n     * Merges two caveats of the same type. The task of merging the values of the\n     * two caveats is delegated to the corresponding caveat type's merger implementation.\n     *\n     * @param leftCaveat - The left-hand caveat to merge.\n     * @param rightCaveat - The right-hand caveat to merge.\n     * @returns The merged caveat and the diff between the two caveats.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergeCaveat);\n    /**\n     * Accepts a permissions request that has been approved by the user. This\n     * method should be called after the user has approved the request and the\n     * {@link ApprovalController} has resolved the user approval promise.\n     *\n     * @param options - Options bag.\n     * @param options.subject - The subject to grant permissions to.\n     * @param options.metadata - The metadata of the approved permissions request.\n     * @param options.preserveExistingPermissions - Whether to preserve the\n     * subject's existing permissions.\n     * @param options.approvedRequest - The approved permissions request to handle.\n     * @returns The granted permissions and request metadata.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _handleApprovedPermissions);\n    this._unrestrictedMethods = new Set(unrestrictedMethods);\n    this._caveatSpecifications = _deepfreezestrict2.default.call(void 0, { ...caveatSpecifications });\n    this.validatePermissionSpecifications(\n      permissionSpecifications,\n      this._caveatSpecifications\n    );\n    this._permissionSpecifications = _deepfreezestrict2.default.call(void 0, {\n      ...permissionSpecifications\n    });\n    this.registerMessageHandlers();\n    this.createPermissionMiddleware = _chunkF5TBMVWCjs.getPermissionMiddlewareFactory.call(void 0, {\n      executeRestrictedMethod: this._executeRestrictedMethod.bind(this),\n      getRestrictedMethod: this.getRestrictedMethod.bind(this),\n      isUnrestrictedMethod: this.unrestrictedMethods.has.bind(\n        this.unrestrictedMethods\n      )\n    });\n  }\n  /**\n   * The names of all JSON-RPC methods that will be ignored by the controller.\n   *\n   * @returns The names of all unrestricted JSON-RPC methods\n   */\n  get unrestrictedMethods() {\n    return this._unrestrictedMethods;\n  }\n  /**\n   * Gets a permission specification.\n   *\n   * @param targetName - The name of the permission specification to get.\n   * @returns The permission specification with the specified target name.\n   */\n  getPermissionSpecification(targetName) {\n    return this._permissionSpecifications[targetName];\n  }\n  /**\n   * Gets a caveat specification.\n   *\n   * @param caveatType - The type of the caveat specification to get.\n   * @returns The caveat specification with the specified type.\n   */\n  getCaveatSpecification(caveatType) {\n    return this._caveatSpecifications[caveatType];\n  }\n  /**\n   * Constructor helper for validating permission specifications.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param permissionSpecifications - The permission specifications passed to\n   * this controller's constructor.\n   * @param caveatSpecifications - The caveat specifications passed to this\n   * controller.\n   */\n  validatePermissionSpecifications(permissionSpecifications, caveatSpecifications) {\n    Object.entries(\n      permissionSpecifications\n    ).forEach(\n      ([\n        targetName,\n        { permissionType, targetName: innerTargetName, allowedCaveats }\n      ]) => {\n        if (!permissionType || !_utils.hasProperty.call(void 0, _chunkZH4MLSXXjs.PermissionType, permissionType)) {\n          throw new Error(`Invalid permission type: \"${permissionType}\"`);\n        }\n        if (!targetName) {\n          throw new Error(`Invalid permission target name: \"${targetName}\"`);\n        }\n        if (targetName !== innerTargetName) {\n          throw new Error(\n            `Invalid permission specification: target name \"${targetName}\" must match specification.targetName value \"${innerTargetName}\".`\n          );\n        }\n        if (allowedCaveats) {\n          allowedCaveats.forEach((caveatType) => {\n            if (!_utils.hasProperty.call(void 0, caveatSpecifications, caveatType)) {\n              throw new (0, _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError)(caveatType);\n            }\n            const specification = caveatSpecifications[caveatType];\n            const isRestrictedMethodCaveat = _chunk3YOPLPVYjs.isRestrictedMethodCaveatSpecification.call(void 0, specification);\n            if (permissionType === \"RestrictedMethod\" /* RestrictedMethod */ && !isRestrictedMethodCaveat || permissionType === \"Endowment\" /* Endowment */ && isRestrictedMethodCaveat) {\n              throw new (0, _chunkFYADAA2Gjs.CaveatSpecificationMismatchError)(\n                specification,\n                permissionType\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n  /**\n   * Constructor helper for registering the controller's messaging system\n   * actions.\n   */\n  registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:clearPermissions`,\n      () => this.clearState()\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getEndowments`,\n      (origin, targetName, requestData) => this.getEndowments(origin, targetName, requestData)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getSubjectNames`,\n      () => this.getSubjectNames()\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getPermissions`,\n      (origin) => this.getPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasPermission`,\n      (origin, targetName) => this.hasPermission(origin, targetName)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasPermissions`,\n      (origin) => this.hasPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:grantPermissions`,\n      this.grantPermissions.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:grantPermissionsIncremental`,\n      this.grantPermissionsIncremental.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:requestPermissions`,\n      (subject, permissions) => this.requestPermissions(subject, permissions)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:requestPermissionsIncremental`,\n      (subject, permissions) => this.requestPermissionsIncremental(subject, permissions)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokeAllPermissions`,\n      (origin) => this.revokeAllPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokePermissionForAllSubjects`,\n      (target) => this.revokePermissionForAllSubjects(target)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokePermissions`,\n      this.revokePermissions.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:updateCaveat`,\n      (origin, target, caveatType, caveatValue) => {\n        this.updateCaveat(\n          origin,\n          target,\n          caveatType,\n          caveatValue\n        );\n      }\n    );\n  }\n  /**\n   * Clears the state of the controller.\n   */\n  clearState() {\n    this.update((_draftState) => {\n      return {\n        ...getDefaultState()\n      };\n    });\n  }\n  /**\n   * Gets the permission specification corresponding to the given permission\n   * type and target name. Throws an error if the target name does not\n   * correspond to a permission, or if the specification is not of the\n   * given permission type.\n   *\n   * @template Type - The type of the permission specification to get.\n   * @param permissionType - The type of the permission specification to get.\n   * @param targetName - The name of the permission whose specification to get.\n   * @param requestingOrigin - The origin of the requesting subject, if any.\n   * Will be added to any thrown errors.\n   * @returns The specification object corresponding to the given type and\n   * target name.\n   */\n  getTypedPermissionSpecification(permissionType, targetName, requestingOrigin) {\n    const failureError = permissionType === \"RestrictedMethod\" /* RestrictedMethod */ ? _chunkFYADAA2Gjs.methodNotFound.call(void 0, \n      targetName,\n      requestingOrigin ? { origin: requestingOrigin } : void 0\n    ) : new (0, _chunkFYADAA2Gjs.EndowmentPermissionDoesNotExistError)(\n      targetName,\n      requestingOrigin\n    );\n    if (!this.targetExists(targetName)) {\n      throw failureError;\n    }\n    const specification = this.getPermissionSpecification(targetName);\n    if (!_chunkZH4MLSXXjs.hasSpecificationType.call(void 0, specification, permissionType)) {\n      throw failureError;\n    }\n    return specification;\n  }\n  /**\n   * Gets the implementation of the specified restricted method.\n   *\n   * A JSON-RPC error is thrown if the method does not exist.\n   *\n   * @see {@link PermissionController.executeRestrictedMethod} and\n   * {@link PermissionController.createPermissionMiddleware} for internal usage.\n   * @param method - The name of the restricted method.\n   * @param origin - The origin associated with the request for the restricted\n   * method, if any.\n   * @returns The restricted method implementation.\n   */\n  getRestrictedMethod(method, origin) {\n    return this.getTypedPermissionSpecification(\n      \"RestrictedMethod\" /* RestrictedMethod */,\n      method,\n      origin\n    ).methodImplementation;\n  }\n  /**\n   * Gets a list of all origins of subjects.\n   *\n   * @returns The origins (i.e. IDs) of all subjects.\n   */\n  getSubjectNames() {\n    return Object.keys(this.state.subjects);\n  }\n  /**\n   * Gets the permission for the specified target of the subject corresponding\n   * to the specified origin.\n   *\n   * @param origin - The origin of the subject.\n   * @param targetName - The method name as invoked by a third party (i.e., not\n   * a method key).\n   * @returns The permission if it exists, or undefined otherwise.\n   */\n  getPermission(origin, targetName) {\n    return this.state.subjects[origin]?.permissions[targetName];\n  }\n  /**\n   * Gets all permissions for the specified subject, if any.\n   *\n   * @param origin - The origin of the subject.\n   * @returns The permissions of the subject, if any.\n   */\n  getPermissions(origin) {\n    return this.state.subjects[origin]?.permissions;\n  }\n  /**\n   * Checks whether the subject with the specified origin has the specified\n   * permission.\n   *\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @returns Whether the subject has the permission.\n   */\n  hasPermission(origin, target) {\n    return Boolean(this.getPermission(origin, target));\n  }\n  /**\n   * Checks whether the subject with the specified origin has any permissions.\n   * Use this if you want to know if a subject \"exists\".\n   *\n   * @param origin - The origin of the subject to check.\n   * @returns Whether the subject has any permissions.\n   */\n  hasPermissions(origin) {\n    return Boolean(this.state.subjects[origin]);\n  }\n  /**\n   * Revokes all permissions from the specified origin.\n   *\n   * Throws an error of the origin has no permissions.\n   *\n   * @param origin - The origin whose permissions to revoke.\n   */\n  revokeAllPermissions(origin) {\n    this.update((draftState) => {\n      if (!draftState.subjects[origin]) {\n        throw new (0, _chunkFYADAA2Gjs.UnrecognizedSubjectError)(origin);\n      }\n      delete draftState.subjects[origin];\n    });\n  }\n  /**\n   * Revokes the specified permission from the subject with the specified\n   * origin.\n   *\n   * Throws an error if the subject or the permission does not exist.\n   *\n   * @param origin - The origin of the subject whose permission to revoke.\n   * @param target - The target name of the permission to revoke.\n   */\n  revokePermission(origin, target) {\n    this.revokePermissions({ [origin]: [target] });\n  }\n  /**\n   * Revokes the specified permissions from the specified subjects.\n   *\n   * Throws an error if any of the subjects or permissions do not exist.\n   *\n   * @param subjectsAndPermissions - An object mapping subject origins\n   * to arrays of permission target names to revoke.\n   */\n  revokePermissions(subjectsAndPermissions) {\n    this.update((draftState) => {\n      Object.keys(subjectsAndPermissions).forEach((origin) => {\n        if (!_utils.hasProperty.call(void 0, draftState.subjects, origin)) {\n          throw new (0, _chunkFYADAA2Gjs.UnrecognizedSubjectError)(origin);\n        }\n        subjectsAndPermissions[origin].forEach((target) => {\n          const { permissions } = draftState.subjects[origin];\n          if (!_utils.hasProperty.call(void 0, permissions, target)) {\n            throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n          }\n          this.deletePermission(draftState.subjects, origin, target);\n        });\n      });\n    });\n  }\n  /**\n   * Revokes all permissions corresponding to the specified target for all subjects.\n   * Does nothing if no subjects or no such permission exists.\n   *\n   * @param target - The name of the target to revoke all permissions for.\n   */\n  revokePermissionForAllSubjects(target) {\n    if (this.getSubjectNames().length === 0) {\n      return;\n    }\n    this.update((draftState) => {\n      Object.entries(draftState.subjects).forEach(([origin, subject]) => {\n        const { permissions } = subject;\n        if (_utils.hasProperty.call(void 0, permissions, target)) {\n          this.deletePermission(draftState.subjects, origin, target);\n        }\n      });\n    });\n  }\n  /**\n   * Deletes the permission identified by the given origin and target. If the\n   * permission is the single remaining permission of its subject, the subject\n   * is also deleted.\n   *\n   * @param subjects - The draft permission controller subjects.\n   * @param origin - The origin of the subject associated with the permission\n   * to delete.\n   * @param target - The target name of the permission to delete.\n   */\n  deletePermission(subjects, origin, target) {\n    const { permissions } = subjects[origin];\n    if (Object.keys(permissions).length > 1) {\n      delete permissions[target];\n    } else {\n      delete subjects[origin];\n    }\n  }\n  /**\n   * Checks whether the permission of the subject corresponding to the given\n   * origin has a caveat of the specified type.\n   *\n   * Throws an error if the subject does not have a permission with the\n   * specified target name.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to check for.\n   * @returns Whether the permission has the specified caveat.\n   */\n  hasCaveat(origin, target, caveatType) {\n    return Boolean(this.getCaveat(origin, target, caveatType));\n  }\n  /**\n   * Gets the caveat of the specified type, if any, for the permission of\n   * the subject corresponding to the given origin.\n   *\n   * Throws an error if the subject does not have a permission with the\n   * specified target name.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to get.\n   * @returns The caveat, or `undefined` if no such caveat exists.\n   */\n  getCaveat(origin, target, caveatType) {\n    const permission = this.getPermission(origin, target);\n    if (!permission) {\n      throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n    }\n    return _chunkZH4MLSXXjs.findCaveat.call(void 0, permission, caveatType);\n  }\n  /**\n   * Adds a caveat of the specified type, with the specified caveat value, to\n   * the permission corresponding to the given subject origin and permission\n   * target.\n   *\n   * For modifying existing caveats, use\n   * {@link PermissionController.updateCaveat}.\n   *\n   * Throws an error if no such permission exists, or if the caveat already\n   * exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to add.\n   * @param caveatValue - The value of the caveat to add.\n   */\n  addCaveat(origin, target, caveatType, caveatValue) {\n    if (this.hasCaveat(origin, target, caveatType)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatAlreadyExistsError)(origin, target, caveatType);\n    }\n    this.setCaveat(origin, target, caveatType, caveatValue);\n  }\n  /**\n   * Updates the value of the caveat of the specified type belonging to the\n   * permission corresponding to the given subject origin and permission\n   * target.\n   *\n   * For adding new caveats, use\n   * {@link PermissionController.addCaveat}.\n   *\n   * Throws an error if no such permission or caveat exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to update.\n   * @param caveatValue - The new value of the caveat.\n   */\n  updateCaveat(origin, target, caveatType, caveatValue) {\n    if (!this.hasCaveat(origin, target, caveatType)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(origin, target, caveatType);\n    }\n    this.setCaveat(origin, target, caveatType, caveatValue);\n  }\n  /**\n   * Sets the specified caveat on the specified permission. Overwrites existing\n   * caveats of the same type in-place (preserving array order), and adds the\n   * caveat to the end of the array otherwise.\n   *\n   * Throws an error if the permission does not exist or fails to validate after\n   * its caveats have been modified.\n   *\n   * @see {@link PermissionController.addCaveat}\n   * @see {@link PermissionController.updateCaveat}\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to set.\n   * @param caveatValue - The value of the caveat to set.\n   */\n  setCaveat(origin, target, caveatType, caveatValue) {\n    this.update((draftState) => {\n      const subject = draftState.subjects[origin];\n      if (!subject) {\n        throw new (0, _chunkFYADAA2Gjs.UnrecognizedSubjectError)(origin);\n      }\n      const permission = subject.permissions[target];\n      if (!permission) {\n        throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n      }\n      const caveat = {\n        type: caveatType,\n        value: caveatValue\n      };\n      this.validateCaveat(caveat, origin, target);\n      if (permission.caveats) {\n        const caveatIndex = permission.caveats.findIndex(\n          (existingCaveat) => existingCaveat.type === caveat.type\n        );\n        if (caveatIndex === -1) {\n          permission.caveats.push(caveat);\n        } else {\n          permission.caveats.splice(caveatIndex, 1, caveat);\n        }\n      } else {\n        permission.caveats = [caveat];\n      }\n      this.validateModifiedPermission(permission, origin);\n    });\n  }\n  /**\n   * Updates all caveats with the specified type for all subjects and\n   * permissions by applying the specified mutator function to them.\n   *\n   * ATTN: Permissions can be revoked entirely by the action of this method,\n   * read on for details.\n   *\n   * Caveat mutators are functions that receive a caveat value and return a\n   * tuple consisting of a {@link CaveatMutatorOperation} and, optionally, a new\n   * value to update the existing caveat with.\n   *\n   * For each caveat, depending on the mutator result, this method will:\n   * - Do nothing ({@link CaveatMutatorOperation.Noop})\n   * - Update the value of the caveat ({@link CaveatMutatorOperation.UpdateValue}). The caveat specification validator, if any, will be called after updating the value.\n   * - Delete the caveat ({@link CaveatMutatorOperation.DeleteCaveat}). The permission specification validator, if any, will be called after deleting the caveat.\n   * - Revoke the parent permission ({@link CaveatMutatorOperation.RevokePermission})\n   *\n   * This method throws if the validation of any caveat or permission fails.\n   *\n   * @param targetCaveatType - The type of the caveats to update.\n   * @param mutator - The mutator function which will be applied to all caveat\n   * values.\n   */\n  updatePermissionsByCaveat(targetCaveatType, mutator) {\n    if (Object.keys(this.state.subjects).length === 0) {\n      return;\n    }\n    this.update((draftState) => {\n      Object.values(draftState.subjects).forEach((subject) => {\n        Object.values(subject.permissions).forEach((permission) => {\n          const { caveats } = permission;\n          const targetCaveat = caveats?.find(\n            ({ type }) => type === targetCaveatType\n          );\n          if (!targetCaveat) {\n            return;\n          }\n          const mutatorResult = mutator(targetCaveat.value);\n          const { operation } = mutatorResult;\n          switch (operation) {\n            case 0 /* Noop */:\n              break;\n            case 1 /* UpdateValue */:\n              targetCaveat.value = mutatorResult.value;\n              this.validateCaveat(\n                targetCaveat,\n                subject.origin,\n                permission.parentCapability\n              );\n              break;\n            case 2 /* DeleteCaveat */:\n              this.deleteCaveat(permission, targetCaveatType, subject.origin);\n              break;\n            case 3 /* RevokePermission */:\n              this.deletePermission(\n                draftState.subjects,\n                subject.origin,\n                permission.parentCapability\n              );\n              break;\n            default: {\n              throw new Error(`Unrecognized mutation result: \"${operation}\"`);\n            }\n          }\n        });\n      });\n    });\n  }\n  /**\n   * Removes the caveat of the specified type from the permission corresponding\n   * to the given subject origin and target name.\n   *\n   * Throws an error if no such permission or caveat exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to remove.\n   */\n  removeCaveat(origin, target, caveatType) {\n    this.update((draftState) => {\n      const permission = draftState.subjects[origin]?.permissions[target];\n      if (!permission) {\n        throw new (0, _chunkFYADAA2Gjs.PermissionDoesNotExistError)(origin, target);\n      }\n      if (!permission.caveats) {\n        throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(origin, target, caveatType);\n      }\n      this.deleteCaveat(permission, caveatType, origin);\n    });\n  }\n  /**\n   * Deletes the specified caveat from the specified permission. If no caveats\n   * remain after deletion, the permission's caveat property is set to `null`.\n   * The permission is validated after being modified.\n   *\n   * Throws an error if the permission does not have a caveat with the specified\n   * type.\n   *\n   * @param permission - The permission whose caveat to delete.\n   * @param caveatType - The type of the caveat to delete.\n   * @param origin - The origin the permission subject.\n   */\n  deleteCaveat(permission, caveatType, origin) {\n    if (!permission.caveats) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(\n        origin,\n        permission.parentCapability,\n        caveatType\n      );\n    }\n    const caveatIndex = permission.caveats.findIndex(\n      (existingCaveat) => existingCaveat.type === caveatType\n    );\n    if (caveatIndex === -1) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatDoesNotExistError)(\n        origin,\n        permission.parentCapability,\n        caveatType\n      );\n    }\n    if (permission.caveats.length === 1) {\n      permission.caveats = null;\n    } else {\n      permission.caveats.splice(caveatIndex, 1);\n    }\n    this.validateModifiedPermission(permission, origin);\n  }\n  /**\n   * Validates the specified modified permission. Should **always** be invoked\n   * on a permission after its caveats have been modified.\n   *\n   * Just like {@link PermissionController.validatePermission}, except that the\n   * corresponding target name and specification are retrieved first, and an\n   * error is thrown if the target name does not exist.\n   *\n   * @param permission - The modified permission to validate.\n   * @param origin - The origin associated with the permission.\n   */\n  validateModifiedPermission(permission, origin) {\n    if (!this.targetExists(permission.parentCapability)) {\n      throw new Error(\n        `Fatal: Existing permission target \"${permission.parentCapability}\" has no specification.`\n      );\n    }\n    this.validatePermission(\n      this.getPermissionSpecification(permission.parentCapability),\n      permission,\n      origin\n    );\n  }\n  /**\n   * Verifies the existence the specified permission target, i.e. whether it has\n   * a specification.\n   *\n   * @param target - The requested permission target.\n   * @returns Whether the permission target exists.\n   */\n  targetExists(target) {\n    return _utils.hasProperty.call(void 0, this._permissionSpecifications, target);\n  }\n  /**\n   * Grants _approved_ permissions to the specified subject. Every permission and\n   * caveat is stringently validated—including by calling their specification\n   * validators—and an error is thrown if validation fails.\n   *\n   * ATTN: This method does **not** prompt the user for approval. User consent must\n   * first be obtained through some other means.\n   *\n   * @see {@link PermissionController.requestPermissions} For initiating a\n   * permissions request requiring user approval.\n   * @param options - Options bag.\n   * @param options.approvedPermissions - The requested permissions approved by\n   * the user.\n   * @param options.requestData - Permission request data. Passed to permission\n   * factory functions.\n   * @param options.preserveExistingPermissions - Whether to preserve the\n   * subject's existing permissions.\n   * @param options.subject - The subject to grant permissions to.\n   * @returns The subject's new permission state. It may or may not have changed.\n   */\n  grantPermissions({\n    approvedPermissions,\n    requestData,\n    preserveExistingPermissions = true,\n    subject\n  }) {\n    return _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _applyGrantedPermissions, applyGrantedPermissions_fn).call(this, {\n      approvedPermissions,\n      subject,\n      mergePermissions: false,\n      preserveExistingPermissions,\n      requestData\n    });\n  }\n  /**\n   * Incrementally grants _approved_ permissions to the specified subject. Every\n   * permission and caveat is stringently validated—including by calling their\n   * specification validators—and an error is thrown if validation fails.\n   *\n   * ATTN: This method does **not** prompt the user for approval. User consent must\n   * first be obtained through some other means.\n   *\n   * @see {@link PermissionController.requestPermissionsIncremental} For initiating\n   * an incremental permissions request requiring user approval.\n   * @param options - Options bag.\n   * @param options.approvedPermissions - The requested permissions approved by\n   * the user.\n   * @param options.requestData - Permission request data. Passed to permission\n   * factory functions.\n   * @param options.subject - The subject to grant permissions to.\n   * @returns The subject's new permission state. It may or may not have changed.\n   */\n  grantPermissionsIncremental({\n    approvedPermissions,\n    requestData,\n    subject\n  }) {\n    return _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _applyGrantedPermissions, applyGrantedPermissions_fn).call(this, {\n      approvedPermissions,\n      subject,\n      mergePermissions: true,\n      preserveExistingPermissions: true,\n      requestData\n    });\n  }\n  /**\n   * Validates the specified permission by:\n   * - Ensuring that if `subjectTypes` is specified, the subject requesting the permission is of a type in the list.\n   * - Ensuring that its `caveats` property is either `null` or a non-empty array.\n   * - Ensuring that it only includes caveats allowed by its specification.\n   * - Ensuring that it includes no duplicate caveats (by caveat type).\n   * - Validating each caveat object, if `performCaveatValidation` is `true`.\n   * - Calling the validator of its specification, if one exists and `invokePermissionValidator` is `true`.\n   *\n   * An error is thrown if validation fails.\n   *\n   * @param specification - The specification of the permission.\n   * @param permission - The permission to validate.\n   * @param origin - The origin associated with the permission.\n   * @param validationOptions - Validation options.\n   * @param validationOptions.invokePermissionValidator - Whether to invoke the\n   * permission's consumer-specified validator function, if any.\n   * @param validationOptions.performCaveatValidation - Whether to invoke\n   * {@link PermissionController.validateCaveat} on each of the permission's\n   * caveats.\n   */\n  validatePermission(specification, permission, origin, { invokePermissionValidator, performCaveatValidation } = {\n    invokePermissionValidator: true,\n    performCaveatValidation: true\n  }) {\n    const { allowedCaveats, validator, targetName } = specification;\n    if (specification.subjectTypes?.length && specification.subjectTypes.length > 0) {\n      const metadata = this.messagingSystem.call(\n        \"SubjectMetadataController:getSubjectMetadata\",\n        origin\n      );\n      if (!metadata || metadata.subjectType === null || !specification.subjectTypes.includes(metadata.subjectType)) {\n        throw specification.permissionType === \"RestrictedMethod\" /* RestrictedMethod */ ? _chunkFYADAA2Gjs.methodNotFound.call(void 0, targetName, { origin }) : new (0, _chunkFYADAA2Gjs.EndowmentPermissionDoesNotExistError)(targetName, origin);\n      }\n    }\n    if (_utils.hasProperty.call(void 0, permission, \"caveats\")) {\n      const { caveats } = permission;\n      if (caveats !== null && !(Array.isArray(caveats) && caveats.length > 0)) {\n        throw new (0, _chunkFYADAA2Gjs.InvalidCaveatsPropertyError)(origin, targetName, caveats);\n      }\n      const seenCaveatTypes = /* @__PURE__ */ new Set();\n      caveats?.forEach((caveat) => {\n        if (performCaveatValidation) {\n          this.validateCaveat(caveat, origin, targetName);\n        }\n        if (!allowedCaveats?.includes(caveat.type)) {\n          throw new (0, _chunkFYADAA2Gjs.ForbiddenCaveatError)(caveat.type, origin, targetName);\n        }\n        if (seenCaveatTypes.has(caveat.type)) {\n          throw new (0, _chunkFYADAA2Gjs.DuplicateCaveatError)(caveat.type, origin, targetName);\n        }\n        seenCaveatTypes.add(caveat.type);\n      });\n    }\n    if (invokePermissionValidator && validator) {\n      validator(permission, origin, targetName);\n    }\n  }\n  /**\n   * Assigns the specified permissions to the subject with the given origin.\n   * Overwrites all existing permissions, and creates a subject entry if it\n   * doesn't already exist.\n   *\n   * ATTN: Assumes that the new permissions have been validated.\n   *\n   * @param origin - The origin of the grantee subject.\n   * @param permissions - The new permissions for the grantee subject.\n   */\n  setValidatedPermissions(origin, permissions) {\n    this.update((draftState) => {\n      if (!draftState.subjects[origin]) {\n        draftState.subjects[origin] = { origin, permissions: {} };\n      }\n      draftState.subjects[origin].permissions = _immer.castDraft.call(void 0, permissions);\n    });\n  }\n  /**\n   * Validates the requested caveats for the permission of the specified\n   * subject origin and target name and returns the validated caveat array.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param origin - The origin of the permission subject.\n   * @param target - The permission target name.\n   * @param requestedCaveats - The requested caveats to construct.\n   * @returns The constructed caveats.\n   */\n  constructCaveats(origin, target, requestedCaveats) {\n    const caveatArray = requestedCaveats?.map((requestedCaveat) => {\n      this.validateCaveat(requestedCaveat, origin, target);\n      const { type, value } = requestedCaveat;\n      return { type, value };\n    });\n    return caveatArray && _controllerutils.isNonEmptyArray.call(void 0, caveatArray) ? caveatArray : void 0;\n  }\n  /**\n   * This methods validates that the specified caveat is an object with the\n   * expected properties and types. It also ensures that a caveat specification\n   * exists for the requested caveat type, and calls the specification\n   * validator, if it exists, on the caveat object.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param caveat - The caveat object to validate.\n   * @param origin - The origin associated with the subject of the parent\n   * permission.\n   * @param target - The target name associated with the parent permission.\n   */\n  validateCaveat(caveat, origin, target) {\n    if (!_controllerutils.isPlainObject.call(void 0, caveat)) {\n      throw new (0, _chunkFYADAA2Gjs.InvalidCaveatError)(caveat, origin, target);\n    }\n    if (Object.keys(caveat).length !== 2) {\n      throw new (0, _chunkFYADAA2Gjs.InvalidCaveatFieldsError)(caveat, origin, target);\n    }\n    if (typeof caveat.type !== \"string\") {\n      throw new (0, _chunkFYADAA2Gjs.InvalidCaveatTypeError)(caveat, origin, target);\n    }\n    const specification = this.getCaveatSpecification(caveat.type);\n    if (!specification) {\n      throw new (0, _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError)(caveat.type, origin, target);\n    }\n    if (!_utils.hasProperty.call(void 0, caveat, \"value\") || caveat.value === void 0) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatMissingValueError)(caveat, origin, target);\n    }\n    if (!_controllerutils.isValidJson.call(void 0, caveat.value)) {\n      throw new (0, _chunkFYADAA2Gjs.CaveatInvalidJsonError)(caveat, origin, target);\n    }\n    specification.validator?.(caveat, origin, target);\n  }\n  /**\n   * Initiates a permission request that requires user approval.\n   *\n   * Either this or {@link PermissionController.requestPermissionsIncremental}\n   * should always be used to grant additional permissions to a subject,\n   * unless user approval has been obtained through some other means.\n   *\n   * Permissions are validated at every step of the approval process, and this\n   * method will reject if validation fails.\n   *\n   * @see {@link ApprovalController} For the user approval logic.\n   * @see {@link PermissionController.acceptPermissionsRequest} For the method\n   * that _accepts_ the request and resolves the user approval promise.\n   * @see {@link PermissionController.rejectPermissionsRequest} For the method\n   * that _rejects_ the request and the user approval promise.\n   * @param subject - The grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   * @param options - Additional options.\n   * @param options.id - The id of the permissions request. Defaults to a unique\n   * id.\n   * @param options.preserveExistingPermissions - Whether to preserve the\n   * subject's existing permissions. Defaults to `true`.\n   * @param options.metadata - Additional metadata about the permission request.\n   * @returns The granted permissions and request metadata.\n   */\n  async requestPermissions(subject, requestedPermissions, options = {}) {\n    const { origin } = subject;\n    const { id = _nanoid.nanoid.call(void 0, ), preserveExistingPermissions = true } = options;\n    this.validateRequestedPermissions(origin, requestedPermissions);\n    const metadata = {\n      ...options.metadata,\n      id,\n      origin\n    };\n    const permissionsRequest = {\n      metadata,\n      permissions: requestedPermissions\n    };\n    const approvedRequest = await this.requestUserApproval(permissionsRequest);\n    return await _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _handleApprovedPermissions, handleApprovedPermissions_fn).call(this, {\n      subject,\n      metadata,\n      preserveExistingPermissions,\n      approvedRequest\n    });\n  }\n  /**\n   * Initiates an incremental permission request that prompts for user approval.\n   * Incremental permission requests allow the caller to replace existing and/or\n   * add brand new permissions and caveats for the specified subject.\n   *\n   * Incremental permission request are merged with the subject's existing permissions\n   * through a right-biased union, where the incremental permission are the right-hand\n   * side of the merger. If both sides of the merger specify the same caveats for a\n   * given permission, the caveats are merged using their specification's caveat value\n   * merger property.\n   *\n   * Either this or {@link PermissionController.requestPermissions} should\n   * always be used to grant additional permissions to a subject, unless user\n   * approval has been obtained through some other means.\n   *\n   * Permissions are validated at every step of the approval process, and this\n   * method will reject if validation fails.\n   *\n   * @see {@link ApprovalController} For the user approval logic.\n   * @see {@link PermissionController.acceptPermissionsRequest} For the method\n   * that _accepts_ the request and resolves the user approval promise.\n   * @see {@link PermissionController.rejectPermissionsRequest} For the method\n   * that _rejects_ the request and the user approval promise.\n   * @param subject - The grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   * @param options - Additional options.\n   * @param options.id - The id of the permissions request. Defaults to a unique\n   * id.\n   * @param options.metadata - Additional metadata about the permission request.\n   * @returns The granted permissions and request metadata.\n   */\n  async requestPermissionsIncremental(subject, requestedPermissions, options = {}) {\n    const { origin } = subject;\n    const { id = _nanoid.nanoid.call(void 0, ) } = options;\n    this.validateRequestedPermissions(origin, requestedPermissions);\n    const currentPermissions = this.getPermissions(origin) ?? {};\n    const [newPermissions, permissionDiffMap] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeIncrementalPermissions, mergeIncrementalPermissions_fn).call(this, currentPermissions, requestedPermissions);\n    if (newPermissions === void 0 || permissionDiffMap === void 0) {\n      return [];\n    }\n    try {\n      this.validateRequestedPermissions(origin, newPermissions);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new (0, _chunkFYADAA2Gjs.InvalidMergedPermissionsError)(\n          origin,\n          error,\n          permissionDiffMap\n        );\n      }\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \"Unrecognized error type\", { error });\n    }\n    const metadata = {\n      ...options.metadata,\n      id,\n      origin\n    };\n    const permissionsRequest = {\n      metadata,\n      permissions: newPermissions,\n      diff: {\n        currentPermissions,\n        permissionDiffMap\n      }\n    };\n    const approvedRequest = await this.requestUserApproval(permissionsRequest);\n    return await _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _handleApprovedPermissions, handleApprovedPermissions_fn).call(this, {\n      subject,\n      metadata,\n      preserveExistingPermissions: false,\n      approvedRequest\n    });\n  }\n  /**\n   * Validates requested permissions. Throws if validation fails.\n   *\n   * This method ensures that the requested permissions are a properly\n   * formatted {@link RequestedPermissions} object, and performs the same\n   * validation as {@link PermissionController.grantPermissions}, except that\n   * consumer-specified permission validator functions are not called, since\n   * they are only called on fully constructed, approved permissions that are\n   * otherwise completely valid.\n   *\n   * Unrecognzied properties on requested permissions are ignored.\n   *\n   * @param origin - The origin of the grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   */\n  validateRequestedPermissions(origin, requestedPermissions) {\n    if (!_controllerutils.isPlainObject.call(void 0, requestedPermissions)) {\n      throw _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n        message: `Requested permissions for origin \"${origin}\" is not a plain object.`,\n        data: { origin, requestedPermissions }\n      });\n    }\n    if (Object.keys(requestedPermissions).length === 0) {\n      throw _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n        message: `Permissions request for origin \"${origin}\" contains no permissions.`,\n        data: { requestedPermissions }\n      });\n    }\n    for (const targetName of Object.keys(requestedPermissions)) {\n      const permission = requestedPermissions[targetName];\n      if (!this.targetExists(targetName)) {\n        throw _chunkFYADAA2Gjs.methodNotFound.call(void 0, targetName, { origin, requestedPermissions });\n      }\n      if (!_controllerutils.isPlainObject.call(void 0, permission) || permission.parentCapability !== void 0 && targetName !== permission.parentCapability) {\n        throw _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n          message: `Permissions request for origin \"${origin}\" contains invalid requested permission(s).`,\n          data: { origin, requestedPermissions }\n        });\n      }\n      this.validatePermission(\n        this.getPermissionSpecification(targetName),\n        // Typecast: The permission is still a \"PlainObject\" here.\n        permission,\n        origin,\n        { invokePermissionValidator: false, performCaveatValidation: true }\n      );\n    }\n  }\n  /**\n   * Adds a request to the {@link ApprovalController} using the\n   * {@link AddApprovalRequest} action. Also validates the resulting approved\n   * permissions request, and throws an error if validation fails.\n   *\n   * @param permissionsRequest - The permissions request object.\n   * @returns The approved permissions request object.\n   */\n  async requestUserApproval(permissionsRequest) {\n    const { origin, id } = permissionsRequest.metadata;\n    const approvedRequest = await this.messagingSystem.call(\n      \"ApprovalController:addRequest\",\n      {\n        id,\n        origin,\n        requestData: permissionsRequest,\n        type: \"wallet_requestPermissions\" /* RequestPermissions */\n      },\n      true\n    );\n    this.validateApprovedPermissions(approvedRequest, { id, origin });\n    return approvedRequest;\n  }\n  /**\n   * Reunites all the side-effects (onPermitted and onFailure) of the requested permissions inside a record of arrays.\n   *\n   * @param permissions - The approved permissions.\n   * @returns The {@link SideEffects} object containing the handlers arrays.\n   */\n  getSideEffects(permissions) {\n    return Object.keys(permissions).reduce(\n      (sideEffectList, targetName) => {\n        if (this.targetExists(targetName)) {\n          const specification = this.getPermissionSpecification(targetName);\n          if (specification.sideEffect) {\n            sideEffectList.permittedHandlers[targetName] = specification.sideEffect.onPermitted;\n            if (specification.sideEffect.onFailure) {\n              sideEffectList.failureHandlers[targetName] = specification.sideEffect.onFailure;\n            }\n          }\n        }\n        return sideEffectList;\n      },\n      { permittedHandlers: {}, failureHandlers: {} }\n    );\n  }\n  /**\n   * Executes the side-effects of the approved permissions while handling the errors if any.\n   * It will pass an instance of the {@link messagingSystem} and the request data associated with the permission request to the handlers through its params.\n   *\n   * @param sideEffects - the side-effect record created by {@link getSideEffects}\n   * @param requestData - the permissions requestData.\n   * @returns the value returned by all the `onPermitted` handlers in an array.\n   */\n  async executeSideEffects(sideEffects, requestData) {\n    const { permittedHandlers, failureHandlers } = sideEffects;\n    const params = {\n      requestData,\n      messagingSystem: this.messagingSystem\n    };\n    const promiseResults = await Promise.allSettled(\n      Object.values(permittedHandlers).map(\n        (permittedHandler) => permittedHandler(params)\n      )\n    );\n    const rejectedHandlers = promiseResults.filter(\n      (promise) => promise.status === \"rejected\"\n    );\n    if (rejectedHandlers.length > 0) {\n      const failureHandlersList = Object.values(failureHandlers);\n      if (failureHandlersList.length > 0) {\n        try {\n          await Promise.all(\n            failureHandlersList.map((failureHandler) => failureHandler(params))\n          );\n        } catch (error) {\n          throw _chunkFYADAA2Gjs.internalError.call(void 0, \"Unexpected error in side-effects\", { error });\n        }\n      }\n      const reasons = rejectedHandlers.map((handler) => handler.reason);\n      reasons.forEach((reason) => {\n        console.error(reason);\n      });\n      throw reasons.length > 1 ? _chunkFYADAA2Gjs.internalError.call(void 0, \n        \"Multiple errors occurred during side-effects execution\",\n        { errors: reasons }\n      ) : reasons[0];\n    }\n    return promiseResults.map(\n      ({ value }) => value\n    );\n  }\n  /**\n   * Validates an approved {@link PermissionsRequest} object. The approved\n   * request must have the required `metadata` and `permissions` properties,\n   * the `id` and `origin` of the `metadata` must match the original request\n   * metadata, and the requested permissions must be valid per\n   * {@link PermissionController.validateRequestedPermissions}. Any extra\n   * metadata properties are ignored.\n   *\n   * An error is thrown if validation fails.\n   *\n   * @param approvedRequest - The approved permissions request object.\n   * @param originalMetadata - The original request metadata.\n   */\n  validateApprovedPermissions(approvedRequest, originalMetadata) {\n    const { id, origin } = originalMetadata;\n    if (!_controllerutils.isPlainObject.call(void 0, approvedRequest) || !_controllerutils.isPlainObject.call(void 0, approvedRequest.metadata)) {\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" is invalid.`,\n        { data: { approvedRequest } }\n      );\n    }\n    const {\n      metadata: { id: newId, origin: newOrigin },\n      permissions\n    } = approvedRequest;\n    if (newId !== id) {\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" mutated its id.`,\n        { originalId: id, mutatedId: newId }\n      );\n    }\n    if (newOrigin !== origin) {\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" mutated its origin.`,\n        { originalOrigin: origin, mutatedOrigin: newOrigin }\n      );\n    }\n    try {\n      this.validateRequestedPermissions(origin, permissions);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw _chunkFYADAA2Gjs.internalError.call(void 0, \n          `Invalid approved permissions request: ${error.message}`,\n          error instanceof _rpcerrors.JsonRpcError ? error.data : void 0\n        );\n      }\n      throw _chunkFYADAA2Gjs.internalError.call(void 0, \"Unrecognized error type\", { error });\n    }\n  }\n  /**\n   * Accepts a permissions request created by\n   * {@link PermissionController.requestPermissions}.\n   *\n   * @param request - The permissions request.\n   */\n  async acceptPermissionsRequest(request) {\n    const { id } = request.metadata;\n    if (!this.hasApprovalRequest({ id })) {\n      throw new (0, _chunkFYADAA2Gjs.PermissionsRequestNotFoundError)(id);\n    }\n    if (Object.keys(request.permissions).length === 0) {\n      this._rejectPermissionsRequest(\n        id,\n        _chunkFYADAA2Gjs.invalidParams.call(void 0, {\n          message: \"Must request at least one permission.\"\n        })\n      );\n      return;\n    }\n    try {\n      await this.messagingSystem.call(\n        \"ApprovalController:acceptRequest\",\n        id,\n        request\n      );\n    } catch (error) {\n      this._rejectPermissionsRequest(id, error);\n      throw error;\n    }\n  }\n  /**\n   * Rejects a permissions request created by\n   * {@link PermissionController.requestPermissions}.\n   *\n   * @param id - The id of the request to be rejected.\n   */\n  async rejectPermissionsRequest(id) {\n    if (!this.hasApprovalRequest({ id })) {\n      throw new (0, _chunkFYADAA2Gjs.PermissionsRequestNotFoundError)(id);\n    }\n    this._rejectPermissionsRequest(id, _chunkFYADAA2Gjs.userRejectedRequest.call(void 0, ));\n  }\n  /**\n   * Checks whether the {@link ApprovalController} has a particular permissions\n   * request.\n   *\n   * @see {@link PermissionController.acceptPermissionsRequest} and\n   * {@link PermissionController.rejectPermissionsRequest} for usage.\n   * @param options - The {@link HasApprovalRequest} options.\n   * @param options.id - The id of the approval request to check for.\n   * @returns Whether the specified request exists.\n   */\n  hasApprovalRequest(options) {\n    return this.messagingSystem.call(\"ApprovalController:hasRequest\", options);\n  }\n  /**\n   * Rejects the permissions request with the specified id, with the specified\n   * error as the reason. This method is effectively a wrapper around a\n   * messenger call for the `ApprovalController:rejectRequest` action.\n   *\n   * @see {@link PermissionController.acceptPermissionsRequest} and\n   * {@link PermissionController.rejectPermissionsRequest} for usage.\n   * @param id - The id of the request to reject.\n   * @param error - The error associated with the rejection.\n   * @returns Nothing\n   */\n  _rejectPermissionsRequest(id, error) {\n    return this.messagingSystem.call(\n      \"ApprovalController:rejectRequest\",\n      id,\n      error\n    );\n  }\n  /**\n   * Gets the subject's endowments per the specified endowment permission.\n   * Throws if the subject does not have the required permission or if the\n   * permission is not an endowment permission.\n   *\n   * @param origin - The origin of the subject whose endowments to retrieve.\n   * @param targetName - The name of the endowment permission. This must be a\n   * valid permission target name.\n   * @param requestData - Additional data associated with the request, if any.\n   * Forwarded to the endowment getter function for the permission.\n   * @returns The endowments, if any.\n   */\n  async getEndowments(origin, targetName, requestData) {\n    if (!this.hasPermission(origin, targetName)) {\n      throw _chunkFYADAA2Gjs.unauthorized.call(void 0, { data: { origin, targetName } });\n    }\n    return this.getTypedPermissionSpecification(\n      \"Endowment\" /* Endowment */,\n      targetName,\n      origin\n    ).endowmentGetter({ origin, requestData });\n  }\n  /**\n   * Executes a restricted method as the subject with the given origin.\n   * The specified params, if any, will be passed to the method implementation.\n   *\n   * ATTN: Great caution should be exercised in the use of this method.\n   * Methods that cause side effects or affect application state should\n   * be avoided.\n   *\n   * This method will first attempt to retrieve the requested restricted method\n   * implementation, throwing if it does not exist. The method will then be\n   * invoked as though the subject with the specified origin had invoked it with\n   * the specified parameters. This means that any existing caveats will be\n   * applied to the restricted method, and this method will throw if the\n   * restricted method or its caveat decorators throw.\n   *\n   * In addition, this method will throw if the subject does not have a\n   * permission for the specified restricted method.\n   *\n   * @param origin - The origin of the subject to execute the method on behalf\n   * of.\n   * @param targetName - The name of the method to execute. This must be a valid\n   * permission target name.\n   * @param params - The parameters to pass to the method implementation.\n   * @returns The result of the executed method.\n   */\n  async executeRestrictedMethod(origin, targetName, params) {\n    const methodImplementation = this.getRestrictedMethod(targetName, origin);\n    const result = await this._executeRestrictedMethod(\n      methodImplementation,\n      { origin },\n      targetName,\n      params\n    );\n    if (result === void 0) {\n      throw new Error(\n        `Internal request for method \"${targetName}\" as origin \"${origin}\" returned no result.`\n      );\n    }\n    return result;\n  }\n  /**\n   * An internal method used in the controller's `json-rpc-engine` middleware\n   * and {@link PermissionController.executeRestrictedMethod}. Calls the\n   * specified restricted method implementation after decorating it with the\n   * caveats of its permission. Throws if the subject does not have the\n   * requisite permission.\n   *\n   * ATTN: Parameter validation is the responsibility of the caller, or\n   * the restricted method implementation in the case of `params`.\n   *\n   * @see {@link PermissionController.executeRestrictedMethod} and\n   * {@link PermissionController.createPermissionMiddleware} for usage.\n   * @param methodImplementation - The implementation of the method to call.\n   * @param subject - Metadata about the subject that made the request.\n   * @param method - The method name\n   * @param params - Params needed for executing the restricted method\n   * @returns The result of the restricted method implementation\n   */\n  _executeRestrictedMethod(methodImplementation, subject, method, params = []) {\n    const { origin } = subject;\n    const permission = this.getPermission(origin, method);\n    if (!permission) {\n      throw _chunkFYADAA2Gjs.unauthorized.call(void 0, { data: { origin, method } });\n    }\n    return _chunk3YOPLPVYjs.decorateWithCaveats.call(void 0, \n      methodImplementation,\n      permission,\n      this._caveatSpecifications\n    )({ method, params, context: { origin } });\n  }\n};\n_expectGetCaveatMerger = new WeakSet();\nexpectGetCaveatMerger_fn = function(caveatType) {\n  const { merger } = this.getCaveatSpecification(caveatType);\n  if (merger === void 0) {\n    throw new (0, _chunkFYADAA2Gjs.CaveatMergerDoesNotExistError)(caveatType);\n  }\n  return merger;\n};\n_applyGrantedPermissions = new WeakSet();\napplyGrantedPermissions_fn = function({\n  approvedPermissions,\n  subject,\n  mergePermissions,\n  preserveExistingPermissions,\n  requestData\n}) {\n  const { origin } = subject;\n  if (!origin || typeof origin !== \"string\") {\n    throw new (0, _chunkFYADAA2Gjs.InvalidSubjectIdentifierError)(origin);\n  }\n  const permissions = preserveExistingPermissions ? {\n    ...this.getPermissions(origin)\n  } : {};\n  for (const [requestedTarget, approvedPermission] of Object.entries(\n    approvedPermissions\n  )) {\n    if (!this.targetExists(requestedTarget)) {\n      throw _chunkFYADAA2Gjs.methodNotFound.call(void 0, requestedTarget);\n    }\n    if (approvedPermission.parentCapability !== void 0 && requestedTarget !== approvedPermission.parentCapability) {\n      throw new (0, _chunkFYADAA2Gjs.InvalidApprovedPermissionError)(\n        origin,\n        requestedTarget,\n        approvedPermission\n      );\n    }\n    const targetName = requestedTarget;\n    const specification = this.getPermissionSpecification(targetName);\n    const caveats = this.constructCaveats(\n      origin,\n      targetName,\n      approvedPermission.caveats\n    );\n    const permissionOptions = {\n      caveats,\n      invoker: origin,\n      target: targetName\n    };\n    let permission;\n    let performCaveatValidation = true;\n    if (specification.factory) {\n      permission = specification.factory(permissionOptions, requestData);\n    } else {\n      permission = _chunkZH4MLSXXjs.constructPermission.call(void 0, permissionOptions);\n      performCaveatValidation = false;\n    }\n    if (mergePermissions) {\n      permission = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergePermission, mergePermission_fn).call(this, permissions[targetName], permission)[0];\n    }\n    this.validatePermission(specification, permission, origin, {\n      invokePermissionValidator: true,\n      performCaveatValidation\n    });\n    permissions[targetName] = permission;\n  }\n  this.setValidatedPermissions(origin, permissions);\n  return permissions;\n};\n_mergeIncrementalPermissions = new WeakSet();\nmergeIncrementalPermissions_fn = function(existingPermissions, incrementalRequestedPermissions) {\n  const permissionDiffMap = {};\n  const newPermissions = _immer.produce.call(void 0, \n    existingPermissions,\n    (draftExistingPermissions) => {\n      const leftPermissions = draftExistingPermissions;\n      Object.entries(incrementalRequestedPermissions).forEach(\n        ([targetName, rightPermission]) => {\n          const leftPermission = leftPermissions[targetName];\n          const [newPermission, caveatsDiff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergePermission, mergePermission_fn).call(this, leftPermission ?? {}, rightPermission);\n          if (leftPermission === void 0 || Object.keys(caveatsDiff).length > 0) {\n            leftPermissions[targetName] = newPermission;\n            permissionDiffMap[targetName] = caveatsDiff;\n          }\n        }\n      );\n    }\n  );\n  if (Object.keys(permissionDiffMap).length === 0) {\n    return [];\n  }\n  return [newPermissions, permissionDiffMap];\n};\n_mergePermission = new WeakSet();\nmergePermission_fn = function(leftPermission, rightPermission) {\n  const { caveatPairs, leftUniqueCaveats, rightUniqueCaveats } = _chunkVQPP5PWSjs.collectUniqueAndPairedCaveats.call(void 0, leftPermission, rightPermission);\n  const [mergedCaveats, caveatDiffMap] = caveatPairs.reduce(\n    ([caveats, diffMap], [leftCaveat, rightCaveat]) => {\n      const [newCaveat, diff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeCaveat, mergeCaveat_fn).call(this, leftCaveat, rightCaveat);\n      if (newCaveat !== void 0 && diff !== void 0) {\n        caveats.push(newCaveat);\n        diffMap[newCaveat.type] = diff;\n      } else {\n        caveats.push(leftCaveat);\n      }\n      return [caveats, diffMap];\n    },\n    [[], {}]\n  );\n  const mergedRightUniqueCaveats = rightUniqueCaveats.map((caveat) => {\n    const [newCaveat, diff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeCaveat, mergeCaveat_fn).call(this, void 0, caveat);\n    caveatDiffMap[newCaveat.type] = diff;\n    return newCaveat;\n  });\n  const allCaveats = [\n    ...mergedCaveats,\n    ...leftUniqueCaveats,\n    ...mergedRightUniqueCaveats\n  ];\n  const newPermission = {\n    ...leftPermission,\n    ...rightPermission,\n    ...allCaveats.length > 0 ? { caveats: allCaveats } : {}\n  };\n  return [newPermission, caveatDiffMap];\n};\n_mergeCaveat = new WeakSet();\nmergeCaveat_fn = function(leftCaveat, rightCaveat) {\n  if (leftCaveat !== void 0 && leftCaveat.type !== rightCaveat.type) {\n    throw new (0, _chunkFYADAA2Gjs.CaveatMergeTypeMismatchError)(leftCaveat.type, rightCaveat.type);\n  }\n  const merger = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _expectGetCaveatMerger, expectGetCaveatMerger_fn).call(this, rightCaveat.type);\n  if (leftCaveat === void 0) {\n    return [\n      {\n        ...rightCaveat\n      },\n      rightCaveat.value\n    ];\n  }\n  const [newValue, diff] = merger(leftCaveat.value, rightCaveat.value);\n  return newValue !== void 0 && diff !== void 0 ? [\n    {\n      type: rightCaveat.type,\n      value: newValue\n    },\n    diff\n  ] : [];\n};\n_handleApprovedPermissions = new WeakSet();\nhandleApprovedPermissions_fn = async function({\n  subject,\n  metadata,\n  preserveExistingPermissions,\n  approvedRequest\n}) {\n  const { permissions: approvedPermissions, ...requestData } = approvedRequest;\n  const approvedMetadata = { ...metadata };\n  const sideEffects = this.getSideEffects(approvedPermissions);\n  if (Object.values(sideEffects.permittedHandlers).length > 0) {\n    const sideEffectsData = await this.executeSideEffects(\n      sideEffects,\n      approvedRequest\n    );\n    approvedMetadata.data = Object.keys(sideEffects.permittedHandlers).reduce(\n      (acc, permission, i) => ({ [permission]: sideEffectsData[i], ...acc }),\n      {}\n    );\n  }\n  return [\n    this.grantPermissions({\n      subject,\n      approvedPermissions,\n      preserveExistingPermissions,\n      requestData\n    }),\n    approvedMetadata\n  ];\n};\n\n\n\n\nexports.CaveatMutatorOperation = CaveatMutatorOperation; exports.PermissionController = PermissionController;\n//# sourceMappingURL=chunk-B6PDRQ7N.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/permission-middleware.ts\nvar _jsonrpcengine = require('@metamask/json-rpc-engine');\nfunction getPermissionMiddlewareFactory({\n  executeRestrictedMethod,\n  getRestrictedMethod,\n  isUnrestrictedMethod\n}) {\n  return function createPermissionMiddleware(subject) {\n    const { origin } = subject;\n    if (typeof origin !== \"string\" || !origin) {\n      throw new Error('The subject \"origin\" must be a non-empty string.');\n    }\n    const permissionsMiddleware = async (req, res, next) => {\n      const { method, params } = req;\n      if (isUnrestrictedMethod(method)) {\n        return next();\n      }\n      const methodImplementation = getRestrictedMethod(method, origin);\n      const result = await executeRestrictedMethod(\n        methodImplementation,\n        subject,\n        method,\n        params\n      );\n      if (result === void 0) {\n        res.error = _chunkFYADAA2Gjs.internalError.call(void 0, \n          `Request for method \"${req.method}\" returned undefined result.`,\n          { request: req }\n        );\n        return void 0;\n      }\n      res.result = result;\n      return void 0;\n    };\n    return _jsonrpcengine.createAsyncMiddleware.call(void 0, permissionsMiddleware);\n  };\n}\n\n\n\nexports.getPermissionMiddlewareFactory = getPermissionMiddlewareFactory;\n//# sourceMappingURL=chunk-F5TBMVWC.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/errors.ts\n\n\n\n\n\nvar _rpcerrors = require('@metamask/rpc-errors');\nfunction unauthorized(opts) {\n  return _rpcerrors.providerErrors.unauthorized({\n    message: \"Unauthorized to perform action. Try requesting the required permission(s) first. For more information, see: https://docs.metamask.io/guide/rpc-api.html#permissions\",\n    data: opts.data\n  });\n}\nfunction methodNotFound(method, data) {\n  const message = `The method \"${method}\" does not exist / is not available.`;\n  const opts = { message };\n  if (data !== void 0) {\n    opts.data = data;\n  }\n  return _rpcerrors.rpcErrors.methodNotFound(opts);\n}\nfunction invalidParams(opts) {\n  return _rpcerrors.rpcErrors.invalidParams({\n    data: opts.data,\n    message: opts.message\n  });\n}\nfunction userRejectedRequest(data) {\n  return _rpcerrors.providerErrors.userRejectedRequest({ data });\n}\nfunction internalError(message, data) {\n  return _rpcerrors.rpcErrors.internal({ message, data });\n}\nvar InvalidSubjectIdentifierError = class extends Error {\n  constructor(origin) {\n    super(\n      `Invalid subject identifier: \"${typeof origin === \"string\" ? origin : typeof origin}\"`\n    );\n  }\n};\nvar UnrecognizedSubjectError = class extends Error {\n  constructor(origin) {\n    super(`Unrecognized subject: \"${origin}\" has no permissions.`);\n  }\n};\nvar CaveatMergerDoesNotExistError = class extends Error {\n  constructor(caveatType) {\n    super(`Caveat value merger does not exist for type: \"${caveatType}\"`);\n  }\n};\nvar InvalidMergedPermissionsError = class extends Error {\n  constructor(origin, cause, diff) {\n    super(\n      `Invalid merged permissions for subject \"${origin}\":\n${cause.message}`\n    );\n    this.cause = cause;\n    this.data = { diff };\n  }\n};\nvar InvalidApprovedPermissionError = class extends Error {\n  constructor(origin, target, approvedPermission) {\n    super(\n      `Invalid approved permission for origin \"${origin}\" and target \"${target}\".`\n    );\n    this.data = { origin, target, approvedPermission };\n  }\n};\nvar PermissionDoesNotExistError = class extends Error {\n  constructor(origin, target) {\n    super(`Subject \"${origin}\" has no permission for \"${target}\".`);\n  }\n};\nvar EndowmentPermissionDoesNotExistError = class extends Error {\n  constructor(target, origin) {\n    super(\n      `${origin ? `Subject \"${origin}\"` : \"Unknown subject\"} has no permission for \"${target}\".`\n    );\n    if (origin) {\n      this.data = { origin };\n    }\n  }\n};\nvar UnrecognizedCaveatTypeError = class extends Error {\n  constructor(caveatType, origin, target) {\n    super(`Unrecognized caveat type: \"${caveatType}\"`);\n    this.data = { caveatType };\n    if (origin !== void 0) {\n      this.data.origin = origin;\n    }\n    if (target !== void 0) {\n      this.data.target = target;\n    }\n  }\n};\nvar InvalidCaveatsPropertyError = class extends Error {\n  constructor(origin, target, caveatsProperty) {\n    super(\n      `The \"caveats\" property of permission for \"${target}\" of subject \"${origin}\" is invalid. It must be a non-empty array if specified.`\n    );\n    this.data = { origin, target, caveatsProperty };\n  }\n};\nvar CaveatDoesNotExistError = class extends Error {\n  constructor(origin, target, caveatType) {\n    super(\n      `Permission for \"${target}\" of subject \"${origin}\" has no caveat of type \"${caveatType}\".`\n    );\n  }\n};\nvar CaveatAlreadyExistsError = class extends Error {\n  constructor(origin, target, caveatType) {\n    super(\n      `Permission for \"${target}\" of subject \"${origin}\" already has a caveat of type \"${caveatType}\".`\n    );\n  }\n};\nvar InvalidCaveatError = class extends _rpcerrors.JsonRpcError {\n  constructor(receivedCaveat, origin, target) {\n    super(\n      _rpcerrors.errorCodes.rpc.invalidParams,\n      `Invalid caveat. Caveats must be plain objects.`,\n      { receivedCaveat }\n    );\n    this.data = { origin, target };\n  }\n};\nvar InvalidCaveatTypeError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat types must be strings. Received: \"${typeof caveat.type}\"`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar CaveatMissingValueError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat is missing \"value\" field.`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar CaveatInvalidJsonError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat \"value\" is invalid JSON.`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar InvalidCaveatFieldsError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(\n      `Caveat has unexpected number of fields: \"${Object.keys(caveat).length}\"`\n    );\n    this.data = { caveat, origin, target };\n  }\n};\nvar ForbiddenCaveatError = class extends Error {\n  constructor(caveatType, origin, targetName) {\n    super(\n      `Permissions for target \"${targetName}\" may not have caveats of type \"${caveatType}\".`\n    );\n    this.data = { caveatType, origin, target: targetName };\n  }\n};\nvar DuplicateCaveatError = class extends Error {\n  constructor(caveatType, origin, targetName) {\n    super(\n      `Permissions for target \"${targetName}\" contains multiple caveats of type \"${caveatType}\".`\n    );\n    this.data = { caveatType, origin, target: targetName };\n  }\n};\nvar CaveatMergeTypeMismatchError = class extends Error {\n  constructor(leftCaveatType, rightCaveatType) {\n    super(\n      `Cannot merge caveats of different types: \"${leftCaveatType}\" and \"${rightCaveatType}\".`\n    );\n    this.data = { leftCaveatType, rightCaveatType };\n  }\n};\nvar CaveatSpecificationMismatchError = class extends Error {\n  constructor(caveatSpec, permissionType) {\n    super(\n      `Caveat specification uses a mismatched type. Expected caveats for ${permissionType}`\n    );\n    this.data = { caveatSpec, permissionType };\n  }\n};\nvar PermissionsRequestNotFoundError = class extends Error {\n  constructor(id) {\n    super(`Permissions request with id \"${id}\" not found.`);\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.unauthorized = unauthorized; exports.methodNotFound = methodNotFound; exports.invalidParams = invalidParams; exports.userRejectedRequest = userRejectedRequest; exports.internalError = internalError; exports.InvalidSubjectIdentifierError = InvalidSubjectIdentifierError; exports.UnrecognizedSubjectError = UnrecognizedSubjectError; exports.CaveatMergerDoesNotExistError = CaveatMergerDoesNotExistError; exports.InvalidMergedPermissionsError = InvalidMergedPermissionsError; exports.InvalidApprovedPermissionError = InvalidApprovedPermissionError; exports.PermissionDoesNotExistError = PermissionDoesNotExistError; exports.EndowmentPermissionDoesNotExistError = EndowmentPermissionDoesNotExistError; exports.UnrecognizedCaveatTypeError = UnrecognizedCaveatTypeError; exports.InvalidCaveatsPropertyError = InvalidCaveatsPropertyError; exports.CaveatDoesNotExistError = CaveatDoesNotExistError; exports.CaveatAlreadyExistsError = CaveatAlreadyExistsError; exports.InvalidCaveatError = InvalidCaveatError; exports.InvalidCaveatTypeError = InvalidCaveatTypeError; exports.CaveatMissingValueError = CaveatMissingValueError; exports.CaveatInvalidJsonError = CaveatInvalidJsonError; exports.InvalidCaveatFieldsError = InvalidCaveatFieldsError; exports.ForbiddenCaveatError = ForbiddenCaveatError; exports.DuplicateCaveatError = DuplicateCaveatError; exports.CaveatMergeTypeMismatchError = CaveatMergeTypeMismatchError; exports.CaveatSpecificationMismatchError = CaveatSpecificationMismatchError; exports.PermissionsRequestNotFoundError = PermissionsRequestNotFoundError;\n//# sourceMappingURL=chunk-FYADAA2G.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/rpc-methods/getPermissions.ts\nvar getPermissionsHandler = {\n  methodNames: [\"wallet_getPermissions\" /* GetPermissions */],\n  implementation: getPermissionsImplementation,\n  hookNames: {\n    getPermissionsForOrigin: true\n  }\n};\nasync function getPermissionsImplementation(_req, res, _next, end, { getPermissionsForOrigin }) {\n  res.result = Object.values(getPermissionsForOrigin() || {});\n  return end();\n}\n\n\n\nexports.getPermissionsHandler = getPermissionsHandler;\n//# sourceMappingURL=chunk-VBIZGGQL.js.map","export * from './caveat-mutators';\nexport * from './background-api';\nexport * from './enums';\nexport * from './specifications';\nexport * from './selectors';\n","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/utils.ts\nvar MethodNames = /* @__PURE__ */ ((MethodNames2) => {\n  MethodNames2[\"RequestPermissions\"] = \"wallet_requestPermissions\";\n  MethodNames2[\"GetPermissions\"] = \"wallet_getPermissions\";\n  MethodNames2[\"RevokePermissions\"] = \"wallet_revokePermissions\";\n  return MethodNames2;\n})(MethodNames || {});\nfunction collectUniqueAndPairedCaveats(leftPermission, rightPermission) {\n  const leftCaveats = leftPermission?.caveats?.slice() ?? [];\n  const rightCaveats = rightPermission.caveats?.slice() ?? [];\n  const leftUniqueCaveats = [];\n  const caveatPairs = [];\n  leftCaveats.forEach((leftCaveat) => {\n    const rightCaveatIndex = rightCaveats.findIndex(\n      (rightCaveat) => rightCaveat.type === leftCaveat.type\n    );\n    if (rightCaveatIndex === -1) {\n      leftUniqueCaveats.push(leftCaveat);\n    } else {\n      caveatPairs.push([leftCaveat, rightCaveats[rightCaveatIndex]]);\n      rightCaveats.splice(rightCaveatIndex, 1);\n    }\n  });\n  return {\n    caveatPairs,\n    leftUniqueCaveats,\n    rightUniqueCaveats: [...rightCaveats]\n  };\n}\n\n\n\n\nexports.MethodNames = MethodNames; exports.collectUniqueAndPairedCaveats = collectUniqueAndPairedCaveats;\n//# sourceMappingURL=chunk-VQPP5PWS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/SubjectMetadataController.ts\nvar _basecontroller = require('@metamask/base-controller');\nvar controllerName = \"SubjectMetadataController\";\nvar SubjectType = /* @__PURE__ */ ((SubjectType2) => {\n  SubjectType2[\"Extension\"] = \"extension\";\n  SubjectType2[\"Internal\"] = \"internal\";\n  SubjectType2[\"Unknown\"] = \"unknown\";\n  SubjectType2[\"Website\"] = \"website\";\n  SubjectType2[\"Snap\"] = \"snap\";\n  return SubjectType2;\n})(SubjectType || {});\nvar stateMetadata = {\n  subjectMetadata: { persist: true, anonymous: false }\n};\nvar defaultState = {\n  subjectMetadata: {}\n};\nvar SubjectMetadataController = class _SubjectMetadataController extends _basecontroller.BaseController {\n  constructor({\n    messenger,\n    subjectCacheLimit,\n    state = {}\n  }) {\n    if (!Number.isInteger(subjectCacheLimit) || subjectCacheLimit < 1) {\n      throw new Error(\n        `subjectCacheLimit must be a positive integer. Received: \"${subjectCacheLimit}\"`\n      );\n    }\n    const hasPermissions = (origin) => {\n      return messenger.call(\"PermissionController:hasPermissions\", origin);\n    };\n    super({\n      name: controllerName,\n      metadata: stateMetadata,\n      messenger,\n      state: {\n        ..._SubjectMetadataController.getTrimmedState(state, hasPermissions)\n      }\n    });\n    this.subjectHasPermissions = hasPermissions;\n    this.subjectCacheLimit = subjectCacheLimit;\n    this.subjectsWithoutPermissionsEncounteredSinceStartup = /* @__PURE__ */ new Set();\n    this.messagingSystem.registerActionHandler(\n      // ESLint is confused by the string literal type.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getSubjectMetadata`,\n      this.getSubjectMetadata.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // ESLint is confused by the string literal type.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:addSubjectMetadata`,\n      this.addSubjectMetadata.bind(this)\n    );\n  }\n  /**\n   * Clears the state of this controller. Also resets the cache of subjects\n   * encountered since startup, so as to not prematurely reach the cache limit.\n   */\n  clearState() {\n    this.subjectsWithoutPermissionsEncounteredSinceStartup.clear();\n    this.update((_draftState) => {\n      return { ...defaultState };\n    });\n  }\n  /**\n   * Stores domain metadata for the given origin (subject). Deletes metadata for\n   * subjects without permissions in a FIFO manner once more than\n   * {@link SubjectMetadataController.subjectCacheLimit} distinct origins have\n   * been added since boot.\n   *\n   * In order to prevent a degraded user experience,\n   * metadata is never deleted for subjects with permissions, since metadata\n   * cannot yet be requested on demand.\n   *\n   * @param metadata - The subject metadata to store.\n   */\n  addSubjectMetadata(metadata) {\n    const { origin } = metadata;\n    const newMetadata = {\n      ...metadata,\n      extensionId: metadata.extensionId || null,\n      iconUrl: metadata.iconUrl || null,\n      name: metadata.name || null,\n      subjectType: metadata.subjectType || null\n    };\n    let originToForget = null;\n    if (this.subjectsWithoutPermissionsEncounteredSinceStartup.size >= this.subjectCacheLimit) {\n      const cachedOrigin = this.subjectsWithoutPermissionsEncounteredSinceStartup.values().next().value;\n      this.subjectsWithoutPermissionsEncounteredSinceStartup.delete(\n        cachedOrigin\n      );\n      if (!this.subjectHasPermissions(cachedOrigin)) {\n        originToForget = cachedOrigin;\n      }\n    }\n    this.subjectsWithoutPermissionsEncounteredSinceStartup.add(origin);\n    this.update((draftState) => {\n      draftState.subjectMetadata[origin] = newMetadata;\n      if (typeof originToForget === \"string\") {\n        delete draftState.subjectMetadata[originToForget];\n      }\n    });\n  }\n  /**\n   * Gets the subject metadata for the given origin, if any.\n   *\n   * @param origin - The origin for which to get the subject metadata.\n   * @returns The subject metadata, if any, or `undefined` otherwise.\n   */\n  getSubjectMetadata(origin) {\n    return this.state.subjectMetadata[origin];\n  }\n  /**\n   * Deletes all subjects without permissions from the controller's state.\n   */\n  trimMetadataState() {\n    this.update((draftState) => {\n      return _SubjectMetadataController.getTrimmedState(\n        draftState,\n        this.subjectHasPermissions\n      );\n    });\n  }\n  /**\n   * Returns a new state object that only includes subjects with permissions.\n   * This method is static because we want to call it in the constructor, before\n   * the controller's state is initialized.\n   *\n   * @param state - The state object to trim.\n   * @param hasPermissions - A function that returns a boolean indicating\n   * whether a particular subject (identified by its origin) has any\n   * permissions.\n   * @returns The new state object. If the specified `state` object has no\n   * subject metadata, the returned object will be equivalent to the default\n   * state of this controller.\n   */\n  static getTrimmedState(state, hasPermissions) {\n    const { subjectMetadata = {} } = state;\n    return {\n      subjectMetadata: Object.keys(subjectMetadata).reduce((newSubjectMetadata, origin) => {\n        if (hasPermissions(origin)) {\n          newSubjectMetadata[origin] = subjectMetadata[origin];\n        }\n        return newSubjectMetadata;\n      }, {})\n    };\n  }\n};\n\n\n\n\nexports.SubjectType = SubjectType; exports.SubjectMetadataController = SubjectMetadataController;\n//# sourceMappingURL=chunk-VSDHL2GQ.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n// src/rpc-methods/revokePermissions.ts\n\n\nvar _utils = require('@metamask/utils');\nvar revokePermissionsHandler = {\n  methodNames: [\"wallet_revokePermissions\" /* RevokePermissions */],\n  implementation: revokePermissionsImplementation,\n  hookNames: {\n    revokePermissionsForOrigin: true\n  }\n};\nasync function revokePermissionsImplementation(req, res, _next, end, { revokePermissionsForOrigin }) {\n  const { params } = req;\n  const param = params?.[0];\n  if (!param) {\n    return end(_chunkFYADAA2Gjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  const permissionKeys = Object.keys(param);\n  if (!_utils.isNonEmptyArray.call(void 0, permissionKeys)) {\n    return end(_chunkFYADAA2Gjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  revokePermissionsForOrigin(permissionKeys);\n  res.result = null;\n  return end();\n}\n\n\n\nexports.revokePermissionsHandler = revokePermissionsHandler;\n//# sourceMappingURL=chunk-X4ZAW4QR.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\nexports.__export = __export; exports.__privateAdd = __privateAdd; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z2XKIXLS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/Permission.ts\nvar _nanoid = require('nanoid');\nfunction constructPermission(options) {\n  const { caveats = null, invoker, target } = options;\n  return {\n    id: _nanoid.nanoid.call(void 0, ),\n    parentCapability: target,\n    invoker,\n    caveats,\n    date: (/* @__PURE__ */ new Date()).getTime()\n  };\n}\nfunction findCaveat(permission, caveatType) {\n  return permission.caveats?.find((caveat) => caveat.type === caveatType);\n}\nvar PermissionType = /* @__PURE__ */ ((PermissionType2) => {\n  PermissionType2[\"RestrictedMethod\"] = \"RestrictedMethod\";\n  PermissionType2[\"Endowment\"] = \"Endowment\";\n  return PermissionType2;\n})(PermissionType || {});\nfunction hasSpecificationType(specification, expectedType) {\n  return specification.permissionType === expectedType;\n}\n\n\n\n\n\n\nexports.constructPermission = constructPermission; exports.findCaveat = findCaveat; exports.PermissionType = PermissionType; exports.hasSpecificationType = hasSpecificationType;\n//# sourceMappingURL=chunk-ZH4MLSXX.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunk6PXDVUYMjs = require('./chunk-6PXDVUYM.js');\nrequire('./chunk-VBIZGGQL.js');\nrequire('./chunk-7A3VYLCK.js');\nrequire('./chunk-X4ZAW4QR.js');\n\n\n\nvar _chunkB6PDRQ7Njs = require('./chunk-B6PDRQ7N.js');\n\n\n\nvar _chunk3YOPLPVYjs = require('./chunk-3YOPLPVY.js');\n\n\n\n\n\nvar _chunkZH4MLSXXjs = require('./chunk-ZH4MLSXX.js');\n\n\n\nvar _chunkVSDHL2GQjs = require('./chunk-VSDHL2GQ.js');\nrequire('./chunk-F5TBMVWC.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkFYADAA2Gjs = require('./chunk-FYADAA2G.js');\n\n\nvar _chunkVQPP5PWSjs = require('./chunk-VQPP5PWS.js');\nrequire('./chunk-Z2XKIXLS.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.CaveatAlreadyExistsError = _chunkFYADAA2Gjs.CaveatAlreadyExistsError; exports.CaveatDoesNotExistError = _chunkFYADAA2Gjs.CaveatDoesNotExistError; exports.CaveatInvalidJsonError = _chunkFYADAA2Gjs.CaveatInvalidJsonError; exports.CaveatMergeTypeMismatchError = _chunkFYADAA2Gjs.CaveatMergeTypeMismatchError; exports.CaveatMergerDoesNotExistError = _chunkFYADAA2Gjs.CaveatMergerDoesNotExistError; exports.CaveatMissingValueError = _chunkFYADAA2Gjs.CaveatMissingValueError; exports.CaveatMutatorOperation = _chunkB6PDRQ7Njs.CaveatMutatorOperation; exports.CaveatSpecificationMismatchError = _chunkFYADAA2Gjs.CaveatSpecificationMismatchError; exports.DuplicateCaveatError = _chunkFYADAA2Gjs.DuplicateCaveatError; exports.EndowmentPermissionDoesNotExistError = _chunkFYADAA2Gjs.EndowmentPermissionDoesNotExistError; exports.ForbiddenCaveatError = _chunkFYADAA2Gjs.ForbiddenCaveatError; exports.InvalidApprovedPermissionError = _chunkFYADAA2Gjs.InvalidApprovedPermissionError; exports.InvalidCaveatError = _chunkFYADAA2Gjs.InvalidCaveatError; exports.InvalidCaveatFieldsError = _chunkFYADAA2Gjs.InvalidCaveatFieldsError; exports.InvalidCaveatTypeError = _chunkFYADAA2Gjs.InvalidCaveatTypeError; exports.InvalidCaveatsPropertyError = _chunkFYADAA2Gjs.InvalidCaveatsPropertyError; exports.InvalidMergedPermissionsError = _chunkFYADAA2Gjs.InvalidMergedPermissionsError; exports.InvalidSubjectIdentifierError = _chunkFYADAA2Gjs.InvalidSubjectIdentifierError; exports.MethodNames = _chunkVQPP5PWSjs.MethodNames; exports.PermissionController = _chunkB6PDRQ7Njs.PermissionController; exports.PermissionDoesNotExistError = _chunkFYADAA2Gjs.PermissionDoesNotExistError; exports.PermissionType = _chunkZH4MLSXXjs.PermissionType; exports.PermissionsRequestNotFoundError = _chunkFYADAA2Gjs.PermissionsRequestNotFoundError; exports.SubjectMetadataController = _chunkVSDHL2GQjs.SubjectMetadataController; exports.SubjectType = _chunkVSDHL2GQjs.SubjectType; exports.UnrecognizedCaveatTypeError = _chunkFYADAA2Gjs.UnrecognizedCaveatTypeError; exports.UnrecognizedSubjectError = _chunkFYADAA2Gjs.UnrecognizedSubjectError; exports.constructPermission = _chunkZH4MLSXXjs.constructPermission; exports.decorateWithCaveats = _chunk3YOPLPVYjs.decorateWithCaveats; exports.findCaveat = _chunkZH4MLSXXjs.findCaveat; exports.hasSpecificationType = _chunkZH4MLSXXjs.hasSpecificationType; exports.internalError = _chunkFYADAA2Gjs.internalError; exports.invalidParams = _chunkFYADAA2Gjs.invalidParams; exports.isRestrictedMethodCaveatSpecification = _chunk3YOPLPVYjs.isRestrictedMethodCaveatSpecification; exports.methodNotFound = _chunkFYADAA2Gjs.methodNotFound; exports.permissionRpcMethods = _chunk6PXDVUYMjs.rpc_methods_exports; exports.unauthorized = _chunkFYADAA2Gjs.unauthorized; exports.userRejectedRequest = _chunkFYADAA2Gjs.userRejectedRequest;\n//# sourceMappingURL=index.js.map","module.exports={\n  \"0\": {\n    \"index\": \"0\",\n    \"hex\": \"0x80000000\",\n    \"symbol\": \"BTC\",\n    \"name\": \"Bitcoin\"\n  },\n  \"1\": {\n    \"index\": \"1\",\n    \"hex\": \"0x80000001\",\n    \"symbol\": \"\",\n    \"name\": \"Testnet (all coins)\"\n  },\n  \"2\": {\n    \"index\": \"2\",\n    \"hex\": \"0x80000002\",\n    \"symbol\": \"LTC\",\n    \"name\": \"Litecoin\"\n  },\n  \"3\": {\n    \"index\": \"3\",\n    \"hex\": \"0x80000003\",\n    \"symbol\": \"DOGE\",\n    \"name\": \"Dogecoin\"\n  },\n  \"4\": {\n    \"index\": \"4\",\n    \"hex\": \"0x80000004\",\n    \"symbol\": \"RDD\",\n    \"name\": \"Reddcoin\"\n  },\n  \"5\": {\n    \"index\": \"5\",\n    \"hex\": \"0x80000005\",\n    \"symbol\": \"DASH\",\n    \"name\": \"Dash\"\n  },\n  \"6\": {\n    \"index\": \"6\",\n    \"hex\": \"0x80000006\",\n    \"symbol\": \"PPC\",\n    \"name\": \"Peercoin\"\n  },\n  \"7\": {\n    \"index\": \"7\",\n    \"hex\": \"0x80000007\",\n    \"symbol\": \"NMC\",\n    \"name\": \"Namecoin\"\n  },\n  \"8\": {\n    \"index\": \"8\",\n    \"hex\": \"0x80000008\",\n    \"symbol\": \"FTC\",\n    \"name\": \"Feathercoin\"\n  },\n  \"9\": {\n    \"index\": \"9\",\n    \"hex\": \"0x80000009\",\n    \"symbol\": \"XCP\",\n    \"name\": \"Counterparty\"\n  },\n  \"10\": {\n    \"index\": \"10\",\n    \"hex\": \"0x8000000a\",\n    \"symbol\": \"BLK\",\n    \"name\": \"Blackcoin\"\n  },\n  \"11\": {\n    \"index\": \"11\",\n    \"hex\": \"0x8000000b\",\n    \"symbol\": \"NSR\",\n    \"name\": \"NuShares\"\n  },\n  \"12\": {\n    \"index\": \"12\",\n    \"hex\": \"0x8000000c\",\n    \"symbol\": \"NBT\",\n    \"name\": \"NuBits\"\n  },\n  \"13\": {\n    \"index\": \"13\",\n    \"hex\": \"0x8000000d\",\n    \"symbol\": \"MZC\",\n    \"name\": \"Mazacoin\"\n  },\n  \"14\": {\n    \"index\": \"14\",\n    \"hex\": \"0x8000000e\",\n    \"symbol\": \"VIA\",\n    \"name\": \"Viacoin\"\n  },\n  \"15\": {\n    \"index\": \"15\",\n    \"hex\": \"0x8000000f\",\n    \"symbol\": \"XCH\",\n    \"name\": \"ClearingHouse\"\n  },\n  \"16\": {\n    \"index\": \"16\",\n    \"hex\": \"0x80000010\",\n    \"symbol\": \"RBY\",\n    \"name\": \"Rubycoin\"\n  },\n  \"17\": {\n    \"index\": \"17\",\n    \"hex\": \"0x80000011\",\n    \"symbol\": \"GRS\",\n    \"name\": \"Groestlcoin\"\n  },\n  \"18\": {\n    \"index\": \"18\",\n    \"hex\": \"0x80000012\",\n    \"symbol\": \"DGC\",\n    \"name\": \"Digitalcoin\"\n  },\n  \"19\": {\n    \"index\": \"19\",\n    \"hex\": \"0x80000013\",\n    \"symbol\": \"CCN\",\n    \"name\": \"Cannacoin\"\n  },\n  \"20\": {\n    \"index\": \"20\",\n    \"hex\": \"0x80000014\",\n    \"symbol\": \"DGB\",\n    \"name\": \"DigiByte\"\n  },\n  \"21\": {\n    \"index\": \"21\",\n    \"hex\": \"0x80000015\",\n    \"symbol\": \"\",\n    \"name\": \"Open Assets\"\n  },\n  \"22\": {\n    \"index\": \"22\",\n    \"hex\": \"0x80000016\",\n    \"symbol\": \"MONA\",\n    \"name\": \"Monacoin\"\n  },\n  \"23\": {\n    \"index\": \"23\",\n    \"hex\": \"0x80000017\",\n    \"symbol\": \"CLAM\",\n    \"name\": \"Clams\"\n  },\n  \"24\": {\n    \"index\": \"24\",\n    \"hex\": \"0x80000018\",\n    \"symbol\": \"XPM\",\n    \"name\": \"Primecoin\"\n  },\n  \"25\": {\n    \"index\": \"25\",\n    \"hex\": \"0x80000019\",\n    \"symbol\": \"NEOS\",\n    \"name\": \"Neoscoin\"\n  },\n  \"26\": {\n    \"index\": \"26\",\n    \"hex\": \"0x8000001a\",\n    \"symbol\": \"JBS\",\n    \"name\": \"Jumbucks\"\n  },\n  \"27\": {\n    \"index\": \"27\",\n    \"hex\": \"0x8000001b\",\n    \"symbol\": \"ZRC\",\n    \"name\": \"ziftrCOIN\"\n  },\n  \"28\": {\n    \"index\": \"28\",\n    \"hex\": \"0x8000001c\",\n    \"symbol\": \"VTC\",\n    \"name\": \"Vertcoin\"\n  },\n  \"29\": {\n    \"index\": \"29\",\n    \"hex\": \"0x8000001d\",\n    \"symbol\": \"NXT\",\n    \"name\": \"NXT\"\n  },\n  \"30\": {\n    \"index\": \"30\",\n    \"hex\": \"0x8000001e\",\n    \"symbol\": \"BURST\",\n    \"name\": \"Burst\"\n  },\n  \"31\": {\n    \"index\": \"31\",\n    \"hex\": \"0x8000001f\",\n    \"symbol\": \"MUE\",\n    \"name\": \"MonetaryUnit\"\n  },\n  \"32\": {\n    \"index\": \"32\",\n    \"hex\": \"0x80000020\",\n    \"symbol\": \"ZOOM\",\n    \"name\": \"Zoom\"\n  },\n  \"33\": {\n    \"index\": \"33\",\n    \"hex\": \"0x80000021\",\n    \"symbol\": \"VASH\",\n    \"name\": \"Virtual Cash\"\n  },\n  \"34\": {\n    \"index\": \"34\",\n    \"hex\": \"0x80000022\",\n    \"symbol\": \"CDN\",\n    \"name\": \"Canada eCoin\"\n  },\n  \"35\": {\n    \"index\": \"35\",\n    \"hex\": \"0x80000023\",\n    \"symbol\": \"SDC\",\n    \"name\": \"ShadowCash\"\n  },\n  \"36\": {\n    \"index\": \"36\",\n    \"hex\": \"0x80000024\",\n    \"symbol\": \"PKB\",\n    \"name\": \"ParkByte\"\n  },\n  \"37\": {\n    \"index\": \"37\",\n    \"hex\": \"0x80000025\",\n    \"symbol\": \"PND\",\n    \"name\": \"Pandacoin\"\n  },\n  \"38\": {\n    \"index\": \"38\",\n    \"hex\": \"0x80000026\",\n    \"symbol\": \"START\",\n    \"name\": \"StartCOIN\"\n  },\n  \"39\": {\n    \"index\": \"39\",\n    \"hex\": \"0x80000027\",\n    \"symbol\": \"MOIN\",\n    \"name\": \"MOIN\"\n  },\n  \"40\": {\n    \"index\": \"40\",\n    \"hex\": \"0x80000028\",\n    \"symbol\": \"EXP\",\n    \"name\": \"Expanse\"\n  },\n  \"41\": {\n    \"index\": \"41\",\n    \"hex\": \"0x80000029\",\n    \"symbol\": \"EMC2\",\n    \"name\": \"Einsteinium\"\n  },\n  \"42\": {\n    \"index\": \"42\",\n    \"hex\": \"0x8000002a\",\n    \"symbol\": \"DCR\",\n    \"name\": \"Decred\"\n  },\n  \"43\": {\n    \"index\": \"43\",\n    \"hex\": \"0x8000002b\",\n    \"symbol\": \"XEM\",\n    \"name\": \"NEM\"\n  },\n  \"44\": {\n    \"index\": \"44\",\n    \"hex\": \"0x8000002c\",\n    \"symbol\": \"PART\",\n    \"name\": \"Particl\"\n  },\n  \"45\": {\n    \"index\": \"45\",\n    \"hex\": \"0x8000002d\",\n    \"symbol\": \"ARG\",\n    \"name\": \"Argentum (dead)\"\n  },\n  \"46\": {\n    \"index\": \"46\",\n    \"hex\": \"0x8000002e\",\n    \"symbol\": \"\",\n    \"name\": \"Libertas\"\n  },\n  \"47\": {\n    \"index\": \"47\",\n    \"hex\": \"0x8000002f\",\n    \"symbol\": \"\",\n    \"name\": \"Posw coin\"\n  },\n  \"48\": {\n    \"index\": \"48\",\n    \"hex\": \"0x80000030\",\n    \"symbol\": \"SHR\",\n    \"name\": \"Shreeji\"\n  },\n  \"49\": {\n    \"index\": \"49\",\n    \"hex\": \"0x80000031\",\n    \"symbol\": \"GCR\",\n    \"name\": \"Global Currency Reserve (GCRcoin)\"\n  },\n  \"50\": {\n    \"index\": \"50\",\n    \"hex\": \"0x80000032\",\n    \"symbol\": \"NVC\",\n    \"name\": \"Novacoin\"\n  },\n  \"51\": {\n    \"index\": \"51\",\n    \"hex\": \"0x80000033\",\n    \"symbol\": \"AC\",\n    \"name\": \"Asiacoin\"\n  },\n  \"52\": {\n    \"index\": \"52\",\n    \"hex\": \"0x80000034\",\n    \"symbol\": \"BTCD\",\n    \"name\": \"BitcoinDark\"\n  },\n  \"53\": {\n    \"index\": \"53\",\n    \"hex\": \"0x80000035\",\n    \"symbol\": \"DOPE\",\n    \"name\": \"Dopecoin\"\n  },\n  \"54\": {\n    \"index\": \"54\",\n    \"hex\": \"0x80000036\",\n    \"symbol\": \"TPC\",\n    \"name\": \"Templecoin\"\n  },\n  \"55\": {\n    \"index\": \"55\",\n    \"hex\": \"0x80000037\",\n    \"symbol\": \"AIB\",\n    \"name\": \"AIB\"\n  },\n  \"56\": {\n    \"index\": \"56\",\n    \"hex\": \"0x80000038\",\n    \"symbol\": \"EDRC\",\n    \"name\": \"EDRCoin\"\n  },\n  \"57\": {\n    \"index\": \"57\",\n    \"hex\": \"0x80000039\",\n    \"symbol\": \"SYS\",\n    \"name\": \"Syscoin\"\n  },\n  \"58\": {\n    \"index\": \"58\",\n    \"hex\": \"0x8000003a\",\n    \"symbol\": \"SLR\",\n    \"name\": \"Solarcoin\"\n  },\n  \"59\": {\n    \"index\": \"59\",\n    \"hex\": \"0x8000003b\",\n    \"symbol\": \"SMLY\",\n    \"name\": \"Smileycoin\"\n  },\n  \"60\": {\n    \"index\": \"60\",\n    \"hex\": \"0x8000003c\",\n    \"symbol\": \"ETH\",\n    \"name\": \"Ethereum\"\n  },\n  \"61\": {\n    \"index\": \"61\",\n    \"hex\": \"0x8000003d\",\n    \"symbol\": \"ETC\",\n    \"name\": \"Ether Classic\"\n  },\n  \"62\": {\n    \"index\": \"62\",\n    \"hex\": \"0x8000003e\",\n    \"symbol\": \"PSB\",\n    \"name\": \"Pesobit\"\n  },\n  \"63\": {\n    \"index\": \"63\",\n    \"hex\": \"0x8000003f\",\n    \"symbol\": \"LDCN\",\n    \"name\": \"Landcoin (dead)\"\n  },\n  \"64\": {\n    \"index\": \"64\",\n    \"hex\": \"0x80000040\",\n    \"symbol\": \"\",\n    \"name\": \"Open Chain\"\n  },\n  \"65\": {\n    \"index\": \"65\",\n    \"hex\": \"0x80000041\",\n    \"symbol\": \"XBC\",\n    \"name\": \"Bitcoinplus\"\n  },\n  \"66\": {\n    \"index\": \"66\",\n    \"hex\": \"0x80000042\",\n    \"symbol\": \"IOP\",\n    \"name\": \"Internet of People\"\n  },\n  \"67\": {\n    \"index\": \"67\",\n    \"hex\": \"0x80000043\",\n    \"symbol\": \"NXS\",\n    \"name\": \"Nexus\"\n  },\n  \"68\": {\n    \"index\": \"68\",\n    \"hex\": \"0x80000044\",\n    \"symbol\": \"INSN\",\n    \"name\": \"InsaneCoin\"\n  },\n  \"69\": {\n    \"index\": \"69\",\n    \"hex\": \"0x80000045\",\n    \"symbol\": \"OK\",\n    \"name\": \"OKCash\"\n  },\n  \"70\": {\n    \"index\": \"70\",\n    \"hex\": \"0x80000046\",\n    \"symbol\": \"BRIT\",\n    \"name\": \"BritCoin\"\n  },\n  \"71\": {\n    \"index\": \"71\",\n    \"hex\": \"0x80000047\",\n    \"symbol\": \"CMP\",\n    \"name\": \"Compcoin\"\n  },\n  \"72\": {\n    \"index\": \"72\",\n    \"hex\": \"0x80000048\",\n    \"symbol\": \"CRW\",\n    \"name\": \"Crown\"\n  },\n  \"73\": {\n    \"index\": \"73\",\n    \"hex\": \"0x80000049\",\n    \"symbol\": \"BELA\",\n    \"name\": \"BelaCoin\"\n  },\n  \"74\": {\n    \"index\": \"74\",\n    \"hex\": \"0x8000004a\",\n    \"symbol\": \"ICX\",\n    \"name\": \"ICON\"\n  },\n  \"75\": {\n    \"index\": \"75\",\n    \"hex\": \"0x8000004b\",\n    \"symbol\": \"FJC\",\n    \"name\": \"FujiCoin\"\n  },\n  \"76\": {\n    \"index\": \"76\",\n    \"hex\": \"0x8000004c\",\n    \"symbol\": \"MIX\",\n    \"name\": \"MIX\"\n  },\n  \"77\": {\n    \"index\": \"77\",\n    \"hex\": \"0x8000004d\",\n    \"symbol\": \"XVG\",\n    \"name\": \"Verge Currency\"\n  },\n  \"78\": {\n    \"index\": \"78\",\n    \"hex\": \"0x8000004e\",\n    \"symbol\": \"EFL\",\n    \"name\": \"Electronic Gulden\"\n  },\n  \"79\": {\n    \"index\": \"79\",\n    \"hex\": \"0x8000004f\",\n    \"symbol\": \"CLUB\",\n    \"name\": \"ClubCoin\"\n  },\n  \"80\": {\n    \"index\": \"80\",\n    \"hex\": \"0x80000050\",\n    \"symbol\": \"RICHX\",\n    \"name\": \"RichCoin\"\n  },\n  \"81\": {\n    \"index\": \"81\",\n    \"hex\": \"0x80000051\",\n    \"symbol\": \"POT\",\n    \"name\": \"Potcoin\"\n  },\n  \"82\": {\n    \"index\": \"82\",\n    \"hex\": \"0x80000052\",\n    \"symbol\": \"QRK\",\n    \"name\": \"Quarkcoin\"\n  },\n  \"83\": {\n    \"index\": \"83\",\n    \"hex\": \"0x80000053\",\n    \"symbol\": \"TRC\",\n    \"name\": \"Terracoin\"\n  },\n  \"84\": {\n    \"index\": \"84\",\n    \"hex\": \"0x80000054\",\n    \"symbol\": \"GRC\",\n    \"name\": \"Gridcoin\"\n  },\n  \"85\": {\n    \"index\": \"85\",\n    \"hex\": \"0x80000055\",\n    \"symbol\": \"AUR\",\n    \"name\": \"Auroracoin\"\n  },\n  \"86\": {\n    \"index\": \"86\",\n    \"hex\": \"0x80000056\",\n    \"symbol\": \"IXC\",\n    \"name\": \"IXCoin\"\n  },\n  \"87\": {\n    \"index\": \"87\",\n    \"hex\": \"0x80000057\",\n    \"symbol\": \"NLG\",\n    \"name\": \"Gulden\"\n  },\n  \"88\": {\n    \"index\": \"88\",\n    \"hex\": \"0x80000058\",\n    \"symbol\": \"BITB\",\n    \"name\": \"BitBean\"\n  },\n  \"89\": {\n    \"index\": \"89\",\n    \"hex\": \"0x80000059\",\n    \"symbol\": \"BTA\",\n    \"name\": \"Bata\"\n  },\n  \"90\": {\n    \"index\": \"90\",\n    \"hex\": \"0x8000005a\",\n    \"symbol\": \"XMY\",\n    \"name\": \"Myriadcoin\"\n  },\n  \"91\": {\n    \"index\": \"91\",\n    \"hex\": \"0x8000005b\",\n    \"symbol\": \"BSD\",\n    \"name\": \"BitSend\"\n  },\n  \"92\": {\n    \"index\": \"92\",\n    \"hex\": \"0x8000005c\",\n    \"symbol\": \"UNO\",\n    \"name\": \"Unobtanium\"\n  },\n  \"93\": {\n    \"index\": \"93\",\n    \"hex\": \"0x8000005d\",\n    \"symbol\": \"MTR\",\n    \"name\": \"MasterTrader\"\n  },\n  \"94\": {\n    \"index\": \"94\",\n    \"hex\": \"0x8000005e\",\n    \"symbol\": \"GB\",\n    \"name\": \"GoldBlocks\"\n  },\n  \"95\": {\n    \"index\": \"95\",\n    \"hex\": \"0x8000005f\",\n    \"symbol\": \"SHM\",\n    \"name\": \"Saham\"\n  },\n  \"96\": {\n    \"index\": \"96\",\n    \"hex\": \"0x80000060\",\n    \"symbol\": \"CRX\",\n    \"name\": \"Chronos\"\n  },\n  \"97\": {\n    \"index\": \"97\",\n    \"hex\": \"0x80000061\",\n    \"symbol\": \"BIQ\",\n    \"name\": \"Ubiquoin\"\n  },\n  \"98\": {\n    \"index\": \"98\",\n    \"hex\": \"0x80000062\",\n    \"symbol\": \"EVO\",\n    \"name\": \"Evotion\"\n  },\n  \"99\": {\n    \"index\": \"99\",\n    \"hex\": \"0x80000063\",\n    \"symbol\": \"STO\",\n    \"name\": \"SaveTheOcean\"\n  },\n  \"100\": {\n    \"index\": \"100\",\n    \"hex\": \"0x80000064\",\n    \"symbol\": \"BIGUP\",\n    \"name\": \"BigUp\"\n  },\n  \"101\": {\n    \"index\": \"101\",\n    \"hex\": \"0x80000065\",\n    \"symbol\": \"GAME\",\n    \"name\": \"GameCredits\"\n  },\n  \"102\": {\n    \"index\": \"102\",\n    \"hex\": \"0x80000066\",\n    \"symbol\": \"DLC\",\n    \"name\": \"Dollarcoins\"\n  },\n  \"103\": {\n    \"index\": \"103\",\n    \"hex\": \"0x80000067\",\n    \"symbol\": \"ZYD\",\n    \"name\": \"Zayedcoin\"\n  },\n  \"104\": {\n    \"index\": \"104\",\n    \"hex\": \"0x80000068\",\n    \"symbol\": \"DBIC\",\n    \"name\": \"Dubaicoin\"\n  },\n  \"105\": {\n    \"index\": \"105\",\n    \"hex\": \"0x80000069\",\n    \"symbol\": \"STRAT\",\n    \"name\": \"Stratis\"\n  },\n  \"106\": {\n    \"index\": \"106\",\n    \"hex\": \"0x8000006a\",\n    \"symbol\": \"SH\",\n    \"name\": \"Shilling\"\n  },\n  \"107\": {\n    \"index\": \"107\",\n    \"hex\": \"0x8000006b\",\n    \"symbol\": \"MARS\",\n    \"name\": \"MarsCoin\"\n  },\n  \"108\": {\n    \"index\": \"108\",\n    \"hex\": \"0x8000006c\",\n    \"symbol\": \"UBQ\",\n    \"name\": \"Ubiq\"\n  },\n  \"109\": {\n    \"index\": \"109\",\n    \"hex\": \"0x8000006d\",\n    \"symbol\": \"PTC\",\n    \"name\": \"Pesetacoin\"\n  },\n  \"110\": {\n    \"index\": \"110\",\n    \"hex\": \"0x8000006e\",\n    \"symbol\": \"NRO\",\n    \"name\": \"Neurocoin\"\n  },\n  \"111\": {\n    \"index\": \"111\",\n    \"hex\": \"0x8000006f\",\n    \"symbol\": \"ARK\",\n    \"name\": \"ARK\"\n  },\n  \"112\": {\n    \"index\": \"112\",\n    \"hex\": \"0x80000070\",\n    \"symbol\": \"USC\",\n    \"name\": \"UltimateSecureCashMain\"\n  },\n  \"113\": {\n    \"index\": \"113\",\n    \"hex\": \"0x80000071\",\n    \"symbol\": \"THC\",\n    \"name\": \"Hempcoin\"\n  },\n  \"114\": {\n    \"index\": \"114\",\n    \"hex\": \"0x80000072\",\n    \"symbol\": \"LINX\",\n    \"name\": \"Linx\"\n  },\n  \"115\": {\n    \"index\": \"115\",\n    \"hex\": \"0x80000073\",\n    \"symbol\": \"ECN\",\n    \"name\": \"Ecoin\"\n  },\n  \"116\": {\n    \"index\": \"116\",\n    \"hex\": \"0x80000074\",\n    \"symbol\": \"DNR\",\n    \"name\": \"Denarius\"\n  },\n  \"117\": {\n    \"index\": \"117\",\n    \"hex\": \"0x80000075\",\n    \"symbol\": \"PINK\",\n    \"name\": \"Pinkcoin\"\n  },\n  \"118\": {\n    \"index\": \"118\",\n    \"hex\": \"0x80000076\",\n    \"symbol\": \"ATOM\",\n    \"name\": \"Atom\"\n  },\n  \"119\": {\n    \"index\": \"119\",\n    \"hex\": \"0x80000077\",\n    \"symbol\": \"PIVX\",\n    \"name\": \"Pivx\"\n  },\n  \"120\": {\n    \"index\": \"120\",\n    \"hex\": \"0x80000078\",\n    \"symbol\": \"FLASH\",\n    \"name\": \"Flashcoin\"\n  },\n  \"121\": {\n    \"index\": \"121\",\n    \"hex\": \"0x80000079\",\n    \"symbol\": \"ZEN\",\n    \"name\": \"Zencash\"\n  },\n  \"122\": {\n    \"index\": \"122\",\n    \"hex\": \"0x8000007a\",\n    \"symbol\": \"PUT\",\n    \"name\": \"Putincoin\"\n  },\n  \"123\": {\n    \"index\": \"123\",\n    \"hex\": \"0x8000007b\",\n    \"symbol\": \"ZNY\",\n    \"name\": \"BitZeny\"\n  },\n  \"124\": {\n    \"index\": \"124\",\n    \"hex\": \"0x8000007c\",\n    \"symbol\": \"UNIFY\",\n    \"name\": \"Unify\"\n  },\n  \"125\": {\n    \"index\": \"125\",\n    \"hex\": \"0x8000007d\",\n    \"symbol\": \"XST\",\n    \"name\": \"StealthCoin\"\n  },\n  \"126\": {\n    \"index\": \"126\",\n    \"hex\": \"0x8000007e\",\n    \"symbol\": \"BRK\",\n    \"name\": \"Breakout Coin\"\n  },\n  \"127\": {\n    \"index\": \"127\",\n    \"hex\": \"0x8000007f\",\n    \"symbol\": \"VC\",\n    \"name\": \"Vcash\"\n  },\n  \"128\": {\n    \"index\": \"128\",\n    \"hex\": \"0x80000080\",\n    \"symbol\": \"XMR\",\n    \"name\": \"Monero\"\n  },\n  \"129\": {\n    \"index\": \"129\",\n    \"hex\": \"0x80000081\",\n    \"symbol\": \"VOX\",\n    \"name\": \"Voxels\"\n  },\n  \"130\": {\n    \"index\": \"130\",\n    \"hex\": \"0x80000082\",\n    \"symbol\": \"NAV\",\n    \"name\": \"NavCoin\"\n  },\n  \"131\": {\n    \"index\": \"131\",\n    \"hex\": \"0x80000083\",\n    \"symbol\": \"FCT\",\n    \"name\": \"Factom Factoids\"\n  },\n  \"132\": {\n    \"index\": \"132\",\n    \"hex\": \"0x80000084\",\n    \"symbol\": \"EC\",\n    \"name\": \"Factom Entry Credits\"\n  },\n  \"133\": {\n    \"index\": \"133\",\n    \"hex\": \"0x80000085\",\n    \"symbol\": \"ZEC\",\n    \"name\": \"Zcash\"\n  },\n  \"134\": {\n    \"index\": \"134\",\n    \"hex\": \"0x80000086\",\n    \"symbol\": \"LSK\",\n    \"name\": \"Lisk\"\n  },\n  \"135\": {\n    \"index\": \"135\",\n    \"hex\": \"0x80000087\",\n    \"symbol\": \"STEEM\",\n    \"name\": \"Steem\"\n  },\n  \"136\": {\n    \"index\": \"136\",\n    \"hex\": \"0x80000088\",\n    \"symbol\": \"XZC\",\n    \"name\": \"ZCoin\"\n  },\n  \"137\": {\n    \"index\": \"137\",\n    \"hex\": \"0x80000089\",\n    \"symbol\": \"RBTC\",\n    \"name\": \"Rootstock\"\n  },\n  \"138\": {\n    \"index\": \"138\",\n    \"hex\": \"0x8000008a\",\n    \"symbol\": \"\",\n    \"name\": \"Giftblock\"\n  },\n  \"139\": {\n    \"index\": \"139\",\n    \"hex\": \"0x8000008b\",\n    \"symbol\": \"RPT\",\n    \"name\": \"RealPointCoin\"\n  },\n  \"140\": {\n    \"index\": \"140\",\n    \"hex\": \"0x8000008c\",\n    \"symbol\": \"LBC\",\n    \"name\": \"LBRY Credits\"\n  },\n  \"141\": {\n    \"index\": \"141\",\n    \"hex\": \"0x8000008d\",\n    \"symbol\": \"KMD\",\n    \"name\": \"Komodo\"\n  },\n  \"142\": {\n    \"index\": \"142\",\n    \"hex\": \"0x8000008e\",\n    \"symbol\": \"BSQ\",\n    \"name\": \"bisq Token\"\n  },\n  \"143\": {\n    \"index\": \"143\",\n    \"hex\": \"0x8000008f\",\n    \"symbol\": \"RIC\",\n    \"name\": \"Riecoin\"\n  },\n  \"144\": {\n    \"index\": \"144\",\n    \"hex\": \"0x80000090\",\n    \"symbol\": \"XRP\",\n    \"name\": \"XRP\"\n  },\n  \"145\": {\n    \"index\": \"145\",\n    \"hex\": \"0x80000091\",\n    \"symbol\": \"BCH\",\n    \"name\": \"Bitcoin Cash\"\n  },\n  \"146\": {\n    \"index\": \"146\",\n    \"hex\": \"0x80000092\",\n    \"symbol\": \"NEBL\",\n    \"name\": \"Neblio\"\n  },\n  \"147\": {\n    \"index\": \"147\",\n    \"hex\": \"0x80000093\",\n    \"symbol\": \"ZCL\",\n    \"name\": \"ZClassic\"\n  },\n  \"148\": {\n    \"index\": \"148\",\n    \"hex\": \"0x80000094\",\n    \"symbol\": \"XLM\",\n    \"name\": \"Stellar Lumens\"\n  },\n  \"149\": {\n    \"index\": \"149\",\n    \"hex\": \"0x80000095\",\n    \"symbol\": \"NLC2\",\n    \"name\": \"NoLimitCoin2\"\n  },\n  \"150\": {\n    \"index\": \"150\",\n    \"hex\": \"0x80000096\",\n    \"symbol\": \"WHL\",\n    \"name\": \"WhaleCoin\"\n  },\n  \"151\": {\n    \"index\": \"151\",\n    \"hex\": \"0x80000097\",\n    \"symbol\": \"ERC\",\n    \"name\": \"EuropeCoin\"\n  },\n  \"152\": {\n    \"index\": \"152\",\n    \"hex\": \"0x80000098\",\n    \"symbol\": \"DMD\",\n    \"name\": \"Diamond\"\n  },\n  \"153\": {\n    \"index\": \"153\",\n    \"hex\": \"0x80000099\",\n    \"symbol\": \"BTM\",\n    \"name\": \"Bytom\"\n  },\n  \"154\": {\n    \"index\": \"154\",\n    \"hex\": \"0x8000009a\",\n    \"symbol\": \"BIO\",\n    \"name\": \"Biocoin\"\n  },\n  \"155\": {\n    \"index\": \"155\",\n    \"hex\": \"0x8000009b\",\n    \"symbol\": \"XWCC\",\n    \"name\": \"Whitecoin Classic\"\n  },\n  \"156\": {\n    \"index\": \"156\",\n    \"hex\": \"0x8000009c\",\n    \"symbol\": \"BTG\",\n    \"name\": \"Bitcoin Gold\"\n  },\n  \"157\": {\n    \"index\": \"157\",\n    \"hex\": \"0x8000009d\",\n    \"symbol\": \"BTC2X\",\n    \"name\": \"Bitcoin 2x\"\n  },\n  \"158\": {\n    \"index\": \"158\",\n    \"hex\": \"0x8000009e\",\n    \"symbol\": \"SSN\",\n    \"name\": \"SuperSkynet\"\n  },\n  \"159\": {\n    \"index\": \"159\",\n    \"hex\": \"0x8000009f\",\n    \"symbol\": \"TOA\",\n    \"name\": \"TOACoin\"\n  },\n  \"160\": {\n    \"index\": \"160\",\n    \"hex\": \"0x800000a0\",\n    \"symbol\": \"BTX\",\n    \"name\": \"Bitcore\"\n  },\n  \"161\": {\n    \"index\": \"161\",\n    \"hex\": \"0x800000a1\",\n    \"symbol\": \"ACC\",\n    \"name\": \"Adcoin\"\n  },\n  \"162\": {\n    \"index\": \"162\",\n    \"hex\": \"0x800000a2\",\n    \"symbol\": \"BCO\",\n    \"name\": \"Bridgecoin\"\n  },\n  \"163\": {\n    \"index\": \"163\",\n    \"hex\": \"0x800000a3\",\n    \"symbol\": \"ELLA\",\n    \"name\": \"Ellaism\"\n  },\n  \"164\": {\n    \"index\": \"164\",\n    \"hex\": \"0x800000a4\",\n    \"symbol\": \"PIRL\",\n    \"name\": \"Pirl\"\n  },\n  \"165\": {\n    \"index\": \"165\",\n    \"hex\": \"0x800000a5\",\n    \"symbol\": \"XNO\",\n    \"name\": \"Nano\"\n  },\n  \"166\": {\n    \"index\": \"166\",\n    \"hex\": \"0x800000a6\",\n    \"symbol\": \"VIVO\",\n    \"name\": \"Vivo\"\n  },\n  \"167\": {\n    \"index\": \"167\",\n    \"hex\": \"0x800000a7\",\n    \"symbol\": \"FRST\",\n    \"name\": \"Firstcoin\"\n  },\n  \"168\": {\n    \"index\": \"168\",\n    \"hex\": \"0x800000a8\",\n    \"symbol\": \"HNC\",\n    \"name\": \"Helleniccoin\"\n  },\n  \"169\": {\n    \"index\": \"169\",\n    \"hex\": \"0x800000a9\",\n    \"symbol\": \"BUZZ\",\n    \"name\": \"BUZZ\"\n  },\n  \"170\": {\n    \"index\": \"170\",\n    \"hex\": \"0x800000aa\",\n    \"symbol\": \"MBRS\",\n    \"name\": \"Ember\"\n  },\n  \"171\": {\n    \"index\": \"171\",\n    \"hex\": \"0x800000ab\",\n    \"symbol\": \"HC\",\n    \"name\": \"Hcash\"\n  },\n  \"172\": {\n    \"index\": \"172\",\n    \"hex\": \"0x800000ac\",\n    \"symbol\": \"HTML\",\n    \"name\": \"HTMLCOIN\"\n  },\n  \"173\": {\n    \"index\": \"173\",\n    \"hex\": \"0x800000ad\",\n    \"symbol\": \"ODN\",\n    \"name\": \"Obsidian\"\n  },\n  \"174\": {\n    \"index\": \"174\",\n    \"hex\": \"0x800000ae\",\n    \"symbol\": \"ONX\",\n    \"name\": \"OnixCoin\"\n  },\n  \"175\": {\n    \"index\": \"175\",\n    \"hex\": \"0x800000af\",\n    \"symbol\": \"RVN\",\n    \"name\": \"Ravencoin\"\n  },\n  \"176\": {\n    \"index\": \"176\",\n    \"hex\": \"0x800000b0\",\n    \"symbol\": \"GBX\",\n    \"name\": \"GoByte\"\n  },\n  \"177\": {\n    \"index\": \"177\",\n    \"hex\": \"0x800000b1\",\n    \"symbol\": \"BTCZ\",\n    \"name\": \"BitcoinZ\"\n  },\n  \"178\": {\n    \"index\": \"178\",\n    \"hex\": \"0x800000b2\",\n    \"symbol\": \"POA\",\n    \"name\": \"Poa\"\n  },\n  \"179\": {\n    \"index\": \"179\",\n    \"hex\": \"0x800000b3\",\n    \"symbol\": \"NYC\",\n    \"name\": \"NewYorkCoin\"\n  },\n  \"180\": {\n    \"index\": \"180\",\n    \"hex\": \"0x800000b4\",\n    \"symbol\": \"MXT\",\n    \"name\": \"MarteXcoin\"\n  },\n  \"181\": {\n    \"index\": \"181\",\n    \"hex\": \"0x800000b5\",\n    \"symbol\": \"WC\",\n    \"name\": \"Wincoin\"\n  },\n  \"182\": {\n    \"index\": \"182\",\n    \"hex\": \"0x800000b6\",\n    \"symbol\": \"MNX\",\n    \"name\": \"Minexcoin\"\n  },\n  \"183\": {\n    \"index\": \"183\",\n    \"hex\": \"0x800000b7\",\n    \"symbol\": \"BTCP\",\n    \"name\": \"Bitcoin Private\"\n  },\n  \"184\": {\n    \"index\": \"184\",\n    \"hex\": \"0x800000b8\",\n    \"symbol\": \"MUSIC\",\n    \"name\": \"Musicoin\"\n  },\n  \"185\": {\n    \"index\": \"185\",\n    \"hex\": \"0x800000b9\",\n    \"symbol\": \"BCA\",\n    \"name\": \"Bitcoin Atom\"\n  },\n  \"186\": {\n    \"index\": \"186\",\n    \"hex\": \"0x800000ba\",\n    \"symbol\": \"CRAVE\",\n    \"name\": \"Crave\"\n  },\n  \"187\": {\n    \"index\": \"187\",\n    \"hex\": \"0x800000bb\",\n    \"symbol\": \"STAK\",\n    \"name\": \"STRAKS\"\n  },\n  \"188\": {\n    \"index\": \"188\",\n    \"hex\": \"0x800000bc\",\n    \"symbol\": \"WBTC\",\n    \"name\": \"World Bitcoin\"\n  },\n  \"189\": {\n    \"index\": \"189\",\n    \"hex\": \"0x800000bd\",\n    \"symbol\": \"LCH\",\n    \"name\": \"LiteCash\"\n  },\n  \"190\": {\n    \"index\": \"190\",\n    \"hex\": \"0x800000be\",\n    \"symbol\": \"EXCL\",\n    \"name\": \"ExclusiveCoin\"\n  },\n  \"191\": {\n    \"index\": \"191\",\n    \"hex\": \"0x800000bf\",\n    \"symbol\": \"\",\n    \"name\": \"Lynx\"\n  },\n  \"192\": {\n    \"index\": \"192\",\n    \"hex\": \"0x800000c0\",\n    \"symbol\": \"LCC\",\n    \"name\": \"LitecoinCash\"\n  },\n  \"193\": {\n    \"index\": \"193\",\n    \"hex\": \"0x800000c1\",\n    \"symbol\": \"XFE\",\n    \"name\": \"Feirm\"\n  },\n  \"194\": {\n    \"index\": \"194\",\n    \"hex\": \"0x800000c2\",\n    \"symbol\": \"EOS\",\n    \"name\": \"EOS\"\n  },\n  \"195\": {\n    \"index\": \"195\",\n    \"hex\": \"0x800000c3\",\n    \"symbol\": \"TRX\",\n    \"name\": \"Tron\"\n  },\n  \"196\": {\n    \"index\": \"196\",\n    \"hex\": \"0x800000c4\",\n    \"symbol\": \"KOBO\",\n    \"name\": \"Kobocoin\"\n  },\n  \"197\": {\n    \"index\": \"197\",\n    \"hex\": \"0x800000c5\",\n    \"symbol\": \"HUSH\",\n    \"name\": \"HUSH\"\n  },\n  \"198\": {\n    \"index\": \"198\",\n    \"hex\": \"0x800000c6\",\n    \"symbol\": \"BAN\",\n    \"name\": \"Banano\"\n  },\n  \"199\": {\n    \"index\": \"199\",\n    \"hex\": \"0x800000c7\",\n    \"symbol\": \"ETF\",\n    \"name\": \"ETF\"\n  },\n  \"200\": {\n    \"index\": \"200\",\n    \"hex\": \"0x800000c8\",\n    \"symbol\": \"OMNI\",\n    \"name\": \"Omni\"\n  },\n  \"201\": {\n    \"index\": \"201\",\n    \"hex\": \"0x800000c9\",\n    \"symbol\": \"BIFI\",\n    \"name\": \"BitcoinFile\"\n  },\n  \"202\": {\n    \"index\": \"202\",\n    \"hex\": \"0x800000ca\",\n    \"symbol\": \"UFO\",\n    \"name\": \"Uniform Fiscal Object\"\n  },\n  \"203\": {\n    \"index\": \"203\",\n    \"hex\": \"0x800000cb\",\n    \"symbol\": \"CNMC\",\n    \"name\": \"Cryptonodes\"\n  },\n  \"204\": {\n    \"index\": \"204\",\n    \"hex\": \"0x800000cc\",\n    \"symbol\": \"BCN\",\n    \"name\": \"Bytecoin\"\n  },\n  \"205\": {\n    \"index\": \"205\",\n    \"hex\": \"0x800000cd\",\n    \"symbol\": \"RIN\",\n    \"name\": \"Ringo\"\n  },\n  \"206\": {\n    \"index\": \"206\",\n    \"hex\": \"0x800000ce\",\n    \"symbol\": \"ATP\",\n    \"name\": \"Alaya\"\n  },\n  \"207\": {\n    \"index\": \"207\",\n    \"hex\": \"0x800000cf\",\n    \"symbol\": \"EVT\",\n    \"name\": \"everiToken\"\n  },\n  \"208\": {\n    \"index\": \"208\",\n    \"hex\": \"0x800000d0\",\n    \"symbol\": \"ATN\",\n    \"name\": \"ATN\"\n  },\n  \"209\": {\n    \"index\": \"209\",\n    \"hex\": \"0x800000d1\",\n    \"symbol\": \"BIS\",\n    \"name\": \"Bismuth\"\n  },\n  \"210\": {\n    \"index\": \"210\",\n    \"hex\": \"0x800000d2\",\n    \"symbol\": \"NEET\",\n    \"name\": \"NEETCOIN\"\n  },\n  \"211\": {\n    \"index\": \"211\",\n    \"hex\": \"0x800000d3\",\n    \"symbol\": \"BOPO\",\n    \"name\": \"BopoChain\"\n  },\n  \"212\": {\n    \"index\": \"212\",\n    \"hex\": \"0x800000d4\",\n    \"symbol\": \"OOT\",\n    \"name\": \"Utrum\"\n  },\n  \"213\": {\n    \"index\": \"213\",\n    \"hex\": \"0x800000d5\",\n    \"symbol\": \"ALIAS\",\n    \"name\": \"Alias\"\n  },\n  \"214\": {\n    \"index\": \"214\",\n    \"hex\": \"0x800000d6\",\n    \"symbol\": \"MONK\",\n    \"name\": \"Monkey Project\"\n  },\n  \"215\": {\n    \"index\": \"215\",\n    \"hex\": \"0x800000d7\",\n    \"symbol\": \"BOXY\",\n    \"name\": \"BoxyCoin\"\n  },\n  \"216\": {\n    \"index\": \"216\",\n    \"hex\": \"0x800000d8\",\n    \"symbol\": \"FLO\",\n    \"name\": \"Flo\"\n  },\n  \"217\": {\n    \"index\": \"217\",\n    \"hex\": \"0x800000d9\",\n    \"symbol\": \"MEC\",\n    \"name\": \"Megacoin\"\n  },\n  \"218\": {\n    \"index\": \"218\",\n    \"hex\": \"0x800000da\",\n    \"symbol\": \"BTDX\",\n    \"name\": \"BitCloud\"\n  },\n  \"219\": {\n    \"index\": \"219\",\n    \"hex\": \"0x800000db\",\n    \"symbol\": \"XAX\",\n    \"name\": \"Artax\"\n  },\n  \"220\": {\n    \"index\": \"220\",\n    \"hex\": \"0x800000dc\",\n    \"symbol\": \"ANON\",\n    \"name\": \"ANON\"\n  },\n  \"221\": {\n    \"index\": \"221\",\n    \"hex\": \"0x800000dd\",\n    \"symbol\": \"LTZ\",\n    \"name\": \"LitecoinZ\"\n  },\n  \"222\": {\n    \"index\": \"222\",\n    \"hex\": \"0x800000de\",\n    \"symbol\": \"BITG\",\n    \"name\": \"Bitcoin Green\"\n  },\n  \"223\": {\n    \"index\": \"223\",\n    \"hex\": \"0x800000df\",\n    \"symbol\": \"ICP\",\n    \"name\": \"Internet Computer (DFINITY)\"\n  },\n  \"224\": {\n    \"index\": \"224\",\n    \"hex\": \"0x800000e0\",\n    \"symbol\": \"SMART\",\n    \"name\": \"Smartcash\"\n  },\n  \"225\": {\n    \"index\": \"225\",\n    \"hex\": \"0x800000e1\",\n    \"symbol\": \"XUEZ\",\n    \"name\": \"XUEZ\"\n  },\n  \"226\": {\n    \"index\": \"226\",\n    \"hex\": \"0x800000e2\",\n    \"symbol\": \"HLM\",\n    \"name\": \"Helium\"\n  },\n  \"227\": {\n    \"index\": \"227\",\n    \"hex\": \"0x800000e3\",\n    \"symbol\": \"WEB\",\n    \"name\": \"Webchain\"\n  },\n  \"228\": {\n    \"index\": \"228\",\n    \"hex\": \"0x800000e4\",\n    \"symbol\": \"ACM\",\n    \"name\": \"Actinium\"\n  },\n  \"229\": {\n    \"index\": \"229\",\n    \"hex\": \"0x800000e5\",\n    \"symbol\": \"NOS\",\n    \"name\": \"NOS Stable Coins\"\n  },\n  \"230\": {\n    \"index\": \"230\",\n    \"hex\": \"0x800000e6\",\n    \"symbol\": \"BITC\",\n    \"name\": \"BitCash\"\n  },\n  \"231\": {\n    \"index\": \"231\",\n    \"hex\": \"0x800000e7\",\n    \"symbol\": \"HTH\",\n    \"name\": \"Help The Homeless Coin\"\n  },\n  \"232\": {\n    \"index\": \"232\",\n    \"hex\": \"0x800000e8\",\n    \"symbol\": \"TZC\",\n    \"name\": \"Trezarcoin\"\n  },\n  \"233\": {\n    \"index\": \"233\",\n    \"hex\": \"0x800000e9\",\n    \"symbol\": \"VAR\",\n    \"name\": \"Varda\"\n  },\n  \"234\": {\n    \"index\": \"234\",\n    \"hex\": \"0x800000ea\",\n    \"symbol\": \"IOV\",\n    \"name\": \"IOV\"\n  },\n  \"235\": {\n    \"index\": \"235\",\n    \"hex\": \"0x800000eb\",\n    \"symbol\": \"FIO\",\n    \"name\": \"FIO\"\n  },\n  \"236\": {\n    \"index\": \"236\",\n    \"hex\": \"0x800000ec\",\n    \"symbol\": \"BSV\",\n    \"name\": \"BitcoinSV\"\n  },\n  \"237\": {\n    \"index\": \"237\",\n    \"hex\": \"0x800000ed\",\n    \"symbol\": \"DXN\",\n    \"name\": \"DEXON\"\n  },\n  \"238\": {\n    \"index\": \"238\",\n    \"hex\": \"0x800000ee\",\n    \"symbol\": \"QRL\",\n    \"name\": \"Quantum Resistant Ledger\"\n  },\n  \"239\": {\n    \"index\": \"239\",\n    \"hex\": \"0x800000ef\",\n    \"symbol\": \"PCX\",\n    \"name\": \"ChainX\"\n  },\n  \"240\": {\n    \"index\": \"240\",\n    \"hex\": \"0x800000f0\",\n    \"symbol\": \"LOKI\",\n    \"name\": \"Loki\"\n  },\n  \"241\": {\n    \"index\": \"241\",\n    \"hex\": \"0x800000f1\",\n    \"symbol\": \"\",\n    \"name\": \"Imagewallet\"\n  },\n  \"242\": {\n    \"index\": \"242\",\n    \"hex\": \"0x800000f2\",\n    \"symbol\": \"NIM\",\n    \"name\": \"Nimiq\"\n  },\n  \"243\": {\n    \"index\": \"243\",\n    \"hex\": \"0x800000f3\",\n    \"symbol\": \"SOV\",\n    \"name\": \"Sovereign Coin\"\n  },\n  \"244\": {\n    \"index\": \"244\",\n    \"hex\": \"0x800000f4\",\n    \"symbol\": \"JCT\",\n    \"name\": \"Jibital Coin\"\n  },\n  \"245\": {\n    \"index\": \"245\",\n    \"hex\": \"0x800000f5\",\n    \"symbol\": \"SLP\",\n    \"name\": \"Simple Ledger Protocol\"\n  },\n  \"246\": {\n    \"index\": \"246\",\n    \"hex\": \"0x800000f6\",\n    \"symbol\": \"EWT\",\n    \"name\": \"Energy Web\"\n  },\n  \"247\": {\n    \"index\": \"247\",\n    \"hex\": \"0x800000f7\",\n    \"symbol\": \"UC\",\n    \"name\": \"Ulord\"\n  },\n  \"248\": {\n    \"index\": \"248\",\n    \"hex\": \"0x800000f8\",\n    \"symbol\": \"EXOS\",\n    \"name\": \"EXOS\"\n  },\n  \"249\": {\n    \"index\": \"249\",\n    \"hex\": \"0x800000f9\",\n    \"symbol\": \"ECA\",\n    \"name\": \"Electra\"\n  },\n  \"250\": {\n    \"index\": \"250\",\n    \"hex\": \"0x800000fa\",\n    \"symbol\": \"SOOM\",\n    \"name\": \"Soom\"\n  },\n  \"251\": {\n    \"index\": \"251\",\n    \"hex\": \"0x800000fb\",\n    \"symbol\": \"XRD\",\n    \"name\": \"Redstone\"\n  },\n  \"252\": {\n    \"index\": \"252\",\n    \"hex\": \"0x800000fc\",\n    \"symbol\": \"FREE\",\n    \"name\": \"FreeCoin\"\n  },\n  \"253\": {\n    \"index\": \"253\",\n    \"hex\": \"0x800000fd\",\n    \"symbol\": \"NPW\",\n    \"name\": \"NewPowerCoin\"\n  },\n  \"254\": {\n    \"index\": \"254\",\n    \"hex\": \"0x800000fe\",\n    \"symbol\": \"BST\",\n    \"name\": \"BlockStamp\"\n  },\n  \"255\": {\n    \"index\": \"255\",\n    \"hex\": \"0x800000ff\",\n    \"symbol\": \"\",\n    \"name\": \"SmartHoldem\"\n  },\n  \"256\": {\n    \"index\": \"256\",\n    \"hex\": \"0x80000100\",\n    \"symbol\": \"NANO\",\n    \"name\": \"Bitcoin Nano\"\n  },\n  \"257\": {\n    \"index\": \"257\",\n    \"hex\": \"0x80000101\",\n    \"symbol\": \"BTCC\",\n    \"name\": \"Bitcoin Core\"\n  },\n  \"258\": {\n    \"index\": \"258\",\n    \"hex\": \"0x80000102\",\n    \"symbol\": \"\",\n    \"name\": \"Zen Protocol\"\n  },\n  \"259\": {\n    \"index\": \"259\",\n    \"hex\": \"0x80000103\",\n    \"symbol\": \"ZEST\",\n    \"name\": \"Zest\"\n  },\n  \"260\": {\n    \"index\": \"260\",\n    \"hex\": \"0x80000104\",\n    \"symbol\": \"ABT\",\n    \"name\": \"ArcBlock\"\n  },\n  \"261\": {\n    \"index\": \"261\",\n    \"hex\": \"0x80000105\",\n    \"symbol\": \"PION\",\n    \"name\": \"Pion\"\n  },\n  \"262\": {\n    \"index\": \"262\",\n    \"hex\": \"0x80000106\",\n    \"symbol\": \"DT3\",\n    \"name\": \"DreamTeam3\"\n  },\n  \"263\": {\n    \"index\": \"263\",\n    \"hex\": \"0x80000107\",\n    \"symbol\": \"ZBUX\",\n    \"name\": \"Zbux\"\n  },\n  \"264\": {\n    \"index\": \"264\",\n    \"hex\": \"0x80000108\",\n    \"symbol\": \"KPL\",\n    \"name\": \"Kepler\"\n  },\n  \"265\": {\n    \"index\": \"265\",\n    \"hex\": \"0x80000109\",\n    \"symbol\": \"TPAY\",\n    \"name\": \"TokenPay\"\n  },\n  \"266\": {\n    \"index\": \"266\",\n    \"hex\": \"0x8000010a\",\n    \"symbol\": \"ZILLA\",\n    \"name\": \"ChainZilla\"\n  },\n  \"267\": {\n    \"index\": \"267\",\n    \"hex\": \"0x8000010b\",\n    \"symbol\": \"ANK\",\n    \"name\": \"Anker\"\n  },\n  \"268\": {\n    \"index\": \"268\",\n    \"hex\": \"0x8000010c\",\n    \"symbol\": \"BCC\",\n    \"name\": \"BCChain\"\n  },\n  \"269\": {\n    \"index\": \"269\",\n    \"hex\": \"0x8000010d\",\n    \"symbol\": \"HPB\",\n    \"name\": \"HPB\"\n  },\n  \"270\": {\n    \"index\": \"270\",\n    \"hex\": \"0x8000010e\",\n    \"symbol\": \"ONE\",\n    \"name\": \"ONE\"\n  },\n  \"271\": {\n    \"index\": \"271\",\n    \"hex\": \"0x8000010f\",\n    \"symbol\": \"SBC\",\n    \"name\": \"SBC\"\n  },\n  \"272\": {\n    \"index\": \"272\",\n    \"hex\": \"0x80000110\",\n    \"symbol\": \"IPC\",\n    \"name\": \"IPChain\"\n  },\n  \"273\": {\n    \"index\": \"273\",\n    \"hex\": \"0x80000111\",\n    \"symbol\": \"DMTC\",\n    \"name\": \"Dominantchain\"\n  },\n  \"274\": {\n    \"index\": \"274\",\n    \"hex\": \"0x80000112\",\n    \"symbol\": \"OGC\",\n    \"name\": \"Onegram\"\n  },\n  \"275\": {\n    \"index\": \"275\",\n    \"hex\": \"0x80000113\",\n    \"symbol\": \"SHIT\",\n    \"name\": \"Shitcoin\"\n  },\n  \"276\": {\n    \"index\": \"276\",\n    \"hex\": \"0x80000114\",\n    \"symbol\": \"ANDES\",\n    \"name\": \"Andescoin\"\n  },\n  \"277\": {\n    \"index\": \"277\",\n    \"hex\": \"0x80000115\",\n    \"symbol\": \"AREPA\",\n    \"name\": \"Arepacoin\"\n  },\n  \"278\": {\n    \"index\": \"278\",\n    \"hex\": \"0x80000116\",\n    \"symbol\": \"BOLI\",\n    \"name\": \"Bolivarcoin\"\n  },\n  \"279\": {\n    \"index\": \"279\",\n    \"hex\": \"0x80000117\",\n    \"symbol\": \"RIL\",\n    \"name\": \"Rilcoin\"\n  },\n  \"280\": {\n    \"index\": \"280\",\n    \"hex\": \"0x80000118\",\n    \"symbol\": \"HTR\",\n    \"name\": \"Hathor Network\"\n  },\n  \"281\": {\n    \"index\": \"281\",\n    \"hex\": \"0x80000119\",\n    \"symbol\": \"ACME\",\n    \"name\": \"Accumulate\"\n  },\n  \"282\": {\n    \"index\": \"282\",\n    \"hex\": \"0x8000011a\",\n    \"symbol\": \"BRAVO\",\n    \"name\": \"BRAVO\"\n  },\n  \"283\": {\n    \"index\": \"283\",\n    \"hex\": \"0x8000011b\",\n    \"symbol\": \"ALGO\",\n    \"name\": \"Algorand\"\n  },\n  \"284\": {\n    \"index\": \"284\",\n    \"hex\": \"0x8000011c\",\n    \"symbol\": \"BZX\",\n    \"name\": \"Bitcoinzero\"\n  },\n  \"285\": {\n    \"index\": \"285\",\n    \"hex\": \"0x8000011d\",\n    \"symbol\": \"GXX\",\n    \"name\": \"GravityCoin\"\n  },\n  \"286\": {\n    \"index\": \"286\",\n    \"hex\": \"0x8000011e\",\n    \"symbol\": \"HEAT\",\n    \"name\": \"HEAT\"\n  },\n  \"287\": {\n    \"index\": \"287\",\n    \"hex\": \"0x8000011f\",\n    \"symbol\": \"XDN\",\n    \"name\": \"DigitalNote\"\n  },\n  \"288\": {\n    \"index\": \"288\",\n    \"hex\": \"0x80000120\",\n    \"symbol\": \"FSN\",\n    \"name\": \"FUSION\"\n  },\n  \"289\": {\n    \"index\": \"289\",\n    \"hex\": \"0x80000121\",\n    \"symbol\": \"CPC\",\n    \"name\": \"Capricoin\"\n  },\n  \"290\": {\n    \"index\": \"290\",\n    \"hex\": \"0x80000122\",\n    \"symbol\": \"BOLD\",\n    \"name\": \"Bold\"\n  },\n  \"291\": {\n    \"index\": \"291\",\n    \"hex\": \"0x80000123\",\n    \"symbol\": \"IOST\",\n    \"name\": \"IOST\"\n  },\n  \"292\": {\n    \"index\": \"292\",\n    \"hex\": \"0x80000124\",\n    \"symbol\": \"TKEY\",\n    \"name\": \"Tkeycoin\"\n  },\n  \"293\": {\n    \"index\": \"293\",\n    \"hex\": \"0x80000125\",\n    \"symbol\": \"USE\",\n    \"name\": \"Usechain\"\n  },\n  \"294\": {\n    \"index\": \"294\",\n    \"hex\": \"0x80000126\",\n    \"symbol\": \"BCZ\",\n    \"name\": \"BitcoinCZ\"\n  },\n  \"295\": {\n    \"index\": \"295\",\n    \"hex\": \"0x80000127\",\n    \"symbol\": \"IOC\",\n    \"name\": \"Iocoin\"\n  },\n  \"296\": {\n    \"index\": \"296\",\n    \"hex\": \"0x80000128\",\n    \"symbol\": \"ASF\",\n    \"name\": \"Asofe\"\n  },\n  \"297\": {\n    \"index\": \"297\",\n    \"hex\": \"0x80000129\",\n    \"symbol\": \"MASS\",\n    \"name\": \"MASS\"\n  },\n  \"298\": {\n    \"index\": \"298\",\n    \"hex\": \"0x8000012a\",\n    \"symbol\": \"FAIR\",\n    \"name\": \"FairCoin\"\n  },\n  \"299\": {\n    \"index\": \"299\",\n    \"hex\": \"0x8000012b\",\n    \"symbol\": \"NUKO\",\n    \"name\": \"Nekonium\"\n  },\n  \"300\": {\n    \"index\": \"300\",\n    \"hex\": \"0x8000012c\",\n    \"symbol\": \"GNX\",\n    \"name\": \"Genaro Network\"\n  },\n  \"301\": {\n    \"index\": \"301\",\n    \"hex\": \"0x8000012d\",\n    \"symbol\": \"DIVI\",\n    \"name\": \"Divi Project\"\n  },\n  \"302\": {\n    \"index\": \"302\",\n    \"hex\": \"0x8000012e\",\n    \"symbol\": \"CMT\",\n    \"name\": \"Community\"\n  },\n  \"303\": {\n    \"index\": \"303\",\n    \"hex\": \"0x8000012f\",\n    \"symbol\": \"EUNO\",\n    \"name\": \"EUNO\"\n  },\n  \"304\": {\n    \"index\": \"304\",\n    \"hex\": \"0x80000130\",\n    \"symbol\": \"IOTX\",\n    \"name\": \"IoTeX\"\n  },\n  \"305\": {\n    \"index\": \"305\",\n    \"hex\": \"0x80000131\",\n    \"symbol\": \"ONION\",\n    \"name\": \"DeepOnion\"\n  },\n  \"306\": {\n    \"index\": \"306\",\n    \"hex\": \"0x80000132\",\n    \"symbol\": \"8BIT\",\n    \"name\": \"8Bit\"\n  },\n  \"307\": {\n    \"index\": \"307\",\n    \"hex\": \"0x80000133\",\n    \"symbol\": \"ATC\",\n    \"name\": \"AToken Coin\"\n  },\n  \"308\": {\n    \"index\": \"308\",\n    \"hex\": \"0x80000134\",\n    \"symbol\": \"BTS\",\n    \"name\": \"Bitshares\"\n  },\n  \"309\": {\n    \"index\": \"309\",\n    \"hex\": \"0x80000135\",\n    \"symbol\": \"CKB\",\n    \"name\": \"Nervos CKB\"\n  },\n  \"310\": {\n    \"index\": \"310\",\n    \"hex\": \"0x80000136\",\n    \"symbol\": \"UGAS\",\n    \"name\": \"Ultrain\"\n  },\n  \"311\": {\n    \"index\": \"311\",\n    \"hex\": \"0x80000137\",\n    \"symbol\": \"ADS\",\n    \"name\": \"Adshares\"\n  },\n  \"312\": {\n    \"index\": \"312\",\n    \"hex\": \"0x80000138\",\n    \"symbol\": \"ARA\",\n    \"name\": \"Aura\"\n  },\n  \"313\": {\n    \"index\": \"313\",\n    \"hex\": \"0x80000139\",\n    \"symbol\": \"ZIL\",\n    \"name\": \"Zilliqa\"\n  },\n  \"314\": {\n    \"index\": \"314\",\n    \"hex\": \"0x8000013a\",\n    \"symbol\": \"MOAC\",\n    \"name\": \"MOAC\"\n  },\n  \"315\": {\n    \"index\": \"315\",\n    \"hex\": \"0x8000013b\",\n    \"symbol\": \"SWTC\",\n    \"name\": \"SWTC\"\n  },\n  \"316\": {\n    \"index\": \"316\",\n    \"hex\": \"0x8000013c\",\n    \"symbol\": \"VNSC\",\n    \"name\": \"vnscoin\"\n  },\n  \"317\": {\n    \"index\": \"317\",\n    \"hex\": \"0x8000013d\",\n    \"symbol\": \"PLUG\",\n    \"name\": \"Pl^g\"\n  },\n  \"318\": {\n    \"index\": \"318\",\n    \"hex\": \"0x8000013e\",\n    \"symbol\": \"MAN\",\n    \"name\": \"Matrix AI Network\"\n  },\n  \"319\": {\n    \"index\": \"319\",\n    \"hex\": \"0x8000013f\",\n    \"symbol\": \"ECC\",\n    \"name\": \"ECCoin\"\n  },\n  \"320\": {\n    \"index\": \"320\",\n    \"hex\": \"0x80000140\",\n    \"symbol\": \"RPD\",\n    \"name\": \"Rapids\"\n  },\n  \"321\": {\n    \"index\": \"321\",\n    \"hex\": \"0x80000141\",\n    \"symbol\": \"RAP\",\n    \"name\": \"Rapture\"\n  },\n  \"322\": {\n    \"index\": \"322\",\n    \"hex\": \"0x80000142\",\n    \"symbol\": \"GARD\",\n    \"name\": \"Hashgard\"\n  },\n  \"323\": {\n    \"index\": \"323\",\n    \"hex\": \"0x80000143\",\n    \"symbol\": \"ZER\",\n    \"name\": \"Zero\"\n  },\n  \"324\": {\n    \"index\": \"324\",\n    \"hex\": \"0x80000144\",\n    \"symbol\": \"EBST\",\n    \"name\": \"eBoost\"\n  },\n  \"325\": {\n    \"index\": \"325\",\n    \"hex\": \"0x80000145\",\n    \"symbol\": \"SHARD\",\n    \"name\": \"Shard\"\n  },\n  \"326\": {\n    \"index\": \"326\",\n    \"hex\": \"0x80000146\",\n    \"symbol\": \"MRX\",\n    \"name\": \"Metrix Coin\"\n  },\n  \"327\": {\n    \"index\": \"327\",\n    \"hex\": \"0x80000147\",\n    \"symbol\": \"CMM\",\n    \"name\": \"Commercium\"\n  },\n  \"328\": {\n    \"index\": \"328\",\n    \"hex\": \"0x80000148\",\n    \"symbol\": \"BLOCK\",\n    \"name\": \"Blocknet\"\n  },\n  \"329\": {\n    \"index\": \"329\",\n    \"hex\": \"0x80000149\",\n    \"symbol\": \"AUDAX\",\n    \"name\": \"AUDAX\"\n  },\n  \"330\": {\n    \"index\": \"330\",\n    \"hex\": \"0x8000014a\",\n    \"symbol\": \"LUNA\",\n    \"name\": \"Terra\"\n  },\n  \"331\": {\n    \"index\": \"331\",\n    \"hex\": \"0x8000014b\",\n    \"symbol\": \"ZPM\",\n    \"name\": \"zPrime\"\n  },\n  \"332\": {\n    \"index\": \"332\",\n    \"hex\": \"0x8000014c\",\n    \"symbol\": \"KUVA\",\n    \"name\": \"Kuva Utility Note\"\n  },\n  \"333\": {\n    \"index\": \"333\",\n    \"hex\": \"0x8000014d\",\n    \"symbol\": \"MEM\",\n    \"name\": \"MemCoin\"\n  },\n  \"334\": {\n    \"index\": \"334\",\n    \"hex\": \"0x8000014e\",\n    \"symbol\": \"CS\",\n    \"name\": \"Credits\"\n  },\n  \"335\": {\n    \"index\": \"335\",\n    \"hex\": \"0x8000014f\",\n    \"symbol\": \"SWIFT\",\n    \"name\": \"SwiftCash\"\n  },\n  \"336\": {\n    \"index\": \"336\",\n    \"hex\": \"0x80000150\",\n    \"symbol\": \"FIX\",\n    \"name\": \"FIX\"\n  },\n  \"337\": {\n    \"index\": \"337\",\n    \"hex\": \"0x80000151\",\n    \"symbol\": \"CPC\",\n    \"name\": \"CPChain\"\n  },\n  \"338\": {\n    \"index\": \"338\",\n    \"hex\": \"0x80000152\",\n    \"symbol\": \"VGO\",\n    \"name\": \"VirtualGoodsToken\"\n  },\n  \"339\": {\n    \"index\": \"339\",\n    \"hex\": \"0x80000153\",\n    \"symbol\": \"DVT\",\n    \"name\": \"DeVault\"\n  },\n  \"340\": {\n    \"index\": \"340\",\n    \"hex\": \"0x80000154\",\n    \"symbol\": \"N8V\",\n    \"name\": \"N8VCoin\"\n  },\n  \"341\": {\n    \"index\": \"341\",\n    \"hex\": \"0x80000155\",\n    \"symbol\": \"MTNS\",\n    \"name\": \"OmotenashiCoin\"\n  },\n  \"342\": {\n    \"index\": \"342\",\n    \"hex\": \"0x80000156\",\n    \"symbol\": \"BLAST\",\n    \"name\": \"BLAST\"\n  },\n  \"343\": {\n    \"index\": \"343\",\n    \"hex\": \"0x80000157\",\n    \"symbol\": \"DCT\",\n    \"name\": \"DECENT\"\n  },\n  \"344\": {\n    \"index\": \"344\",\n    \"hex\": \"0x80000158\",\n    \"symbol\": \"AUX\",\n    \"name\": \"Auxilium\"\n  },\n  \"345\": {\n    \"index\": \"345\",\n    \"hex\": \"0x80000159\",\n    \"symbol\": \"USDP\",\n    \"name\": \"USDP\"\n  },\n  \"346\": {\n    \"index\": \"346\",\n    \"hex\": \"0x8000015a\",\n    \"symbol\": \"HTDF\",\n    \"name\": \"HTDF\"\n  },\n  \"347\": {\n    \"index\": \"347\",\n    \"hex\": \"0x8000015b\",\n    \"symbol\": \"YEC\",\n    \"name\": \"Ycash\"\n  },\n  \"348\": {\n    \"index\": \"348\",\n    \"hex\": \"0x8000015c\",\n    \"symbol\": \"QLC\",\n    \"name\": \"QLC Chain\"\n  },\n  \"349\": {\n    \"index\": \"349\",\n    \"hex\": \"0x8000015d\",\n    \"symbol\": \"TEA\",\n    \"name\": \"Icetea Blockchain\"\n  },\n  \"350\": {\n    \"index\": \"350\",\n    \"hex\": \"0x8000015e\",\n    \"symbol\": \"ARW\",\n    \"name\": \"ArrowChain\"\n  },\n  \"351\": {\n    \"index\": \"351\",\n    \"hex\": \"0x8000015f\",\n    \"symbol\": \"MDM\",\n    \"name\": \"Medium\"\n  },\n  \"352\": {\n    \"index\": \"352\",\n    \"hex\": \"0x80000160\",\n    \"symbol\": \"CYB\",\n    \"name\": \"Cybex\"\n  },\n  \"353\": {\n    \"index\": \"353\",\n    \"hex\": \"0x80000161\",\n    \"symbol\": \"LTO\",\n    \"name\": \"LTO Network\"\n  },\n  \"354\": {\n    \"index\": \"354\",\n    \"hex\": \"0x80000162\",\n    \"symbol\": \"DOT\",\n    \"name\": \"Polkadot\"\n  },\n  \"355\": {\n    \"index\": \"355\",\n    \"hex\": \"0x80000163\",\n    \"symbol\": \"AEON\",\n    \"name\": \"Aeon\"\n  },\n  \"356\": {\n    \"index\": \"356\",\n    \"hex\": \"0x80000164\",\n    \"symbol\": \"RES\",\n    \"name\": \"Resistance\"\n  },\n  \"357\": {\n    \"index\": \"357\",\n    \"hex\": \"0x80000165\",\n    \"symbol\": \"AYA\",\n    \"name\": \"Aryacoin\"\n  },\n  \"358\": {\n    \"index\": \"358\",\n    \"hex\": \"0x80000166\",\n    \"symbol\": \"DAPS\",\n    \"name\": \"Dapscoin\"\n  },\n  \"359\": {\n    \"index\": \"359\",\n    \"hex\": \"0x80000167\",\n    \"symbol\": \"CSC\",\n    \"name\": \"CasinoCoin\"\n  },\n  \"360\": {\n    \"index\": \"360\",\n    \"hex\": \"0x80000168\",\n    \"symbol\": \"VSYS\",\n    \"name\": \"V Systems\"\n  },\n  \"361\": {\n    \"index\": \"361\",\n    \"hex\": \"0x80000169\",\n    \"symbol\": \"NOLLAR\",\n    \"name\": \"Nollar\"\n  },\n  \"362\": {\n    \"index\": \"362\",\n    \"hex\": \"0x8000016a\",\n    \"symbol\": \"XNOS\",\n    \"name\": \"NOS\"\n  },\n  \"363\": {\n    \"index\": \"363\",\n    \"hex\": \"0x8000016b\",\n    \"symbol\": \"CPU\",\n    \"name\": \"CPUchain\"\n  },\n  \"364\": {\n    \"index\": \"364\",\n    \"hex\": \"0x8000016c\",\n    \"symbol\": \"LAMB\",\n    \"name\": \"Lambda Storage Chain\"\n  },\n  \"365\": {\n    \"index\": \"365\",\n    \"hex\": \"0x8000016d\",\n    \"symbol\": \"VCT\",\n    \"name\": \"ValueCyber\"\n  },\n  \"366\": {\n    \"index\": \"366\",\n    \"hex\": \"0x8000016e\",\n    \"symbol\": \"CZR\",\n    \"name\": \"Canonchain\"\n  },\n  \"367\": {\n    \"index\": \"367\",\n    \"hex\": \"0x8000016f\",\n    \"symbol\": \"ABBC\",\n    \"name\": \"ABBC\"\n  },\n  \"368\": {\n    \"index\": \"368\",\n    \"hex\": \"0x80000170\",\n    \"symbol\": \"HET\",\n    \"name\": \"HET\"\n  },\n  \"369\": {\n    \"index\": \"369\",\n    \"hex\": \"0x80000171\",\n    \"symbol\": \"XAS\",\n    \"name\": \"Asch\"\n  },\n  \"370\": {\n    \"index\": \"370\",\n    \"hex\": \"0x80000172\",\n    \"symbol\": \"VDL\",\n    \"name\": \"Vidulum\"\n  },\n  \"371\": {\n    \"index\": \"371\",\n    \"hex\": \"0x80000173\",\n    \"symbol\": \"MED\",\n    \"name\": \"MediBloc\"\n  },\n  \"372\": {\n    \"index\": \"372\",\n    \"hex\": \"0x80000174\",\n    \"symbol\": \"ZVC\",\n    \"name\": \"ZVChain\"\n  },\n  \"373\": {\n    \"index\": \"373\",\n    \"hex\": \"0x80000175\",\n    \"symbol\": \"VESTX\",\n    \"name\": \"Vestx\"\n  },\n  \"374\": {\n    \"index\": \"374\",\n    \"hex\": \"0x80000176\",\n    \"symbol\": \"DBT\",\n    \"name\": \"DarkBit\"\n  },\n  \"375\": {\n    \"index\": \"375\",\n    \"hex\": \"0x80000177\",\n    \"symbol\": \"SEOS\",\n    \"name\": \"SuperEOS\"\n  },\n  \"376\": {\n    \"index\": \"376\",\n    \"hex\": \"0x80000178\",\n    \"symbol\": \"MXW\",\n    \"name\": \"Maxonrow\"\n  },\n  \"377\": {\n    \"index\": \"377\",\n    \"hex\": \"0x80000179\",\n    \"symbol\": \"ZNZ\",\n    \"name\": \"ZENZO\"\n  },\n  \"378\": {\n    \"index\": \"378\",\n    \"hex\": \"0x8000017a\",\n    \"symbol\": \"XCX\",\n    \"name\": \"XChain\"\n  },\n  \"379\": {\n    \"index\": \"379\",\n    \"hex\": \"0x8000017b\",\n    \"symbol\": \"SOX\",\n    \"name\": \"SonicX\"\n  },\n  \"380\": {\n    \"index\": \"380\",\n    \"hex\": \"0x8000017c\",\n    \"symbol\": \"NYZO\",\n    \"name\": \"Nyzo\"\n  },\n  \"381\": {\n    \"index\": \"381\",\n    \"hex\": \"0x8000017d\",\n    \"symbol\": \"ULC\",\n    \"name\": \"ULCoin\"\n  },\n  \"382\": {\n    \"index\": \"382\",\n    \"hex\": \"0x8000017e\",\n    \"symbol\": \"RYO\",\n    \"name\": \"Ryo Currency\"\n  },\n  \"383\": {\n    \"index\": \"383\",\n    \"hex\": \"0x8000017f\",\n    \"symbol\": \"KAL\",\n    \"name\": \"Kaleidochain\"\n  },\n  \"384\": {\n    \"index\": \"384\",\n    \"hex\": \"0x80000180\",\n    \"symbol\": \"XSN\",\n    \"name\": \"Stakenet\"\n  },\n  \"385\": {\n    \"index\": \"385\",\n    \"hex\": \"0x80000181\",\n    \"symbol\": \"DOGEC\",\n    \"name\": \"DogeCash\"\n  },\n  \"386\": {\n    \"index\": \"386\",\n    \"hex\": \"0x80000182\",\n    \"symbol\": \"BMV\",\n    \"name\": \"Bitcoin Matteo's Vision\"\n  },\n  \"387\": {\n    \"index\": \"387\",\n    \"hex\": \"0x80000183\",\n    \"symbol\": \"QBC\",\n    \"name\": \"Quebecoin\"\n  },\n  \"388\": {\n    \"index\": \"388\",\n    \"hex\": \"0x80000184\",\n    \"symbol\": \"IMG\",\n    \"name\": \"ImageCoin\"\n  },\n  \"389\": {\n    \"index\": \"389\",\n    \"hex\": \"0x80000185\",\n    \"symbol\": \"QOS\",\n    \"name\": \"QOS\"\n  },\n  \"390\": {\n    \"index\": \"390\",\n    \"hex\": \"0x80000186\",\n    \"symbol\": \"PKT\",\n    \"name\": \"PKT\"\n  },\n  \"391\": {\n    \"index\": \"391\",\n    \"hex\": \"0x80000187\",\n    \"symbol\": \"LHD\",\n    \"name\": \"LitecoinHD\"\n  },\n  \"392\": {\n    \"index\": \"392\",\n    \"hex\": \"0x80000188\",\n    \"symbol\": \"CENNZ\",\n    \"name\": \"CENNZnet\"\n  },\n  \"393\": {\n    \"index\": \"393\",\n    \"hex\": \"0x80000189\",\n    \"symbol\": \"HSN\",\n    \"name\": \"Hyper Speed Network\"\n  },\n  \"394\": {\n    \"index\": \"394\",\n    \"hex\": \"0x8000018a\",\n    \"symbol\": \"CRO\",\n    \"name\": \"Crypto Chain\"\n  },\n  \"395\": {\n    \"index\": \"395\",\n    \"hex\": \"0x8000018b\",\n    \"symbol\": \"UMBRU\",\n    \"name\": \"Umbru\"\n  },\n  \"396\": {\n    \"index\": \"396\",\n    \"hex\": \"0x8000018c\",\n    \"symbol\": \"EVER\",\n    \"name\": \"Everscale\"\n  },\n  \"397\": {\n    \"index\": \"397\",\n    \"hex\": \"0x8000018d\",\n    \"symbol\": \"NEAR\",\n    \"name\": \"NEAR Protocol\"\n  },\n  \"398\": {\n    \"index\": \"398\",\n    \"hex\": \"0x8000018e\",\n    \"symbol\": \"XPC\",\n    \"name\": \"XPChain\"\n  },\n  \"399\": {\n    \"index\": \"399\",\n    \"hex\": \"0x8000018f\",\n    \"symbol\": \"ZOC\",\n    \"name\": \"01coin\"\n  },\n  \"400\": {\n    \"index\": \"400\",\n    \"hex\": \"0x80000190\",\n    \"symbol\": \"NIX\",\n    \"name\": \"NIX\"\n  },\n  \"401\": {\n    \"index\": \"401\",\n    \"hex\": \"0x80000191\",\n    \"symbol\": \"UC\",\n    \"name\": \"Utopiacoin\"\n  },\n  \"402\": {\n    \"index\": \"402\",\n    \"hex\": \"0x80000192\",\n    \"symbol\": \"GALI\",\n    \"name\": \"Galilel\"\n  },\n  \"403\": {\n    \"index\": \"403\",\n    \"hex\": \"0x80000193\",\n    \"symbol\": \"OLT\",\n    \"name\": \"Oneledger\"\n  },\n  \"404\": {\n    \"index\": \"404\",\n    \"hex\": \"0x80000194\",\n    \"symbol\": \"XBI\",\n    \"name\": \"XBI\"\n  },\n  \"405\": {\n    \"index\": \"405\",\n    \"hex\": \"0x80000195\",\n    \"symbol\": \"DONU\",\n    \"name\": \"DONU\"\n  },\n  \"406\": {\n    \"index\": \"406\",\n    \"hex\": \"0x80000196\",\n    \"symbol\": \"EARTHS\",\n    \"name\": \"Earths\"\n  },\n  \"407\": {\n    \"index\": \"407\",\n    \"hex\": \"0x80000197\",\n    \"symbol\": \"HDD\",\n    \"name\": \"HDDCash\"\n  },\n  \"408\": {\n    \"index\": \"408\",\n    \"hex\": \"0x80000198\",\n    \"symbol\": \"SUGAR\",\n    \"name\": \"Sugarchain\"\n  },\n  \"409\": {\n    \"index\": \"409\",\n    \"hex\": \"0x80000199\",\n    \"symbol\": \"AILE\",\n    \"name\": \"AileCoin\"\n  },\n  \"410\": {\n    \"index\": \"410\",\n    \"hex\": \"0x8000019a\",\n    \"symbol\": \"TENT\",\n    \"name\": \"TENT\"\n  },\n  \"411\": {\n    \"index\": \"411\",\n    \"hex\": \"0x8000019b\",\n    \"symbol\": \"TAN\",\n    \"name\": \"Tangerine Network\"\n  },\n  \"412\": {\n    \"index\": \"412\",\n    \"hex\": \"0x8000019c\",\n    \"symbol\": \"AIN\",\n    \"name\": \"AIN\"\n  },\n  \"413\": {\n    \"index\": \"413\",\n    \"hex\": \"0x8000019d\",\n    \"symbol\": \"MSR\",\n    \"name\": \"Masari\"\n  },\n  \"414\": {\n    \"index\": \"414\",\n    \"hex\": \"0x8000019e\",\n    \"symbol\": \"SUMO\",\n    \"name\": \"Sumokoin\"\n  },\n  \"415\": {\n    \"index\": \"415\",\n    \"hex\": \"0x8000019f\",\n    \"symbol\": \"ETN\",\n    \"name\": \"Electroneum\"\n  },\n  \"416\": {\n    \"index\": \"416\",\n    \"hex\": \"0x800001a0\",\n    \"symbol\": \"BYTZ\",\n    \"name\": \"BYTZ\"\n  },\n  \"417\": {\n    \"index\": \"417\",\n    \"hex\": \"0x800001a1\",\n    \"symbol\": \"WOW\",\n    \"name\": \"Wownero\"\n  },\n  \"418\": {\n    \"index\": \"418\",\n    \"hex\": \"0x800001a2\",\n    \"symbol\": \"XTNC\",\n    \"name\": \"XtendCash\"\n  },\n  \"419\": {\n    \"index\": \"419\",\n    \"hex\": \"0x800001a3\",\n    \"symbol\": \"LTHN\",\n    \"name\": \"Lethean\"\n  },\n  \"420\": {\n    \"index\": \"420\",\n    \"hex\": \"0x800001a4\",\n    \"symbol\": \"NODE\",\n    \"name\": \"NodeHost\"\n  },\n  \"421\": {\n    \"index\": \"421\",\n    \"hex\": \"0x800001a5\",\n    \"symbol\": \"AGM\",\n    \"name\": \"Argoneum\"\n  },\n  \"422\": {\n    \"index\": \"422\",\n    \"hex\": \"0x800001a6\",\n    \"symbol\": \"CCX\",\n    \"name\": \"Conceal Network\"\n  },\n  \"423\": {\n    \"index\": \"423\",\n    \"hex\": \"0x800001a7\",\n    \"symbol\": \"TNET\",\n    \"name\": \"Title Network\"\n  },\n  \"424\": {\n    \"index\": \"424\",\n    \"hex\": \"0x800001a8\",\n    \"symbol\": \"TELOS\",\n    \"name\": \"TelosCoin\"\n  },\n  \"425\": {\n    \"index\": \"425\",\n    \"hex\": \"0x800001a9\",\n    \"symbol\": \"AION\",\n    \"name\": \"Aion\"\n  },\n  \"426\": {\n    \"index\": \"426\",\n    \"hex\": \"0x800001aa\",\n    \"symbol\": \"BC\",\n    \"name\": \"Bitcoin Confidential\"\n  },\n  \"427\": {\n    \"index\": \"427\",\n    \"hex\": \"0x800001ab\",\n    \"symbol\": \"KTV\",\n    \"name\": \"KmushiCoin\"\n  },\n  \"428\": {\n    \"index\": \"428\",\n    \"hex\": \"0x800001ac\",\n    \"symbol\": \"ZCR\",\n    \"name\": \"ZCore\"\n  },\n  \"429\": {\n    \"index\": \"429\",\n    \"hex\": \"0x800001ad\",\n    \"symbol\": \"ERG\",\n    \"name\": \"Ergo\"\n  },\n  \"430\": {\n    \"index\": \"430\",\n    \"hex\": \"0x800001ae\",\n    \"symbol\": \"PESO\",\n    \"name\": \"Criptopeso\"\n  },\n  \"431\": {\n    \"index\": \"431\",\n    \"hex\": \"0x800001af\",\n    \"symbol\": \"BTC2\",\n    \"name\": \"Bitcoin 2\"\n  },\n  \"432\": {\n    \"index\": \"432\",\n    \"hex\": \"0x800001b0\",\n    \"symbol\": \"XRPHD\",\n    \"name\": \"XRPHD\"\n  },\n  \"433\": {\n    \"index\": \"433\",\n    \"hex\": \"0x800001b1\",\n    \"symbol\": \"WE\",\n    \"name\": \"WE Coin\"\n  },\n  \"434\": {\n    \"index\": \"434\",\n    \"hex\": \"0x800001b2\",\n    \"symbol\": \"KSM\",\n    \"name\": \"Kusama\"\n  },\n  \"435\": {\n    \"index\": \"435\",\n    \"hex\": \"0x800001b3\",\n    \"symbol\": \"PCN\",\n    \"name\": \"Peepcoin\"\n  },\n  \"436\": {\n    \"index\": \"436\",\n    \"hex\": \"0x800001b4\",\n    \"symbol\": \"NCH\",\n    \"name\": \"NetCloth\"\n  },\n  \"437\": {\n    \"index\": \"437\",\n    \"hex\": \"0x800001b5\",\n    \"symbol\": \"ICU\",\n    \"name\": \"CHIPO\"\n  },\n  \"438\": {\n    \"index\": \"438\",\n    \"hex\": \"0x800001b6\",\n    \"symbol\": \"FNSA\",\n    \"name\": \"FINSCHIA\"\n  },\n  \"439\": {\n    \"index\": \"439\",\n    \"hex\": \"0x800001b7\",\n    \"symbol\": \"DTP\",\n    \"name\": \"DeVault Token Protocol\"\n  },\n  \"440\": {\n    \"index\": \"440\",\n    \"hex\": \"0x800001b8\",\n    \"symbol\": \"BTCR\",\n    \"name\": \"Bitcoin Royale\"\n  },\n  \"441\": {\n    \"index\": \"441\",\n    \"hex\": \"0x800001b9\",\n    \"symbol\": \"AERGO\",\n    \"name\": \"AERGO\"\n  },\n  \"442\": {\n    \"index\": \"442\",\n    \"hex\": \"0x800001ba\",\n    \"symbol\": \"XTH\",\n    \"name\": \"Dothereum\"\n  },\n  \"443\": {\n    \"index\": \"443\",\n    \"hex\": \"0x800001bb\",\n    \"symbol\": \"LV\",\n    \"name\": \"Lava\"\n  },\n  \"444\": {\n    \"index\": \"444\",\n    \"hex\": \"0x800001bc\",\n    \"symbol\": \"PHR\",\n    \"name\": \"Phore\"\n  },\n  \"445\": {\n    \"index\": \"445\",\n    \"hex\": \"0x800001bd\",\n    \"symbol\": \"VITAE\",\n    \"name\": \"Vitae\"\n  },\n  \"446\": {\n    \"index\": \"446\",\n    \"hex\": \"0x800001be\",\n    \"symbol\": \"COCOS\",\n    \"name\": \"Cocos-BCX\"\n  },\n  \"447\": {\n    \"index\": \"447\",\n    \"hex\": \"0x800001bf\",\n    \"symbol\": \"DIN\",\n    \"name\": \"Dinero\"\n  },\n  \"448\": {\n    \"index\": \"448\",\n    \"hex\": \"0x800001c0\",\n    \"symbol\": \"SPL\",\n    \"name\": \"Simplicity\"\n  },\n  \"449\": {\n    \"index\": \"449\",\n    \"hex\": \"0x800001c1\",\n    \"symbol\": \"YCE\",\n    \"name\": \"MYCE\"\n  },\n  \"450\": {\n    \"index\": \"450\",\n    \"hex\": \"0x800001c2\",\n    \"symbol\": \"XLR\",\n    \"name\": \"Solaris\"\n  },\n  \"451\": {\n    \"index\": \"451\",\n    \"hex\": \"0x800001c3\",\n    \"symbol\": \"KTS\",\n    \"name\": \"Klimatas\"\n  },\n  \"452\": {\n    \"index\": \"452\",\n    \"hex\": \"0x800001c4\",\n    \"symbol\": \"DGLD\",\n    \"name\": \"DGLD\"\n  },\n  \"453\": {\n    \"index\": \"453\",\n    \"hex\": \"0x800001c5\",\n    \"symbol\": \"XNS\",\n    \"name\": \"Insolar\"\n  },\n  \"454\": {\n    \"index\": \"454\",\n    \"hex\": \"0x800001c6\",\n    \"symbol\": \"EM\",\n    \"name\": \"EMPOW\"\n  },\n  \"455\": {\n    \"index\": \"455\",\n    \"hex\": \"0x800001c7\",\n    \"symbol\": \"SHN\",\n    \"name\": \"ShineBlocks\"\n  },\n  \"456\": {\n    \"index\": \"456\",\n    \"hex\": \"0x800001c8\",\n    \"symbol\": \"SEELE\",\n    \"name\": \"Seele\"\n  },\n  \"457\": {\n    \"index\": \"457\",\n    \"hex\": \"0x800001c9\",\n    \"symbol\": \"AE\",\n    \"name\": \"æternity\"\n  },\n  \"458\": {\n    \"index\": \"458\",\n    \"hex\": \"0x800001ca\",\n    \"symbol\": \"ODX\",\n    \"name\": \"ObsidianX\"\n  },\n  \"459\": {\n    \"index\": \"459\",\n    \"hex\": \"0x800001cb\",\n    \"symbol\": \"KAVA\",\n    \"name\": \"Kava\"\n  },\n  \"460\": {\n    \"index\": \"460\",\n    \"hex\": \"0x800001cc\",\n    \"symbol\": \"GLEEC\",\n    \"name\": \"GLEEC\"\n  },\n  \"461\": {\n    \"index\": \"461\",\n    \"hex\": \"0x800001cd\",\n    \"symbol\": \"FIL\",\n    \"name\": \"Filecoin\"\n  },\n  \"462\": {\n    \"index\": \"462\",\n    \"hex\": \"0x800001ce\",\n    \"symbol\": \"RUTA\",\n    \"name\": \"Rutanio\"\n  },\n  \"463\": {\n    \"index\": \"463\",\n    \"hex\": \"0x800001cf\",\n    \"symbol\": \"CSDT\",\n    \"name\": \"CSDT\"\n  },\n  \"464\": {\n    \"index\": \"464\",\n    \"hex\": \"0x800001d0\",\n    \"symbol\": \"ETI\",\n    \"name\": \"EtherInc\"\n  },\n  \"465\": {\n    \"index\": \"465\",\n    \"hex\": \"0x800001d1\",\n    \"symbol\": \"ZSLP\",\n    \"name\": \"Zclassic Simple Ledger Protocol\"\n  },\n  \"466\": {\n    \"index\": \"466\",\n    \"hex\": \"0x800001d2\",\n    \"symbol\": \"ERE\",\n    \"name\": \"EtherCore\"\n  },\n  \"467\": {\n    \"index\": \"467\",\n    \"hex\": \"0x800001d3\",\n    \"symbol\": \"DX\",\n    \"name\": \"DxChain Token\"\n  },\n  \"468\": {\n    \"index\": \"468\",\n    \"hex\": \"0x800001d4\",\n    \"symbol\": \"CPS\",\n    \"name\": \"Capricoin+\"\n  },\n  \"469\": {\n    \"index\": \"469\",\n    \"hex\": \"0x800001d5\",\n    \"symbol\": \"BTH\",\n    \"name\": \"Bithereum\"\n  },\n  \"470\": {\n    \"index\": \"470\",\n    \"hex\": \"0x800001d6\",\n    \"symbol\": \"MESG\",\n    \"name\": \"MESG\"\n  },\n  \"471\": {\n    \"index\": \"471\",\n    \"hex\": \"0x800001d7\",\n    \"symbol\": \"FIMK\",\n    \"name\": \"FIMK\"\n  },\n  \"472\": {\n    \"index\": \"472\",\n    \"hex\": \"0x800001d8\",\n    \"symbol\": \"AR\",\n    \"name\": \"Arweave\"\n  },\n  \"473\": {\n    \"index\": \"473\",\n    \"hex\": \"0x800001d9\",\n    \"symbol\": \"OGO\",\n    \"name\": \"Origo\"\n  },\n  \"474\": {\n    \"index\": \"474\",\n    \"hex\": \"0x800001da\",\n    \"symbol\": \"ROSE\",\n    \"name\": \"Oasis Network\"\n  },\n  \"475\": {\n    \"index\": \"475\",\n    \"hex\": \"0x800001db\",\n    \"symbol\": \"BARE\",\n    \"name\": \"BARE Network\"\n  },\n  \"476\": {\n    \"index\": \"476\",\n    \"hex\": \"0x800001dc\",\n    \"symbol\": \"GLEEC\",\n    \"name\": \"GleecBTC\"\n  },\n  \"477\": {\n    \"index\": \"477\",\n    \"hex\": \"0x800001dd\",\n    \"symbol\": \"CLR\",\n    \"name\": \"Color Coin\"\n  },\n  \"478\": {\n    \"index\": \"478\",\n    \"hex\": \"0x800001de\",\n    \"symbol\": \"RNG\",\n    \"name\": \"Ring\"\n  },\n  \"479\": {\n    \"index\": \"479\",\n    \"hex\": \"0x800001df\",\n    \"symbol\": \"OLO\",\n    \"name\": \"Tool Global\"\n  },\n  \"480\": {\n    \"index\": \"480\",\n    \"hex\": \"0x800001e0\",\n    \"symbol\": \"PEXA\",\n    \"name\": \"Pexa\"\n  },\n  \"481\": {\n    \"index\": \"481\",\n    \"hex\": \"0x800001e1\",\n    \"symbol\": \"MOON\",\n    \"name\": \"Mooncoin\"\n  },\n  \"482\": {\n    \"index\": \"482\",\n    \"hex\": \"0x800001e2\",\n    \"symbol\": \"OCEAN\",\n    \"name\": \"Ocean Protocol\"\n  },\n  \"483\": {\n    \"index\": \"483\",\n    \"hex\": \"0x800001e3\",\n    \"symbol\": \"BNT\",\n    \"name\": \"Bluzelle Native\"\n  },\n  \"484\": {\n    \"index\": \"484\",\n    \"hex\": \"0x800001e4\",\n    \"symbol\": \"AMO\",\n    \"name\": \"AMO Blockchain\"\n  },\n  \"485\": {\n    \"index\": \"485\",\n    \"hex\": \"0x800001e5\",\n    \"symbol\": \"FCH\",\n    \"name\": \"FreeCash\"\n  },\n  \"486\": {\n    \"index\": \"486\",\n    \"hex\": \"0x800001e6\",\n    \"symbol\": \"LAT\",\n    \"name\": \"PlatON\"\n  },\n  \"487\": {\n    \"index\": \"487\",\n    \"hex\": \"0x800001e7\",\n    \"symbol\": \"COIN\",\n    \"name\": \"Bitcoin Bank\"\n  },\n  \"488\": {\n    \"index\": \"488\",\n    \"hex\": \"0x800001e8\",\n    \"symbol\": \"VEO\",\n    \"name\": \"Amoveo\"\n  },\n  \"489\": {\n    \"index\": \"489\",\n    \"hex\": \"0x800001e9\",\n    \"symbol\": \"CCA\",\n    \"name\": \"Counos Coin\"\n  },\n  \"490\": {\n    \"index\": \"490\",\n    \"hex\": \"0x800001ea\",\n    \"symbol\": \"GFN\",\n    \"name\": \"Graphene\"\n  },\n  \"491\": {\n    \"index\": \"491\",\n    \"hex\": \"0x800001eb\",\n    \"symbol\": \"BIP\",\n    \"name\": \"Minter Network\"\n  },\n  \"492\": {\n    \"index\": \"492\",\n    \"hex\": \"0x800001ec\",\n    \"symbol\": \"KPG\",\n    \"name\": \"Kunpeng Network\"\n  },\n  \"493\": {\n    \"index\": \"493\",\n    \"hex\": \"0x800001ed\",\n    \"symbol\": \"FIN\",\n    \"name\": \"FINL Chain\"\n  },\n  \"494\": {\n    \"index\": \"494\",\n    \"hex\": \"0x800001ee\",\n    \"symbol\": \"BAND\",\n    \"name\": \"Band\"\n  },\n  \"495\": {\n    \"index\": \"495\",\n    \"hex\": \"0x800001ef\",\n    \"symbol\": \"DROP\",\n    \"name\": \"Dropil\"\n  },\n  \"496\": {\n    \"index\": \"496\",\n    \"hex\": \"0x800001f0\",\n    \"symbol\": \"BHT\",\n    \"name\": \"Bluehelix Chain\"\n  },\n  \"497\": {\n    \"index\": \"497\",\n    \"hex\": \"0x800001f1\",\n    \"symbol\": \"LYRA\",\n    \"name\": \"Scrypta\"\n  },\n  \"498\": {\n    \"index\": \"498\",\n    \"hex\": \"0x800001f2\",\n    \"symbol\": \"CS\",\n    \"name\": \"Credits\"\n  },\n  \"499\": {\n    \"index\": \"499\",\n    \"hex\": \"0x800001f3\",\n    \"symbol\": \"RUPX\",\n    \"name\": \"Rupaya\"\n  },\n  \"500\": {\n    \"index\": \"500\",\n    \"hex\": \"0x800001f4\",\n    \"symbol\": \"THETA\",\n    \"name\": \"Theta\"\n  },\n  \"501\": {\n    \"index\": \"501\",\n    \"hex\": \"0x800001f5\",\n    \"symbol\": \"SOL\",\n    \"name\": \"Solana\"\n  },\n  \"502\": {\n    \"index\": \"502\",\n    \"hex\": \"0x800001f6\",\n    \"symbol\": \"THT\",\n    \"name\": \"ThoughtAI\"\n  },\n  \"503\": {\n    \"index\": \"503\",\n    \"hex\": \"0x800001f7\",\n    \"symbol\": \"CFX\",\n    \"name\": \"Conflux\"\n  },\n  \"504\": {\n    \"index\": \"504\",\n    \"hex\": \"0x800001f8\",\n    \"symbol\": \"KUMA\",\n    \"name\": \"Kumacoin\"\n  },\n  \"505\": {\n    \"index\": \"505\",\n    \"hex\": \"0x800001f9\",\n    \"symbol\": \"HASH\",\n    \"name\": \"Provenance\"\n  },\n  \"506\": {\n    \"index\": \"506\",\n    \"hex\": \"0x800001fa\",\n    \"symbol\": \"CSPR\",\n    \"name\": \"Casper\"\n  },\n  \"507\": {\n    \"index\": \"507\",\n    \"hex\": \"0x800001fb\",\n    \"symbol\": \"EARTH\",\n    \"name\": \"EARTH\"\n  },\n  \"508\": {\n    \"index\": \"508\",\n    \"hex\": \"0x800001fc\",\n    \"symbol\": \"EGLD\",\n    \"name\": \"MultiversX\"\n  },\n  \"509\": {\n    \"index\": \"509\",\n    \"hex\": \"0x800001fd\",\n    \"symbol\": \"CHI\",\n    \"name\": \"Xaya\"\n  },\n  \"510\": {\n    \"index\": \"510\",\n    \"hex\": \"0x800001fe\",\n    \"symbol\": \"KOTO\",\n    \"name\": \"Koto\"\n  },\n  \"511\": {\n    \"index\": \"511\",\n    \"hex\": \"0x800001ff\",\n    \"symbol\": \"OTC\",\n    \"name\": \"θ\"\n  },\n  \"512\": {\n    \"index\": \"512\",\n    \"hex\": \"0x80000200\",\n    \"symbol\": \"RXD\",\n    \"name\": \"Radiant\"\n  },\n  \"513\": {\n    \"index\": \"513\",\n    \"hex\": \"0x80000201\",\n    \"symbol\": \"SEELEN\",\n    \"name\": \"Seele-N\"\n  },\n  \"514\": {\n    \"index\": \"514\",\n    \"hex\": \"0x80000202\",\n    \"symbol\": \"AETH\",\n    \"name\": \"AETH\"\n  },\n  \"515\": {\n    \"index\": \"515\",\n    \"hex\": \"0x80000203\",\n    \"symbol\": \"DNA\",\n    \"name\": \"Idena\"\n  },\n  \"516\": {\n    \"index\": \"516\",\n    \"hex\": \"0x80000204\",\n    \"symbol\": \"VEE\",\n    \"name\": \"Virtual Economy Era\"\n  },\n  \"517\": {\n    \"index\": \"517\",\n    \"hex\": \"0x80000205\",\n    \"symbol\": \"SIERRA\",\n    \"name\": \"SierraCoin\"\n  },\n  \"518\": {\n    \"index\": \"518\",\n    \"hex\": \"0x80000206\",\n    \"symbol\": \"LET\",\n    \"name\": \"Linkeye\"\n  },\n  \"519\": {\n    \"index\": \"519\",\n    \"hex\": \"0x80000207\",\n    \"symbol\": \"BSC\",\n    \"name\": \"Bitcoin Smart Contract\"\n  },\n  \"520\": {\n    \"index\": \"520\",\n    \"hex\": \"0x80000208\",\n    \"symbol\": \"BTCV\",\n    \"name\": \"BitcoinVIP\"\n  },\n  \"521\": {\n    \"index\": \"521\",\n    \"hex\": \"0x80000209\",\n    \"symbol\": \"ABA\",\n    \"name\": \"Dabacus\"\n  },\n  \"522\": {\n    \"index\": \"522\",\n    \"hex\": \"0x8000020a\",\n    \"symbol\": \"SCC\",\n    \"name\": \"StakeCubeCoin\"\n  },\n  \"523\": {\n    \"index\": \"523\",\n    \"hex\": \"0x8000020b\",\n    \"symbol\": \"EDG\",\n    \"name\": \"Edgeware\"\n  },\n  \"524\": {\n    \"index\": \"524\",\n    \"hex\": \"0x8000020c\",\n    \"symbol\": \"AMS\",\n    \"name\": \"AmsterdamCoin\"\n  },\n  \"525\": {\n    \"index\": \"525\",\n    \"hex\": \"0x8000020d\",\n    \"symbol\": \"GOSS\",\n    \"name\": \"GOSSIP Coin\"\n  },\n  \"526\": {\n    \"index\": \"526\",\n    \"hex\": \"0x8000020e\",\n    \"symbol\": \"BU\",\n    \"name\": \"BUMO\"\n  },\n  \"527\": {\n    \"index\": \"527\",\n    \"hex\": \"0x8000020f\",\n    \"symbol\": \"GRAM\",\n    \"name\": \"GRAM\"\n  },\n  \"528\": {\n    \"index\": \"528\",\n    \"hex\": \"0x80000210\",\n    \"symbol\": \"YAP\",\n    \"name\": \"Yapstone\"\n  },\n  \"529\": {\n    \"index\": \"529\",\n    \"hex\": \"0x80000211\",\n    \"symbol\": \"SCRT\",\n    \"name\": \"Secret Network\"\n  },\n  \"530\": {\n    \"index\": \"530\",\n    \"hex\": \"0x80000212\",\n    \"symbol\": \"NOVO\",\n    \"name\": \"Novo\"\n  },\n  \"531\": {\n    \"index\": \"531\",\n    \"hex\": \"0x80000213\",\n    \"symbol\": \"GHOST\",\n    \"name\": \"Ghost\"\n  },\n  \"532\": {\n    \"index\": \"532\",\n    \"hex\": \"0x80000214\",\n    \"symbol\": \"HST\",\n    \"name\": \"HST\"\n  },\n  \"533\": {\n    \"index\": \"533\",\n    \"hex\": \"0x80000215\",\n    \"symbol\": \"PRJ\",\n    \"name\": \"ProjectCoin\"\n  },\n  \"534\": {\n    \"index\": \"534\",\n    \"hex\": \"0x80000216\",\n    \"symbol\": \"YOU\",\n    \"name\": \"YOUChain\"\n  },\n  \"535\": {\n    \"index\": \"535\",\n    \"hex\": \"0x80000217\",\n    \"symbol\": \"XHV\",\n    \"name\": \"Haven Protocol\"\n  },\n  \"536\": {\n    \"index\": \"536\",\n    \"hex\": \"0x80000218\",\n    \"symbol\": \"BYND\",\n    \"name\": \"Beyondcoin\"\n  },\n  \"537\": {\n    \"index\": \"537\",\n    \"hex\": \"0x80000219\",\n    \"symbol\": \"JOYS\",\n    \"name\": \"Joys Digital\"\n  },\n  \"538\": {\n    \"index\": \"538\",\n    \"hex\": \"0x8000021a\",\n    \"symbol\": \"VAL\",\n    \"name\": \"Valorbit\"\n  },\n  \"539\": {\n    \"index\": \"539\",\n    \"hex\": \"0x8000021b\",\n    \"symbol\": \"FLOW\",\n    \"name\": \"Flow\"\n  },\n  \"540\": {\n    \"index\": \"540\",\n    \"hex\": \"0x8000021c\",\n    \"symbol\": \"SMESH\",\n    \"name\": \"Spacemesh Coin\"\n  },\n  \"541\": {\n    \"index\": \"541\",\n    \"hex\": \"0x8000021d\",\n    \"symbol\": \"SCDO\",\n    \"name\": \"SCDO\"\n  },\n  \"542\": {\n    \"index\": \"542\",\n    \"hex\": \"0x8000021e\",\n    \"symbol\": \"IQS\",\n    \"name\": \"IQ-Cash\"\n  },\n  \"543\": {\n    \"index\": \"543\",\n    \"hex\": \"0x8000021f\",\n    \"symbol\": \"BIND\",\n    \"name\": \"Compendia\"\n  },\n  \"544\": {\n    \"index\": \"544\",\n    \"hex\": \"0x80000220\",\n    \"symbol\": \"COINEVO\",\n    \"name\": \"Coinevo\"\n  },\n  \"545\": {\n    \"index\": \"545\",\n    \"hex\": \"0x80000221\",\n    \"symbol\": \"SCRIBE\",\n    \"name\": \"Scribe\"\n  },\n  \"546\": {\n    \"index\": \"546\",\n    \"hex\": \"0x80000222\",\n    \"symbol\": \"HYN\",\n    \"name\": \"Hyperion\"\n  },\n  \"547\": {\n    \"index\": \"547\",\n    \"hex\": \"0x80000223\",\n    \"symbol\": \"BHP\",\n    \"name\": \"BHP\"\n  },\n  \"548\": {\n    \"index\": \"548\",\n    \"hex\": \"0x80000224\",\n    \"symbol\": \"BBC\",\n    \"name\": \"BigBang Core\"\n  },\n  \"549\": {\n    \"index\": \"549\",\n    \"hex\": \"0x80000225\",\n    \"symbol\": \"MKF\",\n    \"name\": \"MarketFinance\"\n  },\n  \"550\": {\n    \"index\": \"550\",\n    \"hex\": \"0x80000226\",\n    \"symbol\": \"XDC\",\n    \"name\": \"XinFin\"\n  },\n  \"551\": {\n    \"index\": \"551\",\n    \"hex\": \"0x80000227\",\n    \"symbol\": \"STR\",\n    \"name\": \"Straightedge\"\n  },\n  \"552\": {\n    \"index\": \"552\",\n    \"hex\": \"0x80000228\",\n    \"symbol\": \"SUM\",\n    \"name\": \"Sumcoin\"\n  },\n  \"553\": {\n    \"index\": \"553\",\n    \"hex\": \"0x80000229\",\n    \"symbol\": \"HBC\",\n    \"name\": \"HuobiChain\"\n  },\n  \"554\": {\n    \"index\": \"554\",\n    \"hex\": \"0x8000022a\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"555\": {\n    \"index\": \"555\",\n    \"hex\": \"0x8000022b\",\n    \"symbol\": \"BCS\",\n    \"name\": \"Bitcoin Smart\"\n  },\n  \"556\": {\n    \"index\": \"556\",\n    \"hex\": \"0x8000022c\",\n    \"symbol\": \"KTS\",\n    \"name\": \"Kratos\"\n  },\n  \"557\": {\n    \"index\": \"557\",\n    \"hex\": \"0x8000022d\",\n    \"symbol\": \"LKR\",\n    \"name\": \"Lkrcoin\"\n  },\n  \"558\": {\n    \"index\": \"558\",\n    \"hex\": \"0x8000022e\",\n    \"symbol\": \"TAO\",\n    \"name\": \"Tao\"\n  },\n  \"559\": {\n    \"index\": \"559\",\n    \"hex\": \"0x8000022f\",\n    \"symbol\": \"XWC\",\n    \"name\": \"Whitecoin\"\n  },\n  \"560\": {\n    \"index\": \"560\",\n    \"hex\": \"0x80000230\",\n    \"symbol\": \"DEAL\",\n    \"name\": \"DEAL\"\n  },\n  \"561\": {\n    \"index\": \"561\",\n    \"hex\": \"0x80000231\",\n    \"symbol\": \"NTY\",\n    \"name\": \"Nexty\"\n  },\n  \"562\": {\n    \"index\": \"562\",\n    \"hex\": \"0x80000232\",\n    \"symbol\": \"TOP\",\n    \"name\": \"TOP NetWork\"\n  },\n  \"563\": {\n    \"index\": \"563\",\n    \"hex\": \"0x80000233\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"564\": {\n    \"index\": \"564\",\n    \"hex\": \"0x80000234\",\n    \"symbol\": \"AG\",\n    \"name\": \"Agoric\"\n  },\n  \"565\": {\n    \"index\": \"565\",\n    \"hex\": \"0x80000235\",\n    \"symbol\": \"CICO\",\n    \"name\": \"Coinicles\"\n  },\n  \"566\": {\n    \"index\": \"566\",\n    \"hex\": \"0x80000236\",\n    \"symbol\": \"IRIS\",\n    \"name\": \"Irisnet\"\n  },\n  \"567\": {\n    \"index\": \"567\",\n    \"hex\": \"0x80000237\",\n    \"symbol\": \"NCG\",\n    \"name\": \"Nine Chronicles\"\n  },\n  \"568\": {\n    \"index\": \"568\",\n    \"hex\": \"0x80000238\",\n    \"symbol\": \"LRG\",\n    \"name\": \"Large Coin\"\n  },\n  \"569\": {\n    \"index\": \"569\",\n    \"hex\": \"0x80000239\",\n    \"symbol\": \"SERO\",\n    \"name\": \"Super Zero Protocol\"\n  },\n  \"570\": {\n    \"index\": \"570\",\n    \"hex\": \"0x8000023a\",\n    \"symbol\": \"BDX\",\n    \"name\": \"Beldex\"\n  },\n  \"571\": {\n    \"index\": \"571\",\n    \"hex\": \"0x8000023b\",\n    \"symbol\": \"CCXX\",\n    \"name\": \"Counos X\"\n  },\n  \"572\": {\n    \"index\": \"572\",\n    \"hex\": \"0x8000023c\",\n    \"symbol\": \"SLS\",\n    \"name\": \"Saluscoin\"\n  },\n  \"573\": {\n    \"index\": \"573\",\n    \"hex\": \"0x8000023d\",\n    \"symbol\": \"SRM\",\n    \"name\": \"Serum\"\n  },\n  \"574\": {\n    \"index\": \"574\",\n    \"hex\": \"0x8000023e\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"575\": {\n    \"index\": \"575\",\n    \"hex\": \"0x8000023f\",\n    \"symbol\": \"VIVT\",\n    \"name\": \"VIDT Datalink\"\n  },\n  \"576\": {\n    \"index\": \"576\",\n    \"hex\": \"0x80000240\",\n    \"symbol\": \"BPS\",\n    \"name\": \"BitcoinPoS\"\n  },\n  \"577\": {\n    \"index\": \"577\",\n    \"hex\": \"0x80000241\",\n    \"symbol\": \"NKN\",\n    \"name\": \"NKN\"\n  },\n  \"578\": {\n    \"index\": \"578\",\n    \"hex\": \"0x80000242\",\n    \"symbol\": \"ICL\",\n    \"name\": \"ILCOIN\"\n  },\n  \"579\": {\n    \"index\": \"579\",\n    \"hex\": \"0x80000243\",\n    \"symbol\": \"BONO\",\n    \"name\": \"Bonorum\"\n  },\n  \"580\": {\n    \"index\": \"580\",\n    \"hex\": \"0x80000244\",\n    \"symbol\": \"PLC\",\n    \"name\": \"PLATINCOIN\"\n  },\n  \"581\": {\n    \"index\": \"581\",\n    \"hex\": \"0x80000245\",\n    \"symbol\": \"DUN\",\n    \"name\": \"Dune\"\n  },\n  \"582\": {\n    \"index\": \"582\",\n    \"hex\": \"0x80000246\",\n    \"symbol\": \"DMCH\",\n    \"name\": \"Darmacash\"\n  },\n  \"583\": {\n    \"index\": \"583\",\n    \"hex\": \"0x80000247\",\n    \"symbol\": \"CTC\",\n    \"name\": \"Creditcoin\"\n  },\n  \"584\": {\n    \"index\": \"584\",\n    \"hex\": \"0x80000248\",\n    \"symbol\": \"KELP\",\n    \"name\": \"Haidai Network\"\n  },\n  \"585\": {\n    \"index\": \"585\",\n    \"hex\": \"0x80000249\",\n    \"symbol\": \"GBCR\",\n    \"name\": \"GoldBCR\"\n  },\n  \"586\": {\n    \"index\": \"586\",\n    \"hex\": \"0x8000024a\",\n    \"symbol\": \"XDAG\",\n    \"name\": \"XDAG\"\n  },\n  \"587\": {\n    \"index\": \"587\",\n    \"hex\": \"0x8000024b\",\n    \"symbol\": \"PRV\",\n    \"name\": \"Incognito Privacy\"\n  },\n  \"588\": {\n    \"index\": \"588\",\n    \"hex\": \"0x8000024c\",\n    \"symbol\": \"SCAP\",\n    \"name\": \"SafeCapital\"\n  },\n  \"589\": {\n    \"index\": \"589\",\n    \"hex\": \"0x8000024d\",\n    \"symbol\": \"TFUEL\",\n    \"name\": \"Theta Fuel\"\n  },\n  \"590\": {\n    \"index\": \"590\",\n    \"hex\": \"0x8000024e\",\n    \"symbol\": \"GTM\",\n    \"name\": \"Gentarium\"\n  },\n  \"591\": {\n    \"index\": \"591\",\n    \"hex\": \"0x8000024f\",\n    \"symbol\": \"RNL\",\n    \"name\": \"RentalChain\"\n  },\n  \"592\": {\n    \"index\": \"592\",\n    \"hex\": \"0x80000250\",\n    \"symbol\": \"GRIN\",\n    \"name\": \"Grin\"\n  },\n  \"593\": {\n    \"index\": \"593\",\n    \"hex\": \"0x80000251\",\n    \"symbol\": \"MWC\",\n    \"name\": \"MimbleWimbleCoin\"\n  },\n  \"594\": {\n    \"index\": \"594\",\n    \"hex\": \"0x80000252\",\n    \"symbol\": \"DOCK\",\n    \"name\": \"Dock\"\n  },\n  \"595\": {\n    \"index\": \"595\",\n    \"hex\": \"0x80000253\",\n    \"symbol\": \"POLYX\",\n    \"name\": \"Polymesh\"\n  },\n  \"596\": {\n    \"index\": \"596\",\n    \"hex\": \"0x80000254\",\n    \"symbol\": \"DIVER\",\n    \"name\": \"Divergenti\"\n  },\n  \"597\": {\n    \"index\": \"597\",\n    \"hex\": \"0x80000255\",\n    \"symbol\": \"XEP\",\n    \"name\": \"Electra Protocol\"\n  },\n  \"598\": {\n    \"index\": \"598\",\n    \"hex\": \"0x80000256\",\n    \"symbol\": \"APN\",\n    \"name\": \"Apron\"\n  },\n  \"599\": {\n    \"index\": \"599\",\n    \"hex\": \"0x80000257\",\n    \"symbol\": \"TFC\",\n    \"name\": \"Turbo File Coin\"\n  },\n  \"600\": {\n    \"index\": \"600\",\n    \"hex\": \"0x80000258\",\n    \"symbol\": \"UTE\",\n    \"name\": \"Unit-e\"\n  },\n  \"601\": {\n    \"index\": \"601\",\n    \"hex\": \"0x80000259\",\n    \"symbol\": \"MTC\",\n    \"name\": \"Metacoin\"\n  },\n  \"602\": {\n    \"index\": \"602\",\n    \"hex\": \"0x8000025a\",\n    \"symbol\": \"NC\",\n    \"name\": \"NobodyCash\"\n  },\n  \"603\": {\n    \"index\": \"603\",\n    \"hex\": \"0x8000025b\",\n    \"symbol\": \"XINY\",\n    \"name\": \"Xinyuehu\"\n  },\n  \"604\": {\n    \"index\": \"604\",\n    \"hex\": \"0x8000025c\",\n    \"symbol\": \"DYN\",\n    \"name\": \"Dynamo\"\n  },\n  \"605\": {\n    \"index\": \"605\",\n    \"hex\": \"0x8000025d\",\n    \"symbol\": \"BUFS\",\n    \"name\": \"Buffer\"\n  },\n  \"606\": {\n    \"index\": \"606\",\n    \"hex\": \"0x8000025e\",\n    \"symbol\": \"STOS\",\n    \"name\": \"Stratos\"\n  },\n  \"607\": {\n    \"index\": \"607\",\n    \"hex\": \"0x8000025f\",\n    \"symbol\": \"TON\",\n    \"name\": \"TON\"\n  },\n  \"608\": {\n    \"index\": \"608\",\n    \"hex\": \"0x80000260\",\n    \"symbol\": \"TAFT\",\n    \"name\": \"TAFT\"\n  },\n  \"609\": {\n    \"index\": \"609\",\n    \"hex\": \"0x80000261\",\n    \"symbol\": \"HYDRA\",\n    \"name\": \"HYDRA\"\n  },\n  \"610\": {\n    \"index\": \"610\",\n    \"hex\": \"0x80000262\",\n    \"symbol\": \"NOR\",\n    \"name\": \"Noir\"\n  },\n  \"611\": {\n    \"index\": \"611\",\n    \"hex\": \"0x80000263\",\n    \"symbol\": \"\",\n    \"name\": \"Manta Network Private Asset\"\n  },\n  \"612\": {\n    \"index\": \"612\",\n    \"hex\": \"0x80000264\",\n    \"symbol\": \"\",\n    \"name\": \"Calamari Network Private Asset\"\n  },\n  \"613\": {\n    \"index\": \"613\",\n    \"hex\": \"0x80000265\",\n    \"symbol\": \"WCN\",\n    \"name\": \"Widecoin\"\n  },\n  \"614\": {\n    \"index\": \"614\",\n    \"hex\": \"0x80000266\",\n    \"symbol\": \"OPT\",\n    \"name\": \"Optimistic Ethereum\"\n  },\n  \"615\": {\n    \"index\": \"615\",\n    \"hex\": \"0x80000267\",\n    \"symbol\": \"PSWAP\",\n    \"name\": \"PolkaSwap\"\n  },\n  \"616\": {\n    \"index\": \"616\",\n    \"hex\": \"0x80000268\",\n    \"symbol\": \"VAL\",\n    \"name\": \"Validator\"\n  },\n  \"617\": {\n    \"index\": \"617\",\n    \"hex\": \"0x80000269\",\n    \"symbol\": \"XOR\",\n    \"name\": \"Sora\"\n  },\n  \"618\": {\n    \"index\": \"618\",\n    \"hex\": \"0x8000026a\",\n    \"symbol\": \"SSP\",\n    \"name\": \"SmartShare\"\n  },\n  \"619\": {\n    \"index\": \"619\",\n    \"hex\": \"0x8000026b\",\n    \"symbol\": \"DEI\",\n    \"name\": \"DeimosX\"\n  },\n  \"620\": {\n    \"index\": \"620\",\n    \"hex\": \"0x8000026c\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"621\": {\n    \"index\": \"621\",\n    \"hex\": \"0x8000026d\",\n    \"symbol\": \"ZERO\",\n    \"name\": \"Singularity\"\n  },\n  \"622\": {\n    \"index\": \"622\",\n    \"hex\": \"0x8000026e\",\n    \"symbol\": \"ALPHA\",\n    \"name\": \"AlphaDAO\"\n  },\n  \"623\": {\n    \"index\": \"623\",\n    \"hex\": \"0x8000026f\",\n    \"symbol\": \"BDECO\",\n    \"name\": \"BDCashProtocol Ecosystem\"\n  },\n  \"624\": {\n    \"index\": \"624\",\n    \"hex\": \"0x80000270\",\n    \"symbol\": \"NOBL\",\n    \"name\": \"Nobility\"\n  },\n  \"625\": {\n    \"index\": \"625\",\n    \"hex\": \"0x80000271\",\n    \"symbol\": \"EAST\",\n    \"name\": \"Eastcoin\"\n  },\n  \"626\": {\n    \"index\": \"626\",\n    \"hex\": \"0x80000272\",\n    \"symbol\": \"KDA\",\n    \"name\": \"Kadena\"\n  },\n  \"627\": {\n    \"index\": \"627\",\n    \"hex\": \"0x80000273\",\n    \"symbol\": \"SOUL\",\n    \"name\": \"Phantasma\"\n  },\n  \"628\": {\n    \"index\": \"628\",\n    \"hex\": \"0x80000274\",\n    \"symbol\": \"LORE\",\n    \"name\": \"Gitopia\"\n  },\n  \"629\": {\n    \"index\": \"629\",\n    \"hex\": \"0x80000275\",\n    \"symbol\": \"FNR\",\n    \"name\": \"Fincor\"\n  },\n  \"630\": {\n    \"index\": \"630\",\n    \"hex\": \"0x80000276\",\n    \"symbol\": \"NEXUS\",\n    \"name\": \"Nexus\"\n  },\n  \"631\": {\n    \"index\": \"631\",\n    \"hex\": \"0x80000277\",\n    \"symbol\": \"QTZ\",\n    \"name\": \"Quartz\"\n  },\n  \"632\": {\n    \"index\": \"632\",\n    \"hex\": \"0x80000278\",\n    \"symbol\": \"MAS\",\n    \"name\": \"Massa\"\n  },\n  \"633\": {\n    \"index\": \"633\",\n    \"hex\": \"0x80000279\",\n    \"symbol\": \"CALL\",\n    \"name\": \"Callchain\"\n  },\n  \"634\": {\n    \"index\": \"634\",\n    \"hex\": \"0x8000027a\",\n    \"symbol\": \"VAL\",\n    \"name\": \"Validity\"\n  },\n  \"635\": {\n    \"index\": \"635\",\n    \"hex\": \"0x8000027b\",\n    \"symbol\": \"POKT\",\n    \"name\": \"Pocket Network\"\n  },\n  \"636\": {\n    \"index\": \"636\",\n    \"hex\": \"0x8000027c\",\n    \"symbol\": \"EMIT\",\n    \"name\": \"EMIT\"\n  },\n  \"637\": {\n    \"index\": \"637\",\n    \"hex\": \"0x8000027d\",\n    \"symbol\": \"APTOS\",\n    \"name\": \"Aptos\"\n  },\n  \"638\": {\n    \"index\": \"638\",\n    \"hex\": \"0x8000027e\",\n    \"symbol\": \"ADON\",\n    \"name\": \"ADON\"\n  },\n  \"639\": {\n    \"index\": \"639\",\n    \"hex\": \"0x8000027f\",\n    \"symbol\": \"BTSG\",\n    \"name\": \"BitSong\"\n  },\n  \"640\": {\n    \"index\": \"640\",\n    \"hex\": \"0x80000280\",\n    \"symbol\": \"LFC\",\n    \"name\": \"Leofcoin\"\n  },\n  \"641\": {\n    \"index\": \"641\",\n    \"hex\": \"0x80000281\",\n    \"symbol\": \"KCS\",\n    \"name\": \"KuCoin Shares\"\n  },\n  \"642\": {\n    \"index\": \"642\",\n    \"hex\": \"0x80000282\",\n    \"symbol\": \"KCC\",\n    \"name\": \"KuCoin Community Chain\"\n  },\n  \"643\": {\n    \"index\": \"643\",\n    \"hex\": \"0x80000283\",\n    \"symbol\": \"AZERO\",\n    \"name\": \"Aleph Zero\"\n  },\n  \"644\": {\n    \"index\": \"644\",\n    \"hex\": \"0x80000284\",\n    \"symbol\": \"TREE\",\n    \"name\": \"Tree\"\n  },\n  \"645\": {\n    \"index\": \"645\",\n    \"hex\": \"0x80000285\",\n    \"symbol\": \"LX\",\n    \"name\": \"Lynx\"\n  },\n  \"646\": {\n    \"index\": \"646\",\n    \"hex\": \"0x80000286\",\n    \"symbol\": \"XLN\",\n    \"name\": \"Lunarium\"\n  },\n  \"647\": {\n    \"index\": \"647\",\n    \"hex\": \"0x80000287\",\n    \"symbol\": \"CIC\",\n    \"name\": \"CIC Chain\"\n  },\n  \"648\": {\n    \"index\": \"648\",\n    \"hex\": \"0x80000288\",\n    \"symbol\": \"ZRB\",\n    \"name\": \"Zarb\"\n  },\n  \"649\": {\n    \"index\": \"649\",\n    \"hex\": \"0x80000289\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"650\": {\n    \"index\": \"650\",\n    \"hex\": \"0x8000028a\",\n    \"symbol\": \"UCO\",\n    \"name\": \"Archethic\"\n  },\n  \"651\": {\n    \"index\": \"651\",\n    \"hex\": \"0x8000028b\",\n    \"symbol\": \"SFX\",\n    \"name\": \"Safex Cash\"\n  },\n  \"652\": {\n    \"index\": \"652\",\n    \"hex\": \"0x8000028c\",\n    \"symbol\": \"SFT\",\n    \"name\": \"Safex Token\"\n  },\n  \"653\": {\n    \"index\": \"653\",\n    \"hex\": \"0x8000028d\",\n    \"symbol\": \"WSFX\",\n    \"name\": \"Wrapped Safex Cash\"\n  },\n  \"654\": {\n    \"index\": \"654\",\n    \"hex\": \"0x8000028e\",\n    \"symbol\": \"USDG\",\n    \"name\": \"US Digital Gold\"\n  },\n  \"655\": {\n    \"index\": \"655\",\n    \"hex\": \"0x8000028f\",\n    \"symbol\": \"WMP\",\n    \"name\": \"WAMP\"\n  },\n  \"656\": {\n    \"index\": \"656\",\n    \"hex\": \"0x80000290\",\n    \"symbol\": \"EKTA\",\n    \"name\": \"Ekta\"\n  },\n  \"657\": {\n    \"index\": \"657\",\n    \"hex\": \"0x80000291\",\n    \"symbol\": \"YDA\",\n    \"name\": \"YadaCoin\"\n  },\n  \"658\": {\n    \"index\": \"658\",\n    \"hex\": \"0x80000292\",\n    \"symbol\": \"WHIVE\",\n    \"name\": \"Whive\"\n  },\n  \"659\": {\n    \"index\": \"659\",\n    \"hex\": \"0x80000293\",\n    \"symbol\": \"KOIN\",\n    \"name\": \"Koinos\"\n  },\n  \"660\": {\n    \"index\": \"660\",\n    \"hex\": \"0x80000294\",\n    \"symbol\": \"PIRATE\",\n    \"name\": \"PirateCash\"\n  },\n  \"661\": {\n    \"index\": \"661\",\n    \"hex\": \"0x80000295\",\n    \"symbol\": \"UNQ\",\n    \"name\": \"Unique\"\n  },\n  \"662\": {\n    \"index\": \"662\",\n    \"hex\": \"0x80000296\",\n    \"symbol\": \"ULM\",\n    \"name\": \"UltonSmartchain\"\n  },\n  \"663\": {\n    \"index\": \"663\",\n    \"hex\": \"0x80000297\",\n    \"symbol\": \"SFRX\",\n    \"name\": \"EtherGem Sapphire\"\n  },\n  \"664\": {\n    \"index\": \"664\",\n    \"hex\": \"0x80000298\",\n    \"symbol\": \"BSTY\",\n    \"name\": \"GlobalBoost-Y\"\n  },\n  \"665\": {\n    \"index\": \"665\",\n    \"hex\": \"0x80000299\",\n    \"symbol\": \"IMP\",\n    \"name\": \"Impact Protocol\"\n  },\n  \"666\": {\n    \"index\": \"666\",\n    \"hex\": \"0x8000029a\",\n    \"symbol\": \"ACT\",\n    \"name\": \"Achain\"\n  },\n  \"667\": {\n    \"index\": \"667\",\n    \"hex\": \"0x8000029b\",\n    \"symbol\": \"PRKL\",\n    \"name\": \"Perkle\"\n  },\n  \"668\": {\n    \"index\": \"668\",\n    \"hex\": \"0x8000029c\",\n    \"symbol\": \"SSC\",\n    \"name\": \"SelfSell\"\n  },\n  \"669\": {\n    \"index\": \"669\",\n    \"hex\": \"0x8000029d\",\n    \"symbol\": \"GC\",\n    \"name\": \"GateChain\"\n  },\n  \"670\": {\n    \"index\": \"670\",\n    \"hex\": \"0x8000029e\",\n    \"symbol\": \"PLGR\",\n    \"name\": \"Pledger\"\n  },\n  \"671\": {\n    \"index\": \"671\",\n    \"hex\": \"0x8000029f\",\n    \"symbol\": \"MPLGR\",\n    \"name\": \"Pledger\"\n  },\n  \"672\": {\n    \"index\": \"672\",\n    \"hex\": \"0x800002a0\",\n    \"symbol\": \"KNOX\",\n    \"name\": \"Knox\"\n  },\n  \"673\": {\n    \"index\": \"673\",\n    \"hex\": \"0x800002a1\",\n    \"symbol\": \"ZED\",\n    \"name\": \"ZED\"\n  },\n  \"674\": {\n    \"index\": \"674\",\n    \"hex\": \"0x800002a2\",\n    \"symbol\": \"CNDL\",\n    \"name\": \"Candle\"\n  },\n  \"675\": {\n    \"index\": \"675\",\n    \"hex\": \"0x800002a3\",\n    \"symbol\": \"WLKR\",\n    \"name\": \"Walker Crypto Innovation Index\"\n  },\n  \"676\": {\n    \"index\": \"676\",\n    \"hex\": \"0x800002a4\",\n    \"symbol\": \"WLKRR\",\n    \"name\": \"Walker\"\n  },\n  \"677\": {\n    \"index\": \"677\",\n    \"hex\": \"0x800002a5\",\n    \"symbol\": \"YUNGE\",\n    \"name\": \"Yunge\"\n  },\n  \"678\": {\n    \"index\": \"678\",\n    \"hex\": \"0x800002a6\",\n    \"symbol\": \"Voken\",\n    \"name\": \"Voken\"\n  },\n  \"679\": {\n    \"index\": \"679\",\n    \"hex\": \"0x800002a7\",\n    \"symbol\": \"APL\",\n    \"name\": \"Apollo\"\n  },\n  \"680\": {\n    \"index\": \"680\",\n    \"hex\": \"0x800002a8\",\n    \"symbol\": \"Evrynet\",\n    \"name\": \"Evrynet\"\n  },\n  \"681\": {\n    \"index\": \"681\",\n    \"hex\": \"0x800002a9\",\n    \"symbol\": \"NENG\",\n    \"name\": \"Nengcoin\"\n  },\n  \"682\": {\n    \"index\": \"682\",\n    \"hex\": \"0x800002aa\",\n    \"symbol\": \"CHTA\",\n    \"name\": \"Cheetahcoin\"\n  },\n  \"683\": {\n    \"index\": \"683\",\n    \"hex\": \"0x800002ab\",\n    \"symbol\": \"ALEO\",\n    \"name\": \"Aleo Network\"\n  },\n  \"684\": {\n    \"index\": \"684\",\n    \"hex\": \"0x800002ac\",\n    \"symbol\": \"HMS\",\n    \"name\": \"Hemis\"\n  },\n  \"685\": {\n    \"index\": \"685\",\n    \"hex\": \"0x800002ad\",\n    \"symbol\": \"OAS\",\n    \"name\": \"Oasys\"\n  },\n  \"686\": {\n    \"index\": \"686\",\n    \"hex\": \"0x800002ae\",\n    \"symbol\": \"KAR\",\n    \"name\": \"Karura Network\"\n  },\n  \"687\": {\n    \"index\": \"687\",\n    \"hex\": \"0x800002af\",\n    \"symbol\": \"FLON\",\n    \"name\": \"FullOn Network\"\n  },\n  \"688\": {\n    \"index\": \"688\",\n    \"hex\": \"0x800002b0\",\n    \"symbol\": \"CET\",\n    \"name\": \"CoinEx Chain\"\n  },\n  \"689\": {\n    \"index\": \"689\",\n    \"hex\": \"0x800002b1\",\n    \"symbol\": \"XLINK\",\n    \"name\": \"XLink Chain\"\n  },\n  \"690\": {\n    \"index\": \"690\",\n    \"hex\": \"0x800002b2\",\n    \"symbol\": \"KLV\",\n    \"name\": \"KleverChain\"\n  },\n  \"694\": {\n    \"index\": \"694\",\n    \"hex\": \"0x800002b6\",\n    \"symbol\": \"VTBC\",\n    \"name\": \"VTB Community\"\n  },\n  \"698\": {\n    \"index\": \"698\",\n    \"hex\": \"0x800002ba\",\n    \"symbol\": \"VEIL\",\n    \"name\": \"Veil\"\n  },\n  \"699\": {\n    \"index\": \"699\",\n    \"hex\": \"0x800002bb\",\n    \"symbol\": \"GTB\",\n    \"name\": \"GotaBit\"\n  },\n  \"700\": {\n    \"index\": \"700\",\n    \"hex\": \"0x800002bc\",\n    \"symbol\": \"XDAI\",\n    \"name\": \"xDai\"\n  },\n  \"701\": {\n    \"index\": \"701\",\n    \"hex\": \"0x800002bd\",\n    \"symbol\": \"COM\",\n    \"name\": \"Commercio\"\n  },\n  \"702\": {\n    \"index\": \"702\",\n    \"hex\": \"0x800002be\",\n    \"symbol\": \"CCC\",\n    \"name\": \"Commercio Cash Credit\"\n  },\n  \"703\": {\n    \"index\": \"703\",\n    \"hex\": \"0x800002bf\",\n    \"symbol\": \"SNR\",\n    \"name\": \"Sonr\"\n  },\n  \"704\": {\n    \"index\": \"704\",\n    \"hex\": \"0x800002c0\",\n    \"symbol\": \"RAQ\",\n    \"name\": \"Ra Quantum\"\n  },\n  \"705\": {\n    \"index\": \"705\",\n    \"hex\": \"0x800002c1\",\n    \"symbol\": \"PEG\",\n    \"name\": \"Pegasus Token\"\n  },\n  \"706\": {\n    \"index\": \"706\",\n    \"hex\": \"0x800002c2\",\n    \"symbol\": \"LKG\",\n    \"name\": \"Lionking\"\n  },\n  \"707\": {\n    \"index\": \"707\",\n    \"hex\": \"0x800002c3\",\n    \"symbol\": \"MCOIN\",\n    \"name\": \"Moneta Coin\"\n  },\n  \"709\": {\n    \"index\": \"709\",\n    \"hex\": \"0x800002c5\",\n    \"symbol\": \"AVAIL\",\n    \"name\": \"Avail\"\n  },\n  \"710\": {\n    \"index\": \"710\",\n    \"hex\": \"0x800002c6\",\n    \"symbol\": \"FURY\",\n    \"name\": \"Highbury\"\n  },\n  \"711\": {\n    \"index\": \"711\",\n    \"hex\": \"0x800002c7\",\n    \"symbol\": \"CHC\",\n    \"name\": \"Chaincoin\"\n  },\n  \"712\": {\n    \"index\": \"712\",\n    \"hex\": \"0x800002c8\",\n    \"symbol\": \"SERF\",\n    \"name\": \"Serfnet\"\n  },\n  \"713\": {\n    \"index\": \"713\",\n    \"hex\": \"0x800002c9\",\n    \"symbol\": \"XTL\",\n    \"name\": \"Katal Chain\"\n  },\n  \"714\": {\n    \"index\": \"714\",\n    \"hex\": \"0x800002ca\",\n    \"symbol\": \"BNB\",\n    \"name\": \"Binance\"\n  },\n  \"715\": {\n    \"index\": \"715\",\n    \"hex\": \"0x800002cb\",\n    \"symbol\": \"SIN\",\n    \"name\": \"Sinovate\"\n  },\n  \"716\": {\n    \"index\": \"716\",\n    \"hex\": \"0x800002cc\",\n    \"symbol\": \"DLN\",\n    \"name\": \"Delion\"\n  },\n  \"717\": {\n    \"index\": \"717\",\n    \"hex\": \"0x800002cd\",\n    \"symbol\": \"BONTE\",\n    \"name\": \"Bontecoin\"\n  },\n  \"718\": {\n    \"index\": \"718\",\n    \"hex\": \"0x800002ce\",\n    \"symbol\": \"PEER\",\n    \"name\": \"Peer\"\n  },\n  \"719\": {\n    \"index\": \"719\",\n    \"hex\": \"0x800002cf\",\n    \"symbol\": \"ZET\",\n    \"name\": \"Zetacoin\"\n  },\n  \"720\": {\n    \"index\": \"720\",\n    \"hex\": \"0x800002d0\",\n    \"symbol\": \"ABY\",\n    \"name\": \"Artbyte\"\n  },\n  \"721\": {\n    \"index\": \"721\",\n    \"hex\": \"0x800002d1\",\n    \"symbol\": \"PGX\",\n    \"name\": \"Mirai Chain\"\n  },\n  \"722\": {\n    \"index\": \"722\",\n    \"hex\": \"0x800002d2\",\n    \"symbol\": \"IL8P\",\n    \"name\": \"InfiniLooP\"\n  },\n  \"723\": {\n    \"index\": \"723\",\n    \"hex\": \"0x800002d3\",\n    \"symbol\": \"VOI\",\n    \"name\": \"Voi\"\n  },\n  \"724\": {\n    \"index\": \"724\",\n    \"hex\": \"0x800002d4\",\n    \"symbol\": \"XVC\",\n    \"name\": \"Vanillacash\"\n  },\n  \"725\": {\n    \"index\": \"725\",\n    \"hex\": \"0x800002d5\",\n    \"symbol\": \"MCX\",\n    \"name\": \"MultiCash\"\n  },\n  \"727\": {\n    \"index\": \"727\",\n    \"hex\": \"0x800002d7\",\n    \"symbol\": \"BLU\",\n    \"name\": \"BluCrates\"\n  },\n  \"728\": {\n    \"index\": \"728\",\n    \"hex\": \"0x800002d8\",\n    \"symbol\": \"BFC\",\n    \"name\": \"BFC\"\n  },\n  \"730\": {\n    \"index\": \"730\",\n    \"hex\": \"0x800002da\",\n    \"symbol\": \"HEALIOS\",\n    \"name\": \"Tenacity\"\n  },\n  \"731\": {\n    \"index\": \"731\",\n    \"hex\": \"0x800002db\",\n    \"symbol\": \"BMK\",\n    \"name\": \"Bitmark\"\n  },\n  \"734\": {\n    \"index\": \"734\",\n    \"hex\": \"0x800002de\",\n    \"symbol\": \"DENTX\",\n    \"name\": \"DENTNet\"\n  },\n  \"737\": {\n    \"index\": \"737\",\n    \"hex\": \"0x800002e1\",\n    \"symbol\": \"ATOP\",\n    \"name\": \"Financial Blockchain\"\n  },\n  \"747\": {\n    \"index\": \"747\",\n    \"hex\": \"0x800002eb\",\n    \"symbol\": \"CFG\",\n    \"name\": \"Centrifuge\"\n  },\n  \"750\": {\n    \"index\": \"750\",\n    \"hex\": \"0x800002ee\",\n    \"symbol\": \"XPRT\",\n    \"name\": \"Persistence\"\n  },\n  \"753\": {\n    \"index\": \"753\",\n    \"hex\": \"0x800002f1\",\n    \"symbol\": \"\",\n    \"name\": \"Age X25519 Encryption\"\n  },\n  \"754\": {\n    \"index\": \"754\",\n    \"hex\": \"0x800002f2\",\n    \"symbol\": \"\",\n    \"name\": \"Age NIST Encryption\"\n  },\n  \"757\": {\n    \"index\": \"757\",\n    \"hex\": \"0x800002f5\",\n    \"symbol\": \"HONEY\",\n    \"name\": \"HoneyWood\"\n  },\n  \"768\": {\n    \"index\": \"768\",\n    \"hex\": \"0x80000300\",\n    \"symbol\": \"BALLZ\",\n    \"name\": \"Ballzcoin\"\n  },\n  \"770\": {\n    \"index\": \"770\",\n    \"hex\": \"0x80000302\",\n    \"symbol\": \"COSA\",\n    \"name\": \"Cosanta\"\n  },\n  \"771\": {\n    \"index\": \"771\",\n    \"hex\": \"0x80000303\",\n    \"symbol\": \"BR\",\n    \"name\": \"BR\"\n  },\n  \"773\": {\n    \"index\": \"773\",\n    \"hex\": \"0x80000305\",\n    \"symbol\": \"CSB\",\n    \"name\": \"CosmoBliss\"\n  },\n  \"775\": {\n    \"index\": \"775\",\n    \"hex\": \"0x80000307\",\n    \"symbol\": \"PLSR\",\n    \"name\": \"Pulsar Coin\"\n  },\n  \"776\": {\n    \"index\": \"776\",\n    \"hex\": \"0x80000308\",\n    \"symbol\": \"KEY\",\n    \"name\": \"Keymaker Coin\"\n  },\n  \"777\": {\n    \"index\": \"777\",\n    \"hex\": \"0x80000309\",\n    \"symbol\": \"BTW\",\n    \"name\": \"Bitcoin World\"\n  },\n  \"780\": {\n    \"index\": \"780\",\n    \"hex\": \"0x8000030c\",\n    \"symbol\": \"PLCUC\",\n    \"name\": \"PLC Ultima Classic\"\n  },\n  \"781\": {\n    \"index\": \"781\",\n    \"hex\": \"0x8000030d\",\n    \"symbol\": \"PLCUX\",\n    \"name\": \"PLC Ultima X\"\n  },\n  \"782\": {\n    \"index\": \"782\",\n    \"hex\": \"0x8000030e\",\n    \"symbol\": \"PLCU\",\n    \"name\": \"PLC Ultima\"\n  },\n  \"783\": {\n    \"index\": \"783\",\n    \"hex\": \"0x8000030f\",\n    \"symbol\": \"SMARTBC\",\n    \"name\": \"SMART Blockchain\"\n  },\n  \"784\": {\n    \"index\": \"784\",\n    \"hex\": \"0x80000310\",\n    \"symbol\": \"SUI\",\n    \"name\": \"Sui\"\n  },\n  \"786\": {\n    \"index\": \"786\",\n    \"hex\": \"0x80000312\",\n    \"symbol\": \"UIDD\",\n    \"name\": \"UIDD\"\n  },\n  \"787\": {\n    \"index\": \"787\",\n    \"hex\": \"0x80000313\",\n    \"symbol\": \"ACA\",\n    \"name\": \"Acala\"\n  },\n  \"788\": {\n    \"index\": \"788\",\n    \"hex\": \"0x80000314\",\n    \"symbol\": \"BNC\",\n    \"name\": \"Bifrost\"\n  },\n  \"789\": {\n    \"index\": \"789\",\n    \"hex\": \"0x80000315\",\n    \"symbol\": \"TAU\",\n    \"name\": \"Lamden\"\n  },\n  \"794\": {\n    \"index\": \"794\",\n    \"hex\": \"0x8000031a\",\n    \"symbol\": \"INTR\",\n    \"name\": \"Interlay\"\n  },\n  \"795\": {\n    \"index\": \"795\",\n    \"hex\": \"0x8000031b\",\n    \"symbol\": \"KINT\",\n    \"name\": \"Kintsugi\"\n  },\n  \"799\": {\n    \"index\": \"799\",\n    \"hex\": \"0x8000031f\",\n    \"symbol\": \"PDEX\",\n    \"name\": \"Polkadex\"\n  },\n  \"800\": {\n    \"index\": \"800\",\n    \"hex\": \"0x80000320\",\n    \"symbol\": \"BEET\",\n    \"name\": \"Beetle Coin\"\n  },\n  \"801\": {\n    \"index\": \"801\",\n    \"hex\": \"0x80000321\",\n    \"symbol\": \"DST\",\n    \"name\": \"DSTRA\"\n  },\n  \"802\": {\n    \"index\": \"802\",\n    \"hex\": \"0x80000322\",\n    \"symbol\": \"CY\",\n    \"name\": \"Cyberyen\"\n  },\n  \"803\": {\n    \"index\": \"803\",\n    \"hex\": \"0x80000323\",\n    \"symbol\": \"RYME\",\n    \"name\": \"Ryme Network\"\n  },\n  \"804\": {\n    \"index\": \"804\",\n    \"hex\": \"0x80000324\",\n    \"symbol\": \"ZKS\",\n    \"name\": \"zkSync\"\n  },\n  \"808\": {\n    \"index\": \"808\",\n    \"hex\": \"0x80000328\",\n    \"symbol\": \"QVT\",\n    \"name\": \"Qvolta\"\n  },\n  \"809\": {\n    \"index\": \"809\",\n    \"hex\": \"0x80000329\",\n    \"symbol\": \"SDN\",\n    \"name\": \"Shiden Network\"\n  },\n  \"810\": {\n    \"index\": \"810\",\n    \"hex\": \"0x8000032a\",\n    \"symbol\": \"ASTR\",\n    \"name\": \"Astar Network\"\n  },\n  \"811\": {\n    \"index\": \"811\",\n    \"hex\": \"0x8000032b\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"813\": {\n    \"index\": \"813\",\n    \"hex\": \"0x8000032d\",\n    \"symbol\": \"MEER\",\n    \"name\": \"Qitmeer\"\n  },\n  \"816\": {\n    \"index\": \"816\",\n    \"hex\": \"0x80000330\",\n    \"symbol\": \"FSC\",\n    \"name\": \"FSC\"\n  },\n  \"818\": {\n    \"index\": \"818\",\n    \"hex\": \"0x80000332\",\n    \"symbol\": \"VET\",\n    \"name\": \"VeChain Token\"\n  },\n  \"819\": {\n    \"index\": \"819\",\n    \"hex\": \"0x80000333\",\n    \"symbol\": \"REEF\",\n    \"name\": \"Reef\"\n  },\n  \"820\": {\n    \"index\": \"820\",\n    \"hex\": \"0x80000334\",\n    \"symbol\": \"CLO\",\n    \"name\": \"Callisto\"\n  },\n  \"822\": {\n    \"index\": \"822\",\n    \"hex\": \"0x80000336\",\n    \"symbol\": \"BDB\",\n    \"name\": \"BigchainDB\"\n  },\n  \"824\": {\n    \"index\": \"824\",\n    \"hex\": \"0x80000338\",\n    \"symbol\": \"RBNT\",\n    \"name\": \"Redbelly Network\"\n  },\n  \"827\": {\n    \"index\": \"827\",\n    \"hex\": \"0x8000033b\",\n    \"symbol\": \"ACE\",\n    \"name\": \"Endurance\"\n  },\n  \"828\": {\n    \"index\": \"828\",\n    \"hex\": \"0x8000033c\",\n    \"symbol\": \"CCN\",\n    \"name\": \"ComputeCoin\"\n  },\n  \"829\": {\n    \"index\": \"829\",\n    \"hex\": \"0x8000033d\",\n    \"symbol\": \"BBA\",\n    \"name\": \"BBACHAIN\"\n  },\n  \"831\": {\n    \"index\": \"831\",\n    \"hex\": \"0x8000033f\",\n    \"symbol\": \"CRUZ\",\n    \"name\": \"cruzbit\"\n  },\n  \"832\": {\n    \"index\": \"832\",\n    \"hex\": \"0x80000340\",\n    \"symbol\": \"SAPP\",\n    \"name\": \"Sapphire\"\n  },\n  \"833\": {\n    \"index\": \"833\",\n    \"hex\": \"0x80000341\",\n    \"symbol\": \"777\",\n    \"name\": \"Jackpot\"\n  },\n  \"834\": {\n    \"index\": \"834\",\n    \"hex\": \"0x80000342\",\n    \"symbol\": \"KYAN\",\n    \"name\": \"Kyanite\"\n  },\n  \"835\": {\n    \"index\": \"835\",\n    \"hex\": \"0x80000343\",\n    \"symbol\": \"AZR\",\n    \"name\": \"Azzure\"\n  },\n  \"836\": {\n    \"index\": \"836\",\n    \"hex\": \"0x80000344\",\n    \"symbol\": \"CFL\",\n    \"name\": \"CryptoFlow\"\n  },\n  \"837\": {\n    \"index\": \"837\",\n    \"hex\": \"0x80000345\",\n    \"symbol\": \"DASHD\",\n    \"name\": \"Dash Diamond\"\n  },\n  \"838\": {\n    \"index\": \"838\",\n    \"hex\": \"0x80000346\",\n    \"symbol\": \"TRTT\",\n    \"name\": \"Trittium\"\n  },\n  \"839\": {\n    \"index\": \"839\",\n    \"hex\": \"0x80000347\",\n    \"symbol\": \"UCR\",\n    \"name\": \"Ultra Clear\"\n  },\n  \"840\": {\n    \"index\": \"840\",\n    \"hex\": \"0x80000348\",\n    \"symbol\": \"PNY\",\n    \"name\": \"Peony\"\n  },\n  \"841\": {\n    \"index\": \"841\",\n    \"hex\": \"0x80000349\",\n    \"symbol\": \"BECN\",\n    \"name\": \"Beacon\"\n  },\n  \"842\": {\n    \"index\": \"842\",\n    \"hex\": \"0x8000034a\",\n    \"symbol\": \"MONK\",\n    \"name\": \"Monk\"\n  },\n  \"843\": {\n    \"index\": \"843\",\n    \"hex\": \"0x8000034b\",\n    \"symbol\": \"SAGA\",\n    \"name\": \"CryptoSaga\"\n  },\n  \"844\": {\n    \"index\": \"844\",\n    \"hex\": \"0x8000034c\",\n    \"symbol\": \"SUV\",\n    \"name\": \"Suvereno\"\n  },\n  \"845\": {\n    \"index\": \"845\",\n    \"hex\": \"0x8000034d\",\n    \"symbol\": \"ESK\",\n    \"name\": \"EskaCoin\"\n  },\n  \"846\": {\n    \"index\": \"846\",\n    \"hex\": \"0x8000034e\",\n    \"symbol\": \"OWO\",\n    \"name\": \"OneWorld Coin\"\n  },\n  \"847\": {\n    \"index\": \"847\",\n    \"hex\": \"0x8000034f\",\n    \"symbol\": \"PEPS\",\n    \"name\": \"PEPS Coin\"\n  },\n  \"848\": {\n    \"index\": \"848\",\n    \"hex\": \"0x80000350\",\n    \"symbol\": \"BIR\",\n    \"name\": \"Birake\"\n  },\n  \"849\": {\n    \"index\": \"849\",\n    \"hex\": \"0x80000351\",\n    \"symbol\": \"MOBIC\",\n    \"name\": \"MobilityCoin\"\n  },\n  \"850\": {\n    \"index\": \"850\",\n    \"hex\": \"0x80000352\",\n    \"symbol\": \"FLS\",\n    \"name\": \"Flits\"\n  },\n  \"851\": {\n    \"index\": \"851\",\n    \"hex\": \"0x80000353\",\n    \"symbol\": \"FRECO\",\n    \"name\": \"Freco\"\n  },\n  \"852\": {\n    \"index\": \"852\",\n    \"hex\": \"0x80000354\",\n    \"symbol\": \"DSM\",\n    \"name\": \"Desmos\"\n  },\n  \"853\": {\n    \"index\": \"853\",\n    \"hex\": \"0x80000355\",\n    \"symbol\": \"PRCY\",\n    \"name\": \"PRCY Coin\"\n  },\n  \"858\": {\n    \"index\": \"858\",\n    \"hex\": \"0x8000035a\",\n    \"symbol\": \"HVH\",\n    \"name\": \"HAVAH\"\n  },\n  \"866\": {\n    \"index\": \"866\",\n    \"hex\": \"0x80000362\",\n    \"symbol\": \"MOB\",\n    \"name\": \"MobileCoin\"\n  },\n  \"868\": {\n    \"index\": \"868\",\n    \"hex\": \"0x80000364\",\n    \"symbol\": \"IF\",\n    \"name\": \"Infinitefuture\"\n  },\n  \"877\": {\n    \"index\": \"877\",\n    \"hex\": \"0x8000036d\",\n    \"symbol\": \"NAM\",\n    \"name\": \"Namada\"\n  },\n  \"878\": {\n    \"index\": \"878\",\n    \"hex\": \"0x8000036e\",\n    \"symbol\": \"SCR\",\n    \"name\": \"Scorum Network\"\n  },\n  \"880\": {\n    \"index\": \"880\",\n    \"hex\": \"0x80000370\",\n    \"symbol\": \"LUM\",\n    \"name\": \"Lum Network\"\n  },\n  \"883\": {\n    \"index\": \"883\",\n    \"hex\": \"0x80000373\",\n    \"symbol\": \"ZBC\",\n    \"name\": \"ZooBC\"\n  },\n  \"886\": {\n    \"index\": \"886\",\n    \"hex\": \"0x80000376\",\n    \"symbol\": \"ADF\",\n    \"name\": \"AD Token\"\n  },\n  \"888\": {\n    \"index\": \"888\",\n    \"hex\": \"0x80000378\",\n    \"symbol\": \"NEO\",\n    \"name\": \"NEO\"\n  },\n  \"889\": {\n    \"index\": \"889\",\n    \"hex\": \"0x80000379\",\n    \"symbol\": \"TOMO\",\n    \"name\": \"TOMO\"\n  },\n  \"890\": {\n    \"index\": \"890\",\n    \"hex\": \"0x8000037a\",\n    \"symbol\": \"XSEL\",\n    \"name\": \"Seln\"\n  },\n  \"896\": {\n    \"index\": \"896\",\n    \"hex\": \"0x80000380\",\n    \"symbol\": \"LKSC\",\n    \"name\": \"LKSCoin\"\n  },\n  \"898\": {\n    \"index\": \"898\",\n    \"hex\": \"0x80000382\",\n    \"symbol\": \"AS\",\n    \"name\": \"Assetchain\"\n  },\n  \"899\": {\n    \"index\": \"899\",\n    \"hex\": \"0x80000383\",\n    \"symbol\": \"XEC\",\n    \"name\": \"eCash\"\n  },\n  \"900\": {\n    \"index\": \"900\",\n    \"hex\": \"0x80000384\",\n    \"symbol\": \"LMO\",\n    \"name\": \"Lumeneo\"\n  },\n  \"901\": {\n    \"index\": \"901\",\n    \"hex\": \"0x80000385\",\n    \"symbol\": \"NXT\",\n    \"name\": \"NxtMeta\"\n  },\n  \"904\": {\n    \"index\": \"904\",\n    \"hex\": \"0x80000388\",\n    \"symbol\": \"HNT\",\n    \"name\": \"Helium\"\n  },\n  \"907\": {\n    \"index\": \"907\",\n    \"hex\": \"0x8000038b\",\n    \"symbol\": \"FIS\",\n    \"name\": \"StaFi\"\n  },\n  \"909\": {\n    \"index\": \"909\",\n    \"hex\": \"0x8000038d\",\n    \"symbol\": \"SGE\",\n    \"name\": \"Saage\"\n  },\n  \"911\": {\n    \"index\": \"911\",\n    \"hex\": \"0x8000038f\",\n    \"symbol\": \"GERT\",\n    \"name\": \"Gert\"\n  },\n  \"913\": {\n    \"index\": \"913\",\n    \"hex\": \"0x80000391\",\n    \"symbol\": \"VARA\",\n    \"name\": \"Vara Network\"\n  },\n  \"916\": {\n    \"index\": \"916\",\n    \"hex\": \"0x80000394\",\n    \"symbol\": \"META\",\n    \"name\": \"Metadium\"\n  },\n  \"917\": {\n    \"index\": \"917\",\n    \"hex\": \"0x80000395\",\n    \"symbol\": \"FRA\",\n    \"name\": \"Findora\"\n  },\n  \"919\": {\n    \"index\": \"919\",\n    \"hex\": \"0x80000397\",\n    \"symbol\": \"CCD\",\n    \"name\": \"Concordium\"\n  },\n  \"921\": {\n    \"index\": \"921\",\n    \"hex\": \"0x80000399\",\n    \"symbol\": \"AVN\",\n    \"name\": \"Avian Network\"\n  },\n  \"925\": {\n    \"index\": \"925\",\n    \"hex\": \"0x8000039d\",\n    \"symbol\": \"DIP\",\n    \"name\": \"Dipper Network\"\n  },\n  \"928\": {\n    \"index\": \"928\",\n    \"hex\": \"0x800003a0\",\n    \"symbol\": \"GHM\",\n    \"name\": \"HermitMatrixNetwork\"\n  },\n  \"931\": {\n    \"index\": \"931\",\n    \"hex\": \"0x800003a3\",\n    \"symbol\": \"RUNE\",\n    \"name\": \"THORChain (RUNE)\"\n  },\n  \"938\": {\n    \"index\": \"938\",\n    \"hex\": \"0x800003aa\",\n    \"symbol\": \"MGO\",\n    \"name\": \"Mango Network\"\n  },\n  \"939\": {\n    \"index\": \"939\",\n    \"hex\": \"0x800003ab\",\n    \"symbol\": \"AB\",\n    \"name\": \"Argot Protocol\"\n  },\n  \"941\": {\n    \"index\": \"941\",\n    \"hex\": \"0x800003ad\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"942\": {\n    \"index\": \"942\",\n    \"hex\": \"0x800003ae\",\n    \"symbol\": \"KCN\",\n    \"name\": \"Kylacoin\"\n  },\n  \"943\": {\n    \"index\": \"943\",\n    \"hex\": \"0x800003af\",\n    \"symbol\": \"LCN\",\n    \"name\": \"Lyncoin\"\n  },\n  \"945\": {\n    \"index\": \"945\",\n    \"hex\": \"0x800003b1\",\n    \"symbol\": \"UNLOCK\",\n    \"name\": \"Jasiri protocol\"\n  },\n  \"955\": {\n    \"index\": \"955\",\n    \"hex\": \"0x800003bb\",\n    \"symbol\": \"LTP\",\n    \"name\": \"LifetionCoin\"\n  },\n  \"958\": {\n    \"index\": \"958\",\n    \"hex\": \"0x800003be\",\n    \"symbol\": \"\",\n    \"name\": \"KickSoccer\"\n  },\n  \"960\": {\n    \"index\": \"960\",\n    \"hex\": \"0x800003c0\",\n    \"symbol\": \"VKAX\",\n    \"name\": \"Vkax\"\n  },\n  \"966\": {\n    \"index\": \"966\",\n    \"hex\": \"0x800003c6\",\n    \"symbol\": \"MATIC\",\n    \"name\": \"Matic\"\n  },\n  \"968\": {\n    \"index\": \"968\",\n    \"hex\": \"0x800003c8\",\n    \"symbol\": \"UNW\",\n    \"name\": \"UNW\"\n  },\n  \"969\": {\n    \"index\": \"969\",\n    \"hex\": \"0x800003c9\",\n    \"symbol\": \"QI\",\n    \"name\": \"Quai Network\"\n  },\n  \"970\": {\n    \"index\": \"970\",\n    \"hex\": \"0x800003ca\",\n    \"symbol\": \"TWINS\",\n    \"name\": \"TWINS\"\n  },\n  \"977\": {\n    \"index\": \"977\",\n    \"hex\": \"0x800003d1\",\n    \"symbol\": \"TLOS\",\n    \"name\": \"Telos\"\n  },\n  \"981\": {\n    \"index\": \"981\",\n    \"hex\": \"0x800003d5\",\n    \"symbol\": \"TAFECO\",\n    \"name\": \"Taf ECO Chain\"\n  },\n  \"985\": {\n    \"index\": \"985\",\n    \"hex\": \"0x800003d9\",\n    \"symbol\": \"AU\",\n    \"name\": \"Autonomy\"\n  },\n  \"987\": {\n    \"index\": \"987\",\n    \"hex\": \"0x800003db\",\n    \"symbol\": \"VCG\",\n    \"name\": \"VipCoin\"\n  },\n  \"988\": {\n    \"index\": \"988\",\n    \"hex\": \"0x800003dc\",\n    \"symbol\": \"XAZAB\",\n    \"name\": \"Xazab core\"\n  },\n  \"989\": {\n    \"index\": \"989\",\n    \"hex\": \"0x800003dd\",\n    \"symbol\": \"AIOZ\",\n    \"name\": \"AIOZ\"\n  },\n  \"990\": {\n    \"index\": \"990\",\n    \"hex\": \"0x800003de\",\n    \"symbol\": \"CORE\",\n    \"name\": \"Coreum\"\n  },\n  \"991\": {\n    \"index\": \"991\",\n    \"hex\": \"0x800003df\",\n    \"symbol\": \"PEC\",\n    \"name\": \"Phoenix\"\n  },\n  \"992\": {\n    \"index\": \"992\",\n    \"hex\": \"0x800003e0\",\n    \"symbol\": \"UNT\",\n    \"name\": \"Unit\"\n  },\n  \"993\": {\n    \"index\": \"993\",\n    \"hex\": \"0x800003e1\",\n    \"symbol\": \"XRB\",\n    \"name\": \"X Currency\"\n  },\n  \"994\": {\n    \"index\": \"994\",\n    \"hex\": \"0x800003e2\",\n    \"symbol\": \"QUAI\",\n    \"name\": \"Quai Network\"\n  },\n  \"995\": {\n    \"index\": \"995\",\n    \"hex\": \"0x800003e3\",\n    \"symbol\": \"CAPS\",\n    \"name\": \"Ternoa\"\n  },\n  \"996\": {\n    \"index\": \"996\",\n    \"hex\": \"0x800003e4\",\n    \"symbol\": \"OKT\",\n    \"name\": \"OKChain Token\"\n  },\n  \"997\": {\n    \"index\": \"997\",\n    \"hex\": \"0x800003e5\",\n    \"symbol\": \"SUM\",\n    \"name\": \"Solidum\"\n  },\n  \"998\": {\n    \"index\": \"998\",\n    \"hex\": \"0x800003e6\",\n    \"symbol\": \"LBTC\",\n    \"name\": \"Lightning Bitcoin\"\n  },\n  \"999\": {\n    \"index\": \"999\",\n    \"hex\": \"0x800003e7\",\n    \"symbol\": \"BCD\",\n    \"name\": \"Bitcoin Diamond\"\n  },\n  \"1000\": {\n    \"index\": \"1000\",\n    \"hex\": \"0x800003e8\",\n    \"symbol\": \"BTN\",\n    \"name\": \"Bitcoin New\"\n  },\n  \"1001\": {\n    \"index\": \"1001\",\n    \"hex\": \"0x800003e9\",\n    \"symbol\": \"TT\",\n    \"name\": \"ThunderCore\"\n  },\n  \"1002\": {\n    \"index\": \"1002\",\n    \"hex\": \"0x800003ea\",\n    \"symbol\": \"BKT\",\n    \"name\": \"BanKitt\"\n  },\n  \"1003\": {\n    \"index\": \"1003\",\n    \"hex\": \"0x800003eb\",\n    \"symbol\": \"NODL\",\n    \"name\": \"Nodle\"\n  },\n  \"1004\": {\n    \"index\": \"1004\",\n    \"hex\": \"0x800003ec\",\n    \"symbol\": \"PCOIN\",\n    \"name\": \"PCOIN\"\n  },\n  \"1005\": {\n    \"index\": \"1005\",\n    \"hex\": \"0x800003ed\",\n    \"symbol\": \"TAO\",\n    \"name\": \"Bittensor\"\n  },\n  \"1006\": {\n    \"index\": \"1006\",\n    \"hex\": \"0x800003ee\",\n    \"symbol\": \"HSK\",\n    \"name\": \"HashKey Chain\"\n  },\n  \"1007\": {\n    \"index\": \"1007\",\n    \"hex\": \"0x800003ef\",\n    \"symbol\": \"FTM\",\n    \"name\": \"Fantom\"\n  },\n  \"1008\": {\n    \"index\": \"1008\",\n    \"hex\": \"0x800003f0\",\n    \"symbol\": \"RPG\",\n    \"name\": \"RPG\"\n  },\n  \"1009\": {\n    \"index\": \"1009\",\n    \"hex\": \"0x800003f1\",\n    \"symbol\": \"LAKE\",\n    \"name\": \"iconLake\"\n  },\n  \"1010\": {\n    \"index\": \"1010\",\n    \"hex\": \"0x800003f2\",\n    \"symbol\": \"HT\",\n    \"name\": \"Huobi ECO Chain\"\n  },\n  \"1011\": {\n    \"index\": \"1011\",\n    \"hex\": \"0x800003f3\",\n    \"symbol\": \"ELV\",\n    \"name\": \"Eluvio\"\n  },\n  \"1012\": {\n    \"index\": \"1012\",\n    \"hex\": \"0x800003f4\",\n    \"symbol\": \"JOC\",\n    \"name\": \"Japan Open Chain\"\n  },\n  \"1013\": {\n    \"index\": \"1013\",\n    \"hex\": \"0x800003f5\",\n    \"symbol\": \"BIC\",\n    \"name\": \"Beincrypto\"\n  },\n  \"1014\": {\n    \"index\": \"1014\",\n    \"hex\": \"0x800003f6\",\n    \"symbol\": \"JOY\",\n    \"name\": \"Joystream\"\n  },\n  \"1016\": {\n    \"index\": \"1016\",\n    \"hex\": \"0x800003f8\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"1020\": {\n    \"index\": \"1020\",\n    \"hex\": \"0x800003fc\",\n    \"symbol\": \"EVC\",\n    \"name\": \"Evrice\"\n  },\n  \"1022\": {\n    \"index\": \"1022\",\n    \"hex\": \"0x800003fe\",\n    \"symbol\": \"XRD\",\n    \"name\": \"Radix DLT\"\n  },\n  \"1023\": {\n    \"index\": \"1023\",\n    \"hex\": \"0x800003ff\",\n    \"symbol\": \"ONE\",\n    \"name\": \"HARMONY-ONE (Legacy)\"\n  },\n  \"1024\": {\n    \"index\": \"1024\",\n    \"hex\": \"0x80000400\",\n    \"symbol\": \"ONT\",\n    \"name\": \"Ontology\"\n  },\n  \"1025\": {\n    \"index\": \"1025\",\n    \"hex\": \"0x80000401\",\n    \"symbol\": \"CZZ\",\n    \"name\": \"Classzz\"\n  },\n  \"1026\": {\n    \"index\": \"1026\",\n    \"hex\": \"0x80000402\",\n    \"symbol\": \"KEX\",\n    \"name\": \"Kira Exchange Token\"\n  },\n  \"1027\": {\n    \"index\": \"1027\",\n    \"hex\": \"0x80000403\",\n    \"symbol\": \"MCM\",\n    \"name\": \"Mochimo\"\n  },\n  \"1028\": {\n    \"index\": \"1028\",\n    \"hex\": \"0x80000404\",\n    \"symbol\": \"PLS\",\n    \"name\": \"Pulse Coin\"\n  },\n  \"1032\": {\n    \"index\": \"1032\",\n    \"hex\": \"0x80000408\",\n    \"symbol\": \"BTCR\",\n    \"name\": \"BTCR\"\n  },\n  \"1042\": {\n    \"index\": \"1042\",\n    \"hex\": \"0x80000412\",\n    \"symbol\": \"MFID\",\n    \"name\": \"Moonfish ID\"\n  },\n  \"1111\": {\n    \"index\": \"1111\",\n    \"hex\": \"0x80000457\",\n    \"symbol\": \"BBC\",\n    \"name\": \"Big Bitcoin\"\n  },\n  \"1116\": {\n    \"index\": \"1116\",\n    \"hex\": \"0x8000045c\",\n    \"symbol\": \"CORE\",\n    \"name\": \"Core\"\n  },\n  \"1120\": {\n    \"index\": \"1120\",\n    \"hex\": \"0x80000460\",\n    \"symbol\": \"RISE\",\n    \"name\": \"RISE\"\n  },\n  \"1122\": {\n    \"index\": \"1122\",\n    \"hex\": \"0x80000462\",\n    \"symbol\": \"CMT\",\n    \"name\": \"CyberMiles Token\"\n  },\n  \"1128\": {\n    \"index\": \"1128\",\n    \"hex\": \"0x80000468\",\n    \"symbol\": \"ETSC\",\n    \"name\": \"Ethereum Social\"\n  },\n  \"1129\": {\n    \"index\": \"1129\",\n    \"hex\": \"0x80000469\",\n    \"symbol\": \"DFI\",\n    \"name\": \"DeFiChain\"\n  },\n  \"1130\": {\n    \"index\": \"1130\",\n    \"hex\": \"0x8000046a\",\n    \"symbol\": \"DFI\",\n    \"name\": \"DeFiChain EVM Network\"\n  },\n  \"1137\": {\n    \"index\": \"1137\",\n    \"hex\": \"0x80000471\",\n    \"symbol\": \"$DAG\",\n    \"name\": \"Constellation Labs\"\n  },\n  \"1145\": {\n    \"index\": \"1145\",\n    \"hex\": \"0x80000479\",\n    \"symbol\": \"CDY\",\n    \"name\": \"Bitcoin Candy\"\n  },\n  \"1155\": {\n    \"index\": \"1155\",\n    \"hex\": \"0x80000483\",\n    \"symbol\": \"ENJ\",\n    \"name\": \"Enjin Coin\"\n  },\n  \"1170\": {\n    \"index\": \"1170\",\n    \"hex\": \"0x80000492\",\n    \"symbol\": \"HOO\",\n    \"name\": \"Hoo Smart Chain\"\n  },\n  \"1234\": {\n    \"index\": \"1234\",\n    \"hex\": \"0x800004d2\",\n    \"symbol\": \"ALPH\",\n    \"name\": \"Alephium\"\n  },\n  \"1236\": {\n    \"index\": \"1236\",\n    \"hex\": \"0x800004d4\",\n    \"symbol\": \"\",\n    \"name\": \"Masca\"\n  },\n  \"1237\": {\n    \"index\": \"1237\",\n    \"hex\": \"0x800004d5\",\n    \"symbol\": \"\",\n    \"name\": \"Nostr\"\n  },\n  \"1280\": {\n    \"index\": \"1280\",\n    \"hex\": \"0x80000500\",\n    \"symbol\": \"\",\n    \"name\": \"Kudos Setler\"\n  },\n  \"1284\": {\n    \"index\": \"1284\",\n    \"hex\": \"0x80000504\",\n    \"symbol\": \"GLMR\",\n    \"name\": \"Moonbeam\"\n  },\n  \"1285\": {\n    \"index\": \"1285\",\n    \"hex\": \"0x80000505\",\n    \"symbol\": \"MOVR\",\n    \"name\": \"Moonriver\"\n  },\n  \"1298\": {\n    \"index\": \"1298\",\n    \"hex\": \"0x80000512\",\n    \"symbol\": \"WPC\",\n    \"name\": \"Wpc\"\n  },\n  \"1308\": {\n    \"index\": \"1308\",\n    \"hex\": \"0x8000051c\",\n    \"symbol\": \"WEI\",\n    \"name\": \"WEI\"\n  },\n  \"1312\": {\n    \"index\": \"1312\",\n    \"hex\": \"0x80000520\",\n    \"symbol\": \"BITS\",\n    \"name\": \"Entropy\"\n  },\n  \"1337\": {\n    \"index\": \"1337\",\n    \"hex\": \"0x80000539\",\n    \"symbol\": \"DFC\",\n    \"name\": \"Defcoin\"\n  },\n  \"1338\": {\n    \"index\": \"1338\",\n    \"hex\": \"0x8000053a\",\n    \"symbol\": \"IRON\",\n    \"name\": \"Iron Fish\"\n  },\n  \"1348\": {\n    \"index\": \"1348\",\n    \"hex\": \"0x80000544\",\n    \"symbol\": \"ISLM\",\n    \"name\": \"IslamicCoin\"\n  },\n  \"1397\": {\n    \"index\": \"1397\",\n    \"hex\": \"0x80000575\",\n    \"symbol\": \"HYC\",\n    \"name\": \"Hycon\"\n  },\n  \"1410\": {\n    \"index\": \"1410\",\n    \"hex\": \"0x80000582\",\n    \"symbol\": \"TENTSLP\",\n    \"name\": \"TENT Simple Ledger Protocol\"\n  },\n  \"1510\": {\n    \"index\": \"1510\",\n    \"hex\": \"0x800005e6\",\n    \"symbol\": \"XSC\",\n    \"name\": \"XT Smart Chain\"\n  },\n  \"1512\": {\n    \"index\": \"1512\",\n    \"hex\": \"0x800005e8\",\n    \"symbol\": \"AAC\",\n    \"name\": \"Double-A Chain\"\n  },\n  \"1524\": {\n    \"index\": \"1524\",\n    \"hex\": \"0x800005f4\",\n    \"symbol\": \"\",\n    \"name\": \"Taler\"\n  },\n  \"1533\": {\n    \"index\": \"1533\",\n    \"hex\": \"0x800005fd\",\n    \"symbol\": \"BEAM\",\n    \"name\": \"Beam\"\n  },\n  \"1551\": {\n    \"index\": \"1551\",\n    \"hex\": \"0x8000060f\",\n    \"symbol\": \"SDK\",\n    \"name\": \"Sovereign SDK\"\n  },\n  \"1555\": {\n    \"index\": \"1555\",\n    \"hex\": \"0x80000613\",\n    \"symbol\": \"APC\",\n    \"name\": \"Apc Chain\"\n  },\n  \"1616\": {\n    \"index\": \"1616\",\n    \"hex\": \"0x80000650\",\n    \"symbol\": \"ELF\",\n    \"name\": \"AELF\"\n  },\n  \"1618\": {\n    \"index\": \"1618\",\n    \"hex\": \"0x80000652\",\n    \"symbol\": \"AUDL\",\n    \"name\": \"AUDL\"\n  },\n  \"1620\": {\n    \"index\": \"1620\",\n    \"hex\": \"0x80000654\",\n    \"symbol\": \"ATH\",\n    \"name\": \"Atheios\"\n  },\n  \"1627\": {\n    \"index\": \"1627\",\n    \"hex\": \"0x8000065b\",\n    \"symbol\": \"LUME\",\n    \"name\": \"Lume Web\"\n  },\n  \"1642\": {\n    \"index\": \"1642\",\n    \"hex\": \"0x8000066a\",\n    \"symbol\": \"NEW\",\n    \"name\": \"Newton\"\n  },\n  \"1657\": {\n    \"index\": \"1657\",\n    \"hex\": \"0x80000679\",\n    \"symbol\": \"BTA\",\n    \"name\": \"Btachain\"\n  },\n  \"1668\": {\n    \"index\": \"1668\",\n    \"hex\": \"0x80000684\",\n    \"symbol\": \"NEOX\",\n    \"name\": \"Neoxa\"\n  },\n  \"1669\": {\n    \"index\": \"1669\",\n    \"hex\": \"0x80000685\",\n    \"symbol\": \"MEWC\",\n    \"name\": \"Meowcoin\"\n  },\n  \"1688\": {\n    \"index\": \"1688\",\n    \"hex\": \"0x80000698\",\n    \"symbol\": \"BCX\",\n    \"name\": \"BitcoinX\"\n  },\n  \"1729\": {\n    \"index\": \"1729\",\n    \"hex\": \"0x800006c1\",\n    \"symbol\": \"XTZ\",\n    \"name\": \"Tezos\"\n  },\n  \"1776\": {\n    \"index\": \"1776\",\n    \"hex\": \"0x800006f0\",\n    \"symbol\": \"LBTC\",\n    \"name\": \"Liquid BTC\"\n  },\n  \"1777\": {\n    \"index\": \"1777\",\n    \"hex\": \"0x800006f1\",\n    \"symbol\": \"BBP\",\n    \"name\": \"Biblepay\"\n  },\n  \"1784\": {\n    \"index\": \"1784\",\n    \"hex\": \"0x800006f8\",\n    \"symbol\": \"JPYS\",\n    \"name\": \"JPY Stablecoin\"\n  },\n  \"1789\": {\n    \"index\": \"1789\",\n    \"hex\": \"0x800006fd\",\n    \"symbol\": \"VEGA\",\n    \"name\": \"Vega Protocol\"\n  },\n  \"1815\": {\n    \"index\": \"1815\",\n    \"hex\": \"0x80000717\",\n    \"symbol\": \"ADA\",\n    \"name\": \"Cardano\"\n  },\n  \"1818\": {\n    \"index\": \"1818\",\n    \"hex\": \"0x8000071a\",\n    \"symbol\": \"CUBE\",\n    \"name\": \"Cube Chain Native Token\"\n  },\n  \"1856\": {\n    \"index\": \"1856\",\n    \"hex\": \"0x80000743\",\n    \"symbol\": \"TES\",\n    \"name\": \"Teslacoin\"\n  },\n  \"1888\": {\n    \"index\": \"1888\",\n    \"hex\": \"0x80000760\",\n    \"symbol\": \"ZTX\",\n    \"name\": \"Zetrix\"\n  },\n  \"1899\": {\n    \"index\": \"1899\",\n    \"hex\": \"0x8000076b\",\n    \"symbol\": \"XEC\",\n    \"name\": \"eCash token\"\n  },\n  \"1900\": {\n    \"index\": \"1900\",\n    \"hex\": \"0x8000076c\",\n    \"symbol\": \"XNA\",\n    \"name\": \"Neurai\"\n  },\n  \"1901\": {\n    \"index\": \"1901\",\n    \"hex\": \"0x8000076d\",\n    \"symbol\": \"CLC\",\n    \"name\": \"Classica\"\n  },\n  \"1907\": {\n    \"index\": \"1907\",\n    \"hex\": \"0x80000773\",\n    \"symbol\": \"BITCI\",\n    \"name\": \"Bitcicoin\"\n  },\n  \"1919\": {\n    \"index\": \"1919\",\n    \"hex\": \"0x8000077f\",\n    \"symbol\": \"VIPS\",\n    \"name\": \"VIPSTARCOIN\"\n  },\n  \"1926\": {\n    \"index\": \"1926\",\n    \"hex\": \"0x80000786\",\n    \"symbol\": \"CITY\",\n    \"name\": \"City Coin\"\n  },\n  \"1955\": {\n    \"index\": \"1955\",\n    \"hex\": \"0x800007a3\",\n    \"symbol\": \"XX\",\n    \"name\": \"xx coin\"\n  },\n  \"1977\": {\n    \"index\": \"1977\",\n    \"hex\": \"0x800007b9\",\n    \"symbol\": \"XMX\",\n    \"name\": \"Xuma\"\n  },\n  \"1984\": {\n    \"index\": \"1984\",\n    \"hex\": \"0x800007c0\",\n    \"symbol\": \"TRTL\",\n    \"name\": \"TurtleCoin\"\n  },\n  \"1985\": {\n    \"index\": \"1985\",\n    \"hex\": \"0x800007c1\",\n    \"symbol\": \"SLRT\",\n    \"name\": \"Solarti Chain\"\n  },\n  \"1986\": {\n    \"index\": \"1986\",\n    \"hex\": \"0x800007c2\",\n    \"symbol\": \"QTH\",\n    \"name\": \"Qing Tong Horizon\"\n  },\n  \"1987\": {\n    \"index\": \"1987\",\n    \"hex\": \"0x800007c3\",\n    \"symbol\": \"EGEM\",\n    \"name\": \"EtherGem\"\n  },\n  \"1988\": {\n    \"index\": \"1988\",\n    \"hex\": \"0x800007c4\",\n    \"symbol\": \"MIRA\",\n    \"name\": \"Mira Chain\"\n  },\n  \"1989\": {\n    \"index\": \"1989\",\n    \"hex\": \"0x800007c5\",\n    \"symbol\": \"HODL\",\n    \"name\": \"HOdlcoin\"\n  },\n  \"1990\": {\n    \"index\": \"1990\",\n    \"hex\": \"0x800007c6\",\n    \"symbol\": \"PHL\",\n    \"name\": \"Placeholders\"\n  },\n  \"1991\": {\n    \"index\": \"1991\",\n    \"hex\": \"0x800007c7\",\n    \"symbol\": \"SC\",\n    \"name\": \"Sia\"\n  },\n  \"1996\": {\n    \"index\": \"1996\",\n    \"hex\": \"0x800007cc\",\n    \"symbol\": \"MYT\",\n    \"name\": \"Mineyourtime\"\n  },\n  \"1997\": {\n    \"index\": \"1997\",\n    \"hex\": \"0x800007cd\",\n    \"symbol\": \"POLIS\",\n    \"name\": \"Polis\"\n  },\n  \"1998\": {\n    \"index\": \"1998\",\n    \"hex\": \"0x800007ce\",\n    \"symbol\": \"XMCC\",\n    \"name\": \"Monoeci\"\n  },\n  \"1999\": {\n    \"index\": \"1999\",\n    \"hex\": \"0x800007cf\",\n    \"symbol\": \"COLX\",\n    \"name\": \"ColossusXT\"\n  },\n  \"2000\": {\n    \"index\": \"2000\",\n    \"hex\": \"0x800007d0\",\n    \"symbol\": \"GIN\",\n    \"name\": \"GinCoin\"\n  },\n  \"2001\": {\n    \"index\": \"2001\",\n    \"hex\": \"0x800007d1\",\n    \"symbol\": \"MNP\",\n    \"name\": \"MNPCoin\"\n  },\n  \"2002\": {\n    \"index\": \"2002\",\n    \"hex\": \"0x800007d2\",\n    \"symbol\": \"MLN\",\n    \"name\": \"Miraland\"\n  },\n  \"2017\": {\n    \"index\": \"2017\",\n    \"hex\": \"0x800007e1\",\n    \"symbol\": \"KIN\",\n    \"name\": \"Kin\"\n  },\n  \"2018\": {\n    \"index\": \"2018\",\n    \"hex\": \"0x800007e2\",\n    \"symbol\": \"EOSC\",\n    \"name\": \"EOSClassic\"\n  },\n  \"2019\": {\n    \"index\": \"2019\",\n    \"hex\": \"0x800007e3\",\n    \"symbol\": \"GBT\",\n    \"name\": \"GoldBean Token\"\n  },\n  \"2020\": {\n    \"index\": \"2020\",\n    \"hex\": \"0x800007e4\",\n    \"symbol\": \"PKC\",\n    \"name\": \"PKC\"\n  },\n  \"2021\": {\n    \"index\": \"2021\",\n    \"hex\": \"0x800007e5\",\n    \"symbol\": \"SKT\",\n    \"name\": \"Sukhavati\"\n  },\n  \"2022\": {\n    \"index\": \"2022\",\n    \"hex\": \"0x800007e6\",\n    \"symbol\": \"XHT\",\n    \"name\": \"Xinghuo Token\"\n  },\n  \"2023\": {\n    \"index\": \"2023\",\n    \"hex\": \"0x800007e7\",\n    \"symbol\": \"COC\",\n    \"name\": \"Chat On Chain\"\n  },\n  \"2024\": {\n    \"index\": \"2024\",\n    \"hex\": \"0x800007e8\",\n    \"symbol\": \"USBC\",\n    \"name\": \"Universal Ledger USBC\"\n  },\n  \"2025\": {\n    \"index\": \"2025\",\n    \"hex\": \"0x800007e9\",\n    \"symbol\": \"ROCK\",\n    \"name\": \"Zenrock Labs\"\n  },\n  \"2046\": {\n    \"index\": \"2046\",\n    \"hex\": \"0x800007fe\",\n    \"symbol\": \"ANY\",\n    \"name\": \"Any\"\n  },\n  \"2048\": {\n    \"index\": \"2048\",\n    \"hex\": \"0x80000800\",\n    \"symbol\": \"MCASH\",\n    \"name\": \"MCashChain\"\n  },\n  \"2049\": {\n    \"index\": \"2049\",\n    \"hex\": \"0x80000801\",\n    \"symbol\": \"TRUE\",\n    \"name\": \"TrueChain\"\n  },\n  \"2050\": {\n    \"index\": \"2050\",\n    \"hex\": \"0x80000802\",\n    \"symbol\": \"MOVO\",\n    \"name\": \"Movo Smart Chain\"\n  },\n  \"2086\": {\n    \"index\": \"2086\",\n    \"hex\": \"0x80000826\",\n    \"symbol\": \"KILT\",\n    \"name\": \"KILT Spiritnet\"\n  },\n  \"2109\": {\n    \"index\": \"2109\",\n    \"hex\": \"0x8000083d\",\n    \"symbol\": \"SAMA\",\n    \"name\": \"Exosama Network\"\n  },\n  \"2112\": {\n    \"index\": \"2112\",\n    \"hex\": \"0x80000840\",\n    \"symbol\": \"IoTE\",\n    \"name\": \"IoTE\"\n  },\n  \"2125\": {\n    \"index\": \"2125\",\n    \"hex\": \"0x8000084d\",\n    \"symbol\": \"BAY\",\n    \"name\": \"BitBay\"\n  },\n  \"2137\": {\n    \"index\": \"2137\",\n    \"hex\": \"0x80000859\",\n    \"symbol\": \"XRG\",\n    \"name\": \"Ergon\"\n  },\n  \"2199\": {\n    \"index\": \"2199\",\n    \"hex\": \"0x80000897\",\n    \"symbol\": \"SAMA\",\n    \"name\": \"Moonsama Network\"\n  },\n  \"2221\": {\n    \"index\": \"2221\",\n    \"hex\": \"0x800008ad\",\n    \"symbol\": \"ASK\",\n    \"name\": \"ASK\"\n  },\n  \"2222\": {\n    \"index\": \"2222\",\n    \"hex\": \"0x800008ae\",\n    \"symbol\": \"CWEB\",\n    \"name\": \"Coinweb\"\n  },\n  \"2285\": {\n    \"index\": \"2285\",\n    \"hex\": \"0x800008ed\",\n    \"symbol\": \"\",\n    \"name\": \"Qiyi Chain\"\n  },\n  \"2301\": {\n    \"index\": \"2301\",\n    \"hex\": \"0x800008fd\",\n    \"symbol\": \"QTUM\",\n    \"name\": \"QTUM\"\n  },\n  \"2302\": {\n    \"index\": \"2302\",\n    \"hex\": \"0x800008fe\",\n    \"symbol\": \"ETP\",\n    \"name\": \"Metaverse\"\n  },\n  \"2303\": {\n    \"index\": \"2303\",\n    \"hex\": \"0x800008ff\",\n    \"symbol\": \"GXC\",\n    \"name\": \"GXChain\"\n  },\n  \"2304\": {\n    \"index\": \"2304\",\n    \"hex\": \"0x80000900\",\n    \"symbol\": \"CRP\",\n    \"name\": \"CranePay\"\n  },\n  \"2305\": {\n    \"index\": \"2305\",\n    \"hex\": \"0x80000901\",\n    \"symbol\": \"ELA\",\n    \"name\": \"Elastos\"\n  },\n  \"2338\": {\n    \"index\": \"2338\",\n    \"hex\": \"0x80000922\",\n    \"symbol\": \"SNOW\",\n    \"name\": \"Snowblossom\"\n  },\n  \"2365\": {\n    \"index\": \"2365\",\n    \"hex\": \"0x8000093d\",\n    \"symbol\": \"XIN\",\n    \"name\": \"Mixin\"\n  },\n  \"2500\": {\n    \"index\": \"2500\",\n    \"hex\": \"0x800009c4\",\n    \"symbol\": \"NEXI\",\n    \"name\": \"Nexi\"\n  },\n  \"2570\": {\n    \"index\": \"2570\",\n    \"hex\": \"0x80000a0a\",\n    \"symbol\": \"AOA\",\n    \"name\": \"Aurora\"\n  },\n  \"2686\": {\n    \"index\": \"2686\",\n    \"hex\": \"0x80000a7e\",\n    \"symbol\": \"AIPG\",\n    \"name\": \"AIPowerGrid\"\n  },\n  \"2718\": {\n    \"index\": \"2718\",\n    \"hex\": \"0x80000a9e\",\n    \"symbol\": \"NAS\",\n    \"name\": \"Nebulas\"\n  },\n  \"2894\": {\n    \"index\": \"2894\",\n    \"hex\": \"0x80000b4e\",\n    \"symbol\": \"REOSC\",\n    \"name\": \"REOSC Ecosystem\"\n  },\n  \"2941\": {\n    \"index\": \"2941\",\n    \"hex\": \"0x80000b7d\",\n    \"symbol\": \"BND\",\n    \"name\": \"Blocknode\"\n  },\n  \"3000\": {\n    \"index\": \"3000\",\n    \"hex\": \"0x80000bb8\",\n    \"symbol\": \"SM\",\n    \"name\": \"Stealth Message\"\n  },\n  \"3003\": {\n    \"index\": \"3003\",\n    \"hex\": \"0x80000bbb\",\n    \"symbol\": \"LUX\",\n    \"name\": \"LUX\"\n  },\n  \"3030\": {\n    \"index\": \"3030\",\n    \"hex\": \"0x80000bd6\",\n    \"symbol\": \"HBAR\",\n    \"name\": \"Hedera HBAR\"\n  },\n  \"3077\": {\n    \"index\": \"3077\",\n    \"hex\": \"0x80000c05\",\n    \"symbol\": \"COS\",\n    \"name\": \"Contentos\"\n  },\n  \"3276\": {\n    \"index\": \"3276\",\n    \"hex\": \"0x80000ccc\",\n    \"symbol\": \"CCC\",\n    \"name\": \"CodeChain\"\n  },\n  \"3333\": {\n    \"index\": \"3333\",\n    \"hex\": \"0x80000d05\",\n    \"symbol\": \"SXP\",\n    \"name\": \"Solar\"\n  },\n  \"3338\": {\n    \"index\": \"3338\",\n    \"hex\": \"0x80000d0a\",\n    \"symbol\": \"PEAQ\",\n    \"name\": \"peaq\"\n  },\n  \"3377\": {\n    \"index\": \"3377\",\n    \"hex\": \"0x80000d31\",\n    \"symbol\": \"ROI\",\n    \"name\": \"ROIcoin\"\n  },\n  \"3381\": {\n    \"index\": \"3381\",\n    \"hex\": \"0x80000d35\",\n    \"symbol\": \"DYN\",\n    \"name\": \"Dynamic\"\n  },\n  \"3383\": {\n    \"index\": \"3383\",\n    \"hex\": \"0x80000d37\",\n    \"symbol\": \"SEQ\",\n    \"name\": \"Sequence\"\n  },\n  \"3434\": {\n    \"index\": \"3434\",\n    \"hex\": \"0x80000d6a\",\n    \"symbol\": \"PEPE\",\n    \"name\": \"Pepecoin Core\"\n  },\n  \"3501\": {\n    \"index\": \"3501\",\n    \"hex\": \"0x80000dad\",\n    \"symbol\": \"JFIN\",\n    \"name\": \"JFIN Coin\"\n  },\n  \"3552\": {\n    \"index\": \"3552\",\n    \"hex\": \"0x80000de0\",\n    \"symbol\": \"DEO\",\n    \"name\": \"Destocoin\"\n  },\n  \"3564\": {\n    \"index\": \"3564\",\n    \"hex\": \"0x80000dec\",\n    \"symbol\": \"DST\",\n    \"name\": \"DeStream\"\n  },\n  \"3601\": {\n    \"index\": \"3601\",\n    \"hex\": \"0x80000e11\",\n    \"symbol\": \"CY\",\n    \"name\": \"Cybits\"\n  },\n  \"3757\": {\n    \"index\": \"3757\",\n    \"hex\": \"0x80000ead\",\n    \"symbol\": \"MPC\",\n    \"name\": \"Partisia Blockchain\"\n  },\n  \"3840\": {\n    \"index\": \"3840\",\n    \"hex\": \"0x80000f00\",\n    \"symbol\": \"RED\",\n    \"name\": \"ReDeFi RED\"\n  },\n  \"4040\": {\n    \"index\": \"4040\",\n    \"hex\": \"0x80000fc8\",\n    \"symbol\": \"FC8\",\n    \"name\": \"FCH Network\"\n  },\n  \"4096\": {\n    \"index\": \"4096\",\n    \"hex\": \"0x80001000\",\n    \"symbol\": \"YEE\",\n    \"name\": \"YeeCo\"\n  },\n  \"4218\": {\n    \"index\": \"4218\",\n    \"hex\": \"0x8000107a\",\n    \"symbol\": \"IOTA\",\n    \"name\": \"IOTA\"\n  },\n  \"4219\": {\n    \"index\": \"4219\",\n    \"hex\": \"0x8000107b\",\n    \"symbol\": \"SMR\",\n    \"name\": \"Shimmer\"\n  },\n  \"4242\": {\n    \"index\": \"4242\",\n    \"hex\": \"0x80001092\",\n    \"symbol\": \"AXE\",\n    \"name\": \"Axe\"\n  },\n  \"4343\": {\n    \"index\": \"4343\",\n    \"hex\": \"0x800010f7\",\n    \"symbol\": \"XYM\",\n    \"name\": \"Symbol\"\n  },\n  \"4444\": {\n    \"index\": \"4444\",\n    \"hex\": \"0x8000115c\",\n    \"symbol\": \"C4E\",\n    \"name\": \"Chain4Energy\"\n  },\n  \"4919\": {\n    \"index\": \"4919\",\n    \"hex\": \"0x80001337\",\n    \"symbol\": \"XVM\",\n    \"name\": \"Venidium\"\n  },\n  \"4999\": {\n    \"index\": \"4999\",\n    \"hex\": \"0x80001387\",\n    \"symbol\": \"BXN\",\n    \"name\": \"BlackFort Exchange Network\"\n  },\n  \"5000\": {\n    \"index\": \"5000\",\n    \"hex\": \"0x80001388\",\n    \"symbol\": \"V12\",\n    \"name\": \"Vet The Vote\"\n  },\n  \"5006\": {\n    \"index\": \"5006\",\n    \"hex\": \"0x8000138e\",\n    \"symbol\": \"SBC\",\n    \"name\": \"Senior Blockchain\"\n  },\n  \"5248\": {\n    \"index\": \"5248\",\n    \"hex\": \"0x80001480\",\n    \"symbol\": \"FIC\",\n    \"name\": \"FIC\"\n  },\n  \"5353\": {\n    \"index\": \"5353\",\n    \"hex\": \"0x800014e9\",\n    \"symbol\": \"HNS\",\n    \"name\": \"Handshake\"\n  },\n  \"5404\": {\n    \"index\": \"5404\",\n    \"hex\": \"0x8000151c\",\n    \"symbol\": \"ISK\",\n    \"name\": \"ISKRA\"\n  },\n  \"5467\": {\n    \"index\": \"5467\",\n    \"hex\": \"0x8000155b\",\n    \"symbol\": \"ALTME\",\n    \"name\": \"ALTME\"\n  },\n  \"5555\": {\n    \"index\": \"5555\",\n    \"hex\": \"0x800015b3\",\n    \"symbol\": \"FUND\",\n    \"name\": \"Unification\"\n  },\n  \"5757\": {\n    \"index\": \"5757\",\n    \"hex\": \"0x8000167d\",\n    \"symbol\": \"STX\",\n    \"name\": \"Stacks\"\n  },\n  \"5895\": {\n    \"index\": \"5895\",\n    \"hex\": \"0x80001707\",\n    \"symbol\": \"VOW\",\n    \"name\": \"VowChain VOW\"\n  },\n  \"5920\": {\n    \"index\": \"5920\",\n    \"hex\": \"0x80001720\",\n    \"symbol\": \"SLU\",\n    \"name\": \"SILUBIUM\"\n  },\n  \"5995\": {\n    \"index\": \"5995\",\n    \"hex\": \"0x8000176B\",\n    \"symbol\": \"DUSK\",\n    \"name\": \"Dusk Network\"\n  },\n  \"6060\": {\n    \"index\": \"6060\",\n    \"hex\": \"0x800017ac\",\n    \"symbol\": \"GO\",\n    \"name\": \"GoChain GO\"\n  },\n  \"6144\": {\n    \"index\": \"6144\",\n    \"hex\": \"0x80001800\",\n    \"symbol\": \"DTS\",\n    \"name\": \"Datos\"\n  },\n  \"6174\": {\n    \"index\": \"6174\",\n    \"hex\": \"0x8000181e\",\n    \"symbol\": \"MOI\",\n    \"name\": \"My Own Internet\"\n  },\n  \"6278\": {\n    \"index\": \"6278\",\n    \"hex\": \"0x80001886\",\n    \"symbol\": \"STEAMX\",\n    \"name\": \"Rails Network Mainnet\"\n  },\n  \"6532\": {\n    \"index\": \"6532\",\n    \"hex\": \"0x80001984\",\n    \"symbol\": \"UM\",\n    \"name\": \"Penumbra\"\n  },\n  \"6599\": {\n    \"index\": \"6599\",\n    \"hex\": \"0x800019c7\",\n    \"symbol\": \"RSC\",\n    \"name\": \"Royal Sports City\"\n  },\n  \"6666\": {\n    \"index\": \"6666\",\n    \"hex\": \"0x80001a0a\",\n    \"symbol\": \"BPA\",\n    \"name\": \"Bitcoin Pizza\"\n  },\n  \"6688\": {\n    \"index\": \"6688\",\n    \"hex\": \"0x80001a20\",\n    \"symbol\": \"SAFE\",\n    \"name\": \"SAFE\"\n  },\n  \"6779\": {\n    \"index\": \"6779\",\n    \"hex\": \"0x80001a7b\",\n    \"symbol\": \"COTI\",\n    \"name\": \"COTI\"\n  },\n  \"6969\": {\n    \"index\": \"6969\",\n    \"hex\": \"0x80001b39\",\n    \"symbol\": \"ROGER\",\n    \"name\": \"TheHolyrogerCoin\"\n  },\n  \"7000\": {\n    \"index\": \"7000\",\n    \"hex\": \"0x80001b58\",\n    \"symbol\": \"ZETA\",\n    \"name\": \"ZetaChain\"\n  },\n  \"7027\": {\n    \"index\": \"7027\",\n    \"hex\": \"0x80001b73\",\n    \"symbol\": \"ELLA\",\n    \"name\": \"Ella the heart\"\n  },\n  \"7028\": {\n    \"index\": \"7028\",\n    \"hex\": \"0x80001b74\",\n    \"symbol\": \"AA\",\n    \"name\": \"Arthera\"\n  },\n  \"7091\": {\n    \"index\": \"7091\",\n    \"hex\": \"0x80001bb3\",\n    \"symbol\": \"TOPL\",\n    \"name\": \"Topl\"\n  },\n  \"7331\": {\n    \"index\": \"7331\",\n    \"hex\": \"0x80001ca3\",\n    \"symbol\": \"KLY\",\n    \"name\": \"KLYNTAR\"\n  },\n  \"7341\": {\n    \"index\": \"7341\",\n    \"hex\": \"0x80001cad\",\n    \"symbol\": \"SHFT\",\n    \"name\": \"Shyft\"\n  },\n  \"7518\": {\n    \"index\": \"7518\",\n    \"hex\": \"0x80001d5e\",\n    \"symbol\": \"MEV\",\n    \"name\": \"MEVerse\"\n  },\n  \"7576\": {\n    \"index\": \"7576\",\n    \"hex\": \"0x80001d98\",\n    \"symbol\": \"ADIL\",\n    \"name\": \"ADIL Chain\"\n  },\n  \"7777\": {\n    \"index\": \"7777\",\n    \"hex\": \"0x80001e61\",\n    \"symbol\": \"BTV\",\n    \"name\": \"Bitvote\"\n  },\n  \"7779\": {\n    \"index\": \"7779\",\n    \"hex\": \"0x80001e63\",\n    \"symbol\": \"CPV\",\n    \"name\": \"Compverse\"\n  },\n  \"8000\": {\n    \"index\": \"8000\",\n    \"hex\": \"0x80001f40\",\n    \"symbol\": \"SKY\",\n    \"name\": \"Skycoin\"\n  },\n  \"8080\": {\n    \"index\": \"8080\",\n    \"hex\": \"0x80001f90\",\n    \"symbol\": \"\",\n    \"name\": \"DSRV\"\n  },\n  \"8181\": {\n    \"index\": \"8181\",\n    \"hex\": \"0x80001ff5\",\n    \"symbol\": \"BOC\",\n    \"name\": \"BeOne Chain\"\n  },\n  \"8192\": {\n    \"index\": \"8192\",\n    \"hex\": \"0x80002000\",\n    \"symbol\": \"PAC\",\n    \"name\": \"pacprotocol\"\n  },\n  \"8217\": {\n    \"index\": \"8217\",\n    \"hex\": \"0x80002019\",\n    \"symbol\": \"KLAY\",\n    \"name\": \"KLAY\"\n  },\n  \"8339\": {\n    \"index\": \"8339\",\n    \"hex\": \"0x80002093\",\n    \"symbol\": \"BTQ\",\n    \"name\": \"BitcoinQuark\"\n  },\n  \"8444\": {\n    \"index\": \"8444\",\n    \"hex\": \"0x800020fc\",\n    \"symbol\": \"XCH\",\n    \"name\": \"Chia\"\n  },\n  \"8520\": {\n    \"index\": \"8520\",\n    \"hex\": \"0x80002148\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"8680\": {\n    \"index\": \"8680\",\n    \"hex\": \"0x800021e8\",\n    \"symbol\": \"PLMNT\",\n    \"name\": \"Planetmint\"\n  },\n  \"8732\": {\n    \"index\": \"8732\",\n    \"hex\": \"0x8000221c\",\n    \"symbol\": \"BLN\",\n    \"name\": \"Bullions\"\n  },\n  \"8866\": {\n    \"index\": \"8866\",\n    \"hex\": \"0x800022a2\",\n    \"symbol\": \"GGX\",\n    \"name\": \"Golden Gate\"\n  },\n  \"8886\": {\n    \"index\": \"8886\",\n    \"hex\": \"0x800022b6\",\n    \"symbol\": \"GGXT\",\n    \"name\": \"Golden Gate Sydney\"\n  },\n  \"8888\": {\n    \"index\": \"8888\",\n    \"hex\": \"0x800022b8\",\n    \"symbol\": \"SBTC\",\n    \"name\": \"Super Bitcoin\"\n  },\n  \"8964\": {\n    \"index\": \"8964\",\n    \"hex\": \"0x80002304\",\n    \"symbol\": \"NULS\",\n    \"name\": \"NULS\"\n  },\n  \"8997\": {\n    \"index\": \"8997\",\n    \"hex\": \"0x80002325\",\n    \"symbol\": \"BBC\",\n    \"name\": \"Babacoin\"\n  },\n  \"8998\": {\n    \"index\": \"8998\",\n    \"hex\": \"0x80002326\",\n    \"symbol\": \"JGC\",\n    \"name\": \"JagoanCoin\"\n  },\n  \"8999\": {\n    \"index\": \"8999\",\n    \"hex\": \"0x80002327\",\n    \"symbol\": \"BTP\",\n    \"name\": \"Bitcoin Pay\"\n  },\n  \"9000\": {\n    \"index\": \"9000\",\n    \"hex\": \"0x80002328\",\n    \"symbol\": \"AVAX\",\n    \"name\": \"Avalanche\"\n  },\n  \"9001\": {\n    \"index\": \"9001\",\n    \"hex\": \"0x80002329\",\n    \"symbol\": \"ARB1\",\n    \"name\": \"Arbitrum\"\n  },\n  \"9002\": {\n    \"index\": \"9002\",\n    \"hex\": \"0x8000232a\",\n    \"symbol\": \"BOBA\",\n    \"name\": \"Boba\"\n  },\n  \"9003\": {\n    \"index\": \"9003\",\n    \"hex\": \"0x8000232b\",\n    \"symbol\": \"LOOP\",\n    \"name\": \"Loopring\"\n  },\n  \"9004\": {\n    \"index\": \"9004\",\n    \"hex\": \"0x8000232c\",\n    \"symbol\": \"STRK\",\n    \"name\": \"StarkNet\"\n  },\n  \"9005\": {\n    \"index\": \"9005\",\n    \"hex\": \"0x8000232d\",\n    \"symbol\": \"AVAXC\",\n    \"name\": \"Avalanche C-Chain\"\n  },\n  \"9006\": {\n    \"index\": \"9006\",\n    \"hex\": \"0x8000232e\",\n    \"symbol\": \"BSC\",\n    \"name\": \"Binance Smart Chain\"\n  },\n  \"9797\": {\n    \"index\": \"9797\",\n    \"hex\": \"0x80002645\",\n    \"symbol\": \"NRG\",\n    \"name\": \"Energi\"\n  },\n  \"9888\": {\n    \"index\": \"9888\",\n    \"hex\": \"0x800026a0\",\n    \"symbol\": \"BTF\",\n    \"name\": \"Bitcoin Faith\"\n  },\n  \"9999\": {\n    \"index\": \"9999\",\n    \"hex\": \"0x8000270f\",\n    \"symbol\": \"GOD\",\n    \"name\": \"Bitcoin God\"\n  },\n  \"10000\": {\n    \"index\": \"10000\",\n    \"hex\": \"0x80002710\",\n    \"symbol\": \"FO\",\n    \"name\": \"FIBOS\"\n  },\n  \"10001\": {\n    \"index\": \"10001\",\n    \"hex\": \"0x80002711\",\n    \"symbol\": \"SPACE\",\n    \"name\": \"Space\"\n  },\n  \"10111\": {\n    \"index\": \"10111\",\n    \"hex\": \"0x8000277f\",\n    \"symbol\": \"DHP\",\n    \"name\": \"dHealth\"\n  },\n  \"10226\": {\n    \"index\": \"10226\",\n    \"hex\": \"0x800027f2\",\n    \"symbol\": \"RTM\",\n    \"name\": \"Raptoreum\"\n  },\n  \"10242\": {\n    \"index\": \"10242\",\n    \"hex\": \"0x80002802\",\n    \"symbol\": \"AA\",\n    \"name\": \"Arthera\"\n  },\n  \"10291\": {\n    \"index\": \"10291\",\n    \"hex\": \"0x80002833\",\n    \"symbol\": \"XRC\",\n    \"name\": \"XRhodium\"\n  },\n  \"10507\": {\n    \"index\": \"10507\",\n    \"hex\": \"0x8000290b\",\n    \"symbol\": \"NUM\",\n    \"name\": \"Numbers Protocol\"\n  },\n  \"10605\": {\n    \"index\": \"10605\",\n    \"hex\": \"0x8000296d\",\n    \"symbol\": \"XPI\",\n    \"name\": \"Lotus\"\n  },\n  \"11111\": {\n    \"index\": \"11111\",\n    \"hex\": \"0x80002b67\",\n    \"symbol\": \"ESS\",\n    \"name\": \"Essentia One\"\n  },\n  \"11742\": {\n    \"index\": \"11742\",\n    \"hex\": \"0x80002dde\",\n    \"symbol\": \"VARCH\",\n    \"name\": \"InvArch\"\n  },\n  \"11743\": {\n    \"index\": \"11743\",\n    \"hex\": \"0x80002ddf\",\n    \"symbol\": \"TNKR\",\n    \"name\": \"Tinkernet\"\n  },\n  \"12345\": {\n    \"index\": \"12345\",\n    \"hex\": \"0x80003039\",\n    \"symbol\": \"IPOS\",\n    \"name\": \"IPOS\"\n  },\n  \"12586\": {\n    \"index\": \"12586\",\n    \"hex\": \"0x8000312a\",\n    \"symbol\": \"MINA\",\n    \"name\": \"Mina\"\n  },\n  \"13107\": {\n    \"index\": \"13107\",\n    \"hex\": \"0x80003333\",\n    \"symbol\": \"BTY\",\n    \"name\": \"BitYuan\"\n  },\n  \"13108\": {\n    \"index\": \"13108\",\n    \"hex\": \"0x80003334\",\n    \"symbol\": \"YCC\",\n    \"name\": \"Yuan Chain Coin\"\n  },\n  \"13381\": {\n    \"index\": \"13381\",\n    \"hex\": \"0x80003445\",\n    \"symbol\": \"PHX\",\n    \"name\": \"Phoenix\"\n  },\n  \"14001\": {\n    \"index\": \"14001\",\n    \"hex\": \"0x800036b1\",\n    \"symbol\": \"WAX\",\n    \"name\": \"Worldwide Asset Exchange\"\n  },\n  \"15845\": {\n    \"index\": \"15845\",\n    \"hex\": \"0x80003de5\",\n    \"symbol\": \"SDGO\",\n    \"name\": \"SanDeGo\"\n  },\n  \"16181\": {\n    \"index\": \"16181\",\n    \"hex\": \"0x80003f35\",\n    \"symbol\": \"XTX\",\n    \"name\": \"Totem Live Network\"\n  },\n  \"16754\": {\n    \"index\": \"16754\",\n    \"hex\": \"0x80004172\",\n    \"symbol\": \"ARDR\",\n    \"name\": \"Ardor\"\n  },\n  \"18000\": {\n    \"index\": \"18000\",\n    \"hex\": \"0x80004650\",\n    \"symbol\": \"MTR\",\n    \"name\": \"Meter\"\n  },\n  \"19165\": {\n    \"index\": \"19165\",\n    \"hex\": \"0x80004add\",\n    \"symbol\": \"SAFE\",\n    \"name\": \"Safecoin\"\n  },\n  \"19167\": {\n    \"index\": \"19167\",\n    \"hex\": \"0x80004adf\",\n    \"symbol\": \"FLUX\",\n    \"name\": \"Flux\"\n  },\n  \"19169\": {\n    \"index\": \"19169\",\n    \"hex\": \"0x80004ae1\",\n    \"symbol\": \"RITO\",\n    \"name\": \"Ritocoin\"\n  },\n  \"19788\": {\n    \"index\": \"19788\",\n    \"hex\": \"0x80004d4c\",\n    \"symbol\": \"ML\",\n    \"name\": \"Mintlayer\"\n  },\n  \"20036\": {\n    \"index\": \"20036\",\n    \"hex\": \"0x80004e44\",\n    \"symbol\": \"XND\",\n    \"name\": \"ndau\"\n  },\n  \"21004\": {\n    \"index\": \"21004\",\n    \"hex\": \"0x8000520c\",\n    \"symbol\": \"C4EI\",\n    \"name\": \"c4ei\"\n  },\n  \"21337\": {\n    \"index\": \"21337\",\n    \"hex\": \"0x80005359\",\n    \"symbol\": \"XAH\",\n    \"name\": \"Xahau\"\n  },\n  \"21888\": {\n    \"index\": \"21888\",\n    \"hex\": \"0x80005580\",\n    \"symbol\": \"PAC\",\n    \"name\": \"Pactus\"\n  },\n  \"22504\": {\n    \"index\": \"22504\",\n    \"hex\": \"0x800057e8\",\n    \"symbol\": \"PWR\",\n    \"name\": \"PWRcoin\"\n  },\n  \"23000\": {\n    \"index\": \"23000\",\n    \"hex\": \"0x800059d8\",\n    \"symbol\": \"EPIC\",\n    \"name\": \"Epic Cash\"\n  },\n  \"25252\": {\n    \"index\": \"25252\",\n    \"hex\": \"0x800062a4\",\n    \"symbol\": \"BELL\",\n    \"name\": \"Bellcoin\"\n  },\n  \"25718\": {\n    \"index\": \"25718\",\n    \"hex\": \"0x80006476\",\n    \"symbol\": \"CHX\",\n    \"name\": \"Own\"\n  },\n  \"26417\": {\n    \"index\": \"26417\",\n    \"hex\": \"0x80006731\",\n    \"symbol\": \"G1\",\n    \"name\": \"Ğ1\"\n  },\n  \"29223\": {\n    \"index\": \"29223\",\n    \"hex\": \"0x80007227\",\n    \"symbol\": \"NEXA\",\n    \"name\": \"Nexa\"\n  },\n  \"30001\": {\n    \"index\": \"30001\",\n    \"hex\": \"0x80007531\",\n    \"symbol\": \"---\",\n    \"name\": \"reserved\"\n  },\n  \"31102\": {\n    \"index\": \"31102\",\n    \"hex\": \"0x8000797e\",\n    \"symbol\": \"ESN\",\n    \"name\": \"EtherSocial Network\"\n  },\n  \"31337\": {\n    \"index\": \"31337\",\n    \"hex\": \"0x80007a69\",\n    \"symbol\": \"\",\n    \"name\": \"ThePower\"\n  },\n  \"33416\": {\n    \"index\": \"33416\",\n    \"hex\": \"0x80008288\",\n    \"symbol\": \"TEO\",\n    \"name\": \"Trust Eth reOrigin\"\n  },\n  \"33878\": {\n    \"index\": \"33878\",\n    \"hex\": \"0x80008456\",\n    \"symbol\": \"BTCS\",\n    \"name\": \"Bitcoin Stake\"\n  },\n  \"34952\": {\n    \"index\": \"34952\",\n    \"hex\": \"0x80008888\",\n    \"symbol\": \"BTT\",\n    \"name\": \"ByteTrade\"\n  },\n  \"37992\": {\n    \"index\": \"37992\",\n    \"hex\": \"0x80009468\",\n    \"symbol\": \"FXTC\",\n    \"name\": \"FixedTradeCoin\"\n  },\n  \"39321\": {\n    \"index\": \"39321\",\n    \"hex\": \"0x80009999\",\n    \"symbol\": \"AMA\",\n    \"name\": \"Amabig\"\n  },\n  \"42069\": {\n    \"index\": \"42069\",\n    \"hex\": \"0x8000a455\",\n    \"symbol\": \"FACT\",\n    \"name\": \"FACT0RN\"\n  },\n  \"43028\": {\n    \"index\": \"43028\",\n    \"hex\": \"0x8000a814\",\n    \"symbol\": \"AXIV\",\n    \"name\": \"AXIV\"\n  },\n  \"47803\": {\n    \"index\": \"47803\",\n    \"hex\": \"0x8000babb\",\n    \"symbol\": \"BAX\",\n    \"name\": \"BAX\"\n  },\n  \"49262\": {\n    \"index\": \"49262\",\n    \"hex\": \"0x8000c06e\",\n    \"symbol\": \"EVE\",\n    \"name\": \"evan\"\n  },\n  \"49344\": {\n    \"index\": \"49344\",\n    \"hex\": \"0x8000c0c0\",\n    \"symbol\": \"STASH\",\n    \"name\": \"STASH\"\n  },\n  \"52752\": {\n    \"index\": \"52752\",\n    \"hex\": \"0x8000ce10\",\n    \"symbol\": \"CELO\",\n    \"name\": \"Celo\"\n  },\n  \"61616\": {\n    \"index\": \"61616\",\n    \"hex\": \"0x8000f0b0\",\n    \"symbol\": \"TH\",\n    \"name\": \"TianHe\"\n  },\n  \"65536\": {\n    \"index\": \"65536\",\n    \"hex\": \"0x80010000\",\n    \"symbol\": \"KETH\",\n    \"name\": \"Krypton World\"\n  },\n  \"69420\": {\n    \"index\": \"69420\",\n    \"hex\": \"0x80010f2c\",\n    \"symbol\": \"GRLC\",\n    \"name\": \"Garlicoin\"\n  },\n  \"70007\": {\n    \"index\": \"70007\",\n    \"hex\": \"0x80011177\",\n    \"symbol\": \"GWL\",\n    \"name\": \"Gewel\"\n  },\n  \"77777\": {\n    \"index\": \"77777\",\n    \"hex\": \"0x80012fd1\",\n    \"symbol\": \"ZYN\",\n    \"name\": \"Wethio\"\n  },\n  \"83293\": {\n    \"index\": \"83293\",\n    \"hex\": \"0x8001455d\",\n    \"symbol\": \"QUBIC\",\n    \"name\": \"Qubic\"\n  },\n  \"88888\": {\n    \"index\": \"88888\",\n    \"hex\": \"0x80015b38\",\n    \"symbol\": \"RYO\",\n    \"name\": \"c0ban\"\n  },\n  \"99999\": {\n    \"index\": \"99999\",\n    \"hex\": \"0x8001869f\",\n    \"symbol\": \"WICC\",\n    \"name\": \"Waykichain\"\n  },\n  \"100500\": {\n    \"index\": \"100500\",\n    \"hex\": \"0x80018894\",\n    \"symbol\": \"HOME\",\n    \"name\": \"HomeCoin\"\n  },\n  \"101010\": {\n    \"index\": \"101010\",\n    \"hex\": \"0x80018a92\",\n    \"symbol\": \"STC\",\n    \"name\": \"Starcoin\"\n  },\n  \"104109\": {\n    \"index\": \"104109\",\n    \"hex\": \"0x800196ad\",\n    \"symbol\": \"\",\n    \"name\": \"Seed Hypermedia\"\n  },\n  \"105105\": {\n    \"index\": \"105105\",\n    \"hex\": \"0x80019a91\",\n    \"symbol\": \"STRAX\",\n    \"name\": \"Strax\"\n  },\n  \"111111\": {\n    \"index\": \"111111\",\n    \"hex\": \"0x8001b207\",\n    \"symbol\": \"KAS\",\n    \"name\": \"Kaspa\"\n  },\n  \"121337\": {\n    \"index\": \"121337\",\n    \"hex\": \"0x8001d9f9\",\n    \"symbol\": \"KLS\",\n    \"name\": \"Karlsen\"\n  },\n  \"161803\": {\n    \"index\": \"161803\",\n    \"hex\": \"0x8002780b\",\n    \"symbol\": \"APTA\",\n    \"name\": \"Bloqs4Good\"\n  },\n  \"200625\": {\n    \"index\": \"200625\",\n    \"hex\": \"0x80030fb1\",\n    \"symbol\": \"AKA\",\n    \"name\": \"Akroma\"\n  },\n  \"224433\": {\n    \"index\": \"224433\",\n    \"hex\": \"0x80036cb1\",\n    \"symbol\": \"CONET\",\n    \"name\": \"CONET Holesky Network\"\n  },\n  \"246529\": {\n    \"index\": \"246529\",\n    \"hex\": \"0x8003c301\",\n    \"symbol\": \"ATS\",\n    \"name\": \"ARTIS sigma1\"\n  },\n  \"261131\": {\n    \"index\": \"261131\",\n    \"hex\": \"0x8003fc0b\",\n    \"symbol\": \"ZAMA\",\n    \"name\": \"Zama\"\n  },\n  \"314159\": {\n    \"index\": \"314159\",\n    \"hex\": \"0x8004cb2f\",\n    \"symbol\": \"PI\",\n    \"name\": \"Pi Network\"\n  },\n  \"333332\": {\n    \"index\": \"333332\",\n    \"hex\": \"0x80051614\",\n    \"symbol\": \"VALUE\",\n    \"name\": \"Value Chain\"\n  },\n  \"333333\": {\n    \"index\": \"333333\",\n    \"hex\": \"0x80051615\",\n    \"symbol\": \"3333\",\n    \"name\": \"Pi Value Consensus\"\n  },\n  \"424242\": {\n    \"index\": \"424242\",\n    \"hex\": \"0x80067932\",\n    \"symbol\": \"X42\",\n    \"name\": \"x42\"\n  },\n  \"534352\": {\n    \"index\": \"534352\",\n    \"hex\": \"0x80082750\",\n    \"symbol\": \"SCR\",\n    \"name\": \"Scroll\"\n  },\n  \"666666\": {\n    \"index\": \"666666\",\n    \"hex\": \"0x800a2c2a\",\n    \"symbol\": \"VITE\",\n    \"name\": \"Vite\"\n  },\n  \"696365\": {\n    \"index\": \"696365\",\n    \"hex\": \"0x800b3206\",\n    \"symbol\": \"ICE\",\n    \"name\": \"Ice Network\"\n  },\n  \"888888\": {\n    \"index\": \"888888\",\n    \"hex\": \"0x800d9038\",\n    \"symbol\": \"SEA\",\n    \"name\": \"Second Exchange Alliance\"\n  },\n  \"999999\": {\n    \"index\": \"999999\",\n    \"hex\": \"0x800c9061\",\n    \"symbol\": \"WTC\",\n    \"name\": \"WaltonChain\"\n  },\n  \"1048576\": {\n    \"index\": \"1048576\",\n    \"hex\": \"0x80100000\",\n    \"symbol\": \"AMAX\",\n    \"name\": \"Armonia Meta Chain\"\n  },\n  \"1171337\": {\n    \"index\": \"1171337\",\n    \"hex\": \"0x8011df89\",\n    \"symbol\": \"ILT\",\n    \"name\": \"iOlite\"\n  },\n  \"1313114\": {\n    \"index\": \"1313114\",\n    \"hex\": \"0x8014095a\",\n    \"symbol\": \"ETHO\",\n    \"name\": \"Etho Protocol\"\n  },\n  \"1313500\": {\n    \"index\": \"1313500\",\n    \"hex\": \"0x80140adc\",\n    \"symbol\": \"XERO\",\n    \"name\": \"Xerom\"\n  },\n  \"1712144\": {\n    \"index\": \"1712144\",\n    \"hex\": \"0x801a2010\",\n    \"symbol\": \"LAX\",\n    \"name\": \"LAPO\"\n  },\n  \"3924011\": {\n    \"index\": \"3924011\",\n    \"hex\": \"0x803be02b\",\n    \"symbol\": \"EPK\",\n    \"name\": \"EPIK Protocol\"\n  },\n  \"4741444\": {\n    \"index\": \"4741444\",\n    \"hex\": \"0x80485944\",\n    \"symbol\": \"HYD\",\n    \"name\": \"Hydra Token\"\n  },\n  \"5249353\": {\n    \"index\": \"5249353\",\n    \"hex\": \"0x80501949\",\n    \"symbol\": \"BCO\",\n    \"name\": \"BitcoinOre\"\n  },\n  \"5249354\": {\n    \"index\": \"5249354\",\n    \"hex\": \"0x8050194a\",\n    \"symbol\": \"BHD\",\n    \"name\": \"BitcoinHD\"\n  },\n  \"5264462\": {\n    \"index\": \"5264462\",\n    \"hex\": \"0x8050544e\",\n    \"symbol\": \"PTN\",\n    \"name\": \"PalletOne\"\n  },\n  \"5655640\": {\n    \"index\": \"5655640\",\n    \"hex\": \"0x80564c58\",\n    \"symbol\": \"VLX\",\n    \"name\": \"Velas\"\n  },\n  \"5718350\": {\n    \"index\": \"5718350\",\n    \"hex\": \"0x8057414e\",\n    \"symbol\": \"WAN\",\n    \"name\": \"Wanchain\"\n  },\n  \"5741564\": {\n    \"index\": \"5741564\",\n    \"hex\": \"0x80579bfc\",\n    \"symbol\": \"WAVES\",\n    \"name\": \"Waves\"\n  },\n  \"5741565\": {\n    \"index\": \"5741565\",\n    \"hex\": \"0x80579bfd\",\n    \"symbol\": \"WEST\",\n    \"name\": \"Waves Enterprise\"\n  },\n  \"6382179\": {\n    \"index\": \"6382179\",\n    \"hex\": \"0x80616263\",\n    \"symbol\": \"ABC\",\n    \"name\": \"Abcmint\"\n  },\n  \"6517357\": {\n    \"index\": \"6517357\",\n    \"hex\": \"0x8063726d\",\n    \"symbol\": \"CRM\",\n    \"name\": \"Creamcoin\"\n  },\n  \"7171666\": {\n    \"index\": \"7171666\",\n    \"hex\": \"0x806d6e52\",\n    \"symbol\": \"BROCK\",\n    \"name\": \"Bitrock\"\n  },\n  \"7562605\": {\n    \"index\": \"7562605\",\n    \"hex\": \"0x8073656d\",\n    \"symbol\": \"SEM\",\n    \"name\": \"Semux\"\n  },\n  \"7567736\": {\n    \"index\": \"7567736\",\n    \"hex\": \"0x80737978\",\n    \"symbol\": \"ION\",\n    \"name\": \"ION\"\n  },\n  \"7777777\": {\n    \"index\": \"7777777\",\n    \"hex\": \"0x8076adf1\",\n    \"symbol\": \"FCT\",\n    \"name\": \"FirmaChain\"\n  },\n  \"7825266\": {\n    \"index\": \"7825266\",\n    \"hex\": \"0x80776772\",\n    \"symbol\": \"WGR\",\n    \"name\": \"WGR\"\n  },\n  \"7825267\": {\n    \"index\": \"7825267\",\n    \"hex\": \"0x80776773\",\n    \"symbol\": \"OBSR\",\n    \"name\": \"OBServer\"\n  },\n  \"8163271\": {\n    \"index\": \"8163271\",\n    \"hex\": \"0x807c8fc7\",\n    \"symbol\": \"AFS\",\n    \"name\": \"ANFS\"\n  },\n  \"11259375\": {\n    \"index\": \"11259375\",\n    \"hex\": \"0x80abcdef\",\n    \"symbol\": \"LBR\",\n    \"name\": \"0L\"\n  },\n  \"15118976\": {\n    \"index\": \"15118976\",\n    \"hex\": \"0x80e6b280\",\n    \"symbol\": \"XDS\",\n    \"name\": \"XDS\"\n  },\n  \"20230101\": {\n    \"index\": \"20230101\",\n    \"hex\": \"0x8134afd5\",\n    \"symbol\": \"ROH\",\n    \"name\": \"Rooch\"\n  },\n  \"20240430\": {\n    \"index\": \"20240430\",\n    \"hex\": \"0x8134d82e\",\n    \"symbol\": \"NLK\",\n    \"name\": \"NuLinkCoin\"\n  },\n  \"61717561\": {\n    \"index\": \"61717561\",\n    \"hex\": \"0x83adbc39\",\n    \"symbol\": \"AQUA\",\n    \"name\": \"Aquachain\"\n  },\n  \"88888888\": {\n    \"index\": \"88888888\",\n    \"hex\": \"0x854c5638\",\n    \"symbol\": \"HATCH\",\n    \"name\": \"Hatch\"\n  },\n  \"91927009\": {\n    \"index\": \"91927009\",\n    \"hex\": \"0x857ab1e1\",\n    \"symbol\": \"kUSD\",\n    \"name\": \"kUSD\"\n  },\n  \"99999996\": {\n    \"index\": \"99999996\",\n    \"hex\": \"0x85f5e0fc\",\n    \"symbol\": \"GENS\",\n    \"name\": \"GENS\"\n  },\n  \"99999997\": {\n    \"index\": \"99999997\",\n    \"hex\": \"0x85f5e0fd\",\n    \"symbol\": \"EQ\",\n    \"name\": \"EQ\"\n  },\n  \"99999998\": {\n    \"index\": \"99999998\",\n    \"hex\": \"0x85f5e0fe\",\n    \"symbol\": \"FLUID\",\n    \"name\": \"Fluid Chains\"\n  },\n  \"99999999\": {\n    \"index\": \"99999999\",\n    \"hex\": \"0x85f5e0ff\",\n    \"symbol\": \"QKC\",\n    \"name\": \"QuarkChain\"\n  },\n  \"608589380\": {\n    \"index\": \"608589380\",\n    \"hex\": \"0xa4465644\",\n    \"symbol\": \"FVDC\",\n    \"name\": \"ForumCoin\"\n  },\n  \"1179993420\": {\n    \"index\": \"1179993420\",\n    \"hex\": \"0xc655454c\",\n    \"symbol\": \"\",\n    \"name\": \"Fuel\"\n  },\n  \"1179993421\": {\n    \"index\": \"1179993421\",\n    \"hex\": \"0xc655454d\",\n    \"symbol\": \"TTNC\",\n    \"name\": \"TakeTitan\"\n  },\n  \"1179993431\": {\n    \"index\": \"1179993431\",\n    \"hex\": \"0xc6554557\",\n    \"symbol\": \"MTGBP\",\n    \"name\": \"MTGBP\"\n  },\n  \"1179993441\": {\n    \"index\": \"1179993441\",\n    \"hex\": \"0xc6554561\",\n    \"symbol\": \"QFS\",\n    \"name\": \"Qfs\"\n  }\n}\n","let { urlAlphabet } = require('./url-alphabet/index.cjs')\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nmodule.exports = { urlAlphabet }\n","\"use strict\";\n/**\n * A `StructFailure` represents a single specific failure in validation.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StructError = void 0;\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const cause = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? cause);\n        if (explanation !== null && explanation !== undefined) {\n            this.cause = cause;\n        }\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\nexports.StructError = StructError;\n//# sourceMappingURL=error.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./error.cjs\"), exports);\n__exportStar(require(\"./struct.cjs\"), exports);\n__exportStar(require(\"./structs/coercions.cjs\"), exports);\n__exportStar(require(\"./structs/refinements.cjs\"), exports);\n__exportStar(require(\"./structs/types.cjs\"), exports);\n__exportStar(require(\"./structs/utilities.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.is = exports.mask = exports.create = exports.assert = exports.Struct = void 0;\nconst error_js_1 = require(\"./error.cjs\");\nconst utils_js_1 = require(\"./utils.cjs\");\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () {\n            /* noop */\n        }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return (0, utils_js_1.toFailures)(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return (0, utils_js_1.toFailures)(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\nexports.Struct = Struct;\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\nexports.assert = assert;\n/**\n * Create a value with the coercion logic of struct and validate it.\n *\n * @param value - The value to coerce and validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n * @returns The coerced and validated value.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\nexports.create = create;\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n *\n * @param value - The value to mask.\n * @param struct - The struct to mask against.\n * @param message - An optional message to include in the error.\n * @returns The masked value.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\nexports.mask = mask;\n/**\n * Check if a value passes a struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @returns `true` if the value passes the struct, `false` otherwise.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\nexports.is = is;\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param options - Optional settings.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @returns A tuple containing the error (if invalid) and the validated value.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = (0, utils_js_1.run)(value, struct, options);\n    const tuple = (0, utils_js_1.shiftIterator)(tuples);\n    if (tuple[0]) {\n        const error = new error_js_1.StructError(tuple[0], function* () {\n            for (const innerTuple of tuples) {\n                if (innerTuple[0]) {\n                    yield innerTuple[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    const validatedValue = tuple[1];\n    return [undefined, validatedValue];\n}\nexports.validate = validate;\n//# sourceMappingURL=struct.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimmed = exports.defaulted = exports.coerce = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst utils_js_1 = require(\"../utils.cjs\");\nconst types_js_1 = require(\"./types.cjs\");\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param condition - A struct that the input must pass to be coerced.\n * @param coercer - A function that takes the input and returns the coerced\n * value.\n * @returns A new struct that will coerce its input before validating it.\n */\nfunction coerce(struct, condition, coercer) {\n    return new struct_js_1.Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return (0, struct_js_1.is)(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\nexports.coerce = coerce;\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param fallback - The value to use when the input is `undefined`.\n * @param options - An optional options object.\n * @param options.strict - When `true`, the fallback will only be used when the\n * input is `undefined`. When `false`, the fallback will be used when the input\n * is `undefined` or when the input is a plain object and the fallback is a\n * plain object, and any keys in the fallback are missing from the input.\n * @returns A new struct that will replace `undefined` inputs with a default.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, (0, types_js_1.unknown)(), (value) => {\n        const result = typeof fallback === 'function' ? fallback() : fallback;\n        if (value === undefined) {\n            return result;\n        }\n        if (!options.strict && (0, utils_js_1.isPlainObject)(value) && (0, utils_js_1.isPlainObject)(result)) {\n            const ret = { ...value };\n            let changed = false;\n            for (const key in result) {\n                if (ret[key] === undefined) {\n                    ret[key] = result[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return value;\n    });\n}\nexports.defaulted = defaulted;\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will trim string inputs before validating them.\n */\nfunction trimmed(struct) {\n    return coerce(struct, (0, types_js_1.string)(), (value) => value.trim());\n}\nexports.trimmed = trimmed;\n//# sourceMappingURL=coercions.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.refine = exports.size = exports.pattern = exports.nonempty = exports.min = exports.max = exports.empty = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst utils_js_1 = require(\"../utils.cjs\");\n/**\n * Ensure that a string, array, map, or set is empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept empty values.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nexports.empty = empty;\n/**\n * Get the size of a string, array, map, or set.\n *\n * @param value - The value to measure.\n * @returns The size of the value.\n */\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    return value.length;\n}\n/**\n * Ensure that a number or date is below a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The maximum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly less than\n * the threshold. When `false`, the input must be less than or equal to the\n * threshold.\n * @returns A new struct that will only accept values below the threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                }${threshold} but received \\`${value}\\``;\n    });\n}\nexports.max = max;\n/**\n * Ensure that a number or date is above a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The minimum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly greater\n * than the threshold. When `false`, the input must be greater than or equal to\n * the threshold.\n * @returns A new struct that will only accept values above the threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                }${threshold} but received \\`${value}\\``;\n    });\n}\nexports.min = min;\n/**\n * Ensure that a string, array, map or set is not empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept non-empty values.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\nexports.nonempty = nonempty;\n/**\n * Ensure that a string matches a regular expression.\n *\n * @param struct - The struct to augment.\n * @param regexp - The regular expression to match against.\n * @returns A new struct that will only accept strings matching the regular\n * expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\nexports.pattern = pattern;\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length,\n * or time) between `min` and `max`.\n *\n * @param struct - The struct to augment.\n * @param minimum - The minimum size that the input can be.\n * @param maximum - The maximum size that the input can be.\n * @returns A new struct that will only accept values within the given size\n * range.\n */\nfunction size(struct, minimum, maximum = minimum) {\n    const expected = `Expected a ${struct.type}`;\n    const of = minimum === maximum\n        ? `of \\`${minimum}\\``\n        : `between \\`${minimum}\\` and \\`${maximum}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((minimum <= value && value <= maximum) ||\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            const { size } = value;\n            return ((minimum <= size && size <= maximum) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        const { length } = value;\n        return ((minimum <= length && length <= maximum) ||\n            `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n    });\n}\nexports.size = size;\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n *\n * @param struct - The struct to augment.\n * @param name - The name of the refinement.\n * @param refiner - The refiner function.\n * @returns A new struct that will run the refiner function after the existing\n * validation.\n */\nfunction refine(struct, name, refiner) {\n    return new struct_js_1.Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = (0, utils_js_1.toFailures)(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\nexports.refine = refine;\n//# sourceMappingURL=refinements.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unknown = exports.union = exports.type = exports.tuple = exports.string = exports.set = exports.regexp = exports.record = exports.optional = exports.object = exports.number = exports.nullable = exports.never = exports.map = exports.literal = exports.intersection = exports.integer = exports.instance = exports.func = exports.enums = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst utils_js_1 = require(\"../utils.cjs\");\nconst utilities_js_1 = require(\"./utilities.cjs\");\n/**\n * Ensure that any value passes validation.\n *\n * @returns A struct that will always pass validation.\n */\nfunction any() {\n    return (0, utilities_js_1.define)('any', () => true);\n}\nexports.any = any;\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @param Element - The struct to validate each element in the array against.\n * @returns A new struct that will only accept arrays of the given type.\n */\nfunction array(Element) {\n    return new struct_js_1.Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [index, arrayValue] of value.entries()) {\n                    yield [index, arrayValue, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.array = array;\n/**\n * Ensure that a value is a bigint.\n *\n * @returns A new struct that will only accept bigints.\n */\nfunction bigint() {\n    return (0, utilities_js_1.define)('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\nexports.bigint = bigint;\n/**\n * Ensure that a value is a boolean.\n *\n * @returns A new struct that will only accept booleans.\n */\nfunction boolean() {\n    return (0, utilities_js_1.define)('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\nexports.boolean = boolean;\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n *\n * @returns A new struct that will only accept valid `Date` objects.\n */\nfunction date() {\n    return (0, utilities_js_1.define)('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.date = date;\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((value) => (0, utils_js_1.print)(value)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new struct_js_1.Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.enums = enums;\n/**\n * Ensure that a value is a function.\n *\n * @returns A new struct that will only accept functions.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction func() {\n    return (0, utilities_js_1.define)('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.func = func;\n/**\n * Ensure that a value is an instance of a specific class.\n *\n * @param Class - The class that the value must be an instance of.\n * @returns A new struct that will only accept instances of the given class.\n */\nfunction instance(Class) {\n    return (0, utilities_js_1.define)('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.instance = instance;\n/**\n * Ensure that a value is an integer.\n *\n * @returns A new struct that will only accept integers.\n */\nfunction integer() {\n    return (0, utilities_js_1.define)('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.integer = integer;\n/**\n * Ensure that a value matches all of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match all of the\n * given structs.\n */\nfunction intersection(Structs) {\n    return new struct_js_1.Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, context) {\n            for (const { entries } of Structs) {\n                yield* entries(value, context);\n            }\n        },\n        *validator(value, context) {\n            for (const { validator } of Structs) {\n                yield* validator(value, context);\n            }\n        },\n        *refiner(value, context) {\n            for (const { refiner } of Structs) {\n                yield* refiner(value, context);\n            }\n        },\n    });\n}\nexports.intersection = intersection;\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nfunction literal(constant) {\n    const description = (0, utils_js_1.print)(constant);\n    const valueType = typeof constant;\n    return new struct_js_1.Struct({\n        type: 'literal',\n        schema: valueType === 'string' ||\n            valueType === 'number' ||\n            valueType === 'boolean'\n            ? constant\n            : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.literal = literal;\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @param Key - The struct to validate each key in the map against.\n * @param Value - The struct to validate each value in the map against.\n * @returns A new struct that will only accept `Map` objects.\n */\nfunction map(Key, Value) {\n    return new struct_js_1.Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [mapKey, mapValue] of value.entries()) {\n                    yield [mapKey, mapKey, Key];\n                    yield [mapKey, mapValue, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.map = map;\n/**\n * Ensure that no value ever passes validation.\n *\n * @returns A new struct that will never pass validation.\n */\nfunction never() {\n    return (0, utilities_js_1.define)('never', () => false);\n}\nexports.never = never;\n/**\n * Augment an existing struct to allow `null` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `null` values.\n */\nfunction nullable(struct) {\n    return new struct_js_1.Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\nexports.nullable = nullable;\n/**\n * Ensure that a value is a number.\n *\n * @returns A new struct that will only accept numbers.\n */\nfunction number() {\n    return (0, utilities_js_1.define)('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.number = number;\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new struct_js_1.Struct({\n        type: 'object',\n        schema: schema ?? null,\n        *entries(value) {\n            if (schema && (0, utils_js_1.isObject)(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return ((0, utils_js_1.isObject)(value) || `Expected an object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n        coercer(value) {\n            return (0, utils_js_1.isObject)(value) ? { ...value } : value;\n        },\n    });\n}\nexports.object = object;\n/**\n * Augment a struct to allow `undefined` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `undefined` values.\n */\nfunction optional(struct) {\n    return new struct_js_1.Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\nexports.optional = optional;\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * @param Key - The struct to validate each key in the record against.\n * @param Value - The struct to validate each value in the record against.\n * @returns A new struct that will only accept objects.\n */\nfunction record(Key, Value) {\n    return new struct_js_1.Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if ((0, utils_js_1.isObject)(value)) {\n                // eslint-disable-next-line guard-for-in\n                for (const objectKey in value) {\n                    const objectValue = value[objectKey];\n                    yield [objectKey, objectKey, Key];\n                    yield [objectKey, objectValue, Value];\n                }\n            }\n        },\n        validator(value) {\n            return ((0, utils_js_1.isObject)(value) || `Expected an object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.record = record;\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n *\n * @returns A new struct that will only accept `RegExp` objects.\n */\nfunction regexp() {\n    return (0, utilities_js_1.define)('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nexports.regexp = regexp;\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @param Element - The struct to validate each element in the set against.\n * @returns A new struct that will only accept `Set` objects.\n */\nfunction set(Element) {\n    return new struct_js_1.Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const setValue of value) {\n                    yield [setValue, setValue, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.set = set;\n/**\n * Ensure that a value is a string.\n *\n * @returns A new struct that will only accept strings.\n */\nfunction string() {\n    return (0, utilities_js_1.define)('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.string = string;\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept tuples of the given types.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new struct_js_1.Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.tuple = tuple;\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new struct_js_1.Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if ((0, utils_js_1.isObject)(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return ((0, utils_js_1.isObject)(value) || `Expected an object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n        coercer(value) {\n            return (0, utils_js_1.isObject)(value) ? { ...value } : value;\n        },\n    });\n}\nexports.type = type;\n/**\n * Ensure that a value matches one of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match one of the\n * given structs.\n */\nfunction union(Structs) {\n    const description = Structs.map((struct) => struct.type).join(' | ');\n    return new struct_js_1.Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const InnerStruct of Structs) {\n                const [error, coerced] = InnerStruct.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const InnerStruct of Structs) {\n                const [...tuples] = (0, utils_js_1.run)(value, InnerStruct, ctx);\n                const [first] = tuples;\n                if (!first?.[0]) {\n                    return [];\n                }\n                for (const [failure] of tuples) {\n                    if (failure) {\n                        failures.push(failure);\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${(0, utils_js_1.print)(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\nexports.union = union;\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n *\n * @returns A struct that will always pass validation.\n */\nfunction unknown() {\n    return (0, utilities_js_1.define)('unknown', () => true);\n}\nexports.unknown = unknown;\n//# sourceMappingURL=types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pick = exports.partial = exports.omit = exports.lazy = exports.dynamic = exports.deprecated = exports.define = exports.assign = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst types_js_1 = require(\"./types.cjs\");\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param Structs - The structs to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nfunction assign(...Structs) {\n    const isType = Structs[0]?.type === 'type';\n    const schemas = Structs.map(({ schema }) => schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? (0, types_js_1.type)(schema) : (0, types_js_1.object)(schema);\n}\nexports.assign = assign;\n/**\n * Define a new struct type with a custom validation function.\n *\n * @param name - The name of the struct type.\n * @param validator - The validation function.\n * @returns A new struct type.\n */\nfunction define(name, validator) {\n    return new struct_js_1.Struct({ type: name, schema: null, validator });\n}\nexports.define = define;\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n *\n * @param struct - The struct to augment.\n * @param log - The function to call when the value is not `undefined`.\n * @returns A new struct that will only accept `undefined` or values that pass\n * the input struct.\n */\nfunction deprecated(struct, log) {\n    return new struct_js_1.Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            log(value, ctx);\n            return struct.validator(value, ctx);\n        },\n    });\n}\nexports.deprecated = deprecated;\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with dynamic validation logic.\n */\nfunction dynamic(fn) {\n    return new struct_js_1.Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\nexports.dynamic = dynamic;\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with lazily evaluated validation logic.\n */\nfunction lazy(fn) {\n    let struct;\n    return new struct_js_1.Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\nexports.lazy = lazy;\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to omit.\n * @returns A new struct that will not accept the input keys.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return (0, types_js_1.type)(subschema);\n        default:\n            return (0, types_js_1.object)(subschema);\n    }\n}\nexports.omit = omit;\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept the input keys as `undefined`.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof struct_js_1.Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    // eslint-disable-next-line guard-for-in\n    for (const key in schema) {\n        schema[key] = (0, types_js_1.optional)(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return (0, types_js_1.type)(schema);\n    }\n    return (0, types_js_1.object)(schema);\n}\nexports.partial = partial;\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to pick.\n * @returns A new struct that will only accept the input keys.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return (0, types_js_1.type)(subschema);\n        default:\n            return (0, types_js_1.object)(subschema);\n    }\n}\nexports.pick = pick;\n//# sourceMappingURL=utilities.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = exports.toFailures = exports.toFailure = exports.shiftIterator = exports.print = exports.isPlainObject = exports.isObject = void 0;\n/**\n * Check if a value is an iterator.\n *\n * @param value - The value to check.\n * @returns Whether the value is an iterator.\n */\nfunction isIterable(value) {\n    return isObject(value) && typeof value[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nfunction isObject(value) {\n    return typeof value === 'object' && value !== null;\n}\nexports.isObject = isObject;\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Return a value as a printable string.\n *\n * @param value - The value to print.\n * @returns The value as a string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\nexports.print = print;\n/**\n * Shift (remove and return) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n *\n * @param input - The iterator to shift.\n * @returns The first value of the iterator, or `undefined` if the iterator is\n * empty.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\nexports.shiftIterator = shiftIterator;\n/**\n * Convert a single validation result to a failure.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @returns A failure if the result is a failure, or `undefined` if the result\n * is a success.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return undefined;\n    }\n    else if (result === false) {\n        // eslint-disable-next-line no-param-reassign\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        // eslint-disable-next-line no-param-reassign\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\nexports.toFailure = toFailure;\n/**\n * Convert a validation result to an iterable of failures.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @yields The failures.\n * @returns An iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        // eslint-disable-next-line no-param-reassign\n        result = [result];\n    }\n    for (const validationResult of result) {\n        const failure = toFailure(validationResult, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\nexports.toFailures = toFailures;\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n *\n * @param value - The value to check.\n * @param struct - The struct to check against.\n * @param options - Optional settings.\n * @param options.path - The path to the value in the input data.\n * @param options.branch - The branch of the value in the input data.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @yields An iterator of failures or success.\n * @returns An iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const context = { path, branch };\n    if (coerce) {\n        // eslint-disable-next-line no-param-reassign\n        value = struct.coercer(value, context);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, context)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    // eslint-disable-next-line prefer-const\n    for (let [innerKey, innerValue, innerStruct] of struct.entries(value, context)) {\n        const iterable = run(innerValue, innerStruct, {\n            path: innerKey === undefined ? path : [...path, innerKey],\n            branch: innerKey === undefined ? branch : [...branch, innerValue],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const result of iterable) {\n            if (result[0]) {\n                status =\n                    result[0].refinement === null || result[0].refinement === undefined\n                        ? 'not_valid'\n                        : 'not_refined';\n                yield [result[0], undefined];\n            }\n            else if (coerce) {\n                innerValue = result[1];\n                if (innerKey === undefined) {\n                    // eslint-disable-next-line no-param-reassign\n                    value = innerValue;\n                }\n                else if (value instanceof Map) {\n                    value.set(innerKey, innerValue);\n                }\n                else if (value instanceof Set) {\n                    value.add(innerValue);\n                }\n                else if (isObject(value)) {\n                    if (innerValue !== undefined || innerKey in value) {\n                        value[innerKey] = innerValue;\n                    }\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, context)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\nexports.run = run;\n//# sourceMappingURL=utils.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEventEmitterProxy = void 0;\nconst filterNoop = () => true;\nconst internalEvents = ['newListener', 'removeListener'];\nconst externalEventFilter = (name) => !internalEvents.includes(name);\n/**\n * Creates a proxy object that initially points to the given object but whose\n * target can be substituted with another object later using its `setTarget`\n * method. In addition, when the target is changed, event listeners which have\n * been attached to the target will be detached and migrated to the new target.\n * Note that events attached to the eventEmitter (not the proxy) will not be\n * migrated or removed when calling `setTarget`.\n *\n * @template Type - An object that implements at least `eventNames`, `rawListeners`,\n * and `removeAllListeners` from [Node's EventEmitter interface](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/node/events.d.ts).\n * @param initialTarget - The initial object you want to wrap.\n * @param opts - The options.\n * @param opts.eventFilter - Usually, listeners for all events will be migrated\n * from old targets to new targets, but this function can be used to select\n * which events you want to migrate. If you pass `'skipInternal'`, then\n * `newListener` and `removeListener` will be excluded.\n * @returns The proxy object.\n */\nfunction createEventEmitterProxy(initialTarget, { eventFilter: givenEventFilter = filterNoop, } = {}) {\n    // parse options\n    const eventFilter = givenEventFilter === 'skipInternal'\n        ? externalEventFilter\n        : givenEventFilter;\n    if (typeof eventFilter !== 'function') {\n        throw new Error('createEventEmitterProxy - Invalid eventFilter');\n    }\n    let eventsAdded = [];\n    let target = initialTarget;\n    /**\n     * Changes the object that the proxy wraps.\n     *\n     * @param newTarget - The new object.\n     */\n    let setTarget = (newTarget) => {\n        const oldTarget = target;\n        target = newTarget;\n        // migrate listeners\n        eventsAdded.forEach(({ name, handler, addedWith, filtered }) => {\n            if (!filtered) {\n                newTarget[addedWith](name, handler);\n            }\n            oldTarget.off(name, handler);\n        });\n    };\n    const removeEvent = (name, handler) => {\n        eventsAdded = eventsAdded.filter((addedEvent) => name !== addedEvent.name ||\n            (handler !== addedEvent.handler &&\n                handler !== addedEvent.unwrappedHandler));\n    };\n    const proxy = new Proxy(target, {\n        // @ts-expect-error We are providing a different signature than the `get`\n        // option as defined in the Proxy interface; specifically, we've limited\n        // `name` so that it can't be arbitrary. Theoretically this is inaccurate,\n        // but because we've constrained what the `target` can be, that effectively\n        // constraints the allowed properties as well.\n        get(_target, name, receiver) {\n            // override `setTarget` access\n            if (name === 'setTarget') {\n                return setTarget;\n            }\n            const value = target[name];\n            if (typeof value === 'function') {\n                return function (...args) {\n                    const unwrappedHandler = args[1];\n                    if (name === 'once') {\n                        const wrappedHandler = (...handlerArgs) => {\n                            removeEvent(args[0], wrappedHandler);\n                            return unwrappedHandler(...handlerArgs);\n                        };\n                        args[1] = wrappedHandler;\n                    }\n                    if (name === 'on' ||\n                        name === 'addListener' ||\n                        name === 'prependListener' ||\n                        name === 'once') {\n                        eventsAdded.push({\n                            addedWith: name,\n                            name: args[0],\n                            unwrappedHandler,\n                            handler: args[1],\n                            filtered: !eventFilter(args[0]),\n                        });\n                    }\n                    else if (name === 'off' || name === 'removeListener') {\n                        const eventAdded = eventsAdded.find(({ name: addedName, unwrappedHandler: addedUnwrappedHandler }) => addedName === args[0] && addedUnwrappedHandler === args[1]);\n                        // this should never really happen unless you've called removeListener for something that is already not there.\n                        if (eventAdded === undefined) {\n                            return target;\n                        }\n                        removeEvent(args[0], args[1]);\n                        args[1] = eventAdded.handler;\n                    }\n                    // This function may be either bound to something or nothing.\n                    // eslint-disable-next-line no-invalid-this\n                    return value.apply(this === receiver ? target : this, args);\n                };\n            }\n            return value;\n        },\n        // @ts-expect-error We are providing a different signature than the `set`\n        // option as defined in the Proxy interface; specifically, we've limited\n        // `name` so that it can't be arbitrary. Theoretically this is inaccurate,\n        // but because we've constrained what the `target` can be, that effectively\n        // constraints the allowed properties as well.\n        set(_target, name, \n        // This setter takes either the `setTarget` function, the value of a a\n        // known property of Type, or something else. However, the type of this value\n        // depends on the property given, and getting TypeScript to figure this\n        // out is seriously difficult. It doesn't ultimately matter, however,\n        // as the setter is not visible to consumers.\n        value) {\n            // allow `setTarget` overrides\n            if (name === 'setTarget') {\n                setTarget = value;\n                return true;\n            }\n            target[name] = value;\n            return true;\n        },\n    });\n    // Typecast: The return type of the Proxy constructor is defined to be the\n    // same as the provided type parameter. This is naive, however, as it does not\n    // account for the proxy trapping and responding to arbitrary properties; in\n    // our case, we trap `setTarget`, so this means our final proxy object\n    // contains a property on top of the underlying object's properties.\n    return proxy;\n}\nexports.createEventEmitterProxy = createEventEmitterProxy;\n//# sourceMappingURL=createEventEmitterProxy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSwappableProxy = void 0;\n/**\n * Creates a proxy object that initially points to the given object but whose\n * target can be substituted with another object later using its `setTarget`\n * method.\n *\n * @template Type - An object.\n * @param initialTarget - The initial object you want to wrap.\n * @returns The proxy object.\n */\nfunction createSwappableProxy(initialTarget) {\n    let target = initialTarget;\n    /**\n     * Changes the object that the proxy wraps.\n     *\n     * @param newTarget - The new object.\n     */\n    let setTarget = (newTarget) => {\n        target = newTarget;\n    };\n    const proxy = new Proxy(target, {\n        // @ts-expect-error We are providing a different signature than the `get`\n        // option as defined in the Proxy interface; specifically, we've limited\n        // `name` so that it can't be arbitrary. Theoretically this is inaccurate,\n        // but because we've constrained what the `target` can be, that effectively\n        // constraints the allowed properties as well.\n        get(_target, name, receiver) {\n            // override `setTarget` access\n            if (name === 'setTarget') {\n                return setTarget;\n            }\n            const value = target[name];\n            if (value instanceof Function) {\n                return function (...args) {\n                    // This function may be either bound to something or nothing.\n                    // eslint-disable-next-line no-invalid-this\n                    return value.apply(this === receiver ? target : this, args);\n                };\n            }\n            return value;\n        },\n        // @ts-expect-error We are providing a different signature than the `set`\n        // option as defined in the Proxy interface; specifically, we've limited\n        // `name` so that it can't be arbitrary. Theoretically this is inaccurate,\n        // but because we've constrained what the `target` can be, that effectively\n        // constraints the allowed properties as well.\n        set(_target, name, \n        // This setter takes either the `setTarget` function, the value of a a\n        // known property of Type, or something else. However, the type of this value\n        // depends on the property given, and getting TypeScript to figure this\n        // out is seriously difficult. It doesn't ultimately matter, however,\n        // as the setter is not visible to consumers.\n        value) {\n            // allow `setTarget` overrides\n            if (name === 'setTarget') {\n                setTarget = value;\n                return true;\n            }\n            target[name] = value;\n            return true;\n        },\n    });\n    // Typecast: The return type of the Proxy constructor is defined to be the\n    // same as the provided type parameter. This is naive, however, as it does not\n    // account for the proxy trapping and responding to arbitrary properties; in\n    // our case, we trap `setTarget`, so this means our final proxy object\n    // contains a property on top of the underlying object's properties.\n    return proxy;\n}\nexports.createSwappableProxy = createSwappableProxy;\n//# sourceMappingURL=createSwappableProxy.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./createEventEmitterProxy\"), exports);\n__exportStar(require(\"./createSwappableProxy\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionController_instances, _TransactionController_internalEvents, _TransactionController_incomingTransactionOptions, _TransactionController_pendingTransactionOptions, _TransactionController_trace, _TransactionController_transactionHistoryLimit, _TransactionController_isSimulationEnabled, _TransactionController_testGasFeeFlows, _TransactionController_multichainTrackingHelper, _TransactionController_retryTransaction, _TransactionController_createNonceTracker, _TransactionController_createIncomingTransactionHelper, _TransactionController_createPendingTransactionTracker, _TransactionController_checkForPendingTransactionAndStartPolling, _TransactionController_stopAllTracking, _TransactionController_removeIncomingTransactionHelperListeners, _TransactionController_addIncomingTransactionHelperListeners, _TransactionController_removePendingTransactionTrackerListeners, _TransactionController_addPendingTransactionTrackerListeners, _TransactionController_getNonceTrackerPendingTransactions, _TransactionController_getGasFeeFlows, _TransactionController_getLayer1GasFeeFlows, _TransactionController_updateTransactionInternal, _TransactionController_checkIfTransactionParamsUpdated, _TransactionController_onTransactionParamsUpdated, _TransactionController_updateSimulationData, _TransactionController_onGasFeePollerTransactionUpdate, _TransactionController_getNetworkClientId, _TransactionController_getGlobalNetworkClientId, _TransactionController_getGlobalChainId, _TransactionController_isCustomNetwork, _TransactionController_getSelectedAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionController = exports.ApprovalState = exports.SPEED_UP_RATE = exports.CANCEL_RATE = exports.HARDFORK = void 0;\nconst common_1 = require(\"@ethereumjs/common\");\nconst tx_1 = require(\"@ethereumjs/tx\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst base_controller_1 = require(\"@metamask/base-controller\");\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst eth_query_1 = __importDefault(require(\"@metamask/eth-query\"));\nconst network_controller_1 = require(\"@metamask/network-controller\");\nconst nonce_tracker_1 = require(\"@metamask/nonce-tracker\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst utils_1 = require(\"@metamask/utils\");\nconst async_mutex_1 = require(\"async-mutex\");\nconst eth_method_registry_1 = require(\"eth-method-registry\");\nconst events_1 = require(\"events\");\nconst lodash_1 = require(\"lodash\");\nconst uuid_1 = require(\"uuid\");\nconst DefaultGasFeeFlow_1 = require(\"./gas-flows/DefaultGasFeeFlow.cjs\");\nconst LineaGasFeeFlow_1 = require(\"./gas-flows/LineaGasFeeFlow.cjs\");\nconst OptimismLayer1GasFeeFlow_1 = require(\"./gas-flows/OptimismLayer1GasFeeFlow.cjs\");\nconst ScrollLayer1GasFeeFlow_1 = require(\"./gas-flows/ScrollLayer1GasFeeFlow.cjs\");\nconst TestGasFeeFlow_1 = require(\"./gas-flows/TestGasFeeFlow.cjs\");\nconst EtherscanRemoteTransactionSource_1 = require(\"./helpers/EtherscanRemoteTransactionSource.cjs\");\nconst GasFeePoller_1 = require(\"./helpers/GasFeePoller.cjs\");\nconst IncomingTransactionHelper_1 = require(\"./helpers/IncomingTransactionHelper.cjs\");\nconst MultichainTrackingHelper_1 = require(\"./helpers/MultichainTrackingHelper.cjs\");\nconst PendingTransactionTracker_1 = require(\"./helpers/PendingTransactionTracker.cjs\");\nconst logger_1 = require(\"./logger.cjs\");\nconst types_1 = require(\"./types.cjs\");\nconst external_transactions_1 = require(\"./utils/external-transactions.cjs\");\nconst gas_1 = require(\"./utils/gas.cjs\");\nconst gas_fees_1 = require(\"./utils/gas-fees.cjs\");\nconst gas_flow_1 = require(\"./utils/gas-flow.cjs\");\nconst history_1 = require(\"./utils/history.cjs\");\nconst layer1_gas_fee_flow_1 = require(\"./utils/layer1-gas-fee-flow.cjs\");\nconst nonce_1 = require(\"./utils/nonce.cjs\");\nconst retry_1 = require(\"./utils/retry.cjs\");\nconst simulation_1 = require(\"./utils/simulation.cjs\");\nconst swaps_1 = require(\"./utils/swaps.cjs\");\nconst transaction_type_1 = require(\"./utils/transaction-type.cjs\");\nconst utils_2 = require(\"./utils/utils.cjs\");\nconst validation_1 = require(\"./utils/validation.cjs\");\n/**\n * Metadata for the TransactionController state, describing how to \"anonymize\"\n * the state and which parts should be persisted.\n */\nconst metadata = {\n    transactions: {\n        persist: true,\n        anonymous: false,\n    },\n    methodData: {\n        persist: true,\n        anonymous: false,\n    },\n    lastFetchedBlockNumbers: {\n        persist: true,\n        anonymous: false,\n    },\n};\nexports.HARDFORK = common_1.Hardfork.London;\n/**\n * Multiplier used to determine a transaction's increased gas fee during cancellation\n */\nexports.CANCEL_RATE = 1.1;\n/**\n * Multiplier used to determine a transaction's increased gas fee during speed up\n */\nexports.SPEED_UP_RATE = 1.1;\n/**\n * The name of the {@link TransactionController}.\n */\nconst controllerName = 'TransactionController';\n/**\n * Possible states of the approve transaction step.\n */\nvar ApprovalState;\n(function (ApprovalState) {\n    ApprovalState[\"Approved\"] = \"approved\";\n    ApprovalState[\"NotApproved\"] = \"not-approved\";\n    ApprovalState[\"SkippedViaBeforePublishHook\"] = \"skipped-via-before-publish-hook\";\n})(ApprovalState || (exports.ApprovalState = ApprovalState = {}));\n/**\n * Get the default TransactionsController state.\n *\n * @returns The default TransactionsController state.\n */\nfunction getDefaultTransactionControllerState() {\n    return {\n        methodData: {},\n        transactions: [],\n        lastFetchedBlockNumbers: {},\n    };\n}\n/**\n * Controller responsible for submitting and managing transactions.\n */\nclass TransactionController extends base_controller_1.BaseController {\n    failTransaction(transactionMeta, error, actionId) {\n        let newTransactionMeta;\n        try {\n            newTransactionMeta = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateTransactionInternal).call(this, {\n                transactionId: transactionMeta.id,\n                note: 'TransactionController#failTransaction - Add error message and set status to failed',\n                skipValidation: true,\n            }, (draftTransactionMeta) => {\n                draftTransactionMeta.status = types_1.TransactionStatus.failed;\n                draftTransactionMeta.error = (0, utils_2.normalizeTxError)(error);\n            });\n        }\n        catch (err) {\n            (0, logger_1.projectLogger)('Failed to mark transaction as failed', err);\n            newTransactionMeta = {\n                ...transactionMeta,\n                status: types_1.TransactionStatus.failed,\n                error: (0, utils_2.normalizeTxError)(error),\n            };\n        }\n        this.messagingSystem.publish(`${controllerName}:transactionFailed`, {\n            actionId,\n            error: error.message,\n            transactionMeta: newTransactionMeta,\n        });\n        this.onTransactionStatusChange(newTransactionMeta);\n        this.messagingSystem.publish(`${controllerName}:transactionFinished`, newTransactionMeta);\n        __classPrivateFieldGet(this, _TransactionController_internalEvents, \"f\").emit(`${transactionMeta.id}:finished`, newTransactionMeta);\n    }\n    async registryLookup(fourBytePrefix) {\n        const registryMethod = await this.registry.lookup(fourBytePrefix);\n        if (!registryMethod) {\n            return {\n                registryMethod: '',\n                parsedRegistryMethod: { name: undefined, args: undefined },\n            };\n        }\n        const parsedRegistryMethod = this.registry.parse(registryMethod);\n        return { registryMethod, parsedRegistryMethod };\n    }\n    /**\n     * Constructs a TransactionController.\n     *\n     * @param options - The controller options.\n     * @param options.blockTracker - The block tracker used to poll for new blocks data.\n     * @param options.disableHistory - Whether to disable storing history in transaction metadata.\n     * @param options.disableSendFlowHistory - Explicitly disable transaction metadata history.\n     * @param options.disableSwaps - Whether to disable additional processing on swaps transactions.\n     * @param options.getCurrentAccountEIP1559Compatibility - Whether or not the account supports EIP-1559.\n     * @param options.getCurrentNetworkEIP1559Compatibility - Whether or not the network supports EIP-1559.\n     * @param options.getExternalPendingTransactions - Callback to retrieve pending transactions from external sources.\n     * @param options.getGasFeeEstimates - Callback to retrieve gas fee estimates.\n     * @param options.getNetworkClientRegistry - Gets the network client registry.\n     * @param options.getNetworkState - Gets the state of the network controller.\n     * @param options.getPermittedAccounts - Get accounts that a given origin has permissions for.\n     * @param options.getSavedGasFees - Gets the saved gas fee config.\n     * @param options.incomingTransactions - Configuration options for incoming transaction support.\n     * @param options.isMultichainEnabled - Enable multichain support.\n     * @param options.isSimulationEnabled - Whether new transactions will be automatically simulated.\n     * @param options.messenger - The controller messenger.\n     * @param options.onNetworkStateChange - Allows subscribing to network controller state changes.\n     * @param options.pendingTransactions - Configuration options for pending transaction support.\n     * @param options.provider - The provider used to create the underlying EthQuery instance.\n     * @param options.securityProviderRequest - A function for verifying a transaction, whether it is malicious or not.\n     * @param options.sign - Function used to sign transactions.\n     * @param options.state - Initial state to set on this controller.\n     * @param options.testGasFeeFlows - Whether to use the test gas fee flow.\n     * @param options.trace - Callback to generate trace information.\n     * @param options.transactionHistoryLimit - Transaction history limit.\n     * @param options.hooks - The controller hooks.\n     */\n    constructor({ blockTracker, disableHistory, disableSendFlowHistory, disableSwaps, getCurrentAccountEIP1559Compatibility, getCurrentNetworkEIP1559Compatibility, getExternalPendingTransactions, getGasFeeEstimates, getNetworkClientRegistry, getNetworkState, getPermittedAccounts, getSavedGasFees, incomingTransactions = {}, isMultichainEnabled = false, isSimulationEnabled, messenger, onNetworkStateChange, pendingTransactions = {}, provider, securityProviderRequest, sign, state, testGasFeeFlows, trace, transactionHistoryLimit = 40, hooks, }) {\n        super({\n            name: controllerName,\n            metadata,\n            messenger,\n            state: {\n                ...getDefaultTransactionControllerState(),\n                ...state,\n            },\n        });\n        _TransactionController_instances.add(this);\n        _TransactionController_internalEvents.set(this, new events_1.EventEmitter());\n        this.approvingTransactionIds = new Set();\n        this.mutex = new async_mutex_1.Mutex();\n        _TransactionController_incomingTransactionOptions.set(this, void 0);\n        _TransactionController_pendingTransactionOptions.set(this, void 0);\n        this.signAbortCallbacks = new Map();\n        _TransactionController_trace.set(this, void 0);\n        _TransactionController_transactionHistoryLimit.set(this, void 0);\n        _TransactionController_isSimulationEnabled.set(this, void 0);\n        _TransactionController_testGasFeeFlows.set(this, void 0);\n        _TransactionController_multichainTrackingHelper.set(this, void 0);\n        _TransactionController_checkForPendingTransactionAndStartPolling.set(this, () => {\n            // PendingTransactionTracker reads state through its getTransactions hook\n            this.pendingTransactionTracker.startIfPendingTransactions();\n            __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").checkForPendingTransactionAndStartPolling();\n        });\n        this.messagingSystem = messenger;\n        this.getNetworkState = getNetworkState;\n        this.isSendFlowHistoryDisabled = disableSendFlowHistory ?? false;\n        this.isHistoryDisabled = disableHistory ?? false;\n        this.isSwapsDisabled = disableSwaps ?? false;\n        __classPrivateFieldSet(this, _TransactionController_isSimulationEnabled, isSimulationEnabled ?? (() => true), \"f\");\n        // @ts-expect-error the type in eth-method-registry is inappropriate and should be changed\n        this.registry = new eth_method_registry_1.MethodRegistry({ provider });\n        this.getSavedGasFees = getSavedGasFees ?? ((_chainId) => undefined);\n        this.getCurrentAccountEIP1559Compatibility =\n            getCurrentAccountEIP1559Compatibility ?? (() => Promise.resolve(true));\n        this.getCurrentNetworkEIP1559Compatibility =\n            getCurrentNetworkEIP1559Compatibility;\n        this.getGasFeeEstimates =\n            getGasFeeEstimates || (() => Promise.resolve({}));\n        this.getPermittedAccounts = getPermittedAccounts;\n        this.getExternalPendingTransactions =\n            getExternalPendingTransactions ?? (() => []);\n        this.securityProviderRequest = securityProviderRequest;\n        __classPrivateFieldSet(this, _TransactionController_incomingTransactionOptions, incomingTransactions, \"f\");\n        __classPrivateFieldSet(this, _TransactionController_pendingTransactionOptions, pendingTransactions, \"f\");\n        __classPrivateFieldSet(this, _TransactionController_transactionHistoryLimit, transactionHistoryLimit, \"f\");\n        this.sign = sign;\n        __classPrivateFieldSet(this, _TransactionController_testGasFeeFlows, testGasFeeFlows === true, \"f\");\n        __classPrivateFieldSet(this, _TransactionController_trace, trace ?? ((_request, fn) => fn?.()), \"f\");\n        this.afterSign = hooks?.afterSign ?? (() => true);\n        this.beforeCheckPendingTransaction =\n            hooks?.beforeCheckPendingTransaction ??\n                /* istanbul ignore next */\n                (() => true);\n        this.beforePublish = hooks?.beforePublish ?? (() => true);\n        this.getAdditionalSignArguments =\n            hooks?.getAdditionalSignArguments ?? (() => []);\n        this.publish =\n            hooks?.publish ?? (() => Promise.resolve({ transactionHash: undefined }));\n        this.nonceTracker = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_createNonceTracker).call(this, {\n            provider,\n            blockTracker,\n        });\n        const findNetworkClientIdByChainId = (chainId) => {\n            return this.messagingSystem.call(`NetworkController:findNetworkClientIdByChainId`, chainId);\n        };\n        __classPrivateFieldSet(this, _TransactionController_multichainTrackingHelper, new MultichainTrackingHelper_1.MultichainTrackingHelper({\n            isMultichainEnabled,\n            provider,\n            nonceTracker: this.nonceTracker,\n            incomingTransactionOptions: incomingTransactions,\n            findNetworkClientIdByChainId,\n            getNetworkClientById: ((networkClientId) => {\n                return this.messagingSystem.call(`NetworkController:getNetworkClientById`, networkClientId);\n            }),\n            getNetworkClientRegistry,\n            removeIncomingTransactionHelperListeners: __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_removeIncomingTransactionHelperListeners).bind(this),\n            removePendingTransactionTrackerListeners: __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_removePendingTransactionTrackerListeners).bind(this),\n            createNonceTracker: __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_createNonceTracker).bind(this),\n            createIncomingTransactionHelper: __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_createIncomingTransactionHelper).bind(this),\n            createPendingTransactionTracker: __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_createPendingTransactionTracker).bind(this),\n            onNetworkStateChange: (listener) => {\n                this.messagingSystem.subscribe('NetworkController:stateChange', listener);\n            },\n        }), \"f\");\n        __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").initialize();\n        const etherscanRemoteTransactionSource = new EtherscanRemoteTransactionSource_1.EtherscanRemoteTransactionSource({\n            includeTokenTransfers: incomingTransactions.includeTokenTransfers,\n        });\n        this.incomingTransactionHelper = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_createIncomingTransactionHelper).call(this, {\n            blockTracker,\n            etherscanRemoteTransactionSource,\n        });\n        this.pendingTransactionTracker = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_createPendingTransactionTracker).call(this, {\n            provider,\n            blockTracker,\n        });\n        this.gasFeeFlows = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getGasFeeFlows).call(this);\n        this.layer1GasFeeFlows = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getLayer1GasFeeFlows).call(this);\n        const gasFeePoller = new GasFeePoller_1.GasFeePoller({\n            findNetworkClientIdByChainId,\n            gasFeeFlows: this.gasFeeFlows,\n            getGasFeeControllerEstimates: this.getGasFeeEstimates,\n            getProvider: (chainId, networkClientId) => __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getProvider({\n                networkClientId,\n                chainId,\n            }),\n            getTransactions: () => this.state.transactions,\n            layer1GasFeeFlows: this.layer1GasFeeFlows,\n            onStateChange: (listener) => {\n                this.messagingSystem.subscribe('TransactionController:stateChange', listener);\n            },\n        });\n        gasFeePoller.hub.on('transaction-updated', __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_onGasFeePollerTransactionUpdate).bind(this));\n        // when transactionsController state changes\n        // check for pending transactions and start polling if there are any\n        this.messagingSystem.subscribe('TransactionController:stateChange', __classPrivateFieldGet(this, _TransactionController_checkForPendingTransactionAndStartPolling, \"f\"));\n        // TODO once v2 is merged make sure this only runs when\n        // selectedNetworkClientId changes\n        onNetworkStateChange(() => {\n            (0, logger_1.projectLogger)('Detected network change', this.getChainId());\n            this.pendingTransactionTracker.startIfPendingTransactions();\n            this.onBootCleanup();\n        });\n        this.onBootCleanup();\n        __classPrivateFieldGet(this, _TransactionController_checkForPendingTransactionAndStartPolling, \"f\").call(this);\n    }\n    /**\n     * Stops polling and removes listeners to prepare the controller for garbage collection.\n     */\n    destroy() {\n        __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_stopAllTracking).call(this);\n    }\n    /**\n     * Handle new method data request.\n     *\n     * @param fourBytePrefix - The method prefix.\n     * @returns The method data object corresponding to the given signature prefix.\n     */\n    async handleMethodData(fourBytePrefix) {\n        const releaseLock = await this.mutex.acquire();\n        try {\n            const { methodData } = this.state;\n            const knownMethod = Object.keys(methodData).find((knownFourBytePrefix) => fourBytePrefix === knownFourBytePrefix);\n            if (knownMethod) {\n                return methodData[fourBytePrefix];\n            }\n            const registry = await this.registryLookup(fourBytePrefix);\n            this.update((state) => {\n                state.methodData[fourBytePrefix] = registry;\n            });\n            return registry;\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    /**\n     * Add a new unapproved transaction to state. Parameters will be validated, a\n     * unique transaction id will be generated, and gas and gasPrice will be calculated\n     * if not provided. If A `<tx.id>:unapproved` hub event will be emitted once added.\n     *\n     * @param txParams - Standard parameters for an Ethereum transaction.\n     * @param opts - Additional options to control how the transaction is added.\n     * @param opts.actionId - Unique ID to prevent duplicate requests.\n     * @param opts.deviceConfirmedOn - An enum to indicate what device confirmed the transaction.\n     * @param opts.method - RPC method that requested the transaction.\n     * @param opts.origin - The origin of the transaction request, such as a dApp hostname.\n     * @param opts.requireApproval - Whether the transaction requires approval by the user, defaults to true unless explicitly disabled.\n     * @param opts.securityAlertResponse - Response from security validator.\n     * @param opts.sendFlowHistory - The sendFlowHistory entries to add.\n     * @param opts.type - Type of transaction to add, such as 'cancel' or 'swap'.\n     * @param opts.swaps - Options for swaps transactions.\n     * @param opts.swaps.hasApproveTx - Whether the transaction has an approval transaction.\n     * @param opts.swaps.meta - Metadata for swap transaction.\n     * @param opts.networkClientId - The id of the network client for this transaction.\n     * @param opts.traceContext - The parent context for any new traces.\n     * @returns Object containing a promise resolving to the transaction hash if approved.\n     */\n    async addTransaction(txParams, { actionId, deviceConfirmedOn, method, origin, requireApproval, securityAlertResponse, sendFlowHistory, swaps = {}, traceContext, type, networkClientId: requestNetworkClientId, } = {}) {\n        (0, logger_1.projectLogger)('Adding transaction', txParams);\n        txParams = (0, utils_2.normalizeTransactionParams)(txParams);\n        if (requestNetworkClientId &&\n            !__classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").has(requestNetworkClientId)) {\n            throw new Error('The networkClientId for this transaction could not be found');\n        }\n        const networkClientId = requestNetworkClientId ?? __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getGlobalNetworkClientId).call(this);\n        const isEIP1559Compatible = await this.getEIP1559Compatibility(networkClientId);\n        (0, validation_1.validateTxParams)(txParams, isEIP1559Compatible);\n        if (origin) {\n            await (0, validation_1.validateTransactionOrigin)(await this.getPermittedAccounts(origin), __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getSelectedAccount).call(this).address, txParams.from, origin);\n        }\n        const dappSuggestedGasFees = this.generateDappSuggestedGasFees(txParams, origin);\n        const chainId = this.getChainId(networkClientId);\n        const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n            networkClientId,\n            chainId,\n        });\n        const transactionType = type ?? (await (0, transaction_type_1.determineTransactionType)(txParams, ethQuery)).type;\n        const existingTransactionMeta = this.getTransactionWithActionId(actionId);\n        // If a request to add a transaction with the same actionId is submitted again, a new transaction will not be created for it.\n        let addedTransactionMeta = existingTransactionMeta\n            ? (0, lodash_1.cloneDeep)(existingTransactionMeta)\n            : {\n                // Add actionId to txMeta to check if same actionId is seen again\n                actionId,\n                chainId,\n                dappSuggestedGasFees,\n                deviceConfirmedOn,\n                id: (0, uuid_1.v1)(),\n                origin,\n                securityAlertResponse,\n                status: types_1.TransactionStatus.unapproved,\n                time: Date.now(),\n                txParams,\n                userEditedGasLimit: false,\n                verifiedOnBlockchain: false,\n                type: transactionType,\n                networkClientId,\n            };\n        await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Estimate Gas Properties', parentContext: traceContext }, (context) => this.updateGasProperties(addedTransactionMeta, {\n            traceContext: context,\n        }));\n        // Checks if a transaction already exists with a given actionId\n        if (!existingTransactionMeta) {\n            // Set security provider response\n            if (method && this.securityProviderRequest) {\n                const securityProviderResponse = await this.securityProviderRequest(addedTransactionMeta, method);\n                addedTransactionMeta.securityProviderResponse =\n                    securityProviderResponse;\n            }\n            if (!this.isSendFlowHistoryDisabled) {\n                addedTransactionMeta.sendFlowHistory = sendFlowHistory ?? [];\n            }\n            // Initial history push\n            if (!this.isHistoryDisabled) {\n                addedTransactionMeta = (0, history_1.addInitialHistorySnapshot)(addedTransactionMeta);\n            }\n            addedTransactionMeta = (0, swaps_1.updateSwapsTransaction)(addedTransactionMeta, transactionType, swaps, {\n                isSwapsDisabled: this.isSwapsDisabled,\n                cancelTransaction: this.cancelTransaction.bind(this),\n                messenger: this.messagingSystem,\n            });\n            this.addMetadata(addedTransactionMeta);\n            if (requireApproval !== false) {\n                __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateSimulationData).call(this, addedTransactionMeta, {\n                    traceContext,\n                }).catch((error) => {\n                    (0, logger_1.projectLogger)('Error while updating simulation data', error);\n                    throw error;\n                });\n            }\n            else {\n                (0, logger_1.projectLogger)('Skipping simulation as approval not required');\n            }\n            this.messagingSystem.publish(`${controllerName}:unapprovedTransactionAdded`, addedTransactionMeta);\n        }\n        return {\n            result: this.processApproval(addedTransactionMeta, {\n                isExisting: Boolean(existingTransactionMeta),\n                requireApproval,\n                actionId,\n                traceContext,\n            }),\n            transactionMeta: addedTransactionMeta,\n        };\n    }\n    startIncomingTransactionPolling(networkClientIds = []) {\n        if (networkClientIds.length === 0) {\n            this.incomingTransactionHelper.start();\n            return;\n        }\n        __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").startIncomingTransactionPolling(networkClientIds);\n    }\n    stopIncomingTransactionPolling(networkClientIds = []) {\n        if (networkClientIds.length === 0) {\n            this.incomingTransactionHelper.stop();\n            return;\n        }\n        __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").stopIncomingTransactionPolling(networkClientIds);\n    }\n    stopAllIncomingTransactionPolling() {\n        this.incomingTransactionHelper.stop();\n        __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").stopAllIncomingTransactionPolling();\n    }\n    async updateIncomingTransactions(networkClientIds = []) {\n        if (networkClientIds.length === 0) {\n            await this.incomingTransactionHelper.update();\n            return;\n        }\n        await __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").updateIncomingTransactions(networkClientIds);\n    }\n    /**\n     * Attempts to cancel a transaction based on its ID by setting its status to \"rejected\"\n     * and emitting a `<tx.id>:finished` hub event.\n     *\n     * @param transactionId - The ID of the transaction to cancel.\n     * @param gasValues - The gas values to use for the cancellation transaction.\n     * @param options - The options for the cancellation transaction.\n     * @param options.actionId - Unique ID to prevent duplicate requests.\n     * @param options.estimatedBaseFee - The estimated base fee of the transaction.\n     */\n    async stopTransaction(transactionId, gasValues, { estimatedBaseFee, actionId, } = {}) {\n        return await __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_retryTransaction).call(this, {\n            actionId,\n            estimatedBaseFee,\n            gasValues,\n            label: 'cancel',\n            rate: exports.CANCEL_RATE,\n            transactionId,\n            transactionType: types_1.TransactionType.cancel,\n            prepareTransactionParams: (txParams) => {\n                delete txParams.data;\n                txParams.to = txParams.from;\n                txParams.value = '0x0';\n            },\n            afterSubmit: (newTransactionMeta) => {\n                this.messagingSystem.publish(`${controllerName}:transactionFinished`, newTransactionMeta);\n                __classPrivateFieldGet(this, _TransactionController_internalEvents, \"f\").emit(`${newTransactionMeta.id}:finished`, newTransactionMeta);\n            },\n        });\n    }\n    /**\n     * Attempts to speed up a transaction increasing transaction gasPrice by ten percent.\n     *\n     * @param transactionId - The ID of the transaction to speed up.\n     * @param gasValues - The gas values to use for the speed up transaction.\n     * @param options - The options for the speed up transaction.\n     * @param options.actionId - Unique ID to prevent duplicate requests\n     * @param options.estimatedBaseFee - The estimated base fee of the transaction.\n     */\n    async speedUpTransaction(transactionId, gasValues, { actionId, estimatedBaseFee, } = {}) {\n        return await __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_retryTransaction).call(this, {\n            actionId,\n            estimatedBaseFee,\n            gasValues,\n            label: 'speed up',\n            rate: exports.SPEED_UP_RATE,\n            transactionId,\n            transactionType: types_1.TransactionType.retry,\n            afterSubmit: (newTransactionMeta) => {\n                this.messagingSystem.publish(`${controllerName}:speedupTransactionAdded`, newTransactionMeta);\n            },\n        });\n    }\n    /**\n     * Estimates required gas for a given transaction.\n     *\n     * @param transaction - The transaction to estimate gas for.\n     * @param networkClientId - The network client id to use for the estimate.\n     * @returns The gas and gas price.\n     */\n    async estimateGas(transaction, networkClientId) {\n        const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n            networkClientId,\n        });\n        const { estimatedGas, simulationFails } = await (0, gas_1.estimateGas)(transaction, ethQuery);\n        return { gas: estimatedGas, simulationFails };\n    }\n    /**\n     * Estimates required gas for a given transaction and add additional gas buffer with the given multiplier.\n     *\n     * @param transaction - The transaction params to estimate gas for.\n     * @param multiplier - The multiplier to use for the gas buffer.\n     * @param networkClientId - The network client id to use for the estimate.\n     */\n    async estimateGasBuffered(transaction, multiplier, networkClientId) {\n        const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n            networkClientId,\n        });\n        const { blockGasLimit, estimatedGas, simulationFails } = await (0, gas_1.estimateGas)(transaction, ethQuery);\n        const gas = (0, gas_1.addGasBuffer)(estimatedGas, blockGasLimit, multiplier);\n        return {\n            gas,\n            simulationFails,\n        };\n    }\n    /**\n     * Updates an existing transaction in state.\n     *\n     * @param transactionMeta - The new transaction to store in state.\n     * @param note - A note or update reason to include in the transaction history.\n     */\n    updateTransaction(transactionMeta, note) {\n        const { id: transactionId } = transactionMeta;\n        __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateTransactionInternal).call(this, { transactionId, note }, () => ({\n            ...transactionMeta,\n        }));\n    }\n    /**\n     * Update the security alert response for a transaction.\n     *\n     * @param transactionId - ID of the transaction.\n     * @param securityAlertResponse - The new security alert response for the transaction.\n     */\n    updateSecurityAlertResponse(transactionId, securityAlertResponse) {\n        if (!securityAlertResponse) {\n            throw new Error('updateSecurityAlertResponse: securityAlertResponse should not be null');\n        }\n        const transactionMeta = this.getTransaction(transactionId);\n        if (!transactionMeta) {\n            throw new Error(`Cannot update security alert response as no transaction metadata found`);\n        }\n        const updatedTransactionMeta = {\n            ...transactionMeta,\n            securityAlertResponse,\n        };\n        this.updateTransaction(updatedTransactionMeta, `${controllerName}:updatesecurityAlertResponse - securityAlertResponse updated`);\n    }\n    /**\n     * Removes all transactions from state, optionally based on the current network.\n     *\n     * @param ignoreNetwork - Determines whether to wipe all transactions, or just those on the\n     * current network. If `true`, all transactions are wiped.\n     * @param address - If specified, only transactions originating from this address will be\n     * wiped on current network.\n     */\n    wipeTransactions(ignoreNetwork, address) {\n        /* istanbul ignore next */\n        if (ignoreNetwork && !address) {\n            this.update((state) => {\n                state.transactions = [];\n            });\n            return;\n        }\n        const currentChainId = this.getChainId();\n        const newTransactions = this.state.transactions.filter(({ chainId, txParams }) => {\n            const isMatchingNetwork = ignoreNetwork || chainId === currentChainId;\n            if (!isMatchingNetwork) {\n                return true;\n            }\n            const isMatchingAddress = !address || txParams.from?.toLowerCase() === address.toLowerCase();\n            return !isMatchingAddress;\n        });\n        this.update((state) => {\n            state.transactions = this.trimTransactionsForState(newTransactions);\n        });\n    }\n    /**\n     * Adds external provided transaction to state as confirmed transaction.\n     *\n     * @param transactionMeta - TransactionMeta to add transactions.\n     * @param transactionReceipt - TransactionReceipt of the external transaction.\n     * @param baseFeePerGas - Base fee per gas of the external transaction.\n     */\n    async confirmExternalTransaction(transactionMeta, transactionReceipt, baseFeePerGas) {\n        // Run validation and add external transaction to state.\n        const newTransactionMeta = this.addExternalTransaction(transactionMeta);\n        try {\n            const transactionId = newTransactionMeta.id;\n            // Make sure status is confirmed and define gasUsed as in receipt.\n            const updatedTransactionMeta = {\n                ...newTransactionMeta,\n                status: types_1.TransactionStatus.confirmed,\n                txReceipt: transactionReceipt,\n            };\n            if (baseFeePerGas) {\n                updatedTransactionMeta.baseFeePerGas = baseFeePerGas;\n            }\n            // Update same nonce local transactions as dropped and define replacedBy properties.\n            this.markNonceDuplicatesDropped(transactionId);\n            // Update external provided transaction with updated gas values and confirmed status.\n            this.updateTransaction(updatedTransactionMeta, `${controllerName}:confirmExternalTransaction - Add external transaction`);\n            this.onTransactionStatusChange(updatedTransactionMeta);\n            // Intentional given potential duration of process.\n            this.updatePostBalance(updatedTransactionMeta).catch((error) => {\n                (0, logger_1.projectLogger)('Error while updating post balance', error);\n                throw error;\n            });\n            this.messagingSystem.publish(`${controllerName}:transactionConfirmed`, updatedTransactionMeta);\n        }\n        catch (error) {\n            console.error('Failed to confirm external transaction', error);\n        }\n    }\n    /**\n     * Append new send flow history to a transaction.\n     *\n     * @param transactionID - The ID of the transaction to update.\n     * @param currentSendFlowHistoryLength - The length of the current sendFlowHistory array.\n     * @param sendFlowHistoryToAdd - The sendFlowHistory entries to add.\n     * @returns The updated transactionMeta.\n     */\n    updateTransactionSendFlowHistory(transactionID, currentSendFlowHistoryLength, sendFlowHistoryToAdd) {\n        if (this.isSendFlowHistoryDisabled) {\n            throw new Error('Send flow history is disabled for the current transaction controller');\n        }\n        const transactionMeta = this.getTransaction(transactionID);\n        if (!transactionMeta) {\n            throw new Error(`Cannot update send flow history as no transaction metadata found`);\n        }\n        (0, utils_2.validateIfTransactionUnapproved)(transactionMeta, 'updateTransactionSendFlowHistory');\n        const sendFlowHistory = transactionMeta.sendFlowHistory ?? [];\n        if (currentSendFlowHistoryLength === sendFlowHistory.length) {\n            const updatedTransactionMeta = {\n                ...transactionMeta,\n                sendFlowHistory: [...sendFlowHistory, ...sendFlowHistoryToAdd],\n            };\n            this.updateTransaction(updatedTransactionMeta, `${controllerName}:updateTransactionSendFlowHistory - sendFlowHistory updated`);\n        }\n        return this.getTransaction(transactionID);\n    }\n    /**\n     * Update the gas values of a transaction.\n     *\n     * @param transactionId - The ID of the transaction to update.\n     * @param gasValues - Gas values to update.\n     * @param gasValues.gas - Same as transaction.gasLimit.\n     * @param gasValues.gasLimit - Maxmimum number of units of gas to use for this transaction.\n     * @param gasValues.gasPrice - Price per gas for legacy transactions.\n     * @param gasValues.maxPriorityFeePerGas - Maximum amount per gas to give to validator as incentive.\n     * @param gasValues.maxFeePerGas - Maximum amount per gas to pay for the transaction, including the priority fee.\n     * @param gasValues.estimateUsed - Which estimate level was used.\n     * @param gasValues.estimateSuggested - Which estimate level that the API suggested.\n     * @param gasValues.defaultGasEstimates - The default estimate for gas.\n     * @param gasValues.originalGasEstimate - Original estimate for gas.\n     * @param gasValues.userEditedGasLimit - The gas limit supplied by user.\n     * @param gasValues.userFeeLevel - Estimate level user selected.\n     * @returns The updated transactionMeta.\n     */\n    updateTransactionGasFees(transactionId, { defaultGasEstimates, estimateUsed, estimateSuggested, gas, gasLimit, gasPrice, maxPriorityFeePerGas, maxFeePerGas, originalGasEstimate, userEditedGasLimit, userFeeLevel, }) {\n        const transactionMeta = this.getTransaction(transactionId);\n        if (!transactionMeta) {\n            throw new Error(`Cannot update transaction as no transaction metadata found`);\n        }\n        (0, utils_2.validateIfTransactionUnapproved)(transactionMeta, 'updateTransactionGasFees');\n        let transactionGasFees = {\n            txParams: {\n                gas,\n                gasLimit,\n                gasPrice,\n                maxPriorityFeePerGas,\n                maxFeePerGas,\n            },\n            defaultGasEstimates,\n            estimateUsed,\n            estimateSuggested,\n            originalGasEstimate,\n            userEditedGasLimit,\n            userFeeLevel,\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        };\n        // only update what is defined\n        transactionGasFees.txParams = (0, lodash_1.pickBy)(transactionGasFees.txParams);\n        transactionGasFees = (0, lodash_1.pickBy)(transactionGasFees);\n        // merge updated gas values with existing transaction meta\n        const updatedMeta = (0, lodash_1.merge)({}, transactionMeta, transactionGasFees);\n        this.updateTransaction(updatedMeta, `${controllerName}:updateTransactionGasFees - gas values updated`);\n        return this.getTransaction(transactionId);\n    }\n    /**\n     * Update the previous gas values of a transaction.\n     *\n     * @param transactionId - The ID of the transaction to update.\n     * @param previousGas - Previous gas values to update.\n     * @param previousGas.gasLimit - Maxmimum number of units of gas to use for this transaction.\n     * @param previousGas.maxFeePerGas - Maximum amount per gas to pay for the transaction, including the priority fee.\n     * @param previousGas.maxPriorityFeePerGas - Maximum amount per gas to give to validator as incentive.\n     * @returns The updated transactionMeta.\n     */\n    updatePreviousGasParams(transactionId, { gasLimit, maxFeePerGas, maxPriorityFeePerGas, }) {\n        const transactionMeta = this.getTransaction(transactionId);\n        if (!transactionMeta) {\n            throw new Error(`Cannot update transaction as no transaction metadata found`);\n        }\n        (0, utils_2.validateIfTransactionUnapproved)(transactionMeta, 'updatePreviousGasParams');\n        const transactionPreviousGas = {\n            previousGas: {\n                gasLimit,\n                maxFeePerGas,\n                maxPriorityFeePerGas,\n            },\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        };\n        // only update what is defined\n        transactionPreviousGas.previousGas = (0, lodash_1.pickBy)(transactionPreviousGas.previousGas);\n        // merge updated previous gas values with existing transaction meta\n        const updatedMeta = (0, lodash_1.merge)({}, transactionMeta, transactionPreviousGas);\n        this.updateTransaction(updatedMeta, `${controllerName}:updatePreviousGasParams - Previous gas values updated`);\n        return this.getTransaction(transactionId);\n    }\n    async getNonceLock(address, networkClientId) {\n        return __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getNonceLock(address, networkClientId);\n    }\n    /**\n     * Updates the editable parameters of a transaction.\n     *\n     * @param txId - The ID of the transaction to update.\n     * @param params - The editable parameters to update.\n     * @param params.data - Data to pass with the transaction.\n     * @param params.gas - Maximum number of units of gas to use for the transaction.\n     * @param params.gasPrice - Price per gas for legacy transactions.\n     * @param params.from - Address to send the transaction from.\n     * @param params.to - Address to send the transaction to.\n     * @param params.value - Value associated with the transaction.\n     * @returns The updated transaction metadata.\n     */\n    async updateEditableParams(txId, { data, gas, gasPrice, from, to, value, }) {\n        const transactionMeta = this.getTransaction(txId);\n        if (!transactionMeta) {\n            throw new Error(`Cannot update editable params as no transaction metadata found`);\n        }\n        (0, utils_2.validateIfTransactionUnapproved)(transactionMeta, 'updateEditableParams');\n        const editableParams = {\n            txParams: {\n                data,\n                from,\n                to,\n                value,\n                gas,\n                gasPrice,\n            },\n        };\n        editableParams.txParams = (0, lodash_1.pickBy)(editableParams.txParams);\n        const updatedTransaction = (0, lodash_1.merge)({}, transactionMeta, editableParams);\n        const provider = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getProvider({\n            chainId: transactionMeta.chainId,\n            networkClientId: transactionMeta.networkClientId,\n        });\n        const ethQuery = new eth_query_1.default(provider);\n        const { type } = await (0, transaction_type_1.determineTransactionType)(updatedTransaction.txParams, ethQuery);\n        updatedTransaction.type = type;\n        await (0, layer1_gas_fee_flow_1.updateTransactionLayer1GasFee)({\n            layer1GasFeeFlows: this.layer1GasFeeFlows,\n            provider,\n            transactionMeta: updatedTransaction,\n        });\n        this.updateTransaction(updatedTransaction, `Update Editable Params for ${txId}`);\n        return this.getTransaction(txId);\n    }\n    /**\n     * Signs and returns the raw transaction data for provided transaction params list.\n     *\n     * @param listOfTxParams - The list of transaction params to approve.\n     * @param opts - Options bag.\n     * @param opts.hasNonce - Whether the transactions already have a nonce.\n     * @returns The raw transactions.\n     */\n    async approveTransactionsWithSameNonce(listOfTxParams = [], { hasNonce } = {}) {\n        (0, logger_1.projectLogger)('Approving transactions with same nonce', {\n            transactions: listOfTxParams,\n        });\n        if (listOfTxParams.length === 0) {\n            return '';\n        }\n        const initialTx = listOfTxParams[0];\n        const common = this.getCommonConfiguration(initialTx.chainId);\n        // We need to ensure we get the nonce using the the NonceTracker on the chain matching\n        // the txParams. In this context we only have chainId available to us, but the\n        // NonceTrackers are keyed by networkClientId. To workaround this, we attempt to find\n        // a networkClientId that matches the chainId. As a fallback, the globally selected\n        // network's NonceTracker will be used instead.\n        let networkClientId;\n        try {\n            networkClientId = this.messagingSystem.call(`NetworkController:findNetworkClientIdByChainId`, initialTx.chainId);\n        }\n        catch (err) {\n            (0, logger_1.projectLogger)('failed to find networkClientId from chainId', err);\n        }\n        const initialTxAsEthTx = tx_1.TransactionFactory.fromTxData(initialTx, {\n            common,\n        });\n        const initialTxAsSerializedHex = (0, util_1.bufferToHex)(initialTxAsEthTx.serialize());\n        if (this.approvingTransactionIds.has(initialTxAsSerializedHex)) {\n            return '';\n        }\n        this.approvingTransactionIds.add(initialTxAsSerializedHex);\n        let rawTransactions, nonceLock;\n        try {\n            // TODO: we should add a check to verify that all transactions have the same from address\n            const fromAddress = initialTx.from;\n            const requiresNonce = hasNonce !== true;\n            nonceLock = requiresNonce\n                ? await this.getNonceLock(fromAddress, networkClientId)\n                : undefined;\n            const nonce = nonceLock\n                ? (0, utils_1.add0x)(nonceLock.nextNonce.toString(16))\n                : initialTx.nonce;\n            if (nonceLock) {\n                (0, logger_1.projectLogger)('Using nonce from nonce tracker', nonce, nonceLock.nonceDetails);\n            }\n            rawTransactions = await Promise.all(listOfTxParams.map((txParams) => {\n                txParams.nonce = nonce;\n                return this.signExternalTransaction(txParams.chainId, txParams);\n            }));\n        }\n        catch (err) {\n            (0, logger_1.projectLogger)('Error while signing transactions with same nonce', err);\n            // Must set transaction to submitted/failed before releasing lock\n            // continue with error chain\n            throw err;\n        }\n        finally {\n            nonceLock?.releaseLock();\n            this.approvingTransactionIds.delete(initialTxAsSerializedHex);\n        }\n        return rawTransactions;\n    }\n    /**\n     * Update a custodial transaction.\n     *\n     * @param transactionId - The ID of the transaction to update.\n     * @param options - The custodial transaction options to update.\n     * @param options.errorMessage - The error message to be assigned in case transaction status update to failed.\n     * @param options.hash - The new hash value to be assigned.\n     * @param options.status - The new status value to be assigned.\n     */\n    updateCustodialTransaction(transactionId, { errorMessage, hash, status, }) {\n        const transactionMeta = this.getTransaction(transactionId);\n        if (!transactionMeta) {\n            throw new Error(`Cannot update custodial transaction as no transaction metadata found`);\n        }\n        if (!transactionMeta.custodyId) {\n            throw new Error('Transaction must be a custodian transaction');\n        }\n        if (status &&\n            ![\n                types_1.TransactionStatus.submitted,\n                types_1.TransactionStatus.signed,\n                types_1.TransactionStatus.failed,\n            ].includes(status)) {\n            throw new Error(`Cannot update custodial transaction with status: ${status}`);\n        }\n        const updatedTransactionMeta = (0, lodash_1.merge)({}, transactionMeta, (0, lodash_1.pickBy)({ hash, status }));\n        if (updatedTransactionMeta.status === types_1.TransactionStatus.submitted) {\n            updatedTransactionMeta.submittedTime = new Date().getTime();\n        }\n        if (updatedTransactionMeta.status === types_1.TransactionStatus.failed) {\n            updatedTransactionMeta.error = (0, utils_2.normalizeTxError)(new Error(errorMessage));\n        }\n        this.updateTransaction(updatedTransactionMeta, `${controllerName}:updateCustodialTransaction - Custodial transaction updated`);\n        if ([types_1.TransactionStatus.submitted, types_1.TransactionStatus.failed].includes(status)) {\n            this.messagingSystem.publish(`${controllerName}:transactionFinished`, updatedTransactionMeta);\n            __classPrivateFieldGet(this, _TransactionController_internalEvents, \"f\").emit(`${updatedTransactionMeta.id}:finished`, updatedTransactionMeta);\n        }\n    }\n    /**\n     * Search transaction metadata for matching entries.\n     *\n     * @param opts - Options bag.\n     * @param opts.searchCriteria - An object containing values or functions for transaction properties to filter transactions with.\n     * @param opts.initialList - The transactions to search. Defaults to the current state.\n     * @param opts.filterToCurrentNetwork - Whether to filter the results to the current network. Defaults to true.\n     * @param opts.limit - The maximum number of transactions to return. No limit by default.\n     * @returns An array of transactions matching the provided options.\n     */\n    getTransactions({ searchCriteria = {}, initialList, filterToCurrentNetwork = true, limit, } = {}) {\n        const chainId = this.getChainId();\n        // searchCriteria is an object that might have values that aren't predicate\n        // methods. When providing any other value type (string, number, etc), we\n        // consider this shorthand for \"check the value at key for strict equality\n        // with the provided value\". To conform this object to be only methods, we\n        // mapValues (lodash) such that every value on the object is a method that\n        // returns a boolean.\n        const predicateMethods = (0, lodash_1.mapValues)(searchCriteria, (predicate) => {\n            return typeof predicate === 'function'\n                ? predicate\n                : // TODO: Replace `any` with type\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    (v) => v === predicate;\n        });\n        const transactionsToFilter = initialList ?? this.state.transactions;\n        // Combine sortBy and pickBy to transform our state object into an array of\n        // matching transactions that are sorted by time.\n        const filteredTransactions = (0, lodash_1.sortBy)((0, lodash_1.pickBy)(transactionsToFilter, (transaction) => {\n            if (filterToCurrentNetwork && transaction.chainId !== chainId) {\n                return false;\n            }\n            // iterate over the predicateMethods keys to check if the transaction\n            // matches the searchCriteria\n            for (const [key, predicate] of Object.entries(predicateMethods)) {\n                // We return false early as soon as we know that one of the specified\n                // search criteria do not match the transaction. This prevents\n                // needlessly checking all criteria when we already know the criteria\n                // are not fully satisfied. We check both txParams and the base\n                // object as predicate keys can be either.\n                if (key in transaction.txParams) {\n                    // TODO: Replace `any` with type\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if (predicate(transaction.txParams[key]) === false) {\n                        return false;\n                    }\n                    // TODO: Replace `any` with type\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                else if (predicate(transaction[key]) === false) {\n                    return false;\n                }\n            }\n            return true;\n        }), 'time');\n        if (limit !== undefined) {\n            // We need to have all transactions of a given nonce in order to display\n            // necessary details in the UI. We use the size of this set to determine\n            // whether we have reached the limit provided, thus ensuring that all\n            // transactions of nonces we include will be sent to the UI.\n            const nonces = new Set();\n            const txs = [];\n            // By default, the transaction list we filter from is sorted by time ASC.\n            // To ensure that filtered results prefers the newest transactions we\n            // iterate from right to left, inserting transactions into front of a new\n            // array. The original order is preserved, but we ensure that newest txs\n            // are preferred.\n            for (let i = filteredTransactions.length - 1; i > -1; i--) {\n                const txMeta = filteredTransactions[i];\n                const { nonce } = txMeta.txParams;\n                if (!nonces.has(nonce)) {\n                    if (nonces.size < limit) {\n                        nonces.add(nonce);\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                // Push transaction into the beginning of our array to ensure the\n                // original order is preserved.\n                txs.unshift(txMeta);\n            }\n            return txs;\n        }\n        return filteredTransactions;\n    }\n    async estimateGasFee({ transactionParams, chainId, networkClientId: requestNetworkClientId, }) {\n        const networkClientId = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getNetworkClientId).call(this, {\n            networkClientId: requestNetworkClientId,\n            chainId,\n        });\n        const transactionMeta = {\n            txParams: transactionParams,\n            chainId,\n            networkClientId,\n        };\n        // Guaranteed as the default gas fee flow matches all transactions.\n        const gasFeeFlow = (0, gas_flow_1.getGasFeeFlow)(transactionMeta, this.gasFeeFlows);\n        const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n            networkClientId,\n            chainId,\n        });\n        const gasFeeControllerData = await this.getGasFeeEstimates({\n            networkClientId,\n        });\n        return gasFeeFlow.getGasFees({\n            ethQuery,\n            gasFeeControllerData,\n            transactionMeta,\n        });\n    }\n    /**\n     * Determine the layer 1 gas fee for the given transaction parameters.\n     *\n     * @param request - The request object.\n     * @param request.transactionParams - The transaction parameters to estimate the layer 1 gas fee for.\n     * @param request.chainId - The ID of the chain where the transaction will be executed.\n     * @param request.networkClientId - The ID of a specific network client to process the transaction.\n     */\n    async getLayer1GasFee({ transactionParams, chainId, networkClientId, }) {\n        const provider = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getProvider({\n            networkClientId,\n            chainId,\n        });\n        return await (0, layer1_gas_fee_flow_1.getTransactionLayer1GasFee)({\n            layer1GasFeeFlows: this.layer1GasFeeFlows,\n            provider,\n            transactionMeta: {\n                txParams: transactionParams,\n                chainId,\n            },\n        });\n    }\n    async signExternalTransaction(chainId, transactionParams) {\n        if (!this.sign) {\n            throw new Error('No sign method defined.');\n        }\n        const normalizedTransactionParams = (0, utils_2.normalizeTransactionParams)(transactionParams);\n        const type = (0, utils_2.isEIP1559Transaction)(normalizedTransactionParams)\n            ? types_1.TransactionEnvelopeType.feeMarket\n            : types_1.TransactionEnvelopeType.legacy;\n        const updatedTransactionParams = {\n            ...normalizedTransactionParams,\n            type,\n            gasLimit: normalizedTransactionParams.gas,\n            chainId,\n        };\n        const { from } = updatedTransactionParams;\n        const common = this.getCommonConfiguration(chainId);\n        const unsignedTransaction = tx_1.TransactionFactory.fromTxData(updatedTransactionParams, { common });\n        const signedTransaction = await this.sign(unsignedTransaction, from);\n        const rawTransaction = (0, util_1.bufferToHex)(signedTransaction.serialize());\n        return rawTransaction;\n    }\n    /**\n     * Removes unapproved transactions from state.\n     */\n    clearUnapprovedTransactions() {\n        const transactions = this.state.transactions.filter(({ status }) => status !== types_1.TransactionStatus.unapproved);\n        this.update((state) => {\n            state.transactions = this.trimTransactionsForState(transactions);\n        });\n    }\n    /**\n     * Stop the signing process for a specific transaction.\n     * Throws an error causing the transaction status to be set to failed.\n     * @param transactionId - The ID of the transaction to stop signing.\n     */\n    abortTransactionSigning(transactionId) {\n        const transactionMeta = this.getTransaction(transactionId);\n        if (!transactionMeta) {\n            throw new Error(`Cannot abort signing as no transaction metadata found`);\n        }\n        const abortCallback = this.signAbortCallbacks.get(transactionId);\n        if (!abortCallback) {\n            throw new Error(`Cannot abort signing as transaction is not waiting for signing`);\n        }\n        abortCallback();\n        this.signAbortCallbacks.delete(transactionId);\n    }\n    addMetadata(transactionMeta) {\n        (0, validation_1.validateTxParams)(transactionMeta.txParams);\n        this.update((state) => {\n            state.transactions = this.trimTransactionsForState([\n                ...state.transactions,\n                transactionMeta,\n            ]);\n        });\n    }\n    async updateGasProperties(transactionMeta, { traceContext } = {}) {\n        const isEIP1559Compatible = transactionMeta.txParams.type !== types_1.TransactionEnvelopeType.legacy &&\n            (await this.getEIP1559Compatibility(transactionMeta.networkClientId));\n        const { networkClientId, chainId } = transactionMeta;\n        const isCustomNetwork = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_isCustomNetwork).call(this, networkClientId);\n        const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n            networkClientId,\n            chainId,\n        });\n        const provider = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getProvider({\n            networkClientId,\n            chainId,\n        });\n        await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Update Gas', parentContext: traceContext }, async () => {\n            await (0, gas_1.updateGas)({\n                ethQuery,\n                chainId,\n                isCustomNetwork,\n                txMeta: transactionMeta,\n            });\n        });\n        await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Update Gas Fees', parentContext: traceContext }, async () => await (0, gas_fees_1.updateGasFees)({\n            eip1559: isEIP1559Compatible,\n            ethQuery,\n            gasFeeFlows: this.gasFeeFlows,\n            getGasFeeEstimates: this.getGasFeeEstimates,\n            getSavedGasFees: this.getSavedGasFees.bind(this),\n            txMeta: transactionMeta,\n        }));\n        await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Update Layer 1 Gas Fees', parentContext: traceContext }, async () => await (0, layer1_gas_fee_flow_1.updateTransactionLayer1GasFee)({\n            layer1GasFeeFlows: this.layer1GasFeeFlows,\n            provider,\n            transactionMeta,\n        }));\n    }\n    onBootCleanup() {\n        this.clearUnapprovedTransactions();\n        this.failIncompleteTransactions();\n    }\n    failIncompleteTransactions() {\n        const incompleteTransactions = this.state.transactions.filter((transaction) => [types_1.TransactionStatus.approved, types_1.TransactionStatus.signed].includes(transaction.status));\n        for (const transactionMeta of incompleteTransactions) {\n            this.failTransaction(transactionMeta, new Error('Transaction incomplete at startup'));\n        }\n    }\n    async processApproval(transactionMeta, { isExisting = false, requireApproval, shouldShowRequest = true, actionId, traceContext, }) {\n        const transactionId = transactionMeta.id;\n        let resultCallbacks;\n        const { meta, isCompleted } = this.isTransactionCompleted(transactionId);\n        const finishedPromise = isCompleted\n            ? Promise.resolve(meta)\n            : this.waitForTransactionFinished(transactionId);\n        if (meta && !isExisting && !isCompleted) {\n            try {\n                if (requireApproval !== false) {\n                    const acceptResult = await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Await Approval', parentContext: traceContext }, (context) => this.requestApproval(transactionMeta, {\n                        shouldShowRequest,\n                        traceContext: context,\n                    }));\n                    resultCallbacks = acceptResult.resultCallbacks;\n                    const approvalValue = acceptResult.value;\n                    const updatedTransaction = approvalValue?.txMeta;\n                    if (updatedTransaction) {\n                        (0, logger_1.projectLogger)('Updating transaction with approval data', {\n                            customNonce: updatedTransaction.customNonceValue,\n                            params: updatedTransaction.txParams,\n                        });\n                        this.updateTransaction(updatedTransaction, 'TransactionController#processApproval - Updated with approval data');\n                    }\n                }\n                const { isCompleted: isTxCompleted } = this.isTransactionCompleted(transactionId);\n                if (!isTxCompleted) {\n                    const approvalResult = await this.approveTransaction(transactionId, traceContext);\n                    if (approvalResult === ApprovalState.SkippedViaBeforePublishHook &&\n                        resultCallbacks) {\n                        resultCallbacks.success();\n                    }\n                    const updatedTransactionMeta = this.getTransaction(transactionId);\n                    this.messagingSystem.publish(`${controllerName}:transactionApproved`, {\n                        transactionMeta: updatedTransactionMeta,\n                        actionId,\n                    });\n                }\n                // TODO: Replace `any` with type\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                const { isCompleted: isTxCompleted } = this.isTransactionCompleted(transactionId);\n                if (!isTxCompleted) {\n                    if (error?.code === rpc_errors_1.errorCodes.provider.userRejectedRequest) {\n                        this.cancelTransaction(transactionId, actionId);\n                        throw rpc_errors_1.providerErrors.userRejectedRequest('MetaMask Tx Signature: User denied transaction signature.');\n                    }\n                    else {\n                        this.failTransaction(meta, error, actionId);\n                    }\n                }\n            }\n        }\n        const finalMeta = await finishedPromise;\n        switch (finalMeta?.status) {\n            case types_1.TransactionStatus.failed:\n                resultCallbacks?.error(finalMeta.error);\n                throw rpc_errors_1.rpcErrors.internal(finalMeta.error.message);\n            case types_1.TransactionStatus.submitted:\n                resultCallbacks?.success();\n                return finalMeta.hash;\n            default:\n                const internalError = rpc_errors_1.rpcErrors.internal(`MetaMask Tx Signature: Unknown problem: ${JSON.stringify(finalMeta || transactionId)}`);\n                resultCallbacks?.error(internalError);\n                throw internalError;\n        }\n    }\n    /**\n     * Approves a transaction and updates it's status in state. If this is not a\n     * retry transaction, a nonce will be generated. The transaction is signed\n     * using the sign configuration property, then published to the blockchain.\n     * A `<tx.id>:finished` hub event is fired after success or failure.\n     *\n     * @param transactionId - The ID of the transaction to approve.\n     * @param traceContext - The parent context for any new traces.\n     */\n    async approveTransaction(transactionId, traceContext) {\n        const cleanupTasks = new Array();\n        cleanupTasks.push(await this.mutex.acquire());\n        let transactionMeta = this.getTransactionOrThrow(transactionId);\n        try {\n            if (!this.sign) {\n                this.failTransaction(transactionMeta, new Error('No sign method defined.'));\n                return ApprovalState.NotApproved;\n            }\n            else if (!transactionMeta.chainId) {\n                this.failTransaction(transactionMeta, new Error('No chainId defined.'));\n                return ApprovalState.NotApproved;\n            }\n            if (this.approvingTransactionIds.has(transactionId)) {\n                (0, logger_1.projectLogger)('Skipping approval as signing in progress', transactionId);\n                return ApprovalState.NotApproved;\n            }\n            this.approvingTransactionIds.add(transactionId);\n            cleanupTasks.push(() => this.approvingTransactionIds.delete(transactionId));\n            const [nonce, releaseNonce] = await (0, nonce_1.getNextNonce)(transactionMeta, (address) => __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getNonceLock(address, transactionMeta.networkClientId));\n            // must set transaction to submitted/failed before releasing lock\n            releaseNonce && cleanupTasks.push(releaseNonce);\n            transactionMeta = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateTransactionInternal).call(this, {\n                transactionId,\n                note: 'TransactionController#approveTransaction - Transaction approved',\n            }, (draftTxMeta) => {\n                const { txParams, chainId } = draftTxMeta;\n                draftTxMeta.status = types_1.TransactionStatus.approved;\n                draftTxMeta.txParams = {\n                    ...txParams,\n                    nonce,\n                    chainId,\n                    gasLimit: txParams.gas,\n                    ...((0, utils_2.isEIP1559Transaction)(txParams) && {\n                        type: types_1.TransactionEnvelopeType.feeMarket,\n                    }),\n                };\n            });\n            this.onTransactionStatusChange(transactionMeta);\n            const rawTx = await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Sign', parentContext: traceContext }, () => this.signTransaction(transactionMeta, transactionMeta.txParams));\n            if (!this.beforePublish(transactionMeta)) {\n                (0, logger_1.projectLogger)('Skipping publishing transaction based on hook');\n                this.messagingSystem.publish(`${controllerName}:transactionPublishingSkipped`, transactionMeta);\n                return ApprovalState.SkippedViaBeforePublishHook;\n            }\n            if (!rawTx) {\n                return ApprovalState.NotApproved;\n            }\n            const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n                networkClientId: transactionMeta.networkClientId,\n                chainId: transactionMeta.chainId,\n            });\n            let preTxBalance;\n            const shouldUpdatePreTxBalance = transactionMeta.type === types_1.TransactionType.swap;\n            if (shouldUpdatePreTxBalance) {\n                (0, logger_1.projectLogger)('Determining pre-transaction balance');\n                preTxBalance = await (0, controller_utils_1.query)(ethQuery, 'getBalance', [\n                    transactionMeta.txParams.from,\n                ]);\n            }\n            (0, logger_1.projectLogger)('Publishing transaction', transactionMeta.txParams);\n            let hash;\n            await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Publish', parentContext: traceContext }, async () => {\n                ({ transactionHash: hash } = await this.publish(transactionMeta, rawTx));\n                if (hash === undefined) {\n                    hash = await this.publishTransaction(ethQuery, rawTx);\n                }\n            });\n            (0, logger_1.projectLogger)('Publish successful', hash);\n            transactionMeta = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateTransactionInternal).call(this, {\n                transactionId,\n                note: 'TransactionController#approveTransaction - Transaction submitted',\n            }, (draftTxMeta) => {\n                draftTxMeta.hash = hash;\n                draftTxMeta.status = types_1.TransactionStatus.submitted;\n                draftTxMeta.submittedTime = new Date().getTime();\n                if (shouldUpdatePreTxBalance) {\n                    draftTxMeta.preTxBalance = preTxBalance;\n                    (0, logger_1.projectLogger)('Updated pre-transaction balance', preTxBalance);\n                }\n            });\n            this.messagingSystem.publish(`${controllerName}:transactionSubmitted`, {\n                transactionMeta,\n            });\n            this.messagingSystem.publish(`${controllerName}:transactionFinished`, transactionMeta);\n            __classPrivateFieldGet(this, _TransactionController_internalEvents, \"f\").emit(`${transactionId}:finished`, transactionMeta);\n            this.onTransactionStatusChange(transactionMeta);\n            return ApprovalState.Approved;\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            this.failTransaction(transactionMeta, error);\n            return ApprovalState.NotApproved;\n        }\n        finally {\n            cleanupTasks.forEach((task) => task());\n        }\n    }\n    async publishTransaction(ethQuery, rawTransaction) {\n        return await (0, controller_utils_1.query)(ethQuery, 'sendRawTransaction', [rawTransaction]);\n    }\n    /**\n     * Cancels a transaction based on its ID by setting its status to \"rejected\"\n     * and emitting a `<tx.id>:finished` hub event.\n     *\n     * @param transactionId - The ID of the transaction to cancel.\n     * @param actionId - The actionId passed from UI\n     */\n    cancelTransaction(transactionId, actionId) {\n        const transactionMeta = this.state.transactions.find(({ id }) => id === transactionId);\n        if (!transactionMeta) {\n            return;\n        }\n        this.update((state) => {\n            const transactions = state.transactions.filter(({ id }) => id !== transactionId);\n            state.transactions = this.trimTransactionsForState(transactions);\n        });\n        const updatedTransactionMeta = {\n            ...transactionMeta,\n            status: types_1.TransactionStatus.rejected,\n        };\n        this.messagingSystem.publish(`${controllerName}:transactionFinished`, updatedTransactionMeta);\n        __classPrivateFieldGet(this, _TransactionController_internalEvents, \"f\").emit(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${transactionMeta.id}:finished`, updatedTransactionMeta);\n        this.messagingSystem.publish(`${controllerName}:transactionRejected`, {\n            transactionMeta: updatedTransactionMeta,\n            actionId,\n        });\n        this.onTransactionStatusChange(updatedTransactionMeta);\n    }\n    /**\n     * Trim the amount of transactions that are set on the state. Checks\n     * if the length of the tx history is longer then desired persistence\n     * limit and then if it is removes the oldest confirmed or rejected tx.\n     * Pending or unapproved transactions will not be removed by this\n     * operation. For safety of presenting a fully functional transaction UI\n     * representation, this function will not break apart transactions with the\n     * same nonce, created on the same day, per network. Not accounting for\n     * transactions of the same nonce, same day and network combo can result in\n     * confusing or broken experiences in the UI.\n     *\n     * @param transactions - The transactions to be applied to the state.\n     * @returns The trimmed list of transactions.\n     */\n    trimTransactionsForState(transactions) {\n        const nonceNetworkSet = new Set();\n        const txsToKeep = [...transactions]\n            .sort((a, b) => (a.time > b.time ? -1 : 1)) // Descending time order\n            .filter((tx) => {\n            const { chainId, status, txParams, time } = tx;\n            if (txParams) {\n                // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                const key = `${String(txParams.nonce)}-${(0, controller_utils_1.convertHexToDecimal)(chainId)}-${new Date(time).toDateString()}`;\n                if (nonceNetworkSet.has(key)) {\n                    return true;\n                }\n                else if (nonceNetworkSet.size < __classPrivateFieldGet(this, _TransactionController_transactionHistoryLimit, \"f\") ||\n                    !this.isFinalState(status)) {\n                    nonceNetworkSet.add(key);\n                    return true;\n                }\n            }\n            return false;\n        });\n        txsToKeep.reverse(); // Ascending time order\n        return txsToKeep;\n    }\n    /**\n     * Determines if the transaction is in a final state.\n     *\n     * @param status - The transaction status.\n     * @returns Whether the transaction is in a final state.\n     */\n    isFinalState(status) {\n        return (status === types_1.TransactionStatus.rejected ||\n            status === types_1.TransactionStatus.confirmed ||\n            status === types_1.TransactionStatus.failed);\n    }\n    /**\n     * Whether the transaction has at least completed all local processing.\n     *\n     * @param status - The transaction status.\n     * @returns Whether the transaction is in a final state.\n     */\n    isLocalFinalState(status) {\n        return [\n            types_1.TransactionStatus.confirmed,\n            types_1.TransactionStatus.failed,\n            types_1.TransactionStatus.rejected,\n            types_1.TransactionStatus.submitted,\n        ].includes(status);\n    }\n    async requestApproval(txMeta, { shouldShowRequest, traceContext, }) {\n        const id = this.getApprovalId(txMeta);\n        const { origin } = txMeta;\n        const type = controller_utils_1.ApprovalType.Transaction;\n        const requestData = { txId: txMeta.id };\n        await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, {\n            name: 'Notification Display',\n            id,\n            parentContext: traceContext,\n        });\n        return (await this.messagingSystem.call('ApprovalController:addRequest', {\n            id,\n            origin: origin || controller_utils_1.ORIGIN_METAMASK,\n            type,\n            requestData,\n            expectsResult: true,\n        }, shouldShowRequest));\n    }\n    getTransaction(transactionId) {\n        const { transactions } = this.state;\n        return transactions.find(({ id }) => id === transactionId);\n    }\n    getTransactionOrThrow(transactionId, errorMessagePrefix = 'TransactionController') {\n        const txMeta = this.getTransaction(transactionId);\n        if (!txMeta) {\n            throw new Error(`${errorMessagePrefix}: No transaction found with id ${transactionId}`);\n        }\n        return txMeta;\n    }\n    getApprovalId(txMeta) {\n        return String(txMeta.id);\n    }\n    isTransactionCompleted(transactionId) {\n        const transaction = this.getTransaction(transactionId);\n        if (!transaction) {\n            return { meta: undefined, isCompleted: false };\n        }\n        const isCompleted = this.isLocalFinalState(transaction.status);\n        return { meta: transaction, isCompleted };\n    }\n    getChainId(networkClientId) {\n        const globalChainId = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getGlobalChainId).call(this);\n        const globalNetworkClientId = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getGlobalNetworkClientId).call(this);\n        if (!networkClientId || networkClientId === globalNetworkClientId) {\n            return globalChainId;\n        }\n        return this.messagingSystem.call(`NetworkController:getNetworkClientById`, networkClientId).configuration.chainId;\n    }\n    prepareUnsignedEthTx(chainId, txParams) {\n        return tx_1.TransactionFactory.fromTxData(txParams, {\n            freeze: false,\n            common: this.getCommonConfiguration(chainId),\n        });\n    }\n    /**\n     * `@ethereumjs/tx` uses `@ethereumjs/common` as a configuration tool for\n     * specifying which chain, network, hardfork and EIPs to support for\n     * a transaction. By referencing this configuration, and analyzing the fields\n     * specified in txParams, @ethereumjs/tx is able to determine which EIP-2718\n     * transaction type to use.\n     *\n     * @param chainId - The chainId to use for the configuration.\n     * @returns common configuration object\n     */\n    getCommonConfiguration(chainId) {\n        const customChainParams = {\n            chainId: parseInt(chainId, 16),\n            defaultHardfork: exports.HARDFORK,\n        };\n        return common_1.Common.custom(customChainParams);\n    }\n    onIncomingTransactions({ added, updated, }) {\n        this.update((state) => {\n            const { transactions: currentTransactions } = state;\n            const updatedTransactions = [\n                ...added,\n                ...currentTransactions.map((originalTransaction) => {\n                    const updatedTransaction = updated.find(({ hash }) => hash === originalTransaction.hash);\n                    return updatedTransaction ?? originalTransaction;\n                }),\n            ];\n            state.transactions = this.trimTransactionsForState(updatedTransactions);\n        });\n    }\n    onUpdatedLastFetchedBlockNumbers({ lastFetchedBlockNumbers, blockNumber, }) {\n        this.update((state) => {\n            state.lastFetchedBlockNumbers = lastFetchedBlockNumbers;\n        });\n        this.messagingSystem.publish(`${controllerName}:incomingTransactionBlockReceived`, blockNumber);\n    }\n    generateDappSuggestedGasFees(txParams, origin) {\n        if (!origin || origin === controller_utils_1.ORIGIN_METAMASK) {\n            return undefined;\n        }\n        const { gasPrice, maxFeePerGas, maxPriorityFeePerGas, gas } = txParams;\n        if (gasPrice === undefined &&\n            maxFeePerGas === undefined &&\n            maxPriorityFeePerGas === undefined &&\n            gas === undefined) {\n            return undefined;\n        }\n        const dappSuggestedGasFees = {};\n        if (gasPrice !== undefined) {\n            dappSuggestedGasFees.gasPrice = gasPrice;\n        }\n        else if (maxFeePerGas !== undefined ||\n            maxPriorityFeePerGas !== undefined) {\n            dappSuggestedGasFees.maxFeePerGas = maxFeePerGas;\n            dappSuggestedGasFees.maxPriorityFeePerGas = maxPriorityFeePerGas;\n        }\n        if (gas !== undefined) {\n            dappSuggestedGasFees.gas = gas;\n        }\n        return dappSuggestedGasFees;\n    }\n    /**\n     * Validates and adds external provided transaction to state.\n     *\n     * @param transactionMeta - Nominated external transaction to be added to state.\n     * @returns The new transaction.\n     */\n    addExternalTransaction(transactionMeta) {\n        const { chainId } = transactionMeta;\n        const { transactions } = this.state;\n        const fromAddress = transactionMeta?.txParams?.from;\n        const sameFromAndNetworkTransactions = transactions.filter((transaction) => transaction.txParams.from === fromAddress &&\n            transaction.chainId === chainId);\n        const confirmedTxs = sameFromAndNetworkTransactions.filter((transaction) => transaction.status === types_1.TransactionStatus.confirmed);\n        const pendingTxs = sameFromAndNetworkTransactions.filter((transaction) => transaction.status === types_1.TransactionStatus.submitted);\n        (0, external_transactions_1.validateConfirmedExternalTransaction)(transactionMeta, confirmedTxs, pendingTxs);\n        // Make sure provided external transaction has non empty history array\n        const newTransactionMeta = (transactionMeta.history ?? []).length === 0 && !this.isHistoryDisabled\n            ? (0, history_1.addInitialHistorySnapshot)(transactionMeta)\n            : transactionMeta;\n        this.update((state) => {\n            state.transactions = this.trimTransactionsForState([\n                ...state.transactions,\n                newTransactionMeta,\n            ]);\n        });\n        return newTransactionMeta;\n    }\n    /**\n     * Sets other txMeta statuses to dropped if the txMeta that has been confirmed has other transactions\n     * in the transactions have the same nonce.\n     *\n     * @param transactionId - Used to identify original transaction.\n     */\n    markNonceDuplicatesDropped(transactionId) {\n        const transactionMeta = this.getTransaction(transactionId);\n        if (!transactionMeta) {\n            return;\n        }\n        const nonce = transactionMeta.txParams?.nonce;\n        const from = transactionMeta.txParams?.from;\n        const { chainId } = transactionMeta;\n        const sameNonceTransactions = this.state.transactions.filter((transaction) => transaction.id !== transactionId &&\n            transaction.txParams.from === from &&\n            transaction.txParams.nonce === nonce &&\n            transaction.chainId === chainId &&\n            transaction.type !== types_1.TransactionType.incoming);\n        const sameNonceTransactionIds = sameNonceTransactions.map((transaction) => transaction.id);\n        if (sameNonceTransactions.length === 0) {\n            return;\n        }\n        this.update((state) => {\n            for (const transaction of state.transactions) {\n                if (sameNonceTransactionIds.includes(transaction.id)) {\n                    transaction.replacedBy = transactionMeta?.hash;\n                    transaction.replacedById = transactionMeta?.id;\n                }\n            }\n        });\n        for (const transaction of this.state.transactions) {\n            if (sameNonceTransactionIds.includes(transaction.id) &&\n                transaction.status !== types_1.TransactionStatus.failed) {\n                this.setTransactionStatusDropped(transaction);\n            }\n        }\n    }\n    /**\n     * Method to set transaction status to dropped.\n     *\n     * @param transactionMeta - TransactionMeta of transaction to be marked as dropped.\n     */\n    setTransactionStatusDropped(transactionMeta) {\n        const updatedTransactionMeta = {\n            ...transactionMeta,\n            status: types_1.TransactionStatus.dropped,\n        };\n        this.messagingSystem.publish(`${controllerName}:transactionDropped`, {\n            transactionMeta: updatedTransactionMeta,\n        });\n        this.updateTransaction(updatedTransactionMeta, 'TransactionController#setTransactionStatusDropped - Transaction dropped');\n        this.onTransactionStatusChange(updatedTransactionMeta);\n    }\n    /**\n     * Get transaction with provided actionId.\n     *\n     * @param actionId - Unique ID to prevent duplicate requests\n     * @returns the filtered transaction\n     */\n    getTransactionWithActionId(actionId) {\n        return this.state.transactions.find((transaction) => actionId && transaction.actionId === actionId);\n    }\n    async waitForTransactionFinished(transactionId) {\n        return new Promise((resolve) => {\n            __classPrivateFieldGet(this, _TransactionController_internalEvents, \"f\").once(`${transactionId}:finished`, (txMeta) => {\n                resolve(txMeta);\n            });\n        });\n    }\n    /**\n     * Updates the r, s, and v properties of a TransactionMeta object\n     * with values from a signed transaction.\n     *\n     * @param transactionMeta - The TransactionMeta object to update.\n     * @param signedTx - The encompassing type for all transaction types containing r, s, and v values.\n     * @returns The updated TransactionMeta object.\n     */\n    updateTransactionMetaRSV(transactionMeta, signedTx) {\n        const transactionMetaWithRsv = (0, lodash_1.cloneDeep)(transactionMeta);\n        for (const key of ['r', 's', 'v']) {\n            const value = signedTx[key];\n            if (value === undefined || value === null) {\n                continue;\n            }\n            transactionMetaWithRsv[key] = (0, utils_1.add0x)(value.toString(16));\n        }\n        return transactionMetaWithRsv;\n    }\n    async getEIP1559Compatibility(networkClientId) {\n        const currentNetworkIsEIP1559Compatible = await this.getCurrentNetworkEIP1559Compatibility(networkClientId);\n        const currentAccountIsEIP1559Compatible = await this.getCurrentAccountEIP1559Compatibility();\n        return (currentNetworkIsEIP1559Compatible && currentAccountIsEIP1559Compatible);\n    }\n    async signTransaction(transactionMeta, txParams) {\n        (0, logger_1.projectLogger)('Signing transaction', txParams);\n        const unsignedEthTx = this.prepareUnsignedEthTx(transactionMeta.chainId, txParams);\n        this.approvingTransactionIds.add(transactionMeta.id);\n        const signedTx = await new Promise((resolve, reject) => {\n            this.sign?.(unsignedEthTx, txParams.from, ...this.getAdditionalSignArguments(transactionMeta)).then(resolve, reject);\n            this.signAbortCallbacks.set(transactionMeta.id, () => reject(new Error('Signing aborted by user')));\n        });\n        this.signAbortCallbacks.delete(transactionMeta.id);\n        if (!signedTx) {\n            (0, logger_1.projectLogger)('Skipping signed status as no signed transaction');\n            return undefined;\n        }\n        const transactionMetaFromHook = (0, lodash_1.cloneDeep)(transactionMeta);\n        if (!this.afterSign(transactionMetaFromHook, signedTx)) {\n            this.updateTransaction(transactionMetaFromHook, 'TransactionController#signTransaction - Update after sign');\n            (0, logger_1.projectLogger)('Skipping signed status based on hook');\n            return undefined;\n        }\n        const transactionMetaWithRsv = {\n            ...this.updateTransactionMetaRSV(transactionMetaFromHook, signedTx),\n            status: types_1.TransactionStatus.signed,\n        };\n        this.updateTransaction(transactionMetaWithRsv, 'TransactionController#approveTransaction - Transaction signed');\n        this.onTransactionStatusChange(transactionMetaWithRsv);\n        const rawTx = (0, util_1.bufferToHex)(signedTx.serialize());\n        const transactionMetaWithRawTx = (0, lodash_1.merge)({}, transactionMetaWithRsv, {\n            rawTx,\n        });\n        this.updateTransaction(transactionMetaWithRawTx, 'TransactionController#approveTransaction - RawTransaction added');\n        return rawTx;\n    }\n    onTransactionStatusChange(transactionMeta) {\n        this.messagingSystem.publish(`${controllerName}:transactionStatusUpdated`, {\n            transactionMeta,\n        });\n    }\n    getNonceTrackerTransactions(status, address, chainId = this.getChainId()) {\n        return (0, nonce_1.getAndFormatTransactionsForNonceTracker)(chainId, address, status, this.state.transactions);\n    }\n    onConfirmedTransaction(transactionMeta) {\n        (0, logger_1.projectLogger)('Processing confirmed transaction', transactionMeta.id);\n        this.markNonceDuplicatesDropped(transactionMeta.id);\n        this.messagingSystem.publish(`${controllerName}:transactionConfirmed`, transactionMeta);\n        this.onTransactionStatusChange(transactionMeta);\n        // Intentional given potential duration of process.\n        this.updatePostBalance(transactionMeta).catch((error) => {\n            (0, logger_1.projectLogger)('Error while updating post balance', error);\n            throw error;\n        });\n    }\n    async updatePostBalance(transactionMeta) {\n        try {\n            if (transactionMeta.type !== types_1.TransactionType.swap) {\n                return;\n            }\n            const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n                networkClientId: transactionMeta.networkClientId,\n                chainId: transactionMeta.chainId,\n            });\n            const { updatedTransactionMeta, approvalTransactionMeta } = await (0, swaps_1.updatePostTransactionBalance)(transactionMeta, {\n                ethQuery,\n                getTransaction: this.getTransaction.bind(this),\n                updateTransaction: this.updateTransaction.bind(this),\n            });\n            this.messagingSystem.publish(`${controllerName}:postTransactionBalanceUpdated`, {\n                transactionMeta: updatedTransactionMeta,\n                approvalTransactionMeta,\n            });\n        }\n        catch (error) {\n            /* istanbul ignore next */\n            (0, logger_1.projectLogger)('Error while updating post transaction balance', error);\n        }\n    }\n    async publishTransactionForRetry(ethQuery, rawTx, transactionMeta) {\n        try {\n            const hash = await this.publishTransaction(ethQuery, rawTx);\n            return hash;\n        }\n        catch (error) {\n            if (this.isTransactionAlreadyConfirmedError(error)) {\n                await this.pendingTransactionTracker.forceCheckTransaction(transactionMeta);\n                throw new Error('Previous transaction is already confirmed');\n            }\n            throw error;\n        }\n    }\n    /**\n     * Ensures that error is a nonce issue\n     *\n     * @param error - The error to check\n     * @returns Whether or not the error is a nonce issue\n     */\n    // TODO: Replace `any` with type\n    // Some networks are returning original error in the data field\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isTransactionAlreadyConfirmedError(error) {\n        return (error?.message?.includes('nonce too low') ||\n            error?.data?.message?.includes('nonce too low'));\n    }\n}\nexports.TransactionController = TransactionController;\n_TransactionController_internalEvents = new WeakMap(), _TransactionController_incomingTransactionOptions = new WeakMap(), _TransactionController_pendingTransactionOptions = new WeakMap(), _TransactionController_trace = new WeakMap(), _TransactionController_transactionHistoryLimit = new WeakMap(), _TransactionController_isSimulationEnabled = new WeakMap(), _TransactionController_testGasFeeFlows = new WeakMap(), _TransactionController_multichainTrackingHelper = new WeakMap(), _TransactionController_checkForPendingTransactionAndStartPolling = new WeakMap(), _TransactionController_instances = new WeakSet(), _TransactionController_retryTransaction = async function _TransactionController_retryTransaction({ actionId, afterSubmit, estimatedBaseFee, gasValues, label, prepareTransactionParams, rate, transactionId, transactionType, }) {\n    // If transaction is found for same action id, do not create a new transaction.\n    if (this.getTransactionWithActionId(actionId)) {\n        return;\n    }\n    if (gasValues) {\n        // Not good practice to reassign a parameter but temporarily avoiding a larger refactor.\n        gasValues = (0, utils_2.normalizeGasFeeValues)(gasValues);\n        (0, utils_2.validateGasValues)(gasValues);\n    }\n    (0, logger_1.projectLogger)(`Creating ${label} transaction`, transactionId, gasValues);\n    const transactionMeta = this.getTransaction(transactionId);\n    /* istanbul ignore next */\n    if (!transactionMeta) {\n        return;\n    }\n    /* istanbul ignore next */\n    if (!this.sign) {\n        throw new Error('No sign method defined.');\n    }\n    const newTxParams = (0, retry_1.getTransactionParamsWithIncreasedGasFee)(transactionMeta.txParams, rate, gasValues);\n    prepareTransactionParams?.(newTxParams);\n    const unsignedEthTx = this.prepareUnsignedEthTx(transactionMeta.chainId, newTxParams);\n    const signedTx = await this.sign(unsignedEthTx, transactionMeta.txParams.from);\n    const transactionMetaWithRsv = this.updateTransactionMetaRSV(transactionMeta, signedTx);\n    const rawTx = (0, util_1.bufferToHex)(signedTx.serialize());\n    const newFee = newTxParams.maxFeePerGas ?? newTxParams.gasPrice;\n    const oldFee = newTxParams.maxFeePerGas\n        ? transactionMetaWithRsv.txParams.maxFeePerGas\n        : transactionMetaWithRsv.txParams.gasPrice;\n    (0, logger_1.projectLogger)(`Submitting ${label} transaction`, {\n        oldFee,\n        newFee,\n        txParams: newTxParams,\n    });\n    const ethQuery = __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").getEthQuery({\n        networkClientId: transactionMeta.networkClientId,\n        chainId: transactionMeta.chainId,\n    });\n    const hash = await this.publishTransactionForRetry(ethQuery, rawTx, transactionMeta);\n    const newTransactionMeta = {\n        ...transactionMetaWithRsv,\n        actionId,\n        estimatedBaseFee,\n        hash,\n        id: (0, uuid_1.v1)(),\n        originalGasEstimate: transactionMeta.txParams.gas,\n        originalType: transactionMeta.type,\n        rawTx,\n        time: Date.now(),\n        txParams: newTxParams,\n        type: transactionType,\n    };\n    this.addMetadata(newTransactionMeta);\n    // speedUpTransaction has no approval request, so we assume the user has already approved the transaction\n    this.messagingSystem.publish(`${controllerName}:transactionApproved`, {\n        transactionMeta: newTransactionMeta,\n        actionId,\n    });\n    this.messagingSystem.publish(`${controllerName}:transactionSubmitted`, {\n        transactionMeta: newTransactionMeta,\n        actionId,\n    });\n    afterSubmit?.(newTransactionMeta);\n}, _TransactionController_createNonceTracker = function _TransactionController_createNonceTracker({ provider, blockTracker, chainId, }) {\n    return new nonce_tracker_1.NonceTracker({\n        // TODO: Fix types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        provider: provider,\n        // TODO: Fix types\n        blockTracker,\n        getPendingTransactions: __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getNonceTrackerPendingTransactions).bind(this, chainId),\n        getConfirmedTransactions: this.getNonceTrackerTransactions.bind(this, types_1.TransactionStatus.confirmed),\n    });\n}, _TransactionController_createIncomingTransactionHelper = function _TransactionController_createIncomingTransactionHelper({ blockTracker, etherscanRemoteTransactionSource, chainId, }) {\n    const incomingTransactionHelper = new IncomingTransactionHelper_1.IncomingTransactionHelper({\n        blockTracker,\n        getCurrentAccount: () => __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getSelectedAccount).call(this),\n        getLastFetchedBlockNumbers: () => this.state.lastFetchedBlockNumbers,\n        getChainId: chainId ? () => chainId : this.getChainId.bind(this),\n        isEnabled: __classPrivateFieldGet(this, _TransactionController_incomingTransactionOptions, \"f\").isEnabled,\n        queryEntireHistory: __classPrivateFieldGet(this, _TransactionController_incomingTransactionOptions, \"f\").queryEntireHistory,\n        remoteTransactionSource: etherscanRemoteTransactionSource,\n        transactionLimit: __classPrivateFieldGet(this, _TransactionController_transactionHistoryLimit, \"f\"),\n        updateTransactions: __classPrivateFieldGet(this, _TransactionController_incomingTransactionOptions, \"f\").updateTransactions,\n    });\n    __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_addIncomingTransactionHelperListeners).call(this, incomingTransactionHelper);\n    return incomingTransactionHelper;\n}, _TransactionController_createPendingTransactionTracker = function _TransactionController_createPendingTransactionTracker({ provider, blockTracker, chainId, }) {\n    const ethQuery = new eth_query_1.default(provider);\n    const getChainId = chainId ? () => chainId : this.getChainId.bind(this);\n    const pendingTransactionTracker = new PendingTransactionTracker_1.PendingTransactionTracker({\n        blockTracker,\n        getChainId,\n        getEthQuery: () => ethQuery,\n        getTransactions: () => this.state.transactions,\n        isResubmitEnabled: __classPrivateFieldGet(this, _TransactionController_pendingTransactionOptions, \"f\").isResubmitEnabled,\n        getGlobalLock: () => __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").acquireNonceLockForChainIdKey({\n            chainId: getChainId(),\n        }),\n        publishTransaction: this.publishTransaction.bind(this),\n        hooks: {\n            beforeCheckPendingTransaction: this.beforeCheckPendingTransaction.bind(this),\n            beforePublish: this.beforePublish.bind(this),\n        },\n    });\n    __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_addPendingTransactionTrackerListeners).call(this, pendingTransactionTracker);\n    return pendingTransactionTracker;\n}, _TransactionController_stopAllTracking = function _TransactionController_stopAllTracking() {\n    this.pendingTransactionTracker.stop();\n    __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_removePendingTransactionTrackerListeners).call(this, this.pendingTransactionTracker);\n    this.incomingTransactionHelper.stop();\n    __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_removeIncomingTransactionHelperListeners).call(this, this.incomingTransactionHelper);\n    __classPrivateFieldGet(this, _TransactionController_multichainTrackingHelper, \"f\").stopAllTracking();\n}, _TransactionController_removeIncomingTransactionHelperListeners = function _TransactionController_removeIncomingTransactionHelperListeners(incomingTransactionHelper) {\n    incomingTransactionHelper.hub.removeAllListeners('transactions');\n    incomingTransactionHelper.hub.removeAllListeners('updatedLastFetchedBlockNumbers');\n}, _TransactionController_addIncomingTransactionHelperListeners = function _TransactionController_addIncomingTransactionHelperListeners(incomingTransactionHelper) {\n    incomingTransactionHelper.hub.on('transactions', this.onIncomingTransactions.bind(this));\n    incomingTransactionHelper.hub.on('updatedLastFetchedBlockNumbers', this.onUpdatedLastFetchedBlockNumbers.bind(this));\n}, _TransactionController_removePendingTransactionTrackerListeners = function _TransactionController_removePendingTransactionTrackerListeners(pendingTransactionTracker) {\n    pendingTransactionTracker.hub.removeAllListeners('transaction-confirmed');\n    pendingTransactionTracker.hub.removeAllListeners('transaction-dropped');\n    pendingTransactionTracker.hub.removeAllListeners('transaction-failed');\n    pendingTransactionTracker.hub.removeAllListeners('transaction-updated');\n}, _TransactionController_addPendingTransactionTrackerListeners = function _TransactionController_addPendingTransactionTrackerListeners(pendingTransactionTracker) {\n    pendingTransactionTracker.hub.on('transaction-confirmed', this.onConfirmedTransaction.bind(this));\n    pendingTransactionTracker.hub.on('transaction-dropped', this.setTransactionStatusDropped.bind(this));\n    pendingTransactionTracker.hub.on('transaction-failed', this.failTransaction.bind(this));\n    pendingTransactionTracker.hub.on('transaction-updated', this.updateTransaction.bind(this));\n}, _TransactionController_getNonceTrackerPendingTransactions = function _TransactionController_getNonceTrackerPendingTransactions(chainId, address) {\n    const standardPendingTransactions = this.getNonceTrackerTransactions(types_1.TransactionStatus.submitted, address, chainId);\n    const externalPendingTransactions = this.getExternalPendingTransactions(address, chainId);\n    return [...standardPendingTransactions, ...externalPendingTransactions];\n}, _TransactionController_getGasFeeFlows = function _TransactionController_getGasFeeFlows() {\n    if (__classPrivateFieldGet(this, _TransactionController_testGasFeeFlows, \"f\")) {\n        return [new TestGasFeeFlow_1.TestGasFeeFlow()];\n    }\n    return [new LineaGasFeeFlow_1.LineaGasFeeFlow(), new DefaultGasFeeFlow_1.DefaultGasFeeFlow()];\n}, _TransactionController_getLayer1GasFeeFlows = function _TransactionController_getLayer1GasFeeFlows() {\n    return [new OptimismLayer1GasFeeFlow_1.OptimismLayer1GasFeeFlow(), new ScrollLayer1GasFeeFlow_1.ScrollLayer1GasFeeFlow()];\n}, _TransactionController_updateTransactionInternal = function _TransactionController_updateTransactionInternal({ transactionId, note, skipHistory, skipValidation, }, callback) {\n    let updatedTransactionParams = [];\n    this.update((state) => {\n        const index = state.transactions.findIndex(({ id }) => id === transactionId);\n        let transactionMeta = state.transactions[index];\n        // eslint-disable-next-line n/callback-return\n        transactionMeta = callback(transactionMeta) ?? transactionMeta;\n        if (skipValidation !== true) {\n            transactionMeta.txParams = (0, utils_2.normalizeTransactionParams)(transactionMeta.txParams);\n            (0, validation_1.validateTxParams)(transactionMeta.txParams);\n        }\n        updatedTransactionParams =\n            __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_checkIfTransactionParamsUpdated).call(this, transactionMeta);\n        const shouldSkipHistory = this.isHistoryDisabled || skipHistory;\n        if (!shouldSkipHistory) {\n            transactionMeta = (0, history_1.updateTransactionHistory)(transactionMeta, note ?? 'Transaction updated');\n        }\n        state.transactions[index] = transactionMeta;\n    });\n    const transactionMeta = this.getTransaction(transactionId);\n    if (updatedTransactionParams.length > 0) {\n        __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_onTransactionParamsUpdated).call(this, transactionMeta, updatedTransactionParams);\n    }\n    return transactionMeta;\n}, _TransactionController_checkIfTransactionParamsUpdated = function _TransactionController_checkIfTransactionParamsUpdated(newTransactionMeta) {\n    const { id: transactionId, txParams: newParams } = newTransactionMeta;\n    const originalParams = this.getTransaction(transactionId)?.txParams;\n    if (!originalParams || (0, lodash_1.isEqual)(originalParams, newParams)) {\n        return [];\n    }\n    const params = Object.keys(newParams);\n    const updatedProperties = params.filter((param) => newParams[param] !== originalParams[param]);\n    (0, logger_1.projectLogger)('Transaction parameters have been updated', transactionId, updatedProperties, originalParams, newParams);\n    return updatedProperties;\n}, _TransactionController_onTransactionParamsUpdated = function _TransactionController_onTransactionParamsUpdated(transactionMeta, updatedParams) {\n    if (['to', 'value', 'data'].some((param) => updatedParams.includes(param))) {\n        (0, logger_1.projectLogger)('Updating simulation data due to transaction parameter update');\n        __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateSimulationData).call(this, transactionMeta).catch((error) => {\n            (0, logger_1.projectLogger)('Error updating simulation data', error);\n            throw error;\n        });\n    }\n}, _TransactionController_updateSimulationData = async function _TransactionController_updateSimulationData(transactionMeta, { traceContext } = {}) {\n    const { id: transactionId, chainId, txParams } = transactionMeta;\n    const { from, to, value, data } = txParams;\n    let simulationData = {\n        error: {\n            code: types_1.SimulationErrorCode.Disabled,\n            message: 'Simulation disabled',\n        },\n        tokenBalanceChanges: [],\n    };\n    if (__classPrivateFieldGet(this, _TransactionController_isSimulationEnabled, \"f\").call(this)) {\n        __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateTransactionInternal).call(this, { transactionId, skipHistory: true }, (txMeta) => {\n            txMeta.simulationData = undefined;\n        });\n        simulationData = await __classPrivateFieldGet(this, _TransactionController_trace, \"f\").call(this, { name: 'Simulate', parentContext: traceContext }, () => (0, simulation_1.getSimulationData)({\n            chainId,\n            from: from,\n            to: to,\n            value: value,\n            data: data,\n        }));\n    }\n    const finalTransactionMeta = this.getTransaction(transactionId);\n    /* istanbul ignore if */\n    if (!finalTransactionMeta) {\n        (0, logger_1.projectLogger)('Cannot update simulation data as transaction not found', transactionId, simulationData);\n        return;\n    }\n    __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateTransactionInternal).call(this, {\n        transactionId,\n        note: 'TransactionController#updateSimulationData - Update simulation data',\n    }, (txMeta) => {\n        txMeta.simulationData = simulationData;\n    });\n    (0, logger_1.projectLogger)('Updated simulation data', transactionId, simulationData);\n}, _TransactionController_onGasFeePollerTransactionUpdate = function _TransactionController_onGasFeePollerTransactionUpdate({ transactionId, gasFeeEstimates, gasFeeEstimatesLoaded, layer1GasFee, }) {\n    __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_updateTransactionInternal).call(this, { transactionId, skipHistory: true }, (txMeta) => {\n        if (gasFeeEstimates) {\n            txMeta.gasFeeEstimates = gasFeeEstimates;\n        }\n        if (gasFeeEstimatesLoaded !== undefined) {\n            txMeta.gasFeeEstimatesLoaded = gasFeeEstimatesLoaded;\n        }\n        if (layer1GasFee) {\n            txMeta.layer1GasFee = layer1GasFee;\n        }\n    });\n}, _TransactionController_getNetworkClientId = function _TransactionController_getNetworkClientId({ networkClientId: requestNetworkClientId, chainId, }) {\n    const globalChainId = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getGlobalChainId).call(this);\n    const globalNetworkClientId = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getGlobalNetworkClientId).call(this);\n    if (requestNetworkClientId) {\n        return requestNetworkClientId;\n    }\n    if (!chainId || chainId === globalChainId) {\n        return globalNetworkClientId;\n    }\n    return this.messagingSystem.call(`NetworkController:findNetworkClientIdByChainId`, chainId);\n}, _TransactionController_getGlobalNetworkClientId = function _TransactionController_getGlobalNetworkClientId() {\n    return this.getNetworkState().selectedNetworkClientId;\n}, _TransactionController_getGlobalChainId = function _TransactionController_getGlobalChainId() {\n    return this.messagingSystem.call(`NetworkController:getNetworkClientById`, this.getNetworkState().selectedNetworkClientId).configuration.chainId;\n}, _TransactionController_isCustomNetwork = function _TransactionController_isCustomNetwork(networkClientId) {\n    const globalNetworkClientId = __classPrivateFieldGet(this, _TransactionController_instances, \"m\", _TransactionController_getGlobalNetworkClientId).call(this);\n    if (!networkClientId || networkClientId === globalNetworkClientId) {\n        return !(0, controller_utils_1.isInfuraNetworkType)(this.getNetworkState().selectedNetworkClientId);\n    }\n    return (this.messagingSystem.call(`NetworkController:getNetworkClientById`, networkClientId).configuration.type === network_controller_1.NetworkClientType.Custom);\n}, _TransactionController_getSelectedAccount = function _TransactionController_getSelectedAccount() {\n    return this.messagingSystem.call('AccountsController:getSelectedAccount');\n};\n//# sourceMappingURL=TransactionController.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ABI_SIMULATION_ERC721_LEGACY = exports.ABI_SIMULATION_ERC20_WRAPPED = exports.GAS_BUFFER_CHAIN_OVERRIDES = exports.ETHERSCAN_SUPPORTED_NETWORKS = exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX = exports.DEFAULT_ETHERSCAN_DOMAIN = exports.CHAIN_IDS = void 0;\nexports.CHAIN_IDS = {\n    MAINNET: '0x1',\n    GOERLI: '0x5',\n    BASE: '0x2105',\n    BASE_TESTNET: '0x14a33',\n    BSC: '0x38',\n    BSC_TESTNET: '0x61',\n    OPTIMISM: '0xa',\n    OPTIMISM_TESTNET: '0x1a4',\n    OPBNB: '0xcc',\n    OPBNB_TESTNET: '0x15eb',\n    OPTIMISM_SEPOLIA: '0xaa37dc',\n    POLYGON: '0x89',\n    POLYGON_TESTNET: '0x13881',\n    AVALANCHE: '0xa86a',\n    AVALANCHE_TESTNET: '0xa869',\n    FANTOM: '0xfa',\n    FANTOM_TESTNET: '0xfa2',\n    SEPOLIA: '0xaa36a7',\n    LINEA_GOERLI: '0xe704',\n    LINEA_SEPOLIA: '0xe705',\n    LINEA_MAINNET: '0xe708',\n    MOONBEAM: '0x504',\n    MOONBEAM_TESTNET: '0x507',\n    MOONRIVER: '0x505',\n    GNOSIS: '0x64',\n    ARBITRUM: '0xa4b1',\n    ZKSYNC_ERA: '0x144',\n    ZORA: '0x76adf1',\n    SCROLL: '0x82750',\n    SCROLL_SEPOLIA: '0x8274f',\n};\nexports.DEFAULT_ETHERSCAN_DOMAIN = 'etherscan.io';\nexports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX = 'api';\nexports.ETHERSCAN_SUPPORTED_NETWORKS = {\n    [exports.CHAIN_IDS.GOERLI]: {\n        domain: exports.DEFAULT_ETHERSCAN_DOMAIN,\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-goerli`,\n    },\n    [exports.CHAIN_IDS.MAINNET]: {\n        domain: exports.DEFAULT_ETHERSCAN_DOMAIN,\n        subdomain: exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX,\n    },\n    [exports.CHAIN_IDS.SEPOLIA]: {\n        domain: exports.DEFAULT_ETHERSCAN_DOMAIN,\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-sepolia`,\n    },\n    [exports.CHAIN_IDS.LINEA_GOERLI]: {\n        domain: 'lineascan.build',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-goerli`,\n    },\n    [exports.CHAIN_IDS.LINEA_SEPOLIA]: {\n        domain: 'lineascan.build',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-sepolia`,\n    },\n    [exports.CHAIN_IDS.LINEA_MAINNET]: {\n        domain: 'lineascan.build',\n        subdomain: exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX,\n    },\n    [exports.CHAIN_IDS.BSC]: {\n        domain: 'bscscan.com',\n        subdomain: exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX,\n    },\n    [exports.CHAIN_IDS.BSC_TESTNET]: {\n        domain: 'bscscan.com',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-testnet`,\n    },\n    [exports.CHAIN_IDS.OPTIMISM]: {\n        domain: exports.DEFAULT_ETHERSCAN_DOMAIN,\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-optimistic`,\n    },\n    [exports.CHAIN_IDS.OPTIMISM_SEPOLIA]: {\n        domain: exports.DEFAULT_ETHERSCAN_DOMAIN,\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-sepolia-optimistic`,\n    },\n    [exports.CHAIN_IDS.POLYGON]: {\n        domain: 'polygonscan.com',\n        subdomain: exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX,\n    },\n    [exports.CHAIN_IDS.POLYGON_TESTNET]: {\n        domain: 'polygonscan.com',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-mumbai`,\n    },\n    [exports.CHAIN_IDS.AVALANCHE]: {\n        domain: 'snowtrace.io',\n        subdomain: exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX,\n    },\n    [exports.CHAIN_IDS.AVALANCHE_TESTNET]: {\n        domain: 'snowtrace.io',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-testnet`,\n    },\n    [exports.CHAIN_IDS.FANTOM]: {\n        domain: 'ftmscan.com',\n        subdomain: exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX,\n    },\n    [exports.CHAIN_IDS.FANTOM_TESTNET]: {\n        domain: 'ftmscan.com',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-testnet`,\n    },\n    [exports.CHAIN_IDS.MOONBEAM]: {\n        domain: 'moonscan.io',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-moonbeam`,\n    },\n    [exports.CHAIN_IDS.MOONBEAM_TESTNET]: {\n        domain: 'moonscan.io',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-moonbase`,\n    },\n    [exports.CHAIN_IDS.MOONRIVER]: {\n        domain: 'moonscan.io',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-moonriver`,\n    },\n    [exports.CHAIN_IDS.GNOSIS]: {\n        domain: 'gnosisscan.io',\n        subdomain: `${exports.DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-gnosis`,\n    },\n};\nexports.GAS_BUFFER_CHAIN_OVERRIDES = {\n    [exports.CHAIN_IDS.OPTIMISM]: 1,\n    [exports.CHAIN_IDS.OPTIMISM_SEPOLIA]: 1,\n};\n/** Extract of the Wrapped ERC-20 ABI required for simulation. */\nexports.ABI_SIMULATION_ERC20_WRAPPED = [\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'to', type: 'address' },\n            { indexed: false, name: 'wad', type: 'uint256' },\n        ],\n        name: 'Deposit',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'from', type: 'address' },\n            { indexed: false, name: 'wad', type: 'uint256' },\n        ],\n        name: 'Withdrawal',\n        type: 'event',\n    },\n];\n/** Extract of the legacy ERC-721 ABI required for simulation. */\nexports.ABI_SIMULATION_ERC721_LEGACY = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                name: '_from',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: '_to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n];\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimulationRevertedError = exports.SimulationInvalidResponseError = exports.SimulationChainNotSupportedError = exports.SimulationError = void 0;\nconst types_1 = require(\"./types.cjs\");\nclass SimulationError extends Error {\n    constructor(message, code) {\n        super(message ?? 'Simulation failed');\n        this.code = code;\n    }\n}\nexports.SimulationError = SimulationError;\nclass SimulationChainNotSupportedError extends SimulationError {\n    constructor(chainId) {\n        super(`Chain is not supported: ${chainId}`, types_1.SimulationErrorCode.ChainNotSupported);\n    }\n}\nexports.SimulationChainNotSupportedError = SimulationChainNotSupportedError;\nclass SimulationInvalidResponseError extends SimulationError {\n    constructor() {\n        super('Invalid response from simulation API', types_1.SimulationErrorCode.InvalidResponse);\n    }\n}\nexports.SimulationInvalidResponseError = SimulationInvalidResponseError;\nclass SimulationRevertedError extends SimulationError {\n    constructor() {\n        super('Transaction was reverted', types_1.SimulationErrorCode.Reverted);\n    }\n}\nexports.SimulationRevertedError = SimulationRevertedError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _DefaultGasFeeFlow_instances, _DefaultGasFeeFlow_getFeeMarkEstimates, _DefaultGasFeeFlow_getLegacyEstimates, _DefaultGasFeeFlow_getGasPriceEstimates, _DefaultGasFeeFlow_getFeeMarketLevel, _DefaultGasFeeFlow_getLegacyLevel;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultGasFeeFlow = void 0;\nconst gas_fee_controller_1 = require(\"@metamask/gas-fee-controller\");\nconst utils_1 = require(\"@metamask/utils\");\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\nconst gas_fees_1 = require(\"../utils/gas-fees.cjs\");\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'default-gas-fee-flow');\n/**\n * The standard implementation of a gas fee flow that obtains gas fee estimates using only the GasFeeController.\n */\nclass DefaultGasFeeFlow {\n    constructor() {\n        _DefaultGasFeeFlow_instances.add(this);\n    }\n    matchesTransaction(_transactionMeta) {\n        return true;\n    }\n    async getGasFees(request) {\n        const { gasFeeControllerData } = request;\n        const { gasEstimateType, gasFeeEstimates } = gasFeeControllerData;\n        let response;\n        switch (gasEstimateType) {\n            case gas_fee_controller_1.GAS_ESTIMATE_TYPES.FEE_MARKET:\n                log('Using fee market estimates', gasFeeEstimates);\n                response = __classPrivateFieldGet(this, _DefaultGasFeeFlow_instances, \"m\", _DefaultGasFeeFlow_getFeeMarkEstimates).call(this, gasFeeEstimates);\n                break;\n            case gas_fee_controller_1.GAS_ESTIMATE_TYPES.LEGACY:\n                log('Using legacy estimates', gasFeeEstimates);\n                response = __classPrivateFieldGet(this, _DefaultGasFeeFlow_instances, \"m\", _DefaultGasFeeFlow_getLegacyEstimates).call(this, gasFeeEstimates);\n                break;\n            case gas_fee_controller_1.GAS_ESTIMATE_TYPES.ETH_GASPRICE:\n                log('Using eth_gasPrice estimates', gasFeeEstimates);\n                response = __classPrivateFieldGet(this, _DefaultGasFeeFlow_instances, \"m\", _DefaultGasFeeFlow_getGasPriceEstimates).call(this, gasFeeEstimates);\n                break;\n            default:\n                // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                throw new Error(`Unsupported gas estimate type: ${gasEstimateType}`);\n        }\n        return {\n            estimates: response,\n        };\n    }\n}\nexports.DefaultGasFeeFlow = DefaultGasFeeFlow;\n_DefaultGasFeeFlow_instances = new WeakSet(), _DefaultGasFeeFlow_getFeeMarkEstimates = function _DefaultGasFeeFlow_getFeeMarkEstimates(gasFeeEstimates) {\n    const levels = Object.values(types_1.GasFeeEstimateLevel).reduce((result, level) => ({\n        ...result,\n        [level]: __classPrivateFieldGet(this, _DefaultGasFeeFlow_instances, \"m\", _DefaultGasFeeFlow_getFeeMarketLevel).call(this, gasFeeEstimates, level),\n    }), {});\n    return {\n        type: types_1.GasFeeEstimateType.FeeMarket,\n        ...levels,\n    };\n}, _DefaultGasFeeFlow_getLegacyEstimates = function _DefaultGasFeeFlow_getLegacyEstimates(gasFeeEstimates) {\n    const levels = Object.values(types_1.GasFeeEstimateLevel).reduce((result, level) => ({\n        ...result,\n        [level]: __classPrivateFieldGet(this, _DefaultGasFeeFlow_instances, \"m\", _DefaultGasFeeFlow_getLegacyLevel).call(this, gasFeeEstimates, level),\n    }), {});\n    return {\n        type: types_1.GasFeeEstimateType.Legacy,\n        ...levels,\n    };\n}, _DefaultGasFeeFlow_getGasPriceEstimates = function _DefaultGasFeeFlow_getGasPriceEstimates(gasFeeEstimates) {\n    return {\n        type: types_1.GasFeeEstimateType.GasPrice,\n        gasPrice: (0, gas_fees_1.gweiDecimalToWeiHex)(gasFeeEstimates.gasPrice),\n    };\n}, _DefaultGasFeeFlow_getFeeMarketLevel = function _DefaultGasFeeFlow_getFeeMarketLevel(gasFeeEstimates, level) {\n    const maxFeePerGas = (0, gas_fees_1.gweiDecimalToWeiHex)(gasFeeEstimates[level].suggestedMaxFeePerGas);\n    const maxPriorityFeePerGas = (0, gas_fees_1.gweiDecimalToWeiHex)(gasFeeEstimates[level].suggestedMaxPriorityFeePerGas);\n    return {\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n    };\n}, _DefaultGasFeeFlow_getLegacyLevel = function _DefaultGasFeeFlow_getLegacyLevel(gasFeeEstimates, level) {\n    return (0, gas_fees_1.gweiDecimalToWeiHex)(gasFeeEstimates[level]);\n};\n//# sourceMappingURL=DefaultGasFeeFlow.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LineaGasFeeFlow_instances, _LineaGasFeeFlow_getLineaGasFees, _LineaGasFeeFlow_getLineaResponse, _LineaGasFeeFlow_getValuesFromMultipliers, _LineaGasFeeFlow_getMaxFees, _LineaGasFeeFlow_feesToString;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LineaGasFeeFlow = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\nconst DefaultGasFeeFlow_1 = require(\"./DefaultGasFeeFlow.cjs\");\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'linea-gas-fee-flow');\nconst LINEA_CHAIN_IDS = [\n    controller_utils_1.ChainId['linea-mainnet'],\n    controller_utils_1.ChainId['linea-goerli'],\n    controller_utils_1.ChainId['linea-sepolia'],\n];\nconst BASE_FEE_MULTIPLIERS = {\n    low: 1,\n    medium: 1.35,\n    high: 1.7,\n};\nconst PRIORITY_FEE_MULTIPLIERS = {\n    low: 1,\n    medium: 1.05,\n    high: 1.1,\n};\n/**\n * Implementation of a gas fee flow specific to Linea networks that obtains gas fee estimates using:\n * - The `linea_estimateGas` RPC method to obtain the base fee and lowest priority fee.\n * - Static multipliers to increase the base and priority fees.\n */\nclass LineaGasFeeFlow {\n    constructor() {\n        _LineaGasFeeFlow_instances.add(this);\n    }\n    matchesTransaction(transactionMeta) {\n        return LINEA_CHAIN_IDS.includes(transactionMeta.chainId);\n    }\n    async getGasFees(request) {\n        try {\n            return await __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_getLineaGasFees).call(this, request);\n        }\n        catch (error) {\n            log('Using default flow as fallback due to error', error);\n            return new DefaultGasFeeFlow_1.DefaultGasFeeFlow().getGasFees(request);\n        }\n    }\n}\nexports.LineaGasFeeFlow = LineaGasFeeFlow;\n_LineaGasFeeFlow_instances = new WeakSet(), _LineaGasFeeFlow_getLineaGasFees = async function _LineaGasFeeFlow_getLineaGasFees(request) {\n    const { ethQuery, transactionMeta } = request;\n    const lineaResponse = await __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_getLineaResponse).call(this, transactionMeta, ethQuery);\n    log('Received Linea response', lineaResponse);\n    const baseFees = __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_getValuesFromMultipliers).call(this, lineaResponse.baseFeePerGas, BASE_FEE_MULTIPLIERS);\n    log('Generated base fees', __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_feesToString).call(this, baseFees));\n    const priorityFees = __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_getValuesFromMultipliers).call(this, lineaResponse.priorityFeePerGas, PRIORITY_FEE_MULTIPLIERS);\n    log('Generated priority fees', __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_feesToString).call(this, priorityFees));\n    const maxFees = __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_getMaxFees).call(this, baseFees, priorityFees);\n    log('Generated max fees', __classPrivateFieldGet(this, _LineaGasFeeFlow_instances, \"m\", _LineaGasFeeFlow_feesToString).call(this, maxFees));\n    const estimates = Object.values(types_1.GasFeeEstimateLevel).reduce((result, level) => ({\n        ...result,\n        [level]: {\n            maxFeePerGas: (0, controller_utils_1.toHex)(maxFees[level]),\n            maxPriorityFeePerGas: (0, controller_utils_1.toHex)(priorityFees[level]),\n        },\n    }), { type: types_1.GasFeeEstimateType.FeeMarket });\n    return { estimates };\n}, _LineaGasFeeFlow_getLineaResponse = function _LineaGasFeeFlow_getLineaResponse(transactionMeta, ethQuery) {\n    return (0, controller_utils_1.query)(ethQuery, 'linea_estimateGas', [\n        {\n            from: transactionMeta.txParams.from,\n            to: transactionMeta.txParams.to,\n            value: transactionMeta.txParams.value,\n            input: transactionMeta.txParams.data,\n            // Required in request but no impact on response.\n            gasPrice: '0x100000000',\n        },\n    ]);\n}, _LineaGasFeeFlow_getValuesFromMultipliers = function _LineaGasFeeFlow_getValuesFromMultipliers(value, multipliers) {\n    const base = (0, controller_utils_1.hexToBN)(value);\n    const low = base.muln(multipliers.low);\n    const medium = base.muln(multipliers.medium);\n    const high = base.muln(multipliers.high);\n    return {\n        low,\n        medium,\n        high,\n    };\n}, _LineaGasFeeFlow_getMaxFees = function _LineaGasFeeFlow_getMaxFees(baseFees, priorityFees) {\n    return {\n        low: baseFees.low.add(priorityFees.low),\n        medium: baseFees.medium.add(priorityFees.medium),\n        high: baseFees.high.add(priorityFees.high),\n    };\n}, _LineaGasFeeFlow_feesToString = function _LineaGasFeeFlow_feesToString(fees) {\n    return Object.values(types_1.GasFeeEstimateLevel).map((level) => fees[level].toString(10));\n};\n//# sourceMappingURL=LineaGasFeeFlow.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptimismLayer1GasFeeFlow = void 0;\nconst constants_1 = require(\"../constants.cjs\");\nconst OracleLayer1GasFeeFlow_1 = require(\"./OracleLayer1GasFeeFlow.cjs\");\nconst OPTIMISM_STACK_CHAIN_IDS = [\n    constants_1.CHAIN_IDS.OPTIMISM,\n    constants_1.CHAIN_IDS.OPTIMISM_TESTNET,\n    constants_1.CHAIN_IDS.BASE,\n    constants_1.CHAIN_IDS.BASE_TESTNET,\n    constants_1.CHAIN_IDS.OPBNB,\n    constants_1.CHAIN_IDS.OPBNB_TESTNET,\n    constants_1.CHAIN_IDS.ZORA,\n];\n// BlockExplorer link: https://optimistic.etherscan.io/address/0x420000000000000000000000000000000000000f#code\nconst OPTIMISM_GAS_PRICE_ORACLE_ADDRESS = '0x420000000000000000000000000000000000000F';\n/**\n * Optimism layer 1 gas fee flow that obtains gas fee estimate using an oracle contract.\n */\nclass OptimismLayer1GasFeeFlow extends OracleLayer1GasFeeFlow_1.OracleLayer1GasFeeFlow {\n    constructor() {\n        super(OPTIMISM_GAS_PRICE_ORACLE_ADDRESS);\n    }\n    matchesTransaction(transactionMeta) {\n        return OPTIMISM_STACK_CHAIN_IDS.includes(transactionMeta.chainId);\n    }\n}\nexports.OptimismLayer1GasFeeFlow = OptimismLayer1GasFeeFlow;\n//# sourceMappingURL=OptimismLayer1GasFeeFlow.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OracleLayer1GasFeeFlow_instances, _OracleLayer1GasFeeFlow_oracleAddress, _OracleLayer1GasFeeFlow_signTransaction, _OracleLayer1GasFeeFlow_getOracleLayer1GasFee, _OracleLayer1GasFeeFlow_buildUnserializedTransaction, _OracleLayer1GasFeeFlow_buildTransactionParams, _OracleLayer1GasFeeFlow_buildTransactionCommon;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OracleLayer1GasFeeFlow = void 0;\nconst common_1 = require(\"@ethereumjs/common\");\nconst tx_1 = require(\"@ethereumjs/tx\");\nconst contracts_1 = require(\"@ethersproject/contracts\");\nconst providers_1 = require(\"@ethersproject/providers\");\nconst utils_1 = require(\"@metamask/utils\");\nconst lodash_1 = require(\"lodash\");\nconst logger_1 = require(\"../logger.cjs\");\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'oracle-layer1-gas-fee-flow');\nconst DUMMY_KEY = 'abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789';\nconst GAS_PRICE_ORACLE_ABI = [\n    {\n        inputs: [{ internalType: 'bytes', name: '_data', type: 'bytes' }],\n        name: 'getL1Fee',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\n/**\n * Layer 1 gas fee flow that obtains gas fee estimate using an oracle smart contract.\n */\nclass OracleLayer1GasFeeFlow {\n    constructor(oracleAddress, signTransaction) {\n        _OracleLayer1GasFeeFlow_instances.add(this);\n        _OracleLayer1GasFeeFlow_oracleAddress.set(this, void 0);\n        _OracleLayer1GasFeeFlow_signTransaction.set(this, void 0);\n        __classPrivateFieldSet(this, _OracleLayer1GasFeeFlow_oracleAddress, oracleAddress, \"f\");\n        __classPrivateFieldSet(this, _OracleLayer1GasFeeFlow_signTransaction, signTransaction ?? false, \"f\");\n    }\n    async getLayer1Fee(request) {\n        try {\n            return await __classPrivateFieldGet(this, _OracleLayer1GasFeeFlow_instances, \"m\", _OracleLayer1GasFeeFlow_getOracleLayer1GasFee).call(this, request);\n        }\n        catch (error) {\n            log('Failed to get oracle layer 1 gas fee', error);\n            throw new Error(`Failed to get oracle layer 1 gas fee`);\n        }\n    }\n}\nexports.OracleLayer1GasFeeFlow = OracleLayer1GasFeeFlow;\n_OracleLayer1GasFeeFlow_oracleAddress = new WeakMap(), _OracleLayer1GasFeeFlow_signTransaction = new WeakMap(), _OracleLayer1GasFeeFlow_instances = new WeakSet(), _OracleLayer1GasFeeFlow_getOracleLayer1GasFee = async function _OracleLayer1GasFeeFlow_getOracleLayer1GasFee(request) {\n    const { provider, transactionMeta } = request;\n    const contract = new contracts_1.Contract(__classPrivateFieldGet(this, _OracleLayer1GasFeeFlow_oracleAddress, \"f\"), GAS_PRICE_ORACLE_ABI, \n    // Network controller provider type is incompatible with ethers provider\n    new providers_1.Web3Provider(provider));\n    const serializedTransaction = __classPrivateFieldGet(this, _OracleLayer1GasFeeFlow_instances, \"m\", _OracleLayer1GasFeeFlow_buildUnserializedTransaction).call(this, transactionMeta, __classPrivateFieldGet(this, _OracleLayer1GasFeeFlow_signTransaction, \"f\")).serialize();\n    const result = await contract.getL1Fee(serializedTransaction);\n    if (result === undefined) {\n        throw new Error('No value returned from oracle contract');\n    }\n    return {\n        layer1Fee: result.toHexString(),\n    };\n}, _OracleLayer1GasFeeFlow_buildUnserializedTransaction = function _OracleLayer1GasFeeFlow_buildUnserializedTransaction(transactionMeta, sign) {\n    const txParams = __classPrivateFieldGet(this, _OracleLayer1GasFeeFlow_instances, \"m\", _OracleLayer1GasFeeFlow_buildTransactionParams).call(this, transactionMeta);\n    const common = __classPrivateFieldGet(this, _OracleLayer1GasFeeFlow_instances, \"m\", _OracleLayer1GasFeeFlow_buildTransactionCommon).call(this, transactionMeta);\n    let unserializedTransaction = tx_1.TransactionFactory.fromTxData(txParams, {\n        common,\n    });\n    if (sign) {\n        const keyBuffer = Buffer.from(DUMMY_KEY, 'hex');\n        unserializedTransaction = unserializedTransaction.sign(keyBuffer);\n    }\n    return unserializedTransaction;\n}, _OracleLayer1GasFeeFlow_buildTransactionParams = function _OracleLayer1GasFeeFlow_buildTransactionParams(transactionMeta) {\n    return {\n        ...(0, lodash_1.omit)(transactionMeta.txParams, 'gas'),\n        gasLimit: transactionMeta.txParams.gas,\n    };\n}, _OracleLayer1GasFeeFlow_buildTransactionCommon = function _OracleLayer1GasFeeFlow_buildTransactionCommon(transactionMeta) {\n    const chainId = Number(transactionMeta.chainId);\n    return common_1.Common.custom({\n        chainId,\n        defaultHardfork: common_1.Hardfork.London,\n    });\n};\n//# sourceMappingURL=OracleLayer1GasFeeFlow.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScrollLayer1GasFeeFlow = void 0;\nconst constants_1 = require(\"../constants.cjs\");\nconst OracleLayer1GasFeeFlow_1 = require(\"./OracleLayer1GasFeeFlow.cjs\");\nconst SCROLL_CHAIN_IDS = [constants_1.CHAIN_IDS.SCROLL, constants_1.CHAIN_IDS.SCROLL_SEPOLIA];\n// BlockExplorer link: https://scrollscan.com/address/0x5300000000000000000000000000000000000002#code\nconst SCROLL_GAS_PRICE_ORACLE_ADDRESS = '0x5300000000000000000000000000000000000002';\n/**\n * Scroll layer 1 gas fee flow that obtains gas fee estimate using an oracle contract.\n */\nclass ScrollLayer1GasFeeFlow extends OracleLayer1GasFeeFlow_1.OracleLayer1GasFeeFlow {\n    constructor() {\n        super(SCROLL_GAS_PRICE_ORACLE_ADDRESS, true);\n    }\n    matchesTransaction(transactionMeta) {\n        return SCROLL_CHAIN_IDS.includes(transactionMeta.chainId);\n    }\n}\nexports.ScrollLayer1GasFeeFlow = ScrollLayer1GasFeeFlow;\n//# sourceMappingURL=ScrollLayer1GasFeeFlow.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _TestGasFeeFlow_instances, _TestGasFeeFlow_counter, _TestGasFeeFlow_getValueForTotalFee;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestGasFeeFlow = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst types_1 = require(\"../types.cjs\");\nconst INCREMENT = 1e15; // 0.001 ETH\nconst LEVEL_DIFFERENCE = 0.5;\n/**\n * A gas fee flow to facilitate testing in the clients.\n * Increments the total gas fee by a fixed amount each time it is called.\n * Relies on the transaction's gas value to generate a distinct total fee in the UI.\n */\nclass TestGasFeeFlow {\n    constructor() {\n        _TestGasFeeFlow_instances.add(this);\n        _TestGasFeeFlow_counter.set(this, 1);\n    }\n    matchesTransaction(_transactionMeta) {\n        return true;\n    }\n    async getGasFees(request) {\n        const { transactionMeta } = request;\n        const { txParams } = transactionMeta;\n        const { gas: gasHex } = txParams;\n        if (!gasHex) {\n            throw new Error('Cannot estimate fee without gas value');\n        }\n        const gasDecimal = parseInt(gasHex, 16);\n        const difference = INCREMENT * LEVEL_DIFFERENCE;\n        const mediumMaxTarget = (__classPrivateFieldGet(this, _TestGasFeeFlow_counter, \"f\") + 1) * INCREMENT;\n        const mediumPriorityTarget = __classPrivateFieldGet(this, _TestGasFeeFlow_counter, \"f\") * INCREMENT;\n        const lowMaxTarget = mediumMaxTarget - difference;\n        const lowPriorityTarget = mediumPriorityTarget - difference;\n        const highMaxTarget = mediumMaxTarget + difference;\n        const highPriorityTarget = mediumPriorityTarget + difference;\n        __classPrivateFieldSet(this, _TestGasFeeFlow_counter, __classPrivateFieldGet(this, _TestGasFeeFlow_counter, \"f\") + 1, \"f\");\n        return {\n            estimates: {\n                type: types_1.GasFeeEstimateType.FeeMarket,\n                low: {\n                    maxFeePerGas: __classPrivateFieldGet(this, _TestGasFeeFlow_instances, \"m\", _TestGasFeeFlow_getValueForTotalFee).call(this, lowMaxTarget, gasDecimal),\n                    maxPriorityFeePerGas: __classPrivateFieldGet(this, _TestGasFeeFlow_instances, \"m\", _TestGasFeeFlow_getValueForTotalFee).call(this, lowPriorityTarget, gasDecimal),\n                },\n                medium: {\n                    maxFeePerGas: __classPrivateFieldGet(this, _TestGasFeeFlow_instances, \"m\", _TestGasFeeFlow_getValueForTotalFee).call(this, mediumMaxTarget, gasDecimal),\n                    maxPriorityFeePerGas: __classPrivateFieldGet(this, _TestGasFeeFlow_instances, \"m\", _TestGasFeeFlow_getValueForTotalFee).call(this, mediumPriorityTarget, gasDecimal),\n                },\n                high: {\n                    maxFeePerGas: __classPrivateFieldGet(this, _TestGasFeeFlow_instances, \"m\", _TestGasFeeFlow_getValueForTotalFee).call(this, highMaxTarget, gasDecimal),\n                    maxPriorityFeePerGas: __classPrivateFieldGet(this, _TestGasFeeFlow_instances, \"m\", _TestGasFeeFlow_getValueForTotalFee).call(this, highPriorityTarget, gasDecimal),\n                },\n            },\n        };\n    }\n}\nexports.TestGasFeeFlow = TestGasFeeFlow;\n_TestGasFeeFlow_counter = new WeakMap(), _TestGasFeeFlow_instances = new WeakSet(), _TestGasFeeFlow_getValueForTotalFee = function _TestGasFeeFlow_getValueForTotalFee(totalFee, gas) {\n    const feeDecimal = Math.ceil(totalFee / gas);\n    return (0, controller_utils_1.toHex)(feeDecimal);\n};\n//# sourceMappingURL=TestGasFeeFlow.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EtherscanRemoteTransactionSource_instances, _EtherscanRemoteTransactionSource_includeTokenTransfers, _EtherscanRemoteTransactionSource_isTokenRequestPending, _EtherscanRemoteTransactionSource_mutex, _EtherscanRemoteTransactionSource_releaseLockAfterInterval, _EtherscanRemoteTransactionSource_fetchNormalTransactions, _EtherscanRemoteTransactionSource_fetchTokenTransactions, _EtherscanRemoteTransactionSource_getResponseTransactions, _EtherscanRemoteTransactionSource_normalizeTransaction, _EtherscanRemoteTransactionSource_normalizeTokenTransaction, _EtherscanRemoteTransactionSource_normalizeTransactionBase;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EtherscanRemoteTransactionSource = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst async_mutex_1 = require(\"async-mutex\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst uuid_1 = require(\"uuid\");\nconst constants_1 = require(\"../constants.cjs\");\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\nconst etherscan_1 = require(\"../utils/etherscan.cjs\");\nconst ETHERSCAN_RATE_LIMIT_INTERVAL = 5000;\n/**\n * A RemoteTransactionSource that fetches transaction data from Etherscan.\n */\nclass EtherscanRemoteTransactionSource {\n    constructor({ includeTokenTransfers, } = {}) {\n        _EtherscanRemoteTransactionSource_instances.add(this);\n        _EtherscanRemoteTransactionSource_includeTokenTransfers.set(this, void 0);\n        _EtherscanRemoteTransactionSource_isTokenRequestPending.set(this, void 0);\n        _EtherscanRemoteTransactionSource_mutex.set(this, new async_mutex_1.Mutex());\n        _EtherscanRemoteTransactionSource_fetchNormalTransactions.set(this, async (request, etherscanRequest) => {\n            const { currentChainId } = request;\n            const etherscanTransactions = await (0, etherscan_1.fetchEtherscanTransactions)(etherscanRequest);\n            return __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_instances, \"m\", _EtherscanRemoteTransactionSource_getResponseTransactions).call(this, etherscanTransactions).map((tx) => __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_instances, \"m\", _EtherscanRemoteTransactionSource_normalizeTransaction).call(this, tx, currentChainId));\n        });\n        _EtherscanRemoteTransactionSource_fetchTokenTransactions.set(this, async (request, etherscanRequest) => {\n            const { currentChainId } = request;\n            const etherscanTransactions = await (0, etherscan_1.fetchEtherscanTokenTransactions)(etherscanRequest);\n            return __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_instances, \"m\", _EtherscanRemoteTransactionSource_getResponseTransactions).call(this, etherscanTransactions).map((tx) => __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_instances, \"m\", _EtherscanRemoteTransactionSource_normalizeTokenTransaction).call(this, tx, currentChainId));\n        });\n        __classPrivateFieldSet(this, _EtherscanRemoteTransactionSource_includeTokenTransfers, includeTokenTransfers ?? true, \"f\");\n        __classPrivateFieldSet(this, _EtherscanRemoteTransactionSource_isTokenRequestPending, false, \"f\");\n    }\n    isSupportedNetwork(chainId) {\n        return Object.keys(constants_1.ETHERSCAN_SUPPORTED_NETWORKS).includes(chainId);\n    }\n    getLastBlockVariations() {\n        return [__classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_isTokenRequestPending, \"f\") ? 'token' : 'normal'];\n    }\n    async fetchTransactions(request) {\n        const releaseLock = await __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_mutex, \"f\").acquire();\n        const acquiredTime = Date.now();\n        const etherscanRequest = {\n            ...request,\n            chainId: request.currentChainId,\n        };\n        try {\n            const transactions = __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_isTokenRequestPending, \"f\")\n                ? await __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_fetchTokenTransactions, \"f\").call(this, request, etherscanRequest)\n                : await __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_fetchNormalTransactions, \"f\").call(this, request, etherscanRequest);\n            if (__classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_includeTokenTransfers, \"f\")) {\n                __classPrivateFieldSet(this, _EtherscanRemoteTransactionSource_isTokenRequestPending, !__classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_isTokenRequestPending, \"f\"), \"f\");\n            }\n            return transactions;\n        }\n        finally {\n            __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_instances, \"m\", _EtherscanRemoteTransactionSource_releaseLockAfterInterval).call(this, acquiredTime, releaseLock);\n        }\n    }\n}\nexports.EtherscanRemoteTransactionSource = EtherscanRemoteTransactionSource;\n_EtherscanRemoteTransactionSource_includeTokenTransfers = new WeakMap(), _EtherscanRemoteTransactionSource_isTokenRequestPending = new WeakMap(), _EtherscanRemoteTransactionSource_mutex = new WeakMap(), _EtherscanRemoteTransactionSource_fetchNormalTransactions = new WeakMap(), _EtherscanRemoteTransactionSource_fetchTokenTransactions = new WeakMap(), _EtherscanRemoteTransactionSource_instances = new WeakSet(), _EtherscanRemoteTransactionSource_releaseLockAfterInterval = function _EtherscanRemoteTransactionSource_releaseLockAfterInterval(acquireTime, releaseLock) {\n    const elapsedTime = Date.now() - acquireTime;\n    const remainingTime = Math.max(0, ETHERSCAN_RATE_LIMIT_INTERVAL - elapsedTime);\n    // Wait for the remaining time if it hasn't been 5 seconds yet\n    if (remainingTime > 0) {\n        setTimeout(releaseLock, remainingTime);\n    }\n    else {\n        releaseLock();\n    }\n}, _EtherscanRemoteTransactionSource_getResponseTransactions = function _EtherscanRemoteTransactionSource_getResponseTransactions(response) {\n    let result = response.result;\n    if (response.status === '0') {\n        result = [];\n        if (response.result.length) {\n            (0, logger_1.incomingTransactionsLogger)('Ignored Etherscan request error', {\n                message: response.result,\n                type: __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_isTokenRequestPending, \"f\") ? 'token' : 'normal',\n            });\n        }\n    }\n    return result;\n}, _EtherscanRemoteTransactionSource_normalizeTransaction = function _EtherscanRemoteTransactionSource_normalizeTransaction(txMeta, currentChainId) {\n    const base = __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_instances, \"m\", _EtherscanRemoteTransactionSource_normalizeTransactionBase).call(this, txMeta, currentChainId);\n    return {\n        ...base,\n        txParams: {\n            ...base.txParams,\n            data: txMeta.input,\n        },\n        ...(txMeta.isError === '0'\n            ? { status: types_1.TransactionStatus.confirmed }\n            : {\n                error: new Error('Transaction failed'),\n                status: types_1.TransactionStatus.failed,\n            }),\n    };\n}, _EtherscanRemoteTransactionSource_normalizeTokenTransaction = function _EtherscanRemoteTransactionSource_normalizeTokenTransaction(txMeta, currentChainId) {\n    const base = __classPrivateFieldGet(this, _EtherscanRemoteTransactionSource_instances, \"m\", _EtherscanRemoteTransactionSource_normalizeTransactionBase).call(this, txMeta, currentChainId);\n    return {\n        ...base,\n        isTransfer: true,\n        transferInformation: {\n            contractAddress: txMeta.contractAddress,\n            decimals: Number(txMeta.tokenDecimal),\n            symbol: txMeta.tokenSymbol,\n        },\n    };\n}, _EtherscanRemoteTransactionSource_normalizeTransactionBase = function _EtherscanRemoteTransactionSource_normalizeTransactionBase(txMeta, currentChainId) {\n    const time = parseInt(txMeta.timeStamp, 10) * 1000;\n    return {\n        blockNumber: txMeta.blockNumber,\n        chainId: currentChainId,\n        hash: txMeta.hash,\n        id: (0, uuid_1.v1)({ msecs: time }),\n        status: types_1.TransactionStatus.confirmed,\n        time,\n        txParams: {\n            chainId: currentChainId,\n            from: txMeta.from,\n            gas: (0, controller_utils_1.BNToHex)(new bn_js_1.default(txMeta.gas)),\n            gasPrice: (0, controller_utils_1.BNToHex)(new bn_js_1.default(txMeta.gasPrice)),\n            gasUsed: (0, controller_utils_1.BNToHex)(new bn_js_1.default(txMeta.gasUsed)),\n            nonce: (0, controller_utils_1.BNToHex)(new bn_js_1.default(txMeta.nonce)),\n            to: txMeta.to,\n            value: (0, controller_utils_1.BNToHex)(new bn_js_1.default(txMeta.value)),\n        },\n        type: types_1.TransactionType.incoming,\n        verifiedOnBlockchain: false,\n    };\n};\n//# sourceMappingURL=EtherscanRemoteTransactionSource.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _GasFeePoller_instances, _GasFeePoller_findNetworkClientIdByChainId, _GasFeePoller_gasFeeFlows, _GasFeePoller_getGasFeeControllerEstimates, _GasFeePoller_getProvider, _GasFeePoller_getTransactions, _GasFeePoller_layer1GasFeeFlows, _GasFeePoller_timeout, _GasFeePoller_running, _GasFeePoller_start, _GasFeePoller_stop, _GasFeePoller_onTimeout, _GasFeePoller_updateUnapprovedTransactions, _GasFeePoller_updateUnapprovedTransaction, _GasFeePoller_updateTransactionGasFeeEstimates, _GasFeePoller_updateTransactionLayer1GasFee, _GasFeePoller_getUnapprovedTransactions, _GasFeePoller_getGasFeeControllerData;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GasFeePoller = void 0;\nconst eth_query_1 = __importDefault(require(\"@metamask/eth-query\"));\nconst utils_1 = require(\"@metamask/utils\");\nconst events_1 = __importDefault(require(\"events\"));\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\nconst gas_flow_1 = require(\"../utils/gas-flow.cjs\");\nconst layer1_gas_fee_flow_1 = require(\"../utils/layer1-gas-fee-flow.cjs\");\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'gas-fee-poller');\nconst INTERVAL_MILLISECONDS = 10000;\n/**\n * Automatically polls and updates suggested gas fees on unapproved transactions.\n */\nclass GasFeePoller {\n    /**\n     * Constructs a new instance of the GasFeePoller.\n     * @param options - The options for this instance.\n     * @param options.findNetworkClientIdByChainId - Callback to find the network client ID by chain ID.\n     * @param options.gasFeeFlows - The gas fee flows to use to obtain suitable gas fees.\n     * @param options.getGasFeeControllerEstimates - Callback to obtain the default fee estimates.\n     * @param options.getProvider - Callback to obtain a provider instance.\n     * @param options.getTransactions - Callback to obtain the transaction data.\n     * @param options.layer1GasFeeFlows - The layer 1 gas fee flows to use to obtain suitable layer 1 gas fees.\n     * @param options.onStateChange - Callback to register a listener for controller state changes.\n     */\n    constructor({ findNetworkClientIdByChainId, gasFeeFlows, getGasFeeControllerEstimates, getProvider, getTransactions, layer1GasFeeFlows, onStateChange, }) {\n        _GasFeePoller_instances.add(this);\n        this.hub = new events_1.default();\n        _GasFeePoller_findNetworkClientIdByChainId.set(this, void 0);\n        _GasFeePoller_gasFeeFlows.set(this, void 0);\n        _GasFeePoller_getGasFeeControllerEstimates.set(this, void 0);\n        _GasFeePoller_getProvider.set(this, void 0);\n        _GasFeePoller_getTransactions.set(this, void 0);\n        _GasFeePoller_layer1GasFeeFlows.set(this, void 0);\n        _GasFeePoller_timeout.set(this, void 0);\n        _GasFeePoller_running.set(this, false);\n        __classPrivateFieldSet(this, _GasFeePoller_findNetworkClientIdByChainId, findNetworkClientIdByChainId, \"f\");\n        __classPrivateFieldSet(this, _GasFeePoller_gasFeeFlows, gasFeeFlows, \"f\");\n        __classPrivateFieldSet(this, _GasFeePoller_layer1GasFeeFlows, layer1GasFeeFlows, \"f\");\n        __classPrivateFieldSet(this, _GasFeePoller_getGasFeeControllerEstimates, getGasFeeControllerEstimates, \"f\");\n        __classPrivateFieldSet(this, _GasFeePoller_getProvider, getProvider, \"f\");\n        __classPrivateFieldSet(this, _GasFeePoller_getTransactions, getTransactions, \"f\");\n        onStateChange(() => {\n            const unapprovedTransactions = __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_getUnapprovedTransactions).call(this);\n            if (unapprovedTransactions.length) {\n                __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_start).call(this);\n            }\n            else {\n                __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_stop).call(this);\n            }\n        });\n    }\n}\nexports.GasFeePoller = GasFeePoller;\n_GasFeePoller_findNetworkClientIdByChainId = new WeakMap(), _GasFeePoller_gasFeeFlows = new WeakMap(), _GasFeePoller_getGasFeeControllerEstimates = new WeakMap(), _GasFeePoller_getProvider = new WeakMap(), _GasFeePoller_getTransactions = new WeakMap(), _GasFeePoller_layer1GasFeeFlows = new WeakMap(), _GasFeePoller_timeout = new WeakMap(), _GasFeePoller_running = new WeakMap(), _GasFeePoller_instances = new WeakSet(), _GasFeePoller_start = function _GasFeePoller_start() {\n    if (__classPrivateFieldGet(this, _GasFeePoller_running, \"f\")) {\n        return;\n    }\n    // Intentionally not awaiting since this starts the timeout chain.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_onTimeout).call(this);\n    __classPrivateFieldSet(this, _GasFeePoller_running, true, \"f\");\n    log('Started polling');\n}, _GasFeePoller_stop = function _GasFeePoller_stop() {\n    if (!__classPrivateFieldGet(this, _GasFeePoller_running, \"f\")) {\n        return;\n    }\n    clearTimeout(__classPrivateFieldGet(this, _GasFeePoller_timeout, \"f\"));\n    __classPrivateFieldSet(this, _GasFeePoller_timeout, undefined, \"f\");\n    __classPrivateFieldSet(this, _GasFeePoller_running, false, \"f\");\n    log('Stopped polling');\n}, _GasFeePoller_onTimeout = async function _GasFeePoller_onTimeout() {\n    await __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_updateUnapprovedTransactions).call(this);\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    __classPrivateFieldSet(this, _GasFeePoller_timeout, setTimeout(() => __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_onTimeout).call(this), INTERVAL_MILLISECONDS), \"f\");\n}, _GasFeePoller_updateUnapprovedTransactions = async function _GasFeePoller_updateUnapprovedTransactions() {\n    const unapprovedTransactions = __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_getUnapprovedTransactions).call(this);\n    if (!unapprovedTransactions.length) {\n        return;\n    }\n    log('Found unapproved transactions', unapprovedTransactions.length);\n    const gasFeeControllerDataByChainId = await __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_getGasFeeControllerData).call(this, unapprovedTransactions);\n    log('Retrieved gas fee controller data', gasFeeControllerDataByChainId);\n    await Promise.all(unapprovedTransactions.flatMap((tx) => {\n        const { chainId } = tx;\n        const gasFeeControllerData = gasFeeControllerDataByChainId.get(chainId);\n        return __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_updateUnapprovedTransaction).call(this, tx, gasFeeControllerData);\n    }));\n}, _GasFeePoller_updateUnapprovedTransaction = async function _GasFeePoller_updateUnapprovedTransaction(transactionMeta, gasFeeControllerData) {\n    const { id } = transactionMeta;\n    const [gasFeeEstimatesResponse, layer1GasFee] = await Promise.all([\n        __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_updateTransactionGasFeeEstimates).call(this, transactionMeta, gasFeeControllerData),\n        __classPrivateFieldGet(this, _GasFeePoller_instances, \"m\", _GasFeePoller_updateTransactionLayer1GasFee).call(this, transactionMeta),\n    ]);\n    if (!gasFeeEstimatesResponse && !layer1GasFee) {\n        return;\n    }\n    this.hub.emit('transaction-updated', {\n        transactionId: id,\n        gasFeeEstimates: gasFeeEstimatesResponse?.gasFeeEstimates,\n        gasFeeEstimatesLoaded: gasFeeEstimatesResponse?.gasFeeEstimatesLoaded,\n        layer1GasFee,\n    });\n}, _GasFeePoller_updateTransactionGasFeeEstimates = async function _GasFeePoller_updateTransactionGasFeeEstimates(transactionMeta, gasFeeControllerData) {\n    const { chainId, networkClientId } = transactionMeta;\n    const ethQuery = new eth_query_1.default(__classPrivateFieldGet(this, _GasFeePoller_getProvider, \"f\").call(this, chainId, networkClientId));\n    const gasFeeFlow = (0, gas_flow_1.getGasFeeFlow)(transactionMeta, __classPrivateFieldGet(this, _GasFeePoller_gasFeeFlows, \"f\"));\n    if (gasFeeFlow) {\n        log('Found gas fee flow', gasFeeFlow.constructor.name, transactionMeta.id);\n    }\n    const request = {\n        ethQuery,\n        gasFeeControllerData,\n        transactionMeta,\n    };\n    let gasFeeEstimates;\n    if (gasFeeFlow) {\n        try {\n            const response = await gasFeeFlow.getGasFees(request);\n            gasFeeEstimates = response.estimates;\n        }\n        catch (error) {\n            log('Failed to get suggested gas fees', transactionMeta.id, error);\n        }\n    }\n    if (!gasFeeEstimates && transactionMeta.gasFeeEstimatesLoaded) {\n        return undefined;\n    }\n    log('Updated gas fee estimates', {\n        gasFeeEstimates,\n        transaction: transactionMeta.id,\n    });\n    return { gasFeeEstimates, gasFeeEstimatesLoaded: true };\n}, _GasFeePoller_updateTransactionLayer1GasFee = async function _GasFeePoller_updateTransactionLayer1GasFee(transactionMeta) {\n    const { chainId, networkClientId } = transactionMeta;\n    const provider = __classPrivateFieldGet(this, _GasFeePoller_getProvider, \"f\").call(this, chainId, networkClientId);\n    const layer1GasFee = await (0, layer1_gas_fee_flow_1.getTransactionLayer1GasFee)({\n        layer1GasFeeFlows: __classPrivateFieldGet(this, _GasFeePoller_layer1GasFeeFlows, \"f\"),\n        provider,\n        transactionMeta,\n    });\n    if (layer1GasFee) {\n        log('Updated layer 1 gas fee', layer1GasFee, transactionMeta.id);\n    }\n    return layer1GasFee;\n}, _GasFeePoller_getUnapprovedTransactions = function _GasFeePoller_getUnapprovedTransactions() {\n    return __classPrivateFieldGet(this, _GasFeePoller_getTransactions, \"f\").call(this).filter((tx) => tx.status === types_1.TransactionStatus.unapproved);\n}, _GasFeePoller_getGasFeeControllerData = async function _GasFeePoller_getGasFeeControllerData(transactions) {\n    const networkClientIdsByChainId = new Map();\n    for (const transaction of transactions) {\n        const { chainId, networkClientId: transactionNetworkClientId } = transaction;\n        if (networkClientIdsByChainId.has(chainId)) {\n            continue;\n        }\n        const networkClientId = transactionNetworkClientId ??\n            __classPrivateFieldGet(this, _GasFeePoller_findNetworkClientIdByChainId, \"f\").call(this, chainId);\n        networkClientIdsByChainId.set(chainId, networkClientId);\n    }\n    log('Extracted network client IDs by chain ID', networkClientIdsByChainId);\n    const entryPromises = Array.from(networkClientIdsByChainId.entries()).map(async ([chainId, networkClientId]) => {\n        return [\n            chainId,\n            await __classPrivateFieldGet(this, _GasFeePoller_getGasFeeControllerEstimates, \"f\").call(this, { networkClientId }),\n        ];\n    });\n    return new Map(await Promise.all(entryPromises));\n};\n//# sourceMappingURL=GasFeePoller.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _IncomingTransactionHelper_instances, _IncomingTransactionHelper_blockTracker, _IncomingTransactionHelper_getCurrentAccount, _IncomingTransactionHelper_getLastFetchedBlockNumbers, _IncomingTransactionHelper_getLocalTransactions, _IncomingTransactionHelper_getChainId, _IncomingTransactionHelper_isEnabled, _IncomingTransactionHelper_isRunning, _IncomingTransactionHelper_mutex, _IncomingTransactionHelper_onLatestBlock, _IncomingTransactionHelper_queryEntireHistory, _IncomingTransactionHelper_remoteTransactionSource, _IncomingTransactionHelper_transactionLimit, _IncomingTransactionHelper_updateTransactions, _IncomingTransactionHelper_sortTransactionsByTime, _IncomingTransactionHelper_getNewTransactions, _IncomingTransactionHelper_getUpdatedTransactions, _IncomingTransactionHelper_isTransactionOutdated, _IncomingTransactionHelper_getLastFetchedBlockNumberDec, _IncomingTransactionHelper_getFromBlock, _IncomingTransactionHelper_updateLastFetchedBlockNumber, _IncomingTransactionHelper_getBlockNumberKey, _IncomingTransactionHelper_canStart;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IncomingTransactionHelper = void 0;\nconst async_mutex_1 = require(\"async-mutex\");\nconst events_1 = __importDefault(require(\"events\"));\nconst logger_1 = require(\"../logger.cjs\");\nconst RECENT_HISTORY_BLOCK_RANGE = 10;\n// TODO: Replace `any` with type\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst UPDATE_CHECKS = [\n    (txMeta) => txMeta.status,\n    (txMeta) => txMeta.txParams.gasUsed,\n];\nclass IncomingTransactionHelper {\n    constructor({ blockTracker, getCurrentAccount, getLastFetchedBlockNumbers, getLocalTransactions, getChainId, isEnabled, queryEntireHistory, remoteTransactionSource, transactionLimit, updateTransactions, }) {\n        _IncomingTransactionHelper_instances.add(this);\n        _IncomingTransactionHelper_blockTracker.set(this, void 0);\n        _IncomingTransactionHelper_getCurrentAccount.set(this, void 0);\n        _IncomingTransactionHelper_getLastFetchedBlockNumbers.set(this, void 0);\n        _IncomingTransactionHelper_getLocalTransactions.set(this, void 0);\n        _IncomingTransactionHelper_getChainId.set(this, void 0);\n        _IncomingTransactionHelper_isEnabled.set(this, void 0);\n        _IncomingTransactionHelper_isRunning.set(this, void 0);\n        _IncomingTransactionHelper_mutex.set(this, new async_mutex_1.Mutex());\n        _IncomingTransactionHelper_onLatestBlock.set(this, void 0);\n        _IncomingTransactionHelper_queryEntireHistory.set(this, void 0);\n        _IncomingTransactionHelper_remoteTransactionSource.set(this, void 0);\n        _IncomingTransactionHelper_transactionLimit.set(this, void 0);\n        _IncomingTransactionHelper_updateTransactions.set(this, void 0);\n        this.hub = new events_1.default();\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_blockTracker, blockTracker, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_getCurrentAccount, getCurrentAccount, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_getLastFetchedBlockNumbers, getLastFetchedBlockNumbers, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_getLocalTransactions, getLocalTransactions || (() => []), \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_getChainId, getChainId, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_isEnabled, isEnabled ?? (() => true), \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_isRunning, false, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_queryEntireHistory, queryEntireHistory ?? true, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_remoteTransactionSource, remoteTransactionSource, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_transactionLimit, transactionLimit, \"f\");\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_updateTransactions, updateTransactions ?? false, \"f\");\n        // Using a property instead of a method to provide a listener reference\n        // with the correct scope that we can remove later if stopped.\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_onLatestBlock, async (blockNumberHex) => {\n            try {\n                await this.update(blockNumberHex);\n            }\n            catch (error) {\n                console.error('Error while checking incoming transactions', error);\n            }\n        }, \"f\");\n    }\n    start() {\n        if (__classPrivateFieldGet(this, _IncomingTransactionHelper_isRunning, \"f\")) {\n            return;\n        }\n        if (!__classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_canStart).call(this)) {\n            return;\n        }\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        __classPrivateFieldGet(this, _IncomingTransactionHelper_blockTracker, \"f\").addListener('latest', __classPrivateFieldGet(this, _IncomingTransactionHelper_onLatestBlock, \"f\"));\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_isRunning, true, \"f\");\n    }\n    stop() {\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        __classPrivateFieldGet(this, _IncomingTransactionHelper_blockTracker, \"f\").removeListener('latest', __classPrivateFieldGet(this, _IncomingTransactionHelper_onLatestBlock, \"f\"));\n        __classPrivateFieldSet(this, _IncomingTransactionHelper_isRunning, false, \"f\");\n    }\n    async update(latestBlockNumberHex) {\n        const releaseLock = await __classPrivateFieldGet(this, _IncomingTransactionHelper_mutex, \"f\").acquire();\n        (0, logger_1.incomingTransactionsLogger)('Checking for incoming transactions');\n        try {\n            if (!__classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_canStart).call(this)) {\n                return;\n            }\n            const latestBlockNumber = parseInt(latestBlockNumberHex || (await __classPrivateFieldGet(this, _IncomingTransactionHelper_blockTracker, \"f\").getLatestBlock()), 16);\n            const additionalLastFetchedKeys = __classPrivateFieldGet(this, _IncomingTransactionHelper_remoteTransactionSource, \"f\").getLastBlockVariations?.() ?? [];\n            const fromBlock = __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_getFromBlock).call(this, latestBlockNumber);\n            const account = __classPrivateFieldGet(this, _IncomingTransactionHelper_getCurrentAccount, \"f\").call(this);\n            const currentChainId = __classPrivateFieldGet(this, _IncomingTransactionHelper_getChainId, \"f\").call(this);\n            let remoteTransactions = [];\n            try {\n                remoteTransactions =\n                    await __classPrivateFieldGet(this, _IncomingTransactionHelper_remoteTransactionSource, \"f\").fetchTransactions({\n                        address: account.address,\n                        currentChainId,\n                        fromBlock,\n                        limit: __classPrivateFieldGet(this, _IncomingTransactionHelper_transactionLimit, \"f\"),\n                    });\n                // TODO: Replace `any` with type\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                (0, logger_1.incomingTransactionsLogger)('Error while fetching remote transactions', error);\n                return;\n            }\n            if (!__classPrivateFieldGet(this, _IncomingTransactionHelper_updateTransactions, \"f\")) {\n                const address = account.address.toLowerCase();\n                remoteTransactions = remoteTransactions.filter((tx) => tx.txParams.to?.toLowerCase() === address);\n            }\n            const localTransactions = !__classPrivateFieldGet(this, _IncomingTransactionHelper_updateTransactions, \"f\")\n                ? []\n                : __classPrivateFieldGet(this, _IncomingTransactionHelper_getLocalTransactions, \"f\").call(this);\n            const newTransactions = __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_getNewTransactions).call(this, remoteTransactions, localTransactions);\n            const updatedTransactions = __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_getUpdatedTransactions).call(this, remoteTransactions, localTransactions);\n            if (newTransactions.length > 0 || updatedTransactions.length > 0) {\n                __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_sortTransactionsByTime).call(this, newTransactions);\n                __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_sortTransactionsByTime).call(this, updatedTransactions);\n                (0, logger_1.incomingTransactionsLogger)('Found incoming transactions', {\n                    new: newTransactions,\n                    updated: updatedTransactions,\n                });\n                this.hub.emit('transactions', {\n                    added: newTransactions,\n                    updated: updatedTransactions,\n                });\n            }\n            __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_updateLastFetchedBlockNumber).call(this, remoteTransactions, additionalLastFetchedKeys);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n}\nexports.IncomingTransactionHelper = IncomingTransactionHelper;\n_IncomingTransactionHelper_blockTracker = new WeakMap(), _IncomingTransactionHelper_getCurrentAccount = new WeakMap(), _IncomingTransactionHelper_getLastFetchedBlockNumbers = new WeakMap(), _IncomingTransactionHelper_getLocalTransactions = new WeakMap(), _IncomingTransactionHelper_getChainId = new WeakMap(), _IncomingTransactionHelper_isEnabled = new WeakMap(), _IncomingTransactionHelper_isRunning = new WeakMap(), _IncomingTransactionHelper_mutex = new WeakMap(), _IncomingTransactionHelper_onLatestBlock = new WeakMap(), _IncomingTransactionHelper_queryEntireHistory = new WeakMap(), _IncomingTransactionHelper_remoteTransactionSource = new WeakMap(), _IncomingTransactionHelper_transactionLimit = new WeakMap(), _IncomingTransactionHelper_updateTransactions = new WeakMap(), _IncomingTransactionHelper_instances = new WeakSet(), _IncomingTransactionHelper_sortTransactionsByTime = function _IncomingTransactionHelper_sortTransactionsByTime(transactions) {\n    transactions.sort((a, b) => (a.time < b.time ? -1 : 1));\n}, _IncomingTransactionHelper_getNewTransactions = function _IncomingTransactionHelper_getNewTransactions(remoteTxs, localTxs) {\n    return remoteTxs.filter((tx) => !localTxs.some(({ hash }) => hash === tx.hash));\n}, _IncomingTransactionHelper_getUpdatedTransactions = function _IncomingTransactionHelper_getUpdatedTransactions(remoteTxs, localTxs) {\n    return remoteTxs.filter((remoteTx) => localTxs.some((localTx) => remoteTx.hash === localTx.hash &&\n        __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_isTransactionOutdated).call(this, remoteTx, localTx)));\n}, _IncomingTransactionHelper_isTransactionOutdated = function _IncomingTransactionHelper_isTransactionOutdated(remoteTx, localTx) {\n    return UPDATE_CHECKS.some((getValue) => getValue(remoteTx) !== getValue(localTx));\n}, _IncomingTransactionHelper_getLastFetchedBlockNumberDec = function _IncomingTransactionHelper_getLastFetchedBlockNumberDec() {\n    const additionalLastFetchedKeys = __classPrivateFieldGet(this, _IncomingTransactionHelper_remoteTransactionSource, \"f\").getLastBlockVariations?.() ?? [];\n    const lastFetchedKey = __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_getBlockNumberKey).call(this, additionalLastFetchedKeys);\n    const lastFetchedBlockNumbers = __classPrivateFieldGet(this, _IncomingTransactionHelper_getLastFetchedBlockNumbers, \"f\").call(this);\n    return lastFetchedBlockNumbers[lastFetchedKey];\n}, _IncomingTransactionHelper_getFromBlock = function _IncomingTransactionHelper_getFromBlock(latestBlockNumber) {\n    const lastFetchedBlockNumber = __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_getLastFetchedBlockNumberDec).call(this);\n    if (lastFetchedBlockNumber) {\n        return lastFetchedBlockNumber + 1;\n    }\n    return __classPrivateFieldGet(this, _IncomingTransactionHelper_queryEntireHistory, \"f\")\n        ? undefined\n        : latestBlockNumber - RECENT_HISTORY_BLOCK_RANGE;\n}, _IncomingTransactionHelper_updateLastFetchedBlockNumber = function _IncomingTransactionHelper_updateLastFetchedBlockNumber(remoteTxs, additionalKeys) {\n    let lastFetchedBlockNumber = -1;\n    for (const tx of remoteTxs) {\n        const currentBlockNumberValue = tx.blockNumber\n            ? parseInt(tx.blockNumber, 10)\n            : -1;\n        lastFetchedBlockNumber = Math.max(lastFetchedBlockNumber, currentBlockNumberValue);\n    }\n    if (lastFetchedBlockNumber === -1) {\n        return;\n    }\n    const lastFetchedKey = __classPrivateFieldGet(this, _IncomingTransactionHelper_instances, \"m\", _IncomingTransactionHelper_getBlockNumberKey).call(this, additionalKeys);\n    const lastFetchedBlockNumbers = __classPrivateFieldGet(this, _IncomingTransactionHelper_getLastFetchedBlockNumbers, \"f\").call(this);\n    const previousValue = lastFetchedBlockNumbers[lastFetchedKey];\n    if (previousValue >= lastFetchedBlockNumber) {\n        return;\n    }\n    this.hub.emit('updatedLastFetchedBlockNumbers', {\n        lastFetchedBlockNumbers: {\n            ...lastFetchedBlockNumbers,\n            [lastFetchedKey]: lastFetchedBlockNumber,\n        },\n        blockNumber: lastFetchedBlockNumber,\n    });\n}, _IncomingTransactionHelper_getBlockNumberKey = function _IncomingTransactionHelper_getBlockNumberKey(additionalKeys) {\n    const currentChainId = __classPrivateFieldGet(this, _IncomingTransactionHelper_getChainId, \"f\").call(this);\n    const currentAccount = __classPrivateFieldGet(this, _IncomingTransactionHelper_getCurrentAccount, \"f\").call(this)?.address.toLowerCase();\n    return [currentChainId, currentAccount, ...additionalKeys].join('#');\n}, _IncomingTransactionHelper_canStart = function _IncomingTransactionHelper_canStart() {\n    const isEnabled = __classPrivateFieldGet(this, _IncomingTransactionHelper_isEnabled, \"f\").call(this);\n    const currentChainId = __classPrivateFieldGet(this, _IncomingTransactionHelper_getChainId, \"f\").call(this);\n    const isSupportedNetwork = __classPrivateFieldGet(this, _IncomingTransactionHelper_remoteTransactionSource, \"f\").isSupportedNetwork(currentChainId);\n    return isEnabled && isSupportedNetwork;\n};\n//# sourceMappingURL=IncomingTransactionHelper.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _MultichainTrackingHelper_instances, _MultichainTrackingHelper_isMultichainEnabled, _MultichainTrackingHelper_provider, _MultichainTrackingHelper_nonceTracker, _MultichainTrackingHelper_incomingTransactionOptions, _MultichainTrackingHelper_findNetworkClientIdByChainId, _MultichainTrackingHelper_getNetworkClientById, _MultichainTrackingHelper_getNetworkClientRegistry, _MultichainTrackingHelper_removeIncomingTransactionHelperListeners, _MultichainTrackingHelper_removePendingTransactionTrackerListeners, _MultichainTrackingHelper_createNonceTracker, _MultichainTrackingHelper_createIncomingTransactionHelper, _MultichainTrackingHelper_createPendingTransactionTracker, _MultichainTrackingHelper_nonceMutexesByChainId, _MultichainTrackingHelper_trackingMap, _MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap, _MultichainTrackingHelper_refreshTrackingMap, _MultichainTrackingHelper_stopTrackingByNetworkClientId, _MultichainTrackingHelper_startTrackingByNetworkClientId, _MultichainTrackingHelper_refreshEtherscanRemoteTransactionSources, _MultichainTrackingHelper_getNetworkClient;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultichainTrackingHelper = void 0;\nconst eth_query_1 = __importDefault(require(\"@metamask/eth-query\"));\nconst async_mutex_1 = require(\"async-mutex\");\nconst logger_1 = require(\"../logger.cjs\");\nconst EtherscanRemoteTransactionSource_1 = require(\"./EtherscanRemoteTransactionSource.cjs\");\nclass MultichainTrackingHelper {\n    constructor({ isMultichainEnabled, provider, nonceTracker, incomingTransactionOptions, findNetworkClientIdByChainId, getNetworkClientById, getNetworkClientRegistry, removeIncomingTransactionHelperListeners, removePendingTransactionTrackerListeners, createNonceTracker, createIncomingTransactionHelper, createPendingTransactionTracker, onNetworkStateChange, }) {\n        _MultichainTrackingHelper_instances.add(this);\n        _MultichainTrackingHelper_isMultichainEnabled.set(this, void 0);\n        _MultichainTrackingHelper_provider.set(this, void 0);\n        _MultichainTrackingHelper_nonceTracker.set(this, void 0);\n        _MultichainTrackingHelper_incomingTransactionOptions.set(this, void 0);\n        _MultichainTrackingHelper_findNetworkClientIdByChainId.set(this, void 0);\n        _MultichainTrackingHelper_getNetworkClientById.set(this, void 0);\n        _MultichainTrackingHelper_getNetworkClientRegistry.set(this, void 0);\n        _MultichainTrackingHelper_removeIncomingTransactionHelperListeners.set(this, void 0);\n        _MultichainTrackingHelper_removePendingTransactionTrackerListeners.set(this, void 0);\n        _MultichainTrackingHelper_createNonceTracker.set(this, void 0);\n        _MultichainTrackingHelper_createIncomingTransactionHelper.set(this, void 0);\n        _MultichainTrackingHelper_createPendingTransactionTracker.set(this, void 0);\n        _MultichainTrackingHelper_nonceMutexesByChainId.set(this, new Map());\n        _MultichainTrackingHelper_trackingMap.set(this, new Map());\n        _MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap.set(this, new Map());\n        this.checkForPendingTransactionAndStartPolling = () => {\n            for (const [, trackers] of __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\")) {\n                trackers.pendingTransactionTracker.startIfPendingTransactions();\n            }\n        };\n        _MultichainTrackingHelper_refreshTrackingMap.set(this, (networkClients) => {\n            __classPrivateFieldGet(this, _MultichainTrackingHelper_refreshEtherscanRemoteTransactionSources, \"f\").call(this, networkClients);\n            const networkClientIds = Object.keys(networkClients);\n            const existingNetworkClientIds = Array.from(__classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").keys());\n            // Remove tracking for NetworkClientIds that no longer exist\n            const networkClientIdsToRemove = existingNetworkClientIds.filter((id) => !networkClientIds.includes(id));\n            networkClientIdsToRemove.forEach((id) => {\n                __classPrivateFieldGet(this, _MultichainTrackingHelper_instances, \"m\", _MultichainTrackingHelper_stopTrackingByNetworkClientId).call(this, id);\n            });\n            // Start tracking new NetworkClientIds from the registry\n            const networkClientIdsToAdd = networkClientIds.filter((id) => !existingNetworkClientIds.includes(id));\n            networkClientIdsToAdd.forEach((id) => {\n                __classPrivateFieldGet(this, _MultichainTrackingHelper_instances, \"m\", _MultichainTrackingHelper_startTrackingByNetworkClientId).call(this, id);\n            });\n        });\n        _MultichainTrackingHelper_refreshEtherscanRemoteTransactionSources.set(this, (networkClients) => {\n            // this will be prettier when we have consolidated network clients with a single chainId:\n            // check if there are still other network clients using the same chainId\n            // if not remove the etherscanRemoteTransaction source from the map\n            const chainIdsInRegistry = new Set();\n            Object.values(networkClients).forEach((networkClient) => chainIdsInRegistry.add(networkClient.configuration.chainId));\n            const existingChainIds = Array.from(__classPrivateFieldGet(this, _MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap, \"f\").keys());\n            const chainIdsToRemove = existingChainIds.filter((chainId) => !chainIdsInRegistry.has(chainId));\n            chainIdsToRemove.forEach((chainId) => {\n                __classPrivateFieldGet(this, _MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap, \"f\").delete(chainId);\n            });\n        });\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_isMultichainEnabled, isMultichainEnabled, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_provider, provider, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_nonceTracker, nonceTracker, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_incomingTransactionOptions, incomingTransactionOptions, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_findNetworkClientIdByChainId, findNetworkClientIdByChainId, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_getNetworkClientById, getNetworkClientById, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_getNetworkClientRegistry, getNetworkClientRegistry, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_removeIncomingTransactionHelperListeners, removeIncomingTransactionHelperListeners, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_removePendingTransactionTrackerListeners, removePendingTransactionTrackerListeners, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_createNonceTracker, createNonceTracker, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_createIncomingTransactionHelper, createIncomingTransactionHelper, \"f\");\n        __classPrivateFieldSet(this, _MultichainTrackingHelper_createPendingTransactionTracker, createPendingTransactionTracker, \"f\");\n        onNetworkStateChange((_, patches) => {\n            if (__classPrivateFieldGet(this, _MultichainTrackingHelper_isMultichainEnabled, \"f\")) {\n                const networkClients = __classPrivateFieldGet(this, _MultichainTrackingHelper_getNetworkClientRegistry, \"f\").call(this);\n                patches.forEach(({ op, path }) => {\n                    if (op === 'remove' && path[0] === 'networkConfigurations') {\n                        const networkClientId = path[1];\n                        delete networkClients[networkClientId];\n                    }\n                });\n                __classPrivateFieldGet(this, _MultichainTrackingHelper_refreshTrackingMap, \"f\").call(this, networkClients);\n            }\n        });\n    }\n    initialize() {\n        if (!__classPrivateFieldGet(this, _MultichainTrackingHelper_isMultichainEnabled, \"f\")) {\n            return;\n        }\n        const networkClients = __classPrivateFieldGet(this, _MultichainTrackingHelper_getNetworkClientRegistry, \"f\").call(this);\n        __classPrivateFieldGet(this, _MultichainTrackingHelper_refreshTrackingMap, \"f\").call(this, networkClients);\n    }\n    has(networkClientId) {\n        return __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").has(networkClientId);\n    }\n    getEthQuery({ networkClientId, chainId, } = {}) {\n        if (!__classPrivateFieldGet(this, _MultichainTrackingHelper_isMultichainEnabled, \"f\")) {\n            return new eth_query_1.default(this.getProvider());\n        }\n        return new eth_query_1.default(this.getProvider({ networkClientId, chainId }));\n    }\n    getProvider({ networkClientId, chainId, } = {}) {\n        if (!__classPrivateFieldGet(this, _MultichainTrackingHelper_isMultichainEnabled, \"f\")) {\n            return __classPrivateFieldGet(this, _MultichainTrackingHelper_provider, \"f\");\n        }\n        const networkClient = __classPrivateFieldGet(this, _MultichainTrackingHelper_instances, \"m\", _MultichainTrackingHelper_getNetworkClient).call(this, {\n            networkClientId,\n            chainId,\n        });\n        return networkClient?.provider || __classPrivateFieldGet(this, _MultichainTrackingHelper_provider, \"f\");\n    }\n    /**\n     * Gets the mutex intended to guard the nonceTracker for a particular chainId and key .\n     *\n     * @param opts - The options object.\n     * @param opts.chainId - The hex chainId.\n     * @param opts.key - The hex address (or constant) pertaining to the chainId\n     * @returns Mutex instance for the given chainId and key pair\n     */\n    async acquireNonceLockForChainIdKey({ chainId, key = 'global', }) {\n        let nonceMutexesForChainId = __classPrivateFieldGet(this, _MultichainTrackingHelper_nonceMutexesByChainId, \"f\").get(chainId);\n        if (!nonceMutexesForChainId) {\n            nonceMutexesForChainId = new Map();\n            __classPrivateFieldGet(this, _MultichainTrackingHelper_nonceMutexesByChainId, \"f\").set(chainId, nonceMutexesForChainId);\n        }\n        let nonceMutexForKey = nonceMutexesForChainId.get(key);\n        if (!nonceMutexForKey) {\n            nonceMutexForKey = new async_mutex_1.Mutex();\n            nonceMutexesForChainId.set(key, nonceMutexForKey);\n        }\n        return await nonceMutexForKey.acquire();\n    }\n    /**\n     * Gets the next nonce according to the nonce-tracker.\n     * Ensure `releaseLock` is called once processing of the `nonce` value is complete.\n     *\n     * @param address - The hex string address for the transaction.\n     * @param networkClientId - The network client ID for the transaction, used to fetch the correct nonce tracker.\n     * @returns object with the `nextNonce` `nonceDetails`, and the releaseLock.\n     */\n    async getNonceLock(address, networkClientId) {\n        let releaseLockForChainIdKey;\n        let nonceTracker = __classPrivateFieldGet(this, _MultichainTrackingHelper_nonceTracker, \"f\");\n        if (networkClientId && __classPrivateFieldGet(this, _MultichainTrackingHelper_isMultichainEnabled, \"f\")) {\n            const networkClient = __classPrivateFieldGet(this, _MultichainTrackingHelper_getNetworkClientById, \"f\").call(this, networkClientId);\n            releaseLockForChainIdKey = await this.acquireNonceLockForChainIdKey({\n                chainId: networkClient.configuration.chainId,\n                key: address,\n            });\n            const trackers = __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").get(networkClientId);\n            if (!trackers) {\n                throw new Error('missing nonceTracker for networkClientId');\n            }\n            nonceTracker = trackers.nonceTracker;\n        }\n        // Acquires the lock for the chainId + address and the nonceLock from the nonceTracker, then\n        // couples them together by replacing the nonceLock's releaseLock method with\n        // an anonymous function that calls releases both the original nonceLock and the\n        // lock for the chainId.\n        try {\n            const nonceLock = await nonceTracker.getNonceLock(address);\n            return {\n                ...nonceLock,\n                releaseLock: () => {\n                    nonceLock.releaseLock();\n                    releaseLockForChainIdKey?.();\n                },\n            };\n        }\n        catch (err) {\n            releaseLockForChainIdKey?.();\n            throw err;\n        }\n    }\n    startIncomingTransactionPolling(networkClientIds = []) {\n        networkClientIds.forEach((networkClientId) => {\n            __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").get(networkClientId)?.incomingTransactionHelper.start();\n        });\n    }\n    stopIncomingTransactionPolling(networkClientIds = []) {\n        networkClientIds.forEach((networkClientId) => {\n            __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").get(networkClientId)?.incomingTransactionHelper.stop();\n        });\n    }\n    stopAllIncomingTransactionPolling() {\n        for (const [, trackers] of __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\")) {\n            trackers.incomingTransactionHelper.stop();\n        }\n    }\n    async updateIncomingTransactions(networkClientIds = []) {\n        const promises = await Promise.allSettled(networkClientIds.map(async (networkClientId) => {\n            return await __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\")\n                .get(networkClientId)\n                ?.incomingTransactionHelper.update();\n        }));\n        promises\n            .filter((result) => result.status === 'rejected')\n            .forEach((result) => {\n            (0, logger_1.incomingTransactionsLogger)('failed to update incoming transactions', result.reason);\n        });\n    }\n    stopAllTracking() {\n        for (const [networkClientId] of __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\")) {\n            __classPrivateFieldGet(this, _MultichainTrackingHelper_instances, \"m\", _MultichainTrackingHelper_stopTrackingByNetworkClientId).call(this, networkClientId);\n        }\n    }\n}\nexports.MultichainTrackingHelper = MultichainTrackingHelper;\n_MultichainTrackingHelper_isMultichainEnabled = new WeakMap(), _MultichainTrackingHelper_provider = new WeakMap(), _MultichainTrackingHelper_nonceTracker = new WeakMap(), _MultichainTrackingHelper_incomingTransactionOptions = new WeakMap(), _MultichainTrackingHelper_findNetworkClientIdByChainId = new WeakMap(), _MultichainTrackingHelper_getNetworkClientById = new WeakMap(), _MultichainTrackingHelper_getNetworkClientRegistry = new WeakMap(), _MultichainTrackingHelper_removeIncomingTransactionHelperListeners = new WeakMap(), _MultichainTrackingHelper_removePendingTransactionTrackerListeners = new WeakMap(), _MultichainTrackingHelper_createNonceTracker = new WeakMap(), _MultichainTrackingHelper_createIncomingTransactionHelper = new WeakMap(), _MultichainTrackingHelper_createPendingTransactionTracker = new WeakMap(), _MultichainTrackingHelper_nonceMutexesByChainId = new WeakMap(), _MultichainTrackingHelper_trackingMap = new WeakMap(), _MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap = new WeakMap(), _MultichainTrackingHelper_refreshTrackingMap = new WeakMap(), _MultichainTrackingHelper_refreshEtherscanRemoteTransactionSources = new WeakMap(), _MultichainTrackingHelper_instances = new WeakSet(), _MultichainTrackingHelper_stopTrackingByNetworkClientId = function _MultichainTrackingHelper_stopTrackingByNetworkClientId(networkClientId) {\n    const trackers = __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").get(networkClientId);\n    if (trackers) {\n        trackers.pendingTransactionTracker.stop();\n        __classPrivateFieldGet(this, _MultichainTrackingHelper_removePendingTransactionTrackerListeners, \"f\").call(this, trackers.pendingTransactionTracker);\n        trackers.incomingTransactionHelper.stop();\n        __classPrivateFieldGet(this, _MultichainTrackingHelper_removeIncomingTransactionHelperListeners, \"f\").call(this, trackers.incomingTransactionHelper);\n        __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").delete(networkClientId);\n    }\n}, _MultichainTrackingHelper_startTrackingByNetworkClientId = function _MultichainTrackingHelper_startTrackingByNetworkClientId(networkClientId) {\n    const trackers = __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").get(networkClientId);\n    if (trackers) {\n        return;\n    }\n    const { provider, blockTracker, configuration: { chainId }, } = __classPrivateFieldGet(this, _MultichainTrackingHelper_getNetworkClientById, \"f\").call(this, networkClientId);\n    let etherscanRemoteTransactionSource = __classPrivateFieldGet(this, _MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap, \"f\").get(chainId);\n    if (!etherscanRemoteTransactionSource) {\n        etherscanRemoteTransactionSource = new EtherscanRemoteTransactionSource_1.EtherscanRemoteTransactionSource({\n            includeTokenTransfers: __classPrivateFieldGet(this, _MultichainTrackingHelper_incomingTransactionOptions, \"f\").includeTokenTransfers,\n        });\n        __classPrivateFieldGet(this, _MultichainTrackingHelper_etherscanRemoteTransactionSourcesMap, \"f\").set(chainId, etherscanRemoteTransactionSource);\n    }\n    const nonceTracker = __classPrivateFieldGet(this, _MultichainTrackingHelper_createNonceTracker, \"f\").call(this, {\n        provider,\n        blockTracker,\n        chainId,\n    });\n    const incomingTransactionHelper = __classPrivateFieldGet(this, _MultichainTrackingHelper_createIncomingTransactionHelper, \"f\").call(this, {\n        blockTracker,\n        etherscanRemoteTransactionSource,\n        chainId,\n    });\n    const pendingTransactionTracker = __classPrivateFieldGet(this, _MultichainTrackingHelper_createPendingTransactionTracker, \"f\").call(this, {\n        provider,\n        blockTracker,\n        chainId,\n    });\n    __classPrivateFieldGet(this, _MultichainTrackingHelper_trackingMap, \"f\").set(networkClientId, {\n        nonceTracker,\n        incomingTransactionHelper,\n        pendingTransactionTracker,\n    });\n}, _MultichainTrackingHelper_getNetworkClient = function _MultichainTrackingHelper_getNetworkClient({ networkClientId, chainId, } = {}) {\n    let networkClient;\n    if (networkClientId) {\n        try {\n            networkClient = __classPrivateFieldGet(this, _MultichainTrackingHelper_getNetworkClientById, \"f\").call(this, networkClientId);\n        }\n        catch (err) {\n            (0, logger_1.incomingTransactionsLogger)('failed to get network client by networkClientId');\n        }\n    }\n    if (!networkClient && chainId) {\n        try {\n            const networkClientIdForChainId = __classPrivateFieldGet(this, _MultichainTrackingHelper_findNetworkClientIdByChainId, \"f\").call(this, chainId);\n            networkClient = __classPrivateFieldGet(this, _MultichainTrackingHelper_getNetworkClientById, \"f\").call(this, networkClientIdForChainId);\n        }\n        catch (err) {\n            (0, logger_1.incomingTransactionsLogger)('failed to get network client by chainId');\n        }\n    }\n    return networkClient;\n};\n//# sourceMappingURL=MultichainTrackingHelper.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _PendingTransactionTracker_instances, _PendingTransactionTracker_blockTracker, _PendingTransactionTracker_droppedBlockCountByHash, _PendingTransactionTracker_getChainId, _PendingTransactionTracker_getEthQuery, _PendingTransactionTracker_getTransactions, _PendingTransactionTracker_isResubmitEnabled, _PendingTransactionTracker_listener, _PendingTransactionTracker_getGlobalLock, _PendingTransactionTracker_publishTransaction, _PendingTransactionTracker_running, _PendingTransactionTracker_beforeCheckPendingTransaction, _PendingTransactionTracker_beforePublish, _PendingTransactionTracker_start, _PendingTransactionTracker_onLatestBlock, _PendingTransactionTracker_checkTransactions, _PendingTransactionTracker_resubmitTransactions, _PendingTransactionTracker_isKnownTransactionError, _PendingTransactionTracker_resubmitTransaction, _PendingTransactionTracker_isResubmitDue, _PendingTransactionTracker_checkTransaction, _PendingTransactionTracker_onTransactionConfirmed, _PendingTransactionTracker_isTransactionDropped, _PendingTransactionTracker_isNonceTaken, _PendingTransactionTracker_getPendingTransactions, _PendingTransactionTracker_warnTransaction, _PendingTransactionTracker_failTransaction, _PendingTransactionTracker_dropTransaction, _PendingTransactionTracker_updateTransaction, _PendingTransactionTracker_getTransactionReceipt, _PendingTransactionTracker_getBlockByHash, _PendingTransactionTracker_getNetworkTransactionCount, _PendingTransactionTracker_getCurrentChainTransactions;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PendingTransactionTracker = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst events_1 = __importDefault(require(\"events\"));\nconst lodash_1 = require(\"lodash\");\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\n/**\n * We wait this many blocks before emitting a 'transaction-dropped' event\n * This is because we could be talking to a node that is out of sync\n */\nconst DROPPED_BLOCK_COUNT = 3;\nconst RECEIPT_STATUS_SUCCESS = '0x1';\nconst RECEIPT_STATUS_FAILURE = '0x0';\nconst MAX_RETRY_BLOCK_DISTANCE = 50;\nconst KNOWN_TRANSACTION_ERRORS = [\n    'replacement transaction underpriced',\n    'known transaction',\n    'gas price too low to replace',\n    'transaction with the same hash was already imported',\n    'gateway timeout',\n    'nonce too low',\n];\nconst log = (0, logger_1.createModuleLogger)(logger_1.projectLogger, 'pending-transactions');\nclass PendingTransactionTracker {\n    constructor({ blockTracker, getChainId, getEthQuery, getTransactions, isResubmitEnabled, getGlobalLock, publishTransaction, hooks, }) {\n        _PendingTransactionTracker_instances.add(this);\n        _PendingTransactionTracker_blockTracker.set(this, void 0);\n        _PendingTransactionTracker_droppedBlockCountByHash.set(this, void 0);\n        _PendingTransactionTracker_getChainId.set(this, void 0);\n        _PendingTransactionTracker_getEthQuery.set(this, void 0);\n        _PendingTransactionTracker_getTransactions.set(this, void 0);\n        _PendingTransactionTracker_isResubmitEnabled.set(this, void 0);\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _PendingTransactionTracker_listener.set(this, void 0);\n        _PendingTransactionTracker_getGlobalLock.set(this, void 0);\n        _PendingTransactionTracker_publishTransaction.set(this, void 0);\n        _PendingTransactionTracker_running.set(this, void 0);\n        _PendingTransactionTracker_beforeCheckPendingTransaction.set(this, void 0);\n        _PendingTransactionTracker_beforePublish.set(this, void 0);\n        this.startIfPendingTransactions = () => {\n            const pendingTransactions = __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getPendingTransactions).call(this);\n            if (pendingTransactions.length) {\n                __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_start).call(this);\n            }\n            else {\n                this.stop();\n            }\n        };\n        this.hub = new events_1.default();\n        __classPrivateFieldSet(this, _PendingTransactionTracker_blockTracker, blockTracker, \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_droppedBlockCountByHash, new Map(), \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_getChainId, getChainId, \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_getEthQuery, getEthQuery, \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_getTransactions, getTransactions, \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_isResubmitEnabled, isResubmitEnabled ?? (() => true), \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_listener, __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_onLatestBlock).bind(this), \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_getGlobalLock, getGlobalLock, \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_publishTransaction, publishTransaction, \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_running, false, \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_beforePublish, hooks?.beforePublish ?? (() => true), \"f\");\n        __classPrivateFieldSet(this, _PendingTransactionTracker_beforeCheckPendingTransaction, hooks?.beforeCheckPendingTransaction ?? (() => true), \"f\");\n    }\n    /**\n     * Force checks the network if the given transaction is confirmed and updates it's status.\n     *\n     * @param txMeta - The transaction to check\n     */\n    async forceCheckTransaction(txMeta) {\n        const releaseLock = await __classPrivateFieldGet(this, _PendingTransactionTracker_getGlobalLock, \"f\").call(this);\n        try {\n            await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_checkTransaction).call(this, txMeta);\n        }\n        catch (error) {\n            /* istanbul ignore next */\n            log('Failed to check transaction', error);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    stop() {\n        if (!__classPrivateFieldGet(this, _PendingTransactionTracker_running, \"f\")) {\n            return;\n        }\n        __classPrivateFieldGet(this, _PendingTransactionTracker_blockTracker, \"f\").removeListener('latest', __classPrivateFieldGet(this, _PendingTransactionTracker_listener, \"f\"));\n        __classPrivateFieldSet(this, _PendingTransactionTracker_running, false, \"f\");\n        log('Stopped polling');\n    }\n}\nexports.PendingTransactionTracker = PendingTransactionTracker;\n_PendingTransactionTracker_blockTracker = new WeakMap(), _PendingTransactionTracker_droppedBlockCountByHash = new WeakMap(), _PendingTransactionTracker_getChainId = new WeakMap(), _PendingTransactionTracker_getEthQuery = new WeakMap(), _PendingTransactionTracker_getTransactions = new WeakMap(), _PendingTransactionTracker_isResubmitEnabled = new WeakMap(), _PendingTransactionTracker_listener = new WeakMap(), _PendingTransactionTracker_getGlobalLock = new WeakMap(), _PendingTransactionTracker_publishTransaction = new WeakMap(), _PendingTransactionTracker_running = new WeakMap(), _PendingTransactionTracker_beforeCheckPendingTransaction = new WeakMap(), _PendingTransactionTracker_beforePublish = new WeakMap(), _PendingTransactionTracker_instances = new WeakSet(), _PendingTransactionTracker_start = function _PendingTransactionTracker_start() {\n    if (__classPrivateFieldGet(this, _PendingTransactionTracker_running, \"f\")) {\n        return;\n    }\n    __classPrivateFieldGet(this, _PendingTransactionTracker_blockTracker, \"f\").on('latest', __classPrivateFieldGet(this, _PendingTransactionTracker_listener, \"f\"));\n    __classPrivateFieldSet(this, _PendingTransactionTracker_running, true, \"f\");\n    log('Started polling');\n}, _PendingTransactionTracker_onLatestBlock = async function _PendingTransactionTracker_onLatestBlock(latestBlockNumber) {\n    const releaseLock = await __classPrivateFieldGet(this, _PendingTransactionTracker_getGlobalLock, \"f\").call(this);\n    try {\n        await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_checkTransactions).call(this);\n    }\n    catch (error) {\n        /* istanbul ignore next */\n        log('Failed to check transactions', error);\n    }\n    finally {\n        releaseLock();\n    }\n    try {\n        await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_resubmitTransactions).call(this, latestBlockNumber);\n    }\n    catch (error) {\n        /* istanbul ignore next */\n        log('Failed to resubmit transactions', error);\n    }\n}, _PendingTransactionTracker_checkTransactions = async function _PendingTransactionTracker_checkTransactions() {\n    log('Checking transactions');\n    const pendingTransactions = __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getPendingTransactions).call(this);\n    if (!pendingTransactions.length) {\n        log('No pending transactions to check');\n        return;\n    }\n    log('Found pending transactions to check', {\n        count: pendingTransactions.length,\n        ids: pendingTransactions.map((tx) => tx.id),\n    });\n    await Promise.all(pendingTransactions.map((tx) => __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_checkTransaction).call(this, tx)));\n}, _PendingTransactionTracker_resubmitTransactions = async function _PendingTransactionTracker_resubmitTransactions(latestBlockNumber) {\n    if (!__classPrivateFieldGet(this, _PendingTransactionTracker_isResubmitEnabled, \"f\").call(this) || !__classPrivateFieldGet(this, _PendingTransactionTracker_running, \"f\")) {\n        return;\n    }\n    log('Resubmitting transactions');\n    const pendingTransactions = __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getPendingTransactions).call(this);\n    if (!pendingTransactions.length) {\n        log('No pending transactions to resubmit');\n        return;\n    }\n    log('Found pending transactions to resubmit', {\n        count: pendingTransactions.length,\n        ids: pendingTransactions.map((tx) => tx.id),\n    });\n    for (const txMeta of pendingTransactions) {\n        try {\n            await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_resubmitTransaction).call(this, txMeta, latestBlockNumber);\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            /* istanbul ignore next */\n            const errorMessage = error.value?.message?.toLowerCase() ||\n                error.message?.toLowerCase() ||\n                String(error);\n            if (__classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_isKnownTransactionError).call(this, errorMessage)) {\n                log('Ignoring known transaction error', errorMessage);\n                continue;\n            }\n            __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_warnTransaction).call(this, txMeta, error.message, 'There was an error when resubmitting this transaction.');\n        }\n    }\n}, _PendingTransactionTracker_isKnownTransactionError = function _PendingTransactionTracker_isKnownTransactionError(errorMessage) {\n    return KNOWN_TRANSACTION_ERRORS.some((knownError) => errorMessage.includes(knownError));\n}, _PendingTransactionTracker_resubmitTransaction = async function _PendingTransactionTracker_resubmitTransaction(txMeta, latestBlockNumber) {\n    if (!__classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_isResubmitDue).call(this, txMeta, latestBlockNumber)) {\n        return;\n    }\n    const { rawTx } = txMeta;\n    if (!__classPrivateFieldGet(this, _PendingTransactionTracker_beforePublish, \"f\").call(this, txMeta)) {\n        return;\n    }\n    const ethQuery = __classPrivateFieldGet(this, _PendingTransactionTracker_getEthQuery, \"f\").call(this, txMeta.networkClientId);\n    await __classPrivateFieldGet(this, _PendingTransactionTracker_publishTransaction, \"f\").call(this, ethQuery, rawTx);\n    const retryCount = (txMeta.retryCount ?? 0) + 1;\n    __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_updateTransaction).call(this, (0, lodash_1.merge)({}, txMeta, { retryCount }), 'PendingTransactionTracker:transaction-retry - Retry count increased');\n}, _PendingTransactionTracker_isResubmitDue = function _PendingTransactionTracker_isResubmitDue(txMeta, latestBlockNumber) {\n    const txMetaWithFirstRetryBlockNumber = (0, lodash_1.cloneDeep)(txMeta);\n    if (!txMetaWithFirstRetryBlockNumber.firstRetryBlockNumber) {\n        txMetaWithFirstRetryBlockNumber.firstRetryBlockNumber = latestBlockNumber;\n        __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_updateTransaction).call(this, txMetaWithFirstRetryBlockNumber, 'PendingTransactionTracker:#isResubmitDue - First retry block number set');\n    }\n    const { firstRetryBlockNumber } = txMetaWithFirstRetryBlockNumber;\n    const blocksSinceFirstRetry = Number.parseInt(latestBlockNumber, 16) -\n        Number.parseInt(firstRetryBlockNumber, 16);\n    const retryCount = txMeta.retryCount || 0;\n    // Exponential backoff to limit retries at publishing\n    // Capped at ~15 minutes between retries\n    const requiredBlocksSinceFirstRetry = Math.min(MAX_RETRY_BLOCK_DISTANCE, Math.pow(2, retryCount));\n    return blocksSinceFirstRetry >= requiredBlocksSinceFirstRetry;\n}, _PendingTransactionTracker_checkTransaction = async function _PendingTransactionTracker_checkTransaction(txMeta) {\n    const { hash, id } = txMeta;\n    if (!hash && __classPrivateFieldGet(this, _PendingTransactionTracker_beforeCheckPendingTransaction, \"f\").call(this, txMeta)) {\n        const error = new Error('We had an error while submitting this transaction, please try again.');\n        error.name = 'NoTxHashError';\n        __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_failTransaction).call(this, txMeta, error);\n        return;\n    }\n    if (__classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_isNonceTaken).call(this, txMeta)) {\n        log('Nonce already taken', id);\n        __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_dropTransaction).call(this, txMeta);\n        return;\n    }\n    try {\n        const receipt = await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getTransactionReceipt).call(this, hash);\n        const isSuccess = receipt?.status === RECEIPT_STATUS_SUCCESS;\n        const isFailure = receipt?.status === RECEIPT_STATUS_FAILURE;\n        if (isFailure) {\n            log('Transaction receipt has failed status');\n            __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_failTransaction).call(this, txMeta, new Error('Transaction dropped or replaced'));\n            return;\n        }\n        const { blockNumber, blockHash } = receipt || {};\n        if (isSuccess && blockNumber && blockHash) {\n            await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_onTransactionConfirmed).call(this, txMeta, {\n                ...receipt,\n                blockNumber,\n                blockHash,\n            });\n            return;\n        }\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        log('Failed to check transaction', id, error);\n        __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_warnTransaction).call(this, txMeta, error.message, 'There was a problem loading this transaction.');\n        return;\n    }\n    if (await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_isTransactionDropped).call(this, txMeta)) {\n        __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_dropTransaction).call(this, txMeta);\n    }\n}, _PendingTransactionTracker_onTransactionConfirmed = async function _PendingTransactionTracker_onTransactionConfirmed(txMeta, receipt) {\n    const { id } = txMeta;\n    const { blockHash } = receipt;\n    log('Transaction confirmed', id);\n    const { baseFeePerGas, timestamp: blockTimestamp } = await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getBlockByHash).call(this, blockHash, false);\n    const updatedTxMeta = (0, lodash_1.cloneDeep)(txMeta);\n    updatedTxMeta.baseFeePerGas = baseFeePerGas;\n    updatedTxMeta.blockTimestamp = blockTimestamp;\n    updatedTxMeta.status = types_1.TransactionStatus.confirmed;\n    updatedTxMeta.txParams = {\n        ...updatedTxMeta.txParams,\n        gasUsed: receipt.gasUsed,\n    };\n    updatedTxMeta.txReceipt = receipt;\n    updatedTxMeta.verifiedOnBlockchain = true;\n    __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_updateTransaction).call(this, updatedTxMeta, 'PendingTransactionTracker:#onTransactionConfirmed - Transaction confirmed');\n    this.hub.emit('transaction-confirmed', updatedTxMeta);\n}, _PendingTransactionTracker_isTransactionDropped = async function _PendingTransactionTracker_isTransactionDropped(txMeta) {\n    const { hash, id, txParams: { nonce, from }, } = txMeta;\n    /* istanbul ignore next */\n    if (!nonce || !hash) {\n        return false;\n    }\n    const networkNextNonceHex = await __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getNetworkTransactionCount).call(this, from);\n    const networkNextNonceNumber = parseInt(networkNextNonceHex, 16);\n    const nonceNumber = parseInt(nonce, 16);\n    if (nonceNumber >= networkNextNonceNumber) {\n        return false;\n    }\n    let droppedBlockCount = __classPrivateFieldGet(this, _PendingTransactionTracker_droppedBlockCountByHash, \"f\").get(hash);\n    if (droppedBlockCount === undefined) {\n        droppedBlockCount = 0;\n        __classPrivateFieldGet(this, _PendingTransactionTracker_droppedBlockCountByHash, \"f\").set(hash, droppedBlockCount);\n    }\n    if (droppedBlockCount < DROPPED_BLOCK_COUNT) {\n        log('Incrementing dropped block count', { id, droppedBlockCount });\n        __classPrivateFieldGet(this, _PendingTransactionTracker_droppedBlockCountByHash, \"f\").set(hash, droppedBlockCount + 1);\n        return false;\n    }\n    log('Hit dropped block count', id);\n    __classPrivateFieldGet(this, _PendingTransactionTracker_droppedBlockCountByHash, \"f\").delete(hash);\n    return true;\n}, _PendingTransactionTracker_isNonceTaken = function _PendingTransactionTracker_isNonceTaken(txMeta) {\n    const { id, txParams } = txMeta;\n    return __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getCurrentChainTransactions).call(this).some((tx) => tx.id !== id &&\n        tx.txParams.from === txParams.from &&\n        tx.status === types_1.TransactionStatus.confirmed &&\n        tx.txParams.nonce === txParams.nonce &&\n        tx.type !== types_1.TransactionType.incoming);\n}, _PendingTransactionTracker_getPendingTransactions = function _PendingTransactionTracker_getPendingTransactions() {\n    return __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_getCurrentChainTransactions).call(this).filter((tx) => tx.status === types_1.TransactionStatus.submitted &&\n        !tx.verifiedOnBlockchain &&\n        !tx.isUserOperation);\n}, _PendingTransactionTracker_warnTransaction = function _PendingTransactionTracker_warnTransaction(txMeta, error, message) {\n    __classPrivateFieldGet(this, _PendingTransactionTracker_instances, \"m\", _PendingTransactionTracker_updateTransaction).call(this, {\n        ...txMeta,\n        warning: { error, message },\n    }, 'PendingTransactionTracker:#warnTransaction - Warning added');\n}, _PendingTransactionTracker_failTransaction = function _PendingTransactionTracker_failTransaction(txMeta, error) {\n    log('Transaction failed', txMeta.id, error);\n    this.hub.emit('transaction-failed', txMeta, error);\n}, _PendingTransactionTracker_dropTransaction = function _PendingTransactionTracker_dropTransaction(txMeta) {\n    log('Transaction dropped', txMeta.id);\n    this.hub.emit('transaction-dropped', txMeta);\n}, _PendingTransactionTracker_updateTransaction = function _PendingTransactionTracker_updateTransaction(txMeta, note) {\n    this.hub.emit('transaction-updated', txMeta, note);\n}, _PendingTransactionTracker_getTransactionReceipt = async function _PendingTransactionTracker_getTransactionReceipt(txHash) {\n    return await (0, controller_utils_1.query)(__classPrivateFieldGet(this, _PendingTransactionTracker_getEthQuery, \"f\").call(this), 'getTransactionReceipt', [txHash]);\n}, _PendingTransactionTracker_getBlockByHash = async function _PendingTransactionTracker_getBlockByHash(blockHash, includeTransactionDetails) {\n    return await (0, controller_utils_1.query)(__classPrivateFieldGet(this, _PendingTransactionTracker_getEthQuery, \"f\").call(this), 'getBlockByHash', [\n        blockHash,\n        includeTransactionDetails,\n    ]);\n}, _PendingTransactionTracker_getNetworkTransactionCount = async function _PendingTransactionTracker_getNetworkTransactionCount(address) {\n    return await (0, controller_utils_1.query)(__classPrivateFieldGet(this, _PendingTransactionTracker_getEthQuery, \"f\").call(this), 'getTransactionCount', [address]);\n}, _PendingTransactionTracker_getCurrentChainTransactions = function _PendingTransactionTracker_getCurrentChainTransactions() {\n    const currentChainId = __classPrivateFieldGet(this, _PendingTransactionTracker_getChainId, \"f\").call(this);\n    return __classPrivateFieldGet(this, _PendingTransactionTracker_getTransactions, \"f\").call(this).filter((tx) => tx.chainId === currentChainId);\n};\n//# sourceMappingURL=PendingTransactionTracker.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeTransactionParams = exports.isEIP1559Transaction = exports.mergeGasFeeEstimates = exports.determineTransactionType = exports.MAX_TRANSACTION_HISTORY_LENGTH = exports.DISPLAYED_TRANSACTION_HISTORY_PATHS = exports.WalletDevice = exports.UserFeeLevel = exports.TransactionType = exports.TransactionStatus = exports.TransactionEnvelopeType = exports.SimulationTokenStandard = exports.SimulationErrorCode = exports.GasFeeEstimateType = exports.GasFeeEstimateLevel = exports.TransactionController = exports.CANCEL_RATE = exports.HARDFORK = void 0;\nvar TransactionController_1 = require(\"./TransactionController.cjs\");\nObject.defineProperty(exports, \"HARDFORK\", { enumerable: true, get: function () { return TransactionController_1.HARDFORK; } });\nObject.defineProperty(exports, \"CANCEL_RATE\", { enumerable: true, get: function () { return TransactionController_1.CANCEL_RATE; } });\nObject.defineProperty(exports, \"TransactionController\", { enumerable: true, get: function () { return TransactionController_1.TransactionController; } });\nvar types_1 = require(\"./types.cjs\");\nObject.defineProperty(exports, \"GasFeeEstimateLevel\", { enumerable: true, get: function () { return types_1.GasFeeEstimateLevel; } });\nObject.defineProperty(exports, \"GasFeeEstimateType\", { enumerable: true, get: function () { return types_1.GasFeeEstimateType; } });\nObject.defineProperty(exports, \"SimulationErrorCode\", { enumerable: true, get: function () { return types_1.SimulationErrorCode; } });\nObject.defineProperty(exports, \"SimulationTokenStandard\", { enumerable: true, get: function () { return types_1.SimulationTokenStandard; } });\nObject.defineProperty(exports, \"TransactionEnvelopeType\", { enumerable: true, get: function () { return types_1.TransactionEnvelopeType; } });\nObject.defineProperty(exports, \"TransactionStatus\", { enumerable: true, get: function () { return types_1.TransactionStatus; } });\nObject.defineProperty(exports, \"TransactionType\", { enumerable: true, get: function () { return types_1.TransactionType; } });\nObject.defineProperty(exports, \"UserFeeLevel\", { enumerable: true, get: function () { return types_1.UserFeeLevel; } });\nObject.defineProperty(exports, \"WalletDevice\", { enumerable: true, get: function () { return types_1.WalletDevice; } });\nvar history_1 = require(\"./utils/history.cjs\");\nObject.defineProperty(exports, \"DISPLAYED_TRANSACTION_HISTORY_PATHS\", { enumerable: true, get: function () { return history_1.DISPLAYED_TRANSACTION_HISTORY_PATHS; } });\nObject.defineProperty(exports, \"MAX_TRANSACTION_HISTORY_LENGTH\", { enumerable: true, get: function () { return history_1.MAX_TRANSACTION_HISTORY_LENGTH; } });\nvar transaction_type_1 = require(\"./utils/transaction-type.cjs\");\nObject.defineProperty(exports, \"determineTransactionType\", { enumerable: true, get: function () { return transaction_type_1.determineTransactionType; } });\nvar gas_flow_1 = require(\"./utils/gas-flow.cjs\");\nObject.defineProperty(exports, \"mergeGasFeeEstimates\", { enumerable: true, get: function () { return gas_flow_1.mergeGasFeeEstimates; } });\nvar utils_1 = require(\"./utils/utils.cjs\");\nObject.defineProperty(exports, \"isEIP1559Transaction\", { enumerable: true, get: function () { return utils_1.isEIP1559Transaction; } });\nObject.defineProperty(exports, \"normalizeTransactionParams\", { enumerable: true, get: function () { return utils_1.normalizeTransactionParams; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\n/* istanbul ignore file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.incomingTransactionsLogger = exports.projectLogger = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nObject.defineProperty(exports, \"createModuleLogger\", { enumerable: true, get: function () { return utils_1.createModuleLogger; } });\nexports.projectLogger = (0, utils_1.createProjectLogger)('transaction-controller');\nexports.incomingTransactionsLogger = (0, utils_1.createModuleLogger)(exports.projectLogger, 'incoming-transactions');\n//# sourceMappingURL=logger.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimulationErrorCode = exports.SimulationTokenStandard = exports.GasFeeEstimateType = exports.GasFeeEstimateLevel = exports.UserFeeLevel = exports.TransactionEnvelopeType = exports.TransactionType = exports.WalletDevice = exports.TransactionStatus = void 0;\n/**\n * Represents the status of a transaction within the wallet.\n * Each status reflects the state of the transaction internally,\n * with some statuses corresponding to the transaction's state on the network.\n *\n * The typical transaction lifecycle follows this state machine:\n * unapproved -> approved -> signed -> submitted -> FINAL_STATE\n * where FINAL_STATE is one of: confirmed, failed, dropped, or rejected.\n */\nvar TransactionStatus;\n(function (TransactionStatus) {\n    /**\n     * The initial state of a transaction before user approval.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"unapproved\"] = \"unapproved\";\n    /**\n     * The transaction has been approved by the user but is not yet signed.\n     * This status is usually brief but may be longer for scenarios like hardware wallet usage.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"approved\"] = \"approved\";\n    /**\n     * The transaction is signed and in the process of being submitted to the network.\n     * This status is typically short-lived but can be longer for certain cases, such as smart transactions.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"signed\"] = \"signed\";\n    /**\n     * The transaction has been submitted to the network and is awaiting confirmation.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"submitted\"] = \"submitted\";\n    /**\n     * The transaction has been successfully executed and confirmed on the blockchain.\n     * This is a final state.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"confirmed\"] = \"confirmed\";\n    /**\n     * The transaction encountered an error during execution on the blockchain and failed.\n     * This is a final state.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"failed\"] = \"failed\";\n    /**\n     * The transaction was superseded by another transaction, resulting in its dismissal.\n     * This is a final state.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"dropped\"] = \"dropped\";\n    /**\n     * The transaction was rejected by the user and not processed further.\n     * This is a final state.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"rejected\"] = \"rejected\";\n    /**\n     * @deprecated This status is no longer used.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionStatus[\"cancelled\"] = \"cancelled\";\n})(TransactionStatus || (exports.TransactionStatus = TransactionStatus = {}));\n/**\n * Options for wallet device.\n */\nvar WalletDevice;\n(function (WalletDevice) {\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WalletDevice[\"MM_MOBILE\"] = \"metamask_mobile\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WalletDevice[\"MM_EXTENSION\"] = \"metamask_extension\";\n    WalletDevice[\"OTHER\"] = \"other_device\";\n})(WalletDevice || (exports.WalletDevice = WalletDevice = {}));\n/**\n * The type of the transaction.\n */\nvar TransactionType;\n(function (TransactionType) {\n    /**\n     * A transaction sending a network's native asset to a recipient.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"cancel\"] = \"cancel\";\n    /**\n     * A transaction that is interacting with a smart contract's methods that we\n     * have not treated as a special case, such as approve, transfer, and\n     * transferfrom.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"contractInteraction\"] = \"contractInteraction\";\n    /**\n     * A transaction that deployed a smart contract.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"deployContract\"] = \"contractDeployment\";\n    /**\n     * A transaction for Ethereum decryption.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"ethDecrypt\"] = \"eth_decrypt\";\n    /**\n     * A transaction for getting an encryption public key.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"ethGetEncryptionPublicKey\"] = \"eth_getEncryptionPublicKey\";\n    /**\n     * An incoming (deposit) transaction.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"incoming\"] = \"incoming\";\n    /**\n     * A transaction for personal sign.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"personalSign\"] = \"personal_sign\";\n    /**\n     * When a transaction is failed it can be retried by\n     * resubmitting the same transaction with a higher gas fee. This type is also used\n     * to speed up pending transactions. This is accomplished by creating a new tx with\n     * the same nonce and higher gas fees.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"retry\"] = \"retry\";\n    /**\n     * A transaction sending a network's native asset to a recipient.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"simpleSend\"] = \"simpleSend\";\n    /**\n     * A transaction that is signing typed data.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"signTypedData\"] = \"eth_signTypedData\";\n    /**\n     * A transaction sending a network's native asset to a recipient.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"smart\"] = \"smart\";\n    /**\n     * A transaction swapping one token for another through MetaMask Swaps.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"swap\"] = \"swap\";\n    /**\n     * A transaction swapping one token for another through MetaMask Swaps, then sending the swapped token to a recipient.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"swapAndSend\"] = \"swapAndSend\";\n    /**\n     * Similar to the approve type, a swap approval is a special case of ERC20\n     * approve method that requests an allowance of the token to spend on behalf\n     * of the user for the MetaMask Swaps contract. The first swap for any token\n     * will have an accompanying swapApproval transaction.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"swapApproval\"] = \"swapApproval\";\n    /**\n     * A token transaction requesting an allowance of the token to spend on\n     * behalf of the user.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"tokenMethodApprove\"] = \"approve\";\n    /**\n     * A token transaction transferring tokens from an account that the sender\n     * has an allowance of. The method is prefixed with safe because when calling\n     * this method the contract checks to ensure that the receiver is an address\n     * capable of handling the token being sent.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"tokenMethodSafeTransferFrom\"] = \"safetransferfrom\";\n    /**\n     * A token transaction where the user is sending tokens that they own to\n     * another address.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"tokenMethodTransfer\"] = \"transfer\";\n    /**\n     * A token transaction transferring tokens from an account that the sender\n     * has an allowance of. For more information on allowances, see the approve\n     * type.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"tokenMethodTransferFrom\"] = \"transferfrom\";\n    /**\n     * A token transaction requesting an allowance of all of a user's tokens to\n     * spend on behalf of the user.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"tokenMethodSetApprovalForAll\"] = \"setapprovalforall\";\n    /**\n     * Increase the allowance by a given increment\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionType[\"tokenMethodIncreaseAllowance\"] = \"increaseAllowance\";\n})(TransactionType || (exports.TransactionType = TransactionType = {}));\n/**\n * Specifies the shape of the base transaction parameters.\n * Added in EIP-2718.\n */\nvar TransactionEnvelopeType;\n(function (TransactionEnvelopeType) {\n    /**\n     * A legacy transaction, the very first type.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionEnvelopeType[\"legacy\"] = \"0x0\";\n    /**\n     * EIP-2930 defined the access list transaction type that allowed for\n     * specifying the state that a transaction would act upon in advance and\n     * theoretically save on gas fees.\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionEnvelopeType[\"accessList\"] = \"0x1\";\n    /**\n     * The type introduced comes from EIP-1559, Fee Market describes the addition\n     * of a baseFee to blocks that will be burned instead of distributed to\n     * miners. Transactions of this type have both a maxFeePerGas (maximum total\n     * amount in gwei per gas to spend on the transaction) which is inclusive of\n     * the maxPriorityFeePerGas (maximum amount of gwei per gas from the\n     * transaction fee to distribute to miner).\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TransactionEnvelopeType[\"feeMarket\"] = \"0x2\";\n})(TransactionEnvelopeType || (exports.TransactionEnvelopeType = TransactionEnvelopeType = {}));\n/**\n * The source of the gas fee parameters on a transaction.\n */\nvar UserFeeLevel;\n(function (UserFeeLevel) {\n    UserFeeLevel[\"CUSTOM\"] = \"custom\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    UserFeeLevel[\"DAPP_SUGGESTED\"] = \"dappSuggested\";\n    UserFeeLevel[\"MEDIUM\"] = \"medium\";\n})(UserFeeLevel || (exports.UserFeeLevel = UserFeeLevel = {}));\n/** Alternate priority levels for which values are provided in gas fee estimates. */\nvar GasFeeEstimateLevel;\n(function (GasFeeEstimateLevel) {\n    GasFeeEstimateLevel[\"Low\"] = \"low\";\n    GasFeeEstimateLevel[\"Medium\"] = \"medium\";\n    GasFeeEstimateLevel[\"High\"] = \"high\";\n})(GasFeeEstimateLevel || (exports.GasFeeEstimateLevel = GasFeeEstimateLevel = {}));\n/** Type of gas fee estimate generated by a GasFeeFlow. */\nvar GasFeeEstimateType;\n(function (GasFeeEstimateType) {\n    GasFeeEstimateType[\"FeeMarket\"] = \"fee-market\";\n    GasFeeEstimateType[\"Legacy\"] = \"legacy\";\n    GasFeeEstimateType[\"GasPrice\"] = \"eth_gasPrice\";\n})(GasFeeEstimateType || (exports.GasFeeEstimateType = GasFeeEstimateType = {}));\n/** Token standards supported by simulation. */\nvar SimulationTokenStandard;\n(function (SimulationTokenStandard) {\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    SimulationTokenStandard[\"erc20\"] = \"erc20\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    SimulationTokenStandard[\"erc721\"] = \"erc721\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    SimulationTokenStandard[\"erc1155\"] = \"erc1155\";\n})(SimulationTokenStandard || (exports.SimulationTokenStandard = SimulationTokenStandard = {}));\nvar SimulationErrorCode;\n(function (SimulationErrorCode) {\n    SimulationErrorCode[\"ChainNotSupported\"] = \"chain-not-supported\";\n    SimulationErrorCode[\"Disabled\"] = \"disabled\";\n    SimulationErrorCode[\"InvalidResponse\"] = \"invalid-response\";\n    SimulationErrorCode[\"Reverted\"] = \"reverted\";\n})(SimulationErrorCode || (exports.SimulationErrorCode = SimulationErrorCode = {}));\n//# sourceMappingURL=types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEtherscanApiHost = exports.fetchEtherscanTokenTransactions = exports.fetchEtherscanTransactions = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst constants_1 = require(\"../constants.cjs\");\nconst logger_1 = require(\"../logger.cjs\");\n/**\n * Retrieves transaction data from Etherscan.\n *\n * @param request - Configuration required to fetch transactions.\n * @param request.address - Address to retrieve transactions for.\n * @param request.chainId - Current chain ID used to determine subdomain and domain.\n * @param request.fromBlock - Block number to start fetching transactions from.\n * @param request.limit - Number of transactions to retrieve.\n * @returns An Etherscan response object containing the request status and an array of token transaction data.\n */\nasync function fetchEtherscanTransactions({ address, chainId, fromBlock, limit, }) {\n    return await fetchTransactions('txlist', {\n        address,\n        chainId,\n        fromBlock,\n        limit,\n    });\n}\nexports.fetchEtherscanTransactions = fetchEtherscanTransactions;\n/**\n * Retrieves token transaction data from Etherscan.\n *\n * @param request - Configuration required to fetch token transactions.\n * @param request.address - Address to retrieve token transactions for.\n * @param request.chainId - Current chain ID used to determine subdomain and domain.\n * @param request.fromBlock - Block number to start fetching token transactions from.\n * @param request.limit - Number of token transactions to retrieve.\n * @returns An Etherscan response object containing the request status and an array of token transaction data.\n */\nasync function fetchEtherscanTokenTransactions({ address, chainId, fromBlock, limit, }) {\n    return await fetchTransactions('tokentx', {\n        address,\n        chainId,\n        fromBlock,\n        limit,\n    });\n}\nexports.fetchEtherscanTokenTransactions = fetchEtherscanTokenTransactions;\n/**\n * Retrieves transaction data from Etherscan from a specific endpoint.\n *\n * @param action - The Etherscan endpoint to use.\n * @param options - Options bag.\n * @param options.address - Address to retrieve transactions for.\n * @param options.chainId - Current chain ID used to determine subdomain and domain.\n * @param options.fromBlock - Block number to start fetching transactions from.\n * @param options.limit - Number of transactions to retrieve.\n * @returns An object containing the request status and an array of transaction data.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function fetchTransactions(action, { address, chainId, fromBlock, limit, }) {\n    const urlParams = {\n        module: 'account',\n        address,\n        startBlock: fromBlock?.toString(),\n        offset: limit?.toString(),\n        sort: 'desc',\n    };\n    const etherscanTxUrl = getEtherscanApiUrl(chainId, {\n        ...urlParams,\n        action,\n    });\n    (0, logger_1.incomingTransactionsLogger)('Sending Etherscan request', etherscanTxUrl);\n    const response = (await (0, controller_utils_1.handleFetch)(etherscanTxUrl));\n    return response;\n}\n/**\n * Return a URL that can be used to fetch data from Etherscan.\n *\n * @param chainId - Current chain ID used to determine subdomain and domain.\n * @param urlParams - The parameters used to construct the URL.\n * @returns URL to access Etherscan data.\n */\nfunction getEtherscanApiUrl(chainId, urlParams) {\n    const apiUrl = getEtherscanApiHost(chainId);\n    let url = `${apiUrl}/api?`;\n    for (const paramKey of Object.keys(urlParams)) {\n        const value = urlParams[paramKey];\n        if (!value) {\n            continue;\n        }\n        url += `${paramKey}=${value}&`;\n    }\n    url += 'tag=latest&page=1';\n    return url;\n}\n/**\n * Return the host url used to fetch data from Etherscan.\n *\n * @param chainId - Current chain ID used to determine subdomain and domain.\n * @returns host URL to access Etherscan data.\n */\nfunction getEtherscanApiHost(chainId) {\n    // @ts-expect-error We account for `chainId` not being a property below\n    const networkInfo = constants_1.ETHERSCAN_SUPPORTED_NETWORKS[chainId];\n    if (!networkInfo) {\n        throw new Error(`Etherscan does not support chain with ID: ${chainId}`);\n    }\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `https://${networkInfo.subdomain}.${networkInfo.domain}`;\n}\nexports.getEtherscanApiHost = getEtherscanApiHost;\n//# sourceMappingURL=etherscan.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateConfirmedExternalTransaction = void 0;\n// These utility functions are exclusively used by `confirmExternalTransaction` method in controller\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst types_1 = require(\"../types.cjs\");\n/**\n * Validates the external provided transaction meta.\n *\n * @param transactionMeta - The transaction meta to validate.\n * @param confirmedTxs - The confirmed transactions in controller state.\n * @param pendingTxs - The submitted transactions in controller state.\n */\nfunction validateConfirmedExternalTransaction(transactionMeta, confirmedTxs, pendingTxs) {\n    if (!transactionMeta || !transactionMeta.txParams) {\n        throw rpc_errors_1.rpcErrors.invalidParams('\"transactionMeta\" or \"transactionMeta.txParams\" is missing');\n    }\n    if (transactionMeta.status !== types_1.TransactionStatus.confirmed) {\n        throw rpc_errors_1.rpcErrors.invalidParams('External transaction status should be \"confirmed\"');\n    }\n    const externalTxNonce = transactionMeta.txParams.nonce;\n    if (pendingTxs && pendingTxs.length > 0) {\n        const foundPendingTxByNonce = pendingTxs.find((tx) => tx.txParams?.nonce === externalTxNonce);\n        if (foundPendingTxByNonce) {\n            throw rpc_errors_1.rpcErrors.invalidParams('External transaction nonce should not be in pending txs');\n        }\n    }\n    if (confirmedTxs && confirmedTxs.length > 0) {\n        const foundConfirmedTxByNonce = confirmedTxs.find((tx) => tx.txParams?.nonce === externalTxNonce);\n        if (foundConfirmedTxByNonce) {\n            throw rpc_errors_1.rpcErrors.invalidParams('External transaction nonce should not be in confirmed txs');\n        }\n    }\n}\nexports.validateConfirmedExternalTransaction = validateConfirmedExternalTransaction;\n//# sourceMappingURL=external-transactions.cjs.map","\"use strict\";\n/* eslint-disable jsdoc/require-jsdoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gweiDecimalToWeiHex = exports.updateGasFees = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\nconst gas_flow_1 = require(\"./gas-flow.cjs\");\nconst swaps_1 = require(\"./swaps.cjs\");\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'gas-fees');\nasync function updateGasFees(request) {\n    const { txMeta } = request;\n    const initialParams = { ...txMeta.txParams };\n    const isSwap = swaps_1.SWAP_TRANSACTION_TYPES.includes(txMeta.type);\n    const savedGasFees = isSwap\n        ? undefined\n        : request.getSavedGasFees(txMeta.chainId);\n    const suggestedGasFees = await getSuggestedGasFees(request);\n    log('Suggested gas fees', suggestedGasFees);\n    const getGasFeeRequest = {\n        ...request,\n        initialParams,\n        savedGasFees,\n        suggestedGasFees,\n    };\n    txMeta.txParams.maxFeePerGas = getMaxFeePerGas(getGasFeeRequest);\n    txMeta.txParams.maxPriorityFeePerGas =\n        getMaxPriorityFeePerGas(getGasFeeRequest);\n    txMeta.txParams.gasPrice = getGasPrice(getGasFeeRequest);\n    txMeta.userFeeLevel = getUserFeeLevel(getGasFeeRequest);\n    log('Updated gas fee properties', {\n        maxFeePerGas: txMeta.txParams.maxFeePerGas,\n        maxPriorityFeePerGas: txMeta.txParams.maxPriorityFeePerGas,\n        gasPrice: txMeta.txParams.gasPrice,\n    });\n    if (txMeta.txParams.maxFeePerGas || txMeta.txParams.maxPriorityFeePerGas) {\n        delete txMeta.txParams.gasPrice;\n    }\n    if (txMeta.txParams.gasPrice) {\n        delete txMeta.txParams.maxFeePerGas;\n        delete txMeta.txParams.maxPriorityFeePerGas;\n    }\n    updateDefaultGasEstimates(txMeta);\n}\nexports.updateGasFees = updateGasFees;\nfunction gweiDecimalToWeiHex(value) {\n    return (0, controller_utils_1.toHex)((0, controller_utils_1.gweiDecToWEIBN)(value));\n}\nexports.gweiDecimalToWeiHex = gweiDecimalToWeiHex;\nfunction getMaxFeePerGas(request) {\n    const { savedGasFees, eip1559, initialParams, suggestedGasFees } = request;\n    if (!eip1559) {\n        return undefined;\n    }\n    if (savedGasFees) {\n        const maxFeePerGas = gweiDecimalToWeiHex(savedGasFees.maxBaseFee);\n        log('Using maxFeePerGas from savedGasFees', maxFeePerGas);\n        return maxFeePerGas;\n    }\n    if (initialParams.maxFeePerGas) {\n        log('Using maxFeePerGas from request', initialParams.maxFeePerGas);\n        return initialParams.maxFeePerGas;\n    }\n    if (initialParams.gasPrice && !initialParams.maxPriorityFeePerGas) {\n        log('Setting maxFeePerGas to gasPrice from request', initialParams.gasPrice);\n        return initialParams.gasPrice;\n    }\n    if (suggestedGasFees.maxFeePerGas) {\n        log('Using suggested maxFeePerGas', suggestedGasFees.maxFeePerGas);\n        return suggestedGasFees.maxFeePerGas;\n    }\n    if (suggestedGasFees.gasPrice) {\n        log('Setting maxFeePerGas to suggested gasPrice', suggestedGasFees.gasPrice);\n        return suggestedGasFees.gasPrice;\n    }\n    log('maxFeePerGas not set');\n    return undefined;\n}\nfunction getMaxPriorityFeePerGas(request) {\n    const { eip1559, initialParams, savedGasFees, suggestedGasFees, txMeta } = request;\n    if (!eip1559) {\n        return undefined;\n    }\n    if (savedGasFees) {\n        const maxPriorityFeePerGas = gweiDecimalToWeiHex(savedGasFees.priorityFee);\n        log('Using maxPriorityFeePerGas from savedGasFees.priorityFee', maxPriorityFeePerGas);\n        return maxPriorityFeePerGas;\n    }\n    if (initialParams.maxPriorityFeePerGas) {\n        log('Using maxPriorityFeePerGas from request', initialParams.maxPriorityFeePerGas);\n        return initialParams.maxPriorityFeePerGas;\n    }\n    if (initialParams.gasPrice && !initialParams.maxFeePerGas) {\n        log('Setting maxPriorityFeePerGas to gasPrice from request', initialParams.gasPrice);\n        return initialParams.gasPrice;\n    }\n    if (suggestedGasFees.maxPriorityFeePerGas) {\n        log('Using suggested maxPriorityFeePerGas', suggestedGasFees.maxPriorityFeePerGas);\n        return suggestedGasFees.maxPriorityFeePerGas;\n    }\n    if (txMeta.txParams.maxFeePerGas) {\n        log('Setting maxPriorityFeePerGas to maxFeePerGas', txMeta.txParams.maxFeePerGas);\n        return txMeta.txParams.maxFeePerGas;\n    }\n    log('maxPriorityFeePerGas not set');\n    return undefined;\n}\nfunction getGasPrice(request) {\n    const { eip1559, initialParams, suggestedGasFees } = request;\n    if (eip1559) {\n        return undefined;\n    }\n    if (initialParams.gasPrice) {\n        log('Using gasPrice from request', initialParams.gasPrice);\n        return initialParams.gasPrice;\n    }\n    if (suggestedGasFees.maxFeePerGas) {\n        log('Using suggested maxFeePerGas', suggestedGasFees.maxFeePerGas);\n        return suggestedGasFees.maxFeePerGas;\n    }\n    if (suggestedGasFees.gasPrice) {\n        log('Using suggested gasPrice', suggestedGasFees.gasPrice);\n        return suggestedGasFees.gasPrice;\n    }\n    log('gasPrice not set');\n    return undefined;\n}\nfunction getUserFeeLevel(request) {\n    const { eip1559, initialParams, savedGasFees, suggestedGasFees, txMeta } = request;\n    if (!eip1559) {\n        return undefined;\n    }\n    if (savedGasFees) {\n        return types_1.UserFeeLevel.CUSTOM;\n    }\n    if (!initialParams.maxFeePerGas &&\n        !initialParams.maxPriorityFeePerGas &&\n        initialParams.gasPrice) {\n        return txMeta.origin === controller_utils_1.ORIGIN_METAMASK\n            ? types_1.UserFeeLevel.CUSTOM\n            : types_1.UserFeeLevel.DAPP_SUGGESTED;\n    }\n    if (!initialParams.maxFeePerGas &&\n        !initialParams.maxPriorityFeePerGas &&\n        suggestedGasFees.maxFeePerGas &&\n        suggestedGasFees.maxPriorityFeePerGas) {\n        return types_1.UserFeeLevel.MEDIUM;\n    }\n    if (txMeta.origin === controller_utils_1.ORIGIN_METAMASK) {\n        return types_1.UserFeeLevel.MEDIUM;\n    }\n    return types_1.UserFeeLevel.DAPP_SUGGESTED;\n}\nfunction updateDefaultGasEstimates(txMeta) {\n    if (!txMeta.defaultGasEstimates) {\n        txMeta.defaultGasEstimates = {};\n    }\n    txMeta.defaultGasEstimates.maxFeePerGas = txMeta.txParams.maxFeePerGas;\n    txMeta.defaultGasEstimates.maxPriorityFeePerGas =\n        txMeta.txParams.maxPriorityFeePerGas;\n    txMeta.defaultGasEstimates.gasPrice = txMeta.txParams.gasPrice;\n    txMeta.defaultGasEstimates.estimateType = txMeta.userFeeLevel;\n}\nasync function getSuggestedGasFees(request) {\n    const { eip1559, ethQuery, gasFeeFlows, getGasFeeEstimates, txMeta } = request;\n    const { networkClientId } = txMeta;\n    if ((!eip1559 && txMeta.txParams.gasPrice) ||\n        (eip1559 &&\n            txMeta.txParams.maxFeePerGas &&\n            txMeta.txParams.maxPriorityFeePerGas)) {\n        return {};\n    }\n    const gasFeeFlow = (0, gas_flow_1.getGasFeeFlow)(txMeta, gasFeeFlows);\n    try {\n        const gasFeeControllerData = await getGasFeeEstimates({ networkClientId });\n        const response = await gasFeeFlow.getGasFees({\n            ethQuery,\n            gasFeeControllerData,\n            transactionMeta: txMeta,\n        });\n        const gasFeeEstimateType = response.estimates?.type;\n        switch (gasFeeEstimateType) {\n            case types_1.GasFeeEstimateType.FeeMarket:\n                return response.estimates.medium;\n            case types_1.GasFeeEstimateType.Legacy:\n                return {\n                    gasPrice: response.estimates.medium,\n                };\n            case types_1.GasFeeEstimateType.GasPrice:\n                return { gasPrice: response.estimates.gasPrice };\n            default:\n                throw new Error(\n                // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                `Unsupported gas fee estimate type returned from flow: ${gasFeeEstimateType}`);\n        }\n    }\n    catch (error) {\n        log('Failed to get suggested gas fees', error);\n    }\n    const gasPriceDecimal = (await (0, controller_utils_1.query)(ethQuery, 'gasPrice'));\n    const gasPrice = gasPriceDecimal\n        ? (0, utils_1.add0x)(gasPriceDecimal.toString(16))\n        : undefined;\n    return { gasPrice };\n}\n//# sourceMappingURL=gas-fees.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeGasFeeEstimates = exports.getGasFeeFlow = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst types_1 = require(\"../types.cjs\");\n/**\n * Returns the first gas fee flow that matches the transaction.\n *\n * @param transactionMeta - The transaction metadata to find a gas fee flow for.\n * @param gasFeeFlows - The gas fee flows to search.\n * @returns The first gas fee flow that matches the transaction, or undefined if none match.\n */\nfunction getGasFeeFlow(transactionMeta, gasFeeFlows) {\n    return gasFeeFlows.find((gasFeeFlow) => gasFeeFlow.matchesTransaction(transactionMeta));\n}\nexports.getGasFeeFlow = getGasFeeFlow;\n/**\n * Merge the gas fee estimates from the gas fee controller with the gas fee estimates from a transaction.\n * @param request - Data required to merge gas fee estimates.\n * @param request.gasFeeControllerEstimates - Gas fee estimates from the GasFeeController.\n * @param request.transactionGasFeeEstimates - Gas fee estimates from the transaction.\n * @returns The merged gas fee estimates.\n */\nfunction mergeGasFeeEstimates({ gasFeeControllerEstimates, transactionGasFeeEstimates, }) {\n    const transactionEstimateType = transactionGasFeeEstimates.type;\n    if (transactionEstimateType === types_1.GasFeeEstimateType.FeeMarket) {\n        return Object.values(types_1.GasFeeEstimateLevel).reduce((result, level) => ({\n            ...result,\n            [level]: mergeFeeMarketEstimate(gasFeeControllerEstimates?.[level], transactionGasFeeEstimates[level]),\n        }), { ...gasFeeControllerEstimates });\n    }\n    if (transactionEstimateType === types_1.GasFeeEstimateType.Legacy) {\n        return Object.values(types_1.GasFeeEstimateLevel).reduce((result, level) => ({\n            ...result,\n            [level]: getLegacyEstimate(transactionGasFeeEstimates, level),\n        }), {});\n    }\n    if (transactionEstimateType === types_1.GasFeeEstimateType.GasPrice) {\n        return {\n            gasPrice: getGasPriceEstimate(transactionGasFeeEstimates),\n        };\n    }\n    return gasFeeControllerEstimates;\n}\nexports.mergeGasFeeEstimates = mergeGasFeeEstimates;\n/**\n * Merge a specific priority level of EIP-1559 gas fee estimates.\n * @param gasFeeControllerEstimate - The gas fee estimate from the gas fee controller.\n * @param transactionGasFeeEstimate - The gas fee estimate from the transaction.\n * @returns The merged gas fee estimate.\n */\nfunction mergeFeeMarketEstimate(gasFeeControllerEstimate, transactionGasFeeEstimate) {\n    return {\n        ...gasFeeControllerEstimate,\n        suggestedMaxFeePerGas: (0, controller_utils_1.weiHexToGweiDec)(transactionGasFeeEstimate.maxFeePerGas),\n        suggestedMaxPriorityFeePerGas: (0, controller_utils_1.weiHexToGweiDec)(transactionGasFeeEstimate.maxPriorityFeePerGas),\n    };\n}\n/**\n * Generate a specific priority level for a legacy gas fee estimate.\n * @param transactionGasFeeEstimate - The gas fee estimate from the transaction.\n * @param level - The gas fee estimate level.\n * @returns The legacy gas fee estimate.\n */\nfunction getLegacyEstimate(transactionGasFeeEstimate, level) {\n    return (0, controller_utils_1.weiHexToGweiDec)(transactionGasFeeEstimate[level]);\n}\n/**\n * Generate the value for a gas price gas fee estimate.\n * @param transactionGasFeeEstimate - The gas fee estimate from the transaction.\n * @returns The legacy gas fee estimate.\n */\nfunction getGasPriceEstimate(transactionGasFeeEstimate) {\n    return (0, controller_utils_1.weiHexToGweiDec)(transactionGasFeeEstimate.gasPrice);\n}\n//# sourceMappingURL=gas-flow.cjs.map","\"use strict\";\n/* eslint-disable jsdoc/require-jsdoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addGasBuffer = exports.estimateGas = exports.updateGas = exports.DEFAULT_GAS_MULTIPLIER = exports.FIXED_GAS = exports.log = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst constants_1 = require(\"../constants.cjs\");\nconst logger_1 = require(\"../logger.cjs\");\nexports.log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'gas');\nexports.FIXED_GAS = '0x5208';\nexports.DEFAULT_GAS_MULTIPLIER = 1.5;\nasync function updateGas(request) {\n    const { txMeta } = request;\n    const initialParams = { ...txMeta.txParams };\n    const [gas, simulationFails] = await getGas(request);\n    txMeta.txParams.gas = gas;\n    txMeta.simulationFails = simulationFails;\n    if (!initialParams.gas) {\n        txMeta.originalGasEstimate = txMeta.txParams.gas;\n    }\n    if (!txMeta.defaultGasEstimates) {\n        txMeta.defaultGasEstimates = {};\n    }\n    txMeta.defaultGasEstimates.gas = txMeta.txParams.gas;\n}\nexports.updateGas = updateGas;\nasync function estimateGas(txParams, ethQuery) {\n    const request = { ...txParams };\n    const { data, value } = request;\n    const { gasLimit: gasLimitHex, number: blockNumber } = await getLatestBlock(ethQuery);\n    const gasLimitBN = (0, controller_utils_1.hexToBN)(gasLimitHex);\n    request.data = data ? (0, utils_1.add0x)(data) : data;\n    request.gas = (0, controller_utils_1.BNToHex)((0, controller_utils_1.fractionBN)(gasLimitBN, 19, 20));\n    request.value = value || '0x0';\n    let estimatedGas = request.gas;\n    let simulationFails;\n    try {\n        estimatedGas = await (0, controller_utils_1.query)(ethQuery, 'estimateGas', [request]);\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        simulationFails = {\n            reason: error.message,\n            errorKey: error.errorKey,\n            debug: {\n                blockNumber,\n                blockGasLimit: gasLimitHex,\n            },\n        };\n        (0, exports.log)('Estimation failed', { ...simulationFails, fallback: estimateGas });\n    }\n    return {\n        blockGasLimit: gasLimitHex,\n        estimatedGas,\n        simulationFails,\n    };\n}\nexports.estimateGas = estimateGas;\nfunction addGasBuffer(estimatedGas, blockGasLimit, multiplier) {\n    const estimatedGasBN = (0, controller_utils_1.hexToBN)(estimatedGas);\n    const maxGasBN = (0, controller_utils_1.hexToBN)(blockGasLimit).muln(0.9);\n    const paddedGasBN = estimatedGasBN.muln(multiplier);\n    if (estimatedGasBN.gt(maxGasBN)) {\n        const estimatedGasHex = (0, utils_1.add0x)(estimatedGas);\n        (0, exports.log)('Using estimated value', estimatedGasHex);\n        return estimatedGasHex;\n    }\n    if (paddedGasBN.lt(maxGasBN)) {\n        const paddedHex = (0, utils_1.add0x)((0, controller_utils_1.BNToHex)(paddedGasBN));\n        (0, exports.log)('Using padded estimate', paddedHex, multiplier);\n        return paddedHex;\n    }\n    const maxHex = (0, utils_1.add0x)((0, controller_utils_1.BNToHex)(maxGasBN));\n    (0, exports.log)('Using 90% of block gas limit', maxHex);\n    return maxHex;\n}\nexports.addGasBuffer = addGasBuffer;\nasync function getGas(request) {\n    const { isCustomNetwork, chainId, txMeta } = request;\n    if (txMeta.txParams.gas) {\n        (0, exports.log)('Using value from request', txMeta.txParams.gas);\n        return [txMeta.txParams.gas];\n    }\n    if (await requiresFixedGas(request)) {\n        (0, exports.log)('Using fixed value', exports.FIXED_GAS);\n        return [exports.FIXED_GAS];\n    }\n    const { blockGasLimit, estimatedGas, simulationFails } = await estimateGas(txMeta.txParams, request.ethQuery);\n    if (isCustomNetwork) {\n        (0, exports.log)('Using original estimate as custom network');\n        return [estimatedGas, simulationFails];\n    }\n    const bufferMultiplier = constants_1.GAS_BUFFER_CHAIN_OVERRIDES[chainId] ?? exports.DEFAULT_GAS_MULTIPLIER;\n    const bufferedGas = addGasBuffer(estimatedGas, blockGasLimit, bufferMultiplier);\n    return [bufferedGas, simulationFails];\n}\nasync function requiresFixedGas({ ethQuery, txMeta, isCustomNetwork, }) {\n    const { txParams: { to, data }, } = txMeta;\n    if (isCustomNetwork || !to || data) {\n        return false;\n    }\n    const code = await getCode(ethQuery, to);\n    return !code || code === '0x';\n}\nasync function getCode(ethQuery, address) {\n    return await (0, controller_utils_1.query)(ethQuery, 'getCode', [address]);\n}\nasync function getLatestBlock(ethQuery) {\n    return await (0, controller_utils_1.query)(ethQuery, 'getBlockByNumber', ['latest', false]);\n}\n//# sourceMappingURL=gas.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateTransactionHistory = exports.addInitialHistorySnapshot = exports.DISPLAYED_TRANSACTION_HISTORY_PATHS = exports.MAX_TRANSACTION_HISTORY_LENGTH = void 0;\nconst fast_json_patch_1 = __importDefault(require(\"fast-json-patch\"));\nconst lodash_1 = require(\"lodash\");\n/**\n * The maximum allowed length of the `transaction.history` property.\n */\nexports.MAX_TRANSACTION_HISTORY_LENGTH = 100;\n/**\n * A list of trarnsaction history paths that may be used for display. These entries will not be\n * compressed.\n */\nexports.DISPLAYED_TRANSACTION_HISTORY_PATHS = [\n    '/status',\n    '/txParams/gasPrice',\n    '/txParams/gas',\n    '/estimatedBaseFee',\n    '/blockTimestamp',\n];\n/**\n * Build a new version of the provided transaction with an initial history\n * entry, which is just a snapshot of the transaction.\n *\n * @param transactionMeta - TransactionMeta to add initial history snapshot to.\n * @returns A copy of `transactionMeta` with a new `history` property.\n */\nfunction addInitialHistorySnapshot(transactionMeta) {\n    const snapshot = snapshotFromTransactionMeta(transactionMeta);\n    return (0, lodash_1.merge)({}, transactionMeta, { history: [snapshot] });\n}\nexports.addInitialHistorySnapshot = addInitialHistorySnapshot;\n/**\n * Builds a new version of the transaction with a new history entry if\n * it has a `history` property, or just returns the transaction.\n *\n * @param transactionMeta - TransactionMeta to add history entry to.\n * @param note - Note to add to history entry.\n * @returns A copy of `transactionMeta` with a new `history` entry if it has an\n * existing non-empty `history` array.\n */\nfunction updateTransactionHistory(transactionMeta, note) {\n    if (!transactionMeta.history) {\n        return transactionMeta;\n    }\n    const currentState = snapshotFromTransactionMeta(transactionMeta);\n    const previousState = replayHistory(transactionMeta.history);\n    const newHistoryEntry = generateHistoryEntry(previousState, currentState, note);\n    if (newHistoryEntry.length === 0) {\n        return transactionMeta;\n    }\n    // Casts required here because this list has two separate types of entries:\n    // TransactionMeta and TransactionHistoryEntry. The only TransactionMeta is the first\n    // entry, but TypeScript loses that type information when `slice` is called for some reason.\n    let updatedHistory = [\n        ...transactionMeta.history,\n        newHistoryEntry,\n    ];\n    if (updatedHistory.length > exports.MAX_TRANSACTION_HISTORY_LENGTH) {\n        updatedHistory = compressTransactionHistory(updatedHistory);\n    }\n    return (0, lodash_1.merge)({}, transactionMeta, {\n        history: updatedHistory,\n    });\n}\nexports.updateTransactionHistory = updateTransactionHistory;\n/**\n * Compress the transaction history, if it is possible to do so without compressing entries used\n * for display. History entries are merged together to make room for a single new entry.\n *\n * @param transactionHistory - The transaction history to compress.\n * @returns A compressed transaction history.\n */\nfunction compressTransactionHistory(transactionHistory) {\n    const initialEntry = transactionHistory[0];\n    // Casts required here because this list has two separate types of entries:\n    // TransactionMeta and TransactionHistoryEntry. The only TransactionMeta is the first\n    // entry, but TypeScript loses that type information when `slice` is called for some reason.\n    const historyEntries = transactionHistory.slice(1);\n    const firstNonDisplayedEntryIndex = historyEntries.findIndex((historyEntry) => {\n        return !historyEntry.some(({ path }) => exports.DISPLAYED_TRANSACTION_HISTORY_PATHS.includes(path));\n    });\n    // If no non-displayed entry is found, let history exceed max size.\n    // TODO: Move data used for display to another property, so that we can more reliably limit\n    // history size or remove it altogether.\n    if (firstNonDisplayedEntryIndex === -1) {\n        return transactionHistory;\n    }\n    // If a non-displayed entry is found that we can remove, merge it with another entry.\n    // The entry we're merging with might be a \"displayed\" entry, but that's OK, merging more changes\n    // in does not break our display logic.\n    const mergeTargetEntryIndex = \n    // Merge with previous entry if there is no next entry.\n    // We default to merging with next because the next entry might also be non-displayed, so it\n    // might be removed in a future trim, saving more space.\n    firstNonDisplayedEntryIndex === historyEntries.length - 1\n        ? firstNonDisplayedEntryIndex - 1\n        : firstNonDisplayedEntryIndex + 1;\n    const firstIndexToMerge = Math.min(firstNonDisplayedEntryIndex, mergeTargetEntryIndex);\n    const firstEntryToMerge = historyEntries[firstIndexToMerge];\n    const secondEntryToMerge = historyEntries[firstIndexToMerge + 1];\n    const beforeMergeState = replayHistory([\n        initialEntry,\n        ...historyEntries.slice(0, firstIndexToMerge),\n    ]);\n    const afterMergeState = replayHistory([\n        beforeMergeState,\n        firstEntryToMerge,\n        secondEntryToMerge,\n    ]);\n    const mergedHistoryEntry = generateHistoryEntry(beforeMergeState, afterMergeState, `${String(firstEntryToMerge[0].note)}, ${String(secondEntryToMerge[0].note)}`);\n    historyEntries.splice(firstIndexToMerge, 2, mergedHistoryEntry);\n    return [initialEntry, ...historyEntries];\n}\n/**\n * Generates a history entry from the previous and new transaction metadata.\n *\n * @param previousState - The previous transaction metadata.\n * @param currentState - The new transaction metadata.\n * @param note - A note for the transaction metada update.\n * @returns An array of history operation.\n */\nfunction generateHistoryEntry(\n// TODO: Replace `any` with type\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\npreviousState, currentState, note) {\n    const historyOperationsEntry = fast_json_patch_1.default.compare(previousState, currentState);\n    // Add a note to the first operation, since it breaks if we append it to the entry\n    if (historyOperationsEntry[0]) {\n        if (note) {\n            historyOperationsEntry[0].note = note;\n        }\n        historyOperationsEntry[0].timestamp = Date.now();\n    }\n    return historyOperationsEntry;\n}\n/**\n * Recovers previous transactionMeta from passed history array.\n *\n * @param transactionHistory - The transaction metadata to replay.\n * @returns The transaction metadata.\n */\nfunction replayHistory(transactionHistory) {\n    const shortHistory = (0, lodash_1.cloneDeep)(transactionHistory);\n    return shortHistory.reduce(\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (val, entry) => fast_json_patch_1.default.applyPatch(val, entry).newDocument);\n}\n/**\n * Clone the transaction meta data without the history property.\n *\n * @param transactionMeta - The transaction metadata to snapshot.\n * @returns A deep clone of transaction metadata without history property.\n */\nfunction snapshotFromTransactionMeta(transactionMeta) {\n    const snapshot = { ...transactionMeta };\n    delete snapshot.history;\n    return (0, lodash_1.cloneDeep)(snapshot);\n}\n//# sourceMappingURL=history.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransactionLayer1GasFee = exports.updateTransactionLayer1GasFee = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst logger_1 = require(\"../logger.cjs\");\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'layer-1-gas-fee-flow');\n/**\n * Updates the given transactionMeta with the layer 1 gas fee.\n * @param request - The request to use when getting the layer 1 gas fee.\n * @param request.provider - Provider used to create a new underlying EthQuery instance\n * @param request.transactionMeta - The transaction to get the layer 1 gas fee for.\n * @param request.layer1GasFeeFlows - The layer 1 gas fee flows to search.\n */\nasync function updateTransactionLayer1GasFee(request) {\n    const layer1GasFee = await getTransactionLayer1GasFee(request);\n    if (!layer1GasFee) {\n        return;\n    }\n    const { transactionMeta } = request;\n    transactionMeta.layer1GasFee = layer1GasFee;\n    log('Updated layer 1 gas fee', layer1GasFee, transactionMeta.id);\n}\nexports.updateTransactionLayer1GasFee = updateTransactionLayer1GasFee;\n/**\n * Get the layer 1 gas fee flow for a transaction.\n * @param transactionMeta - The transaction to get the layer 1 gas fee flow for.\n * @param layer1GasFeeFlows - The layer 1 gas fee flows to search.\n * @returns The layer 1 gas fee flow for the transaction, or undefined if none match.\n */\nfunction getLayer1GasFeeFlow(transactionMeta, layer1GasFeeFlows) {\n    return layer1GasFeeFlows.find((layer1GasFeeFlow) => layer1GasFeeFlow.matchesTransaction(transactionMeta));\n}\n/**\n * Get the layer 1 gas fee for a transaction and return the layer1Fee.\n * @param request - The request to use when getting the layer 1 gas fee.\n * @param request.layer1GasFeeFlows - The layer 1 gas fee flows to search.\n * @param request.provider - The provider to use to get the layer 1 gas fee.\n * @param request.transactionMeta - The transaction to get the layer 1 gas fee for.\n */\nasync function getTransactionLayer1GasFee({ layer1GasFeeFlows, provider, transactionMeta, }) {\n    const layer1GasFeeFlow = getLayer1GasFeeFlow(transactionMeta, layer1GasFeeFlows);\n    if (!layer1GasFeeFlow) {\n        return undefined;\n    }\n    log('Found layer 1 gas fee flow', layer1GasFeeFlow.constructor.name, transactionMeta.id);\n    try {\n        const { layer1Fee } = await layer1GasFeeFlow.getLayer1Fee({\n            provider,\n            transactionMeta,\n        });\n        return layer1Fee;\n    }\n    catch (error) {\n        log('Failed to get layer 1 gas fee', transactionMeta.id, error);\n        return undefined;\n    }\n}\nexports.getTransactionLayer1GasFee = getTransactionLayer1GasFee;\n//# sourceMappingURL=layer1-gas-fee-flow.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAndFormatTransactionsForNonceTracker = exports.getNextNonce = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst logger_1 = require(\"../logger.cjs\");\nconst log = (0, logger_1.createModuleLogger)(logger_1.projectLogger, 'nonce');\n/**\n * Determine the next nonce to be used for a transaction.\n *\n * @param txMeta - The transaction metadata.\n * @param getNonceLock - An anonymous function that acquires the nonce lock for an address\n * @returns The next hexadecimal nonce to be used for the given transaction, and optionally a function to release the nonce lock.\n */\nasync function getNextNonce(txMeta, getNonceLock) {\n    const { customNonceValue, txParams: { from, nonce: existingNonce }, } = txMeta;\n    const customNonce = customNonceValue ? (0, controller_utils_1.toHex)(customNonceValue) : undefined;\n    if (customNonce) {\n        log('Using custom nonce', customNonce);\n        return [customNonce, undefined];\n    }\n    if (existingNonce) {\n        log('Using existing nonce', existingNonce);\n        return [existingNonce, undefined];\n    }\n    const nonceLock = await getNonceLock(from);\n    const nonce = (0, controller_utils_1.toHex)(nonceLock.nextNonce);\n    const releaseLock = nonceLock.releaseLock.bind(nonceLock);\n    log('Using nonce from nonce tracker', nonce, nonceLock.nonceDetails);\n    return [nonce, releaseLock];\n}\nexports.getNextNonce = getNextNonce;\n/**\n * Filter and format transactions for the nonce tracker.\n *\n * @param currentChainId - Chain ID of the current network.\n * @param fromAddress - Address of the account from which the transactions to filter from are sent.\n * @param transactionStatus - Status of the transactions for which to filter.\n * @param transactions - Array of transactionMeta objects that have been prefiltered.\n * @returns Array of transactions formatted for the nonce tracker.\n */\nfunction getAndFormatTransactionsForNonceTracker(currentChainId, fromAddress, transactionStatus, transactions) {\n    return transactions\n        .filter(({ chainId, isTransfer, isUserOperation, status, txParams: { from } }) => !isTransfer &&\n        !isUserOperation &&\n        chainId === currentChainId &&\n        status === transactionStatus &&\n        from.toLowerCase() === fromAddress.toLowerCase())\n        .map(({ status, txParams: { from, gas, value, nonce } }) => {\n        // the only value we care about is the nonce\n        // but we need to return the other values to satisfy the type\n        // TODO: refactor nonceTracker to not require this\n        /* istanbul ignore next */\n        return {\n            status,\n            history: [{}],\n            txParams: {\n                from: from ?? '',\n                gas: gas ?? '',\n                value: value ?? '',\n                nonce: nonce ?? '',\n            },\n        };\n    });\n}\nexports.getAndFormatTransactionsForNonceTracker = getAndFormatTransactionsForNonceTracker;\n//# sourceMappingURL=nonce.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransactionParamsWithIncreasedGasFee = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Returns new transaction parameters with increased gas fees.\n * @param originalTransactionParams - The original transaction parameters.\n * @param rate - The rate by which to increase the existing gas fee properties.\n * @param newGasValues - Optional new gas values to use instead of increased the existing values.\n * @returns The new transaction parameters with the increased gas fee properties.\n */\nfunction getTransactionParamsWithIncreasedGasFee(originalTransactionParams, rate, newGasValues) {\n    const newGasPrice = getIncreasedGasPrice(originalTransactionParams, rate, newGasValues);\n    const new1559Values = getIncreased1559Values(originalTransactionParams, rate, newGasValues);\n    if (new1559Values) {\n        const newTxParams = {\n            ...originalTransactionParams,\n            ...new1559Values,\n        };\n        delete newTxParams.gasPrice;\n        return newTxParams;\n    }\n    if (newGasPrice) {\n        const newTxParams = {\n            ...originalTransactionParams,\n            gasPrice: newGasPrice,\n        };\n        delete newTxParams.maxFeePerGas;\n        delete newTxParams.maxPriorityFeePerGas;\n        return newTxParams;\n    }\n    throw new Error('Cannot increase gas fee as no current values and no new values were provided');\n}\nexports.getTransactionParamsWithIncreasedGasFee = getTransactionParamsWithIncreasedGasFee;\n/**\n * Generate the increased EIP-1559 gas properties.\n * @param originalTransactionParams - The original transaction parameters.\n * @param rate - The rate by which to increase the existing gas fee properties.\n * @param newGasValues - Optional new gas values to use instead of increased the existing values.\n * @returns The new EIP-1559 gas properties.\n */\nfunction getIncreased1559Values(originalTransactionParams, rate, newGasValues) {\n    if (newGasValues &&\n        'maxFeePerGas' in newGasValues &&\n        'maxPriorityFeePerGas' in newGasValues) {\n        return newGasValues;\n    }\n    const currentMaxFeePerGas = originalTransactionParams.maxFeePerGas;\n    const currentMaxPriorityFeePerGas = originalTransactionParams.maxPriorityFeePerGas;\n    if (!currentMaxFeePerGas ||\n        !currentMaxPriorityFeePerGas ||\n        currentMaxFeePerGas === '0x0' ||\n        currentMaxPriorityFeePerGas === '0x0') {\n        return undefined;\n    }\n    const maxFeePerGas = multiplyHex(currentMaxFeePerGas, rate);\n    const maxPriorityFeePerGas = multiplyHex(currentMaxPriorityFeePerGas, rate);\n    return { maxFeePerGas, maxPriorityFeePerGas };\n}\n/**\n * Generate the increased gas price.\n * @param originalTransactionParams - The original transaction parameters.\n * @param rate - The rate by which to increase the existing gas fee properties.\n * @param newGasValues - Optional new gas values to use instead of increased the existing values.\n * @returns The new gas price.\n */\nfunction getIncreasedGasPrice(originalTransactionParams, rate, newGasValues) {\n    if (newGasValues && 'gasPrice' in newGasValues) {\n        return newGasValues.gasPrice;\n    }\n    const currentGasPrice = originalTransactionParams.gasPrice;\n    if (!currentGasPrice || currentGasPrice === '0x0') {\n        return undefined;\n    }\n    return multiplyHex(currentGasPrice, rate);\n}\n/**\n * Multiply a hex value by a multiplier.\n * @param value - The hex value to multiply.\n * @param multiplier - The multiplier.\n * @returns The multiplied hex value.\n */\nfunction multiplyHex(value, multiplier) {\n    const decimalValue = (0, controller_utils_1.convertHexToDecimal)(value);\n    const decimalResult = parseInt(`${decimalValue * multiplier}`, 10);\n    return (0, utils_1.add0x)(decimalResult.toString(16));\n}\n//# sourceMappingURL=retry.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateTransactions = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors.cjs\");\nconst logger_1 = require(\"../logger.cjs\");\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'simulation-api');\nconst RPC_METHOD = 'infura_simulateTransactions';\nconst BASE_URL = 'https://tx-sentinel-{0}.api.cx.metamask.io/';\nconst ENDPOINT_NETWORKS = 'networks';\nlet requestIdCounter = 0;\n/**\n * Simulate transactions using the transaction simulation API.\n * @param chainId - The chain ID to simulate transactions on.\n * @param request - The request to simulate transactions.\n */\nasync function simulateTransactions(chainId, request) {\n    const url = await getSimulationUrl(chainId);\n    log('Sending request', url, request);\n    const requestId = requestIdCounter;\n    requestIdCounter += 1;\n    const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n            id: String(requestId),\n            jsonrpc: '2.0',\n            method: RPC_METHOD,\n            params: [request],\n        }),\n    });\n    const responseJson = await response.json();\n    log('Received response', responseJson);\n    if (responseJson.error) {\n        const { code, message } = responseJson.error;\n        throw new errors_1.SimulationError(message, code);\n    }\n    return responseJson?.result;\n}\nexports.simulateTransactions = simulateTransactions;\n/**\n * Get the URL for the transaction simulation API.\n * @param chainId - The chain ID to get the URL for.\n * @returns The URL for the transaction simulation API.\n */\nasync function getSimulationUrl(chainId) {\n    const networkData = await getNetworkData();\n    const chainIdDecimal = (0, controller_utils_1.convertHexToDecimal)(chainId);\n    const network = networkData[chainIdDecimal];\n    if (!network?.confirmations) {\n        log('Chain is not supported', chainId);\n        throw new errors_1.SimulationChainNotSupportedError(chainId);\n    }\n    return getUrl(network.network);\n}\n/**\n * Retrieve the supported network data from the simulation API.\n */\nasync function getNetworkData() {\n    const url = `${getUrl('ethereum-mainnet')}${ENDPOINT_NETWORKS}`;\n    const response = await fetch(url);\n    return response.json();\n}\n/**\n * Generate the URL for the specified subdomain in the simulation API.\n * @param subdomain - The subdomain to generate the URL for.\n * @returns The URL for the transaction simulation API.\n */\nfunction getUrl(subdomain) {\n    return BASE_URL.replace('{0}', subdomain);\n}\n//# sourceMappingURL=simulation-api.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEvents = exports.getSimulationData = exports.SupportedToken = void 0;\nconst abi_1 = require(\"@ethersproject/abi\");\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst metamask_eth_abis_1 = require(\"@metamask/metamask-eth-abis\");\nconst utils_1 = require(\"@metamask/utils\");\nconst constants_1 = require(\"../constants.cjs\");\nconst errors_1 = require(\"../errors.cjs\");\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\nconst simulation_api_1 = require(\"./simulation-api.cjs\");\nvar SupportedToken;\n(function (SupportedToken) {\n    SupportedToken[\"ERC20\"] = \"erc20\";\n    SupportedToken[\"ERC721\"] = \"erc721\";\n    SupportedToken[\"ERC1155\"] = \"erc1155\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    SupportedToken[\"ERC20_WRAPPED\"] = \"erc20Wrapped\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    SupportedToken[\"ERC721_LEGACY\"] = \"erc721Legacy\";\n})(SupportedToken || (exports.SupportedToken = SupportedToken = {}));\nconst log = (0, utils_1.createModuleLogger)(logger_1.projectLogger, 'simulation');\nconst SUPPORTED_EVENTS = [\n    'Transfer',\n    'TransferSingle',\n    'TransferBatch',\n    'Deposit',\n    'Withdrawal',\n];\nconst SUPPORTED_TOKEN_ABIS = {\n    [SupportedToken.ERC20]: {\n        abi: metamask_eth_abis_1.abiERC20,\n        standard: types_1.SimulationTokenStandard.erc20,\n    },\n    [SupportedToken.ERC721]: {\n        abi: metamask_eth_abis_1.abiERC721,\n        standard: types_1.SimulationTokenStandard.erc721,\n    },\n    [SupportedToken.ERC1155]: {\n        abi: metamask_eth_abis_1.abiERC1155,\n        standard: types_1.SimulationTokenStandard.erc1155,\n    },\n    [SupportedToken.ERC20_WRAPPED]: {\n        abi: constants_1.ABI_SIMULATION_ERC20_WRAPPED,\n        standard: types_1.SimulationTokenStandard.erc20,\n    },\n    [SupportedToken.ERC721_LEGACY]: {\n        abi: constants_1.ABI_SIMULATION_ERC721_LEGACY,\n        standard: types_1.SimulationTokenStandard.erc721,\n    },\n};\nconst REVERTED_ERRORS = ['execution reverted', 'insufficient funds for gas'];\n/**\n * Generate simulation data for a transaction.\n * @param request - The transaction to simulate.\n * @param request.chainId - The chain ID of the transaction.\n * @param request.from - The sender of the transaction.\n * @param request.to - The recipient of the transaction.\n * @param request.value - The value of the transaction.\n * @param request.data - The data of the transaction.\n * @returns The simulation data.\n */\nasync function getSimulationData(request) {\n    const { chainId, from, to, value, data } = request;\n    log('Getting simulation data', request);\n    try {\n        const response = await (0, simulation_api_1.simulateTransactions)(chainId, {\n            transactions: [\n                {\n                    data,\n                    from,\n                    maxFeePerGas: '0x0',\n                    maxPriorityFeePerGas: '0x0',\n                    to,\n                    value,\n                },\n            ],\n            withCallTrace: true,\n            withLogs: true,\n        });\n        const transactionError = response.transactions?.[0]?.error;\n        if (transactionError) {\n            throw new errors_1.SimulationError(transactionError);\n        }\n        const nativeBalanceChange = getNativeBalanceChange(request.from, response);\n        const events = getEvents(response);\n        log('Parsed events', events);\n        const tokenBalanceChanges = await getTokenBalanceChanges(request, events);\n        return {\n            nativeBalanceChange,\n            tokenBalanceChanges,\n        };\n    }\n    catch (error) {\n        log('Failed to get simulation data', error, request);\n        let simulationError = error;\n        if (REVERTED_ERRORS.some((revertErrorMessage) => simulationError.message?.includes(revertErrorMessage))) {\n            simulationError = new errors_1.SimulationRevertedError();\n        }\n        const { code, message } = simulationError;\n        return {\n            tokenBalanceChanges: [],\n            error: {\n                code,\n                message,\n            },\n        };\n    }\n}\nexports.getSimulationData = getSimulationData;\n/**\n * Extract the native balance change from a simulation response.\n * @param userAddress - The user's account address.\n * @param response - The simulation response.\n * @returns The native balance change or undefined if unchanged.\n */\nfunction getNativeBalanceChange(userAddress, response) {\n    const transactionResponse = response.transactions[0];\n    /* istanbul ignore next */\n    if (!transactionResponse) {\n        return undefined;\n    }\n    const { stateDiff } = transactionResponse;\n    const previousBalance = stateDiff?.pre?.[userAddress]?.balance;\n    const newBalance = stateDiff?.post?.[userAddress]?.balance;\n    if (!previousBalance || !newBalance) {\n        return undefined;\n    }\n    return getSimulationBalanceChange(previousBalance, newBalance);\n}\n/**\n * Extract events from a simulation response.\n * @param response - The simulation response.\n * @returns The parsed events.\n */\nfunction getEvents(response) {\n    /* istanbul ignore next */\n    const logs = extractLogs(response.transactions[0]?.callTrace ?? {});\n    log('Extracted logs', logs);\n    const interfaces = getContractInterfaces();\n    return logs\n        .map((currentLog) => {\n        const event = parseLog(currentLog, interfaces);\n        if (!event) {\n            log('Failed to parse log', currentLog);\n            return undefined;\n        }\n        /* istanbul ignore next */\n        const inputs = event.abi.find((e) => e.name === event.name)?.inputs;\n        /* istanbul ignore if */\n        if (!inputs) {\n            log('Failed to find inputs for event', event);\n            return undefined;\n        }\n        if (!SUPPORTED_EVENTS.includes(event.name)) {\n            log('Ignoring unsupported event', event.name, event);\n            return undefined;\n        }\n        log('Normalizing event args', event.name, event);\n        const args = normalizeEventArgs(event.args, inputs);\n        return {\n            contractAddress: currentLog.address,\n            tokenStandard: event.standard,\n            name: event.name,\n            args,\n            abi: event.abi,\n        };\n    })\n        .filter((e) => e !== undefined);\n}\nexports.getEvents = getEvents;\n/**\n * Normalize event arguments using ABI input definitions.\n * @param args - The raw event arguments.\n * @param abiInputs - The ABI input definitions.\n * @returns The normalized event arguments.\n */\nfunction normalizeEventArgs(args, abiInputs) {\n    return args.reduce((result, arg, index) => {\n        const name = abiInputs[index].name.replace('_', '');\n        const value = normalizeEventArgValue(arg);\n        result[name] = value;\n        return result;\n    }, {});\n}\n/**\n * Normalize an event argument value.\n * @param value - The event argument value.\n * @returns The normalized event argument value.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalizeEventArgValue(value) {\n    if (Array.isArray(value)) {\n        return value.map(normalizeEventArgValue);\n    }\n    let normalizedValue = value;\n    normalizedValue = normalizedValue.toHexString?.() ?? normalizedValue;\n    normalizedValue = normalizedValue.toLowerCase?.() ?? normalizedValue;\n    return normalizedValue;\n}\n/**\n * Generate token balance changes from parsed events.\n * @param request - The transaction that was simulated.\n * @param events - The parsed events.\n * @returns An array of token balance changes.\n */\nasync function getTokenBalanceChanges(request, events) {\n    const balanceTxs = getTokenBalanceTransactions(request, events);\n    log('Generated balance transactions', [...balanceTxs.after.values()]);\n    const transactions = [\n        ...balanceTxs.before.values(),\n        request,\n        ...balanceTxs.after.values(),\n    ];\n    if (transactions.length === 1) {\n        return [];\n    }\n    const response = await (0, simulation_api_1.simulateTransactions)(request.chainId, {\n        transactions,\n    });\n    log('Balance simulation response', response);\n    if (response.transactions.length !== transactions.length) {\n        throw new errors_1.SimulationInvalidResponseError();\n    }\n    let prevBalanceTxIndex = 0;\n    return [...balanceTxs.after.keys()]\n        .map((token, index) => {\n        const previousBalanceCheckSkipped = !balanceTxs.before.get(token);\n        const previousBalance = previousBalanceCheckSkipped\n            ? '0x0'\n            : getValueFromBalanceTransaction(request.from, token, \n            // eslint-disable-next-line no-plusplus\n            response.transactions[prevBalanceTxIndex++]);\n        const newBalance = getValueFromBalanceTransaction(request.from, token, response.transactions[index + balanceTxs.before.size + 1]);\n        const balanceChange = getSimulationBalanceChange(previousBalance, newBalance);\n        if (!balanceChange) {\n            return undefined;\n        }\n        return {\n            ...token,\n            ...balanceChange,\n        };\n    })\n        .filter((change) => change !== undefined);\n}\n/**\n * Generate transactions to check token balances.\n * @param request - The transaction that was simulated.\n * @param events - The parsed events.\n * @returns A map of token balance transactions keyed by token.\n */\nfunction getTokenBalanceTransactions(request, events) {\n    const tokenKeys = new Set();\n    const before = new Map();\n    const after = new Map();\n    const userEvents = events.filter((event) => [event.args.from, event.args.to].includes(request.from));\n    log('Filtered user events', userEvents);\n    for (const event of userEvents) {\n        const tokenIds = getEventTokenIds(event);\n        log('Extracted token IDs', tokenIds);\n        for (const tokenId of tokenIds) {\n            const simulationToken = {\n                address: event.contractAddress,\n                standard: event.tokenStandard,\n                id: tokenId,\n            };\n            const tokenKey = JSON.stringify(simulationToken);\n            if (tokenKeys.has(tokenKey)) {\n                log('Ignoring additional event with same contract and token ID', simulationToken);\n                continue;\n            }\n            tokenKeys.add(tokenKey);\n            const data = getBalanceTransactionData(event.tokenStandard, request.from, tokenId);\n            const transaction = {\n                from: request.from,\n                to: event.contractAddress,\n                data,\n            };\n            if (skipPriorBalanceCheck(event)) {\n                after.set(simulationToken, transaction);\n            }\n            else {\n                before.set(simulationToken, transaction);\n                after.set(simulationToken, transaction);\n            }\n        }\n    }\n    return { before, after };\n}\n/**\n * Check if an event needs to check the previous balance.\n * @param event - The parsed event.\n * @returns True if the prior balance check should be skipped.\n */\nfunction skipPriorBalanceCheck(event) {\n    // In the case of an NFT mint, we cannot check the NFT owner before the mint\n    // as the balance check transaction would revert.\n    return (event.name === 'Transfer' &&\n        event.tokenStandard === types_1.SimulationTokenStandard.erc721 &&\n        parseInt(event.args.from, 16) === 0);\n}\n/**\n * Extract token IDs from a parsed event.\n * @param event - The parsed event.\n * @returns An array of token IDs.\n */\nfunction getEventTokenIds(event) {\n    if (event.tokenStandard === types_1.SimulationTokenStandard.erc721) {\n        return [event.args.tokenId];\n    }\n    if (event.tokenStandard === types_1.SimulationTokenStandard.erc1155 &&\n        event.name === 'TransferSingle') {\n        return [event.args.id];\n    }\n    if (event.tokenStandard === types_1.SimulationTokenStandard.erc1155 &&\n        event.name === 'TransferBatch') {\n        return event.args.ids;\n    }\n    // ERC-20 does not have a token ID so default to undefined.\n    return [undefined];\n}\n/**\n * Extract the value from a balance transaction response.\n * @param from - The address to check the balance of.\n * @param token - The token to check the balance of.\n * @param response - The balance transaction response.\n * @returns The value of the balance transaction.\n */\nfunction getValueFromBalanceTransaction(from, token, response) {\n    const normalizedReturn = normalizeReturnValue(response.return);\n    if (token.standard === types_1.SimulationTokenStandard.erc721) {\n        return normalizedReturn === from ? '0x1' : '0x0';\n    }\n    return normalizedReturn;\n}\n/**\n * Generate the balance transaction data for a token.\n * @param tokenStandard - The token standard.\n * @param from - The address to check the balance of.\n * @param tokenId - The token ID to check the balance of.\n * @returns The balance transaction data.\n */\nfunction getBalanceTransactionData(tokenStandard, from, tokenId) {\n    switch (tokenStandard) {\n        case types_1.SimulationTokenStandard.erc721:\n            return new abi_1.Interface(metamask_eth_abis_1.abiERC721).encodeFunctionData('ownerOf', [\n                tokenId,\n            ]);\n        case types_1.SimulationTokenStandard.erc1155:\n            return new abi_1.Interface(metamask_eth_abis_1.abiERC1155).encodeFunctionData('balanceOf', [\n                from,\n                tokenId,\n            ]);\n        default:\n            return new abi_1.Interface(metamask_eth_abis_1.abiERC20).encodeFunctionData('balanceOf', [\n                from,\n            ]);\n    }\n}\n/**\n * Parse a raw event log using known ABIs.\n * @param eventLog - The raw event log.\n * @param interfaces - The contract interfaces.\n * @returns The parsed event log or undefined if it could not be parsed.\n */\nfunction parseLog(eventLog, interfaces) {\n    const supportedTokens = Object.values(SupportedToken);\n    for (const token of supportedTokens) {\n        try {\n            const contractInterface = interfaces.get(token);\n            const { abi, standard } = SUPPORTED_TOKEN_ABIS[token];\n            return {\n                ...contractInterface.parseLog(eventLog),\n                abi,\n                standard,\n            };\n        }\n        catch (e) {\n            continue;\n        }\n    }\n    return undefined;\n}\n/**\n * Extract all logs from a call trace tree.\n * @param call - The root call trace.\n * @returns An array of logs.\n */\nfunction extractLogs(call) {\n    /* istanbul ignore next */\n    const logs = call.logs ?? [];\n    /* istanbul ignore next */\n    const nestedCalls = call.calls ?? [];\n    return [\n        ...logs,\n        ...nestedCalls.map((nestedCall) => extractLogs(nestedCall)).flat(),\n    ];\n}\n/**\n * Generate balance change data from previous and new balances.\n * @param previousBalance - The previous balance.\n * @param newBalance - The new balance.\n * @returns The balance change data or undefined if unchanged.\n */\nfunction getSimulationBalanceChange(previousBalance, newBalance) {\n    const differenceBN = (0, controller_utils_1.hexToBN)(newBalance).sub((0, controller_utils_1.hexToBN)(previousBalance));\n    const isDecrease = differenceBN.isNeg();\n    const difference = (0, controller_utils_1.toHex)(differenceBN.abs());\n    if (differenceBN.isZero()) {\n        log('Balance change is zero');\n        return undefined;\n    }\n    return {\n        previousBalance,\n        newBalance,\n        difference,\n        isDecrease,\n    };\n}\n/**\n * Normalize a return value.\n * @param value - The return value to normalize.\n * @returns The normalized return value.\n */\nfunction normalizeReturnValue(value) {\n    return (0, controller_utils_1.toHex)((0, controller_utils_1.hexToBN)(value));\n}\n/**\n * Get the contract interfaces for all supported tokens.\n * @returns A map of supported tokens to their contract interfaces.\n */\nfunction getContractInterfaces() {\n    const supportedTokens = Object.values(SupportedToken);\n    return new Map(supportedTokens.map((tokenType) => {\n        const { abi } = SUPPORTED_TOKEN_ABIS[tokenType];\n        const contractInterface = new abi_1.Interface(abi);\n        return [tokenType, contractInterface];\n    }));\n}\n//# sourceMappingURL=simulation.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updatePostTransactionBalance = exports.updateSwapsTransaction = exports.SWAP_TRANSACTION_TYPES = exports.SWAPS_CHAINID_DEFAULT_TOKEN_MAP = exports.DEFAULT_TOKEN_ADDRESS = exports.UPDATE_POST_TX_BALANCE_ATTEMPTS = exports.UPDATE_POST_TX_BALANCE_TIMEOUT = void 0;\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst lodash_1 = require(\"lodash\");\nconst constants_1 = require(\"../constants.cjs\");\nconst logger_1 = require(\"../logger.cjs\");\nconst types_1 = require(\"../types.cjs\");\nconst utils_1 = require(\"./utils.cjs\");\nconst log = (0, logger_1.createModuleLogger)(logger_1.projectLogger, 'swaps');\n/**\n * Interval in milliseconds between checks of post transaction balance\n */\nexports.UPDATE_POST_TX_BALANCE_TIMEOUT = 5000;\n/**\n * Retry attempts for checking post transaction balance\n */\nexports.UPDATE_POST_TX_BALANCE_ATTEMPTS = 6;\nconst SWAPS_TESTNET_CHAIN_ID = '0x539';\n/**\n * An address that the metaswap-api recognizes as the default token for the current network, in place of the token address that ERC-20 tokens have\n */\nexports.DEFAULT_TOKEN_ADDRESS = '0x0000000000000000000000000000000000000000';\nconst ETH_SWAPS_TOKEN_OBJECT = {\n    name: 'Ether',\n    address: exports.DEFAULT_TOKEN_ADDRESS,\n    decimals: 18,\n};\nconst BNB_SWAPS_TOKEN_OBJECT = {\n    name: 'Binance Coin',\n    address: exports.DEFAULT_TOKEN_ADDRESS,\n    decimals: 18,\n};\nconst MATIC_SWAPS_TOKEN_OBJECT = {\n    name: 'Matic',\n    address: exports.DEFAULT_TOKEN_ADDRESS,\n    decimals: 18,\n};\nconst AVAX_SWAPS_TOKEN_OBJECT = {\n    name: 'Avalanche',\n    address: exports.DEFAULT_TOKEN_ADDRESS,\n    decimals: 18,\n};\nconst TEST_ETH_SWAPS_TOKEN_OBJECT = {\n    name: 'Test Ether',\n    address: exports.DEFAULT_TOKEN_ADDRESS,\n    decimals: 18,\n};\nconst GOERLI_SWAPS_TOKEN_OBJECT = {\n    name: 'Ether',\n    address: exports.DEFAULT_TOKEN_ADDRESS,\n    decimals: 18,\n};\nconst ARBITRUM_SWAPS_TOKEN_OBJECT = {\n    ...ETH_SWAPS_TOKEN_OBJECT,\n};\nconst OPTIMISM_SWAPS_TOKEN_OBJECT = {\n    ...ETH_SWAPS_TOKEN_OBJECT,\n};\nconst ZKSYNC_ERA_SWAPS_TOKEN_OBJECT = {\n    ...ETH_SWAPS_TOKEN_OBJECT,\n};\nexports.SWAPS_CHAINID_DEFAULT_TOKEN_MAP = {\n    [constants_1.CHAIN_IDS.MAINNET]: ETH_SWAPS_TOKEN_OBJECT,\n    [SWAPS_TESTNET_CHAIN_ID]: TEST_ETH_SWAPS_TOKEN_OBJECT,\n    [constants_1.CHAIN_IDS.BSC]: BNB_SWAPS_TOKEN_OBJECT,\n    [constants_1.CHAIN_IDS.POLYGON]: MATIC_SWAPS_TOKEN_OBJECT,\n    [constants_1.CHAIN_IDS.GOERLI]: GOERLI_SWAPS_TOKEN_OBJECT,\n    [constants_1.CHAIN_IDS.AVALANCHE]: AVAX_SWAPS_TOKEN_OBJECT,\n    [constants_1.CHAIN_IDS.OPTIMISM]: OPTIMISM_SWAPS_TOKEN_OBJECT,\n    [constants_1.CHAIN_IDS.ARBITRUM]: ARBITRUM_SWAPS_TOKEN_OBJECT,\n    [constants_1.CHAIN_IDS.ZKSYNC_ERA]: ZKSYNC_ERA_SWAPS_TOKEN_OBJECT,\n};\nexports.SWAP_TRANSACTION_TYPES = [\n    types_1.TransactionType.swap,\n    types_1.TransactionType.swapAndSend,\n    types_1.TransactionType.swapApproval,\n];\n/**\n * Updates the transaction meta object with the swap information\n *\n * @param transactionMeta - The transaction meta object to update\n * @param transactionType - The type of the transaction\n * @param swaps - The swaps object\n * @param swaps.hasApproveTx - Whether the swap has an approval transaction\n * @param swaps.meta - The swap meta object\n * @param updateSwapsTransactionRequest - Dependency bag\n * @param updateSwapsTransactionRequest.isSwapsDisabled - Whether swaps are disabled\n * @param updateSwapsTransactionRequest.cancelTransaction - Function to cancel a transaction\n * @param updateSwapsTransactionRequest.messenger - TransactionController messenger\n * @returns A copy of the transaction meta object with updates, or the same\n * transaction meta object if no updates were made.\n */\nfunction updateSwapsTransaction(transactionMeta, transactionType, swaps, { isSwapsDisabled, cancelTransaction, messenger, }) {\n    if (isSwapsDisabled || !exports.SWAP_TRANSACTION_TYPES.includes(transactionType)) {\n        return transactionMeta;\n    }\n    // The simulationFails property is added if the estimateGas call fails. In cases\n    // when no swaps approval tx is required, this indicates that the swap will likely\n    // fail. There was an earlier estimateGas call made by the swaps controller,\n    // but it is possible that external conditions have change since then, and\n    // a previously succeeding estimate gas call could now fail. By checking for\n    // the `simulationFails` property here, we can reduce the number of swap\n    // transactions that get published to the blockchain only to fail and thereby\n    // waste the user's funds on gas.\n    if (transactionType === types_1.TransactionType.swap &&\n        swaps?.hasApproveTx === false &&\n        transactionMeta.simulationFails) {\n        cancelTransaction(transactionMeta.id);\n        throw new Error('Simulation failed');\n    }\n    const swapsMeta = swaps?.meta;\n    if (!swapsMeta) {\n        return transactionMeta;\n    }\n    let updatedTransactionMeta = transactionMeta;\n    if (transactionType === types_1.TransactionType.swapApproval) {\n        updatedTransactionMeta = updateSwapApprovalTransaction(transactionMeta, swapsMeta);\n        messenger.publish('TransactionController:transactionNewSwapApproval', {\n            transactionMeta: updatedTransactionMeta,\n        });\n    }\n    if (transactionType === types_1.TransactionType.swapAndSend) {\n        updatedTransactionMeta = updateSwapAndSendTransaction(transactionMeta, swapsMeta);\n        messenger.publish('TransactionController:transactionNewSwapAndSend', {\n            transactionMeta: updatedTransactionMeta,\n        });\n    }\n    if (transactionType === types_1.TransactionType.swap) {\n        updatedTransactionMeta = updateSwapTransaction(transactionMeta, swapsMeta);\n        messenger.publish('TransactionController:transactionNewSwap', {\n            transactionMeta: updatedTransactionMeta,\n        });\n    }\n    return updatedTransactionMeta;\n}\nexports.updateSwapsTransaction = updateSwapsTransaction;\n/**\n * Attempts to update the post transaction balance of the provided transaction\n *\n * @param transactionMeta - Transaction meta object to update\n * @param updatePostTransactionBalanceRequest - Dependency bag\n * @param updatePostTransactionBalanceRequest.ethQuery - EthQuery object\n * @param updatePostTransactionBalanceRequest.getTransaction - Reading function for the latest transaction state\n * @param updatePostTransactionBalanceRequest.updateTransaction - Updating transaction function\n */\nasync function updatePostTransactionBalance(transactionMeta, { ethQuery, getTransaction, updateTransaction, }) {\n    log('Updating post transaction balance', transactionMeta.id);\n    const transactionId = transactionMeta.id;\n    let latestTransactionMeta;\n    let approvalTransactionMeta;\n    for (let i = 0; i < exports.UPDATE_POST_TX_BALANCE_ATTEMPTS; i++) {\n        log('Querying balance', { attempt: i });\n        const postTransactionBalance = await (0, controller_utils_1.query)(ethQuery, 'getBalance', [\n            transactionMeta.txParams.from,\n        ]);\n        latestTransactionMeta = {\n            ...(getTransaction(transactionId) ?? {}),\n        };\n        approvalTransactionMeta = latestTransactionMeta.approvalTxId\n            ? getTransaction(latestTransactionMeta.approvalTxId)\n            : undefined;\n        latestTransactionMeta.postTxBalance = postTransactionBalance.toString(16);\n        const isDefaultTokenAddress = isSwapsDefaultTokenAddress(transactionMeta.destinationTokenAddress, transactionMeta.chainId);\n        if (!isDefaultTokenAddress ||\n            transactionMeta.preTxBalance !== latestTransactionMeta.postTxBalance) {\n            log('Finishing post balance update', {\n                isDefaultTokenAddress,\n                preTxBalance: transactionMeta.preTxBalance,\n                postTxBalance: latestTransactionMeta.postTxBalance,\n            });\n            break;\n        }\n        log('Waiting for balance to update', {\n            delay: exports.UPDATE_POST_TX_BALANCE_TIMEOUT,\n        });\n        await sleep(exports.UPDATE_POST_TX_BALANCE_TIMEOUT);\n    }\n    updateTransaction(latestTransactionMeta, 'TransactionController#updatePostTransactionBalance - Add post transaction balance');\n    log('Completed post balance update', latestTransactionMeta?.postTxBalance);\n    return {\n        updatedTransactionMeta: latestTransactionMeta,\n        approvalTransactionMeta,\n    };\n}\nexports.updatePostTransactionBalance = updatePostTransactionBalance;\n/**\n * Updates the transaction meta object with the swap information\n *\n * @param transactionMeta - Transaction meta object to update\n * @param propsToUpdate - Properties to update\n * @param propsToUpdate.sourceTokenSymbol - Symbol of the token to be swapped\n * @param propsToUpdate.destinationTokenSymbol - Symbol of the token to be received\n * @param propsToUpdate.type - Type of the transaction\n * @param propsToUpdate.destinationTokenDecimals - Decimals of the token to be received\n * @param propsToUpdate.destinationTokenAddress - Address of the token to be received\n * @param propsToUpdate.swapMetaData - Metadata of the swap\n * @param propsToUpdate.swapTokenValue - Value of the token to be swapped\n * @param propsToUpdate.estimatedBaseFee - Estimated base fee of the transaction\n * @param propsToUpdate.approvalTxId - Transaction id of the approval transaction\n * @returns The updated transaction meta object.\n */\nfunction updateSwapTransaction(transactionMeta, { sourceTokenSymbol, destinationTokenSymbol, type, destinationTokenDecimals, destinationTokenAddress, swapMetaData, swapTokenValue, estimatedBaseFee, approvalTxId, }) {\n    (0, utils_1.validateIfTransactionUnapproved)(transactionMeta, 'updateSwapTransaction');\n    let swapTransaction = {\n        sourceTokenSymbol,\n        destinationTokenSymbol,\n        type,\n        destinationTokenDecimals,\n        destinationTokenAddress,\n        swapMetaData,\n        swapTokenValue,\n        estimatedBaseFee,\n        approvalTxId,\n    };\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    swapTransaction = (0, lodash_1.pickBy)(swapTransaction);\n    return (0, lodash_1.merge)({}, transactionMeta, swapTransaction);\n}\n/**\n * Updates the transaction meta object with the swap information\n *\n * @param transactionMeta - Transaction meta object to update\n * @param propsToUpdate - Properties to update\n * @param propsToUpdate.approvalTxId - Transaction id of the approval transaction\n * @param propsToUpdate.destinationTokenAddress - Address of the token to be received\n * @param propsToUpdate.destinationTokenAmount - The raw amount of the destination token\n * @param propsToUpdate.destinationTokenDecimals - Decimals of the token to be received\n * @param propsToUpdate.destinationTokenSymbol - Symbol of the token to be received\n * @param propsToUpdate.estimatedBaseFee - Estimated base fee of the transaction\n * @param propsToUpdate.sourceTokenAddress - The address of the source token\n * @param propsToUpdate.sourceTokenAmount - The raw amount of the source token\n * @param propsToUpdate.sourceTokenDecimals - The decimals of the source token\n * @param propsToUpdate.sourceTokenSymbol - Symbol of the token to be swapped\n * @param propsToUpdate.swapAndSendRecipient - The recipient of the swap and send transaction\n * @param propsToUpdate.swapMetaData - Metadata of the swap\n * @param propsToUpdate.swapTokenValue - Value of the token to be swapped – possibly the same as sourceTokenAmount; included for consistency\n * @param propsToUpdate.type - Type of the transaction\n * @returns The updated transaction meta object.\n */\nfunction updateSwapAndSendTransaction(transactionMeta, { approvalTxId, destinationTokenAddress, destinationTokenAmount, destinationTokenDecimals, destinationTokenSymbol, estimatedBaseFee, sourceTokenAddress, sourceTokenAmount, sourceTokenDecimals, sourceTokenSymbol, swapAndSendRecipient, swapMetaData, swapTokenValue, type, }) {\n    (0, utils_1.validateIfTransactionUnapproved)(transactionMeta, 'updateSwapTransaction');\n    let swapTransaction = {\n        approvalTxId,\n        destinationTokenAddress,\n        destinationTokenAmount,\n        destinationTokenDecimals,\n        destinationTokenSymbol,\n        estimatedBaseFee,\n        sourceTokenAddress,\n        sourceTokenAmount,\n        sourceTokenDecimals,\n        sourceTokenSymbol,\n        swapAndSendRecipient,\n        swapMetaData,\n        swapTokenValue,\n        type,\n    };\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    swapTransaction = (0, lodash_1.pickBy)(swapTransaction);\n    return (0, lodash_1.merge)({}, transactionMeta, swapTransaction);\n}\n/**\n * Updates the transaction meta object with the swap approval information\n *\n * @param transactionMeta - Transaction meta object to update\n * @param propsToUpdate - Properties to update\n * @param propsToUpdate.type - Type of the transaction\n * @param propsToUpdate.sourceTokenSymbol - Symbol of the token to be swapped\n * @returns The updated transaction meta object.\n */\nfunction updateSwapApprovalTransaction(transactionMeta, { type, sourceTokenSymbol }) {\n    (0, utils_1.validateIfTransactionUnapproved)(transactionMeta, 'updateSwapApprovalTransaction');\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let swapApprovalTransaction = { type, sourceTokenSymbol };\n    swapApprovalTransaction = (0, lodash_1.pickBy)({\n        type,\n        sourceTokenSymbol,\n    });\n    return (0, lodash_1.merge)({}, transactionMeta, swapApprovalTransaction);\n}\n/**\n * Checks whether the provided address is strictly equal to the address for\n * the default swaps token of the provided chain.\n *\n * @param address - The string to compare to the default token address\n * @param chainId - The hex encoded chain ID of the default swaps token to check\n * @returns Whether the address is the provided chain's default token address\n */\nfunction isSwapsDefaultTokenAddress(address, chainId) {\n    if (!address || !chainId) {\n        return false;\n    }\n    return (address ===\n        exports.SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId]?.address);\n}\n/**\n * Sleeps for the provided number of milliseconds\n *\n * @param ms - Number of milliseconds to sleep\n * @returns Promise that resolves after the provided number of milliseconds\n */\nfunction sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n//# sourceMappingURL=swaps.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.determineTransactionType = exports.ESTIMATE_GAS_ERROR = void 0;\nconst abi_1 = require(\"@ethersproject/abi\");\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst metamask_eth_abis_1 = require(\"@metamask/metamask-eth-abis\");\nconst types_1 = require(\"../types.cjs\");\nexports.ESTIMATE_GAS_ERROR = 'eth_estimateGas rpc method error';\nconst ERC20Interface = new abi_1.Interface(metamask_eth_abis_1.abiERC20);\nconst ERC721Interface = new abi_1.Interface(metamask_eth_abis_1.abiERC721);\nconst ERC1155Interface = new abi_1.Interface(metamask_eth_abis_1.abiERC1155);\nconst USDCInterface = new abi_1.Interface(metamask_eth_abis_1.abiFiatTokenV2);\n/**\n * Determines the type of the transaction by analyzing the txParams.\n * It will never return TRANSACTION_TYPE_CANCEL or TRANSACTION_TYPE_RETRY as these\n * represent specific events that we specify manually at transaction creation.\n *\n * @param txParams - Parameters for the transaction.\n * @param ethQuery - EthQuery instance.\n * @returns A object with the transaction type and the contract code response in Hex.\n */\nasync function determineTransactionType(txParams, ethQuery) {\n    const { data, to } = txParams;\n    if (data && !to) {\n        return { type: types_1.TransactionType.deployContract, getCodeResponse: undefined };\n    }\n    const { contractCode: getCodeResponse, isContractAddress } = await readAddressAsContract(ethQuery, to);\n    if (!isContractAddress) {\n        return { type: types_1.TransactionType.simpleSend, getCodeResponse };\n    }\n    const hasValue = Number(txParams.value ?? '0') !== 0;\n    const contractInteractionResult = {\n        type: types_1.TransactionType.contractInteraction,\n        getCodeResponse,\n    };\n    if (!data || hasValue) {\n        return contractInteractionResult;\n    }\n    const name = parseStandardTokenTransactionData(data)?.name;\n    if (!name) {\n        return contractInteractionResult;\n    }\n    const tokenMethodName = [\n        types_1.TransactionType.tokenMethodApprove,\n        types_1.TransactionType.tokenMethodSetApprovalForAll,\n        types_1.TransactionType.tokenMethodTransfer,\n        types_1.TransactionType.tokenMethodTransferFrom,\n        types_1.TransactionType.tokenMethodSafeTransferFrom,\n        types_1.TransactionType.tokenMethodIncreaseAllowance,\n    ].find((methodName) => methodName.toLowerCase() === name.toLowerCase());\n    if (tokenMethodName) {\n        return { type: tokenMethodName, getCodeResponse };\n    }\n    return contractInteractionResult;\n}\nexports.determineTransactionType = determineTransactionType;\n/**\n * Attempts to decode transaction data using ABIs for three different token standards: ERC20, ERC721, ERC1155.\n * The data will decode correctly if the transaction is an interaction with a contract that matches one of these\n * contract standards\n *\n * @param data - Encoded transaction data.\n * @returns A representation of an ethereum contract call.\n */\nfunction parseStandardTokenTransactionData(data) {\n    if (!data) {\n        return undefined;\n    }\n    try {\n        return ERC20Interface.parseTransaction({ data });\n    }\n    catch {\n        // ignore and next try to parse with erc721 ABI\n    }\n    try {\n        return ERC721Interface.parseTransaction({ data });\n    }\n    catch {\n        // ignore and next try to parse with erc1155 ABI\n    }\n    try {\n        return ERC1155Interface.parseTransaction({ data });\n    }\n    catch {\n        // ignore and return undefined\n    }\n    try {\n        return USDCInterface.parseTransaction({ data });\n    }\n    catch {\n        // ignore and return undefined\n    }\n    return undefined;\n}\n/**\n * Reads an Ethereum address and determines if it is a contract address.\n *\n * @param ethQuery - The Ethereum query object used to interact with the Ethereum blockchain.\n * @param address - The Ethereum address.\n * @returns An object containing the contract code and a boolean indicating if it is a contract address.\n */\nasync function readAddressAsContract(ethQuery, address) {\n    let contractCode;\n    try {\n        contractCode = await (0, controller_utils_1.query)(ethQuery, 'getCode', [address]);\n    }\n    catch (e) {\n        contractCode = null;\n    }\n    const isContractAddress = contractCode\n        ? contractCode !== '0x' && contractCode !== '0x0'\n        : false;\n    return { contractCode, isContractAddress };\n}\n//# sourceMappingURL=transaction-type.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.padHexToEvenLength = exports.normalizeGasFeeValues = exports.normalizeTxError = exports.validateIfTransactionUnapproved = exports.validateGasValues = exports.isEIP1559Transaction = exports.normalizeTransactionParams = exports.ESTIMATE_GAS_ERROR = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst types_1 = require(\"../types.cjs\");\nexports.ESTIMATE_GAS_ERROR = 'eth_estimateGas rpc method error';\n// TODO: Replace `any` with type\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst NORMALIZERS = {\n    data: (data) => (0, utils_1.add0x)(padHexToEvenLength(data)),\n    from: (from) => (0, utils_1.add0x)(from).toLowerCase(),\n    gas: (gas) => (0, utils_1.add0x)(gas),\n    gasLimit: (gas) => (0, utils_1.add0x)(gas),\n    gasPrice: (gasPrice) => (0, utils_1.add0x)(gasPrice),\n    nonce: (nonce) => (0, utils_1.add0x)(nonce),\n    to: (to) => (0, utils_1.add0x)(to).toLowerCase(),\n    value: (value) => (0, utils_1.add0x)(value),\n    maxFeePerGas: (maxFeePerGas) => (0, utils_1.add0x)(maxFeePerGas),\n    maxPriorityFeePerGas: (maxPriorityFeePerGas) => (0, utils_1.add0x)(maxPriorityFeePerGas),\n    estimatedBaseFee: (maxPriorityFeePerGas) => (0, utils_1.add0x)(maxPriorityFeePerGas),\n    type: (type) => (0, utils_1.add0x)(type),\n};\n/**\n * Normalizes properties on transaction params.\n *\n * @param txParams - The transaction params to normalize.\n * @returns Normalized transaction params.\n */\nfunction normalizeTransactionParams(txParams) {\n    const normalizedTxParams = { from: '' };\n    for (const key of (0, utils_1.getKnownPropertyNames)(NORMALIZERS)) {\n        if (txParams[key]) {\n            normalizedTxParams[key] = NORMALIZERS[key](txParams[key]);\n        }\n    }\n    if (!normalizedTxParams.value) {\n        normalizedTxParams.value = '0x0';\n    }\n    return normalizedTxParams;\n}\nexports.normalizeTransactionParams = normalizeTransactionParams;\n/**\n * Checks if a transaction is EIP-1559 by checking for the existence of\n * maxFeePerGas and maxPriorityFeePerGas within its parameters.\n *\n * @param txParams - Transaction params object to add.\n * @returns Boolean that is true if the transaction is EIP-1559 (has maxFeePerGas and maxPriorityFeePerGas), otherwise returns false.\n */\nfunction isEIP1559Transaction(txParams) {\n    const hasOwnProp = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);\n    return (hasOwnProp(txParams, 'maxFeePerGas') &&\n        hasOwnProp(txParams, 'maxPriorityFeePerGas'));\n}\nexports.isEIP1559Transaction = isEIP1559Transaction;\nconst validateGasValues = (gasValues) => {\n    Object.keys(gasValues).forEach((key) => {\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const value = gasValues[key];\n        if (typeof value !== 'string' || !(0, utils_1.isStrictHexString)(value)) {\n            throw new TypeError(\n            // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `expected hex string for ${key} but received: ${value}`);\n        }\n    });\n};\nexports.validateGasValues = validateGasValues;\n/**\n * Validates that a transaction is unapproved.\n * Throws if the transaction is not unapproved.\n *\n * @param transactionMeta - The transaction metadata to check.\n * @param fnName - The name of the function calling this helper.\n */\nfunction validateIfTransactionUnapproved(transactionMeta, fnName) {\n    if (transactionMeta?.status !== types_1.TransactionStatus.unapproved) {\n        throw new Error(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `TransactionsController: Can only call ${fnName} on an unapproved transaction.\\n      Current tx status: ${transactionMeta?.status}`);\n    }\n}\nexports.validateIfTransactionUnapproved = validateIfTransactionUnapproved;\n/**\n * Normalizes properties on transaction params.\n *\n * @param error - The error to be normalize.\n * @returns Normalized transaction error.\n */\nfunction normalizeTxError(error) {\n    return {\n        name: error.name,\n        message: error.message,\n        stack: error.stack,\n        code: error.code,\n        rpc: isJsonCompatible(error.value) ? error.value : undefined,\n    };\n}\nexports.normalizeTxError = normalizeTxError;\n/**\n * Normalize an object containing gas fee values.\n *\n * @param gasFeeValues - An object containing gas fee values.\n * @returns An object containing normalized gas fee values.\n */\nfunction normalizeGasFeeValues(gasFeeValues) {\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const normalize = (value) => typeof value === 'string' ? (0, utils_1.add0x)(value) : value;\n    if ('gasPrice' in gasFeeValues) {\n        return {\n            gasPrice: normalize(gasFeeValues.gasPrice),\n        };\n    }\n    return {\n        maxFeePerGas: normalize(gasFeeValues.maxFeePerGas),\n        maxPriorityFeePerGas: normalize(gasFeeValues.maxPriorityFeePerGas),\n    };\n}\nexports.normalizeGasFeeValues = normalizeGasFeeValues;\n/**\n * Determines whether the given value can be encoded as JSON.\n *\n * @param value - The value.\n * @returns True if the value is JSON-encodable, false if not.\n */\nfunction isJsonCompatible(value) {\n    try {\n        JSON.parse(JSON.stringify(value));\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Ensure a hex string is of even length by adding a leading 0 if necessary.\n * Any existing `0x` prefix is preserved but is not added if missing.\n *\n * @param hex - The hex string to ensure is even.\n * @returns The hex string with an even length.\n */\nfunction padHexToEvenLength(hex) {\n    const prefix = hex.toLowerCase().startsWith('0x') ? hex.slice(0, 2) : '';\n    const data = prefix ? hex.slice(2) : hex;\n    const evenData = data.length % 2 === 0 ? data : `0${data}`;\n    return prefix + evenData;\n}\nexports.padHexToEvenLength = padHexToEvenLength;\n//# sourceMappingURL=utils.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTxParams = exports.validateTransactionOrigin = void 0;\nconst abi_1 = require(\"@ethersproject/abi\");\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst metamask_eth_abis_1 = require(\"@metamask/metamask-eth-abis\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst types_1 = require(\"../types.cjs\");\nconst utils_1 = require(\"./utils.cjs\");\n/**\n * Validates whether a transaction initiated by a specific 'from' address is permitted by the origin.\n *\n * @param permittedAddresses - The permitted accounts for the given origin.\n * @param selectedAddress - The currently selected Ethereum address in the wallet.\n * @param from - The address from which the transaction is initiated.\n * @param origin - The origin or source of the transaction.\n * @throws Throws an error if the transaction is not permitted.\n */\nasync function validateTransactionOrigin(permittedAddresses, selectedAddress, from, origin) {\n    if (origin === controller_utils_1.ORIGIN_METAMASK) {\n        // Ensure the 'from' address matches the currently selected address\n        if (from !== selectedAddress) {\n            throw rpc_errors_1.rpcErrors.internal({\n                message: `Internally initiated transaction is using invalid account.`,\n                data: {\n                    origin,\n                    fromAddress: from,\n                    selectedAddress,\n                },\n            });\n        }\n        return;\n    }\n    // Check if the origin has permissions to initiate transactions from the specified address\n    if (!permittedAddresses.includes(from)) {\n        throw rpc_errors_1.providerErrors.unauthorized({ data: { origin } });\n    }\n}\nexports.validateTransactionOrigin = validateTransactionOrigin;\n/**\n * Validates the transaction params for required properties and throws in\n * the event of any validation error.\n *\n * @param txParams - Transaction params object to validate.\n * @param isEIP1559Compatible - whether or not the current network supports EIP-1559 transactions.\n */\nfunction validateTxParams(txParams, isEIP1559Compatible = true) {\n    validateEnvelopeType(txParams.type);\n    validateEIP1559Compatibility(txParams, isEIP1559Compatible);\n    validateParamFrom(txParams.from);\n    validateParamRecipient(txParams);\n    validateParamValue(txParams.value);\n    validateParamData(txParams.data);\n    validateParamChainId(txParams.chainId);\n    validateGasFeeParams(txParams);\n}\nexports.validateTxParams = validateTxParams;\n/**\n * Validates the `type` property, ensuring that if it is specified, it is a valid transaction envelope type.\n *\n * @param type - The transaction envelope type to validate.\n * @throws Throws invalid params if the type is not a valid transaction envelope type.\n */\nfunction validateEnvelopeType(type) {\n    if (type &&\n        !Object.values(types_1.TransactionEnvelopeType).includes(type)) {\n        throw rpc_errors_1.rpcErrors.invalidParams(`Invalid transaction envelope type: \"${type}\". Must be one of: ${Object.values(types_1.TransactionEnvelopeType).join(', ')}`);\n    }\n}\n/**\n * Validates EIP-1559 compatibility for transaction creation.\n *\n * @param txParams - The transaction parameters to validate.\n * @param isEIP1559Compatible - Indicates if the current network supports EIP-1559.\n * @throws Throws invalid params if the transaction specifies EIP-1559 but the network does not support it.\n */\nfunction validateEIP1559Compatibility(txParams, isEIP1559Compatible) {\n    if ((0, utils_1.isEIP1559Transaction)(txParams) && !isEIP1559Compatible) {\n        throw rpc_errors_1.rpcErrors.invalidParams('Invalid transaction params: params specify an EIP-1559 transaction but the current network does not support EIP-1559');\n    }\n}\n/**\n * Validates value property, ensuring it is a valid positive integer number\n * denominated in wei.\n *\n * @param value - The value to validate, expressed as a string.\n * @throws Throws an error if the value is not a valid positive integer\n * number denominated in wei.\n * - If the value contains a hyphen (-), it is considered invalid.\n * - If the value contains a decimal point (.), it is considered invalid.\n * - If the value is not a finite number, is NaN, or is not a safe integer, it is considered invalid.\n */\nfunction validateParamValue(value) {\n    if (value !== undefined) {\n        if (value.includes('-')) {\n            throw rpc_errors_1.rpcErrors.invalidParams(`Invalid transaction value \"${value}\": not a positive number.`);\n        }\n        if (value.includes('.')) {\n            throw rpc_errors_1.rpcErrors.invalidParams(`Invalid transaction value \"${value}\": number must be in wei.`);\n        }\n        const intValue = parseInt(value, 10);\n        const isValid = Number.isFinite(intValue) &&\n            !Number.isNaN(intValue) &&\n            !isNaN(Number(value)) &&\n            Number.isSafeInteger(intValue);\n        if (!isValid) {\n            throw rpc_errors_1.rpcErrors.invalidParams(`Invalid transaction value ${value}: number must be a valid number.`);\n        }\n    }\n}\n/**\n * Validates the recipient address in a transaction's parameters.\n *\n * @param txParams - The transaction parameters object to validate.\n * @throws Throws an error if the recipient address is invalid:\n * - If the recipient address is an empty string ('0x') or undefined and the transaction contains data,\n * the \"to\" field is removed from the transaction parameters.\n * - If the recipient address is not a valid hexadecimal Ethereum address, an error is thrown.\n */\nfunction validateParamRecipient(txParams) {\n    if (txParams.to === '0x' || txParams.to === undefined) {\n        if (txParams.data) {\n            delete txParams.to;\n        }\n        else {\n            throw rpc_errors_1.rpcErrors.invalidParams(`Invalid \"to\" address.`);\n        }\n    }\n    else if (txParams.to !== undefined && !(0, controller_utils_1.isValidHexAddress)(txParams.to)) {\n        throw rpc_errors_1.rpcErrors.invalidParams(`Invalid \"to\" address.`);\n    }\n}\n/**\n * Validates the recipient address in a transaction's parameters.\n *\n * @param from - The from property to validate.\n * @throws Throws an error if the recipient address is invalid:\n * - If the recipient address is an empty string ('0x') or undefined and the transaction contains data,\n * the \"to\" field is removed from the transaction parameters.\n * - If the recipient address is not a valid hexadecimal Ethereum address, an error is thrown.\n */\nfunction validateParamFrom(from) {\n    if (!from || typeof from !== 'string') {\n        throw rpc_errors_1.rpcErrors.invalidParams(`Invalid \"from\" address ${from}: not a string.`);\n    }\n    if (!(0, controller_utils_1.isValidHexAddress)(from)) {\n        throw rpc_errors_1.rpcErrors.invalidParams('Invalid \"from\" address.');\n    }\n}\n/**\n * Validates input data for transactions.\n *\n * @param value - The input data to validate.\n * @throws Throws invalid params if the input data is invalid.\n */\nfunction validateParamData(value) {\n    if (value) {\n        const ERC20Interface = new abi_1.Interface(metamask_eth_abis_1.abiERC20);\n        try {\n            ERC20Interface.parseTransaction({ data: value });\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            if (error.message.match(/BUFFER_OVERRUN/u)) {\n                throw rpc_errors_1.rpcErrors.invalidParams('Invalid transaction params: data out-of-bounds, BUFFER_OVERRUN.');\n            }\n        }\n    }\n}\n/**\n * Validates chainId type.\n *\n * @param chainId - The chainId to validate.\n */\nfunction validateParamChainId(chainId) {\n    if (chainId !== undefined &&\n        typeof chainId !== 'number' &&\n        typeof chainId !== 'string') {\n        throw rpc_errors_1.rpcErrors.invalidParams(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Invalid transaction params: chainId is not a Number or hex string. got: (${chainId})`);\n    }\n}\n/**\n * Validates gas values.\n *\n * @param txParams - The transaction parameters to validate.\n */\nfunction validateGasFeeParams(txParams) {\n    if (txParams.gasPrice) {\n        ensureProperTransactionEnvelopeTypeProvided(txParams, 'gasPrice');\n        ensureMutuallyExclusiveFieldsNotProvided(txParams, 'gasPrice', 'maxFeePerGas');\n        ensureMutuallyExclusiveFieldsNotProvided(txParams, 'gasPrice', 'maxPriorityFeePerGas');\n        ensureFieldIsString(txParams, 'gasPrice');\n    }\n    if (txParams.maxFeePerGas) {\n        ensureProperTransactionEnvelopeTypeProvided(txParams, 'maxFeePerGas');\n        ensureMutuallyExclusiveFieldsNotProvided(txParams, 'maxFeePerGas', 'gasPrice');\n        ensureFieldIsString(txParams, 'maxFeePerGas');\n    }\n    if (txParams.maxPriorityFeePerGas) {\n        ensureProperTransactionEnvelopeTypeProvided(txParams, 'maxPriorityFeePerGas');\n        ensureMutuallyExclusiveFieldsNotProvided(txParams, 'maxPriorityFeePerGas', 'gasPrice');\n        ensureFieldIsString(txParams, 'maxPriorityFeePerGas');\n    }\n}\n/**\n * Ensures that the provided txParams has the proper 'type' specified for the\n * given field, if it is provided. If types do not match throws an\n * invalidParams error.\n *\n * @param txParams - The transaction parameters object\n * @param field - The current field being validated\n * @throws {ethErrors.rpc.invalidParams} Throws if type does not match the\n * expectations for provided field.\n */\nfunction ensureProperTransactionEnvelopeTypeProvided(txParams, field) {\n    switch (field) {\n        case 'maxFeePerGas':\n        case 'maxPriorityFeePerGas':\n            if (txParams.type &&\n                txParams.type !== types_1.TransactionEnvelopeType.feeMarket) {\n                throw rpc_errors_1.rpcErrors.invalidParams(`Invalid transaction envelope type: specified type \"${txParams.type}\" but including maxFeePerGas and maxPriorityFeePerGas requires type: \"${types_1.TransactionEnvelopeType.feeMarket}\"`);\n            }\n            break;\n        case 'gasPrice':\n        default:\n            if (txParams.type &&\n                txParams.type === types_1.TransactionEnvelopeType.feeMarket) {\n                throw rpc_errors_1.rpcErrors.invalidParams(`Invalid transaction envelope type: specified type \"${txParams.type}\" but included a gasPrice instead of maxFeePerGas and maxPriorityFeePerGas`);\n            }\n    }\n}\n/**\n * Given two fields, ensure that the second field is not included in txParams,\n * and if it is throw an invalidParams error.\n *\n * @param txParams - The transaction parameters object\n * @param fieldBeingValidated - The current field being validated\n * @param mutuallyExclusiveField - The field to ensure is not provided\n * @throws {ethErrors.rpc.invalidParams} Throws if mutuallyExclusiveField is\n * present in txParams.\n */\nfunction ensureMutuallyExclusiveFieldsNotProvided(txParams, fieldBeingValidated, mutuallyExclusiveField) {\n    if (typeof txParams[mutuallyExclusiveField] !== 'undefined') {\n        throw rpc_errors_1.rpcErrors.invalidParams(`Invalid transaction params: specified ${fieldBeingValidated} but also included ${mutuallyExclusiveField}, these cannot be mixed`);\n    }\n}\n/**\n * Ensures that the provided value for field is a string, throws an\n * invalidParams error if field is not a string.\n *\n * @param txParams - The transaction parameters object\n * @param field - The current field being validated\n * @throws {rpcErrors.invalidParams} Throws if field is not a string\n */\nfunction ensureFieldIsString(txParams, field) {\n    if (typeof txParams[field] !== 'string') {\n        throw rpc_errors_1.rpcErrors.invalidParams(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Invalid transaction params: ${field} is not a string. got: (${txParams[field]})`);\n    }\n}\n//# sourceMappingURL=validation.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _NonceTracker_provider, _NonceTracker_blockTracker, _NonceTracker_getPendingTransactions, _NonceTracker_getConfirmedTransactions, _NonceTracker_lockMap;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NonceTracker = void 0;\nconst assert_1 = __importDefault(require(\"assert\"));\nconst async_mutex_1 = require(\"async-mutex\");\nconst providers_1 = require(\"@ethersproject/providers\");\nclass NonceTracker {\n    constructor(opts) {\n        _NonceTracker_provider.set(this, void 0);\n        _NonceTracker_blockTracker.set(this, void 0);\n        _NonceTracker_getPendingTransactions.set(this, void 0);\n        _NonceTracker_getConfirmedTransactions.set(this, void 0);\n        _NonceTracker_lockMap.set(this, void 0);\n        __classPrivateFieldSet(this, _NonceTracker_provider, opts.provider, \"f\");\n        __classPrivateFieldSet(this, _NonceTracker_blockTracker, opts.blockTracker, \"f\");\n        __classPrivateFieldSet(this, _NonceTracker_getPendingTransactions, opts.getPendingTransactions, \"f\");\n        __classPrivateFieldSet(this, _NonceTracker_getConfirmedTransactions, opts.getConfirmedTransactions, \"f\");\n        __classPrivateFieldSet(this, _NonceTracker_lockMap, {}, \"f\");\n    }\n    /**\n     * Allows changing the provider and block tracker after insrtantiation. As the blockTracker also has a provider, they are updated atomically.\n     *\n     * @param opts - new props\n     * @param opts.provider - An ethereum provider\n     * @param opts.blockTracker - An instance of @metamask/eth-block-tracker\n     */\n    setProvider({ provider, blockTracker, }) {\n        assert_1.default(typeof provider === 'object', 'missing or invalid provider');\n        assert_1.default(typeof blockTracker === 'object', 'missing or invalid blockTracker');\n        __classPrivateFieldSet(this, _NonceTracker_provider, provider, \"f\");\n        __classPrivateFieldSet(this, _NonceTracker_blockTracker, blockTracker, \"f\");\n    }\n    /**\n     * @returns Promise<{ releaseLock: VoidFunction }> with the key releaseLock (the global mutex)\n     */\n    async getGlobalLock() {\n        const globalMutex = this._lookupMutex('global');\n        // await global mutex free\n        const releaseLock = await globalMutex.acquire();\n        return { releaseLock };\n    }\n    /**\n     * this will return an object with the `nextNonce` `nonceDetails`, and the releaseLock\n     * Note: releaseLock must be called after adding a signed tx to pending transactions (or discarding).\n     *\n     * @param address - the hex string for the address whose nonce we are calculating\n     * @returns {Promise<NonceLock>}\n     */\n    async getNonceLock(address) {\n        // await global mutex free\n        await this._globalMutexFree();\n        // await lock free, then take lock\n        const releaseLock = await this._takeMutex(address);\n        try {\n            // evaluate multiple nextNonce strategies\n            const networkNonceResult = await this._getNetworkNextNonce(address);\n            const highestLocallyConfirmed = this._getHighestLocallyConfirmed(address);\n            const nextNetworkNonce = networkNonceResult.nonce;\n            const highestSuggested = Math.max(nextNetworkNonce, highestLocallyConfirmed);\n            const pendingTxs = __classPrivateFieldGet(this, _NonceTracker_getPendingTransactions, \"f\").call(this, address);\n            const localNonceResult = this._getHighestContinuousFrom(pendingTxs, highestSuggested);\n            const nonceDetails = {\n                params: {\n                    highestLocallyConfirmed,\n                    nextNetworkNonce,\n                    highestSuggested,\n                },\n                local: localNonceResult,\n                network: networkNonceResult,\n            };\n            const nextNonce = Math.max(networkNonceResult.nonce, localNonceResult.nonce);\n            assert_1.default(Number.isInteger(nextNonce), `nonce-tracker - nextNonce is not an integer - got: (${typeof nextNonce}) \"${nextNonce}\"`);\n            // return nonce and release cb\n            return { nextNonce, nonceDetails, releaseLock };\n        }\n        catch (err) {\n            // release lock if we encounter an error\n            releaseLock();\n            throw err;\n        }\n    }\n    async _globalMutexFree() {\n        const globalMutex = this._lookupMutex('global');\n        const releaseLock = await globalMutex.acquire();\n        releaseLock();\n    }\n    async _takeMutex(lockId) {\n        const mutex = this._lookupMutex(lockId);\n        const releaseLock = await mutex.acquire();\n        return releaseLock;\n    }\n    _lookupMutex(lockId) {\n        let mutex = __classPrivateFieldGet(this, _NonceTracker_lockMap, \"f\")[lockId];\n        if (!mutex) {\n            mutex = new async_mutex_1.Mutex();\n            __classPrivateFieldGet(this, _NonceTracker_lockMap, \"f\")[lockId] = mutex;\n        }\n        return mutex;\n    }\n    /**\n     * Function returns the nonce details from teh network based on the latest block\n     * and eth_getTransactionCount method\n     *\n     * @param address - the hex string for the address whose nonce we are calculating\n     * @returns {Promise<NetworkNextNonce>}\n     */\n    async _getNetworkNextNonce(address) {\n        // calculate next nonce\n        // we need to make sure our base count\n        // and pending count are from the same block\n        const blockNumber = await __classPrivateFieldGet(this, _NonceTracker_blockTracker, \"f\").getLatestBlock();\n        const baseCount = await new providers_1.Web3Provider(__classPrivateFieldGet(this, _NonceTracker_provider, \"f\")).getTransactionCount(address, blockNumber);\n        assert_1.default(Number.isInteger(baseCount), `nonce-tracker - baseCount is not an integer - got: (${typeof baseCount}) \"${baseCount}\"`);\n        return {\n            name: 'network',\n            nonce: baseCount,\n            details: { blockNumber, baseCount },\n        };\n    }\n    /**\n     * Function returns the highest of the confirmed transaction from the address.\n     *\n     * @param address - the hex string for the address whose nonce we are calculating\n     */\n    _getHighestLocallyConfirmed(address) {\n        const confirmedTransactions = __classPrivateFieldGet(this, _NonceTracker_getConfirmedTransactions, \"f\").call(this, address);\n        const highest = this._getHighestNonce(confirmedTransactions);\n        return Number.isInteger(highest) ? highest + 1 : 0;\n    }\n    /**\n     * Function returns highest nonce value from the transcation list provided\n     *\n     * @param txList - list of transactions\n     */\n    _getHighestNonce(txList) {\n        const nonces = txList.map((txMeta) => {\n            const { nonce } = txMeta.txParams;\n            assert_1.default(typeof nonce === 'string', 'nonces should be hex strings');\n            return parseInt(nonce, 16);\n        });\n        const highestNonce = Math.max.apply(null, nonces);\n        return highestNonce;\n    }\n    /**\n     * Function return the nonce value higher than the highest nonce value from the transaction list\n     * starting from startPoint\n     *\n     * @param txList - {array} - list of txMeta's\n     * @param startPoint - {number} - the highest known locally confirmed nonce\n     */\n    _getHighestContinuousFrom(txList, startPoint) {\n        const nonces = txList.map((txMeta) => {\n            const { nonce } = txMeta.txParams;\n            assert_1.default(typeof nonce === 'string', 'nonces should be hex strings');\n            return parseInt(nonce, 16);\n        });\n        let highest = startPoint;\n        while (nonces.includes(highest)) {\n            highest += 1;\n        }\n        return { name: 'local', nonce: highest, details: { startPoint, highest } };\n    }\n}\nexports.NonceTracker = NonceTracker;\n_NonceTracker_provider = new WeakMap(), _NonceTracker_blockTracker = new WeakMap(), _NonceTracker_getPendingTransactions = new WeakMap(), _NonceTracker_getConfirmedTransactions = new WeakMap(), _NonceTracker_lockMap = new WeakMap();\n//# sourceMappingURL=NonceTracker.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NonceTracker = void 0;\nvar NonceTracker_1 = require(\"./NonceTracker\");\nObject.defineProperty(exports, \"NonceTracker\", { enumerable: true, get: function () { return NonceTracker_1.NonceTracker; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Semaphore_1 = require(\"./Semaphore\");\nvar Mutex = /** @class */ (function () {\n    function Mutex(cancelError) {\n        this._semaphore = new Semaphore_1.default(1, cancelError);\n    }\n    Mutex.prototype.acquire = function () {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n            var _a, releaser;\n            return (0, tslib_1.__generator)(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\n                    case 1:\n                        _a = _b.sent(), releaser = _a[1];\n                        return [2 /*return*/, releaser];\n                }\n            });\n        });\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this._semaphore.runExclusive(function () { return callback(); });\n    };\n    Mutex.prototype.isLocked = function () {\n        return this._semaphore.isLocked();\n    };\n    Mutex.prototype.waitForUnlock = function () {\n        return this._semaphore.waitForUnlock();\n    };\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    Mutex.prototype.release = function () {\n        this._semaphore.release();\n    };\n    Mutex.prototype.cancel = function () {\n        return this._semaphore.cancel();\n    };\n    return Mutex;\n}());\nexports.default = Mutex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"./errors\");\nvar Semaphore = /** @class */ (function () {\n    function Semaphore(_maxConcurrency, _cancelError) {\n        if (_cancelError === void 0) { _cancelError = errors_1.E_CANCELED; }\n        this._maxConcurrency = _maxConcurrency;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._waiters = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    Semaphore.prototype.acquire = function () {\n        var _this = this;\n        var locked = this.isLocked();\n        var ticketPromise = new Promise(function (resolve, reject) {\n            return _this._queue.push({ resolve: resolve, reject: reject });\n        });\n        if (!locked)\n            this._dispatch();\n        return ticketPromise;\n    };\n    Semaphore.prototype.runExclusive = function (callback) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n            var _a, value, release;\n            return (0, tslib_1.__generator)(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.acquire()];\n                    case 1:\n                        _a = _b.sent(), value = _a[0], release = _a[1];\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 4, 5]);\n                        return [4 /*yield*/, callback(value)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                    case 4:\n                        release();\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Semaphore.prototype.waitForUnlock = function () {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n            var waitPromise;\n            var _this = this;\n            return (0, tslib_1.__generator)(this, function (_a) {\n                if (!this.isLocked()) {\n                    return [2 /*return*/, Promise.resolve()];\n                }\n                waitPromise = new Promise(function (resolve) { return _this._waiters.push({ resolve: resolve }); });\n                return [2 /*return*/, waitPromise];\n            });\n        });\n    };\n    Semaphore.prototype.isLocked = function () {\n        return this._value <= 0;\n    };\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    Semaphore.prototype.release = function () {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            var releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    };\n    Semaphore.prototype.cancel = function () {\n        var _this = this;\n        this._queue.forEach(function (ticket) { return ticket.reject(_this._cancelError); });\n        this._queue = [];\n    };\n    Semaphore.prototype._dispatch = function () {\n        var _this = this;\n        var nextTicket = this._queue.shift();\n        if (!nextTicket)\n            return;\n        var released = false;\n        this._currentReleaser = function () {\n            if (released)\n                return;\n            released = true;\n            _this._value++;\n            _this._resolveWaiters();\n            _this._dispatch();\n        };\n        nextTicket.resolve([this._value--, this._currentReleaser]);\n    };\n    Semaphore.prototype._resolveWaiters = function () {\n        this._waiters.forEach(function (waiter) { return waiter.resolve(); });\n        this._waiters = [];\n    };\n    return Semaphore;\n}());\nexports.default = Semaphore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.E_CANCELED = exports.E_ALREADY_LOCKED = exports.E_TIMEOUT = void 0;\nexports.E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nexports.E_ALREADY_LOCKED = new Error('mutex already locked');\nexports.E_CANCELED = new Error('request for lock canceled');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tryAcquire = exports.withTimeout = exports.Semaphore = exports.Mutex = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Mutex_1 = require(\"./Mutex\");\nObject.defineProperty(exports, \"Mutex\", { enumerable: true, get: function () { return Mutex_1.default; } });\nvar Semaphore_1 = require(\"./Semaphore\");\nObject.defineProperty(exports, \"Semaphore\", { enumerable: true, get: function () { return Semaphore_1.default; } });\nvar withTimeout_1 = require(\"./withTimeout\");\nObject.defineProperty(exports, \"withTimeout\", { enumerable: true, get: function () { return withTimeout_1.withTimeout; } });\nvar tryAcquire_1 = require(\"./tryAcquire\");\nObject.defineProperty(exports, \"tryAcquire\", { enumerable: true, get: function () { return tryAcquire_1.tryAcquire; } });\n(0, tslib_1.__exportStar)(require(\"./errors\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tryAcquire = void 0;\nvar errors_1 = require(\"./errors\");\nvar withTimeout_1 = require(\"./withTimeout\");\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError) {\n    if (alreadyAcquiredError === void 0) { alreadyAcquiredError = errors_1.E_ALREADY_LOCKED; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (0, withTimeout_1.withTimeout)(sync, 0, alreadyAcquiredError);\n}\nexports.tryAcquire = tryAcquire;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withTimeout = void 0;\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"./errors\");\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction withTimeout(sync, timeout, timeoutError) {\n    var _this = this;\n    if (timeoutError === void 0) { timeoutError = errors_1.E_TIMEOUT; }\n    return {\n        acquire: function () {\n            return new Promise(function (resolve, reject) { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {\n                var isTimeout, handle, ticket, release, e_1;\n                return (0, tslib_1.__generator)(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            isTimeout = false;\n                            handle = setTimeout(function () {\n                                isTimeout = true;\n                                reject(timeoutError);\n                            }, timeout);\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, sync.acquire()];\n                        case 2:\n                            ticket = _a.sent();\n                            if (isTimeout) {\n                                release = Array.isArray(ticket) ? ticket[1] : ticket;\n                                release();\n                            }\n                            else {\n                                clearTimeout(handle);\n                                resolve(ticket);\n                            }\n                            return [3 /*break*/, 4];\n                        case 3:\n                            e_1 = _a.sent();\n                            if (!isTimeout) {\n                                clearTimeout(handle);\n                                reject(e_1);\n                            }\n                            return [3 /*break*/, 4];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            }); });\n        },\n        runExclusive: function (callback) {\n            return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n                var release, ticket;\n                return (0, tslib_1.__generator)(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            release = function () { return undefined; };\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, , 7, 8]);\n                            return [4 /*yield*/, this.acquire()];\n                        case 2:\n                            ticket = _a.sent();\n                            if (!Array.isArray(ticket)) return [3 /*break*/, 4];\n                            release = ticket[1];\n                            return [4 /*yield*/, callback(ticket[0])];\n                        case 3: return [2 /*return*/, _a.sent()];\n                        case 4:\n                            release = ticket;\n                            return [4 /*yield*/, callback()];\n                        case 5: return [2 /*return*/, _a.sent()];\n                        case 6: return [3 /*break*/, 8];\n                        case 7:\n                            release();\n                            return [7 /*endfinally*/];\n                        case 8: return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n        release: function () {\n            sync.release();\n        },\n        cancel: function () {\n            return sync.cancel();\n        },\n        waitForUnlock: function () { return sync.waitForUnlock(); },\n        isLocked: function () { return sync.isLocked(); },\n    };\n}\nexports.withTimeout = withTimeout;\n","import { createSelector } from 'reselect';\nimport { CaveatTypes } from '../../../../shared/constants/permissions';\n\n/**\n * This file contains selectors for PermissionController selector event\n * subscriptions, used to detect whenever a subject's accounts change so that\n * we can notify the subject via the `accountsChanged` provider event.\n */\n\n/**\n * @param {Record<string, Record<string, unknown>>} state - The\n * PermissionController state.\n * @returns {Record<string, unknown>} The PermissionController subjects.\n */\nconst getSubjects = (state) => state.subjects;\n\n/**\n * Get the permitted accounts for each subject, keyed by origin.\n * The values of the returned map are immutable values from the\n * PermissionController state.\n *\n * @returns {Map<string, string[]>} The current origin:accounts[] map.\n */\nexport const getPermittedAccountsByOrigin = createSelector(\n  getSubjects,\n  (subjects) => {\n    return Object.values(subjects).reduce((originToAccountsMap, subject) => {\n      const caveats = subject.permissions?.eth_accounts?.caveats || [];\n\n      const caveat = caveats.find(\n        ({ type }) => type === CaveatTypes.restrictReturnedAccounts,\n      );\n\n      if (caveat) {\n        originToAccountsMap.set(subject.origin, caveat.value);\n      }\n      return originToAccountsMap;\n    }, new Map());\n  },\n);\n\n/**\n * Given the current and previous exposed accounts for each PermissionController\n * subject, returns a new map containing all accounts that have changed.\n * The values of each map must be immutable values directly from the\n * PermissionController state, or an empty array instantiated in this\n * function.\n *\n * @param {Map<string, string[]>} newAccountsMap - The new origin:accounts[] map.\n * @param {Map<string, string[]>} [previousAccountsMap] - The previous origin:accounts[] map.\n * @returns {Map<string, string[]>} The origin:accounts[] map of changed accounts.\n */\nexport const getChangedAccounts = (newAccountsMap, previousAccountsMap) => {\n  if (previousAccountsMap === undefined) {\n    return newAccountsMap;\n  }\n\n  const changedAccounts = new Map();\n  if (newAccountsMap === previousAccountsMap) {\n    return changedAccounts;\n  }\n\n  const newOrigins = new Set([...newAccountsMap.keys()]);\n\n  for (const origin of previousAccountsMap.keys()) {\n    const newAccounts = newAccountsMap.get(origin) ?? [];\n\n    // The values of these maps are references to immutable values, which is why\n    // a strict equality check is enough for diffing. The values are either from\n    // PermissionController state, or an empty array initialized in the previous\n    // call to this function. `newAccountsMap` will never contain any empty\n    // arrays.\n    if (previousAccountsMap.get(origin) !== newAccounts) {\n      changedAccounts.set(origin, newAccounts);\n    }\n\n    newOrigins.delete(origin);\n  }\n\n  // By now, newOrigins is either empty or contains some number of previously\n  // unencountered origins, and all of their accounts have \"changed\".\n  for (const origin of newOrigins.keys()) {\n    changedAccounts.set(origin, newAccountsMap.get(origin));\n  }\n  return changedAccounts;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n    KnownCaipNamespace[\"Wallet\"] = \"wallet\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_1 = __importDefault(require(\"assert\"));\nconst utils_1 = require(\"./utils\");\nconst bytewords = 'ableacidalsoapexaquaarchatomauntawayaxisbackbaldbarnbeltbetabiasbluebodybragbrewbulbbuzzcalmcashcatschefcityclawcodecolacookcostcruxcurlcuspcyandarkdatadaysdelidicedietdoordowndrawdropdrumdulldutyeacheasyechoedgeepicevenexamexiteyesfactfairfernfigsfilmfishfizzflapflewfluxfoxyfreefrogfuelfundgalagamegeargemsgiftgirlglowgoodgraygrimgurugushgyrohalfhanghardhawkheathelphighhillholyhopehornhutsicedideaidleinchinkyintoirisironitemjadejazzjoinjoltjowljudojugsjumpjunkjurykeepkenokeptkeyskickkilnkingkitekiwiknoblamblavalazyleaflegsliarlimplionlistlogoloudloveluaulucklungmainmanymathmazememomenumeowmildmintmissmonknailnavyneednewsnextnoonnotenumbobeyoboeomitonyxopenovalowlspaidpartpeckplaypluspoempoolposepuffpumapurrquadquizraceramprealredorichroadrockroofrubyruinrunsrustsafesagascarsetssilkskewslotsoapsolosongstubsurfswantacotasktaxitenttiedtimetinytoiltombtoystriptunatwinuglyundouniturgeuservastveryvetovialvibeviewvisavoidvowswallwandwarmwaspwavewaxywebswhatwhenwhizwolfworkyankyawnyellyogayurtzapszerozestzinczonezoom';\nlet bytewordsLookUpTable = [];\nconst BYTEWORDS_NUM = 256;\nconst BYTEWORD_LENGTH = 4;\nconst MINIMAL_BYTEWORD_LENGTH = 2;\nvar STYLES;\n(function (STYLES) {\n    STYLES[\"STANDARD\"] = \"standard\";\n    STYLES[\"URI\"] = \"uri\";\n    STYLES[\"MINIMAL\"] = \"minimal\";\n})(STYLES || (STYLES = {}));\nconst getWord = (index) => {\n    return bytewords.slice(index * BYTEWORD_LENGTH, (index * BYTEWORD_LENGTH) + BYTEWORD_LENGTH);\n};\nconst getMinimalWord = (index) => {\n    const byteword = getWord(index);\n    return `${byteword[0]}${byteword[BYTEWORD_LENGTH - 1]}`;\n};\nconst addCRC = (string) => {\n    const crc = utils_1.getCRCHex(Buffer.from(string, 'hex'));\n    return `${string}${crc}`;\n};\nconst encodeWithSeparator = (word, separator) => {\n    const crcAppendedWord = addCRC(word);\n    const crcWordBuff = Buffer.from(crcAppendedWord, 'hex');\n    const result = crcWordBuff.reduce((result, w) => ([...result, getWord(w)]), []);\n    return result.join(separator);\n};\nconst encodeMinimal = (word) => {\n    const crcAppendedWord = addCRC(word);\n    const crcWordBuff = Buffer.from(crcAppendedWord, 'hex');\n    const result = crcWordBuff.reduce((result, w) => result + getMinimalWord(w), '');\n    return result;\n};\nconst decodeWord = (word, wordLength) => {\n    assert_1.default(word.length === wordLength, 'Invalid Bytewords: word.length does not match wordLength provided');\n    const dim = 26;\n    // Since the first and last letters of each Byteword are unique,\n    // we can use them as indexes into a two-dimensional lookup table.\n    // This table is generated lazily.\n    if (bytewordsLookUpTable.length === 0) {\n        const array_len = dim * dim;\n        bytewordsLookUpTable = [...new Array(array_len)].map(() => -1);\n        for (let i = 0; i < BYTEWORDS_NUM; i++) {\n            const byteword = getWord(i);\n            let x = byteword[0].charCodeAt(0) - 'a'.charCodeAt(0);\n            let y = byteword[3].charCodeAt(0) - 'a'.charCodeAt(0);\n            let offset = y * dim + x;\n            bytewordsLookUpTable[offset] = i;\n        }\n    }\n    // If the coordinates generated by the first and last letters are out of bounds,\n    // or the lookup table contains -1 at the coordinates, then the word is not valid.\n    let x = (word[0]).toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n    let y = (word[wordLength == 4 ? 3 : 1]).toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n    assert_1.default(0 <= x && x < dim && 0 <= y && y < dim, 'Invalid Bytewords: invalid word');\n    let offset = y * dim + x;\n    let value = bytewordsLookUpTable[offset];\n    assert_1.default(value !== -1, 'Invalid Bytewords: value not in lookup table');\n    // If we're decoding a full four-letter word, verify that the two middle letters are correct.\n    if (wordLength == BYTEWORD_LENGTH) {\n        const byteword = getWord(value);\n        let c1 = word[1].toLowerCase();\n        let c2 = word[2].toLowerCase();\n        assert_1.default(c1 === byteword[1] && c2 === byteword[2], 'Invalid Bytewords: invalid middle letters of word');\n    }\n    // Successful decode.\n    return Buffer.from([value]).toString('hex');\n};\nconst _decode = (string, separator, wordLength) => {\n    const words = wordLength == BYTEWORD_LENGTH ? string.split(separator) : utils_1.partition(string, 2);\n    const decodedString = words.map((word) => decodeWord(word, wordLength)).join('');\n    assert_1.default(decodedString.length >= 5, 'Invalid Bytewords: invalid decoded string length');\n    const [body, bodyChecksum] = utils_1.split(Buffer.from(decodedString, 'hex'), 4);\n    const checksum = utils_1.getCRCHex(body); // convert to hex\n    assert_1.default(checksum === bodyChecksum.toString('hex'), 'Invalid Checksum');\n    return body.toString('hex');\n};\nconst decode = (string, style = STYLES.MINIMAL) => {\n    switch (style) {\n        case STYLES.STANDARD:\n            return _decode(string, ' ', BYTEWORD_LENGTH);\n        case STYLES.URI:\n            return _decode(string, '-', BYTEWORD_LENGTH);\n        case STYLES.MINIMAL:\n            return _decode(string, '', MINIMAL_BYTEWORD_LENGTH);\n        default:\n            throw new Error(`Invalid style ${style}`);\n    }\n};\nconst encode = (string, style = STYLES.MINIMAL) => {\n    switch (style) {\n        case STYLES.STANDARD:\n            return encodeWithSeparator(string, ' ');\n        case STYLES.URI:\n            return encodeWithSeparator(string, '-');\n        case STYLES.MINIMAL:\n            return encodeMinimal(string);\n        default:\n            throw new Error(`Invalid style ${style}`);\n    }\n};\nexports.default = {\n    decode,\n    encode,\n    STYLES\n};\n//# sourceMappingURL=bytewords.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cborDecode = exports.cborEncode = void 0;\nconst cbor = require('cbor-sync');\nconst cborEncode = (data) => {\n    return cbor.encode(data);\n};\nexports.cborEncode = cborEncode;\nconst cborDecode = (data) => {\n    return cbor.decode(Buffer.isBuffer(data) ? data : Buffer.from(data, 'hex'));\n};\nexports.cborDecode = cborDecode;\n//# sourceMappingURL=cbor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidChecksumError = exports.InvalidSequenceComponentError = exports.InvalidTypeError = exports.InvalidPathLengthError = exports.InvalidSchemeError = void 0;\nclass InvalidSchemeError extends Error {\n    constructor() {\n        super('Invalid Scheme');\n        this.name = 'InvalidSchemeError';\n    }\n}\nexports.InvalidSchemeError = InvalidSchemeError;\nclass InvalidPathLengthError extends Error {\n    constructor() {\n        super('Invalid Path');\n        this.name = 'InvalidPathLengthError';\n    }\n}\nexports.InvalidPathLengthError = InvalidPathLengthError;\nclass InvalidTypeError extends Error {\n    constructor() {\n        super('Invalid Type');\n        this.name = 'InvalidTypeError';\n    }\n}\nexports.InvalidTypeError = InvalidTypeError;\nclass InvalidSequenceComponentError extends Error {\n    constructor() {\n        super('Invalid Sequence Component');\n        this.name = 'InvalidSequenceComponentError';\n    }\n}\nexports.InvalidSequenceComponentError = InvalidSequenceComponentError;\nclass InvalidChecksumError extends Error {\n    constructor() {\n        super('Invalid Checksum');\n        this.name = 'InvalidChecksumError';\n    }\n}\nexports.InvalidChecksumError = InvalidChecksumError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FountainDecoderPart = void 0;\nconst utils_1 = require(\"./utils\");\nconst fountainUtils_1 = require(\"./fountainUtils\");\nconst errors_1 = require(\"./errors\");\nclass FountainDecoderPart {\n    constructor(_indexes, _fragment) {\n        this._indexes = _indexes;\n        this._fragment = _fragment;\n    }\n    get indexes() { return this._indexes; }\n    get fragment() { return this._fragment; }\n    static fromEncoderPart(encoderPart) {\n        const indexes = fountainUtils_1.chooseFragments(encoderPart.seqNum, encoderPart.seqLength, encoderPart.checksum);\n        const fragment = encoderPart.fragment;\n        return new FountainDecoderPart(indexes, fragment);\n    }\n    isSimple() {\n        return this.indexes.length === 1;\n    }\n}\nexports.FountainDecoderPart = FountainDecoderPart;\nclass FountainDecoder {\n    constructor() {\n        this.result = undefined;\n        this.expectedMessageLength = 0;\n        this.expectedChecksum = 0;\n        this.expectedFragmentLength = 0;\n        this.processedPartsCount = 0;\n        this.expectedPartIndexes = [];\n        this.lastPartIndexes = [];\n        this.queuedParts = [];\n        this.receivedPartIndexes = [];\n        this.mixedParts = [];\n        this.simpleParts = [];\n    }\n    validatePart(part) {\n        // If this is the first part we've seen\n        if (this.expectedPartIndexes.length === 0) {\n            // Record the things that all the other parts we see will have to match to be valid.\n            [...new Array(part.seqLength)]\n                .forEach((_, index) => this.expectedPartIndexes.push(index));\n            this.expectedMessageLength = part.messageLength;\n            this.expectedChecksum = part.checksum;\n            this.expectedFragmentLength = part.fragment.length;\n        }\n        else {\n            // If this part's values don't match the first part's values, throw away the part\n            if (this.expectedPartIndexes.length !== part.seqLength) {\n                return false;\n            }\n            if (this.expectedMessageLength !== part.messageLength) {\n                return false;\n            }\n            if (this.expectedChecksum !== part.checksum) {\n                return false;\n            }\n            if (this.expectedFragmentLength !== part.fragment.length) {\n                return false;\n            }\n        }\n        // This part should be processed\n        return true;\n    }\n    reducePartByPart(a, b) {\n        // If the fragments mixed into `b` are a strict (proper) subset of those in `a`...\n        if (utils_1.arrayContains(a.indexes, b.indexes)) {\n            const newIndexes = utils_1.setDifference(a.indexes, b.indexes);\n            const newFragment = utils_1.bufferXOR(a.fragment, b.fragment);\n            return new FountainDecoderPart(newIndexes, newFragment);\n        }\n        else {\n            // `a` is not reducable by `b`, so return a\n            return a;\n        }\n    }\n    reduceMixedBy(part) {\n        const newMixed = [];\n        this.mixedParts\n            .map(({ value: mixedPart }) => this.reducePartByPart(mixedPart, part))\n            .forEach(reducedPart => {\n            if (reducedPart.isSimple()) {\n                this.queuedParts.push(reducedPart);\n            }\n            else {\n                newMixed.push({ key: reducedPart.indexes, value: reducedPart });\n            }\n        });\n        this.mixedParts = newMixed;\n    }\n    processSimplePart(part) {\n        // Don't process duplicate parts\n        const fragmentIndex = part.indexes[0];\n        if (this.receivedPartIndexes.includes(fragmentIndex)) {\n            return;\n        }\n        this.simpleParts.push({ key: part.indexes, value: part });\n        this.receivedPartIndexes.push(fragmentIndex);\n        // If we've received all the parts\n        if (utils_1.arraysEqual(this.receivedPartIndexes, this.expectedPartIndexes)) {\n            // Reassemble the message from its fragments\n            const sortedParts = this.simpleParts\n                .map(({ value }) => value)\n                .sort((a, b) => (a.indexes[0] - b.indexes[0]));\n            const message = FountainDecoder.joinFragments(sortedParts.map(part => part.fragment), this.expectedMessageLength);\n            const checksum = utils_1.getCRC(message);\n            if (checksum === this.expectedChecksum) {\n                this.result = message;\n            }\n            else {\n                this.error = new errors_1.InvalidChecksumError();\n            }\n        }\n        else {\n            this.reduceMixedBy(part);\n        }\n    }\n    processMixedPart(part) {\n        // Don't process duplicate parts\n        if (this.mixedParts.some(({ key: indexes }) => utils_1.arraysEqual(indexes, part.indexes))) {\n            return;\n        }\n        // Reduce this part by all the others\n        let p2 = this.simpleParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), part);\n        p2 = this.mixedParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), p2);\n        // If the part is now simple\n        if (p2.isSimple()) {\n            // Add it to the queue\n            this.queuedParts.push(p2);\n        }\n        else {\n            this.reduceMixedBy(p2);\n            this.mixedParts.push({ key: p2.indexes, value: p2 });\n        }\n    }\n    processQueuedItem() {\n        if (this.queuedParts.length === 0) {\n            return;\n        }\n        const part = this.queuedParts.shift();\n        if (part.isSimple()) {\n            this.processSimplePart(part);\n        }\n        else {\n            this.processMixedPart(part);\n        }\n    }\n    receivePart(encoderPart) {\n        if (this.isComplete()) {\n            return false;\n        }\n        if (!this.validatePart(encoderPart)) {\n            return false;\n        }\n        const decoderPart = FountainDecoderPart.fromEncoderPart(encoderPart);\n        this.lastPartIndexes = decoderPart.indexes;\n        this.queuedParts.push(decoderPart);\n        while (!this.isComplete() && this.queuedParts.length > 0) {\n            this.processQueuedItem();\n        }\n        ;\n        this.processedPartsCount += 1;\n        return true;\n    }\n    isComplete() {\n        return Boolean(this.result !== undefined && this.result.length > 0);\n    }\n    isSuccess() {\n        return Boolean(this.error === undefined && this.isComplete());\n    }\n    resultMessage() {\n        return this.isSuccess() ? this.result : Buffer.from([]);\n    }\n    isFailure() {\n        return this.error !== undefined;\n    }\n    resultError() {\n        return this.error ? this.error.message : '';\n    }\n    expectedPartCount() {\n        return this.expectedPartIndexes.length;\n    }\n    getExpectedPartIndexes() {\n        return [...this.expectedPartIndexes];\n    }\n    getReceivedPartIndexes() {\n        return [...this.receivedPartIndexes];\n    }\n    getLastPartIndexes() {\n        return [...this.lastPartIndexes];\n    }\n    estimatedPercentComplete() {\n        if (this.isComplete()) {\n            return 1;\n        }\n        const expectedPartCount = this.expectedPartCount();\n        if (expectedPartCount === 0) {\n            return 0;\n        }\n        // We multiply the expectedPartCount by `1.75` as a way to compensate for the facet\n        // that `this.processedPartsCount` also tracks the duplicate parts that have been\n        // processeed.\n        return Math.min(0.99, this.processedPartsCount / (expectedPartCount * 1.75));\n    }\n    getProgress() {\n        if (this.isComplete()) {\n            return 1;\n        }\n        const expectedPartCount = this.expectedPartCount();\n        if (expectedPartCount === 0) {\n            return 0;\n        }\n        return this.receivedPartIndexes.length / expectedPartCount;\n    }\n}\nexports.default = FountainDecoder;\nFountainDecoder.joinFragments = (fragments, messageLength) => {\n    return Buffer.concat(fragments).slice(0, messageLength);\n};\n//# sourceMappingURL=fountainDecoder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FountainEncoderPart = void 0;\nconst assert_1 = __importDefault(require(\"assert\"));\nconst utils_1 = require(\"./utils\");\nconst fountainUtils_1 = require(\"./fountainUtils\");\nconst cbor_1 = require(\"./cbor\");\nclass FountainEncoderPart {\n    constructor(_seqNum, _seqLength, _messageLength, _checksum, _fragment) {\n        this._seqNum = _seqNum;\n        this._seqLength = _seqLength;\n        this._messageLength = _messageLength;\n        this._checksum = _checksum;\n        this._fragment = _fragment;\n    }\n    get messageLength() { return this._messageLength; }\n    get fragment() { return this._fragment; }\n    get seqNum() { return this._seqNum; }\n    get seqLength() { return this._seqLength; }\n    get checksum() { return this._checksum; }\n    cbor() {\n        const result = cbor_1.cborEncode([\n            this._seqNum,\n            this._seqLength,\n            this._messageLength,\n            this._checksum,\n            this._fragment\n        ]);\n        return Buffer.from(result);\n    }\n    description() {\n        return `seqNum:${this._seqNum}, seqLen:${this._seqLength}, messageLen:${this._messageLength}, checksum:${this._checksum}, data:${this._fragment.toString('hex')}`;\n    }\n    static fromCBOR(cborPayload) {\n        const [seqNum, seqLength, messageLength, checksum, fragment,] = cbor_1.cborDecode(cborPayload);\n        assert_1.default(typeof seqNum === 'number');\n        assert_1.default(typeof seqLength === 'number');\n        assert_1.default(typeof messageLength === 'number');\n        assert_1.default(typeof checksum === 'number');\n        assert_1.default(Buffer.isBuffer(fragment) && fragment.length > 0);\n        return new FountainEncoderPart(seqNum, seqLength, messageLength, checksum, Buffer.from(fragment));\n    }\n}\nexports.FountainEncoderPart = FountainEncoderPart;\nclass FountainEncoder {\n    constructor(message, maxFragmentLength = 100, firstSeqNum = 0, minFragmentLength = 10) {\n        const fragmentLength = FountainEncoder.findNominalFragmentLength(message.length, minFragmentLength, maxFragmentLength);\n        this._messageLength = message.length;\n        this._fragments = FountainEncoder.partitionMessage(message, fragmentLength);\n        this.fragmentLength = fragmentLength;\n        this.seqNum = utils_1.toUint32(firstSeqNum);\n        this.checksum = utils_1.getCRC(message);\n    }\n    get fragmentsLength() { return this._fragments.length; }\n    get fragments() { return this._fragments; }\n    get messageLength() { return this._messageLength; }\n    isComplete() {\n        return this.seqNum >= this._fragments.length;\n    }\n    isSinglePart() {\n        return this._fragments.length === 1;\n    }\n    seqLength() {\n        return this._fragments.length;\n    }\n    mix(indexes) {\n        return indexes.reduce((result, index) => utils_1.bufferXOR(this._fragments[index], result), Buffer.alloc(this.fragmentLength, 0));\n    }\n    nextPart() {\n        this.seqNum = utils_1.toUint32(this.seqNum + 1);\n        const indexes = fountainUtils_1.chooseFragments(this.seqNum, this._fragments.length, this.checksum);\n        const mixed = this.mix(indexes);\n        return new FountainEncoderPart(this.seqNum, this._fragments.length, this._messageLength, this.checksum, mixed);\n    }\n    static findNominalFragmentLength(messageLength, minFragmentLength, maxFragmentLength) {\n        assert_1.default(messageLength > 0);\n        assert_1.default(minFragmentLength > 0);\n        assert_1.default(maxFragmentLength >= minFragmentLength);\n        const maxFragmentCount = Math.ceil(messageLength / minFragmentLength);\n        let fragmentLength = 0;\n        for (let fragmentCount = 1; fragmentCount <= maxFragmentCount; fragmentCount++) {\n            fragmentLength = Math.ceil(messageLength / fragmentCount);\n            if (fragmentLength <= maxFragmentLength) {\n                break;\n            }\n        }\n        return fragmentLength;\n    }\n    static partitionMessage(message, fragmentLength) {\n        let remaining = Buffer.from(message);\n        let fragment;\n        let _fragments = [];\n        while (remaining.length > 0) {\n            [fragment, remaining] = utils_1.split(remaining, -fragmentLength);\n            fragment = Buffer\n                .alloc(fragmentLength, 0) // initialize with 0's to achieve the padding\n                .fill(fragment, 0, fragment.length);\n            _fragments.push(fragment);\n        }\n        return _fragments;\n    }\n}\nexports.default = FountainEncoder;\n//# sourceMappingURL=fountainEncoder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chooseFragments = exports.shuffle = exports.chooseDegree = void 0;\nconst utils_1 = require(\"./utils\");\nconst xoshiro_1 = __importDefault(require(\"./xoshiro\"));\nconst alias_sampling_1 = __importDefault(require(\"@keystonehq/alias-sampling\"));\nconst chooseDegree = (seqLenth, rng) => {\n    const degreeProbabilities = [...new Array(seqLenth)].map((_, index) => 1 / (index + 1));\n    const degreeChooser = alias_sampling_1.default(degreeProbabilities, undefined, rng.nextDouble);\n    return degreeChooser.next() + 1;\n};\nexports.chooseDegree = chooseDegree;\nconst shuffle = (items, rng) => {\n    let remaining = [...items];\n    let result = [];\n    while (remaining.length > 0) {\n        let index = rng.nextInt(0, remaining.length - 1);\n        let item = remaining[index];\n        // remaining.erase(remaining.begin() + index);\n        remaining.splice(index, 1);\n        result.push(item);\n    }\n    return result;\n};\nexports.shuffle = shuffle;\nconst chooseFragments = (seqNum, seqLength, checksum) => {\n    // The first `seqLenth` parts are the \"pure\" fragments, not mixed with any\n    // others. This means that if you only generate the first `seqLenth` parts,\n    // then you have all the parts you need to decode the message.\n    if (seqNum <= seqLength) {\n        return [seqNum - 1];\n    }\n    else {\n        const seed = Buffer.concat([utils_1.intToBytes(seqNum), utils_1.intToBytes(checksum)]);\n        const rng = new xoshiro_1.default(seed);\n        const degree = exports.chooseDegree(seqLength, rng);\n        const indexes = [...new Array(seqLength)].map((_, index) => index);\n        const shuffledIndexes = exports.shuffle(indexes, rng);\n        return shuffledIndexes.slice(0, degree);\n    }\n};\nexports.chooseFragments = chooseFragments;\n//# sourceMappingURL=fountainUtils.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.URDecoder = exports.UREncoder = exports.UR = void 0;\nconst ur_1 = __importDefault(require(\"./ur\"));\nexports.UR = ur_1.default;\nconst urEncoder_1 = __importDefault(require(\"./urEncoder\"));\nexports.UREncoder = urEncoder_1.default;\nconst urDecoder_1 = __importDefault(require(\"./urDecoder\"));\nexports.URDecoder = urDecoder_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"./utils\");\nconst cbor_1 = require(\"./cbor\");\nclass UR {\n    constructor(_cborPayload, _type = 'bytes') {\n        this._cborPayload = _cborPayload;\n        this._type = _type;\n        if (!utils_1.isURType(this._type)) {\n            throw new errors_1.InvalidTypeError();\n        }\n    }\n    static fromBuffer(buf) {\n        return new UR(cbor_1.cborEncode(buf));\n    }\n    static from(value, encoding) {\n        return UR.fromBuffer(Buffer.from(value, encoding));\n    }\n    decodeCBOR() {\n        return cbor_1.cborDecode(this._cborPayload);\n    }\n    get type() { return this._type; }\n    get cbor() { return this._cborPayload; }\n    equals(ur2) {\n        return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n    }\n}\nexports.default = UR;\n//# sourceMappingURL=ur.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fountainDecoder_1 = __importDefault(require(\"./fountainDecoder\"));\nconst bytewords_1 = __importDefault(require(\"./bytewords\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst utils_1 = require(\"./utils\");\nconst errors_1 = require(\"./errors\");\nconst ur_1 = __importDefault(require(\"./ur\"));\nconst fountainEncoder_1 = require(\"./fountainEncoder\");\nclass URDecoder {\n    constructor(fountainDecoder = new fountainDecoder_1.default(), type = 'bytes') {\n        this.fountainDecoder = fountainDecoder;\n        this.type = type;\n        assert_1.default(utils_1.isURType(type), 'Invalid UR type');\n        this.expected_type = '';\n    }\n    static decodeBody(type, message) {\n        const cbor = bytewords_1.default.decode(message, bytewords_1.default.STYLES.MINIMAL);\n        return new ur_1.default(Buffer.from(cbor, 'hex'), type);\n    }\n    validatePart(type) {\n        if (this.expected_type) {\n            return this.expected_type === type;\n        }\n        if (!utils_1.isURType(type)) {\n            return false;\n        }\n        this.expected_type = type;\n        return true;\n    }\n    static decode(message) {\n        const [type, components] = this.parse(message);\n        if (components.length === 0) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        const body = components[0];\n        return URDecoder.decodeBody(type, body);\n    }\n    static parse(message) {\n        const lowercase = message.toLowerCase();\n        const prefix = lowercase.slice(0, 3);\n        if (prefix !== 'ur:') {\n            throw new errors_1.InvalidSchemeError();\n        }\n        const components = lowercase.slice(3).split('/');\n        const type = components[0];\n        if (components.length < 2) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        if (!utils_1.isURType(type)) {\n            throw new errors_1.InvalidTypeError();\n        }\n        return [type, components.slice(1)];\n    }\n    static parseSequenceComponent(s) {\n        const components = s.split('-');\n        if (components.length !== 2) {\n            throw new errors_1.InvalidSequenceComponentError();\n        }\n        const seqNum = utils_1.toUint32(Number(components[0]));\n        const seqLength = Number(components[1]);\n        if (seqNum < 1 || seqLength < 1) {\n            throw new errors_1.InvalidSequenceComponentError();\n        }\n        return [seqNum, seqLength];\n    }\n    receivePart(s) {\n        if (this.result !== undefined) {\n            return false;\n        }\n        const [type, components] = URDecoder.parse(s);\n        if (!this.validatePart(type)) {\n            return false;\n        }\n        // If this is a single-part UR then we're done\n        if (components.length === 1) {\n            this.result = URDecoder.decodeBody(type, components[0]);\n            return true;\n        }\n        if (components.length !== 2) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        const [seq, fragment] = components;\n        const [seqNum, seqLength] = URDecoder.parseSequenceComponent(seq);\n        const cbor = bytewords_1.default.decode(fragment, bytewords_1.default.STYLES.MINIMAL);\n        const part = fountainEncoder_1.FountainEncoderPart.fromCBOR(cbor);\n        if (seqNum !== part.seqNum || seqLength !== part.seqLength) {\n            return false;\n        }\n        if (!this.fountainDecoder.receivePart(part)) {\n            return false;\n        }\n        if (this.fountainDecoder.isSuccess()) {\n            this.result = new ur_1.default(this.fountainDecoder.resultMessage(), type);\n        }\n        else if (this.fountainDecoder.isFailure()) {\n            this.error = new errors_1.InvalidSchemeError();\n        }\n        return true;\n    }\n    resultUR() {\n        return this.result ? this.result : new ur_1.default(Buffer.from([]));\n    }\n    isComplete() {\n        return this.result && this.result.cbor.length > 0;\n    }\n    isSuccess() {\n        return !this.error && this.isComplete();\n    }\n    isError() {\n        return this.error !== undefined;\n    }\n    resultError() {\n        return this.error ? this.error.message : '';\n    }\n    expectedPartCount() {\n        return this.fountainDecoder.expectedPartCount();\n    }\n    expectedPartIndexes() {\n        return this.fountainDecoder.getExpectedPartIndexes();\n    }\n    receivedPartIndexes() {\n        return this.fountainDecoder.getReceivedPartIndexes();\n    }\n    lastPartIndexes() {\n        return this.fountainDecoder.getLastPartIndexes();\n    }\n    estimatedPercentComplete() {\n        return this.fountainDecoder.estimatedPercentComplete();\n    }\n    getProgress() {\n        return this.fountainDecoder.getProgress();\n    }\n}\nexports.default = URDecoder;\n//# sourceMappingURL=urDecoder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fountainEncoder_1 = __importDefault(require(\"./fountainEncoder\"));\nconst bytewords_1 = __importDefault(require(\"./bytewords\"));\nclass UREncoder {\n    constructor(_ur, maxFragmentLength, firstSeqNum, minFragmentLength) {\n        this.ur = _ur;\n        this.fountainEncoder = new fountainEncoder_1.default(_ur.cbor, maxFragmentLength, firstSeqNum, minFragmentLength);\n    }\n    get fragmentsLength() { return this.fountainEncoder.fragmentsLength; }\n    get fragments() { return this.fountainEncoder.fragments; }\n    get messageLength() { return this.fountainEncoder.messageLength; }\n    get cbor() { return this.ur.cbor; }\n    encodeWhole() {\n        return [...new Array(this.fragmentsLength)].map(() => this.nextPart());\n    }\n    nextPart() {\n        const part = this.fountainEncoder.nextPart();\n        if (this.fountainEncoder.isSinglePart()) {\n            return UREncoder.encodeSinglePart(this.ur);\n        }\n        else {\n            return UREncoder.encodePart(this.ur.type, part);\n        }\n    }\n    static encodeUri(scheme, pathComponents) {\n        const path = pathComponents.join('/');\n        return [scheme, path].join(':');\n    }\n    static encodeUR(pathComponents) {\n        return UREncoder.encodeUri('ur', pathComponents);\n    }\n    static encodePart(type, part) {\n        const seq = `${part.seqNum}-${part.seqLength}`;\n        const body = bytewords_1.default.encode(part.cbor().toString('hex'), bytewords_1.default.STYLES.MINIMAL);\n        return UREncoder.encodeUR([type, seq, body]);\n    }\n    static encodeSinglePart(ur) {\n        const body = bytewords_1.default.encode(ur.cbor.toString('hex'), bytewords_1.default.STYLES.MINIMAL);\n        return UREncoder.encodeUR([ur.type, body]);\n    }\n}\nexports.default = UREncoder;\n//# sourceMappingURL=urEncoder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferXOR = exports.setDifference = exports.arrayContains = exports.arraysEqual = exports.hasPrefix = exports.isURType = exports.intToBytes = exports.toUint32 = exports.getCRCHex = exports.getCRC = exports.split = exports.partition = exports.sha256Hash = void 0;\nconst sha_js_1 = __importDefault(require(\"sha.js\"));\nconst crc_1 = require(\"crc\");\nconst sha256Hash = (data) => sha_js_1.default('sha256').update(data).digest();\nexports.sha256Hash = sha256Hash;\nconst partition = (s, n) => s.match(new RegExp('.{1,' + n + '}', 'g')) || [s];\nexports.partition = partition;\nconst split = (s, length) => [s.slice(0, -length), s.slice(-length)];\nexports.split = split;\nconst getCRC = (message) => crc_1.crc32(message);\nexports.getCRC = getCRC;\nconst getCRCHex = (message) => crc_1.crc32(message).toString(16).padStart(8, '0');\nexports.getCRCHex = getCRCHex;\nconst toUint32 = (number) => number >>> 0;\nexports.toUint32 = toUint32;\nconst intToBytes = (num) => {\n    const arr = new ArrayBuffer(4); // an Int32 takes 4 bytes\n    const view = new DataView(arr);\n    view.setUint32(0, num, false); // byteOffset = 0; litteEndian = false\n    return Buffer.from(arr);\n};\nexports.intToBytes = intToBytes;\nconst isURType = (type) => {\n    return type.split('').every((_, index) => {\n        let c = type.charCodeAt(index);\n        if ('a'.charCodeAt(0) <= c && c <= 'z'.charCodeAt(0))\n            return true;\n        if ('0'.charCodeAt(0) <= c && c <= '9'.charCodeAt(0))\n            return true;\n        if (c === '-'.charCodeAt(0))\n            return true;\n        return false;\n    });\n};\nexports.isURType = isURType;\nconst hasPrefix = (s, prefix) => s.indexOf(prefix) === 0;\nexports.hasPrefix = hasPrefix;\nconst arraysEqual = (ar1, ar2) => {\n    if (ar1.length !== ar2.length) {\n        return false;\n    }\n    return ar1.every(el => ar2.includes(el));\n};\nexports.arraysEqual = arraysEqual;\n/**\n * Checks if ar1 contains all elements of ar2\n * @param ar1 the outer array\n * @param ar2 the array to be contained in ar1\n */\nconst arrayContains = (ar1, ar2) => {\n    return ar2.every(v => ar1.includes(v));\n};\nexports.arrayContains = arrayContains;\n/**\n * Returns the difference array of  `ar1` - `ar2`\n */\nconst setDifference = (ar1, ar2) => {\n    return ar1.filter(x => ar2.indexOf(x) < 0);\n};\nexports.setDifference = setDifference;\nconst bufferXOR = (a, b) => {\n    const length = Math.max(a.length, b.length);\n    const buffer = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; ++i) {\n        buffer[i] = a[i] ^ b[i];\n    }\n    return buffer;\n};\nexports.bufferXOR = bufferXOR;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst jsbi_1 = __importDefault(require(\"jsbi\"));\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nconst rotl = (x, k) => jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, (jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k)))))));\nclass Xoshiro {\n    constructor(seed) {\n        this.next = () => {\n            return new bignumber_js_1.default(this.roll().toString());\n        };\n        this.nextDouble = () => {\n            return new bignumber_js_1.default(this.roll().toString()).div(MAX_UINT64 + 1);\n        };\n        this.nextInt = (low, high) => {\n            return Math.floor((this.nextDouble().toNumber() * (high - low + 1)) + low);\n        };\n        this.nextByte = () => this.nextInt(0, 255);\n        this.nextData = (count) => ([...new Array(count)].map(() => this.nextByte()));\n        const digest = utils_1.sha256Hash(seed);\n        this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n        this.setS(digest);\n    }\n    setS(digest) {\n        for (let i = 0; i < 4; i++) {\n            let o = i * 8;\n            let v = jsbi_1.default.BigInt(0);\n            for (let n = 0; n < 8; n++) {\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n            }\n            this.s[i] = jsbi_1.default.asUintN(64, v);\n        }\n    }\n    roll() {\n        const result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n        const t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n        this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n        this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n        this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n        this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n        return result;\n    }\n}\nexports.default = Xoshiro;\n//# sourceMappingURL=xoshiro.js.map",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) -- > 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = exports.isBytes = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexports.bool = bool;\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('hash must be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.polyval = exports.ghash = exports._toGHASHKey = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = (0, utils_js_1.u32)(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0, s1, s2, s3) => {\n    const hiBit = s3 & 1;\n    return {\n        s3: (s2 << 31) | (s3 >>> 1),\n        s2: (s1 << 31) | (s2 >>> 1),\n        s1: (s0 << 31) | (s1 >>> 1),\n        s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n    };\n};\nconst swapLE = (n) => (((n >>> 0) & 0xff) << 24) |\n    (((n >>> 8) & 0xff) << 16) |\n    (((n >>> 16) & 0xff) << 8) |\n    ((n >>> 24) & 0xff) |\n    0;\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nfunction _toGHASHKey(k) {\n    k.reverse();\n    const hiBit = k[15] & 1;\n    // k >>= 1\n    let carry = 0;\n    for (let i = 0; i < k.length; i++) {\n        const t = k[i];\n        k[i] = (t >>> 1) | carry;\n        carry = (t & 1) << 7;\n    }\n    k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n    return k;\n}\nexports._toGHASHKey = _toGHASHKey;\nconst estimateWindow = (bytes) => {\n    if (bytes > 64 * 1024)\n        return 8;\n    if (bytes > 1024)\n        return 4;\n    return 2;\n};\nclass GHASH {\n    // We select bits per window adaptively based on expectedLength\n    constructor(key, expectedLength) {\n        this.blockLen = BLOCK_SIZE;\n        this.outputLen = BLOCK_SIZE;\n        this.s0 = 0;\n        this.s1 = 0;\n        this.s2 = 0;\n        this.s3 = 0;\n        this.finished = false;\n        key = (0, utils_js_1.toBytes)(key);\n        (0, _assert_js_1.bytes)(key, 16);\n        const kView = (0, utils_js_1.createView)(key);\n        let k0 = kView.getUint32(0, false);\n        let k1 = kView.getUint32(4, false);\n        let k2 = kView.getUint32(8, false);\n        let k3 = kView.getUint32(12, false);\n        // generate table of doubled keys (half of montgomery ladder)\n        const doubles = [];\n        for (let i = 0; i < 128; i++) {\n            doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n            ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n        }\n        const W = estimateWindow(expectedLength || 1024);\n        if (![1, 2, 4, 8].includes(W))\n            throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n        this.W = W;\n        const bits = 128; // always 128 bits;\n        const windows = bits / W;\n        const windowSize = (this.windowSize = 2 ** W);\n        const items = [];\n        // Create precompute table for window of W bits\n        for (let w = 0; w < windows; w++) {\n            // truth table: 00, 01, 10, 11\n            for (let byte = 0; byte < windowSize; byte++) {\n                // prettier-ignore\n                let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n                for (let j = 0; j < W; j++) {\n                    const bit = (byte >>> (W - j - 1)) & 1;\n                    if (!bit)\n                        continue;\n                    const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n                    (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n                }\n                items.push({ s0, s1, s2, s3 });\n            }\n        }\n        this.t = items;\n    }\n    _updateBlock(s0, s1, s2, s3) {\n        (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n        const { W, t, windowSize } = this;\n        // prettier-ignore\n        let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n        const mask = (1 << W) - 1; // 2**W will kill performance.\n        let w = 0;\n        for (const num of [s0, s1, s2, s3]) {\n            for (let bytePos = 0; bytePos < 4; bytePos++) {\n                const byte = (num >>> (8 * bytePos)) & 0xff;\n                for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n                    const bit = (byte >>> (W * bitPos)) & mask;\n                    const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n                    (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n                    w += 1;\n                }\n            }\n        }\n        this.s0 = o0;\n        this.s1 = o1;\n        this.s2 = o2;\n        this.s3 = o3;\n    }\n    update(data) {\n        data = (0, utils_js_1.toBytes)(data);\n        (0, _assert_js_1.exists)(this);\n        const b32 = (0, utils_js_1.u32)(data);\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        const left = data.length % BLOCK_SIZE;\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    destroy() {\n        const { t } = this;\n        // clean precompute table\n        for (const elm of t) {\n            (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n        }\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        const { s0, s1, s2, s3 } = this;\n        const o32 = (0, utils_js_1.u32)(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out;\n    }\n    digest() {\n        const res = new Uint8Array(BLOCK_SIZE);\n        this.digestInto(res);\n        this.destroy();\n        return res;\n    }\n}\nclass Polyval extends GHASH {\n    constructor(key, expectedLength) {\n        key = (0, utils_js_1.toBytes)(key);\n        const ghKey = _toGHASHKey(key.slice());\n        super(ghKey, expectedLength);\n        ghKey.fill(0);\n    }\n    update(data) {\n        data = (0, utils_js_1.toBytes)(data);\n        (0, _assert_js_1.exists)(this);\n        const b32 = (0, utils_js_1.u32)(data);\n        const left = data.length % BLOCK_SIZE;\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(swapLE(b32[i * 4 + 3]), swapLE(b32[i * 4 + 2]), swapLE(b32[i * 4 + 1]), swapLE(b32[i * 4 + 0]));\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(swapLE(ZEROS32[3]), swapLE(ZEROS32[2]), swapLE(ZEROS32[1]), swapLE(ZEROS32[0]));\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // tmp ugly hack\n        const { s0, s1, s2, s3 } = this;\n        const o32 = (0, utils_js_1.u32)(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out.reverse();\n    }\n}\nfunction wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key, msg.length).update((0, utils_js_1.toBytes)(msg)).digest();\n    const tmp = hashCons(new Uint8Array(16), 0);\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key, expectedLength) => hashCons(key, expectedLength);\n    return hashC;\n}\nexports.ghash = wrapConstructorWithKey((key, expectedLength) => new GHASH(key, expectedLength));\nexports.polyval = wrapConstructorWithKey((key, expectedLength) => new Polyval(key, expectedLength));\n//# sourceMappingURL=_polyval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unsafe = exports.siv = exports.gcm = exports.cfb = exports.cbc = exports.ecb = exports.ctr = exports.expandKeyDecLE = exports.expandKeyLE = void 0;\n// prettier-ignore\nconst utils_js_1 = require(\"./utils.js\");\nconst _polyval_js_1 = require(\"./_polyval.js\");\nconst _assert_js_1 = require(\"./_assert.js\");\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n// TODO: remove multiplication, binary ops only\nfunction mul2(n) {\n    return (n << 1) ^ (POLY & -(n >> 7));\n}\nfunction mul(a, b) {\n    let res = 0;\n    for (; b > 0; b >>= 1) {\n        // Montgomery ladder\n        res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n        a = mul2(a); // a = 2*a\n    }\n    return res;\n}\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n    let t = new Uint8Array(256);\n    for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x))\n        t[i] = x;\n    const box = new Uint8Array(256);\n    box[0] = 0x63; // first elm\n    for (let i = 0; i < 255; i++) {\n        let x = t[255 - i];\n        x |= x << 8;\n        box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n    }\n    return box;\n})();\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n// Rotate u32 by 8\nconst rotr32_8 = (n) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n) => (n << 8) | (n >>> 24);\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox, fn) {\n    if (sbox.length !== 256)\n        throw new Error('Wrong sbox length');\n    const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n    const T1 = T0.map(rotl32_8);\n    const T2 = T1.map(rotl32_8);\n    const T3 = T2.map(rotl32_8);\n    const T01 = new Uint32Array(256 * 256);\n    const T23 = new Uint32Array(256 * 256);\n    const sbox2 = new Uint16Array(256 * 256);\n    for (let i = 0; i < 256; i++) {\n        for (let j = 0; j < 256; j++) {\n            const idx = i * 256 + j;\n            T01[idx] = T0[i] ^ T1[j];\n            T23[idx] = T2[i] ^ T3[j];\n            sbox2[idx] = (sbox[i] << 8) | sbox[j];\n        }\n    }\n    return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\nconst tableEncoding = /* @__PURE__ */ genTtable(sbox, (s) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2));\nconst tableDecoding = /* @__PURE__ */ genTtable(invSbox, (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14));\nconst xPowers = /* @__PURE__ */ (() => {\n    const p = new Uint8Array(16);\n    for (let i = 0, x = 1; i < 16; i++, x = mul2(x))\n        p[i] = x;\n    return p;\n})();\nfunction expandKeyLE(key) {\n    (0, _assert_js_1.bytes)(key);\n    const len = key.length;\n    if (![16, 24, 32].includes(len))\n        throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n    const { sbox2 } = tableEncoding;\n    const k32 = (0, utils_js_1.u32)(key);\n    const Nk = k32.length;\n    const subByte = (n) => applySbox(sbox2, n, n, n, n);\n    const xk = new Uint32Array(len + 28); // expanded key\n    xk.set(k32);\n    // 4.3.1 Key expansion\n    for (let i = Nk; i < xk.length; i++) {\n        let t = xk[i - 1];\n        if (i % Nk === 0)\n            t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n        else if (Nk > 6 && i % Nk === 4)\n            t = subByte(t);\n        xk[i] = xk[i - Nk] ^ t;\n    }\n    return xk;\n}\nexports.expandKeyLE = expandKeyLE;\nfunction expandKeyDecLE(key) {\n    const encKey = expandKeyLE(key);\n    const xk = encKey.slice();\n    const Nk = encKey.length;\n    const { sbox2 } = tableEncoding;\n    const { T0, T1, T2, T3 } = tableDecoding;\n    // Inverse key by chunks of 4 (rounds)\n    for (let i = 0; i < Nk; i += 4) {\n        for (let j = 0; j < 4; j++)\n            xk[i + j] = encKey[Nk - i - 4 + j];\n    }\n    encKey.fill(0);\n    // apply InvMixColumn except first & last round\n    for (let i = 4; i < Nk - 4; i++) {\n        const x = xk[i];\n        const w = applySbox(sbox2, x, x, x, x);\n        xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n    }\n    return xk;\n}\nexports.expandKeyDecLE = expandKeyDecLE;\n// Apply tables\nfunction apply0123(T01, T23, s0, s1, s2, s3) {\n    return (T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n        T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]);\n}\nfunction applySbox(sbox2, s0, s1, s2, s3) {\n    return (sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n        (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16));\n}\nfunction encrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableEncoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // last round (without mixcolumns, so using SBOX2 table)\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction decrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableDecoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // Last round\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction getDst(len, dst) {\n    if (!dst)\n        return new Uint8Array(len);\n    (0, _assert_js_1.bytes)(dst);\n    if (dst.length < len)\n        throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n    return dst;\n}\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk, nonce, src, dst) {\n    (0, _assert_js_1.bytes)(nonce, BLOCK_SIZE);\n    (0, _assert_js_1.bytes)(src);\n    const srcLen = src.length;\n    dst = getDst(srcLen, dst);\n    const ctr = nonce;\n    const c32 = (0, utils_js_1.u32)(ctr);\n    // Fill block (empty, ctr=0)\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    const src32 = (0, utils_js_1.u32)(src);\n    const dst32 = (0, utils_js_1.u32)(dst);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        // Full 128 bit counter with wrap around\n        let carry = 1;\n        for (let i = ctr.length - 1; i >= 0; i--) {\n            carry = (carry + (ctr[i] & 0xff)) | 0;\n            ctr[i] = carry & 0xff;\n            carry >>>= 8;\n        }\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than block)\n    // It's possible to handle > u32 fast, but is it worth it?\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = (0, utils_js_1.u8)(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(xk, isLE, nonce, src, dst) {\n    (0, _assert_js_1.bytes)(nonce, BLOCK_SIZE);\n    (0, _assert_js_1.bytes)(src);\n    dst = getDst(src.length, dst);\n    const ctr = nonce; // write new value to nonce, so it can be re-used\n    const c32 = (0, utils_js_1.u32)(ctr);\n    const view = (0, utils_js_1.createView)(ctr);\n    const src32 = (0, utils_js_1.u32)(src);\n    const dst32 = (0, utils_js_1.u32)(dst);\n    const ctrPos = isLE ? 0 : 12;\n    const srcLen = src.length;\n    // Fill block (empty, ctr=0)\n    let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n        view.setUint32(ctrPos, ctrNum, isLE);\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than a block)\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = (0, utils_js_1.u8)(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexports.ctr = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function ctr(key, nonce) {\n    (0, _assert_js_1.bytes)(key);\n    (0, _assert_js_1.bytes)(nonce, BLOCK_SIZE);\n    function processCtr(buf, dst) {\n        const xk = expandKeyLE(key);\n        const n = nonce.slice();\n        const out = ctrCounter(xk, n, buf, dst);\n        xk.fill(0);\n        n.fill(0);\n        return out;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCtr(plaintext, dst),\n        decrypt: (ciphertext, dst) => processCtr(ciphertext, dst),\n    };\n});\nfunction validateBlockDecrypt(data) {\n    (0, _assert_js_1.bytes)(data);\n    if (data.length % BLOCK_SIZE !== 0) {\n        throw new Error(`aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`);\n    }\n}\nfunction validateBlockEncrypt(plaintext, pcks5, dst) {\n    let outLen = plaintext.length;\n    const remaining = outLen % BLOCK_SIZE;\n    if (!pcks5 && remaining !== 0)\n        throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n    const b = (0, utils_js_1.u32)(plaintext);\n    if (pcks5) {\n        let left = BLOCK_SIZE - remaining;\n        if (!left)\n            left = BLOCK_SIZE; // if no bytes left, create empty padding block\n        outLen = outLen + left;\n    }\n    const out = getDst(outLen, dst);\n    const o = (0, utils_js_1.u32)(out);\n    return { b, o, out };\n}\nfunction validatePCKS(data, pcks5) {\n    if (!pcks5)\n        return data;\n    const len = data.length;\n    if (!len)\n        throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n    const lastByte = data[len - 1];\n    if (lastByte <= 0 || lastByte > 16)\n        throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n    const out = data.subarray(0, -lastByte);\n    for (let i = 0; i < lastByte; i++)\n        if (data[len - i - 1] !== lastByte)\n            throw new Error(`aes/pcks5: wrong padding`);\n    return out;\n}\nfunction padPCKS(left) {\n    const tmp = new Uint8Array(16);\n    const tmp32 = (0, utils_js_1.u32)(tmp);\n    tmp.set(left);\n    const paddingByte = BLOCK_SIZE - left.length;\n    for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++)\n        tmp[i] = paddingByte;\n    return tmp32;\n}\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexports.ecb = (0, utils_js_1.wrapCipher)({ blockSize: 16 }, function ecb(key, opts = {}) {\n    (0, _assert_js_1.bytes)(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            (0, _assert_js_1.bytes)(plaintext);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const xk = expandKeyLE(key);\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const out = getDst(ciphertext.length, dst);\n            const b = (0, utils_js_1.u32)(ciphertext);\n            const o = (0, utils_js_1.u32)(out);\n            for (let i = 0; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round’s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexports.cbc = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function cbc(key, iv, opts = {}) {\n    (0, _assert_js_1.bytes)(key);\n    (0, _assert_js_1.bytes)(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            const xk = expandKeyLE(key);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const n32 = (0, utils_js_1.u32)(iv);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const n32 = (0, utils_js_1.u32)(iv);\n            const out = getDst(ciphertext.length, dst);\n            const b = (0, utils_js_1.u32)(ciphertext);\n            const o = (0, utils_js_1.u32)(out);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            for (let i = 0; i + 4 <= b.length;) {\n                // prettier-ignore\n                const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n                (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n                const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n                (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexports.cfb = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function cfb(key, iv) {\n    (0, _assert_js_1.bytes)(key);\n    (0, _assert_js_1.bytes)(iv, 16);\n    function processCfb(src, isEncrypt, dst) {\n        const xk = expandKeyLE(key);\n        const srcLen = src.length;\n        dst = getDst(srcLen, dst);\n        const src32 = (0, utils_js_1.u32)(src);\n        const dst32 = (0, utils_js_1.u32)(dst);\n        const next32 = isEncrypt ? dst32 : src32;\n        const n32 = (0, utils_js_1.u32)(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= src32.length;) {\n            const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n            dst32[i + 0] = src32[i + 0] ^ e0;\n            dst32[i + 1] = src32[i + 1] ^ e1;\n            dst32[i + 2] = src32[i + 2] ^ e2;\n            dst32[i + 3] = src32[i + 3] ^ e3;\n            (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n        }\n        // leftovers (less than block)\n        const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n        if (start < srcLen) {\n            ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n            const buf = (0, utils_js_1.u8)(new Uint32Array([s0, s1, s2, s3]));\n            for (let i = start, pos = 0; i < srcLen; i++, pos++)\n                dst[i] = src[i] ^ buf[pos];\n            buf.fill(0);\n        }\n        xk.fill(0);\n        return dst;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCfb(plaintext, true, dst),\n        decrypt: (ciphertext, dst) => processCfb(ciphertext, false, dst),\n    };\n});\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(fn, isLE, key, data, AAD) {\n    const h = fn.create(key, data.length + (AAD?.length || 0));\n    if (AAD)\n        h.update(AAD);\n    h.update(data);\n    const num = new Uint8Array(16);\n    const view = (0, utils_js_1.createView)(num);\n    if (AAD)\n        (0, utils_js_1.setBigUint64)(view, 0, BigInt(AAD.length * 8), isLE);\n    (0, utils_js_1.setBigUint64)(view, 8, BigInt(data.length * 8), isLE);\n    h.update(num);\n    return h.digest();\n}\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexports.gcm = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function gcm(key, nonce, AAD) {\n    (0, _assert_js_1.bytes)(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0)\n        throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey, tagMask, data) {\n        const tag = computeTag(_polyval_js_1.ghash, false, authKey, data, AAD);\n        for (let i = 0; i < tagMask.length; i++)\n            tag[i] ^= tagMask[i];\n        return tag;\n    }\n    function deriveKeys() {\n        const xk = expandKeyLE(key);\n        const authKey = EMPTY_BLOCK.slice();\n        const counter = EMPTY_BLOCK.slice();\n        ctr32(xk, false, counter, counter, authKey);\n        if (nonce.length === 12) {\n            counter.set(nonce);\n        }\n        else {\n            // Spec (NIST 800-38d) supports variable size nonce.\n            // Not supported for now, but can be useful.\n            const nonceLen = EMPTY_BLOCK.slice();\n            const view = (0, utils_js_1.createView)(nonceLen);\n            (0, utils_js_1.setBigUint64)(view, 8, BigInt(nonce.length * 8), false);\n            // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n            _polyval_js_1.ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n        }\n        const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n        return { xk, authKey, counter, tagMask };\n    }\n    return {\n        encrypt: (plaintext) => {\n            (0, _assert_js_1.bytes)(plaintext);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const out = new Uint8Array(plaintext.length + tagLength);\n            ctr32(xk, false, counter, plaintext, out);\n            const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n            out.set(tag, plaintext.length);\n            xk.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            (0, _assert_js_1.bytes)(ciphertext);\n            if (ciphertext.length < tagLength)\n                throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = _computeTag(authKey, tagMask, data);\n            if (!(0, utils_js_1.equalBytes)(tag, passedTag))\n                throw new Error('aes/gcm: invalid ghash tag');\n            const out = ctr32(xk, false, counter, data);\n            authKey.fill(0);\n            tagMask.fill(0);\n            xk.fill(0);\n            return out;\n        },\n    };\n});\nconst limit = (name, min, max) => (value) => {\n    if (!Number.isSafeInteger(value) || min > value || value > max)\n        throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexports.siv = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function siv(key, nonce, AAD) {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    (0, _assert_js_1.bytes)(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n        (0, _assert_js_1.bytes)(AAD);\n        AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n        const len = key.length;\n        if (len !== 16 && len !== 24 && len !== 32)\n            throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n        const xk = expandKeyLE(key);\n        const encKey = new Uint8Array(len);\n        const authKey = new Uint8Array(16);\n        const n32 = (0, utils_js_1.u32)(nonce);\n        // prettier-ignore\n        let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n        let counter = 0;\n        for (const derivedKey of [authKey, encKey].map(utils_js_1.u32)) {\n            const d32 = (0, utils_js_1.u32)(derivedKey);\n            for (let i = 0; i < d32.length; i += 2) {\n                // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n                const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n                d32[i + 0] = o0;\n                d32[i + 1] = o1;\n                s0 = ++counter; // increment counter inside state\n            }\n        }\n        xk.fill(0);\n        return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey, authKey, data) {\n        const tag = computeTag(_polyval_js_1.polyval, true, authKey, data, AAD);\n        // Compute the expected tag by XORing S_s and the nonce, clearing the\n        // most significant bit of the last byte and encrypting with the\n        // message-encryption key.\n        for (let i = 0; i < 12; i++)\n            tag[i] ^= nonce[i];\n        tag[15] &= 0x7f; // Clear the highest bit\n        // encrypt tag as block\n        const t32 = (0, utils_js_1.u32)(tag);\n        // prettier-ignore\n        let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n        ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n        (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n        return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey, tag, input) {\n        let block = tag.slice();\n        block[15] |= 0x80; // Force highest bit\n        return ctr32(encKey, true, block, input);\n    }\n    return {\n        encrypt: (plaintext) => {\n            (0, _assert_js_1.bytes)(plaintext);\n            PLAIN_LIMIT(plaintext.length);\n            const { encKey, authKey } = deriveKeys();\n            const tag = _computeTag(encKey, authKey, plaintext);\n            const out = new Uint8Array(plaintext.length + tagLength);\n            out.set(tag, plaintext.length);\n            out.set(processSiv(encKey, tag, plaintext));\n            encKey.fill(0);\n            authKey.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            (0, _assert_js_1.bytes)(ciphertext);\n            CIPHER_LIMIT(ciphertext.length);\n            const tag = ciphertext.subarray(-tagLength);\n            const { encKey, authKey } = deriveKeys();\n            const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n            const expectedTag = _computeTag(encKey, authKey, plaintext);\n            encKey.fill(0);\n            authKey.fill(0);\n            if (!(0, utils_js_1.equalBytes)(tag, expectedTag))\n                throw new Error('invalid polyval tag');\n            return plaintext;\n        },\n    };\n});\nfunction isBytes32(a) {\n    return (a != null &&\n        typeof a === 'object' &&\n        (a instanceof Uint32Array || a.constructor.name === 'Uint32Array'));\n}\nfunction encryptBlock(xk, block) {\n    (0, _assert_js_1.bytes)(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_encryptBlock accepts result of expandKeyLE');\n    const b32 = (0, utils_js_1.u32)(block);\n    let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\nfunction decryptBlock(xk, block) {\n    (0, _assert_js_1.bytes)(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_decryptBlock accepts result of expandKeyLE');\n    const b32 = (0, utils_js_1.u32)(block);\n    let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexports.unsafe = {\n    expandKeyLE,\n    expandKeyDecLE,\n    encrypt,\n    decrypt,\n    encryptBlock,\n    decryptBlock,\n    ctrCounter,\n    ctr32,\n};\n//# sourceMappingURL=aes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWebcryptoSubtle = exports.randomBytes = void 0;\nconst cr = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\nfunction randomBytes(bytesLength = 32) {\n    if (cr && typeof cr.getRandomValues === 'function')\n        return cr.getRandomValues(new Uint8Array(bytesLength));\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\nfunction getWebcryptoSubtle() {\n    if (cr && typeof cr.subtle === 'object' && cr.subtle != null)\n        return cr.subtle;\n    throw new Error('crypto.subtle must be defined');\n}\nexports.getWebcryptoSubtle = getWebcryptoSubtle;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.u64Lengths = exports.setBigUint64 = exports.wrapCipher = exports.Hash = exports.equalBytes = exports.checkOpts = exports.concatBytes = exports.toBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.numberToBytesBE = exports.bytesToNumberBE = exports.hexToNumber = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.createView = exports.u32 = exports.u16 = exports.u8 = void 0;\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nconst _assert_js_1 = require(\"./_assert.js\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u16 = (arr) => new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexports.u16 = u16;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\nexports.hexToNumber = hexToNumber;\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexports.bytesToNumberBE = bytesToNumberBE;\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexports.numberToBytesBE = numberToBytesBE;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`string expected, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nfunction bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToUtf8 = bytesToUtf8;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    else if ((0, _assert_js_1.isBytes)(data))\n        data = data.slice();\n    else\n        throw new Error(`Uint8Array expected, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\nfunction checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\n// Compares 2 u8a-s in kinda constant time\nfunction equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\nexports.equalBytes = equalBytes;\n// For runtime check if class implements interface\nclass Hash {\n}\nexports.Hash = Hash;\n/**\n * @__NO_SIDE_EFFECTS__\n */\nconst wrapCipher = (params, c) => {\n    Object.assign(c, params);\n    return c;\n};\nexports.wrapCipher = wrapCipher;\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\nexports.setBigUint64 = setBigUint64;\nfunction u64Lengths(ciphertext, AAD) {\n    const num = new Uint8Array(16);\n    const view = (0, exports.createView)(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(ciphertext.length), true);\n    return num;\n}\nexports.u64Lengths = u64Lengths;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gcm = exports.ctr = exports.cbc = exports.utils = exports.managedNonce = exports.getWebcryptoSubtle = exports.randomBytes = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.js on#exports field mapping rewrites __import__\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\n//\n// Use full path so that Node.js can rewrite it to `cryptoNode.js`.\nconst crypto_1 = require(\"@noble/ciphers/crypto\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return crypto_1.randomBytes; } });\nObject.defineProperty(exports, \"getWebcryptoSubtle\", { enumerable: true, get: function () { return crypto_1.getWebcryptoSubtle; } });\nconst utils_js_1 = require(\"./utils.js\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// Uses CSPRG for nonce, nonce injected in ciphertext\nfunction managedNonce(fn) {\n    (0, _assert_js_1.number)(fn.nonceLength);\n    return ((key, ...args) => ({\n        encrypt: (plaintext, ...argsEnc) => {\n            const { nonceLength } = fn;\n            const nonce = (0, crypto_1.randomBytes)(nonceLength);\n            const ciphertext = fn(key, nonce, ...args).encrypt(plaintext, ...argsEnc);\n            const out = (0, utils_js_1.concatBytes)(nonce, ciphertext);\n            ciphertext.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext, ...argsDec) => {\n            const { nonceLength } = fn;\n            const nonce = ciphertext.subarray(0, nonceLength);\n            const data = ciphertext.subarray(nonceLength);\n            return fn(key, nonce, ...args).decrypt(data, ...argsDec);\n        },\n    }));\n}\nexports.managedNonce = managedNonce;\n// Overridable\nexports.utils = {\n    async encrypt(key, keyParams, cryptParams, plaintext) {\n        const cr = (0, crypto_1.getWebcryptoSubtle)();\n        const iKey = await cr.importKey('raw', key, keyParams, true, ['encrypt']);\n        const ciphertext = await cr.encrypt(cryptParams, iKey, plaintext);\n        return new Uint8Array(ciphertext);\n    },\n    async decrypt(key, keyParams, cryptParams, ciphertext) {\n        const cr = (0, crypto_1.getWebcryptoSubtle)();\n        const iKey = await cr.importKey('raw', key, keyParams, true, ['decrypt']);\n        const plaintext = await cr.decrypt(cryptParams, iKey, ciphertext);\n        return new Uint8Array(plaintext);\n    },\n};\nconst mode = {\n    CBC: 'AES-CBC',\n    CTR: 'AES-CTR',\n    GCM: 'AES-GCM',\n};\nfunction getCryptParams(algo, nonce, AAD) {\n    if (algo === mode.CBC)\n        return { name: mode.CBC, iv: nonce };\n    if (algo === mode.CTR)\n        return { name: mode.CTR, counter: nonce, length: 64 };\n    if (algo === mode.GCM) {\n        if (AAD)\n            return { name: mode.GCM, iv: nonce, additionalData: AAD };\n        else\n            return { name: mode.GCM, iv: nonce };\n    }\n    throw new Error('unknown aes block mode');\n}\nfunction generate(algo) {\n    return (key, nonce, AAD) => {\n        (0, _assert_js_1.bytes)(key);\n        (0, _assert_js_1.bytes)(nonce);\n        const keyParams = { name: algo, length: key.length * 8 };\n        const cryptParams = getCryptParams(algo, nonce, AAD);\n        return {\n            // keyLength,\n            encrypt(plaintext) {\n                (0, _assert_js_1.bytes)(plaintext);\n                return exports.utils.encrypt(key, keyParams, cryptParams, plaintext);\n            },\n            decrypt(ciphertext) {\n                (0, _assert_js_1.bytes)(ciphertext);\n                return exports.utils.decrypt(key, keyParams, cryptParams, ciphertext);\n            },\n        };\n    };\n}\nexports.cbc = generate(mode.CBC);\nexports.ctr = generate(mode.CTR);\nexports.gcm = generate(mode.GCM);\n// // Type tests\n// import { siv, gcm, ctr, ecb, cbc } from '../aes.js';\n// import { xsalsa20poly1305 } from '../salsa.js';\n// import { chacha20poly1305, xchacha20poly1305 } from '../chacha.js';\n// const wsiv = managedNonce(siv);\n// const wgcm = managedNonce(gcm);\n// const wctr = managedNonce(ctr);\n// const wcbc = managedNonce(cbc);\n// const wsalsapoly = managedNonce(xsalsa20poly1305);\n// const wchacha = managedNonce(chacha20poly1305);\n// const wxchacha = managedNonce(xchacha20poly1305);\n// // should fail\n// const wcbc2 = managedNonce(managedNonce(cbc));\n// const wecb = managedNonce(ecb);\n//# sourceMappingURL=webcrypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHash = getHash;\nexports.createCurve = createCurve;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\n// connects noble-curves to noble-hashes\nfunction getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => (0, hmac_1.hmac)(hash, key, (0, utils_1.concatBytes)(...msgs)),\n        randomBytes: utils_1.randomBytes,\n    };\n}\nfunction createCurve(curveDef, defHash) {\n    const create = (hash) => (0, weierstrass_js_1.weierstrass)({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wNAF = wNAF;\nexports.validateBasic = validateBasic;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nfunction wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nfunction validateBasic(curve) {\n    (0, modular_js_1.validateField)(curve.Fp);\n    (0, utils_js_1.validateObject)(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...(0, modular_js_1.nLength)(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.twistedEdwards = twistedEdwards;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nconst curve_js_1 = require(\"./curve.js\");\nconst modular_js_1 = require(\"./modular.js\");\nconst ut = require(\"./utils.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nfunction twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = (0, utils_js_1.ensureBytes)('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = (0, curve_js_1.wNAF)(Point, nByteLength * 8);\n    function modN(a) {\n        return (0, modular_js_1.mod)(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = (0, utils_js_1.ensureBytes)('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = (0, utils_js_1.ensureBytes)('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, (0, utils_js_1.ensureBytes)('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = (0, utils_js_1.ensureBytes)('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return (0, utils_js_1.ensureBytes)('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = (0, utils_js_1.ensureBytes)('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = (0, utils_js_1.ensureBytes)('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expand_message_xmd = expand_message_xmd;\nexports.expand_message_xof = expand_message_xof;\nexports.hash_to_field = hash_to_field;\nexports.isogenyMap = isogenyMap;\nexports.createHasher = createHasher;\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = utils_js_1.bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction anum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nfunction expand_message_xmd(msg, DST, lenInBytes, H) {\n    (0, utils_js_1.abytes)(msg);\n    (0, utils_js_1.abytes)(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H((0, utils_js_1.concatBytes)((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = (0, utils_js_1.concatBytes)(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H((0, utils_js_1.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H((0, utils_js_1.concatBytes)(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H((0, utils_js_1.concatBytes)(...args));\n    }\n    const pseudo_random_bytes = (0, utils_js_1.concatBytes)(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nfunction expand_message_xof(msg, DST, lenInBytes, k, H) {\n    (0, utils_js_1.abytes)(msg);\n    (0, utils_js_1.abytes)(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nfunction hash_to_field(msg, count, options) {\n    (0, utils_js_1.validateObject)(options, {\n        DST: 'stringOrUint8Array',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    (0, utils_js_1.abytes)(msg);\n    anum(count);\n    const DST = typeof _DST === 'string' ? (0, utils_js_1.utf8ToBytes)(_DST) : _DST;\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = (0, modular_js_1.mod)(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nfunction isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nfunction createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve.\n        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Encodes byte string to elliptic curve.\n        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Same as encodeToCurve, but without hash\n        mapToCurve(scalars) {\n            if (!Array.isArray(scalars))\n                throw new Error('mapToCurve: expected array of bigints');\n            for (const i of scalars)\n                if (typeof i !== 'bigint')\n                    throw new Error(`mapToCurve: expected array of bigints, got ${i} in array`);\n            const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNegativeLE = void 0;\nexports.mod = mod;\nexports.pow = pow;\nexports.pow2 = pow2;\nexports.invert = invert;\nexports.tonelliShanks = tonelliShanks;\nexports.FpSqrt = FpSqrt;\nexports.validateField = validateField;\nexports.FpPow = FpPow;\nexports.FpInvertBatch = FpInvertBatch;\nexports.FpDiv = FpDiv;\nexports.FpIsSquare = FpIsSquare;\nexports.nLength = nLength;\nexports.Field = Field;\nexports.FpSqrtOdd = FpSqrtOdd;\nexports.FpSqrtEven = FpSqrtEven;\nexports.hashToPrivateScalar = hashToPrivateScalar;\nexports.getFieldBytesLength = getFieldBytesLength;\nexports.getMinHashLength = getMinHashLength;\nexports.mapHashToField = mapHashToField;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nconst utils_js_1 = require(\"./utils.js\");\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nfunction pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nfunction invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nfunction tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nfunction FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nconst isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\nexports.isNegativeLE = isNegativeLE;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nfunction validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return (0, utils_js_1.validateObject)(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nfunction FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nfunction FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nfunction FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nfunction FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nfunction nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nfunction Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: (0, utils_js_1.bitMask)(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? (0, utils_js_1.numberToBytesLE)(num, BYTES) : (0, utils_js_1.numberToBytesBE)(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? (0, utils_js_1.bytesToNumberLE)(bytes) : (0, utils_js_1.bytesToNumberBE)(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nfunction FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nfunction FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nfunction hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = (0, utils_js_1.ensureBytes)('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberLE)(hash) : (0, utils_js_1.bytesToNumberBE)(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nfunction getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nfunction getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nfunction mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberBE)(key) : (0, utils_js_1.bytesToNumberLE)(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? (0, utils_js_1.numberToBytesLE)(reduced, fieldLen) : (0, utils_js_1.numberToBytesBE)(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.montgomery = montgomery;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    (0, utils_js_1.validateObject)(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nfunction montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => (0, modular_js_1.mod)(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => (0, modular_js_1.pow)(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return (0, utils_js_1.numberToBytesLE)(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        const u = (0, utils_js_1.ensureBytes)('u coordinate', uEnc, montgomeryBytes);\n        if (fieldLen === 32)\n            u[31] &= 127; // 0b0111_1111\n        return (0, utils_js_1.bytesToNumberLE)(u);\n    }\n    function decodeScalar(n) {\n        const bytes = (0, utils_js_1.ensureBytes)('scalar', n);\n        const len = bytes.length;\n        if (len !== montgomeryBytes && len !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${len}`);\n        return (0, utils_js_1.bytesToNumberLE)(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitMask = void 0;\nexports.isBytes = isBytes;\nexports.abytes = abytes;\nexports.bytesToHex = bytesToHex;\nexports.numberToHexUnpadded = numberToHexUnpadded;\nexports.hexToNumber = hexToNumber;\nexports.hexToBytes = hexToBytes;\nexports.bytesToNumberBE = bytesToNumberBE;\nexports.bytesToNumberLE = bytesToNumberLE;\nexports.numberToBytesBE = numberToBytesBE;\nexports.numberToBytesLE = numberToBytesLE;\nexports.numberToVarBytesBE = numberToVarBytesBE;\nexports.ensureBytes = ensureBytes;\nexports.concatBytes = concatBytes;\nexports.equalBytes = equalBytes;\nexports.utf8ToBytes = utf8ToBytes;\nexports.bitLen = bitLen;\nexports.bitGet = bitGet;\nexports.bitSet = bitSet;\nexports.createHmacDrbg = createHmacDrbg;\nexports.validateObject = validateObject;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nfunction numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nfunction numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nfunction ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nfunction equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nfunction bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nfunction bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nconst bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\nexports.bitMask = bitMask;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DER = void 0;\nexports.weierstrassPoints = weierstrassPoints;\nexports.weierstrass = weierstrass;\nexports.SWUFpSqrtRatio = SWUFpSqrtRatio;\nexports.mapToCurveSimpleSWU = mapToCurveSimpleSWU;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nconst curve_js_1 = require(\"./curve.js\");\nconst mod = require(\"./modular.js\");\nconst ut = require(\"./utils.js\");\nconst utils_js_1 = require(\"./utils.js\");\nfunction validatePointOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexports.DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = exports.DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = exports.DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = exports.DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = exports.DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nfunction weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE((0, utils_js_1.ensureBytes)('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes((0, utils_js_1.ensureBytes)('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = (0, curve_js_1.wNAF)(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nfunction weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = (0, utils_js_1.ensureBytes)('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = exports.DER.toSig((0, utils_js_1.ensureBytes)('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN((0, utils_js_1.ensureBytes)('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return exports.DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        if (prehash)\n            msgHash = (0, utils_js_1.ensureBytes)('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push((0, utils_js_1.ensureBytes)('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        publicKey = (0, utils_js_1.ensureBytes)('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof exports.DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nfunction SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nfunction mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hash_to_ristretto255 = exports.hashToRistretto255 = exports.RistrettoPoint = exports.encodeToCurve = exports.hashToCurve = exports.edwardsToMontgomery = exports.x25519 = exports.ed25519ph = exports.ed25519ctx = exports.ed25519 = exports.ED25519_TORSION_SUBGROUP = void 0;\nexports.edwardsToMontgomeryPub = edwardsToMontgomeryPub;\nexports.edwardsToMontgomeryPriv = edwardsToMontgomeryPriv;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst edwards_js_1 = require(\"./abstract/edwards.js\");\nconst hash_to_curve_js_1 = require(\"./abstract/hash-to-curve.js\");\nconst modular_js_1 = require(\"./abstract/modular.js\");\nconst montgomery_js_1 = require(\"./abstract/montgomery.js\");\nconst utils_js_1 = require(\"./abstract/utils.js\");\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = ((0, modular_js_1.pow2)(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = ((0, modular_js_1.pow2)(b4, _1n, P) * x) % P; // x^31\n    const b10 = ((0, modular_js_1.pow2)(b5, _5n, P) * b5) % P;\n    const b20 = ((0, modular_js_1.pow2)(b10, _10n, P) * b10) % P;\n    const b40 = ((0, modular_js_1.pow2)(b20, _20n, P) * b20) % P;\n    const b80 = ((0, modular_js_1.pow2)(b40, _40n, P) * b40) % P;\n    const b160 = ((0, modular_js_1.pow2)(b80, _80n, P) * b80) % P;\n    const b240 = ((0, modular_js_1.pow2)(b160, _80n, P) * b80) % P;\n    const b250 = ((0, modular_js_1.pow2)(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = ((0, modular_js_1.pow2)(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = (0, modular_js_1.mod)(v * v * v, P); // v³\n    const v7 = (0, modular_js_1.mod)(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = (0, modular_js_1.mod)(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = (0, modular_js_1.mod)(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = (0, modular_js_1.mod)(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === (0, modular_js_1.mod)(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === (0, modular_js_1.mod)(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((0, modular_js_1.isNegativeLE)(x, P))\n        x = (0, modular_js_1.mod)(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexports.ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => (0, modular_js_1.Field)(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512_1.sha512,\n    randomBytes: utils_1.randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\nexports.ed25519 = (() => (0, edwards_js_1.twistedEdwards)(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return (0, utils_1.concatBytes)((0, utils_1.utf8ToBytes)('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexports.ed25519ctx = (() => (0, edwards_js_1.twistedEdwards)({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nexports.ed25519ph = (() => (0, edwards_js_1.twistedEdwards)(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512_1.sha512,\n})))();\nexports.x25519 = (() => (0, montgomery_js_1.montgomery)({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return (0, modular_js_1.mod)((0, modular_js_1.pow2)(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes: utils_1.randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nfunction edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = exports.ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexports.edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nfunction edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => (0, modular_js_1.FpSqrtEven)(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512_1.sha512,\n}))();\nexports.hashToCurve = (() => htf.hashToCurve)();\nexports.encodeToCurve = (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => exports.ed25519.CURVE.Fp.create((0, utils_js_1.bytesToNumberLE)(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = exports.ed25519.CURVE;\n    const P = exports.ed25519.CURVE.Fp.ORDER;\n    const mod = exports.ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!(0, modular_js_1.isNegativeLE)(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new exports.ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(exports.ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = (0, utils_js_1.ensureBytes)('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = (0, utils_js_1.ensureBytes)('ristrettoHex', hex, 32);\n        const { a, d } = exports.ed25519.CURVE;\n        const P = exports.ed25519.CURVE.Fp.ORDER;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!(0, utils_js_1.equalBytes)((0, utils_js_1.numberToBytesLE)(s, 32), hex) || (0, modular_js_1.isNegativeLE)(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if ((0, modular_js_1.isNegativeLE)(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || (0, modular_js_1.isNegativeLE)(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new exports.ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = exports.ed25519.CURVE.Fp.ORDER;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if ((0, modular_js_1.isNegativeLE)(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if ((0, modular_js_1.isNegativeLE)(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if ((0, modular_js_1.isNegativeLE)(s, P))\n            s = mod(-s);\n        return (0, utils_js_1.numberToBytesLE)(s, 32); // 11\n    }\n    toHex() {\n        return (0, utils_js_1.bytesToHex)(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexports.RistrettoPoint = (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(exports.ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(exports.ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nconst hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? (0, utils_1.utf8ToBytes)(d) : d;\n    const uniform_bytes = (0, hash_to_curve_js_1.expand_message_xmd)(msg, DST, 64, sha512_1.sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexports.hashToRistretto255 = hashToRistretto255;\nexports.hash_to_ristretto255 = exports.hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeToCurve = exports.hashToCurve = exports.schnorr = exports.secp256k1 = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst _shortw_utils_js_1 = require(\"./_shortw_utils.js\");\nconst hash_to_curve_js_1 = require(\"./abstract/hash-to-curve.js\");\nconst modular_js_1 = require(\"./abstract/modular.js\");\nconst utils_js_1 = require(\"./abstract/utils.js\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = ((0, modular_js_1.pow2)(b3, _3n, P) * b3) % P;\n    const b9 = ((0, modular_js_1.pow2)(b6, _3n, P) * b3) % P;\n    const b11 = ((0, modular_js_1.pow2)(b9, _2n, P) * b2) % P;\n    const b22 = ((0, modular_js_1.pow2)(b11, _11n, P) * b11) % P;\n    const b44 = ((0, modular_js_1.pow2)(b22, _22n, P) * b22) % P;\n    const b88 = ((0, modular_js_1.pow2)(b44, _44n, P) * b44) % P;\n    const b176 = ((0, modular_js_1.pow2)(b88, _88n, P) * b88) % P;\n    const b220 = ((0, modular_js_1.pow2)(b176, _44n, P) * b44) % P;\n    const b223 = ((0, modular_js_1.pow2)(b220, _3n, P) * b3) % P;\n    const t1 = ((0, modular_js_1.pow2)(b223, _23n, P) * b22) % P;\n    const t2 = ((0, modular_js_1.pow2)(t1, _6n, P) * b2) % P;\n    const root = (0, modular_js_1.pow2)(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = (0, modular_js_1.Field)(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexports.secp256k1 = (0, _shortw_utils_js_1.createCurve)({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = (0, modular_js_1.mod)(k - c1 * a1 - c2 * a2, n);\n            let k2 = (0, modular_js_1.mod)(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256_1.sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = (0, sha256_1.sha256)(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = (0, utils_js_1.concatBytes)(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return (0, sha256_1.sha256)((0, utils_js_1.concatBytes)(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => (0, utils_js_1.numberToBytesBE)(n, 32);\nconst modP = (x) => (0, modular_js_1.mod)(x, secp256k1P);\nconst modN = (x) => (0, modular_js_1.mod)(x, secp256k1N);\nconst Point = exports.secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = exports.secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN((0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = (0, utils_1.randomBytes)(32)) {\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = (0, utils_js_1.ensureBytes)('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ (0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN((0, utils_js_1.bytesToNumberBE)(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = (0, utils_js_1.ensureBytes)('signature', signature, 64);\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const pub = (0, utils_js_1.ensureBytes)('publicKey', publicKey, 32);\n    try {\n        const P = lift_x((0, utils_js_1.bytesToNumberBE)(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = (0, utils_js_1.bytesToNumberBE)(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = (0, utils_js_1.bytesToNumberBE)(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.schnorr = (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: exports.secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE: utils_js_1.numberToBytesBE,\n        bytesToNumberBE: utils_js_1.bytesToNumberBE,\n        taggedHash,\n        mod: modular_js_1.mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.isogenyMap)(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => (0, weierstrass_js_1.mapToCurveSimpleSWU)(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256_1.sha256,\n}))();\nexports.hashToCurve = (() => htf.hashToCurve)();\nexports.encodeToCurve = (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = exports.isBytes = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashMD = exports.Maj = exports.Chi = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\nexports.Chi = Chi;\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\nexports.Maj = Maj;\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.HashMD = HashMD;\n//# sourceMappingURL=_md.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = exports.HMAC = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0, _assert_js_1.hash)(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        (0, _assert_js_1.exists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.bytes)(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\nexports.HMAC = HMAC;\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    (0, _assert_js_1.hash)(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    (0, _assert_js_1.number)(c);\n    (0, _assert_js_1.number)(dkLen);\n    (0, _assert_js_1.number)(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ripemd160 = exports.RIPEMD160 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst R_BUF = /* @__PURE__ */ new Uint32Array(16);\nclass RIPEMD160 extends _md_js_1.HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            R_BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = ((0, utils_js_1.rotl)(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = (0, utils_js_1.rotl)(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = ((0, utils_js_1.rotl)(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = (0, utils_js_1.rotl)(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        R_BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\nexports.RIPEMD160 = RIPEMD160;\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexports.ripemd160 = (0, utils_js_1.wrapConstructor)(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scryptAsync = exports.scrypt = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst sha256_js_1 = require(\"./sha256.js\");\nconst pbkdf2_js_1 = require(\"./pbkdf2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// RFC 7914 Scrypt KDF\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= (0, utils_js_1.rotl)(x00 + x12 | 0, 7);\n        x08 ^= (0, utils_js_1.rotl)(x04 + x00 | 0, 9);\n        x12 ^= (0, utils_js_1.rotl)(x08 + x04 | 0, 13);\n        x00 ^= (0, utils_js_1.rotl)(x12 + x08 | 0, 18);\n        x09 ^= (0, utils_js_1.rotl)(x05 + x01 | 0, 7);\n        x13 ^= (0, utils_js_1.rotl)(x09 + x05 | 0, 9);\n        x01 ^= (0, utils_js_1.rotl)(x13 + x09 | 0, 13);\n        x05 ^= (0, utils_js_1.rotl)(x01 + x13 | 0, 18);\n        x14 ^= (0, utils_js_1.rotl)(x10 + x06 | 0, 7);\n        x02 ^= (0, utils_js_1.rotl)(x14 + x10 | 0, 9);\n        x06 ^= (0, utils_js_1.rotl)(x02 + x14 | 0, 13);\n        x10 ^= (0, utils_js_1.rotl)(x06 + x02 | 0, 18);\n        x03 ^= (0, utils_js_1.rotl)(x15 + x11 | 0, 7);\n        x07 ^= (0, utils_js_1.rotl)(x03 + x15 | 0, 9);\n        x11 ^= (0, utils_js_1.rotl)(x07 + x03 | 0, 13);\n        x15 ^= (0, utils_js_1.rotl)(x11 + x07 | 0, 18);\n        x01 ^= (0, utils_js_1.rotl)(x00 + x03 | 0, 7);\n        x02 ^= (0, utils_js_1.rotl)(x01 + x00 | 0, 9);\n        x03 ^= (0, utils_js_1.rotl)(x02 + x01 | 0, 13);\n        x00 ^= (0, utils_js_1.rotl)(x03 + x02 | 0, 18);\n        x06 ^= (0, utils_js_1.rotl)(x05 + x04 | 0, 7);\n        x07 ^= (0, utils_js_1.rotl)(x06 + x05 | 0, 9);\n        x04 ^= (0, utils_js_1.rotl)(x07 + x06 | 0, 13);\n        x05 ^= (0, utils_js_1.rotl)(x04 + x07 | 0, 18);\n        x11 ^= (0, utils_js_1.rotl)(x10 + x09 | 0, 7);\n        x08 ^= (0, utils_js_1.rotl)(x11 + x10 | 0, 9);\n        x09 ^= (0, utils_js_1.rotl)(x08 + x11 | 0, 13);\n        x10 ^= (0, utils_js_1.rotl)(x09 + x08 | 0, 18);\n        x12 ^= (0, utils_js_1.rotl)(x15 + x14 | 0, 7);\n        x13 ^= (0, utils_js_1.rotl)(x12 + x15 | 0, 9);\n        x14 ^= (0, utils_js_1.rotl)(x13 + x12 | 0, 13);\n        x15 ^= (0, utils_js_1.rotl)(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = (0, utils_js_1.checkOpts)({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    (0, _assert_js_1.number)(N);\n    (0, _assert_js_1.number)(r);\n    (0, _assert_js_1.number)(p);\n    (0, _assert_js_1.number)(dkLen);\n    (0, _assert_js_1.number)(asyncTick);\n    (0, _assert_js_1.number)(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = (0, pbkdf2_js_1.pbkdf2)(sha256_js_1.sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = (0, utils_js_1.u32)(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = (0, utils_js_1.u32)(new Uint8Array(blockSize * N));\n    const tmp = (0, utils_js_1.u32)(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = (0, pbkdf2_js_1.pbkdf2)(sha256_js_1.sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nfunction scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    if (!utils_js_1.isLE)\n        (0, utils_js_1.byteSwap32)(B32);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    if (!utils_js_1.isLE)\n        (0, utils_js_1.byteSwap32)(B32);\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\nexports.scrypt = scrypt;\n/**\n * Scrypt KDF from RFC 7914.\n */\nasync function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    if (!utils_js_1.isLE)\n        (0, utils_js_1.byteSwap32)(B32);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await (0, utils_js_1.asyncLoop)(N - 1, asyncTick, () => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await (0, utils_js_1.asyncLoop)(N, asyncTick, () => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    if (!utils_js_1.isLE)\n        (0, utils_js_1.byteSwap32)(B32);\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\nexports.scryptAsync = scryptAsync;\n//# sourceMappingURL=scrypt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _md_js_1.HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0, _md_js_1.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + (0, _md_js_1.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.exists)(this, false);\n        (0, _assert_js_1.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _md_js_1.HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.byteSwap32 = exports.byteSwapIfBE = exports.byteSwap = exports.isLE = exports.rotl = exports.rotr = exports.createView = exports.u32 = exports.u8 = exports.isBytes = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites __import__\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexports.rotl = rotl;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\nexports.byteSwap = byteSwap;\n// Conditionally byte swap if on a big-endian platform\nexports.byteSwapIfBE = exports.isLE ? (n) => n : (n) => (0, exports.byteSwap)(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (0, exports.byteSwap)(arr[i]);\n    }\n}\nexports.byteSwap32 = byteSwap32;\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.bytes)(data);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","/**\n * @popperjs/core v2.9.2 - MIT License\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction getBoundingClientRect(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    y: rect.top\n  };\n}\n\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n\nfunction getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n\nfunction getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n\n// Composite means it takes into account transforms as well as layout.\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement);\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n// means it doesn't take into account transforms.\n\nfunction getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}\n\nfunction getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nfunction listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nvar top = 'top';\nvar bottom = 'bottom';\nvar right = 'right';\nvar left = 'left';\nvar auto = 'auto';\nvar basePlacements = [top, bottom, right, left];\nvar start = 'start';\nvar end = 'end';\nvar clippingParents = 'clippingParents';\nvar viewport = 'viewport';\nvar popper = 'popper';\nvar reference = 'reference';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nvar placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = 'beforeRead';\nvar read = 'read';\nvar afterRead = 'afterRead'; // pure-logic modifiers\n\nvar beforeMain = 'beforeMain';\nvar main = 'main';\nvar afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = 'beforeWrite';\nvar write = 'write';\nvar afterWrite = 'afterWrite';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n\nfunction debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n\nfunction format(str) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return [].concat(args).reduce(function (p, c) {\n    return p.replace(/%s/, c);\n  }, str);\n}\n\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\nfunction validateModifiers(modifiers) {\n  modifiers.forEach(function (modifier) {\n    Object.keys(modifier).forEach(function (key) {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', \"\\\"\" + String(modifier.name) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', \"\\\"\" + String(modifier.enabled) + \"\\\"\"));\n          }\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(', '), \"\\\"\" + String(modifier.phase) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', \"\\\"\" + String(modifier.requires) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', \"\\\"\" + String(modifier.requiresIfExists) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'options':\n        case 'data':\n          break;\n\n        default:\n          console.error(\"PopperJS: an invalid property has been provided to the \\\"\" + modifier.name + \"\\\" modifier, valid properties are \" + VALID_PROPERTIES.map(function (s) {\n            return \"\\\"\" + s + \"\\\"\";\n          }).join(', ') + \"; but \\\"\" + key + \"\\\" was provided.\");\n      }\n\n      modifier.requires && modifier.requires.forEach(function (requirement) {\n        if (modifiers.find(function (mod) {\n          return mod.name === requirement;\n        }) == null) {\n          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n        }\n      });\n    });\n  });\n}\n\nfunction uniqueBy(arr, fn) {\n  var identifiers = new Set();\n  return arr.filter(function (item) {\n    var identifier = fn(item);\n\n    if (!identifiers.has(identifier)) {\n      identifiers.add(identifier);\n      return true;\n    }\n  });\n}\n\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n\nfunction getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}\n\nvar max = Math.max;\nvar min = Math.min;\nvar round = Math.round;\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n\nfunction rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n\nfunction getVariation(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n    }\n  }\n\n  return offsets;\n}\n\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}\n\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var referenceElement = state.elements.reference;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(referenceElement);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(options) {\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (\"production\" !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (\"production\" !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (\"production\" !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (\"production\" !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\n\nvar passive = {\n  passive: true\n};\n\nfunction effect$2(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar eventListeners = {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect$2,\n  data: {}\n};\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar popperOffsets$1 = {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(round(x * dpr) / dpr) || 0,\n    y: round(round(y * dpr) / dpr) || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets;\n\n  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,\n      _ref3$x = _ref3.x,\n      x = _ref3$x === void 0 ? 0 : _ref3$x,\n      _ref3$y = _ref3.y,\n      y = _ref3$y === void 0 ? 0 : _ref3$y;\n\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top) {\n      sideY = bottom; // $FlowFixMe[prop-missing]\n\n      y -= offsetParent[heightProp] - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left) {\n      sideX = right; // $FlowFixMe[prop-missing]\n\n      x -= offsetParent[widthProp] - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref4) {\n  var state = _ref4.state,\n      options = _ref4.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (\"production\" !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar computeStyles$1 = {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};\n\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect$1(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar applyStyles$1 = {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect$1,\n  requires: ['computeStyles']\n};\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar offset$1 = {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};\n\nvar hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash$1[matched];\n  });\n}\n\nvar hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}\n\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements$1.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements$1;\n\n    if (\"production\" !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar flip$1 = {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};\n\nfunction getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis || checkAltAxis) {\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min$1 = popperOffsets[mainAxis] + overflow[mainSide];\n    var max$1 = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n\n    if (checkMainAxis) {\n      var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);\n      popperOffsets[mainAxis] = preventedOffset;\n      data[mainAxis] = preventedOffset - offset;\n    }\n\n    if (checkAltAxis) {\n      var _mainSide = mainAxis === 'x' ? top : left;\n\n      var _altSide = mainAxis === 'x' ? bottom : right;\n\n      var _offset = popperOffsets[altAxis];\n\n      var _min = _offset + overflow[_mainSide];\n\n      var _max = _offset - overflow[_altSide];\n\n      var _preventedOffset = within(tether ? min(_min, tetherMin) : _min, _offset, tether ? max(_max, tetherMax) : _max);\n\n      popperOffsets[altAxis] = _preventedOffset;\n      data[altAxis] = _preventedOffset - _offset;\n    }\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar preventOverflow$1 = {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (\"production\" !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (\"production\" !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar arrow$1 = {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar hide$1 = {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};\n\nvar defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];\nvar createPopper$1 = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers$1\n}); // eslint-disable-next-line import/no-unused-modules\n\nvar defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexports.applyStyles = applyStyles$1;\nexports.arrow = arrow$1;\nexports.computeStyles = computeStyles$1;\nexports.createPopper = createPopper;\nexports.createPopperLite = createPopper$1;\nexports.defaultModifiers = defaultModifiers;\nexports.detectOverflow = detectOverflow;\nexports.eventListeners = eventListeners;\nexports.flip = flip$1;\nexports.hide = hide$1;\nexports.offset = offset$1;\nexports.popperGenerator = popperGenerator;\nexports.popperOffsets = popperOffsets$1;\nexports.preventOverflow = preventOverflow$1;\n//# sourceMappingURL=popper.js.map\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = (0,eval)(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","'use strict'\nmodule.exports = require('./redux-toolkit.cjs.development.js')\n"]}