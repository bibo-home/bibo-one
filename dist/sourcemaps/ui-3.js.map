{"version":3,"sources":["ui/components/app/hold-to-reveal-button/hold-to-reveal-button.js","ui/components/app/home-notification/home-notification.component.js","ui/components/app/home-notification/index.js","ui/components/app/import-token/token-list/index.js","ui/components/app/import-token/token-list/token-list-placeholder/index.js","ui/components/app/import-token/token-list/token-list-placeholder/token-list-placeholder.component.js","ui/components/app/import-token/token-list/token-list.component.js","ui/components/app/import-token/token-list/token-list.container.js","ui/components/app/import-token/token-search/index.js","ui/components/app/import-token/token-search/token-search.component.js","ui/components/app/incoming-trasaction-toggle/incoming-transaction-toggle.tsx","ui/components/app/incoming-trasaction-toggle/network-toggle.tsx","ui/components/app/loading-network-screen/index.js","ui/components/app/loading-network-screen/loading-network-screen.component.js","ui/components/app/loading-network-screen/loading-network-screen.container.js","ui/components/app/metamask-template-renderer/index.js","ui/components/app/metamask-template-renderer/metamask-template-renderer.js","ui/components/app/metamask-template-renderer/safe-component-list.js","ui/components/app/metamask-template-renderer/section-shape.js","ui/components/app/metamask-translation/index.js","ui/components/app/metamask-translation/metamask-translation.js","ui/components/app/modal/index.js","ui/components/app/modal/modal-content/index.js","ui/components/app/modal/modal-content/modal-content.component.js","ui/components/app/modal/modal.component.js","ui/components/app/modals/confirm-delete-network/confirm-delete-network.component.js","ui/components/app/modals/confirm-delete-network/confirm-delete-network.container.js","ui/components/app/modals/confirm-delete-network/index.js","ui/components/app/modals/confirm-remove-account/confirm-remove-account.component.js","ui/components/app/modals/confirm-remove-account/confirm-remove-account.container.js","ui/components/app/modals/confirm-remove-account/index.js","ui/components/app/modals/confirm-reset-account/confirm-reset-account.component.js","ui/components/app/modals/confirm-reset-account/confirm-reset-account.container.js","ui/components/app/modals/confirm-reset-account/index.js","ui/components/app/modals/confirm-turn-off-profile-syncing/confirm-turn-off-profile-syncing.tsx","ui/components/app/modals/confirm-turn-off-profile-syncing/index.ts","ui/components/app/modals/convert-token-to-nft-modal/convert-token-to-nft-modal.js","ui/components/app/modals/customize-nonce/customize-nonce.component.js","ui/components/app/modals/customize-nonce/index.js","ui/components/app/modals/edit-approval-permission/edit-approval-permission.component.js","ui/components/app/modals/edit-approval-permission/edit-approval-permission.container.js","ui/components/app/modals/edit-approval-permission/index.js","ui/components/app/modals/fade-modal.js","ui/components/app/modals/hide-token-confirmation-modal/hide-token-confirmation-modal.js","ui/components/app/modals/hide-token-confirmation-modal/index.js","ui/components/app/modals/hold-to-reveal-modal/hold-to-reveal-modal.tsx","ui/components/app/modals/index.js","ui/components/app/modals/keyring-snap-removal-modal/index.ts","ui/components/app/modals/keyring-snap-removal-modal/keyring-snap-removal-result-modal.tsx","ui/components/app/modals/modal.js","ui/components/app/modals/new-account-modal/index.js","ui/components/app/modals/new-account-modal/new-account-modal.component.js","ui/components/app/modals/new-account-modal/new-account-modal.container.js","ui/components/app/modals/nickname-popovers/index.js","ui/components/app/modals/nickname-popovers/nickname-popovers.component.js","ui/components/app/modals/qr-scanner/index.js","ui/components/app/modals/qr-scanner/qr-scanner.component.js","ui/components/app/modals/qr-scanner/qr-scanner.container.js","ui/components/app/modals/qr-scanner/scan-util.ts","ui/components/app/modals/reject-transactions/index.js","ui/components/app/modals/reject-transactions/reject-transactions.component.js","ui/components/app/modals/reject-transactions/reject-transactions.container.js","ui/components/app/modals/transaction-already-confirmed/index.ts","ui/components/app/modals/transaction-already-confirmed/transaction-already-confirmed.tsx","ui/components/app/modals/transaction-confirmed/index.js","ui/components/app/modals/transaction-confirmed/transaction-confirmed.component.js","ui/components/app/modals/transaction-confirmed/transaction-confirmed.container.js","ui/components/app/modals/turn-on-metamask-notifications/turn-on-metamask-notifications.tsx","ui/components/app/multi-rpc-edit-modal/multi-rpc-edit-modal.tsx","ui/components/app/multi-rpc-edit-modal/network-list-item/network-list-item.tsx","ui/components/app/multiple-notifications/index.js","ui/components/app/multiple-notifications/multiple-notifications.component.js","ui/components/app/name/index.ts","ui/components/app/name/name-details/metrics.ts","ui/components/app/name/name-details/name-details.tsx","ui/components/app/name/name.tsx","ui/components/app/network-account-balance-header/index.js","ui/components/app/network-account-balance-header/network-account-balance-header.js","ui/components/app/network-display/index.js","ui/components/app/network-display/network-display.js","ui/components/app/permission-cell/index.js","ui/components/app/permission-cell/permission-cell-options.js","ui/components/app/permission-cell/permission-cell-status.js","ui/components/app/permission-cell/permission-cell.js","ui/components/app/permission-connect-header/index.js","ui/components/app/permission-connect-header/permission-connect-header.js","ui/components/app/permission-page-container/index.js","ui/components/app/permission-page-container/permission-page-container-content/index.js","ui/components/app/permission-page-container/permission-page-container-content/permission-page-container-content.component.js","ui/components/app/permission-page-container/permission-page-container.component.js","ui/components/app/permission-page-container/permission-page-container.container.js","ui/components/app/permissions-connect-footer/index.js","ui/components/app/permissions-connect-footer/permissions-connect-footer.component.js","ui/components/app/permissions-connect-header/index.js","ui/components/app/permissions-connect-header/permissions-connect-header.component.js","ui/components/app/permissions-connect-permission-list/index.js","ui/components/app/permissions-connect-permission-list/permissions-connect-permission-list.js","ui/components/app/qr-hardware-popover/base-reader.js","ui/components/app/qr-hardware-popover/enhanced-reader.js","ui/components/app/qr-hardware-popover/index.js","ui/components/app/qr-hardware-popover/qr-hardware-popover.js","ui/components/app/qr-hardware-popover/qr-hardware-sign-request/index.js","ui/components/app/qr-hardware-popover/qr-hardware-sign-request/player.js","ui/components/app/qr-hardware-popover/qr-hardware-sign-request/qr-hardware-sign-request.component.js","ui/components/app/qr-hardware-popover/qr-hardware-sign-request/reader.js","ui/components/app/qr-hardware-popover/qr-hardware-wallet-importer/index.js","ui/components/app/qr-hardware-popover/qr-hardware-wallet-importer/qr-hardware-wallet-importer.component.js","ui/components/app/recovery-phrase-reminder/index.js","ui/components/app/recovery-phrase-reminder/recovery-phrase-reminder.js","ui/components/app/reveal-SRP-modal/index.js","ui/components/app/reveal-SRP-modal/reveal-SRP-modal.js","ui/components/app/snaps/copyable/copyable.js","ui/components/app/snaps/copyable/index.js","ui/components/app/snaps/insight-warnings/index.js","ui/components/app/snaps/insight-warnings/insight-warnings.js","ui/components/app/snaps/install-error/install-error.js","ui/components/app/snaps/keyring-snap-removal-warning/index.ts","ui/components/app/snaps/keyring-snap-removal-warning/keyring-account-list-item.tsx","ui/components/app/snaps/keyring-snap-removal-warning/keyring-snap-removal-warning.tsx","ui/components/app/snaps/show-more/index.js","ui/components/app/snaps/show-more/show-more.js","ui/components/app/snaps/snap-authorship-expanded/index.js","ui/components/app/snaps/snap-authorship-expanded/snap-authorship-expanded.js","ui/components/app/snaps/snap-authorship-header/index.js","ui/components/app/snaps/snap-authorship-header/snap-authorship-header.js","ui/components/app/snaps/snap-authorship-pill/index.ts","ui/components/app/snaps/snap-authorship-pill/snap-authorship-pill.tsx","ui/components/app/snaps/snap-connect-cell/snap-connect-cell.js","ui/components/app/snaps/snap-delineator/index.js","ui/components/app/snaps/snap-delineator/snap-delineator.js","ui/components/app/snaps/snap-home-menu/index.js","ui/components/app/snaps/snap-home-menu/snap-home-menu.js","ui/components/app/snaps/snap-home-page/snap-home-renderer.js","ui/components/app/snaps/snap-home-page/useSnapHome.js","ui/components/app/snaps/snap-icon/index.ts","ui/components/app/snaps/snap-icon/snap-icon.tsx","ui/components/app/snaps/snap-insight/snap-insight.js","ui/components/app/snaps/snap-install-warning/index.js","ui/components/app/snaps/snap-install-warning/snap-install-warning.js","ui/components/app/snaps/snap-legacy-authorship-header/index.js","ui/components/app/snaps/snap-legacy-authorship-header/snap-legacy-authorship-header.js","ui/components/app/snaps/snap-link-warning/index.js","ui/components/app/snaps/snap-link-warning/snap-link-warning.js","ui/components/app/snaps/snap-list-item/index.js","ui/components/app/snaps/snap-list-item/snap-list-item.js","ui/components/app/snaps/snap-metadata-modal/index.js","ui/components/app/snaps/snap-metadata-modal/snap-metadata-modal.js","ui/components/app/snaps/snap-permission-adapter/index.js","ui/components/app/snaps/snap-permission-adapter/snap-permission-adapter.js","ui/components/app/snaps/snap-permission-cell/index.js","ui/components/app/snaps/snap-permission-cell/snap-permission-cell.js","ui/components/app/snaps/snap-permissions-list/index.js","ui/components/app/snaps/snap-permissions-list/snap-permissions-list.js","ui/components/app/snaps/snap-privacy-warning/index.js","ui/components/app/snaps/snap-privacy-warning/snap-privacy-warning.js","ui/components/app/snaps/snap-remove-warning/index.js","ui/components/app/snaps/snap-remove-warning/snap-remove-warning.js","ui/components/app/snaps/snap-ui-address/index.ts","ui/components/app/snaps/snap-ui-address/snap-ui-address.tsx","ui/components/app/snaps/snap-ui-button/index.ts","ui/components/app/snaps/snap-ui-button/snap-ui-button.tsx","ui/components/app/snaps/snap-ui-card/index.ts","ui/components/app/snaps/snap-ui-card/snap-ui-card.tsx","ui/components/app/snaps/snap-ui-checkbox/index.ts","ui/components/app/snaps/snap-ui-checkbox/snap-ui-checkbox.tsx","ui/components/app/snaps/snap-ui-dropdown/index.ts","ui/components/app/snaps/snap-ui-dropdown/snap-ui-dropdown.tsx","ui/components/app/snaps/snap-ui-file-input/index.ts","ui/components/app/snaps/snap-ui-file-input/snap-ui-file-input.tsx","ui/components/app/snaps/snap-ui-footer-button/index.ts","ui/components/app/snaps/snap-ui-footer-button/snap-ui-footer-button.tsx","ui/components/app/snaps/snap-ui-form/index.ts","ui/components/app/snaps/snap-ui-form/snap-ui-form.tsx","ui/components/app/snaps/snap-ui-icon/index.ts","ui/components/app/snaps/snap-ui-icon/snap-ui-icon.tsx","ui/components/app/snaps/snap-ui-image/index.ts","ui/components/app/snaps/snap-ui-image/snap-ui-image.tsx","ui/components/app/snaps/snap-ui-input/index.ts","ui/components/app/snaps/snap-ui-input/snap-ui-input.tsx","ui/components/app/snaps/snap-ui-link/index.js","ui/components/app/snaps/snap-ui-link/snap-ui-link.js","ui/components/app/snaps/snap-ui-markdown/index.js","ui/components/app/snaps/snap-ui-markdown/snap-ui-markdown.js","ui/components/app/snaps/snap-ui-radio-group/index.ts","ui/components/app/snaps/snap-ui-radio-group/snap-ui-radio-group.tsx","ui/components/app/snaps/snap-ui-renderer/components/address.ts","ui/components/app/snaps/snap-ui-renderer/components/bold.ts","ui/components/app/snaps/snap-ui-renderer/components/box.ts","ui/components/app/snaps/snap-ui-renderer/components/button.ts","ui/components/app/snaps/snap-ui-renderer/components/card.ts","ui/components/app/snaps/snap-ui-renderer/components/checkbox.ts","ui/components/app/snaps/snap-ui-renderer/components/container.ts","ui/components/app/snaps/snap-ui-renderer/components/copyable.ts","ui/components/app/snaps/snap-ui-renderer/components/divider.ts","ui/components/app/snaps/snap-ui-renderer/components/dropdown.ts","ui/components/app/snaps/snap-ui-renderer/components/field.ts","ui/components/app/snaps/snap-ui-renderer/components/file-input.ts","ui/components/app/snaps/snap-ui-renderer/components/footer.ts","ui/components/app/snaps/snap-ui-renderer/components/form.ts","ui/components/app/snaps/snap-ui-renderer/components/heading.ts","ui/components/app/snaps/snap-ui-renderer/components/icon.ts","ui/components/app/snaps/snap-ui-renderer/components/image.ts","ui/components/app/snaps/snap-ui-renderer/components/index.ts","ui/components/app/snaps/snap-ui-renderer/components/input.ts","ui/components/app/snaps/snap-ui-renderer/components/italic.ts","ui/components/app/snaps/snap-ui-renderer/components/link.ts","ui/components/app/snaps/snap-ui-renderer/components/radioGroup.ts","ui/components/app/snaps/snap-ui-renderer/components/row.ts","ui/components/app/snaps/snap-ui-renderer/components/section.ts","ui/components/app/snaps/snap-ui-renderer/components/selector.ts","ui/components/app/snaps/snap-ui-renderer/components/spinner.ts","ui/components/app/snaps/snap-ui-renderer/components/text.ts","ui/components/app/snaps/snap-ui-renderer/components/tooltip.ts","ui/components/app/snaps/snap-ui-renderer/components/value.ts","ui/components/app/snaps/snap-ui-renderer/index.js","ui/components/app/snaps/snap-ui-renderer/snap-ui-renderer.js","ui/components/app/snaps/snap-ui-renderer/utils.ts","ui/components/app/snaps/snap-ui-selector/index.ts","ui/components/app/snaps/snap-ui-selector/snap-ui-selector.tsx","ui/components/app/snaps/snap-ui-tooltip/index.ts","ui/components/app/snaps/snap-ui-tooltip/snap-ui-tooltip.tsx","ui/components/app/snaps/snap-update-alert/index.js","ui/components/app/snaps/snap-update-alert/snap-update-alert.js","ui/components/app/snaps/snap-version/snap-external-pill.js","ui/components/app/snaps/update-snap-permission-list/index.js","ui/components/app/snaps/update-snap-permission-list/update-snap-permission-list.js","ui/components/app/srp-input/index.js","ui/components/app/srp-input/parse-secret-recovery-phrase.js","ui/components/app/srp-input/srp-input.js","ui/components/app/srp-quiz-modal/QuizContent/QuizContent.tsx","ui/components/app/srp-quiz-modal/QuizContent/index.ts","ui/components/app/srp-quiz-modal/SRPQuiz/SRPQuiz.tsx","ui/components/app/srp-quiz-modal/SRPQuiz/index.ts","ui/components/app/srp-quiz-modal/types.ts","ui/components/app/step-progress-bar/index.js","ui/components/app/step-progress-bar/step-progress-bar.js","ui/components/app/tab-bar/index.js","ui/components/app/tab-bar/tab-bar.js","ui/components/app/terms-of-use-popup/index.js"],"names":["_classnames","_interopRequireDefault","require","_propTypes","_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_metametrics","_i18n","_metametrics2","_designSystem","_componentLibrary","WeakMap","obj","radius","radiusWithStroke","strokeWidth","HoldToRevealButton","buttonText","onLongPressed","useContext","I18nContext","isLongPressing","useRef","isUnlocking","setIsUnlocking","useState","hasTriggeredUnlock","setHasTriggeredUnlock","trackEvent","MetaMetricsContext","preventPropogation","stopPropagation","onProgressComplete","current","triggerOnLongPressed","useCallback","category","MetaMetricsEventCategory","Keys","event","MetaMetricsEventName","SrpHoldToRevealCompleted","properties","key_type","MetaMetricsEventKeyType","Srp","SrpRevealViewed","resetAnimationStates","renderPreCompleteContent","createElement","Box","className","cx","cy","onTransitionEnd","display","Display","Flex","alignItems","AlignItems","center","justifyContent","JustifyContent","src","alt","renderPostCompleteContent","onAnimationEnd","Button","width","BlockSize","Full","onPointerDown","SrpHoldToRevealClickStarted","onPointerUp","textProps","marginRight","propTypes","string","isRequired","func","_button","_checkBox","_tooltip","HomeNotification","acceptText","checkboxText","checkboxTooltipText","classNames","descriptionText","ignoreText","infoText","onAccept","onIgnore","checkboxState","setCheckBoxState","checkboxElement","id","checked","onClick","position","title","wrapperClassName","Icon","name","IconName","Info","color","IconColor","iconDefault","type","htmlFor","node","array","exports","_homeNotification","_tokenList","_tokenListPlaceholder","key","value","_zendeskUrl","TokenListPlaceholder","Component","render","flexDirection","FlexDirection","Column","textAlign","TextAlign","Center","Text","TextColor","textAlternative","this","context","ButtonLink","href","ADD_CUSTOM_TOKENS","externalLink","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","_util","_defineProperty","TokenList","results","selectedTokens","onToggleToken","tokens","currentNetwork","testNetworkBackgroundColor","props","length","paddingLeft","paddingRight","Array","fill","map","_","_results$i","_currentNetwork$rpcPr","_results$i2","symbol","address","tokenAlreadyAdded","checkExistingAddresses","Boolean","iconUrl","Row","flexWrap","FlexWrap","NoWrap","paddingTop","paddingBottom","backgroundColor","BackgroundColor","primaryMuted","transparent","Checkbox","isChecked","BadgeWrapper","badge","AvatarNetwork","size","AvatarNetworkSize","Xs","nickname","rpcPrefs","imageUrl","marginTop","AvatarToken","fontWeight","FontWeight","Medium","variant","TextVariant","bodyMd","bodySm","object","_reactRedux","connect","state","metamask","_tokenSearch","_fuse","_stringUtils","_deprecated","_useI18nContext","getTokens","tokenList","values","createTokenSearchFuse","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","weight","TokenSearch","onSearch","error","searchClassName","useI18nContext","searchQuery","setSearchQuery","tokenSearchFuse","setTokenSearchFuse","useEffect","TextFieldSearch","placeholder","onChange","newSearchQuery","fuseSearchResult","search","filter","token","isEqualCaseInsensitive","handleSearch","target","autoFocus","autoComplete","clearButtonOnClick","clearButtonProps","Size","SM","_network","_networkToggle","IncomingTransactionToggle","wrapperRef","incomingTransactionsPreferences","networkConfigurations","setIncomingTransactionsPreferences","networkPreferences","setNetworkPreferences","generateIncomingNetworkPreferences","toggleSingleNetwork","chainId","ref","index","incomingTxnPreferences","forEach","network","isShowIncomingTransactions","isATestNetwork","TEST_CHAINS","includes","label","CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP","_toggleButton","NetworkToggle","_domain$charAt","networkName","networkDomainAndSubdomain","ETHERSCAN_SUPPORTED_NETWORKS","domain","upperCaseDomain","charAt","toUpperCase","slice","marginBottom","gap","spaceBetween","Sm","textDefault","ellipsis","primaryDefault","rel","marginLeft","onToggle","offLabel","onLabel","_loadingNetworkScreen","_loadingScreen","_time","_popover","_box","LoadingNetworkScreen","PureComponent","constructor","args","super","showErrorScreen","cancelCallTimeout","setTimeout","cancelCall","cancelTime","SECOND","loadingMessage","providerConfig","providerId","providerName","DEPRECATED_NETWORKS","NETWORK_TYPES","MAINNET","GOERLI","SEPOLIA","LINEA_GOERLI","LINEA_SEPOLIA","LINEA_MAINNET","message","showTryAgain","showNetworkDropdown","setProviderArgs","setActiveNetwork","onClose","window","clearTimeout","setState","centerTitle","Danger","IconSize","Xl","warningDefault","bodyLgMedium","margin","DISPLAY","FLEX","padding","ButtonSecondary","block","ButtonPrimary","renderConnectionFailureNotification","isNetworkLoading","prevProps","prevProvider","rollbackToPreviousProvider","showDeprecatedRpcUrlWarning","loadingMessageToRender","renderErrorScreenContent","renderDeprecatedRpcUrlWarning","getConnectingLabel","header","showLoadingSpinner","number","oneOfType","bool","actions","_selectors","_metamask","DEPRECATED_TEST_NET_CHAINIDS","appState","getProviderConfig","rpcUrl","ticker","RPC","providerChainId","isDeprecatedNetwork","isInfuraRpcUrl","URL","host","endsWith","desiredNetwork","getAllEnabledNetworks","getNetworkIdentifier","dispatch","toggleNetworkMenu","_metamaskTemplateRenderer","_sectionShape","_lodash","_safeComponentList","_extends","assign","bind","arguments","source","apply","getElement","section","element","Element","safeComponentList","Error","renderElement","propsAsComponents","propComponents","getPropComponents","children","MetaMaskTemplateRenderer","sections","components","entries","reduce","accumulator","component","isArray","Fragment","allChildren","child","hide","push","ValidChildren","memo","nextProps","isEqual","_chip","_definitionList","_truncatedDefinitionList","_typography","_metamaskTranslation","_networkDisplay","_textarea","_textField","_confirmationNetworkSwitch","_urlIcon","_actionableMessage","_multichain","_row","_snapDelineator","_copyable","_spinner","_snapUiMarkdown","_snapUiLink","_smartTransactionStatusPage","_snapUiIcon","_snapUiImage","_snapUiFileInput","_snapUiInput","_snapUiForm","_snapUiButton","_snapUiDropdown","_snapUiRadioGroup","_snapUiCheckbox","_snapUiTooltip","_snapUiCard","_snapUiAddress","_snapUiSelector","_snapUiFooterButton","_snapAccountSuccessMessage","_snapAccountErrorMessage","_createSnapAccount","_createNamedSnapAccount","_removeSnapAccount","_snapAccountRedirect","_snapAuthorshipHeader","ActionableMessage","AccountListItem","AvatarIcon","b","Chip","ConfirmationNetworkSwitch","DefinitionList","div","MetaMaskTranslation","NetworkDisplay","p","Popover","span","TextArea","TextField","Tooltip","TruncatedDefinitionList","Typography","SmartTransactionStatusPage","UrlIcon","Copyable","SnapDelineator","SnapUIMarkdown","SnapUILink","SnapUIIcon","SnapUIImage","BannerAlert","Spinner","ConfirmInfoRow","ConfirmInfoRowAddress","ConfirmInfoRowValueDouble","SnapUIFileInput","SnapUIInput","SnapUIButton","SnapUIForm","SnapUIDropdown","SnapUIRadioGroup","SnapUICheckbox","SnapUITooltip","SnapUICard","SnapUISelector","SnapUIAddress","SnapUIFooterButton","FormTextField","CreateSnapAccount","RemoveSnapAccount","CreateNamedSnapAccount","SnapAccountSuccessMessage","SnapAccountErrorMessage","SnapAuthorshipHeader","SnapAccountRedirect","SnapAccountCard","SectionShape","shape","arrayOf","translationKey","variables","variable","_variable$children","_variable$children2","_modal","_modalContent","ModalContent","description","Modal","headerText","onSubmit","submitType","submitText","submitDisabled","onCancel","cancelType","cancelText","contentClass","containerClass","hideFooter","testId","disabled","ConfirmDeleteNetwork","async","removeNetwork","onConfirm","hideModal","networkNickname","handleDelete","_redux","_withModalProps","_actions","_confirmDeleteNetwork","compose","ownProps","networks","getNetworkConfigurationsByChainId","_keyringApi","_blockExplorer","_identicon","ConfirmRemoveAccount","removeAccount","account","then","renderSelectedAccount","diameter","metadata","addressSummary","isEvmAccountType","accountLink","getMultichainAccountUrl","Accounts","link_type","action","block_explorer_domain","getURLHostName","global","platform","openTab","url","style","handleCancel","handleRemove","IMPORTED_ACCOUNTS","InternalAccountPropType","MultichainNetworkPropType","_confirmRemoveAccount","getMultichainNetwork","ConfirmResetAccount","resetAccount","handleReset","_confirmResetAccount","_useModalProps","useModalProps","turnOffProfileSyncing","handleHideModal","isOpen","ModalOverlay","ModalContentSize","Md","ModalHeader","ModalBody","as","ModalFooter","containerProps","stretch","submitButtonProps","ButtonSize","Lg","cancelButtonProps","_confirmTurnOffProfileSyncing","_reactRouterDom","_text","_routes","ConvertTokenToNFTModal","tokenAddress","history","useHistory","useDispatch","tokenAddedAsNFT","useSelector","getNfts","find","ignoreTokens","tokensToIgnore","dontShowLoadingIndicator","tokenId","pathname","ASSET_ROUTE","showImportNftsModal","ignoreErc20Token","CustomizeNonce","customNonceValue","nextNonce","updateCustomNonce","getNextNonce","customNonce","setCustomNonce","headingSm","ButtonIcon","iconName","Close","ButtonIconSize","ariaLabel","InlineFlex","CUSTOMIZE_NONCE","bodyMdBold","FiveSixths","OneSixth","min","toString","fullWidth","_customizeNonce","_loglevel","_bignumber","_transactionsControllerUtils","MAX_UNSIGNED_256_INT","pow","minus","EditApprovalPermission","customSpendLimit","customTokenAmount","selectedOptionIsUnlimited","renderModalContent","selectedAccount","tokenAmount","tokenSymbol","tokenBalance","origin","toPrecisionWithoutTrailingZeros","equals","validateSpendLimit","decimals","requiredMinimum","customSpendLimitNumber","debug","isNegative","maxTokenAmount","calcTokenAmount","greaterThan","lessThan","setCustomAmount","instanceOf","_editApprovalPermission","modalStateProps","modal","modalState","getSelectedInternalAccount","extraSheet","insertKeyframesRule","keyframes","Date","css","property","part","document","getElementsByTagName","appendChild","sheet","styleSheet","insertRule","cssRules","rules","animation","show","animationDuration","animationTimingFunction","showContentAnimation","opacity","hideContentAnimation","showBackdropAnimation","hideBackdropAnimation","endEvents","FadeModal","willHide","hidden","handle","endListener","eventListener","endEvent","eventName","removeEventListener","removeEndEventListener","addEventListener","addEndEventListener","closeOnClick","onHide","hideSource","onShow","addTransitionListener","content","enter","hasHidden","keyboard","closeOnEsc","keyCode","listenKeyboard","modalStyle","backdropStyle","animationName","contentStyle","backdrop","handleBackdropClick","leave","el","tabIndex","HideTokenConfirmationModal","hideToken","image","TokenRemoved","Tokens","sensitiveProperties","chain_id","token_contract_address","token_symbol","DEFAULT_ROUTE","getCurrentChainId","_hideTokenConfirmationModal","holdToRevealType","holdToRevealTitle","holdToRevealButton","holdToRevealContent","holdToRevealContent1","holdToRevealContent2","MainContent","Inline","ButtonVariant","Link","Inherit","NON_CUSTODIAL_WALLET","Container","_holdToRevealButton","_keyringSnapRemovalResultModal","_deprecated2","snapRemovalResult","getKeyringSnapRemovalResult","modalDialogProps","result","Confirmation","successDefault","errorDefault","snapName","_app","_isMobileView","_qrScanner","_transactionConfirmed","_convertTokenToNftModal","_fadeModal","_newAccountModal","_rejectTransactions","_transactionAlreadyConfirmed","_turnOnMetamaskNotifications","modalContainerBaseStyle","transform","border","borderRadius","boxShadow","modalContainerLaptopStyle","top","modalContainerMobileStyle","MODALS","NEW_ACCOUNT","contents","mobileModalStyle","left","right","laptopModalStyle","HIDE_TOKEN_CONFIRMATION","getEnvironmentType","ENVIRONMENT_TYPE_POPUP","CONFIRM_RESET_ACCOUNT","CONFIRM_REMOVE_ACCOUNT","CONVERT_TOKEN_TO_NFT","CONFIRM_DELETE_NETWORK","EDIT_APPROVAL_PERMISSION","height","TRANSACTION_CONFIRMED","disableBackdropClick","TRANSACTION_ALREADY_CONFIRMED","QR_SCANNER","REJECT_TRANSACTIONS","CONFIRM_TURN_OFF_PROFILE_SYNCING","TURN_ON_METAMASK_NOTIFICATIONS","DEFAULT","BACKDROPSTYLE","modalRef","UNSAFE_componentWillReceiveProps","active","hideWarning","customOnHideOpts","open","NewAccountModal","alias","newAccountNumber","onSave","onKeyPress","createAccount","newAccountAddress","addNewAccount","newAccountName","setAccountLabel","forceUpdateMetamaskState","stateProps","dispatchProps","onCreateNewAccount","_nicknamePopovers","_nicknamePopover","_updateNicknamePopover","_useMultichainSelector","SHOW_NICKNAME_POPOVER","ADD_NICKNAME_POPOVER","NicknamePopovers","popoverToDisplay","setPopoverToDisplay","addressBookEntryObject","getAddressBook","entry","recipientNickname","getInternalAccountByAddress","multichainNetwork","useMultichainSelector","explorerLink","onAdd","recipient","addToAddressBook","_browser","_usePrevious","_util2","_webcamUtils","_pageContainerFooter","_scanUtil","READY_STATE","ACCESSING_CAMERA","NEED_TO_ALLOW_ACCESS","READY","parseContent","split","parseScanContent","substring","toLowerCase","QRCodeScanner","qrCodeDetected","isReady","setIsReady","previousIsReady","usePrevious","errorData","setErrorData","isMounted","setIsMounted","codeReader","setCodeReader","permissionChecker","setPermissionChecker","checkPermissions","permissions","checkStatus","Promise","resolve","teardownCodeReader","cleanVideoSource","releaseAllStreams","stopAndClose","initCamera","BrowserQRCodeReader","listVideoInputDevices","decodeOnceFromVideoDevice","text","info","checkEnvironment","environmentReady","ENVIRONMENT_TYPE_FULLSCREEN","currentUrl","getURL","currentHash","hash","currentRoute","openExtensionInBrowser","tryAgain","msg","renderError","getQRScanMessage","data","matches","match","RejectTransactionsModal","unapprovedTxCount","isRequestType","originalTransactionId","transaction","getTransaction","getRpcPrefsForCurrentProvider","blockExplorerLink","_etherscanLink","getBlockExplorerLink","TransactionConfirmed","handleSubmit","Check","headingMd","listNotifications","_metamaskNotifications","useMetamaskNotificationsContext","isNotificationEnabled","_metamaskNotifications2","selectIsMetamaskNotificationsEnabled","isUpdatingMetamaskNotifications","getIsUpdatingMetamaskNotifications","isProfileSyncingEnabled","_profileSyncing","selectIsProfileSyncingEnabled","isLoading","setIsLoading","createNotifications","_useNotifications","useCreateNotifications","prevLoadingState","NotificationsActivationFlow","NotificationsActivated","is_profile_syncing_enabled","action_type","NOTIFICATIONS_ROUTE","privacyLink","infoDefault","strongText","Bold","BorderRadius","MD","handleTurnOnNotifications","loading","_networkListItem","isPopUp","setShowMultiRpcModal","isClosedOnOutsideClick","isClosedOnEscapeKey","networkConfiguration","rpcEndpoints","_networkController","rpcEndpoint","defaultRpcEndpointIndex","isOpenTooltip","setIsOpenTooltip","referenceElement","setReferenceElement","EightTwelfths","ElevenTwelfths","bodySmMedium","anchorRef","Left","onMouseLeave","onMouseOver","PopoverPosition","Bottom","hasArrow","backgroundAlternative","bodyXsMedium","RpcEndpointType","Infura","replace","isAddingNewNetwork","isMultiRpcOnboarding","setEditedNetwork","_multipleNotifications","MultipleNotifications","showAll","childrenToRender","flipped","_name","initialSources","proposedNameOptions","savedName","savedSourceId","selectedSourceId","trackPetnamesEvent","additionalProperties","suggestedNameSources","Set","option","sourceId","petname_category","suggested_names_sources","Petnames","trackPetnamesSaveEvent","petnameSource","isDeleted","isUpdated","isCreated","PetnameDeleted","petname_previous_source","PetnameUpdated","petname_source","PetnameCreated","trackPetnamesOpenEvent","PetnameModalOpened","has_petname","savedPetname","_useName","useName","displayName","hasPetname","hasSavedPetname","_useDisplayName","useDisplayName","nameSources","getNameSources","setName","openMetricSent","setOpenMetricSent","setSelectedSourceId","selectedSourceName","setSelectedSourceName","isRecognizedUnsaved","formattedValue","_nameController","NameType","ETHEREUM_ADDRESS","_ethereumjsUtil","toChecksumAddress","formatValue","proposedNames","updateInterval","setInitialSources","reset","clearInterval","update","updateProposedNames","onlyUpdateAfterDelay","variation","proposedNamesResult","proposedNamesState","resultSources","_proposedNamesResult$","stateSources","_proposedNamesResult$2","_proposedNamesState$s","sort","getInitialSources","setInterval","UPDATE_DELAY","useProposedNames","copiedAddress","handleCopyAddress","_useCopyToClipboard","useCopyToClipboard","useMemo","proposedNameEntries","sourceIds","options","_proposedNameEntries$","_proposedNameEntries$2","proposedName","primaryLabel","secondaryLabel","getProviderLabel","flat","localeCompare","generateComboOptions","_metrics","usePetnamesMetrics","handleSaveClick","handleClose","handleNameChange","newName","handleProposedNameClick","handleCopyClick","instructions","disableEdit","internal","endAccessory","CopySuccess","Copy","iconMuted","Label","flexStart","_formComboField","hideDropdownIfNoOptions","onOptionClick","Primary","startIconName","Save","LOCALIZED_PROVIDERS","_nameSources$sourceId","_nameDetails","Name","preferContractSymbol","modalOpen","setModalOpen","PetnameDisplayed","handleClick","handleModalClose","shortenAddress","hasDisplayName","name__saved","name__recognized_unsaved","name__missing","Question","_networkAccountBalanceHeader","_iconWithFallback","NetworkAccountBalanceHeader","accountName","accountBalance","tokenName","accountAddress","networkIcon","networkIconWrapperClass","icon","flexEnd","align","End","getCurrentNetwork","PickerNetwork","labelProps","iconProps","avatarNetworkProps","borderWidth","borderColor","BorderColor","borderMuted","_permissionCell","_menu","_permissions","PermissionCellOptions","snapId","permissionName","showOptions","setShowOptions","showDetails","setShowDetails","isRevokable","DynamicSnapPermissions","MoreVertical","Menu","anchorElement","MenuItem","whiteSpace","revokeDynamicSnapPermissions","_avatarGroup","PermissionCellStatus","revoked","approved","dateApproved","accounts","renderAccountsGroup","html","avatarValue","AvatarAccount","AvatarAccountSize","backgroundDefault","bodyMdMedium","avatarName","AvatarGroup","limit","members","avatarType","AvatarType","ACCOUNT","AvatarTokenSize","Min","formatDate","_permissionCellOptions","_permissionCellStatus","PermissionCell","avatarIcon","hideStatus","permissionValue","_avatarIcon$props","infoIcon","infoIconColor","iconColor","iconBackgroundColor","Color","warningMuted","permissionIcon","networksInfo","getRequestingNetworkInfo","AvatarIconSize","Wrap","any","_permissionConnectHeader","PermissionConnectHeader","rawOrigin","hostname","join","transformOriginToTitle","AvatarFavicon","AvatarBase","getAvatarFallbackLetter","overflow","_permissionPageContainer","_permissionPageContainerContent","_permissionsConnectPermissionList","PermissionPageContainerContent","selectedPermissions","selectedAccounts","subjectMetadata","XL","subjectName","subjectType","extensionId","_snapsRpcMethods","_permissionController","_pageContainer","_permissionsConnectFooter","_permissions2","_snapPrivacyWarning","_permissions3","PermissionPageContainer","request","rejectPermissionsRequest","_request$permissions","_request","approvePermissionsRequest","eth_accounts","approvedAccounts","permittedChains","approvedChainIds","caveats","caveat","getRequestedPermissions","PermissionNames","goBack","_request$diff","diff","permissionDiffMap","acc","RestrictedMethods","wallet_snap","getDedupedSnapPermissions","_request$permissions2","currentPermissions","snapKeys","getDedupedSnaps","WALLET_SNAP_PERMISSION_KEY","SnapCaveatType","SnapIds","caveatValue","showSnapsPrivacyWarning","isShowingSnapsPrivacyWarning","componentDidMount","Auth","legacy_event","snapsInstallPrivacyWarningShown","connectPath","requestMetadata","targetSubjectMetadata","allAccountsSelected","requestedPermissions","setIsShowingSnapsPrivacyWarning","confirmSnapsPrivacyWarning","setSnapsInstallPrivacyWarningShownStatus","footerLeftActionText","onAccepted","onCanceled","SubjectType","Snap","PageContainerFooter","footerClassName","cancelButtonType","onLeftFooterClick","buttonSizeLarge","containsEthPermissionsAndNonEvmAccount","_ownProps$request$met","getPermissions","allInternalAccounts","getInternalAccounts","allInternalAccountsSelected","PermissionsConnectFooter","ButtonLinkSize","USER_GUIDE_DAPPS","_permissionsConnectHeader","_siteOrigin","PermissionsConnectHeader","renderHeaderIcon","siteOrigin","leftIcon","rightIcon","chip","iconSrc","boxProps","headerTitle","FLEX_DIRECTION","COLUMN","_permission","PermissionsConnectPermissionList","snapsMetadata","getSnapsMetadata","getWeightedPermissions","getSubjectName","getSnapName","permission","restrictNetworkSwitching","getDescriptionNode","_bcUr","_enhancedReader","BaseReader","isReadingWallet","handleSuccess","setErrorTitle","ready","setReady","setError","urDecoder","setURDecoder","URDecoder","progress","setProgress","mounted","handleScan","receivePart","estimatedPercentComplete","isComplete","resultUR","catch","submitButtonType","Math","floor","renderVideo","_library","EnhancedReader","canplay","setCanplay","Map","DecodeHintType","POSSIBLE_FORMATS","BarcodeFormat","QR_CODE","delayBetweenScanAttempts","MILLISECOND","delayBetweenScanSuccess","videoElem","getElementById","canplayListener","promise","decodeFromVideoDevice","getText","controls","stop","_qrHardwarePopover","_ethRpcErrors","_qrHardwareWalletImporter","_qrHardwareSignRequest","_sign$request","qrHardware","getCurrentQRHardwareState","sync","sign","showWalletImporter","reading","showSignRequest","showPopover","errorTitle","txData","confirmTransaction","_txData","requestId","walletImporterCancel","cancelSyncQRHardware","signRequestCancel","rejectPendingApproval","serializeError","ethErrors","provider","userRejectedRequest","cancelTx","cancelQRHardwareSignRequest","_title","_qrcode","Player","cbor","toRead","urEncoder","UREncoder","UR","Buffer","from","currentQRCode","setCurrentQRCode","nextPart","_player","_reader","QRHardwareSignRequest","status","setStatus","payload","renderPlayer","submitQRHardwareSignature","_bcUrRegistryEth","uuid","_baseReader","Reader","ur","buffer","ETHSignature","fromCBOR","getRequestId","signId","stringify","QRHardwareWalletImporter","submitQRHardwareCryptoHDKey","submitQRHardwareCryptoAccount","_recoveryPhraseReminder","RecoveryPhraseReminder","hasBackedUp","INLINE_BLOCK","ONBOARDING_UNLOCK_ROUTE","fontSize","BLOCK_SIZES","TWO_FIFTHS","_revealSRPModal","RevealSRPModal","setSecretRecoveryPhrase","password","setPassword","seedPhrase","getSeedPhrase","_password","preventDefault","_showMore","_useTimeout","sensitive","handleCopy","isVisible","setIsVisible","isClicked","setIsClicked","startTimeout","useTimeout","handleVisibilityClick","clicked","visible","errorMuted","LG","EyeSlash","Eye","errorAlternative","iconAlternative","overflowWrap","OverflowWrap","Anywhere","ShowMore","buttonBackground","_insightWarnings","_snapUiRenderer","_snaps","InsightWarnings","warnings","defaultWarningState","warningState","warning","idx","setWarningState","setIsChecked","Warnings","lastWarningIdx","interfaceId","SnapUIRenderer","delineatorType","DelineatorType","Warning","newState","nextSnapState","willClose","handleWarningClick","isCollapsable","isCollapsed","childrenWrapperProps","inherit","InsightWarningLanguage","noun","imperative","stripHttpSchemes","ButtonSecondarySize","Half","Secondary","ButtonPrimarySize","danger","oneOf","InstallError","headingLg","startAccessory","severity","Severity","_keyringSnapRemovalWarning","_hexstringUtils","KeyringAccountListItem","snapUrl","borderDefault","TenTwelfths","textMuted","toChecksumHexAddress","Export","snap","keyringAccounts","onBack","showConfirmation","setShowConfirmation","confirmedRemoval","setConfirmedRemoval","confirmationInput","setConfirmationInput","BannerAlertSeverity","_infoTooltip","contentText","_keyringAccountListItem","getAccountLink","manifest","onPaste","inputProps","_useIsOverflowing","contentRef","isOverflowing","setIsOpen","shouldDisplayButton","maxHeight","bottom","background","_snapAuthorshipExpanded","_snapsUtils","_useOriginMetadata","_snapExternalPill","_useSafeWebsite","SnapAuthorshipExpanded","snapPrefix","getSnapPrefix","packageName","stripSnapPrefix","isNPM","versionPath","version","snapRegistryData","getSnapRegistryData","website","safeWebsite","useSafeWebsite","versionHistory","installInfo","installOrigin","useOriginMetadata","borderLeft","BorderStyle","none","borderRight","borderTop","maxWidth","interactive","enabled","disableSnap","enableSnap","date","_snapMetadataModal","_snapIcon","showInfo","isModalOpen","setIsModalOpen","getSnapMetadata","minHeight","zIndex","SnapMetadataModal","SnapIcon","avatarSize","_snapAuthorshipPill","pill","SnapConnectCell","_pulseLoader","disablePadding","isError","borderStyle","solid","borderBottomWidth","Snaps","infoInverse","getDelineatorTitle","ArrowDown","ArrowUp","None","flexGrow","_snapHomeMenu","SnapHomeMenu","isSettingsAvailable","onSettingsClick","onRemoveClick","menuReferenceElement","setMenuReferenceElement","isMenuOpen","setIsMenuOpen","isSnapMetadataModalOpen","setIsSnapMetadataModalOpen","handleMenuClick","menuItem","closeMenu","BottomEnd","role","PopoverRole","Dialog","preventOverflow","offset","onClickOutside","onPressEscKey","_useSnapHome","SnapHomeRenderer","unapprovedTemplatedConfirmations","getMemoizedUnapprovedTemplatedConfirmations","unapprovedConfirmations","getMemoizedUnapprovedConfirmations","useSnapHome","deleteInterface","templatedSnapApproval","approval","snapApproval","CONFIRMATION_V_NEXT_ROUTE","CONFIRM_TRANSACTION_ROUTE","overflowY","useDelineator","useFooter","contentBackgroundColor","setLoading","setData","cancelled","newData","handleSnapRequest","handler","jsonrpc","method","err","fetchPage","getTargetSubjectMetadata","fallbackIcon","SnapInsight","trackInsightSnapUsage","trackInsightUsage","hasNoData","Insights","_snapInstallWarning","SnapInstallWarning","userAgree","setUserAgree","constructWarningPermissionCell","permissionWarnings","warningElementComponentArray","warningMessageSubject","firstWarningSubject","secondWarningSubject","Normal","constructWarningElementComponentArray","Key","criticalPermissions","bip32PublicKeyPermissionWarnings","bip32bip44EntropyPermissionWarnings","infoMuted","_snapLegacyAuthorshipHeader","SnapLegacyAuthorshipHeader","_snapLinkWarning","SnapLinkWarning","parsedUrl","urlParts","_snapListItem","SnapListItem","showUpdateDot","FullCircle","getSnap","isSnapRequesting","isSnapId","_snapPermissionAdapter","_snapPermissionCell","SnapPermissionAdapter","targetSubjectsMetadata","connectionSubjectMetadata","connection","weightThreshold","SnapPermissionCell","_permission$permissio","createSnapConnectionLabel","createSnapConnectionDescription","faviconUrl","permissionSubject","AvatarFaviconSize","AvatarBaseSize","connectionName","_snapPermissionsList","SnapPermissionsList","connections","showAllPermissions","onShowAllPermissions","combinedPermissions","connection_permission","getMultipleTargetsSubjectMetadata","weightedPermissions","setShowAll","PermissionsAbstractionThreshold","filteredPermissions","getFilteredSnapPermissions","PermissionWeightThreshold","snapInstall","MinPermissionAbstractionDisplayCount","_useScrollRequired","_terms","SnapPrivacyWarning","isScrollable","isScrolledToBottom","scrollToBottom","onScroll","useScrollRequired","TERMS_OF_USE_LINK","Arrow2Down","primaryInverse","cursor","_snapRemoveWarning","SnapRemoveWarning","BUTTON_VARIANT","SECONDARY","BUTTON_SIZES","_utils","_blockieIdenticon","_jazzicon","parsed","isHexString","parseCaipAccountId","useBlockie","getUseBlockie","transformedAddress","chain","namespace","shortenedAddress","_snapsSdk","COLORS","primary","destructive","handleEvent","useSnapInterfaceContext","ButtonType","UserInputEventType","ButtonClickEvent","extra","Right","fieldLabel","form","handleInputChange","getValue","initialValue","setValue","handleChange","HelpText","HelpTextSeverity","_dropdown","selectedOption","newValue","accept","compact","helpText","handleFileChange","setActive","_ref$current","click","_event$target$files","file","files","footer","Upload","onDragOver","onDragLeave","onDrop","_event$dataTransfer","dataTransfer","isSnapAction","hideSnapBranding","getHideSnapBranding","brandedButtonVariant","buttonVariant","FormSubmitEvent","_icon","encodeURIComponent","_reactMarkdown","Paragraph","rest","markdown","redirectUrl","setRedirectUrl","allowedElements","bold","params","mapTextToTemplate","getJsxChildren","generateJustifyContent","alignment","spaceAround","box","mapToTemplate","direction","button","card","checkbox","_footer","container","promptLegacyProps","pop","templateChildren","inputValue","onInputChange","maxLength","DEFAULT_FOOTER","copyable","divider","dropdown","_radioGroup","_checkbox","_selector","field","primaryChildIndex","getPrimaryChildElementIndex","getRightAccessory","accessoryIndex","leftAccessoryMapped","getLeftAccessory","rightAccessoryIndex","rightAccessoryMapped","textFieldProps","radioGroup","selector","selectorMapped","fileInput","defaultButtons","getDefaultButtons","footerChildren","_buttonMapped$props","buttonMapped","unshift","heading","ICON_NAMES","getIconColor","_heading","_divider","_image","_address","_fileInput","_form","_input","_bold","_italic","_link","_field","_value","_card","_container","_section","COMPONENT_MAPPING","Heading","Divider","spinner","Image","row","Address","FileInput","Form","Input","Italic","italic","link","Field","Dropdown","RadioGroup","Value","tooltip","Card","Footer","Selector","Section","optionComponents","getTextColor","_jsx","_snaps2","SnapUIRendererComponent","Content","isPrompt","interfaceState","getMemoizedInterface","oldState","rawContent","initialState","SnapInterfaceContextProvider","_sha","_he","_components","generateHash","memoize","hasChildren","getChildrenForHash","remove0x","bytesToHex","sha256","JSON","elementKey","count","generateKey","elements","unescape","FIELD_ELEMENT_TYPES","findIndex","c","SelectorItem","onSelect","ButtonBase","selectedOptionValue","setSelectedOption","handleSelect","endIconName","endIconProps","_snapUpdateAlert","SnapUpdateAlert","onUpdateClick","bannerAlertProps","actionButtonLabel","actionButtonOnClick","actionButtonProps","Download","_preloaderIcon","SnapExternalPill","_updateSnapPermissionList","UpdateSnapPermissionList","approvedPermissions","revokedPermissions","newPermissions","approvedConnections","revokedConnections","newConnections","approvedCombinedPermissions","revokedCombinedPermissions","newCombinedPermissions","newWeightedPermissions","revokedWeightedPermissions","approvedWeightedPermissions","totalNewAndRevokedPermissions","minApprovedPermissionsToShow","max","filteredApprovedWeightedPermissions","snapUpdateApprovedPermissions","_srpInput","parseSecretRecoveryPhrase","_trim$toLowerCase$mat","trim","_hdnode","_showHideToggle","_parseSecretRecoveryPhrase","defaultNumberOfWords","hasUpperCase","draftSrp","SrpInput","srpText","srpError","setSrpError","pasteFailed","setPasteFailed","setDraftSrp","showSrp","setShowSrp","numberOfWords","setNumberOfWords","onSrpChange","newDraftSrp","newSrpError","joinedDraftSrp","some","word","isValidMnemonic","toggleShowSrp","currentShowSrp","newShowSrp","onSrpWordChange","newWord","newSrp","onSrpPaste","rawSrp","newNumberOfWords","concat","clearClipboard","numberOfWordsOptions","descriptionProps","newSelectedOption","parseInt","isNaN","clipboardData","getData","ariaLabelHidden","ariaLabelShown","shown","moreContent","buttons","btn","_QuizContent","stage","setStage","_types","QuizStage","introduction","stages","questionOne","openSupportArticle","wrongAnswerQuestionOne","rightAnswerQuestionOne","rightAnswerIcon","questionTwo","wrongAnswerIcon","rightAnswerQuestionTwo","wrongAnswerQuestionTwo","REVEAL_SEED_ROUTE","trackEventSrp","KeyExportSelected","quizContent","OneTwelfth","PASSWORD_AND_SRP_ARTICLE","_SRPQuiz","_stepProgressBar","threeStepStages","PASSWORD_CREATE","RECOVERY_PHRASE_VIDEO","RECOVERY_PHRASE_REVIEW","RECOVERY_PHRASE_CONFIRM","ONBOARDING_COMPLETE","twoStepStages","ThreeStepProgressBar","complete","capitalize","TwoStepProgressBar","FULL","_tabBar","TabBar","tabs","isActive","Block","ArrowRight","_termsOfUsePopup"],"mappings":"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","file":"../metamask/ui-3.js","sourcesContent":["import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useContext, useRef, useState } from 'react';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventKeyType,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  AlignItems,\n  BlockSize,\n  Display,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\nimport { Box, Button } from '../../component-library';\n\nconst radius = 14;\nconst strokeWidth = 2;\nconst radiusWithStroke = radius - strokeWidth / 2;\n\nexport default function HoldToRevealButton({ buttonText, onLongPressed }) {\n  const t = useContext(I18nContext);\n  const isLongPressing = useRef(false);\n  const [isUnlocking, setIsUnlocking] = useState(false);\n  const [hasTriggeredUnlock, setHasTriggeredUnlock] = useState(false);\n  const trackEvent = useContext(MetaMetricsContext);\n\n  /**\n   * Prevent animation events from propogating up\n   *\n   * @param e - Native animation event - React.AnimationEvent<HTMLDivElement>\n   */\n  const preventPropogation = (e) => {\n    e.stopPropagation();\n  };\n\n  /**\n   * Event for mouse click down\n   */\n  const onMouseDown = () => {\n    isLongPressing.current = true;\n    trackEvent({\n      category: MetaMetricsEventCategory.Keys,\n      event: MetaMetricsEventName.SrpHoldToRevealClickStarted,\n      properties: {\n        key_type: MetaMetricsEventKeyType.Srp,\n      },\n    });\n  };\n\n  /**\n   * Event for mouse click up\n   */\n  const onMouseUp = () => {\n    isLongPressing.current = false;\n  };\n\n  /**\n   * 1. Progress cirle completed. Begin next animation phase (Shrink halo and show unlocked padlock)\n   */\n  const onProgressComplete = () => {\n    isLongPressing.current && setIsUnlocking(true);\n  };\n\n  /**\n   * 2. Trigger onLongPressed callback. Begin next animation phase (Shrink unlocked padlock and fade in original content)\n   *\n   * @param e - Native animation event - React.AnimationEvent<HTMLDivElement>\n   */\n  const triggerOnLongPressed = useCallback(\n    (e) => {\n      trackEvent({\n        category: MetaMetricsEventCategory.Keys,\n        event: MetaMetricsEventName.SrpHoldToRevealCompleted,\n        properties: {\n          key_type: MetaMetricsEventKeyType.Srp,\n        },\n      });\n      trackEvent({\n        category: MetaMetricsEventCategory.Keys,\n        event: MetaMetricsEventName.SrpRevealViewed,\n        properties: {\n          key_type: MetaMetricsEventKeyType.Srp,\n        },\n      });\n      onLongPressed();\n      setHasTriggeredUnlock(true);\n      preventPropogation(e);\n    },\n    [onLongPressed, trackEvent],\n  );\n\n  /**\n   * 3. Reset animation states\n   */\n  const resetAnimationStates = () => {\n    setIsUnlocking(false);\n    setHasTriggeredUnlock(false);\n  };\n\n  const renderPreCompleteContent = useCallback(() => {\n    return (\n      <Box\n        className={classnames('hold-to-reveal-button__absolute-fill', {\n          'hold-to-reveal-button__absolute-fill': isUnlocking,\n          'hold-to-reveal-button__main-icon-show': hasTriggeredUnlock,\n        })}\n      >\n        <Box className=\"hold-to-reveal-button__absolute-fill\">\n          <svg className=\"hold-to-reveal-button__circle-svg\">\n            <circle\n              className=\"hold-to-reveal-button__circle-background\"\n              cx={radius}\n              cy={radius}\n              r={radiusWithStroke}\n            />\n          </svg>\n        </Box>\n        <Box className=\"hold-to-reveal-button__absolute-fill\">\n          <svg className=\"hold-to-reveal-button__circle-svg\">\n            <circle\n              aria-label={t('holdToRevealLockedLabel')}\n              onTransitionEnd={onProgressComplete}\n              className=\"hold-to-reveal-button__circle-foreground\"\n              cx={radius}\n              cy={radius}\n              r={radiusWithStroke}\n            />\n          </svg>\n        </Box>\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          justifyContent={JustifyContent.center}\n          className=\"hold-to-reveal-button__lock-icon-container\"\n        >\n          <img\n            src=\"images/lock-icon.svg\"\n            alt={t('padlock')}\n            className=\"hold-to-reveal-button__lock-icon\"\n          />\n        </Box>\n      </Box>\n    );\n  }, [isUnlocking, hasTriggeredUnlock, t]);\n\n  const renderPostCompleteContent = useCallback(() => {\n    return isUnlocking ? (\n      <div\n        className={classnames('hold-to-reveal-button__absolute-fill', {\n          'hold-to-reveal-button__unlock-icon-hide': hasTriggeredUnlock,\n        })}\n        onAnimationEnd={resetAnimationStates}\n      >\n        <div\n          onAnimationEnd={preventPropogation}\n          className=\"hold-to-reveal-button__absolute-fill hold-to-reveal-button__circle-static-outer-container\"\n        >\n          <svg className=\"hold-to-reveal-button__circle-svg\">\n            <circle\n              className=\"hold-to-reveal-button__circle-static-outer\"\n              cx={14}\n              cy={14}\n              r={14}\n            />\n          </svg>\n        </div>\n        <div\n          onAnimationEnd={preventPropogation}\n          className=\"hold-to-reveal-button__absolute-fill hold-to-reveal-button__circle-static-inner-container\"\n        >\n          <svg className=\"hold-to-reveal-button__circle-svg\">\n            <circle\n              className=\"hold-to-reveal-button__circle-static-inner\"\n              cx={14}\n              cy={14}\n              r={12}\n            />\n          </svg>\n        </div>\n        <div\n          aria-label={t('holdToRevealUnlockedLabel')}\n          className=\"hold-to-reveal-button__unlock-icon-container\"\n          onAnimationEnd={triggerOnLongPressed}\n        >\n          <img\n            src=\"images/unlock-icon.svg\"\n            alt={t('padlock')}\n            className=\"hold-to-reveal-button__unlock-icon\"\n          />\n        </div>\n      </div>\n    ) : null;\n  }, [isUnlocking, hasTriggeredUnlock, triggerOnLongPressed, t]);\n\n  return (\n    <Button\n      width={BlockSize.Full}\n      onPointerDown={onMouseDown} // allows for touch and mouse events\n      onPointerUp={onMouseUp} // allows for touch and mouse events\n      className=\"hold-to-reveal-button__button-hold\"\n      textProps={{ display: Display.Flex, alignItems: AlignItems.center }}\n    >\n      <Box className=\"hold-to-reveal-button__icon-container\" marginRight={2}>\n        {renderPreCompleteContent()}\n        {renderPostCompleteContent()}\n      </Box>\n      {buttonText}\n    </Button>\n  );\n}\n\nHoldToRevealButton.propTypes = {\n  /**\n   * Text to be displayed on the button\n   */\n  buttonText: PropTypes.string.isRequired,\n  /**\n   * Function to be called after the animation is finished\n   */\n  onLongPressed: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from '../../ui/button';\nimport Checkbox from '../../ui/check-box';\nimport Tooltip from '../../ui/tooltip';\nimport { Icon, IconName } from '../../component-library';\nimport { IconColor } from '../../../helpers/constants/design-system';\n\nconst HomeNotification = ({\n  acceptText,\n  checkboxText,\n  checkboxTooltipText,\n  classNames = [],\n  descriptionText,\n  ignoreText,\n  infoText,\n  onAccept,\n  onIgnore,\n}) => {\n  const [checkboxState, setCheckBoxState] = useState(false);\n\n  const checkboxElement = checkboxText && (\n    <Checkbox\n      id=\"homeNotification_checkbox\"\n      checked={checkboxState}\n      className=\"home-notification__checkbox\"\n      onClick={() => setCheckBoxState((checked) => !checked)}\n    />\n  );\n\n  return (\n    <div className={classnames('home-notification', ...classNames)}>\n      <div className=\"home-notification__content\">\n        <div className=\"home-notification__content-container\">\n          <div className=\"home-notification__text\">{descriptionText}</div>\n        </div>\n        {infoText ? (\n          <Tooltip\n            position=\"top\"\n            title={infoText}\n            wrapperClassName=\"home-notification__tooltip-wrapper\"\n          >\n            <Icon name={IconName.Info} color={IconColor.iconDefault} />\n          </Tooltip>\n        ) : null}\n      </div>\n      <div className=\"home-notification__buttons\">\n        {onAccept && acceptText ? (\n          <Button\n            type=\"primary\"\n            className=\"home-notification__accept-button\"\n            onClick={onAccept}\n          >\n            {acceptText}\n          </Button>\n        ) : null}\n        {onIgnore && ignoreText ? (\n          <Button\n            type=\"secondary\"\n            className=\"home-notification__ignore-button\"\n            // Some onIgnore handlers use the checkboxState to determine whether\n            // to disable the notification\n            onClick={() => onIgnore(checkboxState)}\n          >\n            {ignoreText}\n          </Button>\n        ) : null}\n        {checkboxText ? (\n          <div className=\"home-notification__checkbox-wrapper\">\n            {checkboxTooltipText ? (\n              <Tooltip\n                position=\"top\"\n                title={checkboxTooltipText}\n                wrapperClassName=\"home-notification__checkbox-label-tooltip\"\n              >\n                {checkboxElement}\n              </Tooltip>\n            ) : (\n              checkboxElement\n            )}\n            <label\n              className=\"home-notification__checkbox-label\"\n              htmlFor=\"homeNotification_checkbox\"\n            >\n              {checkboxText}\n            </label>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nHomeNotification.propTypes = {\n  /**\n   * The text for the \"Accept\" button. This must be accompanied by the `onAccept` prop.\n   *\n   * The \"Accept\" button is only rendered if this prop is set.\n   */\n  acceptText: PropTypes.node,\n  /**\n   * The text to display alongside the checkbox.\n   *\n   * The checkbox state is passed to the `onIgnore` handler, so this should only be used if the `onIgnore` prop is set.\n   *\n   * The checkbox is only rendered if this prop is set.\n   */\n  checkboxText: PropTypes.node,\n  /**\n   * The text to display in the checkbox tooltip.\n   *\n   * The tooltip is only rendered if this prop is set.\n   */\n  checkboxTooltipText: PropTypes.node,\n  /**\n   * Custom class names.\n   */\n  classNames: PropTypes.array,\n  /**\n   * The notification description.\n   */\n  descriptionText: PropTypes.node.isRequired,\n  /**\n   * The text for the \"Ignore\" button. This must be accompanied by the `onIgnore` prop.\n   *\n   * The \"Ignore\" button is only rendered if this prop is set.\n   */\n  ignoreText: PropTypes.node,\n  /**\n   * The text for the info icon tooltip in the top-right of the notification.\n   *\n   * The info-icon is only rendered if this prop is set.\n   */\n  infoText: PropTypes.node,\n  /**\n   * The handler for the \"Accept\" button. This must be accompanied by the `acceptText` prop.\n   */\n  onAccept: PropTypes.func,\n  /**\n   * The handler for the \"Ignore\" button. This must be accompanied by the `ignoreText` prop.\n   *\n   * If `checkboxText` is set, the checkbox state will be passed to this function as a boolean.\n   */\n  onIgnore: PropTypes.func,\n};\n\nexport default HomeNotification;\n","export { default } from './home-notification.component';\n","import TokenList from './token-list.container';\n\nexport default TokenList;\n","import TokenListPlaceholder from './token-list-placeholder.component';\n\nexport default TokenListPlaceholder;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ZENDESK_URLS from '../../../../../helpers/constants/zendesk-url';\nimport { ButtonLink, Text, Box } from '../../../../component-library';\nimport {\n  Display,\n  FlexDirection,\n  TextAlign,\n  TextColor,\n  AlignItems,\n} from '../../../../../helpers/constants/design-system';\n\nexport default class TokenListPlaceholder extends Component {\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  render() {\n    return (\n      <Box\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        flexDirection={FlexDirection.Column}\n        textAlign={TextAlign.Center}\n      >\n        <Text color={TextColor.textAlternative}>\n          {this.context.t('addAcquiredTokens')}\n        </Text>\n        <ButtonLink href={ZENDESK_URLS.ADD_CUSTOM_TOKENS} externalLink>\n          {this.context.t('learnMoreUpperCase')}\n        </ButtonLink>\n      </Box>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { checkExistingAddresses } from '../../../../helpers/utils/util';\nimport {\n  Box,\n  Text,\n  AvatarToken,\n  BadgeWrapper,\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Checkbox,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  Display,\n  TextColor,\n  TextVariant,\n  FontWeight,\n  FlexDirection,\n  FlexWrap,\n  BackgroundColor,\n} from '../../../../helpers/constants/design-system';\nimport TokenListPlaceholder from './token-list-placeholder';\n\nexport default class TokenList extends Component {\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  static propTypes = {\n    tokens: PropTypes.array,\n    results: PropTypes.array,\n    selectedTokens: PropTypes.object,\n    onToggleToken: PropTypes.func,\n    currentNetwork: PropTypes.object,\n    testNetworkBackgroundColor: PropTypes.object,\n  };\n\n  render() {\n    const {\n      results = [],\n      selectedTokens = {},\n\n      onToggleToken,\n      tokens = [],\n      currentNetwork,\n      testNetworkBackgroundColor,\n    } = this.props;\n\n    return (\n      <Box className=\"token-list\">\n        {results.length === 0 ? (\n          <Box\n            paddingLeft={4}\n            paddingRight={4}\n            className=\"token-list__empty-list\"\n          >\n            <TokenListPlaceholder />\n          </Box>\n        ) : (\n          <Box\n            className=\"token-list__tokens-container\"\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n          >\n            {Array(12)\n              .fill(undefined)\n              .map((_, i) => {\n                const { symbol, name, address } = results[i] || {};\n                const tokenAlreadyAdded = checkExistingAddresses(\n                  address,\n                  tokens,\n                );\n                const onClick = () =>\n                  !tokenAlreadyAdded && onToggleToken(results[i]);\n                return (\n                  Boolean(results[i]?.iconUrl || symbol || name) && (\n                    <Box\n                      key={address}\n                      display={Display.Flex}\n                      alignItems={AlignItems.center}\n                      flexDirection={FlexDirection.Row}\n                      flexWrap={FlexWrap.NoWrap}\n                      paddingLeft={4}\n                      paddingRight={4}\n                      paddingTop={2}\n                      paddingBottom={2}\n                      backgroundColor={\n                        selectedTokens[address]\n                          ? BackgroundColor.primaryMuted\n                          : BackgroundColor.transparent\n                      }\n                      className={classnames('token-list__token_component', {\n                        'token-list__token_component--disabled':\n                          tokenAlreadyAdded,\n                      })}\n                      onClick={onClick}\n                    >\n                      <Box\n                        display={Display.Flex}\n                        alignItems={AlignItems.center}\n                      >\n                        <Checkbox\n                          isChecked={\n                            selectedTokens[address] || tokenAlreadyAdded\n                          }\n                          marginRight={2}\n                          onClick={onClick}\n                        />\n\n                        <Box>\n                          <BadgeWrapper\n                            badge={\n                              <AvatarNetwork\n                                size={AvatarNetworkSize.Xs}\n                                name={currentNetwork?.nickname}\n                                src={currentNetwork?.rpcPrefs?.imageUrl}\n                                backgroundColor={testNetworkBackgroundColor}\n                                className=\"token-list__token_component__network-badge\"\n                              />\n                            }\n                            marginRight={4}\n                            marginTop={1}\n                          >\n                            <AvatarToken\n                              name={symbol}\n                              src={results[i]?.iconUrl}\n                            />\n                          </BadgeWrapper>\n                        </Box>\n                        <Box>\n                          <Text\n                            fontWeight={FontWeight.Medium}\n                            variant={TextVariant.bodyMd}\n                          >\n                            {name}\n                          </Text>\n                          <Text\n                            variant={TextVariant.bodySm}\n                            color={TextColor.textAlternative}\n                          >\n                            {symbol}\n                          </Text>\n                        </Box>\n                      </Box>\n                    </Box>\n                  )\n                );\n              })}\n          </Box>\n        )}\n      </Box>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport TokenList from './token-list.component';\n\nconst mapStateToProps = (state) => {\n  const { tokens } = state.metamask;\n  return {\n    tokens,\n  };\n};\n\nexport default connect(mapStateToProps)(TokenList);\n","import TokenSearch from './token-search.component';\n\nexport default TokenSearch;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Fuse from 'fuse.js';\nimport { isEqualCaseInsensitive } from '../../../../../shared/modules/string-utils';\nimport { TextFieldSearch } from '../../../component-library/text-field-search/deprecated';\nimport { BlockSize, Size } from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nconst getTokens = (tokenList) => Object.values(tokenList);\n\nconst createTokenSearchFuse = (tokenList) => {\n  return new Fuse(getTokens(tokenList), {\n    shouldSort: true,\n    threshold: 0.45,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 1,\n    keys: [\n      { name: 'name', weight: 0.5 },\n      { name: 'symbol', weight: 0.5 },\n    ],\n  });\n};\nexport default function TokenSearch({\n  onSearch,\n  error,\n  tokenList,\n  searchClassName,\n}) {\n  const t = useI18nContext();\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [tokenSearchFuse, setTokenSearchFuse] = useState(\n    createTokenSearchFuse(tokenList),\n  );\n\n  useEffect(() => {\n    setTokenSearchFuse(createTokenSearchFuse(tokenList));\n  }, [tokenList]);\n\n  const handleSearch = (newSearchQuery) => {\n    setSearchQuery(newSearchQuery);\n    const fuseSearchResult = tokenSearchFuse.search(newSearchQuery);\n    const addressSearchResult = getTokens(tokenList).filter((token) => {\n      return (\n        token.address &&\n        newSearchQuery &&\n        isEqualCaseInsensitive(token.address, newSearchQuery)\n      );\n    });\n    const results = [...addressSearchResult, ...fuseSearchResult];\n    onSearch({ newSearchQuery, results });\n  };\n\n  const clear = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <TextFieldSearch\n      className={searchClassName}\n      placeholder={t('searchTokens')}\n      value={searchQuery}\n      onChange={(e) => handleSearch(e.target.value)}\n      error={error}\n      autoFocus\n      autoComplete={false}\n      width={BlockSize.Full}\n      clearButtonOnClick={clear}\n      clearButtonProps={{\n        size: Size.SM,\n      }}\n    />\n  );\n}\n\nTokenSearch.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  error: PropTypes.object,\n  tokenList: PropTypes.object.isRequired,\n  searchClassName: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { NetworkConfiguration } from '@metamask/network-controller';\nimport { Hex } from '@metamask/utils';\nimport { I18nContext } from '../../../contexts/i18n';\n\nimport { Box, Text } from '../../component-library';\nimport {\n  TextVariant,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\nimport { PolymorphicRef } from '../../component-library/box';\nimport {\n  CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP,\n  TEST_CHAINS,\n} from '../../../../shared/constants/network';\nimport NetworkToggle from './network-toggle';\n\ntype IncomingTransactionToggleProps = {\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wrapperRef?: PolymorphicRef<any>;\n  incomingTransactionsPreferences: Record<string, boolean>;\n  networkConfigurations: Record<Hex, NetworkConfiguration>;\n  setIncomingTransactionsPreferences: (\n    chainId: string,\n    isAllEnabledValue: boolean,\n  ) => void;\n};\n\nconst IncomingTransactionToggle = ({\n  wrapperRef,\n  incomingTransactionsPreferences,\n  networkConfigurations,\n  setIncomingTransactionsPreferences,\n}: IncomingTransactionToggleProps) => {\n  const t = useContext(I18nContext);\n\n  const [networkPreferences, setNetworkPreferences] = useState(\n    generateIncomingNetworkPreferences(\n      incomingTransactionsPreferences,\n      networkConfigurations,\n    ),\n  );\n\n  useEffect(() => {\n    setNetworkPreferences(\n      generateIncomingNetworkPreferences(\n        incomingTransactionsPreferences,\n        networkConfigurations,\n      ),\n    );\n  }, [incomingTransactionsPreferences, networkConfigurations]);\n\n  const toggleSingleNetwork = (chainId: string, value: boolean): void => {\n    setIncomingTransactionsPreferences(chainId, value);\n  };\n\n  return (\n    <Box ref={wrapperRef} className=\"mm-incoming-transaction-toggle\">\n      <Text variant={TextVariant.bodyMd}>{t('showIncomingTransactions')}</Text>\n      <Text variant={TextVariant.bodySm} color={TextColor.textAlternative}>\n        {t('showIncomingTransactionsExplainer')}\n      </Text>\n      {Object.keys(networkPreferences).map((chainId, index) => {\n        return (\n          <NetworkToggle\n            key={index}\n            chainId={chainId}\n            networkPreferences={networkPreferences[chainId]}\n            toggleSingleNetwork={toggleSingleNetwork}\n          />\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default IncomingTransactionToggle;\n\nIncomingTransactionToggle.propTypes = {\n  wrapperRef: PropTypes.object,\n  incomingTransactionsPreferences: PropTypes.object.isRequired,\n  networkConfigurations: PropTypes.object.isRequired,\n  setIncomingTransactionsPreferences: PropTypes.func.isRequired,\n};\n\nfunction generateIncomingNetworkPreferences(\n  incomingTransactionsPreferences: Record<string, boolean>,\n  networkConfigurations: Record<Hex, NetworkConfiguration>,\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Record<string, any> {\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const incomingTxnPreferences: Record<string, any> = {};\n\n  Object.values(networkConfigurations).forEach((network) => {\n    incomingTxnPreferences[network.chainId] = {\n      isShowIncomingTransactions:\n        incomingTransactionsPreferences[network.chainId],\n      isATestNetwork: TEST_CHAINS.includes(\n        network.chainId as (typeof TEST_CHAINS)[number],\n      ),\n      label: network.name,\n      imageUrl:\n        CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[\n          network.chainId as keyof typeof CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP\n        ],\n    };\n  });\n\n  return incomingTxnPreferences;\n}\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { ETHERSCAN_SUPPORTED_NETWORKS } from '../../../../shared/constants/network';\nimport { I18nContext } from '../../../contexts/i18n';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Box,\n  Text,\n} from '../../component-library';\nimport ToggleButton from '../../ui/toggle-button';\nimport Tooltip from '../../ui/tooltip';\n\nconst MAXIMUM_CHARACTERS_WITHOUT_TOOLTIP = 20;\n\ntype NetworkPreferences = {\n  isShowIncomingTransactions: boolean;\n  label: string;\n  imageUrl: string;\n};\n\ntype NetworkToggleProps = {\n  networkPreferences: NetworkPreferences;\n  toggleSingleNetwork: (chainId: string, value: boolean) => void;\n  chainId: string;\n};\n\nconst NetworkToggle = ({\n  networkPreferences,\n  toggleSingleNetwork,\n  chainId,\n}: NetworkToggleProps) => {\n  const t = useContext(I18nContext);\n\n  const { isShowIncomingTransactions } = networkPreferences;\n\n  const networkName = networkPreferences.label;\n\n  type SupportedChainId = keyof typeof ETHERSCAN_SUPPORTED_NETWORKS;\n\n  const networkDomainAndSubdomain =\n    ETHERSCAN_SUPPORTED_NETWORKS?.[chainId as SupportedChainId];\n\n  const domain = networkDomainAndSubdomain?.domain;\n\n  const upperCaseDomain = domain?.charAt(0)?.toUpperCase() + domain?.slice(1);\n\n  return (\n    <Box\n      marginTop={6}\n      marginBottom={6}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      gap={4}\n      justifyContent={JustifyContent.spaceBetween}\n      data-testid={`network-toggle-${chainId}`}\n      className=\"network-toggle-wrapper\"\n    >\n      <Box\n        backgroundColor={BackgroundColor.transparent}\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        width={BlockSize.Full}\n        gap={4}\n        className=\"network-toggle-wrapper__overflow-container\"\n      >\n        <AvatarNetwork\n          size={AvatarNetworkSize.Sm}\n          src={networkPreferences.imageUrl}\n          name={networkName}\n        />\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          className=\"network-toggle-wrapper__overflow-container\"\n        >\n          {networkName.length > MAXIMUM_CHARACTERS_WITHOUT_TOOLTIP ? (\n            <Tooltip position=\"bottom\">\n              <Text\n                color={TextColor.textDefault}\n                backgroundColor={BackgroundColor.transparent}\n                variant={TextVariant.bodyMd}\n                ellipsis\n              >\n                {networkName}\n              </Text>\n            </Tooltip>\n          ) : (\n            <Text\n              color={TextColor.textDefault}\n              backgroundColor={BackgroundColor.transparent}\n              variant={TextVariant.bodyMd}\n              ellipsis\n            >\n              {networkName}\n            </Text>\n          )}\n\n          <Text\n            color={TextColor.primaryDefault}\n            backgroundColor={BackgroundColor.transparent}\n            variant={TextVariant.bodySm}\n            ellipsis\n          >\n            {\n              // For tests, we have localhost in the network list, but obviously\n              // there's no 3rd party API for incoming transactions for such\n              // Chain ID (0x539). We don't show any link, then.\n              domain && (\n                <a\n                  key={`network_${domain}_link`}\n                  href={`https://${domain}`}\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  {upperCaseDomain}\n                </a>\n              )\n            }\n          </Text>\n        </Box>\n      </Box>\n      <Box marginLeft=\"auto\">\n        <ToggleButton\n          value={isShowIncomingTransactions}\n          onToggle={(value) => toggleSingleNetwork(chainId, !value)}\n          offLabel={t('off')}\n          onLabel={t('on')}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default NetworkToggle;\n\nNetworkToggle.propTypes = {\n  chainId: PropTypes.string.isRequired,\n  networkPreferences: PropTypes.object.isRequired,\n  toggleSingleNetwork: PropTypes.func.isRequired,\n};\n","export { default } from './loading-network-screen.container';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport LoadingScreen from '../../ui/loading-screen';\nimport { SECOND } from '../../../../shared/constants/time';\nimport {\n  DEPRECATED_NETWORKS,\n  NETWORK_TYPES,\n} from '../../../../shared/constants/network';\nimport Popover from '../../ui/popover/popover.component';\nimport {\n  ButtonPrimary,\n  ButtonSecondary,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../component-library';\nimport {\n  DISPLAY,\n  IconColor,\n  TextAlign,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport Box from '../../ui/box/box';\n\nexport default class LoadingNetworkScreen extends PureComponent {\n  state = {\n    showErrorScreen: false,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  static propTypes = {\n    loadingMessage: PropTypes.string,\n    cancelTime: PropTypes.number,\n    providerConfig: PropTypes.object,\n    providerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    showNetworkDropdown: PropTypes.func,\n    setProviderArgs: PropTypes.array,\n    setActiveNetwork: PropTypes.func,\n    rollbackToPreviousProvider: PropTypes.func,\n    isNetworkLoading: PropTypes.bool,\n    showDeprecatedRpcUrlWarning: PropTypes.bool,\n  };\n\n  componentDidMount = () => {\n    this.cancelCallTimeout = setTimeout(\n      this.cancelCall,\n      this.props.cancelTime || SECOND * 15,\n    );\n  };\n\n  getConnectingLabel = function (loadingMessage) {\n    if (loadingMessage) {\n      return loadingMessage;\n    }\n    const { providerConfig, providerId } = this.props;\n\n    const providerName = providerConfig.type;\n    const { t } = this.context;\n\n    if (DEPRECATED_NETWORKS.includes(providerConfig.chainId)) {\n      const deprecatedNetworkName =\n        providerConfig.nickname || providerConfig.type;\n\n      return t('connectingToDeprecatedNetwork', [deprecatedNetworkName]);\n    }\n\n    switch (providerName) {\n      case NETWORK_TYPES.MAINNET:\n        return t('connectingToMainnet');\n      case NETWORK_TYPES.GOERLI:\n        return t('connectingToGoerli');\n      case NETWORK_TYPES.SEPOLIA:\n        return t('connectingToSepolia');\n      case NETWORK_TYPES.LINEA_GOERLI:\n        return t('connectingToLineaGoerli');\n      case NETWORK_TYPES.LINEA_SEPOLIA:\n        return t('connectingToLineaSepolia');\n      case NETWORK_TYPES.LINEA_MAINNET:\n        return t('connectingToLineaMainnet');\n      default:\n        return t('connectingTo', [providerId]);\n    }\n  };\n\n  renderConnectionFailureNotification = (message, showTryAgain = false) => {\n    const { showNetworkDropdown, setProviderArgs, setActiveNetwork } =\n      this.props;\n\n    return (\n      <Popover\n        onClose={() => {\n          window.clearTimeout(this.cancelCallTimeout);\n          this.setState({ showErrorScreen: false });\n        }}\n        centerTitle\n        title={\n          <Icon\n            name={IconName.Danger}\n            size={IconSize.Xl}\n            color={IconColor.warningDefault}\n          />\n        }\n      >\n        <Text\n          variant={TextVariant.bodyLgMedium}\n          textAlign={TextAlign.Center}\n          margin={[0, 4, 4, 4]}\n        >\n          {message}\n        </Text>\n        <Box display={DISPLAY.FLEX} padding={4} gap={2}>\n          <ButtonSecondary\n            onClick={() => {\n              window.clearTimeout(this.cancelCallTimeout);\n              this.setState({ showErrorScreen: false });\n              showNetworkDropdown();\n            }}\n            variant={TextVariant.bodySm}\n            block\n          >\n            {this.context.t('switchNetworks')}\n          </ButtonSecondary>\n          {showTryAgain ? (\n            <ButtonPrimary\n              onClick={() => {\n                this.setState({ showErrorScreen: false });\n                setActiveNetwork(...setProviderArgs);\n                window.clearTimeout(this.cancelCallTimeout);\n                this.cancelCallTimeout = setTimeout(\n                  this.cancelCall,\n                  this.props.cancelTime || SECOND * 15,\n                );\n              }}\n              variant={TextVariant.bodySm}\n              block\n            >\n              {this.context.t('tryAgain')}\n            </ButtonPrimary>\n          ) : null}\n        </Box>\n      </Popover>\n    );\n  };\n\n  renderDeprecatedRpcUrlWarning = () => {\n    return this.renderConnectionFailureNotification(\n      this.context.t('currentRpcUrlDeprecated'),\n      false,\n    );\n  };\n\n  renderErrorScreenContent = () => {\n    const { providerConfig } = this.props;\n    return this.renderConnectionFailureNotification(\n      this.context.t('networkSwitchConnectionError', [providerConfig.nickname]),\n      true,\n    );\n  };\n\n  cancelCall = () => {\n    const { isNetworkLoading } = this.props;\n\n    if (isNetworkLoading) {\n      this.setState({ showErrorScreen: true });\n    }\n  };\n\n  componentDidUpdate = (prevProps) => {\n    const { providerConfig } = this.props;\n    const { providerConfig: prevProvider } = prevProps;\n    if (providerConfig.type !== prevProvider.type) {\n      window.clearTimeout(this.cancelCallTimeout);\n      this.setState({ showErrorScreen: false });\n      this.cancelCallTimeout = setTimeout(\n        this.cancelCall,\n        this.props.cancelTime || SECOND * 15,\n      );\n    }\n  };\n\n  componentWillUnmount = () => {\n    window.clearTimeout(this.cancelCallTimeout);\n  };\n\n  render() {\n    const { rollbackToPreviousProvider, showDeprecatedRpcUrlWarning } =\n      this.props;\n\n    let loadingMessageToRender;\n    if (this.state.showErrorScreen) {\n      loadingMessageToRender = this.renderErrorScreenContent();\n    } else if (showDeprecatedRpcUrlWarning) {\n      loadingMessageToRender = this.renderDeprecatedRpcUrlWarning();\n    } else {\n      loadingMessageToRender = this.getConnectingLabel(\n        this.props.loadingMessage,\n      );\n    }\n\n    return (\n      <LoadingScreen\n        header={\n          <div\n            className=\"page-container__header-close\"\n            onClick={rollbackToPreviousProvider}\n          />\n        }\n        showLoadingSpinner={!this.state.showErrorScreen}\n        loadingMessage={loadingMessageToRender}\n      />\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { NETWORK_TYPES } from '../../../../shared/constants/network';\nimport * as actions from '../../../store/actions';\nimport {\n  getAllEnabledNetworks,\n  getNetworkIdentifier,\n  isNetworkLoading,\n} from '../../../selectors';\nimport { getProviderConfig } from '../../../ducks/metamask/metamask';\nimport LoadingNetworkScreen from './loading-network-screen.component';\n\nconst DEPRECATED_TEST_NET_CHAINIDS = ['0x3', '0x2a', '0x4'];\n\nconst mapStateToProps = (state) => {\n  const { loadingMessage } = state.appState;\n  const providerConfig = getProviderConfig(state);\n  const { rpcUrl, chainId, ticker, nickname, type } = providerConfig;\n\n  const setProviderArgs =\n    type === NETWORK_TYPES.RPC ? [rpcUrl, chainId, ticker, nickname] : [type];\n\n  const providerChainId = chainId;\n  const isDeprecatedNetwork =\n    DEPRECATED_TEST_NET_CHAINIDS.includes(providerChainId);\n  const isInfuraRpcUrl = rpcUrl && new URL(rpcUrl).host.endsWith('.infura.io');\n  const showDeprecatedRpcUrlWarning = isDeprecatedNetwork && isInfuraRpcUrl;\n\n  // Ensure we have a nickname to provide the user\n  // in case of connection error\n  let networkName = nickname;\n  if (networkName === undefined) {\n    const networks = getAllEnabledNetworks(state);\n    const desiredNetwork = networks[chainId];\n    if (desiredNetwork) {\n      networkName = desiredNetwork.name;\n    }\n  }\n\n  return {\n    isNetworkLoading: isNetworkLoading(state),\n    loadingMessage,\n    setProviderArgs,\n    providerConfig: {\n      ...providerConfig,\n      nickname: networkName,\n    },\n    providerId: getNetworkIdentifier(state),\n    showDeprecatedRpcUrlWarning,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveNetwork: (type) => {\n      dispatch(actions.setActiveNetwork(type));\n    },\n    rollbackToPreviousProvider: () =>\n      dispatch(actions.rollbackToPreviousProvider()),\n    showNetworkDropdown: () => {\n      return dispatch(actions.toggleNetworkMenu());\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoadingNetworkScreen);\n","export { default } from './metamask-template-renderer';\nexport { SectionShape } from './section-shape';\n","import React, { memo } from 'react';\nimport { isEqual } from 'lodash';\nimport { safeComponentList } from './safe-component-list';\nimport { ValidChildren } from './section-shape';\n\nfunction getElement(section) {\n  const { element } = section;\n  const Element = safeComponentList[element];\n  if (!Element) {\n    throw new Error(\n      `${element} is not in the safe component list for MetaMask template renderer`,\n    );\n  }\n  return Element;\n}\n\nfunction renderElement(element) {\n  const Element = getElement(element);\n  const propsAsComponents = element.propComponents\n    ? getPropComponents(element.propComponents)\n    : {};\n  return (\n    <Element {...element.props} {...propsAsComponents}>\n      {typeof element.children === 'object' ? (\n        <MetaMaskTemplateRenderer sections={element.children} />\n      ) : (\n        element?.children\n      )}\n    </Element>\n  );\n}\n\nfunction getPropComponents(components) {\n  return Object.entries(components).reduce((accumulator, [key, component]) => {\n    if (component) {\n      accumulator[key] = Array.isArray(component)\n        ? component.map(renderElement)\n        : renderElement(component);\n    }\n    return accumulator;\n  }, {});\n}\n\nconst MetaMaskTemplateRenderer = ({ sections }) => {\n  if (!sections) {\n    // If sections is null eject early by returning null\n    return null;\n  } else if (typeof sections === 'string') {\n    // React can render strings directly, so return the string\n    return sections;\n  } else if (\n    sections &&\n    typeof sections === 'object' &&\n    !Array.isArray(sections)\n  ) {\n    // If dealing with a single entry, then render a single object without key\n    return renderElement(sections);\n  }\n\n  // The last case is dealing with an array of objects\n  return (\n    <>\n      {sections.reduce((allChildren, child) => {\n        if (child === undefined || child?.hide === true) {\n          return allChildren;\n        }\n        if (typeof child === 'string') {\n          // React can render strings directly, so push them into the accumulator\n          allChildren.push(child);\n        } else {\n          // If the entry in array is not a string, then it must be a Section.\n          // Sections are handled by the main function, but must\n          // be provided a key when a part of an array.\n          if (!child.key) {\n            throw new Error(\n              'When using array syntax in MetaMask Template Language, you must specify a key for each child of the array',\n            );\n          }\n          if (typeof child?.children === 'object') {\n            // If this child has its own children, check if children is an\n            // object, and in that case use recursion to render.\n            allChildren.push(\n              <MetaMaskTemplateRenderer sections={child} key={child.key} />,\n            );\n          } else {\n            // Otherwise render the element.\n            const Element = getElement(child);\n            const propsAsComponents = child.propComponents\n              ? getPropComponents(child.propComponents)\n              : {};\n            allChildren.push(\n              <Element key={child.key} {...child.props} {...propsAsComponents}>\n                {child?.children}\n              </Element>,\n            );\n          }\n        }\n        return allChildren;\n      }, [])}\n    </>\n  );\n};\n\nMetaMaskTemplateRenderer.propTypes = {\n  sections: ValidChildren,\n};\n\nexport default memo(MetaMaskTemplateRenderer, (prevProps, nextProps) => {\n  return isEqual(prevProps.sections, nextProps.sections);\n});\n","import Button from '../../ui/button';\nimport Chip from '../../ui/chip';\nimport DefinitionList from '../../ui/definition-list';\nimport TruncatedDefinitionList from '../../ui/truncated-definition-list';\nimport Popover from '../../ui/popover';\nimport Typography from '../../ui/typography';\nimport Box from '../../ui/box';\nimport MetaMaskTranslation from '../metamask-translation';\nimport NetworkDisplay from '../network-display';\nimport TextArea from '../../ui/textarea/textarea';\nimport TextField from '../../ui/text-field';\nimport ConfirmationNetworkSwitch from '../../../pages/confirmations/confirmation/components/confirmation-network-switch';\nimport UrlIcon from '../../ui/url-icon';\nimport Tooltip from '../../ui/tooltip/tooltip';\nimport {\n  AvatarIcon,\n  FormTextField,\n  Text,\n  BannerAlert,\n} from '../../component-library';\nimport ActionableMessage from '../../ui/actionable-message/actionable-message';\nimport { AccountListItem } from '../../multichain';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowValueDouble,\n} from '../confirm/info/row';\nimport { SnapDelineator } from '../snaps/snap-delineator';\nimport { Copyable } from '../snaps/copyable';\nimport Spinner from '../../ui/spinner';\nimport { SnapUIMarkdown } from '../snaps/snap-ui-markdown';\nimport { SnapUILink } from '../snaps/snap-ui-link';\nimport { SmartTransactionStatusPage } from '../../../pages/smart-transactions/smart-transaction-status-page';\nimport { SnapUIIcon } from '../snaps/snap-ui-icon';\nimport { SnapUIImage } from '../snaps/snap-ui-image';\nimport { SnapUIFileInput } from '../snaps/snap-ui-file-input';\nimport { SnapUIInput } from '../snaps/snap-ui-input';\nimport { SnapUIForm } from '../snaps/snap-ui-form';\nimport { SnapUIButton } from '../snaps/snap-ui-button';\nimport { SnapUIDropdown } from '../snaps/snap-ui-dropdown';\nimport { SnapUIRadioGroup } from '../snaps/snap-ui-radio-group';\nimport { SnapUICheckbox } from '../snaps/snap-ui-checkbox';\nimport { SnapUITooltip } from '../snaps/snap-ui-tooltip';\nimport { SnapUICard } from '../snaps/snap-ui-card';\nimport { SnapUIAddress } from '../snaps/snap-ui-address';\nimport { SnapUISelector } from '../snaps/snap-ui-selector';\nimport { SnapUIFooterButton } from '../snaps/snap-ui-footer-button';\n///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\nimport { SnapAccountSuccessMessage } from '../../../pages/confirmations/components/snap-account-success-message';\nimport { SnapAccountErrorMessage } from '../../../pages/confirmations/components/snap-account-error-message';\nimport { CreateSnapAccount } from '../../../pages/create-snap-account';\nimport { CreateNamedSnapAccount } from '../../multichain/create-named-snap-account';\nimport {\n  RemoveSnapAccount,\n  SnapAccountCard,\n} from '../../../pages/remove-snap-account';\nimport { SnapAccountRedirect } from '../../../pages/snap-account-redirect';\nimport SnapAuthorshipHeader from '../snaps/snap-authorship-header';\n///: END:ONLY_INCLUDE_IF\n\nexport const safeComponentList = {\n  a: 'a',\n  ActionableMessage,\n  AccountListItem,\n  AvatarIcon,\n  b: 'b',\n  Box,\n  Button,\n  Chip,\n  ConfirmationNetworkSwitch,\n  DefinitionList,\n  div: 'div',\n  i: 'i',\n  MetaMaskTranslation,\n  NetworkDisplay,\n  p: 'p',\n  Popover,\n  span: 'span',\n  Text,\n  TextArea,\n  TextField,\n  Tooltip,\n  TruncatedDefinitionList,\n  Typography,\n  SmartTransactionStatusPage,\n  UrlIcon,\n  Copyable,\n  SnapDelineator,\n  SnapUIMarkdown,\n  SnapUILink,\n  SnapUIIcon,\n  SnapUIImage,\n  BannerAlert,\n  Spinner,\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowValueDouble,\n  SnapUIFileInput,\n  SnapUIInput,\n  SnapUIButton,\n  SnapUIForm,\n  SnapUIDropdown,\n  SnapUIRadioGroup,\n  SnapUICheckbox,\n  SnapUITooltip,\n  SnapUICard,\n  SnapUISelector,\n  SnapUIAddress,\n  SnapUIFooterButton,\n  FormTextField,\n  ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n  CreateSnapAccount,\n  RemoveSnapAccount,\n  CreateNamedSnapAccount,\n  SnapAccountSuccessMessage,\n  SnapAccountErrorMessage,\n  SnapAuthorshipHeader,\n  SnapAccountRedirect,\n  SnapAccountCard,\n  ///: END:ONLY_INCLUDE_IF\n};\n","import PropTypes from 'prop-types';\n\nexport const SectionShape = {\n  props: PropTypes.object,\n  propComponents: PropTypes.object,\n  element: PropTypes.string,\n  key: PropTypes.string,\n};\n\nexport const ValidChildren = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.shape(SectionShape),\n  PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.shape(SectionShape), PropTypes.string]),\n  ),\n]);\n\nSectionShape.children = ValidChildren;\n","export { default } from './metamask-translation';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport MetaMaskTemplateRenderer from '../metamask-template-renderer';\nimport { SectionShape } from '../metamask-template-renderer/section-shape';\n\n/**\n * MetaMaskTranslation is a simple helper component for adding full translation\n * support to the template system. We do pass the translation function to the\n * template getValues function, but passing it React components as variables\n * would require React to be in scope, and breaks the object pattern paradigm.\n *\n * This component gets around that by converting variables that are templates\n * themselves into tiny React trees. This component does additional validation\n * to make sure that the tree has a single root node, with maximum two leaves.\n * Each subnode can have a maximum of one child that must be a string.\n *\n * This enforces a maximum recursion depth of 2, preventing translation strings\n * from being performance hogs. We could further limit this, and also attenuate\n * the safeComponentList for what kind of components we allow these special\n * trees to contain.\n *\n * @param options\n * @param options.translationKey\n * @param options.variables\n */\nexport default function MetaMaskTranslation({ translationKey, variables }) {\n  const t = useI18nContext();\n\n  return t(\n    translationKey,\n    variables?.map((variable) => {\n      if (\n        typeof variable === 'object' &&\n        !Array.isArray(variable) &&\n        variable.element\n      ) {\n        if (!variable.key) {\n          throw new Error(\n            `When using MetaMask Template Language in a MetaMaskTranslation variable, you must provide a key for the section regardless of syntax.\n            Section with element '${variable.element}' for translationKey: '${translationKey}' has no key property`,\n          );\n        }\n        if (\n          variable.children &&\n          Array.isArray(variable.children) &&\n          variable.children.length > 2\n        ) {\n          throw new Error(\n            'MetaMaskTranslation only renders templates with a single section and maximum two children',\n          );\n        } else if (\n          (variable.children?.[0]?.children !== undefined &&\n            typeof variable.children[0].children !== 'string') ||\n          (variable.children?.[1]?.children !== undefined &&\n            typeof variable.children[1].children !== 'string')\n        ) {\n          throw new Error(\n            'MetaMaskTranslation does not allow for component trees of non trivial depth',\n          );\n        }\n        return (\n          <MetaMaskTemplateRenderer\n            key={`${translationKey}-${variable.key}`}\n            sections={variable}\n          />\n        );\n      }\n      return variable;\n    }),\n  );\n}\n\nMetaMaskTranslation.propTypes = {\n  /**\n   * Translation object key\n   */\n  translationKey: PropTypes.string.isRequired,\n  /**\n   * Array of variables for the MetaMaskTranslation component\n   */\n  variables: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.shape(SectionShape),\n    ]),\n  ),\n};\n","export { default } from './modal.component';\nexport { default as ModalContent } from './modal-content';\n","export { default } from './modal-content.component';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ModalContent extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n  };\n\n  render() {\n    const { title, description } = this.props;\n\n    return (\n      <div className=\"modal-content\">\n        {title ? <div className=\"modal-content__title\">{title}</div> : null}\n        {description && (\n          <div className=\"modal-content__description\">{description}</div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Button from '../../ui/button';\n\n/**\n * @deprecated The `<Modal />` component has been deprecated in favor of the new `<Modal>` component from the component-library.\n * Please update your code to use the new `<Modal>` component instead, which can be found at ui/components/component-library/modal/modal.tsx.\n * You can find documentation for the new Modal component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-modal--docs}\n * If you would like to help with the replacement of the old Modal component, please submit a pull request\n */\n\nexport default class Modal extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n    contentClass: PropTypes.string,\n    containerClass: PropTypes.string,\n    testId: PropTypes.string,\n    // Header text\n    headerText: PropTypes.string,\n    onClose: PropTypes.func,\n    // Submit button (right button)\n    onSubmit: PropTypes.func,\n    submitType: PropTypes.string,\n    submitText: PropTypes.string,\n    submitDisabled: PropTypes.bool,\n    hideFooter: PropTypes.bool,\n    // Cancel button (left button)\n    onCancel: PropTypes.func,\n    cancelType: PropTypes.string,\n    cancelText: PropTypes.string,\n  };\n\n  static defaultProps = {\n    submitType: 'primary',\n    cancelType: 'secondary',\n  };\n\n  render() {\n    const {\n      children,\n      headerText,\n      onClose,\n      onSubmit,\n      submitType,\n      submitText,\n      submitDisabled,\n      onCancel,\n      cancelType,\n      cancelText,\n      contentClass,\n      containerClass,\n      hideFooter,\n      testId,\n    } = this.props;\n\n    return (\n      <div\n        className={classnames('modal-container', containerClass)}\n        data-testid={testId}\n      >\n        {headerText && (\n          <div className=\"modal-container__header\">\n            <div className=\"modal-container__header-text\">{headerText}</div>\n            <div\n              className=\"modal-container__header-close\"\n              data-testid=\"modal-header-close\"\n              onClick={onClose}\n            />\n          </div>\n        )}\n        <div className={classnames('modal-container__content', contentClass)}>\n          {children}\n        </div>\n        {hideFooter ? null : (\n          <div className=\"modal-container__footer\">\n            {onCancel && (\n              <Button\n                type={cancelType}\n                onClick={onCancel}\n                className=\"modal-container__footer-button\"\n              >\n                {cancelText}\n              </Button>\n            )}\n            <Button\n              type={submitType}\n              onClick={onSubmit}\n              disabled={submitDisabled}\n              className=\"modal-container__footer-button\"\n            >\n              {submitText}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal, { ModalContent } from '../../modal';\n\nexport default class ConfirmDeleteNetwork extends PureComponent {\n  static propTypes = {\n    hideModal: PropTypes.func.isRequired,\n    removeNetwork: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    networkNickname: PropTypes.string.isRequired,\n    chainId: PropTypes.string.isRequired,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  handleDelete = async () => {\n    await this.props.removeNetwork(this.props.chainId);\n    this.props.onConfirm();\n    this.props.hideModal();\n  };\n\n  render() {\n    const { t } = this.context;\n    const { networkNickname } = this.props;\n\n    return (\n      <Modal\n        onSubmit={this.handleDelete}\n        onCancel={() => this.props.hideModal()}\n        submitText={t('delete')}\n        cancelText={t('cancel')}\n        submitType=\"danger-primary\"\n        testId=\"confirm-delete-network-modal\"\n      >\n        <ModalContent\n          title={t('deleteNetworkTitle', [networkNickname])}\n          description={t('deleteNetworkIntro')}\n        />\n      </Modal>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport { removeNetwork } from '../../../../store/actions';\nimport { getNetworkConfigurationsByChainId } from '../../../../selectors';\nimport ConfirmDeleteNetwork from './confirm-delete-network.component';\n\nconst mapStateToProps = (state, ownProps) => {\n  const networks = getNetworkConfigurationsByChainId(state);\n  const { chainId, name: networkNickname } = networks[ownProps.target];\n  return { chainId, networkNickname };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeNetwork: (chainId) => {\n      dispatch(removeNetwork(chainId));\n    },\n  };\n};\n\nexport default compose(\n  withModalProps,\n  connect(mapStateToProps, mapDispatchToProps),\n)(ConfirmDeleteNetwork);\n","export { default } from './confirm-delete-network.container';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isEvmAccountType } from '@metamask/keyring-api';\nimport { getMultichainAccountUrl } from '../../../../helpers/utils/multichain/blockExplorer';\nimport Modal from '../../modal';\nimport { addressSummary, getURLHostName } from '../../../../helpers/utils/util';\nimport Identicon from '../../../ui/identicon';\nimport { MetaMetricsEventCategory } from '../../../../../shared/constants/metametrics';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\nimport {\n  InternalAccountPropType,\n  MultichainNetworkPropType,\n} from '../../../../selectors/multichain';\n\nexport default class ConfirmRemoveAccount extends Component {\n  static propTypes = {\n    hideModal: PropTypes.func.isRequired,\n    removeAccount: PropTypes.func.isRequired,\n    account: InternalAccountPropType.isRequired,\n    network: MultichainNetworkPropType.isRequired,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n    trackEvent: PropTypes.func,\n  };\n\n  handleRemove = () => {\n    this.props\n      .removeAccount(this.props.account.address)\n      .then(() => this.props.hideModal());\n  };\n\n  handleCancel = () => {\n    this.props.hideModal();\n  };\n\n  renderSelectedAccount() {\n    const { t } = this.context;\n    const { account, network } = this.props;\n\n    return (\n      <div className=\"confirm-remove-account__account\">\n        <div className=\"confirm-remove-account__account__identicon\">\n          <Identicon address={account.address} diameter={32} />\n        </div>\n        <div className=\"confirm-remove-account__account__name\">\n          <span className=\"confirm-remove-account__account__label\">\n            {t('name')}\n          </span>\n          <span className=\"account_value\">{account.metadata.name}</span>\n        </div>\n        <div className=\"confirm-remove-account__account__address\">\n          <span className=\"confirm-remove-account__account__label\">\n            {t('publicAddress')}\n          </span>\n          <span className=\"account_value\">\n            {addressSummary(\n              account.address,\n              4,\n              4,\n              isEvmAccountType(account.type),\n            )}\n          </span>\n        </div>\n        <div className=\"confirm-remove-account__account__link\">\n          <a\n            onClick={() => {\n              const accountLink = getMultichainAccountUrl(\n                account.address,\n                network,\n              );\n              this.context.trackEvent({\n                category: MetaMetricsEventCategory.Accounts,\n                event: 'Clicked Block Explorer Link',\n                properties: {\n                  link_type: 'Account Tracker',\n                  action: 'Remove Account',\n                  block_explorer_domain: getURLHostName(accountLink),\n                },\n              });\n              global.platform.openTab({\n                url: accountLink,\n              });\n            }}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title={t('etherscanView')}\n            data-testid=\"explorer-link\"\n          >\n            <i\n              className=\"fa fa-share-square\"\n              style={{ color: 'var(--color-icon-muted)' }}\n              title={t('etherscanView')}\n            />\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { t } = this.context;\n\n    return (\n      <Modal\n        headerText={`${t('removeAccount')}?`}\n        onClose={this.handleCancel}\n        onSubmit={this.handleRemove}\n        onCancel={this.handleCancel}\n        submitText={t('remove')}\n        cancelText={t('nevermind')}\n      >\n        <div>\n          {this.renderSelectedAccount()}\n          <div className=\"confirm-remove-account__description\">\n            {t('removeAccountDescription')}\n            <a\n              className=\"confirm-remove-account__link\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href={ZENDESK_URLS.IMPORTED_ACCOUNTS}\n            >\n              {t('learnMore')}\n            </a>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport { removeAccount } from '../../../../store/actions';\nimport { getMultichainNetwork } from '../../../../selectors/multichain';\nimport ConfirmRemoveAccount from './confirm-remove-account.component';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    network: getMultichainNetwork(state, ownProps.account),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeAccount: (address) => dispatch(removeAccount(address)),\n  };\n};\n\nexport default compose(\n  withModalProps,\n  connect(mapStateToProps, mapDispatchToProps),\n)(ConfirmRemoveAccount);\n","export { default } from './confirm-remove-account.container';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal, { ModalContent } from '../../modal';\n\nexport default class ConfirmResetAccount extends PureComponent {\n  static propTypes = {\n    hideModal: PropTypes.func.isRequired,\n    resetAccount: PropTypes.func.isRequired,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  handleReset = () => {\n    this.props.resetAccount().then(() => this.props.hideModal());\n  };\n\n  render() {\n    const { t } = this.context;\n\n    return (\n      <Modal\n        onSubmit={this.handleReset}\n        onCancel={() => this.props.hideModal()}\n        submitText={t('clear')}\n        cancelText={t('nevermind')}\n        submitType=\"danger-primary\"\n      >\n        <ModalContent\n          title={`${t('clearActivity')}?`}\n          description={t('clearActivityDescription')}\n        />\n      </Modal>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport { resetAccount } from '../../../../store/actions';\nimport ConfirmResetAccount from './confirm-reset-account.component';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetAccount: () => dispatch(resetAccount()),\n  };\n};\n\nexport default compose(\n  withModalProps,\n  connect(null, mapDispatchToProps),\n)(ConfirmResetAccount);\n","export { default } from './confirm-reset-account.container';\n","import React, { useContext } from 'react';\nimport { useModalProps } from '../../../../hooks/useModalProps';\nimport {\n  ButtonSize,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalContentSize,\n  Text,\n  ModalFooter,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  FlexDirection,\n  TextAlign,\n} from '../../../../helpers/constants/design-system';\nimport { I18nContext } from '../../../../contexts/i18n';\n\nexport default function ConfirmTurnOffProfileSyncing() {\n  const { props, hideModal } = useModalProps();\n  const { turnOffProfileSyncing } = props;\n  const t = useContext(I18nContext);\n\n  const handleHideModal = () => {\n    hideModal();\n  };\n\n  const handleTurnOffProfileSyncing = async () => {\n    turnOffProfileSyncing();\n    hideModal();\n  };\n\n  return (\n    <Modal isOpen onClose={handleHideModal} data-testid=\"turn-off-sync-modal\">\n      <ModalOverlay data-testid=\"modal-overlay\" />\n      <ModalContent size={ModalContentSize.Md} data-testid=\"modal-content\">\n        <ModalHeader onClose={handleHideModal} data-testid=\"modal-header\">\n          {t('areYouSure')}\n        </ModalHeader>\n        <ModalBody data-testid=\"modal-body\">\n          <Text\n            textAlign={TextAlign.Center}\n            as=\"p\"\n            data-testid=\"confirmation-text\"\n          >\n            {t('profileSyncConfirmation')}\n          </Text>\n        </ModalBody>\n        <ModalFooter\n          paddingTop={4}\n          onSubmit={handleHideModal}\n          onCancel={handleTurnOffProfileSyncing}\n          containerProps={{\n            flexDirection: FlexDirection.Row,\n            alignItems: AlignItems.stretch,\n          }}\n          submitButtonProps={{\n            children: t('cancel'),\n            size: ButtonSize.Lg,\n            'data-testid': 'cancel-button',\n          }}\n          cancelButtonProps={{\n            children: t('turnOff'),\n            size: ButtonSize.Lg,\n            'data-testid': 'submit-button',\n          }}\n          data-testid=\"modal-footer\"\n        />\n      </ModalContent>\n    </Modal>\n  );\n}\n","export { default } from './confirm-turn-off-profile-syncing';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../../modal';\nimport { Text } from '../../../component-library/text';\nimport withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { ASSET_ROUTE } from '../../../../helpers/constants/routes';\nimport { getNfts } from '../../../../ducks/metamask/metamask';\nimport { ignoreTokens, showImportNftsModal } from '../../../../store/actions';\nimport { isEqualCaseInsensitive } from '../../../../../shared/modules/string-utils';\n\nconst ConvertTokenToNFTModal = ({ hideModal, tokenAddress }) => {\n  const history = useHistory();\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const allNfts = useSelector(getNfts);\n  const tokenAddedAsNFT = allNfts.find(({ address }) =>\n    isEqualCaseInsensitive(address, tokenAddress),\n  );\n\n  return (\n    <Modal\n      onSubmit={async () => {\n        if (tokenAddedAsNFT) {\n          await dispatch(\n            ignoreTokens({\n              tokensToIgnore: tokenAddress,\n              dontShowLoadingIndicator: true,\n            }),\n          );\n          const { tokenId } = tokenAddedAsNFT;\n          history.push({\n            pathname: `${ASSET_ROUTE}/${tokenAddress}/${tokenId}`,\n          });\n        } else {\n          dispatch(\n            showImportNftsModal({ tokenAddress, ignoreErc20Token: true }),\n          );\n        }\n        hideModal();\n      }}\n      submitText={t('yes')}\n      onCancel={() => hideModal()}\n      cancelText={t('cancel')}\n    >\n      <div className=\"convert-token-to-nft-modal\">\n        <Text marginTop={2}>\n          {tokenAddedAsNFT\n            ? t('convertTokenToNFTExistDescription')\n            : t('convertTokenToNFTDescription')}\n        </Text>\n      </div>\n    </Modal>\n  );\n};\n\nConvertTokenToNFTModal.propTypes = {\n  hideModal: PropTypes.func.isRequired,\n  tokenAddress: PropTypes.string,\n};\n\nexport default withModalProps(ConvertTokenToNFTModal);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../modal';\nimport TextField from '../../../ui/text-field';\nimport {\n  TextVariant,\n  AlignItems,\n  BlockSize,\n  Display,\n} from '../../../../helpers/constants/design-system';\nimport withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\nimport {\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  ButtonLink,\n  IconName,\n  Text,\n} from '../../../component-library';\n\nconst CustomizeNonce = ({\n  hideModal,\n  customNonceValue,\n  nextNonce,\n  updateCustomNonce,\n  getNextNonce,\n}) => {\n  const [customNonce, setCustomNonce] = useState('');\n  const t = useI18nContext();\n\n  return (\n    <Modal\n      onSubmit={() => {\n        if (customNonce === '') {\n          updateCustomNonce(customNonceValue);\n        } else {\n          updateCustomNonce(customNonce);\n        }\n        getNextNonce();\n        hideModal();\n      }}\n      submitText={t('save')}\n      onCancel={() => hideModal()}\n      cancelText={t('cancel')}\n      contentClass=\"customize-nonce-modal-content\"\n      containerClass=\"customize-nonce-modal-container\"\n    >\n      <div className=\"customize-nonce-modal\">\n        <div className=\"customize-nonce-modal__main-header\">\n          <Text\n            className=\"customize-nonce-modal__main-title\"\n            variant={TextVariant.headingSm}\n            as=\"h4\"\n          >\n            {t('editNonceField')}\n          </Text>\n          <ButtonIcon\n            iconName={IconName.Close}\n            className=\"customize-nonce-modal__close\"\n            size={ButtonIconSize.Sm}\n            ariaLabel={t('close')}\n            onClick={hideModal}\n          />\n        </div>\n        <Box\n          marginTop={2}\n          display={Display.InlineFlex}\n          alignItems={AlignItems.center}\n        >\n          <Text variant={TextVariant.bodyMd} as=\"h6\">\n            {t('editNonceMessage')}\n            <ButtonLink\n              className=\"customize-nonce-modal__link\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href={ZENDESK_URLS.CUSTOMIZE_NONCE}\n            >\n              {t('learnMoreUpperCase')}\n            </ButtonLink>\n          </Text>\n        </Box>\n        <Box marginTop={4}>\n          <Box alignItems={AlignItems.center} display={Display.Flex}>\n            <Text\n              variant={TextVariant.bodyMdBold}\n              as=\"h6\"\n              width={BlockSize.FiveSixths}\n            >\n              {t('editNonceField')}\n            </Text>\n            <Box width={BlockSize.OneSixth}>\n              <ButtonLink\n                className=\"customize-nonce-modal__reset\"\n                data-testid=\"customize-nonce-reset\"\n                onClick={() => {\n                  setCustomNonce(nextNonce);\n                }}\n              >\n                {t('reset')}\n              </ButtonLink>\n            </Box>\n          </Box>\n          <div className=\"customize-nonce-modal__input\">\n            <TextField\n              type=\"number\"\n              data-testid=\"custom-nonce-input\"\n              min=\"0\"\n              placeholder={\n                customNonceValue ||\n                (typeof nextNonce === 'number' && nextNonce.toString())\n              }\n              onChange={(e) => {\n                setCustomNonce(e.target.value);\n              }}\n              fullWidth\n              margin=\"dense\"\n              value={customNonce}\n              id=\"custom-nonce-id\"\n            />\n          </div>\n        </Box>\n      </div>\n    </Modal>\n  );\n};\n\nCustomizeNonce.propTypes = {\n  hideModal: PropTypes.func.isRequired,\n  customNonceValue: PropTypes.string,\n  nextNonce: PropTypes.number,\n  updateCustomNonce: PropTypes.func,\n  getNextNonce: PropTypes.func,\n};\nexport default withModalProps(CustomizeNonce);\n","export { default } from './customize-nonce.component';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport log from 'loglevel';\nimport classnames from 'classnames';\nimport BigNumber from 'bignumber.js';\nimport Modal from '../../modal';\nimport Identicon from '../../../ui/identicon';\nimport TextField from '../../../ui/text-field';\nimport {\n  calcTokenAmount,\n  toPrecisionWithoutTrailingZeros,\n} from '../../../../../shared/lib/transactions-controller-utils';\nimport {\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n} from '../../../component-library';\n\nconst MAX_UNSIGNED_256_INT = new BigNumber(2).pow(256).minus(1).toString(10);\n\nexport default class EditApprovalPermission extends PureComponent {\n  static propTypes = {\n    decimals: PropTypes.number,\n    hideModal: PropTypes.func.isRequired,\n    selectedAccount: PropTypes.object,\n    tokenAmount: PropTypes.string,\n    customTokenAmount: PropTypes.string,\n    tokenSymbol: PropTypes.string,\n    tokenBalance: PropTypes.string,\n    setCustomAmount: PropTypes.func,\n    origin: PropTypes.string.isRequired,\n    requiredMinimum: PropTypes.instanceOf(BigNumber),\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  state = {\n    // This is used as a TextField value, which should be a string.\n    customSpendLimit: this.props.customTokenAmount || '',\n    selectedOptionIsUnlimited: !this.props.customTokenAmount,\n  };\n\n  renderModalContent(error) {\n    const { t } = this.context;\n    const {\n      hideModal,\n      selectedAccount,\n      tokenAmount,\n      tokenSymbol,\n      tokenBalance,\n      customTokenAmount,\n      origin,\n    } = this.props;\n    const { name, address } = selectedAccount || {};\n    const { selectedOptionIsUnlimited } = this.state;\n\n    return (\n      <div className=\"edit-approval-permission\">\n        <div className=\"edit-approval-permission__header\">\n          <div className=\"edit-approval-permission__title\">\n            {t('editPermission')}\n          </div>\n          <ButtonIcon\n            iconName={IconName.Close}\n            size={ButtonIconSize.Lg}\n            className=\"edit-approval-permission__header__close\"\n            onClick={hideModal}\n          />\n        </div>\n        <div className=\"edit-approval-permission__account-info\">\n          <div className=\"edit-approval-permission__account-info__account\">\n            <Identicon address={address} diameter={32} />\n            <div className=\"edit-approval-permission__name-and-balance-container\">\n              <div className=\"edit-approval-permission__account-info__name\">\n                {name}\n              </div>\n              <div>{t('balance')}</div>\n            </div>\n          </div>\n          <div className=\"edit-approval-permission__account-info__balance\">\n            {`${toPrecisionWithoutTrailingZeros(\n              tokenBalance,\n              9,\n            )} ${tokenSymbol}`}\n          </div>\n        </div>\n        <div className=\"edit-approval-permission__edit-section\">\n          <div className=\"edit-approval-permission__edit-section__title\">\n            {t('spendLimitPermission')}\n          </div>\n          <div className=\"edit-approval-permission__edit-section__description\">\n            {t('allowWithdrawAndSpend', [origin])}\n          </div>\n          <div className=\"edit-approval-permission__edit-section__option\">\n            <div\n              className=\"edit-approval-permission__edit-section__radio-button\"\n              onClick={() => this.setState({ selectedOptionIsUnlimited: true })}\n            >\n              <div\n                className={classnames({\n                  'edit-approval-permission__edit-section__radio-button-outline':\n                    !selectedOptionIsUnlimited,\n                  'edit-approval-permission__edit-section__radio-button-outline--selected':\n                    selectedOptionIsUnlimited,\n                })}\n              />\n              <div className=\"edit-approval-permission__edit-section__radio-button-fill\" />\n              {selectedOptionIsUnlimited && (\n                <div className=\"edit-approval-permission__edit-section__radio-button-dot\" />\n              )}\n            </div>\n            <div className=\"edit-approval-permission__edit-section__option-text\">\n              <div\n                className={classnames({\n                  'edit-approval-permission__edit-section__option-label':\n                    !selectedOptionIsUnlimited,\n                  'edit-approval-permission__edit-section__option-label--selected':\n                    selectedOptionIsUnlimited,\n                })}\n              >\n                {new BigNumber(tokenAmount).equals(\n                  new BigNumber(MAX_UNSIGNED_256_INT),\n                )\n                  ? t('unlimited')\n                  : t('proposedApprovalLimit')}\n              </div>\n              <div className=\"edit-approval-permission__edit-section__option-description\">\n                {t('spendLimitRequestedBy', [origin])}\n              </div>\n              <div className=\"edit-approval-permission__edit-section__option-value\">\n                {`${Number(tokenAmount)} ${tokenSymbol}`}\n              </div>\n            </div>\n          </div>\n          <div className=\"edit-approval-permission__edit-section__option\">\n            <div\n              className=\"edit-approval-permission__edit-section__radio-button\"\n              onClick={() =>\n                this.setState({ selectedOptionIsUnlimited: false })\n              }\n            >\n              <div\n                className={classnames({\n                  'edit-approval-permission__edit-section__radio-button-outline':\n                    selectedOptionIsUnlimited,\n                  'edit-approval-permission__edit-section__radio-button-outline--selected':\n                    !selectedOptionIsUnlimited,\n                })}\n              />\n              <div className=\"edit-approval-permission__edit-section__radio-button-fill\" />\n              {!selectedOptionIsUnlimited && (\n                <div className=\"edit-approval-permission__edit-section__radio-button-dot\" />\n              )}\n            </div>\n            <div className=\"edit-approval-permission__edit-section__option-text\">\n              <div\n                className={classnames({\n                  'edit-approval-permission__edit-section__option-label':\n                    selectedOptionIsUnlimited,\n                  'edit-approval-permission__edit-section__option-label--selected':\n                    !selectedOptionIsUnlimited,\n                })}\n              >\n                {t('customSpendLimit')}\n              </div>\n              <div className=\"edit-approval-permission__edit-section__option-description\">\n                {t('enterMaxSpendLimit')}\n              </div>\n              <div className=\"edit-approval-permission__edit-section__option-input\">\n                <TextField\n                  type=\"number\"\n                  placeholder={`${Number(\n                    customTokenAmount || tokenAmount,\n                  )} ${tokenSymbol}`}\n                  onChange={(event) => {\n                    this.setState({ customSpendLimit: event.target.value });\n                    if (selectedOptionIsUnlimited) {\n                      this.setState({ selectedOptionIsUnlimited: false });\n                    }\n                  }}\n                  fullWidth\n                  margin=\"dense\"\n                  value={this.state.customSpendLimit}\n                  error={error}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  validateSpendLimit() {\n    const { t } = this.context;\n    const { decimals, requiredMinimum } = this.props;\n    const { selectedOptionIsUnlimited, customSpendLimit } = this.state;\n\n    if (selectedOptionIsUnlimited || !customSpendLimit) {\n      return undefined;\n    }\n\n    let customSpendLimitNumber;\n    try {\n      customSpendLimitNumber = new BigNumber(customSpendLimit);\n    } catch (error) {\n      log.debug(`Error converting '${customSpendLimit}' to BigNumber:`, error);\n      return t('spendLimitInvalid');\n    }\n\n    if (customSpendLimitNumber.isNegative()) {\n      return t('spendLimitInvalid');\n    }\n\n    const maxTokenAmount = calcTokenAmount(MAX_UNSIGNED_256_INT, decimals);\n    if (customSpendLimitNumber.greaterThan(maxTokenAmount)) {\n      return t('spendLimitTooLarge');\n    }\n\n    if (\n      requiredMinimum !== undefined &&\n      customSpendLimitNumber.lessThan(requiredMinimum)\n    ) {\n      return t('spendLimitInsufficient');\n    }\n\n    return undefined;\n  }\n\n  render() {\n    const { t } = this.context;\n    const { setCustomAmount, hideModal, customTokenAmount } = this.props;\n    const { selectedOptionIsUnlimited, customSpendLimit } = this.state;\n\n    const error = this.validateSpendLimit();\n    const disabled = Boolean(\n      (customSpendLimit === customTokenAmount && !selectedOptionIsUnlimited) ||\n        error,\n    );\n\n    return (\n      <Modal\n        onSubmit={() => {\n          setCustomAmount(selectedOptionIsUnlimited ? '' : customSpendLimit);\n          hideModal();\n        }}\n        submitText={t('save')}\n        contentClass=\"edit-approval-permission-modal-content\"\n        containerClass=\"edit-approval-permission-modal-container\"\n        submitDisabled={disabled}\n      >\n        {this.renderModalContent(error)}\n      </Modal>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport { getSelectedInternalAccount } from '../../../../selectors';\nimport EditApprovalPermission from './edit-approval-permission.component';\n\nconst mapStateToProps = (state) => {\n  const modalStateProps = state.appState.modal.modalState.props || {};\n  return {\n    selectedAccount: getSelectedInternalAccount(state),\n    ...modalStateProps,\n  };\n};\n\nexport default compose(\n  withModalProps,\n  connect(mapStateToProps),\n)(EditApprovalPermission);\n","export { default } from './edit-approval-permission.container';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nlet index = 0;\nlet extraSheet;\n\nconst insertRule = (css) => {\n  if (!extraSheet) {\n    // First time, create an extra stylesheet for adding rules\n    extraSheet = document.createElement('style');\n    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n  }\n\n  extraSheet.insertRule(css, (extraSheet.cssRules || extraSheet.rules).length);\n\n  return extraSheet;\n};\n\nconst insertKeyframesRule = (keyframes) => {\n  // random name\n  // eslint-disable-next-line no-plusplus\n  const name = `anim_${++index}${Number(new Date())}`;\n  let css = `@keyframes ${name} {`;\n\n  Object.keys(keyframes).forEach((key) => {\n    css += `${key} {`;\n\n    Object.keys(keyframes[key]).forEach((property) => {\n      const part = `:${keyframes[key][property]};`;\n      css += property + part;\n    });\n\n    css += '}';\n  });\n\n  css += '}';\n\n  insertRule(css);\n\n  return name;\n};\n\nconst animation = {\n  show: {\n    animationDuration: '0.3s',\n    animationTimingFunction: 'ease-out',\n  },\n  hide: {\n    animationDuration: '0.3s',\n    animationTimingFunction: 'ease-out',\n  },\n  showContentAnimation: insertKeyframesRule({\n    '0%': {\n      opacity: 0,\n    },\n    '100%': {\n      opacity: 1,\n    },\n  }),\n  hideContentAnimation: insertKeyframesRule({\n    '0%': {\n      opacity: 1,\n    },\n    '100%': {\n      opacity: 0,\n    },\n  }),\n  showBackdropAnimation: insertKeyframesRule({\n    '0%': {\n      opacity: 0,\n    },\n    '100%': {\n      opacity: 0.9,\n    },\n  }),\n  hideBackdropAnimation: insertKeyframesRule({\n    '0%': {\n      opacity: 0.9,\n    },\n    '100%': {\n      opacity: 0,\n    },\n  }),\n};\n\nconst endEvents = ['transitionend', 'animationend'];\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nconst removeEndEventListener = (node, eventListener) => {\n  if (endEvents.length === 0) {\n    return;\n  }\n  endEvents.forEach(function (endEvent) {\n    removeEventListener(node, endEvent, eventListener);\n  });\n};\n\nconst addEndEventListener = (node, eventListener) => {\n  if (endEvents.length === 0) {\n    // If CSS transitions are not supported, trigger an \"end animation\"\n    // event immediately.\n    window.setTimeout(eventListener, 0);\n    return;\n  }\n  endEvents.forEach(function (endEvent) {\n    addEventListener(node, endEvent, eventListener);\n  });\n};\n\nclass FadeModal extends Component {\n  content = null;\n\n  static propTypes = {\n    backdrop: PropTypes.bool,\n    backdropStyle: PropTypes.object,\n    closeOnClick: PropTypes.bool,\n    contentStyle: PropTypes.object,\n    keyboard: PropTypes.bool,\n    modalStyle: PropTypes.object,\n    onShow: PropTypes.func,\n    onHide: PropTypes.func,\n    children: PropTypes.node,\n    testId: PropTypes.string,\n  };\n\n  static defaultProps = {\n    testId: '',\n    onShow: () => undefined,\n    onHide: () => undefined,\n    keyboard: true,\n    backdrop: true,\n    closeOnClick: true,\n    modalStyle: {},\n    backdropStyle: {},\n    contentStyle: {},\n    children: [],\n  };\n\n  state = {\n    willHide: true,\n    hidden: true,\n  };\n\n  addTransitionListener = (node, handle) => {\n    if (node) {\n      const endListener = function (e) {\n        if (e && e.target !== node) {\n          return;\n        }\n        removeEndEventListener(node, endListener);\n        handle();\n      };\n      addEndEventListener(node, endListener);\n    }\n  };\n\n  handleBackdropClick = () => {\n    if (this.props.closeOnClick) {\n      this.hide();\n    }\n  };\n\n  hasHidden = () => {\n    return this.state.hidden;\n  };\n\n  render() {\n    if (this.state.hidden) {\n      return null;\n    }\n\n    const { willHide } = this.state;\n    const { modalStyle, testId } = this.props;\n    const backdropStyle = {\n      animationName: willHide\n        ? animation.hideBackdropAnimation\n        : animation.showBackdropAnimation,\n      animationTimingFunction: (willHide ? animation.hide : animation.show)\n        .animationTimingFunction,\n      ...this.props.backdropStyle,\n    };\n    const contentStyle = {\n      animationDuration: (willHide ? animation.hide : animation.show)\n        .animationDuration,\n      animationName: willHide\n        ? animation.hideContentAnimation\n        : animation.showContentAnimation,\n      animationTimingFunction: (willHide ? animation.hide : animation.show)\n        .animationTimingFunction,\n      ...this.props.contentStyle,\n    };\n\n    const backdrop = this.props.backdrop ? (\n      <div\n        className=\"modal__backdrop\"\n        style={backdropStyle}\n        onClick={this.props.closeOnClick ? this.handleBackdropClick : null}\n      />\n    ) : undefined;\n\n    if (willHide) {\n      this.addTransitionListener(this.content, this.leave);\n    }\n\n    return (\n      <span>\n        <div className=\"modal\" style={modalStyle} data-testid={testId}>\n          <div\n            className=\"modal__content\"\n            ref={(el) => (this.content = el)}\n            tabIndex=\"-1\"\n            style={contentStyle}\n          >\n            {this.props.children}\n          </div>\n        </div>\n        {backdrop}\n      </span>\n    );\n  }\n\n  leave = () => {\n    this.setState({\n      hidden: true,\n    });\n    this.props.onHide(this.state.hideSource);\n  };\n\n  enter = () => {\n    this.props.onShow();\n  };\n\n  show = () => {\n    if (!this.state.hidden) {\n      return;\n    }\n\n    this.setState({\n      willHide: false,\n      hidden: false,\n    });\n\n    setTimeout(\n      function () {\n        this.addTransitionListener(this.content, this.enter);\n      }.bind(this),\n      0,\n    );\n  };\n\n  hide = () => {\n    if (this.hasHidden()) {\n      return;\n    }\n\n    this.setState({\n      willHide: true,\n    });\n  };\n\n  listenKeyboard = (event) => {\n    if (typeof this.props.keyboard === 'function') {\n      this.props.keyboard(event);\n    } else {\n      this.closeOnEsc(event);\n    }\n  };\n\n  closeOnEsc = (event) => {\n    if (\n      this.props.keyboard &&\n      (event.key === 'Escape' || event.keyCode === 27)\n    ) {\n      this.hide();\n    }\n  };\n\n  UNSAFE_componentDidMount = () => {\n    window.addEventListener('keydown', this.listenKeyboard, true);\n  };\n\n  UNSAFE_componentWillUnmount = () => {\n    window.removeEventListener('keydown', this.listenKeyboard, true);\n  };\n}\n\nexport default FadeModal;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../store/actions';\nimport Identicon from '../../../ui/identicon';\nimport Button from '../../../ui/button';\nimport { DEFAULT_ROUTE } from '../../../../helpers/constants/routes';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../shared/constants/metametrics';\nimport { getCurrentChainId } from '../../../../selectors';\n\nfunction mapStateToProps(state) {\n  return {\n    chainId: getCurrentChainId(state),\n    token: state.appState.modal.modalState.props.token,\n    history: state.appState.modal.modalState.props.history,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    hideModal: () => dispatch(actions.hideModal()),\n    hideToken: (address) => {\n      dispatch(\n        actions.ignoreTokens({\n          tokensToIgnore: address,\n        }),\n      ).then(() => {\n        dispatch(actions.hideModal());\n      });\n    },\n  };\n}\n\nclass HideTokenConfirmationModal extends Component {\n  static contextTypes = {\n    t: PropTypes.func,\n    trackEvent: PropTypes.func,\n  };\n\n  static propTypes = {\n    hideToken: PropTypes.func.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    chainId: PropTypes.string.isRequired,\n    token: PropTypes.shape({\n      symbol: PropTypes.string,\n      address: PropTypes.string,\n      image: PropTypes.string,\n    }),\n    history: PropTypes.object,\n  };\n\n  state = {};\n\n  render() {\n    const { chainId, token, hideToken, hideModal, history } = this.props;\n    const { symbol, address, image } = token;\n\n    return (\n      <div className=\"hide-token-confirmation__container\">\n        <div className=\"hide-token-confirmation__title\">\n          {this.context.t('hideTokenPrompt')}\n        </div>\n        <Identicon\n          className=\"hide-token-confirmation__identicon\"\n          diameter={45}\n          address={address}\n          image={image}\n        />\n        <div className=\"hide-token-confirmation__symbol\">{symbol}</div>\n        <div className=\"hide-token-confirmation__copy\">\n          {this.context.t('readdToken')}\n        </div>\n        <div className=\"hide-token-confirmation__buttons\">\n          <Button\n            type=\"secondary\"\n            className=\"hide-token-confirmation__button\"\n            data-testid=\"hide-token-confirmation__cancel\"\n            onClick={() => hideModal()}\n          >\n            {this.context.t('cancel')}\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"hide-token-confirmation__button\"\n            data-testid=\"hide-token-confirmation__hide\"\n            onClick={() => {\n              this.context.trackEvent({\n                event: MetaMetricsEventName.TokenRemoved,\n                category: MetaMetricsEventCategory.Tokens,\n                sensitiveProperties: {\n                  chain_id: chainId,\n                  token_contract_address: address,\n                  token_symbol: symbol,\n                },\n              });\n              hideToken(address);\n              history.push(DEFAULT_ROUTE);\n            }}\n          >\n            {this.context.t('hide')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HideTokenConfirmationModal);\n","export { default } from './hide-token-confirmation-modal';\n","import React from 'react';\nimport {\n  Display,\n  FlexDirection,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  Box,\n  Button,\n  ButtonSize,\n  ButtonVariant,\n  Container,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '../../../component-library';\nimport HoldToRevealButton from '../../hold-to-reveal-button/hold-to-reveal-button';\n\ntype HoldToRevealModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onLongPressed: () => void;\n  holdToRevealType: 'SRP' | 'PrivateKey';\n};\n\nexport default function HoldToRevealModal({\n  isOpen,\n  onClose,\n  onLongPressed,\n  holdToRevealType,\n}: HoldToRevealModalProps) {\n  const t = useI18nContext();\n  const holdToRevealTitle =\n    holdToRevealType === 'SRP'\n      ? 'holdToRevealSRPTitle'\n      : 'holdToRevealPrivateKeyTitle';\n\n  const holdToRevealButton =\n    holdToRevealType === 'SRP' ? 'holdToRevealSRP' : 'holdToRevealPrivateKey';\n\n  const holdToRevealContent =\n    holdToRevealType === 'SRP'\n      ? 'holdToRevealContent'\n      : 'holdToRevealContentPrivateKey';\n\n  // If this is done inline, verify-locales will output `Forbidden use of template strings in 't' function`\n  const holdToRevealContent1 = `${holdToRevealContent}1`;\n  const holdToRevealContent2 = `${holdToRevealContent}2`;\n\n  // This is here to stop yarn verify-locales from removing these strings\n  t('holdToRevealContentPrivateKey1');\n  t('holdToRevealContentPrivateKey2');\n  t('holdToRevealContent1');\n  t('holdToRevealContent2');\n\n  const MainContent = () => {\n    return (\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        gap={4}\n        marginTop={4}\n        marginBottom={6}\n      >\n        <Text variant={TextVariant.bodyMd}>\n          {t(holdToRevealContent1, [\n            <Text\n              key=\"hold-to-reveal-2\"\n              variant={TextVariant.bodyMdBold}\n              as=\"span\"\n            >\n              {t(holdToRevealContent2)}\n            </Text>,\n          ])}\n        </Text>\n        <Text variant={TextVariant.bodyMdBold}>\n          {t('holdToRevealContent3', [\n            <Text\n              key=\"hold-to-reveal-4\"\n              variant={TextVariant.bodyMd}\n              as=\"span\"\n              display={Display.Inline}\n            >\n              {t('holdToRevealContent4')}\n            </Text>,\n            <Button\n              key=\"hold-to-reveal-5\"\n              variant={ButtonVariant.Link}\n              size={ButtonSize.Inherit}\n              href={ZENDESK_URLS.NON_CUSTODIAL_WALLET}\n              externalLink\n            >\n              {t('holdToRevealContent5')}\n            </Button>,\n          ])}\n        </Text>\n      </Box>\n    );\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader onClose={onClose}>{t(holdToRevealTitle)}</ModalHeader>\n        <Container paddingLeft={4} paddingRight={4}>\n          <MainContent />\n          <HoldToRevealButton\n            buttonText={t(holdToRevealButton)}\n            onLongPressed={onLongPressed}\n          />\n        </Container>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import Modal from './modal';\n\nexport { Modal };\n","export { default } from './keyring-snap-removal-result-modal';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  FlexDirection,\n  AlignItems,\n  Display,\n  JustifyContent,\n  IconColor,\n  TextVariant,\n  TextAlign,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Box,\n  Icon,\n  IconName,\n  IconSize,\n  Modal,\n  ModalOverlay,\n  Text,\n} from '../../../component-library';\nimport { ModalContent } from '../../../component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../component-library/modal-header/deprecated';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { getKeyringSnapRemovalResult } from '../../../../selectors';\n\nconst KeyringSnapRemovalResult = ({\n  isOpen,\n  onClose,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n}) => {\n  const t = useI18nContext();\n  const snapRemovalResult = useSelector(getKeyringSnapRemovalResult);\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={() => onClose()}>\n        <ModalOverlay />\n        <ModalContent\n          modalDialogProps={{\n            display: Display.Flex,\n            flexDirection: FlexDirection.Column,\n            gap: 4,\n          }}\n        >\n          <ModalHeader onClose={onClose}>{''}</ModalHeader>\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n            justifyContent={JustifyContent.center}\n            alignItems={AlignItems.center}\n          >\n            <Icon\n              name={\n                snapRemovalResult.result === 'success'\n                  ? IconName.Confirmation\n                  : IconName.Danger\n              }\n              color={\n                snapRemovalResult.result === 'success'\n                  ? IconColor.successDefault\n                  : IconColor.errorDefault\n              }\n              size={IconSize.Xl}\n              marginBottom={4}\n            />\n            <Text variant={TextVariant.bodyMdBold} textAlign={TextAlign.Center}>\n              {t('keyringSnapRemovalResult1', [\n                snapRemovalResult.snapName,\n                snapRemovalResult.result === 'failed'\n                  ? t('keyringSnapRemovalResultNotSuccessful')\n                  : '',\n              ])}\n            </Text>\n          </Box>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default KeyringSnapRemovalResult;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { getEnvironmentType } from '../../../../app/scripts/lib/util';\nimport { ENVIRONMENT_TYPE_POPUP } from '../../../../shared/constants/app';\nimport isMobileView from '../../../helpers/utils/is-mobile-view';\nimport * as actions from '../../../store/actions';\n\nimport HideTokenConfirmationModal from './hide-token-confirmation-modal';\nimport QRScanner from './qr-scanner';\n\nimport ConfirmRemoveAccount from './confirm-remove-account';\nimport ConfirmResetAccount from './confirm-reset-account';\nimport TransactionConfirmed from './transaction-confirmed';\n\nimport ConfirmDeleteNetwork from './confirm-delete-network';\nimport ConvertTokenToNftModal from './convert-token-to-nft-modal/convert-token-to-nft-modal';\nimport CustomizeNonceModal from './customize-nonce';\nimport EditApprovalPermission from './edit-approval-permission';\nimport FadeModal from './fade-modal';\nimport NewAccountModal from './new-account-modal';\nimport RejectTransactions from './reject-transactions';\nimport TransactionAlreadyConfirmed from './transaction-already-confirmed';\n\n// Metamask Notifications\nimport ConfirmTurnOffProfileSyncing from './confirm-turn-off-profile-syncing';\nimport TurnOnMetamaskNotifications from './turn-on-metamask-notifications/turn-on-metamask-notifications';\n\nconst modalContainerBaseStyle = {\n  transform: 'translate3d(-50%, 0, 0px)',\n  border: '1px solid var(--color-border-default)',\n  borderRadius: '8px',\n  backgroundColor: 'var(--color-background-default)',\n  boxShadow: 'var(--shadow-size-sm) var(--color-shadow-default)',\n};\n\nconst modalContainerLaptopStyle = {\n  ...modalContainerBaseStyle,\n  width: '344px',\n  top: '15%',\n};\n\nconst modalContainerMobileStyle = {\n  ...modalContainerBaseStyle,\n  width: '309px',\n  top: '12.5%',\n};\n\n\nconst MODALS = {\n  NEW_ACCOUNT: {\n    contents: <NewAccountModal />,\n    mobileModalStyle: {\n      width: '95%',\n      top: '10%',\n      boxShadow: 'var(--shadow-size-xs) var(--color-shadow-default)',\n      transform: 'none',\n      left: '0',\n      right: '0',\n      margin: '0 auto',\n      borderRadius: '10px',\n    },\n    laptopModalStyle: {\n      width: '375px',\n      top: '10%',\n      boxShadow: 'var(--shadow-size-xs) var(--color-shadow-default)',\n      transform: 'none',\n      left: '0',\n      right: '0',\n      margin: '0 auto',\n      borderRadius: '10px',\n    },\n    contentStyle: {\n      borderRadius: '10px',\n    },\n  },\n\n  HIDE_TOKEN_CONFIRMATION: {\n    contents: <HideTokenConfirmationModal />,\n    testId: 'hide-token-confirmation-modal',\n    mobileModalStyle: {\n      width: '95%',\n      top: getEnvironmentType() === ENVIRONMENT_TYPE_POPUP ? '52vh' : '36.5vh',\n    },\n    laptopModalStyle: {\n      width:\n        getEnvironmentType() === ENVIRONMENT_TYPE_POPUP ? '357px' : '449px',\n      top: 'calc(33% + 45px)',\n      paddingLeft:\n        getEnvironmentType() === ENVIRONMENT_TYPE_POPUP ? '16px' : null,\n      paddingRight:\n        getEnvironmentType() === ENVIRONMENT_TYPE_POPUP ? '16px' : null,\n    },\n  },\n\n  CONFIRM_RESET_ACCOUNT: {\n    contents: <ConfirmResetAccount />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  CONFIRM_REMOVE_ACCOUNT: {\n    contents: <ConfirmRemoveAccount />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  CONVERT_TOKEN_TO_NFT: {\n    contents: <ConvertTokenToNftModal />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  CONFIRM_DELETE_NETWORK: {\n    contents: <ConfirmDeleteNetwork />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  EDIT_APPROVAL_PERMISSION: {\n    contents: <EditApprovalPermission />,\n    mobileModalStyle: {\n      width: '95vw',\n      height: '100vh',\n      top: '50px',\n      transform: 'none',\n      left: '0',\n      right: '0',\n      margin: '0 auto',\n    },\n    laptopModalStyle: {\n      width: 'auto',\n      height: '0px',\n      top: '80px',\n      left: '0px',\n      transform: 'none',\n      margin: '0 auto',\n      position: 'relative',\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  TRANSACTION_CONFIRMED: {\n    disableBackdropClick: true,\n    contents: <TransactionConfirmed />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  TRANSACTION_ALREADY_CONFIRMED: {\n    disableBackdropClick: true,\n    contents: <TransactionAlreadyConfirmed />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n  },\n\n  QR_SCANNER: {\n    contents: <QRScanner />,\n    testId: 'qr-scanner-modal',\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  REJECT_TRANSACTIONS: {\n    contents: <RejectTransactions />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  CUSTOMIZE_NONCE: {\n    contents: <CustomizeNonceModal />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n\n  CONFIRM_TURN_OFF_PROFILE_SYNCING: {\n    contents: <ConfirmTurnOffProfileSyncing />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  TURN_ON_METAMASK_NOTIFICATIONS: {\n    contents: <TurnOnMetamaskNotifications />,\n    mobileModalStyle: {\n      ...modalContainerMobileStyle,\n    },\n    laptopModalStyle: {\n      ...modalContainerLaptopStyle,\n    },\n    contentStyle: {\n      borderRadius: '8px',\n    },\n  },\n\n  DEFAULT: {\n    contents: [],\n    mobileModalStyle: {},\n    laptopModalStyle: {},\n  },\n};\n\nconst BACKDROPSTYLE = {\n  backgroundColor: 'var(--color-overlay-default)',\n};\n\nfunction mapStateToProps(state) {\n  return {\n    active: state.appState.modal.open,\n    modalState: state.appState.modal.modalState,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    hideModal: (customOnHideOpts) => {\n      dispatch(actions.hideModal());\n      if (customOnHideOpts && customOnHideOpts.action) {\n        dispatch(customOnHideOpts.action(...customOnHideOpts.args));\n      }\n    },\n    hideWarning: () => {\n      dispatch(actions.hideWarning());\n    },\n  };\n}\n\n/**\n * @deprecated The `<Modal />` and the dispatch method of displaying modals has been deprecated in favor of local state and the `<Modal>` component from the component-library.\n * Please update your code to use the new `<Modal>` component instead, which can be found at ui/components/component-library/modal/modal.tsx.\n * You can find documentation for the new Modal component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-modal--docs}\n * If you would like to help with the replacement of the old Modal component, please submit a pull request\n */\nclass Modal extends Component {\n  static propTypes = {\n    active: PropTypes.bool.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    hideWarning: PropTypes.func.isRequired,\n    modalState: PropTypes.object.isRequired,\n  };\n\n  hide() {\n    this.modalRef.hide();\n  }\n\n  show() {\n    this.modalRef.show();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, _) {\n    if (nextProps.active) {\n      this.show();\n    } else if (this.props.active) {\n      this.hide();\n    }\n  }\n\n  render() {\n    const modal = MODALS[this.props.modalState.name || 'DEFAULT'];\n    const { contents: children, disableBackdropClick = false, testId } = modal;\n    const modalStyle =\n      modal[isMobileView() ? 'mobileModalStyle' : 'laptopModalStyle'];\n    const contentStyle = modal.contentStyle || {};\n\n    return (\n      <FadeModal\n        keyboard={false}\n        onHide={() => {\n          if (modal.onHide) {\n            modal.onHide({\n              hideWarning: this.props.hideWarning,\n            });\n          }\n          this.props.hideModal(modal.customOnHideOpts);\n        }}\n        ref={(ref) => {\n          this.modalRef = ref;\n        }}\n        modalStyle={modalStyle}\n        contentStyle={contentStyle}\n        backdropStyle={BACKDROPSTYLE}\n        closeOnClick={!disableBackdropClick}\n        testId={testId}\n      >\n        {children}\n      </FadeModal>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","export { default } from './new-account-modal.container';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../../ui/button/button.component';\nimport { ButtonIcon, IconName } from '../../../component-library';\n\nexport default class NewAccountModal extends Component {\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  static propTypes = {\n    hideModal: PropTypes.func.isRequired,\n    newAccountNumber: PropTypes.number.isRequired,\n    onSave: PropTypes.func.isRequired,\n  };\n\n  state = {\n    alias: this.context.t('newAccountNumberName', [\n      this.props.newAccountNumber,\n    ]),\n  };\n\n  onChange = (e) => {\n    this.setState({\n      alias: e.target.value,\n    });\n  };\n\n  onSubmit = async () => {\n    await this.props.onSave(this.state.alias).then(this.props.hideModal);\n  };\n\n  onKeyPress = (e) => {\n    if (e.key === 'Enter' && this.state.alias) {\n      this.onSubmit();\n    }\n  };\n\n  render() {\n    const { t } = this.context;\n\n    return (\n      <div className=\"new-account-modal\">\n        <div className=\"new-account-modal__content\">\n          <div className=\"new-account-modal__content__header\">\n            {t('newAccount')}\n            <ButtonIcon\n              className=\"new-account-modal__content__header-close\"\n              ariaLabel={t('close')}\n              onClick={this.props.hideModal}\n              iconName={IconName.Close}\n            />\n          </div>\n          <div className=\"new-account-modal__input-label\">\n            {t('accountName')}\n          </div>\n          <input\n            type=\"text\"\n            className=\"new-account-modal__input\"\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={this.state.alias}\n            autoFocus\n          />\n        </div>\n        <div className=\"new-account-modal__footer\">\n          <Button type=\"secondary\" onClick={this.props.hideModal}>\n            {t('cancel')}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={this.onSubmit}\n            disabled={!this.state.alias}\n          >\n            {t('save')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport {\n  addNewAccount,\n  setAccountLabel,\n  forceUpdateMetamaskState,\n  hideModal,\n} from '../../../../store/actions';\nimport NewAccountModal from './new-account-modal.component';\n\nfunction mapStateToProps(state) {\n  return {\n    ...(state.appState.modal.modalState.props || {}),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    hideModal: () => dispatch(hideModal()),\n    createAccount: async (newAccountName) => {\n      const newAccountAddress = await dispatch(addNewAccount());\n      if (newAccountName) {\n        dispatch(setAccountLabel(newAccountAddress, newAccountName));\n      }\n      await forceUpdateMetamaskState(dispatch);\n      return newAccountAddress;\n    },\n  };\n}\n\nfunction mergeProps(stateProps, dispatchProps) {\n  const { onCreateNewAccount } = stateProps;\n  const { createAccount } = dispatchProps;\n\n  return {\n    ...stateProps,\n    ...dispatchProps,\n    onSave: (newAccountName) => {\n      return createAccount(newAccountName).then((newAccountAddress) => {\n        onCreateNewAccount(newAccountAddress);\n      });\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(NewAccountModal);\n","export { default } from './nickname-popovers.component';\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getMultichainAccountUrl } from '../../../../helpers/utils/multichain/blockExplorer';\nimport { addToAddressBook } from '../../../../store/actions';\nimport {\n  getAddressBook,\n  getInternalAccountByAddress,\n} from '../../../../selectors';\nimport NicknamePopover from '../../../ui/nickname-popover';\nimport UpdateNicknamePopover from '../../../ui/update-nickname-popover/update-nickname-popover';\nimport { getMultichainNetwork } from '../../../../selectors/multichain';\nimport { useMultichainSelector } from '../../../../hooks/useMultichainSelector';\n\nconst SHOW_NICKNAME_POPOVER = 'SHOW_NICKNAME_POPOVER';\nconst ADD_NICKNAME_POPOVER = 'ADD_NICKNAME_POPOVER';\n\nconst NicknamePopovers = ({ address, onClose }) => {\n  const dispatch = useDispatch();\n\n  const [popoverToDisplay, setPopoverToDisplay] = useState(\n    SHOW_NICKNAME_POPOVER,\n  );\n\n  const addressBook = useSelector(getAddressBook);\n\n  const addressBookEntryObject = addressBook.find(\n    (entry) => entry.address === address,\n  );\n\n  const recipientNickname = addressBookEntryObject?.name;\n\n  // This may be undefined because the address may be a contract address\n  const account = useSelector((state) =>\n    getInternalAccountByAddress(state, address),\n  );\n\n  const multichainNetwork = useMultichainSelector(\n    getMultichainNetwork,\n    account,\n  );\n\n  const explorerLink = getMultichainAccountUrl(address, multichainNetwork);\n\n  if (popoverToDisplay === ADD_NICKNAME_POPOVER) {\n    return (\n      <UpdateNicknamePopover\n        address={address}\n        nickname={recipientNickname || null}\n        memo={addressBookEntryObject?.memo || null}\n        onClose={() => setPopoverToDisplay(SHOW_NICKNAME_POPOVER)}\n        onAdd={(recipient, nickname, memo) =>\n          dispatch(addToAddressBook(recipient, nickname, memo))\n        }\n      />\n    );\n  }\n\n  // SHOW_NICKNAME_POPOVER case\n  return (\n    <NicknamePopover\n      address={address}\n      nickname={recipientNickname || null}\n      onClose={onClose}\n      onAdd={() => setPopoverToDisplay(ADD_NICKNAME_POPOVER)}\n      explorerLink={explorerLink}\n    />\n  );\n};\n\nNicknamePopovers.propTypes = {\n  address: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default NicknamePopovers;\n","import QrScanner from './qr-scanner.container';\n\nexport default QrScanner;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport log from 'loglevel';\nimport { BrowserQRCodeReader } from '@zxing/browser';\nimport { usePrevious } from '../../../../hooks/usePrevious';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { getEnvironmentType } from '../../../../../app/scripts/lib/util';\nimport { getURL } from '../../../../helpers/utils/util';\nimport WebcamUtils from '../../../../helpers/utils/webcam-utils';\nimport PageContainerFooter from '../../../ui/page-container/page-container-footer/page-container-footer.component';\nimport Spinner from '../../../ui/spinner';\n\nimport { ENVIRONMENT_TYPE_FULLSCREEN } from '../../../../../shared/constants/app';\nimport { SECOND } from '../../../../../shared/constants/time';\nimport { parseScanContent } from './scan-util';\n\nconst READY_STATE = {\n  ACCESSING_CAMERA: 'ACCESSING_CAMERA',\n  NEED_TO_ALLOW_ACCESS: 'NEED_TO_ALLOW_ACCESS',\n  READY: 'READY',\n};\n\nconst parseContent = (content) => {\n  let type = 'unknown';\n  let values = {};\n\n  // Here we could add more cases\n  // To parse other type of links\n  // For ex. EIP-681 (https://eips.ethereum.org/EIPS/eip-681)\n\n  // Ethereum address links - fox ex. ethereum:0x.....1111\n  if (content.split('ethereum:').length > 1) {\n    type = 'address';\n    // uses regex capture groups to match and extract address while ignoring everything else\n    values = { address: parseScanContent(content) };\n    // Regular ethereum addresses - fox ex. 0x.....1111\n  } else if (content.substring(0, 2).toLowerCase() === '0x') {\n    type = 'address';\n    values = { address: content };\n  }\n  return { type, values };\n};\n\nexport default function QRCodeScanner({ hideModal, qrCodeDetected }) {\n  const t = useI18nContext();\n  const [isReady, setIsReady] = useState(READY_STATE.ACCESSING_CAMERA);\n  const previousIsReady = usePrevious(isReady);\n\n  const [errorData, setErrorData] = useState(null);\n  const [isMounted, setIsMounted] = useState(false);\n  const [codeReader, setCodeReader] = useState(null);\n  const [permissionChecker, setPermissionChecker] = useState(null);\n\n  const checkPermissions = useCallback(async () => {\n    try {\n      const { permissions } = await WebcamUtils.checkStatus();\n      if (permissions) {\n        // Let the video stream load first...\n        await new Promise((resolve) => setTimeout(resolve, SECOND * 2));\n        if (!isMounted) {\n          return;\n        }\n        setIsReady(READY_STATE.READY);\n      } else if (isMounted) {\n        // Keep checking for permissions\n        setPermissionChecker(setTimeout(this.checkPermissions, SECOND));\n      }\n    } catch (error) {\n      if (isMounted) {\n        setErrorData({ error });\n      }\n    }\n  }, [isMounted]);\n\n  const teardownCodeReader = useCallback(() => {\n    if (codeReader) {\n      codeReader.constructor.cleanVideoSource();\n      codeReader.constructor.releaseAllStreams();\n      setCodeReader(null);\n    }\n  }, [codeReader]);\n\n  const stopAndClose = useCallback(() => {\n    if (codeReader) {\n      teardownCodeReader(hideModal);\n    }\n    hideModal();\n  }, [codeReader, hideModal, teardownCodeReader]);\n\n  const initCamera = useCallback(async () => {\n    // The `decodeFromInputVideoDevice` call prompts the browser to show\n    // the user the camera permission request.  We must then call it again\n    // once we receive permission so that the video displays.\n    // It's important to prevent this codeReader from being created twice;\n    // Firefox otherwise starts 2 video streams, one of which cannot be stopped\n    if (!codeReader) {\n      setCodeReader(new BrowserQRCodeReader());\n    }\n  }, [codeReader]);\n\n  useEffect(() => {\n    (async () => {\n      if (codeReader) {\n        try {\n          await checkPermissions();\n          await codeReader.constructor.listVideoInputDevices();\n          const content = await codeReader.decodeOnceFromVideoDevice(\n            undefined,\n            'video',\n          );\n          const result = parseContent(content.text);\n          if (isMounted) {\n            if (result.type === 'unknown') {\n              setErrorData(new Error(t('unknownQrCode')));\n            } else {\n              qrCodeDetected(result);\n              stopAndClose();\n            }\n          }\n        } catch (error) {\n          if (isMounted) {\n            return;\n          }\n          if (error.name === 'NotAllowedError') {\n            log.info(`Permission denied: '${error}'`);\n            setIsReady(READY_STATE.NEED_TO_ALLOW_ACCESS);\n          } else {\n            setErrorData(error);\n          }\n        }\n      }\n    })();\n  }, [\n    checkPermissions,\n    codeReader,\n    isMounted,\n    qrCodeDetected,\n    stopAndClose,\n    t,\n  ]);\n\n  const checkEnvironment = async () => {\n    try {\n      const { environmentReady } = await WebcamUtils.checkStatus();\n      if (\n        !environmentReady &&\n        getEnvironmentType() !== ENVIRONMENT_TYPE_FULLSCREEN\n      ) {\n        const currentUrl = getURL(window.location.href);\n        const currentHash = currentUrl?.hash;\n        const currentRoute = currentHash ? currentHash.substring(1) : null;\n        global.platform.openExtensionInBrowser(currentRoute);\n      }\n    } catch (error) {\n      if (isMounted) {\n        setErrorData({ error });\n      }\n    }\n    // initial attempt is required to trigger permission prompt\n    await initCamera();\n  };\n\n  useEffect(() => {\n    // Anything in here is fired on component mount.\n    setIsMounted(true);\n    (async () => {\n      await checkEnvironment();\n    })();\n    // only renders when component is mounted and unmounted\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (previousIsReady !== isReady) {\n        if (isReady === READY_STATE.READY) {\n          await initCamera();\n        } else if (isReady === READY_STATE.NEED_TO_ALLOW_ACCESS) {\n          await checkPermissions();\n        }\n      }\n    })();\n  }, [previousIsReady, isReady, initCamera, checkPermissions]);\n\n  const tryAgain = async () => {\n    clearTimeout(permissionChecker);\n    if (codeReader) {\n      teardownCodeReader();\n    }\n    setIsReady(READY_STATE.ACCESSING_CAMERA);\n    setErrorData(null);\n\n    await checkEnvironment();\n  };\n\n  const renderError = () => {\n    let title, msg;\n    if (errorData.type === 'NO_WEBCAM_FOUND') {\n      title = t('noWebcamFoundTitle');\n      msg = t('noWebcamFound');\n    } else if (errorData.message === t('unknownQrCode')) {\n      msg = t('unknownQrCode');\n    } else {\n      title = t('generalCameraErrorTitle');\n      msg = t('generalCameraError');\n    }\n\n    return (\n      <>\n        <div className=\"qr-scanner__image\">\n          <img src=\"images/webcam.svg\" width=\"70\" height=\"70\" alt=\"\" />\n        </div>\n        {title && <div className=\"qr-scanner__title\">{title}</div>}\n        <div className=\"qr-scanner__error\">{msg}</div>\n        <PageContainerFooter\n          onCancel={stopAndClose}\n          onSubmit={tryAgain}\n          cancelText={t('cancel')}\n          submitText={t('tryAgain')}\n        />\n      </>\n    );\n  };\n\n  const getQRScanMessage = (state) => {\n    let message;\n    switch (state) {\n      case READY_STATE.ACCESSING_CAMERA:\n        message = t('accessingYourCamera');\n        break;\n      case READY_STATE.READY:\n        message = t('scanInstructions');\n        break;\n      case READY_STATE.NEED_TO_ALLOW_ACCESS:\n        message = t('youNeedToAllowCameraAccess');\n        break;\n      default:\n        message = t('accessingYourCamera');\n    }\n    return message;\n  };\n\n  const renderVideo = () => {\n    return (\n      <>\n        <div className=\"qr-scanner__title\">{`${t('scanQrCode')}`}</div>\n        <div className=\"qr-scanner__content\">\n          <div className=\"qr-scanner__content__video-wrapper\">\n            <video\n              id=\"video\"\n              style={{\n                display: isReady === READY_STATE.READY ? 'block' : 'none',\n              }}\n            />\n            {isReady !== READY_STATE.READY && <Spinner />}\n          </div>\n        </div>\n        <div className=\"qr-scanner__status\">{getQRScanMessage(isReady)}</div>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"qr-scanner\">\n      <div className=\"qr-scanner__close\" onClick={stopAndClose} />\n      {errorData ? renderError() : renderVideo()}\n    </div>\n  );\n}\n\nQRCodeScanner.propTypes = {\n  hideModal: PropTypes.func.isRequired,\n  qrCodeDetected: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { hideModal, qrCodeDetected } from '../../../../store/actions';\nimport QrScanner from './qr-scanner.component';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    hideModal: () => dispatch(hideModal()),\n    qrCodeDetected: (data) => dispatch(qrCodeDetected(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(QrScanner);\n","export function parseScanContent(content: string): string | null {\n  const matches = content.match(/^[a-zA-Z]+:(0x[0-9a-fA-F]{40})(?:@.*)?/u);\n  if (!matches) {\n    return null;\n  }\n  return matches[1];\n}\n","export { default } from './reject-transactions.container';\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Modal from '../../modal';\n\nexport default class RejectTransactionsModal extends PureComponent {\n  static contextTypes = {\n    t: PropTypes.func.isRequired,\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    unapprovedTxCount: PropTypes.number.isRequired,\n    isRequestType: PropTypes.bool,\n  };\n\n  onSubmit = async () => {\n    const { onSubmit, hideModal } = this.props;\n\n    await onSubmit();\n    hideModal();\n  };\n\n  render() {\n    const { t } = this.context;\n    const { hideModal, unapprovedTxCount, isRequestType } = this.props;\n\n    return (\n      <Modal\n        headerText={\n          isRequestType\n            ? t('rejectRequestsN', [unapprovedTxCount])\n            : t('rejectTxsN', [unapprovedTxCount])\n        }\n        onClose={hideModal}\n        onSubmit={this.onSubmit}\n        onCancel={hideModal}\n        submitText={t('rejectAll')}\n        cancelText={t('cancel')}\n      >\n        <div>\n          <div className=\"reject-transactions__description\">\n            {isRequestType\n              ? t('rejectRequestsDescription', [unapprovedTxCount])\n              : t('rejectTxsDescription', [unapprovedTxCount])}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport RejectTransactionsModal from './reject-transactions.component';\n\nconst mapStateToProps = (_, ownProps) => {\n  const { unapprovedTxCount } = ownProps;\n\n  return {\n    unapprovedTxCount,\n  };\n};\n\nexport default compose(\n  withModalProps,\n  connect(mapStateToProps),\n)(RejectTransactionsModal);\n","export { default } from './transaction-already-confirmed';\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBlockExplorerLink } from '@metamask/etherscan-link';\nimport { type TransactionMeta } from '@metamask/transaction-controller';\nimport { type NetworkClientConfiguration } from '@metamask/network-controller';\nimport {\n  getRpcPrefsForCurrentProvider,\n  getTransaction,\n} from '../../../../selectors';\nimport { useModalProps } from '../../../../hooks/useModalProps';\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Text,\n  ModalFooter,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport { MetaMaskReduxState } from '../../../../store/store';\n\nexport default function TransactionAlreadyConfirmed() {\n  const {\n    hideModal,\n    props: { originalTransactionId },\n  } = useModalProps();\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const transaction: TransactionMeta = useSelector(\n    (state: MetaMaskReduxState) =>\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (getTransaction as any)(state, originalTransactionId),\n  );\n  const rpcPrefs: NetworkClientConfiguration = useSelector(\n    getRpcPrefsForCurrentProvider,\n  );\n\n  const viewTransaction = () => {\n    // TODO: Fix getBlockExplorerLink arguments compatible with the actual controller types\n    const blockExplorerLink = getBlockExplorerLink(\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      transaction as any,\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      rpcPrefs as any,\n    );\n    global.platform.openTab({\n      url: blockExplorerLink,\n    });\n    dispatch(hideModal());\n  };\n\n  return (\n    <Modal isOpen onClose={hideModal}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader onClose={hideModal}>\n          {t('yourTransactionConfirmed')}\n        </ModalHeader>\n        <ModalBody>\n          <Text>{t('yourTransactionJustConfirmed')}</Text>\n        </ModalBody>\n        <ModalFooter\n          onSubmit={hideModal}\n          onCancel={viewTransaction}\n          submitButtonProps={{\n            children: t('gotIt'),\n          }}\n          cancelButtonProps={{\n            children: t('viewOnBlockExplorer'),\n          }}\n          containerProps={{\n            flexDirection: FlexDirection.Column,\n            alignItems: AlignItems.stretch,\n          }}\n        />\n      </ModalContent>\n    </Modal>\n  );\n}\n","export { default } from './transaction-confirmed.container';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../modal';\nimport { Icon, IconName, IconSize, Text } from '../../../component-library';\nimport {\n  IconColor,\n  TextVariant,\n  TextAlign,\n  FontWeight,\n} from '../../../../helpers/constants/design-system';\n\nexport default class TransactionConfirmed extends PureComponent {\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n    hideModal: PropTypes.func,\n  };\n\n  handleSubmit = () => {\n    const { hideModal, onSubmit } = this.props;\n\n    hideModal();\n\n    if (onSubmit && typeof onSubmit === 'function') {\n      onSubmit();\n    }\n  };\n\n  render() {\n    const { t } = this.context;\n\n    return (\n      <Modal onSubmit={this.handleSubmit} submitText={t('ok')}>\n        <div className=\"transaction-confirmed__content\">\n          <Icon\n            name={IconName.Check}\n            color={IconColor.successDefault}\n            size={IconSize.Xl}\n          />\n          <Text\n            variant={TextVariant.headingMd}\n            fontWeight={FontWeight.Medium}\n            textAlign={TextAlign.Center}\n          >\n            {`${t('confirmed')}!`}\n          </Text>\n          <Text textAlign={TextAlign.Center}>\n            {t('initialTransactionConfirmed')}\n          </Text>\n        </div>\n      </Modal>\n    );\n  }\n}\n","import withModalProps from '../../../../helpers/higher-order-components/with-modal-props';\nimport TransactionConfirmed from './transaction-confirmed.component';\n\nexport default withModalProps(TransactionConfirmed);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport { useModalProps } from '../../../../hooks/useModalProps';\nimport { useMetamaskNotificationsContext } from '../../../../contexts/metamask-notifications/metamask-notifications';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../shared/constants/metametrics';\nimport {\n  selectIsMetamaskNotificationsEnabled,\n  getIsUpdatingMetamaskNotifications,\n} from '../../../../selectors/metamask-notifications/metamask-notifications';\nimport { selectIsProfileSyncingEnabled } from '../../../../selectors/metamask-notifications/profile-syncing';\nimport { useCreateNotifications } from '../../../../hooks/metamask-notifications/useNotifications';\nimport { NOTIFICATIONS_ROUTE } from '../../../../helpers/constants/routes';\n\nimport {\n  Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Text,\n  ModalFooter,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  BorderRadius,\n  FlexDirection,\n  FontWeight,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\n\nexport default function TurnOnMetamaskNotifications() {\n  const { hideModal } = useModalProps();\n  const history = useHistory();\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n  const { listNotifications } = useMetamaskNotificationsContext();\n\n  const isNotificationEnabled = useSelector(\n    selectIsMetamaskNotificationsEnabled,\n  );\n  const isUpdatingMetamaskNotifications = useSelector(\n    getIsUpdatingMetamaskNotifications,\n  );\n  const isProfileSyncingEnabled = useSelector(selectIsProfileSyncingEnabled);\n\n  const [isLoading, setIsLoading] = useState<boolean>(\n    isUpdatingMetamaskNotifications,\n  );\n\n  const { createNotifications, error } = useCreateNotifications();\n\n  const handleTurnOnNotifications = async () => {\n    setIsLoading(true);\n    trackEvent({\n      category: MetaMetricsEventCategory.NotificationsActivationFlow,\n      event: MetaMetricsEventName.NotificationsActivated,\n      properties: {\n        is_profile_syncing_enabled: true,\n        action_type: 'activated',\n      },\n    });\n    await createNotifications();\n  };\n\n  const handleHideModal = () => {\n    hideModal();\n    setIsLoading((prevLoadingState) => {\n      if (!prevLoadingState) {\n        trackEvent({\n          category: MetaMetricsEventCategory.NotificationsActivationFlow,\n          event: MetaMetricsEventName.NotificationsActivated,\n          properties: {\n            is_profile_syncing_enabled: isProfileSyncingEnabled,\n            action_type: 'dismissed',\n          },\n        });\n      }\n      return prevLoadingState;\n    });\n  };\n\n  useEffect(() => {\n    if (isNotificationEnabled && !error) {\n      history.push(NOTIFICATIONS_ROUTE);\n      hideModal();\n      listNotifications();\n    }\n  }, [isNotificationEnabled, error]);\n\n  const privacyLink = (\n    <Text\n      as=\"a\"\n      href=\"https://support.metamask.io/privacy-and-security/profile-privacy\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      key=\"privacy-link\"\n      color={TextColor.infoDefault}\n    >\n      {t('turnOnMetamaskNotificationsMessagePrivacyLink')}\n    </Text>\n  );\n\n  const strongText = (\n    <Text as=\"span\" fontWeight={FontWeight.Bold} key=\"strong-text\">\n      {t('turnOnMetamaskNotificationsMessagePrivacyBold')}\n    </Text>\n  );\n\n  return (\n    <Modal isOpen onClose={() => handleHideModal()}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader onClose={() => handleHideModal()}>\n          {t('turnOnMetamaskNotifications')}\n        </ModalHeader>\n        <ModalBody>\n          <Box\n            as=\"img\"\n            src=\"./images/turn-on-metamask-notifications.png\"\n            width={BlockSize.Full}\n            borderRadius={BorderRadius.MD}\n            marginBottom={4}\n          />\n          <Text as=\"p\">{t('turnOnMetamaskNotificationsMessageFirst')}</Text>\n          <Text as=\"p\" paddingTop={4}>\n            {\n              // @ts-expect-error: Expected 0-1 arguments, but got an array.\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              t('turnOnMetamaskNotificationsMessageSecond', [privacyLink])\n            }\n          </Text>\n          <Text as=\"p\" paddingTop={4}>\n            {\n              // @ts-expect-error: Expected 0-1 arguments, but got an array.\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              t('turnOnMetamaskNotificationsMessageThird', [strongText])\n            }\n          </Text>\n        </ModalBody>\n        <ModalFooter\n          paddingTop={4}\n          onSubmit={() => handleTurnOnNotifications()}\n          containerProps={{\n            flexDirection: FlexDirection.Column,\n            alignItems: AlignItems.stretch,\n          }}\n          submitButtonProps={{\n            children: t('turnOnMetamaskNotificationsButton'),\n            loading: isLoading,\n            disabled: isLoading,\n            'data-testid': 'turn-on-notifications-button',\n          }}\n        />\n        {error && (\n          <Box paddingLeft={4} paddingRight={4}>\n            <Text as=\"p\" color={TextColor.errorDefault} paddingTop={4}>\n              {t('turnOnMetamaskNotificationsError')}\n            </Text>\n          </Box>\n        )}\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NetworkConfiguration } from '@metamask/network-controller';\nimport {\n  Modal,\n  ModalContent,\n  ModalOverlay,\n  ModalBody,\n  ModalFooter,\n  Box,\n  Text,\n} from '../../component-library';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  BorderRadius,\n  TextAlign,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { setShowMultiRpcModal } from '../../../store/actions';\nimport { getEnvironmentType } from '../../../../app/scripts/lib/util';\nimport { getNetworkConfigurationsByChainId } from '../../../selectors';\nimport { ENVIRONMENT_TYPE_POPUP } from '../../../../shared/constants/app';\nimport NetworkListItem from './network-list-item/network-list-item';\n\nfunction MultiRpcEditModal() {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const isPopUp = getEnvironmentType() === ENVIRONMENT_TYPE_POPUP;\n  const networkConfigurations = useSelector(getNetworkConfigurationsByChainId);\n\n  return (\n    <Modal\n      isOpen={true}\n      onClose={() => dispatch(setShowMultiRpcModal(false))}\n      isClosedOnOutsideClick={false}\n      isClosedOnEscapeKey={false}\n      data-testid=\"multi-rpc-edit-modal\"\n      autoFocus={false}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalBody display={Display.Flex} flexDirection={FlexDirection.Column}>\n          <Box\n            display={Display.Flex}\n            alignItems={AlignItems.center}\n            justifyContent={JustifyContent.center}\n            borderRadius={BorderRadius.SM}\n          >\n            <img src=\"/images/networks1.png\" />\n          </Box>\n          <Text variant={TextVariant.bodyMdBold} textAlign={TextAlign.Center}>\n            {t('updatedRpcForNetworks')}\n          </Text>\n\n          <Text\n            variant={TextVariant.bodyMd}\n            textAlign={TextAlign.Center}\n            paddingTop={2}\n          >\n            {t('supportMultiRpcInformation')}\n          </Text>\n\n          <Box paddingBottom={6}>\n            <Box marginTop={isPopUp ? 0 : 4} marginBottom={1}>\n              {Object.values(networkConfigurations).map(\n                (networkConfiguration: NetworkConfiguration) =>\n                  networkConfiguration.rpcEndpoints.length > 1 ? (\n                    <NetworkListItem\n                      networkConfiguration={networkConfiguration}\n                      key={networkConfiguration.chainId}\n                    />\n                  ) : null,\n              )}\n            </Box>\n          </Box>\n        </ModalBody>\n        <ModalFooter\n          onSubmit={() => {\n            dispatch(setShowMultiRpcModal(false));\n          }}\n          submitButtonProps={{\n            children: t('accept'),\n            block: true,\n          }}\n        />\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default MultiRpcEditModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  NetworkConfiguration,\n  RpcEndpointType,\n} from '@metamask/network-controller';\nimport {\n  Box,\n  Text,\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Button,\n  Popover,\n  PopoverPosition,\n  ButtonVariant,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  FlexDirection,\n  TextColor,\n  TextVariant,\n  TextAlign,\n  JustifyContent,\n  BlockSize,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { setEditedNetwork, toggleNetworkMenu } from '../../../../store/actions';\nimport { CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP } from '../../../../../shared/constants/network';\n\nconst NetworkListItem = ({\n  networkConfiguration,\n}: {\n  networkConfiguration: NetworkConfiguration;\n}) => {\n  const rpcEndpoint =\n    networkConfiguration.rpcEndpoints[\n      networkConfiguration.defaultRpcEndpointIndex\n    ];\n\n  const t = useI18nContext();\n  const [isOpenTooltip, setIsOpenTooltip] = useState(false);\n  const dispatch = useDispatch();\n\n  const [referenceElement, setReferenceElement] =\n    useState<HTMLElement | null>();\n  const setBoxRef = (anchorRef: HTMLElement | null) => {\n    setReferenceElement(anchorRef);\n  };\n\n  const handleMouseEnter = () => {\n    setIsOpenTooltip(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsOpenTooltip(false);\n  };\n\n  return (\n    <Box\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      flexDirection={FlexDirection.Row}\n      justifyContent={JustifyContent.spaceBetween}\n      paddingBottom={4}\n      paddingTop={4}\n    >\n      <Box\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        width={BlockSize.EightTwelfths}\n      >\n        <AvatarNetwork\n          size={AvatarNetworkSize.Md}\n          src={\n            CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[\n              networkConfiguration.chainId as keyof typeof CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP\n            ]\n          }\n          name={networkConfiguration.name}\n        />\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          width={BlockSize.ElevenTwelfths}\n        >\n          <Box marginLeft={4}>\n            <Text\n              color={TextColor.textDefault}\n              backgroundColor={BackgroundColor.transparent}\n              ellipsis\n            >\n              {networkConfiguration.name}\n            </Text>\n          </Box>\n          <Box\n            display={Display.Flex}\n            alignItems={AlignItems.center}\n            marginLeft={4}\n          >\n            <Text\n              padding={0}\n              backgroundColor={BackgroundColor.transparent}\n              as=\"button\"\n              variant={TextVariant.bodySmMedium}\n              color={TextColor.textAlternative}\n              ref={setBoxRef}\n              style={{ width: 220 }}\n              textAlign={TextAlign.Left}\n              onMouseLeave={handleMouseLeave}\n              onMouseOver={handleMouseEnter}\n              ellipsis\n            >\n              {rpcEndpoint.name ?? new URL(rpcEndpoint.url).host}\n            </Text>\n            <Popover\n              referenceElement={referenceElement}\n              position={PopoverPosition.Bottom}\n              isOpen={isOpenTooltip}\n              hasArrow\n              backgroundColor={BackgroundColor.backgroundAlternative}\n              paddingTop={2}\n              paddingBottom={2}\n            >\n              <Text variant={TextVariant.bodyXsMedium} ellipsis>\n                {rpcEndpoint.type === RpcEndpointType.Infura\n                  ? rpcEndpoint.url.replace('/v3/{infuraProjectId}', '')\n                  : rpcEndpoint.url}\n              </Text>\n            </Popover>\n          </Box>\n        </Box>\n      </Box>\n\n      <Box display={Display.Flex} alignItems={AlignItems.center} marginLeft={1}>\n        <Button\n          type=\"button\"\n          variant={ButtonVariant.Link}\n          onClick={() => {\n            dispatch(\n              toggleNetworkMenu({\n                isAddingNewNetwork: false,\n                isMultiRpcOnboarding: true,\n              }),\n            );\n            dispatch(\n              setEditedNetwork({\n                chainId: networkConfiguration.chainId,\n                nickname: networkConfiguration.name,\n              }),\n            );\n          }}\n        >\n          {t('edit')}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NetworkListItem;\n","export { default } from './multiple-notifications.component';\n","import React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport default class MultipleNotifications extends PureComponent {\n  static defaultProps = {\n    children: [],\n    classNames: [],\n  };\n\n  static propTypes = {\n    children: PropTypes.array,\n    classNames: PropTypes.array,\n  };\n\n  state = {\n    showAll: false,\n  };\n\n  render() {\n    const { showAll } = this.state;\n    const { children, classNames } = this.props;\n\n    const childrenToRender = children.filter(Boolean);\n    if (childrenToRender.length === 0) {\n      return null;\n    }\n\n    return (\n      <div\n        className={classnames(\n          ...classNames,\n          'home-notification-wrapper--multichain',\n          {\n            'home-notification-wrapper--show-all': showAll,\n            'home-notification-wrapper--show-first': !showAll,\n          },\n        )}\n      >\n        {childrenToRender}\n        <div\n          className=\"home-notification-wrapper__i-container\"\n          onClick={() => this.setState({ showAll: !showAll })}\n        >\n          {childrenToRender.length > 1 ? (\n            <i\n              className={classnames('fa fa-sm fa-sort-amount', {\n                flipped: !showAll,\n              })}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","export { default } from './name';\n","import { useCallback, useContext } from 'react';\nimport { NameType } from '@metamask/name-controller';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../shared/constants/metametrics';\nimport { FormComboFieldOption } from '../../../ui/form-combo-field/form-combo-field';\n\nexport function usePetnamesMetrics({\n  initialSources,\n  name,\n  proposedNameOptions,\n  savedName,\n  savedSourceId,\n  selectedSourceId,\n  type,\n}: {\n  initialSources?: string[];\n  name?: string;\n  proposedNameOptions: FormComboFieldOption[];\n  savedName: string | null;\n  savedSourceId: string | null;\n  selectedSourceId?: string;\n  type: NameType;\n}) {\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const trackPetnamesEvent = useCallback(\n    (\n      event: MetaMetricsEventName,\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      additionalProperties: Record<string, any> = {},\n    ) => {\n      const suggestedNameSources = [\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ...new Set(proposedNameOptions.map((option: any) => option.sourceId)),\n      ];\n\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const properties: Record<string, any> = {\n        petname_category: type,\n        suggested_names_sources: suggestedNameSources,\n        ...additionalProperties,\n      };\n\n      trackEvent({\n        event,\n        category: MetaMetricsEventCategory.Petnames,\n        properties,\n      });\n    },\n    [trackEvent, type, proposedNameOptions],\n  );\n\n  const trackPetnamesSaveEvent = useCallback(() => {\n    const petnameSource = selectedSourceId ?? null;\n    const isDeleted = savedName?.length && !name?.length;\n    const isUpdated = savedName?.length && name?.length && name !== savedName;\n    const isCreated = !savedName?.length && name?.length;\n\n    let event: MetaMetricsEventName | null = null;\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let additionalProperties: Record<string, any> = {};\n\n    if (isDeleted) {\n      event = MetaMetricsEventName.PetnameDeleted;\n\n      additionalProperties = {\n        petname_previous_source: savedSourceId,\n      };\n    }\n\n    if (isUpdated) {\n      event = MetaMetricsEventName.PetnameUpdated;\n\n      additionalProperties = {\n        petname_previous_source: savedSourceId,\n        petname_source: petnameSource,\n      };\n    }\n\n    if (isCreated) {\n      event = MetaMetricsEventName.PetnameCreated;\n\n      additionalProperties = {\n        petname_source: petnameSource,\n      };\n    }\n\n    if (!event) {\n      return;\n    }\n\n    trackPetnamesEvent(event, additionalProperties);\n  }, [trackPetnamesEvent, name, selectedSourceId, savedName, savedSourceId]);\n\n  const trackPetnamesOpenEvent = useCallback(() => {\n    trackPetnamesEvent(MetaMetricsEventName.PetnameModalOpened, {\n      has_petname: Boolean(savedName?.length),\n      suggested_names_sources: initialSources,\n    });\n  }, [trackPetnamesEvent, savedName, initialSources]);\n\n  return { trackPetnamesOpenEvent, trackPetnamesSaveEvent };\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  NameControllerState,\n  NameEntry,\n  NameType,\n  UpdateProposedNamesResult,\n} from '@metamask/name-controller';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport { toChecksumAddress } from 'ethereumjs-util';\nimport {\n  Box,\n  Button,\n  ButtonIcon,\n  ButtonIconSize,\n  ButtonVariant,\n  FormTextField,\n  IconName,\n  Label,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  ModalBody,\n  ModalFooter,\n  ButtonSize,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n} from '../../../../helpers/constants/design-system';\nimport Name from '../name';\nimport FormComboField, {\n  FormComboFieldOption,\n} from '../../../ui/form-combo-field/form-combo-field';\nimport { getCurrentChainId, getNameSources } from '../../../../selectors';\nimport {\n  setName as saveName,\n  updateProposedNames,\n} from '../../../../store/actions';\nimport { useCopyToClipboard } from '../../../../hooks/useCopyToClipboard';\nimport { useName } from '../../../../hooks/useName';\nimport { useDisplayName } from '../../../../hooks/useDisplayName';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { usePetnamesMetrics } from './metrics';\n\nconst UPDATE_DELAY = 1000 * 2; // 2 Seconds\n\nexport type NameDetailsProps = {\n  onClose: () => void;\n  sourcePriority?: string[];\n  type: NameType;\n  value: string;\n};\n\ntype ProposedNameOption = Required<FormComboFieldOption> & {\n  sourceId: string;\n};\n\nfunction formatValue(value: string, type: NameType): string {\n  if (!value.length) {\n    return value;\n  }\n\n  switch (type) {\n    case NameType.ETHEREUM_ADDRESS:\n      return toChecksumAddress(value);\n\n    default:\n      return value;\n  }\n}\n\n// Provider source ids that have a localized name:\nconst LOCALIZED_PROVIDERS = ['ens', 'etherscan', 'lens', 'token'];\n// The following lines avoid i18n \"unused messages\" lint error.\n// t('nameProvider_ens');\n// t('nameProvider_etherscan');\n// t('nameProvider_lens');\n// t('nameProvider_token');\n\nfunction getProviderLabel(\n  sourceId: string,\n  t: ReturnType<typeof useI18nContext>,\n  nameSources: NameControllerState['nameSources'],\n) {\n  if (LOCALIZED_PROVIDERS.includes(sourceId)) {\n    // Use intermediate variable to avoid \"Forbidden use of template strings\n    // in 't' function\" error.\n    const messageKey = `nameProvider_${sourceId}`;\n    return t(messageKey);\n  }\n  return nameSources[sourceId]?.label ?? sourceId;\n}\n\nfunction generateComboOptions(\n  proposedNameEntries: NameEntry['proposedNames'],\n  t: ReturnType<typeof useI18nContext>,\n  nameSources: NameControllerState['nameSources'],\n): ProposedNameOption[] {\n  const sourceIds = Object.keys(proposedNameEntries);\n\n  const sourceIdsWithProposedNames = sourceIds.filter(\n    (sourceId) => proposedNameEntries[sourceId]?.proposedNames?.length,\n  );\n\n  const options: ProposedNameOption[] = sourceIdsWithProposedNames\n    .map((sourceId: string) => {\n      const sourceProposedNames =\n        proposedNameEntries[sourceId]?.proposedNames ?? [];\n\n      return sourceProposedNames.map((proposedName: string) => ({\n        value: proposedName,\n        primaryLabel: t('nameModalMaybeProposedName', [proposedName]),\n        secondaryLabel: t('nameProviderProposedBy', [\n          getProviderLabel(sourceId, t, nameSources),\n        ]),\n        sourceId,\n      }));\n    })\n    .flat();\n\n  return options.sort((a, b) =>\n    a.secondaryLabel\n      .toLowerCase()\n      .localeCompare(b.secondaryLabel.toLowerCase()),\n  );\n}\n\nfunction getInitialSources(\n  proposedNamesResult: Record<string, { proposedNames?: string[] }>,\n  proposedNamesState: Record<string, { proposedNames?: string[] }>,\n): string[] {\n  const resultSources = Object.keys(proposedNamesResult).filter(\n    (sourceId) => proposedNamesResult[sourceId].proposedNames?.length,\n  );\n\n  const stateSources = Object.keys(proposedNamesState).filter(\n    (sourceId) =>\n      !proposedNamesResult[sourceId]?.proposedNames &&\n      proposedNamesState[sourceId].proposedNames?.length,\n  );\n\n  return [...resultSources, ...stateSources].sort();\n}\n\nfunction useProposedNames(value: string, type: NameType, chainId: string) {\n  const dispatch = useDispatch();\n  const { proposedNames } = useName(value, type);\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const updateInterval = useRef<any>();\n  const [initialSources, setInitialSources] = useState<string[]>();\n\n  useEffect(() => {\n    const reset = () => {\n      if (updateInterval.current) {\n        clearInterval(updateInterval.current);\n      }\n    };\n\n    const update = async () => {\n      const result = (await dispatch(\n        updateProposedNames({\n          value,\n          type,\n          onlyUpdateAfterDelay: true,\n          variation: chainId,\n        }),\n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      )) as any as UpdateProposedNamesResult;\n\n      if (!initialSources) {\n        setInitialSources(\n          getInitialSources(result?.results ?? {}, proposedNames),\n        );\n      }\n    };\n\n    reset();\n    update();\n\n    updateInterval.current = setInterval(update, UPDATE_DELAY);\n    return reset;\n  }, [value, type, chainId, dispatch, initialSources, setInitialSources]);\n\n  return { proposedNames, initialSources };\n}\n\nexport default function NameDetails({\n  onClose,\n  type,\n  value,\n}: NameDetailsProps) {\n  const chainId = useSelector(getCurrentChainId);\n  const { name: savedPetname, sourceId: savedSourceId } = useName(value, type);\n  const { name: displayName, hasPetname: hasSavedPetname } = useDisplayName(\n    value,\n    type,\n  );\n  const nameSources = useSelector(getNameSources, isEqual);\n  const [name, setName] = useState('');\n  const [openMetricSent, setOpenMetricSent] = useState(false);\n  const [selectedSourceId, setSelectedSourceId] = useState<string>();\n  const [selectedSourceName, setSelectedSourceName] = useState<string>();\n  const dispatch = useDispatch();\n  const t = useI18nContext();\n\n  const isRecognizedUnsaved = !hasSavedPetname && Boolean(displayName);\n  const formattedValue = formatValue(value, type);\n\n  const { proposedNames, initialSources } = useProposedNames(\n    value,\n    type,\n    chainId,\n  );\n\n  const [copiedAddress, handleCopyAddress] = useCopyToClipboard() as [\n    boolean,\n    (value: string) => void,\n  ];\n\n  useEffect(() => {\n    setName(savedPetname ?? '');\n    setSelectedSourceId(savedSourceId ?? undefined);\n    setSelectedSourceName(\n      savedSourceId ? savedPetname ?? undefined : undefined,\n    );\n  }, [savedPetname, savedSourceId, setName, setSelectedSourceId]);\n\n  const proposedNameOptions = useMemo(\n    () => generateComboOptions(proposedNames, t, nameSources),\n    [proposedNames, nameSources],\n  );\n\n  const { trackPetnamesOpenEvent, trackPetnamesSaveEvent } = usePetnamesMetrics(\n    {\n      initialSources,\n      name,\n      proposedNameOptions,\n      savedName: savedPetname,\n      savedSourceId,\n      selectedSourceId,\n      type,\n    },\n  );\n\n  useEffect(() => {\n    if (initialSources && !openMetricSent) {\n      trackPetnamesOpenEvent();\n      setOpenMetricSent(true);\n    }\n  }, [initialSources, openMetricSent, trackPetnamesOpenEvent]);\n\n  const handleSaveClick = useCallback(async () => {\n    trackPetnamesSaveEvent();\n\n    await dispatch(\n      saveName({\n        value,\n        type,\n        name: name?.length ? name : null,\n        sourceId: selectedSourceId,\n        variation: chainId,\n      }),\n    );\n\n    onClose();\n  }, [name, selectedSourceId, onClose, trackPetnamesSaveEvent, chainId]);\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleNameChange = useCallback(\n    (newName: string) => {\n      setName(newName);\n\n      if (newName !== selectedSourceName) {\n        setSelectedSourceId(undefined);\n        setSelectedSourceName(undefined);\n      }\n    },\n    [setName, selectedSourceId, setSelectedSourceId, setSelectedSourceName],\n  );\n\n  const handleProposedNameClick = useCallback(\n    (option: ProposedNameOption) => {\n      setSelectedSourceId(option.sourceId);\n      setSelectedSourceName(option.value);\n    },\n    [setSelectedSourceId, setSelectedSourceName],\n  );\n\n  const handleCopyClick = useCallback(() => {\n    handleCopyAddress(formattedValue);\n  }, [handleCopyAddress, formattedValue]);\n\n  const [title, instructions] = (() => {\n    if (hasSavedPetname) {\n      return [t('nameModalTitleSaved'), t('nameInstructionsSaved')];\n    }\n    if (isRecognizedUnsaved) {\n      return [t('nameModalTitleRecognized'), t('nameInstructionsRecognized')];\n    }\n    return [t('nameModalTitleNew'), t('nameInstructionsNew')];\n  })();\n\n  return (\n    <Box>\n      <Modal isOpen onClose={handleClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader onClose={handleClose}>{title}</ModalHeader>\n          <ModalBody className=\"name-details__modal-body\">\n            <div\n              style={{ textAlign: 'center', marginBottom: 16, marginTop: 8 }}\n            >\n              <Name\n                value={value}\n                type={NameType.ETHEREUM_ADDRESS}\n                disableEdit\n                internal\n              />\n            </div>\n            <Text marginBottom={4} justifyContent={JustifyContent.spaceBetween}>\n              {instructions}\n            </Text>\n            {/* @ts-ignore */}\n            <FormTextField\n              id=\"address\"\n              className=\"name-details__address\"\n              label={t('nameAddressLabel')}\n              value={formattedValue}\n              marginBottom={4}\n              disabled\n              endAccessory={\n                <ButtonIcon\n                  display={Display.Flex}\n                  iconName={\n                    copiedAddress ? IconName.CopySuccess : IconName.Copy\n                  }\n                  size={ButtonIconSize.Sm}\n                  onClick={handleCopyClick}\n                  color={IconColor.iconMuted}\n                  ariaLabel={t('copyAddress')}\n                />\n              }\n            />\n            <Label\n              flexDirection={FlexDirection.Column}\n              alignItems={AlignItems.flexStart}\n              marginBottom={2}\n              className=\"name-details__display-name\"\n            >\n              {t('nameLabel')}\n              <FormComboField\n                hideDropdownIfNoOptions\n                value={name}\n                options={proposedNameOptions}\n                placeholder={t('nameSetPlaceholder')}\n                onChange={handleNameChange}\n                onOptionClick={handleProposedNameClick}\n              />\n            </Label>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              variant={ButtonVariant.Primary}\n              startIconName={IconName.Save}\n              width={BlockSize.Full}\n              onClick={handleSaveClick}\n              size={ButtonSize.Lg}\n            >\n              {t('save')}\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n}\n","import React, {\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { NameType } from '@metamask/name-controller';\nimport classnames from 'classnames';\nimport { toChecksumAddress } from 'ethereumjs-util';\nimport { Icon, IconName, IconSize, Text } from '../../component-library';\nimport { shortenAddress } from '../../../helpers/utils/util';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport { TextVariant } from '../../../helpers/constants/design-system';\nimport { useDisplayName } from '../../../hooks/useDisplayName';\nimport Identicon from '../../ui/identicon';\nimport NameDetails from './name-details/name-details';\n\nexport type NameProps = {\n  /** Whether to prevent the modal from opening when the component is clicked. */\n  disableEdit?: boolean;\n\n  /** Whether this is being rendered inside the NameDetails modal. */\n  internal?: boolean;\n\n  /** The type of value, e.g. NameType.ETHEREUM_ADDRESS */\n  type: NameType;\n\n  /** The raw value to display the name of. */\n  value: string;\n\n  /**\n   * Applies to recognized contracts with no petname saved:\n   * If true the contract symbol (e.g. WBTC) will be used instead of the contract name.\n   */\n  preferContractSymbol?: boolean;\n};\n\nfunction formatValue(value: string, type: NameType): string {\n  if (!value.length) {\n    return value;\n  }\n\n  switch (type) {\n    case NameType.ETHEREUM_ADDRESS:\n      return shortenAddress(toChecksumAddress(value));\n\n    default:\n      return value;\n  }\n}\n\nconst Name = memo(\n  ({\n    value,\n    type,\n    disableEdit,\n    internal,\n    preferContractSymbol = false,\n  }: NameProps) => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const trackEvent = useContext(MetaMetricsContext);\n\n    const { name, hasPetname } = useDisplayName(\n      value,\n      type,\n      preferContractSymbol,\n    );\n\n    useEffect(() => {\n      if (internal) {\n        return;\n      }\n\n      trackEvent({\n        event: MetaMetricsEventName.PetnameDisplayed,\n        category: MetaMetricsEventCategory.Petnames,\n        properties: {\n          petname_category: type,\n          has_petname: Boolean(name?.length),\n        },\n      });\n    }, []);\n\n    const handleClick = useCallback(() => {\n      setModalOpen(true);\n    }, [setModalOpen]);\n\n    const handleModalClose = useCallback(() => {\n      setModalOpen(false);\n    }, [setModalOpen]);\n\n    const formattedValue = formatValue(value, type);\n    const hasDisplayName = Boolean(name);\n\n    return (\n      <div>\n        {!disableEdit && modalOpen && (\n          <NameDetails value={value} type={type} onClose={handleModalClose} />\n        )}\n        <div\n          className={classnames({\n            name: true,\n            name__saved: hasPetname,\n            name__recognized_unsaved: !hasPetname && hasDisplayName,\n            name__missing: !hasDisplayName,\n          })}\n          onClick={handleClick}\n        >\n          {hasDisplayName ? (\n            <Identicon address={value} diameter={16} />\n          ) : (\n            <Icon\n              name={IconName.Question}\n              className=\"name__icon\"\n              size={IconSize.Md}\n            />\n          )}\n          {hasDisplayName ? (\n            <Text className=\"name__name\" variant={TextVariant.bodyMd}>\n              {name}\n            </Text>\n          ) : (\n            <Text className=\"name__value\" variant={TextVariant.bodyMd}>\n              {formattedValue}\n            </Text>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default Name;\n","export { default } from './network-account-balance-header';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport IconWithFallback from '../../ui/icon-with-fallback';\nimport Identicon from '../../ui/identicon';\nimport {\n  Display,\n  FlexDirection,\n  TextVariant,\n  FontWeight,\n  AlignItems,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport Box from '../../ui/box/box';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP } from '../../../../shared/constants/network';\nimport { Text } from '../../component-library';\n\nexport default function NetworkAccountBalanceHeader({\n  networkName,\n  accountName,\n  accountBalance,\n  tokenName, // Derived from nativeCurrency\n  accountAddress,\n  chainId,\n}) {\n  const t = useContext(I18nContext);\n  const networkIcon = CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[chainId];\n  const networkIconWrapperClass = networkIcon\n    ? 'network-account-balance-header__network-account__ident-icon-ethereum'\n    : 'network-account-balance-header__network-account__ident-icon-ethereum--gray';\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      padding={4}\n      className=\"network-account-balance-header\"\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.spaceBetween}\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        alignItems={AlignItems.center}\n        gap={2}\n      >\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Row}\n          alignItems={AlignItems.center}\n        >\n          <Identicon address={accountAddress} diameter={32} />\n          <IconWithFallback\n            name={networkName}\n            size={16}\n            icon={networkIcon}\n            wrapperClassName={networkIconWrapperClass}\n          />\n        </Box>\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.flexStart}\n          flexDirection={FlexDirection.Column}\n        >\n          <Text\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            color={TextColor.textAlternative}\n            data-testid=\"signature-request-network-display\"\n          >\n            {networkName}\n          </Text>\n\n          <Text\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            color={TextColor.textDefault}\n            fontWeight={FontWeight.Bold}\n          >\n            {accountName}\n          </Text>\n        </Box>\n      </Box>\n      <Box\n        display={Display.Flex}\n        alignItems={AlignItems.flexEnd}\n        flexDirection={FlexDirection.Column}\n      >\n        <Text\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          color={TextColor.textAlternative}\n        >\n          {t('balance')}\n        </Text>\n\n        <Text\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          color={TextColor.textDefault}\n          fontWeight={FontWeight.Bold}\n          align={TextAlign.End}\n        >\n          {accountBalance} {tokenName}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n\nNetworkAccountBalanceHeader.propTypes = {\n  networkName: PropTypes.string,\n  accountName: PropTypes.string,\n  accountBalance: PropTypes.string,\n  tokenName: PropTypes.string,\n  accountAddress: PropTypes.string,\n  chainId: PropTypes.string,\n};\n","export { default } from './network-display';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  BorderColor,\n  BackgroundColor,\n} from '../../../helpers/constants/design-system';\nimport { getCurrentNetwork } from '../../../selectors';\nimport { PickerNetwork, AvatarNetworkSize } from '../../component-library';\n\nexport default function NetworkDisplay() {\n  const currentNetwork = useSelector(getCurrentNetwork);\n\n  return (\n    <PickerNetwork\n      className=\"network-display\"\n      label={currentNetwork?.nickname}\n      labelProps={{ 'data-testid': 'network-display' }}\n      src={currentNetwork?.rpcPrefs?.imageUrl}\n      iconProps={{ display: 'none' }} // do not show the dropdown icon\n      avatarNetworkProps={{ size: AvatarNetworkSize.Xs }}\n      as=\"div\" // do not render as a button\n      backgroundColor={BackgroundColor.transparent}\n      borderWidth={0}\n      borderColor={BorderColor.borderMuted}\n    />\n  );\n}\n","export { default } from './permission-cell';\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Box from '../../ui/box';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { IconName, ButtonIcon, Text } from '../../component-library';\nimport { Menu, MenuItem } from '../../ui/menu';\nimport {\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport Popover from '../../ui/popover/popover.component';\nimport { DynamicSnapPermissions } from '../../../../shared/constants/snaps/permissions';\nimport { revokeDynamicSnapPermissions } from '../../../store/actions';\n\nexport const PermissionCellOptions = ({\n  snapId,\n  permissionName,\n  description,\n}) => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const ref = useRef(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n\n  const isRevokable = DynamicSnapPermissions.includes(permissionName);\n\n  const handleOpen = () => {\n    setShowOptions(true);\n  };\n\n  const handleClose = () => {\n    setShowOptions(false);\n  };\n\n  const handleDetailsOpen = () => {\n    setShowOptions(false);\n    setShowDetails(true);\n  };\n\n  const handleDetailsClose = () => {\n    setShowOptions(false);\n    setShowDetails(false);\n  };\n\n  const handleRevokePermission = () => {\n    setShowOptions(false);\n    dispatch(revokeDynamicSnapPermissions(snapId, [permissionName]));\n  };\n\n  return (\n    <Box ref={ref}>\n      <ButtonIcon\n        iconName={IconName.MoreVertical}\n        ariaLabel={t('options')}\n        onClick={handleOpen}\n        data-testid={permissionName}\n      />\n      {showOptions && (\n        <Menu anchorElement={ref.current} onHide={handleClose}>\n          <MenuItem onClick={handleDetailsOpen}>\n            <Text\n              variant={TextVariant.bodySm}\n              style={{\n                whiteSpace: 'nowrap',\n              }}\n            >\n              {t('details')}\n            </Text>\n          </MenuItem>\n          {isRevokable && (\n            <MenuItem onClick={handleRevokePermission}>\n              <Text\n                variant={TextVariant.bodySm}\n                color={TextColor.errorDefault}\n                style={{\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                {t('revokePermission')}\n              </Text>\n            </MenuItem>\n          )}\n        </Menu>\n      )}\n      {showDetails && (\n        <Popover title={t('details')} onClose={handleDetailsClose}>\n          <Box marginLeft={4} marginRight={4} marginBottom={4}>\n            <Text>{description}</Text>\n          </Box>\n        </Popover>\n      )}\n    </Box>\n  );\n};\n\nPermissionCellOptions.propTypes = {\n  snapId: PropTypes.string.isRequired,\n  permissionName: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AvatarAccount,\n  AvatarAccountSize,\n  AvatarNetwork,\n  AvatarNetworkSize,\n  AvatarTokenSize,\n  Box,\n  Text,\n} from '../../component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  BorderColor,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport Tooltip from '../../ui/tooltip';\nimport { AvatarGroup } from '../../multichain';\nimport { AvatarType } from '../../multichain/avatar-group/avatar-group.types';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { formatDate } from '../../../helpers/utils/util';\n\n/**\n * Renders status of the given permission. Used by PermissionCell component.\n *\n * @param props - The props.\n * @param props.revoked - Boolean value to identify if permission is being revoked.\n * @param props.dateApproved - Timestamp when permission is approved.\n * @param props.accounts - List of accounts for which permission is requested, approved or revoked.\n * @param props.approved - Boolean value in case a permission has been approved, but there is no date to show.\n * @param props.networks\n * @returns React element rendering permission status with or without account icons displayed as AvatarGroup.\n */\nexport const PermissionCellStatus = ({\n  revoked,\n  approved,\n  dateApproved,\n  accounts,\n  networks,\n}) => {\n  const t = useI18nContext();\n\n  const renderAccountsGroup = () => (\n    <>\n      {process.env.CHAIN_PERMISSIONS ? (\n        <Box\n          as=\"span\"\n          className=\"permission-cell__status__accounts-group-box\"\n          display={Display.InlineFlex}\n        >\n          <Box display={Display.Flex} flexDirection={FlexDirection.Column}>\n            {networks?.map((network, index) => (\n              <Box\n                key={`${network.nickname}_${index}`}\n                display={Display.Flex}\n                justifyContent={JustifyContent.flexStart}\n                alignItems={AlignItems.center}\n                marginTop={2}\n              >\n                <AvatarNetwork\n                  size={AvatarNetworkSize.Xs}\n                  src={network.rpcPrefs?.imageUrl}\n                  name={network.nickname}\n                />\n                <Text variant={TextVariant.bodyMdMedium} marginLeft={2}>\n                  {network.avatarName}\n                </Text>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n      ) : (\n        <Box\n          as=\"span\"\n          className=\"permission-cell__status__accounts-group-box\"\n          display={Display.InlineFlex}\n        >\n          <Tooltip\n            position=\"bottom\"\n            html={\n              <Box\n                display={Display.Flex}\n                flexDirection={FlexDirection.Column}\n                justifyContent={JustifyContent.center}\n                alignItems={AlignItems.center}\n              >\n                <Text\n                  variant={TextVariant.headingSm}\n                  color={TextColor.textAlternative}\n                  textAlign={TextAlign.Center}\n                >\n                  {t('accounts')}\n                </Text>\n                <Box\n                  display={Display.Flex}\n                  flexDirection={FlexDirection.Column}\n                >\n                  {accounts.map((account, index) => (\n                    <Box\n                      key={`${account.avatarValue}_${index}`}\n                      display={Display.Flex}\n                      justifyContent={JustifyContent.flexStart}\n                      alignItems={AlignItems.center}\n                      marginTop={2}\n                    >\n                      <AvatarAccount\n                        address={account.avatarValue}\n                        size={AvatarAccountSize.Xs}\n                        borderColor={BorderColor.backgroundDefault}\n                      />\n                      <Text variant={TextVariant.bodyMdMedium} marginLeft={2}>\n                        {account.avatarName}\n                      </Text>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n            }\n          >\n            <AvatarGroup\n              limit={3}\n              members={accounts}\n              avatarType={AvatarType.ACCOUNT}\n              size={AvatarTokenSize.Xs}\n              width={BlockSize.Min}\n              borderColor={BorderColor.backgroundDefault}\n              marginLeft={4}\n              paddingLeft={4}\n            />\n          </Tooltip>\n        </Box>\n      )}\n    </>\n  );\n\n  const getStatusMessage = () => {\n    if (revoked) {\n      return accounts && accounts.length\n        ? t('permissionRevokedForAccounts', [renderAccountsGroup()])\n        : t('permissionRevoked');\n    }\n\n    if (dateApproved) {\n      return accounts && accounts.length\n        ? t('approvedOnForAccounts', [\n            formatDate(dateApproved, 'yyyy-MM-dd'),\n            renderAccountsGroup(),\n          ])\n        : t('approvedOn', [formatDate(dateApproved, 'yyyy-MM-dd')]);\n    }\n\n    if (approved) {\n      return t('approved');\n    }\n\n    return accounts && accounts.length\n      ? t('permissionRequestedForAccounts', [renderAccountsGroup()])\n      : t('permissionRequested');\n  };\n\n  return (\n    <Text\n      as=\"div\"\n      className=\"permission-cell__status\"\n      variant={TextVariant.bodySm}\n      color={TextColor.textAlternative}\n      display={Display.Flex}\n    >\n      {getStatusMessage()}\n    </Text>\n  );\n};\n\nPermissionCellStatus.propTypes = {\n  revoked: PropTypes.bool,\n  approved: PropTypes.bool,\n  dateApproved: PropTypes.number,\n  accounts: PropTypes.array,\n  networks: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport {\n  AlignItems,\n  Color,\n  IconColor,\n  JustifyContent,\n  Size,\n  TextColor,\n  TextVariant,\n  Display,\n  BlockSize,\n  FlexWrap,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\nimport {\n  AvatarIcon,\n  AvatarIconSize,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n  Box,\n} from '../../component-library';\nimport Tooltip from '../../ui/tooltip';\nimport { getRequestingNetworkInfo } from '../../../selectors';\nimport { PermissionCellOptions } from './permission-cell-options';\nimport { PermissionCellStatus } from './permission-cell-status';\n\nconst PermissionCell = ({\n  snapId,\n  permissionName,\n  title,\n  description,\n  weight,\n  avatarIcon,\n  dateApproved,\n  revoked,\n  approved,\n  showOptions,\n  hideStatus,\n  accounts,\n  permissionValue,\n}) => {\n  const infoIcon = IconName.Info;\n  let infoIconColor = IconColor.iconMuted;\n  let iconColor = IconColor.primaryDefault;\n  let iconBackgroundColor = Color.primaryMuted;\n\n  if (!revoked && weight <= 2) {\n    iconColor = IconColor.warningDefault;\n    iconBackgroundColor = Color.warningMuted;\n    infoIconColor = IconColor.warningDefault;\n  }\n\n  if (dateApproved || approved) {\n    iconColor = IconColor.iconMuted;\n    iconBackgroundColor = Color.backgroundAlternative;\n  }\n\n  if (revoked) {\n    iconColor = IconColor.iconMuted;\n    iconBackgroundColor = Color.backgroundAlternative;\n  }\n\n  let permissionIcon = avatarIcon;\n  if (typeof avatarIcon !== 'string' && avatarIcon?.props?.iconName) {\n    permissionIcon = avatarIcon.props.iconName;\n  }\n\n  const networksInfo = useSelector((state) =>\n    getRequestingNetworkInfo(state, permissionValue),\n  );\n\n  return (\n    <Box\n      className=\"permission-cell\"\n      display={Display.Flex}\n      justifyContent={JustifyContent.center}\n      alignItems={AlignItems.flexStart}\n      paddingTop={2}\n      paddingBottom={2}\n    >\n      <Box display={Display.Flex}>\n        {typeof permissionIcon === 'string' ? (\n          <AvatarIcon\n            iconName={permissionIcon}\n            size={AvatarIconSize.Md}\n            iconProps={{\n              size: IconSize.Sm,\n            }}\n            color={iconColor}\n            backgroundColor={iconBackgroundColor}\n          />\n        ) : (\n          permissionIcon\n        )}\n      </Box>\n      <Box\n        display={Display.Flex}\n        flexWrap={FlexWrap.Wrap}\n        flexDirection={FlexDirection.Column}\n        width={BlockSize.Full}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <Text\n          size={Size.MD}\n          variant={TextVariant.bodyMd}\n          className={classnames('permission-cell__title', {\n            'permission-cell__title-revoked': revoked,\n          })}\n        >\n          {title}\n        </Text>\n        {!hideStatus && (\n          <PermissionCellStatus\n            revoked={revoked}\n            approved={approved}\n            dateApproved={dateApproved}\n            accounts={accounts}\n            networks={networksInfo || null}\n          />\n        )}\n      </Box>\n      <Box display={Display.Flex}>\n        {showOptions && snapId ? (\n          <PermissionCellOptions\n            snapId={snapId}\n            permissionName={permissionName}\n            description={description}\n          />\n        ) : (\n          description && (\n            <Tooltip\n              html={\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.textAlternative}\n                >\n                  {description}\n                </Text>\n              }\n              position=\"bottom\"\n            >\n              <Icon color={infoIconColor} name={infoIcon} size={IconSize.Sm} />\n            </Tooltip>\n          )\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nPermissionCell.propTypes = {\n  snapId: PropTypes.string,\n  permissionName: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    .isRequired,\n  title: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.object.isRequired,\n  ]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  weight: PropTypes.number,\n  avatarIcon: PropTypes.any.isRequired,\n  dateApproved: PropTypes.number,\n  revoked: PropTypes.bool,\n  approved: PropTypes.bool,\n  showOptions: PropTypes.bool,\n  hideStatus: PropTypes.bool,\n  accounts: PropTypes.array,\n  permissionValue: PropTypes.array,\n};\n\nexport default PermissionCell;\n","export { default } from './permission-connect-header';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AlignItems,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n  Display,\n  BlockSize,\n  FontWeight,\n  FlexDirection,\n  BackgroundColor,\n} from '../../../helpers/constants/design-system';\nimport {\n  IconSize,\n  Text,\n  Box,\n  AvatarFavicon,\n  AvatarBase,\n} from '../../component-library';\nimport { getAvatarFallbackLetter } from '../../../helpers/utils/util';\n\nconst PermissionConnectHeader = ({ origin, iconUrl }) => {\n  const transformOriginToTitle = (rawOrigin) => {\n    try {\n      const url = new URL(rawOrigin);\n      const parts = url.hostname.split('.');\n      return parts.slice(-2).join('.');\n    } catch (e) {\n      return 'Unknown Origin';\n    }\n  };\n  const title = transformOriginToTitle(origin);\n\n  return (\n    <Box\n      backgroundColor={BackgroundColor.backgroundDefault}\n      width={BlockSize.Full}\n      alignItems={AlignItems.center}\n      display={Display.Flex}\n      padding={4}\n      style={{\n        boxShadow: 'var(--shadow-size-lg) var(--color-shadow-default)',\n      }}\n    >\n      <Box>\n        {iconUrl ? (\n          <AvatarFavicon\n            backgroundColor={BackgroundColor.backgroundAlternative}\n            size={IconSize.Lg}\n            src={iconUrl}\n            name={title}\n          />\n        ) : (\n          <AvatarBase\n            size={IconSize.Lg}\n            display={Display.Flex}\n            alignItems={AlignItems.center}\n            justifyContent={JustifyContent.center}\n            color={TextColor.textAlternative}\n            style={{ borderWidth: '0px' }}\n            backgroundColor={BackgroundColor.backgroundAlternative}\n          >\n            {getAvatarFallbackLetter(title)}\n          </AvatarBase>\n        )}\n      </Box>\n      <Box\n        marginLeft={4}\n        marginRight={4}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        style={{ overflow: 'hidden' }}\n      >\n        <Text ellipsis fontWeight={FontWeight.Medium}>\n          {title}\n        </Text>\n        <Text\n          ellipsis\n          variant={TextVariant.bodySm}\n          color={TextColor.textAlternative}\n        >\n          {origin}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nPermissionConnectHeader.propTypes = {\n  origin: PropTypes.string,\n  iconUrl: PropTypes.string,\n};\n\nexport default PermissionConnectHeader;\n","export { default } from './permission-page-container.container';\nexport { default as PermissionPageContainerContent } from './permission-page-container-content';\n","export { default } from './permission-page-container-content.component';\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport PermissionsConnectPermissionList from '../../permissions-connect-permission-list';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  FontWeight,\n  JustifyContent,\n  TextAlign,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { Box, Text } from '../../../component-library';\nimport { getURLHost } from '../../../../helpers/utils/util';\n\nexport default class PermissionPageContainerContent extends PureComponent {\n  static propTypes = {\n    subjectMetadata: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      origin: PropTypes.string.isRequired,\n      subjectType: PropTypes.string.isRequired,\n      extensionId: PropTypes.string,\n      iconUrl: PropTypes.string,\n    }),\n    selectedPermissions: PropTypes.object.isRequired,\n    selectedAccounts: PropTypes.array,\n  };\n\n  static defaultProps = {\n    selectedAccounts: [],\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  render() {\n    const { t } = this.context;\n\n    const { selectedPermissions, selectedAccounts, subjectMetadata } =\n      this.props;\n\n    const accounts = selectedAccounts.reduce((accumulator, account) => {\n      accumulator.push({\n        avatarValue: account.address,\n        avatarName: account.label,\n      });\n      return accumulator;\n    }, []);\n\n    return (\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        justifyContent={JustifyContent.flexStart}\n        alignItems={AlignItems.center}\n        height={BlockSize.Full}\n        paddingLeft={4}\n        paddingRight={4}\n        backgroundColor={BackgroundColor.backgroundAlternative}\n      >\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          justifyContent={JustifyContent.center}\n          alignItems={AlignItems.center}\n          paddingTop={4}\n          paddingBottom={4}\n        >\n          <Text variant={TextVariant.headingMd} textAlign={TextAlign.Center}>\n            {process.env.CHAIN_PERMISSIONS\n              ? t('reviewPermissions')\n              : t('permissions')}\n          </Text>\n          <Text variant={TextVariant.bodyMd} textAlign={TextAlign.Center}>\n            {process.env.CHAIN_PERMISSIONS\n              ? t('nativeNetworkPermissionRequestDescription', [\n                  <Text\n                    as=\"span\"\n                    key={`description_key_${subjectMetadata.origin}`}\n                    fontWeight={FontWeight.Medium}\n                  >\n                    {getURLHost(subjectMetadata.origin)}\n                  </Text>,\n                ])\n              : t('nativePermissionRequestDescription', [\n                  <Text\n                    as=\"span\"\n                    key={`description_key_${subjectMetadata.origin}`}\n                    fontWeight={FontWeight.Medium}\n                  >\n                    {subjectMetadata.origin}\n                  </Text>,\n                ])}\n          </Text>\n        </Box>\n        <Box\n          display={Display.Flex}\n          backgroundColor={BackgroundColor.backgroundDefault}\n          paddingLeft={4}\n          paddingRight={4}\n          paddingTop={2}\n          paddingBottom={2}\n          borderRadius={BorderRadius.XL}\n        >\n          <PermissionsConnectPermissionList\n            permissions={selectedPermissions}\n            subjectName={subjectMetadata.origin}\n            accounts={accounts}\n          />\n        </Box>\n      </Box>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  SnapCaveatType,\n  WALLET_SNAP_PERMISSION_KEY,\n} from '@metamask/snaps-rpc-methods';\nimport { SubjectType } from '@metamask/permission-controller';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport { PageContainerFooter } from '../../ui/page-container';\nimport PermissionsConnectFooter from '../permissions-connect-footer';\nimport { RestrictedMethods } from '../../../../shared/constants/permissions';\nimport { PermissionNames } from '../../../../app/scripts/controllers/permissions';\n\nimport SnapPrivacyWarning from '../snaps/snap-privacy-warning';\nimport { getDedupedSnaps } from '../../../helpers/utils/util';\nimport { containsEthPermissionsAndNonEvmAccount } from '../../../helpers/utils/permissions';\nimport {\n  BackgroundColor,\n  Display,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\nimport { Box } from '../../component-library';\nimport { PermissionPageContainerContent } from '.';\n\nexport default class PermissionPageContainer extends Component {\n  static propTypes = {\n    approvePermissionsRequest: PropTypes.func.isRequired,\n    rejectPermissionsRequest: PropTypes.func.isRequired,\n    selectedAccounts: PropTypes.array,\n    allAccountsSelected: PropTypes.bool,\n    currentPermissions: PropTypes.object,\n    snapsInstallPrivacyWarningShown: PropTypes.bool.isRequired,\n    setSnapsInstallPrivacyWarningShownStatus: PropTypes.func,\n    request: PropTypes.object,\n    requestMetadata: PropTypes.object,\n    targetSubjectMetadata: PropTypes.shape({\n      name: PropTypes.string,\n      origin: PropTypes.string.isRequired,\n      subjectType: PropTypes.string.isRequired,\n      extensionId: PropTypes.string,\n      iconUrl: PropTypes.string,\n    }),\n    history: PropTypes.object.isRequired,\n    connectPath: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    request: {},\n    requestMetadata: {},\n    selectedAccounts: [],\n    allAccountsSelected: false,\n    currentPermissions: {},\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n    trackEvent: PropTypes.func,\n  };\n\n  state = {};\n\n  getRequestedPermissions() {\n    const { request } = this.props;\n\n    // if the request contains a diff this means its an incremental permission request\n    const permissions =\n      request?.diff?.permissionDiffMap ?? request.permissions ?? {};\n\n    return Object.entries(permissions).reduce(\n      (acc, [permissionName, permissionValue]) => {\n        if (permissionName === RestrictedMethods.wallet_snap) {\n          acc[permissionName] = this.getDedupedSnapPermissions();\n          return acc;\n        }\n        acc[permissionName] = permissionValue;\n        return acc;\n      },\n      {},\n    );\n  }\n\n  getDedupedSnapPermissions() {\n    const { request, currentPermissions } = this.props;\n    const snapKeys = getDedupedSnaps(request, currentPermissions);\n    const permission = request?.permissions?.[WALLET_SNAP_PERMISSION_KEY] || {};\n    return {\n      ...permission,\n      caveats: [\n        {\n          type: SnapCaveatType.SnapIds,\n          value: snapKeys.reduce((caveatValue, snapId) => {\n            caveatValue[snapId] = {};\n            return caveatValue;\n          }, {}),\n        },\n      ],\n    };\n  }\n\n  showSnapsPrivacyWarning() {\n    this.setState({\n      isShowingSnapsPrivacyWarning: true,\n    });\n  }\n\n  componentDidMount() {\n    this.context.trackEvent({\n      category: MetaMetricsEventCategory.Auth,\n      event: 'Tab Opened',\n      properties: {\n        action: 'Connect',\n        legacy_event: true,\n      },\n    });\n\n    if (this.props.request.permissions[WALLET_SNAP_PERMISSION_KEY]) {\n      if (this.props.snapsInstallPrivacyWarningShown === false) {\n        this.showSnapsPrivacyWarning();\n      }\n    }\n  }\n\n  goBack() {\n    const { history, connectPath } = this.props;\n    history.push(connectPath);\n  }\n\n  onCancel = () => {\n    const { request, rejectPermissionsRequest } = this.props;\n    rejectPermissionsRequest(request.metadata.id);\n  };\n\n  onSubmit = () => {\n    const {\n      request: _request,\n      approvePermissionsRequest,\n      rejectPermissionsRequest,\n      selectedAccounts,\n    } = this.props;\n\n    const request = {\n      ..._request,\n      permissions: { ..._request.permissions },\n      ...(_request.permissions.eth_accounts && {\n        approvedAccounts: selectedAccounts.map(\n          (selectedAccount) => selectedAccount.address,\n        ),\n      }),\n      ...(_request.permissions.permittedChains && {\n        approvedChainIds: _request.permissions?.permittedChains?.caveats.find(\n          (caveat) => caveat.type === 'restrictNetworkSwitching',\n        )?.value,\n      }),\n    };\n\n    if (Object.keys(request.permissions).length > 0) {\n      approvePermissionsRequest(request);\n    } else {\n      rejectPermissionsRequest(request.metadata.id);\n    }\n  };\n\n  onLeftFooterClick = () => {\n    const requestedPermissions = this.getRequestedPermissions();\n    if (requestedPermissions[PermissionNames.permittedChains] === undefined) {\n      this.goBack();\n    } else {\n      this.onCancel();\n    }\n  };\n\n  render() {\n    const {\n      requestMetadata,\n      targetSubjectMetadata,\n      selectedAccounts,\n      allAccountsSelected,\n    } = this.props;\n\n    const requestedPermissions = this.getRequestedPermissions();\n\n    const setIsShowingSnapsPrivacyWarning = (value) => {\n      this.setState({\n        isShowingSnapsPrivacyWarning: value,\n      });\n    };\n\n    const confirmSnapsPrivacyWarning = () => {\n      setIsShowingSnapsPrivacyWarning(false);\n      this.props.setSnapsInstallPrivacyWarningShownStatus(true);\n    };\n\n    const footerLeftActionText = requestedPermissions[\n      PermissionNames.permittedChains\n    ]\n      ? this.context.t('cancel')\n      : this.context.t('back');\n\n    return (\n      <>\n        {this.state.isShowingSnapsPrivacyWarning && (\n          <SnapPrivacyWarning\n            onAccepted={() => confirmSnapsPrivacyWarning()}\n            onCanceled={() => this.onCancel()}\n          />\n        )}\n        <PermissionPageContainerContent\n          requestMetadata={requestMetadata}\n          subjectMetadata={targetSubjectMetadata}\n          selectedPermissions={requestedPermissions}\n          selectedAccounts={selectedAccounts}\n          allAccountsSelected={allAccountsSelected}\n        />\n        <Box\n          display={Display.Flex}\n          backgroundColor={BackgroundColor.backgroundAlternative}\n          flexDirection={FlexDirection.Column}\n        >\n          {targetSubjectMetadata?.subjectType !== SubjectType.Snap && (\n            <PermissionsConnectFooter />\n          )}\n          <PageContainerFooter\n            footerClassName=\"permission-page-container-footer\"\n            cancelButtonType=\"default\"\n            onCancel={() => this.onLeftFooterClick()}\n            cancelText={footerLeftActionText}\n            onSubmit={() => this.onSubmit()}\n            submitText={this.context.t('confirm')}\n            buttonSizeLarge={false}\n            disabled={containsEthPermissionsAndNonEvmAccount(\n              selectedAccounts,\n              requestedPermissions,\n            )}\n          />\n        </Box>\n      </>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { getInternalAccounts, getPermissions } from '../../../selectors';\nimport PermissionPageContainer from './permission-page-container.component';\n\nconst mapStateToProps = (state, ownProps) => {\n  const { selectedAccounts } = ownProps;\n  const currentPermissions = getPermissions(\n    state,\n    ownProps.request.metadata?.origin,\n  );\n\n  const allInternalAccounts = getInternalAccounts(state);\n  const allInternalAccountsSelected =\n    Object.keys(selectedAccounts).length ===\n      Object.keys(allInternalAccounts).length && selectedAccounts.length > 1;\n\n  return {\n    allInternalAccountsSelected,\n    currentPermissions,\n  };\n};\n\nexport default connect(mapStateToProps)(PermissionPageContainer);\n","export { default } from './permissions-connect-footer.component';\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ZENDESK_URLS from '../../../helpers/constants/zendesk-url';\nimport {\n  AlignItems,\n  Display,\n  JustifyContent,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { Box, ButtonLink, ButtonLinkSize, Text } from '../../component-library';\n\nexport default class PermissionsConnectFooter extends Component {\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  render() {\n    const { t } = this.context;\n    return (\n      <Box\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.center}\n      >\n        <Text variant={TextVariant.bodyMd}>\n          {t('onlyConnectTrust', [\n            <ButtonLink\n              key=\"permission-connect-footer-learn-more-link\"\n              size={ButtonLinkSize.Inherit}\n              target=\"_blank\"\n              onClick={() => {\n                global.platform.openTab({\n                  url: ZENDESK_URLS.USER_GUIDE_DAPPS,\n                });\n              }}\n            >\n              {t('learnMoreUpperCase')}\n            </ButtonLink>,\n          ])}\n        </Text>\n      </Box>\n    );\n  }\n}\n","export { default } from './permissions-connect-header.component';\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { SubjectType } from '@metamask/permission-controller';\nimport SiteOrigin from '../../ui/site-origin';\nimport Box from '../../ui/box';\nimport {\n  FLEX_DIRECTION,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\n\nexport default class PermissionsConnectHeader extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    iconUrl: PropTypes.string,\n    iconName: PropTypes.string.isRequired,\n    siteOrigin: PropTypes.string.isRequired,\n    headerTitle: PropTypes.node,\n    boxProps: PropTypes.shape({ ...Box.propTypes }),\n    headerText: PropTypes.string,\n    leftIcon: PropTypes.node,\n    rightIcon: PropTypes.node,\n    subjectType: PropTypes.string,\n  };\n\n  static defaultProps = {\n    iconUrl: null,\n    headerTitle: '',\n    headerText: '',\n    boxProps: {},\n  };\n\n  renderHeaderIcon() {\n    const { iconUrl, iconName, siteOrigin, leftIcon, rightIcon, subjectType } =\n      this.props;\n\n    if (subjectType === SubjectType.Snap) {\n      return null;\n    }\n\n    return (\n      <div className=\"permissions-connect-header__icon\">\n        <SiteOrigin\n          chip\n          siteOrigin={siteOrigin}\n          title={siteOrigin}\n          iconSrc={iconUrl}\n          name={iconName}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { boxProps, className, headerTitle, headerText } = this.props;\n    return (\n      <Box\n        className={classnames('permissions-connect-header', className)}\n        flexDirection={FLEX_DIRECTION.COLUMN}\n        justifyContent={JustifyContent.center}\n        {...boxProps}\n      >\n        {this.renderHeaderIcon()}\n        <div className=\"permissions-connect-header__title\">{headerTitle}</div>\n        <div className=\"permissions-connect-header__subtitle\">{headerText}</div>\n      </Box>\n    );\n  }\n}\n","export { default } from './permissions-connect-permission-list';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { getWeightedPermissions } from '../../../helpers/utils/permission';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { getSnapsMetadata } from '../../../selectors';\nimport { getSnapName } from '../../../helpers/utils/util';\nimport PermissionCell from '../permission-cell';\nimport { Box } from '../../component-library';\n\n/**\n * Get one or more permission descriptions for a permission name.\n *\n * @param permission - The permission to render.\n * @param index - The index of the permission.\n * @param accounts - An array representing list of accounts for which permission is used.\n * @returns {JSX.Element} A permission description node.\n */\nfunction getDescriptionNode(permission, index, accounts) {\n  return (\n    <PermissionCell\n      permissionName={permission.name}\n      title={permission.label}\n      description={permission.description}\n      weight={permission.weight}\n      avatarIcon={permission.leftIcon}\n      key={`${permission.permissionName}-${index}`}\n      accounts={accounts}\n      permissionValue={permission.permissionValue.restrictNetworkSwitching}\n    />\n  );\n}\n\nexport default function PermissionsConnectPermissionList({\n  permissions,\n  subjectName,\n  accounts,\n}) {\n  const t = useI18nContext();\n  const snapsMetadata = useSelector(getSnapsMetadata);\n\n  return (\n    <Box as=\"span\">\n      {getWeightedPermissions({\n        t,\n        permissions,\n        getSubjectName: getSnapName(snapsMetadata),\n        subjectName,\n      }).map((permission, index) => {\n        return getDescriptionNode(permission, index, accounts);\n      })}\n    </Box>\n  );\n}\n\nPermissionsConnectPermissionList.propTypes = {\n  permissions: PropTypes.object.isRequired,\n  subjectName: PropTypes.string.isRequired,\n  accounts: PropTypes.arrayOf(PropTypes.object),\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport log from 'loglevel';\nimport { URDecoder } from '@ngraveio/bc-ur';\nimport PropTypes from 'prop-types';\nimport { getEnvironmentType } from '../../../../app/scripts/lib/util';\nimport { ENVIRONMENT_TYPE_FULLSCREEN } from '../../../../shared/constants/app';\nimport WebcamUtils from '../../../helpers/utils/webcam-utils';\nimport PageContainerFooter from '../../ui/page-container/page-container-footer/page-container-footer.component';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { SECOND } from '../../../../shared/constants/time';\nimport EnhancedReader from './enhanced-reader';\n\nconst READY_STATE = {\n  ACCESSING_CAMERA: 'ACCESSING_CAMERA',\n  NEED_TO_ALLOW_ACCESS: 'NEED_TO_ALLOW_ACCESS',\n  READY: 'READY',\n};\n\nconst BaseReader = ({\n  isReadingWallet,\n  handleCancel,\n  handleSuccess,\n  setErrorTitle,\n}) => {\n  const t = useI18nContext();\n  const [ready, setReady] = useState(READY_STATE.ACCESSING_CAMERA);\n  const [error, setError] = useState(null);\n  const [urDecoder, setURDecoder] = useState(new URDecoder());\n  const [progress, setProgress] = useState(0);\n\n  let permissionChecker = null;\n  const mounted = useRef(false);\n\n  const reset = () => {\n    setReady(READY_STATE.ACCESSING_CAMERA);\n    setError(null);\n    setURDecoder(new URDecoder());\n    setProgress(0);\n  };\n\n  const checkEnvironment = async () => {\n    try {\n      const { environmentReady } = await WebcamUtils.checkStatus();\n      if (\n        !environmentReady &&\n        getEnvironmentType() !== ENVIRONMENT_TYPE_FULLSCREEN\n      ) {\n        const currentUrl = new URL(window.location.href);\n        const currentHash = currentUrl.hash;\n        const currentRoute = currentHash ? currentHash.substring(1) : null;\n        global.platform.openExtensionInBrowser(currentRoute);\n      }\n    } catch (e) {\n      if (mounted.current) {\n        setError(e);\n      }\n    }\n    // initial attempt is required to trigger permission prompt\n    // eslint-disable-next-line no-use-before-define\n    return initCamera();\n  };\n\n  const checkPermissions = async () => {\n    try {\n      const { permissions } = await WebcamUtils.checkStatus();\n      if (permissions) {\n        // Let the video stream load first...\n        await new Promise((resolve) => setTimeout(resolve, SECOND * 2));\n        if (!mounted.current) {\n          return;\n        }\n        setReady(READY_STATE.READY);\n      } else if (mounted.current) {\n        // Keep checking for permissions\n        permissionChecker = setTimeout(checkPermissions, SECOND);\n        setReady(READY_STATE.NEED_TO_ALLOW_ACCESS);\n      }\n    } catch (e) {\n      if (mounted.current) {\n        setError(e);\n      }\n    }\n  };\n\n  const handleScan = (data) => {\n    try {\n      if (!data) {\n        return;\n      }\n      urDecoder.receivePart(data);\n      setProgress(urDecoder.estimatedPercentComplete());\n      if (urDecoder.isComplete()) {\n        const result = urDecoder.resultUR();\n        handleSuccess(result).catch(setError);\n      }\n    } catch (e) {\n      if (isReadingWallet) {\n        setErrorTitle(t('QRHardwareUnknownQRCodeTitle'));\n      } else {\n        setErrorTitle(t('QRHardwareInvalidTransactionTitle'));\n      }\n      setError(new Error(t('unknownQrCode')));\n    }\n  };\n\n  const initCamera = () => {\n    try {\n      checkPermissions();\n    } catch (e) {\n      if (!mounted.current) {\n        return;\n      }\n      if (e.name === 'NotAllowedError') {\n        log.info(`Permission denied: '${e}'`);\n        setReady(READY_STATE.NEED_TO_ALLOW_ACCESS);\n      } else {\n        setError(e);\n      }\n    }\n  };\n\n  useEffect(() => {\n    mounted.current = true;\n    checkEnvironment();\n    return () => {\n      mounted.current = false;\n      clearTimeout(permissionChecker);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (ready === READY_STATE.READY) {\n      initCamera();\n    } else if (ready === READY_STATE.NEED_TO_ALLOW_ACCESS) {\n      checkPermissions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ready]);\n\n  const tryAgain = () => {\n    clearTimeout(permissionChecker);\n    reset();\n    checkEnvironment();\n  };\n\n  const renderError = () => {\n    let title, msg;\n    if (error.type === 'NO_WEBCAM_FOUND') {\n      title = t('noWebcamFoundTitle');\n      msg = t('noWebcamFound');\n    } else if (error.message === t('unknownQrCode')) {\n      if (isReadingWallet) {\n        msg = t('QRHardwareUnknownWalletQRCode');\n      } else {\n        msg = t('unknownQrCode');\n      }\n    } else if (error.message === t('QRHardwareMismatchedSignId')) {\n      msg = t('QRHardwareMismatchedSignId');\n    } else {\n      title = t('generalCameraErrorTitle');\n      msg = t('generalCameraError');\n    }\n\n    return (\n      <>\n        <div className=\"qr-scanner__image\">\n          <img src=\"images/webcam.svg\" width=\"70\" height=\"70\" alt=\"\" />\n        </div>\n        {title ? <div className=\"qr-scanner__title\">{title}</div> : null}\n        <div className=\"qr-scanner__error\" data-testid=\"qr-scanner__error\">\n          {msg}\n        </div>\n        <PageContainerFooter\n          onCancel={() => {\n            setErrorTitle('');\n            handleCancel();\n          }}\n          onSubmit={() => {\n            setErrorTitle('');\n            tryAgain();\n          }}\n          cancelText={t('cancel')}\n          submitText={t('tryAgain')}\n          submitButtonType=\"confirm\"\n        />\n      </>\n    );\n  };\n\n  const renderVideo = () => {\n    let message;\n    if (ready === READY_STATE.ACCESSING_CAMERA) {\n      message = t('accessingYourCamera');\n    } else if (ready === READY_STATE.READY) {\n      message = t('QRHardwareScanInstructions');\n    } else if (ready === READY_STATE.NEED_TO_ALLOW_ACCESS) {\n      message = t('youNeedToAllowCameraAccess');\n    }\n    return (\n      <>\n        <div className=\"qr-scanner__content\">\n          <EnhancedReader handleScan={handleScan} />\n        </div>\n        {progress > 0 && (\n          <div\n            className=\"qr-scanner__progress\"\n            data-testid=\"qr-reader-progress-bar\"\n            style={{ '--progress': `${Math.floor(progress * 100)}%` }}\n          ></div>\n        )}\n        {message && <div className=\"qr-scanner__status\">{message}</div>}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"qr-scanner\">{error ? renderError() : renderVideo()}</div>\n  );\n};\n\nBaseReader.propTypes = {\n  isReadingWallet: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleSuccess: PropTypes.func.isRequired,\n  setErrorTitle: PropTypes.func.isRequired,\n};\n\nexport default BaseReader;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { BarcodeFormat, DecodeHintType } from '@zxing/library';\nimport { BrowserQRCodeReader } from '@zxing/browser';\nimport log from 'loglevel';\nimport PropTypes from 'prop-types';\nimport { MILLISECOND } from '../../../../shared/constants/time';\nimport Spinner from '../../ui/spinner';\n\nconst EnhancedReader = ({ handleScan }) => {\n  const [canplay, setCanplay] = useState(false);\n  const codeReader = useMemo(() => {\n    const hint = new Map();\n    hint.set(DecodeHintType.POSSIBLE_FORMATS, [BarcodeFormat.QR_CODE]);\n    return new BrowserQRCodeReader(hint, {\n      delayBetweenScanAttempts: MILLISECOND * 100,\n      delayBetweenScanSuccess: MILLISECOND * 100,\n    });\n  }, []);\n\n  useEffect(() => {\n    const videoElem = document.getElementById('video');\n    const canplayListener = () => {\n      setCanplay(true);\n    };\n    videoElem.addEventListener('canplay', canplayListener);\n    const promise = codeReader.decodeFromVideoDevice(\n      undefined,\n      'video',\n      (result) => {\n        if (result) {\n          handleScan(result.getText());\n        }\n      },\n    );\n    return () => {\n      videoElem.removeEventListener('canplay', canplayListener);\n      promise\n        .then((controls) => {\n          if (controls) {\n            controls.stop();\n          }\n        })\n        .catch(log.info);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"qr-scanner__content__video-wrapper\">\n      <video\n        id=\"video\"\n        style={{\n          display: canplay ? 'block' : 'none',\n          width: '100%',\n          filter: 'blur(4px)',\n        }}\n      />\n      {canplay ? null : <Spinner />}\n    </div>\n  );\n};\n\nEnhancedReader.propTypes = {\n  handleScan: PropTypes.func.isRequired,\n};\n\nexport default EnhancedReader;\n","import QRHardwarePopover from './qr-hardware-popover';\n\nexport default QRHardwarePopover;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ethErrors, serializeError } from 'eth-rpc-errors';\nimport { getCurrentQRHardwareState } from '../../../selectors';\nimport Popover from '../../ui/popover';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  cancelSyncQRHardware as cancelSyncQRHardwareAction,\n  cancelQRHardwareSignRequest as cancelQRHardwareSignRequestAction,\n  cancelTx,\n  rejectPendingApproval,\n} from '../../../store/actions';\nimport QRHardwareWalletImporter from './qr-hardware-wallet-importer';\nimport QRHardwareSignRequest from './qr-hardware-sign-request';\n\nconst QRHardwarePopover = () => {\n  const t = useI18nContext();\n\n  const qrHardware = useSelector(getCurrentQRHardwareState);\n  const { sync, sign } = qrHardware;\n  const showWalletImporter = sync?.reading;\n  const showSignRequest = sign?.request;\n  const showPopover = showWalletImporter || showSignRequest;\n  const [errorTitle, setErrorTitle] = useState('');\n\n  const { txData } = useSelector((state) => {\n    return state.confirmTransaction;\n  });\n  // the confirmTransaction's life cycle is not consistent with QR hardware wallet;\n  // the confirmTransaction will change after the previous tx is confirmed or cancel,\n  // we want to block the changing by sign request id;\n  const _txData = useMemo(() => {\n    return txData;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sign?.request?.requestId]);\n\n  const dispatch = useDispatch();\n  const walletImporterCancel = useCallback(\n    () => dispatch(cancelSyncQRHardwareAction()),\n    [dispatch],\n  );\n\n  const signRequestCancel = useCallback(() => {\n    dispatch(\n      rejectPendingApproval(\n        _txData.id,\n        serializeError(ethErrors.provider.userRejectedRequest()),\n      ),\n    );\n    dispatch(cancelTx(_txData));\n    dispatch(cancelQRHardwareSignRequestAction());\n  }, [dispatch, _txData]);\n\n  const title = useMemo(() => {\n    let _title = '';\n    if (showSignRequest) {\n      _title = t('QRHardwareSignRequestTitle');\n    } else if (showWalletImporter) {\n      _title = t('QRHardwareWalletImporterTitle');\n    }\n    if (errorTitle !== '') {\n      _title = errorTitle;\n    }\n    return _title;\n  }, [showSignRequest, showWalletImporter, t, errorTitle]);\n  return showPopover ? (\n    <Popover\n      title={title}\n      onClose={showWalletImporter ? walletImporterCancel : signRequestCancel}\n    >\n      {showWalletImporter && (\n        <QRHardwareWalletImporter\n          handleCancel={walletImporterCancel}\n          setErrorTitle={setErrorTitle}\n        />\n      )}\n      {showSignRequest && (\n        <QRHardwareSignRequest\n          setErrorTitle={setErrorTitle}\n          handleCancel={signRequestCancel}\n          request={sign.request}\n        />\n      )}\n    </Popover>\n  ) : null;\n};\n\nexport default QRHardwarePopover;\n","import QRHardwareSignRequest from './qr-hardware-sign-request.component';\n\nexport default QRHardwareSignRequest;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { UR, UREncoder } from '@ngraveio/bc-ur';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  TextAlign,\n} from '../../../../helpers/constants/design-system';\nimport { PageContainerFooter } from '../../../ui/page-container';\nimport { Text, Box } from '../../../component-library';\n\nconst Player = ({ type, cbor, cancelQRHardwareSignRequest, toRead }) => {\n  const t = useI18nContext();\n  const urEncoder = useMemo(\n    // For NGRAVE ZERO support please keep to a maximum fragment size of 200\n    () => new UREncoder(new UR(Buffer.from(cbor, 'hex'), type), 200),\n    [cbor, type],\n  );\n  const [currentQRCode, setCurrentQRCode] = useState(urEncoder.nextPart());\n  useEffect(() => {\n    const id = setInterval(() => {\n      setCurrentQRCode(urEncoder.nextPart());\n    }, 100);\n    return () => {\n      clearInterval(id);\n    };\n  }, [urEncoder]);\n\n  return (\n    <>\n      <Box>\n        <Text align={TextAlign.Center}>\n          {t('QRHardwareSignRequestSubtitle')}\n        </Text>\n      </Box>\n      <Box\n        paddingTop={4}\n        paddingBottom={4}\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        flexDirection={FlexDirection.Column}\n      >\n        <div\n          style={{\n            padding: 20,\n            backgroundColor: 'var(--qr-code-white-background)',\n          }}\n        >\n          <QRCode value={currentQRCode.toUpperCase()} size={250} />\n        </div>\n      </Box>\n      <Box paddingBottom={4} paddingLeft={4} paddingRight={4}>\n        <Text align={TextAlign.Center}>\n          {t('QRHardwareSignRequestDescription')}\n        </Text>\n      </Box>\n      <PageContainerFooter\n        onCancel={cancelQRHardwareSignRequest}\n        onSubmit={toRead}\n        cancelText={t('QRHardwareSignRequestCancel')}\n        submitText={t('QRHardwareSignRequestGetSignature')}\n        submitButtonType=\"confirm\"\n      />\n    </>\n  );\n};\n\nPlayer.propTypes = {\n  type: PropTypes.string.isRequired,\n  cbor: PropTypes.string.isRequired,\n  cancelQRHardwareSignRequest: PropTypes.func.isRequired,\n  toRead: PropTypes.func.isRequired,\n};\n\nexport default Player;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { submitQRHardwareSignature } from '../../../../store/actions';\nimport Player from './player';\nimport Reader from './reader';\n\nconst QRHardwareSignRequest = ({ request, handleCancel, setErrorTitle }) => {\n  const [status, setStatus] = useState('play');\n\n  const toRead = useCallback(() => setStatus('read'), []);\n\n  const renderPlayer = () => {\n    const { payload } = request;\n    return (\n      <Player\n        type={payload.type}\n        cbor={payload.cbor}\n        cancelQRHardwareSignRequest={handleCancel}\n        toRead={toRead}\n      />\n    );\n  };\n\n  const renderReader = () => {\n    return (\n      <Reader\n        cancelQRHardwareSignRequest={handleCancel}\n        submitQRHardwareSignature={submitQRHardwareSignature}\n        requestId={request.requestId}\n        setErrorTitle={setErrorTitle}\n      />\n    );\n  };\n\n  if (status === 'play') {\n    return renderPlayer();\n  }\n  return renderReader();\n};\n\nQRHardwareSignRequest.propTypes = {\n  request: PropTypes.object.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  setErrorTitle: PropTypes.func.isRequired,\n};\n\nexport default QRHardwareSignRequest;\n","import React from 'react';\nimport { ETHSignature } from '@keystonehq/bc-ur-registry-eth';\nimport * as uuid from 'uuid';\nimport PropTypes from 'prop-types';\nimport BaseReader from '../base-reader';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nconst Reader = ({\n  submitQRHardwareSignature,\n  cancelQRHardwareSignRequest,\n  requestId,\n  setErrorTitle,\n}) => {\n  const t = useI18nContext();\n  const cancel = () => {\n    cancelQRHardwareSignRequest();\n  };\n\n  const handleSuccess = async (ur) => {\n    if (ur.type === 'eth-signature') {\n      const ethSignature = ETHSignature.fromCBOR(ur.cbor);\n      const buffer = ethSignature.getRequestId();\n      const signId = uuid.stringify(buffer);\n      if (signId === requestId) {\n        return await submitQRHardwareSignature(signId, ur.cbor.toString('hex'));\n      }\n      setErrorTitle(t('QRHardwareInvalidTransactionTitle'));\n      throw new Error(t('QRHardwareMismatchedSignId'));\n    } else {\n      setErrorTitle(t('QRHardwareInvalidTransactionTitle'));\n      throw new Error(t('unknownQrCode'));\n    }\n  };\n\n  return (\n    <BaseReader\n      isReadingWallet={false}\n      handleCancel={cancel}\n      handleSuccess={handleSuccess}\n      setErrorTitle={setErrorTitle}\n    />\n  );\n};\n\nReader.propTypes = {\n  submitQRHardwareSignature: PropTypes.func.isRequired,\n  cancelQRHardwareSignRequest: PropTypes.func.isRequired,\n  requestId: PropTypes.string.isRequired,\n  setErrorTitle: PropTypes.func.isRequired,\n};\n\nexport default Reader;\n","import QRHardwareWalletImporter from './qr-hardware-wallet-importer.component';\n\nexport default QRHardwareWalletImporter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  submitQRHardwareCryptoAccount,\n  submitQRHardwareCryptoHDKey,\n} from '../../../../store/actions';\nimport BaseReader from '../base-reader';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nconst QRHardwareWalletImporter = ({ handleCancel, setErrorTitle }) => {\n  const t = useI18nContext();\n  const handleSuccess = async (ur) => {\n    if (ur.type === 'crypto-hdkey') {\n      return await submitQRHardwareCryptoHDKey(ur.cbor.toString('hex'));\n    } else if (ur.type === 'crypto-account') {\n      return await submitQRHardwareCryptoAccount(ur.cbor.toString('hex'));\n    }\n    setErrorTitle(t('QRHardwareUnknownQRCodeTitle'));\n    throw new Error(t('unknownQrCode'));\n  };\n\n  return (\n    <BaseReader\n      isReadingWallet\n      handleCancel={handleCancel}\n      handleSuccess={handleSuccess}\n      setErrorTitle={setErrorTitle}\n    />\n  );\n};\n\nQRHardwareWalletImporter.propTypes = {\n  handleCancel: PropTypes.func.isRequired,\n  setErrorTitle: PropTypes.func.isRequired,\n};\n\nexport default QRHardwareWalletImporter;\n","export { default } from './recovery-phrase-reminder';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\n// Components\nimport Box from '../../ui/box';\nimport Button from '../../ui/button';\nimport Popover from '../../ui/popover';\n// Helpers\nimport {\n  DISPLAY,\n  TextAlign,\n  TextVariant,\n  BLOCK_SIZES,\n  FontWeight,\n  JustifyContent,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport { ONBOARDING_UNLOCK_ROUTE } from '../../../helpers/constants/routes';\nimport { Text } from '../../component-library';\n\nexport default function RecoveryPhraseReminder({ onConfirm, hasBackedUp }) {\n  const t = useI18nContext();\n  const history = useHistory();\n\n  const handleBackUp = () => {\n    history.push(ONBOARDING_UNLOCK_ROUTE);\n  };\n\n  return (\n    <Popover centerTitle title={t('recoveryPhraseReminderTitle')}>\n      <Box\n        paddingRight={4}\n        paddingBottom={6}\n        paddingLeft={4}\n        className=\"recovery-phrase-reminder\"\n      >\n        <Text\n          color={TextColor.textDefault}\n          align={TextAlign.Center}\n          variant={TextVariant.bodyMd}\n          marginBottom={4}\n        >\n          {t('recoveryPhraseReminderSubText')}\n        </Text>\n        <Box marginTop={4} marginBottom={8}>\n          <ul className=\"recovery-phrase-reminder__list\">\n            <Text\n              as=\"li\"\n              color={TextColor.textDefault}\n              fontWeight={FontWeight.Bold}\n            >\n              {t('recoveryPhraseReminderItemOne')}\n            </Text>\n            <Text as=\"li\">{t('recoveryPhraseReminderItemTwo')}</Text>\n            <Text as=\"li\">\n              {hasBackedUp ? (\n                t('recoveryPhraseReminderHasBackedUp')\n              ) : (\n                <>\n                  {t('recoveryPhraseReminderHasNotBackedUp')}\n                  <Box display={DISPLAY.INLINE_BLOCK} marginLeft={1}>\n                    <Button\n                      type=\"link\"\n                      onClick={handleBackUp}\n                      style={{\n                        fontSize: 'inherit',\n                        padding: 0,\n                      }}\n                    >\n                      {t('recoveryPhraseReminderBackupStart')}\n                    </Button>\n                  </Box>\n                </>\n              )}\n            </Text>\n          </ul>\n        </Box>\n        <Box justifyContent={JustifyContent.center}>\n          <Box width={BLOCK_SIZES.TWO_FIFTHS}>\n            <Button type=\"primary\" onClick={onConfirm}>\n              {t('recoveryPhraseReminderConfirm')}\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Popover>\n  );\n}\n\nRecoveryPhraseReminder.propTypes = {\n  hasBackedUp: PropTypes.bool.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n","export { default } from './reveal-SRP-modal';\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\nimport {\n  Display,\n  TextVariant,\n  FontWeight,\n} from '../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { getSeedPhrase } from '../../../store/actions';\nimport {\n  Box,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  ButtonPrimary,\n  ButtonSecondary,\n  FormTextField,\n} from '../../component-library';\n\nexport default function RevealSRPModal({\n  setSecretRecoveryPhrase,\n  onClose,\n  isOpen,\n}) {\n  const t = useI18nContext();\n\n  const [password, setPassword] = useState('');\n\n  const onSubmit = useCallback(\n    async (_password) => {\n      const seedPhrase = await getSeedPhrase(_password);\n      setSecretRecoveryPhrase(seedPhrase);\n    },\n    [setSecretRecoveryPhrase],\n  );\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} data-testid=\"reveal-srp-modal\">\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader onClose={onClose}>{t('revealSeedWords')}</ModalHeader>\n        <Box paddingLeft={4} paddingRight={4}>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              onSubmit(password);\n            }}\n          >\n            <FormTextField\n              marginTop={6}\n              id=\"account-details-authenticate\"\n              label={t('enterYourPassword')}\n              placeholder={t('password')}\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              variant={TextVariant.bodySm}\n              type=\"password\"\n              labelProps={{ fontWeight: FontWeight.Medium }}\n              autoFocus\n            />\n          </form>\n          <Box display={Display.Flex} marginTop={6} gap={2}>\n            <ButtonSecondary onClick={onClose} block>\n              {t('cancel')}\n            </ButtonSecondary>\n            <ButtonPrimary\n              onClick={() => onSubmit(password)}\n              disabled={password === ''}\n              block\n            >\n              {t('confirm')}\n            </ButtonPrimary>\n          </Box>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nRevealSRPModal.propTypes = {\n  /**\n   * A function to set a secret receovery phrase in the context that is rendering the RevealSRPModal\n   */\n  setSecretRecoveryPhrase: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {\n  BorderRadius,\n  BackgroundColor,\n  TextColor,\n  Color,\n  Display,\n  OverflowWrap,\n  IconColor,\n} from '../../../../helpers/constants/design-system';\nimport { useCopyToClipboard } from '../../../../hooks/useCopyToClipboard';\nimport { Icon, IconName, Box, Text } from '../../../component-library';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport Tooltip from '../../../ui/tooltip';\nimport { ShowMore } from '../show-more';\nimport { SECOND } from '../../../../../shared/constants/time';\nimport { useTimeout } from '../../../../hooks/useTimeout';\n\nexport const Copyable = ({\n  text,\n  sensitive = false,\n  marginTop,\n  marginBottom,\n}) => {\n  const t = useI18nContext();\n  const [, handleCopy] = useCopyToClipboard();\n  const [isVisible, setIsVisible] = useState(!sensitive);\n  const [isClicked, setIsClicked] = useState(false);\n\n  const startTimeout = useTimeout(() => setIsClicked(false), 3 * SECOND, false);\n\n  const handleVisibilityClick = (e) => {\n    e.stopPropagation();\n    setIsVisible((state) => !state);\n  };\n\n  const handleCopyClick = (e) => {\n    e.stopPropagation();\n    handleCopy(text);\n    setIsClicked(true);\n    startTimeout();\n  };\n\n  return (\n    <Box\n      display={Display.Flex}\n      onClick={\n        sensitive && !isVisible ? handleVisibilityClick : handleCopyClick\n      }\n      className={classnames('copyable', {\n        sensitive,\n        clicked: isClicked,\n        visible: isVisible,\n      })}\n      backgroundColor={\n        isVisible && sensitive\n          ? BackgroundColor.errorMuted\n          : BackgroundColor.primaryMuted\n      }\n      borderRadius={BorderRadius.LG}\n      padding={2}\n      marginTop={marginTop}\n      marginBottom={marginBottom}\n    >\n      {sensitive && (\n        <Box marginRight={2} className=\"copyable__icon\">\n          <Tooltip\n            wrapperClassName=\"copyable__tooltip\"\n            html={\n              <Text>\n                {isVisible ? t('hideSentitiveInfo') : t('doNotShare')}\n              </Text>\n            }\n            position=\"bottom\"\n          >\n            <Icon\n              name={isVisible ? IconName.EyeSlash : IconName.Eye}\n              onClick={handleVisibilityClick}\n              color={\n                isVisible && sensitive\n                  ? Color.errorAlternative\n                  : IconColor.iconAlternative\n              }\n              data-testid=\"reveal-icon\"\n            />\n          </Tooltip>\n        </Box>\n      )}\n      {sensitive && !isVisible && (\n        <Text\n          color={Color.textAlternative}\n          marginRight={2}\n          marginBottom={0}\n          overflowWrap={OverflowWrap.Anywhere}\n        >\n          {t('revealSensitiveContent')}\n        </Text>\n      )}\n      {isVisible && (\n        <ShowMore\n          marginRight={2}\n          buttonBackground={\n            isVisible && sensitive\n              ? BackgroundColor.errorMuted\n              : BackgroundColor.backgroundAlternative\n          }\n        >\n          <Text\n            color={\n              isVisible && sensitive\n                ? Color.errorAlternative\n                : TextColor.textAlternative\n            }\n            marginBottom={0}\n            overflowWrap={OverflowWrap.Anywhere}\n          >\n            {text}\n          </Text>\n        </ShowMore>\n      )}\n      {isVisible && (\n        <Icon\n          className=\"copyable__icon\"\n          name={isClicked ? IconName.CopySuccess : IconName.Copy}\n          color={\n            isVisible && sensitive\n              ? Color.errorAlternative\n              : IconColor.iconAlternative\n          }\n          marginLeft=\"auto\"\n          data-testid=\"copy-icon\"\n        />\n      )}\n    </Box>\n  );\n};\n\nCopyable.propTypes = {\n  text: PropTypes.string,\n  sensitive: PropTypes.bool,\n  marginTop: PropTypes.number,\n  marginBottom: PropTypes.number,\n};\n","export { Copyable } from './copyable';\n","export { default } from './insight-warnings';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal,\n  ModalOverlay,\n  IconName,\n  AvatarIcon,\n  AvatarIconSize,\n  Text,\n  Checkbox,\n  Box,\n  Button,\n  ButtonSecondarySize,\n  ButtonPrimarySize,\n  ButtonVariant,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  FontWeight,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { SnapUIRenderer } from '../snap-ui-renderer';\nimport {\n  DelineatorType,\n  InsightWarningLanguage,\n} from '../../../../helpers/constants/snaps';\nimport { stripHttpSchemes } from '../../../../helpers/utils/util';\n\nexport default function InsightWarnings({\n  warnings,\n  action = 'confirming',\n  origin,\n  onCancel,\n  onSubmit,\n}) {\n  const t = useI18nContext();\n  // Values represent if a warning is collapsed\n  const defaultWarningState = warnings.reduce((warningState, warning, idx) => {\n    warningState[warning.snapId] = idx !== 0;\n    return warningState;\n  }, {});\n\n  const [warningState, setWarningState] = useState(defaultWarningState);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleOnChange = () => setIsChecked((state) => !state);\n\n  const handleWarningClick = (snapId) => {\n    let newState = { ...warningState };\n    const nextSnapState = !warningState[snapId];\n    const willClose = nextSnapState;\n    newState[snapId] = nextSnapState;\n    if (!willClose) {\n      newState = { ...defaultWarningState };\n      newState[snapId] = false;\n      newState[warnings[0].snapId] = snapId !== warnings[0].snapId;\n    }\n    setWarningState(newState);\n  };\n\n  const Warnings = () => {\n    const lastWarningIdx = warnings.length - 1;\n    return (\n      <Box className=\"insights-warnings-modal__content\">\n        {warnings.map((warning, idx) => {\n          const { snapId, interfaceId } = warning;\n          return (\n            <SnapUIRenderer\n              key={`${snapId}-${idx}`}\n              snapId={snapId}\n              interfaceId={interfaceId}\n              delineatorType={DelineatorType.Warning}\n              onClick={() => handleWarningClick(snapId)}\n              isCollapsable\n              isCollapsed={warningState[snapId]}\n              boxProps={{ marginBottom: idx === lastWarningIdx ? 0 : 4 }}\n            />\n          );\n        })}\n      </Box>\n    );\n  };\n\n  return (\n    <Modal\n      isOpen\n      isClosedOnEscapeKey={false}\n      isClosedOnOutsideClick={false}\n      className=\"insights-warnings-modal\"\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader\n          justifyContent={JustifyContent.center}\n          childrenWrapperProps={{\n            alignItems: AlignItems.center,\n            display: Display.Flex,\n            flexDirection: FlexDirection.Column,\n          }}\n        >\n          <AvatarIcon\n            iconName={IconName.Warning}\n            size={AvatarIconSize.Lg}\n            color={IconColor.errorDefault}\n            backgroundColor={BackgroundColor.errorMuted}\n          />\n          <Text\n            variant={TextVariant.headingMd}\n            paddingTop={4}\n            paddingBottom={4}\n          >\n            {t('insightWarningHeader')}\n          </Text>\n        </ModalHeader>\n        <ModalBody>\n          <Text variant={TextVariant.bodyMd} paddingBottom={4}>\n            {warnings.length === 1\n              ? t('insightWarningContentSingular', [\n                  <Text\n                    variant={TextVariant.inherit}\n                    key={warnings.id}\n                    fontWeight={FontWeight.Medium}\n                  >\n                    {`${warnings.length} ${t('insightWarning')}`}\n                  </Text>,\n                  action,\n                  InsightWarningLanguage[action].noun,\n                ])\n              : t('insightWarningContentPlural', [\n                  <Text\n                    variant={TextVariant.inherit}\n                    key={warnings.id}\n                    fontWeight={FontWeight.Medium}\n                  >\n                    {`${warnings.length} ${t('insightWarnings')}`}\n                  </Text>,\n                  warnings.length,\n                  action,\n                  InsightWarningLanguage[action].noun,\n                ])}\n          </Text>\n          <Warnings />\n          <Box\n            display={Display.Flex}\n            justifyContent={JustifyContent.flexStart}\n            alignItems={AlignItems.center}\n            marginTop={4}\n            marginBottom={4}\n            padding={4}\n            borderRadius={BorderRadius.SM}\n            style={{\n              backgroundColor: isChecked\n                ? 'var(--color-info-muted)'\n                : 'var(--color-background-default-hover)',\n            }}\n          >\n            <Checkbox\n              variant={TextVariant.bodyMd}\n              isChecked={isChecked}\n              onChange={handleOnChange}\n              label={t('insightWarningCheckboxMessage', [\n                t(InsightWarningLanguage[action].imperative),\n                <Text\n                  variant={TextVariant.inherit}\n                  key={action}\n                  fontWeight={FontWeight.Medium}\n                >\n                  {stripHttpSchemes(origin)}\n                </Text>,\n              ])}\n            />\n          </Box>\n          <Box\n            display={Display.Flex}\n            justifyContent={JustifyContent.spaceBetween}\n          >\n            <Button\n              size={ButtonSecondarySize.Lg}\n              width={BlockSize.Half}\n              variant={ButtonVariant.Secondary}\n              onClick={onCancel}\n              marginRight={4}\n            >\n              {t('cancel')}\n            </Button>\n            <Button\n              size={ButtonPrimarySize.Lg}\n              width={BlockSize.Half}\n              data-testid=\"snapInsightsButtonConfirm\"\n              danger\n              onClick={onSubmit}\n              disabled={!isChecked}\n            >\n              {t(InsightWarningLanguage[action].imperative)}\n            </Button>\n          </Box>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nInsightWarnings.propTypes = {\n  /**\n   * An array of warnings returned from tx-insight snaps that deem their content 'critical'\n   */\n  warnings: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * A limited set of actions defining the type of transaction\n   */\n  action: PropTypes.oneOf(Object.keys(InsightWarningLanguage)),\n  /**\n   * Origin initiating the transaction\n   */\n  origin: PropTypes.string.isRequired,\n  /**\n   * Cancel function\n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * Submit function\n   */\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n  TextVariant,\n  FlexDirection,\n  Display,\n  Severity,\n} from '../../../../helpers/constants/design-system';\n\nimport {\n  AvatarIcon,\n  AvatarIconSize,\n  Text,\n  Box,\n  BannerAlert,\n} from '../../../component-library';\n\nconst InstallError = ({ title, error, description, iconName }) => {\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.center}\n      height={BlockSize.Full}\n      padding={2}\n    >\n      {iconName && (\n        <AvatarIcon\n          iconName={iconName}\n          size={AvatarIconSize.Xl}\n          color={IconColor.errorDefault}\n          backgroundColor={BackgroundColor.errorMuted}\n          marginBottom={4}\n        />\n      )}\n      <Text variant={TextVariant.headingLg}>{title}</Text>\n      {description && <Text textAlign={TextAlign.Center}>{description}</Text>}\n      {error && (\n        <BannerAlert\n          marginTop={4}\n          startAccessory={null}\n          severity={Severity.Danger}\n        >\n          <Text variant={TextVariant.bodySm}>{error}</Text>\n        </BannerAlert>\n      )}\n    </Box>\n  );\n};\n\nInstallError.propTypes = {\n  title: PropTypes.node.isRequired,\n  error: PropTypes.string,\n  description: PropTypes.string,\n  iconName: PropTypes.string,\n};\n\nexport default InstallError;\n","export { default } from './keyring-snap-removal-warning';\n","import React from 'react';\nimport { ButtonIcon, IconName, Text, Box } from '../../../component-library';\nimport {\n  BlockSize,\n  BorderColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  OverflowWrap,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\n// import { toChecksumHexAddress } from '../../../../../../../shared/modules/hexstring-utils';\nimport { toChecksumHexAddress } from '../../../../../shared/modules/hexstring-utils';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nexport const KeyringAccountListItem = ({\n  account,\n  snapUrl,\n}: {\n  account: { name: string; address: string };\n  snapUrl: string;\n}) => {\n  const t = useI18nContext();\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      justifyContent={JustifyContent.spaceBetween}\n      borderRadius={BorderRadius.MD}\n      borderColor={BorderColor.borderDefault}\n      padding={3}\n      width={BlockSize.Full}\n      data-testid=\"keyring-account-list-item\"\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        width={BlockSize.TenTwelfths}\n      >\n        <Box flexDirection={FlexDirection.Column} marginBottom={2}>\n          <Text color={TextColor.textMuted}>{t('keyringAccountName')}</Text>\n          <Text>{account.name}</Text>\n        </Box>\n        <Box flexDirection={FlexDirection.Column}>\n          <Text color={TextColor.textMuted}>\n            {t('keyringAccountPublicAddress')}\n          </Text>\n          <Text overflowWrap={OverflowWrap.Anywhere}>\n            {toChecksumHexAddress(account.address)}\n          </Text>\n        </Box>\n      </Box>\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        justifyContent={JustifyContent.center}\n      >\n        <ButtonIcon\n          ariaLabel=\"snap-url-export\"\n          data-testid=\"keyring-account-link\"\n          iconName={IconName.Export}\n          color={IconColor.primaryDefault}\n          onClick={() => {\n            global.platform.openTab({\n              url: snapUrl,\n            });\n          }}\n        />\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getAccountLink } from '@metamask/etherscan-link';\nimport { Snap } from '@metamask/snaps-utils';\nimport { useSelector } from 'react-redux';\nimport {\n  BannerAlert,\n  BannerAlertSeverity,\n  Box,\n  Button,\n  ButtonSize,\n  ButtonVariant,\n  Modal,\n  ModalOverlay,\n  Text,\n  TextField,\n} from '../../../component-library';\nimport { ModalContent } from '../../../component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../component-library/modal-header/deprecated';\nimport {\n  BlockSize,\n  Display,\n  FlexDirection,\n  FontWeight,\n  JustifyContent,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport InfoTooltip from '../../../ui/info-tooltip';\nimport { getCurrentChainId } from '../../../../selectors';\nimport { KeyringAccountListItem } from './keyring-account-list-item';\n\nexport default function KeyringRemovalSnapWarning({\n  snap,\n  keyringAccounts,\n  onCancel,\n  onClose,\n  onSubmit,\n  onBack,\n  isOpen,\n}: {\n  snap: Snap;\n  keyringAccounts: { name: string; address: string }[];\n  onCancel: () => void;\n  onClose: () => void;\n  onSubmit: () => void;\n  onBack: () => void;\n  isOpen: boolean;\n}) {\n  const t = useI18nContext();\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [confirmedRemoval, setConfirmedRemoval] = useState(false);\n  const [confirmationInput, setConfirmationInput] = useState('');\n  const [error, setError] = useState(false);\n  const chainId = useSelector(getCurrentChainId);\n\n  useEffect(() => {\n    setShowConfirmation(keyringAccounts.length === 0);\n  }, [keyringAccounts]);\n\n  const validateConfirmationInput = (input: string): boolean => {\n    setError(false);\n    if (input === snap.manifest.proposedName) {\n      return true;\n    }\n    setError(true);\n    return false;\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent\n          modalDialogProps={{\n            display: Display.Flex,\n            flexDirection: FlexDirection.Column,\n            gap: 4,\n          }}\n        >\n          <ModalHeader\n            onBack={() => {\n              if (showConfirmation) {\n                setShowConfirmation(false);\n              } else {\n                onBack();\n              }\n            }}\n            onClose={() => {\n              setShowConfirmation(false);\n              onClose();\n            }}\n          >\n            {t('removeSnap')}\n          </ModalHeader>\n          {showConfirmation === false ? (\n            <>\n              <BannerAlert severity={BannerAlertSeverity.Warning} className=\"\">\n                {t('backupKeyringSnapReminder')}\n              </BannerAlert>\n              <Box\n                display={Display.Flex}\n                justifyContent={JustifyContent.spaceBetween}\n              >\n                <Text>{t('removeKeyringSnap')}</Text>\n                <InfoTooltip\n                  contentText={t('removeKeyringSnapToolTip')}\n                  position=\"top\"\n                />\n              </Box>\n              {keyringAccounts.map((account, index) => {\n                return (\n                  <KeyringAccountListItem\n                    key={index}\n                    account={account}\n                    snapUrl={getAccountLink(account.address, chainId)}\n                  />\n                );\n              })}\n            </>\n          ) : (\n            <>\n              <Box\n                display={Display.Flex}\n                flexDirection={FlexDirection.Column}\n                marginTop={6}\n              >\n                <BannerAlert\n                  severity={BannerAlertSeverity.Warning}\n                  className=\"\"\n                  marginBottom={4}\n                >\n                  {t('backupKeyringSnapReminder')}\n                </BannerAlert>\n                <Text marginBottom={4}>\n                  {t('keyringSnapRemoveConfirmation', [\n                    <Text\n                      key=\"keyringSnapRemoveConfirmation2\"\n                      fontWeight={FontWeight.Bold}\n                      as=\"span\"\n                    >\n                      {snap.manifest.proposedName}\n                    </Text>,\n                  ])}\n                </Text>\n                {/* eslint-disable-next-line @typescript-eslint/ban-ts-comment */}\n                {/* @ts-ignore TODO: fix TextField props */}\n                <TextField\n                  marginBottom={4}\n                  value={confirmationInput}\n                  onChange={(e: { target: { value: string } }) => {\n                    setConfirmationInput(e.target.value);\n                    setConfirmedRemoval(\n                      validateConfirmationInput(e.target.value),\n                    );\n                  }}\n                  onPaste={(e: React.ClipboardEvent<HTMLInputElement>) => {\n                    e.preventDefault();\n                  }}\n                  error={error}\n                  inputProps={{\n                    'data-testid': 'remove-snap-confirmation-input',\n                  }}\n                />\n              </Box>\n            </>\n          )}\n          <Box width={BlockSize.Full} display={Display.Flex} gap={4}>\n            <Button\n              block\n              variant={ButtonVariant.Secondary}\n              size={ButtonSize.Lg}\n              onClick={onCancel}\n            >\n              {t('cancel')}\n            </Button>\n            <Button\n              block\n              size={ButtonSize.Lg}\n              id=\"popoverRemoveSnapButton\"\n              danger={showConfirmation}\n              disabled={showConfirmation && !confirmedRemoval}\n              onClick={async () => {\n                if (!showConfirmation) {\n                  setShowConfirmation(true);\n                  return;\n                }\n                if (confirmedRemoval) {\n                  onSubmit();\n                }\n              }}\n            >\n              {showConfirmation ? t('removeSnap') : t('continue')}\n            </Button>\n          </Box>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n","export { ShowMore } from './show-more';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classnames from 'classnames';\nimport useIsOverflowing from '../../../../hooks/snaps/useIsOverflowing';\nimport { Box, Button, ButtonVariant, Text } from '../../../component-library';\nimport {\n  BackgroundColor,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nexport const ShowMore = ({ children, className = '', ...props }) => {\n  const t = useI18nContext();\n  const { contentRef, isOverflowing } = useIsOverflowing();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const shouldDisplayButton = isOverflowing && !isOpen;\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setIsOpen(true);\n  };\n\n  return (\n    <Box\n      className={classnames('show-more', className)}\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        maxHeight: isOpen ? 'none' : undefined,\n      }}\n      ref={contentRef}\n      {...props}\n    >\n      {children}\n      {shouldDisplayButton && (\n        <Box\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            // Avoids see-through with muted colors\n            background: `linear-gradient(90deg, transparent 0%, var(--color-${BackgroundColor.backgroundDefault}) 33%)`,\n          }}\n        >\n          <Button\n            className=\"show-more__button\"\n            padding={0}\n            paddingLeft={8}\n            variant={ButtonVariant.Link}\n            onClick={handleClick}\n          >\n            <Text color={TextColor.infoDefault}>{t('more')}</Text>\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nShowMore.propTypes = {\n  children: PropTypes.node,\n  buttonBackground: PropTypes.string,\n  className: PropTypes.string,\n};\n","export { default } from './snap-authorship-expanded';\n","import { getSnapPrefix, stripSnapPrefix } from '@metamask/snaps-utils';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderColor,\n  BorderRadius,\n  BorderStyle,\n  Color,\n  Display,\n  FlexDirection,\n  FontWeight,\n  JustifyContent,\n  OverflowWrap,\n  TextAlign,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { formatDate } from '../../../../helpers/utils/util';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { useOriginMetadata } from '../../../../hooks/useOriginMetadata';\nimport { getSnapRegistryData } from '../../../../selectors';\nimport { disableSnap, enableSnap } from '../../../../store/actions';\nimport { Box, ButtonLink, Text } from '../../../component-library';\nimport ToggleButton from '../../../ui/toggle-button';\nimport Tooltip from '../../../ui/tooltip/tooltip';\nimport SnapExternalPill from '../snap-version/snap-external-pill';\nimport { useSafeWebsite } from '../../../../hooks/snaps/useSafeWebsite';\n\nconst SnapAuthorshipExpanded = ({ snapId, className, snap }) => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  // We're using optional chaining with snapId, because with the current implementation\n  // of snap update in the snap controller, we do not have reference to snapId when an\n  // update request is rejected because the reference comes from the request itself and not subject metadata\n  // like it is done with snap install\n  const snapPrefix = snapId && getSnapPrefix(snapId);\n  const packageName = snapId && stripSnapPrefix(snapId);\n  const isNPM = snapPrefix === 'npm:';\n\n  const versionPath = snap?.version ? `/v/${snap?.version}` : '';\n  const url = isNPM\n    ? `https://www.npmjs.com/package/${packageName}${versionPath}`\n    : packageName;\n\n  const snapRegistryData = useSelector((state) =>\n    getSnapRegistryData(state, snapId),\n  );\n\n  const { website = undefined } = snapRegistryData?.metadata ?? {};\n  const safeWebsite = useSafeWebsite(website);\n\n  const versionHistory = snap?.versionHistory ?? [];\n  const installInfo = versionHistory.length\n    ? versionHistory[versionHistory.length - 1]\n    : undefined;\n  const installOrigin = useOriginMetadata(installInfo?.origin);\n\n  const onToggle = () => {\n    if (snap?.enabled) {\n      dispatch(disableSnap(snap?.id));\n    } else {\n      dispatch(enableSnap(snap?.id));\n    }\n  };\n\n  return (\n    <Box\n      className={classnames('snaps-authorship-expanded', className)}\n      backgroundColor={BackgroundColor.backgroundDefault}\n      borderColor={BorderColor.borderDefault}\n      borderWidth={1}\n      width={BlockSize.Full}\n      borderRadius={BorderRadius.LG}\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        justifyContent={JustifyContent.spaceBetween}\n        paddingLeft={4}\n        paddingTop={4}\n        paddingBottom={4}\n        borderColor={BorderColor.borderDefault}\n        width={BlockSize.Full}\n        style={{\n          borderLeft: BorderStyle.none,\n          borderRight: BorderStyle.none,\n          borderTop: BorderStyle.none,\n        }}\n      >\n        <Text variant={TextVariant.bodyMd} fontWeight={FontWeight.Medium}>\n          {t('enabled')}\n        </Text>\n        <Box style={{ maxWidth: '52px' }}>\n          <Tooltip interactive position=\"left\" html={t('snapsToggle')}>\n            <ToggleButton value={snap?.enabled} onToggle={onToggle} />\n          </Tooltip>\n        </Box>\n      </Box>\n      <Box padding={4} width={BlockSize.Full}>\n        {safeWebsite && (\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Row}\n            justifyContent={JustifyContent.spaceBetween}\n            width={BlockSize.Full}\n            marginBottom={4}\n          >\n            <Text variant={TextVariant.bodyMd} fontWeight={FontWeight.Medium}>\n              {t('snapDetailWebsite')}\n            </Text>\n            <Box\n              paddingLeft={8}\n              display={Display.Flex}\n              flexDirection={FlexDirection.Column}\n              alignItems={AlignItems.flexEnd}\n            >\n              <ButtonLink\n                href={safeWebsite.toString()}\n                target=\"_blank\"\n                overflowWrap={OverflowWrap.Anywhere}\n              >\n                {safeWebsite.host}\n              </ButtonLink>\n            </Box>\n          </Box>\n        )}\n        {installOrigin && installInfo && (\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Row}\n            justifyContent={JustifyContent.spaceBetween}\n            width={BlockSize.Full}\n          >\n            <Text variant={TextVariant.bodyMd} fontWeight={FontWeight.Medium}>\n              {t('installOrigin')}\n            </Text>\n            <Box\n              display={Display.Flex}\n              flexDirection={FlexDirection.Column}\n              alignItems={AlignItems.flexEnd}\n            >\n              <Text textAlign={TextAlign.End}>{installOrigin.host}</Text>\n              <Text color={Color.textMuted}>\n                {t('installedOn', [\n                  formatDate(installInfo.date, 'dd MMM yyyy'),\n                ])}\n              </Text>\n            </Box>\n          </Box>\n        )}\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Row}\n          justifyContent={JustifyContent.spaceBetween}\n          alignItems={AlignItems.center}\n          marginTop={4}\n        >\n          <Text variant={TextVariant.bodyMd} fontWeight={FontWeight.Medium}>\n            {t('version')}\n          </Text>\n          <SnapExternalPill value={snap?.version} url={url} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nSnapAuthorshipExpanded.propTypes = {\n  /**\n   * The id of the snap\n   */\n  snapId: PropTypes.string,\n  /**\n   * The className of the SnapAuthorship\n   */\n  className: PropTypes.string,\n  /**\n   * The snap object.\n   */\n  snap: PropTypes.object,\n};\n\nexport default SnapAuthorshipExpanded;\n","export { default } from './snap-authorship-header';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport {\n  BackgroundColor,\n  TextColor,\n  TextVariant,\n  AlignItems,\n  Display,\n  BlockSize,\n  IconColor,\n  JustifyContent,\n} from '../../../../helpers/constants/design-system';\nimport { getSnapMetadata } from '../../../../selectors';\n\nimport {\n  Text,\n  Box,\n  AvatarIcon,\n  IconName,\n  IconSize,\n  ButtonIconSize,\n  ButtonIcon,\n} from '../../../component-library';\nimport { SnapMetadataModal } from '../snap-metadata-modal';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { SnapIcon } from '../snap-icon';\n\nconst SnapAuthorshipHeader = ({\n  snapId,\n  className,\n  boxShadow = 'var(--shadow-size-md) var(--color-shadow-default)',\n  showInfo = true,\n  startAccessory,\n  endAccessory,\n  onCancel,\n}) => {\n  const t = useI18nContext();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const { name: snapName } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  const openModal = () => setIsModalOpen(true);\n\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <Box\n      className={classnames('snaps-authorship-header', className)}\n      backgroundColor={BackgroundColor.backgroundDefault}\n      width={BlockSize.Full}\n      alignItems={AlignItems.center}\n      display={Display.Flex}\n      padding={4}\n      style={{\n        boxShadow,\n        minHeight: '64px',\n        zIndex: 1,\n      }}\n    >\n      {snapId && (\n        <SnapMetadataModal\n          snapId={snapId}\n          isOpen={isModalOpen}\n          onClose={closeModal}\n        />\n      )}\n      {onCancel && (\n        <ButtonIcon\n          iconName={IconName.Close}\n          ariaLabel={t('close')}\n          size={ButtonIconSize.Md}\n          onClick={onCancel}\n          color={IconColor.iconDefault}\n        />\n      )}\n      {startAccessory && startAccessory}\n      <Box\n        marginLeft={4}\n        marginRight={4}\n        display={Display.Flex}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        style={{ overflow: 'hidden' }}\n        width={BlockSize.Full}\n      >\n        <Box\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n          alignItems={AlignItems.center}\n        >\n          <SnapIcon snapId={snapId} avatarSize={IconSize.Sm} />\n          <Text\n            color={TextColor.textDefault}\n            variant={TextVariant.bodyMdMedium}\n            marginLeft={2}\n            ellipsis\n          >\n            {snapName}\n          </Text>\n        </Box>\n      </Box>\n      {showInfo && (\n        <Box marginLeft=\"auto\">\n          <AvatarIcon\n            className=\"snaps-authorship-header__button\"\n            iconName={IconName.Info}\n            onClick={openModal}\n            color={IconColor.iconDefault}\n            backgroundColor={BackgroundColor.backgroundAlternative}\n          />\n        </Box>\n      )}\n      {endAccessory && endAccessory}\n    </Box>\n  );\n};\n\nSnapAuthorshipHeader.propTypes = {\n  /**\n   * The id of the snap\n   */\n  snapId: PropTypes.string,\n  /**\n   * The className of the SnapAuthorship\n   */\n  className: PropTypes.string,\n  boxShadow: PropTypes.string,\n  showInfo: PropTypes.bool,\n  startAccessory: PropTypes.element,\n  endAccessory: PropTypes.element,\n  onCancel: PropTypes.func,\n};\n\nexport default SnapAuthorshipHeader;\n","export { default } from './snap-authorship-pill';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, IconSize, Text } from '../../../component-library';\nimport { SnapIcon } from '../snap-icon';\nimport { getSnapMetadata } from '../../../../selectors';\nimport {\n  AlignItems,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\n\ntype SnapAuthorshipPillProps = {\n  snapId: string;\n  onClick: () => void;\n};\n\nconst SnapAuthorshipPill: React.FC<SnapAuthorshipPillProps> = ({\n  snapId,\n  onClick,\n}) => {\n  const { name: snapName } = useSelector((state) =>\n    // @ts-expect-error ts is picking up the wrong type for the selector\n    getSnapMetadata(state, snapId),\n  );\n\n  return (\n    <Box\n      className=\"snap-authorship-pill\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      alignItems={AlignItems.center}\n      borderRadius={BorderRadius.pill}\n      paddingTop={1}\n      paddingBottom={1}\n      paddingLeft={1}\n      paddingRight={2}\n      onClick={onClick}\n    >\n      <SnapIcon avatarSize={IconSize.Sm} snapId={snapId} />\n      <Text\n        color={TextColor.primaryDefault}\n        variant={TextVariant.bodyMdMedium}\n        ellipsis\n        paddingLeft={1}\n      >\n        {snapName}\n      </Text>\n    </Box>\n  );\n};\n\nexport default SnapAuthorshipPill;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  IconColor,\n  AlignItems,\n  Display,\n  FontWeight,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Box,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../component-library';\nimport Tooltip from '../../../ui/tooltip/tooltip';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { getSnapMetadata } from '../../../../selectors';\nimport { SnapIcon } from '../snap-icon';\n\nexport default function SnapConnectCell({ origin, snapId }) {\n  const t = useI18nContext();\n  const { name: snapName } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  return (\n    <Box\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      paddingTop={2}\n      paddingBottom={2}\n    >\n      <SnapIcon snapId={snapId} />\n      <Box width=\"full\" paddingLeft={4} paddingRight={4}>\n        <Text>\n          {t('connectSnap', [\n            <Text\n              variant={TextVariant.inherit}\n              key=\"1\"\n              fontWeight={FontWeight.Bold}\n            >\n              {snapName}\n            </Text>,\n          ])}\n        </Text>\n      </Box>\n      <Box>\n        <Tooltip\n          html={\n            <div>\n              {t('snapConnectionWarning', [\n                <b key=\"0\">{origin}</b>,\n                <b key=\"1\">{snapName}</b>,\n              ])}\n            </div>\n          }\n          position=\"bottom\"\n        >\n          <Icon\n            color={IconColor.iconMuted}\n            name={IconName.Info}\n            size={IconSize.Sm}\n          />\n        </Tooltip>\n      </Box>\n    </Box>\n  );\n}\n\nSnapConnectCell.propTypes = {\n  origin: PropTypes.string.isRequired,\n  snapId: PropTypes.string.isRequired,\n};\n","export { SnapDelineator } from './snap-delineator';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  BorderStyle,\n  BorderColor,\n  BorderRadius,\n  AlignItems,\n  BackgroundColor,\n  IconColor,\n  TextVariant,\n  TextColor,\n  Display,\n  JustifyContent,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\nimport {\n  AvatarIcon,\n  Icon,\n  AvatarIconSize,\n  Box,\n  IconName,\n  Text,\n  IconSize,\n} from '../../../component-library';\nimport {\n  DelineatorType,\n  getDelineatorTitle,\n} from '../../../../helpers/constants/snaps';\nimport PulseLoader from '../../../ui/pulse-loader/pulse-loader';\n\nexport const SnapDelineator = ({\n  snapName,\n  type = DelineatorType.default,\n  isLoading = false,\n  isCollapsable = false,\n  isCollapsed = false,\n  children,\n  onClick,\n  boxProps,\n  disablePadding = false,\n}) => {\n  const t = useI18nContext();\n  const isError =\n    type === DelineatorType.Error || type === DelineatorType.Warning;\n\n  return (\n    <Box\n      className=\"snap-delineator__wrapper\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      borderStyle={BorderStyle.solid}\n      borderColor={BorderColor.borderDefault}\n      borderRadius={BorderRadius.LG}\n      backgroundColor={\n        isError ? BackgroundColor.errorMuted : BackgroundColor.backgroundDefault\n      }\n      {...boxProps}\n      style={{ minHeight: isLoading && '180px', ...boxProps?.style }}\n    >\n      <Box\n        className=\"snap-delineator__header\"\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.spaceBetween}\n        padding={1}\n        style={{ borderBottomWidth: isCollapsed ? 0 : 1 }}\n      >\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          className=\"snap-delineator__header__container\"\n        >\n          <AvatarIcon\n            iconName={IconName.Snaps}\n            className=\"snap-delineator__header__icon\"\n            size={AvatarIconSize.Xs}\n            backgroundColor={\n              isError ? IconColor.errorDefault : IconColor.infoDefault\n            }\n            iconProps={{\n              color: IconColor.infoInverse,\n            }}\n          />\n          <Text\n            variant={TextVariant.bodySm}\n            color={TextColor.textDefault}\n            className=\"snap-delineator__header__text\"\n            marginLeft={1}\n            marginTop={0}\n            marginBottom={0}\n            marginRight={1}\n            display=\"block\"\n          >\n            {t(getDelineatorTitle(type), [snapName])}\n          </Text>\n        </Box>\n        {isCollapsable && (\n          <Icon\n            name={isCollapsed ? IconName.ArrowDown : IconName.ArrowUp}\n            size={IconSize.Sm}\n            color={IconColor.iconMuted}\n            className=\"snap-delineator__expansion-icon\"\n            onClick={onClick}\n          />\n        )}\n      </Box>\n\n      <Box\n        className=\"snap-delineator__content\"\n        padding={!disablePadding || isLoading ? 4 : 0}\n        display={isCollapsable && isCollapsed ? Display.None : Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={isLoading && AlignItems.center}\n        justifyContent={isLoading && JustifyContent.center}\n        style={{ flexGrow: isLoading && '1' }}\n      >\n        {isLoading ? <PulseLoader /> : children}\n      </Box>\n    </Box>\n  );\n};\n\nSnapDelineator.propTypes = {\n  snapName: PropTypes.string,\n  type: PropTypes.string,\n  isCollapsable: PropTypes.bool,\n  isCollapsed: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  onClick: PropTypes.func,\n  boxProps: PropTypes.object,\n  children: PropTypes.node,\n  disablePadding: PropTypes.bool,\n};\n","export { default } from './snap-home-menu';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n  Popover,\n  PopoverPosition,\n  PopoverRole,\n  Text,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { SnapMetadataModal } from '../snap-metadata-modal';\n\nexport default function SnapHomeMenu({\n  snapId,\n  isSettingsAvailable,\n  onSettingsClick,\n  onRemoveClick,\n}) {\n  const t = useI18nContext();\n\n  const [menuReferenceElement, setMenuReferenceElement] = useState();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const [isSnapMetadataModalOpen, setIsSnapMetadataModalOpen] = useState(false);\n\n  const handleMenuClick = (menuItem) => {\n    switch (menuItem) {\n      case 'settings':\n        onSettingsClick();\n        break;\n      case 'details':\n        setIsSnapMetadataModalOpen(true);\n        break;\n      case 'remove':\n        onRemoveClick();\n        break;\n      default:\n        break;\n    }\n    setIsMenuOpen(false);\n  };\n\n  const handleMenuOpen = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const setMenuRef = (ref) => {\n    setMenuReferenceElement(ref);\n  };\n\n  const closeMenu = () => {\n    setIsMenuOpen(false);\n  };\n\n  const closeSnapMetadataModal = () => setIsSnapMetadataModalOpen(false);\n\n  return (\n    <>\n      {isSnapMetadataModalOpen && (\n        <SnapMetadataModal\n          snapId={snapId}\n          isOpen={isSnapMetadataModalOpen}\n          onClose={closeSnapMetadataModal}\n        />\n      )}\n      <Box display={Display.Flex}>\n        <Box\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n          alignItems={AlignItems.center}\n        >\n          <ButtonIcon\n            iconName={IconName.MoreVertical}\n            data-testid=\"snap-home-menu-button\"\n            ariaLabel={t('snapHomeMenu')}\n            onClick={() => {\n              handleMenuOpen();\n            }}\n            size={ButtonIconSize.Md}\n            ref={setMenuRef}\n          />\n        </Box>\n        <Popover\n          referenceElement={menuReferenceElement}\n          isOpen={isMenuOpen}\n          position={PopoverPosition.BottomEnd}\n          role={PopoverRole.Dialog}\n          preventOverflow\n          padding={0}\n          offset={[-12, -2]}\n          onClickOutside={closeMenu}\n          onPressEscKey={closeMenu}\n          style={{\n            zIndex: 1,\n          }}\n        >\n          <Box\n            display={Display.Flex}\n            padding={1}\n            flexDirection={FlexDirection.Column}\n            className=\"snap-home-menu\"\n          >\n            {isSettingsAvailable && (\n              <Box className=\"snap-home-menu__item\">\n                <Text\n                  onClick={() => handleMenuClick('settings')}\n                  variant={TextVariant.bodyMd}\n                  padding={[1, 1, 2, 2]}\n                >\n                  {t('settings')}\n                </Text>\n              </Box>\n            )}\n            <Box className=\"snap-home-menu__item\">\n              <Text\n                onClick={() => handleMenuClick('details')}\n                variant={TextVariant.bodyMd}\n                padding={[1, 1, 2, 2]}\n              >\n                {t('details')}\n              </Text>\n            </Box>\n            <Box className=\"snap-home-menu__item\">\n              <Text\n                onClick={() => handleMenuClick('remove')}\n                variant={TextVariant.bodyMd}\n                color={TextColor.errorDefault}\n                padding={[1, 1, 2, 2]}\n              >\n                {t('remove')}\n              </Text>\n            </Box>\n          </Box>\n        </Popover>\n      </Box>\n    </>\n  );\n}\n\nSnapHomeMenu.propTypes = {\n  snapId: PropTypes.string.isRequired,\n  isSettingsAvailable: PropTypes.bool.isRequired,\n  onSettingsClick: PropTypes.func.isRequired,\n  onRemoveClick: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Text } from '../../../component-library';\nimport { SnapUIRenderer } from '../snap-ui-renderer';\nimport {\n  getSnapMetadata,\n  getMemoizedUnapprovedConfirmations,\n  getMemoizedUnapprovedTemplatedConfirmations,\n} from '../../../../selectors';\nimport { SnapDelineator } from '../snap-delineator';\nimport { DelineatorType } from '../../../../helpers/constants/snaps';\nimport {\n  BackgroundColor,\n  BlockSize,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { Copyable } from '../copyable';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { deleteInterface } from '../../../../store/actions';\nimport {\n  CONFIRMATION_V_NEXT_ROUTE,\n  CONFIRM_TRANSACTION_ROUTE,\n} from '../../../../helpers/constants/routes';\nimport { useSnapHome } from './useSnapHome';\n\nexport const SnapHomeRenderer = ({ snapId }) => {\n  const dispatch = useDispatch();\n  const t = useI18nContext();\n  const { name: snapName } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  const unapprovedTemplatedConfirmations = useSelector(\n    getMemoizedUnapprovedTemplatedConfirmations,\n  );\n  const unapprovedConfirmations = useSelector(\n    getMemoizedUnapprovedConfirmations,\n  );\n  const history = useHistory();\n\n  const { data, error, loading } = useSnapHome({ snapId });\n\n  const interfaceId = !loading && !error ? data?.id : undefined;\n\n  useEffect(() => {\n    return () => interfaceId && dispatch(deleteInterface(interfaceId));\n  }, [interfaceId]);\n\n  useEffect(() => {\n    // Snaps are allowed to redirect to their own pending confirmations (templated or not)\n    const templatedSnapApproval = unapprovedTemplatedConfirmations.find(\n      (approval) => approval.origin === snapId,\n    );\n    const snapApproval = unapprovedConfirmations.find(\n      (approval) => approval.origin === snapId,\n    );\n\n    if (templatedSnapApproval) {\n      history.push(`${CONFIRMATION_V_NEXT_ROUTE}/${templatedSnapApproval.id}`);\n    } else if (snapApproval) {\n      history.push(`${CONFIRM_TRANSACTION_ROUTE}/${snapApproval.id}`);\n    }\n  }, [unapprovedTemplatedConfirmations, unapprovedConfirmations, history]);\n\n  return (\n    <Box\n      height={BlockSize.Full}\n      width={BlockSize.Full}\n      backgroundColor={BackgroundColor.backgroundAlternative}\n      style={{\n        overflowY: 'auto',\n      }}\n    >\n      {error && (\n        <Box height={BlockSize.Full} padding={4}>\n          <SnapDelineator snapName={snapName} type={DelineatorType.Error}>\n            <Text variant={TextVariant.bodySm} marginBottom={4}>\n              {t('snapsUIError', [<b key=\"0\">{snapName}</b>])}\n            </Text>\n            <Copyable text={error.message} />\n          </SnapDelineator>\n        </Box>\n      )}\n      {(interfaceId || loading) && (\n        <SnapUIRenderer\n          snapId={snapId}\n          interfaceId={interfaceId}\n          isLoading={loading}\n          useDelineator={false}\n          useFooter\n          contentBackgroundColor={BackgroundColor.backgroundAlternative}\n        />\n      )}\n    </Box>\n  );\n};\n\nSnapHomeRenderer.propTypes = {\n  snapId: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  handleSnapRequest,\n  forceUpdateMetamaskState,\n} from '../../../../store/actions';\n\nexport function useSnapHome({ snapId }) {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(undefined);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    let cancelled = false;\n    async function fetchPage() {\n      try {\n        setError(undefined);\n        setLoading(true);\n\n        const newData = await handleSnapRequest({\n          snapId,\n          origin: '',\n          handler: 'onHomePage',\n          request: {\n            jsonrpc: '2.0',\n            method: ' ',\n          },\n        });\n        if (!cancelled) {\n          setData(newData);\n          forceUpdateMetamaskState(dispatch);\n        }\n      } catch (err) {\n        if (!cancelled) {\n          setError(err);\n        }\n      } finally {\n        if (!cancelled) {\n          setLoading(false);\n        }\n      }\n    }\n    fetchPage();\n    return () => (cancelled = true);\n  }, [snapId]);\n\n  return { data, error, loading };\n}\n","export * from './snap-icon';\n","import React, { FunctionComponent } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport {\n  getSnapMetadata,\n  getTargetSubjectMetadata,\n} from '../../../../selectors';\nimport { getAvatarFallbackLetter } from '../../../../helpers/utils/util';\nimport {\n  AvatarBase,\n  AvatarBaseSize,\n  AvatarFavicon,\n  AvatarFaviconProps,\n  AvatarFaviconSize,\n  IconSize,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  JustifyContent,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\n\ntype SnapIconProps = {\n  snapId: string;\n  avatarSize?: IconSize;\n  borderWidth?: number;\n  className?: string;\n  badgeBackgroundColor?: BackgroundColor;\n} & Omit<AvatarFaviconProps<'span'>, 'name'>;\n\nexport const SnapIcon: FunctionComponent<SnapIconProps> = ({\n  snapId,\n  avatarSize = IconSize.Lg,\n  ...props\n}) => {\n  const subjectMetadata = useSelector((state) =>\n    getTargetSubjectMetadata(state, snapId),\n  );\n\n  const { name: snapName } = useSelector((state) =>\n    /* @ts-expect-error wrong type on selector. */\n    getSnapMetadata(state, snapId),\n  );\n\n  const iconUrl = subjectMetadata?.iconUrl;\n\n  // We choose the first non-symbol char as the fallback icon.\n  const fallbackIcon = getAvatarFallbackLetter(snapName);\n\n  return iconUrl ? (\n    <AvatarFavicon\n      style={{\n        backgroundColor: 'var(--color-background-alternative-hover)',\n      }}\n      src={iconUrl}\n      name={snapName}\n      {...props}\n      size={avatarSize as unknown as AvatarFaviconSize}\n    />\n  ) : (\n    <AvatarBase\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.center}\n      color={TextColor.textAlternative}\n      style={{\n        borderWidth: '0px',\n        backgroundColor: 'var(--color-background-alternative-hover)',\n      }}\n      {...props}\n      size={avatarSize as unknown as AvatarBaseSize}\n    >\n      {fallbackIcon}\n    </AvatarBase>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Text } from '../../../component-library';\nimport {\n  AlignItems,\n  FLEX_DIRECTION,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport Box from '../../../ui/box/box';\nimport { SnapUIRenderer } from '../snap-ui-renderer';\nimport { SnapDelineator } from '../snap-delineator';\nimport { DelineatorType } from '../../../../helpers/constants/snaps';\nimport { Copyable } from '../copyable';\nimport { getSnapMetadata } from '../../../../selectors';\nimport { trackInsightSnapUsage } from '../../../../store/actions';\n\nexport const SnapInsight = ({ snapId, data }) => {\n  const dispatch = useDispatch();\n  const t = useI18nContext();\n  const isLoading = data?.loading;\n  const error = data?.error;\n  const interfaceId = data?.interfaceId;\n\n  useEffect(() => {\n    const trackInsightUsage = async () => {\n      try {\n        await dispatch(trackInsightSnapUsage(snapId));\n      } catch {\n        /** no-op */\n      }\n    };\n    trackInsightUsage();\n  }, [snapId, dispatch]);\n\n  const { name: snapName } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  const hasNoData = !error && !isLoading && !interfaceId;\n\n  return (\n    <Box\n      flexDirection={FLEX_DIRECTION.COLUMN}\n      height=\"full\"\n      marginTop={hasNoData && 12}\n      marginBottom={hasNoData && 12}\n      alignItems={hasNoData && AlignItems.center}\n      justifyContent={hasNoData && JustifyContent.center}\n      textAlign={hasNoData && TextAlign.Center}\n      className=\"snap-insight\"\n    >\n      {!error && (\n        <Box\n          height=\"full\"\n          width=\"full\"\n          flexDirection={FLEX_DIRECTION.COLUMN}\n          className=\"snap-insight__container\"\n        >\n          {isLoading || interfaceId ? (\n            <SnapUIRenderer\n              snapId={snapId}\n              interfaceId={interfaceId}\n              delineatorType={DelineatorType.Insights}\n              isLoading={isLoading}\n            />\n          ) : (\n            <Text\n              color={TextColor.textAlternative}\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n            >\n              {t('snapsNoInsight')}\n            </Text>\n          )}\n        </Box>\n      )}\n\n      {!isLoading && error && (\n        <Box padding={4} className=\"snap-insight__container__error\">\n          <SnapDelineator snapName={snapName} type={DelineatorType.Error}>\n            <Text variant={TextVariant.bodySm} marginBottom={4}>\n              {t('snapsUIError', [<b key=\"0\">{snapName}</b>])}\n            </Text>\n            <Copyable text={error} />\n          </SnapDelineator>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nSnapInsight.propTypes = {\n  /**\n   * The snap id\n   */\n  snapId: PropTypes.string,\n  /*\n   * The insight object\n   */\n  data: PropTypes.object,\n  /*\n   * Boolean as to whether or not the insights are loading\n   */\n  loading: PropTypes.bool,\n};\n","export { default } from './snap-install-warning';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  BackgroundColor,\n  IconColor,\n  TextVariant,\n  TextAlign,\n  JustifyContent,\n  FontWeight,\n  Display,\n  AlignItems,\n  BorderRadius,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\nimport {\n  AvatarIcon,\n  AvatarIconSize,\n  Checkbox,\n  Box,\n  IconName,\n  Text,\n  Modal,\n  ModalFooter,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n} from '../../../component-library';\nimport PermissionCell from '../../permission-cell';\n\nexport default function SnapInstallWarning({\n  onCancel,\n  onSubmit,\n  warnings,\n  snapName,\n}) {\n  const t = useI18nContext();\n  const [userAgree, setUserAgree] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n\n  function onConfirm() {\n    setIsOpen(false);\n    onSubmit();\n  }\n\n  function constructWarningElementComponentArray(permissionWarnings) {\n    if (permissionWarnings.length === 1) {\n      return [\n        <Text\n          fontWeight={FontWeight.Medium}\n          as=\"span\"\n          key=\"warningMessageSubject\"\n        >\n          {permissionWarnings[0].warningMessageSubject}\n        </Text>,\n      ];\n    }\n\n    if (permissionWarnings.length === 2) {\n      const firstWarningSubject = permissionWarnings[0].warningMessageSubject;\n      const secondWarningSubject = permissionWarnings[1].warningMessageSubject;\n      return [\n        <Text\n          fontWeight={FontWeight.Normal}\n          as=\"span\"\n          key=\"warningMessageSubject\"\n        >\n          {t('andForTwoItems', [\n            <Text\n              fontWeight={FontWeight.Medium}\n              variant={TextVariant.inherit}\n              key={`${firstWarningSubject}_and_first`}\n            >\n              {firstWarningSubject}\n            </Text>,\n            <Text\n              fontWeight={FontWeight.Medium}\n              variant={TextVariant.inherit}\n              key={`${secondWarningSubject}_and_second`}\n            >\n              {secondWarningSubject}\n            </Text>,\n          ])}\n        </Text>,\n      ];\n    }\n\n    return permissionWarnings.map((warning, index) => {\n      if (permissionWarnings.length - 1 === index) {\n        return [];\n      }\n      // Handle last two elements\n      if (permissionWarnings.length - 2 === index) {\n        return [\n          <Text\n            fontWeight={FontWeight.Normal}\n            as=\"span\"\n            key={`${warning.permissionName}_and_${index}`}\n          >\n            {t('andForListItems', [\n              <Text\n                fontWeight={FontWeight.Medium}\n                variant={TextVariant.inherit}\n                key={`${warning.permissionName}_and_first_${index}`}\n              >\n                {warning.warningMessageSubject}\n              </Text>,\n              <Text\n                fontWeight={FontWeight.Medium}\n                variant={TextVariant.inherit}\n                key={`${warning.permissionName}_and_second_first_${index}`}\n              >\n                {\n                  permissionWarnings[permissionWarnings.length - 1]\n                    .warningMessageSubject\n                }\n              </Text>,\n            ])}\n          </Text>,\n        ];\n      }\n\n      return [\n        <span key={`${warning.permissionName}_${index}`}>\n          <Text fontWeight={FontWeight.Medium} as=\"span\">\n            {warning.warningMessageSubject}\n            {', '}\n          </Text>\n        </span>,\n      ];\n    });\n  }\n\n  function constructWarningPermissionCell(permissionWarnings, permission) {\n    const warningElementComponentArray =\n      constructWarningElementComponentArray(permissionWarnings);\n    return (\n      <Box as=\"span\" marginBottom={4}>\n        <PermissionCell\n          permissionName={\n            <Text>{t(permission.name, [warningElementComponentArray])}</Text>\n          }\n          title={\n            <Text>{t(permission.title, [warningElementComponentArray])}</Text>\n          }\n          description={t(permission.description, [\n            <Text\n              color={TextColor.inherit}\n              variant={TextVariant.inherit}\n              fontWeight={FontWeight.Medium}\n              key=\"1\"\n            >\n              {snapName}\n            </Text>,\n          ])}\n          weight={1}\n          avatarIcon={IconName.Key}\n          key={`snapInstallWarningPermissionCellKeyEntropy_${permission.permissionName}`}\n          hideStatus\n          margin={0}\n        />\n      </Box>\n    );\n  }\n\n  const criticalPermissions = {\n    publicKey: {\n      name: 'snapInstallWarningPermissionNameForViewPublicKey',\n      title: 'snapInstallWarningPermissionNameForViewPublicKey',\n      description: 'snapInstallWarningPermissionDescriptionForBip32View',\n    },\n    entropy: {\n      name: 'snapInstallWarningPermissionNameForEntropy',\n      title: 'snapInstallWarningPermissionNameForEntropy',\n      description: 'snapInstallWarningPermissionDescriptionForEntropy',\n    },\n  };\n\n  // Filter and group warnings based on permission name\n  const bip32PublicKeyPermissionWarnings = warnings.filter(\n    (warning) => warning.permissionName === 'snap_getBip32PublicKey',\n  );\n  const bip32bip44EntropyPermissionWarnings = warnings.filter(\n    (warning) =>\n      warning.permissionName === 'snap_getBip32Entropy' ||\n      warning.permissionName === 'snap_getBip44Entropy',\n  );\n\n  return (\n    <Modal onClose={onCancel} isOpen={isOpen} className=\"snap-install-warning\">\n      <ModalContent>\n        <ModalHeader onClose={onCancel}>\n          <Box\n            display={Display.Flex}\n            justifyContent={JustifyContent.center}\n            marginBottom={4}\n          >\n            <AvatarIcon\n              iconName={IconName.Danger}\n              backgroundColor={BackgroundColor.warningMuted}\n              color={IconColor.warningDefault}\n              size={AvatarIconSize.Xl}\n            />\n          </Box>\n        </ModalHeader>\n        <ModalBody>\n          <Text\n            paddingBottom={4}\n            textAlign={TextAlign.Center}\n            variant={TextVariant.headingMd}\n            as=\"h2\"\n          >\n            {t('snapInstallWarningHeading')}\n          </Text>\n          <Text paddingBottom={4} textAlign={TextAlign.Left}>\n            {t('snapInstallWarningCheck', [\n              <Text\n                key=\"snapNameInWarningDescription\"\n                fontWeight={FontWeight.Medium}\n                as=\"span\"\n              >\n                {snapName}\n              </Text>,\n            ])}\n          </Text>\n          {bip32bip44EntropyPermissionWarnings.length > 0 &&\n            constructWarningPermissionCell(\n              bip32bip44EntropyPermissionWarnings,\n              criticalPermissions.entropy,\n            )}\n          {bip32PublicKeyPermissionWarnings.length > 0 &&\n            constructWarningPermissionCell(\n              bip32PublicKeyPermissionWarnings,\n              criticalPermissions.publicKey,\n            )}\n          <Box\n            display={Display.Flex}\n            justifyContent={JustifyContent.flexStart}\n            alignItems={AlignItems.center}\n            marginTop={4}\n            padding={4}\n            borderRadius={BorderRadius.SM}\n            backgroundColor={\n              userAgree\n                ? BackgroundColor.infoMuted\n                : BackgroundColor.backgroundAlternative\n            }\n          >\n            <Checkbox\n              isRequired\n              onChange={() => setUserAgree((state) => !state)}\n              isChecked={userAgree}\n              label={\n                <Text as=\"span\">\n                  Install{' '}\n                  <Text as=\"span\" fontWeight={FontWeight.Medium}>\n                    {snapName}\n                  </Text>\n                </Text>\n              }\n            />\n          </Box>\n        </ModalBody>\n        <ModalFooter\n          onSubmit={onConfirm}\n          submitButtonProps={{\n            children: t('confirm'),\n            disabled: !userAgree,\n            'data-testid': 'snap-install-warning-modal-confirm',\n          }}\n        />\n      </ModalContent>\n    </Modal>\n  );\n}\n\nSnapInstallWarning.propTypes = {\n  /**\n   * onCancel handler\n   */\n  onCancel: PropTypes.func,\n  /**\n   * onSubmit handler\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * warnings list\n   */\n  warnings: PropTypes.arrayOf({\n    id: PropTypes.string,\n    permissionName: PropTypes.string,\n    warningMessageSubject: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n  }),\n  /**\n   * Snap name\n   */\n  snapName: PropTypes.string.isRequired,\n};\n","export { default } from './snap-legacy-authorship-header';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { stripSnapPrefix } from '@metamask/snaps-utils';\nimport { useSelector } from 'react-redux';\nimport {\n  BackgroundColor,\n  TextColor,\n  TextVariant,\n  AlignItems,\n  FontWeight,\n  Display,\n  FlexDirection,\n  BlockSize,\n  BorderColor,\n  BorderRadius,\n} from '../../../../helpers/constants/design-system';\n\nimport { Box, Text } from '../../../component-library';\nimport { getSnapMetadata } from '../../../../selectors';\nimport { SnapIcon } from '../snap-icon';\n\nconst SnapLegacyAuthorshipHeader = ({\n  snapId,\n  className,\n  marginLeft,\n  marginRight,\n}) => {\n  const packageName = snapId && stripSnapPrefix(snapId);\n  const { name: snapName } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  return (\n    <Box\n      className={classnames('snap-legacy-authorship-header', className)}\n      backgroundColor={BackgroundColor.backgroundDefault}\n      width={BlockSize.Full}\n      alignItems={AlignItems.center}\n      display={Display.Flex}\n      padding={2}\n      borderColor={BorderColor.borderDefault}\n      borderRadius={BorderRadius.pill}\n      marginLeft={marginLeft}\n      marginRight={marginRight}\n    >\n      <Box>\n        <SnapIcon snapId={snapId} />\n      </Box>\n      <Box\n        marginLeft={4}\n        marginRight={4}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        style={{ overflow: 'hidden' }}\n      >\n        <Text ellipsis fontWeight={FontWeight.Medium}>\n          {snapName}\n        </Text>\n        <Text\n          ellipsis\n          variant={TextVariant.bodySm}\n          color={TextColor.textAlternative}\n        >\n          {packageName}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nSnapLegacyAuthorshipHeader.propTypes = {\n  /**\n   * The id of the snap\n   */\n  snapId: PropTypes.string,\n  /**\n   * The className of the SnapLegacyAuthorshipHeader\n   */\n  className: PropTypes.string,\n  marginLeft: PropTypes.number,\n  marginRight: PropTypes.number,\n};\n\nexport default SnapLegacyAuthorshipHeader;\n","export { default } from './snap-link-warning';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AvatarIconSize,\n  Box,\n  Button,\n  ButtonLink,\n  ButtonSize,\n  ButtonVariant,\n  Icon,\n  IconName,\n  Modal,\n  ModalOverlay,\n  Text,\n} from '../../../component-library';\nimport { ModalContent } from '../../../component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../component-library/modal-header/deprecated';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderColor,\n  BorderRadius,\n  BorderStyle,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nexport default function SnapLinkWarning({ isOpen, onClose, url }) {\n  const t = useI18nContext();\n\n  const parsedUrl = url && new URL(url);\n  const urlParts = parsedUrl && url.split(parsedUrl.host);\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent\n        modalDialogProps={{\n          display: Display.Flex,\n          flexDirection: FlexDirection.Column,\n          gap: 4,\n        }}\n      >\n        <ModalHeader\n          onClose={onClose}\n          childrenWrapperProps={{\n            display: Display.Flex,\n            flexDirection: FlexDirection.Column,\n            alignItems: AlignItems.center,\n            gap: 2,\n          }}\n        >\n          <Icon\n            name={IconName.Danger}\n            color={IconColor.warningDefault}\n            size={AvatarIconSize.Xl}\n          />\n          <Text variant={TextVariant.headingMd}>{t('leaveMetaMask')}</Text>\n          <Text textAlign={TextAlign.Center}>{t('leaveMetaMaskDesc')}</Text>\n        </ModalHeader>\n        <ButtonLink\n          externalLink\n          href={url}\n          width={BlockSize.Full}\n          textProps={{ width: BlockSize.Full }}\n        >\n          <Box\n            display={Display.Flex}\n            FlexDirection={FlexDirection.Row}\n            justifyContent={JustifyContent.spaceBetween}\n            alignItems={AlignItems.center}\n            backgroundColor={BackgroundColor.backgroundAlternative}\n            borderColor={BorderColor.borderDefault}\n            borderStyle={BorderStyle.solid}\n            borderRadius={BorderRadius.MD}\n            paddingTop={3}\n            paddingBottom={3}\n            paddingRight={4}\n            paddingLeft={4}\n            width={BlockSize.Full}\n          >\n            {parsedUrl && (\n              <Text\n                ellipsis\n                style={{ overflow: 'hidden' }}\n                color={TextColor.primaryDefault}\n              >\n                {urlParts[0]}\n                <b>{parsedUrl.host}</b>\n                {urlParts[1]}\n              </Text>\n            )}\n            <Icon\n              name={IconName.Export}\n              color={IconColor.iconAlternative}\n              marginLeft={2}\n            />\n          </Box>\n        </ButtonLink>\n        <Box width={BlockSize.Full} display={Display.Flex} gap={4}>\n          <Button\n            block\n            variant={ButtonVariant.Secondary}\n            size={ButtonSize.Lg}\n            onClick={onClose}\n          >\n            {t('back')}\n          </Button>\n          <Button\n            block\n            size={ButtonSize.Lg}\n            data-testid=\"modalSnapLinkButton\"\n            href={url}\n            externalLink\n            onClick={onClose}\n          >\n            {t('visitSite')}\n          </Button>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nSnapLinkWarning.propTypes = {\n  /**\n   * whether if the modal is open or not\n   */\n  isOpen: PropTypes.bool,\n  /**\n   * onCancel handler\n   */\n  onClose: PropTypes.func,\n  /**\n   * The URL to display\n   */\n  url: PropTypes.string,\n};\n","export { default } from './snap-list-item';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Color,\n  AlignItems,\n  JustifyContent,\n  Display,\n  BlockSize,\n  TextVariant,\n  IconColor,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Text,\n  Box,\n  IconName,\n  IconSize,\n  Icon,\n} from '../../../component-library';\nimport { SnapIcon } from '../snap-icon';\n\nconst SnapListItem = ({\n  name,\n  packageName,\n  onClick,\n  snapId,\n  showUpdateDot,\n}) => {\n  return (\n    <Box\n      className=\"snap-list-item\"\n      data-testid={snapId}\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.spaceBetween}\n      width={BlockSize.Full}\n      padding={4}\n      onClick={onClick}\n    >\n      <Box\n        className=\"snap-list-item__inner-wrapper\"\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.flexStart}\n        width={BlockSize.Full}\n      >\n        <Box>\n          <SnapIcon snapId={snapId} />\n        </Box>\n        <Box\n          paddingLeft={4}\n          paddingRight={4}\n          width={BlockSize.Full}\n          style={{ overflow: 'hidden' }}\n        >\n          <Text\n            className=\"snap-list-item__title\"\n            color={Color.textDefault}\n            variant={TextVariant.bodyMd}\n            ellipsis\n          >\n            {name}\n          </Text>\n          <Text\n            className=\"snap-list-item__url\"\n            color={Color.textAlternative}\n            variant={TextVariant.bodySm}\n            ellipsis\n          >\n            {packageName}\n          </Text>\n        </Box>\n      </Box>\n      {showUpdateDot && (\n        <Box display={Display.Flex}>\n          <Icon\n            name={IconName.FullCircle}\n            size={IconSize.Xs}\n            color={IconColor.primaryDefault}\n          />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nSnapListItem.propTypes = {\n  /**\n   * Name of the snap\n   */\n  name: PropTypes.string,\n  /**\n   * Name of a snap package\n   */\n  packageName: PropTypes.string,\n  /**\n   * onClick event handler\n   */\n  onClick: PropTypes.func,\n  /**\n   * ID of a snap.\n   */\n  snapId: PropTypes.string.isRequired,\n  /**\n   * Boolean value used as indicator for available update represented as a simple dot.\n   */\n  showUpdateDot: PropTypes.bool,\n};\nexport default SnapListItem;\n","export { SnapMetadataModal } from './snap-metadata-modal';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { getSnapPrefix, stripSnapPrefix } from '@metamask/snaps-utils';\nimport {\n  getSnap,\n  getSnapRegistryData,\n  getSnapMetadata,\n  getTargetSubjectMetadata,\n} from '../../../../selectors';\nimport {\n  Box,\n  ButtonLink,\n  Icon,\n  IconName,\n  IconSize,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  FlexWrap,\n  FontWeight,\n  IconColor,\n  JustifyContent,\n  OverflowWrap,\n  TextAlign,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { formatDate } from '../../../../helpers/utils/util';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { useOriginMetadata } from '../../../../hooks/useOriginMetadata';\nimport { ShowMore } from '../show-more';\nimport SnapExternalPill from '../snap-version/snap-external-pill';\nimport { useSafeWebsite } from '../../../../hooks/snaps/useSafeWebsite';\nimport Tooltip from '../../../ui/tooltip';\nimport { isSnapId } from '../../../../helpers/utils/snaps';\nimport { SnapIcon } from '../snap-icon';\n\nexport const SnapMetadataModal = ({ snapId, isOpen, onClose }) => {\n  const t = useI18nContext();\n\n  const subjectMetadata = useSelector((state) =>\n    getTargetSubjectMetadata(state, snapId),\n  );\n\n  const { name: snapName, description } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  const snap = useSelector((state) => getSnap(state, snapId));\n\n  const versionHistory = snap?.versionHistory ?? [];\n  const installInfo = versionHistory.length\n    ? versionHistory[versionHistory.length - 1]\n    : undefined;\n\n  const installOrigin = useOriginMetadata(installInfo?.origin);\n  const isSnapRequesting = isSnapId(installInfo?.origin);\n\n  const snapPrefix = getSnapPrefix(snapId);\n  const packageName = stripSnapPrefix(snapId);\n  const isNPM = snapPrefix === 'npm:';\n  const versionPath = subjectMetadata?.version\n    ? `/v/${subjectMetadata?.version}`\n    : '';\n  const url = isNPM\n    ? `https://www.npmjs.com/package/${packageName}${versionPath}`\n    : packageName;\n\n  const snapRegistryData = useSelector((state) =>\n    getSnapRegistryData(state, snapId),\n  );\n\n  const { website = undefined } = snapRegistryData?.metadata ?? {};\n\n  const safeWebsite = useSafeWebsite(website);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} className=\"snap-metadata-modal\">\n      <ModalOverlay />\n      <ModalContent\n        modalDialogProps={{\n          display: Display.Flex,\n          flexDirection: FlexDirection.Column,\n        }}\n      >\n        <ModalHeader\n          onClose={onClose}\n          childrenWrapperProps={{\n            display: Display.Flex,\n            flexDirection: FlexDirection.Column,\n            alignItems: AlignItems.center,\n            gap: 2,\n            marginBottom: 6,\n          }}\n        >\n          <Box>\n            <SnapIcon snapId={snapId} />\n          </Box>\n          <Text variant={TextVariant.bodyMdMedium} textAlign={TextAlign.Center}>\n            {snapName}\n          </Text>\n        </ModalHeader>\n        <Box marginLeft={4} marginRight={4}>\n          {safeWebsite && (\n            <Box\n              display={Display.Flex}\n              FlexDirection={FlexDirection.Row}\n              justifyContent={JustifyContent.spaceBetween}\n              flexWrap={FlexWrap.NoWrap}\n            >\n              <Text variant={TextVariant.bodyMdMedium} marginRight={4}>\n                {t('snapDetailWebsite')}\n              </Text>\n\n              <ButtonLink\n                overflowWrap={OverflowWrap.Anywhere}\n                href={safeWebsite.toString()}\n                target=\"_blank\"\n                externalLink\n                textAlign={TextAlign.End}\n                ellipsis\n              >\n                {safeWebsite.host}\n              </ButtonLink>\n            </Box>\n          )}\n          {installOrigin && (\n            <Box\n              display={Display.Flex}\n              flexDirection={FlexDirection.Row}\n              justifyContent={JustifyContent.spaceBetween}\n              flexWrap={FlexWrap.NoWrap}\n              marginTop={4}\n            >\n              <Box\n                display={Display.Flex}\n                flexDirection={FlexDirection.Row}\n                alignItems={AlignItems.center}\n                marginRight={4}\n              >\n                <Text variant={TextVariant.bodyMdMedium} marginRight={1}>\n                  {t('installOrigin')}\n                </Text>\n                {installInfo && (\n                  <Tooltip\n                    html={t('installedOn', [\n                      formatDate(installInfo.date, 'dd MMM yyyy'),\n                    ])}\n                    position=\"bottom\"\n                  >\n                    <Icon\n                      color={IconColor.iconMuted}\n                      name={IconName.Info}\n                      size={IconSize.Sm}\n                    />\n                  </Tooltip>\n                )}\n              </Box>\n              <Text ellipsis>\n                {isSnapRequesting\n                  ? stripSnapPrefix(installInfo.origin)\n                  : installOrigin.host}\n              </Text>\n            </Box>\n          )}\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Row}\n            justifyContent={JustifyContent.spaceBetween}\n            flexWrap={FlexWrap.NoWrap}\n            marginTop={4}\n          >\n            <Box\n              display={Display.Flex}\n              flexDirection={FlexDirection.Row}\n              alignItems={AlignItems.center}\n              marginRight={4}\n            >\n              <Text variant={TextVariant.bodyMdMedium} marginRight={1}>\n                {t('source')}\n              </Text>\n              <Tooltip\n                html={t('metadataModalSourceTooltip', [\n                  <Text\n                    key=\"snap-name\"\n                    fontWeight={FontWeight.Medium}\n                    variant={TextVariant.inherit}\n                  >\n                    {snapName}\n                  </Text>,\n                  <Text\n                    key=\"snap-id\"\n                    fontWeight={FontWeight.Medium}\n                    variant={TextVariant.inherit}\n                  >\n                    {packageName}\n                  </Text>,\n                ])}\n                position=\"bottom\"\n              >\n                <Icon\n                  color={IconColor.iconMuted}\n                  name={IconName.Info}\n                  size={IconSize.Sm}\n                />\n              </Tooltip>\n            </Box>\n            <SnapExternalPill value={packageName} url={url} />\n          </Box>\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Row}\n            justifyContent={JustifyContent.spaceBetween}\n            flexWrap={FlexWrap.NoWrap}\n            marginTop={4}\n          >\n            <Text variant={TextVariant.bodyMdMedium} marginRight={4}>\n              {t('version')}\n            </Text>\n            <Text ellipsis>{subjectMetadata?.version}</Text>\n          </Box>\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n            marginTop={4}\n          >\n            <Text variant={TextVariant.bodyMdMedium} marginRight={4}>\n              {t('descriptionFromSnap', [snapName])}\n            </Text>\n            <ShowMore>\n              <Text>{description}</Text>\n            </ShowMore>\n          </Box>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nSnapMetadataModal.propTypes = {\n  /**\n   * The id of the snap\n   */\n  snapId: PropTypes.string,\n  /**\n   * Whether if the modal is open or not\n   */\n  isOpen: PropTypes.bool,\n  /**\n   * onClose handler\n   */\n  onClose: PropTypes.func,\n};\n","export { default } from './snap-permission-adapter';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SnapPermissionCell from '../snap-permission-cell';\n\nexport default function SnapPermissionAdapter({\n  snapId,\n  permissions,\n  showOptions,\n  targetSubjectsMetadata,\n  revoked,\n  approved,\n}) {\n  return permissions.map((permission, index) => (\n    <SnapPermissionCell\n      snapId={snapId}\n      showOptions={showOptions}\n      connectionSubjectMetadata={targetSubjectsMetadata[permission.connection]}\n      permission={permission}\n      index={index}\n      key={`permissionCellDisplay_${snapId}_${index}`}\n      revoked={revoked}\n      approved={approved}\n    />\n  ));\n}\n\nSnapPermissionAdapter.propTypes = {\n  snapId: PropTypes.string.isRequired,\n  snapName: PropTypes.string.isRequired,\n  permissions: PropTypes.array.isRequired,\n  showOptions: PropTypes.bool,\n  targetSubjectsMetadata: PropTypes.object,\n  weightThreshold: PropTypes.number,\n  revoked: PropTypes.bool,\n  approved: PropTypes.bool,\n};\n","export { default } from './snap-permission-cell';\n","import PropTypes from 'prop-types';\nimport { SubjectType } from '@metamask/permission-controller';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  AvatarBase,\n  AvatarBaseSize,\n  AvatarFavicon,\n  AvatarFaviconSize,\n  IconSize,\n  Text,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  FontWeight,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport {\n  getAvatarFallbackLetter,\n  getSnapName,\n} from '../../../../helpers/utils/util';\nimport PermissionCell from '../../permission-cell';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { getSnapsMetadata } from '../../../../selectors';\n\nexport default function SnapPermissionCell({\n  snapId,\n  showOptions,\n  permission,\n  connectionSubjectMetadata,\n  index,\n  revoked,\n  approved,\n}) {\n  const t = useI18nContext();\n\n  let { label, description, leftIcon } = permission;\n\n  const snapsMetadata = useSelector(getSnapsMetadata);\n\n  const createConnectionIcon = (faviconUrl, permissionSubject) => {\n    return faviconUrl ? (\n      <AvatarFavicon\n        backgroundColor={BackgroundColor.backgroundAlternative}\n        size={AvatarFaviconSize.Md}\n        iconProps={{\n          size: IconSize.Sm,\n        }}\n        src={faviconUrl}\n        name={permissionSubject.connection}\n      />\n    ) : (\n      <AvatarBase\n        size={AvatarBaseSize.Md}\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.center}\n        color={TextColor.textAlternative}\n        style={{ borderWidth: '0px' }}\n        backgroundColor={BackgroundColor.backgroundAlternative}\n      >\n        {getAvatarFallbackLetter(permissionSubject.connectionName)}\n      </AvatarBase>\n    );\n  };\n\n  const createSnapConnectionLabel = (snapName) => {\n    return t('snapConnectTo', [\n      <Text\n        key=\"snapConnectTo\"\n        fontWeight={FontWeight.Medium}\n        variant={TextVariant.inherit}\n        color={TextColor.inherit}\n      >\n        {snapName}\n      </Text>,\n    ]);\n  };\n\n  const createSnapConnectionDescription = (snapName) => {\n    return t('snapConnectionPermissionDescription', [\n      <Text\n        key={`permissionSubject_${permission.subjectName}`}\n        fontWeight={FontWeight.Medium}\n        variant={TextVariant.inherit}\n        color={TextColor.inherit}\n      >\n        {permission.subjectName}\n      </Text>,\n      <Text\n        key={`permissionSubjectDescription_${snapName}`}\n        fontWeight={FontWeight.Medium}\n        variant={TextVariant.inherit}\n        color={TextColor.inherit}\n      >\n        {snapName}\n      </Text>,\n    ]);\n  };\n\n  if (permission.connection) {\n    if (connectionSubjectMetadata?.subjectType === SubjectType.Snap) {\n      const snapName = getSnapName(snapsMetadata)(\n        connectionSubjectMetadata.origin,\n      );\n      label = createSnapConnectionLabel(snapName);\n      description = createSnapConnectionDescription(snapName);\n    }\n\n    leftIcon = createConnectionIcon(\n      connectionSubjectMetadata?.iconUrl,\n      permission,\n    );\n  }\n\n  return (\n    <PermissionCell\n      snapId={snapId}\n      permissionName={permission.permissionName}\n      title={label}\n      description={description}\n      weight={permission.weight}\n      avatarIcon={leftIcon}\n      dateApproved={permission?.permissionValue?.date}\n      key={`${permission.permissionName}-${index}`}\n      showOptions={showOptions}\n      revoked={revoked}\n      approved={approved}\n    />\n  );\n}\n\nSnapPermissionCell.propTypes = {\n  snapId: PropTypes.string.isRequired,\n  showOptions: PropTypes.bool,\n  permission: PropTypes.object.isRequired,\n  connectionSubjectMetadata: PropTypes.object,\n  index: PropTypes.number,\n  revoked: PropTypes.bool,\n  approved: PropTypes.bool,\n};\n","export { default } from './snap-permissions-list';\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { Box, ButtonLink } from '../../../component-library';\nimport {\n  getMultipleTargetsSubjectMetadata,\n  getSnapsMetadata,\n} from '../../../../selectors';\nimport {\n  BlockSize,\n  Display,\n  FlexDirection,\n  JustifyContent,\n} from '../../../../helpers/constants/design-system';\nimport {\n  MinPermissionAbstractionDisplayCount,\n  PermissionsAbstractionThreshold,\n  PermissionWeightThreshold,\n} from '../../../../../shared/constants/permissions';\nimport {\n  getFilteredSnapPermissions,\n  getSnapName,\n} from '../../../../helpers/utils/util';\nimport { getWeightedPermissions } from '../../../../helpers/utils/permission';\nimport SnapPermissionAdapter from '../snap-permission-adapter';\n\nexport default function SnapPermissionsList({\n  snapId,\n  snapName,\n  permissions,\n  connections,\n  showOptions,\n  showAllPermissions,\n  onShowAllPermissions,\n}) {\n  const t = useI18nContext();\n\n  const combinedPermissions = useMemo(() => {\n    return { ...permissions, connection_permission: connections ?? {} };\n  }, [permissions, connections]);\n\n  const targetSubjectsMetadata = useSelector((state) =>\n    getMultipleTargetsSubjectMetadata(state, connections),\n  );\n\n  const snapsMetadata = useSelector(getSnapsMetadata);\n\n  const weightedPermissions = getWeightedPermissions({\n    t,\n    permissions: combinedPermissions,\n    subjectName: snapName,\n    getSubjectName: getSnapName(snapsMetadata),\n  });\n\n  const [showAll, setShowAll] = useState(\n    showAllPermissions ||\n      Object.keys(weightedPermissions).length <=\n        PermissionsAbstractionThreshold,\n  );\n\n  const filteredPermissions = getFilteredSnapPermissions(\n    weightedPermissions,\n    PermissionWeightThreshold.snapInstall,\n    MinPermissionAbstractionDisplayCount,\n  );\n\n  const onShowAllPermissionsHandler = () => {\n    onShowAllPermissions();\n    setShowAll(true);\n  };\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      width={BlockSize.Full}\n    >\n      <Box className=\"snap-permissions-list\" width={BlockSize.Full}>\n        <SnapPermissionAdapter\n          permissions={showAll ? weightedPermissions : filteredPermissions}\n          snapId={snapId}\n          snapName={snapName}\n          showOptions={showOptions}\n          targetSubjectsMetadata={targetSubjectsMetadata}\n        />\n      </Box>\n      {showAll ? null : (\n        <Box\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n          paddingTop={2}\n          paddingBottom={2}\n        >\n          <ButtonLink onClick={onShowAllPermissionsHandler}>\n            {t('seeAllPermissions')}\n          </ButtonLink>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nSnapPermissionsList.propTypes = {\n  snapId: PropTypes.string.isRequired,\n  snapName: PropTypes.string.isRequired,\n  permissions: PropTypes.object.isRequired,\n  connections: PropTypes.object,\n  showOptions: PropTypes.bool,\n  showAllPermissions: PropTypes.bool,\n  onShowAllPermissions: PropTypes.func,\n};\n","export { default } from './snap-privacy-warning';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  AvatarIcon,\n  AvatarIconSize,\n  Box,\n  ButtonLink,\n  ButtonLinkSize,\n  IconName,\n  Text,\n  Modal,\n  ModalFooter,\n  ModalBody,\n  ModalContent,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  FontWeight,\n  IconColor,\n  JustifyContent,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useScrollRequired } from '../../../../hooks/useScrollRequired';\nimport { TERMS_OF_USE_LINK } from '../../../../../shared/constants/terms';\n\nexport default function SnapPrivacyWarning({ onAccepted, onCanceled }) {\n  const t = useI18nContext();\n  const { isScrollable, isScrolledToBottom, scrollToBottom, ref, onScroll } =\n    useScrollRequired();\n\n  return (\n    <Modal onClose={() => null} isOpen className=\"snap-install-warning\">\n      <ModalContent>\n        <ModalBody className=\"snap-privacy-warning\">\n          <Box>\n            <Box className=\"snap-privacy-warning__header\">\n              <Box\n                marginTop={4}\n                className=\"snap-privacy-warning__header__info-icon\"\n                display={Display.Flex}\n                justifyContent={JustifyContent.center}\n                alignItems={AlignItems.center}\n              >\n                <AvatarIcon\n                  iconName={IconName.Info}\n                  color={IconColor.infoDefault}\n                  backgroundColor={BackgroundColor.primaryMuted}\n                  size={AvatarIconSize.Md}\n                />\n              </Box>\n              <Box\n                className=\"snap-privacy-warning__header__title\"\n                marginTop={4}\n                marginBottom={4}\n                display={Display.Flex}\n                justifyContent={JustifyContent.center}\n                alignItems={AlignItems.center}\n              >\n                <Text\n                  variant={TextVariant.headingMd}\n                  fontWeight={FontWeight.Bold}\n                >\n                  {t('thirdPartySoftware')}\n                </Text>\n              </Box>\n            </Box>\n            <Box\n              className=\"snap-privacy-warning__content\"\n              ref={ref}\n              onScroll={onScroll}\n            >\n              <Box className=\"snap-privacy-warning__message\">\n                <Text variant={TextVariant.bodyMd}>\n                  {t('snapsPrivacyWarningFirstMessage', [\n                    <ButtonLink\n                      className=\"snap-privacy-warning__content__terms-link\"\n                      key=\"privacyNoticeTermsOfUseLink\"\n                      size={ButtonLinkSize.Inherit}\n                      href={TERMS_OF_USE_LINK}\n                      target=\"_blank\"\n                    >\n                      &nbsp;{t('snapsTermsOfUse')}&nbsp;\n                    </ButtonLink>,\n                  ])}\n                </Text>\n                <Text variant={TextVariant.bodyMd} paddingTop={6}>\n                  {t('snapsPrivacyWarningSecondMessage')}\n                </Text>\n                <Text\n                  variant={TextVariant.bodyMd}\n                  fontWeight={FontWeight.Bold}\n                  paddingTop={6}\n                >\n                  {t('snapsPrivacyWarningThirdMessage')}\n                </Text>\n              </Box>\n              {isScrollable && !isScrolledToBottom ? (\n                <AvatarIcon\n                  className=\"snap-privacy-warning__content__scroll-button\"\n                  data-testid=\"snap-privacy-warning-scroll\"\n                  iconName={IconName.Arrow2Down}\n                  backgroundColor={BackgroundColor.infoDefault}\n                  color={IconColor.primaryInverse}\n                  onClick={scrollToBottom}\n                  style={{ cursor: 'pointer' }}\n                />\n              ) : null}\n            </Box>\n          </Box>\n        </ModalBody>\n        <ModalFooter\n          onSubmit={onAccepted}\n          onCancel={onCanceled}\n          submitButtonProps={{\n            children: t('accept'),\n            disabled: !isScrolledToBottom,\n          }}\n          cancelButtonProps={{ children: t('cancel') }}\n        />\n      </ModalContent>\n    </Modal>\n  );\n}\n\nSnapPrivacyWarning.propTypes = {\n  /**\n   * onAccepted handler\n   */\n  onAccepted: PropTypes.func.isRequired,\n  /**\n   * onCanceled handler\n   */\n  onCanceled: PropTypes.func.isRequired,\n};\n","export { default } from './snap-remove-warning';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  Text,\n  Box,\n  Button,\n  Modal,\n  ModalOverlay,\n  BUTTON_VARIANT,\n  BUTTON_SIZES,\n} from '../../../component-library';\nimport { ModalContent } from '../../../component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../component-library/modal-header/deprecated';\n\nimport {\n  BlockSize,\n  Display,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\n\nexport default function SnapRemoveWarning({\n  isOpen,\n  onCancel,\n  onSubmit,\n  snapName,\n}) {\n  const t = useI18nContext();\n  return (\n    <Modal isOpen={isOpen} onClose={onCancel}>\n      <ModalOverlay />\n      <ModalContent\n        modalDialogProps={{\n          display: Display.Flex,\n          flexDirection: FlexDirection.Column,\n          gap: 4,\n        }}\n      >\n        <ModalHeader onClose={onCancel}>{t('pleaseConfirm')}</ModalHeader>\n        <Text>{t('removeSnapConfirmation', [snapName])}</Text>\n        <Box width={BlockSize.Full} display={Display.Flex} gap={4}>\n          <Button\n            block\n            variant={BUTTON_VARIANT.SECONDARY}\n            size={BUTTON_SIZES.LG}\n            onClick={onCancel}\n          >\n            {t('cancel')}\n          </Button>\n          <Button\n            block\n            size={BUTTON_SIZES.LG}\n            id=\"popoverRemoveSnapButton\"\n            danger\n            onClick={onSubmit}\n          >\n            {t('removeSnap')}\n          </Button>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nSnapRemoveWarning.propTypes = {\n  /**\n   * onCancel handler\n   */\n  onCancel: PropTypes.func,\n  /**\n   * onSubmit handler\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * Name of snap\n   */\n  snapName: PropTypes.string,\n  /**\n   * Whether the modal is open\n   */\n  isOpen: PropTypes.bool,\n};\n","export * from './snap-ui-address';\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  CaipAccountId,\n  isHexString,\n  parseCaipAccountId,\n} from '@metamask/utils';\nimport { Box, Text } from '../../../component-library';\nimport {\n  AlignItems,\n  Display,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\nimport BlockieIdenticon from '../../../ui/identicon/blockieIdenticon';\nimport Jazzicon from '../../../ui/jazzicon';\nimport { getUseBlockie } from '../../../../selectors';\nimport { shortenAddress } from '../../../../helpers/utils/util';\nimport { toChecksumHexAddress } from '../../../../../shared/modules/hexstring-utils';\n\nexport type SnapUIAddressProps = {\n  // The address must be a CAIP-10 string.\n  address: string;\n  diameter?: number;\n};\n\nexport const SnapUIAddress: React.FunctionComponent<SnapUIAddressProps> = ({\n  address,\n  diameter = 32,\n}) => {\n  const parsed = useMemo(() => {\n    if (isHexString(address)) {\n      // For legacy address inputs we assume them to be Ethereum addresses.\n      // NOTE: This means the chain ID is not gonna be reliable.\n      return parseCaipAccountId(`eip155:1:${address}`);\n    }\n\n    return parseCaipAccountId(address as CaipAccountId);\n  }, [address]);\n  const useBlockie = useSelector(getUseBlockie);\n\n  // For EVM addresses, we make sure they are checksummed.\n  const transformedAddress =\n    parsed.chain.namespace === 'eip155'\n      ? toChecksumHexAddress(parsed.address)\n      : parsed.address;\n  const shortenedAddress = shortenAddress(transformedAddress);\n\n  return (\n    <Box display={Display.Flex} alignItems={AlignItems.center} gap={2}>\n      {useBlockie ? (\n        <BlockieIdenticon\n          address={parsed.address}\n          diameter={diameter}\n          borderRadius=\"50%\"\n        />\n      ) : (\n        <Jazzicon\n          namespace={parsed.chain.namespace}\n          address={parsed.address}\n          diameter={diameter}\n          style={{ display: 'flex' }}\n        />\n      )}\n      <Text color={TextColor.inherit}>{shortenedAddress}</Text>\n    </Box>\n  );\n};\n","export * from './snap-ui-button';\n","import React, { FunctionComponent, MouseEvent as ReactMouseEvent } from 'react';\nimport classnames from 'classnames';\nimport { ButtonType, UserInputEventType } from '@metamask/snaps-sdk';\nimport { ButtonLinkProps, Text } from '../../../component-library';\nimport {\n  FontWeight,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\n\nexport type SnapUIButtonProps = {\n  name?: string;\n};\n\nconst COLORS = {\n  primary: TextColor.infoDefault,\n  destructive: TextColor.errorDefault,\n  disabled: TextColor.textMuted,\n};\n\nexport const SnapUIButton: FunctionComponent<\n  SnapUIButtonProps & ButtonLinkProps<'button'>\n> = ({\n  name,\n  children,\n  type,\n  variant = 'primary',\n  disabled = false,\n  className = '',\n  ...props\n}) => {\n  const { handleEvent } = useSnapInterfaceContext();\n\n  const handleClick = (event: ReactMouseEvent<HTMLElement>) => {\n    if (type === ButtonType.Button) {\n      event.preventDefault();\n    }\n\n    handleEvent({\n      event: UserInputEventType.ButtonClickEvent,\n      name,\n    });\n  };\n\n  const overriddenVariant = disabled ? 'disabled' : variant;\n\n  const color = COLORS[overriddenVariant as keyof typeof COLORS];\n\n  return (\n    <Text\n      className={classnames(className, 'snap-ui-renderer__button', {\n        'snap-ui-renderer__button--disabled': disabled,\n      })}\n      as=\"button\"\n      id={name}\n      type={type}\n      fontWeight={FontWeight.Medium}\n      onClick={handleClick}\n      color={color}\n      disabled={disabled}\n      {...props}\n    >\n      {children}\n    </Text>\n  );\n};\n","export * from './snap-ui-card';\n","import React, { FunctionComponent } from 'react';\nimport {\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n  AlignItems,\n} from '../../../../helpers/constants/design-system';\nimport { Box, Text } from '../../../component-library';\nimport { SnapUIImage } from '../snap-ui-image';\n\nexport type SnapUICardProps = {\n  image?: string | undefined;\n  title: string;\n  description?: string | undefined;\n  value: string;\n  extra?: string | undefined;\n};\n\nexport const SnapUICard: FunctionComponent<SnapUICardProps> = ({\n  image,\n  title,\n  description,\n  value,\n  extra,\n}) => {\n  return (\n    <Box\n      className=\"snap-ui-renderer__card\"\n      display={Display.Flex}\n      justifyContent={JustifyContent.spaceBetween}\n      alignItems={AlignItems.center}\n    >\n      <Box display={Display.Flex} gap={4} alignItems={AlignItems.center}>\n        {image && (\n          <SnapUIImage\n            width=\"32px\"\n            height=\"32px\"\n            value={image}\n            style={{ borderRadius: '999px' }}\n          />\n        )}\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          style={{ overflow: 'hidden' }}\n        >\n          <Text variant={TextVariant.bodyMdMedium} ellipsis>\n            {title}\n          </Text>\n          {description && (\n            <Text color={TextColor.textAlternative} ellipsis>\n              {description}\n            </Text>\n          )}\n        </Box>\n      </Box>\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        textAlign={TextAlign.Right}\n        style={{ overflow: 'hidden' }}\n      >\n        <Text variant={TextVariant.bodyMdMedium} ellipsis>\n          {value}\n        </Text>\n        {extra && (\n          <Text color={TextColor.textAlternative} ellipsis>\n            {extra}\n          </Text>\n        )}\n      </Box>\n    </Box>\n  );\n};\n","export * from './snap-ui-checkbox';\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\nimport {\n  BorderColor,\n  Display,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Box,\n  Label,\n  HelpText,\n  HelpTextSeverity,\n  Checkbox,\n} from '../../../component-library';\nimport ToggleButton from '../../../ui/toggle-button';\n\nexport type SnapUICheckboxProps = {\n  name: string;\n  fieldLabel?: string;\n  variant?: 'default' | 'toggle';\n  label?: string;\n  error?: string;\n  form?: string;\n};\n\nexport const SnapUICheckbox: FunctionComponent<SnapUICheckboxProps> = ({\n  name,\n  variant,\n  fieldLabel,\n  label,\n  error,\n  form,\n  ...props\n}) => {\n  const { handleInputChange, getValue } = useSnapInterfaceContext();\n\n  const initialValue = getValue(name, form) as boolean;\n\n  const [value, setValue] = useState(initialValue ?? false);\n\n  useEffect(() => {\n    if (initialValue !== undefined && initialValue !== null) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChange = () => {\n    setValue(!value);\n    handleInputChange(name, !value, form);\n  };\n\n  return (\n    <Box\n      className=\"snap-ui-renderer__checkbox\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n    >\n      {fieldLabel && <Label htmlFor={name}>{fieldLabel}</Label>}\n      {variant === 'toggle' ? (\n        <ToggleButton\n          onToggle={handleChange}\n          value={value}\n          onLabel={label}\n          offLabel={label}\n          {...props}\n        />\n      ) : (\n        <Checkbox\n          onChange={handleChange}\n          isChecked={value}\n          label={label}\n          inputProps={{\n            borderColor: BorderColor.borderMuted,\n          }}\n          {...props}\n        />\n      )}\n      {error && (\n        <HelpText severity={HelpTextSeverity.Danger} marginTop={1}>\n          {error}\n        </HelpText>\n      )}\n    </Box>\n  );\n};\n","export * from './snap-ui-dropdown';\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\nimport {\n  Display,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Box,\n  Label,\n  HelpText,\n  HelpTextSeverity,\n} from '../../../component-library';\nimport Dropdown from '../../../ui/dropdown';\n\nexport type SnapUIDropdownProps = {\n  name: string;\n  label?: string;\n  error?: string;\n  options: { name: string; value: string }[];\n  form?: string;\n};\n\nexport const SnapUIDropdown: FunctionComponent<SnapUIDropdownProps> = ({\n  name,\n  label,\n  error,\n  form,\n  ...props\n}) => {\n  const { handleInputChange, getValue } = useSnapInterfaceContext();\n\n  const initialValue = getValue(name, form) as string;\n\n  const [value, setValue] = useState(initialValue ?? '');\n\n  useEffect(() => {\n    if (initialValue) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChange = (newValue: string) => {\n    setValue(newValue);\n    handleInputChange(name, newValue, form);\n  };\n\n  return (\n    <Box\n      className=\"snap-ui-renderer__dropdown\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n    >\n      {label && <Label htmlFor={name}>{label}</Label>}\n      <Dropdown\n        data-testid=\"snaps-dropdown\"\n        selectedOption={value}\n        onChange={handleChange}\n        style={{\n          border: '1px solid var(--color-border-muted)',\n        }}\n        {...props}\n      />\n      {error && (\n        <HelpText severity={HelpTextSeverity.Danger} marginTop={1}>\n          {error}\n        </HelpText>\n      )}\n    </Box>\n  );\n};\n","export * from './snap-ui-file-input';\n","import React, {\n  ChangeEvent,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  DragEvent,\n  FunctionComponent,\n  useRef,\n  useState,\n} from 'react';\nimport classnames from 'classnames';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\nimport {\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  HelpText,\n  HelpTextSeverity,\n  Icon,\n  IconName,\n  IconSize,\n  Label,\n  Text,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  BorderStyle,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nexport type SnapUIFileInputProps = {\n  name: string;\n  label?: string;\n  form?: string;\n  accept?: string[];\n  compact?: boolean;\n  error?: boolean;\n  helpText?: string;\n};\n\n/**\n * A file input component, which is used to create a file input field for Snaps\n * user interfaces.\n *\n * @param props - The props of the component.\n * @param props.name - The name of the file input. This is used to identify the\n * file input field in the form data.\n * @param props.label - The label of the file input, which is displayed above\n * the file input field.\n * @param props.form - The name of the form that the file input belongs to. This\n * is used to group the file input field with other form fields.\n * @param props.accept - The types of files that the file input can accept. This\n * is used to filter the files that the user can select when the input field is\n * clicked.\n * @param props.compact - Whether the file input should be displayed in a\n * compact mode. In compact mode, the file input is displayed as a button with\n * an icon.\n * @param props.error - Whether the file input has an error. If the file input\n * has an error, the help text is displayed in red.\n * @param props.helpText - The help text of the file input, which is displayed\n * below the file input field.\n * @returns A file input element.\n */\nexport const SnapUIFileInput: FunctionComponent<SnapUIFileInputProps> = ({\n  name,\n  label,\n  form,\n  accept,\n  compact,\n  error,\n  helpText,\n}) => {\n  const t = useI18nContext();\n  const { handleFileChange } = useSnapInterfaceContext();\n  const ref = useRef<HTMLInputElement>(null);\n  const [active, setActive] = useState(false);\n\n  const handleClick = () => {\n    ref.current?.click();\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0] ?? null;\n    handleFileChange(name, file, form);\n  };\n\n  const handleDragOver = (event: DragEvent<HTMLSpanElement>) => {\n    event.preventDefault();\n    setActive(true);\n  };\n\n  const handleDragLeave = (event: DragEvent<HTMLSpanElement>) => {\n    event.preventDefault();\n    setActive(false);\n  };\n\n  const handleDrop = (event: DragEvent<HTMLSpanElement>) => {\n    event.preventDefault();\n    setActive(false);\n\n    const file = event.dataTransfer?.files?.[0] ?? null;\n    handleFileChange(name, file, form);\n  };\n\n  const header = (\n    <>\n      {label && (\n        <Label\n          htmlFor={name}\n          className={classnames('mm-form-text-field__label')}\n        >\n          {label}\n        </Label>\n      )}\n      <input\n        id={name}\n        ref={ref}\n        type=\"file\"\n        name={name}\n        onChange={handleChange}\n        accept={accept?.join(',')}\n        hidden={true}\n      />\n    </>\n  );\n\n  const footer = (\n    <>\n      {helpText && (\n        <HelpText\n          severity={error ? HelpTextSeverity.Danger : undefined}\n          marginTop={1}\n          className=\"mm-form-text-field__help-text\"\n        >\n          {helpText}\n        </HelpText>\n      )}\n    </>\n  );\n\n  if (compact) {\n    return (\n      <Box className=\"snap-ui-renderer__file-input\">\n        {header}\n        <ButtonIcon\n          type=\"button\"\n          iconName={IconName.Upload}\n          color={IconColor.iconAlternative}\n          size={ButtonIconSize.Md}\n          padding={1}\n          backgroundColor={BackgroundColor.backgroundAlternative}\n          borderColor={BorderColor.borderMuted}\n          borderStyle={BorderStyle.solid}\n          borderWidth={1}\n          borderRadius={BorderRadius.MD}\n          onClick={handleClick}\n          ariaLabel={t('uploadFile')}\n        />\n        {footer}\n      </Box>\n    );\n  }\n\n  return (\n    <Box className=\"snap-ui-renderer__file-input\">\n      {header}\n      <Box\n        className=\"snap-ui-renderer__file-input__drop-zone\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        gap={1}\n        paddingTop={5}\n        paddingBottom={5}\n        textAlign={TextAlign.Center}\n        borderColor={BorderColor.borderMuted}\n        borderStyle={BorderStyle.solid}\n        borderWidth={1}\n        borderRadius={BorderRadius.MD}\n        style={{\n          cursor: 'pointer',\n          backgroundColor: active\n            ? 'var(--color-background-default-hover)'\n            : 'var(--color-background-default)',\n        }}\n        onClick={handleClick}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n      >\n        <Icon\n          name={IconName.Upload}\n          size={IconSize.Md}\n          color={active ? IconColor.infoDefault : IconColor.iconAlternative}\n        />\n        <Text\n          color={active ? IconColor.infoDefault : IconColor.iconAlternative}\n        >\n          {t('uploadDropFile')}\n        </Text>\n      </Box>\n      {footer}\n    </Box>\n  );\n};\n","export * from './snap-ui-footer-button';\n","import React, { FunctionComponent, MouseEvent as ReactMouseEvent } from 'react';\nimport {\n  ButtonType,\n  ButtonVariant,\n  UserInputEventType,\n} from '@metamask/snaps-sdk';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport {\n  Button,\n  ButtonProps,\n  ButtonSize,\n  IconSize,\n} from '../../../component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\nimport { SnapIcon } from '../snap-icon';\nimport { getHideSnapBranding } from '../../../../selectors';\n\ntype SnapUIFooterButtonProps = {\n  name?: string;\n  variant?: ButtonVariant;\n  isSnapAction?: boolean;\n  onCancel?: () => void;\n};\n\nexport const SnapUIFooterButton: FunctionComponent<\n  SnapUIFooterButtonProps & ButtonProps<'button'>\n> = ({\n  onCancel,\n  name,\n  children,\n  disabled = false,\n  isSnapAction = false,\n  type,\n  variant = ButtonVariant.Primary,\n  form,\n  ...props\n}) => {\n  const { handleEvent, snapId } = useSnapInterfaceContext();\n  const hideSnapBranding = useSelector((state) =>\n    getHideSnapBranding(state, snapId),\n  );\n\n  const handleSnapAction = (event: ReactMouseEvent<HTMLElement>) => {\n    if (type === ButtonType.Button) {\n      event.preventDefault();\n    }\n\n    handleEvent({\n      event: UserInputEventType.ButtonClickEvent,\n      name,\n    });\n  };\n\n  const handleClick = isSnapAction ? handleSnapAction : onCancel;\n\n  const brandedButtonVariant = isSnapAction\n    ? ButtonVariant.Primary\n    : ButtonVariant.Secondary;\n\n  const buttonVariant = hideSnapBranding ? variant : brandedButtonVariant;\n\n  return (\n    <Button\n      className={classnames('snap-ui-renderer__footer-button', {\n        'snap-ui-renderer__footer-button--disabled': disabled,\n        'hide-snap-branding': hideSnapBranding,\n      })}\n      type={type}\n      form={form}\n      {...props}\n      size={ButtonSize.Lg}\n      block\n      disabled={disabled}\n      variant={buttonVariant}\n      onClick={handleClick}\n      textProps={{\n        display: Display.Flex,\n        alignItems: AlignItems.center,\n        flexDirection: FlexDirection.Row,\n      }}\n    >\n      {isSnapAction && !hideSnapBranding && (\n        <SnapIcon snapId={snapId} avatarSize={IconSize.Sm} marginRight={2} />\n      )}\n      {children}\n    </Button>\n  );\n};\n","export * from './snap-ui-form';\n","import React, { FormEvent, FunctionComponent } from 'react';\nimport { UserInputEventType } from '@metamask/snaps-sdk';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\nimport { Box } from '../../../component-library';\nimport {\n  Display,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\n\nexport type SnapUIFormProps = {\n  name: string;\n};\n\nexport const SnapUIForm: FunctionComponent<SnapUIFormProps> = ({\n  children,\n  name,\n}) => {\n  const { handleEvent } = useSnapInterfaceContext();\n\n  const handleSubmit = (event: FormEvent<HTMLElement>) => {\n    event.preventDefault();\n    handleEvent({\n      event: UserInputEventType.FormSubmitEvent,\n      name,\n    });\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      className=\"snap-ui-renderer__form\"\n      onSubmit={handleSubmit}\n      id={name}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      gap={4}\n    >\n      {children}\n    </Box>\n  );\n};\n","export * from './snap-ui-icon';\n","import React from 'react';\nimport { Icon, IconName, IconSize } from '../../../component-library/icon';\nimport { IconColor } from '../../../../helpers/constants/design-system';\n\nexport type SnapUIIconProps = {\n  name: IconName;\n  color?: IconColor;\n  size?: IconSize;\n};\n\nexport const SnapUIIcon = ({ name, color, size }: SnapUIIconProps) => {\n  return (\n    <Icon\n      className=\"snap-ui-renderer__icon\"\n      name={name}\n      size={size}\n      color={color}\n    />\n  );\n};\n","export * from './snap-ui-image';\n","import React from 'react';\n\nexport type SnapUIImageProps = {\n  value: string;\n  style?: React.CSSProperties;\n  width?: string;\n  height?: string;\n};\n\nexport const SnapUIImage = ({\n  value,\n  width,\n  height,\n  style,\n}: SnapUIImageProps) => {\n  const src = `data:image/svg+xml;utf8,${encodeURIComponent(value)}`;\n\n  return (\n    <img\n      className=\"snap-ui-renderer__image\"\n      data-testid=\"snaps-ui-image\"\n      src={src}\n      width={width}\n      height={height}\n      style={style}\n    />\n  );\n};\n","export * from './snap-ui-input';\n","import React, {\n  ChangeEvent,\n  FunctionComponent,\n  useEffect,\n  useState,\n} from 'react';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\nimport { FormTextField, FormTextFieldProps } from '../../../component-library';\n\nexport type SnapUIInputProps = {\n  name: string;\n  form?: string;\n};\n\nexport const SnapUIInput: FunctionComponent<\n  SnapUIInputProps & FormTextFieldProps<'div'>\n> = ({ name, form, ...props }) => {\n  const { handleInputChange, getValue } = useSnapInterfaceContext();\n\n  const initialValue = getValue(name, form) as string;\n\n  const [value, setValue] = useState(initialValue ?? '');\n\n  useEffect(() => {\n    if (initialValue) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    handleInputChange(name, event.target.value ?? null, form);\n  };\n\n  return (\n    <FormTextField\n      className=\"snap-ui-renderer__input\"\n      id={name}\n      value={value}\n      onChange={handleChange}\n      {...props}\n    />\n  );\n};\n","export { SnapUILink } from './snap-ui-link';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Display } from '../../../../helpers/constants/design-system';\nimport {\n  ButtonLink,\n  ButtonLinkSize,\n  Icon,\n  IconName,\n  IconSize,\n} from '../../../component-library';\nimport SnapLinkWarning from '../snap-link-warning';\n\nexport const SnapUILink = ({ href, children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleLinkClick = () => {\n    setIsOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <SnapLinkWarning isOpen={isOpen} onClose={handleModalClose} url={href} />\n      <ButtonLink\n        as=\"a\"\n        onClick={handleLinkClick}\n        externalLink\n        size={ButtonLinkSize.Inherit}\n        display={Display.Inline}\n        className=\"snap-ui-link\"\n      >\n        {children}\n        <Icon name={IconName.Export} size={IconSize.Inherit} marginLeft={1} />\n      </ButtonLink>\n    </>\n  );\n};\n\nSnapUILink.propTypes = {\n  children: PropTypes.string,\n  href: PropTypes.string,\n};\n","export { SnapUIMarkdown } from './snap-ui-markdown';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport {\n  TextVariant,\n  OverflowWrap,\n  TextColor,\n  Display,\n} from '../../../../helpers/constants/design-system';\nimport {\n  ButtonLink,\n  ButtonLinkSize,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../component-library';\nimport SnapLinkWarning from '../snap-link-warning';\n\nconst Paragraph = (props) => (\n  <Text\n    {...props}\n    variant={TextVariant.bodyMd}\n    className=\"snap-ui-markdown__text\"\n    overflowWrap={OverflowWrap.Anywhere}\n    color={TextColor.inherit}\n  />\n);\n\nconst Link = ({ onClick, children, ...rest }) => (\n  <ButtonLink\n    {...rest}\n    as=\"a\"\n    onClick={onClick}\n    externalLink\n    size={ButtonLinkSize.Inherit}\n    display={Display.Inline}\n    className=\"snap-ui-markdown__link\"\n  >\n    {children}\n    <Icon name={IconName.Export} size={IconSize.Inherit} marginLeft={1} />\n  </ButtonLink>\n);\n\nexport const SnapUIMarkdown = ({ children, markdown }) => {\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n\n  if (markdown === false) {\n    return <Paragraph>{children}</Paragraph>;\n  }\n\n  const handleLinkClick = (url) => {\n    setRedirectUrl(url);\n  };\n\n  const handleModalClose = () => {\n    setRedirectUrl(undefined);\n  };\n\n  return (\n    <>\n      <SnapLinkWarning\n        isOpen={Boolean(redirectUrl)}\n        onClose={handleModalClose}\n        url={redirectUrl}\n      />\n      <ReactMarkdown\n        allowedElements={['p', 'strong', 'em', 'a']}\n        components={{\n          p: Paragraph,\n          a: ({ children: value, href }) => (\n            <Link onClick={() => handleLinkClick(href)}>{value ?? href}</Link>\n          ),\n        }}\n      >\n        {children}\n      </ReactMarkdown>\n    </>\n  );\n};\n\nSnapUIMarkdown.propTypes = {\n  children: PropTypes.string,\n  markdown: PropTypes.bool,\n};\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n","export * from './snap-ui-radio-group';\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Box,\n  HelpText,\n  HelpTextSeverity,\n  Label,\n  Text,\n} from '../../../component-library';\n\nexport type SnapUIRadioOption = { value: string; name: string };\n\nexport type SnapUIRadioGroupProps = {\n  name: string;\n  label?: string;\n  error?: string;\n  options: SnapUIRadioOption[];\n  form?: string;\n};\n\nexport const SnapUIRadioGroup: FunctionComponent<SnapUIRadioGroupProps> = ({\n  name,\n  label,\n  error,\n  form,\n  ...props\n}) => {\n  const { handleInputChange, getValue } = useSnapInterfaceContext();\n\n  const initialValue = getValue(name, form) as string;\n\n  const [value, setValue] = useState(initialValue ?? '');\n\n  useEffect(() => {\n    if (initialValue && value !== initialValue) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChange = (newValue: string) => {\n    setValue(newValue);\n    handleInputChange(name, newValue, form);\n  };\n\n  const displayRadioOptions = (options: SnapUIRadioOption[]) => {\n    return options.map((option: SnapUIRadioOption) => {\n      return (\n        <Box display={Display.Flex} alignItems={AlignItems.center}>\n          <input\n            type=\"radio\"\n            id={option.name}\n            name={name}\n            value={option.value}\n            checked={value === option.value}\n            onChange={() => handleChange(option.value)}\n          />\n          <Text\n            as=\"label\"\n            htmlFor={option.name}\n            variant={TextVariant.bodyMd}\n            marginLeft={1}\n          >\n            {option.name}\n          </Text>\n        </Box>\n      );\n    });\n  };\n\n  return (\n    <Box\n      className=\"snap-ui-renderer__radio\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n    >\n      {label && <Label htmlFor={name}>{label}</Label>}\n      {displayRadioOptions(props.options)}\n      {error && (\n        <HelpText severity={HelpTextSeverity.Danger} marginTop={1}>\n          {error}\n        </HelpText>\n      )}\n    </Box>\n  );\n};\n","import { AddressElement } from '@metamask/snaps-sdk/jsx';\nimport { UIComponentFactory } from './types';\n\nexport const address: UIComponentFactory<AddressElement> = ({ element }) => ({\n  element: 'SnapUIAddress',\n  props: {\n    address: element.props.address,\n    diameter: 16,\n  },\n});\n","import { BoldElement, JSXElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { NonEmptyArray } from '@metamask/utils';\nimport { mapTextToTemplate } from '../utils';\nimport {\n  TextVariant,\n  OverflowWrap,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport { UIComponentFactory } from './types';\n\nexport const bold: UIComponentFactory<BoldElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'Text',\n  children: mapTextToTemplate(\n    getJsxChildren(element) as NonEmptyArray<string | JSXElement>,\n    params,\n  ),\n  props: {\n    variant: TextVariant.bodyMd,\n    overflowWrap: OverflowWrap.Anywhere,\n    color: TextColor.inherit,\n    className: 'snap-ui-renderer__text',\n    as: 'b',\n  },\n});\n","import { BoxElement, JSXElement, BoxProps } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { NonEmptyArray } from '@metamask/utils';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport { mapToTemplate } from '../utils';\nimport { UIComponent, UIComponentFactory } from './types';\n\nfunction generateJustifyContent(alignment?: BoxProps['alignment']) {\n  switch (alignment) {\n    default:\n    case 'start':\n      return JustifyContent.flexStart;\n\n    case 'center':\n      return JustifyContent.center;\n\n    case 'end':\n      return JustifyContent.flexEnd;\n\n    case 'space-between':\n      return JustifyContent.spaceBetween;\n\n    case 'space-around':\n      return JustifyContent.spaceAround;\n  }\n}\n\nexport const box: UIComponentFactory<BoxElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'Box',\n  children: getJsxChildren(element).map((children) =>\n    mapToTemplate({ ...params, element: children as JSXElement }),\n  ) as NonEmptyArray<UIComponent>,\n  props: {\n    display: Display.Flex,\n    flexDirection:\n      element.props.direction === 'horizontal'\n        ? FlexDirection.Row\n        : FlexDirection.Column,\n    justifyContent: generateJustifyContent(element.props.alignment),\n    alignItems: element.props.center && AlignItems.center,\n    className: 'snap-ui-renderer__panel',\n    color: TextColor.textDefault,\n  },\n});\n","import { ButtonElement, JSXElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { NonEmptyArray } from '@metamask/utils';\nimport { mapTextToTemplate } from '../utils';\nimport { UIComponentFactory } from './types';\n\nexport const button: UIComponentFactory<ButtonElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'SnapUIButton',\n  props: {\n    type: element.props.type,\n    form: element.props.form,\n    variant: element.props.variant,\n    name: element.props.name,\n    disabled: element.props.disabled,\n  },\n  children: mapTextToTemplate(\n    getJsxChildren(element) as NonEmptyArray<string | JSXElement>,\n    params,\n  ),\n});\n","import { CardElement } from '@metamask/snaps-sdk/jsx';\nimport { UIComponentFactory } from './types';\n\nexport const card: UIComponentFactory<CardElement> = ({ element }) => ({\n  element: 'SnapUICard',\n  props: {\n    image: element.props.image,\n    title: element.props.title,\n    description: element.props.description,\n    value: element.props.value,\n    extra: element.props.extra,\n  },\n});\n","import { CheckboxElement } from '@metamask/snaps-sdk/jsx';\n\nimport { UIComponentFactory } from './types';\n\nexport const checkbox: UIComponentFactory<CheckboxElement> = ({\n  element,\n  form,\n}) => ({\n  element: 'SnapUICheckbox',\n  props: {\n    name: element.props.name,\n    label: element.props.label,\n    variant: element.props.variant,\n    form,\n  },\n});\n","import { BoxElement, JSXElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { mapToTemplate } from '../utils';\nimport {\n  BlockSize,\n  Display,\n  FlexDirection,\n} from '../../../../../helpers/constants/design-system';\nimport { UIComponentFactory } from './types';\nimport { DEFAULT_FOOTER } from './footer';\n\nexport const container: UIComponentFactory<BoxElement> = ({\n  element,\n  useFooter,\n  onCancel,\n  promptLegacyProps,\n  t,\n  ...params\n}) => {\n  const children = getJsxChildren(element);\n\n  // Remove footer if it's not allowed\n  if (!useFooter && children.length === 2) {\n    children.pop();\n  }\n\n  const templateChildren = children.map((child) =>\n    mapToTemplate({\n      useFooter,\n      onCancel,\n      t,\n      ...params,\n      element: child as JSXElement,\n    }),\n  );\n\n  // Injects the prompt input field into the template if the dialog is a prompt type.\n  if (promptLegacyProps) {\n    templateChildren.push({\n      element: 'FormTextField',\n      key: 'snap-prompt-input',\n      props: {\n        marginLeft: 4,\n        marginRight: 4,\n        className: 'snap-prompt-input',\n        value: promptLegacyProps.inputValue,\n        onChange: promptLegacyProps.onInputChange,\n        placeholder: promptLegacyProps.placeholder,\n        maxLength: 300,\n      },\n    });\n  }\n\n  // Injects the default footer if the dialog uses default footer but none was provided.\n  // If onCancel is omitted by the caller we assume that it is safe to not display the default footer.\n  if (useFooter && onCancel && !children[1]) {\n    templateChildren.push({\n      ...DEFAULT_FOOTER,\n      props: {\n        ...DEFAULT_FOOTER.props,\n        className: 'snap-ui-renderer__footer-centered',\n      },\n      children: {\n        element: 'SnapUIFooterButton',\n        key: 'default-button',\n        props: {\n          onCancel,\n          isSnapAction: false,\n        },\n        children: t('close'),\n      },\n    });\n  }\n\n  return {\n    element: 'Box',\n    children: templateChildren,\n    props: {\n      display: Display.Flex,\n      flexDirection: FlexDirection.Column,\n      height: BlockSize.Full,\n      className: 'snap-ui-renderer__container',\n      style: {\n        overflowY: 'auto',\n        paddingBottom: useFooter ? '80px' : 'initial',\n      },\n    },\n  };\n};\n","import { CopyableElement } from '@metamask/snaps-sdk/jsx';\nimport { UIComponentFactory } from './types';\n\nexport const copyable: UIComponentFactory<CopyableElement> = ({ element }) => ({\n  element: 'Copyable',\n  props: {\n    text: element.props.value,\n    sensitive: element.props.sensitive,\n  },\n});\n","import { DividerElement } from '@metamask/snaps-sdk/jsx';\nimport { BorderColor } from '../../../../../helpers/constants/design-system';\nimport { UIComponentFactory } from './types';\n\nexport const divider: UIComponentFactory<DividerElement> = () => ({\n  element: 'Box',\n  props: {\n    className: 'snap-ui-renderer__divider',\n    backgroundColor: BorderColor.borderMuted,\n  },\n});\n","import { DropdownElement, OptionElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\n\nimport { UIComponentFactory } from './types';\n\nexport const dropdown: UIComponentFactory<DropdownElement> = ({\n  element,\n  form,\n}) => {\n  const children = getJsxChildren(element) as OptionElement[];\n\n  const options = children.map((child) => ({\n    value: child.props.value,\n    name: child.props.children,\n  }));\n\n  return {\n    element: 'SnapUIDropdown',\n    props: {\n      id: element.props.name,\n      name: element.props.name,\n      form,\n      options,\n    },\n  };\n};\n","import {\n  FieldElement,\n  InputElement,\n  JSXElement,\n  DropdownElement,\n  RadioGroupElement,\n  CheckboxElement,\n  SelectorElement,\n} from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { getPrimaryChildElementIndex, mapToTemplate } from '../utils';\nimport { dropdown as dropdownFn } from './dropdown';\nimport { radioGroup as radioGroupFn } from './radioGroup';\nimport { checkbox as checkboxFn } from './checkbox';\nimport { selector as selectorFn } from './selector';\nimport { UIComponentFactory, UIComponentParams } from './types';\n\nexport const field: UIComponentFactory<FieldElement> = ({\n  element,\n  form,\n  ...params\n}) => {\n  // For fields we don't render the Input itself, we just adapt SnapUIInput.\n  const children = getJsxChildren(element);\n  const primaryChildIndex = getPrimaryChildElementIndex(\n    children as JSXElement[],\n  );\n  const child = children[primaryChildIndex] as JSXElement;\n\n  switch (child.type) {\n    case 'FileInput': {\n      return {\n        element: 'SnapUIFileInput',\n        props: {\n          name: child.props.name,\n          accept: child.props.accept,\n          compact: child.props.compact,\n          label: element.props.label,\n          form,\n          error: element.props.error !== undefined,\n          helpText: element.props.error,\n        },\n      };\n    }\n\n    case 'Input': {\n      const getLeftAccessory = () => {\n        return mapToTemplate({\n          ...params,\n          element: children[0] as JSXElement,\n        });\n      };\n\n      const getRightAccessory = (accessoryIndex: number) => {\n        return mapToTemplate({\n          ...params,\n          element: children[accessoryIndex] as JSXElement,\n        });\n      };\n\n      const input = child as InputElement;\n\n      const leftAccessoryMapped =\n        primaryChildIndex > 0 ? getLeftAccessory() : undefined;\n\n      let rightAccessoryIndex: number | undefined;\n      if (children[2]) {\n        rightAccessoryIndex = 2;\n      } else if (primaryChildIndex === 0 && children[1]) {\n        rightAccessoryIndex = 1;\n      }\n      const rightAccessoryMapped = rightAccessoryIndex\n        ? getRightAccessory(rightAccessoryIndex)\n        : undefined;\n\n      return {\n        element: 'SnapUIInput',\n        props: {\n          id: input.props.name,\n          placeholder: input.props.placeholder,\n          label: element.props.label,\n          textFieldProps: {\n            type: input.props.type,\n          },\n          name: input.props.name,\n          form,\n          error: element.props.error !== undefined,\n          helpText: element.props.error,\n        },\n        propComponents: {\n          startAccessory: leftAccessoryMapped && {\n            ...leftAccessoryMapped,\n            props: {\n              ...leftAccessoryMapped.props,\n              padding: 0,\n            },\n          },\n          endAccessory: rightAccessoryMapped && {\n            ...rightAccessoryMapped,\n            props: {\n              ...rightAccessoryMapped.props,\n              padding: 0,\n            },\n          },\n        },\n      };\n    }\n\n    case 'Dropdown': {\n      const dropdown = child as DropdownElement;\n      const dropdownMapped = dropdownFn({\n        element: dropdown,\n      } as UIComponentParams<DropdownElement>);\n      return {\n        element: 'SnapUIDropdown',\n        props: {\n          ...dropdownMapped.props,\n          id: dropdown.props.name,\n          label: element.props.label,\n          name: dropdown.props.name,\n          form,\n          error: element.props.error,\n        },\n      };\n    }\n\n    case 'RadioGroup': {\n      const radioGroup = child as RadioGroupElement;\n      const radioGroupMapped = radioGroupFn({\n        element: radioGroup,\n      } as UIComponentParams<RadioGroupElement>);\n      return {\n        element: 'SnapUIRadioGroup',\n        props: {\n          ...radioGroupMapped.props,\n          id: radioGroup.props.name,\n          label: element.props.label,\n          name: radioGroup.props.name,\n          form,\n          error: element.props.error,\n        },\n      };\n    }\n\n    case 'Checkbox': {\n      const checkbox = child as CheckboxElement;\n      const checkboxMapped = checkboxFn({\n        element: checkbox,\n      } as UIComponentParams<CheckboxElement>);\n      return {\n        element: 'SnapUICheckbox',\n        props: {\n          ...checkboxMapped.props,\n          fieldLabel: element.props.label,\n          form,\n          error: element.props.error,\n        },\n      };\n    }\n\n    case 'Selector': {\n      const selector = child as SelectorElement;\n      const selectorMapped = selectorFn({\n        ...params,\n        element: selector,\n      } as UIComponentParams<SelectorElement>);\n      return {\n        ...selectorMapped,\n        element: 'SnapUISelector',\n        props: {\n          ...selectorMapped.props,\n          label: element.props.label,\n          form,\n          error: element.props.error,\n        },\n      };\n    }\n\n    default:\n      throw new Error(`Invalid Field child: ${child.type}`);\n  }\n};\n","import { FileInputElement } from '@metamask/snaps-sdk/jsx';\n\nimport { UIComponentFactory } from './types';\n\nexport const fileInput: UIComponentFactory<FileInputElement> = ({\n  element,\n  form,\n}) => ({\n  element: 'SnapUIInput',\n  props: {\n    element: 'SnapUIFileInput',\n    props: {\n      name: element.props.name,\n      accept: element.props.accept,\n      compact: element.props.compact,\n      form,\n    },\n  },\n});\n","import { FooterElement, ButtonElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\n\nimport {\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexDirection,\n} from '../../../../../helpers/constants/design-system';\nimport { ButtonVariant } from '../../../../component-library';\nimport { UIComponent, UIComponentFactory, UIComponentParams } from './types';\nimport { button as buttonFn } from './button';\n\nexport const DEFAULT_FOOTER = {\n  element: 'Box',\n  key: 'default-footer',\n  props: {\n    display: Display.Flex,\n    flexDirection: FlexDirection.Row,\n    width: BlockSize.Full,\n    gap: 4,\n    padding: 4,\n    className: 'snap-ui-renderer__footer',\n    backgroundColor: BackgroundColor.backgroundDefault,\n    style: {\n      boxShadow: 'var(--shadow-size-md) var(--color-shadow-default)',\n      height: '80px',\n      position: 'fixed',\n      bottom: 0,\n    },\n  },\n};\n\nconst getDefaultButtons = (\n  footer: FooterElement,\n  t: (value: string) => string,\n  onCancel?: () => void,\n) => {\n  const children = getJsxChildren(footer);\n\n  // If onCancel is omitted by the caller we assume that it is safe to not display the default footer.\n  if (children.length === 1 && onCancel) {\n    return {\n      element: 'SnapUIFooterButton',\n      key: 'default-button',\n      props: {\n        onCancel,\n        isSnapAction: false,\n      },\n      children: t('cancel'),\n    };\n  }\n\n  return undefined;\n};\n\nexport const footer: UIComponentFactory<FooterElement> = ({\n  element,\n  t,\n  onCancel,\n  ...params\n}) => {\n  const defaultButtons = getDefaultButtons(element, t, onCancel);\n\n  const footerChildren: UIComponent[] = (\n    getJsxChildren(element) as ButtonElement[]\n  ).map((children, index) => {\n    const buttonMapped = buttonFn({\n      ...params,\n      element: children,\n    } as UIComponentParams<ButtonElement>);\n    return {\n      element: 'SnapUIFooterButton',\n      key: `snap-footer-button-${buttonMapped.props?.name ?? index}`,\n      props: {\n        ...buttonMapped.props,\n        variant: index === 0 ? ButtonVariant.Secondary : ButtonVariant.Primary,\n        isSnapAction: true,\n      },\n      children: buttonMapped.children,\n    };\n  });\n\n  if (defaultButtons) {\n    footerChildren.unshift(defaultButtons as UIComponent);\n  }\n\n  return {\n    ...DEFAULT_FOOTER,\n    children: footerChildren,\n  };\n};\n","import { FormElement, JSXElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { NonEmptyArray } from '@metamask/utils';\nimport { mapToTemplate } from '../utils';\nimport { UIComponent, UIComponentFactory } from './types';\n\nexport const form: UIComponentFactory<FormElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'SnapUIForm',\n  children: getJsxChildren(element).map((children) =>\n    mapToTemplate({\n      element: children as JSXElement,\n      form: element.props.name,\n      ...params,\n    }),\n  ) as NonEmptyArray<UIComponent>,\n  props: {\n    name: element.props.name,\n  },\n});\n","import { HeadingElement } from '@metamask/snaps-sdk/jsx';\nimport {\n  OverflowWrap,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { UIComponentFactory } from './types';\n\nexport const heading: UIComponentFactory<HeadingElement> = ({ element }) => ({\n  element: 'Text',\n  children: element.props.children,\n  props: {\n    variant: TextVariant.headingSm,\n    overflowWrap: OverflowWrap.Anywhere,\n  },\n});\n","import { IconElement } from '@metamask/snaps-sdk/jsx';\nimport { IconColor } from '../../../../../helpers/constants/design-system';\nimport { IconName, IconSize } from '../../../../component-library';\nimport { UIComponentFactory } from './types';\n\nconst ICON_NAMES = new Set(Object.values(IconName));\n\nexport const icon: UIComponentFactory<IconElement> = ({ element }) => {\n  const getIconName = () => {\n    if (ICON_NAMES.has(element.props.name as IconName)) {\n      return element.props.name as IconName;\n    }\n    return IconName.Danger;\n  };\n\n  const getIconColor = () => {\n    switch (element.props.color) {\n      case 'muted':\n        return IconColor.iconMuted;\n      case 'primary':\n        return IconColor.primaryDefault;\n      default:\n        return IconColor.iconDefault;\n    }\n  };\n\n  const getIconSize = () => {\n    switch (element.props.size) {\n      case 'md':\n        return IconSize.Md;\n      default:\n        return IconSize.Inherit;\n    }\n  };\n\n  return {\n    element: 'SnapUIIcon',\n    props: {\n      name: getIconName(),\n      color: getIconColor(),\n      size: getIconSize(),\n    },\n  };\n};\n","import { ImageElement } from '@metamask/snaps-sdk/jsx';\nimport { UIComponentFactory } from './types';\n\nexport const image: UIComponentFactory<ImageElement> = ({ element }) => ({\n  element: 'SnapUIImage',\n  props: {\n    value: element.props.src,\n  },\n});\n","import { box } from './box';\nimport { heading } from './heading';\nimport { text } from './text';\nimport { divider } from './divider';\nimport { spinner } from './spinner';\nimport { image } from './image';\nimport { row } from './row';\nimport { address } from './address';\nimport { copyable } from './copyable';\nimport { button } from './button';\nimport { fileInput } from './file-input';\nimport { form } from './form';\nimport { input } from './input';\nimport { bold } from './bold';\nimport { italic } from './italic';\nimport { link } from './link';\nimport { field } from './field';\nimport { dropdown } from './dropdown';\nimport { radioGroup } from './radioGroup';\nimport { value } from './value';\nimport { checkbox } from './checkbox';\nimport { tooltip } from './tooltip';\nimport { card } from './card';\nimport { footer } from './footer';\nimport { container } from './container';\nimport { selector } from './selector';\nimport { icon } from './icon';\nimport { section } from './section';\n\nexport const COMPONENT_MAPPING = {\n  Box: box,\n  Heading: heading,\n  Text: text,\n  Divider: divider,\n  Spinner: spinner,\n  Icon: icon,\n  Image: image,\n  Copyable: copyable,\n  Row: row,\n  Address: address,\n  Button: button,\n  FileInput: fileInput,\n  Form: form,\n  Input: input,\n  Bold: bold,\n  Italic: italic,\n  Link: link,\n  Field: field,\n  Dropdown: dropdown,\n  RadioGroup: radioGroup,\n  Value: value,\n  Checkbox: checkbox,\n  Tooltip: tooltip,\n  Card: card,\n  Footer: footer,\n  Container: container,\n  Selector: selector,\n  Section: section,\n};\n","import { InputElement } from '@metamask/snaps-sdk/jsx';\n\nimport { UIComponentFactory } from './types';\n\nexport const input: UIComponentFactory<InputElement> = ({ element, form }) => ({\n  element: 'SnapUIInput',\n  props: {\n    id: element.props.name,\n    placeholder: element.props.placeholder,\n    textFieldProps: {\n      type: element.props.type,\n    },\n    name: element.props.name,\n    form,\n  },\n});\n","import { ItalicElement, JSXElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { NonEmptyArray } from '@metamask/utils';\nimport { mapTextToTemplate } from '../utils';\nimport {\n  TextVariant,\n  OverflowWrap,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport { UIComponentFactory } from './types';\n\nexport const italic: UIComponentFactory<ItalicElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'Text',\n  children: mapTextToTemplate(\n    getJsxChildren(element) as NonEmptyArray<string | JSXElement>,\n    params,\n  ),\n  props: {\n    variant: TextVariant.bodyMd,\n    overflowWrap: OverflowWrap.Anywhere,\n    color: TextColor.inherit,\n    className: 'snap-ui-renderer__text',\n    as: 'i',\n  },\n});\n","import { LinkElement, JSXElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { NonEmptyArray } from '@metamask/utils';\nimport { mapTextToTemplate } from '../utils';\nimport { UIComponentFactory } from './types';\n\nexport const link: UIComponentFactory<LinkElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'SnapUILink',\n  children: mapTextToTemplate(\n    getJsxChildren(element) as NonEmptyArray<string | JSXElement>,\n    params,\n  ),\n  props: {\n    href: element.props.href,\n  },\n});\n","import { RadioGroupElement, RadioElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\n\nimport { UIComponentFactory } from './types';\n\nexport const radioGroup: UIComponentFactory<RadioGroupElement> = ({\n  element,\n  form,\n}) => {\n  const children = getJsxChildren(element) as RadioElement[];\n\n  const options = children.map((child) => ({\n    value: child.props.value,\n    name: child.props.children,\n  }));\n\n  return {\n    element: 'SnapUIRadioGroup',\n    props: {\n      id: element.props.name,\n      name: element.props.name,\n      form,\n      options,\n    },\n  };\n};\n","import { RowElement } from '@metamask/snaps-sdk/jsx';\n\nimport { mapToTemplate } from '../utils';\nimport { UIComponentFactory } from './types';\n\nexport const row: UIComponentFactory<RowElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'ConfirmInfoRow',\n  children: [mapToTemplate({ ...params, element: element.props.children })],\n  props: {\n    label: element.props.label,\n    variant: element.props.variant,\n    tooltip: element.props.tooltip,\n    style: {\n      // We do this to cause an overhang with certain confirmation row variants\n      marginLeft: '-8px',\n      marginRight: '-8px',\n      marginTop: '0px',\n      marginBottom: '0px',\n    },\n  },\n});\n","import { SectionElement, BoxElement } from '@metamask/snaps-sdk/jsx';\nimport {\n  BackgroundColor,\n  BorderRadius,\n} from '../../../../../helpers/constants/design-system';\nimport { UIComponentFactory, UIComponentParams } from './types';\nimport { box } from './box';\n\nexport const section: UIComponentFactory<SectionElement> = ({\n  element,\n  ...params\n}) => {\n  const { children, props } = box({\n    element,\n    ...params,\n  } as unknown as UIComponentParams<BoxElement>);\n  return {\n    element: 'Box',\n    children,\n    props: {\n      ...props,\n      className: 'snap-ui-renderer__section',\n      padding: 4,\n      gap: 2,\n      backgroundColor: BackgroundColor.backgroundDefault,\n      borderRadius: BorderRadius.LG,\n    },\n  };\n};\n","import {\n  JSXElement,\n  SelectorElement,\n  SelectorOptionElement,\n} from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\n\nimport { mapToTemplate } from '../utils';\nimport { UIComponentFactory } from './types';\n\nexport const selector: UIComponentFactory<SelectorElement> = ({\n  element,\n  form,\n  ...params\n}) => {\n  const children = getJsxChildren(element) as SelectorOptionElement[];\n\n  const options = children.map((child) => child.props.value);\n\n  const optionComponents = children.map((child) =>\n    mapToTemplate({\n      ...params,\n      form,\n      element: child.props.children as JSXElement,\n    }),\n  );\n\n  return {\n    element: 'SnapUISelector',\n    props: {\n      id: element.props.name,\n      name: element.props.name,\n      title: element.props.title,\n      form,\n      options,\n    },\n    propComponents: {\n      optionComponents,\n    },\n  };\n};\n","import { SpinnerElement } from '@metamask/snaps-sdk/jsx';\nimport { UIComponentFactory } from './types';\n\nexport const spinner: UIComponentFactory<SpinnerElement> = () => ({\n  element: 'Spinner',\n  props: {\n    className: 'snap-ui-renderer__spinner',\n  },\n});\n","import { JSXElement, TextElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { NonEmptyArray } from '@metamask/utils';\nimport { mapTextToTemplate } from '../utils';\nimport {\n  TextVariant,\n  OverflowWrap,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport { UIComponentFactory } from './types';\n\nexport const text: UIComponentFactory<TextElement> = ({\n  element,\n  ...params\n}) => {\n  const getTextColor = () => {\n    switch (element.props.color) {\n      case 'default':\n        return TextColor.textDefault;\n      case 'alternative':\n        return TextColor.textAlternative;\n      case 'muted':\n        return TextColor.textMuted;\n      case 'error':\n        return TextColor.errorDefault;\n      case 'success':\n        return TextColor.successDefault;\n      case 'warning':\n        return TextColor.warningDefault;\n      default:\n        return TextColor.inherit;\n    }\n  };\n\n  return {\n    element: 'Text',\n    children: mapTextToTemplate(\n      getJsxChildren(element) as NonEmptyArray<string | JSXElement>,\n      params,\n    ),\n    props: {\n      variant: TextVariant.bodyMd,\n      overflowWrap: OverflowWrap.Anywhere,\n      color: getTextColor(),\n      className: 'snap-ui-renderer__text',\n      textAlign: element.props.alignment,\n    },\n  };\n};\n","import { JSXElement, Text, TooltipElement } from '@metamask/snaps-sdk/jsx';\nimport { getJsxChildren } from '@metamask/snaps-utils';\nimport { mapToTemplate } from '../utils';\nimport { UIComponentFactory } from './types';\n\nexport const tooltip: UIComponentFactory<TooltipElement> = ({\n  element,\n  ...params\n}) => ({\n  element: 'SnapUITooltip',\n  children: getJsxChildren(element).map((children) =>\n    mapToTemplate({ element: children as JSXElement, ...params }),\n  ),\n  propComponents: {\n    content: mapToTemplate({\n      element:\n        typeof element.props.content === 'string'\n          ? Text({ children: element.props.content })\n          : element.props.content,\n      ...params,\n    }),\n  },\n});\n","import { ValueElement } from '@metamask/snaps-sdk/jsx';\nimport { UIComponentFactory } from './types';\n\nexport const value: UIComponentFactory<ValueElement> = ({ element }) => ({\n  element: 'ConfirmInfoRowValueDouble',\n  props: {\n    left: element.props.extra,\n    right: element.props.value,\n  },\n});\n","export { SnapUIRenderer } from './snap-ui-renderer';\n","import React, { memo, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Container } from '@metamask/snaps-sdk/jsx';\n\nimport { isEqual } from 'lodash';\nimport MetaMaskTemplateRenderer from '../../metamask-template-renderer/metamask-template-renderer';\nimport { SnapDelineator } from '../snap-delineator';\nimport { getSnapMetadata, getMemoizedInterface } from '../../../../selectors';\nimport { Box } from '../../../component-library';\nimport { DelineatorType } from '../../../../helpers/constants/snaps';\n\nimport { SnapInterfaceContextProvider } from '../../../../contexts/snaps';\nimport PulseLoader from '../../../ui/pulse-loader';\nimport {\n  AlignItems,\n  BlockSize,\n  Display,\n  JustifyContent,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { mapToTemplate } from './utils';\n\n// Component that maps Snaps UI JSON format to MetaMask Template Renderer format\nconst SnapUIRendererComponent = ({\n  snapId,\n  delineatorType = DelineatorType.Content,\n  isCollapsable = false,\n  isCollapsed = false,\n  isLoading = false,\n  // This is a workaround while we have the prompt dialog type since we can't inject the SnapUIRenderer in the template renderer.\n  isPrompt = false,\n  inputValue,\n  onInputChange,\n  placeholder,\n  onClick,\n  boxProps,\n  interfaceId,\n  useDelineator = true,\n  useFooter = false,\n  onCancel,\n  contentBackgroundColor,\n}) => {\n  const t = useI18nContext();\n\n  const { name: snapName } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  const interfaceState = useSelector(\n    (state) => getMemoizedInterface(state, interfaceId),\n    // We only want to update the state if the content has changed.\n    // We do this to avoid useless re-renders.\n    (oldState, newState) => isEqual(oldState.content, newState.content),\n  );\n  const rawContent = interfaceState?.content;\n  const content =\n    rawContent?.type === 'Container' || !rawContent\n      ? rawContent\n      : Container({ children: rawContent });\n\n  const promptLegacyProps = useMemo(\n    () =>\n      isPrompt && {\n        inputValue,\n        onInputChange,\n        placeholder,\n      },\n    [inputValue, onInputChange, placeholder, isPrompt],\n  );\n\n  const sections = useMemo(\n    () =>\n      content &&\n      mapToTemplate({\n        map: {},\n        element: content,\n        onCancel,\n        useFooter,\n        promptLegacyProps,\n        t,\n      }),\n    [content, onCancel, useFooter, promptLegacyProps, t],\n  );\n\n  if (isLoading || !content) {\n    return (\n      <Box\n        display={Display.Flex}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        height={BlockSize.Full}\n        width={BlockSize.Full}\n      >\n        <PulseLoader />\n      </Box>\n    );\n  }\n\n  const { state: initialState, context } = interfaceState;\n\n  return useDelineator ? (\n    <SnapDelineator\n      snapName={snapName}\n      type={delineatorType}\n      isCollapsable={isCollapsable}\n      isCollapsed={isCollapsed}\n      onClick={onClick}\n      boxProps={boxProps}\n      disablePadding\n    >\n      <Box className=\"snap-ui-renderer__content\">\n        <SnapInterfaceContextProvider\n          snapId={snapId}\n          interfaceId={interfaceId}\n          initialState={initialState}\n          context={context}\n        >\n          <MetaMaskTemplateRenderer sections={sections} />\n        </SnapInterfaceContextProvider>\n      </Box>\n    </SnapDelineator>\n  ) : (\n    <SnapInterfaceContextProvider\n      snapId={snapId}\n      interfaceId={interfaceId}\n      initialState={initialState}\n      context={context}\n    >\n      <Box\n        className=\"snap-ui-renderer__content\"\n        height={BlockSize.Full}\n        backgroundColor={contentBackgroundColor}\n      >\n        <MetaMaskTemplateRenderer sections={sections} />\n      </Box>\n    </SnapInterfaceContextProvider>\n  );\n};\n\n// SnapUIRenderer is memoized to avoid useless re-renders if one of the parents element re-renders.\nexport const SnapUIRenderer = memo(\n  SnapUIRendererComponent,\n  (prevProps, nextProps) => isEqual(prevProps, nextProps),\n);\n\nSnapUIRendererComponent.propTypes = {\n  snapId: PropTypes.string,\n  delineatorType: PropTypes.string,\n  isCollapsable: PropTypes.bool,\n  isCollapsed: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isPrompt: PropTypes.bool,\n  inputValue: PropTypes.string,\n  onInputChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  onClick: PropTypes.func,\n  boxProps: PropTypes.object,\n  interfaceId: PropTypes.string,\n  useDelineator: PropTypes.bool,\n  useFooter: PropTypes.bool,\n  onCancel: PropTypes.func,\n  contentBackgroundColor: PropTypes.string,\n};\n","import { JSXElement, GenericSnapElement } from '@metamask/snaps-sdk/jsx';\nimport { hasChildren } from '@metamask/snaps-utils';\nimport { memoize } from 'lodash';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { NonEmptyArray, bytesToHex, remove0x } from '@metamask/utils';\nimport { unescape as unescapeEntities } from 'he';\nimport { ChangeEvent as ReactChangeEvent } from 'react';\nimport { COMPONENT_MAPPING } from './components';\nimport { UIComponent } from './components/types';\n\nexport type MapToTemplateParams = {\n  map: Record<string, number>;\n  element: JSXElement;\n  form?: string;\n  useFooter?: boolean;\n  onCancel?: () => void;\n  promptLegacyProps?: {\n    onInputChange: (event: ReactChangeEvent<HTMLInputElement>) => void;\n    inputValue: string;\n    placeholder?: string;\n  };\n  t?: (key: string) => string;\n};\n\n/**\n * Get a truncated version of component children to use in a hash.\n *\n * @param component - The component.\n * @returns A truncated version of component children to use in a hash.\n */\nfunction getChildrenForHash(component: JSXElement) {\n  if (!hasChildren(component)) {\n    return null;\n  }\n\n  const { children } = component.props;\n\n  if (typeof children === 'string') {\n    // For the hash we reduce long strings\n    return children.slice(0, 5000);\n  }\n\n  if (Array.isArray(children)) {\n    // For arrays of children we just use the types\n    return (children as GenericSnapElement[]).map((child) => ({\n      type: child?.type ?? null,\n    }));\n  }\n\n  return children;\n}\n\n/**\n * A memoized function for generating a hash that represents a Snap UI component.\n *\n * This can be used to generate React keys for components.\n *\n * @param component - The component.\n * @returns A hash as a string.\n */\nconst generateHash = memoize((component: JSXElement) => {\n  const { type, props } = component;\n  const { name } = props as { name?: string };\n  const children = getChildrenForHash(component);\n  return remove0x(\n    bytesToHex(\n      sha256(\n        JSON.stringify({\n          type,\n          name: name ?? null,\n          children,\n        }),\n      ),\n    ),\n  );\n});\n\n/**\n * Generate a React key to be used for a Snap UI component.\n *\n * This function also handles collisions between duplicate keys.\n *\n * @param map - A map of previously used keys to be used for collision handling.\n * @param component - The component.\n * @returns A key.\n */\nfunction generateKey(\n  map: Record<string, number>,\n  component: JSXElement,\n): string {\n  const hash = generateHash(component);\n  const count = (map[hash] ?? 0) + 1;\n  map[hash] = count;\n  return `${hash}_${count}`;\n}\n\nexport const mapToTemplate = (params: MapToTemplateParams): UIComponent => {\n  const { type, key } = params.element;\n  const elementKey = key ?? generateKey(params.map, params.element);\n  const mapped = COMPONENT_MAPPING[\n    type as Exclude<JSXElement['type'], 'Option' | 'Radio' | 'SelectorOption'>\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ](params as any);\n  return { ...mapped, key: elementKey } as UIComponent;\n};\n\nexport const mapTextToTemplate = (\n  elements: NonEmptyArray<JSXElement | string>,\n  params: Pick<MapToTemplateParams, 'map'>,\n): NonEmptyArray<UIComponent | string> =>\n  elements.map((element) => {\n    // With the introduction of JSX elements here can be strings.\n    if (typeof element === 'string') {\n      // We unescape HTML entities here, to allow usage of &bull; etc.\n      return unescapeEntities(element);\n    }\n\n    return mapToTemplate({ ...params, element });\n  }) as NonEmptyArray<UIComponent | string>;\n\n/**\n * Registry of element types that are used within Field element.\n */\nexport const FIELD_ELEMENT_TYPES = [\n  'FileInput',\n  'Input',\n  'Dropdown',\n  'RadioGroup',\n  'Checkbox',\n  'Selector',\n];\n\n/**\n * Search for the element that is considered to be primary child element of a Field.\n *\n * @param children - Children elements specified within Field element.\n * @returns Number, representing index of a primary field in the array of children elements.\n */\nexport const getPrimaryChildElementIndex = (children: JSXElement[]) => {\n  return children.findIndex((c) => FIELD_ELEMENT_TYPES.includes(c.type));\n};\n","export * from './snap-ui-selector';\n","import React, {\n  useState,\n  useEffect,\n  MouseEvent as ReactMouseEvent,\n} from 'react';\nimport {\n  Box,\n  ButtonBase,\n  HelpText,\n  HelpTextSeverity,\n  IconName,\n  IconSize,\n  Label,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '../../../component-library';\nimport {\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  IconColor,\n  TextAlign,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useSnapInterfaceContext } from '../../../../contexts/snaps';\n\nexport type SnapUISelectorProps = {\n  name: string;\n  title: string;\n  options: string[];\n  optionComponents: React.ReactNode[];\n  form?: string;\n  label?: string;\n  error?: string;\n  disabled?: boolean;\n};\n\ntype SelectorItemProps = {\n  value: string;\n  children: React.ReactNode;\n  onSelect: (value: string) => void;\n};\n\nconst SelectorItem: React.FunctionComponent<SelectorItemProps> = ({\n  value,\n  children,\n  onSelect,\n}) => {\n  const handleClick = () => {\n    onSelect(value);\n  };\n\n  return (\n    <ButtonBase\n      className=\"snap-ui-renderer__selector-item\"\n      backgroundColor={BackgroundColor.transparent}\n      borderRadius={BorderRadius.LG}\n      paddingTop={2}\n      paddingBottom={2}\n      paddingRight={4}\n      paddingLeft={4}\n      ellipsis\n      textProps={{\n        display: Display.Flex,\n        width: BlockSize.Full,\n      }}\n      onClick={handleClick}\n      style={{\n        justifyContent: 'inherit',\n        textAlign: 'inherit',\n        height: 'inherit',\n        minHeight: '32px',\n        maxHeight: '64px',\n      }}\n    >\n      {children}\n    </ButtonBase>\n  );\n};\n\nexport const SnapUISelector: React.FunctionComponent<SnapUISelectorProps> = ({\n  name,\n  title,\n  options,\n  optionComponents,\n  form,\n  label,\n  error,\n  disabled,\n}) => {\n  const { handleInputChange, getValue } = useSnapInterfaceContext();\n\n  const initialValue = getValue(name, form) as string;\n\n  const [selectedOptionValue, setSelectedOption] = useState(initialValue);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (initialValue) {\n      setSelectedOption(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleModalOpen = (event: ReactMouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => setIsModalOpen(false);\n\n  const handleSelect = (value: string) => {\n    setSelectedOption(value);\n    handleInputChange(name, value, form);\n    handleModalClose();\n  };\n\n  const selectedOptionIndex = options.findIndex(\n    (option) => option === selectedOptionValue,\n  );\n\n  const selectedOption = optionComponents[selectedOptionIndex];\n\n  return (\n    <>\n      <Box display={Display.Flex} flexDirection={FlexDirection.Column}>\n        {label && <Label htmlFor={name}>{label}</Label>}\n        <ButtonBase\n          className=\"snap-ui-renderer__selector\"\n          backgroundColor={BackgroundColor.backgroundDefault}\n          borderRadius={BorderRadius.LG}\n          paddingTop={2}\n          paddingBottom={2}\n          paddingRight={4}\n          paddingLeft={4}\n          ellipsis\n          textProps={{\n            display: Display.Flex,\n            width: BlockSize.Full,\n          }}\n          disabled={disabled}\n          endIconName={IconName.ArrowDown}\n          endIconProps={{\n            color: IconColor.primaryDefault,\n            size: IconSize.Sm,\n          }}\n          gap={2}\n          onClick={handleModalOpen}\n          style={{\n            justifyContent: 'inherit',\n            textAlign: 'inherit',\n            height: 'inherit',\n            minHeight: '32px',\n            maxHeight: '64px',\n          }}\n        >\n          {selectedOption}\n        </ButtonBase>\n        {error && (\n          <HelpText severity={HelpTextSeverity.Danger} marginTop={1}>\n            {error}\n          </HelpText>\n        )}\n      </Box>\n      <Modal isOpen={isModalOpen} onClose={handleModalClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader onClose={handleModalClose}>\n            <Text\n              variant={TextVariant.headingSm}\n              textAlign={TextAlign.Center}\n              ellipsis\n            >\n              {title}\n            </Text>\n          </ModalHeader>\n          <ModalBody>\n            <Box\n              display={Display.Flex}\n              flexDirection={FlexDirection.Column}\n              gap={2}\n            >\n              {optionComponents.map((component, index) => (\n                <SelectorItem value={options[index]} onSelect={handleSelect}>\n                  {component}\n                </SelectorItem>\n              ))}\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","export * from './snap-ui-tooltip';\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport Tooltip from '../../../ui/tooltip';\n\nexport type SnapUITooltipProps = {\n  content: ReactNode;\n};\n\nexport const SnapUITooltip: FunctionComponent<SnapUITooltipProps> = ({\n  content,\n  children,\n}) => {\n  return (\n    <Tooltip\n      html={content}\n      position={'bottom'}\n      // Avoid tooltip from taking up the full width of the container\n      style={{ display: 'inline-flex' }}\n    >\n      {children}\n    </Tooltip>\n  );\n};\n","export { default } from './snap-update-alert';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BannerAlert, IconName, Text } from '../../../component-library';\nimport { TextColor } from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nconst SnapUpdateAlert = ({ snapName, onUpdateClick, bannerAlertProps }) => {\n  const t = useI18nContext();\n  return (\n    <BannerAlert\n      title={t('snapUpdateAvailable')}\n      actionButtonLabel={t('update')}\n      actionButtonOnClick={onUpdateClick}\n      actionButtonProps={{\n        endIconName: IconName.Download,\n        color: TextColor.primaryDefault,\n      }}\n      {...bannerAlertProps}\n    >\n      <Text>{t('snapUpdateAlertDescription', [snapName])}</Text>\n    </BannerAlert>\n  );\n};\n\nSnapUpdateAlert.propTypes = {\n  /**\n   * snapName Name of a Snap.\n   */\n  snapName: PropTypes.string.isRequired,\n  /**\n   * onUpdateClick Update handler callback.\n   */\n  onUpdateClick: PropTypes.func.isRequired,\n  /**\n   * bannerAlertProps additional properties for BannerAlert.\n   */\n  bannerAlertProps: PropTypes.object,\n};\n\nexport default SnapUpdateAlert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  Color,\n  Display,\n  FlexDirection,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\n\nimport {\n  Box,\n  ButtonLink,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../component-library';\nimport Preloader from '../../../ui/icon/preloader/preloader-icon.component';\n\nconst SnapExternalPill = ({ value, url }) => {\n  return (\n    <ButtonLink\n      href={url}\n      target=\"_blank\"\n      className=\"snap-external-pill\"\n      ellipsis\n    >\n      <Box\n        className=\"snap-external-pill__wrapper\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        alignItems={AlignItems.center}\n        backgroundColor={BackgroundColor.backgroundAlternative}\n        borderRadius={BorderRadius.pill}\n        paddingTop={1}\n        paddingBottom={1}\n        paddingLeft={2}\n        paddingRight={2}\n      >\n        {value ? (\n          <Text\n            color={Color.textAlternative}\n            variant={TextVariant.bodyMd}\n            ellipsis\n          >\n            {value}\n          </Text>\n        ) : (\n          <Preloader size={18} />\n        )}\n        <Icon\n          name={IconName.Export}\n          color={Color.textAlternative}\n          size={IconSize.Sm}\n          marginLeft={1}\n        />\n      </Box>\n    </ButtonLink>\n  );\n};\n\nSnapExternalPill.propTypes = {\n  /**\n   * The value to display\n   */\n  value: PropTypes.string,\n  /**\n   * The url to the snap package\n   */\n  url: PropTypes.string,\n};\n\nexport default SnapExternalPill;\n","export { default } from './update-snap-permission-list';\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { Box, ButtonLink } from '../../../component-library';\nimport {\n  getMultipleTargetsSubjectMetadata,\n  getSnapMetadata,\n  getSnapsMetadata,\n} from '../../../../selectors';\nimport SnapPermissionAdapter from '../snap-permission-adapter';\nimport {\n  Display,\n  JustifyContent,\n} from '../../../../helpers/constants/design-system';\nimport {\n  MinPermissionAbstractionDisplayCount,\n  PermissionWeightThreshold,\n} from '../../../../../shared/constants/permissions';\nimport {\n  getFilteredSnapPermissions,\n  getSnapName,\n} from '../../../../helpers/utils/util';\nimport { getWeightedPermissions } from '../../../../helpers/utils/permission';\n\nexport default function UpdateSnapPermissionList({\n  approvedPermissions,\n  revokedPermissions,\n  newPermissions,\n  approvedConnections,\n  revokedConnections,\n  newConnections,\n  targetSubjectMetadata,\n  showAllPermissions,\n}) {\n  const t = useI18nContext();\n  const snapId = targetSubjectMetadata.origin;\n\n  const { name: snapName } = useSelector((state) =>\n    getSnapMetadata(state, targetSubjectMetadata.origin),\n  );\n\n  const targetSubjectsMetadata = useSelector((state) =>\n    getMultipleTargetsSubjectMetadata(state, {\n      ...newConnections,\n      ...approvedConnections,\n      ...revokedConnections,\n    }),\n  );\n\n  const snapsMetadata = useSelector(getSnapsMetadata);\n\n  const approvedCombinedPermissions = {\n    ...approvedPermissions,\n    connection_permission: approvedConnections ?? {},\n  };\n\n  const revokedCombinedPermissions = {\n    ...revokedPermissions,\n    connection_permission: revokedConnections ?? {},\n  };\n\n  const newCombinedPermissions = {\n    ...newPermissions,\n    connection_permission: newConnections ?? {},\n  };\n\n  const newWeightedPermissions = getWeightedPermissions({\n    t,\n    permissions: newCombinedPermissions,\n    subjectName: snapName,\n    getSubjectName: getSnapName(snapsMetadata),\n  });\n\n  const revokedWeightedPermissions = getWeightedPermissions({\n    t,\n    permissions: revokedCombinedPermissions,\n    subjectName: snapName,\n    getSubjectName: getSnapName(snapsMetadata),\n  });\n\n  const approvedWeightedPermissions = getWeightedPermissions({\n    t,\n    permissions: approvedCombinedPermissions,\n    subjectName: snapName,\n    getSubjectName: getSnapName(snapsMetadata),\n  });\n\n  const [showAll, setShowAll] = useState(\n    Object.keys(approvedWeightedPermissions).length < 1,\n  );\n\n  // Because approved permissions are sometimes hidden following the abstraction logic,\n  // it is needed sometimes to fill the gap in permission display, in certain edge cases\n  // when there is not enough new and revoked permissions to be shown.\n  const totalNewAndRevokedPermissions =\n    newWeightedPermissions.length + revokedWeightedPermissions.length;\n  const minApprovedPermissionsToShow = Math.max(\n    MinPermissionAbstractionDisplayCount - totalNewAndRevokedPermissions,\n    0,\n  );\n\n  const filteredApprovedWeightedPermissions = getFilteredSnapPermissions(\n    approvedWeightedPermissions,\n    PermissionWeightThreshold.snapUpdateApprovedPermissions,\n    minApprovedPermissionsToShow,\n  );\n\n  const onShowAllPermissions = () => {\n    showAllPermissions();\n    setShowAll(true);\n  };\n\n  return (\n    <Box>\n      <SnapPermissionAdapter\n        permissions={newWeightedPermissions}\n        snapId={snapId}\n        snapName={snapName}\n        targetSubjectsMetadata={targetSubjectsMetadata}\n      />\n      <SnapPermissionAdapter\n        permissions={revokedWeightedPermissions}\n        snapId={snapId}\n        snapName={snapName}\n        targetSubjectsMetadata={targetSubjectsMetadata}\n        revoked\n      />\n      <SnapPermissionAdapter\n        permissions={\n          showAll\n            ? approvedWeightedPermissions\n            : filteredApprovedWeightedPermissions\n        }\n        snapId={snapId}\n        snapName={snapName}\n        targetSubjectsMetadata={targetSubjectsMetadata}\n        approved\n      />\n      {showAll ? null : (\n        <Box\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n          paddingTop={2}\n          paddingBottom={2}\n        >\n          <ButtonLink onClick={() => onShowAllPermissions()}>\n            {t('seeAllPermissions')}\n          </ButtonLink>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nUpdateSnapPermissionList.propTypes = {\n  /**\n   * Permissions that have already been approved\n   */\n  approvedPermissions: PropTypes.object.isRequired,\n  /**\n   * Previously used permissions that are now revoked\n   */\n  revokedPermissions: PropTypes.object.isRequired,\n  /**\n   * New permissions that are being requested\n   */\n  newPermissions: PropTypes.object.isRequired,\n  /**\n   * Pre-approved connections that have already been approved\n   */\n  approvedConnections: PropTypes.object.isRequired,\n  /**\n   * Previously used pre-approved connections that are now revoked\n   */\n  revokedConnections: PropTypes.object.isRequired,\n  /**\n   * New pre-approved connections that are being requested\n   */\n  newConnections: PropTypes.object.isRequired,\n  /**\n   * Callback function used to handle revealing all permissions action in UI.\n   */\n  showAllPermissions: PropTypes.func.isRequired,\n  targetSubjectMetadata: PropTypes.object.isRequired,\n};\n","export { default } from './srp-input';\n","export const parseSecretRecoveryPhrase = (seedPhrase) =>\n  (seedPhrase || '').trim().toLowerCase().match(/\\w+/gu)?.join(' ') || '';\n","import { isValidMnemonic } from '@ethersproject/hdnode';\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport TextField from '../../ui/text-field';\nimport { clearClipboard } from '../../../helpers/utils/util';\nimport { BannerAlert, Text } from '../../component-library';\nimport Dropdown from '../../ui/dropdown';\nimport ShowHideToggle from '../../ui/show-hide-toggle';\nimport {\n  TextAlign,\n  TextVariant,\n  Severity,\n} from '../../../helpers/constants/design-system';\nimport { parseSecretRecoveryPhrase } from './parse-secret-recovery-phrase';\n\nconst defaultNumberOfWords = 12;\n\nconst hasUpperCase = (draftSrp) => {\n  return draftSrp !== draftSrp.toLowerCase();\n};\n\nexport default function SrpInput({ onChange, srpText }) {\n  const [srpError, setSrpError] = useState('');\n  const [pasteFailed, setPasteFailed] = useState(false);\n  const [draftSrp, setDraftSrp] = useState(\n    new Array(defaultNumberOfWords).fill(''),\n  );\n  const [showSrp, setShowSrp] = useState(\n    new Array(defaultNumberOfWords).fill(false),\n  );\n  const [numberOfWords, setNumberOfWords] = useState(defaultNumberOfWords);\n\n  const t = useI18nContext();\n\n  const onSrpChange = useCallback(\n    (newDraftSrp) => {\n      let newSrpError = '';\n      const joinedDraftSrp = newDraftSrp.join(' ').trim();\n\n      if (newDraftSrp.some((word) => word !== '')) {\n        if (newDraftSrp.some((word) => word === '')) {\n          newSrpError = t('seedPhraseReq');\n        } else if (hasUpperCase(joinedDraftSrp)) {\n          newSrpError = t('invalidSeedPhraseCaseSensitive');\n        } else if (!isValidMnemonic(joinedDraftSrp)) {\n          newSrpError = t('invalidSeedPhrase');\n        }\n      }\n\n      setDraftSrp(newDraftSrp);\n      setSrpError(newSrpError);\n      onChange(newSrpError ? '' : joinedDraftSrp);\n    },\n    [setDraftSrp, setSrpError, t, onChange],\n  );\n\n  const toggleShowSrp = useCallback((index) => {\n    setShowSrp((currentShowSrp) => {\n      const newShowSrp = currentShowSrp.slice();\n      if (newShowSrp[index]) {\n        newShowSrp[index] = false;\n      } else {\n        newShowSrp.fill(false);\n        newShowSrp[index] = true;\n      }\n      return newShowSrp;\n    });\n  }, []);\n\n  const onSrpWordChange = useCallback(\n    (index, newWord) => {\n      if (pasteFailed) {\n        setPasteFailed(false);\n      }\n      const newSrp = draftSrp.slice();\n      newSrp[index] = newWord.trim();\n      onSrpChange(newSrp);\n    },\n    [draftSrp, onSrpChange, pasteFailed],\n  );\n\n  const onSrpPaste = useCallback(\n    (rawSrp) => {\n      const parsedSrp = parseSecretRecoveryPhrase(rawSrp);\n      let newDraftSrp = parsedSrp.split(' ');\n\n      if (newDraftSrp.length > 24) {\n        setPasteFailed(true);\n        return;\n      } else if (pasteFailed) {\n        setPasteFailed(false);\n      }\n\n      let newNumberOfWords = numberOfWords;\n      if (newDraftSrp.length !== numberOfWords) {\n        if (newDraftSrp.length < 12) {\n          newNumberOfWords = 12;\n        } else if (newDraftSrp.length % 3 === 0) {\n          newNumberOfWords = newDraftSrp.length;\n        } else {\n          newNumberOfWords =\n            newDraftSrp.length + (3 - (newDraftSrp.length % 3));\n        }\n        setNumberOfWords(newNumberOfWords);\n      }\n\n      if (newDraftSrp.length < newNumberOfWords) {\n        newDraftSrp = newDraftSrp.concat(\n          new Array(newNumberOfWords - newDraftSrp.length).fill(''),\n        );\n      }\n      setShowSrp(new Array(newNumberOfWords).fill(false));\n      onSrpChange(newDraftSrp);\n      clearClipboard();\n    },\n    [numberOfWords, onSrpChange, pasteFailed, setPasteFailed],\n  );\n\n  const numberOfWordsOptions = [];\n  for (let i = 12; i <= 24; i += 3) {\n    numberOfWordsOptions.push({\n      name: t('srpInputNumberOfWords', [`${i}`]),\n      value: `${i}`,\n    });\n  }\n\n  return (\n    <div className=\"import-srp__container\">\n      <label className=\"import-srp__srp-label\">\n        <Text align={TextAlign.Left} variant={TextVariant.headingSm} as=\"h4\">\n          {srpText}\n        </Text>\n      </label>\n      <BannerAlert\n        className=\"import-srp__paste-tip\"\n        severity={Severity.Info}\n        description={t('srpPasteTip')}\n        descriptionProps={{ className: 'import-srp__banner-alert-text' }}\n      />\n      <Dropdown\n        className=\"import-srp__number-of-words-dropdown\"\n        onChange={(newSelectedOption) => {\n          const newNumberOfWords = parseInt(newSelectedOption, 10);\n          if (Number.isNaN(newNumberOfWords)) {\n            throw new Error('Unable to parse option as integer');\n          }\n\n          let newDraftSrp = draftSrp.slice(0, newNumberOfWords);\n          if (newDraftSrp.length < newNumberOfWords) {\n            newDraftSrp = newDraftSrp.concat(\n              new Array(newNumberOfWords - newDraftSrp.length).fill(''),\n            );\n          }\n          setNumberOfWords(newNumberOfWords);\n          setShowSrp(new Array(newNumberOfWords).fill(false));\n          onSrpChange(newDraftSrp);\n        }}\n        options={numberOfWordsOptions}\n        selectedOption={`${numberOfWords}`}\n      />\n      <div className=\"import-srp__srp\">\n        {[...Array(numberOfWords).keys()].map((index) => {\n          const id = `import-srp__srp-word-${index}`;\n          return (\n            <div key={index} className=\"import-srp__srp-word\">\n              <label htmlFor={id} className=\"import-srp__srp-word-label\">\n                <Text>{`${index + 1}.`}</Text>\n              </label>\n              <TextField\n                id={id}\n                data-testid={id}\n                type={showSrp[index] ? 'text' : 'password'}\n                onChange={(e) => {\n                  e.preventDefault();\n                  onSrpWordChange(index, e.target.value);\n                }}\n                value={draftSrp[index]}\n                autoComplete=\"off\"\n                onPaste={(event) => {\n                  const newSrp = event.clipboardData.getData('text');\n\n                  if (newSrp.trim().match(/\\s/u)) {\n                    event.preventDefault();\n                    onSrpPaste(newSrp);\n                  }\n                }}\n              />\n              <ShowHideToggle\n                id={`${id}-checkbox`}\n                ariaLabelHidden={t('srpWordHidden')}\n                ariaLabelShown={t('srpWordShown')}\n                shown={showSrp[index]}\n                data-testid={`${id}-checkbox`}\n                onChange={() => toggleShowSrp(index)}\n                title={t('srpToggleShow')}\n              />\n            </div>\n          );\n        })}\n      </div>\n      {srpError ? (\n        <BannerAlert\n          className=\"import-srp__srp-error\"\n          severity={Severity.Danger}\n          description={srpError}\n          descriptionProps={{ className: 'import-srp__banner-alert-text' }}\n        />\n      ) : null}\n      {pasteFailed ? (\n        <BannerAlert\n          className=\"import-srp__srp-too-many-words-error\"\n          severity={Severity.Danger}\n          actionButtonLabel={t('dismiss')}\n          actionButtonOnClick={() => setPasteFailed(false)}\n          description={t('srpPasteFailedTooManyWords')}\n          descriptionProps={{ className: 'import-srp__banner-alert-text' }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nSrpInput.propTypes = {\n  /**\n   * Event handler for SRP changes.\n   *\n   * This is only called with a valid, well-formated (i.e. exactly one space\n   * between each word) SRP or with an empty string.\n   *\n   * This is called each time the draft SRP is updated. If the draft SRP is\n   * valid, this is called with a well-formatted version of that draft SRP.\n   * Otherwise, this is called with an empty string.\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Text to show on the left of the Dropdown component. Wrapped in Typography component.\n   */\n  srpText: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport {\n  AlignItems,\n  BlockSize,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { Button, Box, Text } from '../../../component-library';\nimport { IQuizInformationProps } from '../types';\n\nexport default function QuizContent({\n  icon,\n  image,\n  content,\n  moreContent,\n  buttons,\n}: IQuizInformationProps) {\n  const t = useI18nContext();\n\n  return (\n    <>\n      {icon && (\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Row}\n          alignItems={AlignItems.center}\n          justifyContent={JustifyContent.center}\n        >\n          {icon}\n        </Box>\n      )}\n      {image && (\n        <Box display={Display.Flex} margin=\"auto\" textAlign={TextAlign.Center}>\n          <img\n            src={image}\n            alt={t('srpSecurityQuizImgAlt')}\n            width=\"300\"\n            style={{ maxWidth: '100%' }} // should probably be in a className instead\n          />\n        </Box>\n      )}\n      <Text\n        variant={TextVariant.bodyLgMedium}\n        textAlign={TextAlign.Center}\n        color={icon?.props.color} // Inherit this text color from the icon's color\n      >\n        {content}\n      </Text>\n      {moreContent && (\n        <Text variant={TextVariant.bodyMd} textAlign={TextAlign.Center}>\n          {moreContent}\n        </Text>\n      )}\n      {buttons.map((btn, idx) => (\n        <Button\n          key={idx}\n          size={btn.size}\n          onClick={btn.onClick}\n          // TODO: Replace `any` with type\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          variant={btn.variant as any}\n          width={BlockSize.Full}\n          data-testid={btn['data-testid']}\n        >\n          {btn.label}\n        </Button>\n      ))}\n    </>\n  );\n}\n","export { default } from './QuizContent';\n","/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports, import/no-commonjs */\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventKeyType,\n  MetaMetricsEventName,\n} from '../../../../../shared/constants/metametrics';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\nimport {\n  BlockSize,\n  Display,\n  FlexDirection,\n  IconColor,\n  TextAlign,\n} from '../../../../helpers/constants/design-system';\nimport { REVEAL_SEED_ROUTE } from '../../../../helpers/constants/routes';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  ButtonSize,\n  ButtonVariant,\n  Icon,\n  IconName,\n  IconSize,\n  Modal,\n  ModalOverlay,\n} from '../../../component-library';\nimport { ModalContent } from '../../../component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../component-library/modal-header/deprecated';\nimport QuizContent from '../QuizContent';\nimport { JSXDict, QuizStage } from '../types';\n\nconst wrongAnswerIcon = (\n  <Icon\n    size={IconSize.Xl}\n    name={IconName.Warning}\n    color={IconColor.errorDefault}\n    textAlign={TextAlign.Center}\n    width={BlockSize.OneTwelfth}\n  />\n);\n\nconst rightAnswerIcon = (\n  <Icon\n    size={IconSize.Xl}\n    name={IconName.Confirmation}\n    color={IconColor.successDefault}\n    textAlign={TextAlign.Center}\n    width={BlockSize.OneTwelfth}\n  />\n);\n\nconst openSupportArticle = (): void => {\n  global.platform.openTab({\n    url: ZENDESK_URLS.PASSWORD_AND_SRP_ARTICLE,\n  });\n};\n\n// TODO: Replace `any` with type\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function SRPQuiz(props: any) {\n  const [stage, setStage] = useState<QuizStage>(QuizStage.introduction);\n\n  const trackEvent = useContext(MetaMetricsContext);\n  const history = useHistory();\n  const t = useI18nContext();\n\n  // This should not be a state variable, because it's derivable from the state variable `stage`\n  // (Making it a state variable forces the component to render twice)\n  let title = '';\n\n  // Using a dictionary of JSX elements eliminates the need for a switch statement\n  const stages: JSXDict = {};\n\n  stages[QuizStage.introduction] = () => {\n    title = t('srpSecurityQuizTitle');\n    return (\n      <QuizContent\n        image={'images/reveal-srp.png'}\n        content={t('srpSecurityQuizIntroduction')}\n        buttons={[\n          {\n            label: t('srpSecurityQuizGetStarted'),\n            onClick: () => setStage(QuizStage.questionOne),\n            variant: ButtonVariant.Primary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-get-started',\n          },\n          {\n            label: t('learnMoreUpperCase'),\n            onClick: openSupportArticle,\n            variant: ButtonVariant.Link,\n            'data-testid': 'srp-quiz-learn-more',\n          },\n        ]}\n      />\n    );\n  };\n\n  stages[QuizStage.questionOne] = () => {\n    title = `1 ${t('ofTextNofM')} 2`;\n    return (\n      <QuizContent\n        content={t('srpSecurityQuizQuestionOneQuestion')}\n        buttons={[\n          {\n            label: t('srpSecurityQuizQuestionOneWrongAnswer'),\n            onClick: () => setStage(QuizStage.wrongAnswerQuestionOne),\n            variant: ButtonVariant.Secondary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-wrong-answer',\n          },\n          {\n            label: t('srpSecurityQuizQuestionOneRightAnswer'),\n            onClick: () => setStage(QuizStage.rightAnswerQuestionOne),\n            variant: ButtonVariant.Secondary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-right-answer',\n          },\n          {\n            label: t('learnMoreUpperCase'),\n            onClick: openSupportArticle,\n            variant: ButtonVariant.Link,\n          },\n        ]}\n      />\n    );\n  };\n\n  stages[QuizStage.rightAnswerQuestionOne] = () => {\n    title = `1 ${t('ofTextNofM')} 2`;\n    return (\n      <QuizContent\n        icon={rightAnswerIcon}\n        content={t('srpSecurityQuizQuestionOneRightAnswerTitle')}\n        moreContent={t('srpSecurityQuizQuestionOneRightAnswerDescription')}\n        buttons={[\n          {\n            label: t('continue'),\n            onClick: () => setStage(QuizStage.questionTwo),\n            variant: ButtonVariant.Primary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-continue',\n          },\n          {\n            label: t('learnMoreUpperCase'),\n            onClick: openSupportArticle,\n            variant: ButtonVariant.Link,\n          },\n        ]}\n      />\n    );\n  };\n\n  stages[QuizStage.wrongAnswerQuestionOne] = () => {\n    title = `1 ${t('ofTextNofM')} 2`;\n    return (\n      <QuizContent\n        icon={wrongAnswerIcon}\n        content={t('srpSecurityQuizQuestionOneWrongAnswerTitle')}\n        moreContent={t('srpSecurityQuizQuestionOneWrongAnswerDescription')}\n        buttons={[\n          {\n            label: t('tryAgain'),\n            onClick: () => setStage(QuizStage.questionOne),\n            variant: ButtonVariant.Primary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-try-again',\n          },\n          {\n            label: t('learnMoreUpperCase'),\n            onClick: openSupportArticle,\n            variant: ButtonVariant.Link,\n          },\n        ]}\n      />\n    );\n  };\n\n  stages[QuizStage.questionTwo] = () => {\n    title = `2 ${t('ofTextNofM')} 2`;\n    return (\n      <QuizContent\n        content={t('srpSecurityQuizQuestionTwoQuestion')}\n        buttons={[\n          {\n            label: t('srpSecurityQuizQuestionTwoRightAnswer'),\n            onClick: () => setStage(QuizStage.rightAnswerQuestionTwo),\n            variant: ButtonVariant.Secondary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-right-answer',\n          },\n          {\n            label: t('srpSecurityQuizQuestionTwoWrongAnswer'),\n            onClick: () => setStage(QuizStage.wrongAnswerQuestionTwo),\n            variant: ButtonVariant.Secondary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-wrong-answer',\n          },\n          {\n            label: t('learnMoreUpperCase'),\n            onClick: openSupportArticle,\n            variant: ButtonVariant.Link,\n          },\n        ]}\n      />\n    );\n  };\n\n  stages[QuizStage.rightAnswerQuestionTwo] = () => {\n    title = `2 ${t('ofTextNofM')} 2`;\n    return (\n      <QuizContent\n        icon={rightAnswerIcon}\n        content={t('srpSecurityQuizQuestionTwoRightAnswerTitle')}\n        moreContent={t('srpSecurityQuizQuestionTwoRightAnswerDescription')}\n        buttons={[\n          {\n            label: t('continue'),\n            onClick: () => history.push(REVEAL_SEED_ROUTE),\n            variant: ButtonVariant.Primary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-continue',\n          },\n          {\n            label: t('learnMoreUpperCase'),\n            onClick: openSupportArticle,\n            variant: ButtonVariant.Link,\n          },\n        ]}\n      />\n    );\n  };\n\n  stages[QuizStage.wrongAnswerQuestionTwo] = () => {\n    title = `2 ${t('ofTextNofM')} 2`;\n    return (\n      <QuizContent\n        icon={wrongAnswerIcon}\n        content={t('srpSecurityQuizQuestionTwoWrongAnswerTitle')}\n        moreContent={t('srpSecurityQuizQuestionTwoWrongAnswerDescription')}\n        buttons={[\n          {\n            label: t('tryAgain'),\n            onClick: () => setStage(QuizStage.questionTwo),\n            variant: ButtonVariant.Primary,\n            size: ButtonSize.Lg,\n            'data-testid': 'srp-quiz-try-again',\n          },\n          {\n            label: t('learnMoreUpperCase'),\n            onClick: openSupportArticle,\n            variant: ButtonVariant.Link,\n          },\n        ]}\n      />\n    );\n  };\n\n  // trackEvent shortcut specific to the SRP quiz\n  const trackEventSrp = useCallback((location) => {\n    trackEvent(\n      {\n        category: MetaMetricsEventCategory.Keys,\n        event: MetaMetricsEventName.KeyExportSelected,\n        properties: {\n          key_type: MetaMetricsEventKeyType.Srp,\n          location,\n        },\n      },\n      {},\n    );\n  }, []);\n\n  useEffect(() => {\n    trackEventSrp(`stage_${stage}`); // Call MetaMetrics based on the current stage\n  }, [stage]); // Only call this when the stage changes\n\n  const quizContent = stages[stage](); // Pick the content using the right stage from the JSXDict\n\n  return (\n    <Modal isOpen={props.isOpen} onClose={props.onClose}>\n      <ModalOverlay />\n      <ModalContent\n        modalDialogProps={{\n          display: Display.Flex,\n          flexDirection: FlexDirection.Column,\n          gap: 4,\n        }}\n      >\n        <ModalHeader onClose={props.onClose} data-testid=\"srp-quiz-header\">\n          {title}\n        </ModalHeader>\n        <span data-testid={`srp_stage_${stage}`} />\n        {quizContent}\n      </ModalContent>\n    </Modal>\n  );\n}\n","export { default } from './SRPQuiz';\n","import { ButtonSize, ButtonVariant } from '../../component-library';\n\nexport enum QuizStage {\n  introduction = 'introduction',\n  questionOne = 'question_one',\n  wrongAnswerQuestionOne = 'wrong_answer_question_one',\n  rightAnswerQuestionOne = 'right_answer_question_one',\n  questionTwo = 'question_two',\n  wrongAnswerQuestionTwo = 'wrong_answer_question_two',\n  rightAnswerQuestionTwo = 'right_answer_question_two',\n}\n\nexport type IQuizInformationProps = {\n  /**\n   * The icon to display in the modal should use <Icon /> component\n   */\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  icon?: any;\n  /**\n   * The image to display in the modal\n   */\n  image?: string;\n  /**\n   * The text content to go inside of the <Text /> component\n   */\n  content: string;\n  /**\n   * More text content to go inside of the <Text /> component\n   */\n  moreContent?: string;\n  /**\n   * Array of <Button /> component props\n   */\n  buttons: {\n    onClick: () => void;\n    label: string;\n    variant: ButtonVariant;\n    size?: ButtonSize;\n    'data-testid'?: string;\n  }[];\n};\n\nexport type JSXDict = { [key: string]: () => JSX.Element };\n","export {\n  ThreeStepProgressBar,\n  TwoStepProgressBar,\n  threeStepStages,\n  twoStepStages,\n} from './step-progress-bar';\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { capitalize } from 'lodash';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport Box from '../../ui/box';\nimport { BLOCK_SIZES } from '../../../helpers/constants/design-system';\n\nexport const threeStepStages = {\n  PASSWORD_CREATE: 1,\n  RECOVERY_PHRASE_VIDEO: 2,\n  RECOVERY_PHRASE_REVIEW: 3,\n  RECOVERY_PHRASE_CONFIRM: 4,\n  ONBOARDING_COMPLETE: 5,\n};\n\nexport const twoStepStages = {\n  RECOVERY_PHRASE_CONFIRM: 1,\n  PASSWORD_CREATE: 2,\n};\n\nexport function ThreeStepProgressBar({ stage, ...boxProps }) {\n  const t = useI18nContext();\n  return (\n    <Box {...boxProps}>\n      <ul className=\"progressbar\">\n        <li\n          className={classnames({\n            active: stage >= 1,\n            complete: stage > 1,\n          })}\n        >\n          {capitalize(t('createPassword'))}\n        </li>\n        <li\n          className={classnames({\n            active: stage >= 2,\n            complete: stage > 3,\n          })}\n        >\n          {capitalize(t('secureWallet'))}\n        </li>\n        <li\n          className={classnames({\n            active: stage >= 4,\n            complete: stage > 5,\n          })}\n        >\n          {capitalize(t('confirmRecoveryPhrase'))}\n        </li>\n      </ul>\n    </Box>\n  );\n}\n\nexport function TwoStepProgressBar({ stage, ...boxProps }) {\n  const t = useI18nContext();\n  return (\n    <Box width={BLOCK_SIZES.FULL} {...boxProps}>\n      <ul className=\"progressbar two-steps\">\n        <li\n          className={classnames({\n            active: stage >= 1,\n            complete: stage > 1,\n          })}\n        >\n          {capitalize(t('confirmRecoveryPhrase'))}\n        </li>\n        <li\n          className={classnames('two-steps', {\n            active: stage >= 2,\n            complete: stage > 2,\n          })}\n        >\n          {capitalize(t('createPassword'))}\n        </li>\n      </ul>\n    </Box>\n  );\n}\n\nThreeStepProgressBar.propTypes = {\n  stage: PropTypes.number,\n  ...Box.propTypes,\n};\n\nTwoStepProgressBar.propTypes = {\n  stage: PropTypes.number,\n  ...Box.propTypes,\n};\n","export { default } from './tab-bar';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Icon, IconName, IconSize, Box } from '../../component-library';\nimport {\n  BorderRadius,\n  Color,\n  Display,\n} from '../../../helpers/constants/design-system';\n\nconst TabBar = (props) => {\n  const { tabs = [], onSelect, isActive } = props;\n\n  return (\n    <div className=\"tab-bar\">\n      {tabs.map(({ key, content, icon }) => (\n        <Box\n          as=\"button\"\n          key={key}\n          paddingTop={5}\n          paddingBottom={5}\n          paddingLeft={4}\n          paddingRight={4}\n          className={classnames('tab-bar__tab pointer', {\n            'tab-bar__tab--active': isActive(key, content),\n          })}\n          onClick={() => onSelect(key)}\n        >\n          {isActive(key, content) && (\n            <Box\n              className=\"tab-bar__tab__selected-indicator\"\n              borderRadius={BorderRadius.pill}\n              backgroundColor={Color.primaryDefault}\n              display={[Display.None, Display.Block]}\n            />\n          )}\n          <div className=\"tab-bar__tab__content\">\n            <div className=\"tab-bar__tab__content__icon\">{icon}</div>\n            <div className=\"tab-bar__tab__content__title\">{content}</div>\n          </div>\n          <Icon\n            name={IconName.ArrowRight}\n            size={IconSize.Sm}\n            className=\"tab-bar__tab__caret\"\n          />\n        </Box>\n      ))}\n    </div>\n  );\n};\n\nTabBar.propTypes = {\n  isActive: PropTypes.func.isRequired,\n  tabs: PropTypes.array,\n  onSelect: PropTypes.func,\n};\n\nexport default TabBar;\n","export { default } from './terms-of-use-popup';\n"]}