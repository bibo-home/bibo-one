{"version":3,"sources":["node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/etherscan-link/dist/account-link.js","node_modules/@metamask/etherscan-link/dist/explorer-link.js","node_modules/@metamask/etherscan-link/dist/helpers.js","node_modules/@metamask/etherscan-link/dist/index.js","node_modules/@metamask/etherscan-link/dist/prefix-for-chain.js","node_modules/@metamask/etherscan-link/dist/prefix-for-network.js","node_modules/@metamask/etherscan-link/dist/token-tracker-link.js","node_modules/@metamask/ethjs-contract/lib/contract.js","node_modules/@metamask/ethjs-contract/lib/has-tx-object.js","app/scripts/controllers/bridge/types.ts","node_modules/@metamask/ethjs-contract/lib/index.js","node_modules/@metamask/ethjs-filter/lib/index.js","node_modules/@metamask/ethjs-format/lib/index.js","node_modules/@metamask/ethjs-query/lib/index.js","node_modules/@metamask/ethjs-rpc/lib/index.js","node_modules/@metamask/ethjs-unit/lib/index.js","node_modules/@metamask/ethjs-util/lib/index.js","node_modules/@metamask/gas-fee-controller/dist/chunk-2MFVV2BX.js","node_modules/@metamask/gas-fee-controller/dist/chunk-S5H5NUEH.js","node_modules/@metamask/gas-fee-controller/dist/index.js","node_modules/@metamask/jazzicon/colors.js","node_modules/@metamask/jazzicon/index.js","node_modules/@metamask/jazzicon/paper.js","node_modules/@metamask/json-rpc-engine/dist/JsonRpcEngine.cjs","node_modules/@metamask/json-rpc-engine/dist/createAsyncMiddleware.cjs","node_modules/@metamask/json-rpc-engine/dist/createScaffoldMiddleware.cjs","node_modules/@metamask/json-rpc-engine/dist/getUniqueId.cjs","node_modules/@metamask/json-rpc-engine/dist/idRemapMiddleware.cjs","node_modules/@metamask/json-rpc-engine/dist/index.cjs","node_modules/@metamask/json-rpc-engine/dist/mergeMiddleware.cjs","node_modules/@metamask/key-tree/dist/BIP44CoinTypeNode.cjs","node_modules/@metamask/key-tree/dist/BIP44Node.cjs","node_modules/@metamask/key-tree/dist/SLIP10Node.cjs","node_modules/@metamask/key-tree/dist/constants.cjs","node_modules/@metamask/key-tree/dist/curves/curve.cjs","node_modules/@metamask/key-tree/dist/curves/ed25519.cjs","node_modules/@metamask/key-tree/dist/curves/ed25519Bip32.cjs","node_modules/@metamask/key-tree/dist/curves/index.cjs","node_modules/@metamask/key-tree/dist/curves/secp256k1.cjs","node_modules/@metamask/key-tree/dist/derivation.cjs","node_modules/@metamask/key-tree/dist/derivers/bip32.cjs","node_modules/@metamask/key-tree/dist/derivers/bip39.cjs","node_modules/@metamask/key-tree/dist/derivers/cip3.cjs","node_modules/@metamask/key-tree/dist/derivers/index.cjs","node_modules/@metamask/key-tree/dist/derivers/shared.cjs","node_modules/@metamask/key-tree/dist/derivers/slip10.cjs","node_modules/@metamask/key-tree/dist/extended-keys.cjs","node_modules/@metamask/key-tree/dist/index.cjs","node_modules/@metamask/key-tree/dist/utils.cjs","node_modules/@metamask/keyring-api/dist/JsonRpcRequest.js","node_modules/@metamask/keyring-api/dist/KeyringClient.js","node_modules/@metamask/keyring-api/dist/KeyringSnapRpcClient.js","node_modules/@metamask/keyring-api/dist/api/account.js","node_modules/@metamask/keyring-api/dist/api/balance.js","node_modules/@metamask/keyring-api/dist/api/caip.js","node_modules/@metamask/keyring-api/dist/api/export.js","node_modules/@metamask/keyring-api/dist/api/index.js","node_modules/@metamask/keyring-api/dist/api/keyring.js","node_modules/@metamask/keyring-api/dist/api/request.js","node_modules/@metamask/keyring-api/dist/api/response.js","node_modules/@metamask/keyring-api/dist/btc/index.js","node_modules/@metamask/keyring-api/dist/btc/types.js","node_modules/@metamask/keyring-api/dist/contexts.js","node_modules/@metamask/keyring-api/dist/eth/erc4337/index.js","node_modules/@metamask/keyring-api/dist/eth/erc4337/types.js","node_modules/@metamask/keyring-api/dist/eth/index.js","node_modules/@metamask/keyring-api/dist/eth/types.js","node_modules/@metamask/keyring-api/dist/eth/utils.js","node_modules/@metamask/keyring-api/dist/events.js","node_modules/@metamask/keyring-api/dist/index.js","node_modules/@metamask/keyring-api/dist/internal/api.js","node_modules/@metamask/keyring-api/dist/internal/eth/EthKeyring.js","node_modules/@metamask/keyring-api/dist/internal/eth/index.js","node_modules/@metamask/keyring-api/dist/internal/events.js","node_modules/@metamask/keyring-api/dist/internal/index.js","node_modules/@metamask/keyring-api/dist/internal/rpc.js","node_modules/@metamask/keyring-api/dist/internal/types.js","node_modules/@metamask/keyring-api/dist/rpc-handler.js","node_modules/@metamask/keyring-api/dist/snap-utils.js","node_modules/@metamask/keyring-api/dist/superstruct.js","node_modules/@metamask/keyring-api/dist/utils/index.js","node_modules/@metamask/keyring-api/dist/utils/types.js","node_modules/@metamask/keyring-api/dist/utils/typing.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/index.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/md5-browser.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/native-browser.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/nil.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/parse.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/regex.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/rng-browser.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/sha1-browser.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/stringify.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/v1.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/v3.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/v35.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/v4.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/v5.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/validate.js","node_modules/@metamask/keyring-api/node_modules/uuid/dist/version.js","node_modules/@metamask/keyring-controller/dist/KeyringController.cjs","node_modules/@metamask/keyring-controller/dist/constants.cjs","node_modules/@metamask/keyring-controller/dist/index.cjs","node_modules/@metamask/metamask-eth-abis/dist/abis/abiERC1155.js","node_modules/@metamask/metamask-eth-abis/dist/abis/abiERC20.js","node_modules/@metamask/metamask-eth-abis/dist/abis/abiERC721.js","node_modules/@metamask/metamask-eth-abis/dist/abis/fiatTokenV2.js","node_modules/@metamask/metamask-eth-abis/dist/index.js","node_modules/@metamask/name-controller/dist/chunk-JHYBLEC5.js","node_modules/@metamask/name-controller/dist/chunk-PL2KMW2Y.js","node_modules/@metamask/name-controller/dist/chunk-PL7IXD33.js","node_modules/@metamask/name-controller/dist/chunk-QBR7BSWB.js","node_modules/@metamask/name-controller/dist/chunk-RYIUDJOI.js","node_modules/@metamask/name-controller/dist/chunk-ST2ADXPO.js","node_modules/@metamask/name-controller/dist/chunk-W64QIPGB.js","node_modules/@metamask/name-controller/dist/chunk-X55IV67M.js","node_modules/@metamask/name-controller/dist/chunk-XQXO5QPM.js","node_modules/@metamask/name-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/name-controller/dist/index.js","node_modules/@metamask/name-controller/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js","node_modules/@metamask/name-controller/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js","node_modules/@metamask/name-controller/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js","node_modules/@metamask/name-controller/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js","node_modules/@metamask/name-controller/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/name-controller/node_modules/@metamask/base-controller/dist/index.js","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/name-controller/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/network-controller/dist/chunk-E4V6XEBR.js","node_modules/@metamask/network-controller/dist/chunk-KHZTS7TF.js","node_modules/@metamask/network-controller/dist/chunk-LLMZDA4Q.js","node_modules/@metamask/network-controller/dist/chunk-VGYLDDJB.js","node_modules/@metamask/network-controller/dist/chunk-YOHMQPGM.js","node_modules/@metamask/network-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/network-controller/dist/chunk-ZKNI7MD3.js","node_modules/@metamask/network-controller/dist/index.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/block-cache.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/block-ref-rewrite.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/block-ref.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/block-tracker-inspector.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/fetch.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/index.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/inflight-cache.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/logging-utils.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/providerAsMiddleware.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/retryOnEmpty.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/utils/cache.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/utils/error.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/utils/normalize.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/utils/timeout.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/dist/wallet.js","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/network-controller/node_modules/@metamask/eth-json-rpc-middleware/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/network-controller/node_modules/reselect/dist/cjs/reselect.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/NotificationServicesController.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/__fixtures__/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/__fixtures__/mock-feature-announcements.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/__fixtures__/mock-notification-trigger.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/__fixtures__/mock-notification-user-storage.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/__fixtures__/mock-raw-notifications.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/__fixtures__/mockResponses.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/constants/constants.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/constants/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/constants/notification-schema.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/processors/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/processors/process-feature-announcement.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/processors/process-notifications.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/processors/process-onchain-notifications.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/services/feature-announcements.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/services/onchain-notifications.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/feature-announcement/feature-announcement.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/feature-announcement/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/feature-announcement/type-feature-announcement.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/feature-announcement/type-links.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/notification/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/notification/notification.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/on-chain-notification/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/on-chain-notification/on-chain-notification.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/user-storage/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/types/user-storage/user-storage.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/ui/constants.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/ui/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesController/utils/utils.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/NotificationServicesPushController.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/__fixtures__/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/__fixtures__/mockResponse.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/services/endpoints.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/services/push/push-web.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/services/services.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/types/firebase.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/types/index.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/utils/get-notification-data.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/utils/get-notification-message.cjs","node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/utils/index.cjs","node_modules/@metamask/notification-services-controller/dist/index.cjs","node_modules/@metamask/notification-services-controller/dist/shared/to-raw-notification.cjs","node_modules/@metamask/number-to-bn/src/index.js","node_modules/@metamask/object-multiplex/dist/ObjectMultiplex.js","node_modules/@metamask/object-multiplex/dist/Substream.js","node_modules/@metamask/object-multiplex/dist/index.js","node_modules/@metamask/permission-controller/dist/chunk-3X6WO7UG.js","node_modules/@metamask/permission-controller/dist/chunk-C73QV75D.js","node_modules/@metamask/permission-controller/dist/chunk-DV74ZDGD.js","node_modules/@metamask/permission-controller/dist/chunk-GHOOCGN3.js","node_modules/@metamask/permission-controller/dist/chunk-HRDKMOYS.js","node_modules/@metamask/permission-controller/dist/chunk-I3DJ23QH.js","node_modules/@metamask/permission-controller/dist/chunk-PTE4672I.js","node_modules/@metamask/permission-controller/dist/chunk-RKDXFKNN.js","node_modules/@metamask/permission-controller/dist/chunk-VM4LI55W.js","node_modules/@metamask/permission-controller/dist/chunk-XM622CMP.js","node_modules/@metamask/permission-controller/dist/chunk-Z2XKIXLS.js","node_modules/@metamask/permission-controller/dist/chunk-ZH4MLSXX.js","node_modules/@metamask/permission-controller/dist/index.js","node_modules/@metamask/permission-controller/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js","node_modules/@metamask/permission-controller/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js","node_modules/@metamask/permission-controller/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js","node_modules/@metamask/permission-controller/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js","node_modules/@metamask/permission-controller/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/permission-controller/node_modules/@metamask/base-controller/dist/index.js","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/permission-controller/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/permission-controller/node_modules/nanoid/index.browser.cjs","node_modules/@metamask/permission-controller/node_modules/nanoid/url-alphabet/index.cjs","node_modules/@metamask/polling-controller/dist/chunk-I2PH5XQP.js","node_modules/@metamask/polling-controller/dist/chunk-LBXAXAXH.js","node_modules/@metamask/polling-controller/dist/chunk-MUDX6BUY.js","node_modules/@metamask/polling-controller/dist/index.js","node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js","node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js","node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js","node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js","node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/index.js","node_modules/@metamask/post-message-stream/dist/BasePostMessageStream.js","node_modules/@metamask/post-message-stream/dist/WebWorker/WebWorkerParentPostMessageStream.js","node_modules/@metamask/post-message-stream/dist/WebWorker/WebWorkerPostMessageStream.js","node_modules/@metamask/post-message-stream/dist/browser.js","node_modules/@metamask/post-message-stream/dist/runtime/BrowserRuntimePostMessageStream.js","node_modules/@metamask/post-message-stream/dist/utils.js","node_modules/@metamask/post-message-stream/dist/window/WindowPostMessageStream.js","node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/AuthenticationController.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/__fixtures__/index.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/__fixtures__/mockResponses.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/auth-snap-requests.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/index.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/services.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/UserStorageController.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/__fixtures__/index.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/__fixtures__/mockResponses.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/__fixtures__/mockStorage.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/accounts/constants.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/accounts/user-storage.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/encryption/cache.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/encryption/encryption.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/encryption/index.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/encryption/utils.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/index.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/network-syncing/controller-integration.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/network-syncing/services.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/network-syncing/sync-mutations.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/schema.cjs","node_modules/@metamask/profile-sync-controller/dist/controllers/user-storage/services.cjs","node_modules/@metamask/profile-sync-controller/dist/index.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/authentication-jwt-bearer/flow-siwe.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/authentication-jwt-bearer/flow-srp.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/authentication-jwt-bearer/services.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/authentication-jwt-bearer/types.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/authentication.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/encryption.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/env.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/errors.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/index.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/user-storage.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/utils/eip-6963-metamask-provider.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/utils/messaging-signing-snap-requests.cjs","node_modules/@metamask/profile-sync-controller/dist/sdk/utils/validate-login-response.cjs","app/_locales/en/messages.json","node_modules/@metamask/rpc-errors/dist/chunk-FBHPY3A4.js","node_modules/@metamask/rpc-errors/dist/chunk-HJCBU6QB.js","node_modules/@metamask/rpc-errors/dist/chunk-PV5NRPSS.js","node_modules/@metamask/rpc-errors/dist/chunk-XOYARAPP.js","node_modules/@metamask/rpc-errors/dist/index.js","node_modules/@metamask/safe-event-emitter/dist/cjs/index.js","node_modules/@metamask/scure-bip39/dist/index.js","node_modules/@metamask/scure-bip39/dist/wordlists/english.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/_assert.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/_sha2.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/_u64.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/crypto.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/hmac.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/pbkdf2.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/sha256.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/sha512.js","node_modules/@metamask/scure-bip39/node_modules/@noble/hashes/utils.js","node_modules/@metamask/smart-transactions-controller/dist/types.js","app/scripts/controllers/permissions/background-api.js","node_modules/@metamask/snaps-rpc-methods/dist/endowments/caveats/generic.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/caveats/index.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/caveats/requestTime.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/cronjob.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/enum.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/ethereum-provider.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/home-page.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/index.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/keyring.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/lifecycle-hooks.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/name-lookup.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/network-access.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/rpc.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/signature-insight.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/transaction-insight.cjs","node_modules/@metamask/snaps-rpc-methods/dist/endowments/web-assembly.cjs","node_modules/@metamask/snaps-rpc-methods/dist/index.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permissions.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/createInterface.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/getAllSnaps.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/getClientStatus.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/getFile.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/getInterfaceState.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/getSnaps.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/handlers.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/index.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/invokeKeyring.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/invokeSnapSugar.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/middleware.cjs","app/scripts/controllers/permissions/caveat-mutators.js","node_modules/@metamask/snaps-rpc-methods/dist/permitted/requestSnaps.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/resolveInterface.cjs","node_modules/@metamask/snaps-rpc-methods/dist/permitted/updateInterface.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/caveats/index.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/caveats/permittedCoinTypes.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/caveats/permittedDerivationPaths.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/caveats/snapIds.cjs","node_modules/@metamask/snaps-rpc-methods/dist/restricted/dialog.cjs"],"names":["Object","defineProperty","exports","value","getJsonRpcIdValidator","assertIsJsonRpcError","isJsonRpcError","assertIsJsonRpcFailure","isJsonRpcFailure","assertIsJsonRpcSuccess","isJsonRpcSuccess","assertIsJsonRpcResponse","isJsonRpcResponse","assertIsPendingJsonRpcResponse","isPendingJsonRpcResponse","JsonRpcResponseStruct","JsonRpcFailureStruct","JsonRpcSuccessStruct","PendingJsonRpcResponseStruct","assertIsJsonRpcRequest","isJsonRpcRequest","assertIsJsonRpcNotification","isJsonRpcNotification","JsonRpcNotificationStruct","JsonRpcRequestStruct","JsonRpcParamsStruct","JsonRpcErrorStruct","JsonRpcIdStruct","JsonRpcVersionStruct","jsonrpc2","getJsonSize","getSafeJson","isValidJson","JsonStruct","UnsafeJsonStruct","exactOptional","object","superstruct_1","require","assert_1","misc_1","hasOptional","path","branch","field","length","hasProperty","struct","Struct","type","validator","context","refiner","schema","create","union","literal","boolean","define","is","number","Number","isFinite","string","array","lazy","record","coerce","any","assertStruct","JSON","parse","stringify","propKey","propValue","undefined","json","TextEncoder","encode","byteLength","nullable","code","integer","message","data","stack","id","jsonrpc","method","params","ErrorWrapper","result","optional","unknown","error","response","options","permitEmptyString","permitFractions","permitNull","Boolean","isInteger","__importDefault","this","mod","__esModule","default","createModuleLogger","createProjectLogger","globalLogger","projectName","extend","projectLogger","moduleName","calculateNumberSize","calculateStringSize","isASCII","isPlainObject","ESCAPE_CHARACTERS_REGEXP","JsonSize","getKnownPropertyNames","isObject","isNullOrUndefined","isNonEmptyArray","Array","isArray","character","charCodeAt","objectToCheck","name","hasOwnProperty","call","getOwnPropertyNames","proto","getPrototypeOf","_","split","reduce","total","match","toString","hexToBigInt","hexToNumber","bigIntToHex","numberToHex","hex_1","assert","isSafeInteger","add0x","assertIsHexString","numberValue","parseInt","BigInt","createDeferredPromise","suppressUnhandledRejection","resolve","reject","promise","Promise","innerResolve","innerReject","catch","_error","timeSince","inMilliseconds","Duration","assertIsNonNegativeInteger","isNonNegativeInteger","Error","count","duration","timestamp","Date","now","satisfiesVersionRange","gtRange","gtVersion","assertIsSemVerRange","assertIsSemVerVersion","isValidSemVerRange","isValidSemVerVersion","VersionRangeStruct","VersionStruct","semver_1","refine","valid","validRange","version","versionRange","range","version1","version2","gt","gtr","satisfies","includePrerelease","getAccountLink","createCustomAccountLink","createAccountLinkForChain","createAccountLink","helpers_1","prefix_for_chain_1","prefix_for_network_1","address","networkId","prefix","chainId","customNetworkUrl","addPathToUrl","rpcPrefs","blockExplorerUrl","getBlockExplorerLink","createExplorerLinkForChain","createExplorerLink","createCustomExplorerLink","hash","network","transaction","metamaskNetworkId","linkType","suffixType","username","password","protocol","host","pathname","search","URL","newPath","endsWith","account_link_1","explorer_link_1","token_tracker_link_1","module","createTokenTrackerLink","createCustomTokenTrackerLink","createTokenTrackerLinkForChain","getTokenTrackerLink","tokenAddress","holderAddress","_interopRequireDefault","_regenerator","_asyncToGenerator2","abi","EthFilter","getKeys","keccak256","keccak_256","promiseToCallback","hasTransactionObject","opts","arguments","self","createContractFunction","methodObject","methodCallback","methodArgs","slice","pop","_x","_performCall","apply","performCall","mark","_callee","_ref","queryMethod","providedTxObject","methodTxObject","queryResult","decodedMethodResult","wrap","_context","prev","next","assign","defaultTxObject","to","encodeMethod","constant","query","sent","decodeMethod","abrupt","t0","stop","contractABI","bytecode","contractBytecode","contractDefaultTxObject","filters","filter","forEach","filterInputTypes","inputs","filterTopcis","join","argsObject","defaultFilterObject","topics","filterOpts","decoder","logData","decodeEvent","Filter","createContractEvent","txObjectProperties","args","lastArg","keys","some","includes","BridgeFeatureFlagsKey","BridgeBackgroundAction","Contract","output","newMethodCallback","newMethodArgs","constructorMethod","getConstructorFromABI","assembleTxObject","constructorBytecode","encodeParams","substring","sendTransaction","constructFilter","filterName","filterId","delay","watchers","interval","setInterval","getFilterChanges","changeError","changeResult","decodedChangeResults","decodingError","log","logIndex","decodingErrorMesage","watcher","callback","prototype","at","watch","watchCallbackInput","Math","random","stopWatching","uninstall","cb","clearInterval","prom","uninstallFilter","uninstallError","uninstallResilt","then","res","err","filterInputs","push","setupError","BlockFilter","PendingTransactionFilter","numberToBN","_require","arrayContainsArray","getBinarySize","padToEven","stripHexPrefix","formatQuantity","pad","indexOf","numPadding","isNeg","formatQuantityOrTag","tags","formatData","outputByteLength","test","formatObject","formatter","objects","EthSyncing","Transaction","__required","valueKey","format","formatArray","lengthRequirement","valueIndex","formatObjectKey","formatInputs","methods","formatOutputs","outputs","EthRPC","Eth","provider","optionsObject","debug","logger","console","jsonSpace","rpc","setProvider","generateFnFor","rpcMethodName","protoMethodName","replace","_this","toLowerCase","formattingError","sendAsync","methodOutputs","enumerable","cprovider","max","idCounter","floor","currentProvider","payload","parsedPayload","responseObject","payloadErrorMessage","String","payloadError","BN","zero","negative1","unitMap","noether","wei","kwei","Kwei","babbage","femtoether","mwei","Mwei","lovelace","picoether","gwei","Gwei","shannon","nanoether","nano","szabo","microether","micro","finney","milliether","milli","ether","kether","grand","mether","gether","tether","getValueOfUnit","unitInput","unit","unitValue","numberToString","arg","toTwos","dividedToIntegerBy","toPrecision","fromWei","weiInput","optionsInput","negative","lt","base","baseLength","mul","fraction","whole","div","commify","toWei","etherInput","comps","add","isHexPrefixed","a","intToHex","i","superset","subset","intToBuffer","hex","Buffer","from","str","fromAscii","stringValue","n","fromUtf8","toAscii","l","substr","fromCharCode","toUtf8","key","allowEmpty","isHexString","obj","__accessCheck","member","msg","has","TypeError","_controllerutils","_bnjs","_bnjs2","makeClientIdHeader","clientId","normalizeGWEIDecimalNumbers","numberAsWEIHex","gweiDecToWEIBN","weiHexToGweiDec","__privateGet","getter","get","__privateAdd","WeakSet","set","__privateSet","setter","__privateMethod","fetchGasEstimates","async","url","estimates","handleFetch","headers","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","estimatedBaseFee","historicalBaseFeeRange","baseFeeTrend","latestPriorityFeeRange","historicalPriorityFeeRange","priorityFeeTrend","networkCongestion","fetchLegacyGasPriceEstimates","referrer","referrerPolicy","mode","SafeGasPrice","ProposeGasPrice","FastGasPrice","fetchEthGasPriceEstimate","ethQuery","gasPrice","calculateTimeEstimate","maxPriorityFeePerGas","maxFeePerGas","gasFeeEstimates","maxPriorityFeePerGasInWEI","maxFeePerGasInWEI","estimatedBaseFeeInWEI","effectiveMaxPriorityFee","min","sub","lowMaxPriorityFeeInWEI","mediumMaxPriorityFeeInWEI","highMaxPriorityFeeInWEI","lowerTimeBound","upperTimeBound","gte","minWaitTimeEstimate","maxWaitTimeEstimate","eq","_getProvider","_onNetworkControllerDidChange","onNetworkControllerDidChange_fn","_chunk2MFVV2BXjs","_ethquery","_ethquery2","_pollingcontroller","_uuid","LEGACY_GAS_PRICES_API_URL","GAS_ESTIMATE_TYPES","FEE_MARKET","LEGACY","ETH_GASPRICE","NONE","metadata","gasFeeEstimatesByChainId","persist","anonymous","estimatedGasFeeTimeBounds","gasEstimateType","nonRPCGasFeeApisDisabled","defaultState","GasFeeController","StaticIntervalPollingController","constructor","messenger","state","getCurrentNetworkEIP1559Compatibility","getCurrentAccountEIP1559Compatibility","getChainId","getCurrentNetworkLegacyGasAPICompatibility","getProvider","onNetworkDidChange","legacyAPIEndpoint","EIP1559APIEndpoint","super","intervalDelay","setIntervalLength","pollTokens","Set","currentChainId","networkControllerState","selectedNetworkClientId","messagingSystem","configuration","subscribe","resetPolling","size","tokens","stopPolling","getGasFeeEstimatesAndStartPolling","token","fetchGasFeeEstimates","_fetchGasFeeEstimateData","pollToken","_pollToken","v1","_poll","shouldUpdateState","networkClientId","isEIP1559Compatible","isLegacyGasAPICompatible","decimalChainId","networkClient","convertHexToDecimal","getEIP1559Compatibility","e","gasFeeCalculations","determineGasFeeCalculations","fetchGasEstimatesUrl","fetchLegacyGasPriceEstimatesUrl","toHex","update","disconnectPoller","delete","intervalId","clear","resetState","destroy","safelyExecute","_executePoll","currentNetworkIsEIP1559Compatible","currentAccountIsEIP1559Compatible","getTimeEstimate","enableNonRPCGasFeeApis","disableNonRPCGasFeeApis","WeakMap","newChainId","GasFeeController_default","request","fetchGasEstimates2","calculateTimeEstimate2","getEstimatesUsingFeeMarketEndpoint","fetchLegacyGasPriceEstimates2","getEstimatesUsingLegacyEndpoint","fetchEthGasPriceEstimate2","getEstimatesUsingProvider","getEstimatesUsingFallbacks","_chunkS5H5NUEHjs","generator","MersenneTwister","paperGen","Color","colors","svgns","genShape","remainingColors","diameter","svg","center","shape","document","createElementNS","setAttributeNS","firstRot","angle","PI","velocity","transform","cos","sin","toFixed","fill","genColor","appendChild","idx","splice","seed","amount","wobble","map","color","rotate","hexString","hueShift","container","shapeCount","createElement","style","borderRadius","overflow","padding","margin","width","height","display","background","_JsonRpcEngine_instances","_a","_JsonRpcEngine_isDestroyed","_JsonRpcEngine_middleware","_JsonRpcEngine_notificationHandler","_JsonRpcEngine_assertIsNotDestroyed","_JsonRpcEngine_handleBatch","_JsonRpcEngine_handle","_JsonRpcEngine_processRequest","_JsonRpcEngine_runAllMiddleware","_JsonRpcEngine_runMiddleware","_JsonRpcEngine_runReturnHandlers","_JsonRpcEngine_checkForCompletion","__classPrivateFieldSet","receiver","kind","f","__classPrivateFieldGet","JsonRpcEngine","rpc_errors_1","safe_event_emitter_1","utils_1","notificationHandler","middleware","handle","req","_promiseHandle","asMiddleware","end","middlewareError","isComplete","returnHandlers","handlerCallback","jsonify","requests","JsonRpcError","errorCodes","invalidRequest","responses","all","bind","callerReq","serializeError","middlewares","reverse","parsedError","returnHandler","internal","handlers","handler","createAsyncMiddleware","asyncMiddleware","resolveNextPromise","nextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","createScaffoldMiddleware","getUniqueId","MAX","createIdRemapMiddleware","getUniqueId_1","_end","originalId","newId","done","mergeMiddleware","createAsyncMiddleware_1","createScaffoldMiddleware_1","idRemapMiddleware_1","JsonRpcEngine_1","mergeMiddleware_1","middlewareStack","engine","_BIP44CoinTypeNode_node","getBIP44AddressKeyDeriver","deriveBIP44AddressKey","BIP44CoinTypeNode","BIP_44_COIN_TYPE_DEPTH","BIP44Node_1","constants_1","SLIP10Node_1","utils_2","node","coin_type","getBIP44CoinTypePathString","freeze","fromJSON","validateCoinType","validateCoinTypeNodeDepth","depth","BIP44Node","fromExtendedKey","index","parentFingerprint","chainCode","hexStringToBytes","privateKey","nullableHexStringToBytes","publicKey","fromDerivationPath","derivationPath","pathPart","coinType","fromNode","privateKeyBytes","publicKeyBytes","chainCodeBytes","compressedPublicKey","compressedPublicKeyBytes","masterFingerprint","fingerprint","curve","extendedKey","account","change","address_index","derive","getBIP44CoinTypeToAddressPathTuple","toJSON","getNode","bip44Node","coinTypeNode","BIP_32_HARDENED_OFFSET","parentKeyOrNode","childNode","deriveChildNode","accountAndChangeIndices","actualNode","accountNode","getHardenedBIP32NodeToken","changeNode","getBIP32NodeToken","bip44AddressKeyDeriver","isHardened","slip10Node","getUnhardenedBIP32NodeToken","getBIP44ChangePathString","_BIP44Node_node","validateBIP44Depth","extended_keys_1","decodeExtendedKey","PRIVATE_KEY_VERSION","SLIP10Node","validateBIP44DerivationPath","MIN_BIP_44_DEPTH","encodeExtendedKey","PUBLIC_KEY_VERSION","neuter","MAX_BIP_44_DEPTH","validateBIP32Depth","startingDepth","nodeToken","currentDepth","BIP44PurposeNodeToken","BIP_32_PATH_REGEX","Uint8Array","BIP_39_PATH_REGEX","_SLIP10Node_constructorGuard","validateRootIndex","validateMasterParentFingerprint","validateParentFingerprint","curves_1","derivation_1","bip32_1","constructorGuard","getBytes","BYTES_KEY_LENGTH","validateCurve","validateBIP32Index","curveObject","getCurveByName","getBytesUnsafe","privateKeyLength","isValidPrivateKey","getPublicKey","publicKeyLength","deriveKeyFromPath","bytesToHex","compressPublicKey","publicKeyToEthAddress","getFingerprint","compressedPublicKeyLength","isValidInteger","newDepth","Symbol","CIP_3_PATH_REGEX","SLIP_10_PATH_REGEX","UNPREFIXED_BIP_32_PATH_REGEX","UNPREFIXED_PATH_REGEX","MAX_BIP_32_INDEX","MAX_UNHARDENED_BIP_32_INDEX","__createBinding","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","__setModuleDefault","v","__importStar","curves","ed25519","ed25519Bip32","secp256k1","curveName","modular_1","masterNodeGenerationSpec","decompressPublicKey","publicAdd","deriveUnhardenedKeys","secret","ed25519_1","CURVE","stringToBytes","_privateKey","_compressed","concatBytes","_publicKey","_tweak","multiplyWithBase","bytesToNumberLE","getByte","byte","bytes","scalar","ExtendedPoint","BASE","multiply","toRawBytes","tweak","fromHex","remove0x","__exportStar","p","secp256k1_1","utils","compressed","isValidBytesKey","newPoint","ProjectivePoint","fromPrivateKey","assertValidity","validatePathSegment","BIP44CoinTypeNode_1","derivers_1","hasKey","startsWithBip39","getMalformedError","pathWithoutKey","firstSegmentType","every","segment","startsWith","pathNode","derivedNode","pathType","derivers","hasDeriver","deriver","deriveChildKey","bip39","privateKeyToEthAddress","sha3_1","shared_1","handleError","childIndex","secretExtension","deriveSecretExtension","newEntropy","generateEntropy","extension","entropy","publicExtension","derivePublicExtension","parentPublicKey","entropyToCip3MasterNode","createBip39KeyFromSeed","bip39MnemonicToMultipath","scure_bip39_1","english_1","hmac_1","pbkdf2_1","sha512_1","hmac","sha512","rootNode","pbkdf2","c","dkLen","mnemonic","trim","mnemonicToSeed","wordlist","mnemonicToEntropy","derivePublicKey","deriveChainCode","derivePrivateKey","getKeyExtension","mod2Pow256","trunc28Mul8","padEnd32Bytes","bigIntToBytes","bytesToBigInt","toReversed","reversed","bytesInHex","bigInt","hexadecimal","hexToBytes","truncLeftMul8","left","right","added","tag","numberToUint32","Z_TAGS","parentNode","zl","subarray","zr","parentKl","parentKr","childKl","childKr","CHAIN_CODE_TAGS","PUBLIC_KEY_TAGS","validateNode","getValidatedPath","actualChildIndex","bip32","cip3","slip10","bip39_1","privateAdd","derivePublicChildKey","deriveNode","childPrivateKey","childChainCode","keyMaterial","generateKey","derivePrivateChildKey","childPublicKey","generatePublicKey","tweakBytes","padStart","validatePath","indexPart","decodeBase58check","view","createDataView","getUint32","getUint8","keyView","setUint32","setUint8","encodeBase58check","mnemonicPhraseToBytes","isValidBIP32PathSegment","isValidBIP32Index","ripemd160_1","sha256_1","base_1","hardened","addressIndex","expectedLength","validateBytes","coinTypePath","indices","groups","bip32Token","base58Check","base58check","sha256","decode","ripemd160","mnemonicPhrase","word","Uint16Array","buffer","littleEndian","superstruct_2","_KeyringClient_instances","_KeyringClient_sender","_KeyringClient_send","KeyringClient","uuid_1","api_1","rpc_1","sender","listAccounts","strictMask","KeyringRpcMethod","ListAccounts","ListAccountsResponseStruct","getAccount","GetAccount","GetAccountResponseStruct","getAccountBalances","assets","GetAccountBalances","GetAccountBalancesResponseStruct","createAccount","CreateAccount","CreateAccountResponseStruct","filterAccountChains","chains","FilterAccountChains","FilterAccountChainsResponseStruct","updateAccount","UpdateAccount","UpdateAccountResponseStruct","deleteAccount","DeleteAccount","DeleteAccountResponseStruct","exportAccount","ExportAccount","ExportAccountResponseStruct","listRequests","ListRequests","ListRequestsResponseStruct","getRequest","GetRequest","GetRequestResponseStruct","submitRequest","SubmitRequest","SubmitRequestResponseStruct","approveRequest","ApproveRequest","ApproveRequestResponseStruct","rejectRequest","RejectRequest","RejectRequestResponseStruct","partial","send","v4","_SnapRpcSender_origin","_SnapRpcSender_provider","KeyringSnapRpcClient","SnapRpcSender","KeyringClient_1","origin","snapId","KeyringAccountStruct","BtcAccountType","EthAccountType","UuidStruct","enums","Eoa","Erc4337","P2wpkh","BalanceStruct","StringNumberStruct","isCaipAssetId","isCaipAssetType","CaipAssetIdStruct","CaipAssetTypeStruct","definePattern","KeyringAccountDataStruct","KeyringRequestStruct","scope","KeyringResponseStruct","pending","redirect","BtcP2wpkhAccountStruct","BtcMethod","BtcP2wpkhAddressStruct","bech32_1","bech32","SendMany","EthUserOperationPatchStruct","EthBaseUserOperationStruct","EthBaseTransactionStruct","EthUserOperationStruct","types_1","EthAddressStruct","nonce","EthUint256Struct","initCode","EthBytesStruct","callData","callGasLimit","verificationGasLimit","preVerificationGas","paymasterAndData","signature","gasLimits","dummyPaymasterAndData","dummySignature","bundlerUrl","UrlStruct","EthErc4337AccountStruct","EthEoaAccountStruct","EthMethod","PersonalSign","Sign","SignTransaction","SignTypedDataV1","SignTypedDataV3","SignTypedDataV4","PrepareUserOperation","PatchUserOperation","SignUserOperation","isEvmAccountType","KeyringEvent","RejectRequestRequestStruct","ApproveRequestRequestStruct","SubmitRequestRequestStruct","GetRequestRequestStruct","ListRequestsRequestStruct","ExportAccountRequestStruct","DeleteAccountRequestStruct","UpdateAccountRequestStruct","FilterAccountChainsStruct","GetAccountBalancesRequestStruct","CreateAccountRequestStruct","GetAccountRequestStruct","ListAccountsRequestStruct","CommonHeader","RequestRejectedEventStruct","RequestApprovedEventStruct","AccountDeletedEventStruct","AccountUpdatedEventStruct","AccountCreatedEventStruct","events_1","AccountCreated","accountNameSuggestion","displayConfirmation","AccountUpdated","AccountDeleted","RequestApproved","RequestRejected","isKeyringRpcMethod","values","InternalAccountStruct","InternalAccountStructs","InternalBtcP2wpkhAccountStruct","InternalEthErc4337AccountStruct","InternalEthEoaAccountStruct","InternalAccountMetadataStruct","types_2","asInternalAccountStruct","accountStruct","nameLastUpdatedAt","snap","enabled","lastSelected","importTime","keyring","handleKeyringRequest","MethodNotSupportedError","JsonRpcRequest_1","dispatchRequest","emitSnapKeyringEvent","event","ctx","pattern","expectTrue","_nil","_parse","_stringify","_v","_v2","_v3","_v4","_validate","_version","getOutputLength","inputLength8","safeAdd","x","y","lsw","md5cmn","q","b","s","t","num","cnt","md5ff","d","md5gg","md5hh","md5ii","_default","unescape","encodeURIComponent","input","length32","hexTab","charAt","md5ToHexEncodedArray","len","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","randomUUID","crypto","uuid","arr","getRandomValues","rnds8","z","ROTL","K","H","N","ceil","M","j","pow","W","T","unsafeStringify","byteToHex","offset","_rng","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","clockseq","seedBytes","rng","msecs","nsecs","dt","tl","tmh","_md","DNS","hashfunc","generateUUID","namespace","_namespace","_native","rnds","_sha","_regex","_KeyringController_instances","_KeyringController_controllerOperationMutex","_KeyringController_vaultOperationMutex","_KeyringController_keyringBuilders","_KeyringController_keyrings","_KeyringController_unsupportedKeyrings","_KeyringController_password","_KeyringController_encryptor","_KeyringController_cacheEncryptionKey","_KeyringController_qrKeyringStateListener","_KeyringController_registerMessageHandlers","_KeyringController_getKeyringBuilderForType","_KeyringController_addQRKeyring","_KeyringController_subscribeToQRKeyringEvents","_KeyringController_unsubscribeFromQRKeyringsEvents","_KeyringController_createNewVaultWithKeyring","_KeyringController_getUpdatedKeyrings","_KeyringController_getSerializedKeyrings","_KeyringController_restoreSerializedKeyrings","_KeyringController_unlockKeyrings","_KeyringController_updateVault","_KeyringController_getAccountsFromKeyrings","_KeyringController_createKeyringWithFirstAccount","_KeyringController_newKeyring","_KeyringController_clearKeyrings","_KeyringController_restoreKeyring","_KeyringController_destroyKeyring","_KeyringController_removeEmptyKeyrings","_KeyringController_checkForDuplicate","_KeyringController_setUnlocked","_KeyringController_persistOrRollback","_KeyringController_withRollback","_KeyringController_assertControllerMutexIsLocked","_KeyringController_withControllerLock","_KeyringController_withVaultLock","KeyringController","getDefaultKeyringState","keyringBuilderFactory","SignTypedDataVersion","AccountImportStrategy","isCustodyKeyring","KeyringTypes","util_1","base_controller_1","encryptorUtils","eth_hd_keyring_1","eth_sig_util_1","eth_simple_keyring_1","async_mutex_1","ethereumjs_wallet_1","KeyringConstructor","builder","keyringType","defaultKeyringBuilders","assertHasUint8ArrayMnemonic","assertIsExportableKeyEncryptor","encryptor","importKey","decryptWithKey","encryptWithKey","KeyringControllerError","UnsupportedEncryptionKeyExport","assertIsValidPassword","WrongPasswordType","InvalidEmptyPassword","displayForKeyring","accounts","getAccounts","normalize","isStrictHexString","isValidHexAddress","isEthAddress","isUnlocked","keyrings","BaseController","keyringBuilders","vault","encryptionKey","encryptionSalt","Mutex","concat","cacheEncryptionKey","addNewAccount","accountCount","primaryKeyring","getKeyringsByType","oldAccounts","existingAccount","addedAccountAddress","addAccounts","verifySeedPhrase","addNewAccountForKeyring","assertIsStrictHexString","find","selectedAddress","addNewAccountWithoutUpdate","createNewVaultAndRestore","hd","numberOfAccounts","createNewVaultAndKeychain","addNewKeyring","qr","getOrAddQRKeyring","verifyPassword","VaultError","decrypt","exportSeedPhrase","getKeyringForAccount","UnsupportedExportAccount","getEncryptionPublicKey","UnsupportedGetEncryptionPublicKey","decryptMessage","messageParams","UnsupportedDecryptMessage","candidates","winners","candidate","errorInfo","NoKeyring","persistAllKeyrings","importAccountWithStrategy","strategy","importedKey","prefixed","bufferedPrivateKey","toBuffer","isValidPrivate","wallet","thirdparty","fromEtherWallet","fromV3","getPrivateKey","newKeyring","simple","removeAccount","UnsupportedRemoveAccount","publish","setLocked","signMessage","UnsupportedSignMessage","signPersonalMessage","UnsupportedSignPersonalMessage","normalizedData","signTypedMessage","V1","V3","V4","signTypedData","UnsupportedSignTypedMessage","signTransaction","UnsupportedSignTransaction","prepareUserOperation","transactions","executionContext","UnsupportedPrepareUserOperation","patchUserOperation","userOp","UnsupportedPatchUserOperation","signUserOperation","UnsupportedSignUserOperation","changePassword","MissingCredentials","submitEncryptionKey","submitPassword","seedWords","hdKeyring","hdKeyringBuilder","deserialize","testAccounts","withKeyring","selector","operation","createIfMissing","createWithData","KeyringNotFound","UnsafeDirectKeyringAccess","getQRKeyring","restoreQRKeyring","serialized","resetQRKeyringState","resetStore","getQRKeyringState","getMemStore","submitQRCryptoHDKey","cryptoHDKey","submitCryptoHDKey","submitQRCryptoAccount","cryptoAccount","submitCryptoAccount","submitQRSignature","requestId","ethSignature","submitSignature","cancelQRSignRequest","cancelSignRequest","cancelQRSynchronization","cancelSync","connectQRHardware","page","getPreviousPage","getNextPage","getFirstPage","balance","unlockQRHardwareWalletAccount","setAccountToUnlock","getAccountKeyringType","forgetQRDevice","removedAccounts","remainingAccounts","allAccounts","forgetDevice","withLock","mutex","fn","releaseLock","acquire","registerActionHandler","keyringBuilder","qrKeyring","unsubscribe","includeUnsupported","serializedKeyrings","serialize","serializedKeyring","encryptedVault","updatedState","decryptWithDetail","exportedKeyString","salt","parsedEncryptedVault","ExpiredCredentials","VaultDataError","updatedKeyrings","isVaultUpdated","NoHdKeyring","vaultJSON","newVault","encryptWithDetail","encrypt","MissingVaultData","firstAccount","NoFirstAccount","NoKeyringBuilder","init","generateRandomMnemonic","UnsupportedGenerateRandomMnemonic","validKeyrings","newAccountArray","DuplicatedAccount","callbackResult","currentSerializedKeyrings","currentPassword","isLocked","ControllerLockRequired","abiERC1155","internalType","stateMutability","indexed","abiERC20","payable","abiERC721","abiFiatTokenV2","abiERC20_1","abiERC721_1","abiERC1155_1","fiatTokenV2_1","successfulFetch","fetch","ok","status","graphQL","variables","body","assertIsError","_providers","_updateDelay","_updateProposedNameState","updateProposedNameState_fn","_updateSourceState","updateSourceState_fn","_getUpdateProposedNamesResult","getUpdateProposedNamesResult_fn","_getProviderResponse","getProviderResponse_fn","_normalizeProviderResult","normalizeProviderResult_fn","_normalizeProviderSourceResult","normalizeProviderSourceResult_fn","_normalizeValue","normalizeValue_fn","_normalizeVariation","normalizeVariation_fn","_updateEntry","updateEntry_fn","_getCurrentTimeSeconds","getCurrentTimeSeconds_fn","_validateSetNameRequest","validateSetNameRequest_fn","_validateUpdateProposedNamesRequest","validateUpdateProposedNamesRequest_fn","_validateValue","validateValue_fn","_validateType","validateType_fn","_validateName","validateName_fn","_validateSourceIds","validateSourceIds_fn","_validateSourceId","validateSourceId_fn","_validateDuplicateSourceIds","validateDuplicateSourceIds_fn","_validateVariation","validateVariation_fn","_validateOrigin","validateOrigin_fn","_getAllSourceIds","getAllSourceIds_fn","_getSourceIds","getSourceIds_fn","_removeDormantProposedNames","removeDormantProposedNames_fn","_removeExpiredEntries","removeExpiredEntries_fn","_getEntriesList","getEntriesList_fn","_chunkPL7IXD33js","_chunkZ4BLTVTBjs","_basecontroller","NameOrigin","NameOrigin2","stateMetadata","names","nameSources","NameController","providers","updateDelay","ethereumAddress","setName","sourceId","requestSourceId","requestOrigin","variation","entry","updateProposedNames","providerResponses","currentTime","proposedNames","providerResponse","results","proposedNameEntry","lastRequestTime","newNameSources","sourceLabels","getMetadata","label","acc","sourceIds","requestedSourceIds","onlyUpdateAfterDelay","variationKey","supportedSourceIds","normalizedValue","matchingSourceIds","proposedNamesEntry","providerRequest","responseError","getProposedNames","sourceResult","proposedName","normalizedVariation","isSafeDynamicKey","typeEntries","variationEntries","round","errorMessages","NameType","allSourceIds","missingSourceIds","duplicateSourceIds","flat","typeSourceIds","dormantSourceIds","dormantSourceId","entries","nameType","flatMap","FALLBACK_VARIATION","PROPOSED_NAME_EXPIRE_DURATION","NameType2","_utils","_isEnabled","_reverseLookup","_chunkQBR7BSWBjs","ID","ENSNameProvider","isEnabled","reverseLookup","_chunkJHYBLEC5js","TokenNameProvider","LensNameProvider","responseData","profiles","items","profile","_lastRequestTime","_mutex","_sendRequest","sendRequest_fn","_getUrl","getUrl_fn","_chunkXQXO5QPMjs","_asyncmutex","networkInfo","ETHERSCAN_SUPPORTED_NETWORKS","subdomain","domain","EtherscanNameProvider","time","RATE_LIMIT_UPDATE_DELAY","action","ContractName","CHAIN_IDS","MAINNET","GOERLI","BSC","BSC_TESTNET","OPTIMISM","OPTIMISM_SEPOLIA","POLYGON","POLYGON_TESTNET","AVALANCHE","AVALANCHE_TESTNET","FANTOM","FANTOM_TESTNET","SEPOLIA","LINEA_GOERLI","LINEA_SEPOLIA","LINEA_MAINNET","MOONBEAM","MOONBEAM_TESTNET","MOONRIVER","GNOSIS","DEFAULT_ETHERSCAN_DOMAIN","DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX","_chunkW64QIPGBjs","_chunkST2ADXPOjs","_chunkPL2KMW2Yjs","_chunkRYIUDJOIjs","_chunkX55IV67Mjs","BaseControllerV1","config","defaultConfig","disabled","internalConfig","internalState","internalListeners","initialState","initialConfig","initialize","configure","overwrite","fullUpdate","notify","listener","findIndex","BaseControllerV1_default","_actions","_events","_initialEventPayloadGetters","_eventPayloadCache","_chunkUJFCPTF3js","ControllerMessenger","Map","actionType","unregisterActionHandler","clearActions","registerInitialEventPayload","eventType","getPayload","subscribers","previousValue","newValue","setTimeout","initialValue","clearEventSubscriptions","clearSubscriptions","getRestricted","allowedActions","allowedEvents","RestrictedControllerMessenger","controllerMessenger","_internalState","_immer","enablePatches","deriveStateFromMetadata","metadataProperty","derivedState","propertyMetadata","stateProperty","nextState","patches","inversePatches","produceWithPatches","applyPatches","getAnonymizedState","getPersistentState","_controllerMessenger","_controllerName","_allowedActions","_allowedEvents","_isAllowedEvent","isAllowedEvent_fn","_isAllowedAction","isAllowedAction_fn","_isInCurrentNamespace","isInCurrentNamespace_fn","_chunkFTHCJ6HYjs","_chunkIURK6TKDjs","_chunkG42723LGjs","assertExhaustive","AssertionError","errors_1","getError","errorPrefix","getErrorMessage","getErrorMessageWithoutTrailingPeriod","_object","base64","paddingRequired","characterSet","letters","re","raw","RegExp","valueToBytes","base64ToBytes","numberToBytes","signedBigIntToBytes","bytesToBase64","bytesToString","bytesToNumber","bytesToSignedBigInt","assertIsBytes","isBytes","HEX_MINIMUM_NUMBER_CHARACTER","HEX_MAXIMUM_NUMBER_CHARACTER","HEX_CHARACTER_OFFSET","getPrecomputedHexValues","lookupTable","getPrecomputedHexValuesBuilder","strippedValue","c1","c2","n1","n2","asIntN","bigint","MAX_SAFE_INTEGER","TextDecoder","mask","bigIntFits","asUintN","normalizedValues","byteOffset","DataView","toCaipChainId","parseCaipAccountId","parseCaipChainId","isCaipAccountAddress","isCaipAccountId","isCaipReference","isCaipNamespace","isCaipChainId","KnownCaipNamespace","CaipAccountAddressStruct","CaipAccountIdStruct","CaipReferenceStruct","CaipNamespaceStruct","CaipChainIdStruct","CAIP_ACCOUNT_ADDRESS_REGEX","CAIP_ACCOUNT_ID_REGEX","CAIP_REFERENCE_REGEX","CAIP_NAMESPACE_REGEX","CAIP_CHAIN_ID_REGEX","caipChainId","exec","reference","caipAccountId","accountAddress","chain","ChecksumStruct","base64_1","createHex","createBytes","createBigInt","createNumber","bytes_1","NumberLikeStruct","StrictHexStruct","NumberCoercer","BigIntCoercer","BytesCoercer","instance","HexCoercer","StructError","_FrozenMap_map","_FrozenSet_set","FrozenSet","FrozenMap","iterator","callbackfn","thisArg","_map","value2","_set","wrapError","isErrorWithStack","isErrorWithMessage","isErrorWithCode","pony_cause_1","originalError","cause","ErrorWithCause","isValidChecksumAddress","getChecksumAddress","HexChecksumAddressStruct","HexAddressStruct","HexStruct","unPrefixed","unPrefixedHash","nibbleIndex","hashCharacter","toUpperCase","possibleChecksum","possibleAddress","_ethblocktracker","_ethjsonrpcinfura","_ethjsonrpcmiddleware","_ethjsonrpcprovider","_jsonrpcengine","createNetworkAndChainIdMiddleware","eth_chainId","ChainId","createChainIdMiddleware","createNetworkClient","networkConfig","rpcApiMiddleware","createInfuraMiddleware","projectId","infuraProjectId","maxAttempts","source","createFetchMiddleware","btoa","global","rpcUrl","rpcProvider","providerFromMiddleware","blockTrackerOpts","blockTracker","PollingBlockTracker","networkMiddleware","createBlockCacheMiddleware","createInflightCacheMiddleware","createBlockRefMiddleware","createRetryOnEmptyMiddleware","createBlockTrackerInspectorMiddleware","createInfuraNetworkMiddleware","testMiddlewares","createBlockRefRewriteMiddleware","createCustomNetworkMiddleware","providerFromEngine","NetworkClientType","NetworkClientType2","_chunkE4V6XEBRjs","REFLECTIVE_PROPERTY_NAME","UNINITIALIZED_TARGET","__UNINITIALIZED__","createAutoManagedNetworkClient","networkClientConfiguration","providerProxy","Proxy","_target","propertyName","blockTrackerProxy","_chunkZKNI7MD3js","_chunkLLMZDA4Qjs","_chunkVGYLDDJBjs","_rpcerrors","_swappableobjproxy","_assert","_reselect","URI","newObj","_interopRequireWildcard","_util","debugLog","INFURA_URL_REGEX","RpcEndpointType","RpcEndpointType2","knownKeysOf","controllerName","getDefaultNetworkControllerState","networkConfigurationsByChainId","InfuraNetworkType","infuraNetworkType","rpcEndpointUrl","blockExplorerUrls","defaultRpcEndpointIndex","NetworkNickname","nativeCurrency","NetworksTicker","rpcEndpoints","mainnet","networksMetadata","getNetworkConfigurations","getAvailableNetworkClientIds","networkConfigurations","networkConfiguration","rpcEndpoint","_ethQuery","_infuraProjectId","_previouslySelectedNetworkClientId","_providerProxy","_blockTrackerProxy","_autoManagedNetworkClientRegistry","_autoManagedNetworkClient","_log","_networkConfigurationsByNetworkClientId","_refreshNetwork","refreshNetwork_fn","_getLatestBlock","getLatestBlock_fn","_determineEIP1559Compatibility","determineEIP1559Compatibility_fn","_validateNetworkFields","validateNetworkFields_fn","_determineNetworkConfigurationToPersist","determineNetworkConfigurationToPersist_fn","_registerNetworkClientsAsNeeded","registerNetworkClientsAsNeeded_fn","_unregisterNetworkClientsAsNeeded","unregisterNetworkClientsAsNeeded_fn","_updateNetworkConfigurations","updateNetworkConfigurations_fn","_ensureAutoManagedNetworkClientRegistryPopulated","ensureAutoManagedNetworkClientRegistryPopulated_fn","_createAutoManagedNetworkClientRegistry","createAutoManagedNetworkClientRegistry_fn","_applyNetworkSelection","applyNetworkSelection_fn","selectAvailableNetworkClientIds","createSelector","isValidUrl","uri","scheme","deriveInfuraNetworkNameFromRpcEndpointUrl","isInfuraNetworkType","networkName","buildNetworkConfigurationsByNetworkClientId","NetworkController","networkConfigurationEntries","networkClientIds","defaultBlockExplorerUrlIndex","inspect","validateNetworkControllerState","getNetworkClientById","setActiveNetwork","setProviderType","findNetworkClientIdByChainId","getNetworkConfigurationByChainId","getNetworkConfigurationByNetworkClientId","getSelectedNetworkClient","getProviderAndBlockTracker","getNetworkClientRegistry","autoManagedNetworkClientRegistry","infuraNetworkClient","customNetworkClient","initializeProvider","lookupNetworkByClientId","isInfura","updatedNetworkStatus","updatedIsEIP1559Compatible","responseBody","warn","INFURA_BLOCKED_KEY","EIPS","meta","lookupNetwork","networkChanged","parseError","strict","notStrictEqual","NetworkType","get1559CompatibilityWithNetworkClientId","resetConnection","addNetwork","fields","setOfRpcEndpointFields","networkFields","networkClientOperations","defaultOrCustomRpcEndpointFields","newNetworkConfiguration","networkConfigurationToPersist","updateNetwork","replacementSelectedRpcEndpointIndex","existingNetworkConfiguration","existingChainId","setOfNewRpcEndpointFields","newRpcEndpointFields","existingRpcEndpointForNoop","existingRpcEndpointForReplaceWhenChainChanged","existingRpcEndpointForReplaceWhenChainNotChanged","newRpcEndpoint","oldRpcEndpoint","networkClientOperation","existingRpcEndpoint","otherRpcEndpoint","updatedNetworkConfiguration","replacementSelectedRpcEndpointWithIndex","_index","correctedReplacementSelectedRpcEndpointIndex","rpcEndpointToSelect","updateState","removeNetwork","rollbackToPreviousProvider","loadBackup","networkClients","networkClientEntry","block","latestBlock","baseFeePerGas","errorMessagePrefix","isSafeChainId","existingNetworkConfigurationViaChainId","rpcEndpointFields","networkClientsById","otherRpcEndpointFields","equal","networkConfigurationsForOtherChains","infuraRpcEndpoints","soleInfuraRpcEndpoint","infuraNetworkName","infuraNetworkNickname","infuraChainId","addedRpcEndpoints","addedRpcEndpoint","ticker","removedRpcEndpoints","custom","infura","autoManagedNetworkClient","possibleAutoManagedNetworkClient","setTarget","createEventEmitterProxy","eventFilter","NetworkStatus","NetworkStatus2","_chunkYOHMQPGMjs","_chunkKHZTS7TFjs","json_rpc_engine_1","logging_utils_1","cache_1","emptyValues","BlockCacheStrategy","cache","getBlockCache","blockNumberHex","blockNumber","blockCache","newCache","requestedBlockNumber","identifier","cacheIdentifierForRequest","canCacheResult","canCacheRequest","canCache","blockTagForRequest","blockHash","clearBefore","oldBlockHex","oldBlockNumber","strategies","CacheStrategy","Permanent","Block","Fork","Never","skipCache","cacheTypeForMethod","requestBlockTag","blockTag","latestBlockNumber","getLatestBlock","cacheResult","_res","blockRefIndex","blockTagParamIndex","full_1","pify_1","childRequest","klona","childRes","futureBlockRefRequests","getResultBlockNumber","property","responseBlockNumber","getCurrentBlock","checkForLatestBlock","createFetchConfigFromReq","timeout_1","RETRIABLE_ERRORS","checkForHttpErrors","fetchRes","rpcErrors","methodNotFound","createTimeoutError","parseResponse","originHttpHeaderKey","parsedUrl","fetchUrl","hostname","port","normalizeUrlFromParsed","originDomain","fetchParams","Accept","encodedAuth","Authorization","_next","attempt","rawBody","text","fetchBody","errMsg","phrase","timeout","inflightRequests","cacheId","activeRequestHandlers","_resolve","deferredPromise","handledRes","createActiveRequestHandler","handleActiveRequest","ethersProviderAsMiddleware","providerAsMiddleware","providerRes","error_1","blockRef","blockRefNumber","isNaN","latestBlockNumberHex","childResponse","maxRetries","asyncFn","isExecutionRevertedError","retry","attemptResponse","circularValue","skipBlockRef","simpleParams","paramsWithoutBlockTag","invalidInput","normalizeTypedMessage","bn_js_1","messageData","parseTypedMessage","verifyingContract","octalAddress","decimalAddress","octalToHex","normalizeContractAddress","createWalletMiddleware","sigUtil","normalize_1","resemblesAddress","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","eth_accounts","eth_coinbase","eth_sendTransaction","methodNotSupported","txParams","validateAndNormalizeKeyholder","eth_signTransaction","eth_sign","extraParams","msgParams","signatureMethod","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","firstParam","secondParam","warning","eth_getEncryptionPublicKey","eth_decrypt","ciphertext","personal_ecRecover","signerAddress","recoverPersonalSignature","normalizedAccounts","_address","normalizedAddress","providerErrors","unauthorized","invalidParams","__defProp","__getOwnPropDesc","__getOwnPropNames","__hasOwnProp","src_exports","target","__export","createSelectorCreator","createStructuredSelector","lruMemoize","referenceEqualityCheck","setGlobalDevModeChecks","unstable_autotrackMemoize","autotrackMemoize","weakMapMemoize","except","__copyProps","globalDevModeChecks","inputStabilityCheck","identityFunctionCheck","devModeChecks","NOT_FOUND","assertIsFunction","func","errorMessage","ensureIsArray","item","getDependencies","createSelectorArgs","dependencies","itemTypes","assertIsArrayOfFunctions","collectInputSelectorResults","inputSelectorArgs","inputSelectorResults","$REVISION","CURRENT_TRACKER","Cell","revision","_value","_lastValue","_isEqual","tripleEq","isEqual","TrackingCache","_cachedValue","_cachedRevision","_deps","hits","currentTracker","prevTracker","getValue","cell","neverEq","createTag","createCell","dirtyTag","storage","setValue","consumeCollection","collectionTag","dirtyCollection","nextId","ObjectTreeNode","proxy","objectProxyHandler","children","childValue","Reflect","createNode","calculateResult","ownKeys","prop","ArrayTreeNode","arrayProxyHandler","updateNode","oldKeysSize","newKeysSize","anyKeysAdded","_key","newChildValue","deleteNode","createCacheKeyComparator","equalityCheck","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","equals","put","getEntries","createSingletonCache","cacheIndex","unshift","createLruCache","memoized","matchingEntry","clearCache","resetResultsCount","lastArgs","shallowEqual","Ref","WeakRef","deref","UNTERMINATED","TERMINATED","createCacheNode","fnNode","lastResult","cacheNode","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","lastResultValue","memoizeOrOptions","memoizeOptionsFromArgs","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","resetDependencyRecomputations","resetRecomputations","withTypes","inputSelectorsObject","selectorCreator","assertIsObject","inputSelectorKeys","composition","_NotificationServicesController_instances","_NotificationServicesController_isPushIntegrated","_NotificationServicesController_isPushNotificationsSetup","_NotificationServicesController_isUnlocked","_NotificationServicesController_keyringController","_NotificationServicesController_auth","_NotificationServicesController_storage","_NotificationServicesController_pushNotifications","_NotificationServicesController_accounts","_NotificationServicesController_featureAnnouncementEnv","_NotificationServicesController_registerMessageHandlers","_NotificationServicesController_clearLoadingStates","_NotificationServicesController_assertAuthEnabled","_NotificationServicesController_getValidStorageKeyAndBearerToken","_NotificationServicesController_performEnableProfileSyncing","_NotificationServicesController_assertUserStorage","_NotificationServicesController_getUserStorage","_NotificationServicesController_setIsUpdatingMetamaskNotifications","_NotificationServicesController_setIsFetchingMetamaskNotifications","_NotificationServicesController_setIsCheckingAccountsPresence","_NotificationServicesController_updateUpdatingAccountsState","_NotificationServicesController_clearUpdatingAccountsState","controller_utils_1","loglevel_1","notification_schema_1","process_notifications_1","FeatureNotifications","OnChainNotifications","Utils","subscriptionAccountsSeen","isMetamaskNotificationsFeatureSeen","isNotificationServicesEnabled","isFeatureAnnouncementsEnabled","metamaskNotificationsList","metamaskNotificationsReadList","isUpdatingMetamaskNotifications","isFetchingMetamaskNotifications","isUpdatingMetamaskNotificationsAccount","isCheckingAccountsPresence","NotificationServicesController","env","setupLockedStateSubscriptions","onUnlock","getBearerToken","isSignedIn","enableProfileSyncing","getStorageKey","getNotificationStorage","setNotificationStorage","subscribeToPushNotifications","enablePushNotifications","UUIDs","disablePushNotifications","updatePushNotifications","notification","updateMetamaskNotificationsList","initializePushNotifications","uuids","getAllUUIDs","toChecksumHexAddress","currentAccountsSet","prevAccountsSet","accountsAdded","accountsRemoved","promises","updateOnChainTriggersByAccount","deleteOnChainTriggersByAccount","isPushIntegrated","featureAnnouncements","selectIsNotificationServicesEnabled","checkAccountsPresence","userStorage","setFeatureAnnouncementsEnabled","featureAnnouncementsEnabled","createOnChainTriggers","bearerToken","storageKey","USER_STORAGE_VERSION_KEY","initializeUserStorage","triggers","traverseUserStorageTriggers","allUUIDS","enableMetamaskNotifications","disableNotificationServices","getUUIDsForAccount","deleteOnChainTriggers","upsertAddressTriggers","mapTrigger","fetchAndUpdateMetamaskNotifications","rawFeatureAnnouncementNotifications","getFeatureAnnouncementNotifications","rawOnChainNotifications","notifications","getOnChainNotifications","readIds","isNotUndefined","processAndFilter","ns","safeProcessNotification","featureAnnouncementNotifications","onChainNotifications","metamaskNotifications","sort","createdAt","getTime","markMetamaskNotificationsAsRead","onchainNotificationIds","featureAnnouncementNotificationIds","TRIGGER_TYPES","FEATURES_ANNOUNCEMENT","isRead","markNotificationsAsRead","currentReadList","newReadIds","userStorageString","uniqueAccounts","createMockFeatureAnnouncementRaw","createMockFeatureAnnouncementAPIResult","sys","skip","limit","space","updatedAt","environment","contentType","locale","title","category","shortDescription","image","longDescription","content","marks","nodeType","link","Entry","extensionLinkText","extensionLinkRoute","Asset","description","file","details","fileName","extensionLink","createMockNotificationTrigger","override","createMockFullUserStorage","createMockUserStorageWithTriggers","createMockUserStorage","MOCK_USER_STORAGE_CHAIN","MOCK_USER_STORAGE_ACCOUNT","ERC20_RECEIVED","ERC20_SENT","tId","props","triggersEnabled","createMockRawOnChainNotifications","createMockNotificationLidoReadyToBeWithdrawn","createMockNotificationLidoWithdrawalCompleted","createMockNotificationLidoWithdrawalRequested","createMockNotificationLidoStakeCompleted","createMockNotificationRocketPoolUnStakeCompleted","createMockNotificationRocketPoolStakeCompleted","createMockNotificationMetaMaskSwapsCompleted","createMockNotificationERC1155Received","createMockNotificationERC1155Sent","createMockNotificationERC721Received","createMockNotificationERC721Sent","createMockNotificationERC20Received","createMockNotificationERC20Sent","createMockNotificationEthReceived","createMockNotificationEthSent","ETH_SENT","trigger_id","chain_id","block_number","block_timestamp","tx_hash","unread","created_at","network_fee","gas_price","native_token_price_in_usd","usd","eth","ETH_RECEIVED","symbol","decimals","ERC721_SENT","nft","token_id","collection","ERC721_RECEIVED","ERC1155_SENT","ERC1155_RECEIVED","METAMASK_SWAP_COMPLETED","rate","token_in","token_out","ROCKETPOOL_STAKE_COMPLETED","stake_in","stake_out","ROCKETPOOL_UNSTAKE_COMPLETED","LIDO_STAKE_COMPLETED","LIDO_WITHDRAWAL_REQUESTED","LIDO_WITHDRAWAL_COMPLETED","LIDO_STAKE_READY_TO_BE_WITHDRAWN","request_id","staked_eth","getMockMarkNotificationsAsReadResponse","getMockListNotificationsResponse","MOCK_RAW_ON_CHAIN_NOTIFICATIONS","getMockBatchDeleteTriggersResponse","getMockBatchCreateTriggersResponse","getMockFeatureAnnouncementResponse","CONTENTFUL_RESPONSE","feature_announcements_1","onchain_notifications_1","mock_feature_announcements_1","mock_raw_notifications_1","FEATURE_ANNOUNCEMENT_API","requestMethod","TRIGGER_API_BATCH_ENDPOINT","NOTIFICATION_API_LIST_ENDPOINT","NOTIFICATION_API_MARK_ALL_AS_READ_ENDPOINT","USER_STORAGE_VERSION","TRIGGER_TYPES_GROUPS","TRIGGERS","SUPPORTED_CHAINS","CHAIN_SYMBOLS","NOTIFICATION_CHAINS","NOTIFICATION_CHAINS_ID","TRIGGER_TYPES_WALLET_SET","ETHEREUM","ARBITRUM","LINEA","supported_chains","UI","Mocks","Constants","Processors","Types","Controller","NotificationServicesController_1","processFeatureAnnouncement","isFeatureAnnouncementRead","readPlatformNotificationsList","oldDate","toISOString","processNotification","process_feature_announcement_1","process_onchain_notifications_1","isOnChainNotification","isFeatureAnnouncement","readNotifications","processOnChainNotification","exhaustedAllCases","FEATURE_ANNOUNCEMENT_URL","rich_text_html_renderer_1","DEFAULT_SPACE_ID","DEFAULT_ACCESS_TOKEN","DEFAULT_CLIENT_ID","fetchFeatureAnnouncementNotifications","spaceId","accessToken","platform","getFeatureAnnouncementUrl","r","findIncludedItem","sysId","typedData","imageFields","externalLinkFields","externalLink","portfolioLinkFields","portfolioLink","extensionLinkFields","mobileLinkFields","mobileLink","documentToHtmlString","externalLinkText","externalLinkUrl","portfolioLinkText","portfolioLinkUrl","mobileLinkText","mobileLinkUrl","NOTIFICATION_API_LIST_ENDPOINT_PAGE_QUERY","NOTIFICATION_API","TRIGGER_API","profile_sync_controller_1","to_raw_notification_1","triggersToCreate","UserStorageController","createSHA256Hash","makeApiCall","errorData","trigger","toggleUserStorageTriggerStatus","triggersToDelete","isEmpty","triggerIds","trigger_ids","transformedNotifications","toRawOnChainNotification","PAGE_LIMIT","notificationIds","ids","SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS","NOTIFICATION_NETWORK_CURRENCY_SYMBOL","NOTIFICATION_NETWORK_CURRENCY_NAME","notification_schema_2","upsertTriggerTypeTriggers","getUUIDsForAccountByKinds","getUUIDsForKinds","inferEnabledKinds","triggerToId","triggerIdentity","mappedTrigger","supportedChains","presenceRecord","accountObject","triggerKind","triggerConfig","isAccountEnabled","allSupportedKinds","allowedKinds","kindsSet","allowedKindsSet","_account","triggerType","endpoint","_NotificationServicesPushController_instances","_NotificationServicesPushController_pushListenerUnsubscribe","_NotificationServicesPushController_env","_NotificationServicesPushController_config","_NotificationServicesPushController_registerMessageHandlers","_NotificationServicesPushController_getAndAssertBearerToken","push_web_1","services_1","fcmToken","NotificationServicesPushController","listenToPushNotifications","listenToPushReceived","onPushNotificationReceived","listenToPushClicked","onPushNotificationClicked","isPushEnabled","regToken","activatePushNotifications","createRegToken","isPushNotificationsDisabled","deactivatePushNotifications","deleteRegToken","updateTriggerPushNotifications","getMockDeleteFCMRegistrationTokenResponse","getMockCreateFCMRegistrationTokenResponse","MOCK_FCM_RESPONSE","getMockUpdatePushNotificationLinksResponse","getMockRetrievePushNotificationLinksResponse","MOCK_LINKS_RESPONSE","MOCK_REG_TOKEN","endpoints_1","registration_tokens","REGISTRATION_TOKENS_ENDPOINT","web","p256dh","auth","applicationPubKey","NotificationServicesPushController_1","listenToPushNotificationsClicked","listenToPushNotificationsReceived","app_1","messaging_1","sw_1","getFirebaseMessaging","app","getApp","firebaseConfig","apiKey","authDomain","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createFirebaseApp","getMessaging","messaging","getToken","serviceWorkerRegistration","registration","vapidKey","deleteToken","unsubscribePushNotifications","onBackgroundMessage","notificationData","clickHandler","addEventListener","removeEventListener","updateLinksAPI","getPushNotificationLinks","endpoints","regTokens","notificationLinks","newRegTokens","filteredRegTokens","isTriggersLinkedToPushNotifications","newRegToken","unsubscribeNotificationClicks","getAmount","formatAmount","getLeadingZeroCount","calcTokenAmount","bignumber_js_1","defaultFormatOptions","decimalPlaces","multiplier","BigNumber","fractionalPart","numericAmount","leadingZeros","isDecimal","Intl","NumberFormat","notation","compactDisplay","maximumFractionDigits","ellipse","shouldEllipse","formattedValue","minimumFractionDigits","parseFloat","toNumber","createOnChainPushNotificationMessage","createOnChainPushNotificationMessages","get_notification_data_1","getChainSymbol","translationKeys","otherArgs","erc20_sent","defaultDescription","getDescription","tokenAmount","tokenDecimals","eth_sent","erc20_received","eth_received","metamask_swap_completed","erc721_sent","erc1155_sent","erc721_received","erc1155_received","rocketpool_stake_completed","rocketpool_unstake_completed","lido_stake_completed","lido_stake_ready_to_be_withdrawn","lido_withdrawal_requested","lido_withdrawal_completed","assumed","translations","notificationMessage","formattedString","stringArg","ObjectMultiplex","readable_stream_1","once_1","Substream_1","IGNORE_SUBSTREAM","Duplex","objectMode","_substreams","createStream","destroyed","_readableState","ended","_writableState","substream","Substream","parent","stream","_cb","finished","readable","anyStreamEnd","ignoreStream","_read","_write","chunk","_encoding","_parent","_name","ObjectMultiplex_1","InvalidSubjectIdentifierError","UnrecognizedSubjectError","CaveatMergerDoesNotExistError","caveatType","InvalidMergedPermissionsError","diff","InvalidApprovedPermissionError","approvedPermission","PermissionDoesNotExistError","EndowmentPermissionDoesNotExistError","UnrecognizedCaveatTypeError","InvalidCaveatsPropertyError","caveatsProperty","CaveatDoesNotExistError","CaveatAlreadyExistsError","InvalidCaveatError","receivedCaveat","InvalidCaveatTypeError","caveat","CaveatMissingValueError","CaveatInvalidJsonError","InvalidCaveatFieldsError","ForbiddenCaveatError","targetName","DuplicateCaveatError","CaveatMergeTypeMismatchError","leftCaveatType","rightCaveatType","CaveatSpecificationMismatchError","caveatSpec","permissionType","PermissionsRequestNotFoundError","userRejectedRequest","internalError","SubjectType","SubjectType2","subjectMetadata","SubjectMetadataController","_SubjectMetadataController","subjectCacheLimit","hasPermissions","getTrimmedState","subjectHasPermissions","subjectsWithoutPermissionsEncounteredSinceStartup","getSubjectMetadata","addSubjectMetadata","clearState","_draftState","newMetadata","extensionId","iconUrl","subjectType","originToForget","cachedOrigin","draftState","trimMetadataState","newSubjectMetadata","_chunkHRDKMOYSjs","_chunkXM622CMPjs","_chunkGHOOCGN3js","rpc_methods_exports","requestPermissionsHandler","getPermissionsHandler","revokePermissionsHandler","_chunk3X6WO7UGjs","methodNames","implementation","revokePermissionsForOrigin","param","permissionKeys","hookNames","_req","getPermissionsForOrigin","_chunkRKDXFKNNjs","_chunkZH4MLSXXjs","_chunkVM4LI55Wjs","_chunkPTE4672Ijs","_chunkZ2XKIXLSjs","_deepfreezestrict","_deepfreezestrict2","_nanoid","_expectGetCaveatMerger","expectGetCaveatMerger_fn","_applyGrantedPermissions","applyGrantedPermissions_fn","_mergeIncrementalPermissions","mergeIncrementalPermissions_fn","_mergePermission","mergePermission_fn","_mergeCaveat","mergeCaveat_fn","_handleApprovedPermissions","handleApprovedPermissions_fn","CaveatMutatorOperation","CaveatMutatorOperation2","PermissionController","caveatSpecifications","permissionSpecifications","unrestrictedMethods","subjects","_unrestrictedMethods","_caveatSpecifications","validatePermissionSpecifications","_permissionSpecifications","registerMessageHandlers","createPermissionMiddleware","getPermissionMiddlewareFactory","executeRestrictedMethod","_executeRestrictedMethod","getRestrictedMethod","isUnrestrictedMethod","getPermissionSpecification","getCaveatSpecification","innerTargetName","allowedCaveats","PermissionType","specification","isRestrictedMethodCaveat","isRestrictedMethodCaveatSpecification","requestData","getEndowments","getSubjectNames","getPermissions","hasPermission","grantPermissions","grantPermissionsIncremental","subject","permissions","requestPermissions","requestPermissionsIncremental","revokeAllPermissions","revokePermissionForAllSubjects","revokePermissions","caveatValue","updateCaveat","getTypedPermissionSpecification","requestingOrigin","failureError","targetExists","hasSpecificationType","methodImplementation","getPermission","revokePermission","subjectsAndPermissions","deletePermission","hasCaveat","getCaveat","permission","findCaveat","addCaveat","setCaveat","validateCaveat","caveats","caveatIndex","existingCaveat","validateModifiedPermission","updatePermissionsByCaveat","targetCaveatType","mutator","targetCaveat","mutatorResult","parentCapability","deleteCaveat","removeCaveat","validatePermission","approvedPermissions","preserveExistingPermissions","mergePermissions","invokePermissionValidator","performCaveatValidation","subjectTypes","seenCaveatTypes","setValidatedPermissions","castDraft","constructCaveats","requestedCaveats","caveatArray","requestedCaveat","requestedPermissions","nanoid","validateRequestedPermissions","permissionsRequest","approvedRequest","requestUserApproval","currentPermissions","newPermissions","permissionDiffMap","validateApprovedPermissions","getSideEffects","sideEffectList","sideEffect","permittedHandlers","onPermitted","onFailure","failureHandlers","executeSideEffects","sideEffects","promiseResults","allSettled","permittedHandler","rejectedHandlers","failureHandlersList","failureHandler","reasons","reason","errors","originalMetadata","newOrigin","mutatedId","originalOrigin","mutatedOrigin","acceptPermissionsRequest","hasApprovalRequest","_rejectPermissionsRequest","rejectPermissionsRequest","endowmentGetter","decorateWithCaveats","merger","requestedTarget","permissionOptions","invoker","factory","constructPermission","existingPermissions","incrementalRequestedPermissions","produce","draftExistingPermissions","leftPermissions","rightPermission","leftPermission","newPermission","caveatsDiff","caveatPairs","leftUniqueCaveats","rightUniqueCaveats","collectUniqueAndPairedCaveats","mergedCaveats","caveatDiffMap","diffMap","leftCaveat","rightCaveat","newCaveat","allCaveats","approvedMetadata","sideEffectsData","MethodNames","MethodNames2","leftCaveats","rightCaveats","rightCaveatIndex","decorated","decorator","requestPermissionsForOrigin","grantedPermissions","PermissionType2","date","expectedType","_chunkDV74ZDGDjs","_chunkI3DJ23QHjs","_chunkC73QV75Djs","permissionRpcMethods","urlAlphabet","customRandom","alphabet","defaultSize","getRandom","LN2","step","customAlphabet","_chunkLBXAXAXHjs","StaticIntervalPollingControllerMixin","Base","_intervalIds","_intervalLength","StaticIntervalPollingController2","AbstractPollingControllerBaseMixin","intervalLength","getIntervalLength","_startPollingByNetworkClientId","getKey","existingInterval","_stopPollingByPollingTokenSetId","clearTimeout","StaticIntervalPollingControllerOnly","StaticIntervalPollingControllerV1","_fastjsonstablestringify","_fastjsonstablestringify2","_pollingTokenSets","_callbacks","startPollingByNetworkClientId","pollingTokenSet","stopAllPolling","tokenSet","stopPollingByPollingToken","pollingToken","keyToDelete","callbacks","onPollingCompleteByNetworkClientId","BlockTrackerPollingControllerMixin","_activeListeners","BlockTrackerPollingController2","_getNetworkClientById","updateOnNewBlock","addListener","removeListener","BlockTrackerPollingControllerOnly","BlockTrackerPollingController","BlockTrackerPollingControllerV1","_chunkMUDX6BUYjs","_chunkI2PH5XQPjs","BasePostMessageStream","noop","SYN","ACK","streamOptions","_init","_haveSyn","_handshake","cork","_onData","emit","uncork","_postMessage","_setLogger","__rest","getOwnPropertySymbols","propertyIsEnumerable","WebWorkerParentPostMessageStream","BasePostMessageStream_1","worker","DEDICATED_WORKER_NAME","_worker","onmessage","_onMessage","postMessage","isValidStreamMessage","_destroy","WebWorkerPostMessageStream","WorkerGlobalScope","_BrowserRuntimePostMessageStream_name","_BrowserRuntimePostMessageStream_target","BrowserRuntimePostMessageStream","_getRuntime","onMessage","sendMessage","_b","globalThis","chrome","runtime","browser","WindowPostMessageStream","getSource","MessageEvent","getOrigin","targetOrigin","location","targetWindow","window","_targetOrigin","_targetWindow","_AuthenticationController_instances","_AuthenticationController_metametrics","_AuthenticationController_isUnlocked","_AuthenticationController_keyringController","_AuthenticationController_registerMessageHandlers","_AuthenticationController_assertLoggedIn","_AuthenticationController_performAuthenticationFlow","_AuthenticationController_hasValidSession","_AuthenticationController__snapPublicKeyCache","_AuthenticationController_snapGetPublicKey","_AuthenticationController__snapSignMessageCache","_AuthenticationController_snapSignMessage","auth_snap_requests_1","THIRTY_MIN_MS","sessionData","AuthenticationController","metametrics","performSignIn","performSignOut","getSessionProfile","getNonce","rawMessage","createLoginRawMessage","loginResponse","login","metametricsId","getMetaMetricsId","agent","identifierId","identifier_id","profileId","profile_id","getAccessToken","expiresIn","setTime","prevDate","currentDate","diffMs","abs","createSnapPublicKeyRequest","createSnapSignMessageRequest","getMockAuthAccessTokenResponse","MOCK_OATH_TOKEN_RESPONSE","MOCK_ACCESS_TOKEN","getMockAuthLoginResponse","MOCK_LOGIN_RESPONSE","MOCK_JWT","getMockAuthNonceResponse","MOCK_NONCE_RESPONSE","MOCK_NONCE","AUTH_NONCE_ENDPOINT","expires_in","AUTH_LOGIN_ENDPOINT","access_token","OIDC_TOKENS_ENDPOINT","AuthenticationController_1","env_1","ENV_URLS","getEnvUrls","Env","PRD","AUTH_ENDPOINT","authApiUrl","OIDC_ENDPOINT","oidcApiUrl","nonceUrl","searchParams","nonceResponse","nonceJson","clientMetaMetrics","raw_message","metametrics_id","jwtToken","Headers","urlEncodedBody","URLSearchParams","append","getOidcClientId","Platform","EXTENSION","MOBILE","OIDC_CLIENT_ID","accessTokenResponse","_UserStorageController_instances","_UserStorageController_auth","_UserStorageController_accounts","_UserStorageController_config","_UserStorageController_notificationServices","_UserStorageController_isUnlocked","_UserStorageController_keyringController","_UserStorageController_nativeScryptCrypto","_UserStorageController_registerMessageHandlers","_UserStorageController_assertProfileSyncingEnabled","_UserStorageController_getStorageKeyAndBearerToken","_UserStorageController_createStorageKey","_UserStorageController__snapSignMessageCache","_UserStorageController_snapSignMessage","_UserStorageController_setIsProfileSyncingUpdateLoading","user_storage_1","encryption_1","controller_integration_1","isProfileSyncingEnabled","isProfileSyncingUpdateLoading","getMetaMetricsState","nativeScryptCrypto","getProfileId","sessionProfile","isAuthEnabled","signIn","signOut","isAccountSyncingEnabled","isAccountSyncingInProgress","canSync","setupAccountSyncingSubscriptions","saveInternalAccountToUserStorage","getInternalAccountsList","getUserStorageAccountsList","rawAccountsListResponse","performGetStorageAllFeatureEntries","rawAccount","internalAccount","mappedAccount","mapInternalAccountToUserStorageAccount","performSetStorage","saveInternalAccountsListToUserStorage","internalAccountsList","userStorageAccountsList","userStorageAccount","isNetworkSyncingEnabled","startNetworkSyncing","getStorageConfig","setIsProfileSyncingEnabled","disableProfileSyncing","performGetStorage","getUserStorage","getUserStorageAllFeatureEntries","upsertUserStorage","syncInternalAccountsWithUserStorage","numberOfAccountsToAdd","addNewAccountsPromises","accountSyncing","onAccountAdded","isInternalAccountNameDefault","isNameDefaultAccountName","isUserStorageAccountNameDefault","onAccountNameUpdated","nlu","storageKeySignature","getMockUserStoragePutResponse","getMockUserStorageAllFeatureEntriesResponse","getMockUserStorageGetResponse","createMockAllFeatureEntriesResponse","createMockGetStorageResponse","getMockUserStorageEndpoint","schema_1","mockStorage_1","USER_STORAGE_ENDPOINT","createEntryPath","MOCK_STORAGE_KEY","HashedKey","Data","MOCK_ENCRYPTED_STORAGE_DATA","dataArr","MOCK_STORAGE_DATA","MOCK_STORAGE_KEY_SIGNATURE","cachedMockEncryptedData","hello","encryptString","LOCALIZED_DEFAULT_ACCOUNT_NAMES","setCachedKey","getAnyCachedKey","getCachedKeyBySalt","inMemCachedKDF","getPasswordCache","hashedPassword","base64Salt","byteArrayToBase64","cachedKey","cachedEntry","base64ToByteArray","_EncryptorDecryptor_instances","_EncryptorDecryptor_encryptStringV1","_EncryptorDecryptor_decryptStringV1","_EncryptorDecryptor_encrypt","_EncryptorDecryptor_decrypt","_EncryptorDecryptor_getOrGenerateScryptKey","aes_1","webcrypto_1","scrypt_1","SCRYPT_N","plaintext","randomBytes","plaintextRaw","utf8ToBytes","ciphertextAndNonceAndSalt","encryptedPayload","saltLen","base64CiphertextAndNonceAndSalt","ciphertextAndNonce","bytesToUtf8","gcm","newSalt","newKey","scryptAsync","encryption","decryptString","encryptedDataStr","encryptedData","hashedData","Encryption","byteArray","UserStorageController_1","sync_mutations_1","deleteNetwork","batchUpsertRemoteNetworks","upsertRemoteNetwork","getAllRemoteNetworks","isDefined","rawData","parseNetworkConfiguration","networks","batchUpdateNetworks","lastUpdatedAt","remoteNetworks","isPathWithFeatureAndKey","getFeatureAndKeyFromPath","USER_STORAGE_SCHEMA","ALLOW_ARBITRARY_KEYS","feature","validFeature","validKeys","USER_STORAGE_API","userStorageApiUrl","encryptedPath","userStorageResponse","decryptedData","SDK","_SIWEJwtBearerAuth_instances","_SIWEJwtBearerAuth_config","_SIWEJwtBearerAuth_options","_SIWEJwtBearerAuth_signer","_SIWEJwtBearerAuth_getAuthSession","_SIWEJwtBearerAuth_login","_SIWEJwtBearerAuth_createSiWELoginRawMessage","_SIWEJwtBearerAuth_assertSigner","SIWEJwtBearerAuth","siwe_1","validate_login_response_1","session","getUserProfile","getIdentifier","prepare","signer","getLoginResponse","validateLoginResponse","obtainedAt","nonceRes","authResponse","authenticate","tokenResponse","authorizeOIDC","setLoginResponse","SiweMessage","SIWE_LOGIN_URL","issuedAt","prepareMessage","ValidationError","_SRPJwtBearerAuth_instances","_SRPJwtBearerAuth_config","_SRPJwtBearerAuth_options","_SRPJwtBearerAuth_getAuthSession","_SRPJwtBearerAuth_login","_SRPJwtBearerAuth_createSrpLoginRawMessage","SRPJwtBearerAuth","eip_6963_metamask_provider_1","messaging_signing_snap_requests_1","getDefaultEIP6963Provider","getMetaMaskProviderEIP6963","defaultEIP6963SigningOptions","MESSAGE_SIGNING_SNAP","formattedMessage","signing","isSnapConnected","connectSnap","pairIdentifiers","SRP_LOGIN_URL","OIDC_TOKEN_URL","PAIR_IDENTIFIERS","NONCE_URL","logins","pairUrl","PairError","NonceRetrievalError","error_description","SignInError","authType","authenticationUrl","AuthType","SRP","SiWE","getAuthenticationUrl","metaMetricsId","_JwtBearerAuth_instances","_JwtBearerAuth_type","_JwtBearerAuth_env","_JwtBearerAuth_sdk","_JwtBearerAuth_assertSIWE","_JwtBearerAuth_assertSRP","JwtBearerAuth","flow_siwe_1","flow_srp_1","UnsupportedAuthTypeError","pairing","encrypted_storage_key","encryptedStorageKey","identifier_type","identifierType","_sdk","flow_siwe_2","flow_srp_2","dev","uat","prd","clientIds","DEV","PORTFOLIO","INFURA","UAT","NotFoundError","UserStorageError","_UserStorage_instances","_UserStorage_upsertUserStorage","_UserStorage_getUserStorage","_UserStorage_getUserStorageAllFeatureEntries","_UserStorage_getAuthorizationHeader","UserStorage","STORAGE_URL","setItem","getItem","getAllFeatureItems","userProfile","hashedStorageKeySignature","setStorageKey","metamaskClientsRdns","main","flask","institutional","providerCache","cachedProvider","handleProviderEvent","typedEvent","providerDetail","detail","info","rdns","dispatchEvent","Event","metamaskClients","metamaskRdns","getSnaps","SNAP_ORIGIN","snaps","assumedInput","QRHardwareInvalidTransactionTitle","QRHardwareMismatchedSignId","QRHardwarePubkeyAccountOutOfRange","QRHardwareScanInstructions","QRHardwareSignRequestCancel","QRHardwareSignRequestDescription","QRHardwareSignRequestGetSignature","QRHardwareSignRequestSubtitle","QRHardwareSignRequestTitle","QRHardwareUnknownQRCodeTitle","QRHardwareUnknownWalletQRCode","QRHardwareWalletImporterTitle","QRHardwareWalletSteps1Description","QRHardwareWalletSteps1Title","QRHardwareWalletSteps2Description","SIWEAddressInvalid","SIWEDomainInvalidText","SIWEDomainInvalidTitle","SIWEDomainWarningBody","SIWEDomainWarningLabel","SIWELabelChainID","SIWELabelExpirationTime","SIWELabelIssuedAt","SIWELabelMessage","SIWELabelNonce","SIWELabelNotBefore","SIWELabelRequestID","SIWELabelResources","SIWELabelURI","SIWELabelVersion","SIWESiteRequestSubtitle","SIWESiteRequestTitle","SIWEWarningSubtitle","SIWEWarningTitle","about","accept","acceptTermsOfUse","accessAndSpendNoticeNFT","accessYourWalletWithSRP","accessYourWalletWithSRPDescription","accessingYourCamera","accountActivity","accountActivityText","accountBalance","accountDetails","accountIdenticon","accountIsntConnectedToastText","accountName","accountNameDuplicate","accountNameReserved","accountOptions","accountSelectionRequired","accountTypeNotSupported","accountsConnected","active","activity","activityLog","addACustomNetwork","addANetwork","addANickname","addAUrl","addAccount","addAccountToMetaMask","addAcquiredTokens","addAlias","addBlockExplorer","addBlockExplorerUrl","addContact","addCustomNetwork","addEthereumChainConfirmationDescription","addEthereumChainConfirmationRisks","addEthereumChainConfirmationRisksLearnMore","addEthereumChainConfirmationRisksLearnMoreLink","addEthereumChainConfirmationTitle","addEthereumChainWarningModalHeader","addEthereumChainWarningModalHeaderPartTwo","addEthereumChainWarningModalListHeader","addEthereumChainWarningModalListPointOne","addEthereumChainWarningModalListPointThree","addEthereumChainWarningModalListPointTwo","addEthereumChainWarningModalTitle","addEthereumWatchOnlyAccount","addFriendsAndAddresses","addHardwareWallet","addIPFSGateway","addImportAccount","addMemo","addNetworkConfirmationTitle","addNewBitcoinAccount","addNewBitcoinTestnetAccount","addNewToken","addNft","addNfts","addRpcUrl","addSnapAccountToggle","addSnapAccountsDescription","addSuggestedNFTs","addSuggestedTokens","addToken","addTokenByContractAddress","addUrl","addingAccount","addingCustomNetwork","addingTokens","additionalNetworks","addressCopied","addressMismatch","addressMismatchOriginal","addressMismatchPunycode","advanced","advancedBaseGasFeeToolTip","advancedConfiguration","advancedDetailsDataDesc","advancedDetailsHexDesc","advancedDetailsNonceDesc","advancedDetailsNonceTooltip","advancedGasFeeDefaultOptIn","advancedGasFeeModalTitle","advancedGasPriceTitle","advancedPriorityFeeToolTip","agreeTermsOfUse","airgapVault","alert","alertActionBuy","alertActionUpdateGas","alertActionUpdateGasFee","alertActionUpdateGasFeeLevel","alertBannerMultipleAlertsDescription","alertBannerMultipleAlertsTitle","alertDisableTooltip","alertMessageAddressMismatchWarning","alertMessageGasEstimateFailed","alertMessageGasFeeLow","alertMessageGasTooLow","alertMessageInsufficientBalance","alertMessageNetworkBusy","alertMessageNoGasPrice","alertMessagePendingTransactions","alertMessageSignInDomainMismatch","alertMessageSignInWrongAccount","alertMessageSigningOrSubmitting","alertModalAcknowledge","alertModalDetails","alertModalReviewAllAlerts","alertReasonGasEstimateFailed","alertReasonGasFeeLow","alertReasonGasTooLow","alertReasonInsufficientBalance","alertReasonNetworkBusy","alertReasonNoGasPrice","alertReasonPendingTransactions","alertReasonSignIn","alertReasonWrongAccount","alertSettingsUnconnectedAccount","alertSettingsUnconnectedAccountDescription","alertSettingsWeb3ShimUsage","alertSettingsWeb3ShimUsageDescription","alerts","allCustodianAccountsConnectedSubtitle","allCustodianAccountsConnectedTitle","allOfYour","allPermissions","allTimeHigh","allTimeLow","allYourNFTsOf","allow","allowMmiToConnectToCustodian","allowNotifications","allowSpendToken","allowWithdrawAndSpend","amountReceived","amountSent","andForListItems","andForTwoItems","appDescription","appName","appNameBeta","appNameFlask","appNameMmi","approve","approveAllTokensTitle","approveAllTokensTitleWithoutSymbol","approveButtonText","approveIncreaseAllowance","approveSpendingCap","approveTokenDescription","approveTokenDescriptionWithoutSymbol","approveTokenTitle","approved","approvedAsset","approvedOn","approvedOnForAccounts","areYouSure","asset","assetOptions","attemptSendingAssets","attemptSendingAssetsWithPortfolio","attemptToCancelSwapForFree","attributes","attributions","auroraRpcDeprecationMessage","authorizedPermissions","autoDetectTokens","autoDetectTokensDescription","autoLockTimeLimit","autoLockTimeLimitDescription","average","awaitingApproval","back","backupApprovalInfo","backupApprovalNotice","backupKeyringSnapReminder","backupNow","balanceOutdated","baseFee","basic","basicConfigurationBannerCTA","basicConfigurationBannerTitle","basicConfigurationDescription","basicConfigurationLabel","basicConfigurationModalCheckbox","basicConfigurationModalDisclaimerOff","basicConfigurationModalDisclaimerOn","basicConfigurationModalHeadingOff","basicConfigurationModalHeadingOn","beCareful","beta","betaHeaderText","betaMetamaskInstitutionalVersion","betaMetamaskVersion","betaTerms","betaWalletCreationSuccessReminder1","betaWalletCreationSuccessReminder2","billionAbbreviation","bitcoinActivityNotSupported","bitcoinSupportSectionTitle","bitcoinSupportToggleDescription","bitcoinSupportToggleTitle","bitcoinTestnetSupportToggleDescription","bitcoinTestnetSupportToggleTitle","blockExplorerAccountAction","blockExplorerAssetAction","blockExplorerSwapAction","blockExplorerUrlDefinition","blockExplorerView","blockaid","blockaidAlertInfo","blockaidDescriptionApproveFarming","blockaidDescriptionBlurFarming","blockaidDescriptionErrored","blockaidDescriptionMaliciousDomain","blockaidDescriptionMightLoseAssets","blockaidDescriptionSeaportFarming","blockaidDescriptionTransferFarming","blockaidDescriptionWarning","blockaidMessage","blockaidTitleDeceptive","blockaidTitleMayNotBeSafe","blockaidTitleSuspicious","blockies","boughtFor","bridge","bridgeDontSend","browserNotSupported","buildContactList","builtAroundTheWorld","busy","buyAndSell","buyAsset","buyCrypto","buyFirstCrypto","buyMoreAsset","buyNow","buyToken","canToggleInSettings","cancel","cancelPopoverTitle","cancelSpeedUp","cancelSpeedUpLabel","cancelSpeedUpTransactionTooltip","cancelled","chainIdDefinition","chainIdExistsErrorMsg","chainListReturnedDifferentTickerSymbol","chooseYourNetwork","chooseYourNetworkDescription","chromeRequiredForHardwareWallets","circulatingSupply","clearActivity","clearActivityButton","clearActivityDescription","click","clickToConnectLedgerViaWebHID","clickToManuallyAdd","close","closeExtension","closeWindowAnytime","coingecko","collectionName","comboNoOptions","configureSnapPopupDescription","configureSnapPopupInstallDescription","configureSnapPopupInstallTitle","configureSnapPopupLink","configureSnapPopupTitle","confirm","confirmAlertModalAcknowledgeMultiple","confirmAlertModalAcknowledgeSingle","confirmAlertModalDetails","confirmAlertModalTitle","confirmConnectCustodianRedirect","confirmConnectCustodianText","confirmConnectionTitle","confirmFieldPaymaster","confirmFieldTooltipPaymaster","confirmPassword","confirmRecoveryPhrase","confirmTitleApproveTransaction","confirmTitleDeployContract","confirmTitleDescApproveTransaction","confirmTitleDescDeployContract","confirmTitleDescERC20ApproveTransaction","confirmTitleDescPermitSignature","confirmTitleDescSIWESignature","confirmTitleDescSignature","confirmTitlePermitTokens","confirmTitleSIWESignature","confirmTitleSignature","confirmTitleTransaction","confirmed","confusableUnicode","confusableZeroWidthUnicode","confusingEnsDomain","connect","connectAccount","connectAccountOrCreate","connectAccounts","connectCustodialAccountMenu","connectCustodialAccountMsg","connectCustodialAccountTitle","connectCustodianAccounts","connectManually","connectMoreAccounts","connectWithMetaMask","connectedAccounts","connectedAccountsDescriptionPlural","connectedAccountsDescriptionSingular","connectedAccountsEmptyDescription","connectedAccountsListTooltip","connectedAccountsToast","connectedSites","connectedSitesAndSnaps","connectedSitesDescription","connectedSitesEmptyDescription","connectedSnapAndNoAccountDescription","connectedSnaps","connectedWith","connecting","connectingTo","connectingToDeprecatedNetwork","connectingToGoerli","connectingToLineaGoerli","connectingToLineaMainnet","connectingToLineaSepolia","connectingToMainnet","connectingToSepolia","connectionFailed","connectionFailedDescription","connectionRequest","contactUs","contacts","contentFromSnap","continue","continueMmiOnboarding","continueToWallet","contract","contractAddress","contractAddressError","contractDeployment","contractDescription","contractInteraction","contractNFT","contractRequestingAccess","contractRequestingSignature","contractRequestingSpendingCap","contractTitle","contractToken","convertTokenToNFTDescription","convertTokenToNFTExistDescription","coolWallet","copiedExclamation","copyAddress","copyAddressShort","copyPrivateKey","copyRawTransactionData","copyToClipboard","copyTransactionId","createNewWallet","createPassword","createSnapAccountDescription","createSnapAccountTitle","creatorAddress","crossChainSwapsLink","cryptoCompare","currencyConversion","currencyRateCheckToggle","currencyRateCheckToggleDescription","currencySymbol","currencySymbolDefinition","currentAccountNotConnected","currentExtension","currentLanguage","currentRpcUrlDeprecated","currentTitle","currentlyUnavailable","curveHighGasEstimate","curveLowGasEstimate","curveMediumGasEstimate","custodian","custodianAccountAddedDesc","custodianAccountAddedTitle","custodianQRCodeScan","custodianQRCodeScanDescription","custodianReplaceRefreshTokenChangedFailed","custodianReplaceRefreshTokenChangedSubtitle","custodianReplaceRefreshTokenChangedTitle","custodianReplaceRefreshTokenSubtitle","custodianReplaceRefreshTokenTitle","custodyDeeplinkDescription","custodyRefreshTokenModalDescription","custodyRefreshTokenModalDescription1","custodyRefreshTokenModalDescription2","custodyRefreshTokenModalSubtitle","custodyRefreshTokenModalTitle","custodySessionExpired","custodyWrongChain","customGasSettingToolTipMessage","customSpendLimit","customSpendingCap","customToken","customTokenWarningInNonTokenDetectionNetwork","customTokenWarningInTokenDetectionNetwork","customTokenWarningInTokenDetectionNetworkWithTDOFF","customerSupport","customizeYourNotifications","customizeYourNotificationsText","dappRequestedSpendingCap","dappSuggested","dappSuggestedGasSettingToolTipMessage","dappSuggestedHigh","dappSuggestedHighShortLabel","dappSuggestedShortLabel","dappSuggestedTooltip","darkTheme","dataCollectionForMarketing","dataCollectionForMarketingDescription","dataCollectionWarningPopoverButton","dataCollectionWarningPopoverDescription","dataHex","dataUnavailable","dateCreated","dcent","decimal","decimalsMustZerotoTen","decryptCopy","decryptInlineError","decryptMessageNotice","decryptMetamask","decryptRequest","defaultRpcUrl","deleteContact","deleteNetworkIntro","deleteNetworkTitle","deposit","depositCrypto","deprecatedGoerliNtwrkMsg","deprecatedNetwork","deprecatedNetworkButtonMsg","deprecatedNetworkDescription","descriptionFromSnap","developerOptions","disabledGasOptionToolTipMessage","disconnect","disconnectAllAccounts","disconnectAllAccountsConfirmationDescription","disconnectAllAccountsText","disconnectAllSnapsText","disconnectAllText","disconnectAllTitle","disconnectPrompt","disconnectThisAccount","disconnectedAllAccountsToast","disconnectedSingleAccountToast","discoverSnaps","dismiss","dismissReminderDescriptionField","dismissReminderField","displayNftMedia","displayNftMediaDescription","doNotShare","dontShowThisAgain","downArrow","downloadGoogleChrome","downloadNow","downloadStateLogs","dragAndDropBanner","dropped","edit","editANickname","editAccounts","editAddressNickname","editCancellationGasFeeModalTitle","editContact","editGasFeeModalTitle","editGasLimitOutOfBounds","editGasLimitOutOfBoundsV2","editGasLimitTooltip","editGasMaxBaseFeeGWEIImbalance","editGasMaxBaseFeeHigh","editGasMaxBaseFeeLow","editGasMaxFeeHigh","editGasMaxFeeLow","editGasMaxFeePriorityImbalance","editGasMaxPriorityFeeBelowMinimum","editGasMaxPriorityFeeBelowMinimumV2","editGasMaxPriorityFeeHigh","editGasMaxPriorityFeeHighV2","editGasMaxPriorityFeeLow","editGasMaxPriorityFeeLowV2","editGasPriceTooLow","editGasPriceTooltip","editGasSubTextAmountLabel","editGasSubTextFeeLabel","editGasTitle","editGasTooLow","editNetworkLink","editNetworksTitle","editNonceField","editNonceMessage","editPermission","editSpeedUpEditGasFeeModalTitle","editSpendingCap","editSpendingCapAccountBalance","editSpendingCapDesc","enable","enableAutoDetect","enableFromSettings","enableSnap","enableToken","enabledNetworks","encryptionPublicKeyNotice","encryptionPublicKeyRequest","endpointReturnedDifferentChainId","enhancedTokenDetectionAlertMessage","ensDomainsSettingDescriptionIntroduction","ensDomainsSettingDescriptionOutroduction","ensDomainsSettingDescriptionPart1","ensDomainsSettingDescriptionPart2","ensDomainsSettingTitle","ensUnknownError","enterANameToIdentifyTheUrl","enterANumber","enterChainId","enterCustodianToken","enterMaxSpendLimit","enterNetworkName","enterOptionalPassword","enterPasswordContinue","enterRpcUrl","enterSymbol","enterTokenNameOrAddress","enterYourPassword","errorCode","errorDetails","errorGettingSafeChainList","errorName","errorPageMessage","errorPagePopupMessage","errorPageTitle","errorStack","errorWhileConnectingToRPC","errorWithSnap","estimatedFee","estimatedFeeTooltip","ethGasPriceFetchWarning","ethereumProviderAccess","ethereumPublicAddress","etherscan","etherscanView","etherscanViewOn","existingRequestsBannerAlertDesc","expandView","experimental","exportYourData","exportYourDataButton","exportYourDataDescription","extendWalletWithSnaps","extensionInsallCompleteDescription","extensionInsallCompleteTitle","externalExtension","externalNameSourcesSetting","externalNameSourcesSettingDescription","failed","failedToFetchChainId","failureMessage","fast","feeAssociatedRequest","feeDetails","fiat","fileImportFail","flaskWelcomeUninstall","flaskWelcomeWarning1","flaskWelcomeWarning2","flaskWelcomeWarning3","flaskWelcomeWarning4","flaskWelcomeWarningAcceptButton","floatAmountToken","followUsOnTwitter","forbiddenIpfsGateway","forgotPassword","form","fromAddress","fromTokenLists","function","functionApprove","functionSetApprovalForAll","functionType","fundYourWallet","fundYourWalletDescription","gas","gasDisplayAcknowledgeDappButtonText","gasDisplayDappWarning","gasIsETH","gasLimit","gasLimitInfoTooltipContent","gasLimitRecommended","gasLimitTooLow","gasLimitTooLowWithDynamicFee","gasLimitV2","gasOption","gasPriceExcessive","gasPriceExcessiveInput","gasPriceExtremelyLow","gasPriceFetchFailed","gasPriceInfoTooltipContent","gasTimingHoursShort","gasTimingLow","gasTimingMinutesShort","gasTimingSecondsShort","gasUsed","general","generalCameraError","generalCameraErrorTitle","genericExplorerView","getStarted","getStartedByFundingWallet","getStartedWithNFTs","getStartedWithNFTsDescription","goBack","goToSite","goerli","gotIt","grantedToWithColon","hardware","hardwareWalletConnected","hardwareWalletLegacyDescription","hardwareWalletSupportLinkConversion","hardwareWallets","hardwareWalletsInfo","hardwareWalletsMsg","here","hexData","hiddenAccounts","hide","hideAccount","hideFullTransactionDetails","hideSeedPhrase","hideSentitiveInfo","hideToken","hideTokenPrompt","hideTokenSymbol","hideZeroBalanceTokens","highGasSettingToolTipMessage","highLowercase","highestCurrentBid","highestFloorPrice","history","holdToRevealContent1","holdToRevealContent2","holdToRevealContent3","holdToRevealContent4","holdToRevealContent5","holdToRevealContentPrivateKey1","holdToRevealContentPrivateKey2","holdToRevealLockedLabel","holdToRevealPrivateKey","holdToRevealPrivateKeyTitle","holdToRevealSRP","holdToRevealSRPTitle","holdToRevealUnlockedLabel","ignoreAll","ignoreTokenWarning","imToken","import","importAccount","importAccountError","importAccountErrorIsSRP","importAccountErrorNotAValidPrivateKey","importAccountErrorNotHexadecimal","importAccountJsonLoading1","importAccountJsonLoading2","importAccountMsg","importMyWallet","importNFT","importNFTAddressToolTip","importNFTPage","importNFTTokenIdToolTip","importSelectedTokens","importSelectedTokensDescription","importTokenQuestion","importTokenWarning","importTokensCamelCase","importTokensError","importWithCount","imported","inYourSettings","infuraBlockedNotification","initialTransactionConfirmed","inputLogicEmptyState","inputLogicEqualOrSmallerNumber","inputLogicHigherNumber","insightWarning","insightWarningCheckboxMessage","insightWarningContentPlural","insightWarningContentSingular","insightWarningHeader","insightWarnings","insightsFromSnap","install","installExtension","installExtensionDescription","installOrigin","installRequest","installedOn","insufficientBalance","insufficientCurrencyBuyOrDeposit","insufficientCurrencyBuyOrReceive","insufficientCurrencyDeposit","insufficientFunds","insufficientFundsForGas","insufficientTokens","interactingWith","interactingWithTransactionDescription","invalidAddress","invalidAddressRecipient","invalidAssetType","invalidChainIdTooBig","invalidCustomNetworkAlertContent1","invalidCustomNetworkAlertContent2","invalidCustomNetworkAlertContent3","invalidCustomNetworkAlertTitle","invalidHexNumber","invalidHexNumberLeadingZeros","invalidIpfsGateway","invalidNumber","invalidNumberLeadingZeros","invalidRPC","invalidSeedPhrase","invalidSeedPhraseCaseSensitive","ipfsGateway","ipfsGatewayDescription","ipfsToggleModalDescriptionOne","ipfsToggleModalDescriptionTwo","ipfsToggleModalSettings","isSigningOrSubmitting","jazzAndBlockies","jazzicons","jsDeliver","jsonFile","keyringAccountName","keyringAccountPublicAddress","keyringSnapRemovalResult1","keyringSnapRemovalResultNotSuccessful","keyringSnapRemoveConfirmation","keystone","knownAddressRecipient","knownTokenWarning","l1Fee","l1FeeTooltip","l2Fee","l2FeeTooltip","lastConnected","lastSold","lavaDomeCopyWarning","layer1Fees","layer2Fees","learnCancelSpeeedup","learnMore","learnMoreAboutGas","learnMoreKeystone","learnMoreUpperCase","learnMoreUpperCaseWithDot","learnScamRisk","learnToBridge","leaveMetaMask","leaveMetaMaskDesc","ledgerAccountRestriction","ledgerConnectionInstructionCloseOtherApps","ledgerConnectionInstructionHeader","ledgerConnectionInstructionStepFour","ledgerConnectionInstructionStepThree","ledgerDeviceOpenFailureMessage","ledgerErrorConnectionIssue","ledgerErrorDevicedLocked","ledgerErrorEthAppNotOpen","ledgerErrorTransactionDataNotPadded","ledgerLiveApp","ledgerLocked","ledgerTimeout","ledgerWebHIDNotConnectedErrorMessage","levelArrow","lightTheme","likeToImportToken","likeToImportTokens","lineaGoerli","lineaMainnet","lineaSepolia","linkCentralizedExchanges","links","loadMore","loading","loadingScreenHardwareWalletMessage","loadingScreenSnapMessage","loadingTokens","localhost","lock","lockMetaMask","lockTimeInvalid","logo","lowGasSettingToolTipMessage","lowLowercase","lowPriorityMessage","mainnetToken","makeAnotherSwap","makeSureNoOneWatching","marketCap","marketDetails","maxBaseFee","maxFee","maxFeeTooltip","maxPriorityFee","mediumGasSettingToolTipMessage","memo","metaMaskConnectStatusParagraphOne","metaMaskConnectStatusParagraphThree","metaMaskConnectStatusParagraphTwo","metadataModalSourceTooltip","metamaskInstitutionalVersion","metamaskNotificationsAreOff","metamaskPortfolio","metamaskSwapsOfflineDescription","metamaskVersion","methodData","methodDataTransactionDesc","metrics","millionAbbreviation","mismatchAccount","mismatchedChainLinkText","mismatchedChainRecommendation","mismatchedNetworkName","mismatchedNetworkSymbol","mismatchedRpcChainId","mismatchedRpcUrl","missingSetting","missingSettingRequest","mmiBuiltAroundTheWorld","mmiNewNFTDetectedInNFTsTabMessage","mmiPasswordSetupDetails","more","multichainAddEthereumChainConfirmationDescription","multipleSnapConnectionWarning","mustSelectOne","nameAddressLabel","nameInstructionsNew","nameInstructionsRecognized","nameInstructionsSaved","nameLabel","nameModalMaybeProposedName","nameModalTitleNew","nameModalTitleRecognized","nameModalTitleSaved","nameProviderProposedBy","nameProvider_ens","nameProvider_etherscan","nameProvider_lens","nameProvider_token","nameSetPlaceholder","nativeNetworkPermissionRequestDescription","nativePermissionRequestDescription","nativeToken","nativeTokenScamWarningConversion","nativeTokenScamWarningDescription","nativeTokenScamWarningTitle","needHelp","needHelpFeedback","needHelpLinkText","needHelpSubmitTicket","needImportFile","negativeETH","negativeOrZeroAmountToken","networkDetails","networkFee","networkIsBusy","networkMenu","networkMenuHeading","networkNameArbitrum","networkNameAvalanche","networkNameBSC","networkNameBase","networkNameBitcoin","networkNameDefinition","networkNameEthereum","networkNameGoerli","networkNameLinea","networkNameOpMainnet","networkNamePolygon","networkNameTestnet","networkNameZkSyncEra","networkOptions","networkProvider","networkStatus","networkStatusBaseFeeTooltip","networkStatusPriorityFeeTooltip","networkStatusStabilityFeeTooltip","networkSwitchConnectionError","networkSwitchMessage","networkURL","networkURLDefinition","networkUrlErrorWarning","nevermind","new","newAccount","newAccountNumberName","newContact","newContract","newNFTDetectedInImportNFTsMessageStrongText","newNFTDetectedInImportNFTsMsg","newNFTDetectedInNFTsTabMessage","newNFTsAutodetected","newNetworkAdded","newNetworkEdited","newNftAddedMessage","newPassword","newPrivacyPolicyActionButton","newPrivacyPolicyTitle","newRpcUrl","newTokensImportedMessage","newTokensImportedTitle","nextNonceWarning","nftAddFailedMessage","nftAddressError","nftAlreadyAdded","nftAutoDetectionEnabled","nftDisclaimer","nftOptions","nftTokenIdPlaceholder","nftWarningContent","nftWarningContentBold","nftWarningContentGrey","nfts","nftsPreviouslyOwned","nickname","noAccountsFound","noConnectedAccountDescription","noConnectedAccountTitle","noConversionDateAvailable","noConversionRateAvailable","noDomainResolution","noHardwareWalletOrSnapsSupport","noNFTs","noNetworksFound","noSnaps","noThanks","noTransactions","noWebcamFound","noWebcamFoundTitle","nonCustodialAccounts","nonceField","nonceFieldDesc","nonceFieldHeading","none","notBusy","notCurrentAccount","notEnoughBalance","notEnoughGas","note","notePlaceholder","notificationDetail","notificationDetailBaseFee","notificationDetailGasLimit","notificationDetailGasUsed","notificationDetailMaxFee","notificationDetailNetwork","notificationDetailNetworkFee","notificationDetailPriorityFee","notificationItemCheckBlockExplorer","notificationItemCollection","notificationItemConfirmed","notificationItemError","notificationItemFrom","notificationItemLidoStakeReadyToBeWithdrawn","notificationItemLidoStakeReadyToBeWithdrawnMessage","notificationItemLidoWithdrawalRequestedMessage","notificationItemNFTReceivedFrom","notificationItemNFTSentTo","notificationItemNetwork","notificationItemRate","notificationItemReceived","notificationItemReceivedFrom","notificationItemSent","notificationItemSentTo","notificationItemStakeCompleted","notificationItemStaked","notificationItemStakingProvider","notificationItemStatus","notificationItemSwapped","notificationItemSwappedFor","notificationItemTo","notificationItemTransactionId","notificationItemUnStakeCompleted","notificationItemUnStaked","notificationItemUnStakingRequested","notificationTransactionFailedMessage","notificationTransactionFailedMessageMMI","notificationTransactionFailedTitle","notificationTransactionSuccessMessage","notificationTransactionSuccessTitle","notificationTransactionSuccessView","notificationsDropLedgerFirefoxDescription","notificationsDropLedgerFirefoxTitle","notificationsFeatureToggle","notificationsFeatureToggleDescription","notificationsMarkAllAsRead","notificationsPageEmptyTitle","notificationsPageErrorContent","notificationsPageErrorTitle","notificationsPageNoNotificationsContent","notificationsSettingsBoxError","notificationsSettingsPageAllowNotifications","notificationsSettingsPageAllowNotificationsLink","numberOfNewTokensDetectedPlural","numberOfNewTokensDetectedSingular","numberOfTokens","ofTextNofM","off","offlineForMaintenance","on","onboardedMetametricsAccept","onboardedMetametricsDisagree","onboardedMetametricsKey1","onboardedMetametricsKey2","onboardedMetametricsKey3","onboardedMetametricsLink","onboardedMetametricsParagraph1","onboardedMetametricsParagraph2","onboardedMetametricsParagraph3","onboardedMetametricsTitle","onboardingAdvancedPrivacyIPFSDescription","onboardingAdvancedPrivacyIPFSInvalid","onboardingAdvancedPrivacyIPFSTitle","onboardingAdvancedPrivacyIPFSValid","onboardingAdvancedPrivacyNetworkDescription","onboardingAdvancedPrivacyNetworkTitle","onboardingCreateWallet","onboardingImportWallet","onboardingMetametricsAgree","onboardingMetametricsDescription","onboardingMetametricsDescription2","onboardingMetametricsInfuraTerms","onboardingMetametricsInfuraTermsPolicy","onboardingMetametricsNeverCollect","onboardingMetametricsNeverCollectEmphasis","onboardingMetametricsNeverCollectIP","onboardingMetametricsNeverCollectIPEmphasis","onboardingMetametricsNeverSellData","onboardingMetametricsNeverSellDataEmphasis","onboardingMetametricsPrivacyDescription","onboardingMetametricsTitle","onboardingMetametricsUseDataCheckbox","onboardingPinExtensionBillboardAccess","onboardingPinExtensionBillboardDescription","onboardingPinExtensionBillboardDescription2","onboardingPinExtensionBillboardTitle","onboardingPinExtensionChrome","onboardingPinExtensionDescription","onboardingPinExtensionDescription2","onboardingPinExtensionDescription3","onboardingPinExtensionLabel","onboardingPinExtensionStep1","onboardingPinExtensionStep2","onboardingPinExtensionTitle","onboardingPinMmiExtensionLabel","onboardingUsePhishingDetectionDescription","oneDayAbbreviation","oneMonthAbbreviation","oneWeekAbbreviation","oneYearAbbreviation","onekey","onlyConnectTrust","openCustodianApp","openFullScreenForLedgerWebHid","openInBlockExplorer","openSeaNew","operationFailed","or","osTheme","otherSnaps","outdatedBrowserNotification","padlock","parameters","participateInMetaMetrics","participateInMetaMetricsDescription","passwordMmiTermsWarning","passwordNotLongEnough","passwordSetupDetails","passwordStrength","passwordStrengthDescription","passwordTermsWarning","passwordsDontMatch","pasteJWTToken","pastePrivateKey","paymasterInUse","pendingTransactionInfo","pendingTransactionMultiple","pendingTransactionSingle","permissionDetails","permissionRequest","permissionRequested","permissionRequestedForAccounts","permissionRevoked","permissionRevokedForAccounts","permission_accessNamedSnap","permission_accessNetwork","permission_accessNetworkDescription","permission_accessSnap","permission_accessSnapDescription","permission_cronjob","permission_cronjobDescription","permission_dialog","permission_dialogDescription","permission_ethereumAccounts","permission_ethereumProvider","permission_ethereumProviderDescription","permission_getEntropy","permission_getEntropyDescription","permission_getLocale","permission_getLocaleDescription","permission_getPreferences","permission_getPreferencesDescription","permission_homePage","permission_homePageDescription","permission_keyring","permission_keyringDescription","permission_lifecycleHooks","permission_lifecycleHooksDescription","permission_manageAccounts","permission_manageAccountsDescription","permission_manageBip32Keys","permission_manageBip44AndBip32KeysDescription","permission_manageBip44Keys","permission_manageState","permission_manageStateDescription","permission_nameLookup","permission_nameLookupDescription","permission_notifications","permission_notificationsDescription","permission_rpc","permission_rpcDescription","permission_rpcDescriptionOriginList","permission_signatureInsight","permission_signatureInsightDescription","permission_signatureInsightOrigin","permission_signatureInsightOriginDescription","permission_transactionInsight","permission_transactionInsightDescription","permission_transactionInsightOrigin","permission_transactionInsightOriginDescription","permission_unknown","permission_viewBip32PublicKeys","permission_viewBip32PublicKeysDescription","permission_viewNamedBip32PublicKeys","permission_walletSwitchEthereumChain","permission_webAssembly","permission_webAssemblyDescription","permissionsPageEmptyContent","permissionsPageEmptySubContent","permissionsPageTourDescription","permissionsPageTourTitle","permitSimulationDetailInfo","personalAddressDetected","petnamesEnabledToggle","petnamesEnabledToggleDescription","pinExtensionDescription","pinExtensionTitle","pinToTop","pleaseConfirm","plusMore","plusXMore","popularNetworkAddToolTip","portfolio","portfolioDashboard","preparingSwap","price","priceUnavailable","primaryCurrencySetting","primaryCurrencySettingDescription","primaryType","priorityFee","priorityFeeProperCase","privacy","privacyMsg","privateKeyCopyWarning","privateKeyHidden","privateKeyShow","privateKeyShown","privateKeyWarning","privateNetwork","proceedWithTransaction","productAnnouncements","profileSync","profileSyncConfirmation","profileSyncDescription","profileSyncPrivacyLink","proposedApprovalLimit","provide","publicAddress","pushPlatformNotificationsFundsReceivedDescription","pushPlatformNotificationsFundsReceivedDescriptionDefault","pushPlatformNotificationsFundsReceivedTitle","pushPlatformNotificationsFundsSentDescription","pushPlatformNotificationsFundsSentDescriptionDefault","pushPlatformNotificationsFundsSentTitle","pushPlatformNotificationsNftReceivedDescription","pushPlatformNotificationsNftReceivedTitle","pushPlatformNotificationsNftSentDescription","pushPlatformNotificationsNftSentTitle","pushPlatformNotificationsStakingLidoStakeCompletedDescription","pushPlatformNotificationsStakingLidoStakeCompletedTitle","pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnDescription","pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnTitle","pushPlatformNotificationsStakingLidoWithdrawalCompletedDescription","pushPlatformNotificationsStakingLidoWithdrawalCompletedTitle","pushPlatformNotificationsStakingLidoWithdrawalRequestedDescription","pushPlatformNotificationsStakingLidoWithdrawalRequestedTitle","pushPlatformNotificationsStakingRocketpoolStakeCompletedDescription","pushPlatformNotificationsStakingRocketpoolStakeCompletedTitle","pushPlatformNotificationsStakingRocketpoolUnstakeCompletedDescription","pushPlatformNotificationsStakingRocketpoolUnstakeCompletedTitle","pushPlatformNotificationsSwapCompletedDescription","pushPlatformNotificationsSwapCompletedTitle","queued","quoteRate","rank","reAddAccounts","reAdded","readdToken","receive","receiveCrypto","recipientAddressPlaceholderNew","recommendedGasLabel","recoveryPhraseReminderBackupStart","recoveryPhraseReminderConfirm","recoveryPhraseReminderHasBackedUp","recoveryPhraseReminderHasNotBackedUp","recoveryPhraseReminderItemOne","recoveryPhraseReminderItemTwo","recoveryPhraseReminderSubText","recoveryPhraseReminderTitle","redesignedConfirmationsEnabledToggle","redesignedConfirmationsToggleDescription","redesignedTransactionsEnabledToggle","redesignedTransactionsToggleDescription","refreshList","rejectAll","rejectRequestsDescription","rejectRequestsN","rejectTxsDescription","rejectTxsN","rejected","remember","remove","removeAccountDescription","removeJWT","removeJWTDescription","removeKeyringSnap","removeKeyringSnapToolTip","removeNFT","removeNftErrorMessage","removeNftMessage","removeSnap","removeSnapAccountDescription","removeSnapAccountTitle","removeSnapConfirmation","removeSnapDescription","reportIssue","requestFlaggedAsMaliciousFallbackCopyReason","requestFlaggedAsMaliciousFallbackCopyReasonTitle","requestFrom","requestFromInfo","requestFromTransactionDescription","requestMayNotBeSafe","requestMayNotBeSafeError","requestNotVerified","requestNotVerifiedError","requestsAwaitingAcknowledgement","required","reset","resetWallet","resetWalletSubHeader","resetWalletUsingSRP","resetWalletWarning","restartMetamask","restore","restoreUserData","resultPageError","resultPageErrorDefaultMessage","resultPageSuccess","resultPageSuccessDefaultMessage","retryTransaction","reusedTokenNameWarning","revealSeedWords","revealSeedWordsDescription1","revealSeedWordsDescription2","revealSeedWordsDescription3","revealSeedWordsNonCustodialWallet","revealSeedWordsQR","revealSeedWordsSRPName","revealSeedWordsText","revealSeedWordsWarning","revealSeedWordsWarning2","revealSensitiveContent","revealTheSeedPhrase","reviewAlerts","reviewPermissions","revokeAllTokensTitle","revokeAllTokensTitleWithoutSymbol","revokeApproveForAllDescription","revokeApproveForAllDescriptionWithoutSymbol","revokeSpendingCap","revokeSpendingCapTooltipText","rpcNameOptional","safeTransferFrom","save","scanInstructions","scanQrCode","scrollDown","searchAccounts","searchNfts","searchTokens","secretRecoveryPhrase","secureWallet","security","securityAlert","securityAlerts","securityAlertsDescription","securityAndPrivacy","securityProviderPoweredBy","seeAllPermissions","seeDetails","seedPhraseConfirm","seedPhraseEnterMissingWords","seedPhraseIntroNotRecommendedButtonCopy","seedPhraseIntroRecommendedButtonCopy","seedPhraseIntroSidebarBulletOne","seedPhraseIntroSidebarBulletTwo","seedPhraseIntroSidebarCopyOne","seedPhraseIntroSidebarCopyThree","seedPhraseIntroSidebarCopyTwo","seedPhraseIntroSidebarTitleOne","seedPhraseIntroSidebarTitleThree","seedPhraseIntroSidebarTitleTwo","seedPhraseIntroTitle","seedPhraseIntroTitleCopy","seedPhraseReq","seedPhraseWriteDownDetails","seedPhraseWriteDownHeader","select","selectAccounts","selectAccountsForSnap","selectAll","selectAllAccounts","selectAnAccount","selectAnAccountAlreadyConnected","selectAnAccountHelp","selectEnableDisplayMediaPrivacyPreference","selectFundingMethod","selectHdPath","selectJWT","selectNFTPrivacyPreference","selectPathHelp","selectRpcUrl","selectType","selectingAllWillAllow","sendBugReport","sendNoContactsConversionText","sendNoContactsDescription","sendNoContactsTitle","sendSelectReceiveAsset","sendSelectSendAsset","sendSpecifiedTokens","sendSwapSubmissionWarning","sendTokenAsToken","sendingAsset","sendingDisabled","sendingNativeAsset","sendingToTokenContractWarning","sendingZeroAmount","sepolia","setAdvancedPrivacySettingsDetails","setApprovalForAll","setApprovalForAllTitle","settingAddSnapAccount","settings","settingsSearchMatchingNotFound","settingsSubHeadingSignaturesAndTransactions","show","showAccount","showExtensionInFullSizeView","showExtensionInFullSizeViewDescription","showFiatConversionInTestnets","showFiatConversionInTestnetsDescription","showHexData","showHexDataDescription","showIncomingTransactions","showIncomingTransactionsDescription","showIncomingTransactionsExplainer","showLess","showMore","showNft","showPermissions","showPrivateKey","showTestnetNetworks","showTestnetNetworksDescription","sigRequest","sign","signatureRequest","signatureRequestGuidance","signed","signin","signingInWith","simulationApproveHeading","simulationDetailsApproveDesc","simulationDetailsERC20ApproveDesc","simulationDetailsFailed","simulationDetailsFiatNotAvailable","simulationDetailsIncomingHeading","simulationDetailsNoBalanceChanges","simulationDetailsOutgoingHeading","simulationDetailsTitle","simulationDetailsTitleTooltip","simulationDetailsTotalFiat","simulationDetailsTransactionReverted","simulationErrorMessageV2","simulationsSettingDescription","simulationsSettingSubHeader","siweIssued","siweNetwork","siweRequestId","siweResources","siweSignatureSimulationDetailInfo","siweURI","skipAccountSecurity","skipAccountSecurityDetails","smartContracts","smartSwapsErrorNotEnoughFunds","smartSwapsErrorUnavailable","smartTransactionCancelled","smartTransactionCancelledDescription","smartTransactionError","smartTransactionErrorDescription","smartTransactionPending","smartTransactionSuccess","smartTransactionTakingTooLong","smartTransactionTakingTooLongDescription","smartTransactions","smartTransactionsBenefit1","smartTransactionsBenefit2","smartTransactionsBenefit3","smartTransactionsDescription","smartTransactionsDescription2","smartTransactionsOptItModalTitle","snapAccountCreated","snapAccountCreatedDescription","snapAccountCreationFailed","snapAccountCreationFailedDescription","snapAccountRedirectFinishSigningTitle","snapAccountRedirectSiteDescription","snapAccountRemovalFailed","snapAccountRemovalFailedDescription","snapAccountRemoved","snapAccountRemovedDescription","snapAccounts","snapAccountsDescription","snapConnectTo","snapConnectionPermissionDescription","snapConnectionWarning","snapContent","snapDetailWebsite","snapHomeMenu","snapInstallRequest","snapInstallSuccess","snapInstallWarningCheck","snapInstallWarningHeading","snapInstallWarningPermissionDescriptionForBip32View","snapInstallWarningPermissionDescriptionForEntropy","snapInstallWarningPermissionNameForEntropy","snapInstallWarningPermissionNameForViewPublicKey","snapInstallationErrorDescription","snapInstallationErrorTitle","snapResultError","snapResultSuccess","snapResultSuccessDescription","snapUpdateAlertDescription","snapUpdateAvailable","snapUpdateErrorDescription","snapUpdateErrorTitle","snapUpdateRequest","snapUpdateSuccess","snapUrlIsBlocked","snapsConnected","snapsNoInsight","snapsPrivacyWarningFirstMessage","snapsPrivacyWarningSecondMessage","snapsPrivacyWarningThirdMessage","snapsSettings","snapsTermsOfUse","snapsToggle","snapsUIError","someNetworksMayPoseSecurity","somethingDoesntLookRight","somethingIsWrong","somethingWentWrong","speed","speedUp","speedUpCancellation","speedUpExplanation","speedUpPopoverTitle","speedUpTooltipText","speedUpTransaction","spendLimitInsufficient","spendLimitInvalid","spendLimitPermission","spendLimitRequestedBy","spendLimitTooLarge","spender","spenderTooltipDesc","spenderTooltipERC20ApproveDesc","spendingCap","spendingCapError","spendingCapErrorDescription","spendingCapRequest","spendingCapTooltipDesc","srpInputNumberOfWords","srpPasteFailedTooManyWords","srpPasteTip","srpSecurityQuizGetStarted","srpSecurityQuizImgAlt","srpSecurityQuizIntroduction","srpSecurityQuizQuestionOneQuestion","srpSecurityQuizQuestionOneRightAnswer","srpSecurityQuizQuestionOneRightAnswerDescription","srpSecurityQuizQuestionOneRightAnswerTitle","srpSecurityQuizQuestionOneWrongAnswer","srpSecurityQuizQuestionOneWrongAnswerDescription","srpSecurityQuizQuestionOneWrongAnswerTitle","srpSecurityQuizQuestionTwoQuestion","srpSecurityQuizQuestionTwoRightAnswer","srpSecurityQuizQuestionTwoRightAnswerDescription","srpSecurityQuizQuestionTwoRightAnswerTitle","srpSecurityQuizQuestionTwoWrongAnswer","srpSecurityQuizQuestionTwoWrongAnswerDescription","srpSecurityQuizQuestionTwoWrongAnswerTitle","srpSecurityQuizTitle","srpToggleShow","srpWordHidden","srpWordShown","stable","stableLowercase","stake","startYourJourney","startYourJourneyDescription","stateLogError","stateLogFileName","stateLogs","stateLogsDescription","statusNotConnected","statusNotConnectedAccount","step1LatticeWallet","step1LatticeWalletMsg","step1LedgerWallet","step1LedgerWalletMsg","step1TrezorWallet","step1TrezorWalletMsg","step2LedgerWallet","step2LedgerWalletMsg","stillGettingMessage","strong","stxCancelled","stxCancelledDescription","stxCancelledSubDescription","stxEstimatedCompletion","stxFailure","stxFailureDescription","stxOptInDescription","stxPendingPrivatelySubmittingSwap","stxPendingPubliclySubmittingSwap","stxSuccess","stxSuccessDescription","stxSwapCompleteIn","stxTryingToCancel","stxUnknown","stxUnknownDescription","stxUserCancelled","stxUserCancelledDescription","submit","submitted","suggestedBySnap","suggestedCurrencySymbol","suggestedTokenName","support","supportCenter","supportMultiRpcInformation","surveyConversion","surveyTitle","swap","swapAdjustSlippage","swapAggregator","swapAllowSwappingOf","swapAmountReceived","swapAmountReceivedInfo","swapAndSend","swapAnyway","swapApproval","swapApproveNeedMoreTokens","swapAreYouStillThere","swapAreYouStillThereDescription","swapBuildQuotePlaceHolderText","swapConfirmWithHwWallet","swapContinueSwapping","swapContractDataDisabledErrorDescription","swapContractDataDisabledErrorTitle","swapCustom","swapDecentralizedExchange","swapDirectContract","swapEditLimit","swapEnableDescription","swapEnableTokenForSwapping","swapEnterAmount","swapEstimatedNetworkFees","swapEstimatedNetworkFeesInfo","swapFailedErrorDescriptionWithSupportLink","swapFailedErrorTitle","swapFetchingQuote","swapFetchingQuoteNofN","swapFetchingQuotes","swapFetchingQuotesErrorDescription","swapFetchingQuotesErrorTitle","swapFetchingTokens","swapFromTo","swapGasFeesDetails","swapGasFeesExplanation","swapGasFeesExplanationLinkText","swapGasFeesLearnMore","swapGasFeesSplit","swapGasFeesSummary","swapHighSlippage","swapHighSlippageWarning","swapIncludesMMFee","swapIncludesMMFeeAlt","swapIncludesMetaMaskFeeViewAllQuotes","swapLearnMore","swapLiquiditySourceInfo","swapLowSlippage","swapLowSlippageError","swapMaxSlippage","swapMetaMaskFee","swapMetaMaskFeeDescription","swapNQuotesWithDot","swapNewQuoteIn","swapNoTokensAvailable","swapOnceTransactionHasProcess","swapPriceDifference","swapPriceDifferenceTitle","swapPriceImpactTooltip","swapPriceUnavailableDescription","swapPriceUnavailableTitle","swapProcessing","swapQuoteDetails","swapQuoteNofM","swapQuoteSource","swapQuotesExpiredErrorDescription","swapQuotesExpiredErrorTitle","swapQuotesNotAvailableDescription","swapQuotesNotAvailableErrorDescription","swapQuotesNotAvailableErrorTitle","swapRate","swapReceiving","swapReceivingInfoTooltip","swapRequestForQuotation","swapReviewSwap","swapSearchNameOrAddress","swapSelect","swapSelectAQuote","swapSelectAToken","swapSelectQuotePopoverDescription","swapSelectToken","swapShowLatestQuotes","swapSlippageHighDescription","swapSlippageHighTitle","swapSlippageLowDescription","swapSlippageLowTitle","swapSlippageNegative","swapSlippageNegativeDescription","swapSlippageNegativeTitle","swapSlippageOverLimitDescription","swapSlippageOverLimitTitle","swapSlippagePercent","swapSlippageTooltip","swapSlippageZeroDescription","swapSlippageZeroTitle","swapSource","swapSuggested","swapSuggestedGasSettingToolTipMessage","swapSwapFrom","swapSwapSwitch","swapSwapTo","swapToConfirmWithHwWallet","swapTokenAddedManuallyDescription","swapTokenAddedManuallyTitle","swapTokenAvailable","swapTokenBalanceUnavailable","swapTokenNotAvailable","swapTokenToToken","swapTokenVerificationAddedManually","swapTokenVerificationMessage","swapTokenVerificationOnlyOneSource","swapTokenVerificationSources","swapTokenVerifiedOn1SourceDescription","swapTokenVerifiedOn1SourceTitle","swapTooManyDecimalsError","swapTransactionComplete","swapTwoTransactions","swapUnknown","swapVerifyTokenExplanation","swapYourTokenBalance","swapZeroSlippage","swapsAdvancedOptions","swapsExcessiveSlippageWarning","swapsMaxSlippage","swapsNotEnoughForTx","swapsNotEnoughToken","swapsViewInActivity","switch","switchEthereumChainConfirmationDescription","switchEthereumChainConfirmationTitle","switchInputCurrency","switchNetwork","switchNetworks","switchToNetwork","switchToThisAccount","switchedNetworkToastDecline","switchedNetworkToastMessage","switchedTo","switchingNetworksCancelsPendingConfirmations","symbolBetweenZeroTwelve","tenPercentIncreased","terms","termsOfService","termsOfUseAgreeText","termsOfUseFooterText","termsOfUseTitle","testnets","theme","themeDescription","thingsToKeep","thirdPartySoftware","thisCollection","threeMonthsAbbreviation","tips","toAddress","toggleRequestQueueDescription","toggleRequestQueueField","toggleRequestQueueOff","toggleRequestQueueOn","tokenAlreadyAdded","tokenAutoDetection","tokenContractAddress","tokenDecimal","tokenDecimalFetchFailed","tokenDecimalTitle","tokenDetails","tokenFoundTitle","tokenId","tokenList","tokenScamSecurityRisk","tokenShowUp","tokenStandard","tokenSymbol","tokensFoundTitle","tokensInCollection","tooltipApproveButton","tooltipSatusConnected","tooltipSatusConnectedUpperCase","tooltipSatusNotConnected","totalVolume","transactionCancelAttempted","transactionCancelSuccess","transactionConfirmed","transactionCreated","transactionDataFunction","transactionDetailDappGasMoreInfo","transactionDetailDappGasTooltip","transactionDetailGasHeading","transactionDetailGasTooltipConversion","transactionDetailGasTooltipExplanation","transactionDetailGasTooltipIntro","transactionDetailGasTotalSubtitle","transactionDetailLayer2GasHeading","transactionDetailMultiLayerTotalSubtitle","transactionDropped","transactionError","transactionErrorNoContract","transactionErrored","transactionFailed","transactionFee","transactionHistoryBaseFee","transactionHistoryL1GasLabel","transactionHistoryL2GasLimitLabel","transactionHistoryL2GasPriceLabel","transactionHistoryMaxFeePerGas","transactionHistoryPriorityFee","transactionHistoryTotalGasFee","transactionNote","transactionResubmitted","transactionSettings","transactionSubmitted","transactionUpdated","transfer","transferCrypto","transferFrom","trillionAbbreviation","troubleConnectingToLedgerU2FOnFirefox","troubleConnectingToLedgerU2FOnFirefox2","troubleConnectingToLedgerU2FOnFirefoxLedgerSolution","troubleConnectingToLedgerU2FOnFirefoxLedgerSolution2","troubleConnectingToWallet","troubleStarting","trustSiteApprovePermission","tryAgain","turnOff","turnOffMetamaskNotificationsError","turnOn","turnOnMetamaskNotifications","turnOnMetamaskNotificationsButton","turnOnMetamaskNotificationsError","turnOnMetamaskNotificationsMessageFirst","turnOnMetamaskNotificationsMessagePrivacyBold","turnOnMetamaskNotificationsMessagePrivacyLink","turnOnMetamaskNotificationsMessageSecond","turnOnMetamaskNotificationsMessageThird","turnOnTokenDetection","tutorial","twelveHrTitle","typeYourSRP","u2f","unapproved","units","unknownChainWarning","unknownCollection","unknownNetwork","unknownNetworkForKeyEntropy","unknownQrCode","unlimited","unlock","unlockMessage","unpin","unrecognizedChain","unsendableAsset","unverifiedContractAddressMessage","upArrow","updateEthereumChainConfirmationDescription","updateNetworkConfirmationTitle","updateOrEditNetworkInformations","updateRequest","updatedRpcForNetworks","updatedWithDate","uploadDropFile","uploadFile","urlErrorMsg","use4ByteResolution","use4ByteResolutionDescription","useMultiAccountBalanceChecker","useMultiAccountBalanceCheckerSettingDescription","useNftDetection","useNftDetectionDescriptionText","usePhishingDetection","usePhishingDetectionDescription","useSafeChainsListValidation","useSafeChainsListValidationDescription","useSafeChainsListValidationWebsite","useSiteSuggestion","useTokenDetectionPrivacyDesc","usedByClients","userName","userOpContractDeployError","verifyContractDetails","verifyThisTokenOn","verifyThisUnconfirmedTokenOn","viewActivity","viewAllDetails","viewAllQuotes","viewContact","viewDetails","viewFullTransactionDetails","viewMore","viewOnBlockExplorer","viewOnCustomBlockExplorer","viewOnEtherscan","viewOnExplorer","viewOnOpensea","viewTransaction","viewinCustodianApp","viewinExplorer","visitSite","visitWebSite","walletConnectionGuide","walletCreationSuccessDetail","walletCreationSuccessReminder1","walletCreationSuccessReminder2","walletCreationSuccessReminder3","walletCreationSuccessReminder3BoldSection","walletCreationSuccessTitle","wantToAddThisNetwork","wantsToAddThisAsset","warningFromSnap","warningTooltipText","watchEthereumAccountsDescription","watchEthereumAccountsToggle","weak","web3","web3ShimUsageNotification","webhid","websites","welcomeBack","welcomeExploreDescription","welcomeExploreTitle","welcomeLoginDescription","welcomeLoginTitle","welcomeToMetaMask","welcomeToMetaMaskIntro","whatsNew","whatsThis","wrongNetworkName","xOfYPending","yes","you","youNeedToAllowCameraAccess","youSign","yourAccounts","yourActivity","yourBalance","yourNFTmayBeAtRisk","yourPrivateSeedPhrase","yourTransactionConfirmed","yourTransactionJustConfirmed","zeroGasPriceOnSpeedUpError","resourceNotFound","resourceUnavailable","transactionRejected","limitExceeded","unsupportedMethod","disconnected","chainDisconnected","errorValues","standard","_nullishCoalesce","lhs","rhsFn","_chunkPV5NRPSSjs","_chunkXOYARAPPjs","_chunkFBHPY3A4js","getJsonRpcError","server","getEthProviderError","EthereumProviderError","parseOpts","getMessageFromCode","_fastsafestringify","_fastsafestringify2","__super","dataHasCause","serializeCause","stringifyReplacer","isValidEthProviderCode","FALLBACK_ERROR_CODE","FALLBACK_ERROR","JSON_RPC_SERVER_ERROR_MESSAGE","fallbackMessage","isValidCode","codeString","isJsonRpcServerError","serializeObject","fallbackError","shouldIncludeStack","fallbackWithCause","buildError","_chunkHJCBU6QBjs","safeApply","SafeEventEmitter","EventEmitter","doError","events","er","listeners","copy","arrayClone","mnemonicToSeedSync","validateMnemonic","entropyToMnemonic","generateMnemonic","_assert_1","nfkd","norm","words","assertEntropy","strength","calcChecksum","bitsLeft","getCoder","checksum","radix2","passphrase","encodeMnemonicForSeedDerivation","encodedMnemonicUint8Array","pbkdf2Async","bool","lengths","outputLen","blockLen","exists","checkFinished","out","SHA2","_assert_js_1","utils_js_1","Hash","padOffset","isLE","pos","createView","toBytes","take","process","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","h","oview","outLen","digest","_cloneInto","add5L","add5H","add4H","add4L","add3H","add3L","rotlBL","rotlBH","rotlSL","rotlSH","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","fromBig","U32_MASK64","le","lst","Ah","Al","_l","_h","Bh","Bl","Cl","Ch","Dl","Dh","El","Eh","u64","HMAC","iHash","oHash","hmac_js_1","pbkdf2Init","_password","_salt","_opts","checkOpts","asyncTick","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","ti","Ti","setInt32","ui","asyncLoop","sha224","_sha2_js_1","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","W15","W2","s0","rotr","s1","T1","T2","SHA224","wrapConstructor","sha384","sha512_256","sha512_224","SHA512","_u64_js_1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","wrapXOFConstructorWithOpts","wrapConstructorWithOpts","nextTick","u32","u8","crypto_1","shift","hexes","asciis","_0","_9","_A","_F","_f","asciiToBase16","char","hl","al","ai","hi","iters","tick","ts","arrays","sum","clone","toStr","defaults","hashCons","hashC","tmp","bytesLength","SmartTransactionCancellationReason","SmartTransactionStatuses","cancellationReasonToStatusMap","SmartTransactionMinedTx","APIType","WOULD_REVERT","CANCELLED_WOULD_REVERT","TOO_CHEAP","CANCELLED_TOO_CHEAP","DEADLINE_MISSED","CANCELLED_DEADLINE_MISSED","INVALID_NONCE","CANCELLED_INVALID_NONCE","USER_CANCELLED","CANCELLED_USER_CANCELLED","PREVIOUS_TX_CANCELLED","CANCELLED_PREVIOUS_TX_CANCELLED","permissionController","addMoreAccounts","accountOrAccounts","_specifications","CaveatFactories","restrictReturnedAccounts","_permissions","RestrictedMethods","addPermittedAccount","addMorePermittedAccounts","removePermittedAccount","existingAccounts","CaveatTypes","requestAccountsPermissionWithId","createGenericPermissionValidator","caveatsToValidate","validCaveatTypes","requiredCaveats","actualCaveats","passedCaveatTypes","passedCaveatsSet","maxRequestTimeCaveatSpecifications","getMaxRequestTimeCaveat","createMaxRequestTimeMapper","getMaxRequestTimeCaveatMapper","snaps_utils_1","validateMaxRequestTimeCaveat","MaxRequestTimeStruct","assertIsMaxRequestTime","SnapCaveatType","MaxRequestTime","maxRequestTime","mapper","rest","mapperResult","foundCaveat","cronjobCaveatSpecifications","validateCronjobCaveat","getCronjobCaveatJobs","getCronjobCaveatMapper","cronjobEndowmentBuilder","permission_controller_1","permissionName","SnapEndowments","Cronjob","isCronjobSpecificationArray","jobs","specificationBuilder","_builderOptions","Endowment","SnapCronjob","_getterOptions","Snap","ethereumProviderEndowmentBuilder","EthereumProvider","homePageEndowmentBuilder","HomePage","getKeyringCaveatOrigins","getLookupMatchersCaveat","getChainIdsCaveat","getTransactionOriginCaveat","getSignatureOriginCaveat","getRpcCaveatOrigins","handlerEndowments","endowmentCaveatMappers","endowmentCaveatSpecifications","endowmentPermissionBuilders","caveats_1","cronjob_1","ethereum_provider_1","home_page_1","keyring_1","lifecycle_hooks_1","name_lookup_1","network_access_1","signature_insight_1","transaction_insight_1","web_assembly_1","networkAccessEndowmentBuilder","transactionInsightEndowmentBuilder","rpcEndowmentBuilder","webAssemblyEndowmentBuilder","nameLookupEndowmentBuilder","lifecycleHooksEndowmentBuilder","keyringEndowmentBuilder","signatureInsightEndowmentBuilder","transactionInsightCaveatSpecifications","rpcCaveatSpecifications","nameLookupCaveatSpecifications","keyringCaveatSpecifications","signatureInsightCaveatSpecifications","getTransactionInsightCaveatMapper","getRpcCaveatMapper","getNameLookupCaveatMapper","getKeyringCaveatMapper","getSignatureInsightCaveatMapper","HandlerType","OnRpcRequest","OnTransaction","OnCronjob","OnNameLookup","OnInstall","OnUpdate","OnKeyringRequest","OnHomePage","OnSignature","OnUserInput","rpc_2","signature_insight_2","transaction_insight_2","name_lookup_2","keyring_2","caveats_2","cronjob_2","Keyring","KeyringOrigin","assertIsKeyringOrigins","validateCaveatOrigins","LifecycleHooks","NameLookup","ChainIds","ChainIdsStruct","LookupMatchers","LookupMatchersStruct","matchers","permCaveat","NetworkAccess","Rpc","RpcOrigin","assertIsRpcOrigins","SignatureInsight","SignatureOrigin","allowSignatureOrigin","TransactionInsight","TransactionOrigin","allowTransactionOrigin","WebAssemblyAccess","selectHooks","createSnapsMethodMiddleware","permittedMethods","permitted_1","buildSnapRestrictedMethodSpecifications","buildSnapEndowmentSpecifications","processSnapPermissions","endowments_1","restricted_1","initialPermissions","fromEntries","initialPermission","caveatMappers","excludedEndowments","allSpecifications","excludedPermissions","hooks","restrictedMethodPermissionBuilders","specifications","methodHooks","createInterfaceHandler","snaps_sdk_1","createInterface","validatedParams","CreateInterfaceParametersStruct","getValidatedParams","ComponentOrElementStruct","InterfaceContextStruct","getAllSnapsHandler","getAllSnaps","getClientStatusHandler","_request","getIsLocked","locked","getFileHandler","GetFileArgsStruct","encoding","enumValue","AuxiliaryFileEncoding","Base64","Hex","Utf8","getSnapFile","getInterfaceStateHandler","getInterfaceState","GetInterfaceStateParametersStruct","getSnapsHandler","methodHandlers","createInterface_1","getAllSnaps_1","getClientStatus_1","getFile_1","getInterfaceState_1","getSnaps_1","invokeKeyring_1","invokeSnapSugar_1","requestSnaps_1","resolveInterface_1","updateInterface_1","wallet_getAllSnaps","wallet_getSnaps","wallet_requestSnaps","requestSnapsHandler","wallet_invokeSnap","invokeSnapSugarHandler","wallet_invokeKeyring","invokeKeyringHandler","snap_getClientStatus","snap_getFile","snap_createInterface","snap_updateInterface","updateInterfaceHandler","snap_getInterfaceState","snap_resolveInterface","resolveInterfaceHandler","handleSnapRpcRequest","getSnap","getAllowedKeyringMethods","WALLET_SNAP_PERMISSION_KEY","invokeSnapSugar","invokeSnap","handlers_1","isSnap","logError","_permissionController","CaveatMutatorFactories","targetAccount","checkSumTargetAccount","normalizeSafeAddress","newAccounts","updateValue","restrictNetworkSwitching","removeChainId","targetChainId","existingChainIds","newChainIds","getSnapPermissionsRequest","hasRequestedSnaps","invokeSnap_1","requestedSnaps","snapIdCaveat","SnapIds","permittedSnaps","requestedSnap","verifyRequestedSnapPermissions","mergedCaveatValue","installSnaps","mergedPermissionsRequest","resolveInterface","ResolveInterfaceParametersStruct","updateInterface","UpdateInterfaceParametersStruct","getBip32Entropy_1","getBip32PublicKey_1","getBip44Entropy_1","permittedCoinTypes_1","permittedDerivationPaths_1","snapIds_1","PermittedDerivationPathsCaveatSpecification","PermittedCoinTypesCaveatSpecification","SnapIdsCaveatSpecification","getBip32EntropyBuilder","permittedDerivationPathsCaveatMapper","getBip32PublicKeyBuilder","getBip44EntropyBuilder","permittedCoinTypesCaveatMapper","invokeSnapBuilder","snapIdsCaveatMapper","validateBIP44Caveat","validateBIP44Params","FORBIDDEN_COIN_TYPES","PermittedCoinTypes","validateBIP32CaveatPaths","validateBIP32Path","Bip32EntropyStruct","Infinity","PermittedDerivationPaths","caveatPath","validateSnapIdsCaveat","SnapIdsStruct","snapIds","getDialogImplementation","dialogBuilder","DIALOG_APPROVAL_TYPES","methodName","DialogType","Alert","Confirmation","Prompt","PlaceholderStruct","RestrictedMethod","getInterface","AlertParametersWithContentStruct","AlertParametersWithIdStruct","AlertParametersStruct","selectiveUnion","ConfirmationParametersWithContentStruct","ConfirmationParametersWithIdStruct","ConfirmationParametersStruct","PromptParametersWithContentStruct","placeholder","PromptParametersWithIdStruct","PromptParametersStruct","DefaultParametersWithContentStruct","DefaultParametersWithIdStruct","DefaultParametersStruct","DialogParametersStruct","getDialogType","isPromptDialog","validatedType","approvalType","validateInterface"],"mappings":"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","file":"../metamask/common-1.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountLink = exports.createCustomAccountLink = exports.createAccountLinkForChain = exports.createAccountLink = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst prefix_for_chain_1 = __importDefault(require(\"./prefix-for-chain\"));\nconst prefix_for_network_1 = __importDefault(require(\"./prefix-for-network\"));\nfunction createAccountLink(address, networkId) {\n    const prefix = prefix_for_network_1.default(networkId);\n    return prefix === null ? '' : `https://${prefix}etherscan.io/address/${address}`;\n}\nexports.createAccountLink = createAccountLink;\nfunction createAccountLinkForChain(address, chainId) {\n    const prefix = prefix_for_chain_1.default(chainId);\n    return prefix === null ? '' : `https://${prefix}etherscan.io/address/${address}`;\n}\nexports.createAccountLinkForChain = createAccountLinkForChain;\nfunction createCustomAccountLink(address, customNetworkUrl) {\n    const parsedUrl = helpers_1.addPathToUrl(customNetworkUrl, 'address', address);\n    return parsedUrl;\n}\nexports.createCustomAccountLink = createCustomAccountLink;\nfunction getAccountLink(address, chainId, rpcPrefs = {}, networkId = '') {\n    if (rpcPrefs.blockExplorerUrl) {\n        return createCustomAccountLink(address, rpcPrefs.blockExplorerUrl);\n    }\n    if (networkId) {\n        return createAccountLink(address, networkId);\n    }\n    return createAccountLinkForChain(address, chainId);\n}\nexports.getAccountLink = getAccountLink;\n//# sourceMappingURL=account-link.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockExplorerLink = exports.createExplorerLinkForChain = exports.createExplorerLink = exports.createCustomExplorerLink = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst prefix_for_chain_1 = __importDefault(require(\"./prefix-for-chain\"));\nconst prefix_for_network_1 = __importDefault(require(\"./prefix-for-network\"));\nfunction createCustomExplorerLink(hash, customNetworkUrl) {\n    const parsedUrl = helpers_1.addPathToUrl(customNetworkUrl, 'tx', hash);\n    return parsedUrl;\n}\nexports.createCustomExplorerLink = createCustomExplorerLink;\nfunction createExplorerLink(hash, network) {\n    const prefix = prefix_for_network_1.default(network);\n    return prefix === null ? '' : `https://${prefix}etherscan.io/tx/${hash}`;\n}\nexports.createExplorerLink = createExplorerLink;\nfunction createExplorerLinkForChain(hash, chainId) {\n    const prefix = prefix_for_chain_1.default(chainId);\n    return prefix === null ? '' : `https://${prefix}etherscan.io/tx/${hash}`;\n}\nexports.createExplorerLinkForChain = createExplorerLinkForChain;\nfunction getBlockExplorerLink(transaction, rpcPrefs = {}) {\n    if (rpcPrefs.blockExplorerUrl) {\n        return createCustomExplorerLink(transaction.hash, rpcPrefs.blockExplorerUrl);\n    }\n    if (transaction.chainId) {\n        return createExplorerLinkForChain(transaction.hash, transaction.chainId);\n    }\n    return createExplorerLink(transaction.hash, transaction.metamaskNetworkId);\n}\nexports.getBlockExplorerLink = getBlockExplorerLink;\n//# sourceMappingURL=explorer-link.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addPathToUrl = void 0;\nexports.addPathToUrl = (customNetworkUrl, linkType, suffixType) => {\n    const { username, password, protocol, host, pathname, search, hash } = new URL(customNetworkUrl);\n    const newPath = pathname.endsWith('/') ? `${pathname}${linkType}/${suffixType}` : `${pathname}/${linkType}/${suffixType}`;\n    const auth = username ? `${username}:${password}` : '';\n    const parsedUrl = new URL(`${protocol}//${auth}${host}${newPath}${search}${hash}`);\n    return parsedUrl.toString();\n};\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nconst account_link_1 = require(\"./account-link\");\nconst explorer_link_1 = require(\"./explorer-link\");\nconst token_tracker_link_1 = require(\"./token-tracker-link\");\nmodule.exports = {\n    createExplorerLink: explorer_link_1.createExplorerLink,\n    createCustomExplorerLink: explorer_link_1.createCustomExplorerLink,\n    createExplorerLinkForChain: explorer_link_1.createExplorerLinkForChain,\n    createAccountLink: account_link_1.createAccountLink,\n    createCustomAccountLink: account_link_1.createCustomAccountLink,\n    createAccountLinkForChain: account_link_1.createAccountLinkForChain,\n    createTokenTrackerLink: token_tracker_link_1.createTokenTrackerLink,\n    createCustomTokenTrackerLink: token_tracker_link_1.createCustomTokenTrackerLink,\n    createTokenTrackerLinkForChain: token_tracker_link_1.createTokenTrackerLinkForChain,\n    getBlockExplorerLink: explorer_link_1.getBlockExplorerLink,\n    getAccountLink: account_link_1.getAccountLink,\n    getTokenTrackerLink: token_tracker_link_1.getTokenTrackerLink,\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nmodule.exports = function getPrefixForChain(chainId) {\n    let prefix;\n    switch (chainId) {\n        case '0x1': // main net\n            prefix = '';\n            break;\n        case '0x5': // goerli test net\n            prefix = 'goerli.';\n            break;\n        case '0xaa36a7': // sepolia test net\n            prefix = 'sepolia.';\n            break;\n        default:\n            prefix = null;\n    }\n    return prefix;\n};\n//# sourceMappingURL=prefix-for-chain.js.map","\"use strict\";\nmodule.exports = function getPrefixForNetwork(networkId) {\n    // eslint-disable-next-line radix\n    const net = parseInt(networkId);\n    let prefix;\n    switch (net) {\n        case 1: // main net\n            prefix = '';\n            break;\n        case 5: // goerli test net\n            prefix = 'goerli.';\n            break;\n        case 11155111: // sepolia test net\n            prefix = 'sepolia.';\n            break;\n        default:\n            prefix = null;\n    }\n    return prefix;\n};\n//# sourceMappingURL=prefix-for-network.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTokenTrackerLink = exports.createTokenTrackerLinkForChain = exports.createCustomTokenTrackerLink = exports.createTokenTrackerLink = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst prefix_for_chain_1 = __importDefault(require(\"./prefix-for-chain\"));\nconst prefix_for_network_1 = __importDefault(require(\"./prefix-for-network\"));\nfunction createTokenTrackerLink(tokenAddress, networkId, holderAddress) {\n    const prefix = prefix_for_network_1.default(networkId);\n    return prefix === null ? '' :\n        `https://${prefix}etherscan.io/token/${tokenAddress}${holderAddress ? `?a=${holderAddress}` : ''}`;\n}\nexports.createTokenTrackerLink = createTokenTrackerLink;\nfunction createCustomTokenTrackerLink(tokenAddress, customNetworkUrl) {\n    const parsedUrl = helpers_1.addPathToUrl(customNetworkUrl, 'token', tokenAddress);\n    return parsedUrl;\n}\nexports.createCustomTokenTrackerLink = createCustomTokenTrackerLink;\nfunction createTokenTrackerLinkForChain(tokenAddress, chainId, holderAddress) {\n    const prefix = prefix_for_chain_1.default(chainId);\n    return prefix === null ? '' :\n        `https://${prefix}etherscan.io/token/${tokenAddress}${holderAddress ? `?a=${holderAddress}` : ''}`;\n}\nexports.createTokenTrackerLinkForChain = createTokenTrackerLinkForChain;\nfunction getTokenTrackerLink(tokenAddress, chainId, networkId, holderAddress, rpcPrefs = {}) {\n    if (rpcPrefs.blockExplorerUrl) {\n        return createCustomTokenTrackerLink(tokenAddress, rpcPrefs.blockExplorerUrl);\n    }\n    if (networkId) {\n        return createTokenTrackerLink(tokenAddress, networkId, holderAddress);\n    }\n    return createTokenTrackerLinkForChain(tokenAddress, chainId, holderAddress);\n}\nexports.getTokenTrackerLink = getTokenTrackerLink;\n//# sourceMappingURL=token-tracker-link.js.map","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar abi = require('ethjs-abi'); // eslint-disable-line\nvar EthFilter = require('@metamask/ethjs-filter'); // eslint-disable-line\nvar getKeys = require('@metamask/ethjs-util').getKeys; // eslint-disable-line\nvar keccak256 = require('js-sha3').keccak_256; // eslint-disable-line\nvar promiseToCallback = require('promise-to-callback');\nvar hasTransactionObject = require('./has-tx-object');\nmodule.exports = Contract;\nfunction Contract() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var self = this;\n  self.abi = opts.contractABI || [];\n  self.query = opts.query;\n  self.address = opts.address || '0x';\n  self.bytecode = opts.contractBytecode || '0x';\n  self.defaultTxObject = opts.contractDefaultTxObject || {};\n  self.filters = new EthFilter(self.query);\n  getCallableMethodsFromABI(self.abi).forEach(function (methodObject) {\n    if (methodObject.type === 'function') {\n      self[methodObject.name] = createContractFunction(methodObject);\n    } else if (methodObject.type === 'event') {\n      self[methodObject.name] = createContractEvent(methodObject);\n    }\n  });\n  function createContractEvent(methodObject) {\n    return function contractEvent() {\n      var methodArgs = [].slice.call(arguments); // eslint-disable-line\n\n      var filterInputTypes = getKeys(methodObject.inputs, 'type', false);\n      var filterTopic = \"0x\" + keccak256(methodObject.name + \"(\" + filterInputTypes.join(',') + \")\");\n      var filterTopcis = [filterTopic];\n      var argsObject = Object.assign({}, methodArgs[0]) || {};\n      var defaultFilterObject = Object.assign({}, methodArgs[0] || {}, {\n        to: self.address,\n        topics: filterTopcis\n      });\n      var filterOpts = Object.assign({}, argsObject, {\n        decoder: function decoder(logData) {\n          return abi.decodeEvent(methodObject, logData, filterTopcis);\n        },\n        defaultFilterObject: defaultFilterObject\n      });\n      return new self.filters.Filter(filterOpts);\n    };\n  }\n  function createContractFunction(methodObject) {\n    return function contractFunction() {\n      var methodCallback; // eslint-disable-line\n      var methodArgs = [].slice.call(arguments); // eslint-disable-line\n      if (typeof methodArgs[methodArgs.length - 1] === 'function') {\n        methodCallback = methodArgs.pop();\n      }\n      var promise = performCall({\n        methodObject: methodObject,\n        methodArgs: methodArgs\n      });\n      if (methodCallback) {\n        return promiseToCallback(promise)(methodCallback);\n      }\n      return promise;\n    };\n  }\n  function performCall(_x) {\n    return _performCall.apply(this, arguments);\n  }\n  function _performCall() {\n    _performCall = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(_ref) {\n      var methodObject, methodArgs, queryMethod, providedTxObject, methodTxObject, queryResult, decodedMethodResult, decodingError;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            methodObject = _ref.methodObject, methodArgs = _ref.methodArgs;\n            queryMethod = 'call'; // eslint-disable-line\n            providedTxObject = {}; // eslint-disable-line\n            if (hasTransactionObject(methodArgs)) providedTxObject = methodArgs.pop();\n            methodTxObject = Object.assign({}, self.defaultTxObject, providedTxObject, {\n              to: self.address\n            });\n            methodTxObject.data = abi.encodeMethod(methodObject, methodArgs);\n            if (methodObject.constant === false) {\n              queryMethod = 'sendTransaction';\n            }\n            _context.next = 9;\n            return self.query[queryMethod](methodTxObject);\n          case 9:\n            queryResult = _context.sent;\n            if (!(queryMethod === 'call')) {\n              _context.next = 20;\n              break;\n            }\n            _context.prev = 11;\n            decodedMethodResult = abi.decodeMethod(methodObject, queryResult);\n            return _context.abrupt(\"return\", decodedMethodResult);\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](11);\n            decodingError = new Error(\"[ethjs-contract] while formatting incoming raw call data \" + JSON.stringify(queryResult) + \" \" + _context.t0);\n            throw decodingError;\n          case 20:\n            return _context.abrupt(\"return\", queryResult);\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[11, 16]]);\n    }));\n    return _performCall.apply(this, arguments);\n  }\n}\nfunction getCallableMethodsFromABI(contractABI) {\n  return contractABI.filter(function (json) {\n    return (json.type === 'function' || json.type === 'event') && json.name.length > 0;\n  });\n}","\"use strict\";\n\nvar txObjectProperties = ['from', 'to', 'data', 'value', 'gasPrice', 'gas'];\nmodule.exports = hasTransactionObject;\nfunction hasTransactionObject(args) {\n  // bad/empty args: bad\n  if (!Array.isArray(args) || args.length === 0) {\n    return false;\n  }\n  var lastArg = args[args.length - 1];\n  // missing or non-object: bad\n  if (!lastArg) return false;\n  if (typeof lastArg !== 'object') {\n    return false;\n  }\n  // empty object: good\n  if (Object.keys(lastArg).length === 0) {\n    return true;\n  }\n  // txParams object: good\n  var keys = Object.keys(lastArg);\n  var hasMatchingKeys = txObjectProperties.some(function (value) {\n    return keys.includes(value);\n  });\n  if (hasMatchingKeys) {\n    return true;\n  }\n  // no match\n  return false;\n}","import {\n  ControllerStateChangeEvent,\n  RestrictedControllerMessenger,\n} from '@metamask/base-controller';\nimport { Hex } from '@metamask/utils';\nimport BridgeController from './bridge-controller';\nimport { BRIDGE_CONTROLLER_NAME } from './constants';\n\nexport enum BridgeFeatureFlagsKey {\n  EXTENSION_SUPPORT = 'extensionSupport',\n  NETWORK_SRC_ALLOWLIST = 'srcNetworkAllowlist',\n  NETWORK_DEST_ALLOWLIST = 'destNetworkAllowlist',\n}\n\nexport type BridgeFeatureFlags = {\n  [BridgeFeatureFlagsKey.EXTENSION_SUPPORT]: boolean;\n  [BridgeFeatureFlagsKey.NETWORK_SRC_ALLOWLIST]: Hex[];\n  [BridgeFeatureFlagsKey.NETWORK_DEST_ALLOWLIST]: Hex[];\n};\n\nexport type BridgeControllerState = {\n  bridgeFeatureFlags: BridgeFeatureFlags;\n};\n\nexport enum BridgeBackgroundAction {\n  SET_FEATURE_FLAGS = 'setBridgeFeatureFlags',\n}\n\ntype BridgeControllerAction<FunctionName extends keyof BridgeController> = {\n  type: `${typeof BRIDGE_CONTROLLER_NAME}:${FunctionName}`;\n  handler: BridgeController[FunctionName];\n};\n\n// Maps to BridgeController function names\ntype BridgeControllerActions =\n  BridgeControllerAction<BridgeBackgroundAction.SET_FEATURE_FLAGS>;\n\ntype BridgeControllerEvents = ControllerStateChangeEvent<\n  typeof BRIDGE_CONTROLLER_NAME,\n  BridgeControllerState\n>;\n\n/**\n * The messenger for the BridgeController.\n */\nexport type BridgeControllerMessenger = RestrictedControllerMessenger<\n  typeof BRIDGE_CONTROLLER_NAME,\n  BridgeControllerActions,\n  BridgeControllerEvents,\n  never,\n  never\n>;\n","\"use strict\";\n\nvar abi = require('ethjs-abi'); // eslint-disable-line\nvar keccak256 = require('js-sha3').keccak_256; // eslint-disable-line\nvar EthFilter = require('@metamask/ethjs-filter'); // eslint-disable-line\nvar getKeys = require('@metamask/ethjs-util').getKeys; // eslint-disable-line\nvar Contract = require('./contract');\nvar hasTransactionObject = require('./has-tx-object');\nmodule.exports = EthContract;\nfunction EthContract(query) {\n  return function contractFactory(contractABI, contractBytecode, contractDefaultTxObject) {\n    // validate params\n    if (!Array.isArray(contractABI)) {\n      throw new Error(\"[ethjs-contract] Contract ABI must be type Array, got type \" + typeof contractABI);\n    }\n    if (typeof contractBytecode !== 'undefined' && typeof contractBytecode !== 'string') {\n      throw new Error(\"[ethjs-contract] Contract bytecode must be type String, got type \" + typeof contractBytecode);\n    }\n    if (typeof contractDefaultTxObject !== 'undefined' && typeof contractDefaultTxObject !== 'object') {\n      throw new Error(\"[ethjs-contract] Contract default tx object must be type Object, got type \" + typeof contractABI);\n    }\n\n    // build contract object\n    var output = {};\n    output.at = function contractAtAddress(address) {\n      return new Contract({\n        address: address,\n        query: query,\n        contractBytecode: contractBytecode,\n        contractDefaultTxObject: contractDefaultTxObject,\n        contractABI: contractABI\n      });\n    };\n    output[\"new\"] = function newContract() {\n      var providedTxObject = {}; // eslint-disable-line\n      var newMethodCallback = null; // eslint-disable-line\n      var newMethodArgs = [].slice.call(arguments); // eslint-disable-line\n      if (typeof newMethodArgs[newMethodArgs.length - 1] === 'function') newMethodCallback = newMethodArgs.pop();\n      if (hasTransactionObject(newMethodArgs)) providedTxObject = newMethodArgs.pop();\n      var constructorMethod = getConstructorFromABI(contractABI);\n      var assembleTxObject = Object.assign({}, contractDefaultTxObject, providedTxObject);\n\n      // set contract deploy bytecode\n      if (contractBytecode) {\n        assembleTxObject.data = contractBytecode;\n      }\n\n      // append encoded constructor arguments\n      if (constructorMethod) {\n        var constructorBytecode = abi.encodeParams(getKeys(constructorMethod.inputs, 'type'), newMethodArgs).substring(2); // eslint-disable-line\n        assembleTxObject.data = \"\" + assembleTxObject.data + constructorBytecode;\n      }\n      return newMethodCallback ? query.sendTransaction(assembleTxObject, newMethodCallback) : query.sendTransaction(assembleTxObject);\n    };\n    return output;\n  };\n}\nfunction getConstructorFromABI(contractABI) {\n  return contractABI.filter(function (json) {\n    return json.type === 'constructor';\n  })[0];\n}","\"use strict\";\n\nfunction constructFilter(filterName, query) {\n  function Filter(options) {\n    var self = this;\n    self.filterId = null;\n    self.options = Object.assign({\n      delay: 300,\n      decoder: function decodeData(data) {\n        return data;\n      },\n      defaultFilterObject: {}\n    }, options || {});\n    self.watchers = {};\n    self.interval = setInterval(function () {\n      if (self.filterId !== null && Object.keys(self.watchers).length > 0) {\n        query.getFilterChanges(self.filterId, function (changeError, changeResult) {\n          var decodedChangeResults = [];\n          var decodingError = null; // eslint-disable-line\n\n          if (!changeError) {\n            try {\n              changeResult.forEach(function (log, logIndex) {\n                decodedChangeResults[logIndex] = changeResult[logIndex];\n                if (typeof changeResult[logIndex] === 'object') {\n                  decodedChangeResults[logIndex].data = self.options.decoder(decodedChangeResults[logIndex].data);\n                }\n              });\n            } catch (decodingErrorMesage) {\n              decodingError = new Error(\"[ethjs-filter] while decoding filter change event data from RPC '\" + JSON.stringify(decodedChangeResults) + \"': \" + decodingErrorMesage);\n            }\n          }\n          Object.keys(self.watchers).forEach(function (id) {\n            var watcher = self.watchers[id];\n            if (watcher.stop === true) {\n              delete self.watchers[id];\n              return;\n            }\n            if (decodingError) {\n              watcher.callback(decodingError, null);\n            } else if (changeError) {\n              watcher.callback(changeError, null);\n            } else if (Array.isArray(decodedChangeResults) && changeResult.length > 0) {\n              watcher.callback(changeError, decodedChangeResults);\n            }\n          });\n        });\n      }\n    }, self.options.delay);\n  }\n  Filter.prototype.at = function atFilter(filterId) {\n    var self = this;\n    self.filterId = filterId;\n  };\n  Filter.prototype.watch = function watchFilter(watchCallbackInput) {\n    var callback = watchCallbackInput || function () {}; // eslint-disable-line\n    var self = this;\n    var id = Math.random().toString(36).substring(7);\n    self.watchers[id] = {\n      callback: callback,\n      stop: false,\n      stopWatching: function stopWatching() {\n        self.watchers[id].stop = true;\n      }\n    };\n    return self.watchers[id];\n  };\n  Filter.prototype.uninstall = function uninstallFilter(cb) {\n    var self = this;\n    var callback = cb || null;\n    self.watchers = Object.assign({});\n    clearInterval(self.interval);\n    var prom = new Promise(function (resolve, reject) {\n      query.uninstallFilter(self.filterId, function (uninstallError, uninstallResilt) {\n        if (uninstallError) {\n          reject(uninstallError);\n        } else {\n          resolve(uninstallResilt);\n        }\n      });\n    });\n    if (callback) {\n      prom.then(function (res) {\n        return callback(null, res);\n      })[\"catch\"](function (err) {\n        return callback(err, null);\n      });\n    }\n    return callback ? null : prom;\n  };\n  Filter.prototype[\"new\"] = function newFilter() {\n    var callback = null; // eslint-disable-line\n    var self = this;\n    var filterInputs = [];\n    var args = [].slice.call(arguments); // eslint-disable-line\n    // pop callback if provided\n    if (typeof args[args.length - 1] === 'function') {\n      callback = args.pop();\n    }\n\n    // if a param object was presented, push that into the inputs\n    if (filterName === 'Filter') {\n      filterInputs.push(Object.assign(self.options.defaultFilterObject, args[args.length - 1] || {}));\n    }\n    var prom = new Promise(function (resolve, reject) {\n      // add complex callback\n      filterInputs.push(function (setupError, filterId) {\n        if (!setupError) {\n          self.filterId = filterId;\n          resolve(filterId);\n        } else {\n          reject(setupError);\n        }\n      });\n\n      // apply filter, call new.. filter method\n      // eslint-disable-next-line prefer-spread\n      query[\"new\" + filterName].apply(query, filterInputs);\n    });\n    if (callback) {\n      prom.then(function (res) {\n        return callback(null, res);\n      })[\"catch\"](function (err) {\n        return callback(err, null);\n      });\n    }\n    return callback ? null : prom;\n  };\n  return Filter;\n}\n\n/**\n * EthFilter constructor, intakes a query, helps manage filter event polling\n *\n * @method EthFilter\n * @param {Object} query the `ethjs-query` or `eth-query` object\n * @returns {Object} output an EthFilter instance\n * @throws error if new is not used\n */\n\nfunction EthFilter(query) {\n  var self = this;\n  if (!(self instanceof EthFilter)) {\n    throw new Error('the EthFilter object must be instantiated with `new` flag.. (e.g. `const filters = new EthFilter(query);`)');\n  }\n  if (typeof query !== 'object') {\n    throw new Error('the EthFilter object must be instantiated with an EthQuery instance (e.g. `const filters = new EthFilter(new EthQuery(provider));`). See github.com/ethjs/ethjs-query for more details..');\n  }\n  self.Filter = constructFilter('Filter', query);\n  self.BlockFilter = constructFilter('BlockFilter', query);\n  self.PendingTransactionFilter = constructFilter('PendingTransactionFilter', query);\n}\n\n// export EthFilter\nmodule.exports = EthFilter;","\"use strict\";\n\nvar numberToBN = require('@metamask/number-to-bn');\nvar schema = require('ethjs-schema');\nvar _require = require('@metamask/ethjs-util'),\n  arrayContainsArray = _require.arrayContainsArray,\n  getBinarySize = _require.getBinarySize,\n  padToEven = _require.padToEven;\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Format quantity values, either encode to hex or decode to BigNumber\n * should intake null, stringNumber, number, BN\n *\n * @method formatQuantity\n * @param {String|BigNumber|Number} value quantity or tag to convert\n * @param {Boolean} encode to hex or decode to BigNumber\n * @returns {Optional} output to BigNumber or string\n * @throws error if value is a float\n */\nfunction formatQuantity(value, encode, pad) {\n  if (['string', 'number', 'object'].indexOf(typeof value) === -1 || value === null) {\n    return value;\n  }\n  var numberValue = numberToBN(value);\n  var numPadding = pad && numberValue.toString(16).length % 2 ? '0' : '';\n  if (numberToBN(value).isNeg()) {\n    throw new Error(\"[ethjs-format] while formatting quantity '\" + numberValue.toString(10) + \"', invalid negative number. Number must be positive or zero.\");\n  }\n  return encode ? \"0x\" + numPadding + numberValue.toString(16) : numberValue;\n}\n\n/**\n * Format quantity or tag, if tag bypass return, else format quantity\n * should intake null, stringNumber, number, BN, string tag\n *\n * @method formatQuantityOrTag\n * @param {String|BigNumber|Number} value quantity or tag to convert\n * @param {Boolean} encode encode the number to hex or decode to BigNumber\n * @returns {Object|String} output to BigNumber or string\n * @throws error if value is a float\n */\nfunction formatQuantityOrTag(value, encode) {\n  var output = value; // eslint-disable-line\n\n  // if the value is a tag, bypass\n  if (schema.tags.indexOf(value) === -1) {\n    output = formatQuantity(value, encode);\n  }\n  return output;\n}\n\n/**\n * FormatData under strict conditions hex prefix\n *\n * @method formatData\n * @param {String} value the bytes data to be formatted\n * @param {Number} byteLength the required byte length (usually 20 or 32)\n * @returns {String} output output formatted data\n * @throws error if minimum length isnt met\n */\nfunction formatData(value, byteLength) {\n  var output = value; // eslint-disable-line\n  var outputByteLength = 0; // eslint-disable-line\n\n  // prefix only under strict conditions, else bypass\n  if (typeof value === 'string') {\n    output = \"0x\" + padToEven(stripHexPrefix(value));\n    outputByteLength = getBinarySize(output);\n  }\n\n  // format double padded zeros.\n  if (output === '0x00') {\n    output = '0x0';\n  }\n\n  // throw if bytelength is not correct\n  if (typeof byteLength === 'number' && value !== null && output !== '0x' && output !== '0x0' // support empty values\n  && (!/^[0-9A-Fa-f]+$/.test(stripHexPrefix(output)) || outputByteLength !== 2 + byteLength * 2)) {\n    throw new Error(\"[ethjs-format] hex string '\" + output + \"' must be an alphanumeric \" + (2 + byteLength * 2) + \" utf8 byte hex (chars: a-fA-F) string, is \" + outputByteLength + \" bytes\");\n  }\n  return output;\n}\n\n/**\n * Format object, even with random RPC caviets\n *\n * @method formatObject\n * @param {String|Array} formatter the unit to convert to, default ether\n * @param {Object} value the object value\n * @param {Boolean} encode encode to hex or decode to BigNumber\n * @returns {Object} output object\n * @throws error if value is a float\n */\nfunction formatObject(formatter, value, encode) {\n  var output = Object.assign({}, value); // eslint-disable-line\n  var formatObject = null; // eslint-disable-line\n\n  // if the object is a string flag, then retreive the object\n  if (typeof formatter === 'string') {\n    if (formatter === 'Boolean|EthSyncing') {\n      formatObject = Object.assign({}, schema.objects.EthSyncing);\n    } else if (formatter === 'DATA|Transaction') {\n      formatObject = Object.assign({}, schema.objects.Transaction);\n    } else {\n      formatObject = Object.assign({}, schema.objects[formatter]);\n    }\n  }\n\n  // check if all required data keys are fulfilled\n  if (!arrayContainsArray(Object.keys(value), formatObject.__required)) {\n    // eslint-disable-line\n    throw new Error(\"[ethjs-format] object \" + JSON.stringify(value) + \" must contain properties: \" + formatObject.__required.join(', ')); // eslint-disable-line\n  }\n\n  // assume formatObject is an object, go through keys and format each\n  Object.keys(formatObject).forEach(function (valueKey) {\n    if (valueKey !== '__required' && typeof value[valueKey] !== 'undefined') {\n      output[valueKey] = format(formatObject[valueKey], value[valueKey], encode);\n    }\n  });\n  return output;\n}\n\n/**\n * Format array\n *\n * @method formatArray\n * @param {String|Array} formatter the unit to convert to, default ether\n * @param {Object} value the value in question\n * @param {Boolean} encode encode to hex or decode to BigNumber\n * @param {Number} lengthRequirement the required minimum array length\n * @returns {Object} output object\n * @throws error if minimum length isnt met\n */\nfunction formatArray(formatter, value, encode, lengthRequirement) {\n  var output = value.slice(); // eslint-disable-line\n  var formatObject = formatter; // eslint-disable-line\n\n  // if the formatter is an array or data, then make format object an array data\n  if (formatter === 'Array|DATA') {\n    formatObject = ['D'];\n  }\n\n  // if formatter is a FilterChange and acts like a BlockFilter\n  // or PendingTx change format object to tx hash array\n  if (formatter === 'FilterChange' && typeof value[0] === 'string') {\n    formatObject = ['D32'];\n  }\n\n  // enforce minimum value length requirements\n  if (encode === true && typeof lengthRequirement === 'number' && value.length < lengthRequirement) {\n    throw new Error(\"array \" + JSON.stringify(value) + \" must contain at least \" + lengthRequirement + \" params, but only contains \" + value.length + \".\"); // eslint-disable-line\n  }\n\n  // make new array, avoid mutation\n  formatObject = formatObject.slice();\n\n  // assume formatObject is an object, go through keys and format each\n  value.forEach(function (valueKey, valueIndex) {\n    // use key zero as formatter for all values, unless otherwise specified\n    var formatObjectKey = 0; // eslint-disable-line\n\n    // if format array is exact, check each argument against formatter argument\n    if (formatObject.length > 1) {\n      formatObjectKey = valueIndex;\n    }\n    output[valueIndex] = format(formatObject[formatObjectKey], valueKey, encode);\n  });\n  return output;\n}\n\n/**\n * Format various kinds of data to RPC spec or into digestable JS objects\n *\n * @method format\n * @param {String|Array} formatter the data formatter\n * @param {String|Array|Object|Null|Number} value the data value input\n * @param {Boolean} encode encode to hex or decode to BigNumbers, Strings, Booleans, Null\n * @param {Number} lengthRequirement the minimum data length requirement\n * @throws error if minimum length isnt met\n */\nfunction format(formatter, value, encode, lengthRequirement) {\n  var output = value; // eslint-disable-line\n\n  // if formatter is quantity or quantity or tag\n  if (formatter === 'Q') {\n    output = formatQuantity(value, encode);\n  } else if (formatter === 'QP') {\n    output = formatQuantity(value, encode, true);\n  } else if (formatter === 'Q|T') {\n    output = formatQuantityOrTag(value, encode);\n  } else if (formatter === 'D') {\n    output = formatData(value); // dont format data flagged objects like compiler output\n  } else if (formatter === 'D20') {\n    output = formatData(value, 20); // dont format data flagged objects like compiler output\n  } else if (formatter === 'D32') {\n    output = formatData(value, 32); // dont format data flagged objects like compiler output\n  } else if (typeof value === 'object'\n  // if value is an object or array\n  && value !== null && Array.isArray(value) === false) {\n    output = formatObject(formatter, value, encode);\n  } else if (Array.isArray(value)) {\n    output = formatArray(formatter, value, encode, lengthRequirement);\n  }\n  return output;\n}\n\n/**\n * Format RPC inputs generally to the node or TestRPC\n *\n * @method formatInputs\n * @param {Object} method the data formatter\n * @param {Array} inputs the data inputs\n * @returns {Array} output the formatted inputs array\n * @throws error if minimum length isnt met\n */\nfunction formatInputs(method, inputs) {\n  return format(schema.methods[method][0], inputs, true, schema.methods[method][2]);\n}\n\n/**\n * Format RPC outputs generally from the node or TestRPC\n *\n * @method formatOutputs\n * @param {Object} method the data formatter\n * @param {Array|String|Null|Boolean|Object} outputs the data inputs\n * @returns {Array|String|Null|Boolean|Object} output the formatted data\n */\nfunction formatOutputs(method, outputs) {\n  return format(schema.methods[method][1], outputs, false);\n}\n\n// export formatters\nmodule.exports = {\n  schema: schema,\n  formatQuantity: formatQuantity,\n  formatQuantityOrTag: formatQuantityOrTag,\n  formatObject: formatObject,\n  formatArray: formatArray,\n  format: format,\n  formatInputs: formatInputs,\n  formatOutputs: formatOutputs\n};","\"use strict\";\n\nvar format = require('@metamask/ethjs-format');\nvar EthRPC = require('@metamask/ethjs-rpc');\nvar promiseToCallback = require('promise-to-callback');\nmodule.exports = Eth;\nfunction Eth(provider, options) {\n  var self = this;\n  var optionsObject = options || {};\n  if (!(this instanceof Eth)) {\n    throw new Error('[ethjs-query] the Eth object requires the \"new\" flag in order to function normally (i.e. `const eth = new Eth(provider);`).');\n  }\n  if (typeof provider !== 'object') {\n    throw new Error(\"[ethjs-query] the Eth object requires that the first input 'provider' must be an object, got '\" + typeof provider + \"' (i.e. 'const eth = new Eth(provider);')\");\n  }\n  self.options = Object.assign({\n    debug: optionsObject.debug || false,\n    logger: optionsObject.logger || console,\n    jsonSpace: optionsObject.jsonSpace || 0\n  });\n  self.rpc = new EthRPC(provider);\n  self.setProvider = self.rpc.setProvider;\n}\nEth.prototype.log = function log(message) {\n  var self = this;\n  if (self.options.debug) self.options.logger.log(\"[ethjs-query log] \" + message);\n};\nObject.keys(format.schema.methods).forEach(function (rpcMethodName) {\n  Object.defineProperty(Eth.prototype, rpcMethodName.replace('eth_', ''), {\n    enumerable: true,\n    value: generateFnFor(rpcMethodName, format.schema.methods[rpcMethodName])\n  });\n});\nfunction generateFnFor(rpcMethodName, methodObject) {\n  return function outputMethod() {\n    var callback = null; // eslint-disable-line\n    var inputs = null; // eslint-disable-line\n    var inputError = null; // eslint-disable-line\n    var self = this;\n    var args = [].slice.call(arguments); // eslint-disable-line\n    var protoMethodName = rpcMethodName.replace('eth_', ''); // eslint-disable-line\n\n    if (args.length > 0 && typeof args[args.length - 1] === 'function') {\n      callback = args.pop();\n    }\n    var promise = performCall.call(this);\n\n    // if callback provided, convert promise to callback\n    if (callback) {\n      return promiseToCallback(promise)(callback);\n    }\n\n    // only return promise if no callback provided\n    return promise;\n    function performCall() {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        // validate arg length\n        if (args.length < methodObject[2]) {\n          reject(new Error(\"[ethjs-query] method '\" + protoMethodName + \"' requires at least \" + methodObject[2] + \" input (format type \" + methodObject[0][0] + \"), \" + args.length + \" provided. For more information visit: https://github.com/ethereum/wiki/wiki/JSON-RPC#\" + rpcMethodName.toLowerCase()));\n          return;\n        }\n        if (args.length > methodObject[0].length) {\n          reject(new Error(\"[ethjs-query] method '\" + protoMethodName + \"' requires at most \" + methodObject[0].length + \" params, \" + args.length + \" provided '\" + JSON.stringify(args, null, self.options.jsonSpace) + \"'. For more information visit: https://github.com/ethereum/wiki/wiki/JSON-RPC#\" + rpcMethodName.toLowerCase()));\n          return;\n        }\n\n        // set default block\n        if (methodObject[3] && args.length < methodObject[3]) {\n          args.push('latest');\n        }\n\n        // format inputs\n        _this.log(\"attempting method formatting for '\" + protoMethodName + \"' with inputs \" + JSON.stringify(args, null, _this.options.jsonSpace));\n        try {\n          inputs = format.formatInputs(rpcMethodName, args);\n          _this.log(\"method formatting success for '\" + protoMethodName + \"' with formatted result: \" + JSON.stringify(inputs, null, _this.options.jsonSpace));\n        } catch (formattingError) {\n          reject(new Error(\"[ethjs-query] while formatting inputs '\" + JSON.stringify(args, null, _this.options.jsonSpace) + \"' for method '\" + protoMethodName + \"' error: \" + formattingError));\n          return;\n        }\n\n        // perform rpc call\n        _this.rpc.sendAsync({\n          method: rpcMethodName,\n          params: inputs\n        }).then(function (result) {\n          // format result\n          _this.log(\"attempting method formatting for '\" + protoMethodName + \"' with raw outputs: \" + JSON.stringify(result, null, _this.options.jsonSpace));\n          var methodOutputs = format.formatOutputs(rpcMethodName, result);\n          _this.log(\"method formatting success for '\" + protoMethodName + \"' formatted result: \" + JSON.stringify(methodOutputs, null, _this.options.jsonSpace));\n          resolve(methodOutputs);\n        })[\"catch\"](function (error) {\n          reject(error);\n        });\n      });\n    }\n  };\n}","\"use strict\";\n\nvar promiseToCallback = require('promise-to-callback');\nmodule.exports = EthRPC;\n\n/**\n * Constructs the EthRPC instance\n *\n * @method EthRPC\n * @param {Object} cprovider the eth rpc provider web3 standard..\n * @param {Object} options the options, if any\n * @returns {Object} ethrpc instance\n */\nfunction EthRPC(cprovider, options) {\n  var self = this;\n  var optionsObject = options || {};\n  if (!(this instanceof EthRPC)) {\n    throw new Error('[ethjs-rpc] the EthRPC object requires the \"new\" flag in order to function normally (i.e. `const eth = new EthRPC(provider);`).');\n  }\n  self.options = Object.assign({\n    jsonSpace: optionsObject.jsonSpace || 0,\n    max: optionsObject.max || 9999999999999\n  });\n  self.idCounter = Math.floor(Math.random() * self.options.max);\n  self.setProvider = function (provider) {\n    if (typeof provider !== 'object') {\n      throw new Error(\"[ethjs-rpc] the EthRPC object requires that the first input 'provider' must be an object, got '\" + typeof provider + \"' (i.e. 'const eth = new EthRPC(provider);')\");\n    }\n    self.currentProvider = provider;\n  };\n  self.setProvider(cprovider);\n}\n\n/**\n * The main send async method\n *\n * @method sendAsync\n * @param {Object} payload the rpc payload object\n * @param {Function} cb the async standard callback\n * @callback {Object|Array|Boolean|String} vary result instance output\n */\nEthRPC.prototype.sendAsync = function sendAsync(payload, callback) {\n  var self = this;\n  self.idCounter = self.idCounter % self.options.max;\n  var parsedPayload = createPayload(payload, self.idCounter++);\n  var promise = new Promise(function (resolve, reject) {\n    self.currentProvider.sendAsync(parsedPayload, function (err, response) {\n      var responseObject = response || {};\n      if (err || responseObject.error) {\n        var payloadErrorMessage = \"[ethjs-rpc] \" + (responseObject.error && 'rpc' || '') + \" error with payload \" + JSON.stringify(parsedPayload, null, self.options.jsonSpace) + \" \" + (err ? String(err) : JSON.stringify(responseObject.error, null, self.options.jsonSpace));\n        var payloadError = new Error(payloadErrorMessage);\n        payloadError.value = err || responseObject.error;\n        reject(payloadError);\n        return;\n      }\n      resolve(responseObject.result);\n    });\n  });\n  if (callback) {\n    // connect promise resolve handlers to callback\n    return promiseToCallback(promise)(callback);\n  }\n\n  // only return promise if no callback specified\n  return promise;\n};\n\n/**\n * A simple create payload method\n *\n * @method createPayload\n * @param {Object} data the rpc payload data\n * @param {String} id the rpc data payload ID\n * @returns {Object} payload the completed payload object\n */\nfunction createPayload(data, id) {\n  return Object.assign({}, {\n    id: id,\n    jsonrpc: '2.0',\n    params: []\n  }, data);\n}","\"use strict\";\n\n/*\nPrimary Attribution\nRichard Moore <ricmoo@me.com>\nhttps://github.com/ethers-io\n\nNote, Richard is a god of ether gods. Follow and respect him, and use Ethers.io!\n*/\n\nvar BN = require('bn.js');\nvar numberToBN = require('@metamask/number-to-bn');\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0',\n  // eslint-disable-line\n  'wei': '1',\n  // eslint-disable-line\n  'kwei': '1000',\n  // eslint-disable-line\n  'Kwei': '1000',\n  // eslint-disable-line\n  'babbage': '1000',\n  // eslint-disable-line\n  'femtoether': '1000',\n  // eslint-disable-line\n  'mwei': '1000000',\n  // eslint-disable-line\n  'Mwei': '1000000',\n  // eslint-disable-line\n  'lovelace': '1000000',\n  // eslint-disable-line\n  'picoether': '1000000',\n  // eslint-disable-line\n  'gwei': '1000000000',\n  // eslint-disable-line\n  'Gwei': '1000000000',\n  // eslint-disable-line\n  'shannon': '1000000000',\n  // eslint-disable-line\n  'nanoether': '1000000000',\n  // eslint-disable-line\n  'nano': '1000000000',\n  // eslint-disable-line\n  'szabo': '1000000000000',\n  // eslint-disable-line\n  'microether': '1000000000000',\n  // eslint-disable-line\n  'micro': '1000000000000',\n  // eslint-disable-line\n  'finney': '1000000000000000',\n  // eslint-disable-line\n  'milliether': '1000000000000000',\n  // eslint-disable-line\n  'milli': '1000000000000000',\n  // eslint-disable-line\n  'ether': '1000000000000000000',\n  // eslint-disable-line\n  'kether': '1000000000000000000000',\n  // eslint-disable-line\n  'grand': '1000000000000000000000',\n  // eslint-disable-line\n  'mether': '1000000000000000000000000',\n  // eslint-disable-line\n  'gether': '1000000000000000000000000000',\n  // eslint-disable-line\n  'tether': '1000000000000000000000000000000' // eslint-disable-line\n};\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error(\"[ethjs-unit] the unit provided \" + unitInput + \" doesn't exists, please use the one of the following units \" + JSON.stringify(unitMap, null, 2));\n  }\n  return new BN(unitValue, 10);\n}\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error(\"while converting number to string, invalid number value '\" + arg + \"', should be a number matching (^-?[0-9.]+).\");\n    }\n    return arg;\n  }\n  if (typeof arg === 'number') {\n    return String(arg);\n  }\n  if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    }\n    return arg.toString(10);\n  }\n  throw new Error(\"while converting number to string, invalid number value '\" + arg + \"' type \" + typeof arg + \".\");\n}\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = \"0\" + fraction;\n  }\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1]; // eslint-disable-line prefer-destructuring\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n  var value = \"\" + whole + (fraction == '0' ? '' : \".\" + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = \"-\" + value;\n  }\n  return value;\n}\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n  if (ether === '.') {\n    throw new Error(\"[ethjs-unit] while converting number \" + etherInput + \" to wei, invalid value\");\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error(\"[ethjs-unit] while converting number \" + etherInput + \" to wei,  too many decimal points\");\n  }\n  var whole = comps[0],\n    fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error(\"[ethjs-unit] while converting number \" + etherInput + \" to wei, too many decimal places\");\n  }\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n  return new BN(wei.toString(10), 10);\n}\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};","\"use strict\";\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error(\"[ethjs-util] while padding to even, value must be string, is currently \" + typeof a + \", while padToEven.\");\n  }\n  if (a.length % 2) {\n    a = \"0\" + a;\n  }\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return \"0x\" + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n  return Buffer.from(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '\" + typeof str + \"'.\");\n  }\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\"[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '\" + typeof superset + \"'\");\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\"[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '\" + typeof subset + \"'\");\n  }\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = Buffer.from(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n    l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = Buffer.from(stringValue, 'utf8');\n  return \"0x\" + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? \"0\" + n : n;\n  }\n  return \"0x\" + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error(\"[ethjs-util] method getKeys expecting type Array as 'params' input, got '\" + typeof params + \"'\");\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\"[ethjs-util] method getKeys expecting type String for input 'key' got '\" + typeof key + \"'.\");\n  }\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n  return true;\n}\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/gas-util.ts\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _bnjs = require('bn.js'); var _bnjs2 = _interopRequireDefault(_bnjs);\nvar makeClientIdHeader = (clientId) => ({ \"X-Client-Id\": clientId });\nfunction normalizeGWEIDecimalNumbers(n) {\n  const numberAsWEIHex = _controllerutils.gweiDecToWEIBN.call(void 0, n).toString(16);\n  const numberAsGWEI = _controllerutils.weiHexToGweiDec.call(void 0, numberAsWEIHex);\n  return numberAsGWEI;\n}\nasync function fetchGasEstimates(url, clientId) {\n  const estimates = await _controllerutils.handleFetch.call(void 0, \n    url,\n    clientId ? { headers: makeClientIdHeader(clientId) } : void 0\n  );\n  return {\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(\n        estimates.low.suggestedMaxPriorityFeePerGas\n      ),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(\n        estimates.low.suggestedMaxFeePerGas\n      )\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(\n        estimates.medium.suggestedMaxPriorityFeePerGas\n      ),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(\n        estimates.medium.suggestedMaxFeePerGas\n      )\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(\n        estimates.high.suggestedMaxPriorityFeePerGas\n      ),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(\n        estimates.high.suggestedMaxFeePerGas\n      )\n    },\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    historicalBaseFeeRange: estimates.historicalBaseFeeRange,\n    baseFeeTrend: estimates.baseFeeTrend,\n    latestPriorityFeeRange: estimates.latestPriorityFeeRange,\n    historicalPriorityFeeRange: estimates.historicalPriorityFeeRange,\n    priorityFeeTrend: estimates.priorityFeeTrend,\n    networkCongestion: estimates.networkCongestion\n  };\n}\nasync function fetchLegacyGasPriceEstimates(url, clientId) {\n  const result = await _controllerutils.handleFetch.call(void 0, url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...clientId && makeClientIdHeader(clientId)\n    }\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice\n  };\n}\nasync function fetchEthGasPriceEstimate(ethQuery) {\n  const gasPrice = await _controllerutils.query.call(void 0, ethQuery, \"gasPrice\");\n  return {\n    gasPrice: _controllerutils.weiHexToGweiDec.call(void 0, gasPrice).toString()\n  };\n}\nfunction calculateTimeEstimate(maxPriorityFeePerGas, maxFeePerGas, gasFeeEstimates) {\n  const { low, medium, high, estimatedBaseFee } = gasFeeEstimates;\n  const maxPriorityFeePerGasInWEI = _controllerutils.gweiDecToWEIBN.call(void 0, maxPriorityFeePerGas);\n  const maxFeePerGasInWEI = _controllerutils.gweiDecToWEIBN.call(void 0, maxFeePerGas);\n  const estimatedBaseFeeInWEI = _controllerutils.gweiDecToWEIBN.call(void 0, estimatedBaseFee);\n  const effectiveMaxPriorityFee = _bnjs2.default.min(\n    maxPriorityFeePerGasInWEI,\n    maxFeePerGasInWEI.sub(estimatedBaseFeeInWEI)\n  );\n  const lowMaxPriorityFeeInWEI = _controllerutils.gweiDecToWEIBN.call(void 0, \n    low.suggestedMaxPriorityFeePerGas\n  );\n  const mediumMaxPriorityFeeInWEI = _controllerutils.gweiDecToWEIBN.call(void 0, \n    medium.suggestedMaxPriorityFeePerGas\n  );\n  const highMaxPriorityFeeInWEI = _controllerutils.gweiDecToWEIBN.call(void 0, \n    high.suggestedMaxPriorityFeePerGas\n  );\n  let lowerTimeBound;\n  let upperTimeBound;\n  if (effectiveMaxPriorityFee.lt(lowMaxPriorityFeeInWEI)) {\n    lowerTimeBound = null;\n    upperTimeBound = \"unknown\";\n  } else if (effectiveMaxPriorityFee.gte(lowMaxPriorityFeeInWEI) && effectiveMaxPriorityFee.lt(mediumMaxPriorityFeeInWEI)) {\n    lowerTimeBound = low.minWaitTimeEstimate;\n    upperTimeBound = low.maxWaitTimeEstimate;\n  } else if (effectiveMaxPriorityFee.gte(mediumMaxPriorityFeeInWEI) && effectiveMaxPriorityFee.lt(highMaxPriorityFeeInWEI)) {\n    lowerTimeBound = medium.minWaitTimeEstimate;\n    upperTimeBound = medium.maxWaitTimeEstimate;\n  } else if (effectiveMaxPriorityFee.eq(highMaxPriorityFeeInWEI)) {\n    lowerTimeBound = high.minWaitTimeEstimate;\n    upperTimeBound = high.maxWaitTimeEstimate;\n  } else {\n    lowerTimeBound = 0;\n    upperTimeBound = high.maxWaitTimeEstimate;\n  }\n  return {\n    lowerTimeBound,\n    upperTimeBound\n  };\n}\n\n\n\n\n\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod; exports.normalizeGWEIDecimalNumbers = normalizeGWEIDecimalNumbers; exports.fetchGasEstimates = fetchGasEstimates; exports.fetchLegacyGasPriceEstimates = fetchLegacyGasPriceEstimates; exports.fetchEthGasPriceEstimate = fetchEthGasPriceEstimate; exports.calculateTimeEstimate = calculateTimeEstimate;\n//# sourceMappingURL=chunk-2MFVV2BX.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n\n\n\n\n\n\nvar _chunk2MFVV2BXjs = require('./chunk-2MFVV2BX.js');\n\n// src/GasFeeController.ts\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _ethquery = require('@metamask/eth-query'); var _ethquery2 = _interopRequireDefault(_ethquery);\nvar _pollingcontroller = require('@metamask/polling-controller');\nvar _uuid = require('uuid');\nvar LEGACY_GAS_PRICES_API_URL = `https://api.metaswap.codefi.network/gasPrices`;\nvar GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\"\n};\nvar metadata = {\n  gasFeeEstimatesByChainId: {\n    persist: true,\n    anonymous: false\n  },\n  gasFeeEstimates: { persist: true, anonymous: false },\n  estimatedGasFeeTimeBounds: { persist: true, anonymous: false },\n  gasEstimateType: { persist: true, anonymous: false },\n  nonRPCGasFeeApisDisabled: { persist: true, anonymous: false }\n};\nvar name = \"GasFeeController\";\nvar defaultState = {\n  gasFeeEstimatesByChainId: {},\n  gasFeeEstimates: {},\n  estimatedGasFeeTimeBounds: {},\n  gasEstimateType: GAS_ESTIMATE_TYPES.NONE,\n  nonRPCGasFeeApisDisabled: false\n};\nvar _getProvider, _onNetworkControllerDidChange, onNetworkControllerDidChange_fn;\nvar GasFeeController = class extends _pollingcontroller.StaticIntervalPollingController {\n  /**\n   * Creates a GasFeeController instance.\n   *\n   * @param options - The controller options.\n   * @param options.interval - The time in milliseconds to wait between polls.\n   * @param options.messenger - The controller messenger.\n   * @param options.state - The initial state.\n   * @param options.getCurrentNetworkEIP1559Compatibility - Determines whether or not the current\n   * network is EIP-1559 compatible.\n   * @param options.getCurrentNetworkLegacyGasAPICompatibility - Determines whether or not the\n   * current network is compatible with the legacy gas price API.\n   * @param options.getCurrentAccountEIP1559Compatibility - Determines whether or not the current\n   * account is EIP-1559 compatible.\n   * @param options.getChainId - Returns the current chain ID.\n   * @param options.getProvider - Returns a network provider for the current network.\n   * @param options.onNetworkDidChange - A function for registering an event handler for the\n   * network state change event.\n   * @param options.legacyAPIEndpoint - The legacy gas price API URL. This option is primarily for\n   * testing purposes.\n   * @param options.EIP1559APIEndpoint - The EIP-1559 gas price API URL.\n   * @param options.clientId - The client ID used to identify to the gas estimation API who is\n   * asking for estimates.\n   */\n  constructor({\n    interval = 15e3,\n    messenger,\n    state,\n    getCurrentNetworkEIP1559Compatibility,\n    getCurrentAccountEIP1559Compatibility,\n    getChainId,\n    getCurrentNetworkLegacyGasAPICompatibility,\n    getProvider,\n    onNetworkDidChange,\n    legacyAPIEndpoint = LEGACY_GAS_PRICES_API_URL,\n    EIP1559APIEndpoint,\n    clientId\n  }) {\n    super({\n      name,\n      metadata,\n      messenger,\n      state: { ...defaultState, ...state }\n    });\n    _chunk2MFVV2BXjs.__privateAdd.call(void 0, this, _onNetworkControllerDidChange);\n    _chunk2MFVV2BXjs.__privateAdd.call(void 0, this, _getProvider, void 0);\n    this.intervalDelay = interval;\n    this.setIntervalLength(interval);\n    this.pollTokens = /* @__PURE__ */ new Set();\n    this.getCurrentNetworkEIP1559Compatibility = getCurrentNetworkEIP1559Compatibility;\n    this.getCurrentNetworkLegacyGasAPICompatibility = getCurrentNetworkLegacyGasAPICompatibility;\n    this.getCurrentAccountEIP1559Compatibility = getCurrentAccountEIP1559Compatibility;\n    _chunk2MFVV2BXjs.__privateSet.call(void 0, this, _getProvider, getProvider);\n    this.EIP1559APIEndpoint = EIP1559APIEndpoint;\n    this.legacyAPIEndpoint = legacyAPIEndpoint;\n    this.clientId = clientId;\n    this.ethQuery = new (0, _ethquery2.default)(_chunk2MFVV2BXjs.__privateGet.call(void 0, this, _getProvider).call(this));\n    if (onNetworkDidChange && getChainId) {\n      this.currentChainId = getChainId();\n      onNetworkDidChange(async (networkControllerState) => {\n        await _chunk2MFVV2BXjs.__privateMethod.call(void 0, this, _onNetworkControllerDidChange, onNetworkControllerDidChange_fn).call(this, networkControllerState);\n      });\n    } else {\n      const { selectedNetworkClientId } = this.messagingSystem.call(\n        \"NetworkController:getState\"\n      );\n      this.currentChainId = this.messagingSystem.call(\n        \"NetworkController:getNetworkClientById\",\n        selectedNetworkClientId\n      ).configuration.chainId;\n      this.messagingSystem.subscribe(\n        \"NetworkController:networkDidChange\",\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        async (networkControllerState) => {\n          await _chunk2MFVV2BXjs.__privateMethod.call(void 0, this, _onNetworkControllerDidChange, onNetworkControllerDidChange_fn).call(this, networkControllerState);\n        }\n      );\n    }\n  }\n  async resetPolling() {\n    if (this.pollTokens.size !== 0) {\n      const tokens = Array.from(this.pollTokens);\n      this.stopPolling();\n      await this.getGasFeeEstimatesAndStartPolling(tokens[0]);\n      tokens.slice(1).forEach((token) => {\n        this.pollTokens.add(token);\n      });\n    }\n  }\n  async fetchGasFeeEstimates(options) {\n    return await this._fetchGasFeeEstimateData(options);\n  }\n  async getGasFeeEstimatesAndStartPolling(pollToken) {\n    const _pollToken = pollToken || _uuid.v1.call(void 0, );\n    this.pollTokens.add(_pollToken);\n    if (this.pollTokens.size === 1) {\n      await this._fetchGasFeeEstimateData();\n      this._poll();\n    }\n    return _pollToken;\n  }\n  /**\n   * Gets and sets gasFeeEstimates in state.\n   *\n   * @param options - The gas fee estimate options.\n   * @param options.shouldUpdateState - Determines whether the state should be updated with the\n   * updated gas estimates.\n   * @returns The gas fee estimates.\n   */\n  async _fetchGasFeeEstimateData(options = {}) {\n    const { shouldUpdateState = true, networkClientId } = options;\n    let ethQuery, isEIP1559Compatible, isLegacyGasAPICompatible, decimalChainId;\n    if (networkClientId !== void 0) {\n      const networkClient = this.messagingSystem.call(\n        \"NetworkController:getNetworkClientById\",\n        networkClientId\n      );\n      isLegacyGasAPICompatible = networkClient.configuration.chainId === \"0x38\";\n      decimalChainId = _controllerutils.convertHexToDecimal.call(void 0, networkClient.configuration.chainId);\n      try {\n        const result = await this.messagingSystem.call(\n          \"NetworkController:getEIP1559Compatibility\",\n          networkClientId\n        );\n        isEIP1559Compatible = result || false;\n      } catch {\n        isEIP1559Compatible = false;\n      }\n      ethQuery = new (0, _ethquery2.default)(networkClient.provider);\n    }\n    ethQuery ?? (ethQuery = this.ethQuery);\n    isLegacyGasAPICompatible ?? (isLegacyGasAPICompatible = this.getCurrentNetworkLegacyGasAPICompatibility());\n    decimalChainId ?? (decimalChainId = _controllerutils.convertHexToDecimal.call(void 0, this.currentChainId));\n    try {\n      isEIP1559Compatible ?? (isEIP1559Compatible = await this.getEIP1559Compatibility());\n    } catch (e) {\n      console.error(e);\n      isEIP1559Compatible ?? (isEIP1559Compatible = false);\n    }\n    const gasFeeCalculations = await determineGasFeeCalculations({\n      isEIP1559Compatible,\n      isLegacyGasAPICompatible,\n      fetchGasEstimates: _chunk2MFVV2BXjs.fetchGasEstimates,\n      fetchGasEstimatesUrl: this.EIP1559APIEndpoint.replace(\n        \"<chain_id>\",\n        `${decimalChainId}`\n      ),\n      fetchLegacyGasPriceEstimates: _chunk2MFVV2BXjs.fetchLegacyGasPriceEstimates,\n      fetchLegacyGasPriceEstimatesUrl: this.legacyAPIEndpoint.replace(\n        \"<chain_id>\",\n        `${decimalChainId}`\n      ),\n      fetchEthGasPriceEstimate: _chunk2MFVV2BXjs.fetchEthGasPriceEstimate,\n      calculateTimeEstimate: _chunk2MFVV2BXjs.calculateTimeEstimate,\n      clientId: this.clientId,\n      ethQuery,\n      nonRPCGasFeeApisDisabled: this.state.nonRPCGasFeeApisDisabled\n    });\n    if (shouldUpdateState) {\n      const chainId = _controllerutils.toHex.call(void 0, decimalChainId);\n      this.update((state) => {\n        if (this.currentChainId === chainId) {\n          state.gasFeeEstimates = gasFeeCalculations.gasFeeEstimates;\n          state.estimatedGasFeeTimeBounds = gasFeeCalculations.estimatedGasFeeTimeBounds;\n          state.gasEstimateType = gasFeeCalculations.gasEstimateType;\n        }\n        state.gasFeeEstimatesByChainId ?? (state.gasFeeEstimatesByChainId = {});\n        state.gasFeeEstimatesByChainId[chainId] = {\n          gasFeeEstimates: gasFeeCalculations.gasFeeEstimates,\n          estimatedGasFeeTimeBounds: gasFeeCalculations.estimatedGasFeeTimeBounds,\n          gasEstimateType: gasFeeCalculations.gasEstimateType\n        };\n      });\n    }\n    return gasFeeCalculations;\n  }\n  /**\n   * Remove the poll token, and stop polling if the set of poll tokens is empty.\n   *\n   * @param pollToken - The poll token to disconnect.\n   */\n  disconnectPoller(pollToken) {\n    this.pollTokens.delete(pollToken);\n    if (this.pollTokens.size === 0) {\n      this.stopPolling();\n    }\n  }\n  stopPolling() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n    this.pollTokens.clear();\n    this.resetState();\n  }\n  /**\n   * Prepare to discard this controller.\n   *\n   * This stops any active polling.\n   */\n  destroy() {\n    super.destroy();\n    this.stopPolling();\n  }\n  _poll() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n    this.intervalId = setInterval(async () => {\n      await _controllerutils.safelyExecute.call(void 0, () => this._fetchGasFeeEstimateData());\n    }, this.intervalDelay);\n  }\n  /**\n   * Fetching token list from the Token Service API.\n   *\n   * @private\n   * @param networkClientId - The ID of the network client triggering the fetch.\n   * @returns A promise that resolves when this operation completes.\n   */\n  async _executePoll(networkClientId) {\n    await this._fetchGasFeeEstimateData({ networkClientId });\n  }\n  resetState() {\n    this.update(() => {\n      return defaultState;\n    });\n  }\n  async getEIP1559Compatibility() {\n    const currentNetworkIsEIP1559Compatible = await this.getCurrentNetworkEIP1559Compatibility();\n    const currentAccountIsEIP1559Compatible = this.getCurrentAccountEIP1559Compatibility?.() ?? true;\n    return currentNetworkIsEIP1559Compatible && currentAccountIsEIP1559Compatible;\n  }\n  getTimeEstimate(maxPriorityFeePerGas, maxFeePerGas) {\n    if (!this.state.gasFeeEstimates || this.state.gasEstimateType !== GAS_ESTIMATE_TYPES.FEE_MARKET) {\n      return {};\n    }\n    return _chunk2MFVV2BXjs.calculateTimeEstimate.call(void 0, \n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      this.state.gasFeeEstimates\n    );\n  }\n  enableNonRPCGasFeeApis() {\n    this.update((state) => {\n      state.nonRPCGasFeeApisDisabled = false;\n    });\n  }\n  disableNonRPCGasFeeApis() {\n    this.update((state) => {\n      state.nonRPCGasFeeApisDisabled = true;\n    });\n  }\n};\n_getProvider = new WeakMap();\n_onNetworkControllerDidChange = new WeakSet();\nonNetworkControllerDidChange_fn = async function({\n  selectedNetworkClientId\n}) {\n  const newChainId = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  ).configuration.chainId;\n  if (newChainId !== this.currentChainId) {\n    this.ethQuery = new (0, _ethquery2.default)(_chunk2MFVV2BXjs.__privateGet.call(void 0, this, _getProvider).call(this));\n    await this.resetPolling();\n    this.currentChainId = newChainId;\n  }\n};\nvar GasFeeController_default = GasFeeController;\n\n// src/determineGasFeeCalculations.ts\nasync function determineGasFeeCalculations(args) {\n  try {\n    return await getEstimatesUsingFallbacks(args);\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new Error(\n        `Gas fee/price estimation failed. Message: ${error.message}`\n      );\n    }\n    throw error;\n  }\n}\nasync function getEstimatesUsingFallbacks(request) {\n  const {\n    isEIP1559Compatible,\n    isLegacyGasAPICompatible,\n    nonRPCGasFeeApisDisabled\n  } = request;\n  try {\n    if (isEIP1559Compatible && !nonRPCGasFeeApisDisabled) {\n      return await getEstimatesUsingFeeMarketEndpoint(request);\n    }\n    if (isLegacyGasAPICompatible && !nonRPCGasFeeApisDisabled) {\n      return await getEstimatesUsingLegacyEndpoint(request);\n    }\n    throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n  } catch {\n    return await getEstimatesUsingProvider(request);\n  }\n}\nasync function getEstimatesUsingFeeMarketEndpoint(request) {\n  const {\n    fetchGasEstimates: fetchGasEstimates2,\n    fetchGasEstimatesUrl,\n    clientId,\n    calculateTimeEstimate: calculateTimeEstimate2\n  } = request;\n  const estimates = await fetchGasEstimates2(fetchGasEstimatesUrl, clientId);\n  const { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = estimates.medium;\n  const estimatedGasFeeTimeBounds = calculateTimeEstimate2(\n    suggestedMaxPriorityFeePerGas,\n    suggestedMaxFeePerGas,\n    estimates\n  );\n  return {\n    gasFeeEstimates: estimates,\n    estimatedGasFeeTimeBounds,\n    gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET\n  };\n}\nasync function getEstimatesUsingLegacyEndpoint(request) {\n  const {\n    fetchLegacyGasPriceEstimates: fetchLegacyGasPriceEstimates2,\n    fetchLegacyGasPriceEstimatesUrl,\n    clientId\n  } = request;\n  const estimates = await fetchLegacyGasPriceEstimates2(\n    fetchLegacyGasPriceEstimatesUrl,\n    clientId\n  );\n  return {\n    gasFeeEstimates: estimates,\n    estimatedGasFeeTimeBounds: {},\n    gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY\n  };\n}\nasync function getEstimatesUsingProvider(request) {\n  const { ethQuery, fetchEthGasPriceEstimate: fetchEthGasPriceEstimate2 } = request;\n  const estimates = await fetchEthGasPriceEstimate2(ethQuery);\n  return {\n    gasFeeEstimates: estimates,\n    estimatedGasFeeTimeBounds: {},\n    gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE\n  };\n}\n\n\n\n\n\n\n\nexports.determineGasFeeCalculations = determineGasFeeCalculations; exports.LEGACY_GAS_PRICES_API_URL = LEGACY_GAS_PRICES_API_URL; exports.GAS_ESTIMATE_TYPES = GAS_ESTIMATE_TYPES; exports.GasFeeController = GasFeeController; exports.GasFeeController_default = GasFeeController_default;\n//# sourceMappingURL=chunk-S5H5NUEH.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkS5H5NUEHjs = require('./chunk-S5H5NUEH.js');\nrequire('./chunk-2MFVV2BX.js');\n\n\n\n\nexports.GAS_ESTIMATE_TYPES = _chunkS5H5NUEHjs.GAS_ESTIMATE_TYPES; exports.GasFeeController = _chunkS5H5NUEHjs.GasFeeController; exports.LEGACY_GAS_PRICES_API_URL = _chunkS5H5NUEHjs.LEGACY_GAS_PRICES_API_URL;\n//# sourceMappingURL=index.js.map","module.exports = [\n\t'#01888C', // teal\n  '#FC7500', // bright orange\n  '#034F5D', // dark teal\n  '#F73F01', // orangered\n  '#FC1960', // magenta\n  '#C7144C', // raspberry\n  '#F3C100', // goldenrod\n  '#1598F2', // lightning blue\n  '#2465E1', // sail blue\n  '#F19E02', // gold\n]\n","var MersenneTwister = require('mersenne-twister');\nvar paperGen = require('./paper')\nvar Color = require('color')\nvar colors = require('./colors')\nvar shapeCount = 4\nvar svgns = 'http://www.w3.org/2000/svg'\n\nmodule.exports = generateIdenticon\n\nvar generator\nfunction generateIdenticon(diameter, seed) {\n  generator = new MersenneTwister(seed);\n  var remainingColors = hueShift(colors.slice(), generator)\n\n  var elements = paperGen(diameter, genColor(remainingColors))\n  var container = elements.container\n\n  var svg = document.createElementNS(svgns, 'svg')\n  svg.setAttributeNS(null, 'x', '0')\n  svg.setAttributeNS(null, 'y', '0')\n  svg.setAttributeNS(null, 'width', diameter)\n  svg.setAttributeNS(null, 'height', diameter)\n\n  container.appendChild(svg)\n\n  for(var i = 0; i < shapeCount - 1; i++) {\n    genShape(remainingColors, diameter, i, shapeCount - 1, svg)\n  }\n\n  return container\n}\n\nfunction genShape(remainingColors, diameter, i, total, svg) {\n  var center = diameter / 2\n\n  var shape = document.createElementNS(svgns, 'rect')\n  shape.setAttributeNS(null, 'x', '0')\n  shape.setAttributeNS(null, 'y', '0')\n  shape.setAttributeNS(null, 'width', diameter)\n  shape.setAttributeNS(null, 'height', diameter)\n\n  var firstRot = generator.random()\n  var angle = Math.PI * 2 * firstRot\n  var velocity = diameter / total * generator.random() + (i * diameter / total)\n\n  var tx = (Math.cos(angle) * velocity)\n  var ty = (Math.sin(angle) * velocity)\n\n  var translate = 'translate(' + tx + ' ' +  ty + ')'\n\n  // Third random is a shape rotation on top of all of that.\n  var secondRot = generator.random()\n  var rot = (firstRot * 360) + secondRot * 180\n  var rotate = 'rotate(' + rot.toFixed(1) + ' ' + center + ' ' + center + ')'\n  var transform = translate + ' ' + rotate\n  shape.setAttributeNS(null, 'transform', transform)\n  var fill = genColor(remainingColors)\n  shape.setAttributeNS(null, 'fill', fill)\n\n  svg.appendChild(shape)\n}\n\nfunction genColor(colors) {\n  var rand = generator.random()\n  var idx = Math.floor(colors.length * generator.random())\n  var color = colors.splice(idx,1)[0]\n  return color\n}\n\nvar wobble = 30\nfunction hueShift(colors, generator) {\n  var amount = (generator.random() * 30) - (wobble / 2)\n  return colors.map(function(hex) {\n    var color = Color(hex)\n    color.rotate(amount)\n    return color.hexString()\n  })\n}\n","function newPaper(diameter, color) {\n  var container = document.createElement('div')\n  container.style.borderRadius = '50px'\n  container.style.overflow = 'hidden'\n  container.style.padding = '0px'\n  container.style.margin = '0px'\n  container.style.width = '' + diameter + 'px'\n  container.style.height = '' + diameter + 'px'\n  container.style.display = 'inline-block'\n  container.style.background = color\n  return {\n    container: container,\n  }\n}\n\nmodule.exports = newPaper\n","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _JsonRpcEngine_instances, _a, _JsonRpcEngine_isDestroyed, _JsonRpcEngine_middleware, _JsonRpcEngine_notificationHandler, _JsonRpcEngine_assertIsNotDestroyed, _JsonRpcEngine_handleBatch, _JsonRpcEngine_handle, _JsonRpcEngine_processRequest, _JsonRpcEngine_runAllMiddleware, _JsonRpcEngine_runMiddleware, _JsonRpcEngine_runReturnHandlers, _JsonRpcEngine_checkForCompletion;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcEngine = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst utils_1 = require(\"@metamask/utils\");\nconst DESTROYED_ERROR_MESSAGE = 'This engine is destroyed and can no longer be used.';\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nclass JsonRpcEngine extends safe_event_emitter_1.default {\n    /**\n     * Constructs a {@link JsonRpcEngine} instance.\n     *\n     * @param options - Options bag.\n     * @param options.notificationHandler - A function for handling JSON-RPC\n     * notifications. A JSON-RPC notification is defined as a JSON-RPC request\n     * without an `id` property. If this option is _not_ provided, notifications\n     * will be treated the same as requests. If this option _is_ provided,\n     * notifications will be passed to the handler function without touching\n     * the engine's middleware stack. This function should not throw or reject.\n     */\n    constructor({ notificationHandler } = {}) {\n        super();\n        _JsonRpcEngine_instances.add(this);\n        /**\n         * Indicating whether this engine is destroyed or not.\n         */\n        _JsonRpcEngine_isDestroyed.set(this, false);\n        _JsonRpcEngine_middleware.set(this, void 0);\n        _JsonRpcEngine_notificationHandler.set(this, void 0);\n        __classPrivateFieldSet(this, _JsonRpcEngine_middleware, [], \"f\");\n        __classPrivateFieldSet(this, _JsonRpcEngine_notificationHandler, notificationHandler, \"f\");\n    }\n    /**\n     * Calls the `destroy()` function of any middleware with that property, clears\n     * the middleware array, and marks this engine as destroyed. A destroyed\n     * engine cannot be used.\n     */\n    destroy() {\n        __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\").forEach((middleware) => {\n            if (\n            // `in` walks the prototype chain, which is probably the desired\n            // behavior here.\n            'destroy' in middleware &&\n                typeof middleware.destroy === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                middleware.destroy();\n            }\n        });\n        __classPrivateFieldSet(this, _JsonRpcEngine_middleware, [], \"f\");\n        __classPrivateFieldSet(this, _JsonRpcEngine_isDestroyed, true, \"f\");\n    }\n    /**\n     * Add a middleware function to the engine's middleware stack.\n     *\n     * @param middleware - The middleware function to add.\n     */\n    push(middleware) {\n        __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_assertIsNotDestroyed).call(this);\n        __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\").push(middleware);\n    }\n    handle(req, callback) {\n        __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_assertIsNotDestroyed).call(this);\n        if (callback && typeof callback !== 'function') {\n            throw new Error('\"callback\" must be a function if provided.');\n        }\n        if (Array.isArray(req)) {\n            if (callback) {\n                return __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handleBatch).call(this, req, \n                // This assertion is safe because of the runtime checks validating that `req` is an array and `callback` is defined.\n                // There is only one overload signature that satisfies both conditions, and its `callback` type is the one that's being asserted.\n                callback);\n            }\n            return __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handleBatch).call(this, req);\n        }\n        if (callback) {\n            return __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handle).call(this, req, callback);\n        }\n        return this._promiseHandle(req);\n    }\n    /**\n     * Returns this engine as a middleware function that can be pushed to other\n     * engines.\n     *\n     * @returns This engine as a middleware function.\n     */\n    asMiddleware() {\n        __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_assertIsNotDestroyed).call(this);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        return async (req, res, next, end) => {\n            try {\n                const [middlewareError, isComplete, returnHandlers] = await __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_runAllMiddleware).call(_a, req, res, __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\"));\n                if (isComplete) {\n                    await __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_runReturnHandlers).call(_a, returnHandlers);\n                    return end(middlewareError);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-misused-promises\n                return next(async (handlerCallback) => {\n                    try {\n                        await __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_runReturnHandlers).call(_a, returnHandlers);\n                    }\n                    catch (error) {\n                        return handlerCallback(error);\n                    }\n                    return handlerCallback();\n                });\n            }\n            catch (error) {\n                return end(error);\n            }\n        };\n    }\n    /**\n     * A promise-wrapped _handle.\n     *\n     * @param request - The JSON-RPC request.\n     * @returns The JSON-RPC response.\n     */\n    // This function is used in tests, so we cannot easily change it to use the\n    // hash syntax.\n    // eslint-disable-next-line no-restricted-syntax\n    async _promiseHandle(request) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handle).call(this, request, (error, res) => {\n                // For notifications, the response will be `undefined`, and any caught\n                // errors are unexpected and should be surfaced to the caller.\n                if (error && res === undefined) {\n                    reject(error);\n                }\n                else {\n                    // Excepting notifications, there will always be a response, and it will\n                    // always have any error that is caught and propagated.\n                    resolve(res);\n                }\n            }).catch(reject);\n        });\n    }\n}\nexports.JsonRpcEngine = JsonRpcEngine;\n_a = JsonRpcEngine, _JsonRpcEngine_isDestroyed = new WeakMap(), _JsonRpcEngine_middleware = new WeakMap(), _JsonRpcEngine_notificationHandler = new WeakMap(), _JsonRpcEngine_instances = new WeakSet(), _JsonRpcEngine_assertIsNotDestroyed = function _JsonRpcEngine_assertIsNotDestroyed() {\n    if (__classPrivateFieldGet(this, _JsonRpcEngine_isDestroyed, \"f\")) {\n        throw new Error(DESTROYED_ERROR_MESSAGE);\n    }\n}, _JsonRpcEngine_handleBatch = \n/**\n * Handles a batch of JSON-RPC requests, either in `async` or callback\n * fashion.\n *\n * @param requests - The request objects to process.\n * @param callback - The completion callback.\n * @returns The array of responses, or nothing if a callback was specified.\n */\nasync function _JsonRpcEngine_handleBatch(requests, callback) {\n    // The order here is important\n    try {\n        // If the batch is an empty array, the response array must contain a single object\n        if (requests.length === 0) {\n            const response = [\n                {\n                    id: null,\n                    jsonrpc: '2.0',\n                    error: new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.invalidRequest, 'Request batch must contain plain objects. Received an empty array'),\n                },\n            ];\n            if (callback) {\n                return callback(null, response);\n            }\n            return response;\n        }\n        // 2. Wait for all requests to finish, or throw on some kind of fatal\n        // error\n        const responses = (await Promise.all(\n        // 1. Begin executing each request in the order received\n        requests.map(this._promiseHandle.bind(this)))).filter(\n        // Filter out any notification responses.\n        (response) => response !== undefined);\n        // 3. Return batch response\n        if (callback) {\n            return callback(null, responses);\n        }\n        return responses;\n    }\n    catch (error) {\n        if (callback) {\n            return callback(error);\n        }\n        throw error;\n    }\n}, _JsonRpcEngine_handle = \n/**\n * Ensures that the request / notification object is valid, processes it, and\n * passes any error and response object to the given callback.\n *\n * Does not reject.\n *\n * @param callerReq - The request object from the caller.\n * @param callback - The callback function.\n * @returns Nothing.\n */\nasync function _JsonRpcEngine_handle(callerReq, callback) {\n    if (!callerReq ||\n        Array.isArray(callerReq) ||\n        typeof callerReq !== 'object') {\n        const error = new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.invalidRequest, `Requests must be plain objects. Received: ${typeof callerReq}`, { request: callerReq });\n        return callback(error, { id: null, jsonrpc: '2.0', error });\n    }\n    if (typeof callerReq.method !== 'string') {\n        const error = new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.invalidRequest, `Must specify a string method. Received: ${typeof callerReq.method}`, { request: callerReq });\n        if (__classPrivateFieldGet(this, _JsonRpcEngine_notificationHandler, \"f\") && !(0, utils_1.isJsonRpcRequest)(callerReq)) {\n            // Do not reply to notifications, even if they are malformed.\n            return callback(null);\n        }\n        return callback(error, {\n            // Typecast: This could be a notification, but we want to access the\n            // `id` even if it doesn't exist.\n            id: callerReq.id ?? null,\n            jsonrpc: '2.0',\n            error,\n        });\n    }\n    else if (__classPrivateFieldGet(this, _JsonRpcEngine_notificationHandler, \"f\") &&\n        (0, utils_1.isJsonRpcNotification)(callerReq) &&\n        !(0, utils_1.isJsonRpcRequest)(callerReq)) {\n        try {\n            await __classPrivateFieldGet(this, _JsonRpcEngine_notificationHandler, \"f\").call(this, callerReq);\n        }\n        catch (error) {\n            return callback(error);\n        }\n        return callback(null);\n    }\n    let error = null;\n    // Handle requests.\n    // Typecast: Permit missing id's for backwards compatibility.\n    const req = { ...callerReq };\n    const res = {\n        id: req.id,\n        jsonrpc: req.jsonrpc,\n    };\n    try {\n        await __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_processRequest).call(_a, req, res, __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\"));\n    }\n    catch (_error) {\n        // A request handler error, a re-thrown middleware error, or something\n        // unexpected.\n        error = _error;\n    }\n    if (error) {\n        // Ensure no result is present on an errored response\n        delete res.result;\n        if (!res.error) {\n            res.error = (0, rpc_errors_1.serializeError)(error);\n        }\n    }\n    return callback(error, res);\n}, _JsonRpcEngine_processRequest = async function _JsonRpcEngine_processRequest(req, res, middlewares) {\n    const [error, isComplete, returnHandlers] = await __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_runAllMiddleware).call(_a, req, res, middlewares);\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_checkForCompletion).call(_a, req, res, isComplete);\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_runReturnHandlers).call(_a, returnHandlers);\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n        // eslint-disable-next-line @typescript-eslint/no-throw-literal\n        throw error;\n    }\n}, _JsonRpcEngine_runAllMiddleware = async function _JsonRpcEngine_runAllMiddleware(req, res, middlewares) {\n    const returnHandlers = [];\n    let error = null;\n    let isComplete = false;\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewares) {\n        [error, isComplete] = await __classPrivateFieldGet(_a, _a, \"m\", _JsonRpcEngine_runMiddleware).call(_a, req, res, middleware, returnHandlers);\n        if (isComplete) {\n            break;\n        }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n}, _JsonRpcEngine_runMiddleware = async function _JsonRpcEngine_runMiddleware(request, response, middleware, returnHandlers) {\n    return new Promise((resolve) => {\n        const end = (error) => {\n            const parsedError = error || response.error;\n            if (parsedError) {\n                response.error = (0, rpc_errors_1.serializeError)(parsedError);\n            }\n            // True indicates that the request should end\n            resolve([parsedError, true]);\n        };\n        const next = (returnHandler) => {\n            if (response.error) {\n                end(response.error);\n            }\n            else {\n                if (returnHandler) {\n                    if (typeof returnHandler !== 'function') {\n                        end(new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: \"next\" return handlers must be functions. ` +\n                            `Received \"${typeof returnHandler}\" for request:\\n${jsonify(request)}`, { request }));\n                    }\n                    returnHandlers.push(returnHandler);\n                }\n                // False indicates that the request should not end\n                resolve([null, false]);\n            }\n        };\n        try {\n            middleware(request, response, next, end);\n        }\n        catch (error) {\n            end(error);\n        }\n    });\n}, _JsonRpcEngine_runReturnHandlers = async function _JsonRpcEngine_runReturnHandlers(handlers) {\n    for (const handler of handlers) {\n        await new Promise((resolve, reject) => {\n            handler((error) => (error ? reject(error) : resolve()));\n        });\n    }\n}, _JsonRpcEngine_checkForCompletion = function _JsonRpcEngine_checkForCompletion(request, response, isComplete) {\n    if (!(0, utils_1.hasProperty)(response, 'result') && !(0, utils_1.hasProperty)(response, 'error')) {\n        throw new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: Response has no error or result for request:\\n${jsonify(request)}`, { request });\n    }\n    if (!isComplete) {\n        throw new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: Nothing ended request:\\n${jsonify(request)}`, { request });\n    }\n};\n/**\n * JSON-stringifies a request object.\n *\n * @param request - The request object to JSON-stringify.\n * @returns The JSON-stringified request object.\n */\nfunction jsonify(request) {\n    return JSON.stringify(request, null, 2);\n}\n//# sourceMappingURL=JsonRpcEngine.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAsyncMiddleware = void 0;\n/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n *\n * @param asyncMiddleware - The asynchronous middleware function to wrap.\n * @returns The wrapped asynchronous middleware function, ready to be consumed\n * by JsonRpcEngine.\n */\nfunction createAsyncMiddleware(asyncMiddleware) {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    return async (request, response, next, end) => {\n        // nextPromise is the key to the implementation\n        // it is resolved by the return handler passed to the\n        // \"next\" function\n        let resolveNextPromise;\n        const nextPromise = new Promise((resolve) => {\n            resolveNextPromise = resolve;\n        });\n        let returnHandlerCallback = null;\n        let nextWasCalled = false;\n        // This will be called by the consumer's async middleware.\n        const asyncNext = async () => {\n            nextWasCalled = true;\n            // We pass a return handler to next(). When it is called by the engine,\n            // the consumer's async middleware will resume executing.\n            next((runReturnHandlersCallback) => {\n                // This callback comes from JsonRpcEngine._runReturnHandlers\n                returnHandlerCallback = runReturnHandlersCallback;\n                resolveNextPromise();\n            });\n            return nextPromise;\n        };\n        try {\n            await asyncMiddleware(request, response, asyncNext);\n            if (nextWasCalled) {\n                await nextPromise; // we must wait until the return handler is called\n                returnHandlerCallback(null);\n            }\n            else {\n                end(null);\n            }\n        }\n        catch (error) {\n            if (returnHandlerCallback) {\n                returnHandlerCallback(error);\n            }\n            else {\n                end(error);\n            }\n        }\n    };\n}\nexports.createAsyncMiddleware = createAsyncMiddleware;\n//# sourceMappingURL=createAsyncMiddleware.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createScaffoldMiddleware = void 0;\n/**\n * Creates a middleware function from an object of RPC method handler functions,\n * keyed to particular method names. If a method corresponding to a key of this\n * object is requested, this middleware will pass it to the corresponding\n * handler and return the result.\n *\n * @param handlers - The RPC method handler functions.\n * @returns The scaffold middleware function.\n */\nfunction createScaffoldMiddleware(handlers) {\n    return (req, res, next, end) => {\n        const handler = handlers[req.method];\n        // if no handler, return\n        if (handler === undefined) {\n            return next();\n        }\n        // if handler is fn, call as middleware\n        if (typeof handler === 'function') {\n            return handler(req, res, next, end);\n        }\n        // if handler is some other value, use as result\n        res.result = handler;\n        return end();\n    };\n}\nexports.createScaffoldMiddleware = createScaffoldMiddleware;\n//# sourceMappingURL=createScaffoldMiddleware.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUniqueId = void 0;\n// uint32 (two's complement) max\n// more conservative than Number.MAX_SAFE_INTEGER\nconst MAX = 4294967295;\nlet idCounter = Math.floor(Math.random() * MAX);\n/**\n * Gets an ID that is guaranteed to be unique so long as no more than\n * 4_294_967_295 (uint32 max) IDs are created, or the IDs are rapidly turned\n * over.\n *\n * @returns The unique ID.\n */\nfunction getUniqueId() {\n    idCounter = (idCounter + 1) % MAX;\n    return idCounter;\n}\nexports.getUniqueId = getUniqueId;\n//# sourceMappingURL=getUniqueId.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createIdRemapMiddleware = void 0;\nconst getUniqueId_1 = require(\"./getUniqueId.cjs\");\n/**\n * Returns a middleware function that overwrites the `id` property of each\n * request with an ID that is guaranteed to be unique, and restores the original\n * ID in a return handler.\n *\n * If used, should be the first middleware in the stack.\n *\n * @returns The ID remap middleware function.\n */\nfunction createIdRemapMiddleware() {\n    return (request, response, next, _end) => {\n        const originalId = request.id;\n        const newId = (0, getUniqueId_1.getUniqueId)();\n        request.id = newId;\n        response.id = newId;\n        next((done) => {\n            request.id = originalId;\n            response.id = originalId;\n            done();\n        });\n    };\n}\nexports.createIdRemapMiddleware = createIdRemapMiddleware;\n//# sourceMappingURL=idRemapMiddleware.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeMiddleware = exports.JsonRpcEngine = exports.createIdRemapMiddleware = exports.getUniqueId = exports.createScaffoldMiddleware = exports.createAsyncMiddleware = void 0;\nvar createAsyncMiddleware_1 = require(\"./createAsyncMiddleware.cjs\");\nObject.defineProperty(exports, \"createAsyncMiddleware\", { enumerable: true, get: function () { return createAsyncMiddleware_1.createAsyncMiddleware; } });\nvar createScaffoldMiddleware_1 = require(\"./createScaffoldMiddleware.cjs\");\nObject.defineProperty(exports, \"createScaffoldMiddleware\", { enumerable: true, get: function () { return createScaffoldMiddleware_1.createScaffoldMiddleware; } });\nvar getUniqueId_1 = require(\"./getUniqueId.cjs\");\nObject.defineProperty(exports, \"getUniqueId\", { enumerable: true, get: function () { return getUniqueId_1.getUniqueId; } });\nvar idRemapMiddleware_1 = require(\"./idRemapMiddleware.cjs\");\nObject.defineProperty(exports, \"createIdRemapMiddleware\", { enumerable: true, get: function () { return idRemapMiddleware_1.createIdRemapMiddleware; } });\nvar JsonRpcEngine_1 = require(\"./JsonRpcEngine.cjs\");\nObject.defineProperty(exports, \"JsonRpcEngine\", { enumerable: true, get: function () { return JsonRpcEngine_1.JsonRpcEngine; } });\nvar mergeMiddleware_1 = require(\"./mergeMiddleware.cjs\");\nObject.defineProperty(exports, \"mergeMiddleware\", { enumerable: true, get: function () { return mergeMiddleware_1.mergeMiddleware; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeMiddleware = void 0;\nconst JsonRpcEngine_1 = require(\"./JsonRpcEngine.cjs\");\n/**\n * Takes a stack of middleware and joins them into a single middleware function.\n *\n * @param middlewareStack - The middleware stack to merge.\n * @returns The merged middleware function.\n */\nfunction mergeMiddleware(middlewareStack) {\n    const engine = new JsonRpcEngine_1.JsonRpcEngine();\n    middlewareStack.forEach((middleware) => engine.push(middleware));\n    return engine.asMiddleware();\n}\nexports.mergeMiddleware = mergeMiddleware;\n//# sourceMappingURL=mergeMiddleware.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BIP44CoinTypeNode_node;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBIP44AddressKeyDeriver = exports.deriveBIP44AddressKey = exports.BIP44CoinTypeNode = exports.BIP_44_COIN_TYPE_DEPTH = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst BIP44Node_1 = require(\"./BIP44Node.cjs\");\nconst constants_1 = require(\"./constants.cjs\");\nconst SLIP10Node_1 = require(\"./SLIP10Node.cjs\");\nconst utils_2 = require(\"./utils.cjs\");\nexports.BIP_44_COIN_TYPE_DEPTH = 2;\n/**\n * A wrapper object for BIP-44 `coin_type` keys. `coin_type` is the index\n * specifying the protocol for which deeper keys are intended. For the\n * authoritative list of coin types, please see\n * [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md).\n *\n * Recall that a BIP-44 HD tree path consists of the following nodes:\n *\n * `m / 44' / coin_type' / account' / change / address_index`\n *\n * With the following depths:\n *\n * `0 / 1 / 2 / 3 / 4 / 5`\n *\n */\nclass BIP44CoinTypeNode {\n    // Constructors cannot use hash names.\n    // eslint-disable-next-line no-restricted-syntax\n    constructor(node, coin_type) {\n        _BIP44CoinTypeNode_node.set(this, void 0);\n        __classPrivateFieldSet(this, _BIP44CoinTypeNode_node, node, \"f\");\n        this.coin_type = coin_type;\n        this.path = (0, utils_2.getBIP44CoinTypePathString)(coin_type);\n        Object.freeze(this);\n    }\n    /**\n     * Constructs a BIP-44 `coin_type` node. `coin_type` is the index\n     * specifying the protocol for which deeper keys are intended. For the\n     * authoritative list of coin types, please see\n     * [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md).\n     *\n     * Recall that a BIP-44 HD tree path consists of the following nodes:\n     *\n     * `m / 44' / coin_type' / account' / change / address_index`\n     *\n     * With the following depths:\n     *\n     * `0 / 1 / 2 / 3 / 4 / 5`\n     *\n     * @param json - The {@link JsonBIP44Node} for the key of this node.\n     * @param coin_type - The coin_type index of this node. Must be a non-negative\n     * integer.\n     */\n    static async fromJSON(json, coin_type) {\n        validateCoinType(coin_type);\n        validateCoinTypeNodeDepth(json.depth);\n        const node = await BIP44Node_1.BIP44Node.fromExtendedKey({\n            depth: json.depth,\n            index: json.index,\n            parentFingerprint: json.parentFingerprint,\n            chainCode: (0, utils_2.hexStringToBytes)(json.chainCode),\n            privateKey: (0, utils_2.nullableHexStringToBytes)(json.privateKey),\n            publicKey: (0, utils_2.hexStringToBytes)(json.publicKey),\n        });\n        return new BIP44CoinTypeNode(node, coin_type);\n    }\n    /**\n     * Constructs a BIP-44 `coin_type` node. `coin_type` is the index\n     * specifying the protocol for which deeper keys are intended. For the\n     * authoritative list of coin types, please see\n     * [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md).\n     *\n     * Recall that a BIP-44 HD tree path consists of the following nodes:\n     *\n     * `m / 44' / coin_type' / account' / change / address_index`\n     *\n     * With the following depths:\n     *\n     * `0 / 1 / 2 / 3 / 4 / 5`\n     *\n     * @param derivationPath - The derivation path for the key of this node.\n     */\n    static async fromDerivationPath(derivationPath) {\n        validateCoinTypeNodeDepth(derivationPath.length - 1);\n        const node = await BIP44Node_1.BIP44Node.fromDerivationPath({\n            derivationPath,\n        });\n        // Split the bip32 string token and extract the coin_type index.\n        const pathPart = derivationPath[exports.BIP_44_COIN_TYPE_DEPTH].split(':')[1]?.replace(`'`, '');\n        (0, utils_1.assert)(pathPart, 'Invalid derivation path.');\n        const coinType = Number.parseInt(pathPart, 10);\n        return new BIP44CoinTypeNode(node, coinType);\n    }\n    /**\n     * Constructs a BIP-44 `coin_type` node. `coin_type` is the index\n     * specifying the protocol for which deeper keys are intended. For the\n     * authoritative list of coin types, please see\n     * [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md).\n     *\n     * Recall that a BIP-44 HD tree path consists of the following nodes:\n     *\n     * `m / 44' / coin_type' / account' / change / address_index`\n     *\n     * With the following depths:\n     *\n     * `0 / 1 / 2 / 3 / 4 / 5`\n     *\n     * @param node - The {@link BIP44Node} for the key of this node.\n     * @param coin_type - The coin_type index of this node. Must be a non-negative\n     * integer.\n     */\n    static async fromNode(node, coin_type) {\n        if (!(node instanceof BIP44Node_1.BIP44Node)) {\n            throw new Error('Invalid node: Expected an instance of BIP44Node.');\n        }\n        validateCoinType(coin_type);\n        validateCoinTypeNodeDepth(node.depth);\n        // TODO: Make this function not async in a future version.\n        return Promise.resolve(new BIP44CoinTypeNode(node, coin_type));\n    }\n    get depth() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").depth;\n    }\n    get privateKeyBytes() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").privateKeyBytes;\n    }\n    get publicKeyBytes() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").publicKeyBytes;\n    }\n    get chainCodeBytes() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").chainCodeBytes;\n    }\n    get privateKey() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").privateKey;\n    }\n    get publicKey() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").publicKey;\n    }\n    get compressedPublicKey() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").compressedPublicKey;\n    }\n    get compressedPublicKeyBytes() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").compressedPublicKeyBytes;\n    }\n    get chainCode() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").chainCode;\n    }\n    get address() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").address;\n    }\n    get masterFingerprint() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").masterFingerprint;\n    }\n    get parentFingerprint() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").parentFingerprint;\n    }\n    get fingerprint() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").fingerprint;\n    }\n    get index() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").index;\n    }\n    get curve() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").curve;\n    }\n    get extendedKey() {\n        return __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").extendedKey;\n    }\n    /**\n     * Derives a BIP-44 `address_index` key corresponding to the path of this\n     * node and the specified `account`, `change`, and `address_index` values.\n     * `address_index` keys are normally the keys used to generate user account\n     * addresses.\n     *\n     * Recall that a BIP-44 HD tree path consists of the following nodes:\n     *\n     * `m / 44' / coin_type' / account' / change / address_index`\n     *\n     * With the following depths:\n     *\n     * `0 / 1 / 2 / 3 / 4 / 5`\n     *\n     * @param indices - The BIP-44 index values to use in key derivation.\n     * @param indices.account - The `account` index. Default: `0`\n     * @param indices.change - The `change` index. Default: `0`\n     * @param indices.address_index - The `address_index` index.\n     * @returns The derived BIP-44 `address_index` node.\n     */\n    async deriveBIP44AddressKey({ account = 0, change = 0, address_index, }) {\n        return await __classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").derive((0, utils_2.getBIP44CoinTypeToAddressPathTuple)({ account, change, address_index }));\n    }\n    toJSON() {\n        return {\n            ...__classPrivateFieldGet(this, _BIP44CoinTypeNode_node, \"f\").toJSON(),\n            coin_type: this.coin_type,\n            path: this.path,\n        };\n    }\n}\nexports.BIP44CoinTypeNode = BIP44CoinTypeNode;\n_BIP44CoinTypeNode_node = new WeakMap();\n/**\n * Validates the depth of a `coin_type` node. Simply, ensures that it is the\n * number `2`. An error is thrown if validation fails.\n *\n * @param depth - The depth to validate.\n */\nfunction validateCoinTypeNodeDepth(depth) {\n    if (depth !== exports.BIP_44_COIN_TYPE_DEPTH) {\n        throw new Error(`Invalid depth: Coin type nodes must be of depth ${exports.BIP_44_COIN_TYPE_DEPTH}. Received: \"${depth}\"`);\n    }\n}\n/**\n * Validates that the coin type is a non-negative integer number. An error is\n * thrown if validation fails.\n *\n * @param coin_type - The coin type to validate.\n */\nfunction validateCoinType(coin_type) {\n    if (typeof coin_type !== 'number' ||\n        !Number.isInteger(coin_type) ||\n        coin_type < 0) {\n        throw new Error('Invalid coin type: The specified coin type must be a non-negative integer number.');\n    }\n}\n/**\n * Derives a BIP-44 address key corresponding to the specified derivation path,\n * given either by a {@link BIP44CoinTypeNode} or derivation path tuple.\n *\n * Recall that a BIP-44 HD tree path consists of the following nodes:\n *\n * `m / 44' / coin_type' / account' / change / address_index`\n *\n * With the following depths:\n *\n * `0 / 1 / 2 / 3 / 4 / 5`\n *\n * @param parentKeyOrNode - The `coin_type` parent key to derive from.\n * @param indices - The BIP-44 index values to use in key derivation.\n * @param indices.account - The `account` index. Default: `0`.\n * @param indices.change - The `change` index. Default: `0`.\n * @param indices.address_index - The `address_index` index.\n * @returns The derived `address_index` key for the specified derivation path.\n */\nasync function deriveBIP44AddressKey(parentKeyOrNode, { account = 0, change = 0, address_index }) {\n    const path = (0, utils_2.getBIP44CoinTypeToAddressPathTuple)({\n        account,\n        change,\n        address_index,\n    });\n    const node = await getNode(parentKeyOrNode);\n    const childNode = await (0, SLIP10Node_1.deriveChildNode)({\n        path,\n        node,\n    });\n    return new BIP44Node_1.BIP44Node(childNode);\n}\nexports.deriveBIP44AddressKey = deriveBIP44AddressKey;\n/**\n * Creates a function that derives BIP-44 address keys corresponding to the\n * specified derivation path, given either by a {@link BIP44CoinTypeNode} or\n * derivation path tuple.\n *\n * Recall that a BIP-44 HD tree path consists of the following nodes:\n *\n * `m / 44' / coin_type' / account' / change / address_index`\n *\n * With the following depths:\n *\n * `0 / 1 / 2 / 3 / 4 / 5`\n *\n * @param node - The {@link BIP44CoinTypeNode} to derive address keys from.\n * This node contains a BIP-44 key of depth 2, `coin_type`.\n * @param accountAndChangeIndices - The `account` and `change` indices that\n * will be used to derive addresses.\n * @returns The deriver function for the derivation path specified by the\n * `coin_type` node, `account`, and `change` indices.\n */\nasync function getBIP44AddressKeyDeriver(node, accountAndChangeIndices) {\n    const { account = 0, change = 0 } = accountAndChangeIndices ?? {};\n    const actualNode = await getNode(node);\n    const accountNode = (0, utils_2.getHardenedBIP32NodeToken)(account);\n    const changeNode = (0, utils_2.getBIP32NodeToken)(change);\n    const bip44AddressKeyDeriver = async (address_index, isHardened = false) => {\n        const slip10Node = await (0, SLIP10Node_1.deriveChildNode)({\n            path: [\n                accountNode,\n                changeNode,\n                isHardened\n                    ? (0, utils_2.getHardenedBIP32NodeToken)(address_index)\n                    : (0, utils_2.getUnhardenedBIP32NodeToken)(address_index),\n            ],\n            node: actualNode,\n        });\n        return new BIP44Node_1.BIP44Node(slip10Node);\n    };\n    bip44AddressKeyDeriver.coin_type = actualNode.coin_type;\n    bip44AddressKeyDeriver.path = (0, utils_2.getBIP44ChangePathString)(actualNode.path, {\n        account,\n        change,\n    });\n    Object.freeze(bip44AddressKeyDeriver);\n    return bip44AddressKeyDeriver;\n}\nexports.getBIP44AddressKeyDeriver = getBIP44AddressKeyDeriver;\n/**\n * Get a BIP-44 coin type node from a JSON node or extended key string. If an existing coin type\n * node is provided, the same node is returned.\n *\n * The depth of the node is validated to be a valid coin type node.\n *\n * @param node - A BIP-44 coin type node, JSON node or extended key.\n */\nasync function getNode(node) {\n    if (node instanceof BIP44CoinTypeNode) {\n        validateCoinTypeNodeDepth(node.depth);\n        return node;\n    }\n    if (typeof node === 'string') {\n        const bip44Node = await BIP44Node_1.BIP44Node.fromExtendedKey(node);\n        const coinTypeNode = await BIP44CoinTypeNode.fromNode(bip44Node, bip44Node.index - constants_1.BIP_32_HARDENED_OFFSET);\n        validateCoinTypeNodeDepth(coinTypeNode.depth);\n        return coinTypeNode;\n    }\n    return BIP44CoinTypeNode.fromJSON(node, node.coin_type);\n}\n//# sourceMappingURL=BIP44CoinTypeNode.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BIP44Node_node;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateBIP44Depth = exports.BIP44Node = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst constants_1 = require(\"./constants.cjs\");\nconst extended_keys_1 = require(\"./extended-keys.cjs\");\nconst SLIP10Node_1 = require(\"./SLIP10Node.cjs\");\nconst utils_2 = require(\"./utils.cjs\");\n/**\n * A wrapper for BIP-44 Hierarchical Deterministic (HD) tree nodes, i.e.\n * cryptographic keys used to generate keypairs and addresses for cryptocurrency\n * protocols.\n *\n * This class contains methods and fields that may not serialize well. Use\n * {@link BIP44Node.toJSON} to get a JSON-compatible representation.\n */\nclass BIP44Node {\n    constructor(node) {\n        _BIP44Node_node.set(this, void 0);\n        __classPrivateFieldSet(this, _BIP44Node_node, node, \"f\");\n        Object.freeze(this);\n    }\n    /**\n     * Wrapper of the {@link fromExtendedKey} function. Refer to that function\n     * for documentation.\n     *\n     * @param json - The JSON representation of a SLIP-10 node.\n     */\n    static async fromJSON(json) {\n        return BIP44Node.fromExtendedKey(json);\n    }\n    /**\n     * Create a new BIP-44 node from a key and chain code. You must specify\n     * either a private key or a public key. When specifying a private key,\n     * the public key will be derived from the private key.\n     *\n     * All parameters are stringently validated, and an error is thrown if\n     * validation fails.\n     *\n     * @param options - An object containing the extended key, or an extended\n     * public (xpub) or private (xprv) key.\n     * @param options.depth - The depth of the node.\n     * @param options.privateKey - The private key for the node.\n     * @param options.publicKey - The public key for the node. If a private key is\n     * specified, this parameter is ignored.\n     * @param options.chainCode - The chain code for the node.\n     */\n    static async fromExtendedKey(options) {\n        if (typeof options === 'string') {\n            const extendedKey = (0, extended_keys_1.decodeExtendedKey)(options);\n            const { chainCode, depth, parentFingerprint, index } = extendedKey;\n            if (extendedKey.version === extended_keys_1.PRIVATE_KEY_VERSION) {\n                const { privateKey } = extendedKey;\n                return BIP44Node.fromExtendedKey({\n                    depth,\n                    parentFingerprint,\n                    index,\n                    privateKey,\n                    chainCode,\n                });\n            }\n            const { publicKey } = extendedKey;\n            return BIP44Node.fromExtendedKey({\n                depth,\n                parentFingerprint,\n                index,\n                publicKey,\n                chainCode,\n            });\n        }\n        const { privateKey, publicKey, chainCode, depth, parentFingerprint, index, } = options;\n        validateBIP44Depth(depth);\n        const node = await SLIP10Node_1.SLIP10Node.fromExtendedKey({\n            privateKey,\n            publicKey,\n            chainCode,\n            depth,\n            parentFingerprint,\n            index,\n            curve: 'secp256k1',\n        });\n        return new BIP44Node(node);\n    }\n    /**\n     * Create a new BIP-44 node from a derivation path. The derivation path\n     * must be rooted, i.e. it must begin with a BIP-39 node, given as a string of\n     * the form `bip39:MNEMONIC`, where `MNEMONIC` is a space-separated list of\n     * BIP-39 seed phrase words.\n     *\n     * All parameters are stringently validated, and an error is thrown if\n     * validation fails.\n     *\n     * Recall that a BIP-44 HD tree path consists of the following nodes:\n     *\n     * `m / 44' / coin_type' / account' / change / address_index`\n     *\n     * With the following depths:\n     *\n     * `0 / 1 / 2 / 3 / 4 / 5`\n     *\n     * @param options - An object containing the derivation path.\n     * @param options.derivationPath - The rooted HD tree path that will be used\n     * to derive the key of this node.\n     */\n    static async fromDerivationPath({ derivationPath, }) {\n        validateBIP44Depth(derivationPath.length - 1);\n        validateBIP44DerivationPath(derivationPath, constants_1.MIN_BIP_44_DEPTH);\n        const node = await SLIP10Node_1.SLIP10Node.fromDerivationPath({\n            derivationPath,\n            curve: 'secp256k1',\n        });\n        return new BIP44Node(node);\n    }\n    get depth() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").depth;\n    }\n    get privateKeyBytes() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").privateKeyBytes;\n    }\n    get publicKeyBytes() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").publicKeyBytes;\n    }\n    get chainCodeBytes() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").chainCodeBytes;\n    }\n    get privateKey() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").privateKey;\n    }\n    get publicKey() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").publicKey;\n    }\n    get compressedPublicKey() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").compressedPublicKey;\n    }\n    get compressedPublicKeyBytes() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").compressedPublicKeyBytes;\n    }\n    get chainCode() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").chainCode;\n    }\n    get address() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").address;\n    }\n    get masterFingerprint() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").masterFingerprint;\n    }\n    get parentFingerprint() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").parentFingerprint;\n    }\n    get fingerprint() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").fingerprint;\n    }\n    get index() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").index;\n    }\n    get extendedKey() {\n        const data = {\n            depth: this.depth,\n            parentFingerprint: this.parentFingerprint,\n            index: this.index,\n            chainCode: this.chainCodeBytes,\n        };\n        if (this.privateKeyBytes) {\n            return (0, extended_keys_1.encodeExtendedKey)({\n                ...data,\n                version: extended_keys_1.PRIVATE_KEY_VERSION,\n                privateKey: this.privateKeyBytes,\n            });\n        }\n        return (0, extended_keys_1.encodeExtendedKey)({\n            ...data,\n            version: extended_keys_1.PUBLIC_KEY_VERSION,\n            publicKey: this.publicKeyBytes,\n        });\n    }\n    get curve() {\n        return __classPrivateFieldGet(this, _BIP44Node_node, \"f\").curve;\n    }\n    /**\n     * Get a neutered version of this node, i.e. a node without a private key.\n     *\n     * @returns A neutered version of this node.\n     */\n    neuter() {\n        const node = __classPrivateFieldGet(this, _BIP44Node_node, \"f\").neuter();\n        return new BIP44Node(node);\n    }\n    /**\n     * Derives a child of the key contains be this node and returns a new\n     * {@link BIP44Node} containing the child key.\n     *\n     * The specified path must be a valid HD path from this node, per BIP-44.\n     * At present, this means that the path must consist of no more than 5 BIP-32\n     * nodes, depending on the depth of this node.\n     *\n     * Recall that a BIP-44 HD tree path consists of the following nodes:\n     *\n     * `m / 44' / coin_type' / account' / change / address_index`\n     *\n     * With the following depths:\n     *\n     * `0 / 1 / 2 / 3 / 4 / 5`\n     *\n     * @param path - The partial (non-rooted) BIP-44 HD tree path will be used\n     * to derive a child key from the parent key contained within this node.\n     * @returns The {@link BIP44Node} corresponding to the derived child key.\n     */\n    async derive(path) {\n        if (this.depth === constants_1.MAX_BIP_44_DEPTH) {\n            throw new Error('Illegal operation: This HD tree node is already a leaf node.');\n        }\n        const newDepth = this.depth + path.length;\n        validateBIP44Depth(newDepth);\n        validateBIP44DerivationPath(path, (this.depth + 1));\n        const node = await __classPrivateFieldGet(this, _BIP44Node_node, \"f\").derive(path);\n        return new BIP44Node(node);\n    }\n    // This is documented in the interface of this class.\n    toJSON() {\n        return {\n            depth: this.depth,\n            masterFingerprint: this.masterFingerprint,\n            parentFingerprint: this.parentFingerprint,\n            index: this.index,\n            privateKey: this.privateKey,\n            publicKey: this.publicKey,\n            chainCode: this.chainCode,\n        };\n    }\n}\nexports.BIP44Node = BIP44Node;\n_BIP44Node_node = new WeakMap();\n/**\n * Validates a BIP-44 path depth. Effectively, asserts that the depth is an\n * integer `number` N such that 0 <= N <= 5. Throws an error if validation\n * fails.\n *\n * @param depth - The depth to validate.\n */\nfunction validateBIP44Depth(depth) {\n    (0, SLIP10Node_1.validateBIP32Depth)(depth);\n    if (depth < constants_1.MIN_BIP_44_DEPTH || depth > constants_1.MAX_BIP_44_DEPTH) {\n        throw new Error(`Invalid HD tree path depth: The depth must be a positive integer N such that 0 <= N <= 5. Received: \"${depth}\"`);\n    }\n}\nexports.validateBIP44Depth = validateBIP44Depth;\n/**\n * Ensures that the given derivation is valid by BIP-44.\n *\n * Recall that a BIP-44 HD tree path consists of the following nodes:\n *\n * `m / 44' / coin_type' / account' / change / address_index`\n *\n * With the following depths:\n *\n * `0 / 1 / 2 / 3 / 4 / 5`\n *\n * @param path - The path to validate.\n * @param startingDepth - The depth of the first node of the derivation path.\n */\nfunction validateBIP44DerivationPath(path, startingDepth) {\n    path.forEach((nodeToken, index) => {\n        const currentDepth = startingDepth + index;\n        if (currentDepth === constants_1.MIN_BIP_44_DEPTH) {\n            if (!(nodeToken instanceof Uint8Array) &&\n                !constants_1.BIP_39_PATH_REGEX.test(nodeToken)) {\n                throw new Error('Invalid derivation path: The \"m\" / seed node (depth 0) must be a BIP-39 node.');\n            }\n            return;\n        }\n        (0, utils_1.assert)(typeof nodeToken === 'string');\n        // eslint-disable-next-line default-case\n        switch (currentDepth) {\n            case 1:\n                if (nodeToken !== constants_1.BIP44PurposeNodeToken) {\n                    throw new Error(`Invalid derivation path: The \"purpose\" node (depth 1) must be the string \"${constants_1.BIP44PurposeNodeToken}\".`);\n                }\n                break;\n            case 2:\n                if (!constants_1.BIP_32_PATH_REGEX.test(nodeToken) || !(0, utils_2.isHardened)(nodeToken)) {\n                    throw new Error('Invalid derivation path: The \"coin_type\" node (depth 2) must be a hardened BIP-32 node.');\n                }\n                break;\n            case 3:\n                if (!constants_1.BIP_32_PATH_REGEX.test(nodeToken) || !(0, utils_2.isHardened)(nodeToken)) {\n                    throw new Error('Invalid derivation path: The \"account\" node (depth 3) must be a hardened BIP-32 node.');\n                }\n                break;\n            case 4:\n                if (!constants_1.BIP_32_PATH_REGEX.test(nodeToken)) {\n                    throw new Error('Invalid derivation path: The \"change\" node (depth 4) must be a BIP-32 node.');\n                }\n                break;\n            case constants_1.MAX_BIP_44_DEPTH: // 5\n                if (!constants_1.BIP_32_PATH_REGEX.test(nodeToken)) {\n                    throw new Error('Invalid derivation path: The \"address_index\" node (depth 5) must be a BIP-32 node.');\n                }\n                break;\n        }\n    });\n}\n//# sourceMappingURL=BIP44Node.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _SLIP10Node_constructorGuard;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveChildNode = exports.validateRootIndex = exports.validateMasterParentFingerprint = exports.validateParentFingerprint = exports.validateBIP32Depth = exports.SLIP10Node = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst constants_1 = require(\"./constants.cjs\");\nconst curves_1 = require(\"./curves/index.cjs\");\nconst derivation_1 = require(\"./derivation.cjs\");\nconst bip32_1 = require(\"./derivers/bip32.cjs\");\nconst utils_2 = require(\"./utils.cjs\");\nclass SLIP10Node {\n    // eslint-disable-next-line no-restricted-syntax\n    constructor({ depth, masterFingerprint, parentFingerprint, index, chainCode, privateKey, publicKey, curve, }, constructorGuard) {\n        (0, utils_1.assert)(constructorGuard === __classPrivateFieldGet(SLIP10Node, _a, \"f\", _SLIP10Node_constructorGuard), 'SLIP10Node can only be constructed using `SLIP10Node.fromJSON`, `SLIP10Node.fromExtendedKey`, or `SLIP10Node.fromDerivationPath`.');\n        this.depth = depth;\n        this.masterFingerprint = masterFingerprint;\n        this.parentFingerprint = parentFingerprint;\n        this.index = index;\n        this.chainCodeBytes = chainCode;\n        this.privateKeyBytes = privateKey;\n        this.publicKeyBytes = publicKey;\n        this.curve = curve;\n        Object.freeze(this);\n    }\n    /**\n     * Wrapper of the {@link fromExtendedKey} function. Refer to that function\n     * for documentation.\n     *\n     * @param json - The JSON representation of a SLIP-10 node.\n     */\n    static async fromJSON(json) {\n        return SLIP10Node.fromExtendedKey(json);\n    }\n    /**\n     * Create a new SLIP-10 node from a key and chain code. You must specify\n     * either a private key or a public key. When specifying a private key,\n     * the public key will be derived from the private key.\n     *\n     * All parameters are stringently validated, and an error is thrown if\n     * validation fails.\n     *\n     * @param options - The options for the new node.\n     * @param options.depth - The depth of the node.\n     * @param options.masterFingerprint - The fingerprint of the master node, i.e., the\n     * node at depth 0. May be undefined if this node was created from an extended\n     * key.\n     * @param options.parentFingerprint - The fingerprint of the parent key, or 0 if\n     * the node is a master node.\n     * @param options.index - The index of the node, or 0 if the node is a master node.\n     * @param options.privateKey - The private key for the node.\n     * @param options.publicKey - The public key for the node. If a private key is\n     * specified, this parameter is ignored.\n     * @param options.chainCode - The chain code for the node.\n     * @param options.curve - The curve used by the node.\n     */\n    static async fromExtendedKey({ depth, masterFingerprint, parentFingerprint, index, privateKey, publicKey, chainCode, curve, }) {\n        const chainCodeBytes = (0, utils_2.getBytes)(chainCode, constants_1.BYTES_KEY_LENGTH);\n        (0, utils_2.validateCurve)(curve);\n        validateBIP32Depth(depth);\n        (0, utils_2.validateBIP32Index)(index);\n        validateRootIndex(index, depth);\n        validateParentFingerprint(parentFingerprint, depth);\n        validateMasterParentFingerprint(masterFingerprint, parentFingerprint, depth);\n        const curveObject = (0, curves_1.getCurveByName)(curve);\n        if (privateKey) {\n            const privateKeyBytes = (0, utils_2.getBytesUnsafe)(privateKey, curveObject.privateKeyLength);\n            (0, utils_1.assert)(curveObject.isValidPrivateKey(privateKeyBytes), `Invalid private key: Value is not a valid ${curve} private key.`);\n            return new SLIP10Node({\n                depth,\n                masterFingerprint,\n                parentFingerprint,\n                index,\n                chainCode: chainCodeBytes,\n                privateKey: privateKeyBytes,\n                publicKey: await curveObject.getPublicKey(privateKeyBytes),\n                curve,\n            }, __classPrivateFieldGet(this, _a, \"f\", _SLIP10Node_constructorGuard));\n        }\n        if (publicKey) {\n            const publicKeyBytes = (0, utils_2.getBytes)(publicKey, curveObject.publicKeyLength);\n            return new SLIP10Node({\n                depth,\n                masterFingerprint,\n                parentFingerprint,\n                index,\n                chainCode: chainCodeBytes,\n                publicKey: publicKeyBytes,\n                curve,\n            }, __classPrivateFieldGet(this, _a, \"f\", _SLIP10Node_constructorGuard));\n        }\n        throw new Error('Invalid options: Must provide either a private key or a public key.');\n    }\n    /**\n     * Create a new SLIP-10 node from a derivation path. The derivation path\n     * must be rooted, i.e. it must begin with a BIP-39 node, given as a string of\n     * the form `bip39:MNEMONIC`, where `MNEMONIC` is a space-separated list of\n     * BIP-39 seed phrase words.\n     *\n     * All parameters are stringently validated, and an error is thrown if\n     * validation fails.\n     *\n     * Recall that a BIP-44 HD tree path consists of the following nodes:\n     *\n     * `m / 44' / coin_type' / account' / change / address_index`\n     *\n     * With the following depths:\n     *\n     * `0 / 1 / 2 / 3 / 4 / 5`\n     *\n     * @param options - The options for the new node.\n     * @param options.derivationPath - The rooted HD tree path that will be used\n     * to derive the key of this node.\n     * @param options.curve - The curve used by the node.\n     * @returns A new SLIP-10 node.\n     */\n    static async fromDerivationPath({ derivationPath, curve, }) {\n        (0, utils_2.validateCurve)(curve);\n        if (!derivationPath) {\n            throw new Error('Invalid options: Must provide a derivation path.');\n        }\n        if (derivationPath.length === 0) {\n            throw new Error('Invalid derivation path: May not specify an empty derivation path.');\n        }\n        return await (0, derivation_1.deriveKeyFromPath)({\n            path: derivationPath,\n            depth: derivationPath.length - 1,\n            curve,\n        });\n    }\n    get chainCode() {\n        return (0, utils_1.bytesToHex)(this.chainCodeBytes);\n    }\n    get privateKey() {\n        if (this.privateKeyBytes) {\n            return (0, utils_1.bytesToHex)(this.privateKeyBytes);\n        }\n        return undefined;\n    }\n    get publicKey() {\n        return (0, utils_1.bytesToHex)(this.publicKeyBytes);\n    }\n    get compressedPublicKeyBytes() {\n        return (0, curves_1.getCurveByName)(this.curve).compressPublicKey(this.publicKeyBytes);\n    }\n    get compressedPublicKey() {\n        return (0, utils_1.bytesToHex)(this.compressedPublicKeyBytes);\n    }\n    get address() {\n        if (this.curve !== 'secp256k1') {\n            throw new Error('Unable to get address for this node: Only secp256k1 is supported.');\n        }\n        return (0, utils_1.bytesToHex)((0, bip32_1.publicKeyToEthAddress)(this.publicKeyBytes));\n    }\n    get fingerprint() {\n        return (0, utils_2.getFingerprint)(this.compressedPublicKeyBytes, (0, curves_1.getCurveByName)(this.curve).compressedPublicKeyLength);\n    }\n    /**\n     * Get a neutered version of this node, i.e. a node without a private key.\n     *\n     * @returns A neutered version of this node.\n     */\n    neuter() {\n        return new SLIP10Node({\n            depth: this.depth,\n            masterFingerprint: this.masterFingerprint,\n            parentFingerprint: this.parentFingerprint,\n            index: this.index,\n            chainCode: this.chainCodeBytes,\n            publicKey: this.publicKeyBytes,\n            curve: this.curve,\n        }, __classPrivateFieldGet(SLIP10Node, _a, \"f\", _SLIP10Node_constructorGuard));\n    }\n    /**\n     * Derives a child of the key contains be this node and returns a new\n     * {@link SLIP10Node} containing the child key.\n     *\n     * The specified path must be a valid HD path from this node, per SLIP-10.\n     *\n     * @param path - The partial (non-rooted) SLIP-10 HD tree path will be used\n     * to derive a child key from the parent key contained within this node.\n     * @returns The {@link SLIP10Node} corresponding to the derived child key.\n     */\n    async derive(path) {\n        return await deriveChildNode({\n            path,\n            node: this,\n        });\n    }\n    // This is documented in the interface of this class.\n    toJSON() {\n        return {\n            depth: this.depth,\n            masterFingerprint: this.masterFingerprint,\n            parentFingerprint: this.parentFingerprint,\n            index: this.index,\n            curve: this.curve,\n            privateKey: this.privateKey,\n            publicKey: this.publicKey,\n            chainCode: this.chainCode,\n        };\n    }\n}\nexports.SLIP10Node = SLIP10Node;\n_a = SLIP10Node;\n_SLIP10Node_constructorGuard = { value: Symbol('SLIP10Node.constructor') };\n/**\n * Validates a BIP-32 path depth. Effectively, asserts that the depth is an\n * integer `number`. Throws an error if validation fails.\n *\n * @param depth - The depth to validate.\n */\nfunction validateBIP32Depth(depth) {\n    if (!(0, utils_2.isValidInteger)(depth)) {\n        throw new Error(`Invalid HD tree path depth: The depth must be a positive integer. Received: \"${String(depth)}\".`);\n    }\n}\nexports.validateBIP32Depth = validateBIP32Depth;\n/**\n * Validates a BIP-32 parent fingerprint. Effectively, asserts that the fingerprint is an\n * integer `number`. Throws an error if validation fails.\n *\n * @param parentFingerprint - The parent fingerprint to validate.\n * @param depth - The depth of the node to validate.\n * @throws If the parent fingerprint is not a positive integer, or invalid for\n * the current depth.\n */\nfunction validateParentFingerprint(parentFingerprint, depth) {\n    if (!(0, utils_2.isValidInteger)(parentFingerprint)) {\n        throw new Error(`Invalid parent fingerprint: The fingerprint must be a positive integer. Received: \"${String(parentFingerprint)}\".`);\n    }\n    if (depth === 0 && parentFingerprint !== 0) {\n        throw new Error(`Invalid parent fingerprint: The fingerprint of the root node must be 0. Received: \"${String(parentFingerprint)}\".`);\n    }\n    if (depth > 0 && parentFingerprint === 0) {\n        throw new Error(`Invalid parent fingerprint: The fingerprint of a child node must not be 0. Received: \"${String(parentFingerprint)}\".`);\n    }\n}\nexports.validateParentFingerprint = validateParentFingerprint;\n/**\n * Validate that a given combination of master fingerprint and parent\n * fingerprint is valid for the given depth.\n *\n * @param masterFingerprint - The master fingerprint to validate.\n * @param parentFingerprint - The parent fingerprint to validate.\n * @param depth - The depth of the node to validate.\n * @throws If the combination of master fingerprint and parent fingerprint is\n * invalid for the given depth.\n */\nfunction validateMasterParentFingerprint(masterFingerprint, parentFingerprint, depth) {\n    // The master fingerprint is optional.\n    if (!masterFingerprint) {\n        return;\n    }\n    if (depth >= 2 && masterFingerprint === parentFingerprint) {\n        throw new Error(`Invalid parent fingerprint: The fingerprint of a child node cannot be equal to the master fingerprint. Received: \"${String(parentFingerprint)}\".`);\n    }\n}\nexports.validateMasterParentFingerprint = validateMasterParentFingerprint;\n/**\n * Validate that the index is zero for the root node.\n *\n * @param index - The index to validate.\n * @param depth - The depth of the node to validate.\n * @throws If the index is not zero for the root node.\n */\nfunction validateRootIndex(index, depth) {\n    if (depth === 0 && index !== 0) {\n        throw new Error(`Invalid index: The index of the root node must be 0. Received: \"${String(index)}\".`);\n    }\n}\nexports.validateRootIndex = validateRootIndex;\n/**\n * Derives a child key from the given parent key.\n *\n * @param options - The options to use when deriving the child key.\n * @param options.node - The node to derive from.\n * @param options.path - The path to the child node / key.\n * @returns The derived key and depth.\n */\nasync function deriveChildNode({ path, node, }) {\n    if (path.length === 0) {\n        throw new Error('Invalid HD tree derivation path: Deriving a path of length 0 is not defined.');\n    }\n    // Note that we do not subtract 1 from the length of the path to the child,\n    // unlike when we calculate the depth of a rooted path.\n    const newDepth = node.depth + path.length;\n    validateBIP32Depth(newDepth);\n    return await (0, derivation_1.deriveKeyFromPath)({\n        path,\n        node,\n        depth: newDepth,\n    });\n}\nexports.deriveChildNode = deriveChildNode;\n//# sourceMappingURL=SLIP10Node.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BIP_32_HARDENED_OFFSET = exports.BIP_39_PATH_REGEX = exports.CIP_3_PATH_REGEX = exports.SLIP_10_PATH_REGEX = exports.BIP_32_PATH_REGEX = exports.UNPREFIXED_BIP_32_PATH_REGEX = exports.UNPREFIXED_PATH_REGEX = exports.BIP44PurposeNodeToken = exports.MAX_BIP_32_INDEX = exports.MAX_UNHARDENED_BIP_32_INDEX = exports.MAX_BIP_44_DEPTH = exports.MIN_BIP_44_DEPTH = exports.BYTES_KEY_LENGTH = void 0;\nexports.BYTES_KEY_LENGTH = 32;\nexports.MIN_BIP_44_DEPTH = 0;\nexports.MAX_BIP_44_DEPTH = 5;\nexports.MAX_UNHARDENED_BIP_32_INDEX = 0x7fffffff; // 2^31 - 1\nexports.MAX_BIP_32_INDEX = 0xffffffff; // 2^32 - 1\nexports.BIP44PurposeNodeToken = `bip32:44'`;\nexports.UNPREFIXED_PATH_REGEX = /^\\d+$/u;\n/**\n * e.g.\n * -  0\n * -  0'\n */\nexports.UNPREFIXED_BIP_32_PATH_REGEX = /^(?<index>\\d+)'?$/u;\n/**\n * e.g.\n * -  bip32:0\n * -  bip32:0'\n */\nexports.BIP_32_PATH_REGEX = /^bip32:\\d+'?$/u;\n/**\n * e.g.\n * -  slip10:0\n * -  slip10:0'\n */\nexports.SLIP_10_PATH_REGEX = /^slip10:\\d+'?$/u;\n/**\n * e.g.\n * -  cip3:0\n * -  cip3:0'\n */\nexports.CIP_3_PATH_REGEX = /^cip3:\\d+'?$/u;\n/**\n * bip39:<SPACE_DELMITED_SEED_PHRASE>\n *\n * The seed phrase must consist of 12 <= 24 words.\n */\nexports.BIP_39_PATH_REGEX = /^bip39:([a-z]+){1}( [a-z]+){11,23}$/u;\nexports.BIP_32_HARDENED_OFFSET = 0x80000000;\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mod = exports.getCurveByName = exports.curves = void 0;\nconst ed25519 = __importStar(require(\"./ed25519.cjs\"));\nconst ed25519Bip32 = __importStar(require(\"./ed25519Bip32.cjs\"));\nconst secp256k1 = __importStar(require(\"./secp256k1.cjs\"));\nexports.curves = {\n    secp256k1,\n    ed25519,\n    ed25519Bip32,\n};\n/**\n * Get a curve by name.\n *\n * @param curveName - The name of the curve to get.\n * @returns The curve.\n */\nfunction getCurveByName(curveName) {\n    return exports.curves[curveName];\n}\nexports.getCurveByName = getCurveByName;\nvar modular_1 = require(\"@noble/curves/abstract/modular\");\nObject.defineProperty(exports, \"mod\", { enumerable: true, get: function () { return modular_1.mod; } });\n//# sourceMappingURL=curve.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compressedPublicKeyLength = exports.masterNodeGenerationSpec = exports.privateKeyLength = exports.decompressPublicKey = exports.compressPublicKey = exports.publicAdd = exports.getPublicKey = exports.publicKeyLength = exports.deriveUnhardenedKeys = exports.isValidPrivateKey = exports.secret = exports.name = exports.curve = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst ed25519_1 = require(\"@noble/curves/ed25519\");\nexports.curve = ed25519_1.ed25519.CURVE;\nexports.name = 'ed25519';\n// Secret is defined in SLIP-10:\n// https://github.com/satoshilabs/slips/blob/133ea52a8e43d338b98be208907e144277e44c0e/slip-0010.md#master-key-generation\nexports.secret = (0, utils_1.stringToBytes)('ed25519 seed');\n// All private keys are valid for ed25519:\n// https://github.com/satoshilabs/slips/blob/133ea52a8e43d338b98be208907e144277e44c0e/slip-0010.md#master-key-generation\nconst isValidPrivateKey = (_privateKey) => true;\nexports.isValidPrivateKey = isValidPrivateKey;\nexports.deriveUnhardenedKeys = false;\nexports.publicKeyLength = 33;\nconst getPublicKey = (privateKey, _compressed) => {\n    const publicKey = ed25519_1.ed25519.getPublicKey(privateKey);\n    return (0, utils_1.concatBytes)([new Uint8Array([0]), publicKey]);\n};\nexports.getPublicKey = getPublicKey;\nconst publicAdd = (_publicKey, _tweak) => {\n    throw new Error('Ed25519 does not support public key derivation.');\n};\nexports.publicAdd = publicAdd;\nconst compressPublicKey = (publicKey) => {\n    // Ed25519 public keys don't have a compressed form.\n    return publicKey;\n};\nexports.compressPublicKey = compressPublicKey;\nconst decompressPublicKey = (publicKey) => {\n    // Ed25519 public keys don't have a compressed form.\n    return publicKey;\n};\nexports.decompressPublicKey = decompressPublicKey;\nexports.privateKeyLength = 32;\nexports.masterNodeGenerationSpec = 'slip10';\nexports.compressedPublicKeyLength = 33;\n//# sourceMappingURL=ed25519.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compressedPublicKeyLength = exports.masterNodeGenerationSpec = exports.privateKeyLength = exports.decompressPublicKey = exports.compressPublicKey = exports.publicAdd = exports.getPublicKey = exports.multiplyWithBase = exports.bytesToNumberLE = exports.publicKeyLength = exports.deriveUnhardenedKeys = exports.isValidPrivateKey = exports.secret = exports.name = exports.curve = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst modular_1 = require(\"@noble/curves/abstract/modular\");\nconst ed25519_1 = require(\"@noble/curves/ed25519\");\nexports.curve = ed25519_1.ed25519.CURVE;\n/**\n * Named after whitepaper: BIP32-Ed25519 Hierarchical Deterministic Keys over a Non-linear Keyspace\n * https://input-output-hk.github.io/adrestia/static/Ed25519_BIP.pdf\n * \"vanilla\" \"ed25519\" curve follows SLIP10: https://tezos.stackexchange.com/questions/2837/can-i-use-bip32-hd-key-pairs-to-derive-ed25519-addresses\n * note that that the important difference of the \"bip32\" version is that it allows unhardened key derivation\n */\nexports.name = 'ed25519Bip32';\n// Secret is empty string if not provided by user\nexports.secret = (0, utils_1.stringToBytes)('');\n/**\n * Get a byte from a private key at a given index.\n *\n * @param privateKey - The private key.\n * @param index - The index of the byte to get.\n * @returns The byte at the given index.\n * @throws If the private key is too short.\n */\nfunction getByte(privateKey, index) {\n    const byte = privateKey[index];\n    (0, utils_1.assert)(byte !== undefined, 'Private key is too short.');\n    return byte;\n}\n/**\n * Check if a private key is valid.\n *\n * @param privateKey - The private key to check.\n * @returns Whether the private key is valid.\n */\nconst isValidPrivateKey = (privateKey) => {\n    /* eslint-disable no-bitwise */\n    // Lowest 3 bits of the first byte must be zero\n    if ((getByte(privateKey, 0) & 0b00000111) !== 0) {\n        return false;\n    }\n    // The highest bit of the last byte must be zero\n    if ((getByte(privateKey, 31) & 0b10000000) !== 0) {\n        return false;\n    }\n    // The second highest bit of the last byte must be one\n    if ((getByte(privateKey, 31) & 0b01000000) !== 0b01000000) {\n        return false;\n    }\n    /* eslint-enable no-bitwise */\n    return true;\n};\nexports.isValidPrivateKey = isValidPrivateKey;\nexports.deriveUnhardenedKeys = true;\nexports.publicKeyLength = 32;\n/**\n * Converts a Uint8Array of bytes to a bigint in little-endian format.\n *\n * @param bytes - The Uint8Array of bytes to convert.\n * @returns The converted bigint value.\n */\nconst bytesToNumberLE = (bytes) => {\n    return (0, utils_1.hexToBigInt)((0, utils_1.bytesToHex)(Uint8Array.from(bytes).reverse()));\n};\nexports.bytesToNumberLE = bytesToNumberLE;\n/**\n * Multiplies the given key with the base point on the Edwards curve.\n * equivalent to https://github.com/jedisct1/libsodium/blob/93a6e79750a31bc0b946bf483b2ba1c77f9e94ce/src/libsodium/crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c#L105 .\n * which is used by cardano-js-sdk/crypto https://github.com/input-output-hk/cardano-js-sdk/blob/8a6db2a251cd1c956f52730a0d35de2b7fc67404/packages/crypto/src/Bip32/Bip32PrivateKey.ts#L161 .\n *\n * @param key - The key to multiply with the base point.\n * @returns The resulting point on the Edwards curve.\n */\nconst multiplyWithBase = (key) => {\n    // Little-endian SHA512 with modulo n\n    const scalar = (0, modular_1.mod)((0, exports.bytesToNumberLE)(key), exports.curve.n); // The actual scalar\n    const point = ed25519_1.ed25519.ExtendedPoint.BASE.multiply(scalar); // Point on Edwards curve aka public key\n    return point.toRawBytes(); // Uint8Array representation\n};\nexports.multiplyWithBase = multiplyWithBase;\n/**\n * Calculates the public key corresponding to a given private key.\n *\n * @param privateKey - The private key.\n * @param _compressed - Optional parameter to indicate if the public key should be compressed.\n * @returns The public key.\n */\nconst getPublicKey = async (privateKey, _compressed) => {\n    return (0, exports.multiplyWithBase)(privateKey.slice(0, 32));\n};\nexports.getPublicKey = getPublicKey;\n/**\n * Adds a tweak to a public key.\n *\n * @param publicKey - The public key.\n * @param tweak - The tweak to add.\n * @returns The resulting public key.\n */\nconst publicAdd = (publicKey, tweak) => {\n    return ed25519_1.ed25519.ExtendedPoint.fromHex((0, utils_1.remove0x)((0, utils_1.bytesToHex)(publicKey)))\n        .add(ed25519_1.ed25519.ExtendedPoint.fromHex((0, utils_1.remove0x)((0, utils_1.bytesToHex)(tweak))))\n        .toRawBytes();\n};\nexports.publicAdd = publicAdd;\n/**\n * Compresses an Ed25519 public key.\n *\n * @param publicKey - The public key to compress.\n * @returns The compressed public key.\n */\nconst compressPublicKey = (publicKey) => {\n    // Ed25519 public keys don't have a compressed form.\n    return publicKey;\n};\nexports.compressPublicKey = compressPublicKey;\n/**\n * Decompresses a compressed Ed25519Bip32 public key.\n *\n * @param publicKey - The compressed public key.\n * @returns The decompressed public key.\n */\nconst decompressPublicKey = (publicKey) => {\n    // Ed25519 public keys don't have a compressed form.\n    return publicKey;\n};\nexports.decompressPublicKey = decompressPublicKey;\nexports.privateKeyLength = 64;\nexports.masterNodeGenerationSpec = 'cip3';\nexports.compressedPublicKeyLength = 32;\n//# sourceMappingURL=ed25519Bip32.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ed25519Bip32 = exports.ed25519 = exports.secp256k1 = void 0;\n__exportStar(require(\"./curve.cjs\"), exports);\nexports.secp256k1 = __importStar(require(\"./secp256k1.cjs\"));\nexports.ed25519 = __importStar(require(\"./ed25519.cjs\"));\nexports.ed25519Bip32 = __importStar(require(\"./ed25519Bip32.cjs\"));\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compressedPublicKeyLength = exports.masterNodeGenerationSpec = exports.privateKeyLength = exports.decompressPublicKey = exports.compressPublicKey = exports.publicAdd = exports.getPublicKey = exports.isValidPrivateKey = exports.publicKeyLength = exports.deriveUnhardenedKeys = exports.secret = exports.name = exports.curve = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst secp256k1_1 = require(\"@noble/curves/secp256k1\");\nconst utils_2 = require(\"../utils.cjs\");\nexports.curve = secp256k1_1.secp256k1.CURVE;\nexports.name = 'secp256k1';\n// Secret is defined in BIP-32 and SLIP-10:\n// https://github.com/bitcoin/bips/blob/274fa400d630ba757bec0c03b35ebe2345197108/bip-0032.mediawiki#master-key-generation\n// https://github.com/satoshilabs/slips/blob/133ea52a8e43d338b98be208907e144277e44c0e/slip-0010.md#master-key-generation\nexports.secret = (0, utils_1.stringToBytes)('Bitcoin seed');\nexports.deriveUnhardenedKeys = true;\nexports.publicKeyLength = 65;\nconst isValidPrivateKey = (privateKey) => {\n    return secp256k1_1.secp256k1.utils.isValidPrivateKey(privateKey);\n};\nexports.isValidPrivateKey = isValidPrivateKey;\nconst getPublicKey = (privateKey, compressed = false) => secp256k1_1.secp256k1.getPublicKey(privateKey, compressed);\nexports.getPublicKey = getPublicKey;\nconst publicAdd = (publicKey, tweak) => {\n    (0, utils_1.assert)((0, utils_2.isValidBytesKey)(tweak, 32), 'Invalid tweak: Tweak must be a non-zero 32-byte Uint8Array.');\n    const point = secp256k1_1.secp256k1.ProjectivePoint.fromHex(publicKey);\n    // The returned child key Ki is point(parse256(IL)) + Kpar.\n    // This multiplies the tweak with the base point of the curve (Gx, Gy).\n    // https://github.com/bitcoin/bips/blob/274fa400d630ba757bec0c03b35ebe2345197108/bip-0032.mediawiki#public-parent-key--public-child-key\n    const newPoint = point.add(secp256k1_1.secp256k1.ProjectivePoint.fromPrivateKey(tweak));\n    newPoint.assertValidity();\n    return newPoint.toRawBytes(false);\n};\nexports.publicAdd = publicAdd;\nconst compressPublicKey = (publicKey) => {\n    const point = secp256k1_1.secp256k1.ProjectivePoint.fromHex(publicKey);\n    return point.toRawBytes(true);\n};\nexports.compressPublicKey = compressPublicKey;\nconst decompressPublicKey = (publicKey) => {\n    // This calculates a point on the elliptic curve from a compressed public key. We can then use\n    // this to get the uncompressed version of the public key.\n    const point = secp256k1_1.secp256k1.ProjectivePoint.fromHex(publicKey);\n    return point.toRawBytes(false);\n};\nexports.decompressPublicKey = decompressPublicKey;\nexports.privateKeyLength = 32;\nexports.masterNodeGenerationSpec = 'slip10';\nexports.compressedPublicKeyLength = 33;\n//# sourceMappingURL=secp256k1.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validatePathSegment = exports.deriveKeyFromPath = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst BIP44CoinTypeNode_1 = require(\"./BIP44CoinTypeNode.cjs\");\nconst BIP44Node_1 = require(\"./BIP44Node.cjs\");\nconst constants_1 = require(\"./constants.cjs\");\nconst curves_1 = require(\"./curves/index.cjs\");\nconst derivers_1 = require(\"./derivers/index.cjs\");\nconst SLIP10Node_1 = require(\"./SLIP10Node.cjs\");\n/**\n * Takes a full or partial HD path string and returns the key corresponding to\n * the given path, with the following constraints:\n *\n * - If the path starts with a BIP-32 node, a parent key must be provided.\n * - If the path starts with a BIP-39 node, a parent key must NOT be provided.\n * - The path cannot exceed 5 BIP-32 nodes in length, optionally preceded by\n * a single BIP-39 node.\n *\n * WARNING: It is the consumer's responsibility to ensure that the path is valid\n * relative to its parent key.\n *\n * @param args - The arguments for deriving a key from a path.\n * @param args.path - A full or partial HD path, e.g.:\n * `bip39:SEED_PHRASE/bip32:44'/bip32:60'/bip32:0'/bip32:0/bip32:0`.\n * BIP-39 seed phrases must be lowercase, space-delimited, and 12-24 words long.\n * @param args.node - The node to derive from.\n * @param args.depth - The depth of the segment.\n * @returns The derived key.\n */\nasync function deriveKeyFromPath(args) {\n    const { path, depth = path.length } = args;\n    const node = 'node' in args ? args.node : undefined;\n    const curve = 'curve' in args ? args.curve : node?.curve;\n    if (node &&\n        !(node instanceof SLIP10Node_1.SLIP10Node) &&\n        !(node instanceof BIP44Node_1.BIP44Node) &&\n        !(node instanceof BIP44CoinTypeNode_1.BIP44CoinTypeNode)) {\n        throw new Error('Invalid arguments: Node must be a SLIP-10 node or a BIP-44 node when provided.');\n    }\n    if (!curve) {\n        throw new Error('Invalid arguments: Must specify either a parent node or curve.');\n    }\n    validatePathSegment(path, Boolean(node?.privateKey) || Boolean(node?.publicKey), depth);\n    // Derive through each part of path. `pathSegment` needs to be cast because\n    // `HDPathTuple.reduce()` doesn't work. Note that the first element of the\n    // path can be a Uint8Array.\n    return await path.reduce(async (promise, pathNode, index) => {\n        const derivedNode = await promise;\n        if (typeof pathNode === 'string') {\n            const [pathType, pathPart] = pathNode.split(':');\n            (0, utils_1.assert)(pathType);\n            (0, utils_1.assert)(pathPart);\n            (0, utils_1.assert)(hasDeriver(pathType), `Unknown derivation type: \"${pathType}\".`);\n            const deriver = derivers_1.derivers[pathType];\n            return await deriver.deriveChildKey({\n                path: pathPart,\n                node: derivedNode,\n                curve: (0, curves_1.getCurveByName)(curve),\n            });\n        }\n        // Only the first path segment can be a Uint8Array.\n        (0, utils_1.assert)(index === 0, getMalformedError());\n        return await derivers_1.derivers.bip39.deriveChildKey({\n            path: pathNode,\n            node: derivedNode,\n            curve: (0, curves_1.getCurveByName)(curve),\n        });\n    }, Promise.resolve(node));\n}\nexports.deriveKeyFromPath = deriveKeyFromPath;\n/**\n * Check if the given path type is a valid deriver.\n *\n * @param pathType - The path type to check.\n * @returns Whether the path type is a valid deriver.\n */\nfunction hasDeriver(pathType) {\n    return pathType in derivers_1.derivers;\n}\n/**\n * The path segment must be one of the following:\n * - A lone BIP-32 path node.\n * - A lone BIP-39 path node.\n * - A multipath.\n *\n * @param path - The path segment string to validate.\n * @param hasKey - Whether the path segment has a key.\n * @param depth - The depth of the segment.\n */\nfunction validatePathSegment(path, hasKey, depth) {\n    if (path.length === 0) {\n        throw new Error(`Invalid HD path segment: The segment must not be empty.`);\n    }\n    let startsWithBip39 = false;\n    path.forEach((node, index) => {\n        if (index === 0) {\n            startsWithBip39 =\n                node instanceof Uint8Array || constants_1.BIP_39_PATH_REGEX.test(node);\n            if (\n            // TypeScript is unable to infer that `node` is a string here, so we\n            // need to explicitly check it again.\n            !(node instanceof Uint8Array) &&\n                !startsWithBip39 &&\n                !constants_1.BIP_32_PATH_REGEX.test(node) &&\n                !constants_1.SLIP_10_PATH_REGEX.test(node) &&\n                !constants_1.CIP_3_PATH_REGEX.test(node)) {\n                throw getMalformedError();\n            }\n        }\n        else if (node instanceof Uint8Array ||\n            (!constants_1.BIP_32_PATH_REGEX.test(node) &&\n                !constants_1.SLIP_10_PATH_REGEX.test(node) &&\n                !constants_1.CIP_3_PATH_REGEX.test(node))) {\n            throw getMalformedError();\n        }\n    });\n    if (depth === constants_1.MIN_BIP_44_DEPTH && (!startsWithBip39 || path.length !== 1)) {\n        throw new Error(`Invalid HD path segment: The segment must consist of a single BIP-39 node for depths of ${constants_1.MIN_BIP_44_DEPTH}. Received: \"${String(path)}\".`);\n    }\n    if (!hasKey && !startsWithBip39) {\n        throw new Error('Invalid derivation parameters: Must specify parent key if the first node of the path segment is not a BIP-39 node.');\n    }\n    if (hasKey && startsWithBip39) {\n        throw new Error('Invalid derivation parameters: May not specify parent key if the path segment starts with a BIP-39 node.');\n    }\n    const pathWithoutKey = (startsWithBip39 ? path.slice(1) : path);\n    if (pathWithoutKey.length > 0) {\n        const firstSegmentType = pathWithoutKey[0]?.split(':')[0];\n        (0, utils_1.assert)(firstSegmentType);\n        (0, utils_1.assert)(pathWithoutKey.every((segment) => segment.startsWith(`${firstSegmentType}:`)), `Invalid HD path segment: Cannot mix 'bip32' and 'slip10' path segments.`);\n    }\n}\nexports.validatePathSegment = validatePathSegment;\n/**\n * Get the error for a malformed path segment.\n *\n * @returns The error.\n */\nfunction getMalformedError() {\n    return new Error('Invalid HD path segment: The path segment is malformed.');\n}\n//# sourceMappingURL=derivation.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveChildKey = exports.publicKeyToEthAddress = exports.privateKeyToEthAddress = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst constants_1 = require(\"../constants.cjs\");\nconst curves_1 = require(\"../curves/index.cjs\");\nconst utils_2 = require(\"../utils.cjs\");\nconst shared_1 = require(\"./shared.cjs\");\n/**\n * Converts a BIP-32 private key to an Ethereum address.\n *\n * **WARNING:** Only validates that the key is non-zero and of the correct\n * length. It is the consumer's responsibility to ensure that the specified\n * key is a valid BIP-44 Ethereum `address_index` key.\n *\n * @param key - The `address_index` private key bytes to convert to an Ethereum\n * address.\n * @returns The Ethereum address corresponding to the given key.\n */\nfunction privateKeyToEthAddress(key) {\n    (0, utils_1.assert)(key instanceof Uint8Array && (0, utils_2.isValidBytesKey)(key, constants_1.BYTES_KEY_LENGTH), 'Invalid key: The key must be a 32-byte, non-zero Uint8Array.');\n    const publicKey = curves_1.secp256k1.getPublicKey(key, false);\n    return publicKeyToEthAddress(publicKey);\n}\nexports.privateKeyToEthAddress = privateKeyToEthAddress;\n/**\n * Converts a BIP-32 public key to an Ethereum address.\n *\n * **WARNING:** Only validates that the key is non-zero and of the correct\n * length. It is the consumer's responsibility to ensure that the specified\n * key is a valid BIP-44 Ethereum `address_index` key.\n *\n * @param key - The `address_index` public key bytes to convert to an Ethereum\n * address.\n * @returns The Ethereum address corresponding to the given key.\n */\nfunction publicKeyToEthAddress(key) {\n    (0, utils_1.assert)(key instanceof Uint8Array &&\n        (0, utils_2.isValidBytesKey)(key, curves_1.secp256k1.publicKeyLength), 'Invalid key: The key must be a 65-byte, non-zero Uint8Array.');\n    return (0, sha3_1.keccak_256)(key.slice(1)).slice(-20);\n}\nexports.publicKeyToEthAddress = publicKeyToEthAddress;\n/**\n * Derive a BIP-32 child key with a given path from a parent key.\n *\n * @param options - The options for deriving a child key.\n * @param options.path - The derivation path part to derive.\n * @param options.node - The node to derive from.\n * @param options.curve - The curve to use for derivation.\n * @returns The derived child key as a {@link SLIP10Node}.\n */\nasync function deriveChildKey(options) {\n    (0, utils_1.assert)(options.curve.name === 'secp256k1', 'Invalid curve: Only secp256k1 is supported by BIP-32.');\n    return (0, shared_1.deriveChildKey)(options, handleError);\n}\nexports.deriveChildKey = deriveChildKey;\n/**\n * Handles an error thrown during derivation by incrementing the child index\n * and retrying.\n *\n * @param _ - The error that was thrown.\n * @param options - The options for deriving a child key.\n * @returns The options for deriving a child key with the child index\n * incremented by one.\n */\nasync function handleError(_, options) {\n    const { childIndex, privateKey, publicKey, isHardened, curve, chainCode } = options;\n    (0, utils_2.validateBIP32Index)(childIndex + 1);\n    if (privateKey) {\n        const secretExtension = await (0, shared_1.deriveSecretExtension)({\n            privateKey,\n            childIndex: childIndex + 1,\n            isHardened,\n            curve,\n        });\n        const newEntropy = (0, shared_1.generateEntropy)({\n            chainCode,\n            extension: secretExtension,\n        });\n        return {\n            ...options,\n            childIndex: childIndex + 1,\n            entropy: newEntropy,\n        };\n    }\n    const publicExtension = (0, shared_1.derivePublicExtension)({\n        parentPublicKey: publicKey,\n        childIndex: childIndex + 1,\n    });\n    const newEntropy = (0, shared_1.generateEntropy)({\n        chainCode,\n        extension: publicExtension,\n    });\n    return {\n        ...options,\n        childIndex: childIndex + 1,\n        entropy: newEntropy,\n    };\n}\n//# sourceMappingURL=bip32.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.entropyToCip3MasterNode = exports.createBip39KeyFromSeed = exports.deriveChildKey = exports.bip39MnemonicToMultipath = void 0;\nconst scure_bip39_1 = require(\"@metamask/scure-bip39\");\nconst english_1 = require(\"@metamask/scure-bip39/dist/wordlists/english.js\");\nconst utils_1 = require(\"@metamask/utils\");\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst constants_1 = require(\"../constants.cjs\");\nconst SLIP10Node_1 = require(\"../SLIP10Node.cjs\");\nconst utils_2 = require(\"../utils.cjs\");\n/**\n * Convert a BIP-39 mnemonic phrase to a multi path.\n *\n * @param mnemonic - The BIP-39 mnemonic phrase to convert.\n * @returns The multi path.\n */\nfunction bip39MnemonicToMultipath(mnemonic) {\n    return `bip39:${mnemonic.toLowerCase().trim()}`;\n}\nexports.bip39MnemonicToMultipath = bip39MnemonicToMultipath;\n/**\n * Create a {@link SLIP10Node} from a BIP-39 mnemonic phrase.\n *\n * @param options - The options for creating the node.\n * @param options.path - The multi path.\n * @param options.curve - The curve to use for derivation.\n * @returns The node.\n */\nasync function deriveChildKey({ path, curve, }) {\n    switch (curve.masterNodeGenerationSpec) {\n        case 'slip10':\n            return createBip39KeyFromSeed(await (0, scure_bip39_1.mnemonicToSeed)(path, english_1.wordlist), curve);\n        case 'cip3':\n            return entropyToCip3MasterNode((0, scure_bip39_1.mnemonicToEntropy)(path, english_1.wordlist), curve);\n        default:\n            throw new Error('Unsupported master node generation spec.');\n    }\n}\nexports.deriveChildKey = deriveChildKey;\n/**\n * Create a {@link SLIP10Node} from a BIP-39 seed.\n *\n * @param seed - The cryptographic seed bytes.\n * @param curve - The curve to use.\n * @returns An object containing the corresponding BIP-39 master key and chain\n * code.\n */\nasync function createBip39KeyFromSeed(seed, curve) {\n    (0, utils_1.assert)(seed.length >= 16 && seed.length <= 64, 'Invalid seed: The seed must be between 16 and 64 bytes long.');\n    const key = (0, hmac_1.hmac)(sha512_1.sha512, curve.secret, seed);\n    const privateKey = key.slice(0, constants_1.BYTES_KEY_LENGTH);\n    const chainCode = key.slice(constants_1.BYTES_KEY_LENGTH);\n    (0, utils_1.assert)(curve.isValidPrivateKey(privateKey), 'Invalid private key: The private key must greater than 0 and less than the curve order.');\n    const masterFingerprint = (0, utils_2.getFingerprint)(await curve.getPublicKey(privateKey, true), curve.compressedPublicKeyLength);\n    return SLIP10Node_1.SLIP10Node.fromExtendedKey({\n        privateKey,\n        chainCode,\n        masterFingerprint,\n        depth: 0,\n        parentFingerprint: 0,\n        index: 0,\n        curve: curve.name,\n    });\n}\nexports.createBip39KeyFromSeed = createBip39KeyFromSeed;\n/**\n * Create a {@link SLIP10Node} from BIP-39 entropy.\n * This function is consistent with the Icarus derivation scheme.\n * Icarus root key derivation scheme: https://github.com/cardano-foundation/CIPs/blob/09d7d8ee1bd64f7e6b20b5a6cae088039dce00cb/CIP-0003/Icarus.md.\n * CIP3: https://github.com/cardano-foundation/CIPs/blob/09d7d8ee1bd64f7e6b20b5a6cae088039dce00cb/CIP-0003/CIP-0003.md#master-key-generation.\n *\n * @param entropy - The entropy value.\n * @param curve - The curve to use.\n * @returns The root key pair consisting of 64-byte private key and 32-byte chain code.\n */\nasync function entropyToCip3MasterNode(entropy, curve) {\n    (0, utils_1.assert)(entropy.length >= 16 && entropy.length <= 64, 'Invalid entropy: The entropy must be between 16 and 64 bytes long.');\n    const rootNode = (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, curve.secret, entropy, {\n        c: 4096,\n        dkLen: 96,\n    });\n    // Consistent with the Icarus derivation scheme.\n    // https://github.com/cardano-foundation/CIPs/blob/09d7d8ee1bd64f7e6b20b5a6cae088039dce00cb/CIP-0003/Icarus.md\n    /* eslint-disable no-bitwise */\n    rootNode[0] &= 248;\n    rootNode[31] &= 31;\n    rootNode[31] |= 64;\n    /* eslint-enable no-bitwise */\n    const privateKey = rootNode.slice(0, curve.privateKeyLength);\n    const chainCode = rootNode.slice(curve.privateKeyLength);\n    (0, utils_1.assert)(curve.isValidPrivateKey(privateKey), 'Invalid private key.');\n    const masterFingerprint = (0, utils_2.getFingerprint)(await curve.getPublicKey(privateKey), curve.compressedPublicKeyLength);\n    return SLIP10Node_1.SLIP10Node.fromExtendedKey({\n        privateKey,\n        chainCode,\n        masterFingerprint,\n        depth: 0,\n        parentFingerprint: 0,\n        index: 0,\n        curve: curve.name,\n    });\n}\nexports.entropyToCip3MasterNode = entropyToCip3MasterNode;\n//# sourceMappingURL=bip39.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveChildKey = exports.derivePublicKey = exports.deriveChainCode = exports.derivePrivateKey = exports.getKeyExtension = exports.add = exports.mod2Pow256 = exports.trunc28Mul8 = exports.padEnd32Bytes = exports.bigIntToBytes = exports.bytesToBigInt = exports.toReversed = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst constants_1 = require(\"../constants.cjs\");\nconst curves_1 = require(\"../curves/index.cjs\");\nconst SLIP10Node_1 = require(\"../SLIP10Node.cjs\");\nconst utils_2 = require(\"../utils.cjs\");\nconst shared_1 = require(\"./shared.cjs\");\n/**\n * CIP-3 https://github.com/cardano-foundation/CIPs/blob/09d7d8ee1bd64f7e6b20b5a6cae088039dce00cb/CIP-0003/CIP-0003.md.\n *\n * CIP-3 defines standards for deriving keys on Cardano.\n *\n * Key attributes.\n * - Root/Master key is derived from entropy, not seed. For this implementation we work with Icarus standard as it is the most widely used.\n * - See https://github.com/cardano-foundation/CIPs/blob/09d7d8ee1bd64f7e6b20b5a6cae088039dce00cb/CIP-0003/Icarus.md.\n *\n * - HD node consists of a 64 byte private key, 32 byte public key and 32 byte chain code.\n * - See https://github.com/cardano-foundation/CIPs/blob/09d7d8ee1bd64f7e6b20b5a6cae088039dce00cb/CIP-0003/CIP-0003.md#master-key-generation.\n *\n * - For derivation of BIP32 HD nodes, it uses modified version called BIP32-Ed25519.\n * - See https://input-output-hk.github.io/adrestia/static/Ed25519_BIP.pdf.\n */\n/**\n * Reverses the order of bytes in a Uint8Array.\n *\n * Native BigInt uses big-endian. Since cip3(bip32Edd25519) uses little-endian.\n * We need to reverse the bytes and have separate functions for bigIntToBytes and bytesToBigInt.\n * .slice() is used just to make a copy of the array.\n *\n * @param bytes - The input Uint8Array.\n * @returns A new Uint8Array with the bytes in reversed order.\n */\nconst toReversed = (bytes) => bytes.slice().reverse();\nexports.toReversed = toReversed;\n/**\n * Converts an array of bytes to a BigInt.\n *\n * @param bytes - The array of bytes to convert.\n * @returns The BigInt representation of the bytes.\n */\nconst bytesToBigInt = (bytes) => {\n    const reversed = (0, exports.toReversed)(bytes);\n    const bytesInHex = (0, utils_1.bytesToHex)(reversed);\n    return BigInt(bytesInHex);\n};\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Converts a BigInt to a byte array.\n *\n * @param bigInt - The BigInt to convert.\n * @returns The byte array representation of the BigInt.\n */\nconst bigIntToBytes = (bigInt) => {\n    const hexadecimal = bigInt.toString(16);\n    return (0, exports.toReversed)((0, utils_1.hexToBytes)(hexadecimal));\n};\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Pads end of the given bytes array with zeros to a length of 32 bytes.\n *\n * @param bytes - The bytes array to pad.\n * @returns The padded bytes array.\n */\nconst padEnd32Bytes = (bytes) => {\n    return (0, utils_1.concatBytes)([\n        bytes,\n        new Uint8Array(Math.max(32 - bytes.length, 0)).fill(0),\n    ]);\n};\nexports.padEnd32Bytes = padEnd32Bytes;\n/**\n * Truncates to first 28 bytes and multiplies by 8.\n *\n * @param bytes - Little-Endian big number in bytes.\n * @returns PadEnd32Bytes(left[0, 28] * 8)).\n */\nconst trunc28Mul8 = (bytes) => {\n    const truncLeftMul8 = (0, exports.bytesToBigInt)(bytes.slice(0, 28)) * BigInt(8);\n    return (0, exports.padEnd32Bytes)((0, exports.bigIntToBytes)(truncLeftMul8));\n};\nexports.trunc28Mul8 = trunc28Mul8;\n/**\n * Does module 2^256.\n *\n * @param bytes - Little-Endian big number in bytes.\n * @returns PadEnd32Bytes(mod(bytes, 2^256))).\n */\nconst mod2Pow256 = (bytes) => {\n    return (0, exports.padEnd32Bytes)((0, exports.bigIntToBytes)((0, curves_1.mod)((0, exports.bytesToBigInt)(bytes), BigInt(2) ** BigInt(256))));\n};\nexports.mod2Pow256 = mod2Pow256;\n/**\n * Adds the left to the right.\n *\n * @param left - Left hand side Little-Endian big number.\n * @param right - Right hand side Little-Endian big number.\n * @returns PadEnd32Bytes(left + right).\n */\nconst add = (left, right) => {\n    const added = (0, exports.bytesToBigInt)(left) + (0, exports.bytesToBigInt)(right);\n    return (0, exports.padEnd32Bytes)((0, exports.bigIntToBytes)(added)).slice(0, 32);\n};\nexports.add = add;\n/**\n * Concat tag, key and childIndex.\n *\n * @param tag - Key specific tag.\n * @param key - Key.\n * @param childIndex - Child index.\n * @returns PadEnd32Bytes(left + right).\n */\nconst getKeyExtension = (tag, key, childIndex) => {\n    return (0, utils_1.concatBytes)([\n        new Uint8Array([tag]),\n        key,\n        (0, utils_2.numberToUint32)(childIndex, true),\n    ]);\n};\nexports.getKeyExtension = getKeyExtension;\nconst Z_TAGS = {\n    normal: 2,\n    hardened: 0,\n};\n/**\n * Derives a private child key.\n *\n * Following \"Section V. BIP32-ED25519: SPECIFICATION, C.1,2\" in https://input-output-hk.github.io/adrestia/static/Ed25519_BIP.pdf.\n *\n * @param param1 - The parameters for deriving a child key.\n * @param param1.parentNode - The parent node containing private key, chain code, and public key.\n * @param param1.childIndex - The index of the child key.\n * @param param1.isHardened - Indicates if the child key is hardened.\n * @returns The derived child key.\n */\nconst derivePrivateKey = async ({ parentNode, childIndex, isHardened, }) => {\n    // extension = i >= 2^31 ? (0x00||kp||i) : (0x02||Ap||i)\n    const extension = isHardened\n        ? (0, exports.getKeyExtension)(Z_TAGS.hardened, parentNode.privateKeyBytes, childIndex + constants_1.BIP_32_HARDENED_OFFSET)\n        : (0, exports.getKeyExtension)(Z_TAGS.normal, parentNode.publicKeyBytes, childIndex);\n    // entropy = Fcp(extension)\n    const entropy = (0, shared_1.generateEntropy)({\n        chainCode: parentNode.chainCodeBytes,\n        extension,\n    });\n    const zl = entropy.subarray(0, 32);\n    const zr = entropy.subarray(32);\n    const parentKl = parentNode.privateKeyBytes.subarray(0, 32);\n    const parentKr = parentNode.privateKeyBytes.subarray(32);\n    // 8[ZL] + kPL\n    const childKl = (0, exports.add)((0, exports.trunc28Mul8)(zl), parentKl);\n    // ZR + kPR\n    const childKr = (0, exports.add)(zr, parentKr);\n    return (0, utils_1.concatBytes)([childKl, childKr]);\n};\nexports.derivePrivateKey = derivePrivateKey;\nconst CHAIN_CODE_TAGS = {\n    normal: 3,\n    hardened: 1,\n};\n/**\n * Derives a child chainCode.\n *\n * Following \"Section V. BIP32-ED25519: SPECIFICATION, C.3\" in https://input-output-hk.github.io/adrestia/static/Ed25519_BIP.pdf.\n *\n * @param param1 - The parameters for deriving a child chainCode.\n * @param param1.parentNode - The parent node containing optionally a private key, chain code, and public key.\n * @param param1.childIndex - The index of the child key.\n * @param param1.isHardened - Indicates if the child key is hardened.\n * @returns The derived child chainCode.\n */\nconst deriveChainCode = async ({ parentNode, childIndex, isHardened, }) => {\n    // extension = i >= 2^31 ? (0x01||kp||i) : (0x03||Ap||i)\n    const extension = isHardened\n        ? (0, exports.getKeyExtension)(CHAIN_CODE_TAGS.hardened, parentNode.privateKeyBytes, childIndex + constants_1.BIP_32_HARDENED_OFFSET)\n        : (0, exports.getKeyExtension)(CHAIN_CODE_TAGS.normal, parentNode.publicKeyBytes, childIndex);\n    // entropy = Fcp(extension)\n    const entropy = (0, shared_1.generateEntropy)({\n        chainCode: parentNode.chainCodeBytes,\n        extension,\n    });\n    return entropy.subarray(32);\n};\nexports.deriveChainCode = deriveChainCode;\nconst PUBLIC_KEY_TAGS = {\n    normal: 2,\n};\n/**\n * Derives a public key.\n *\n * Following \"Section V. BIP32-ED25519: SPECIFICATION, D\" in https://input-output-hk.github.io/adrestia/static/Ed25519_BIP.pdf.\n *\n * @param param1 - The parameters for deriving a child public key.\n * @param param1.parentNode - The parent node containing chain code, and public key.\n * @param param1.childIndex - The index of the child key.\n * @param param1.curve - Derivation curve.\n * @returns The derived child public key.\n */\nconst derivePublicKey = async ({ parentNode, childIndex, curve, }) => {\n    // extension = (0x02||Ap||i)\n    const extension = (0, exports.getKeyExtension)(PUBLIC_KEY_TAGS.normal, parentNode.publicKeyBytes, childIndex);\n    // entropy = Fcp(extension)\n    const entropy = (0, shared_1.generateEntropy)({\n        chainCode: parentNode.chainCodeBytes,\n        extension,\n    });\n    const zl = entropy.slice(0, 32);\n    // right = [8ZL] * B\n    const right = await curve.getPublicKey(\n    // [8ZL]\n    (0, exports.trunc28Mul8)(zl));\n    // Ai = AP + [8ZL]B,\n    return curve.publicAdd(parentNode.publicKeyBytes, right);\n};\nexports.derivePublicKey = derivePublicKey;\n/**\n * Derive a SLIP-10 child key with a given path from a parent key.\n *\n * @param options - The options for deriving a child key.\n * @returns SLIP10Node.\n */\nasync function deriveChildKey(options) {\n    const { curve, node, path } = options;\n    (0, shared_1.validateNode)(node);\n    const { childIndex, isHardened } = (0, shared_1.getValidatedPath)(path, node, curve);\n    if (curve.name !== 'ed25519Bip32' || !node) {\n        throw new Error('Unsupported curve: Only ed25519Bip32 is supported by CIP3.');\n    }\n    const actualChildIndex = childIndex + (isHardened ? constants_1.BIP_32_HARDENED_OFFSET : 0);\n    const { privateKeyBytes, chainCodeBytes, publicKeyBytes, masterFingerprint, depth, fingerprint: parentFingerprint, } = node;\n    if (privateKeyBytes) {\n        const parentNode = {\n            privateKeyBytes,\n            chainCodeBytes,\n            publicKeyBytes,\n        };\n        const privateKey = await (0, exports.derivePrivateKey)({\n            parentNode,\n            childIndex,\n            isHardened,\n        });\n        const chainCode = await (0, exports.deriveChainCode)({\n            parentNode,\n            childIndex,\n            isHardened,\n        });\n        return SLIP10Node_1.SLIP10Node.fromExtendedKey({\n            privateKey: (0, utils_1.bytesToHex)(privateKey),\n            chainCode: (0, utils_1.bytesToHex)(chainCode),\n            masterFingerprint,\n            depth: depth + 1,\n            parentFingerprint,\n            index: actualChildIndex,\n            curve: curve.name,\n        });\n    }\n    (0, utils_1.assert)(!isHardened, 'Invalid parameters: Cannot derive hardened child keys without a private key.');\n    const parentNode = {\n        chainCodeBytes,\n        publicKeyBytes,\n    };\n    const publicKey = await (0, exports.derivePublicKey)({\n        parentNode,\n        childIndex,\n        isHardened: false,\n        curve,\n    });\n    const chainCode = await (0, exports.deriveChainCode)({\n        parentNode,\n        childIndex,\n        isHardened: false,\n    });\n    return SLIP10Node_1.SLIP10Node.fromExtendedKey({\n        publicKey: (0, utils_1.bytesToHex)(publicKey),\n        chainCode: (0, utils_1.bytesToHex)(chainCode),\n        masterFingerprint,\n        depth: depth + 1,\n        parentFingerprint,\n        index: actualChildIndex,\n        curve: curve.name,\n    });\n}\nexports.deriveChildKey = deriveChildKey;\n//# sourceMappingURL=cip3.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBip39KeyFromSeed = exports.derivers = void 0;\nconst bip32 = __importStar(require(\"./bip32.cjs\"));\nconst bip39 = __importStar(require(\"./bip39.cjs\"));\nconst cip3 = __importStar(require(\"./cip3.cjs\"));\nconst slip10 = __importStar(require(\"./slip10.cjs\"));\nexports.derivers = {\n    bip32,\n    bip39,\n    slip10,\n    cip3,\n};\nvar bip39_1 = require(\"./bip39.cjs\");\nObject.defineProperty(exports, \"createBip39KeyFromSeed\", { enumerable: true, get: function () { return bip39_1.createBip39KeyFromSeed; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidatedPath = exports.validateNode = exports.generateEntropy = exports.privateAdd = exports.derivePublicChildKey = exports.derivePublicExtension = exports.deriveSecretExtension = exports.deriveChildKey = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst constants_1 = require(\"../constants.cjs\");\nconst curves_1 = require(\"../curves/index.cjs\");\nconst SLIP10Node_1 = require(\"../SLIP10Node.cjs\");\nconst utils_2 = require(\"../utils.cjs\");\n/**\n * Derive a BIP-32 or SLIP-10 child key with a given path from a parent key.\n *\n * Since BIP-32 and SLIP-10 are very similar, this function can be used to\n * derive both types of keys.\n *\n * @param options - The options for deriving a child key.\n * @param options.path - The derivation path part to derive.\n * @param options.node - The node to derive from.\n * @param options.curve - The curve to use for derivation.\n * @param handleError - A function that can handle errors that occur during\n * derivation.\n * @returns The derived node.\n */\nasync function deriveChildKey({ path, node, curve }, handleError) {\n    validateNode(node);\n    const { childIndex, isHardened } = getValidatedPath(path, node, curve);\n    const args = {\n        chainCode: node.chainCodeBytes,\n        childIndex,\n        isHardened,\n        depth: node.depth,\n        parentFingerprint: node.fingerprint,\n        masterFingerprint: node.masterFingerprint,\n        curve,\n    };\n    if (node.privateKeyBytes) {\n        const secretExtension = await deriveSecretExtension({\n            privateKey: node.privateKeyBytes,\n            childIndex,\n            isHardened,\n            curve,\n        });\n        const entropy = generateEntropy({\n            chainCode: node.chainCodeBytes,\n            extension: secretExtension,\n        });\n        return await deriveNode({\n            privateKey: node.privateKeyBytes,\n            entropy,\n            ...args,\n        }, handleError);\n    }\n    const publicExtension = derivePublicExtension({\n        parentPublicKey: node.compressedPublicKeyBytes,\n        childIndex,\n    });\n    const entropy = generateEntropy({\n        chainCode: node.chainCodeBytes,\n        extension: publicExtension,\n    });\n    return await deriveNode({\n        publicKey: node.compressedPublicKeyBytes,\n        entropy,\n        ...args,\n    }, handleError);\n}\nexports.deriveChildKey = deriveChildKey;\n/**\n * Derive a SLIP-10 child key from a parent key.\n *\n * @param options - The options for deriving a child key.\n * @param options.privateKey - The private key to derive from.\n * @param options.publicKey - The public key to derive from.\n * @param options.entropy - The entropy to use for deriving the child key.\n * @param options.chainCode - The chain code to use for deriving the child key.\n * @param options.childIndex - The child index to use for deriving the child key.\n * @param options.isHardened - Whether the child key is hardened.\n * @param options.depth - The depth of the child key.\n * @param options.parentFingerprint - The fingerprint of the parent key.\n * @param options.masterFingerprint - The fingerprint of the master key.\n * @param options.curve - The curve to use for deriving the child key.\n * @param handleError - A function to handle errors during derivation.\n * @returns The derived child key as {@link SLIP10Node}.\n */\nasync function deriveNode(options, handleError) {\n    const { privateKey, publicKey, entropy, childIndex, isHardened, depth, parentFingerprint, masterFingerprint, curve, } = options;\n    try {\n        if (privateKey) {\n            return await derivePrivateChildKey({\n                entropy,\n                privateKey,\n                depth,\n                masterFingerprint,\n                parentFingerprint,\n                childIndex,\n                isHardened,\n                curve,\n            });\n        }\n        return await derivePublicChildKey({\n            entropy,\n            publicKey,\n            depth,\n            masterFingerprint,\n            parentFingerprint,\n            childIndex,\n            curve,\n        });\n    }\n    catch (error) {\n        return await deriveNode(await handleError(error, options), handleError);\n    }\n}\n/**\n * Derive a BIP-32 secret extension from a parent key and child index.\n *\n * @param options - The options for deriving a secret extension.\n * @param options.privateKey - The parent private key bytes.\n * @param options.childIndex - The child index to derive.\n * @param options.isHardened - Whether the child index is hardened.\n * @param options.curve - The curve to use for derivation.\n * @returns The secret extension bytes.\n */\nasync function deriveSecretExtension({ privateKey, childIndex, isHardened, curve, }) {\n    if (isHardened) {\n        // Hardened child\n        return (0, utils_1.concatBytes)([\n            new Uint8Array([0]),\n            privateKey,\n            (0, utils_2.numberToUint32)(childIndex + constants_1.BIP_32_HARDENED_OFFSET),\n        ]);\n    }\n    // Normal child\n    const parentPublicKey = await curve.getPublicKey(privateKey, true);\n    return derivePublicExtension({ parentPublicKey, childIndex });\n}\nexports.deriveSecretExtension = deriveSecretExtension;\n/**\n * Derive a BIP-32 public extension from a parent key and child index.\n *\n * @param options - The options for deriving a public extension.\n * @param options.parentPublicKey - The parent public key bytes.\n * @param options.childIndex - The child index to derive.\n * @returns The public extension bytes.\n */\nfunction derivePublicExtension({ parentPublicKey, childIndex, }) {\n    return (0, utils_1.concatBytes)([parentPublicKey, (0, utils_2.numberToUint32)(childIndex)]);\n}\nexports.derivePublicExtension = derivePublicExtension;\n/**\n * Derive a BIP-32 key from a parent key and secret extension.\n *\n * @param options - The options for deriving a key.\n * @param options.privateKey - The parent private key bytes.\n * @param options.entropy - The entropy bytes.\n * @param options.curve - The curve to use for derivation.\n * @returns The derived key.\n */\nasync function generateKey({ privateKey, entropy, curve, }) {\n    const keyMaterial = entropy.slice(0, 32);\n    const childChainCode = entropy.slice(32);\n    // If curve is ed25519: The returned child key ki is parse256(IL).\n    // https://github.com/satoshilabs/slips/blob/133ea52a8e43d338b98be208907e144277e44c0e/slip-0010.md#private-parent-key--private-child-key\n    if (curve.name === 'ed25519') {\n        const publicKey = await curve.getPublicKey(keyMaterial);\n        return { privateKey: keyMaterial, publicKey, chainCode: childChainCode };\n    }\n    const childPrivateKey = privateAdd(privateKey, keyMaterial, curve);\n    const publicKey = await curve.getPublicKey(childPrivateKey);\n    return { privateKey: childPrivateKey, publicKey, chainCode: childChainCode };\n}\n/**\n * Derive a BIP-32 private child key with a given path from a parent key.\n *\n * @param args - The arguments for deriving a private child key.\n * @param args.entropy - The entropy to use for derivation.\n * @param args.privateKey - The parent private key to use for derivation.\n * @param args.depth - The depth of the parent node.\n * @param args.masterFingerprint - The fingerprint of the master node.\n * @param args.parentFingerprint - The fingerprint of the parent node.\n * @param args.childIndex - The child index to derive.\n * @param args.isHardened - Whether the child index is hardened.\n * @param args.curve - The curve to use for derivation.\n * @returns The derived {@link SLIP10Node}.\n */\nasync function derivePrivateChildKey({ entropy, privateKey, depth, masterFingerprint, parentFingerprint, childIndex, isHardened, curve, }) {\n    const actualChildIndex = childIndex + (isHardened ? constants_1.BIP_32_HARDENED_OFFSET : 0);\n    const { privateKey: childPrivateKey, chainCode: childChainCode } = await generateKey({\n        privateKey,\n        entropy,\n        curve,\n    });\n    return await SLIP10Node_1.SLIP10Node.fromExtendedKey({\n        privateKey: childPrivateKey,\n        chainCode: childChainCode,\n        depth: depth + 1,\n        masterFingerprint,\n        parentFingerprint,\n        index: actualChildIndex,\n        curve: curve.name,\n    });\n}\n/**\n * Derive a BIP-32 public key from a parent key and public extension.\n *\n * @param options - The options for deriving a public key.\n * @param options.publicKey - The parent public key bytes.\n * @param options.entropy - The entropy bytes.\n * @param options.curve - The curve to use for derivation.\n * @returns The derived public key.\n */\nfunction generatePublicKey({ publicKey, entropy, curve, }) {\n    const keyMaterial = entropy.slice(0, 32);\n    const childChainCode = entropy.slice(32);\n    // This function may fail if the resulting key is invalid.\n    const childPublicKey = curve.publicAdd(publicKey, keyMaterial);\n    return {\n        publicKey: childPublicKey,\n        chainCode: childChainCode,\n    };\n}\n/**\n * Derive a BIP-32 public child key with a given path from a parent key.\n *\n * @param args - The arguments for deriving a public child key.\n * @param args.entropy - The entropy to use for derivation.\n * @param args.publicKey - The parent public key to use for derivation.\n * @param args.depth - The depth of the parent node.\n * @param args.masterFingerprint - The fingerprint of the master node.\n * @param args.parentFingerprint - The fingerprint of the parent node.\n * @param args.childIndex - The child index to derive.\n * @param args.curve - The curve to use for derivation.\n * @returns The derived {@link SLIP10Node}.\n */\nasync function derivePublicChildKey({ entropy, publicKey, depth, masterFingerprint, parentFingerprint, childIndex, curve, }) {\n    const { publicKey: childPublicKey, chainCode: childChainCode } = generatePublicKey({\n        publicKey,\n        entropy,\n        curve,\n    });\n    return await SLIP10Node_1.SLIP10Node.fromExtendedKey({\n        publicKey: childPublicKey,\n        chainCode: childChainCode,\n        depth: depth + 1,\n        masterFingerprint,\n        parentFingerprint,\n        index: childIndex,\n        curve: curve.name,\n    });\n}\nexports.derivePublicChildKey = derivePublicChildKey;\n/**\n * Add a tweak to the private key: `(privateKey + tweak) % n`.\n *\n * @param privateKeyBytes - The private key as 32 byte Uint8Array.\n * @param tweakBytes - The tweak as 32 byte Uint8Array.\n * @param curve - The curve to use.\n * @throws If the private key or tweak is invalid.\n * @returns The private key with the tweak added to it.\n */\nfunction privateAdd(privateKeyBytes, tweakBytes, curve) {\n    (0, utils_1.assert)((0, utils_2.isValidBytesKey)(tweakBytes, 32), 'Invalid tweak: Tweak must be a non-zero 32-byte Uint8Array.');\n    const privateKey = (0, utils_1.bytesToBigInt)(privateKeyBytes);\n    const tweak = (0, utils_1.bytesToBigInt)(tweakBytes);\n    if (tweak >= curve.curve.n) {\n        throw new Error('Invalid tweak: Tweak is larger than the curve order.');\n    }\n    const added = (0, curves_1.mod)(privateKey + tweak, curve.curve.n);\n    const bytes = (0, utils_1.hexToBytes)(added.toString(16).padStart(64, '0'));\n    if (!curve.isValidPrivateKey(bytes)) {\n        throw new Error('Invalid private key or tweak: The resulting private key is invalid.');\n    }\n    return bytes;\n}\nexports.privateAdd = privateAdd;\n/**\n * Generate 64 bytes of (deterministic) entropy from a chain code and secret\n * extension.\n *\n * @param args - The arguments for generating entropy.\n * @param args.chainCode - The parent chain code bytes.\n * @param args.extension - The extension bytes.\n * @returns The generated entropy bytes.\n */\nfunction generateEntropy({ chainCode, extension }) {\n    return (0, hmac_1.hmac)(sha512_1.sha512, chainCode, extension);\n}\nexports.generateEntropy = generateEntropy;\n/**\n * Validate that a node is specified.\n *\n * @param node - The node to validate.\n * @throws If the node is not specified.\n */\nfunction validateNode(node) {\n    (0, utils_1.assert)(node, 'Invalid parameters: Must specify a node to derive from.');\n}\nexports.validateNode = validateNode;\n/**\n * Validate a path.\n *\n * @param path - The path to validate.\n * @param node - The node to validate the path against.\n * @param curve - The curve to validate the path against.\n * @throws If the path is invalid.\n */\nfunction validatePath(path, node, curve) {\n    (0, utils_1.assert)(typeof path === 'string', 'Invalid path: Must be a string.');\n    const isHardened = path.endsWith(`'`);\n    (0, utils_1.assert)(!isHardened || node.privateKey, 'Invalid parameters: Cannot derive hardened child keys without a private key.');\n    (0, utils_1.assert)(isHardened || curve.deriveUnhardenedKeys, `Invalid path: Cannot derive unhardened child keys with ${curve.name}.`);\n}\n/**\n * Validate a path and return the child index and whether it is hardened.\n *\n * @param path - The path to validate.\n * @param node - The node to validate the path against.\n * @param curve - The curve to validate the path against.\n * @returns The child index and whether it is hardened.\n */\nfunction getValidatedPath(path, node, curve) {\n    validatePath(path, node, curve);\n    const indexPart = path.split(`'`)[0];\n    (0, utils_1.assert)(indexPart);\n    const childIndex = parseInt(indexPart, 10);\n    if (!constants_1.UNPREFIXED_PATH_REGEX.test(indexPart) ||\n        !Number.isInteger(childIndex) ||\n        childIndex < 0 ||\n        childIndex >= constants_1.BIP_32_HARDENED_OFFSET) {\n        throw new Error(`Invalid path: The index must be a non-negative decimal integer less than ${constants_1.BIP_32_HARDENED_OFFSET}.`);\n    }\n    return { childIndex, isHardened: path.includes(`'`) };\n}\nexports.getValidatedPath = getValidatedPath;\n//# sourceMappingURL=shared.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveChildKey = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst constants_1 = require(\"../constants.cjs\");\nconst utils_2 = require(\"../utils.cjs\");\nconst shared_1 = require(\"./shared.cjs\");\n/**\n * Derive a SLIP-10 child key with a given path from a parent key.\n *\n * @param options - The options for deriving a child key.\n * @returns A tuple containing the derived private key, public key and chain\n * code.\n */\nasync function deriveChildKey(options) {\n    return await (0, shared_1.deriveChildKey)(options, handleError);\n}\nexports.deriveChildKey = deriveChildKey;\n/**\n * Handle an error that occurs during SLIP-10 derivation.\n *\n * @param error - The error that occurred.\n * @param options - The options that were used for derivation.\n * @returns The new options to use for derivation.\n */\nasync function handleError(error, options) {\n    const { curve, isHardened, childIndex, entropy, chainCode } = options;\n    // `ed25519` keys are always valid, so this error should never be thrown. If\n    // it is, we re-throw it.\n    if (curve.name === 'ed25519') {\n        throw error;\n    }\n    const actualChildIndex = isHardened\n        ? childIndex + constants_1.BIP_32_HARDENED_OFFSET\n        : childIndex;\n    // As per SLIP-10, if the resulting key is invalid, the new entropy is\n    // generated as follows:\n    // Key material (32 bytes), child chain code (32 bytes) =\n    //   HMAC-SHA512(parent chain code, 0x01 || chain code from invalid key || index).\n    const newEntropy = (0, shared_1.generateEntropy)({\n        chainCode,\n        extension: (0, utils_1.concatBytes)([\n            0x01,\n            entropy.slice(32, 64),\n            (0, utils_2.numberToUint32)(actualChildIndex),\n        ]),\n    });\n    return {\n        ...options,\n        entropy: newEntropy,\n    };\n}\n//# sourceMappingURL=slip10.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeExtendedKey = exports.decodeExtendedKey = exports.PRIVATE_KEY_VERSION = exports.PUBLIC_KEY_VERSION = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst BIP44Node_1 = require(\"./BIP44Node.cjs\");\nconst secp256k1_1 = require(\"./curves/secp256k1.cjs\");\nconst utils_2 = require(\"./utils.cjs\");\n// https://github.com/bitcoin/bips/blob/274fa400d630ba757bec0c03b35ebe2345197108/bip-0032.mediawiki#Serialization_format\nexports.PUBLIC_KEY_VERSION = 0x0488b21e;\nexports.PRIVATE_KEY_VERSION = 0x0488ade4;\n/**\n * Decodes an extended public or private key. In the case of an extended public key, the public key\n * is returned in the uncompressed form.\n *\n * Throws an error if the extended key is invalid.\n *\n * @param extendedKey - The extended key string to attempt to decode.\n * @returns The decoded extended key.\n */\nconst decodeExtendedKey = (extendedKey) => {\n    const bytes = (0, utils_2.decodeBase58check)(extendedKey);\n    if (bytes.length !== 78) {\n        throw new Error(`Invalid extended key: Expected a length of 78, got ${bytes.length}.`);\n    }\n    const view = (0, utils_1.createDataView)(bytes);\n    const version = view.getUint32(0, false);\n    const depth = view.getUint8(4);\n    (0, BIP44Node_1.validateBIP44Depth)(depth);\n    const parentFingerprint = view.getUint32(5, false);\n    const index = view.getUint32(9, false);\n    const chainCode = bytes.slice(13, 45);\n    if (!(0, utils_2.isValidBytesKey)(chainCode, 32)) {\n        throw new Error(`Invalid extended key: Chain code must be a 32-byte non-zero byte array.`);\n    }\n    const key = bytes.slice(45, 78);\n    if (!(0, utils_2.isValidBytesKey)(key, 33)) {\n        throw new Error(`Invalid extended key: Key must be a 33-byte non-zero byte array.`);\n    }\n    const keyView = (0, utils_1.createDataView)(key);\n    if (version === exports.PUBLIC_KEY_VERSION) {\n        if (keyView.getUint8(0) !== 0x02 && keyView.getUint8(0) !== 0x03) {\n            throw new Error(`Invalid extended key: Public key must start with 0x02 or 0x03.`);\n        }\n        return {\n            version,\n            depth,\n            parentFingerprint,\n            index,\n            chainCode,\n            publicKey: (0, secp256k1_1.decompressPublicKey)(key),\n        };\n    }\n    if (version === exports.PRIVATE_KEY_VERSION) {\n        if (keyView.getUint8(0) !== 0x00) {\n            throw new Error(`Invalid extended key: Private key must start with 0x00.`);\n        }\n        return {\n            version,\n            depth,\n            parentFingerprint,\n            index,\n            chainCode,\n            privateKey: key.slice(1),\n        };\n    }\n    throw new Error(`Invalid extended key: Expected a public (xpub) or private key (xprv) version.`);\n};\nexports.decodeExtendedKey = decodeExtendedKey;\n/**\n * Encodes an extended public or private key. Assumes that all the inputs are verified beforehand.\n *\n * @param extendedKey - The extended key data to encode.\n * @returns The encoded extended key.\n */\nconst encodeExtendedKey = (extendedKey) => {\n    const { version, depth, parentFingerprint, index, chainCode } = extendedKey;\n    const bytes = new Uint8Array(78);\n    const view = (0, utils_1.createDataView)(bytes);\n    view.setUint32(0, version, false);\n    view.setUint8(4, depth);\n    view.setUint32(5, parentFingerprint, false);\n    view.setUint32(9, index, false);\n    bytes.set(chainCode, 13);\n    if (extendedKey.version === exports.PUBLIC_KEY_VERSION) {\n        const { publicKey } = extendedKey;\n        const compressedPublicKey = (0, secp256k1_1.compressPublicKey)(publicKey);\n        bytes.set(compressedPublicKey, 45);\n    }\n    if (extendedKey.version === exports.PRIVATE_KEY_VERSION) {\n        const { privateKey } = extendedKey;\n        bytes.set(privateKey, 46);\n    }\n    return (0, utils_2.encodeBase58check)(bytes);\n};\nexports.encodeExtendedKey = encodeExtendedKey;\n//# sourceMappingURL=extended-keys.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBip39KeyFromSeed = exports.mnemonicPhraseToBytes = exports.isValidBIP32PathSegment = exports.getBIP44CoinTypeToAddressPathTuple = exports.getBIP44AddressKeyDeriver = exports.deriveBIP44AddressKey = exports.BIP_44_COIN_TYPE_DEPTH = exports.BIP44CoinTypeNode = exports.ed25519Bip32 = exports.ed25519 = exports.secp256k1 = exports.SLIP10Node = exports.BIP44Node = void 0;\nvar BIP44Node_1 = require(\"./BIP44Node.cjs\");\nObject.defineProperty(exports, \"BIP44Node\", { enumerable: true, get: function () { return BIP44Node_1.BIP44Node; } });\nvar SLIP10Node_1 = require(\"./SLIP10Node.cjs\");\nObject.defineProperty(exports, \"SLIP10Node\", { enumerable: true, get: function () { return SLIP10Node_1.SLIP10Node; } });\nvar curves_1 = require(\"./curves/index.cjs\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return curves_1.secp256k1; } });\nObject.defineProperty(exports, \"ed25519\", { enumerable: true, get: function () { return curves_1.ed25519; } });\nObject.defineProperty(exports, \"ed25519Bip32\", { enumerable: true, get: function () { return curves_1.ed25519Bip32; } });\nvar BIP44CoinTypeNode_1 = require(\"./BIP44CoinTypeNode.cjs\");\nObject.defineProperty(exports, \"BIP44CoinTypeNode\", { enumerable: true, get: function () { return BIP44CoinTypeNode_1.BIP44CoinTypeNode; } });\nObject.defineProperty(exports, \"BIP_44_COIN_TYPE_DEPTH\", { enumerable: true, get: function () { return BIP44CoinTypeNode_1.BIP_44_COIN_TYPE_DEPTH; } });\nObject.defineProperty(exports, \"deriveBIP44AddressKey\", { enumerable: true, get: function () { return BIP44CoinTypeNode_1.deriveBIP44AddressKey; } });\nObject.defineProperty(exports, \"getBIP44AddressKeyDeriver\", { enumerable: true, get: function () { return BIP44CoinTypeNode_1.getBIP44AddressKeyDeriver; } });\n__exportStar(require(\"./constants.cjs\"), exports);\nvar utils_1 = require(\"./utils.cjs\");\nObject.defineProperty(exports, \"getBIP44CoinTypeToAddressPathTuple\", { enumerable: true, get: function () { return utils_1.getBIP44CoinTypeToAddressPathTuple; } });\nObject.defineProperty(exports, \"isValidBIP32PathSegment\", { enumerable: true, get: function () { return utils_1.isValidBIP32PathSegment; } });\nObject.defineProperty(exports, \"mnemonicPhraseToBytes\", { enumerable: true, get: function () { return utils_1.mnemonicPhraseToBytes; } });\nvar derivers_1 = require(\"./derivers/index.cjs\");\nObject.defineProperty(exports, \"createBip39KeyFromSeed\", { enumerable: true, get: function () { return derivers_1.createBip39KeyFromSeed; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numberToUint32 = exports.validateCurve = exports.mnemonicPhraseToBytes = exports.getFingerprint = exports.encodeBase58check = exports.decodeBase58check = exports.getBytesUnsafe = exports.getBytes = exports.isValidInteger = exports.isValidBytesKey = exports.nullableHexStringToBytes = exports.hexStringToBytes = exports.isHardened = exports.isValidBIP32PathSegment = exports.isValidBIP32Index = exports.validateBIP32Index = exports.getBIP32NodeToken = exports.getUnhardenedBIP32NodeToken = exports.getHardenedBIP32NodeToken = exports.getBIP44CoinTypeToAddressPathTuple = exports.getBIP44ChangePathString = exports.getBIP44CoinTypePathString = void 0;\nconst english_1 = require(\"@metamask/scure-bip39/dist/wordlists/english.js\");\nconst utils_1 = require(\"@metamask/utils\");\nconst ripemd160_1 = require(\"@noble/hashes/ripemd160\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst base_1 = require(\"@scure/base\");\nconst constants_1 = require(\"./constants.cjs\");\nconst curves_1 = require(\"./curves/index.cjs\");\n/**\n * Gets a string representation of a BIP-44 path of depth 2, i.e.:\n * `m / 44' / coin_type'`\n *\n * For display purposes only.\n *\n * @param coin_type - The `coin_type` index to create a path visualization for.\n * @returns The visualization of the BIP-44 path for thte specified `coin_type`.\n */\nfunction getBIP44CoinTypePathString(coin_type) {\n    return `m / ${constants_1.BIP44PurposeNodeToken} / ${getHardenedBIP32NodeToken(coin_type)}`;\n}\nexports.getBIP44CoinTypePathString = getBIP44CoinTypePathString;\n/**\n * Gets a string representation of a BIP-44 path of depth 4, i.e.:\n * `m / 44' / coin_type' / account' / change`\n *\n * For display purposes only.\n *\n * @param coinTypePath - The parent `coin_type` path.\n * @param indices - The `account` and `change` index to create a path visualization for.\n * @returns The visualization of the BIP-44 path for the specified `coin_type`\n * and `change` indices.\n */\nfunction getBIP44ChangePathString(coinTypePath, indices) {\n    return `${coinTypePath} / ${getHardenedBIP32NodeToken(indices.account ?? 0)} / ${getBIP32NodeToken(indices.change ?? 0)}`;\n}\nexports.getBIP44ChangePathString = getBIP44ChangePathString;\n/**\n * Gets a BIP-44 path tuple of the form `account' / change / address_index`,\n * which can be used to derive address keys together with a `coin_type` key.\n *\n * @param indices - The BIP-44 derivation index values.\n * @param indices.account - The `account` index value.\n * @param indices.change - The `change` index value.\n * @param indices.address_index - The `address_index` index value.\n * @returns The `account' / change / address_index` path corresponding to the\n * specified indices.\n */\nfunction getBIP44CoinTypeToAddressPathTuple({ account = 0, change = 0, address_index, }) {\n    return [\n        getHardenedBIP32NodeToken(account),\n        getBIP32NodeToken(change),\n        getBIP32NodeToken(address_index),\n    ];\n}\nexports.getBIP44CoinTypeToAddressPathTuple = getBIP44CoinTypeToAddressPathTuple;\n/**\n * A hardened BIP-32 node token, e.g. `bip32:0'`.\n * Validates that the index is a non-negative integer number, and throws an\n * error if validation fails.\n *\n * @param index - The index of the node.\n * @returns The hardened BIP-32 node token.\n */\nfunction getHardenedBIP32NodeToken(index) {\n    validateBIP32Index(index);\n    return `${getUnhardenedBIP32NodeToken(index)}'`;\n}\nexports.getHardenedBIP32NodeToken = getHardenedBIP32NodeToken;\n/**\n * An unhardened BIP-32 node token, e.g. `bip32:0`.\n * Validates that the index is a non-negative integer number, and throws an\n * error if validation fails.\n *\n * @param index - The index of the node.\n * @returns The unhardened BIP-32 node token.\n */\nfunction getUnhardenedBIP32NodeToken(index) {\n    validateBIP32Index(index);\n    return `bip32:${index}`;\n}\nexports.getUnhardenedBIP32NodeToken = getUnhardenedBIP32NodeToken;\n/**\n * A hardened or unhardened BIP-32 node token, e.g. `bip32:0` or `bip32:0'`.\n * Validates that the index is a non-negative integer number, and throws an\n * error if validation fails.\n *\n * @param index - The index of the node.\n * @returns The hardened or unhardened BIP-32 node token.\n */\nfunction getBIP32NodeToken(index) {\n    if (typeof index === 'number') {\n        return getUnhardenedBIP32NodeToken(index);\n    }\n    if (!index ||\n        !Number.isInteger(index.index) ||\n        typeof index.hardened !== 'boolean') {\n        throw new Error('Invalid BIP-32 index: Must be an object containing the index and whether it is hardened.');\n    }\n    if (index.hardened) {\n        return getHardenedBIP32NodeToken(index.index);\n    }\n    return getUnhardenedBIP32NodeToken(index.index);\n}\nexports.getBIP32NodeToken = getBIP32NodeToken;\n/**\n * Validates that the index is a non-negative integer number. Throws an\n * error if validation fails.\n *\n * @param addressIndex - The index to validate.\n */\nfunction validateBIP32Index(addressIndex) {\n    if (!isValidBIP32Index(addressIndex)) {\n        throw new Error(`Invalid BIP-32 index: Must be a non-negative integer.`);\n    }\n}\nexports.validateBIP32Index = validateBIP32Index;\n/**\n * Check if the index is a valid BIP-32 index.\n *\n * @param index - The BIP-32 index to test.\n * @returns Whether the index is a non-negative integer number.\n */\nfunction isValidBIP32Index(index) {\n    return isValidInteger(index) && index <= constants_1.MAX_BIP_32_INDEX;\n}\nexports.isValidBIP32Index = isValidBIP32Index;\n/**\n * Check if the value is a valid BIP-32 path segment, i.e., a string of the form\n * `0'`.\n *\n * @param segment - The BIP-32 path segment to test.\n * @returns Whether the path segment is a valid BIP-32 path segment.\n */\nfunction isValidBIP32PathSegment(segment) {\n    if (typeof segment !== 'string') {\n        return false;\n    }\n    const match = segment.match(constants_1.UNPREFIXED_BIP_32_PATH_REGEX);\n    if (typeof match?.groups?.index === 'undefined') {\n        return false;\n    }\n    const index = parseInt(match.groups.index, 10);\n    return isValidInteger(index) && index <= constants_1.MAX_UNHARDENED_BIP_32_INDEX;\n}\nexports.isValidBIP32PathSegment = isValidBIP32PathSegment;\n/**\n * Check if the value is a hardened BIP-32 index. This only checks if the value\n * ends with a `'` character, and does not validate that the index is a valid\n * BIP-32 index.\n *\n * @param bip32Token - The token to test.\n * @returns Whether the token is hardened, i.e. ends with `'`.\n */\nfunction isHardened(bip32Token) {\n    return bip32Token.endsWith(`'`);\n}\nexports.isHardened = isHardened;\n/**\n * Get a `Uint8Array` from a hexadecimal string or a `Uint8Array`. If the input\n * is a hexadecimal string, it is converted to a `Uint8Array`. If the input is\n * a `Uint8Array`, it is returned as-is.\n *\n * @param hexString - The hexadecimal string to convert.\n * @returns The `Uint8Array` corresponding to the hexadecimal string.\n */\nfunction hexStringToBytes(hexString) {\n    if (hexString instanceof Uint8Array) {\n        return hexString;\n    }\n    return (0, utils_1.hexToBytes)(hexString);\n}\nexports.hexStringToBytes = hexStringToBytes;\n/**\n * The same as {@link hexStringToBytes}, but returns `undefined` if the input\n * is `undefined`.\n *\n * @param hexString - The hexadecimal string to convert.\n * @returns The `Uint8Array` corresponding to the hexadecimal string.\n */\nfunction nullableHexStringToBytes(hexString) {\n    if (hexString !== undefined) {\n        return hexStringToBytes(hexString);\n    }\n    return undefined;\n}\nexports.nullableHexStringToBytes = nullableHexStringToBytes;\n/**\n * Tests whether the specified `Uint8Array` is a valid BIP-32 key.\n * A valid bytes key is 64 bytes long and has at least one non-zero byte.\n *\n * @param bytes - The `Uint8Array` to test.\n * @param expectedLength - The expected length of the Uint8Array.\n * @returns Whether the Uint8Array represents a valid BIP-32 key.\n */\nfunction isValidBytesKey(bytes, expectedLength) {\n    if (bytes.length !== expectedLength) {\n        return false;\n    }\n    for (const byte of bytes) {\n        if (byte !== 0) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isValidBytesKey = isValidBytesKey;\n/**\n * Tests whether the specified number is a valid integer equal to or greater than 0.\n *\n * @param value - The number to test.\n * @returns Whether the number is a valid integer.\n */\nfunction isValidInteger(value) {\n    return typeof value === 'number' && Number.isInteger(value) && value >= 0;\n}\nexports.isValidInteger = isValidInteger;\n/**\n * Get a `Uint8Array` from a hexadecimal string or `Uint8Array`. Validates that the\n * length of the `Uint8Array` matches the specified length, and that the `Uint8Array`\n * is not empty.\n *\n * @param value - The value to convert to a `Uint8Array`.\n * @param length - The length to validate the `Uint8Array` against.\n * @returns The `Uint8Array` corresponding to the hexadecimal string.\n */\nfunction getBytes(value, length) {\n    if (value instanceof Uint8Array) {\n        validateBytes(value, length);\n        return value;\n    }\n    if (typeof value === 'string') {\n        const bytes = (0, utils_1.hexToBytes)(value);\n        validateBytes(bytes, length);\n        return bytes;\n    }\n    throw new Error(`Invalid value: Expected an instance of Uint8Array or hexadecimal string.`);\n}\nexports.getBytes = getBytes;\n/**\n * Get a `Uint8Array` from a hexadecimal string or `Uint8Array`. Validates that\n * the length of the `Uint8Array` matches the specified length.\n *\n * This function is \"unsafe,\" in the sense that it does not validate that the\n * `Uint8Array` is not empty (i.e., all bytes are zero).\n *\n * @param value - The value to convert to a `Uint8Array`.\n * @param length - The length to validate the `Uint8Array` against.\n * @returns The `Uint8Array` corresponding to the hexadecimal string.\n */\nfunction getBytesUnsafe(value, length) {\n    if (value instanceof Uint8Array) {\n        (0, utils_1.assert)(value.length === length, `Invalid value: Must be a ${length}-byte byte array.`);\n        return value;\n    }\n    if (typeof value === 'string') {\n        return getBytesUnsafe((0, utils_1.hexToBytes)(value), length);\n    }\n    throw new Error(`Invalid value: Expected an instance of Uint8Array or hexadecimal string.`);\n}\nexports.getBytesUnsafe = getBytesUnsafe;\n/**\n * Validate that the specified `Uint8Array` is not empty and has the specified\n * length.\n *\n * @param bytes - The `Uint8Array` to validate.\n * @param length - The length to validate the `Uint8Array` against.\n * @throws An error if the `Uint8Array` is empty or has the wrong length.\n */\nfunction validateBytes(bytes, length) {\n    if (!isValidBytesKey(bytes, length)) {\n        throw new Error(`Invalid value: Must be a non-zero ${length}-byte byte array.`);\n    }\n}\nconst decodeBase58check = (value) => {\n    const base58Check = (0, base_1.base58check)(sha256_1.sha256);\n    try {\n        return base58Check.decode(value);\n    }\n    catch {\n        throw new Error(`Invalid extended key: Value is not base58-encoded, or the checksum is invalid.`);\n    }\n};\nexports.decodeBase58check = decodeBase58check;\nconst encodeBase58check = (value) => {\n    const base58Check = (0, base_1.base58check)(sha256_1.sha256);\n    return base58Check.encode(value);\n};\nexports.encodeBase58check = encodeBase58check;\n/**\n * Get the fingerprint of a compressed public key as number.\n *\n * @param publicKey - The compressed public key to get the fingerprint for.\n * @param compressedPublicKeyLength - The length of the compressed public key.\n * @returns The fingerprint of the public key.\n */\nconst getFingerprint = (publicKey, compressedPublicKeyLength) => {\n    if (!isValidBytesKey(publicKey, compressedPublicKeyLength)) {\n        throw new Error(`Invalid public key: The key must be a ${compressedPublicKeyLength}-byte, non-zero byte array.`);\n    }\n    const bytes = (0, ripemd160_1.ripemd160)((0, sha256_1.sha256)(publicKey));\n    const view = (0, utils_1.createDataView)(bytes);\n    return view.getUint32(0, false);\n};\nexports.getFingerprint = getFingerprint;\n/**\n * Get a secret recovery phrase (or mnemonic phrase) in string form as a\n * `Uint8Array`. The secret recovery phrase is split into words, and each word\n * is converted to a number using the BIP-39 word list. The numbers are then\n * converted to bytes, and the bytes are concatenated into a single\n * `Uint8Array`.\n *\n * @param mnemonicPhrase - The secret recovery phrase to convert.\n * @returns The `Uint8Array` corresponding to the secret recovery phrase.\n */\nfunction mnemonicPhraseToBytes(mnemonicPhrase) {\n    const words = mnemonicPhrase.split(' ');\n    const indices = words.map((word) => {\n        const index = english_1.wordlist.indexOf(word);\n        (0, utils_1.assert)(index !== -1, `Invalid mnemonic phrase: Unknown word \"${word}\".`);\n        return index;\n    });\n    return new Uint8Array(new Uint16Array(indices).buffer);\n}\nexports.mnemonicPhraseToBytes = mnemonicPhraseToBytes;\n/**\n * Validates the curve name.\n *\n * @param curveName - The name of the curve to validate.\n */\nfunction validateCurve(curveName) {\n    if (!curveName || typeof curveName !== 'string') {\n        throw new Error('Invalid curve: Must specify a curve.');\n    }\n    if (!Object.keys(curves_1.curves).includes(curveName)) {\n        throw new Error(`Invalid curve: Only the following curves are supported: ${Object.keys(curves_1.curves).join(', ')}.`);\n    }\n}\nexports.validateCurve = validateCurve;\n/**\n * Get a 4-byte-long `Uint8Array` from a numeric value.\n *\n * @param value - The value to convert to a `Uint8Array`.\n * @param littleEndian - Whether to use little endian byte order.\n * @returns The `Uint8Array` corresponding to the `bigint` value.\n */\nfunction numberToUint32(value, littleEndian = false) {\n    const bytes = new Uint8Array(4);\n    const view = (0, utils_1.createDataView)(bytes);\n    view.setUint32(0, value, littleEndian);\n    return bytes;\n}\nexports.numberToUint32 = numberToUint32;\n//# sourceMappingURL=utils.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcRequestStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst superstruct_2 = require(\"./superstruct\");\nexports.JsonRpcRequestStruct = (0, superstruct_2.object)({\n    jsonrpc: (0, superstruct_1.literal)('2.0'),\n    id: (0, superstruct_1.union)([(0, superstruct_1.string)(), (0, superstruct_1.number)(), (0, superstruct_1.literal)(null)]),\n    method: (0, superstruct_1.string)(),\n    params: (0, superstruct_2.exactOptional)((0, superstruct_1.union)([(0, superstruct_1.array)(utils_1.JsonStruct), (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct)])),\n});\n//# sourceMappingURL=JsonRpcRequest.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _KeyringClient_instances, _KeyringClient_sender, _KeyringClient_send;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringClient = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst uuid_1 = require(\"uuid\");\nconst api_1 = require(\"./internal/api\");\nconst rpc_1 = require(\"./internal/rpc\");\nconst superstruct_2 = require(\"./superstruct\");\nclass KeyringClient {\n    /**\n     * Create a new instance of `KeyringClient`.\n     *\n     * @param sender - The `Sender` instance to use to send requests to the snap.\n     */\n    constructor(sender) {\n        _KeyringClient_instances.add(this);\n        _KeyringClient_sender.set(this, void 0);\n        __classPrivateFieldSet(this, _KeyringClient_sender, sender, \"f\");\n    }\n    async listAccounts() {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.ListAccounts,\n        }), api_1.ListAccountsResponseStruct);\n    }\n    async getAccount(id) {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.GetAccount,\n            params: { id },\n        }), api_1.GetAccountResponseStruct);\n    }\n    async getAccountBalances(id, assets) {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.GetAccountBalances,\n            params: { id, assets },\n        }), api_1.GetAccountBalancesResponseStruct);\n    }\n    async createAccount(options = {}) {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.CreateAccount,\n            params: { options },\n        }), api_1.CreateAccountResponseStruct);\n    }\n    async filterAccountChains(id, chains) {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.FilterAccountChains,\n            params: { id, chains },\n        }), api_1.FilterAccountChainsResponseStruct);\n    }\n    async updateAccount(account) {\n        (0, superstruct_1.assert)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.UpdateAccount,\n            params: { account },\n        }), api_1.UpdateAccountResponseStruct);\n    }\n    async deleteAccount(id) {\n        (0, superstruct_1.assert)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.DeleteAccount,\n            params: { id },\n        }), api_1.DeleteAccountResponseStruct);\n    }\n    async exportAccount(id) {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.ExportAccount,\n            params: { id },\n        }), api_1.ExportAccountResponseStruct);\n    }\n    async listRequests() {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.ListRequests,\n        }), api_1.ListRequestsResponseStruct);\n    }\n    async getRequest(id) {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.GetRequest,\n            params: { id },\n        }), api_1.GetRequestResponseStruct);\n    }\n    async submitRequest(request) {\n        return (0, superstruct_2.strictMask)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.SubmitRequest,\n            params: request,\n        }), api_1.SubmitRequestResponseStruct);\n    }\n    async approveRequest(id, data = {}) {\n        (0, superstruct_1.assert)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.ApproveRequest,\n            params: { id, data },\n        }), api_1.ApproveRequestResponseStruct);\n    }\n    async rejectRequest(id) {\n        (0, superstruct_1.assert)(await __classPrivateFieldGet(this, _KeyringClient_instances, \"m\", _KeyringClient_send).call(this, {\n            method: rpc_1.KeyringRpcMethod.RejectRequest,\n            params: { id },\n        }), api_1.RejectRequestResponseStruct);\n    }\n}\nexports.KeyringClient = KeyringClient;\n_KeyringClient_sender = new WeakMap(), _KeyringClient_instances = new WeakSet(), _KeyringClient_send = \n/**\n * Send a request to the snap and return the response.\n *\n * @param partial - A partial JSON-RPC request (method and params).\n * @returns A promise that resolves to the response to the request.\n */\nasync function _KeyringClient_send(partial) {\n    return __classPrivateFieldGet(this, _KeyringClient_sender, \"f\").send({\n        jsonrpc: '2.0',\n        id: (0, uuid_1.v4)(),\n        ...partial,\n    });\n};\n//# sourceMappingURL=KeyringClient.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SnapRpcSender_origin, _SnapRpcSender_provider;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringSnapRpcClient = exports.SnapRpcSender = void 0;\nconst KeyringClient_1 = require(\"./KeyringClient\");\n/**\n * Implementation of the `Sender` interface that can be used to send requests\n * to a snap through the snap JSON-RPC API.\n */\nclass SnapRpcSender {\n    /**\n     * Create a new instance of `SnapRpcSender`.\n     *\n     * @param origin - The caller's origin.\n     * @param provider - The `MetaMaskInpageProvider` instance to use.\n     */\n    constructor(origin, provider) {\n        _SnapRpcSender_origin.set(this, void 0);\n        _SnapRpcSender_provider.set(this, void 0);\n        __classPrivateFieldSet(this, _SnapRpcSender_origin, origin, \"f\");\n        __classPrivateFieldSet(this, _SnapRpcSender_provider, provider, \"f\");\n    }\n    /**\n     * Send a request to the snap and return the response.\n     *\n     * @param request - The JSON-RPC request to send to the snap.\n     * @returns A promise that resolves to the response of the request.\n     */\n    async send(request) {\n        return __classPrivateFieldGet(this, _SnapRpcSender_provider, \"f\").request({\n            method: 'wallet_invokeKeyring',\n            params: {\n                snapId: __classPrivateFieldGet(this, _SnapRpcSender_origin, \"f\"),\n                request,\n            },\n        });\n    }\n}\nexports.SnapRpcSender = SnapRpcSender;\n_SnapRpcSender_origin = new WeakMap(), _SnapRpcSender_provider = new WeakMap();\n/**\n * A `KeyringClient` that allows the communication with a snap through the snap\n * JSON-RPC API.\n */\nclass KeyringSnapRpcClient extends KeyringClient_1.KeyringClient {\n    /**\n     * Create a new instance of `KeyringSnapRpcClient`.\n     *\n     * @param origin - Caller's origin.\n     * @param provider - The `MetaMaskInpageProvider` instance to use.\n     */\n    constructor(origin, provider) {\n        super(new SnapRpcSender(origin, provider));\n    }\n}\nexports.KeyringSnapRpcClient = KeyringSnapRpcClient;\n//# sourceMappingURL=KeyringSnapRpcClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringAccountStruct = exports.BtcAccountType = exports.EthAccountType = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst superstruct_2 = require(\"../superstruct\");\nconst utils_2 = require(\"../utils\");\n/**\n * Supported Ethereum account types.\n */\nvar EthAccountType;\n(function (EthAccountType) {\n    EthAccountType[\"Eoa\"] = \"eip155:eoa\";\n    EthAccountType[\"Erc4337\"] = \"eip155:erc4337\";\n})(EthAccountType = exports.EthAccountType || (exports.EthAccountType = {}));\n/**\n * Supported Bitcoin account types.\n */\nvar BtcAccountType;\n(function (BtcAccountType) {\n    BtcAccountType[\"P2wpkh\"] = \"bip122:p2wpkh\";\n})(BtcAccountType = exports.BtcAccountType || (exports.BtcAccountType = {}));\n/**\n * A struct which represents a Keyring account object. It is abstract enough to\n * be used with any blockchain. Specific blockchain account types should extend\n * this struct.\n *\n * See {@link KeyringAccount}.\n */\nexports.KeyringAccountStruct = (0, superstruct_2.object)({\n    /**\n     * Account ID (UUIDv4).\n     */\n    id: utils_2.UuidStruct,\n    /**\n     * Account type.\n     */\n    type: (0, superstruct_1.enums)([\n        `${EthAccountType.Eoa}`,\n        `${EthAccountType.Erc4337}`,\n        `${BtcAccountType.P2wpkh}`,\n    ]),\n    /**\n     * Account main address.\n     */\n    address: (0, superstruct_1.string)(),\n    /**\n     * Account options.\n     */\n    options: (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct),\n    /**\n     * Account supported methods.\n     */\n    methods: (0, superstruct_1.array)((0, superstruct_1.string)()),\n});\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BalanceStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst superstruct_2 = require(\"../superstruct\");\nconst utils_1 = require(\"../utils\");\nexports.BalanceStruct = (0, superstruct_2.object)({\n    amount: utils_1.StringNumberStruct,\n    unit: (0, superstruct_1.string)(),\n});\n//# sourceMappingURL=balance.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCaipAssetId = exports.isCaipAssetType = exports.CaipAssetIdStruct = exports.CaipAssetTypeStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst superstruct_2 = require(\"../superstruct\");\nconst CAIP_ASSET_TYPE_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u;\nconst CAIP_ASSET_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u;\n/**\n * A CAIP-19 asset type identifier, i.e., a human-readable type of asset identifier.\n */\nexports.CaipAssetTypeStruct = (0, superstruct_2.definePattern)('CaipAssetType', CAIP_ASSET_TYPE_REGEX);\n/**\n * A CAIP-19 asset ID identifier, i.e., a human-readable type of asset ID.\n */\nexports.CaipAssetIdStruct = (0, superstruct_2.definePattern)('CaipAssetId', CAIP_ASSET_ID_REGEX);\n/**\n * Check if the given value is a {@link CaipAssetType}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetType}.\n * @example\n * ```ts\n * isCaipAssetType('eip155:1/slip44:60'); // true\n * isCaipAssetType('cosmos:cosmoshub-3/slip44:118'); // true\n * isCaipAssetType('hedera:mainnet/nft:0.0.55492/12'); // false\n * ```\n */\nfunction isCaipAssetType(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAssetTypeStruct);\n}\nexports.isCaipAssetType = isCaipAssetType;\n/**\n * Check if the given value is a {@link CaipAssetId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetId}.\n * @example\n * ```ts\n * isCaipAssetType('eip155:1/slip44:60'); // false\n * isCaipAssetType('cosmos:cosmoshub-3/slip44:118'); // false\n * isCaipAssetType('hedera:mainnet/nft:0.0.55492/12'); // true\n * ```\n */\nfunction isCaipAssetId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAssetIdStruct);\n}\nexports.isCaipAssetId = isCaipAssetId;\n//# sourceMappingURL=caip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringAccountDataStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nexports.KeyringAccountDataStruct = (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct);\n//# sourceMappingURL=export.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./account\"), exports);\n__exportStar(require(\"./balance\"), exports);\n__exportStar(require(\"./caip\"), exports);\n__exportStar(require(\"./export\"), exports);\n__exportStar(require(\"./keyring\"), exports);\n__exportStar(require(\"./request\"), exports);\n__exportStar(require(\"./response\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringRequestStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst superstruct_2 = require(\"../superstruct\");\nconst utils_2 = require(\"../utils\");\nexports.KeyringRequestStruct = (0, superstruct_2.object)({\n    /**\n     * Keyring request ID (UUIDv4).\n     */\n    id: utils_2.UuidStruct,\n    /**\n     * Request's scope (CAIP-2 chain ID).\n     */\n    scope: (0, superstruct_1.string)(),\n    /**\n     * Account ID (UUIDv4).\n     */\n    account: utils_2.UuidStruct,\n    /**\n     * Inner request sent by the client application.\n     */\n    request: (0, superstruct_2.object)({\n        method: (0, superstruct_1.string)(),\n        params: (0, superstruct_2.exactOptional)((0, superstruct_1.union)([(0, superstruct_1.array)(utils_1.JsonStruct), (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct)])),\n    }),\n});\n//# sourceMappingURL=request.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringResponseStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst superstruct_2 = require(\"../superstruct\");\nexports.KeyringResponseStruct = (0, superstruct_1.union)([\n    (0, superstruct_2.object)({\n        /**\n         * Pending flag.\n         *\n         * Setting the pending flag to true indicates that the request will be\n         * handled asynchronously. The keyring must be called with `approveRequest`\n         * or `rejectRequest` to resolve the request.\n         */\n        pending: (0, superstruct_1.literal)(true),\n        /**\n         * Redirect URL.\n         *\n         * If present in the response, MetaMask will display a confirmation dialog\n         * with a link to the redirect URL. The user can choose to follow the link\n         * or cancel the request.\n         */\n        redirect: (0, superstruct_2.exactOptional)((0, superstruct_2.object)({\n            message: (0, superstruct_2.exactOptional)((0, superstruct_1.string)()),\n            url: (0, superstruct_2.exactOptional)((0, superstruct_1.string)()),\n        })),\n    }),\n    (0, superstruct_2.object)({\n        /**\n         * Pending flag.\n         *\n         * Setting the pending flag to false indicates that the request will be\n         * handled synchronously. The keyring must return the result of the\n         * request execution.\n         */\n        pending: (0, superstruct_1.literal)(false),\n        /**\n         * Request result.\n         */\n        result: utils_1.JsonStruct,\n    }),\n]);\n//# sourceMappingURL=response.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcP2wpkhAccountStruct = exports.BtcMethod = exports.BtcP2wpkhAddressStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst bech32_1 = require(\"bech32\");\nconst api_1 = require(\"../api\");\nconst superstruct_2 = require(\"../superstruct\");\nexports.BtcP2wpkhAddressStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'BtcP2wpkhAddressStruct', (address) => {\n    try {\n        bech32_1.bech32.decode(address);\n    }\n    catch (error) {\n        return new Error(`Could not decode P2WPKH address: ${error.message}`);\n    }\n    return true;\n});\n/**\n * Supported Bitcoin methods.\n */\nvar BtcMethod;\n(function (BtcMethod) {\n    // General transaction methods\n    BtcMethod[\"SendMany\"] = \"btc_sendmany\";\n})(BtcMethod = exports.BtcMethod || (exports.BtcMethod = {}));\nexports.BtcP2wpkhAccountStruct = (0, superstruct_2.object)({\n    ...api_1.KeyringAccountStruct.schema,\n    /**\n     * Account address.\n     */\n    address: exports.BtcP2wpkhAddressStruct,\n    /**\n     * Account type.\n     */\n    type: (0, superstruct_1.literal)(`${api_1.BtcAccountType.P2wpkh}`),\n    /**\n     * Account supported methods.\n     */\n    methods: (0, superstruct_1.array)((0, superstruct_1.enums)([`${BtcMethod.SendMany}`])),\n});\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=contexts.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthUserOperationPatchStruct = exports.EthBaseUserOperationStruct = exports.EthBaseTransactionStruct = exports.EthUserOperationStruct = void 0;\nconst superstruct_1 = require(\"../../superstruct\");\nconst utils_1 = require(\"../../utils\");\nconst types_1 = require(\"../types\");\n/**\n * Struct of a UserOperation as defined by ERC-4337.\n * @see https://eips.ethereum.org/EIPS/eip-4337#definitions\n */\nexports.EthUserOperationStruct = (0, superstruct_1.object)({\n    sender: types_1.EthAddressStruct,\n    nonce: types_1.EthUint256Struct,\n    initCode: types_1.EthBytesStruct,\n    callData: types_1.EthBytesStruct,\n    callGasLimit: types_1.EthUint256Struct,\n    verificationGasLimit: types_1.EthUint256Struct,\n    preVerificationGas: types_1.EthUint256Struct,\n    maxFeePerGas: types_1.EthUint256Struct,\n    maxPriorityFeePerGas: types_1.EthUint256Struct,\n    paymasterAndData: types_1.EthBytesStruct,\n    signature: types_1.EthBytesStruct,\n});\n/**\n * Struct containing the most basic transaction information required to\n * construct a UserOperation.\n */\nexports.EthBaseTransactionStruct = (0, superstruct_1.object)({\n    /**\n     * Address of the transaction recipient.\n     */\n    to: types_1.EthAddressStruct,\n    /**\n     * Amount of wei to transfer to the recipient.\n     */\n    value: types_1.EthUint256Struct,\n    /**\n     * Data to pass to the recipient.\n     */\n    data: types_1.EthBytesStruct,\n});\nexports.EthBaseUserOperationStruct = (0, superstruct_1.object)({\n    nonce: types_1.EthUint256Struct,\n    initCode: types_1.EthBytesStruct,\n    callData: types_1.EthBytesStruct,\n    gasLimits: (0, superstruct_1.exactOptional)((0, superstruct_1.object)({\n        callGasLimit: types_1.EthUint256Struct,\n        verificationGasLimit: types_1.EthUint256Struct,\n        preVerificationGas: types_1.EthUint256Struct,\n    })),\n    dummyPaymasterAndData: types_1.EthBytesStruct,\n    dummySignature: types_1.EthBytesStruct,\n    bundlerUrl: utils_1.UrlStruct,\n});\nexports.EthUserOperationPatchStruct = (0, superstruct_1.object)({\n    paymasterAndData: types_1.EthBytesStruct,\n    callGasLimit: (0, superstruct_1.exactOptional)(types_1.EthUint256Struct),\n    verificationGasLimit: (0, superstruct_1.exactOptional)(types_1.EthUint256Struct),\n    preVerificationGas: (0, superstruct_1.exactOptional)(types_1.EthUint256Struct),\n});\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./erc4337\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthErc4337AccountStruct = exports.EthEoaAccountStruct = exports.EthMethod = exports.EthUint256Struct = exports.EthAddressStruct = exports.EthBytesStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst api_1 = require(\"../api\");\nconst superstruct_2 = require(\"../superstruct\");\nexports.EthBytesStruct = (0, superstruct_2.definePattern)('EthBytes', /^0x[0-9a-f]*$/iu);\nexports.EthAddressStruct = (0, superstruct_2.definePattern)('EthAddress', /^0x[0-9a-f]{40}$/iu);\nexports.EthUint256Struct = (0, superstruct_2.definePattern)('EthUint256', /^0x([1-9a-f][0-9a-f]*|0)$/iu);\n/**\n * Supported Ethereum methods.\n */\nvar EthMethod;\n(function (EthMethod) {\n    // General signing methods\n    EthMethod[\"PersonalSign\"] = \"personal_sign\";\n    EthMethod[\"Sign\"] = \"eth_sign\";\n    EthMethod[\"SignTransaction\"] = \"eth_signTransaction\";\n    EthMethod[\"SignTypedDataV1\"] = \"eth_signTypedData_v1\";\n    EthMethod[\"SignTypedDataV3\"] = \"eth_signTypedData_v3\";\n    EthMethod[\"SignTypedDataV4\"] = \"eth_signTypedData_v4\";\n    // ERC-4337 methods\n    EthMethod[\"PrepareUserOperation\"] = \"eth_prepareUserOperation\";\n    EthMethod[\"PatchUserOperation\"] = \"eth_patchUserOperation\";\n    EthMethod[\"SignUserOperation\"] = \"eth_signUserOperation\";\n})(EthMethod = exports.EthMethod || (exports.EthMethod = {}));\nexports.EthEoaAccountStruct = (0, superstruct_2.object)({\n    ...api_1.KeyringAccountStruct.schema,\n    /**\n     * Account address.\n     */\n    address: exports.EthAddressStruct,\n    /**\n     * Account type.\n     */\n    type: (0, superstruct_1.literal)(`${api_1.EthAccountType.Eoa}`),\n    /**\n     * Account supported methods.\n     */\n    methods: (0, superstruct_1.array)((0, superstruct_1.enums)([\n        `${EthMethod.PersonalSign}`,\n        `${EthMethod.Sign}`,\n        `${EthMethod.SignTransaction}`,\n        `${EthMethod.SignTypedDataV1}`,\n        `${EthMethod.SignTypedDataV3}`,\n        `${EthMethod.SignTypedDataV4}`,\n    ])),\n});\nexports.EthErc4337AccountStruct = (0, superstruct_2.object)({\n    ...api_1.KeyringAccountStruct.schema,\n    /**\n     * Account address.\n     */\n    address: exports.EthAddressStruct,\n    /**\n     * Account type.\n     */\n    type: (0, superstruct_1.literal)(`${api_1.EthAccountType.Erc4337}`),\n    /**\n     * Account supported methods.\n     */\n    methods: (0, superstruct_1.array)((0, superstruct_1.enums)([\n        `${EthMethod.PersonalSign}`,\n        `${EthMethod.Sign}`,\n        `${EthMethod.SignTypedDataV1}`,\n        `${EthMethod.SignTypedDataV3}`,\n        `${EthMethod.SignTypedDataV4}`,\n        `${EthMethod.PrepareUserOperation}`,\n        `${EthMethod.PatchUserOperation}`,\n        `${EthMethod.SignUserOperation}`,\n    ])),\n});\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEvmAccountType = void 0;\nconst api_1 = require(\"../api\");\n/**\n * Checks if the given type is an EVM account type.\n *\n * @param type - The type to check.\n * @returns Returns true if the type is an EVM account type, false otherwise.\n */\nfunction isEvmAccountType(type) {\n    return type === api_1.EthAccountType.Eoa || type === api_1.EthAccountType.Erc4337;\n}\nexports.isEvmAccountType = isEvmAccountType;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringEvent = void 0;\n/**\n * Supported keyring events.\n */\nvar KeyringEvent;\n(function (KeyringEvent) {\n    // Account events\n    KeyringEvent[\"AccountCreated\"] = \"notify:accountCreated\";\n    KeyringEvent[\"AccountUpdated\"] = \"notify:accountUpdated\";\n    KeyringEvent[\"AccountDeleted\"] = \"notify:accountDeleted\";\n    // Request events\n    KeyringEvent[\"RequestApproved\"] = \"notify:requestApproved\";\n    KeyringEvent[\"RequestRejected\"] = \"notify:requestRejected\";\n})(KeyringEvent = exports.KeyringEvent || (exports.KeyringEvent = {}));\n//# sourceMappingURL=events.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./btc\"), exports);\n__exportStar(require(\"./contexts\"), exports);\n__exportStar(require(\"./eth\"), exports);\n__exportStar(require(\"./events\"), exports);\n__exportStar(require(\"./internal\"), exports);\n__exportStar(require(\"./KeyringClient\"), exports);\n__exportStar(require(\"./KeyringSnapRpcClient\"), exports);\n__exportStar(require(\"./rpc-handler\"), exports);\n__exportStar(require(\"./snap-utils\"), exports);\n__exportStar(require(\"./superstruct\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RejectRequestResponseStruct = exports.RejectRequestRequestStruct = exports.ApproveRequestResponseStruct = exports.ApproveRequestRequestStruct = exports.SubmitRequestResponseStruct = exports.SubmitRequestRequestStruct = exports.GetRequestResponseStruct = exports.GetRequestRequestStruct = exports.ListRequestsResponseStruct = exports.ListRequestsRequestStruct = exports.ExportAccountResponseStruct = exports.ExportAccountRequestStruct = exports.DeleteAccountResponseStruct = exports.DeleteAccountRequestStruct = exports.UpdateAccountResponseStruct = exports.UpdateAccountRequestStruct = exports.FilterAccountChainsResponseStruct = exports.FilterAccountChainsStruct = exports.GetAccountBalancesResponseStruct = exports.GetAccountBalancesRequestStruct = exports.CreateAccountResponseStruct = exports.CreateAccountRequestStruct = exports.GetAccountResponseStruct = exports.GetAccountRequestStruct = exports.ListAccountsResponseStruct = exports.ListAccountsRequestStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst api_1 = require(\"../api\");\nconst superstruct_2 = require(\"../superstruct\");\nconst utils_2 = require(\"../utils\");\nconst rpc_1 = require(\"./rpc\");\nconst CommonHeader = {\n    jsonrpc: (0, superstruct_1.literal)('2.0'),\n    id: (0, superstruct_1.union)([(0, superstruct_1.string)(), (0, superstruct_1.number)(), (0, superstruct_1.literal)(null)]),\n};\n// ----------------------------------------------------------------------------\n// List accounts\nexports.ListAccountsRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_listAccounts'),\n});\nexports.ListAccountsResponseStruct = (0, superstruct_1.array)(api_1.KeyringAccountStruct);\n// ----------------------------------------------------------------------------\n// Get account\nexports.GetAccountRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_getAccount'),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n    }),\n});\nexports.GetAccountResponseStruct = api_1.KeyringAccountStruct;\n// ----------------------------------------------------------------------------\n// Create account\nexports.CreateAccountRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_createAccount'),\n    params: (0, superstruct_2.object)({\n        options: (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct),\n    }),\n});\nexports.CreateAccountResponseStruct = api_1.KeyringAccountStruct;\n// ----------------------------------------------------------------------------\n// Get account balances\nexports.GetAccountBalancesRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)(`${rpc_1.KeyringRpcMethod.GetAccountBalances}`),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n        assets: (0, superstruct_1.array)(api_1.CaipAssetTypeStruct),\n    }),\n});\nexports.GetAccountBalancesResponseStruct = (0, superstruct_1.record)(api_1.CaipAssetTypeStruct, api_1.BalanceStruct);\n// ----------------------------------------------------------------------------\n// Filter account chains\nexports.FilterAccountChainsStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_filterAccountChains'),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n        chains: (0, superstruct_1.array)((0, superstruct_1.string)()),\n    }),\n});\nexports.FilterAccountChainsResponseStruct = (0, superstruct_1.array)((0, superstruct_1.string)());\n// ----------------------------------------------------------------------------\n// Update account\nexports.UpdateAccountRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_updateAccount'),\n    params: (0, superstruct_2.object)({\n        account: api_1.KeyringAccountStruct,\n    }),\n});\nexports.UpdateAccountResponseStruct = (0, superstruct_1.literal)(null);\n// ----------------------------------------------------------------------------\n// Delete account\nexports.DeleteAccountRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_deleteAccount'),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n    }),\n});\nexports.DeleteAccountResponseStruct = (0, superstruct_1.literal)(null);\n// ----------------------------------------------------------------------------\n// Export account\nexports.ExportAccountRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_exportAccount'),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n    }),\n});\nexports.ExportAccountResponseStruct = api_1.KeyringAccountDataStruct;\n// ----------------------------------------------------------------------------\n// List requests\nexports.ListRequestsRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_listRequests'),\n});\nexports.ListRequestsResponseStruct = (0, superstruct_1.array)(api_1.KeyringRequestStruct);\n// ----------------------------------------------------------------------------\n// Get request\nexports.GetRequestRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_getRequest'),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n    }),\n});\nexports.GetRequestResponseStruct = api_1.KeyringRequestStruct;\n// ----------------------------------------------------------------------------\n// Submit request\nexports.SubmitRequestRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_submitRequest'),\n    params: api_1.KeyringRequestStruct,\n});\nexports.SubmitRequestResponseStruct = api_1.KeyringResponseStruct;\n// ----------------------------------------------------------------------------\n// Approve request\nexports.ApproveRequestRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_approveRequest'),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n        data: (0, superstruct_1.record)((0, superstruct_1.string)(), utils_1.JsonStruct),\n    }),\n});\nexports.ApproveRequestResponseStruct = (0, superstruct_1.literal)(null);\n// ----------------------------------------------------------------------------\n// Reject request\nexports.RejectRequestRequestStruct = (0, superstruct_2.object)({\n    ...CommonHeader,\n    method: (0, superstruct_1.literal)('keyring_rejectRequest'),\n    params: (0, superstruct_2.object)({\n        id: utils_2.UuidStruct,\n    }),\n});\nexports.RejectRequestResponseStruct = (0, superstruct_1.literal)(null);\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=EthKeyring.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./EthKeyring\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestRejectedEventStruct = exports.RequestApprovedEventStruct = exports.AccountDeletedEventStruct = exports.AccountUpdatedEventStruct = exports.AccountCreatedEventStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst api_1 = require(\"../api\");\nconst events_1 = require(\"../events\");\nconst superstruct_2 = require(\"../superstruct\");\nconst utils_2 = require(\"../utils\");\nexports.AccountCreatedEventStruct = (0, superstruct_2.object)({\n    method: (0, superstruct_1.literal)(`${events_1.KeyringEvent.AccountCreated}`),\n    params: (0, superstruct_2.object)({\n        /**\n         * New account object.\n         */\n        account: api_1.KeyringAccountStruct,\n        /**\n         * Account name suggestion provided to the MetaMask client.\n         *\n         * The keyring can suggest a name for the account, but it's up to the\n         * client to decide whether to use it. The keyring won't be informed if the\n         * client decides to use a different name.\n         */\n        accountNameSuggestion: (0, superstruct_2.exactOptional)((0, superstruct_1.string)()),\n        /**\n         * Instructs MetaMask to display the add account confirmation dialog in the UI.\n         * **Note:** This is not guaranteed to be honored by the MetaMask client.\n         */\n        displayConfirmation: (0, superstruct_2.exactOptional)((0, superstruct_1.boolean)()),\n    }),\n});\nexports.AccountUpdatedEventStruct = (0, superstruct_2.object)({\n    method: (0, superstruct_1.literal)(`${events_1.KeyringEvent.AccountUpdated}`),\n    params: (0, superstruct_2.object)({\n        /**\n         * Updated account object.\n         */\n        account: api_1.KeyringAccountStruct,\n    }),\n});\nexports.AccountDeletedEventStruct = (0, superstruct_2.object)({\n    method: (0, superstruct_1.literal)(`${events_1.KeyringEvent.AccountDeleted}`),\n    params: (0, superstruct_2.object)({\n        /**\n         * Deleted account ID.\n         */\n        id: utils_2.UuidStruct,\n    }),\n});\nexports.RequestApprovedEventStruct = (0, superstruct_2.object)({\n    method: (0, superstruct_1.literal)(`${events_1.KeyringEvent.RequestApproved}`),\n    params: (0, superstruct_2.object)({\n        /**\n         * Request ID.\n         */\n        id: utils_2.UuidStruct,\n        /**\n         * Request result.\n         */\n        result: utils_1.JsonStruct,\n    }),\n});\nexports.RequestRejectedEventStruct = (0, superstruct_2.object)({\n    method: (0, superstruct_1.literal)(`${events_1.KeyringEvent.RequestRejected}`),\n    params: (0, superstruct_2.object)({\n        /**\n         * Request ID.\n         */\n        id: utils_2.UuidStruct,\n    }),\n});\n//# sourceMappingURL=events.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./eth\"), exports);\n__exportStar(require(\"./events\"), exports);\n__exportStar(require(\"./rpc\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isKeyringRpcMethod = exports.KeyringRpcMethod = void 0;\n/**\n * Keyring RPC methods used by the API.\n */\nvar KeyringRpcMethod;\n(function (KeyringRpcMethod) {\n    KeyringRpcMethod[\"ListAccounts\"] = \"keyring_listAccounts\";\n    KeyringRpcMethod[\"GetAccount\"] = \"keyring_getAccount\";\n    KeyringRpcMethod[\"CreateAccount\"] = \"keyring_createAccount\";\n    KeyringRpcMethod[\"GetAccountBalances\"] = \"keyring_getAccountBalances\";\n    KeyringRpcMethod[\"FilterAccountChains\"] = \"keyring_filterAccountChains\";\n    KeyringRpcMethod[\"UpdateAccount\"] = \"keyring_updateAccount\";\n    KeyringRpcMethod[\"DeleteAccount\"] = \"keyring_deleteAccount\";\n    KeyringRpcMethod[\"ExportAccount\"] = \"keyring_exportAccount\";\n    KeyringRpcMethod[\"ListRequests\"] = \"keyring_listRequests\";\n    KeyringRpcMethod[\"GetRequest\"] = \"keyring_getRequest\";\n    KeyringRpcMethod[\"SubmitRequest\"] = \"keyring_submitRequest\";\n    KeyringRpcMethod[\"ApproveRequest\"] = \"keyring_approveRequest\";\n    KeyringRpcMethod[\"RejectRequest\"] = \"keyring_rejectRequest\";\n})(KeyringRpcMethod = exports.KeyringRpcMethod || (exports.KeyringRpcMethod = {}));\n/**\n * Check if a method is a keyring RPC method.\n *\n * @param method - Method to check.\n * @returns Whether the method is a keyring RPC method.\n */\nfunction isKeyringRpcMethod(method) {\n    return Object.values(KeyringRpcMethod).includes(method);\n}\nexports.isKeyringRpcMethod = isKeyringRpcMethod;\n//# sourceMappingURL=rpc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalAccountStruct = exports.InternalAccountStructs = exports.InternalBtcP2wpkhAccountStruct = exports.InternalEthErc4337AccountStruct = exports.InternalEthEoaAccountStruct = exports.InternalAccountMetadataStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst api_1 = require(\"../api\");\nconst types_1 = require(\"../btc/types\");\nconst types_2 = require(\"../eth/types\");\nconst superstruct_2 = require(\"../superstruct\");\nexports.InternalAccountMetadataStruct = (0, superstruct_2.object)({\n    metadata: (0, superstruct_2.object)({\n        name: (0, superstruct_1.string)(),\n        nameLastUpdatedAt: (0, superstruct_2.exactOptional)((0, superstruct_1.number)()),\n        snap: (0, superstruct_2.exactOptional)((0, superstruct_2.object)({\n            id: (0, superstruct_1.string)(),\n            enabled: (0, superstruct_1.boolean)(),\n            name: (0, superstruct_1.string)(),\n        })),\n        lastSelected: (0, superstruct_2.exactOptional)((0, superstruct_1.number)()),\n        importTime: (0, superstruct_1.number)(),\n        keyring: (0, superstruct_2.object)({\n            type: (0, superstruct_1.string)(),\n        }),\n    }),\n});\n/**\n * Creates an `InternalAccount` from an existing account `superstruct` object.\n *\n * @param accountStruct - An account `superstruct` object.\n * @returns The `InternalAccount` associated to `accountStruct`.\n */\nfunction asInternalAccountStruct(accountStruct) {\n    return (0, superstruct_2.object)({\n        ...accountStruct.schema,\n        ...exports.InternalAccountMetadataStruct.schema,\n    });\n}\nexports.InternalEthEoaAccountStruct = asInternalAccountStruct(types_2.EthEoaAccountStruct);\nexports.InternalEthErc4337AccountStruct = asInternalAccountStruct(types_2.EthErc4337AccountStruct);\nexports.InternalBtcP2wpkhAccountStruct = asInternalAccountStruct(types_1.BtcP2wpkhAccountStruct);\nexports.InternalAccountStructs = {\n    [`${api_1.EthAccountType.Eoa}`]: exports.InternalEthEoaAccountStruct,\n    [`${api_1.EthAccountType.Erc4337}`]: exports.InternalEthErc4337AccountStruct,\n    [`${api_1.BtcAccountType.P2wpkh}`]: exports.InternalBtcP2wpkhAccountStruct,\n};\nexports.InternalAccountStruct = (0, superstruct_2.object)({\n    ...api_1.KeyringAccountStruct.schema,\n    ...exports.InternalAccountMetadataStruct.schema,\n});\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handleKeyringRequest = exports.MethodNotSupportedError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst api_1 = require(\"./internal/api\");\nconst rpc_1 = require(\"./internal/rpc\");\nconst JsonRpcRequest_1 = require(\"./JsonRpcRequest\");\n/**\n * Error thrown when a keyring JSON-RPC method is not supported.\n */\nclass MethodNotSupportedError extends Error {\n    constructor(method) {\n        super(`Method not supported: ${method}`);\n    }\n}\nexports.MethodNotSupportedError = MethodNotSupportedError;\n/**\n * Inner function that dispatches JSON-RPC request to the associated Keyring\n * methods.\n *\n * @param keyring - Keyring instance.\n * @param request - Keyring JSON-RPC request.\n * @returns A promise that resolves to the keyring response.\n */\nasync function dispatchRequest(keyring, request) {\n    // We first have to make sure that the request is a valid JSON-RPC request so\n    // we can check its method name.\n    (0, superstruct_1.assert)(request, JsonRpcRequest_1.JsonRpcRequestStruct);\n    switch (request.method) {\n        case rpc_1.KeyringRpcMethod.ListAccounts: {\n            (0, superstruct_1.assert)(request, api_1.ListAccountsRequestStruct);\n            return keyring.listAccounts();\n        }\n        case rpc_1.KeyringRpcMethod.GetAccount: {\n            (0, superstruct_1.assert)(request, api_1.GetAccountRequestStruct);\n            return keyring.getAccount(request.params.id);\n        }\n        case rpc_1.KeyringRpcMethod.CreateAccount: {\n            (0, superstruct_1.assert)(request, api_1.CreateAccountRequestStruct);\n            return keyring.createAccount(request.params.options);\n        }\n        case rpc_1.KeyringRpcMethod.GetAccountBalances: {\n            if (keyring.getAccountBalances === undefined) {\n                throw new MethodNotSupportedError(request.method);\n            }\n            (0, superstruct_1.assert)(request, api_1.GetAccountBalancesRequestStruct);\n            return keyring.getAccountBalances(request.params.id, request.params.assets);\n        }\n        case rpc_1.KeyringRpcMethod.FilterAccountChains: {\n            (0, superstruct_1.assert)(request, api_1.FilterAccountChainsStruct);\n            return keyring.filterAccountChains(request.params.id, request.params.chains);\n        }\n        case rpc_1.KeyringRpcMethod.UpdateAccount: {\n            (0, superstruct_1.assert)(request, api_1.UpdateAccountRequestStruct);\n            return keyring.updateAccount(request.params.account);\n        }\n        case rpc_1.KeyringRpcMethod.DeleteAccount: {\n            (0, superstruct_1.assert)(request, api_1.DeleteAccountRequestStruct);\n            return keyring.deleteAccount(request.params.id);\n        }\n        case rpc_1.KeyringRpcMethod.ExportAccount: {\n            if (keyring.exportAccount === undefined) {\n                throw new MethodNotSupportedError(request.method);\n            }\n            (0, superstruct_1.assert)(request, api_1.ExportAccountRequestStruct);\n            return keyring.exportAccount(request.params.id);\n        }\n        case rpc_1.KeyringRpcMethod.ListRequests: {\n            if (keyring.listRequests === undefined) {\n                throw new MethodNotSupportedError(request.method);\n            }\n            (0, superstruct_1.assert)(request, api_1.ListRequestsRequestStruct);\n            return keyring.listRequests();\n        }\n        case rpc_1.KeyringRpcMethod.GetRequest: {\n            if (keyring.getRequest === undefined) {\n                throw new MethodNotSupportedError(request.method);\n            }\n            (0, superstruct_1.assert)(request, api_1.GetRequestRequestStruct);\n            return keyring.getRequest(request.params.id);\n        }\n        case rpc_1.KeyringRpcMethod.SubmitRequest: {\n            (0, superstruct_1.assert)(request, api_1.SubmitRequestRequestStruct);\n            return keyring.submitRequest(request.params);\n        }\n        case rpc_1.KeyringRpcMethod.ApproveRequest: {\n            if (keyring.approveRequest === undefined) {\n                throw new MethodNotSupportedError(request.method);\n            }\n            (0, superstruct_1.assert)(request, api_1.ApproveRequestRequestStruct);\n            return keyring.approveRequest(request.params.id, request.params.data);\n        }\n        case rpc_1.KeyringRpcMethod.RejectRequest: {\n            if (keyring.rejectRequest === undefined) {\n                throw new MethodNotSupportedError(request.method);\n            }\n            (0, superstruct_1.assert)(request, api_1.RejectRequestRequestStruct);\n            return keyring.rejectRequest(request.params.id);\n        }\n        default: {\n            throw new MethodNotSupportedError(request.method);\n        }\n    }\n}\n/**\n * Handles a keyring JSON-RPC request.\n *\n * This function is meant to be used as a handler for Keyring JSON-RPC requests\n * in an Accounts Snap.\n *\n * @param keyring - Keyring instance.\n * @param request - Keyring JSON-RPC request.\n * @returns A promise that resolves to the keyring response.\n * @example\n * ```ts\n * export const onKeyringRequest: OnKeyringRequestHandler = async ({\n *   origin,\n *   request,\n * }) => {\n *   return await handleKeyringRequest(keyring, request);\n * };\n * ```\n */\nasync function handleKeyringRequest(keyring, request) {\n    try {\n        return await dispatchRequest(keyring, request);\n    }\n    catch (error) {\n        const message = error instanceof Error && typeof error.message === 'string'\n            ? error.message\n            : 'An unknown error occurred while handling the keyring request';\n        throw new Error(message);\n    }\n}\nexports.handleKeyringRequest = handleKeyringRequest;\n//# sourceMappingURL=rpc-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitSnapKeyringEvent = void 0;\n/**\n * Emit a keyring event from a snap.\n *\n * @param snap - The global snap object.\n * @param event - The event name.\n * @param data - The event data.\n */\nasync function emitSnapKeyringEvent(snap, event, data) {\n    await snap.request({\n        method: 'snap_manageAccounts',\n        params: {\n            method: event,\n            params: { ...data },\n        },\n    });\n}\nexports.emitSnapKeyringEvent = emitSnapKeyringEvent;\n//# sourceMappingURL=snap-utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.strictMask = exports.definePattern = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\n/**\n * Change the return type of a superstruct object struct to support exact\n * optional properties.\n *\n * @param schema - The object schema.\n * @returns A struct representing an object with a known set of properties.\n */\nfunction object(schema) {\n    return (0, superstruct_1.object)(schema);\n}\nexports.object = object;\n/**\n * Check if the current property is present in its parent object.\n *\n * @param ctx - The context to check.\n * @returns `true` if the property is present, `false` otherwise.\n */\nfunction hasOptional(ctx) {\n    const property = ctx.path[ctx.path.length - 1];\n    const parent = ctx.branch[ctx.branch.length - 2];\n    return property in parent;\n}\n/**\n * Augment a struct to allow exact-optional values. Exact-optional values can\n * be omitted but cannot be `undefined`.\n *\n * ```ts\n * const foo = object({ bar: exactOptional(string()) });\n * type Foo = Infer<typeof foo>;\n * // Foo = { bar?: string }\n * ```\n *\n * @param struct - The struct to augment.\n * @returns The augmented struct.\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        validator: (value, ctx) => !hasOptional(ctx) || struct.validator(value, ctx),\n        refiner: (value, ctx) => !hasOptional(ctx) || struct.refiner(value, ctx),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * Defines a new string-struct matching a regular expression.\n *\n * Example:\n *\n * ```ts\n * const EthAddressStruct = definePattern('EthAddress', /^0x[0-9a-f]{40}$/iu);\n * ```\n *\n * @param name - Type name.\n * @param pattern - Regular expression to match.\n * @returns A new string-struct that matches the given pattern.\n */\nfunction definePattern(name, pattern) {\n    return (0, superstruct_1.define)(name, (value) => typeof value === 'string' && pattern.test(value));\n}\nexports.definePattern = definePattern;\n/**\n * Assert that a value is valid according to a struct.\n *\n * It is similar to superstruct's mask function, but it does not ignore extra\n * properties.\n *\n * @param value - Value to check.\n * @param struct - Struct to validate the value against.\n * @param message - Error message to throw if the value is not valid.\n * @returns The value if it is valid.\n */\nfunction strictMask(value, struct, message) {\n    (0, superstruct_1.assert)(value, struct, message);\n    return value;\n}\nexports.strictMask = strictMask;\n//# sourceMappingURL=superstruct.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./typing\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringNumberStruct = exports.UrlStruct = exports.UuidStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst superstruct_2 = require(\"../superstruct\");\n/**\n * UUIDv4 struct.\n */\nexports.UuidStruct = (0, superstruct_2.definePattern)('UuidV4', /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/iu);\n/**\n * Validates if a given value is a valid URL.\n *\n * @param value - The value to be validated.\n * @returns A boolean indicating if the value is a valid URL.\n */\nexports.UrlStruct = (0, superstruct_1.define)('Url', (value) => {\n    try {\n        const url = new URL(value);\n        return url.protocol === 'http:' || url.protocol === 'https:';\n    }\n    catch (_) {\n        return false;\n    }\n});\n/**\n * A string which contains a positive float number.\n */\nexports.StringNumberStruct = (0, superstruct_2.definePattern)('StringNumber', /^\\d+(\\.\\d+)?$/u);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expectTrue = void 0;\n/**\n * Assert that a type extends `true`. It can be used, for example, to assert\n * that a given type extends another type.\n *\n * @example\n * ```ts\n * expectTrue<Extends<{a: string, b: string}, {a: string}>>(); // Ok\n * expectTrue<Extends<{a: string}, {a: string, b: string}>>(); // Error\n * ```\n *\n * This function follows the naming pattern used on `tsd`.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction expectTrue() {\n    // Intentionally empty\n}\nexports.expectTrue = expectTrue;\n//# sourceMappingURL=typing.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\n\nvar _stringify = require(\"./stringify.js\");\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = _interopRequireDefault(require(\"./native.js\"));\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports.default = _default;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _KeyringController_instances, _KeyringController_controllerOperationMutex, _KeyringController_vaultOperationMutex, _KeyringController_keyringBuilders, _KeyringController_keyrings, _KeyringController_unsupportedKeyrings, _KeyringController_password, _KeyringController_encryptor, _KeyringController_cacheEncryptionKey, _KeyringController_qrKeyringStateListener, _KeyringController_registerMessageHandlers, _KeyringController_getKeyringBuilderForType, _KeyringController_addQRKeyring, _KeyringController_subscribeToQRKeyringEvents, _KeyringController_unsubscribeFromQRKeyringsEvents, _KeyringController_createNewVaultWithKeyring, _KeyringController_getUpdatedKeyrings, _KeyringController_getSerializedKeyrings, _KeyringController_restoreSerializedKeyrings, _KeyringController_unlockKeyrings, _KeyringController_updateVault, _KeyringController_getAccountsFromKeyrings, _KeyringController_createKeyringWithFirstAccount, _KeyringController_newKeyring, _KeyringController_clearKeyrings, _KeyringController_restoreKeyring, _KeyringController_destroyKeyring, _KeyringController_removeEmptyKeyrings, _KeyringController_checkForDuplicate, _KeyringController_setUnlocked, _KeyringController_persistOrRollback, _KeyringController_withRollback, _KeyringController_assertControllerMutexIsLocked, _KeyringController_withControllerLock, _KeyringController_withVaultLock;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringController = exports.getDefaultKeyringState = exports.keyringBuilderFactory = exports.SignTypedDataVersion = exports.AccountImportStrategy = exports.isCustodyKeyring = exports.KeyringTypes = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst base_controller_1 = require(\"@metamask/base-controller\");\nconst encryptorUtils = __importStar(require(\"@metamask/browser-passworder\"));\nconst eth_hd_keyring_1 = __importDefault(require(\"@metamask/eth-hd-keyring\"));\nconst eth_sig_util_1 = require(\"@metamask/eth-sig-util\");\nconst eth_simple_keyring_1 = __importDefault(require(\"@metamask/eth-simple-keyring\"));\nconst utils_1 = require(\"@metamask/utils\");\nconst async_mutex_1 = require(\"async-mutex\");\nconst ethereumjs_wallet_1 = __importStar(require(\"ethereumjs-wallet\"));\nconst constants_1 = require(\"./constants.cjs\");\nconst name = 'KeyringController';\n/**\n * Available keyring types\n */\nvar KeyringTypes;\n(function (KeyringTypes) {\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    KeyringTypes[\"simple\"] = \"Simple Key Pair\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    KeyringTypes[\"hd\"] = \"HD Key Tree\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    KeyringTypes[\"qr\"] = \"QR Hardware Wallet Device\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    KeyringTypes[\"trezor\"] = \"Trezor Hardware\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    KeyringTypes[\"ledger\"] = \"Ledger Hardware\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    KeyringTypes[\"lattice\"] = \"Lattice Hardware\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    KeyringTypes[\"snap\"] = \"Snap Keyring\";\n})(KeyringTypes || (exports.KeyringTypes = KeyringTypes = {}));\n/**\n * Custody keyring types are a special case, as they are not a single type\n * but they all start with the prefix \"Custody\".\n * @param keyringType - The type of the keyring.\n * @returns Whether the keyring type is a custody keyring.\n */\nconst isCustodyKeyring = (keyringType) => {\n    return keyringType.startsWith('Custody');\n};\nexports.isCustodyKeyring = isCustodyKeyring;\n/**\n * A strategy for importing an account\n */\nvar AccountImportStrategy;\n(function (AccountImportStrategy) {\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AccountImportStrategy[\"privateKey\"] = \"privateKey\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AccountImportStrategy[\"json\"] = \"json\";\n})(AccountImportStrategy || (exports.AccountImportStrategy = AccountImportStrategy = {}));\n/**\n * The `signTypedMessage` version\n *\n * @see https://docs.metamask.io/guide/signing-data.html\n */\nvar SignTypedDataVersion;\n(function (SignTypedDataVersion) {\n    SignTypedDataVersion[\"V1\"] = \"V1\";\n    SignTypedDataVersion[\"V3\"] = \"V3\";\n    SignTypedDataVersion[\"V4\"] = \"V4\";\n})(SignTypedDataVersion || (exports.SignTypedDataVersion = SignTypedDataVersion = {}));\n/**\n * Get builder function for `Keyring`\n *\n * Returns a builder function for `Keyring` with a `type` property.\n *\n * @param KeyringConstructor - The Keyring class for the builder.\n * @returns A builder function for the given Keyring.\n */\nfunction keyringBuilderFactory(KeyringConstructor) {\n    const builder = () => new KeyringConstructor();\n    builder.type = KeyringConstructor.type;\n    return builder;\n}\nexports.keyringBuilderFactory = keyringBuilderFactory;\nconst defaultKeyringBuilders = [\n    keyringBuilderFactory(eth_simple_keyring_1.default),\n    keyringBuilderFactory(eth_hd_keyring_1.default),\n];\nconst getDefaultKeyringState = () => {\n    return {\n        isUnlocked: false,\n        keyrings: [],\n    };\n};\nexports.getDefaultKeyringState = getDefaultKeyringState;\n/**\n * Assert that the given keyring has an exportable\n * mnemonic.\n *\n * @param keyring - The keyring to check\n * @throws When the keyring does not have a mnemonic\n */\nfunction assertHasUint8ArrayMnemonic(keyring) {\n    if (!((0, utils_1.hasProperty)(keyring, 'mnemonic') && keyring.mnemonic instanceof Uint8Array)) {\n        throw new Error(\"Can't get mnemonic bytes from keyring\");\n    }\n}\n/**\n * Assert that the provided encryptor supports\n * encryption and encryption key export.\n *\n * @param encryptor - The encryptor to check.\n * @throws If the encryptor does not support key encryption.\n */\nfunction assertIsExportableKeyEncryptor(encryptor) {\n    if (!('importKey' in encryptor &&\n        typeof encryptor.importKey === 'function' &&\n        'decryptWithKey' in encryptor &&\n        typeof encryptor.decryptWithKey === 'function' &&\n        'encryptWithKey' in encryptor &&\n        typeof encryptor.encryptWithKey === 'function')) {\n        throw new Error(constants_1.KeyringControllerError.UnsupportedEncryptionKeyExport);\n    }\n}\n/**\n * Assert that the provided password is a valid non-empty string.\n *\n * @param password - The password to check.\n * @throws If the password is not a valid string.\n */\nfunction assertIsValidPassword(password) {\n    if (typeof password !== 'string') {\n        throw new Error(constants_1.KeyringControllerError.WrongPasswordType);\n    }\n    if (!password || !password.length) {\n        throw new Error(constants_1.KeyringControllerError.InvalidEmptyPassword);\n    }\n}\n/**\n * Checks if the provided value is a serialized keyrings array.\n *\n * @param array - The value to check.\n * @returns True if the value is a serialized keyrings array.\n */\nfunction isSerializedKeyringsArray(array) {\n    return (typeof array === 'object' &&\n        Array.isArray(array) &&\n        array.every((value) => value.type && (0, utils_1.isValidJson)(value.data)));\n}\n/**\n * Display For Keyring\n *\n * Is used for adding the current keyrings to the state object.\n *\n * @param keyring - The keyring to display.\n * @returns A keyring display object, with type and accounts properties.\n */\nasync function displayForKeyring(keyring) {\n    const accounts = await keyring.getAccounts();\n    return {\n        type: keyring.type,\n        // Cast to `string[]` here is safe here because `accounts` has no nullish\n        // values, and `normalize` returns `string` unless given a nullish value\n        accounts: accounts.map(normalize),\n    };\n}\n/**\n * Check if address is an ethereum address\n *\n * @param address - An address.\n * @returns Returns true if the address is an ethereum one, false otherwise.\n */\nfunction isEthAddress(address) {\n    // We first check if it's a matching `Hex` string, so that is narrows down\n    // `address` as an `Hex` type, allowing us to use `isValidHexAddress`\n    return (\n    // NOTE: This function only checks for lowercased strings\n    (0, utils_1.isStrictHexString)(address.toLowerCase()) &&\n        // This checks for lowercased addresses and checksum addresses too\n        (0, utils_1.isValidHexAddress)(address));\n}\n/**\n * Normalize ethereum or non-EVM address.\n *\n * @param address - Ethereum or non-EVM address.\n * @returns The normalized address.\n */\nfunction normalize(address) {\n    // Since the `KeyringController` is only dealing with address, we have\n    // no other way to get the associated account type with this address. So we\n    // are down to check the actual address format for now\n    // TODO: Find a better way to not have those runtime checks based on the\n    //       address value!\n    return isEthAddress(address) ? (0, eth_sig_util_1.normalize)(address) : address;\n}\n/**\n * Controller responsible for establishing and managing user identity.\n *\n * This class is a wrapper around the `eth-keyring-controller` package. The\n * `eth-keyring-controller` manages the \"vault\", which is an encrypted store of private keys, and\n * it manages the wallet \"lock\" state. This wrapper class has convenience methods for interacting\n * with the internal keyring controller and handling certain complex operations that involve the\n * keyrings.\n */\nclass KeyringController extends base_controller_1.BaseController {\n    /**\n     * Creates a KeyringController instance.\n     *\n     * @param options - Initial options used to configure this controller\n     * @param options.encryptor - An optional object for defining encryption schemes.\n     * @param options.keyringBuilders - Set a new name for account.\n     * @param options.cacheEncryptionKey - Whether to cache or not encryption key.\n     * @param options.messenger - A restricted controller messenger.\n     * @param options.state - Initial state to set on this controller.\n     */\n    constructor(options) {\n        const { encryptor = encryptorUtils, keyringBuilders, messenger, state, } = options;\n        super({\n            name,\n            metadata: {\n                vault: { persist: true, anonymous: false },\n                isUnlocked: { persist: false, anonymous: true },\n                keyrings: { persist: false, anonymous: false },\n                encryptionKey: { persist: false, anonymous: false },\n                encryptionSalt: { persist: false, anonymous: false },\n            },\n            messenger,\n            state: {\n                ...(0, exports.getDefaultKeyringState)(),\n                ...state,\n            },\n        });\n        _KeyringController_instances.add(this);\n        _KeyringController_controllerOperationMutex.set(this, new async_mutex_1.Mutex());\n        _KeyringController_vaultOperationMutex.set(this, new async_mutex_1.Mutex());\n        _KeyringController_keyringBuilders.set(this, void 0);\n        _KeyringController_keyrings.set(this, void 0);\n        _KeyringController_unsupportedKeyrings.set(this, void 0);\n        _KeyringController_password.set(this, void 0);\n        _KeyringController_encryptor.set(this, void 0);\n        _KeyringController_cacheEncryptionKey.set(this, void 0);\n        _KeyringController_qrKeyringStateListener.set(this, void 0);\n        __classPrivateFieldSet(this, _KeyringController_keyringBuilders, keyringBuilders\n            ? keyringBuilders.concat(defaultKeyringBuilders)\n            : defaultKeyringBuilders, \"f\");\n        __classPrivateFieldSet(this, _KeyringController_encryptor, encryptor, \"f\");\n        __classPrivateFieldSet(this, _KeyringController_keyrings, [], \"f\");\n        __classPrivateFieldSet(this, _KeyringController_unsupportedKeyrings, [], \"f\");\n        // This option allows the controller to cache an exported key\n        // for use in decrypting and encrypting data without password\n        __classPrivateFieldSet(this, _KeyringController_cacheEncryptionKey, Boolean(options.cacheEncryptionKey), \"f\");\n        if (__classPrivateFieldGet(this, _KeyringController_cacheEncryptionKey, \"f\")) {\n            assertIsExportableKeyEncryptor(encryptor);\n        }\n        __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_registerMessageHandlers).call(this);\n    }\n    /**\n     * Adds a new account to the default (first) HD seed phrase keyring.\n     *\n     * @param accountCount - Number of accounts before adding a new one, used to\n     * make the method idempotent.\n     * @returns Promise resolving to the added account address.\n     */\n    async addNewAccount(accountCount) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const primaryKeyring = this.getKeyringsByType('HD Key Tree')[0];\n            if (!primaryKeyring) {\n                throw new Error('No HD keyring found');\n            }\n            const oldAccounts = await primaryKeyring.getAccounts();\n            if (accountCount && oldAccounts.length !== accountCount) {\n                if (accountCount > oldAccounts.length) {\n                    throw new Error('Account out of sequence');\n                }\n                // we return the account already existing at index `accountCount`\n                const existingAccount = oldAccounts[accountCount];\n                if (!existingAccount) {\n                    throw new Error(`Can't find account at index ${accountCount}`);\n                }\n                return existingAccount;\n            }\n            const [addedAccountAddress] = await primaryKeyring.addAccounts(1);\n            await this.verifySeedPhrase();\n            return addedAccountAddress;\n        });\n    }\n    /**\n     * Adds a new account to the specified keyring.\n     *\n     * @param keyring - Keyring to add the account to.\n     * @param accountCount - Number of accounts before adding a new one, used to make the method idempotent.\n     * @returns Promise resolving to the added account address\n     */\n    async addNewAccountForKeyring(keyring, accountCount) {\n        // READ THIS CAREFULLY:\n        // We still uses `Hex` here, since we are not using this method when creating\n        // and account using a \"Snap Keyring\". This function assume the `keyring` is\n        // ethereum compatible, but \"Snap Keyring\" might not be.\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const oldAccounts = await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getAccountsFromKeyrings).call(this);\n            if (accountCount && oldAccounts.length !== accountCount) {\n                if (accountCount > oldAccounts.length) {\n                    throw new Error('Account out of sequence');\n                }\n                const existingAccount = oldAccounts[accountCount];\n                (0, utils_1.assertIsStrictHexString)(existingAccount);\n                return existingAccount;\n            }\n            await keyring.addAccounts(1);\n            const addedAccountAddress = (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getAccountsFromKeyrings).call(this)).find((selectedAddress) => !oldAccounts.includes(selectedAddress));\n            (0, utils_1.assertIsStrictHexString)(addedAccountAddress);\n            return addedAccountAddress;\n        });\n    }\n    /**\n     * Adds a new account to the default (first) HD seed phrase keyring without updating identities in preferences.\n     *\n     * @returns Promise resolving to the added account address.\n     */\n    async addNewAccountWithoutUpdate() {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const primaryKeyring = this.getKeyringsByType('HD Key Tree')[0];\n            if (!primaryKeyring) {\n                throw new Error('No HD keyring found');\n            }\n            const [addedAccountAddress] = await primaryKeyring.addAccounts(1);\n            await this.verifySeedPhrase();\n            return addedAccountAddress;\n        });\n    }\n    /**\n     * Effectively the same as creating a new keychain then populating it\n     * using the given seed phrase.\n     *\n     * @param password - Password to unlock keychain.\n     * @param seed - A BIP39-compliant seed phrase as Uint8Array,\n     * either as a string or an array of UTF-8 bytes that represent the string.\n     * @returns Promise resolving when the operation ends successfully.\n     */\n    async createNewVaultAndRestore(password, seed) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            assertIsValidPassword(password);\n            await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_createNewVaultWithKeyring).call(this, password, {\n                type: KeyringTypes.hd,\n                opts: {\n                    mnemonic: seed,\n                    numberOfAccounts: 1,\n                },\n            });\n        });\n    }\n    /**\n     * Create a new vault and primary keyring.\n     *\n     * This only works if keyrings are empty. If there is a pre-existing unlocked vault, calling this will have no effect.\n     * If there is a pre-existing locked vault, it will be replaced.\n     *\n     * @param password - Password to unlock the new vault.\n     */\n    async createNewVaultAndKeychain(password) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const accounts = await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getAccountsFromKeyrings).call(this);\n            if (!accounts.length) {\n                await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_createNewVaultWithKeyring).call(this, password, {\n                    type: KeyringTypes.hd,\n                });\n            }\n        });\n    }\n    /**\n     * Adds a new keyring of the given `type`.\n     *\n     * @param type - Keyring type name.\n     * @param opts - Keyring options.\n     * @throws If a builder for the given `type` does not exist.\n     * @returns Promise resolving to the added keyring.\n     */\n    async addNewKeyring(type, opts) {\n        if (type === KeyringTypes.qr) {\n            return this.getOrAddQRKeyring();\n        }\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_newKeyring).call(this, type, opts));\n    }\n    /**\n     * Method to verify a given password validity. Throws an\n     * error if the password is invalid.\n     *\n     * @param password - Password of the keyring.\n     */\n    async verifyPassword(password) {\n        if (!this.state.vault) {\n            throw new Error(constants_1.KeyringControllerError.VaultError);\n        }\n        await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").decrypt(password, this.state.vault);\n    }\n    /**\n     * Returns the status of the vault.\n     *\n     * @returns Boolean returning true if the vault is unlocked.\n     */\n    isUnlocked() {\n        return this.state.isUnlocked;\n    }\n    /**\n     * Gets the seed phrase of the HD keyring.\n     *\n     * @param password - Password of the keyring.\n     * @returns Promise resolving to the seed phrase.\n     */\n    async exportSeedPhrase(password) {\n        await this.verifyPassword(password);\n        assertHasUint8ArrayMnemonic(__classPrivateFieldGet(this, _KeyringController_keyrings, \"f\")[0]);\n        return __classPrivateFieldGet(this, _KeyringController_keyrings, \"f\")[0].mnemonic;\n    }\n    /**\n     * Gets the private key from the keyring controlling an address.\n     *\n     * @param password - Password of the keyring.\n     * @param address - Address to export.\n     * @returns Promise resolving to the private key for an address.\n     */\n    async exportAccount(password, address) {\n        await this.verifyPassword(password);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.exportAccount) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedExportAccount);\n        }\n        return await keyring.exportAccount(normalize(address));\n    }\n    /**\n     * Returns the public addresses of all accounts from every keyring.\n     *\n     * @returns A promise resolving to an array of addresses.\n     */\n    async getAccounts() {\n        return this.state.keyrings.reduce((accounts, keyring) => accounts.concat(keyring.accounts), []);\n    }\n    /**\n     * Get encryption public key.\n     *\n     * @param account - An account address.\n     * @param opts - Additional encryption options.\n     * @throws If the `account` does not exist or does not support the `getEncryptionPublicKey` method\n     * @returns Promise resolving to encyption public key of the `account` if one exists.\n     */\n    async getEncryptionPublicKey(account, opts) {\n        const address = (0, eth_sig_util_1.normalize)(account);\n        const keyring = (await this.getKeyringForAccount(account));\n        if (!keyring.getEncryptionPublicKey) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedGetEncryptionPublicKey);\n        }\n        return await keyring.getEncryptionPublicKey(address, opts);\n    }\n    /**\n     * Attempts to decrypt the provided message parameters.\n     *\n     * @param messageParams - The decryption message parameters.\n     * @param messageParams.from - The address of the account you want to use to decrypt the message.\n     * @param messageParams.data - The encrypted data that you want to decrypt.\n     * @returns The raw decryption result.\n     */\n    async decryptMessage(messageParams) {\n        const address = (0, eth_sig_util_1.normalize)(messageParams.from);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.decryptMessage) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedDecryptMessage);\n        }\n        return keyring.decryptMessage(address, messageParams.data);\n    }\n    /**\n     * Returns the currently initialized keyring that manages\n     * the specified `address` if one exists.\n     *\n     * @deprecated Use of this method is discouraged as actions executed directly on\n     * keyrings are not being reflected in the KeyringController state and not\n     * persisted in the vault. Use `withKeyring` instead.\n     * @param account - An account address.\n     * @returns Promise resolving to keyring of the `account` if one exists.\n     */\n    async getKeyringForAccount(account) {\n        const address = normalize(account);\n        const candidates = await Promise.all(__classPrivateFieldGet(this, _KeyringController_keyrings, \"f\").map(async (keyring) => {\n            return Promise.all([keyring, keyring.getAccounts()]);\n        }));\n        const winners = candidates.filter((candidate) => {\n            const accounts = candidate[1].map(normalize);\n            return accounts.includes(address);\n        });\n        if (winners.length && winners[0]?.length) {\n            return winners[0][0];\n        }\n        // Adding more info to the error\n        let errorInfo = '';\n        if (!candidates.length) {\n            errorInfo = 'There are no keyrings';\n        }\n        else if (!winners.length) {\n            errorInfo = 'There are keyrings, but none match the address';\n        }\n        throw new Error(`${constants_1.KeyringControllerError.NoKeyring}. Error info: ${errorInfo}`);\n    }\n    /**\n     * Returns all keyrings of the given type.\n     *\n     * @deprecated Use of this method is discouraged as actions executed directly on\n     * keyrings are not being reflected in the KeyringController state and not\n     * persisted in the vault. Use `withKeyring` instead.\n     * @param type - Keyring type name.\n     * @returns An array of keyrings of the given type.\n     */\n    getKeyringsByType(type) {\n        return __classPrivateFieldGet(this, _KeyringController_keyrings, \"f\").filter((keyring) => keyring.type === type);\n    }\n    /**\n     * Persist all serialized keyrings in the vault.\n     *\n     * @deprecated This method is being phased out in favor of `withKeyring`.\n     * @returns Promise resolving with `true` value when the\n     * operation completes.\n     */\n    async persistAllKeyrings() {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => true);\n    }\n    /**\n     * Imports an account with the specified import strategy.\n     *\n     * @param strategy - Import strategy name.\n     * @param args - Array of arguments to pass to the underlying stategy.\n     * @throws Will throw when passed an unrecognized strategy.\n     * @returns Promise resolving to the imported account address.\n     */\n    async importAccountWithStrategy(strategy, \n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            let privateKey;\n            switch (strategy) {\n                case 'privateKey':\n                    const [importedKey] = args;\n                    if (!importedKey) {\n                        throw new Error('Cannot import an empty key.');\n                    }\n                    const prefixed = (0, utils_1.add0x)(importedKey);\n                    let bufferedPrivateKey;\n                    try {\n                        bufferedPrivateKey = (0, util_1.toBuffer)(prefixed);\n                    }\n                    catch {\n                        throw new Error('Cannot import invalid private key.');\n                    }\n                    if (!(0, util_1.isValidPrivate)(bufferedPrivateKey) ||\n                        // ensures that the key is 64 bytes long\n                        (0, util_1.getBinarySize)(prefixed) !== 64 + '0x'.length) {\n                        throw new Error('Cannot import invalid private key.');\n                    }\n                    privateKey = (0, utils_1.remove0x)(prefixed);\n                    break;\n                case 'json':\n                    let wallet;\n                    const [input, password] = args;\n                    try {\n                        wallet = ethereumjs_wallet_1.thirdparty.fromEtherWallet(input, password);\n                    }\n                    catch (e) {\n                        wallet = wallet || (await ethereumjs_wallet_1.default.fromV3(input, password, true));\n                    }\n                    privateKey = (0, utils_1.bytesToHex)(wallet.getPrivateKey());\n                    break;\n                default:\n                    throw new Error(`Unexpected import strategy: '${strategy}'`);\n            }\n            const newKeyring = (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_newKeyring).call(this, KeyringTypes.simple, [\n                privateKey,\n            ]));\n            const accounts = await newKeyring.getAccounts();\n            return accounts[0];\n        });\n    }\n    /**\n     * Removes an account from keyring state.\n     *\n     * @param address - Address of the account to remove.\n     * @fires KeyringController:accountRemoved\n     * @returns Promise resolving when the account is removed.\n     */\n    async removeAccount(address) {\n        await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const keyring = (await this.getKeyringForAccount(address));\n            // Not all the keyrings support this, so we have to check\n            if (!keyring.removeAccount) {\n                throw new Error(constants_1.KeyringControllerError.UnsupportedRemoveAccount);\n            }\n            // The `removeAccount` method of snaps keyring is async. We have to update\n            // the interface of the other keyrings to be async as well.\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            // FIXME: We do cast to `Hex` to makes the type checker happy here, and\n            // because `Keyring<State>.removeAccount` requires address to be `Hex`. Those\n            // type would need to be updated for a full non-EVM support.\n            keyring.removeAccount(address);\n            const accounts = await keyring.getAccounts();\n            // Check if this was the last/only account\n            if (accounts.length === 0) {\n                await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_removeEmptyKeyrings).call(this);\n            }\n        });\n        this.messagingSystem.publish(`${name}:accountRemoved`, address);\n    }\n    /**\n     * Deallocates all secrets and locks the wallet.\n     *\n     * @returns Promise resolving when the operation completes.\n     */\n    async setLocked() {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_withRollback).call(this, async () => {\n            __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_unsubscribeFromQRKeyringsEvents).call(this);\n            __classPrivateFieldSet(this, _KeyringController_password, undefined, \"f\");\n            await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_clearKeyrings).call(this);\n            this.update((state) => {\n                state.isUnlocked = false;\n                state.keyrings = [];\n                delete state.encryptionKey;\n                delete state.encryptionSalt;\n            });\n            this.messagingSystem.publish(`${name}:lock`);\n        });\n    }\n    /**\n     * Signs message by calling down into a specific keyring.\n     *\n     * @param messageParams - PersonalMessageParams object to sign.\n     * @returns Promise resolving to a signed message string.\n     */\n    async signMessage(messageParams) {\n        if (!messageParams.data) {\n            throw new Error(\"Can't sign an empty message\");\n        }\n        const address = (0, eth_sig_util_1.normalize)(messageParams.from);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.signMessage) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedSignMessage);\n        }\n        return await keyring.signMessage(address, messageParams.data);\n    }\n    /**\n     * Signs personal message by calling down into a specific keyring.\n     *\n     * @param messageParams - PersonalMessageParams object to sign.\n     * @returns Promise resolving to a signed message string.\n     */\n    async signPersonalMessage(messageParams) {\n        const address = (0, eth_sig_util_1.normalize)(messageParams.from);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.signPersonalMessage) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedSignPersonalMessage);\n        }\n        const normalizedData = normalize(messageParams.data);\n        return await keyring.signPersonalMessage(address, normalizedData);\n    }\n    /**\n     * Signs typed message by calling down into a specific keyring.\n     *\n     * @param messageParams - TypedMessageParams object to sign.\n     * @param version - Compatibility version EIP712.\n     * @throws Will throw when passed an unrecognized version.\n     * @returns Promise resolving to a signed message string or an error if any.\n     */\n    async signTypedMessage(messageParams, version) {\n        try {\n            if (![\n                SignTypedDataVersion.V1,\n                SignTypedDataVersion.V3,\n                SignTypedDataVersion.V4,\n            ].includes(version)) {\n                throw new Error(`Unexpected signTypedMessage version: '${version}'`);\n            }\n            // Cast to `Hex` here is safe here because `messageParams.from` is not nullish.\n            // `normalize` returns `Hex` unless given a nullish value.\n            const address = (0, eth_sig_util_1.normalize)(messageParams.from);\n            const keyring = (await this.getKeyringForAccount(address));\n            if (!keyring.signTypedData) {\n                throw new Error(constants_1.KeyringControllerError.UnsupportedSignTypedMessage);\n            }\n            return await keyring.signTypedData(address, version !== SignTypedDataVersion.V1 &&\n                typeof messageParams.data === 'string'\n                ? JSON.parse(messageParams.data)\n                : messageParams.data, { version });\n        }\n        catch (error) {\n            // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            throw new Error(`Keyring Controller signTypedMessage: ${error}`);\n        }\n    }\n    /**\n     * Signs a transaction by calling down into a specific keyring.\n     *\n     * @param transaction - Transaction object to sign. Must be a `ethereumjs-tx` transaction instance.\n     * @param from - Address to sign from, should be in keychain.\n     * @param opts - An optional options object.\n     * @returns Promise resolving to a signed transaction string.\n     */\n    async signTransaction(transaction, from, opts) {\n        const address = (0, eth_sig_util_1.normalize)(from);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.signTransaction) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedSignTransaction);\n        }\n        return await keyring.signTransaction(address, transaction, opts);\n    }\n    /**\n     * Convert a base transaction to a base UserOperation.\n     *\n     * @param from - Address of the sender.\n     * @param transactions - Base transactions to include in the UserOperation.\n     * @param executionContext - The execution context to use for the UserOperation.\n     * @returns A pseudo-UserOperation that can be used to construct a real.\n     */\n    async prepareUserOperation(from, transactions, executionContext) {\n        const address = (0, eth_sig_util_1.normalize)(from);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.prepareUserOperation) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedPrepareUserOperation);\n        }\n        return await keyring.prepareUserOperation(address, transactions, executionContext);\n    }\n    /**\n     * Patches properties of a UserOperation. Currently, only the\n     * `paymasterAndData` can be patched.\n     *\n     * @param from - Address of the sender.\n     * @param userOp - UserOperation to patch.\n     * @param executionContext - The execution context to use for the UserOperation.\n     * @returns A patch to apply to the UserOperation.\n     */\n    async patchUserOperation(from, userOp, executionContext) {\n        const address = (0, eth_sig_util_1.normalize)(from);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.patchUserOperation) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedPatchUserOperation);\n        }\n        return await keyring.patchUserOperation(address, userOp, executionContext);\n    }\n    /**\n     * Signs an UserOperation.\n     *\n     * @param from - Address of the sender.\n     * @param userOp - UserOperation to sign.\n     * @param executionContext - The execution context to use for the UserOperation.\n     * @returns The signature of the UserOperation.\n     */\n    async signUserOperation(from, userOp, executionContext) {\n        const address = (0, eth_sig_util_1.normalize)(from);\n        const keyring = (await this.getKeyringForAccount(address));\n        if (!keyring.signUserOperation) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedSignUserOperation);\n        }\n        return await keyring.signUserOperation(address, userOp, executionContext);\n    }\n    /**\n     * Changes the password used to encrypt the vault.\n     *\n     * @param password - The new password.\n     * @returns Promise resolving when the operation completes.\n     */\n    changePassword(password) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            if (!this.state.isUnlocked) {\n                throw new Error(constants_1.KeyringControllerError.MissingCredentials);\n            }\n            assertIsValidPassword(password);\n            __classPrivateFieldSet(this, _KeyringController_password, password, \"f\");\n            // We need to clear encryption key and salt from state\n            // to force the controller to re-encrypt the vault using\n            // the new password.\n            if (__classPrivateFieldGet(this, _KeyringController_cacheEncryptionKey, \"f\")) {\n                this.update((state) => {\n                    delete state.encryptionKey;\n                    delete state.encryptionSalt;\n                });\n            }\n        });\n    }\n    /**\n     * Attempts to decrypt the current vault and load its keyrings,\n     * using the given encryption key and salt.\n     *\n     * @param encryptionKey - Key to unlock the keychain.\n     * @param encryptionSalt - Salt to unlock the keychain.\n     * @returns Promise resolving when the operation completes.\n     */\n    async submitEncryptionKey(encryptionKey, encryptionSalt) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_withRollback).call(this, async () => {\n            __classPrivateFieldSet(this, _KeyringController_keyrings, await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_unlockKeyrings).call(this, undefined, encryptionKey, encryptionSalt), \"f\");\n            __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_setUnlocked).call(this);\n        });\n    }\n    /**\n     * Attempts to decrypt the current vault and load its keyrings,\n     * using the given password.\n     *\n     * @param password - Password to unlock the keychain.\n     * @returns Promise resolving when the operation completes.\n     */\n    async submitPassword(password) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_withRollback).call(this, async () => {\n            __classPrivateFieldSet(this, _KeyringController_keyrings, await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_unlockKeyrings).call(this, password), \"f\");\n            __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_setUnlocked).call(this);\n        });\n    }\n    /**\n     * Verifies the that the seed phrase restores the current keychain's accounts.\n     *\n     * @returns Promise resolving to the seed phrase as Uint8Array.\n     */\n    async verifySeedPhrase() {\n        const primaryKeyring = this.getKeyringsByType(KeyringTypes.hd)[0];\n        if (!primaryKeyring) {\n            throw new Error('No HD keyring found.');\n        }\n        assertHasUint8ArrayMnemonic(primaryKeyring);\n        const seedWords = primaryKeyring.mnemonic;\n        const accounts = await primaryKeyring.getAccounts();\n        /* istanbul ignore if */\n        if (accounts.length === 0) {\n            throw new Error('Cannot verify an empty keyring.');\n        }\n        // The HD Keyring Builder is a default keyring builder\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const hdKeyringBuilder = __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getKeyringBuilderForType).call(this, KeyringTypes.hd);\n        const hdKeyring = hdKeyringBuilder();\n        // @ts-expect-error @metamask/eth-hd-keyring correctly handles\n        // Uint8Array seed phrases in the `deserialize` method.\n        await hdKeyring.deserialize({\n            mnemonic: seedWords,\n            numberOfAccounts: accounts.length,\n        });\n        const testAccounts = await hdKeyring.getAccounts();\n        /* istanbul ignore if */\n        if (testAccounts.length !== accounts.length) {\n            throw new Error('Seed phrase imported incorrect number of accounts.');\n        }\n        testAccounts.forEach((account, i) => {\n            /* istanbul ignore if */\n            if (account.toLowerCase() !== accounts[i].toLowerCase()) {\n                throw new Error('Seed phrase imported different accounts.');\n            }\n        });\n        return seedWords;\n    }\n    async withKeyring(selector, operation, options = {\n        createIfMissing: false,\n    }) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            let keyring;\n            if ('address' in selector) {\n                keyring = (await this.getKeyringForAccount(selector.address));\n            }\n            else {\n                keyring = this.getKeyringsByType(selector.type)[selector.index || 0];\n                if (!keyring && options.createIfMissing) {\n                    keyring = (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_newKeyring).call(this, selector.type, options.createWithData));\n                }\n            }\n            if (!keyring) {\n                throw new Error(constants_1.KeyringControllerError.KeyringNotFound);\n            }\n            const result = await operation(keyring);\n            if (Object.is(result, keyring)) {\n                // Access to a keyring instance outside of controller safeguards\n                // should be discouraged, as it can lead to unexpected behavior.\n                // This error is thrown to prevent consumers using `withKeyring`\n                // as a way to get a reference to a keyring instance.\n                throw new Error(constants_1.KeyringControllerError.UnsafeDirectKeyringAccess);\n            }\n            return result;\n        });\n    }\n    // QR Hardware related methods\n    /**\n     * Get QR Hardware keyring.\n     *\n     * @returns The QR Keyring if defined, otherwise undefined\n     * @deprecated Use `withKeyring` instead.\n     */\n    getQRKeyring() {\n        // QRKeyring is not yet compatible with Keyring type from @metamask/utils\n        return this.getKeyringsByType(KeyringTypes.qr)[0];\n    }\n    /**\n     * Get QR hardware keyring. If it doesn't exist, add it.\n     *\n     * @returns The added keyring\n     * @deprecated Use `addNewKeyring` and `withKeyring` instead.\n     */\n    async getOrAddQRKeyring() {\n        return (this.getQRKeyring() ||\n            (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_addQRKeyring).call(this))));\n    }\n    /**\n     * Restore QR keyring from serialized data.\n     *\n     * @param serialized - Serialized data to restore the keyring from.\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async restoreQRKeyring(serialized) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const keyring = this.getQRKeyring() || (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_addQRKeyring).call(this));\n            keyring.deserialize(serialized);\n        });\n    }\n    /**\n     * Reset QR keyring state.\n     *\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async resetQRKeyringState() {\n        (await this.getOrAddQRKeyring()).resetStore();\n    }\n    /**\n     * Get QR keyring state.\n     *\n     * @returns Promise resolving to the keyring state.\n     * @deprecated Use `withKeyring` or subscribe to `\"KeyringController:qrKeyringStateChange\"`\n     * instead.\n     */\n    async getQRKeyringState() {\n        return (await this.getOrAddQRKeyring()).getMemStore();\n    }\n    /**\n     * Submit QR hardware wallet public HDKey.\n     *\n     * @param cryptoHDKey - The key to submit.\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async submitQRCryptoHDKey(cryptoHDKey) {\n        (await this.getOrAddQRKeyring()).submitCryptoHDKey(cryptoHDKey);\n    }\n    /**\n     * Submit QR hardware wallet account.\n     *\n     * @param cryptoAccount - The account to submit.\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async submitQRCryptoAccount(cryptoAccount) {\n        (await this.getOrAddQRKeyring()).submitCryptoAccount(cryptoAccount);\n    }\n    /**\n     * Submit QR hardware wallet signature.\n     *\n     * @param requestId - The request ID.\n     * @param ethSignature - The signature to submit.\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async submitQRSignature(requestId, ethSignature) {\n        (await this.getOrAddQRKeyring()).submitSignature(requestId, ethSignature);\n    }\n    /**\n     * Cancel QR sign request.\n     *\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async cancelQRSignRequest() {\n        (await this.getOrAddQRKeyring()).cancelSignRequest();\n    }\n    /**\n     * Cancels qr keyring sync.\n     *\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async cancelQRSynchronization() {\n        // eslint-disable-next-line n/no-sync\n        (await this.getOrAddQRKeyring()).cancelSync();\n    }\n    /**\n     * Connect to QR hardware wallet.\n     *\n     * @param page - The page to connect to.\n     * @returns Promise resolving to the connected accounts.\n     * @deprecated Use of this method is discouraged as it creates a dangling promise\n     * internal to the `QRKeyring`, which can lead to unpredictable deadlocks. Please use\n     * `withKeyring` instead.\n     */\n    async connectQRHardware(page) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            try {\n                const keyring = this.getQRKeyring() || (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_addQRKeyring).call(this));\n                let accounts;\n                switch (page) {\n                    case -1:\n                        accounts = await keyring.getPreviousPage();\n                        break;\n                    case 1:\n                        accounts = await keyring.getNextPage();\n                        break;\n                    default:\n                        accounts = await keyring.getFirstPage();\n                }\n                // TODO: Replace `any` with type\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                return accounts.map((account) => {\n                    return {\n                        ...account,\n                        balance: '0x0',\n                    };\n                });\n            }\n            catch (e) {\n                // TODO: Add test case for when keyring throws\n                /* istanbul ignore next */\n                // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                throw new Error(`Unspecified error when connect QR Hardware, ${e}`);\n            }\n        });\n    }\n    /**\n     * Unlock a QR hardware wallet account.\n     *\n     * @param index - The index of the account to unlock.\n     * @returns Promise resolving when the operation completes.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async unlockQRHardwareWalletAccount(index) {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const keyring = this.getQRKeyring() || (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_addQRKeyring).call(this));\n            keyring.setAccountToUnlock(index);\n            await keyring.addAccounts(1);\n        });\n    }\n    async getAccountKeyringType(account) {\n        const keyring = (await this.getKeyringForAccount(account));\n        return keyring.type;\n    }\n    /**\n     * Forget the QR hardware wallet.\n     *\n     * @returns Promise resolving to the removed accounts and the remaining accounts.\n     * @deprecated Use `withKeyring` instead.\n     */\n    async forgetQRDevice() {\n        return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_persistOrRollback).call(this, async () => {\n            const keyring = this.getQRKeyring();\n            if (!keyring) {\n                return { removedAccounts: [], remainingAccounts: [] };\n            }\n            const allAccounts = (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getAccountsFromKeyrings).call(this));\n            keyring.forgetDevice();\n            const remainingAccounts = (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getAccountsFromKeyrings).call(this));\n            const removedAccounts = allAccounts.filter((address) => !remainingAccounts.includes(address));\n            return { removedAccounts, remainingAccounts };\n        });\n    }\n}\nexports.KeyringController = KeyringController;\n_KeyringController_controllerOperationMutex = new WeakMap(), _KeyringController_vaultOperationMutex = new WeakMap(), _KeyringController_keyringBuilders = new WeakMap(), _KeyringController_keyrings = new WeakMap(), _KeyringController_unsupportedKeyrings = new WeakMap(), _KeyringController_password = new WeakMap(), _KeyringController_encryptor = new WeakMap(), _KeyringController_cacheEncryptionKey = new WeakMap(), _KeyringController_qrKeyringStateListener = new WeakMap(), _KeyringController_instances = new WeakSet(), _KeyringController_registerMessageHandlers = function _KeyringController_registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler(`${name}:signMessage`, this.signMessage.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:signPersonalMessage`, this.signPersonalMessage.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:signTypedMessage`, this.signTypedMessage.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:decryptMessage`, this.decryptMessage.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:getEncryptionPublicKey`, this.getEncryptionPublicKey.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:getAccounts`, this.getAccounts.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:getKeyringsByType`, this.getKeyringsByType.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:getKeyringForAccount`, this.getKeyringForAccount.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:persistAllKeyrings`, this.persistAllKeyrings.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:prepareUserOperation`, this.prepareUserOperation.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:patchUserOperation`, this.patchUserOperation.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:signUserOperation`, this.signUserOperation.bind(this));\n    this.messagingSystem.registerActionHandler(`${name}:addNewAccount`, this.addNewAccount.bind(this));\n}, _KeyringController_getKeyringBuilderForType = function _KeyringController_getKeyringBuilderForType(type) {\n    return __classPrivateFieldGet(this, _KeyringController_keyringBuilders, \"f\").find((keyringBuilder) => keyringBuilder.type === type);\n}, _KeyringController_addQRKeyring = \n/**\n * Add qr hardware keyring.\n *\n * @returns The added keyring\n * @throws If a QRKeyring builder is not provided\n * when initializing the controller\n */\nasync function _KeyringController_addQRKeyring() {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    // QRKeyring is not yet compatible with Keyring type from @metamask/utils\n    return (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_newKeyring).call(this, KeyringTypes.qr));\n}, _KeyringController_subscribeToQRKeyringEvents = function _KeyringController_subscribeToQRKeyringEvents(qrKeyring) {\n    __classPrivateFieldSet(this, _KeyringController_qrKeyringStateListener, (state) => {\n        this.messagingSystem.publish(`${name}:qrKeyringStateChange`, state);\n    }, \"f\");\n    qrKeyring.getMemStore().subscribe(__classPrivateFieldGet(this, _KeyringController_qrKeyringStateListener, \"f\"));\n}, _KeyringController_unsubscribeFromQRKeyringsEvents = function _KeyringController_unsubscribeFromQRKeyringsEvents() {\n    const qrKeyrings = this.getKeyringsByType(KeyringTypes.qr);\n    qrKeyrings.forEach((qrKeyring) => {\n        if (__classPrivateFieldGet(this, _KeyringController_qrKeyringStateListener, \"f\")) {\n            qrKeyring.getMemStore().unsubscribe(__classPrivateFieldGet(this, _KeyringController_qrKeyringStateListener, \"f\"));\n        }\n    });\n}, _KeyringController_createNewVaultWithKeyring = \n/**\n * Create new vault with an initial keyring\n *\n * Destroys any old encrypted storage,\n * creates a new encrypted store with the given password,\n * creates a new wallet with 1 account.\n *\n * @fires KeyringController:unlock\n * @param password - The password to encrypt the vault with.\n * @param keyring - A object containing the params to instantiate a new keyring.\n * @param keyring.type - The keyring type.\n * @param keyring.opts - Optional parameters required to instantiate the keyring.\n * @returns A promise that resolves to the state.\n */\nasync function _KeyringController_createNewVaultWithKeyring(password, keyring) {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    if (typeof password !== 'string') {\n        throw new TypeError(constants_1.KeyringControllerError.WrongPasswordType);\n    }\n    this.update((state) => {\n        delete state.encryptionKey;\n        delete state.encryptionSalt;\n    });\n    __classPrivateFieldSet(this, _KeyringController_password, password, \"f\");\n    await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_clearKeyrings).call(this);\n    await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_createKeyringWithFirstAccount).call(this, keyring.type, keyring.opts);\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_setUnlocked).call(this);\n}, _KeyringController_getUpdatedKeyrings = \n/**\n * Get the updated array of each keyring's type and\n * accounts list.\n *\n * @returns A promise resolving to the updated keyrings array.\n */\nasync function _KeyringController_getUpdatedKeyrings() {\n    return Promise.all(__classPrivateFieldGet(this, _KeyringController_keyrings, \"f\").map(displayForKeyring));\n}, _KeyringController_getSerializedKeyrings = \n/**\n * Serialize the current array of keyring instances,\n * including unsupported keyrings by default.\n *\n * @param options - Method options.\n * @param options.includeUnsupported - Whether to include unsupported keyrings.\n * @returns The serialized keyrings.\n */\nasync function _KeyringController_getSerializedKeyrings({ includeUnsupported } = {\n    includeUnsupported: true,\n}) {\n    const serializedKeyrings = await Promise.all(__classPrivateFieldGet(this, _KeyringController_keyrings, \"f\").map(async (keyring) => {\n        const [type, data] = await Promise.all([\n            keyring.type,\n            keyring.serialize(),\n        ]);\n        return { type, data };\n    }));\n    if (includeUnsupported) {\n        serializedKeyrings.push(...__classPrivateFieldGet(this, _KeyringController_unsupportedKeyrings, \"f\"));\n    }\n    return serializedKeyrings;\n}, _KeyringController_restoreSerializedKeyrings = \n/**\n * Restore a serialized keyrings array.\n *\n * @param serializedKeyrings - The serialized keyrings array.\n */\nasync function _KeyringController_restoreSerializedKeyrings(serializedKeyrings) {\n    await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_clearKeyrings).call(this);\n    for (const serializedKeyring of serializedKeyrings) {\n        await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_restoreKeyring).call(this, serializedKeyring);\n    }\n}, _KeyringController_unlockKeyrings = \n/**\n * Unlock Keyrings, decrypting the vault and deserializing all\n * keyrings contained in it, using a password or an encryption key with salt.\n *\n * @param password - The keyring controller password.\n * @param encryptionKey - An exported key string to unlock keyrings with.\n * @param encryptionSalt - The salt used to encrypt the vault.\n * @returns A promise resolving to the deserialized keyrings array.\n */\nasync function _KeyringController_unlockKeyrings(password, encryptionKey, encryptionSalt) {\n    return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_withVaultLock).call(this, async ({ releaseLock }) => {\n        const encryptedVault = this.state.vault;\n        if (!encryptedVault) {\n            throw new Error(constants_1.KeyringControllerError.VaultError);\n        }\n        let vault;\n        const updatedState = {};\n        if (__classPrivateFieldGet(this, _KeyringController_cacheEncryptionKey, \"f\")) {\n            assertIsExportableKeyEncryptor(__classPrivateFieldGet(this, _KeyringController_encryptor, \"f\"));\n            if (password) {\n                const result = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").decryptWithDetail(password, encryptedVault);\n                vault = result.vault;\n                __classPrivateFieldSet(this, _KeyringController_password, password, \"f\");\n                updatedState.encryptionKey = result.exportedKeyString;\n                updatedState.encryptionSalt = result.salt;\n            }\n            else {\n                const parsedEncryptedVault = JSON.parse(encryptedVault);\n                if (encryptionSalt !== parsedEncryptedVault.salt) {\n                    throw new Error(constants_1.KeyringControllerError.ExpiredCredentials);\n                }\n                if (typeof encryptionKey !== 'string') {\n                    throw new TypeError(constants_1.KeyringControllerError.WrongPasswordType);\n                }\n                const key = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").importKey(encryptionKey);\n                vault = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").decryptWithKey(key, parsedEncryptedVault);\n                // This call is required on the first call because encryptionKey\n                // is not yet inside the memStore\n                updatedState.encryptionKey = encryptionKey;\n                // we can safely assume that encryptionSalt is defined here\n                // because we compare it with the salt from the vault\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                updatedState.encryptionSalt = encryptionSalt;\n            }\n        }\n        else {\n            if (typeof password !== 'string') {\n                throw new TypeError(constants_1.KeyringControllerError.WrongPasswordType);\n            }\n            vault = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").decrypt(password, encryptedVault);\n            __classPrivateFieldSet(this, _KeyringController_password, password, \"f\");\n        }\n        if (!isSerializedKeyringsArray(vault)) {\n            throw new Error(constants_1.KeyringControllerError.VaultDataError);\n        }\n        await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_restoreSerializedKeyrings).call(this, vault);\n        const updatedKeyrings = await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getUpdatedKeyrings).call(this);\n        this.update((state) => {\n            state.keyrings = updatedKeyrings;\n            if (updatedState.encryptionKey || updatedState.encryptionSalt) {\n                state.encryptionKey = updatedState.encryptionKey;\n                state.encryptionSalt = updatedState.encryptionSalt;\n            }\n        });\n        if (__classPrivateFieldGet(this, _KeyringController_password, \"f\") &&\n            (!__classPrivateFieldGet(this, _KeyringController_cacheEncryptionKey, \"f\") || !encryptionKey) &&\n            __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").isVaultUpdated &&\n            !__classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").isVaultUpdated(encryptedVault)) {\n            // The lock needs to be released before persisting the keyrings\n            // to avoid deadlock\n            releaseLock();\n            // Re-encrypt the vault with safer method if one is available\n            await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_updateVault).call(this);\n        }\n        return __classPrivateFieldGet(this, _KeyringController_keyrings, \"f\");\n    });\n}, _KeyringController_updateVault = function _KeyringController_updateVault() {\n    return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_withVaultLock).call(this, async () => {\n        const { encryptionKey, encryptionSalt } = this.state;\n        if (!__classPrivateFieldGet(this, _KeyringController_password, \"f\") && !encryptionKey) {\n            throw new Error(constants_1.KeyringControllerError.MissingCredentials);\n        }\n        const serializedKeyrings = await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getSerializedKeyrings).call(this);\n        if (!serializedKeyrings.some((keyring) => keyring.type === KeyringTypes.hd)) {\n            throw new Error(constants_1.KeyringControllerError.NoHdKeyring);\n        }\n        const updatedState = {};\n        if (__classPrivateFieldGet(this, _KeyringController_cacheEncryptionKey, \"f\")) {\n            assertIsExportableKeyEncryptor(__classPrivateFieldGet(this, _KeyringController_encryptor, \"f\"));\n            if (encryptionKey) {\n                const key = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").importKey(encryptionKey);\n                const vaultJSON = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").encryptWithKey(key, serializedKeyrings);\n                vaultJSON.salt = encryptionSalt;\n                updatedState.vault = JSON.stringify(vaultJSON);\n            }\n            else if (__classPrivateFieldGet(this, _KeyringController_password, \"f\")) {\n                const { vault: newVault, exportedKeyString } = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").encryptWithDetail(__classPrivateFieldGet(this, _KeyringController_password, \"f\"), serializedKeyrings);\n                updatedState.vault = newVault;\n                updatedState.encryptionKey = exportedKeyString;\n            }\n        }\n        else {\n            assertIsValidPassword(__classPrivateFieldGet(this, _KeyringController_password, \"f\"));\n            updatedState.vault = await __classPrivateFieldGet(this, _KeyringController_encryptor, \"f\").encrypt(__classPrivateFieldGet(this, _KeyringController_password, \"f\"), serializedKeyrings);\n        }\n        if (!updatedState.vault) {\n            throw new Error(constants_1.KeyringControllerError.MissingVaultData);\n        }\n        const updatedKeyrings = await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getUpdatedKeyrings).call(this);\n        this.update((state) => {\n            state.vault = updatedState.vault;\n            state.keyrings = updatedKeyrings;\n            if (updatedState.encryptionKey) {\n                state.encryptionKey = updatedState.encryptionKey;\n                state.encryptionSalt = JSON.parse(updatedState.vault).salt;\n            }\n        });\n        return true;\n    });\n}, _KeyringController_getAccountsFromKeyrings = \n/**\n * Retrieves all the accounts from keyrings instances\n * that are currently in memory.\n *\n * @returns A promise resolving to an array of accounts.\n */\nasync function _KeyringController_getAccountsFromKeyrings() {\n    const keyrings = __classPrivateFieldGet(this, _KeyringController_keyrings, \"f\");\n    const keyringArrays = await Promise.all(keyrings.map(async (keyring) => keyring.getAccounts()));\n    const addresses = keyringArrays.reduce((res, arr) => {\n        return res.concat(arr);\n    }, []);\n    // Cast to `string[]` here is safe here because `addresses` has no nullish\n    // values, and `normalize` returns `string` unless given a nullish value\n    return addresses.map(normalize);\n}, _KeyringController_createKeyringWithFirstAccount = \n/**\n * Create a new keyring, ensuring that the first account is\n * also created.\n *\n * @param type - Keyring type to instantiate.\n * @param opts - Optional parameters required to instantiate the keyring.\n * @returns A promise that resolves if the operation is successful.\n */\nasync function _KeyringController_createKeyringWithFirstAccount(type, opts) {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    const keyring = (await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_newKeyring).call(this, type, opts));\n    const [firstAccount] = await keyring.getAccounts();\n    if (!firstAccount) {\n        throw new Error(constants_1.KeyringControllerError.NoFirstAccount);\n    }\n}, _KeyringController_newKeyring = \n/**\n * Instantiate, initialize and return a new keyring of the given `type`,\n * using the given `opts`. The keyring is built using the keyring builder\n * registered for the given `type`.\n *\n *\n * @param type - The type of keyring to add.\n * @param data - The data to restore a previously serialized keyring.\n * @returns The new keyring.\n * @throws If the keyring includes duplicated accounts.\n */\nasync function _KeyringController_newKeyring(type, data) {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    const keyringBuilder = __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getKeyringBuilderForType).call(this, type);\n    if (!keyringBuilder) {\n        throw new Error(`${constants_1.KeyringControllerError.NoKeyringBuilder}. Keyring type: ${type}`);\n    }\n    const keyring = keyringBuilder();\n    // @ts-expect-error Enforce data type after updating clients\n    await keyring.deserialize(data);\n    if (keyring.init) {\n        await keyring.init();\n    }\n    if (type === KeyringTypes.hd && (!(0, utils_1.isObject)(data) || !data.mnemonic)) {\n        if (!keyring.generateRandomMnemonic) {\n            throw new Error(constants_1.KeyringControllerError.UnsupportedGenerateRandomMnemonic);\n        }\n        keyring.generateRandomMnemonic();\n        await keyring.addAccounts(1);\n    }\n    await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_checkForDuplicate).call(this, type, await keyring.getAccounts());\n    if (type === KeyringTypes.qr) {\n        // In case of a QR keyring type, we need to subscribe\n        // to its events after creating it\n        __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_subscribeToQRKeyringEvents).call(this, keyring);\n    }\n    __classPrivateFieldGet(this, _KeyringController_keyrings, \"f\").push(keyring);\n    return keyring;\n}, _KeyringController_clearKeyrings = \n/**\n * Remove all managed keyrings, destroying all their\n * instances in memory.\n */\nasync function _KeyringController_clearKeyrings() {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    for (const keyring of __classPrivateFieldGet(this, _KeyringController_keyrings, \"f\")) {\n        await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_destroyKeyring).call(this, keyring);\n    }\n    __classPrivateFieldSet(this, _KeyringController_keyrings, [], \"f\");\n}, _KeyringController_restoreKeyring = \n/**\n * Restore a Keyring from a provided serialized payload.\n * On success, returns the resulting keyring instance.\n *\n * @param serialized - The serialized keyring.\n * @returns The deserialized keyring or undefined if the keyring type is unsupported.\n */\nasync function _KeyringController_restoreKeyring(serialized) {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    try {\n        const { type, data } = serialized;\n        return await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_newKeyring).call(this, type, data);\n    }\n    catch (_) {\n        __classPrivateFieldGet(this, _KeyringController_unsupportedKeyrings, \"f\").push(serialized);\n        return undefined;\n    }\n}, _KeyringController_destroyKeyring = \n/**\n * Destroy Keyring\n *\n * Some keyrings support a method called `destroy`, that destroys the\n * keyring along with removing all its event listeners and, in some cases,\n * clears the keyring bridge iframe from the DOM.\n *\n * @param keyring - The keyring to destroy.\n */\nasync function _KeyringController_destroyKeyring(keyring) {\n    await keyring.destroy?.();\n}, _KeyringController_removeEmptyKeyrings = \n/**\n * Remove empty keyrings.\n *\n * Loops through the keyrings and removes the ones with empty accounts\n * (usually after removing the last / only account) from a keyring.\n */\nasync function _KeyringController_removeEmptyKeyrings() {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    const validKeyrings = [];\n    // Since getAccounts returns a Promise\n    // We need to wait to hear back form each keyring\n    // in order to decide which ones are now valid (accounts.length > 0)\n    await Promise.all(__classPrivateFieldGet(this, _KeyringController_keyrings, \"f\").map(async (keyring) => {\n        const accounts = await keyring.getAccounts();\n        if (accounts.length > 0) {\n            validKeyrings.push(keyring);\n        }\n        else {\n            await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_destroyKeyring).call(this, keyring);\n        }\n    }));\n    __classPrivateFieldSet(this, _KeyringController_keyrings, validKeyrings, \"f\");\n}, _KeyringController_checkForDuplicate = \n/**\n * Checks for duplicate keypairs, using the the first account in the given\n * array. Rejects if a duplicate is found.\n *\n * Only supports 'Simple Key Pair'.\n *\n * @param type - The key pair type to check for.\n * @param newAccountArray - Array of new accounts.\n * @returns The account, if no duplicate is found.\n */\nasync function _KeyringController_checkForDuplicate(type, newAccountArray) {\n    const accounts = await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getAccountsFromKeyrings).call(this);\n    switch (type) {\n        case KeyringTypes.simple: {\n            const isIncluded = Boolean(accounts.find((key) => newAccountArray[0] &&\n                (key === newAccountArray[0] ||\n                    key === (0, utils_1.remove0x)(newAccountArray[0]))));\n            if (isIncluded) {\n                throw new Error(constants_1.KeyringControllerError.DuplicatedAccount);\n            }\n            return newAccountArray;\n        }\n        default: {\n            return newAccountArray;\n        }\n    }\n}, _KeyringController_setUnlocked = function _KeyringController_setUnlocked() {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    this.update((state) => {\n        state.isUnlocked = true;\n    });\n    this.messagingSystem.publish(`${name}:unlock`);\n}, _KeyringController_persistOrRollback = \n/**\n * Execute the given function after acquiring the controller lock\n * and save the keyrings to state after it, or rollback to their\n * previous state in case of error.\n *\n * @param fn - The function to execute.\n * @returns The result of the function.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function _KeyringController_persistOrRollback(fn) {\n    return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_withRollback).call(this, async ({ releaseLock }) => {\n        const callbackResult = await fn({ releaseLock });\n        // State is committed only if the operation is successful\n        await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_updateVault).call(this);\n        return callbackResult;\n    });\n}, _KeyringController_withRollback = \n/**\n * Execute the given function after acquiring the controller lock\n * and rollback keyrings and password states in case of error.\n *\n * @param fn - The function to execute atomically.\n * @returns The result of the function.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function _KeyringController_withRollback(fn) {\n    return __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_withControllerLock).call(this, async ({ releaseLock }) => {\n        const currentSerializedKeyrings = await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_getSerializedKeyrings).call(this);\n        const currentPassword = __classPrivateFieldGet(this, _KeyringController_password, \"f\");\n        try {\n            return await fn({ releaseLock });\n        }\n        catch (e) {\n            // Keyrings and password are restored to their previous state\n            await __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_restoreSerializedKeyrings).call(this, currentSerializedKeyrings);\n            __classPrivateFieldSet(this, _KeyringController_password, currentPassword, \"f\");\n            throw e;\n        }\n    });\n}, _KeyringController_assertControllerMutexIsLocked = function _KeyringController_assertControllerMutexIsLocked() {\n    if (!__classPrivateFieldGet(this, _KeyringController_controllerOperationMutex, \"f\").isLocked()) {\n        throw new Error(constants_1.KeyringControllerError.ControllerLockRequired);\n    }\n}, _KeyringController_withControllerLock = \n/**\n * Lock the controller mutex before executing the given function,\n * and release it after the function is resolved or after an\n * error is thrown.\n *\n * This wrapper ensures that each mutable operation that interacts with the\n * controller and that changes its state is executed in a mutually exclusive way,\n * preventing unsafe concurrent access that could lead to unpredictable behavior.\n *\n * @param fn - The function to execute while the controller mutex is locked.\n * @returns The result of the function.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function _KeyringController_withControllerLock(fn) {\n    return withLock(__classPrivateFieldGet(this, _KeyringController_controllerOperationMutex, \"f\"), fn);\n}, _KeyringController_withVaultLock = \n/**\n * Lock the vault mutex before executing the given function,\n * and release it after the function is resolved or after an\n * error is thrown.\n *\n * This ensures that each operation that interacts with the vault\n * is executed in a mutually exclusive way.\n *\n * @param fn - The function to execute while the vault mutex is locked.\n * @returns The result of the function.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function _KeyringController_withVaultLock(fn) {\n    __classPrivateFieldGet(this, _KeyringController_instances, \"m\", _KeyringController_assertControllerMutexIsLocked).call(this);\n    return withLock(__classPrivateFieldGet(this, _KeyringController_vaultOperationMutex, \"f\"), fn);\n};\n/**\n * Lock the given mutex before executing the given function,\n * and release it after the function is resolved or after an\n * error is thrown.\n *\n * @param mutex - The mutex to lock.\n * @param fn - The function to execute while the mutex is locked.\n * @returns The result of the function.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function withLock(mutex, fn) {\n    const releaseLock = await mutex.acquire();\n    try {\n        return await fn({ releaseLock });\n    }\n    finally {\n        releaseLock();\n    }\n}\nexports.default = KeyringController;\n//# sourceMappingURL=KeyringController.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyringControllerError = void 0;\nvar KeyringControllerError;\n(function (KeyringControllerError) {\n    KeyringControllerError[\"NoKeyring\"] = \"KeyringController - No keyring found\";\n    KeyringControllerError[\"KeyringNotFound\"] = \"KeyringController - Keyring not found.\";\n    KeyringControllerError[\"UnsafeDirectKeyringAccess\"] = \"KeyringController - Returning keyring instances is unsafe\";\n    KeyringControllerError[\"WrongPasswordType\"] = \"KeyringController - Password must be of type string.\";\n    KeyringControllerError[\"InvalidEmptyPassword\"] = \"KeyringController - Password cannot be empty.\";\n    KeyringControllerError[\"NoFirstAccount\"] = \"KeyringController - First Account not found.\";\n    KeyringControllerError[\"DuplicatedAccount\"] = \"KeyringController - The account you are trying to import is a duplicate\";\n    KeyringControllerError[\"VaultError\"] = \"KeyringController - Cannot unlock without a previous vault.\";\n    KeyringControllerError[\"VaultDataError\"] = \"KeyringController - The decrypted vault has an unexpected shape.\";\n    KeyringControllerError[\"UnsupportedEncryptionKeyExport\"] = \"KeyringController - The encryptor does not support encryption key export.\";\n    KeyringControllerError[\"UnsupportedGenerateRandomMnemonic\"] = \"KeyringController - The current keyring does not support the method generateRandomMnemonic.\";\n    KeyringControllerError[\"UnsupportedExportAccount\"] = \"`KeyringController - The keyring for the current address does not support the method exportAccount\";\n    KeyringControllerError[\"UnsupportedRemoveAccount\"] = \"`KeyringController - The keyring for the current address does not support the method removeAccount\";\n    KeyringControllerError[\"UnsupportedSignTransaction\"] = \"KeyringController - The keyring for the current address does not support the method signTransaction.\";\n    KeyringControllerError[\"UnsupportedSignMessage\"] = \"KeyringController - The keyring for the current address does not support the method signMessage.\";\n    KeyringControllerError[\"UnsupportedSignPersonalMessage\"] = \"KeyringController - The keyring for the current address does not support the method signPersonalMessage.\";\n    KeyringControllerError[\"UnsupportedGetEncryptionPublicKey\"] = \"KeyringController - The keyring for the current address does not support the method getEncryptionPublicKey.\";\n    KeyringControllerError[\"UnsupportedDecryptMessage\"] = \"KeyringController - The keyring for the current address does not support the method decryptMessage.\";\n    KeyringControllerError[\"UnsupportedSignTypedMessage\"] = \"KeyringController - The keyring for the current address does not support the method signTypedMessage.\";\n    KeyringControllerError[\"UnsupportedGetAppKeyAddress\"] = \"KeyringController - The keyring for the current address does not support the method getAppKeyAddress.\";\n    KeyringControllerError[\"UnsupportedExportAppKeyForAddress\"] = \"KeyringController - The keyring for the current address does not support the method exportAppKeyForAddress.\";\n    KeyringControllerError[\"UnsupportedPrepareUserOperation\"] = \"KeyringController - The keyring for the current address does not support the method prepareUserOperation.\";\n    KeyringControllerError[\"UnsupportedPatchUserOperation\"] = \"KeyringController - The keyring for the current address does not support the method patchUserOperation.\";\n    KeyringControllerError[\"UnsupportedSignUserOperation\"] = \"KeyringController - The keyring for the current address does not support the method signUserOperation.\";\n    KeyringControllerError[\"NoAccountOnKeychain\"] = \"KeyringController - The keychain doesn't have accounts.\";\n    KeyringControllerError[\"MissingCredentials\"] = \"KeyringController - Cannot persist vault without password and encryption key\";\n    KeyringControllerError[\"MissingVaultData\"] = \"KeyringController - Cannot persist vault without vault information\";\n    KeyringControllerError[\"ExpiredCredentials\"] = \"KeyringController - Encryption key and salt provided are expired\";\n    KeyringControllerError[\"NoKeyringBuilder\"] = \"KeyringController - No keyringBuilder found for keyring\";\n    KeyringControllerError[\"DataType\"] = \"KeyringController - Incorrect data type provided\";\n    KeyringControllerError[\"NoHdKeyring\"] = \"KeyringController - No HD Keyring found\";\n    KeyringControllerError[\"ControllerLockRequired\"] = \"KeyringController - attempt to update vault during a non mutually exclusive operation\";\n})(KeyringControllerError || (exports.KeyringControllerError = KeyringControllerError = {}));\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./KeyringController.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abiERC1155 = void 0;\nexports.abiERC1155 = [\n    {\n        inputs: [\n            {\n                internalType: 'string',\n                name: 'uri_',\n                type: 'string',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'bool',\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        name: 'ApprovalForAll',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256[]',\n                name: 'values',\n                type: 'uint256[]',\n            },\n        ],\n        name: 'TransferBatch',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'TransferSingle',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'string',\n                name: 'value',\n                type: 'string',\n            },\n            {\n                indexed: true,\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n        ],\n        name: 'URI',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address[]',\n                name: 'accounts',\n                type: 'address[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n        ],\n        name: 'balanceOfBatch',\n        outputs: [\n            {\n                internalType: 'uint256[]',\n                name: '',\n                type: 'uint256[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'amounts',\n                type: 'uint256[]',\n            },\n            {\n                internalType: 'bytes',\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        name: 'safeBatchTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n            {\n                internalType: 'bytes',\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                internalType: 'bool',\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        name: 'setApprovalForAll',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes4',\n                name: 'interfaceId',\n                type: 'bytes4',\n            },\n        ],\n        name: 'supportsInterface',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        name: 'uri',\n        outputs: [\n            {\n                internalType: 'string',\n                name: '',\n                type: 'string',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\n//# sourceMappingURL=abiERC1155.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abiERC20 = void 0;\nexports.abiERC20 = [\n    {\n        constant: true,\n        inputs: [],\n        name: 'name',\n        outputs: [\n            {\n                name: '',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_spender',\n                type: 'address',\n            },\n            {\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'approve',\n        outputs: [\n            {\n                name: 'success',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_from',\n                type: 'address',\n            },\n            {\n                name: '_to',\n                type: 'address',\n            },\n            {\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'transferFrom',\n        outputs: [\n            {\n                name: 'success',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'decimals',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'version',\n        outputs: [\n            {\n                name: '',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_owner',\n                type: 'address',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                name: 'balance',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'symbol',\n        outputs: [\n            {\n                name: '',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_to',\n                type: 'address',\n            },\n            {\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'transfer',\n        outputs: [\n            {\n                name: 'success',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_spender',\n                type: 'address',\n            },\n            {\n                name: '_value',\n                type: 'uint256',\n            },\n            {\n                name: '_extraData',\n                type: 'bytes',\n            },\n        ],\n        name: 'approveAndCall',\n        outputs: [\n            {\n                name: 'success',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_owner',\n                type: 'address',\n            },\n            {\n                name: '_spender',\n                type: 'address',\n            },\n        ],\n        name: 'allowance',\n        outputs: [\n            {\n                name: 'remaining',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: '_initialAmount',\n                type: 'uint256',\n            },\n            {\n                name: '_tokenName',\n                type: 'string',\n            },\n            {\n                name: '_decimalUnits',\n                type: 'uint8',\n            },\n            {\n                name: '_tokenSymbol',\n                type: 'string',\n            },\n        ],\n        type: 'constructor',\n    },\n    {\n        payable: false,\n        type: 'fallback',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: '_from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: '_to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: '_owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: '_spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: '_value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n];\n//# sourceMappingURL=abiERC20.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abiERC721 = void 0;\nexports.abiERC721 = [\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'interfaceID',\n                type: 'bytes4',\n            },\n        ],\n        name: 'supportsInterface',\n        outputs: [\n            {\n                name: '',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'name',\n        outputs: [\n            {\n                name: '_name',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'getApproved',\n        outputs: [\n            {\n                name: '',\n                type: 'address',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_approved',\n                type: 'address',\n            },\n            {\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'approve',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_from',\n                type: 'address',\n            },\n            {\n                name: '_to',\n                type: 'address',\n            },\n            {\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'transferFrom',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_owner',\n                type: 'address',\n            },\n            {\n                name: '_index',\n                type: 'uint256',\n            },\n        ],\n        name: 'tokenOfOwnerByIndex',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_from',\n                type: 'address',\n            },\n            {\n                name: '_to',\n                type: 'address',\n            },\n            {\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_index',\n                type: 'uint256',\n            },\n        ],\n        name: 'tokenByIndex',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'ownerOf',\n        outputs: [\n            {\n                name: '',\n                type: 'address',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_owner',\n                type: 'address',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'symbol',\n        outputs: [\n            {\n                name: '_symbol',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_operator',\n                type: 'address',\n            },\n            {\n                name: '_approved',\n                type: 'bool',\n            },\n        ],\n        name: 'setApprovalForAll',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: '_from',\n                type: 'address',\n            },\n            {\n                name: '_to',\n                type: 'address',\n            },\n            {\n                name: '_tokenId',\n                type: 'uint256',\n            },\n            {\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'tokenURI',\n        outputs: [\n            {\n                name: '',\n                type: 'string',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: '_owner',\n                type: 'address',\n            },\n            {\n                name: '_operator',\n                type: 'address',\n            },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [\n            {\n                name: '',\n                type: 'bool',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: '_from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: '_to',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: '_owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: '_approved',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: '_tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: '_owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: '_operator',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: '_approved',\n                type: 'bool',\n            },\n        ],\n        name: 'ApprovalForAll',\n        type: 'event',\n    },\n];\n//# sourceMappingURL=abiERC721.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abiFiatTokenV2 = void 0;\nexports.abiFiatTokenV2 = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'authorizer',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'nonce',\n                type: 'bytes32',\n            },\n        ],\n        name: 'AuthorizationCanceled',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'authorizer',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'nonce',\n                type: 'bytes32',\n            },\n        ],\n        name: 'AuthorizationUsed',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: '_account',\n                type: 'address',\n            },\n        ],\n        name: 'Blacklisted',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'newBlacklister',\n                type: 'address',\n            },\n        ],\n        name: 'BlacklisterChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'burner',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Burn',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'newMasterMinter',\n                type: 'address',\n            },\n        ],\n        name: 'MasterMinterChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'minter',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Mint',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'minter',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'minterAllowedAmount',\n                type: 'uint256',\n            },\n        ],\n        name: 'MinterConfigured',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'oldMinter',\n                type: 'address',\n            },\n        ],\n        name: 'MinterRemoved',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'previousOwner',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'newOwner',\n                type: 'address',\n            },\n        ],\n        name: 'OwnershipTransferred',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'Pause', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'newAddress',\n                type: 'address',\n            },\n        ],\n        name: 'PauserChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'newRescuer',\n                type: 'address',\n            },\n        ],\n        name: 'RescuerChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: '_account',\n                type: 'address',\n            },\n        ],\n        name: 'UnBlacklisted',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'Unpause', type: 'event' },\n    {\n        inputs: [],\n        name: 'CANCEL_AUTHORIZATION_TYPEHASH',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'DOMAIN_SEPARATOR',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'PERMIT_TYPEHASH',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'RECEIVE_WITH_AUTHORIZATION_TYPEHASH',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'TRANSFER_WITH_AUTHORIZATION_TYPEHASH',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'owner', type: 'address' },\n            { internalType: 'address', name: 'spender', type: 'address' },\n        ],\n        name: 'allowance',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'spender', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n        ],\n        name: 'approve',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'authorizer', type: 'address' },\n            { internalType: 'bytes32', name: 'nonce', type: 'bytes32' },\n        ],\n        name: 'authorizationState',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: '_account', type: 'address' }],\n        name: 'blacklist',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'blacklister',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n        name: 'burn',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'authorizer', type: 'address' },\n            { internalType: 'bytes32', name: 'nonce', type: 'bytes32' },\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\n        ],\n        name: 'cancelAuthorization',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'authorizer', type: 'address' },\n            { internalType: 'bytes32', name: 'nonce', type: 'bytes32' },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'cancelAuthorization',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'minter', type: 'address' },\n            {\n                internalType: 'uint256',\n                name: 'minterAllowedAmount',\n                type: 'uint256',\n            },\n        ],\n        name: 'configureMinter',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'currency',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'decimals',\n        outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'spender', type: 'address' },\n            { internalType: 'uint256', name: 'decrement', type: 'uint256' },\n        ],\n        name: 'decreaseAllowance',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'spender', type: 'address' },\n            { internalType: 'uint256', name: 'increment', type: 'uint256' },\n        ],\n        name: 'increaseAllowance',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'string', name: 'tokenName', type: 'string' },\n            { internalType: 'string', name: 'tokenSymbol', type: 'string' },\n            { internalType: 'string', name: 'tokenCurrency', type: 'string' },\n            { internalType: 'uint8', name: 'tokenDecimals', type: 'uint8' },\n            { internalType: 'address', name: 'newMasterMinter', type: 'address' },\n            { internalType: 'address', name: 'newPauser', type: 'address' },\n            { internalType: 'address', name: 'newBlacklister', type: 'address' },\n            { internalType: 'address', name: 'newOwner', type: 'address' },\n        ],\n        name: 'initialize',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'string', name: 'newName', type: 'string' }],\n        name: 'initializeV2',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'lostAndFound', type: 'address' },\n        ],\n        name: 'initializeV2_1',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address[]',\n                name: 'accountsToBlacklist',\n                type: 'address[]',\n            },\n            { internalType: 'string', name: 'newSymbol', type: 'string' },\n        ],\n        name: 'initializeV2_2',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: '_account', type: 'address' }],\n        name: 'isBlacklisted',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'isMinter',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'masterMinter',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: '_to', type: 'address' },\n            { internalType: 'uint256', name: '_amount', type: 'uint256' },\n        ],\n        name: 'mint',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'minter', type: 'address' }],\n        name: 'minterAllowance',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'name',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\n        name: 'nonces',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'owner',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'pause',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'paused',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'pauser',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'owner', type: 'address' },\n            { internalType: 'address', name: 'spender', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n            { internalType: 'uint256', name: 'deadline', type: 'uint256' },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'permit',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'owner', type: 'address' },\n            { internalType: 'address', name: 'spender', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n            { internalType: 'uint256', name: 'deadline', type: 'uint256' },\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\n        ],\n        name: 'permit',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'from', type: 'address' },\n            { internalType: 'address', name: 'to', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n            { internalType: 'uint256', name: 'validAfter', type: 'uint256' },\n            { internalType: 'uint256', name: 'validBefore', type: 'uint256' },\n            { internalType: 'bytes32', name: 'nonce', type: 'bytes32' },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'receiveWithAuthorization',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'from', type: 'address' },\n            { internalType: 'address', name: 'to', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n            { internalType: 'uint256', name: 'validAfter', type: 'uint256' },\n            { internalType: 'uint256', name: 'validBefore', type: 'uint256' },\n            { internalType: 'bytes32', name: 'nonce', type: 'bytes32' },\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\n        ],\n        name: 'receiveWithAuthorization',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'minter', type: 'address' }],\n        name: 'removeMinter',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'contract IERC20',\n                name: 'tokenContract',\n                type: 'address',\n            },\n            { internalType: 'address', name: 'to', type: 'address' },\n            { internalType: 'uint256', name: 'amount', type: 'uint256' },\n        ],\n        name: 'rescueERC20',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'rescuer',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'symbol',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'to', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n        ],\n        name: 'transfer',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'from', type: 'address' },\n            { internalType: 'address', name: 'to', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n        ],\n        name: 'transferFrom',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n        name: 'transferOwnership',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'from', type: 'address' },\n            { internalType: 'address', name: 'to', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n            { internalType: 'uint256', name: 'validAfter', type: 'uint256' },\n            { internalType: 'uint256', name: 'validBefore', type: 'uint256' },\n            { internalType: 'bytes32', name: 'nonce', type: 'bytes32' },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'transferWithAuthorization',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'from', type: 'address' },\n            { internalType: 'address', name: 'to', type: 'address' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n            { internalType: 'uint256', name: 'validAfter', type: 'uint256' },\n            { internalType: 'uint256', name: 'validBefore', type: 'uint256' },\n            { internalType: 'bytes32', name: 'nonce', type: 'bytes32' },\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\n        ],\n        name: 'transferWithAuthorization',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: '_account', type: 'address' }],\n        name: 'unBlacklist',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'unpause',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: '_newBlacklister', type: 'address' },\n        ],\n        name: 'updateBlacklister',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: '_newMasterMinter',\n                type: 'address',\n            },\n        ],\n        name: 'updateMasterMinter',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: '_newPauser', type: 'address' }],\n        name: 'updatePauser',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'newRescuer', type: 'address' }],\n        name: 'updateRescuer',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'version',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'pure',\n        type: 'function',\n    },\n];\n//# sourceMappingURL=fiatTokenV2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abiFiatTokenV2 = exports.abiERC1155 = exports.abiERC721 = exports.abiERC20 = void 0;\nconst abiERC20_1 = require(\"./abis/abiERC20\");\nObject.defineProperty(exports, \"abiERC20\", { enumerable: true, get: function () { return abiERC20_1.abiERC20; } });\nconst abiERC721_1 = require(\"./abis/abiERC721\");\nObject.defineProperty(exports, \"abiERC721\", { enumerable: true, get: function () { return abiERC721_1.abiERC721; } });\nconst abiERC1155_1 = require(\"./abis/abiERC1155\");\nObject.defineProperty(exports, \"abiERC1155\", { enumerable: true, get: function () { return abiERC1155_1.abiERC1155; } });\nconst fiatTokenV2_1 = require(\"./abis/fiatTokenV2\");\nObject.defineProperty(exports, \"abiFiatTokenV2\", { enumerable: true, get: function () { return fiatTokenV2_1.abiFiatTokenV2; } });\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/util.ts\nasync function graphQL(url, query, variables) {\n  const body = JSON.stringify({\n    query,\n    variables\n  });\n  const response = await handleFetch(url, {\n    body,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response?.data;\n}\nasync function handleFetch(request, options) {\n  const response = await successfulFetch(request, options);\n  const object = await response.json();\n  return object;\n}\nasync function successfulFetch(request, options) {\n  const response = await fetch(request, options);\n  if (!response.ok) {\n    throw new Error(\n      `Fetch failed with status '${response.status}' for request '${request}'`\n    );\n  }\n  return response;\n}\nfunction assertIsError(error) {\n  if (error instanceof Error) {\n    return;\n  }\n  throw new Error(`Invalid error of type '${typeof error}'`);\n}\n\n\n\n\n\n\nexports.graphQL = graphQL; exports.handleFetch = handleFetch; exports.successfulFetch = successfulFetch; exports.assertIsError = assertIsError;\n//# sourceMappingURL=chunk-JHYBLEC5.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkPL7IXD33js = require('./chunk-PL7IXD33.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/NameController.ts\nvar _basecontroller = require('@metamask/base-controller');\nvar _controllerutils = require('@metamask/controller-utils');\nvar FALLBACK_VARIATION = \"*\";\nvar PROPOSED_NAME_EXPIRE_DURATION = 60 * 60 * 24;\nvar NameOrigin = /* @__PURE__ */ ((NameOrigin2) => {\n  NameOrigin2[\"ACCOUNT_IDENTITY\"] = \"account-identity\";\n  NameOrigin2[\"ADDRESS_BOOK\"] = \"address-book\";\n  NameOrigin2[\"API\"] = \"api\";\n  NameOrigin2[\"UI\"] = \"ui\";\n  return NameOrigin2;\n})(NameOrigin || {});\nvar DEFAULT_UPDATE_DELAY = 60 * 2;\nvar DEFAULT_VARIATION = \"\";\nvar controllerName = \"NameController\";\nvar stateMetadata = {\n  names: { persist: true, anonymous: false },\n  nameSources: { persist: true, anonymous: false }\n};\nvar getDefaultState = () => ({\n  names: {\n    [\"ethereumAddress\" /* ETHEREUM_ADDRESS */]: {}\n  },\n  nameSources: {}\n});\nvar _providers, _updateDelay, _updateProposedNameState, updateProposedNameState_fn, _updateSourceState, updateSourceState_fn, _getUpdateProposedNamesResult, getUpdateProposedNamesResult_fn, _getProviderResponse, getProviderResponse_fn, _normalizeProviderResult, normalizeProviderResult_fn, _normalizeProviderSourceResult, normalizeProviderSourceResult_fn, _normalizeValue, normalizeValue_fn, _normalizeVariation, normalizeVariation_fn, _updateEntry, updateEntry_fn, _getCurrentTimeSeconds, getCurrentTimeSeconds_fn, _validateSetNameRequest, validateSetNameRequest_fn, _validateUpdateProposedNamesRequest, validateUpdateProposedNamesRequest_fn, _validateValue, validateValue_fn, _validateType, validateType_fn, _validateName, validateName_fn, _validateSourceIds, validateSourceIds_fn, _validateSourceId, validateSourceId_fn, _validateDuplicateSourceIds, validateDuplicateSourceIds_fn, _validateVariation, validateVariation_fn, _validateOrigin, validateOrigin_fn, _getAllSourceIds, getAllSourceIds_fn, _getSourceIds, getSourceIds_fn, _removeDormantProposedNames, removeDormantProposedNames_fn, _removeExpiredEntries, removeExpiredEntries_fn, _getEntriesList, getEntriesList_fn;\nvar NameController = class extends _basecontroller.BaseController {\n  /**\n   * Construct a Name controller.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Restricted controller messenger for the name controller.\n   * @param options.providers - Array of name provider instances to propose names.\n   * @param options.state - Initial state to set on the controller.\n   * @param options.updateDelay - The delay in seconds before a new request to a source should be made.\n   */\n  constructor({\n    messenger,\n    providers,\n    state,\n    updateDelay\n  }) {\n    super({\n      name: controllerName,\n      metadata: stateMetadata,\n      messenger,\n      state: { ...getDefaultState(), ...state }\n    });\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateProposedNameState);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateSourceState);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getUpdateProposedNamesResult);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getProviderResponse);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _normalizeProviderResult);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _normalizeProviderSourceResult);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _normalizeValue);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _normalizeVariation);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateEntry);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getCurrentTimeSeconds);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateSetNameRequest);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateUpdateProposedNamesRequest);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateValue);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateType);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateName);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateSourceIds);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateSourceId);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateDuplicateSourceIds);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateVariation);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateOrigin);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getAllSourceIds);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getSourceIds);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _removeDormantProposedNames);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _removeExpiredEntries);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getEntriesList);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _providers, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateDelay, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _providers, providers);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _updateDelay, updateDelay ?? DEFAULT_UPDATE_DELAY);\n  }\n  /**\n   * Set the user specified name for a value.\n   *\n   * @param request - Request object.\n   * @param request.name - Name to set.\n   * @param request.sourceId - Optional ID of the source of the proposed name.\n   * @param request.type - Type of value to set the name for.\n   * @param request.value - Value to set the name for.\n   * @param request.variation - Variation of the raw value to set the name for. The chain ID if the type is Ethereum address.\n   */\n  setName(request) {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateSetNameRequest, validateSetNameRequest_fn).call(this, request);\n    const {\n      value,\n      type,\n      name,\n      sourceId: requestSourceId,\n      origin: requestOrigin,\n      variation\n    } = request;\n    const sourceId = requestSourceId ?? null;\n    const fallbackOrigin = name === null ? null : \"api\" /* API */;\n    const origin = requestOrigin ?? fallbackOrigin;\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateEntry, updateEntry_fn).call(this, value, type, variation, (entry) => {\n      entry.name = name;\n      entry.sourceId = sourceId;\n      entry.origin = origin;\n    });\n  }\n  /**\n   * Generate the proposed names for a value using the name providers and store them in the state.\n   *\n   * @param request - Request object.\n   * @param request.value - Value to update the proposed names for.\n   * @param request.type - Type of value to update the proposed names for.\n   * @param request.sourceIds - Optional array of source IDs to limit which sources are used by the providers. If not provided, all sources in all providers will be used.\n   * @param request.variation - Variation of the raw value to update proposed names for. The chain ID if the type is Ethereum address.\n   * @returns The updated proposed names for the value.\n   */\n  async updateProposedNames(request) {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateUpdateProposedNamesRequest, validateUpdateProposedNamesRequest_fn).call(this, request);\n    const providerResponses = (await Promise.all(\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providers).map(\n        (provider) => _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getProviderResponse, getProviderResponse_fn).call(this, request, provider)\n      )\n    )).filter((response) => Boolean(response));\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateProposedNameState, updateProposedNameState_fn).call(this, request, providerResponses);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateSourceState, updateSourceState_fn).call(this, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providers));\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _removeExpiredEntries, removeExpiredEntries_fn).call(this);\n    return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getUpdateProposedNamesResult, getUpdateProposedNamesResult_fn).call(this, providerResponses);\n  }\n};\n_providers = new WeakMap();\n_updateDelay = new WeakMap();\n_updateProposedNameState = new WeakSet();\nupdateProposedNameState_fn = function(request, providerResponses) {\n  const { value, type, variation } = request;\n  const currentTime = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCurrentTimeSeconds, getCurrentTimeSeconds_fn).call(this);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateEntry, updateEntry_fn).call(this, value, type, variation, (entry) => {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _removeDormantProposedNames, removeDormantProposedNames_fn).call(this, entry.proposedNames, type);\n    for (const providerResponse of providerResponses) {\n      const { results } = providerResponse;\n      for (const sourceId of Object.keys(providerResponse.results)) {\n        const result = results[sourceId];\n        const { proposedNames, updateDelay } = result;\n        const proposedNameEntry = entry.proposedNames[sourceId] ?? {\n          proposedNames: [],\n          lastRequestTime: null,\n          updateDelay: null\n        };\n        entry.proposedNames[sourceId] = proposedNameEntry;\n        if (proposedNames) {\n          proposedNameEntry.proposedNames = proposedNames;\n        }\n        proposedNameEntry.lastRequestTime = currentTime;\n        proposedNameEntry.updateDelay = updateDelay ?? null;\n      }\n    }\n  });\n};\n_updateSourceState = new WeakSet();\nupdateSourceState_fn = function(providers) {\n  const newNameSources = { ...this.state.nameSources };\n  for (const provider of providers) {\n    const { sourceLabels } = provider.getMetadata();\n    for (const sourceId of Object.keys(sourceLabels)) {\n      newNameSources[sourceId] = {\n        label: sourceLabels[sourceId]\n      };\n    }\n  }\n  this.update((state) => {\n    state.nameSources = newNameSources;\n  });\n};\n_getUpdateProposedNamesResult = new WeakSet();\ngetUpdateProposedNamesResult_fn = function(providerResponses) {\n  return providerResponses.reduce(\n    (acc, providerResponse) => {\n      const { results } = providerResponse;\n      for (const sourceId of Object.keys(results)) {\n        const { proposedNames, error } = results[sourceId];\n        acc.results[sourceId] = {\n          proposedNames,\n          error\n        };\n      }\n      return acc;\n    },\n    { results: {} }\n  );\n};\n_getProviderResponse = new WeakSet();\ngetProviderResponse_fn = async function(request, provider) {\n  const {\n    value,\n    type,\n    sourceIds: requestedSourceIds,\n    onlyUpdateAfterDelay,\n    variation\n  } = request;\n  const variationKey = variation ?? DEFAULT_VARIATION;\n  const supportedSourceIds = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSourceIds, getSourceIds_fn).call(this, provider, type);\n  const currentTime = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCurrentTimeSeconds, getCurrentTimeSeconds_fn).call(this);\n  const normalizedValue = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _normalizeValue, normalizeValue_fn).call(this, value, type);\n  const matchingSourceIds = supportedSourceIds.filter((sourceId) => {\n    if (requestedSourceIds && !requestedSourceIds.includes(sourceId)) {\n      return false;\n    }\n    if (onlyUpdateAfterDelay) {\n      const entry = this.state.names[type]?.[normalizedValue]?.[variationKey] ?? {};\n      const proposedNamesEntry = entry.proposedNames?.[sourceId] ?? {};\n      const lastRequestTime = proposedNamesEntry.lastRequestTime ?? 0;\n      const updateDelay = proposedNamesEntry.updateDelay ?? _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _updateDelay);\n      if (currentTime - lastRequestTime < updateDelay) {\n        return false;\n      }\n    }\n    return true;\n  });\n  if (!matchingSourceIds.length) {\n    return void 0;\n  }\n  const providerRequest = {\n    value: _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _normalizeValue, normalizeValue_fn).call(this, value, type),\n    type,\n    sourceIds: requestedSourceIds ? matchingSourceIds : void 0,\n    variation: _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _normalizeVariation, normalizeVariation_fn).call(this, variationKey, type)\n  };\n  let responseError;\n  let response;\n  try {\n    response = await provider.getProposedNames(providerRequest);\n    responseError = response.error;\n  } catch (error) {\n    responseError = error;\n  }\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _normalizeProviderResult, normalizeProviderResult_fn).call(this, response, responseError, matchingSourceIds);\n};\n_normalizeProviderResult = new WeakSet();\nnormalizeProviderResult_fn = function(result, responseError, matchingSourceIds) {\n  const error = responseError ?? void 0;\n  const results = matchingSourceIds.reduce((acc, sourceId) => {\n    const sourceResult = result?.results?.[sourceId];\n    const normalizedSourceResult = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _normalizeProviderSourceResult, normalizeProviderSourceResult_fn).call(this, sourceResult, responseError);\n    return {\n      ...acc,\n      [sourceId]: normalizedSourceResult\n    };\n  }, {});\n  return { results, error };\n};\n_normalizeProviderSourceResult = new WeakSet();\nnormalizeProviderSourceResult_fn = function(result, responseError) {\n  const error = result?.error ?? responseError ?? void 0;\n  const updateDelay = result?.updateDelay ?? void 0;\n  let proposedNames = error ? void 0 : result?.proposedNames ?? void 0;\n  if (proposedNames) {\n    proposedNames = proposedNames.filter(\n      (proposedName) => proposedName?.length\n    );\n  }\n  return {\n    proposedNames,\n    error,\n    updateDelay\n  };\n};\n_normalizeValue = new WeakSet();\nnormalizeValue_fn = function(value, type) {\n  switch (type) {\n    case \"ethereumAddress\" /* ETHEREUM_ADDRESS */:\n      return value.toLowerCase();\n    default:\n      return value;\n  }\n};\n_normalizeVariation = new WeakSet();\nnormalizeVariation_fn = function(variation, type) {\n  switch (type) {\n    case \"ethereumAddress\" /* ETHEREUM_ADDRESS */:\n      return variation.toLowerCase();\n    default:\n      return variation;\n  }\n};\n_updateEntry = new WeakSet();\nupdateEntry_fn = function(value, type, variation, callback) {\n  const variationKey = variation ?? DEFAULT_VARIATION;\n  const normalizedValue = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _normalizeValue, normalizeValue_fn).call(this, value, type);\n  const normalizedVariation = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _normalizeVariation, normalizeVariation_fn).call(this, variationKey, type);\n  if ([normalizedValue, normalizedVariation].some(\n    (key) => !_controllerutils.isSafeDynamicKey.call(void 0, key)\n  )) {\n    return;\n  }\n  this.update((state) => {\n    const typeEntries = state.names[type] || {};\n    state.names[type] = typeEntries;\n    const variationEntries = typeEntries[normalizedValue] || {};\n    typeEntries[normalizedValue] = variationEntries;\n    const entry = variationEntries[normalizedVariation] ?? {\n      proposedNames: {},\n      name: null,\n      sourceId: null,\n      origin: null\n    };\n    variationEntries[normalizedVariation] = entry;\n    callback(entry);\n  });\n};\n_getCurrentTimeSeconds = new WeakSet();\ngetCurrentTimeSeconds_fn = function() {\n  return Math.round(Date.now() / 1e3);\n};\n_validateSetNameRequest = new WeakSet();\nvalidateSetNameRequest_fn = function(request) {\n  const { name, value, type, sourceId, variation, origin } = request;\n  const errorMessages = [];\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateValue, validateValue_fn).call(this, value, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateType, validateType_fn).call(this, type, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateName, validateName_fn).call(this, name, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateSourceId, validateSourceId_fn).call(this, sourceId, type, name, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateVariation, validateVariation_fn).call(this, variation, type, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateOrigin, validateOrigin_fn).call(this, origin, name, errorMessages);\n  if (errorMessages.length) {\n    throw new Error(errorMessages.join(\" \"));\n  }\n};\n_validateUpdateProposedNamesRequest = new WeakSet();\nvalidateUpdateProposedNamesRequest_fn = function(request) {\n  const { value, type, sourceIds, variation } = request;\n  const errorMessages = [];\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateValue, validateValue_fn).call(this, value, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateType, validateType_fn).call(this, type, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateSourceIds, validateSourceIds_fn).call(this, sourceIds, type, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateDuplicateSourceIds, validateDuplicateSourceIds_fn).call(this, type, errorMessages);\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateVariation, validateVariation_fn).call(this, variation, type, errorMessages);\n  if (errorMessages.length) {\n    throw new Error(errorMessages.join(\" \"));\n  }\n};\n_validateValue = new WeakSet();\nvalidateValue_fn = function(value, errorMessages) {\n  if (!value?.length || typeof value !== \"string\") {\n    errorMessages.push(\"Must specify a non-empty string for value.\");\n  }\n};\n_validateType = new WeakSet();\nvalidateType_fn = function(type, errorMessages) {\n  if (!Object.values(_chunkPL7IXD33js.NameType).includes(type)) {\n    errorMessages.push(\n      `Must specify one of the following types: ${Object.values(\n        _chunkPL7IXD33js.NameType\n      ).join(\", \")}`\n    );\n  }\n};\n_validateName = new WeakSet();\nvalidateName_fn = function(name, errorMessages) {\n  if (name === null) {\n    return;\n  }\n  if (!name?.length || typeof name !== \"string\") {\n    errorMessages.push(\"Must specify a non-empty string or null for name.\");\n  }\n};\n_validateSourceIds = new WeakSet();\nvalidateSourceIds_fn = function(sourceIds, type, errorMessages) {\n  if (!sourceIds) {\n    return;\n  }\n  const allSourceIds = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAllSourceIds, getAllSourceIds_fn).call(this, type);\n  const missingSourceIds = [];\n  for (const sourceId of sourceIds) {\n    if (!allSourceIds.includes(sourceId)) {\n      missingSourceIds.push(sourceId);\n      continue;\n    }\n  }\n  if (missingSourceIds.length) {\n    errorMessages.push(\n      `Unknown source IDs for type '${type}': ${missingSourceIds.join(\", \")}`\n    );\n  }\n};\n_validateSourceId = new WeakSet();\nvalidateSourceId_fn = function(sourceId, type, name, errorMessages) {\n  if (sourceId === null || sourceId === void 0) {\n    return;\n  }\n  if (name === null) {\n    errorMessages.push(\n      `Cannot specify a source ID when clearing the saved name: ${sourceId}`\n    );\n    return;\n  }\n  const allSourceIds = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAllSourceIds, getAllSourceIds_fn).call(this, type);\n  if (!sourceId.length || typeof sourceId !== \"string\") {\n    errorMessages.push(\"Must specify a non-empty string for sourceId.\");\n    return;\n  }\n  if (!allSourceIds.includes(sourceId)) {\n    errorMessages.push(`Unknown source ID for type '${type}': ${sourceId}`);\n  }\n};\n_validateDuplicateSourceIds = new WeakSet();\nvalidateDuplicateSourceIds_fn = function(type, errorMessages) {\n  const allSourceIds = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAllSourceIds, getAllSourceIds_fn).call(this, type);\n  const duplicateSourceIds = allSourceIds.filter(\n    (sourceId, index) => allSourceIds.indexOf(sourceId) !== index\n  );\n  if (duplicateSourceIds.length) {\n    errorMessages.push(\n      `Duplicate source IDs found for type '${type}': ${duplicateSourceIds.join(\n        \", \"\n      )}`\n    );\n  }\n};\n_validateVariation = new WeakSet();\nvalidateVariation_fn = function(variation, type, errorMessages) {\n  if (type !== \"ethereumAddress\" /* ETHEREUM_ADDRESS */) {\n    return;\n  }\n  if (!variation?.length || typeof variation !== \"string\" || !variation.match(/^0x[0-9A-Fa-f]+$/u) && variation !== FALLBACK_VARIATION) {\n    errorMessages.push(\n      `Must specify a chain ID in hexidecimal format or the fallback, \"${FALLBACK_VARIATION}\", for variation when using '${type}' type.`\n    );\n  }\n};\n_validateOrigin = new WeakSet();\nvalidateOrigin_fn = function(origin, name, errorMessages) {\n  if (!origin) {\n    return;\n  }\n  if (name === null) {\n    errorMessages.push(\n      `Cannot specify an origin when clearing the saved name: ${origin}`\n    );\n    return;\n  }\n  if (!Object.values(NameOrigin).includes(origin)) {\n    errorMessages.push(\n      `Must specify one of the following origins: ${Object.values(\n        NameOrigin\n      ).join(\", \")}`\n    );\n  }\n};\n_getAllSourceIds = new WeakSet();\ngetAllSourceIds_fn = function(type) {\n  return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providers).map((provider) => _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSourceIds, getSourceIds_fn).call(this, provider, type)).flat();\n};\n_getSourceIds = new WeakSet();\ngetSourceIds_fn = function(provider, type) {\n  return provider.getMetadata().sourceIds[type];\n};\n_removeDormantProposedNames = new WeakSet();\nremoveDormantProposedNames_fn = function(proposedNames, type) {\n  if (Object.keys(proposedNames).length === 0) {\n    return;\n  }\n  const typeSourceIds = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAllSourceIds, getAllSourceIds_fn).call(this, type);\n  const dormantSourceIds = Object.keys(proposedNames).filter(\n    (sourceId) => !typeSourceIds.includes(sourceId)\n  );\n  for (const dormantSourceId of dormantSourceIds) {\n    delete proposedNames[dormantSourceId];\n  }\n};\n_removeExpiredEntries = new WeakSet();\nremoveExpiredEntries_fn = function() {\n  const currentTime = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCurrentTimeSeconds, getCurrentTimeSeconds_fn).call(this);\n  this.update((state) => {\n    const entries = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getEntriesList, getEntriesList_fn).call(this, state);\n    for (const { nameType, value, variation, entry } of entries) {\n      if (entry.name !== null) {\n        continue;\n      }\n      const proposedNames = Object.values(entry.proposedNames);\n      const allProposedNamesExpired = proposedNames.every(\n        (proposedName) => currentTime - (proposedName.lastRequestTime ?? 0) >= PROPOSED_NAME_EXPIRE_DURATION\n      );\n      if (allProposedNamesExpired) {\n        delete state.names[nameType][value][variation];\n      }\n    }\n  });\n};\n_getEntriesList = new WeakSet();\ngetEntriesList_fn = function(state) {\n  return Object.entries(state.names).flatMap(\n    ([type, typeEntries]) => Object.entries(typeEntries).flatMap(\n      ([value, variationEntries]) => Object.entries(variationEntries).map(([variation, entry]) => ({\n        entry,\n        nameType: type,\n        value,\n        variation\n      }))\n    )\n  );\n};\n\n\n\n\n\n\nexports.FALLBACK_VARIATION = FALLBACK_VARIATION; exports.PROPOSED_NAME_EXPIRE_DURATION = PROPOSED_NAME_EXPIRE_DURATION; exports.NameOrigin = NameOrigin; exports.NameController = NameController;\n//# sourceMappingURL=chunk-PL2KMW2Y.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/types.ts\nvar NameType = /* @__PURE__ */ ((NameType2) => {\n  NameType2[\"ETHEREUM_ADDRESS\"] = \"ethereumAddress\";\n  return NameType2;\n})(NameType || {});\n\n\n\nexports.NameType = NameType;\n//# sourceMappingURL=chunk-PL7IXD33.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/logger.ts\nvar _utils = require('@metamask/utils');\nvar projectLogger = _utils.createProjectLogger.call(void 0, \"name-controller\");\n\n\n\n\nexports.createModuleLogger = _utils.createModuleLogger; exports.projectLogger = projectLogger;\n//# sourceMappingURL=chunk-QBR7BSWB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkQBR7BSWBjs = require('./chunk-QBR7BSWB.js');\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/providers/ens.ts\nvar ID = \"ens\";\nvar LABEL = \"Ethereum Name Service (ENS)\";\nvar log = _chunkQBR7BSWBjs.createModuleLogger.call(void 0, _chunkQBR7BSWBjs.projectLogger, \"ens\");\nvar _isEnabled, _reverseLookup;\nvar ENSNameProvider = class {\n  constructor({\n    isEnabled,\n    reverseLookup\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isEnabled, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _reverseLookup, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isEnabled, isEnabled || (() => true));\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _reverseLookup, reverseLookup);\n  }\n  getMetadata() {\n    return {\n      sourceIds: { [\"ethereumAddress\" /* ETHEREUM_ADDRESS */]: [ID] },\n      sourceLabels: { [ID]: LABEL }\n    };\n  }\n  async getProposedNames(request) {\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isEnabled).call(this)) {\n      log(\"Skipping request as disabled\");\n      return {\n        results: {\n          [ID]: {\n            proposedNames: []\n          }\n        }\n      };\n    }\n    const { value, variation: chainId } = request;\n    log(\"Invoking callback\", { value, chainId });\n    try {\n      const proposedName = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _reverseLookup).call(this, value, chainId);\n      const proposedNames = proposedName ? [proposedName] : [];\n      log(\"New proposed names\", proposedNames);\n      return {\n        results: {\n          [ID]: { proposedNames }\n        }\n      };\n    } catch (error) {\n      log(\"Request failed\", error);\n      throw error;\n    }\n  }\n};\n_isEnabled = new WeakMap();\n_reverseLookup = new WeakMap();\n\n\n\nexports.ENSNameProvider = ENSNameProvider;\n//# sourceMappingURL=chunk-RYIUDJOI.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkJHYBLEC5js = require('./chunk-JHYBLEC5.js');\n\n\n\nvar _chunkQBR7BSWBjs = require('./chunk-QBR7BSWB.js');\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/providers/token.ts\nvar ID = \"token\";\nvar LABEL = \"Blockchain (Token Name)\";\nvar log = _chunkQBR7BSWBjs.createModuleLogger.call(void 0, _chunkQBR7BSWBjs.projectLogger, \"token\");\nvar _isEnabled;\nvar TokenNameProvider = class {\n  constructor({ isEnabled } = {}) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isEnabled, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isEnabled, isEnabled || (() => true));\n  }\n  getMetadata() {\n    return {\n      sourceIds: { [\"ethereumAddress\" /* ETHEREUM_ADDRESS */]: [ID] },\n      sourceLabels: { [ID]: LABEL }\n    };\n  }\n  async getProposedNames(request) {\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isEnabled).call(this)) {\n      log(\"Skipping request as disabled\");\n      return {\n        results: {\n          [ID]: {\n            proposedNames: []\n          }\n        }\n      };\n    }\n    const { value, variation: chainId } = request;\n    const url = `https://token.api.cx.metamask.io/token/${chainId}?address=${value}`;\n    log(\"Sending request\", url);\n    try {\n      const responseData = await _chunkJHYBLEC5js.handleFetch.call(void 0, url);\n      const proposedName = responseData.name;\n      const proposedNames = proposedName ? [proposedName] : [];\n      log(\"New proposed names\", proposedNames);\n      return {\n        results: {\n          [ID]: {\n            proposedNames\n          }\n        }\n      };\n    } catch (error) {\n      log(\"Request failed\", error);\n      throw error;\n    }\n  }\n};\n_isEnabled = new WeakMap();\n\n\n\nexports.TokenNameProvider = TokenNameProvider;\n//# sourceMappingURL=chunk-ST2ADXPO.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkJHYBLEC5js = require('./chunk-JHYBLEC5.js');\n\n\n\nvar _chunkQBR7BSWBjs = require('./chunk-QBR7BSWB.js');\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/providers/lens.ts\nvar ID = \"lens\";\nvar LABEL = \"Lens Protocol\";\nvar LENS_URL = `https://api.lens.dev`;\nvar QUERY = `\nquery HandlesForAddress($address: EthereumAddress!) {\n  profiles(request: { ownedBy: [$address] }) {\n    items {\n      handle\n    }\n  }\n}`;\nvar log = _chunkQBR7BSWBjs.createModuleLogger.call(void 0, _chunkQBR7BSWBjs.projectLogger, \"lens\");\nvar _isEnabled;\nvar LensNameProvider = class {\n  constructor({ isEnabled } = {}) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isEnabled, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isEnabled, isEnabled || (() => true));\n  }\n  getMetadata() {\n    return {\n      sourceIds: { [\"ethereumAddress\" /* ETHEREUM_ADDRESS */]: [ID] },\n      sourceLabels: { [ID]: LABEL }\n    };\n  }\n  async getProposedNames(request) {\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isEnabled).call(this)) {\n      log(\"Skipping request as disabled\");\n      return {\n        results: {\n          [ID]: {\n            proposedNames: []\n          }\n        }\n      };\n    }\n    const { value } = request;\n    const variables = { address: value };\n    log(\"Sending request\", { variables });\n    try {\n      const responseData = await _chunkJHYBLEC5js.graphQL.call(void 0, \n        LENS_URL,\n        QUERY,\n        variables\n      );\n      const profiles = responseData?.profiles?.items ?? [];\n      const proposedNames = profiles.map((profile) => profile.handle);\n      log(\"New proposed names\", proposedNames);\n      return {\n        results: {\n          [ID]: {\n            proposedNames\n          }\n        }\n      };\n    } catch (error) {\n      log(\"Request failed\", error);\n      throw error;\n    }\n  }\n};\n_isEnabled = new WeakMap();\n\n\n\nexports.LensNameProvider = LensNameProvider;\n//# sourceMappingURL=chunk-W64QIPGB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkXQXO5QPMjs = require('./chunk-XQXO5QPM.js');\n\n\n\nvar _chunkJHYBLEC5js = require('./chunk-JHYBLEC5.js');\n\n\n\nvar _chunkQBR7BSWBjs = require('./chunk-QBR7BSWB.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/providers/etherscan.ts\nvar _asyncmutex = require('async-mutex');\nvar ID = \"etherscan\";\nvar LABEL = \"Etherscan (Verified Contract Name)\";\nvar RATE_LIMIT_UPDATE_DELAY = 5;\nvar RATE_LIMIT_INTERVAL = RATE_LIMIT_UPDATE_DELAY * 1e3;\nvar log = _chunkQBR7BSWBjs.createModuleLogger.call(void 0, _chunkQBR7BSWBjs.projectLogger, \"etherscan\");\nvar _isEnabled, _lastRequestTime, _mutex, _sendRequest, sendRequest_fn, _getUrl, getUrl_fn;\nvar EtherscanNameProvider = class {\n  constructor({ isEnabled } = {}) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _sendRequest);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getUrl);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isEnabled, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _lastRequestTime, 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _mutex, new (0, _asyncmutex.Mutex)());\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isEnabled, isEnabled || (() => true));\n  }\n  getMetadata() {\n    return {\n      sourceIds: { [\"ethereumAddress\" /* ETHEREUM_ADDRESS */]: [ID] },\n      sourceLabels: { [ID]: LABEL }\n    };\n  }\n  async getProposedNames(request) {\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isEnabled).call(this)) {\n      log(\"Skipping request as disabled\");\n      return {\n        results: {\n          [ID]: {\n            proposedNames: []\n          }\n        }\n      };\n    }\n    const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n    try {\n      const { value, variation: chainId } = request;\n      const time = Date.now();\n      const timeSinceLastRequest = time - _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _lastRequestTime);\n      if (timeSinceLastRequest < RATE_LIMIT_INTERVAL) {\n        log(\"Skipping request to avoid rate limit\");\n        return {\n          results: {\n            [ID]: {\n              updateDelay: RATE_LIMIT_UPDATE_DELAY\n            }\n          }\n        };\n      }\n      const url = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getUrl, getUrl_fn).call(this, chainId, {\n        module: \"contract\",\n        action: \"getsourcecode\",\n        address: value\n      });\n      const { responseData, error } = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _sendRequest, sendRequest_fn).call(this, url);\n      if (error) {\n        log(\"Request failed\", error);\n        throw error;\n      }\n      if (responseData?.message === \"NOTOK\") {\n        log(\"Request warning\", responseData.result);\n        return {\n          results: {\n            [ID]: {\n              updateDelay: RATE_LIMIT_UPDATE_DELAY\n            }\n          }\n        };\n      }\n      const results = responseData?.result ?? [];\n      const proposedNames = results.map((result) => result.ContractName);\n      log(\"New proposed names\", proposedNames);\n      return {\n        results: {\n          [ID]: {\n            proposedNames\n          }\n        }\n      };\n    } finally {\n      releaseLock();\n    }\n  }\n};\n_isEnabled = new WeakMap();\n_lastRequestTime = new WeakMap();\n_mutex = new WeakMap();\n_sendRequest = new WeakSet();\nsendRequest_fn = async function(url) {\n  try {\n    log(\"Sending request\", url);\n    const responseData = await _chunkJHYBLEC5js.handleFetch.call(void 0, \n      url\n    );\n    return { responseData };\n  } catch (error) {\n    _chunkJHYBLEC5js.assertIsError.call(void 0, error);\n    return { error };\n  } finally {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _lastRequestTime, Date.now());\n  }\n};\n_getUrl = new WeakSet();\ngetUrl_fn = function(chainId, params) {\n  const networkInfo = _chunkXQXO5QPMjs.ETHERSCAN_SUPPORTED_NETWORKS[chainId];\n  if (!networkInfo) {\n    throw new Error(`Etherscan does not support chain with ID: ${chainId}`);\n  }\n  let url = `https://${networkInfo.subdomain}.${networkInfo.domain}/api`;\n  Object.keys(params).forEach((key, index) => {\n    const value = params[key];\n    url += `${index === 0 ? \"?\" : \"&\"}${key}=${value}`;\n  });\n  return url;\n};\n\n\n\nexports.EtherscanNameProvider = EtherscanNameProvider;\n//# sourceMappingURL=chunk-X55IV67M.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/constants.ts\nvar CHAIN_IDS = {\n  MAINNET: \"0x1\",\n  GOERLI: \"0x5\",\n  BSC: \"0x38\",\n  BSC_TESTNET: \"0x61\",\n  OPTIMISM: \"0xa\",\n  OPTIMISM_SEPOLIA: \"0xaa37dc\",\n  POLYGON: \"0x89\",\n  POLYGON_TESTNET: \"0x13881\",\n  AVALANCHE: \"0xa86a\",\n  AVALANCHE_TESTNET: \"0xa869\",\n  FANTOM: \"0xfa\",\n  FANTOM_TESTNET: \"0xfa2\",\n  SEPOLIA: \"0xaa36a7\",\n  LINEA_GOERLI: \"0xe704\",\n  LINEA_SEPOLIA: \"0xe705\",\n  LINEA_MAINNET: \"0xe708\",\n  MOONBEAM: \"0x504\",\n  MOONBEAM_TESTNET: \"0x507\",\n  MOONRIVER: \"0x505\",\n  GNOSIS: \"0x64\"\n};\nvar DEFAULT_ETHERSCAN_DOMAIN = \"etherscan.io\";\nvar DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX = \"api\";\nvar ETHERSCAN_SUPPORTED_NETWORKS = {\n  [CHAIN_IDS.GOERLI]: {\n    domain: DEFAULT_ETHERSCAN_DOMAIN,\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-goerli`\n  },\n  [CHAIN_IDS.MAINNET]: {\n    domain: DEFAULT_ETHERSCAN_DOMAIN,\n    subdomain: DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX\n  },\n  [CHAIN_IDS.SEPOLIA]: {\n    domain: DEFAULT_ETHERSCAN_DOMAIN,\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-sepolia`\n  },\n  [CHAIN_IDS.LINEA_GOERLI]: {\n    domain: \"lineascan.build\",\n    subdomain: \"goerli\"\n  },\n  [CHAIN_IDS.LINEA_SEPOLIA]: {\n    domain: \"lineascan.build\",\n    subdomain: \"sepolia\"\n  },\n  [CHAIN_IDS.LINEA_MAINNET]: {\n    domain: \"lineascan.build\",\n    subdomain: DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX\n  },\n  [CHAIN_IDS.BSC]: {\n    domain: \"bscscan.com\",\n    subdomain: DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX\n  },\n  [CHAIN_IDS.BSC_TESTNET]: {\n    domain: \"bscscan.com\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-testnet`\n  },\n  [CHAIN_IDS.OPTIMISM]: {\n    domain: DEFAULT_ETHERSCAN_DOMAIN,\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-optimistic`\n  },\n  [CHAIN_IDS.OPTIMISM_SEPOLIA]: {\n    domain: DEFAULT_ETHERSCAN_DOMAIN,\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-sepolia-optimistic`\n  },\n  [CHAIN_IDS.POLYGON]: {\n    domain: \"polygonscan.com\",\n    subdomain: DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX\n  },\n  [CHAIN_IDS.POLYGON_TESTNET]: {\n    domain: \"polygonscan.com\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-mumbai`\n  },\n  [CHAIN_IDS.AVALANCHE]: {\n    domain: \"snowtrace.io\",\n    subdomain: DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX\n  },\n  [CHAIN_IDS.AVALANCHE_TESTNET]: {\n    domain: \"snowtrace.io\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-testnet`\n  },\n  [CHAIN_IDS.FANTOM]: {\n    domain: \"ftmscan.com\",\n    subdomain: DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX\n  },\n  [CHAIN_IDS.FANTOM_TESTNET]: {\n    domain: \"ftmscan.com\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-testnet`\n  },\n  [CHAIN_IDS.MOONBEAM]: {\n    domain: \"moonscan.io\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-moonbeam`\n  },\n  [CHAIN_IDS.MOONBEAM_TESTNET]: {\n    domain: \"moonscan.io\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-moonbase`\n  },\n  [CHAIN_IDS.MOONRIVER]: {\n    domain: \"moonscan.io\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-moonriver`\n  },\n  [CHAIN_IDS.GNOSIS]: {\n    domain: \"gnosisscan.io\",\n    subdomain: `${DEFAULT_ETHERSCAN_SUBDOMAIN_PREFIX}-gnosis`\n  }\n};\n\n\n\n\nexports.CHAIN_IDS = CHAIN_IDS; exports.ETHERSCAN_SUPPORTED_NETWORKS = ETHERSCAN_SUPPORTED_NETWORKS;\n//# sourceMappingURL=chunk-XQXO5QPM.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkW64QIPGBjs = require('./chunk-W64QIPGB.js');\n\n\nvar _chunkST2ADXPOjs = require('./chunk-ST2ADXPO.js');\n\n\n\n\n\nvar _chunkPL2KMW2Yjs = require('./chunk-PL2KMW2Y.js');\n\n\nvar _chunkRYIUDJOIjs = require('./chunk-RYIUDJOI.js');\n\n\nvar _chunkX55IV67Mjs = require('./chunk-X55IV67M.js');\nrequire('./chunk-XQXO5QPM.js');\nrequire('./chunk-JHYBLEC5.js');\nrequire('./chunk-QBR7BSWB.js');\n\n\nvar _chunkPL7IXD33js = require('./chunk-PL7IXD33.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\n\n\n\nexports.ENSNameProvider = _chunkRYIUDJOIjs.ENSNameProvider; exports.EtherscanNameProvider = _chunkX55IV67Mjs.EtherscanNameProvider; exports.FALLBACK_VARIATION = _chunkPL2KMW2Yjs.FALLBACK_VARIATION; exports.LensNameProvider = _chunkW64QIPGBjs.LensNameProvider; exports.NameController = _chunkPL2KMW2Yjs.NameController; exports.NameOrigin = _chunkPL2KMW2Yjs.NameOrigin; exports.NameType = _chunkPL7IXD33js.NameType; exports.PROPOSED_NAME_EXPIRE_DURATION = _chunkPL2KMW2Yjs.PROPOSED_NAME_EXPIRE_DURATION; exports.TokenNameProvider = _chunkST2ADXPOjs.TokenNameProvider;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/BaseControllerV1.ts\nvar BaseControllerV1 = class {\n  /**\n   * Creates a BaseControllerV1 instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config = {}, state = {}) {\n    /**\n     * Default options used to configure this controller\n     */\n    this.defaultConfig = {};\n    /**\n     * Default state set on this controller\n     */\n    this.defaultState = {};\n    /**\n     * Determines if listeners are notified of state changes\n     */\n    this.disabled = false;\n    /**\n     * Name of this controller used during composition\n     */\n    this.name = \"BaseController\";\n    this.internalConfig = this.defaultConfig;\n    this.internalState = this.defaultState;\n    this.internalListeners = [];\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns This controller instance.\n   */\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n  /**\n   * Retrieves current controller configuration options.\n   *\n   * @returns The current configuration.\n   */\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration.\n   *\n   * @param config - New configuration options.\n   * @param overwrite - Overwrite config instead of merging.\n   * @param fullUpdate - Boolean that defines if the update is partial or not.\n   */\n  configure(config, overwrite = false, fullUpdate = true) {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n      for (const key of Object.keys(this.internalConfig)) {\n        const value = this.internalConfig[key];\n        if (value !== void 0) {\n          this[key] = value;\n        }\n      }\n    } else {\n      for (const key of Object.keys(config)) {\n        if (this.internalConfig[key] !== void 0) {\n          const value = config[key];\n          this.internalConfig[key] = value;\n          this[key] = value;\n        }\n      }\n    }\n  }\n  /**\n   * Notifies all subscribed listeners of current state.\n   */\n  notify() {\n    if (this.disabled) {\n      return;\n    }\n    this.internalListeners.forEach((listener) => {\n      listener(this.internalState);\n    });\n  }\n  /**\n   * Adds new listener to be notified of state changes.\n   *\n   * @param listener - The callback triggered when state changes.\n   */\n  subscribe(listener) {\n    this.internalListeners.push(listener);\n  }\n  /**\n   * Removes existing listener from receiving state changes.\n   *\n   * @param listener - The callback to remove.\n   * @returns `true` if a listener is found and unsubscribed.\n   */\n  unsubscribe(listener) {\n    const index = this.internalListeners.findIndex((cb) => listener === cb);\n    index > -1 && this.internalListeners.splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Updates controller state.\n   *\n   * @param state - The new state.\n   * @param overwrite - Overwrite state instead of merging.\n   */\n  update(state, overwrite = false) {\n    this.internalState = overwrite ? Object.assign({}, state) : Object.assign({}, this.internalState, state);\n    this.notify();\n  }\n};\nvar BaseControllerV1_default = BaseControllerV1;\n\n\n\n\nexports.BaseControllerV1 = BaseControllerV1; exports.BaseControllerV1_default = BaseControllerV1_default;\n//# sourceMappingURL=chunk-FTHCJ6HY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/ControllerMessenger.ts\nvar _actions, _events, _initialEventPayloadGetters, _eventPayloadCache;\nvar ControllerMessenger = class {\n  constructor() {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _actions, /* @__PURE__ */ new Map());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _events, /* @__PURE__ */ new Map());\n    /**\n     * A map of functions for getting the initial event payload.\n     *\n     * Used only for events that represent state changes.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _initialEventPayloadGetters, /* @__PURE__ */ new Map());\n    /**\n     * A cache of selector return values for their respective handlers.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _eventPayloadCache, /* @__PURE__ */ new Map());\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw when a handler has been registered for this action type already.\n   * @template ActionType - A type union of Action type strings.\n   */\n  registerActionHandler(actionType, handler) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).has(actionType)) {\n      throw new Error(\n        `A handler for ${actionType} has already been registered`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).set(actionType, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @template ActionType - A type union of Action type strings.\n   */\n  unregisterActionHandler(actionType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).delete(actionType);\n  }\n  /**\n   * Unregister all action handlers.\n   *\n   * This prevents all actions from being called.\n   */\n  clearActions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).clear();\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    const handler = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).get(actionType);\n    if (!handler) {\n      throw new Error(`A handler for ${actionType} has not been registered`);\n    }\n    return handler(...params);\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).set(eventType, getPayload);\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * Note that this method should never throw directly. Any errors from\n   * subscribers are captured and re-thrown in a timeout handler.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @template EventType - A type union of Event type strings.\n   */\n  publish(eventType, ...payload) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (subscribers) {\n      for (const [handler, selector] of subscribers.entries()) {\n        try {\n          if (selector) {\n            const previousValue = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).get(handler);\n            const newValue = selector(...payload);\n            if (newValue !== previousValue) {\n              _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, newValue);\n              handler(newValue, previousValue);\n            }\n          } else {\n            handler(...payload);\n          }\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n      }\n    }\n  }\n  subscribe(eventType, handler, selector) {\n    let subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Map();\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).set(eventType, subscribers);\n    }\n    subscribers.set(handler, selector);\n    if (selector) {\n      const getPayload = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).get(eventType);\n      if (getPayload) {\n        const initialValue = selector(...getPayload());\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, initialValue);\n      }\n    }\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw when the given event handler is not registered for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  unsubscribe(eventType, handler) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers || !subscribers.has(handler)) {\n      throw new Error(`Subscription not found for event: ${eventType}`);\n    }\n    const selector = subscribers.get(handler);\n    if (selector) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).delete(handler);\n    }\n    subscribers.delete(handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  clearEventSubscriptions(eventType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).delete(eventType);\n  }\n  /**\n   * Clear all subscriptions.\n   *\n   * This will remove all subscribed handlers for all events.\n   */\n  clearSubscriptions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).clear();\n  }\n  /**\n   * Get a restricted controller messenger\n   *\n   * Returns a wrapper around the controller messenger instance that restricts access to actions\n   * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n   * to the listed events. The \"name\" provided grants ownership of any actions and events under\n   * that namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - Controller messenger options.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n   * module that this messenger has been created for. The authority to publish events and register\n   * actions under this namespace is granted to this restricted messenger instance.\n   * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n   * This must not include internal actions that are in the messenger's namespace.\n   * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n   * This must not include internal events that are in the messenger's namespace.\n   * @returns The restricted controller messenger.\n   */\n  getRestricted({\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    return new (0, _chunkUJFCPTF3js.RestrictedControllerMessenger)({\n      controllerMessenger: this,\n      name,\n      allowedActions,\n      allowedEvents\n    });\n  }\n};\n_actions = new WeakMap();\n_events = new WeakMap();\n_initialEventPayloadGetters = new WeakMap();\n_eventPayloadCache = new WeakMap();\n\n\n\nexports.ControllerMessenger = ControllerMessenger;\n//# sourceMappingURL=chunk-G42723LG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/BaseControllerV2.ts\nvar _immer = require('immer');\n_immer.enablePatches.call(void 0, );\nvar _internalState;\nvar BaseController = class {\n  /**\n   * Creates a BaseController instance.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Controller messaging system.\n   * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n   * parts should be persisted.\n   * @param options.name - The name of the controller, used as a namespace for events and actions.\n   * @param options.state - Initial controller state.\n   */\n  constructor({\n    messenger,\n    metadata,\n    name,\n    state\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _internalState, void 0);\n    this.messagingSystem = messenger;\n    this.name = name;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, _immer.freeze.call(void 0, state, true));\n    this.metadata = metadata;\n    this.messagingSystem.registerActionHandler(\n      `${name}:getState`,\n      () => this.state\n    );\n    this.messagingSystem.registerInitialEventPayload({\n      eventType: `${name}:stateChange`,\n      getPayload: () => [this.state, []]\n    });\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState);\n  }\n  set state(_) {\n    throw new Error(\n      `Controller state cannot be directly mutated; use 'update' method instead.`\n    );\n  }\n  /**\n   * Updates controller state. Accepts a callback that is passed a draft copy\n   * of the controller state. If a value is returned, it is set as the new\n   * state. Otherwise, any changes made within that callback to the draft are\n   * applied to the controller state.\n   *\n   * @param callback - Callback for updating state, passed a draft state\n   * object. Return a new state object or mutate the draft to update state.\n   * @returns An object that has the next state, patches applied in the update and inverse patches to\n   * rollback the update.\n   */\n  update(callback) {\n    const [nextState, patches, inversePatches] = _immer.produceWithPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), callback);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n    return { nextState, patches, inversePatches };\n  }\n  /**\n   * Applies immer patches to the current state. The patches come from the\n   * update function itself and can either be normal or inverse patches.\n   *\n   * @param patches - An array of immer patches that are to be applied to make\n   * or undo changes.\n   */\n  applyPatches(patches) {\n    const nextState = _immer.applyPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), patches);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n  }\n  /**\n   * Prepares the controller for garbage collection. This should be extended\n   * by any subclasses to clean up any additional connections or events.\n   *\n   * The only cleanup performed here is to remove listeners. While technically\n   * this is not required to ensure this instance is garbage collected, it at\n   * least ensures this instance won't be responsible for preventing the\n   * listeners from being garbage collected.\n   */\n  destroy() {\n    this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n  }\n};\n_internalState = new WeakMap();\nfunction getAnonymizedState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"anonymous\");\n}\nfunction getPersistentState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"persist\");\n}\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n  return Object.keys(state).reduce((derivedState, key) => {\n    try {\n      const stateMetadata = metadata[key];\n      if (!stateMetadata) {\n        throw new Error(`No metadata found for '${String(key)}'`);\n      }\n      const propertyMetadata = stateMetadata[metadataProperty];\n      const stateProperty = state[key];\n      if (typeof propertyMetadata === \"function\") {\n        derivedState[key] = propertyMetadata(stateProperty);\n      } else if (propertyMetadata) {\n        derivedState[key] = stateProperty;\n      }\n      return derivedState;\n    } catch (error) {\n      setTimeout(() => {\n        throw error;\n      });\n      return derivedState;\n    }\n  }, {});\n}\n\n\n\n\n\nexports.BaseController = BaseController; exports.getAnonymizedState = getAnonymizedState; exports.getPersistentState = getPersistentState;\n//# sourceMappingURL=chunk-IURK6TKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RestrictedControllerMessenger.ts\nvar _controllerMessenger, _controllerName, _allowedActions, _allowedEvents, _isAllowedEvent, isAllowedEvent_fn, _isAllowedAction, isAllowedAction_fn, _isInCurrentNamespace, isInCurrentNamespace_fn;\nvar RestrictedControllerMessenger = class {\n  /**\n   * Constructs a restricted controller messenger\n   *\n   * The provided allowlists grant the ability to call the listed actions and subscribe to the\n   * listed events. The \"name\" provided grants ownership of any actions and events under that\n   * namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - The controller options.\n   * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   */\n  constructor({\n    controllerMessenger,\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    /**\n     * Determine whether the given event type is allowed. Event types are\n     * allowed if they are in the current namespace or on the list of\n     * allowed events.\n     *\n     * @param eventType - The event type to check.\n     * @returns Whether the event type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedEvent);\n    /**\n     * Determine whether the given action type is allowed. Action types\n     * are allowed if they are in the current namespace or on the list of\n     * allowed actions.\n     *\n     * @param actionType - The action type to check.\n     * @returns Whether the action type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedAction);\n    /**\n     * Determine whether the given name is within the current namespace.\n     *\n     * @param name - The name to check\n     * @returns Whether the name is within the current namespace\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInCurrentNamespace);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerMessenger, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerName, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedActions, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedEvents, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerMessenger, controllerMessenger);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerName, name);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedActions, allowedActions);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedEvents, allowedEvents);\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * The action type this handler is registered under *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw if an action handler that is not in the current namespace is being registered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  registerActionHandler(action, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed registering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerActionHandler(action, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * The action type being unregistered *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unique identifier for this action.\n   * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  unregisterActionHandler(action) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed unregistering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unregisterActionHandler(action);\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * The action type being called must be on the action allowlist.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of allowed Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedAction, isAllowedAction_fn).call(this, actionType)) {\n      throw new Error(`Action missing from allow list: ${actionType}`);\n    }\n    const response = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).call(\n      actionType,\n      ...params\n    );\n    return response;\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * The event type *must* be in the current namespace\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerInitialEventPayload({\n      eventType,\n      getPayload\n    });\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * The event type being published *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @throws Will throw if an event that is not in the current namespace is being published.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  publish(event, ...payload) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).publish(event, ...payload);\n  }\n  subscribe(event, handler, selector) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    if (selector) {\n      return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler, selector);\n    }\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler);\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * The event type being unsubscribed to must be on the event allowlist.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw if the given event is not an allowed event for this controller messenger.\n   * @template EventType - A type union of allowed Event type strings.\n   */\n  unsubscribe(event, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unsubscribe(event, handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * The event type being cleared *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  clearEventSubscriptions(event) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed clearing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).clearEventSubscriptions(event);\n  }\n};\n_controllerMessenger = new WeakMap();\n_controllerName = new WeakMap();\n_allowedActions = new WeakMap();\n_allowedEvents = new WeakMap();\n_isAllowedEvent = new WeakSet();\nisAllowedEvent_fn = function(eventType) {\n  const allowedEvents = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedEvents);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType) || allowedEvents !== null && allowedEvents.includes(eventType);\n};\n_isAllowedAction = new WeakSet();\nisAllowedAction_fn = function(actionType) {\n  const allowedActions = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedActions);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, actionType) || allowedActions !== null && allowedActions.includes(actionType);\n};\n_isInCurrentNamespace = new WeakSet();\nisInCurrentNamespace_fn = function(name) {\n  return name.startsWith(`${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:`);\n};\n\n\n\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n//# sourceMappingURL=chunk-UJFCPTF3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFTHCJ6HYjs = require('./chunk-FTHCJ6HY.js');\n\n\n\n\nvar _chunkIURK6TKDjs = require('./chunk-IURK6TKD.js');\n\n\nvar _chunkG42723LGjs = require('./chunk-G42723LG.js');\n\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\nexports.BaseController = _chunkIURK6TKDjs.BaseController; exports.BaseControllerV1 = _chunkFTHCJ6HYjs.BaseControllerV1; exports.ControllerMessenger = _chunkG42723LGjs.ControllerMessenger; exports.RestrictedControllerMessenger = _chunkUJFCPTF3js.RestrictedControllerMessenger; exports.getAnonymizedState = _chunkIURK6TKDjs.getAnonymizedState; exports.getPersistentState = _chunkIURK6TKDjs.getPersistentState;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/create-network-client.ts\nvar _controllerutils = require('@metamask/controller-utils');\nvar _ethblocktracker = require('@metamask/eth-block-tracker');\nvar _ethjsonrpcinfura = require('@metamask/eth-json-rpc-infura');\n\n\n\n\n\n\n\n\nvar _ethjsonrpcmiddleware = require('@metamask/eth-json-rpc-middleware');\n\n\n\nvar _ethjsonrpcprovider = require('@metamask/eth-json-rpc-provider');\n\n\n\n\n\nvar _jsonrpcengine = require('@metamask/json-rpc-engine');\nvar SECOND = 1e3;\nfunction createNetworkClient(networkConfig) {\n  const rpcApiMiddleware = networkConfig.type === \"infura\" /* Infura */ ? _ethjsonrpcinfura.createInfuraMiddleware.call(void 0, {\n    network: networkConfig.network,\n    projectId: networkConfig.infuraProjectId,\n    maxAttempts: 5,\n    source: \"metamask\"\n  }) : _ethjsonrpcmiddleware.createFetchMiddleware.call(void 0, {\n    btoa: global.btoa,\n    fetch: global.fetch,\n    rpcUrl: networkConfig.rpcUrl\n  });\n  const rpcProvider = _ethjsonrpcprovider.providerFromMiddleware.call(void 0, rpcApiMiddleware);\n  const blockTrackerOpts = (\n    // eslint-disable-next-line n/no-process-env\n    false && networkConfig.type === \"custom\" ? { pollingInterval: SECOND } : {}\n  );\n  const blockTracker = new (0, _ethblocktracker.PollingBlockTracker)({\n    ...blockTrackerOpts,\n    provider: rpcProvider\n  });\n  const networkMiddleware = networkConfig.type === \"infura\" /* Infura */ ? createInfuraNetworkMiddleware({\n    blockTracker,\n    network: networkConfig.network,\n    rpcProvider,\n    rpcApiMiddleware\n  }) : createCustomNetworkMiddleware({\n    blockTracker,\n    chainId: networkConfig.chainId,\n    rpcApiMiddleware\n  });\n  const engine = new (0, _jsonrpcengine.JsonRpcEngine)();\n  engine.push(networkMiddleware);\n  const provider = _ethjsonrpcprovider.providerFromEngine.call(void 0, engine);\n  const destroy = () => {\n    blockTracker.destroy();\n  };\n  return { configuration: networkConfig, provider, blockTracker, destroy };\n}\nfunction createInfuraNetworkMiddleware({\n  blockTracker,\n  network,\n  rpcProvider,\n  rpcApiMiddleware\n}) {\n  return _jsonrpcengine.mergeMiddleware.call(void 0, [\n    createNetworkAndChainIdMiddleware({ network }),\n    _ethjsonrpcmiddleware.createBlockCacheMiddleware.call(void 0, { blockTracker }),\n    _ethjsonrpcmiddleware.createInflightCacheMiddleware.call(void 0, ),\n    _ethjsonrpcmiddleware.createBlockRefMiddleware.call(void 0, { blockTracker, provider: rpcProvider }),\n    _ethjsonrpcmiddleware.createRetryOnEmptyMiddleware.call(void 0, { blockTracker, provider: rpcProvider }),\n    _ethjsonrpcmiddleware.createBlockTrackerInspectorMiddleware.call(void 0, { blockTracker }),\n    rpcApiMiddleware\n  ]);\n}\nfunction createNetworkAndChainIdMiddleware({\n  network\n}) {\n  return _jsonrpcengine.createScaffoldMiddleware.call(void 0, {\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    eth_chainId: _controllerutils.ChainId[network]\n  });\n}\nvar createChainIdMiddleware = (chainId) => {\n  return (req, res, next, end) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n};\nfunction createCustomNetworkMiddleware({\n  blockTracker,\n  chainId,\n  rpcApiMiddleware\n}) {\n  const testMiddlewares = false ? [createEstimateGasDelayTestMiddleware()] : [];\n  return _jsonrpcengine.mergeMiddleware.call(void 0, [\n    ...testMiddlewares,\n    createChainIdMiddleware(chainId),\n    _ethjsonrpcmiddleware.createBlockRefRewriteMiddleware.call(void 0, { blockTracker }),\n    _ethjsonrpcmiddleware.createBlockCacheMiddleware.call(void 0, { blockTracker }),\n    _ethjsonrpcmiddleware.createInflightCacheMiddleware.call(void 0, ),\n    _ethjsonrpcmiddleware.createBlockTrackerInspectorMiddleware.call(void 0, { blockTracker }),\n    rpcApiMiddleware\n  ]);\n}\nfunction createEstimateGasDelayTestMiddleware() {\n  return _jsonrpcengine.createAsyncMiddleware.call(void 0, async (req, _, next) => {\n    if (req.method === \"eth_estimateGas\") {\n      await new Promise((resolve) => setTimeout(resolve, SECOND * 2));\n    }\n    return next();\n  });\n}\n\n\n\nexports.createNetworkClient = createNetworkClient;\n//# sourceMappingURL=chunk-E4V6XEBR.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/types.ts\nvar NetworkClientType = /* @__PURE__ */ ((NetworkClientType2) => {\n  NetworkClientType2[\"Custom\"] = \"custom\";\n  NetworkClientType2[\"Infura\"] = \"infura\";\n  return NetworkClientType2;\n})(NetworkClientType || {});\n\n\n\nexports.NetworkClientType = NetworkClientType;\n//# sourceMappingURL=chunk-KHZTS7TF.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkE4V6XEBRjs = require('./chunk-E4V6XEBR.js');\n\n// src/create-auto-managed-network-client.ts\nvar REFLECTIVE_PROPERTY_NAME = \"__target__\";\nvar UNINITIALIZED_TARGET = { __UNINITIALIZED__: true };\nfunction createAutoManagedNetworkClient(networkClientConfiguration) {\n  let networkClient;\n  const providerProxy = new Proxy(UNINITIALIZED_TARGET, {\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(_target, propertyName, receiver) {\n      if (propertyName === REFLECTIVE_PROPERTY_NAME) {\n        return networkClient?.provider;\n      }\n      networkClient ?? (networkClient = _chunkE4V6XEBRjs.createNetworkClient.call(void 0, networkClientConfiguration));\n      if (networkClient === void 0) {\n        throw new Error(\n          \"It looks like `createNetworkClient` didn't return anything. Perhaps it's being mocked?\"\n        );\n      }\n      const { provider } = networkClient;\n      if (propertyName in provider) {\n        const value = provider[propertyName];\n        if (typeof value === \"function\") {\n          return function(...args) {\n            return value.apply(this === receiver ? provider : this, args);\n          };\n        }\n        return value;\n      }\n      return void 0;\n    },\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    has(_target, propertyName) {\n      if (propertyName === REFLECTIVE_PROPERTY_NAME) {\n        return true;\n      }\n      networkClient ?? (networkClient = _chunkE4V6XEBRjs.createNetworkClient.call(void 0, networkClientConfiguration));\n      const { provider } = networkClient;\n      return propertyName in provider;\n    }\n  });\n  const blockTrackerProxy = new Proxy(\n    UNINITIALIZED_TARGET,\n    {\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(_target, propertyName, receiver) {\n        if (propertyName === REFLECTIVE_PROPERTY_NAME) {\n          return networkClient?.blockTracker;\n        }\n        networkClient ?? (networkClient = _chunkE4V6XEBRjs.createNetworkClient.call(void 0, networkClientConfiguration));\n        if (networkClient === void 0) {\n          throw new Error(\n            \"It looks like createNetworkClient returned undefined. Perhaps it's mocked?\"\n          );\n        }\n        const { blockTracker } = networkClient;\n        if (propertyName in blockTracker) {\n          const value = blockTracker[propertyName];\n          if (typeof value === \"function\") {\n            return function(...args) {\n              return value.apply(this === receiver ? blockTracker : this, args);\n            };\n          }\n          return value;\n        }\n        return void 0;\n      },\n      // TODO: Replace `any` with type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      has(_target, propertyName) {\n        if (propertyName === REFLECTIVE_PROPERTY_NAME) {\n          return true;\n        }\n        networkClient ?? (networkClient = _chunkE4V6XEBRjs.createNetworkClient.call(void 0, networkClientConfiguration));\n        const { blockTracker } = networkClient;\n        return propertyName in blockTracker;\n      }\n    }\n  );\n  const destroy = () => {\n    networkClient?.destroy();\n  };\n  return {\n    configuration: networkClientConfiguration,\n    provider: providerProxy,\n    blockTracker: blockTrackerProxy,\n    destroy\n  };\n}\n\n\n\nexports.createAutoManagedNetworkClient = createAutoManagedNetworkClient;\n//# sourceMappingURL=chunk-LLMZDA4Q.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/logger.ts\nvar _utils = require('@metamask/utils');\nvar projectLogger = _utils.createProjectLogger.call(void 0, \"network-controller\");\n\n\n\n\nexports.createModuleLogger = _utils.createModuleLogger; exports.projectLogger = projectLogger;\n//# sourceMappingURL=chunk-VGYLDDJB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _chunkZKNI7MD3js = require('./chunk-ZKNI7MD3.js');\n\n\nvar _chunkLLMZDA4Qjs = require('./chunk-LLMZDA4Q.js');\n\n\n\nvar _chunkVGYLDDJBjs = require('./chunk-VGYLDDJB.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/NetworkController.ts\nvar _basecontroller = require('@metamask/base-controller');\n\n\n\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _ethquery = require('@metamask/eth-query'); var _ethquery2 = _interopRequireDefault(_ethquery);\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _swappableobjproxy = require('@metamask/swappable-obj-proxy');\nvar _utils = require('@metamask/utils');\nvar _assert = require('assert');\nvar _reselect = require('reselect');\nvar _urijs = require('uri-js'); var URI = _interopRequireWildcard(_urijs);\nvar _util = require('util');\nvar _uuid = require('uuid');\nvar debugLog = _chunkVGYLDDJBjs.createModuleLogger.call(void 0, _chunkVGYLDDJBjs.projectLogger, \"NetworkController\");\nvar INFURA_URL_REGEX = /^https:\\/\\/(?<networkName>[^.]+)\\.infura\\.io\\/v\\d+\\/(?<apiKey>.+)$/u;\nvar RpcEndpointType = /* @__PURE__ */ ((RpcEndpointType2) => {\n  RpcEndpointType2[\"Custom\"] = \"custom\";\n  RpcEndpointType2[\"Infura\"] = \"infura\";\n  return RpcEndpointType2;\n})(RpcEndpointType || {});\nfunction knownKeysOf(object) {\n  return Object.keys(object);\n}\nfunction isErrorWithCode(error) {\n  return typeof error === \"object\" && error !== null && \"code\" in error;\n}\nvar controllerName = \"NetworkController\";\nfunction getDefaultNetworkConfigurationsByChainId() {\n  return Object.values(_controllerutils.InfuraNetworkType).reduce((obj, infuraNetworkType) => {\n    const chainId = _controllerutils.ChainId[infuraNetworkType];\n    const rpcEndpointUrl = (\n      // False negative - this is a string.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `https://${infuraNetworkType}.infura.io/v3/{infuraProjectId}`\n    );\n    const networkConfiguration = {\n      blockExplorerUrls: [],\n      chainId,\n      defaultRpcEndpointIndex: 0,\n      name: _controllerutils.NetworkNickname[infuraNetworkType],\n      nativeCurrency: _controllerutils.NetworksTicker[infuraNetworkType],\n      rpcEndpoints: [\n        {\n          networkClientId: infuraNetworkType,\n          type: \"infura\" /* Infura */,\n          url: rpcEndpointUrl\n        }\n      ]\n    };\n    return { ...obj, [chainId]: networkConfiguration };\n  }, {});\n}\nfunction getDefaultNetworkControllerState() {\n  const networksMetadata = {};\n  const networkConfigurationsByChainId = getDefaultNetworkConfigurationsByChainId();\n  return {\n    selectedNetworkClientId: _controllerutils.InfuraNetworkType.mainnet,\n    networksMetadata,\n    networkConfigurationsByChainId\n  };\n}\nfunction getNetworkConfigurations(state) {\n  return Object.values(state.networkConfigurationsByChainId);\n}\nfunction getAvailableNetworkClientIds(networkConfigurations) {\n  return networkConfigurations.flatMap(\n    (networkConfiguration) => networkConfiguration.rpcEndpoints.map(\n      (rpcEndpoint) => rpcEndpoint.networkClientId\n    )\n  );\n}\nvar selectAvailableNetworkClientIds = _reselect.createSelector.call(void 0, \n  [getNetworkConfigurations],\n  getAvailableNetworkClientIds\n);\nfunction isValidUrl(url) {\n  const uri = URI.parse(url);\n  return uri.error === void 0 && (uri.scheme === \"http\" || uri.scheme === \"https\");\n}\nfunction deriveInfuraNetworkNameFromRpcEndpointUrl(rpcEndpointUrl) {\n  const match = INFURA_URL_REGEX.exec(rpcEndpointUrl);\n  if (match?.groups) {\n    if (_controllerutils.isInfuraNetworkType.call(void 0, match.groups.networkName)) {\n      return match.groups.networkName;\n    }\n    throw new Error(`Unknown Infura network '${match.groups.networkName}'`);\n  }\n  throw new Error(\"Could not derive Infura network from RPC endpoint URL\");\n}\nfunction validateNetworkControllerState(state) {\n  const networkConfigurationEntries = Object.entries(\n    state.networkConfigurationsByChainId\n  );\n  const networkClientIds = selectAvailableNetworkClientIds(state);\n  if (networkConfigurationEntries.length === 0) {\n    throw new Error(\n      \"NetworkController state is invalid: `networkConfigurationsByChainId` cannot be empty\"\n    );\n  }\n  for (const [chainId, networkConfiguration] of networkConfigurationEntries) {\n    if (chainId !== networkConfiguration.chainId) {\n      throw new Error(\n        `NetworkController state has invalid \\`networkConfigurationsByChainId\\`: Network configuration '${networkConfiguration.name}' is filed under '${chainId}' which does not match its \\`chainId\\` of '${networkConfiguration.chainId}'`\n      );\n    }\n    const isInvalidDefaultBlockExplorerUrlIndex = networkConfiguration.blockExplorerUrls.length > 0 ? networkConfiguration.defaultBlockExplorerUrlIndex === void 0 || networkConfiguration.blockExplorerUrls[networkConfiguration.defaultBlockExplorerUrlIndex] === void 0 : networkConfiguration.defaultBlockExplorerUrlIndex !== void 0;\n    if (isInvalidDefaultBlockExplorerUrlIndex) {\n      throw new Error(\n        `NetworkController state has invalid \\`networkConfigurationsByChainId\\`: Network configuration '${networkConfiguration.name}' has a \\`defaultBlockExplorerUrlIndex\\` that does not refer to an entry in \\`blockExplorerUrls\\``\n      );\n    }\n    if (networkConfiguration.rpcEndpoints[networkConfiguration.defaultRpcEndpointIndex] === void 0) {\n      throw new Error(\n        `NetworkController state has invalid \\`networkConfigurationsByChainId\\`: Network configuration '${networkConfiguration.name}' has a \\`defaultRpcEndpointIndex\\` that does not refer to an entry in \\`rpcEndpoints\\``\n      );\n    }\n  }\n  if ([...new Set(networkClientIds)].length < networkClientIds.length) {\n    throw new Error(\n      \"NetworkController state has invalid `networkConfigurationsByChainId`: Every RPC endpoint across all network configurations must have a unique `networkClientId`\"\n    );\n  }\n  if (!networkClientIds.includes(state.selectedNetworkClientId)) {\n    throw new Error(\n      `NetworkController state is invalid: \\`selectedNetworkClientId\\` ${_util.inspect.call(void 0, \n        state.selectedNetworkClientId\n      )} does not refer to an RPC endpoint within a network configuration`\n    );\n  }\n}\nfunction buildNetworkConfigurationsByNetworkClientId(networkConfigurationsByChainId) {\n  return new Map(\n    Object.values(networkConfigurationsByChainId).flatMap(\n      (networkConfiguration) => {\n        return networkConfiguration.rpcEndpoints.map((rpcEndpoint) => {\n          return [rpcEndpoint.networkClientId, networkConfiguration];\n        });\n      }\n    )\n  );\n}\nvar _ethQuery, _infuraProjectId, _previouslySelectedNetworkClientId, _providerProxy, _blockTrackerProxy, _autoManagedNetworkClientRegistry, _autoManagedNetworkClient, _log, _networkConfigurationsByNetworkClientId, _refreshNetwork, refreshNetwork_fn, _getLatestBlock, getLatestBlock_fn, _determineEIP1559Compatibility, determineEIP1559Compatibility_fn, _validateNetworkFields, validateNetworkFields_fn, _determineNetworkConfigurationToPersist, determineNetworkConfigurationToPersist_fn, _registerNetworkClientsAsNeeded, registerNetworkClientsAsNeeded_fn, _unregisterNetworkClientsAsNeeded, unregisterNetworkClientsAsNeeded_fn, _updateNetworkConfigurations, updateNetworkConfigurations_fn, _ensureAutoManagedNetworkClientRegistryPopulated, ensureAutoManagedNetworkClientRegistryPopulated_fn, _createAutoManagedNetworkClientRegistry, createAutoManagedNetworkClientRegistry_fn, _applyNetworkSelection, applyNetworkSelection_fn;\nvar NetworkController = class extends _basecontroller.BaseController {\n  constructor({\n    messenger,\n    state,\n    infuraProjectId,\n    log\n  }) {\n    const initialState = { ...getDefaultNetworkControllerState(), ...state };\n    validateNetworkControllerState(initialState);\n    if (!infuraProjectId || typeof infuraProjectId !== \"string\") {\n      throw new Error(\"Invalid Infura project ID\");\n    }\n    super({\n      name: controllerName,\n      metadata: {\n        selectedNetworkClientId: {\n          persist: true,\n          anonymous: false\n        },\n        networksMetadata: {\n          persist: true,\n          anonymous: false\n        },\n        networkConfigurationsByChainId: {\n          persist: true,\n          anonymous: false\n        }\n      },\n      messenger,\n      state: initialState\n    });\n    /**\n     * Executes a series of steps to switch the network:\n     *\n     * 1. Notifies subscribers via the messenger that the network is about to be\n     * switched (and, really, that the global provider and block tracker proxies\n     * will be re-pointed to a new network).\n     * 2. Looks up a known and preinitialized network client matching the given\n     * ID and uses it to re-point the aforementioned provider and block tracker\n     * proxies.\n     * 3. Notifies subscribers via the messenger that the network has switched.\n     * 4. Captures metadata for the newly switched network in state.\n     *\n     * @param networkClientId - The ID of a network client that requests will be\n     * routed through (either the name of an Infura network or the ID of a custom\n     * network configuration).\n     * @param options - Options for this method.\n     * @param options.updateState - Allows for updating state.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _refreshNetwork);\n    /**\n     * Fetches the latest block for the network.\n     *\n     * @param networkClientId - The networkClientId to fetch the correct provider against which to check the latest block. Defaults to the selectedNetworkClientId.\n     * @returns A promise that either resolves to the block header or null if\n     * there is no latest block, or rejects with an error.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getLatestBlock);\n    /**\n     * Retrieves and checks the latest block from the currently selected\n     * network; if the block has a `baseFeePerGas` property, then we know\n     * that the network supports EIP-1559; otherwise it doesn't.\n     *\n     * @param networkClientId - The networkClientId to fetch the correct provider against which to check 1559 compatibility\n     * @returns A promise that resolves to `true` if the network supports EIP-1559,\n     * `false` otherwise, or `undefined` if unable to retrieve the last block.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _determineEIP1559Compatibility);\n    /**\n     * Ensure that the given fields which will be used to either add or update a\n     * network are valid.\n     *\n     * @param args - The arguments.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateNetworkFields);\n    /**\n     * Constructs a network configuration that will be persisted to state when\n     * adding or updating a network.\n     *\n     * @param args - The arguments to this function.\n     * @param args.networkFields - The fields used to add or update a network.\n     * @param args.networkClientOperations - Operations which were calculated for\n     * updating the network client registry but which also map back to RPC\n     * endpoints (and so can be used to save those RPC endpoints).\n     * @returns The network configuration to persist.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _determineNetworkConfigurationToPersist);\n    /**\n     * Creates and registers network clients using the given operations calculated\n     * as a part of adding or updating a network.\n     *\n     * @param args - The arguments to this function.\n     * @param args.networkFields - The fields used to add or update a network.\n     * @param args.networkClientOperations - Dictate which network clients need to\n     * be created.\n     * @param args.autoManagedNetworkClientRegistry - The network client registry\n     * to update.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _registerNetworkClientsAsNeeded);\n    /**\n     * Destroys and removes network clients using the given operations calculated\n     * as a part of updating or removing a network.\n     *\n     * @param args - The arguments to this function.\n     * @param args.networkClientOperations - Dictate which network clients to\n     * remove.\n     * @param args.autoManagedNetworkClientRegistry - The network client registry\n     * to update.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _unregisterNetworkClientsAsNeeded);\n    /**\n     * Updates `networkConfigurationsByChainId` in state depending on whether a\n     * network is being added, updated, or removed.\n     *\n     * - The existing network configuration will be removed when a network is\n     * being filed under a different chain or removed.\n     * - A network configuration will be stored when a network is being added or\n     * when a network is being updated.\n     *\n     * @param args - The arguments to this function.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateNetworkConfigurations);\n    /**\n     * Before accessing or switching the network, the registry of network clients\n     * needs to be populated. Otherwise, `#applyNetworkSelection` and\n     * `getNetworkClientRegistry` will throw an error. This method checks to see if the\n     * population step has happened yet, and if not, makes it happen.\n     *\n     * @returns The populated network client registry.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _ensureAutoManagedNetworkClientRegistryPopulated);\n    /**\n     * Constructs the registry of network clients based on the set of default\n     * and custom networks in state.\n     *\n     * @returns The network clients keyed by ID.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _createAutoManagedNetworkClientRegistry);\n    /**\n     * Updates the global provider and block tracker proxies (accessible via\n     * {@link getSelectedNetworkClient}) to point to the same ones within the\n     * given network client, thereby magically switching any consumers using these\n     * proxies to use the new network.\n     *\n     * Also refreshes the EthQuery instance accessible via the `getEthQuery`\n     * action to wrap the provider from the new network client. Note that this is\n     * not a proxy, so consumers will need to call `getEthQuery` again after the\n     * network switch.\n     *\n     * @param networkClientId - The ID of a network client that requests will be\n     * routed through (either the name of an Infura network or the ID of a custom\n     * network configuration).\n     * @param options - Options for this method.\n     * @param options.updateState - Allows for updating state.\n     * @throws if no network client could be found matching the given ID.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _applyNetworkSelection);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _ethQuery, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _infuraProjectId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _previouslySelectedNetworkClientId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _providerProxy, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _blockTrackerProxy, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _autoManagedNetworkClientRegistry, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _autoManagedNetworkClient, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _log, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _networkConfigurationsByNetworkClientId, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _infuraProjectId, infuraProjectId);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _log, log);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _previouslySelectedNetworkClientId, this.state.selectedNetworkClientId);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _networkConfigurationsByNetworkClientId, buildNetworkConfigurationsByNetworkClientId(\n      this.state.networkConfigurationsByChainId\n    ));\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getEthQuery`,\n      () => {\n        return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ethQuery);\n      }\n    );\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getNetworkClientById`,\n      this.getNetworkClientById.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getEIP1559Compatibility`,\n      this.getEIP1559Compatibility.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:setActiveNetwork`,\n      this.setActiveNetwork.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:setProviderType`,\n      this.setProviderType.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:findNetworkClientIdByChainId`,\n      this.findNetworkClientIdByChainId.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getNetworkConfigurationByChainId`,\n      this.getNetworkConfigurationByChainId.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // ESLint is mistaken here; `name` is a string.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getNetworkConfigurationByNetworkClientId`,\n      this.getNetworkConfigurationByNetworkClientId.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `${this.name}:getSelectedNetworkClient`,\n      this.getSelectedNetworkClient.bind(this)\n    );\n  }\n  /**\n   * Accesses the provider and block tracker for the currently selected network.\n   * @returns The proxy and block tracker proxies.\n   * @deprecated This method has been replaced by `getSelectedNetworkClient` (which has a more easily used return type) and will be removed in a future release.\n   */\n  getProviderAndBlockTracker() {\n    return {\n      provider: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providerProxy),\n      blockTracker: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _blockTrackerProxy)\n    };\n  }\n  /**\n   * Accesses the provider and block tracker for the currently selected network.\n   *\n   * @returns an object with the provider and block tracker proxies for the currently selected network.\n   */\n  getSelectedNetworkClient() {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providerProxy) && _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _blockTrackerProxy)) {\n      return {\n        provider: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providerProxy),\n        blockTracker: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _blockTrackerProxy)\n      };\n    }\n    return void 0;\n  }\n  /**\n   * Internally, the Infura and custom network clients are categorized by type\n   * so that when accessing either kind of network client, TypeScript knows\n   * which type to assign to the network client. For some cases it's more useful\n   * to be able to access network clients by ID instead of by type and then ID,\n   * so this function makes that possible.\n   *\n   * @returns The network clients registered so far, keyed by ID.\n   */\n  getNetworkClientRegistry() {\n    const autoManagedNetworkClientRegistry = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _ensureAutoManagedNetworkClientRegistryPopulated, ensureAutoManagedNetworkClientRegistryPopulated_fn).call(this);\n    return Object.assign(\n      {},\n      autoManagedNetworkClientRegistry[\"infura\" /* Infura */],\n      autoManagedNetworkClientRegistry[\"custom\" /* Custom */]\n    );\n  }\n  getNetworkClientById(networkClientId) {\n    if (!networkClientId) {\n      throw new Error(\"No network client ID was provided.\");\n    }\n    const autoManagedNetworkClientRegistry = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _ensureAutoManagedNetworkClientRegistryPopulated, ensureAutoManagedNetworkClientRegistryPopulated_fn).call(this);\n    if (_controllerutils.isInfuraNetworkType.call(void 0, networkClientId)) {\n      const infuraNetworkClient = autoManagedNetworkClientRegistry[\"infura\" /* Infura */][networkClientId];\n      if (!infuraNetworkClient) {\n        throw new Error(\n          // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `No Infura network client was found with the ID \"${networkClientId}\".`\n        );\n      }\n      return infuraNetworkClient;\n    }\n    const customNetworkClient = autoManagedNetworkClientRegistry[\"custom\" /* Custom */][networkClientId];\n    if (!customNetworkClient) {\n      throw new Error(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `No custom network client was found with the ID \"${networkClientId}\".`\n      );\n    }\n    return customNetworkClient;\n  }\n  /**\n   * Ensures that network clients for Infura and custom RPC endpoints have been\n   * created. Then, consulting state, initializes and establishes the currently\n   * selected network client.\n   */\n  async initializeProvider() {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _applyNetworkSelection, applyNetworkSelection_fn).call(this, this.state.selectedNetworkClientId);\n  }\n  /**\n   * Refreshes the network meta with EIP-1559 support and the network status\n   * based on the given network client ID.\n   *\n   * @param networkClientId - The ID of the network client to update.\n   */\n  async lookupNetworkByClientId(networkClientId) {\n    const isInfura = _controllerutils.isInfuraNetworkType.call(void 0, networkClientId);\n    let updatedNetworkStatus;\n    let updatedIsEIP1559Compatible;\n    try {\n      updatedIsEIP1559Compatible = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _determineEIP1559Compatibility, determineEIP1559Compatibility_fn).call(this, networkClientId);\n      updatedNetworkStatus = \"available\" /* Available */;\n    } catch (error) {\n      debugLog(\"NetworkController: lookupNetworkByClientId: \", error);\n      if (isErrorWithCode(error)) {\n        let responseBody;\n        if (isInfura && _utils.hasProperty.call(void 0, error, \"message\") && typeof error.message === \"string\") {\n          try {\n            responseBody = JSON.parse(error.message);\n          } catch {\n            _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\n              \"NetworkController: lookupNetworkByClientId: json parse error: \",\n              error\n            );\n          }\n        }\n        if (_utils.isPlainObject.call(void 0, responseBody) && responseBody.error === _chunkZKNI7MD3js.INFURA_BLOCKED_KEY) {\n          updatedNetworkStatus = \"blocked\" /* Blocked */;\n        } else if (error.code === _rpcerrors.errorCodes.rpc.internal) {\n          updatedNetworkStatus = \"unknown\" /* Unknown */;\n          _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\n            \"NetworkController: lookupNetworkByClientId: rpc internal error: \",\n            error\n          );\n        } else {\n          updatedNetworkStatus = \"unavailable\" /* Unavailable */;\n          _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\n            \"NetworkController: lookupNetworkByClientId: \",\n            error\n          );\n        }\n      } else if (typeof Error !== \"undefined\" && _utils.hasProperty.call(void 0, error, \"message\") && typeof error.message === \"string\" && error.message.includes(\n        \"No custom network client was found with the ID\"\n      )) {\n        throw error;\n      } else {\n        debugLog(\n          \"NetworkController - could not determine network status\",\n          error\n        );\n        updatedNetworkStatus = \"unknown\" /* Unknown */;\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\"NetworkController: lookupNetworkByClientId: \", error);\n      }\n    }\n    this.update((state) => {\n      if (state.networksMetadata[networkClientId] === void 0) {\n        state.networksMetadata[networkClientId] = {\n          status: \"unknown\" /* Unknown */,\n          EIPS: {}\n        };\n      }\n      const meta = state.networksMetadata[networkClientId];\n      meta.status = updatedNetworkStatus;\n      if (updatedIsEIP1559Compatible === void 0) {\n        delete meta.EIPS[1559];\n      } else {\n        meta.EIPS[1559] = updatedIsEIP1559Compatible;\n      }\n    });\n  }\n  /**\n   * Persists the following metadata about the given or selected network to\n   * state:\n   *\n   * - The status of the network, namely, whether it is available, geo-blocked\n   * (Infura only), or unavailable, or whether the status is unknown\n   * - Whether the network supports EIP-1559, or whether it is unknown\n   *\n   * Note that it is possible for the network to be switched while this data is\n   * being collected. If that is the case, no metadata for the (now previously)\n   * selected network will be updated.\n   *\n   * @param networkClientId - The ID of the network client to update.\n   * If no ID is provided, uses the currently selected network.\n   */\n  async lookupNetwork(networkClientId) {\n    if (networkClientId) {\n      await this.lookupNetworkByClientId(networkClientId);\n      return;\n    }\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ethQuery)) {\n      return;\n    }\n    const isInfura = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _autoManagedNetworkClient)?.configuration.type === \"infura\" /* Infura */;\n    let networkChanged = false;\n    const listener = () => {\n      networkChanged = true;\n      this.messagingSystem.unsubscribe(\n        \"NetworkController:networkDidChange\",\n        listener\n      );\n    };\n    this.messagingSystem.subscribe(\n      \"NetworkController:networkDidChange\",\n      listener\n    );\n    let updatedNetworkStatus;\n    let updatedIsEIP1559Compatible;\n    try {\n      const isEIP1559Compatible = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _determineEIP1559Compatibility, determineEIP1559Compatibility_fn).call(this, this.state.selectedNetworkClientId);\n      updatedNetworkStatus = \"available\" /* Available */;\n      updatedIsEIP1559Compatible = isEIP1559Compatible;\n    } catch (error) {\n      if (isErrorWithCode(error)) {\n        let responseBody;\n        if (isInfura && _utils.hasProperty.call(void 0, error, \"message\") && typeof error.message === \"string\") {\n          try {\n            responseBody = JSON.parse(error.message);\n          } catch (parseError) {\n            _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\n              \"NetworkController: lookupNetwork: json parse error\",\n              parseError\n            );\n          }\n        }\n        if (_utils.isPlainObject.call(void 0, responseBody) && responseBody.error === _chunkZKNI7MD3js.INFURA_BLOCKED_KEY) {\n          updatedNetworkStatus = \"blocked\" /* Blocked */;\n        } else if (error.code === _rpcerrors.errorCodes.rpc.internal) {\n          updatedNetworkStatus = \"unknown\" /* Unknown */;\n          _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\n            \"NetworkController: lookupNetwork: rpc internal error\",\n            error\n          );\n        } else {\n          updatedNetworkStatus = \"unavailable\" /* Unavailable */;\n          _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\"NetworkController: lookupNetwork: \", error);\n        }\n      } else {\n        debugLog(\n          \"NetworkController - could not determine network status\",\n          error\n        );\n        updatedNetworkStatus = \"unknown\" /* Unknown */;\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _log)?.warn(\"NetworkController: lookupNetwork: \", error);\n      }\n    }\n    if (networkChanged) {\n      return;\n    }\n    this.messagingSystem.unsubscribe(\n      \"NetworkController:networkDidChange\",\n      listener\n    );\n    this.update((state) => {\n      const meta = state.networksMetadata[state.selectedNetworkClientId];\n      meta.status = updatedNetworkStatus;\n      if (updatedIsEIP1559Compatible === void 0) {\n        delete meta.EIPS[1559];\n      } else {\n        meta.EIPS[1559] = updatedIsEIP1559Compatible;\n      }\n    });\n    if (isInfura) {\n      if (updatedNetworkStatus === \"available\" /* Available */) {\n        this.messagingSystem.publish(\"NetworkController:infuraIsUnblocked\");\n      } else if (updatedNetworkStatus === \"blocked\" /* Blocked */) {\n        this.messagingSystem.publish(\"NetworkController:infuraIsBlocked\");\n      }\n    } else {\n      this.messagingSystem.publish(\"NetworkController:infuraIsUnblocked\");\n    }\n  }\n  /**\n   * Convenience method to update provider network type settings.\n   *\n   * @param type - Human readable network name.\n   * @deprecated This has been replaced by `setActiveNetwork`, and will be\n   * removed in a future release\n   */\n  async setProviderType(type) {\n    _assert.strict.notStrictEqual(\n      type,\n      _controllerutils.NetworkType.rpc,\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `NetworkController - cannot call \"setProviderType\" with type \"${_controllerutils.NetworkType.rpc}\". Use \"setActiveNetwork\"`\n    );\n    _assert.strict.ok(\n      _controllerutils.isInfuraNetworkType.call(void 0, type),\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `Unknown Infura provider type \"${type}\".`\n    );\n    await this.setActiveNetwork(type);\n  }\n  /**\n   * Changes the selected network.\n   *\n   * @param networkClientId - The ID of a network client that will be used to\n   * make requests.\n   * @param options - Options for this method.\n   * @param options.updateState - Allows for updating state.\n   * @throws if no network client is associated with the given\n   * network client ID.\n   */\n  async setActiveNetwork(networkClientId, options = {}) {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _previouslySelectedNetworkClientId, this.state.selectedNetworkClientId);\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _refreshNetwork, refreshNetwork_fn).call(this, networkClientId, options);\n  }\n  /**\n   * Determines whether the network supports EIP-1559 by checking whether the\n   * latest block has a `baseFeePerGas` property, then updates state\n   * appropriately.\n   *\n   * @param networkClientId - The networkClientId to fetch the correct provider against which to check 1559 compatibility.\n   * @returns A promise that resolves to true if the network supports EIP-1559\n   * , false otherwise, or `undefined` if unable to determine the compatibility.\n   */\n  async getEIP1559Compatibility(networkClientId) {\n    if (networkClientId) {\n      return this.get1559CompatibilityWithNetworkClientId(networkClientId);\n    }\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ethQuery)) {\n      return false;\n    }\n    const { EIPS } = this.state.networksMetadata[this.state.selectedNetworkClientId];\n    if (EIPS[1559] !== void 0) {\n      return EIPS[1559];\n    }\n    const isEIP1559Compatible = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _determineEIP1559Compatibility, determineEIP1559Compatibility_fn).call(this, this.state.selectedNetworkClientId);\n    this.update((state) => {\n      if (isEIP1559Compatible !== void 0) {\n        state.networksMetadata[state.selectedNetworkClientId].EIPS[1559] = isEIP1559Compatible;\n      }\n    });\n    return isEIP1559Compatible;\n  }\n  async get1559CompatibilityWithNetworkClientId(networkClientId) {\n    let metadata = this.state.networksMetadata[networkClientId];\n    if (metadata === void 0) {\n      await this.lookupNetwork(networkClientId);\n      metadata = this.state.networksMetadata[networkClientId];\n    }\n    const { EIPS } = metadata;\n    return EIPS[1559];\n  }\n  /**\n   * Ensures that the provider and block tracker proxies are pointed to the\n   * currently selected network and refreshes the metadata for the\n   */\n  async resetConnection() {\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _refreshNetwork, refreshNetwork_fn).call(this, this.state.selectedNetworkClientId);\n  }\n  /**\n   * Returns the network configuration that has been filed under the given chain\n   * ID.\n   *\n   * @param chainId - The chain ID to use as a key.\n   * @returns The network configuration if one exists, or undefined.\n   */\n  getNetworkConfigurationByChainId(chainId) {\n    return this.state.networkConfigurationsByChainId[chainId];\n  }\n  /**\n   * Returns the network configuration that contains an RPC endpoint with the\n   * given network client ID.\n   *\n   * @param networkClientId - The network client ID to use as a key.\n   * @returns The network configuration if one exists, or undefined.\n   */\n  getNetworkConfigurationByNetworkClientId(networkClientId) {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _networkConfigurationsByNetworkClientId).get(networkClientId);\n  }\n  /**\n   * Creates and registers network clients for the collection of Infura and\n   * custom RPC endpoints that can be used to make requests for a particular\n   * chain, storing the given configuration object in state for later reference.\n   *\n   * @param fields - The object that describes the new network/chain and lists\n   * the RPC endpoints which front that chain.\n   * @returns The newly added network configuration.\n   * @throws if any part of `fields` would produce invalid state.\n   * @see {@link NetworkConfiguration}\n   */\n  addNetwork(fields) {\n    const { rpcEndpoints: setOfRpcEndpointFields } = fields;\n    const autoManagedNetworkClientRegistry = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _ensureAutoManagedNetworkClientRegistryPopulated, ensureAutoManagedNetworkClientRegistryPopulated_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateNetworkFields, validateNetworkFields_fn).call(this, {\n      mode: \"add\",\n      networkFields: fields,\n      autoManagedNetworkClientRegistry\n    });\n    const networkClientOperations = setOfRpcEndpointFields.map(\n      (defaultOrCustomRpcEndpointFields) => {\n        const rpcEndpoint = defaultOrCustomRpcEndpointFields.type === \"custom\" /* Custom */ ? {\n          ...defaultOrCustomRpcEndpointFields,\n          networkClientId: _uuid.v4.call(void 0, )\n        } : defaultOrCustomRpcEndpointFields;\n        return {\n          type: \"add\",\n          rpcEndpoint\n        };\n      }\n    );\n    const newNetworkConfiguration = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _determineNetworkConfigurationToPersist, determineNetworkConfigurationToPersist_fn).call(this, {\n      networkFields: fields,\n      networkClientOperations\n    });\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _registerNetworkClientsAsNeeded, registerNetworkClientsAsNeeded_fn).call(this, {\n      networkFields: fields,\n      networkClientOperations,\n      autoManagedNetworkClientRegistry\n    });\n    this.update((state) => {\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNetworkConfigurations, updateNetworkConfigurations_fn).call(this, {\n        state,\n        mode: \"add\",\n        networkFields: fields,\n        networkConfigurationToPersist: newNetworkConfiguration\n      });\n    });\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _networkConfigurationsByNetworkClientId, buildNetworkConfigurationsByNetworkClientId(\n      this.state.networkConfigurationsByChainId\n    ));\n    this.messagingSystem.publish(\n      `${controllerName}:networkAdded`,\n      newNetworkConfiguration\n    );\n    return newNetworkConfiguration;\n  }\n  /**\n   * Updates the configuration for a previously stored network filed under the\n   * given chain ID, creating + registering new network clients to represent RPC\n   * endpoints that have been added and destroying + unregistering existing\n   * network clients for RPC endpoints that have been removed.\n   *\n   * Note that if `chainId` is changed, then all network clients associated with\n   * that chain will be removed and re-added, even if none of the RPC endpoints\n   * have changed.\n   *\n   * @param chainId - The chain ID associated with an existing network.\n   * @param fields - The object that describes the updates to the network/chain,\n   * including the new set of RPC endpoints which should front that chain.\n   * @param options - Options to provide.\n   * @param options.replacementSelectedRpcEndpointIndex - Usually you cannot\n   * remove an RPC endpoint that is being represented by the currently selected\n   * network client. This option allows you to specify another RPC endpoint\n   * (either an existing one or a new one) that should be used to select a new\n   * network instead.\n   * @returns The updated network configuration.\n   * @throws if `chainId` does not refer to an existing network configuration,\n   * if any part of `fields` would produce invalid state, etc.\n   * @see {@link NetworkConfiguration}\n   */\n  async updateNetwork(chainId, fields, {\n    replacementSelectedRpcEndpointIndex\n  } = {}) {\n    const existingNetworkConfiguration = this.state.networkConfigurationsByChainId[chainId];\n    if (existingNetworkConfiguration === void 0) {\n      throw new Error(\n        `Could not update network: Cannot find network configuration for chain ${_util.inspect.call(void 0, \n          chainId\n        )}`\n      );\n    }\n    const existingChainId = chainId;\n    const { chainId: newChainId, rpcEndpoints: setOfNewRpcEndpointFields } = fields;\n    const autoManagedNetworkClientRegistry = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _ensureAutoManagedNetworkClientRegistryPopulated, ensureAutoManagedNetworkClientRegistryPopulated_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateNetworkFields, validateNetworkFields_fn).call(this, {\n      mode: \"update\",\n      networkFields: fields,\n      existingNetworkConfiguration,\n      autoManagedNetworkClientRegistry\n    });\n    const networkClientOperations = [];\n    for (const newRpcEndpointFields of setOfNewRpcEndpointFields) {\n      const existingRpcEndpointForNoop = existingNetworkConfiguration.rpcEndpoints.find((rpcEndpoint) => {\n        return rpcEndpoint.type === newRpcEndpointFields.type && rpcEndpoint.url === newRpcEndpointFields.url && (rpcEndpoint.networkClientId === newRpcEndpointFields.networkClientId || newRpcEndpointFields.networkClientId === void 0);\n      });\n      const existingRpcEndpointForReplaceWhenChainChanged = existingNetworkConfiguration.rpcEndpoints.find((rpcEndpoint) => {\n        return rpcEndpoint.type === \"infura\" /* Infura */ && newRpcEndpointFields.type === \"infura\" /* Infura */ || rpcEndpoint.type === newRpcEndpointFields.type && rpcEndpoint.networkClientId === newRpcEndpointFields.networkClientId && rpcEndpoint.url === newRpcEndpointFields.url;\n      });\n      const existingRpcEndpointForReplaceWhenChainNotChanged = existingNetworkConfiguration.rpcEndpoints.find((rpcEndpoint) => {\n        return rpcEndpoint.type === newRpcEndpointFields.type && (rpcEndpoint.url === newRpcEndpointFields.url || rpcEndpoint.networkClientId === newRpcEndpointFields.networkClientId);\n      });\n      if (newChainId !== existingChainId && existingRpcEndpointForReplaceWhenChainChanged !== void 0) {\n        const newRpcEndpoint = newRpcEndpointFields.type === \"infura\" /* Infura */ ? newRpcEndpointFields : { ...newRpcEndpointFields, networkClientId: _uuid.v4.call(void 0, ) };\n        networkClientOperations.push({\n          type: \"replace\",\n          oldRpcEndpoint: existingRpcEndpointForReplaceWhenChainChanged,\n          newRpcEndpoint\n        });\n      } else if (existingRpcEndpointForNoop !== void 0) {\n        let newRpcEndpoint;\n        if (existingRpcEndpointForNoop.type === \"infura\" /* Infura */) {\n          newRpcEndpoint = existingRpcEndpointForNoop;\n        } else {\n          newRpcEndpoint = Object.assign({}, newRpcEndpointFields, {\n            networkClientId: existingRpcEndpointForNoop.networkClientId\n          });\n        }\n        networkClientOperations.push({\n          type: \"noop\",\n          rpcEndpoint: newRpcEndpoint\n        });\n      } else if (existingRpcEndpointForReplaceWhenChainNotChanged !== void 0) {\n        let newRpcEndpoint;\n        if (newRpcEndpointFields.type === \"infura\" /* Infura */) {\n          newRpcEndpoint = newRpcEndpointFields;\n        } else {\n          newRpcEndpoint = {\n            ...newRpcEndpointFields,\n            networkClientId: _uuid.v4.call(void 0, )\n          };\n        }\n        networkClientOperations.push({\n          type: \"replace\",\n          oldRpcEndpoint: existingRpcEndpointForReplaceWhenChainNotChanged,\n          newRpcEndpoint\n        });\n      } else {\n        const newRpcEndpoint = newRpcEndpointFields.type === \"infura\" /* Infura */ ? newRpcEndpointFields : { ...newRpcEndpointFields, networkClientId: _uuid.v4.call(void 0, ) };\n        const networkClientOperation = {\n          type: \"add\",\n          rpcEndpoint: newRpcEndpoint\n        };\n        networkClientOperations.push(networkClientOperation);\n      }\n    }\n    for (const existingRpcEndpoint of existingNetworkConfiguration.rpcEndpoints) {\n      if (!networkClientOperations.some((networkClientOperation) => {\n        const otherRpcEndpoint = networkClientOperation.type === \"replace\" ? networkClientOperation.oldRpcEndpoint : networkClientOperation.rpcEndpoint;\n        return otherRpcEndpoint.type === existingRpcEndpoint.type && otherRpcEndpoint.networkClientId === existingRpcEndpoint.networkClientId && otherRpcEndpoint.url === existingRpcEndpoint.url;\n      })) {\n        const networkClientOperation = {\n          type: \"remove\",\n          rpcEndpoint: existingRpcEndpoint\n        };\n        networkClientOperations.push(networkClientOperation);\n      }\n    }\n    const updatedNetworkConfiguration = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _determineNetworkConfigurationToPersist, determineNetworkConfigurationToPersist_fn).call(this, {\n      networkFields: fields,\n      networkClientOperations\n    });\n    if (replacementSelectedRpcEndpointIndex === void 0 && networkClientOperations.some((networkClientOperation) => {\n      return networkClientOperation.type === \"remove\" && networkClientOperation.rpcEndpoint.networkClientId === this.state.selectedNetworkClientId;\n    }) && !networkClientOperations.some((networkClientOperation) => {\n      return networkClientOperation.type === \"replace\" && networkClientOperation.oldRpcEndpoint.networkClientId === this.state.selectedNetworkClientId;\n    })) {\n      throw new Error(\n        // False negative - this is a string.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Could not update network: Cannot update RPC endpoints in such a way that the selected network '${this.state.selectedNetworkClientId}' would be removed without a replacement. Choose a different RPC endpoint as the selected network via the \\`replacementSelectedRpcEndpointIndex\\` option.`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _registerNetworkClientsAsNeeded, registerNetworkClientsAsNeeded_fn).call(this, {\n      networkFields: fields,\n      networkClientOperations,\n      autoManagedNetworkClientRegistry\n    });\n    const replacementSelectedRpcEndpointWithIndex = networkClientOperations.map(\n      (networkClientOperation, index) => [networkClientOperation, index]\n    ).find(([networkClientOperation, _index]) => {\n      return networkClientOperation.type === \"replace\" && networkClientOperation.oldRpcEndpoint.networkClientId === this.state.selectedNetworkClientId;\n    });\n    const correctedReplacementSelectedRpcEndpointIndex = replacementSelectedRpcEndpointIndex ?? replacementSelectedRpcEndpointWithIndex?.[1];\n    let rpcEndpointToSelect;\n    if (correctedReplacementSelectedRpcEndpointIndex !== void 0) {\n      rpcEndpointToSelect = updatedNetworkConfiguration.rpcEndpoints[correctedReplacementSelectedRpcEndpointIndex];\n      if (rpcEndpointToSelect === void 0) {\n        throw new Error(\n          `Could not update network: \\`replacementSelectedRpcEndpointIndex\\` ${correctedReplacementSelectedRpcEndpointIndex} does not refer to an entry in \\`rpcEndpoints\\``\n        );\n      }\n    }\n    if (rpcEndpointToSelect && rpcEndpointToSelect.networkClientId !== this.state.selectedNetworkClientId) {\n      await this.setActiveNetwork(rpcEndpointToSelect.networkClientId, {\n        updateState: (state) => {\n          _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNetworkConfigurations, updateNetworkConfigurations_fn).call(this, {\n            state,\n            mode: \"update\",\n            networkFields: fields,\n            networkConfigurationToPersist: updatedNetworkConfiguration,\n            existingNetworkConfiguration\n          });\n        }\n      });\n    } else {\n      this.update((state) => {\n        _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNetworkConfigurations, updateNetworkConfigurations_fn).call(this, {\n          state,\n          mode: \"update\",\n          networkFields: fields,\n          networkConfigurationToPersist: updatedNetworkConfiguration,\n          existingNetworkConfiguration\n        });\n      });\n    }\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _networkConfigurationsByNetworkClientId, buildNetworkConfigurationsByNetworkClientId(\n      this.state.networkConfigurationsByChainId\n    ));\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _unregisterNetworkClientsAsNeeded, unregisterNetworkClientsAsNeeded_fn).call(this, {\n      networkClientOperations,\n      autoManagedNetworkClientRegistry\n    });\n    return updatedNetworkConfiguration;\n  }\n  /**\n   * Destroys and unregisters the network identified by the given chain ID, also\n   * removing the associated network configuration from state.\n   *\n   * @param chainId - The chain ID associated with an existing network.\n   * @throws if `chainId` does not refer to an existing network configuration,\n   * or if the currently selected network is being removed.\n   * @see {@link NetworkConfiguration}\n   */\n  removeNetwork(chainId) {\n    const existingNetworkConfiguration = this.state.networkConfigurationsByChainId[chainId];\n    if (existingNetworkConfiguration === void 0) {\n      throw new Error(\n        `Cannot find network configuration for chain ${_util.inspect.call(void 0, chainId)}`\n      );\n    }\n    if (existingNetworkConfiguration.rpcEndpoints.some(\n      (rpcEndpoint) => rpcEndpoint.networkClientId === this.state.selectedNetworkClientId\n    )) {\n      throw new Error(`Cannot remove the currently selected network`);\n    }\n    const autoManagedNetworkClientRegistry = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _ensureAutoManagedNetworkClientRegistryPopulated, ensureAutoManagedNetworkClientRegistryPopulated_fn).call(this);\n    const networkClientOperations = existingNetworkConfiguration.rpcEndpoints.map((rpcEndpoint) => {\n      return {\n        type: \"remove\",\n        rpcEndpoint\n      };\n    });\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _unregisterNetworkClientsAsNeeded, unregisterNetworkClientsAsNeeded_fn).call(this, {\n      networkClientOperations,\n      autoManagedNetworkClientRegistry\n    });\n    this.update((state) => {\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNetworkConfigurations, updateNetworkConfigurations_fn).call(this, {\n        state,\n        mode: \"remove\",\n        existingNetworkConfiguration\n      });\n    });\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _networkConfigurationsByNetworkClientId, buildNetworkConfigurationsByNetworkClientId(\n      this.state.networkConfigurationsByChainId\n    ));\n  }\n  /**\n   * Assuming that the network has been previously switched, switches to this\n   * new network.\n   *\n   * If the network has not been previously switched, this method is equivalent\n   * to {@link resetConnection}.\n   */\n  async rollbackToPreviousProvider() {\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _refreshNetwork, refreshNetwork_fn).call(this, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _previouslySelectedNetworkClientId));\n  }\n  /**\n   * Deactivates the controller, stopping any ongoing polling.\n   *\n   * In-progress requests will not be aborted.\n   */\n  async destroy() {\n    await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _blockTrackerProxy)?.destroy();\n  }\n  /**\n   * Merges the given backup data into controller state.\n   *\n   * @param backup - The data that has been backed up.\n   * @param backup.networkConfigurationsByChainId - Network configurations,\n   * keyed by chain ID.\n   */\n  loadBackup({\n    networkConfigurationsByChainId\n  }) {\n    this.update((state) => {\n      state.networkConfigurationsByChainId = {\n        ...state.networkConfigurationsByChainId,\n        ...networkConfigurationsByChainId\n      };\n    });\n  }\n  /**\n   * Searches for a network configuration ID with the given ChainID and returns it.\n   *\n   * @param chainId - ChainId to search for\n   * @returns networkClientId of the network configuration with the given chainId\n   */\n  findNetworkClientIdByChainId(chainId) {\n    const networkClients = this.getNetworkClientRegistry();\n    const networkClientEntry = Object.entries(networkClients).find(\n      ([_, networkClient]) => networkClient.configuration.chainId === chainId\n    );\n    if (networkClientEntry === void 0) {\n      throw new Error(\"Couldn't find networkClientId for chainId\");\n    }\n    return networkClientEntry[0];\n  }\n};\n_ethQuery = new WeakMap();\n_infuraProjectId = new WeakMap();\n_previouslySelectedNetworkClientId = new WeakMap();\n_providerProxy = new WeakMap();\n_blockTrackerProxy = new WeakMap();\n_autoManagedNetworkClientRegistry = new WeakMap();\n_autoManagedNetworkClient = new WeakMap();\n_log = new WeakMap();\n_networkConfigurationsByNetworkClientId = new WeakMap();\n_refreshNetwork = new WeakSet();\nrefreshNetwork_fn = async function(networkClientId, options = {}) {\n  this.messagingSystem.publish(\n    \"NetworkController:networkWillChange\",\n    this.state\n  );\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _applyNetworkSelection, applyNetworkSelection_fn).call(this, networkClientId, options);\n  this.messagingSystem.publish(\n    \"NetworkController:networkDidChange\",\n    this.state\n  );\n  await this.lookupNetwork();\n};\n_getLatestBlock = new WeakSet();\ngetLatestBlock_fn = function(networkClientId) {\n  if (networkClientId === void 0) {\n    networkClientId = this.state.selectedNetworkClientId;\n  }\n  const networkClient = this.getNetworkClientById(networkClientId);\n  const ethQuery = new (0, _ethquery2.default)(networkClient.provider);\n  return new Promise((resolve, reject) => {\n    ethQuery.sendAsync(\n      { method: \"eth_getBlockByNumber\", params: [\"latest\", false] },\n      (error, block) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(block);\n        }\n      }\n    );\n  });\n};\n_determineEIP1559Compatibility = new WeakSet();\ndetermineEIP1559Compatibility_fn = async function(networkClientId) {\n  const latestBlock = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getLatestBlock, getLatestBlock_fn).call(this, networkClientId);\n  if (!latestBlock) {\n    return void 0;\n  }\n  return latestBlock.baseFeePerGas !== void 0;\n};\n_validateNetworkFields = new WeakSet();\nvalidateNetworkFields_fn = function(args) {\n  const { mode, networkFields, autoManagedNetworkClientRegistry } = args;\n  const existingNetworkConfiguration = \"existingNetworkConfiguration\" in args ? args.existingNetworkConfiguration : null;\n  const errorMessagePrefix = mode === \"update\" ? \"Could not update network\" : \"Could not add network\";\n  if (!_utils.isStrictHexString.call(void 0, networkFields.chainId) || !_controllerutils.isSafeChainId.call(void 0, networkFields.chainId)) {\n    throw new Error(\n      `${errorMessagePrefix}: Invalid \\`chainId\\` ${_util.inspect.call(void 0, \n        networkFields.chainId\n      )} (must start with \"0x\" and not exceed the maximum)`\n    );\n  }\n  if (existingNetworkConfiguration === null || networkFields.chainId !== existingNetworkConfiguration.chainId) {\n    const existingNetworkConfigurationViaChainId = this.state.networkConfigurationsByChainId[networkFields.chainId];\n    if (existingNetworkConfigurationViaChainId !== void 0) {\n      if (existingNetworkConfiguration === null) {\n        throw new Error(\n          // False negative - these are strings.\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `Could not add network for chain ${args.networkFields.chainId} as another network for that chain already exists ('${existingNetworkConfigurationViaChainId.name}')`\n        );\n      } else {\n        throw new Error(\n          // False negative - these are strings.\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `Cannot move network from chain ${existingNetworkConfiguration.chainId} to ${networkFields.chainId} as another network for that chain already exists ('${existingNetworkConfigurationViaChainId.name}')`\n        );\n      }\n    }\n  }\n  const isInvalidDefaultBlockExplorerUrlIndex = networkFields.blockExplorerUrls.length > 0 ? networkFields.defaultBlockExplorerUrlIndex === void 0 || networkFields.blockExplorerUrls[networkFields.defaultBlockExplorerUrlIndex] === void 0 : networkFields.defaultBlockExplorerUrlIndex !== void 0;\n  if (isInvalidDefaultBlockExplorerUrlIndex) {\n    throw new Error(\n      `${errorMessagePrefix}: \\`defaultBlockExplorerUrlIndex\\` must refer to an entry in \\`blockExplorerUrls\\``\n    );\n  }\n  if (networkFields.rpcEndpoints.length === 0) {\n    throw new Error(\n      `${errorMessagePrefix}: \\`rpcEndpoints\\` must be a non-empty array`\n    );\n  }\n  for (const rpcEndpointFields of networkFields.rpcEndpoints) {\n    if (!isValidUrl(rpcEndpointFields.url)) {\n      throw new Error(\n        `${errorMessagePrefix}: An entry in \\`rpcEndpoints\\` has invalid URL ${_util.inspect.call(void 0, \n          rpcEndpointFields.url\n        )}`\n      );\n    }\n    const networkClientId = \"networkClientId\" in rpcEndpointFields ? rpcEndpointFields.networkClientId : void 0;\n    if (rpcEndpointFields.type === \"custom\" /* Custom */ && networkClientId !== void 0 && _controllerutils.isInfuraNetworkType.call(void 0, networkClientId)) {\n      throw new Error(\n        // This is a string.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${errorMessagePrefix}: Custom RPC endpoint '${rpcEndpointFields.url}' has invalid network client ID '${networkClientId}'`\n      );\n    }\n    if (mode === \"update\" && networkClientId !== void 0 && rpcEndpointFields.type === \"custom\" /* Custom */ && !Object.values(autoManagedNetworkClientRegistry).some(\n      (networkClientsById) => networkClientId in networkClientsById\n    )) {\n      throw new Error(\n        `${errorMessagePrefix}: RPC endpoint '${// This is a string.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        rpcEndpointFields.url}' refers to network client ${_util.inspect.call(void 0, \n          networkClientId\n        )} that does not exist`\n      );\n    }\n    if (networkFields.rpcEndpoints.some(\n      (otherRpcEndpointFields) => otherRpcEndpointFields !== rpcEndpointFields && URI.equal(otherRpcEndpointFields.url, rpcEndpointFields.url)\n    )) {\n      throw new Error(\n        `${errorMessagePrefix}: Each entry in rpcEndpoints must have a unique URL`\n      );\n    }\n    const networkConfigurationsForOtherChains = Object.values(\n      this.state.networkConfigurationsByChainId\n    ).filter(\n      (networkConfiguration) => existingNetworkConfiguration ? networkConfiguration.chainId !== existingNetworkConfiguration.chainId : true\n    );\n    for (const networkConfiguration of networkConfigurationsForOtherChains) {\n      const rpcEndpoint = networkConfiguration.rpcEndpoints.find(\n        (existingRpcEndpoint) => URI.equal(rpcEndpointFields.url, existingRpcEndpoint.url)\n      );\n      if (rpcEndpoint) {\n        throw new Error(\n          mode === \"update\" ? (\n            // False negative - these are strings.\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `Could not update network to point to same RPC endpoint as existing network for chain ${networkConfiguration.chainId} ('${networkConfiguration.name}')`\n          ) : (\n            // False negative - these are strings.\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `Could not add network that points to same RPC endpoint as existing network for chain ${networkConfiguration.chainId} ('${networkConfiguration.name}')`\n          )\n        );\n      }\n    }\n  }\n  if ([...new Set(networkFields.rpcEndpoints)].length < networkFields.rpcEndpoints.length) {\n    throw new Error(\n      `${errorMessagePrefix}: Each entry in rpcEndpoints must be unique`\n    );\n  }\n  const networkClientIds = networkFields.rpcEndpoints.map(\n    (rpcEndpoint) => \"networkClientId\" in rpcEndpoint ? rpcEndpoint.networkClientId : void 0\n  ).filter(\n    (networkClientId) => networkClientId !== void 0\n  );\n  if ([...new Set(networkClientIds)].length < networkClientIds.length) {\n    throw new Error(\n      `${errorMessagePrefix}: Each entry in rpcEndpoints must have a unique networkClientId`\n    );\n  }\n  const infuraRpcEndpoints = networkFields.rpcEndpoints.filter(\n    (rpcEndpointFields) => rpcEndpointFields.type === \"infura\" /* Infura */\n  );\n  if (infuraRpcEndpoints.length > 1) {\n    throw new Error(\n      `${errorMessagePrefix}: There cannot be more than one Infura RPC endpoint`\n    );\n  }\n  const soleInfuraRpcEndpoint = infuraRpcEndpoints[0];\n  if (soleInfuraRpcEndpoint) {\n    const infuraNetworkName = deriveInfuraNetworkNameFromRpcEndpointUrl(\n      soleInfuraRpcEndpoint.url\n    );\n    const infuraNetworkNickname = _controllerutils.NetworkNickname[infuraNetworkName];\n    const infuraChainId = _controllerutils.ChainId[infuraNetworkName];\n    if (networkFields.chainId !== infuraChainId) {\n      throw new Error(\n        mode === \"add\" ? (\n          // This is a string.\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `Could not add network with chain ID ${networkFields.chainId} and Infura RPC endpoint for '${infuraNetworkNickname}' which represents ${infuraChainId}, as the two conflict`\n        ) : (\n          // This is a string.\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `Could not update network with chain ID ${networkFields.chainId} and Infura RPC endpoint for '${infuraNetworkNickname}' which represents ${infuraChainId}, as the two conflict`\n        )\n      );\n    }\n  }\n  if (networkFields.rpcEndpoints[networkFields.defaultRpcEndpointIndex] === void 0) {\n    throw new Error(\n      `${errorMessagePrefix}: \\`defaultRpcEndpointIndex\\` must refer to an entry in \\`rpcEndpoints\\``\n    );\n  }\n};\n_determineNetworkConfigurationToPersist = new WeakSet();\ndetermineNetworkConfigurationToPersist_fn = function({\n  networkFields,\n  networkClientOperations\n}) {\n  const rpcEndpointsToPersist = networkClientOperations.filter(\n    (networkClientOperation) => {\n      return networkClientOperation.type === \"add\" || networkClientOperation.type === \"noop\";\n    }\n  ).map((networkClientOperation) => networkClientOperation.rpcEndpoint).concat(\n    networkClientOperations.filter(\n      (networkClientOperation) => {\n        return networkClientOperation.type === \"replace\";\n      }\n    ).map(\n      (networkClientOperation) => networkClientOperation.newRpcEndpoint\n    )\n  );\n  return { ...networkFields, rpcEndpoints: rpcEndpointsToPersist };\n};\n_registerNetworkClientsAsNeeded = new WeakSet();\nregisterNetworkClientsAsNeeded_fn = function({\n  networkFields,\n  networkClientOperations,\n  autoManagedNetworkClientRegistry\n}) {\n  const addedRpcEndpoints = networkClientOperations.filter(\n    (networkClientOperation) => {\n      return networkClientOperation.type === \"add\";\n    }\n  ).map((networkClientOperation) => networkClientOperation.rpcEndpoint).concat(\n    networkClientOperations.filter(\n      (networkClientOperation) => {\n        return networkClientOperation.type === \"replace\";\n      }\n    ).map(\n      (networkClientOperation) => networkClientOperation.newRpcEndpoint\n    )\n  );\n  for (const addedRpcEndpoint of addedRpcEndpoints) {\n    if (addedRpcEndpoint.type === \"infura\" /* Infura */) {\n      autoManagedNetworkClientRegistry[\"infura\" /* Infura */][addedRpcEndpoint.networkClientId] = _chunkLLMZDA4Qjs.createAutoManagedNetworkClient.call(void 0, {\n        type: \"infura\" /* Infura */,\n        chainId: networkFields.chainId,\n        network: addedRpcEndpoint.networkClientId,\n        infuraProjectId: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _infuraProjectId),\n        ticker: networkFields.nativeCurrency\n      });\n    } else {\n      autoManagedNetworkClientRegistry[\"custom\" /* Custom */][addedRpcEndpoint.networkClientId] = _chunkLLMZDA4Qjs.createAutoManagedNetworkClient.call(void 0, {\n        type: \"custom\" /* Custom */,\n        chainId: networkFields.chainId,\n        rpcUrl: addedRpcEndpoint.url,\n        ticker: networkFields.nativeCurrency\n      });\n    }\n  }\n};\n_unregisterNetworkClientsAsNeeded = new WeakSet();\nunregisterNetworkClientsAsNeeded_fn = function({\n  networkClientOperations,\n  autoManagedNetworkClientRegistry\n}) {\n  const removedRpcEndpoints = networkClientOperations.filter(\n    (networkClientOperation) => {\n      return networkClientOperation.type === \"remove\";\n    }\n  ).map((networkClientOperation) => networkClientOperation.rpcEndpoint).concat(\n    networkClientOperations.filter(\n      (networkClientOperation) => {\n        return networkClientOperation.type === \"replace\";\n      }\n    ).map(\n      (networkClientOperation) => networkClientOperation.oldRpcEndpoint\n    )\n  );\n  for (const rpcEndpoint of removedRpcEndpoints) {\n    const networkClient = this.getNetworkClientById(\n      rpcEndpoint.networkClientId\n    );\n    networkClient.destroy();\n    delete autoManagedNetworkClientRegistry[networkClient.configuration.type][rpcEndpoint.networkClientId];\n  }\n};\n_updateNetworkConfigurations = new WeakSet();\nupdateNetworkConfigurations_fn = function(args) {\n  const { state, mode } = args;\n  if (mode === \"remove\" || mode === \"update\" && args.networkFields.chainId !== args.existingNetworkConfiguration.chainId) {\n    delete state.networkConfigurationsByChainId[args.existingNetworkConfiguration.chainId];\n  }\n  if (mode === \"add\" || mode === \"update\") {\n    state.networkConfigurationsByChainId[args.networkFields.chainId] = args.networkConfigurationToPersist;\n  }\n};\n_ensureAutoManagedNetworkClientRegistryPopulated = new WeakSet();\nensureAutoManagedNetworkClientRegistryPopulated_fn = function() {\n  return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _autoManagedNetworkClientRegistry) ?? _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _autoManagedNetworkClientRegistry, _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _createAutoManagedNetworkClientRegistry, createAutoManagedNetworkClientRegistry_fn).call(this));\n};\n_createAutoManagedNetworkClientRegistry = new WeakSet();\ncreateAutoManagedNetworkClientRegistry_fn = function() {\n  const chainIds = knownKeysOf(this.state.networkConfigurationsByChainId);\n  const networkClientsWithIds = chainIds.flatMap((chainId) => {\n    const networkConfiguration = this.state.networkConfigurationsByChainId[chainId];\n    return networkConfiguration.rpcEndpoints.map((rpcEndpoint) => {\n      if (rpcEndpoint.type === \"infura\" /* Infura */) {\n        const infuraNetworkName = deriveInfuraNetworkNameFromRpcEndpointUrl(\n          rpcEndpoint.url\n        );\n        return [\n          rpcEndpoint.networkClientId,\n          _chunkLLMZDA4Qjs.createAutoManagedNetworkClient.call(void 0, {\n            type: \"infura\" /* Infura */,\n            network: infuraNetworkName,\n            infuraProjectId: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _infuraProjectId),\n            chainId: networkConfiguration.chainId,\n            ticker: networkConfiguration.nativeCurrency\n          })\n        ];\n      }\n      return [\n        rpcEndpoint.networkClientId,\n        _chunkLLMZDA4Qjs.createAutoManagedNetworkClient.call(void 0, {\n          type: \"custom\" /* Custom */,\n          chainId: networkConfiguration.chainId,\n          rpcUrl: rpcEndpoint.url,\n          ticker: networkConfiguration.nativeCurrency\n        })\n      ];\n    });\n  });\n  return networkClientsWithIds.reduce(\n    (obj, [networkClientId, networkClient]) => {\n      return {\n        ...obj,\n        [networkClient.configuration.type]: {\n          ...obj[networkClient.configuration.type],\n          [networkClientId]: networkClient\n        }\n      };\n    },\n    {\n      [\"custom\" /* Custom */]: {},\n      [\"infura\" /* Infura */]: {}\n    }\n  );\n};\n_applyNetworkSelection = new WeakSet();\napplyNetworkSelection_fn = function(networkClientId, {\n  updateState\n} = {}) {\n  const autoManagedNetworkClientRegistry = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _ensureAutoManagedNetworkClientRegistryPopulated, ensureAutoManagedNetworkClientRegistryPopulated_fn).call(this);\n  let autoManagedNetworkClient;\n  if (_controllerutils.isInfuraNetworkType.call(void 0, networkClientId)) {\n    const possibleAutoManagedNetworkClient = autoManagedNetworkClientRegistry[\"infura\" /* Infura */][networkClientId];\n    if (!possibleAutoManagedNetworkClient) {\n      throw new Error(\n        `No Infura network client found with ID ${_util.inspect.call(void 0, networkClientId)}`\n      );\n    }\n    autoManagedNetworkClient = possibleAutoManagedNetworkClient;\n  } else {\n    const possibleAutoManagedNetworkClient = autoManagedNetworkClientRegistry[\"custom\" /* Custom */][networkClientId];\n    if (!possibleAutoManagedNetworkClient) {\n      throw new Error(\n        `No network client found with ID ${_util.inspect.call(void 0, networkClientId)}`\n      );\n    }\n    autoManagedNetworkClient = possibleAutoManagedNetworkClient;\n  }\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _autoManagedNetworkClient, autoManagedNetworkClient);\n  this.update((state) => {\n    state.selectedNetworkClientId = networkClientId;\n    if (state.networksMetadata[networkClientId] === void 0) {\n      state.networksMetadata[networkClientId] = {\n        status: \"unknown\" /* Unknown */,\n        EIPS: {}\n      };\n    }\n    updateState?.(state);\n  });\n  if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providerProxy)) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providerProxy).setTarget(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _autoManagedNetworkClient).provider);\n  } else {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _providerProxy, _swappableobjproxy.createEventEmitterProxy.call(void 0, \n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _autoManagedNetworkClient).provider\n    ));\n  }\n  if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _blockTrackerProxy)) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _blockTrackerProxy).setTarget(\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _autoManagedNetworkClient).blockTracker\n    );\n  } else {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _blockTrackerProxy, _swappableobjproxy.createEventEmitterProxy.call(void 0, \n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _autoManagedNetworkClient).blockTracker,\n      { eventFilter: \"skipInternal\" }\n    ));\n  }\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _ethQuery, new (0, _ethquery2.default)(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _providerProxy)));\n};\n\n\n\n\n\n\n\n\n\nexports.RpcEndpointType = RpcEndpointType; exports.knownKeysOf = knownKeysOf; exports.getDefaultNetworkControllerState = getDefaultNetworkControllerState; exports.getNetworkConfigurations = getNetworkConfigurations; exports.getAvailableNetworkClientIds = getAvailableNetworkClientIds; exports.selectAvailableNetworkClientIds = selectAvailableNetworkClientIds; exports.NetworkController = NetworkController;\n//# sourceMappingURL=chunk-YOHMQPGM.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/constants.ts\nvar NetworkStatus = /* @__PURE__ */ ((NetworkStatus2) => {\n  NetworkStatus2[\"Unknown\"] = \"unknown\";\n  NetworkStatus2[\"Available\"] = \"available\";\n  NetworkStatus2[\"Unavailable\"] = \"unavailable\";\n  NetworkStatus2[\"Blocked\"] = \"blocked\";\n  return NetworkStatus2;\n})(NetworkStatus || {});\nvar INFURA_BLOCKED_KEY = \"countryBlocked\";\n\n\n\n\nexports.NetworkStatus = NetworkStatus; exports.INFURA_BLOCKED_KEY = INFURA_BLOCKED_KEY;\n//# sourceMappingURL=chunk-ZKNI7MD3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\n\nvar _chunkYOHMQPGMjs = require('./chunk-YOHMQPGM.js');\n\n\n\nvar _chunkZKNI7MD3js = require('./chunk-ZKNI7MD3.js');\nrequire('./chunk-LLMZDA4Q.js');\nrequire('./chunk-E4V6XEBR.js');\nrequire('./chunk-VGYLDDJB.js');\n\n\nvar _chunkKHZTS7TFjs = require('./chunk-KHZTS7TF.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\n\n\nexports.INFURA_BLOCKED_KEY = _chunkZKNI7MD3js.INFURA_BLOCKED_KEY; exports.NetworkClientType = _chunkKHZTS7TFjs.NetworkClientType; exports.NetworkController = _chunkYOHMQPGMjs.NetworkController; exports.NetworkStatus = _chunkZKNI7MD3js.NetworkStatus; exports.RpcEndpointType = _chunkYOHMQPGMjs.RpcEndpointType; exports.getDefaultNetworkControllerState = _chunkYOHMQPGMjs.getDefaultNetworkControllerState; exports.knownKeysOf = _chunkYOHMQPGMjs.knownKeysOf; exports.selectAvailableNetworkClientIds = _chunkYOHMQPGMjs.selectAvailableNetworkClientIds;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBlockCacheMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst logging_utils_1 = require(\"./logging-utils\");\nconst cache_1 = require(\"./utils/cache\");\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'block-cache');\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [undefined, null, '\\u003cnil\\u003e'];\n//\n// Cache Strategies\n//\nclass BlockCacheStrategy {\n    constructor() {\n        this.cache = {};\n    }\n    getBlockCache(blockNumberHex) {\n        const blockNumber = Number.parseInt(blockNumberHex, 16);\n        let blockCache = this.cache[blockNumber];\n        // create new cache if necesary\n        if (!blockCache) {\n            const newCache = {};\n            this.cache[blockNumber] = newCache;\n            blockCache = newCache;\n        }\n        return blockCache;\n    }\n    async get(request, requestedBlockNumber) {\n        // lookup block cache\n        const blockCache = this.getBlockCache(requestedBlockNumber);\n        // lookup payload in block cache\n        const identifier = (0, cache_1.cacheIdentifierForRequest)(request, true);\n        return identifier ? blockCache[identifier] : undefined;\n    }\n    async set(request, requestedBlockNumber, result) {\n        // check if we can cached this result\n        const canCacheResult = this.canCacheResult(request, result);\n        if (!canCacheResult) {\n            return;\n        }\n        // set the value in the cache\n        const identifier = (0, cache_1.cacheIdentifierForRequest)(request, true);\n        if (!identifier) {\n            return;\n        }\n        const blockCache = this.getBlockCache(requestedBlockNumber);\n        blockCache[identifier] = result;\n    }\n    canCacheRequest(request) {\n        // check request method\n        if (!(0, cache_1.canCache)(request.method)) {\n            return false;\n        }\n        // check blockTag\n        const blockTag = (0, cache_1.blockTagForRequest)(request);\n        if (blockTag === 'pending') {\n            return false;\n        }\n        // can be cached\n        return true;\n    }\n    canCacheResult(request, result) {\n        // never cache empty values (e.g. undefined)\n        if (emptyValues.includes(result)) {\n            return false;\n        }\n        // check if transactions have block reference before caching\n        if (request.method &&\n            ['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(request.method)) {\n            if (!result ||\n                !result.blockHash ||\n                result.blockHash ===\n                    '0x0000000000000000000000000000000000000000000000000000000000000000') {\n                return false;\n            }\n        }\n        // otherwise true\n        return true;\n    }\n    // removes all block caches with block number lower than `oldBlockHex`\n    clearBefore(oldBlockHex) {\n        const oldBlockNumber = Number.parseInt(oldBlockHex, 16);\n        // clear old caches\n        Object.keys(this.cache)\n            .map(Number)\n            .filter((num) => num < oldBlockNumber)\n            .forEach((num) => delete this.cache[num]);\n    }\n}\nfunction createBlockCacheMiddleware({ blockTracker, } = {}) {\n    // validate options\n    if (!blockTracker) {\n        throw new Error('createBlockCacheMiddleware - No PollingBlockTracker specified');\n    }\n    // create caching strategies\n    const blockCache = new BlockCacheStrategy();\n    const strategies = {\n        [cache_1.CacheStrategy.Permanent]: blockCache,\n        [cache_1.CacheStrategy.Block]: blockCache,\n        [cache_1.CacheStrategy.Fork]: blockCache,\n        [cache_1.CacheStrategy.Never]: undefined,\n    };\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, res, next) => {\n        // allow cach to be skipped if so specified\n        if (req.skipCache) {\n            return next();\n        }\n        // check type and matching strategy\n        const type = (0, cache_1.cacheTypeForMethod)(req.method);\n        const strategy = strategies[type];\n        // If there's no strategy in place, pass it down the chain.\n        if (!strategy) {\n            return next();\n        }\n        // If the strategy can't cache this request, ignore it.\n        if (!strategy.canCacheRequest(req)) {\n            return next();\n        }\n        // get block reference (number or keyword)\n        const requestBlockTag = (0, cache_1.blockTagForRequest)(req);\n        const blockTag = requestBlockTag && typeof requestBlockTag === 'string'\n            ? requestBlockTag\n            : 'latest';\n        log('blockTag = %o, req = %o', blockTag, req);\n        // get exact block number\n        let requestedBlockNumber;\n        if (blockTag === 'earliest') {\n            // this just exists for symmetry with \"latest\"\n            requestedBlockNumber = '0x00';\n        }\n        else if (blockTag === 'latest') {\n            // fetch latest block number\n            log('Fetching latest block number to determine cache key');\n            const latestBlockNumber = await blockTracker.getLatestBlock();\n            // clear all cache before latest block\n            log('Clearing values stored under block numbers before %o', latestBlockNumber);\n            blockCache.clearBefore(latestBlockNumber);\n            requestedBlockNumber = latestBlockNumber;\n        }\n        else {\n            // We have a hex number\n            requestedBlockNumber = blockTag;\n        }\n        // end on a hit, continue on a miss\n        const cacheResult = await strategy.get(req, requestedBlockNumber);\n        if (cacheResult === undefined) {\n            // cache miss\n            // wait for other middleware to handle request\n            log('No cache stored under block number %o, carrying request forward', requestedBlockNumber);\n            // eslint-disable-next-line n/callback-return\n            await next();\n            // add result to cache\n            // it's safe to cast res.result as Block, due to runtime type checks\n            // performed when strategy.set is called\n            log('Populating cache with', res);\n            await strategy.set(req, requestedBlockNumber, res.result);\n        }\n        else {\n            // fill in result from cache\n            log('Cache hit, reusing cache result stored under block number %o', requestedBlockNumber);\n            res.result = cacheResult;\n        }\n        return undefined;\n    });\n}\nexports.createBlockCacheMiddleware = createBlockCacheMiddleware;\n//# sourceMappingURL=block-cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBlockRefRewriteMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst cache_1 = require(\"./utils/cache\");\nfunction createBlockRefRewriteMiddleware({ blockTracker, } = {}) {\n    if (!blockTracker) {\n        throw Error('BlockRefRewriteMiddleware - mandatory \"blockTracker\" option is missing.');\n    }\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, _res, next) => {\n        const blockRefIndex = (0, cache_1.blockTagParamIndex)(req.method);\n        // skip if method does not include blockRef\n        if (blockRefIndex === undefined) {\n            return next();\n        }\n        // skip if not \"latest\"\n        const blockRef = Array.isArray(req.params) && req.params[blockRefIndex]\n            ? req.params[blockRefIndex]\n            : // omitted blockRef implies \"latest\"\n                'latest';\n        if (blockRef !== 'latest') {\n            return next();\n        }\n        // rewrite blockRef to block-tracker's block number\n        const latestBlockNumber = await blockTracker.getLatestBlock();\n        if (Array.isArray(req.params)) {\n            // eslint-disable-next-line require-atomic-updates\n            req.params[blockRefIndex] = latestBlockNumber;\n        }\n        return next();\n    });\n}\nexports.createBlockRefRewriteMiddleware = createBlockRefRewriteMiddleware;\n//# sourceMappingURL=block-ref-rewrite.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBlockRefMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst full_1 = require(\"klona/full\");\nconst pify_1 = __importDefault(require(\"pify\"));\nconst logging_utils_1 = require(\"./logging-utils\");\nconst cache_1 = require(\"./utils/cache\");\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'block-ref');\nfunction createBlockRefMiddleware({ provider, blockTracker, } = {}) {\n    if (!provider) {\n        throw Error('BlockRefMiddleware - mandatory \"provider\" option is missing.');\n    }\n    if (!blockTracker) {\n        throw Error('BlockRefMiddleware - mandatory \"blockTracker\" option is missing.');\n    }\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, res, next) => {\n        var _a;\n        const blockRefIndex = (0, cache_1.blockTagParamIndex)(req.method);\n        // skip if method does not include blockRef\n        if (blockRefIndex === undefined) {\n            return next();\n        }\n        const blockRef = Array.isArray(req.params)\n            ? (_a = req.params[blockRefIndex]) !== null && _a !== void 0 ? _a : 'latest'\n            : 'latest';\n        // skip if not \"latest\"\n        if (blockRef !== 'latest') {\n            log('blockRef is not \"latest\", carrying request forward');\n            return next();\n        }\n        // lookup latest block\n        const latestBlockNumber = await blockTracker.getLatestBlock();\n        log(`blockRef is \"latest\", setting param ${blockRefIndex} to latest block ${latestBlockNumber}`);\n        // create child request with specific block-ref\n        const childRequest = (0, full_1.klona)(req);\n        if (Array.isArray(childRequest.params)) {\n            childRequest.params[blockRefIndex] = latestBlockNumber;\n        }\n        // perform child request\n        log('Performing another request %o', childRequest);\n        const childRes = await (0, pify_1.default)(provider.sendAsync).call(provider, childRequest);\n        // copy child response onto original response\n        res.result = childRes.result;\n        res.error = childRes.error;\n        return undefined;\n    });\n}\nexports.createBlockRefMiddleware = createBlockRefMiddleware;\n//# sourceMappingURL=block-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBlockTrackerInspectorMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst logging_utils_1 = require(\"./logging-utils\");\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'block-tracker-inspector');\nconst futureBlockRefRequests = [\n    'eth_getTransactionByHash',\n    'eth_getTransactionReceipt',\n];\n/**\n * Determines whether the given object has the given property.\n *\n * @param objectToCheck - The object to check.\n * @param property - The property to look for.\n * @returns Whether the object has the property.\n */\nfunction hasProperty(objectToCheck, property) {\n    return Object.hasOwnProperty.call(objectToCheck, property);\n}\nfunction getResultBlockNumber(response) {\n    const { result } = response;\n    if (!result ||\n        typeof result !== 'object' ||\n        !hasProperty(result, 'blockNumber')) {\n        return undefined;\n    }\n    if (typeof result.blockNumber === 'string') {\n        return result.blockNumber;\n    }\n    return undefined;\n}\n// inspect if response contains a block ref higher than our latest block\nfunction createBlockTrackerInspectorMiddleware({ blockTracker, }) {\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, res, next) => {\n        if (!futureBlockRefRequests.includes(req.method)) {\n            return next();\n        }\n        // eslint-disable-next-line n/callback-return\n        await next();\n        // abort if no result or no block number\n        const responseBlockNumber = getResultBlockNumber(res);\n        if (!responseBlockNumber) {\n            return undefined;\n        }\n        log('res.result.blockNumber exists, proceeding. res = %o', res);\n        // if number is higher, suggest block-tracker check for a new block\n        const blockNumber = Number.parseInt(responseBlockNumber, 16);\n        // Typecast: If getCurrentBlock returns null, currentBlockNumber will be NaN, which is fine.\n        const currentBlockNumber = Number.parseInt(blockTracker.getCurrentBlock(), 16);\n        if (blockNumber > currentBlockNumber) {\n            log('blockNumber from response is greater than current block number, refreshing current block number');\n            await blockTracker.checkForLatestBlock();\n        }\n        return undefined;\n    });\n}\nexports.createBlockTrackerInspectorMiddleware = createBlockTrackerInspectorMiddleware;\n//# sourceMappingURL=block-tracker-inspector.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFetchConfigFromReq = exports.createFetchMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst timeout_1 = require(\"./utils/timeout\");\nconst RETRIABLE_ERRORS = [\n    // ignore server overload errors\n    'Gateway timeout',\n    'ETIMEDOUT',\n    // ignore server sent html error pages\n    // or truncated json responses\n    'failed to parse response body',\n    // ignore errors where http req failed to establish\n    'Failed to fetch',\n];\n/**\n * Create middleware for sending a JSON-RPC request to the given RPC URL.\n *\n * @param options - Options\n * @param options.btoa - Generates a base64-encoded string from a binary string.\n * @param options.fetch - The `fetch` function; expected to be equivalent to `window.fetch`.\n * @param options.rpcUrl - The URL to send the request to.\n * @param options.originHttpHeaderKey - If provider, the origin field for each JSON-RPC request\n * will be attached to each outgoing fetch request under this header.\n * @returns The fetch middleware.\n */\nfunction createFetchMiddleware({ \n// eslint-disable-next-line @typescript-eslint/no-shadow\nbtoa, \n// eslint-disable-next-line @typescript-eslint/no-shadow\nfetch, rpcUrl, originHttpHeaderKey, }) {\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, res, _next) => {\n        const { fetchUrl, fetchParams } = createFetchConfigFromReq({\n            btoa,\n            req,\n            rpcUrl,\n            originHttpHeaderKey,\n        });\n        // attempt request multiple times\n        const maxAttempts = 5;\n        const retryInterval = 1000;\n        for (let attempt = 0; attempt < maxAttempts; attempt++) {\n            try {\n                const fetchRes = await fetch(fetchUrl, fetchParams);\n                // check for http errrors\n                checkForHttpErrors(fetchRes);\n                // parse response body\n                const rawBody = await fetchRes.text();\n                let fetchBody;\n                try {\n                    fetchBody = JSON.parse(rawBody);\n                }\n                catch (_) {\n                    throw new Error(`FetchMiddleware - failed to parse response body: \"${rawBody}\"`);\n                }\n                const result = parseResponse(fetchRes, fetchBody);\n                // set result and exit retry loop\n                res.result = result;\n                return;\n            }\n            catch (err) {\n                const errMsg = err.toString();\n                const isRetriable = RETRIABLE_ERRORS.some((phrase) => errMsg.includes(phrase));\n                // re-throw error if not retriable\n                if (!isRetriable) {\n                    throw err;\n                }\n            }\n            // delay before retrying\n            await (0, timeout_1.timeout)(retryInterval);\n        }\n    });\n}\nexports.createFetchMiddleware = createFetchMiddleware;\nfunction checkForHttpErrors(fetchRes) {\n    // check for errors\n    switch (fetchRes.status) {\n        case 405:\n            throw rpc_errors_1.rpcErrors.methodNotFound();\n        case 418:\n            throw createRatelimitError();\n        case 503:\n        case 504:\n            throw createTimeoutError();\n        default:\n            break;\n    }\n}\nfunction parseResponse(fetchRes, body) {\n    // check for error code\n    if (fetchRes.status !== 200) {\n        throw rpc_errors_1.rpcErrors.internal({\n            message: `Non-200 status code: '${fetchRes.status}'`,\n            data: body,\n        });\n    }\n    // check for rpc error\n    if (body.error) {\n        throw rpc_errors_1.rpcErrors.internal({\n            data: body.error,\n        });\n    }\n    // return successful result\n    return body.result;\n}\n/**\n * Generate `fetch` configuration for sending the given request to an RPC API.\n *\n * @param options - Options\n * @param options.btoa - Generates a base64-encoded string from a binary string.\n * @param options.rpcUrl - The URL to send the request to.\n * @param options.originHttpHeaderKey - If provider, the origin field for each JSON-RPC request\n * will be attached to each outgoing fetch request under this header.\n * @param options.req\n * @returns The fetch middleware.\n */\nfunction createFetchConfigFromReq({ \n// eslint-disable-next-line @typescript-eslint/no-shadow\nbtoa, req, rpcUrl, originHttpHeaderKey, }) {\n    const parsedUrl = new URL(rpcUrl);\n    const fetchUrl = normalizeUrlFromParsed(parsedUrl);\n    // prepare payload\n    // copy only canonical json rpc properties\n    const payload = {\n        id: req.id,\n        jsonrpc: req.jsonrpc,\n        method: req.method,\n        params: req.params,\n    };\n    // extract 'origin' parameter from request\n    const originDomain = req.origin;\n    // serialize request body\n    const serializedPayload = JSON.stringify(payload);\n    // configure fetch params\n    const fetchParams = {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: serializedPayload,\n    };\n    // encoded auth details as header (not allowed in fetch url)\n    if (parsedUrl.username && parsedUrl.password) {\n        const authString = `${parsedUrl.username}:${parsedUrl.password}`;\n        const encodedAuth = btoa(authString);\n        fetchParams.headers.Authorization = `Basic ${encodedAuth}`;\n    }\n    // optional: add request origin as header\n    if (originHttpHeaderKey && originDomain) {\n        fetchParams.headers[originHttpHeaderKey] = originDomain;\n    }\n    return { fetchUrl, fetchParams };\n}\nexports.createFetchConfigFromReq = createFetchConfigFromReq;\nfunction normalizeUrlFromParsed(parsedUrl) {\n    let result = '';\n    result += parsedUrl.protocol;\n    result += `//${parsedUrl.hostname}`;\n    if (parsedUrl.port) {\n        result += `:${parsedUrl.port}`;\n    }\n    result += `${parsedUrl.pathname}`;\n    result += `${parsedUrl.search}`;\n    return result;\n}\nfunction createRatelimitError() {\n    return rpc_errors_1.rpcErrors.internal({ message: `Request is being rate limited.` });\n}\nfunction createTimeoutError() {\n    let msg = `Gateway timeout. The request took too long to process. `;\n    msg += `This can happen when querying logs over too wide a block range.`;\n    return rpc_errors_1.rpcErrors.internal({ message: msg });\n}\n//# sourceMappingURL=fetch.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./block-cache\"), exports);\n__exportStar(require(\"./block-ref-rewrite\"), exports);\n__exportStar(require(\"./block-ref\"), exports);\n__exportStar(require(\"./block-tracker-inspector\"), exports);\n__exportStar(require(\"./fetch\"), exports);\n__exportStar(require(\"./inflight-cache\"), exports);\n__exportStar(require(\"./providerAsMiddleware\"), exports);\n__exportStar(require(\"./retryOnEmpty\"), exports);\n__exportStar(require(\"./wallet\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createInflightCacheMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst full_1 = require(\"klona/full\");\nconst logging_utils_1 = require(\"./logging-utils\");\nconst cache_1 = require(\"./utils/cache\");\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'inflight-cache');\nfunction createInflightCacheMiddleware() {\n    const inflightRequests = {};\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, res, next) => {\n        // allow cach to be skipped if so specified\n        if (req.skipCache) {\n            return next();\n        }\n        // get cacheId, if cacheable\n        const cacheId = (0, cache_1.cacheIdentifierForRequest)(req);\n        // if not cacheable, skip\n        if (!cacheId) {\n            log('Request is not cacheable, proceeding. req = %o', req);\n            return next();\n        }\n        // check for matching requests\n        let activeRequestHandlers = inflightRequests[cacheId];\n        // if found, wait for the active request to be handled\n        if (activeRequestHandlers) {\n            // setup the response listener and wait for it to be called\n            // it will handle copying the result and request fields\n            log('Running %i handler(s) for request %o', activeRequestHandlers.length, req);\n            await createActiveRequestHandler(res, activeRequestHandlers);\n            return undefined;\n        }\n        // setup response handler array for subsequent requests\n        activeRequestHandlers = [];\n        inflightRequests[cacheId] = activeRequestHandlers;\n        // allow request to be handled normally\n        log('Carrying original request forward %o', req);\n        // eslint-disable-next-line n/callback-return\n        await next();\n        // clear inflight requests\n        delete inflightRequests[cacheId];\n        // schedule activeRequestHandlers to be handled\n        log('Running %i collected handler(s) for request %o', activeRequestHandlers.length, req);\n        handleActiveRequest(res, activeRequestHandlers);\n        // complete\n        return undefined;\n    });\n    async function createActiveRequestHandler(res, activeRequestHandlers) {\n        const { resolve, promise } = deferredPromise();\n        activeRequestHandlers.push((handledRes) => {\n            // append a copy of the result and error to the response\n            res.result = (0, full_1.klona)(handledRes.result);\n            res.error = (0, full_1.klona)(handledRes.error);\n            resolve();\n        });\n        return promise;\n    }\n    function handleActiveRequest(res, activeRequestHandlers) {\n        // use setTimeout so we can resolve our original request first\n        setTimeout(() => {\n            activeRequestHandlers.forEach((handler) => {\n                try {\n                    handler(res);\n                }\n                catch (err) {\n                    // catch error so all requests are handled correctly\n                    console.error(err);\n                }\n            });\n        });\n    }\n}\nexports.createInflightCacheMiddleware = createInflightCacheMiddleware;\nfunction deferredPromise() {\n    let resolve;\n    const promise = new Promise((_resolve) => {\n        resolve = _resolve;\n    });\n    return { resolve, promise };\n}\n//# sourceMappingURL=inflight-cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.projectLogger = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nObject.defineProperty(exports, \"createModuleLogger\", { enumerable: true, get: function () { return utils_1.createModuleLogger; } });\nexports.projectLogger = (0, utils_1.createProjectLogger)('eth-json-rpc-middleware');\n//# sourceMappingURL=logging-utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethersProviderAsMiddleware = exports.providerAsMiddleware = void 0;\nfunction providerAsMiddleware(provider) {\n    return (req, res, _next, end) => {\n        // send request to provider\n        provider.sendAsync(req, (err, providerRes) => {\n            // forward any error\n            if (err instanceof Error) {\n                return end(err);\n            }\n            // copy provider response onto original response\n            Object.assign(res, providerRes);\n            return end();\n        });\n    };\n}\nexports.providerAsMiddleware = providerAsMiddleware;\nfunction ethersProviderAsMiddleware(provider) {\n    return (req, res, _next, end) => {\n        // send request to provider\n        provider.send(req, (err, providerRes) => {\n            // forward any error\n            if (err) {\n                // TODO: Remove this cast when next major `@metamask/json-rpc-engine` release is out\n                // The next release changes how errors are propogated.\n                return end(err);\n            }\n            // copy provider response onto original response\n            Object.assign(res, providerRes);\n            return end();\n        });\n    };\n}\nexports.ethersProviderAsMiddleware = ethersProviderAsMiddleware;\n//# sourceMappingURL=providerAsMiddleware.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRetryOnEmptyMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst full_1 = require(\"klona/full\");\nconst pify_1 = __importDefault(require(\"pify\"));\nconst logging_utils_1 = require(\"./logging-utils\");\nconst cache_1 = require(\"./utils/cache\");\nconst error_1 = require(\"./utils/error\");\nconst timeout_1 = require(\"./utils/timeout\");\n//\n// RetryOnEmptyMiddleware will retry any request with an empty response that has\n// a numbered block reference at or lower than the blockTracker's latest block.\n// Its useful for dealing with load-balanced ethereum JSON RPC\n// nodes that are not always in sync with each other.\n//\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'retry-on-empty');\n// empty values used to determine if a request should be retried\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [\n    undefined,\n    null,\n    '\\u003cnil\\u003e',\n];\nfunction createRetryOnEmptyMiddleware({ provider, blockTracker, } = {}) {\n    if (!provider) {\n        throw Error('RetryOnEmptyMiddleware - mandatory \"provider\" option is missing.');\n    }\n    if (!blockTracker) {\n        throw Error('RetryOnEmptyMiddleware - mandatory \"blockTracker\" option is missing.');\n    }\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, res, next) => {\n        const blockRefIndex = (0, cache_1.blockTagParamIndex)(req.method);\n        // skip if method does not include blockRef\n        if (blockRefIndex === undefined) {\n            return next();\n        }\n        // skip if not exact block references\n        let blockRef = Array.isArray(req.params) && req.params[blockRefIndex]\n            ? req.params[blockRefIndex]\n            : undefined;\n        // omitted blockRef implies \"latest\"\n        if (blockRef === undefined) {\n            blockRef = 'latest';\n        }\n        // skip if non-number block reference\n        if (['latest', 'pending'].includes(blockRef)) {\n            return next();\n        }\n        // skip if block refernce is not a valid number\n        const blockRefNumber = Number.parseInt(blockRef.slice(2), 16);\n        if (Number.isNaN(blockRefNumber)) {\n            return next();\n        }\n        // lookup latest block\n        const latestBlockNumberHex = await blockTracker.getLatestBlock();\n        const latestBlockNumber = Number.parseInt(latestBlockNumberHex.slice(2), 16);\n        // skip if request block number is higher than current\n        if (blockRefNumber > latestBlockNumber) {\n            log('Requested block number %o is higher than latest block number %o, falling through to original request', blockRefNumber, latestBlockNumber);\n            return next();\n        }\n        log('Requested block number %o is not higher than latest block number %o, trying request until non-empty response is received', blockRefNumber, latestBlockNumber);\n        // create child request with specific block-ref\n        const childRequest = (0, full_1.klona)(req);\n        // attempt child request until non-empty response is received\n        const childResponse = await retry(10, async () => {\n            log('Performing request %o', childRequest);\n            const attemptResponse = await (0, pify_1.default)(provider.sendAsync).call(provider, childRequest);\n            log('Response is %o', attemptResponse);\n            // verify result\n            if (emptyValues.includes(attemptResponse.result)) {\n                throw new Error(`RetryOnEmptyMiddleware - empty response \"${JSON.stringify(attemptResponse)}\" for request \"${JSON.stringify(childRequest)}\"`);\n            }\n            return attemptResponse;\n        });\n        log('Copying result %o and error %o', childResponse.result, childResponse.error);\n        // copy child response onto original response\n        res.result = childResponse.result;\n        res.error = childResponse.error;\n        return undefined;\n    });\n}\nexports.createRetryOnEmptyMiddleware = createRetryOnEmptyMiddleware;\nasync function retry(maxRetries, asyncFn) {\n    for (let index = 0; index < maxRetries; index++) {\n        try {\n            return await asyncFn();\n        }\n        catch (err) {\n            if ((0, error_1.isExecutionRevertedError)(err)) {\n                throw err;\n            }\n            log('(call %i) Request failed, waiting 1s to retry again...', index + 1);\n            await (0, timeout_1.timeout)(1000);\n        }\n    }\n    log('Retries exhausted');\n    throw new Error('RetryOnEmptyMiddleware - retries exhausted');\n}\n//# sourceMappingURL=retryOnEmpty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cacheTypeForMethod = exports.blockTagParamIndex = exports.blockTagForRequest = exports.canCache = exports.cacheIdentifierForRequest = exports.CacheStrategy = void 0;\nconst safe_stable_stringify_1 = require(\"safe-stable-stringify\");\nconst stringify = (0, safe_stable_stringify_1.configure)({ bigint: false, circularValue: Error });\n/**\n * The cache strategy to use for a given method.\n */\nvar CacheStrategy;\n(function (CacheStrategy) {\n    /**\n     * Cache per-block.\n     */\n    CacheStrategy[\"Block\"] = \"block\";\n    /**\n     * Cache until a chain reorganization occurs.\n     */\n    CacheStrategy[\"Fork\"] = \"fork\";\n    /**\n     * Never cache.\n     */\n    CacheStrategy[\"Never\"] = \"never\";\n    /**\n     * Permanently cache.\n     */\n    CacheStrategy[\"Permanent\"] = \"perma\";\n})(CacheStrategy = exports.CacheStrategy || (exports.CacheStrategy = {}));\n/**\n * Return a cache identifier for the given request.\n *\n * This identifier should include any request details that might impact the\n * response, with the exception of the block parameter if the `skipBlockRef`\n * option is set,\n *\n * If the request cannot be cached, this will return `null`.\n *\n * @param request - The JSON-RPC request.\n * @param skipBlockRef - Skip the block parameter when generating the cache\n * identifier.\n * @returns The cache identifier for this request, or `null` if it can't be\n * cached.\n */\nfunction cacheIdentifierForRequest(request, skipBlockRef) {\n    var _a;\n    const simpleParams = skipBlockRef\n        ? paramsWithoutBlockTag(request)\n        : (_a = request.params) !== null && _a !== void 0 ? _a : [];\n    if (canCache(request.method)) {\n        return `${request.method}:${stringify(simpleParams)}`;\n    }\n    return null;\n}\nexports.cacheIdentifierForRequest = cacheIdentifierForRequest;\n/**\n * Return whether a method can be cached or not.\n *\n * @param method - The method to check.\n * @returns Whether the method can be cached.\n */\nfunction canCache(method) {\n    return cacheTypeForMethod(method) !== CacheStrategy.Never;\n}\nexports.canCache = canCache;\n/**\n * Return the block parameter for the given request, if it has one.\n *\n * @param request - The JSON-RPC request.\n * @returns The block parameter in the given request, or `undefined` if none was found.\n */\nfunction blockTagForRequest(request) {\n    if (!request.params) {\n        return undefined;\n    }\n    const index = blockTagParamIndex(request.method);\n    // Block tag param not passed.\n    if (index === undefined ||\n        !Array.isArray(request.params) ||\n        index >= request.params.length) {\n        return undefined;\n    }\n    return request.params[index];\n}\nexports.blockTagForRequest = blockTagForRequest;\n/**\n * Return the request parameters without the block parameter.\n *\n * @param request - The JSON-RPC request.\n * @returns The request parameters with the block parameter removed, if one was found.\n */\nfunction paramsWithoutBlockTag(request) {\n    if (!request.params) {\n        return [];\n    }\n    const index = blockTagParamIndex(request.method);\n    // Block tag param not passed.\n    if (index === undefined ||\n        !Array.isArray(request.params) ||\n        index >= request.params.length) {\n        return request.params;\n    }\n    // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n    if (request.method === 'eth_getBlockByNumber') {\n        return request.params.slice(1);\n    }\n    return request.params.slice(0, index);\n}\n/**\n * Returns the index of the block parameter for the given method.\n *\n * @param method - A JSON-RPC method.\n * @returns The index of the block parameter for that method, or `undefined` if\n * there is no known block parameter.\n */\nfunction blockTagParamIndex(method) {\n    switch (method) {\n        // blockTag is at index 2\n        case 'eth_getStorageAt':\n            return 2;\n        // blockTag is at index 1\n        case 'eth_getBalance':\n        case 'eth_getCode':\n        case 'eth_getTransactionCount':\n        case 'eth_call':\n            return 1;\n        // blockTag is at index 0\n        case 'eth_getBlockByNumber':\n            return 0;\n        // there is no blockTag\n        default:\n            return undefined;\n    }\n}\nexports.blockTagParamIndex = blockTagParamIndex;\n/**\n * Return the cache type used for the given method.\n *\n * @param method - A JSON-RPC method.\n * @returns The cache type to use for that method.\n */\nfunction cacheTypeForMethod(method) {\n    switch (method) {\n        // cache permanently\n        case 'web3_clientVersion':\n        case 'web3_sha3':\n        case 'eth_protocolVersion':\n        case 'eth_getBlockTransactionCountByHash':\n        case 'eth_getUncleCountByBlockHash':\n        case 'eth_getCode':\n        case 'eth_getBlockByHash':\n        case 'eth_getTransactionByHash':\n        case 'eth_getTransactionByBlockHashAndIndex':\n        case 'eth_getTransactionReceipt':\n        case 'eth_getUncleByBlockHashAndIndex':\n        case 'eth_getCompilers':\n        case 'eth_compileLLL':\n        case 'eth_compileSolidity':\n        case 'eth_compileSerpent':\n        case 'shh_version':\n        case 'test_permaCache':\n            return CacheStrategy.Permanent;\n        // cache until fork\n        case 'eth_getBlockByNumber':\n        case 'eth_getBlockTransactionCountByNumber':\n        case 'eth_getUncleCountByBlockNumber':\n        case 'eth_getTransactionByBlockNumberAndIndex':\n        case 'eth_getUncleByBlockNumberAndIndex':\n        case 'test_forkCache':\n            return CacheStrategy.Fork;\n        // cache for block\n        case 'eth_gasPrice':\n        case 'eth_blockNumber':\n        case 'eth_getBalance':\n        case 'eth_getStorageAt':\n        case 'eth_getTransactionCount':\n        case 'eth_call':\n        case 'eth_estimateGas':\n        case 'eth_getFilterLogs':\n        case 'eth_getLogs':\n        case 'test_blockCache':\n            return CacheStrategy.Block;\n        // never cache\n        default:\n            return CacheStrategy.Never;\n    }\n}\nexports.cacheTypeForMethod = cacheTypeForMethod;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isExecutionRevertedError = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst utils_1 = require(\"@metamask/utils\");\nfunction isExecutionRevertedError(error) {\n    return ((0, utils_1.isJsonRpcError)(error) &&\n        error.code === rpc_errors_1.errorCodes.rpc.invalidInput &&\n        error.message === 'execution reverted');\n}\nexports.isExecutionRevertedError = isExecutionRevertedError;\n//# sourceMappingURL=error.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeTypedMessage = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * Normalizes the messageData for the eth_signTypedData\n *\n * @param messageData - The messageData to normalize.\n * @returns The normalized messageData.\n */\nfunction normalizeTypedMessage(messageData) {\n    var _a;\n    let data;\n    try {\n        data = parseTypedMessage(messageData);\n    }\n    catch (e) {\n        // Ignore normalization errors and pass the message as is\n        return messageData;\n    }\n    const { verifyingContract } = (_a = data.domain) !== null && _a !== void 0 ? _a : {};\n    if (!verifyingContract) {\n        return messageData;\n    }\n    data.domain.verifyingContract = normalizeContractAddress(verifyingContract);\n    return JSON.stringify(data);\n}\nexports.normalizeTypedMessage = normalizeTypedMessage;\n/**\n * Parses the messageData to obtain the data object for EIP712 normalization\n *\n * @param data - The messageData to parse.\n * @returns The data object for EIP712 normalization.\n */\nfunction parseTypedMessage(data) {\n    if (typeof data !== 'string') {\n        return data;\n    }\n    return JSON.parse(data);\n}\n/**\n * Normalizes the address to a hexadecimal format\n *\n * @param address - The address to normalize.\n * @returns The normalized address.\n */\nfunction normalizeContractAddress(address) {\n    if ((0, utils_1.isStrictHexString)(address) && (0, utils_1.isValidHexAddress)(address)) {\n        return address;\n    }\n    // Check if the address is in octal format, convert to hexadecimal\n    if (address.startsWith('0o')) {\n        // If octal, convert to hexadecimal\n        return octalToHex(address);\n    }\n    // Check if the address is in decimal format, convert to hexadecimal\n    try {\n        const decimalBN = new bn_js_1.default(address, 10);\n        const hexString = decimalBN.toString(16);\n        return (0, utils_1.add0x)(hexString);\n    }\n    catch (e) {\n        // Ignore errors and return the original address\n    }\n    // Returning the original address without normalization\n    return address;\n}\nfunction octalToHex(octalAddress) {\n    const decimalAddress = parseInt(octalAddress.slice(2), 8).toString(16);\n    return (0, utils_1.add0x)(decimalAddress);\n}\n//# sourceMappingURL=normalize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeout = void 0;\n/**\n * Wait the specified number of milliseconds.\n *\n * @param duration - The number of milliseconds to wait.\n * @returns A promise that resolves after the specified amount of time.\n */\nasync function timeout(duration) {\n    return new Promise((resolve) => setTimeout(resolve, duration));\n}\nexports.timeout = timeout;\n//# sourceMappingURL=timeout.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWalletMiddleware = void 0;\nconst sigUtil = __importStar(require(\"@metamask/eth-sig-util\"));\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst normalize_1 = require(\"./utils/normalize\");\nfunction createWalletMiddleware({ getAccounts, processDecryptMessage, processEncryptionPublicKey, processEthSignMessage, processPersonalMessage, processTransaction, processSignTransaction, processTypedMessage, processTypedMessageV3, processTypedMessageV4, }) {\n    if (!getAccounts) {\n        throw new Error('opts.getAccounts is required');\n    }\n    return (0, json_rpc_engine_1.createScaffoldMiddleware)({\n        // account lookups\n        eth_accounts: (0, json_rpc_engine_1.createAsyncMiddleware)(lookupAccounts),\n        eth_coinbase: (0, json_rpc_engine_1.createAsyncMiddleware)(lookupDefaultAccount),\n        // tx signatures\n        eth_sendTransaction: (0, json_rpc_engine_1.createAsyncMiddleware)(sendTransaction),\n        eth_signTransaction: (0, json_rpc_engine_1.createAsyncMiddleware)(signTransaction),\n        // message signatures\n        eth_sign: (0, json_rpc_engine_1.createAsyncMiddleware)(ethSign),\n        eth_signTypedData: (0, json_rpc_engine_1.createAsyncMiddleware)(signTypedData),\n        eth_signTypedData_v3: (0, json_rpc_engine_1.createAsyncMiddleware)(signTypedDataV3),\n        eth_signTypedData_v4: (0, json_rpc_engine_1.createAsyncMiddleware)(signTypedDataV4),\n        personal_sign: (0, json_rpc_engine_1.createAsyncMiddleware)(personalSign),\n        eth_getEncryptionPublicKey: (0, json_rpc_engine_1.createAsyncMiddleware)(encryptionPublicKey),\n        eth_decrypt: (0, json_rpc_engine_1.createAsyncMiddleware)(decryptMessage),\n        personal_ecRecover: (0, json_rpc_engine_1.createAsyncMiddleware)(personalRecover),\n    });\n    //\n    // account lookups\n    //\n    async function lookupAccounts(req, res) {\n        res.result = await getAccounts(req);\n    }\n    async function lookupDefaultAccount(req, res) {\n        const accounts = await getAccounts(req);\n        res.result = accounts[0] || null;\n    }\n    //\n    // transaction signatures\n    //\n    async function sendTransaction(req, res) {\n        if (!processTransaction) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!req.params ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 1)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params[0];\n        const txParams = Object.assign(Object.assign({}, params), { from: await validateAndNormalizeKeyholder((params === null || params === void 0 ? void 0 : params.from) || '', req) });\n        res.result = await processTransaction(txParams, req);\n    }\n    async function signTransaction(req, res) {\n        if (!processSignTransaction) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!req.params ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 1)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params[0];\n        const txParams = Object.assign(Object.assign({}, params), { from: await validateAndNormalizeKeyholder((params === null || params === void 0 ? void 0 : params.from) || '', req) });\n        res.result = await processSignTransaction(txParams, req);\n    }\n    //\n    // message signatures\n    //\n    async function ethSign(req, res) {\n        if (!processEthSignMessage) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 2)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        const address = await validateAndNormalizeKeyholder(params[0], req);\n        const message = params[1];\n        const extraParams = params[2] || {};\n        const msgParams = Object.assign(Object.assign({}, extraParams), { from: address, data: message, signatureMethod: 'eth_sign' });\n        res.result = await processEthSignMessage(msgParams, req);\n    }\n    async function signTypedData(req, res) {\n        if (!processTypedMessage) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 2)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        const message = params[0];\n        const address = await validateAndNormalizeKeyholder(params[1], req);\n        const version = 'V1';\n        const extraParams = params[2] || {};\n        const msgParams = Object.assign(Object.assign({}, extraParams), { from: address, data: message, signatureMethod: 'eth_signTypedData', version });\n        res.result = await processTypedMessage(msgParams, req, version);\n    }\n    async function signTypedDataV3(req, res) {\n        if (!processTypedMessageV3) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 2)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        const address = await validateAndNormalizeKeyholder(params[0], req);\n        const message = (0, normalize_1.normalizeTypedMessage)(params[1]);\n        const version = 'V3';\n        const msgParams = {\n            data: message,\n            from: address,\n            version,\n            signatureMethod: 'eth_signTypedData_v3',\n        };\n        res.result = await processTypedMessageV3(msgParams, req, version);\n    }\n    async function signTypedDataV4(req, res) {\n        if (!processTypedMessageV4) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 2)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        const address = await validateAndNormalizeKeyholder(params[0], req);\n        const message = (0, normalize_1.normalizeTypedMessage)(params[1]);\n        const version = 'V4';\n        const msgParams = {\n            data: message,\n            from: address,\n            version,\n            signatureMethod: 'eth_signTypedData_v4',\n        };\n        res.result = await processTypedMessageV4(msgParams, req, version);\n    }\n    async function personalSign(req, res) {\n        if (!processPersonalMessage) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 2)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        // process normally\n        const firstParam = params[0];\n        const secondParam = params[1];\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        const extraParams = params[2] || {};\n        // We initially incorrectly ordered these parameters.\n        // To gracefully respect users who adopted this API early,\n        // we are currently gracefully recovering from the wrong param order\n        // when it is clearly identifiable.\n        //\n        // That means when the first param is definitely an address,\n        // and the second param is definitely not, but is hex.\n        let address, message;\n        if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n            let warning = `The eth_personalSign method requires params ordered `;\n            warning += `[message, address]. This was previously handled incorrectly, `;\n            warning += `and has been corrected automatically. `;\n            warning += `Please switch this param order for smooth behavior in the future.`;\n            res.warning = warning;\n            address = firstParam;\n            message = secondParam;\n        }\n        else {\n            message = firstParam;\n            address = secondParam;\n        }\n        address = await validateAndNormalizeKeyholder(address, req);\n        const msgParams = Object.assign(Object.assign({}, extraParams), { from: address, data: message, signatureMethod: 'personal_sign' });\n        // eslint-disable-next-line require-atomic-updates\n        res.result = await processPersonalMessage(msgParams, req);\n    }\n    async function personalRecover(req, res) {\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 2)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        const message = params[0];\n        const signature = params[1];\n        const signerAddress = sigUtil.recoverPersonalSignature({\n            data: message,\n            signature,\n        });\n        res.result = signerAddress;\n    }\n    async function encryptionPublicKey(req, res) {\n        if (!processEncryptionPublicKey) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 1)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        const address = await validateAndNormalizeKeyholder(params[0], req);\n        res.result = await processEncryptionPublicKey(address, req);\n    }\n    async function decryptMessage(req, res) {\n        if (!processDecryptMessage) {\n            throw rpc_errors_1.rpcErrors.methodNotSupported();\n        }\n        if (!(req === null || req === void 0 ? void 0 : req.params) ||\n            !Array.isArray(req.params) ||\n            !(req.params.length >= 1)) {\n            throw rpc_errors_1.rpcErrors.invalidInput();\n        }\n        const params = req.params;\n        const ciphertext = params[0];\n        const address = await validateAndNormalizeKeyholder(params[1], req);\n        const extraParams = params[2] || {};\n        const msgParams = Object.assign(Object.assign({}, extraParams), { from: address, data: ciphertext });\n        res.result = await processDecryptMessage(msgParams, req);\n    }\n    //\n    // utility\n    //\n    /**\n     * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n     * copy of it.\n     *\n     * @param address - The address to validate and normalize.\n     * @param req - The request object.\n     * @returns {string} - The normalized address, if valid. Otherwise, throws\n     * an error\n     */\n    async function validateAndNormalizeKeyholder(address, req) {\n        if (typeof address === 'string' &&\n            address.length > 0 &&\n            resemblesAddress(address)) {\n            // Ensure that an \"unauthorized\" error is thrown if the requester does not have the `eth_accounts`\n            // permission.\n            const accounts = await getAccounts(req);\n            const normalizedAccounts = accounts.map((_address) => _address.toLowerCase());\n            const normalizedAddress = address.toLowerCase();\n            if (normalizedAccounts.includes(normalizedAddress)) {\n                return normalizedAddress;\n            }\n            throw rpc_errors_1.providerErrors.unauthorized();\n        }\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: `Invalid parameters: must provide an Ethereum address.`,\n        });\n    }\n}\nexports.createWalletMiddleware = createWalletMiddleware;\nfunction resemblesAddress(str) {\n    // hex prefix 2 + 20 bytes\n    return str.length === 2 + 20 * 2;\n}\n//# sourceMappingURL=wallet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  createSelector: () => createSelector,\n  createSelectorCreator: () => createSelectorCreator,\n  createStructuredSelector: () => createStructuredSelector,\n  lruMemoize: () => lruMemoize,\n  referenceEqualityCheck: () => referenceEqualityCheck,\n  setGlobalDevModeChecks: () => setGlobalDevModeChecks,\n  unstable_autotrackMemoize: () => autotrackMemoize,\n  weakMapMemoize: () => weakMapMemoize\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/devModeChecks/identityFunctionCheck.ts\nvar runIdentityFunctionCheck = (resultFunc, inputSelectorsResults, outputSelectorResult) => {\n  if (inputSelectorsResults.length === 1 && inputSelectorsResults[0] === outputSelectorResult) {\n    let isInputSameAsOutput = false;\n    try {\n      const emptyObject = {};\n      if (resultFunc(emptyObject) === emptyObject)\n        isInputSameAsOutput = true;\n    } catch {\n    }\n    if (isInputSameAsOutput) {\n      let stack = void 0;\n      try {\n        throw new Error();\n      } catch (e) {\n        ;\n        ({ stack } = e);\n      }\n      console.warn(\n        \"The result function returned its own inputs without modification. e.g\\n`createSelector([state => state.todos], todos => todos)`\\nThis could lead to inefficient memoization and unnecessary re-renders.\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.\",\n        { stack }\n      );\n    }\n  }\n};\n\n// src/devModeChecks/inputStabilityCheck.ts\nvar runInputStabilityCheck = (inputSelectorResultsObject, options, inputSelectorArgs) => {\n  const { memoize, memoizeOptions } = options;\n  const { inputSelectorResults, inputSelectorResultsCopy } = inputSelectorResultsObject;\n  const createAnEmptyObject = memoize(() => ({}), ...memoizeOptions);\n  const areInputSelectorResultsEqual = createAnEmptyObject.apply(null, inputSelectorResults) === createAnEmptyObject.apply(null, inputSelectorResultsCopy);\n  if (!areInputSelectorResultsEqual) {\n    let stack = void 0;\n    try {\n      throw new Error();\n    } catch (e) {\n      ;\n      ({ stack } = e);\n    }\n    console.warn(\n      \"An input selector returned a different result when passed same arguments.\\nThis means your output selector will likely run more frequently than intended.\\nAvoid returning a new reference inside your input selector, e.g.\\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`\",\n      {\n        arguments: inputSelectorArgs,\n        firstInputs: inputSelectorResults,\n        secondInputs: inputSelectorResultsCopy,\n        stack\n      }\n    );\n  }\n};\n\n// src/devModeChecks/setGlobalDevModeChecks.ts\nvar globalDevModeChecks = {\n  inputStabilityCheck: \"once\",\n  identityFunctionCheck: \"once\"\n};\nvar setGlobalDevModeChecks = (devModeChecks) => {\n  Object.assign(globalDevModeChecks, devModeChecks);\n};\n\n// src/utils.ts\nvar NOT_FOUND = /* @__PURE__ */ Symbol(\"NOT_FOUND\");\nfunction assertIsFunction(func, errorMessage = `expected a function, instead received ${typeof func}`) {\n  if (typeof func !== \"function\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsObject(object, errorMessage = `expected an object, instead received ${typeof object}`) {\n  if (typeof object !== \"object\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsArrayOfFunctions(array, errorMessage = `expected all items to be functions, instead received the following types: `) {\n  if (!array.every((item) => typeof item === \"function\")) {\n    const itemTypes = array.map(\n      (item) => typeof item === \"function\" ? `function ${item.name || \"unnamed\"}()` : typeof item\n    ).join(\", \");\n    throw new TypeError(`${errorMessage}[${itemTypes}]`);\n  }\n}\nvar ensureIsArray = (item) => {\n  return Array.isArray(item) ? item : [item];\n};\nfunction getDependencies(createSelectorArgs) {\n  const dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;\n  assertIsArrayOfFunctions(\n    dependencies,\n    `createSelector expects all input-selectors to be functions, but received the following types: `\n  );\n  return dependencies;\n}\nfunction collectInputSelectorResults(dependencies, inputSelectorArgs) {\n  const inputSelectorResults = [];\n  const { length } = dependencies;\n  for (let i = 0; i < length; i++) {\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));\n  }\n  return inputSelectorResults;\n}\nvar getDevModeChecksExecutionInfo = (firstRun, devModeChecks) => {\n  const { identityFunctionCheck, inputStabilityCheck } = {\n    ...globalDevModeChecks,\n    ...devModeChecks\n  };\n  return {\n    identityFunctionCheck: {\n      shouldRun: identityFunctionCheck === \"always\" || identityFunctionCheck === \"once\" && firstRun,\n      run: runIdentityFunctionCheck\n    },\n    inputStabilityCheck: {\n      shouldRun: inputStabilityCheck === \"always\" || inputStabilityCheck === \"once\" && firstRun,\n      run: runInputStabilityCheck\n    }\n  };\n};\n\n// src/autotrackMemoize/autotracking.ts\nvar $REVISION = 0;\nvar CURRENT_TRACKER = null;\nvar Cell = class {\n  revision = $REVISION;\n  _value;\n  _lastValue;\n  _isEqual = tripleEq;\n  constructor(initialValue, isEqual = tripleEq) {\n    this._value = this._lastValue = initialValue;\n    this._isEqual = isEqual;\n  }\n  // Whenever a storage value is read, it'll add itself to the current tracker if\n  // one exists, entangling its state with that cache.\n  get value() {\n    CURRENT_TRACKER?.add(this);\n    return this._value;\n  }\n  // Whenever a storage value is updated, we bump the global revision clock,\n  // assign the revision for this storage to the new value, _and_ we schedule a\n  // rerender. This is important, and it's what makes autotracking  _pull_\n  // based. We don't actively tell the caches which depend on the storage that\n  // anything has happened. Instead, we recompute the caches when needed.\n  set value(newValue) {\n    if (this.value === newValue)\n      return;\n    this._value = newValue;\n    this.revision = ++$REVISION;\n  }\n};\nfunction tripleEq(a, b) {\n  return a === b;\n}\nvar TrackingCache = class {\n  _cachedValue;\n  _cachedRevision = -1;\n  _deps = [];\n  hits = 0;\n  fn;\n  constructor(fn) {\n    this.fn = fn;\n  }\n  clear() {\n    this._cachedValue = void 0;\n    this._cachedRevision = -1;\n    this._deps = [];\n    this.hits = 0;\n  }\n  get value() {\n    if (this.revision > this._cachedRevision) {\n      const { fn } = this;\n      const currentTracker = /* @__PURE__ */ new Set();\n      const prevTracker = CURRENT_TRACKER;\n      CURRENT_TRACKER = currentTracker;\n      this._cachedValue = fn();\n      CURRENT_TRACKER = prevTracker;\n      this.hits++;\n      this._deps = Array.from(currentTracker);\n      this._cachedRevision = this.revision;\n    }\n    CURRENT_TRACKER?.add(this);\n    return this._cachedValue;\n  }\n  get revision() {\n    return Math.max(...this._deps.map((d) => d.revision), 0);\n  }\n};\nfunction getValue(cell) {\n  if (!(cell instanceof Cell)) {\n    console.warn(\"Not a valid cell! \", cell);\n  }\n  return cell.value;\n}\nfunction setValue(storage, value) {\n  if (!(storage instanceof Cell)) {\n    throw new TypeError(\n      \"setValue must be passed a tracked store created with `createStorage`.\"\n    );\n  }\n  storage.value = storage._lastValue = value;\n}\nfunction createCell(initialValue, isEqual = tripleEq) {\n  return new Cell(initialValue, isEqual);\n}\nfunction createCache(fn) {\n  assertIsFunction(\n    fn,\n    \"the first parameter to `createCache` must be a function\"\n  );\n  return new TrackingCache(fn);\n}\n\n// src/autotrackMemoize/tracking.ts\nvar neverEq = (a, b) => false;\nfunction createTag() {\n  return createCell(null, neverEq);\n}\nfunction dirtyTag(tag, value) {\n  setValue(tag, value);\n}\nvar consumeCollection = (node) => {\n  let tag = node.collectionTag;\n  if (tag === null) {\n    tag = node.collectionTag = createTag();\n  }\n  getValue(tag);\n};\nvar dirtyCollection = (node) => {\n  const tag = node.collectionTag;\n  if (tag !== null) {\n    dirtyTag(tag, null);\n  }\n};\n\n// src/autotrackMemoize/proxy.ts\nvar REDUX_PROXY_LABEL = Symbol();\nvar nextId = 0;\nvar proto = Object.getPrototypeOf({});\nvar ObjectTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy(this, objectProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar objectProxyHandler = {\n  get(node, key) {\n    function calculateResult() {\n      const { value } = node;\n      const childValue = Reflect.get(value, key);\n      if (typeof key === \"symbol\") {\n        return childValue;\n      }\n      if (key in proto) {\n        return childValue;\n      }\n      if (typeof childValue === \"object\" && childValue !== null) {\n        let childNode = node.children[key];\n        if (childNode === void 0) {\n          childNode = node.children[key] = createNode(childValue);\n        }\n        if (childNode.tag) {\n          getValue(childNode.tag);\n        }\n        return childNode.proxy;\n      } else {\n        let tag = node.tags[key];\n        if (tag === void 0) {\n          tag = node.tags[key] = createTag();\n          tag.value = childValue;\n        }\n        getValue(tag);\n        return childValue;\n      }\n    }\n    const res = calculateResult();\n    return res;\n  },\n  ownKeys(node) {\n    consumeCollection(node);\n    return Reflect.ownKeys(node.value);\n  },\n  getOwnPropertyDescriptor(node, prop) {\n    return Reflect.getOwnPropertyDescriptor(node.value, prop);\n  },\n  has(node, prop) {\n    return Reflect.has(node.value, prop);\n  }\n};\nvar ArrayTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy([this], arrayProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar arrayProxyHandler = {\n  get([node], key) {\n    if (key === \"length\") {\n      consumeCollection(node);\n    }\n    return objectProxyHandler.get(node, key);\n  },\n  ownKeys([node]) {\n    return objectProxyHandler.ownKeys(node);\n  },\n  getOwnPropertyDescriptor([node], prop) {\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop);\n  },\n  has([node], prop) {\n    return objectProxyHandler.has(node, prop);\n  }\n};\nfunction createNode(value) {\n  if (Array.isArray(value)) {\n    return new ArrayTreeNode(value);\n  }\n  return new ObjectTreeNode(value);\n}\nfunction updateNode(node, newValue) {\n  const { value, tags, children } = node;\n  node.value = newValue;\n  if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) {\n    dirtyCollection(node);\n  } else {\n    if (value !== newValue) {\n      let oldKeysSize = 0;\n      let newKeysSize = 0;\n      let anyKeysAdded = false;\n      for (const _key in value) {\n        oldKeysSize++;\n      }\n      for (const key in newValue) {\n        newKeysSize++;\n        if (!(key in value)) {\n          anyKeysAdded = true;\n          break;\n        }\n      }\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;\n      if (isDifferent) {\n        dirtyCollection(node);\n      }\n    }\n  }\n  for (const key in tags) {\n    const childValue = value[key];\n    const newChildValue = newValue[key];\n    if (childValue !== newChildValue) {\n      dirtyCollection(node);\n      dirtyTag(tags[key], newChildValue);\n    }\n    if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      delete tags[key];\n    }\n  }\n  for (const key in children) {\n    const childNode = children[key];\n    const newChildValue = newValue[key];\n    const childValue = childNode.value;\n    if (childValue === newChildValue) {\n      continue;\n    } else if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      updateNode(childNode, newChildValue);\n    } else {\n      deleteNode(childNode);\n      delete children[key];\n    }\n  }\n}\nfunction deleteNode(node) {\n  if (node.tag) {\n    dirtyTag(node.tag, null);\n  }\n  dirtyCollection(node);\n  for (const key in node.tags) {\n    dirtyTag(node.tags[key], null);\n  }\n  for (const key in node.children) {\n    deleteNode(node.children[key]);\n  }\n}\n\n// src/lruMemoize.ts\nfunction createSingletonCache(equals) {\n  let entry;\n  return {\n    get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n      return NOT_FOUND;\n    },\n    put(key, value) {\n      entry = { key, value };\n    },\n    getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear() {\n      entry = void 0;\n    }\n  };\n}\nfunction createLruCache(maxSize, equals) {\n  let entries = [];\n  function get(key) {\n    const cacheIndex = entries.findIndex((entry) => equals(key, entry.key));\n    if (cacheIndex > -1) {\n      const entry = entries[cacheIndex];\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n      return entry.value;\n    }\n    return NOT_FOUND;\n  }\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      entries.unshift({ key, value });\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n  function getEntries() {\n    return entries;\n  }\n  function clear() {\n    entries = [];\n  }\n  return { get, put, getEntries, clear };\n}\nvar referenceEqualityCheck = (a, b) => a === b;\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    }\n    const { length } = prev;\n    for (let i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\nfunction lruMemoize(func, equalityCheckOrOptions) {\n  const providedOptions = typeof equalityCheckOrOptions === \"object\" ? equalityCheckOrOptions : { equalityCheck: equalityCheckOrOptions };\n  const {\n    equalityCheck = referenceEqualityCheck,\n    maxSize = 1,\n    resultEqualityCheck\n  } = providedOptions;\n  const comparator = createCacheKeyComparator(equalityCheck);\n  let resultsCount = 0;\n  const cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);\n  function memoized() {\n    let value = cache.get(arguments);\n    if (value === NOT_FOUND) {\n      value = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const entries = cache.getEntries();\n        const matchingEntry = entries.find(\n          (entry) => resultEqualityCheck(entry.value, value)\n        );\n        if (matchingEntry) {\n          value = matchingEntry.value;\n          resultsCount !== 0 && resultsCount--;\n        }\n      }\n      cache.put(arguments, value);\n    }\n    return value;\n  }\n  memoized.clearCache = () => {\n    cache.clear();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/autotrackMemoize/autotrackMemoize.ts\nfunction autotrackMemoize(func) {\n  const node = createNode(\n    []\n  );\n  let lastArgs = null;\n  const shallowEqual = createCacheKeyComparator(referenceEqualityCheck);\n  const cache = createCache(() => {\n    const res = func.apply(null, node.proxy);\n    return res;\n  });\n  function memoized() {\n    if (!shallowEqual(lastArgs, arguments)) {\n      updateNode(node, arguments);\n      lastArgs = arguments;\n    }\n    return cache.value;\n  }\n  memoized.clearCache = () => {\n    return cache.clear();\n  };\n  return memoized;\n}\n\n// src/weakMapMemoize.ts\nvar StrongRef = class {\n  constructor(value) {\n    this.value = value;\n  }\n  deref() {\n    return this.value;\n  }\n};\nvar Ref = typeof WeakRef !== \"undefined\" ? WeakRef : StrongRef;\nvar UNTERMINATED = 0;\nvar TERMINATED = 1;\nfunction createCacheNode() {\n  return {\n    s: UNTERMINATED,\n    v: void 0,\n    o: null,\n    p: null\n  };\n}\nfunction weakMapMemoize(func, options = {}) {\n  let fnNode = createCacheNode();\n  const { resultEqualityCheck } = options;\n  let lastResult;\n  let resultsCount = 0;\n  function memoized() {\n    let cacheNode = fnNode;\n    const { length } = arguments;\n    for (let i = 0, l = length; i < l; i++) {\n      const arg = arguments[i];\n      if (typeof arg === \"function\" || typeof arg === \"object\" && arg !== null) {\n        let objectCache = cacheNode.o;\n        if (objectCache === null) {\n          cacheNode.o = objectCache = /* @__PURE__ */ new WeakMap();\n        }\n        const objectNode = objectCache.get(arg);\n        if (objectNode === void 0) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        let primitiveCache = cacheNode.p;\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = /* @__PURE__ */ new Map();\n        }\n        const primitiveNode = primitiveCache.get(arg);\n        if (primitiveNode === void 0) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n    const terminatedNode = cacheNode;\n    let result;\n    if (cacheNode.s === TERMINATED) {\n      result = cacheNode.v;\n    } else {\n      result = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const lastResultValue = lastResult?.deref?.() ?? lastResult;\n        if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {\n          result = lastResultValue;\n          resultsCount !== 0 && resultsCount--;\n        }\n        const needsWeakRef = typeof result === \"object\" && result !== null || typeof result === \"function\";\n        lastResult = needsWeakRef ? new Ref(result) : result;\n      }\n    }\n    terminatedNode.s = TERMINATED;\n    terminatedNode.v = result;\n    return result;\n  }\n  memoized.clearCache = () => {\n    fnNode = createCacheNode();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/createSelectorCreator.ts\nfunction createSelectorCreator(memoizeOrOptions, ...memoizeOptionsFromArgs) {\n  const createSelectorCreatorOptions = typeof memoizeOrOptions === \"function\" ? {\n    memoize: memoizeOrOptions,\n    memoizeOptions: memoizeOptionsFromArgs\n  } : memoizeOrOptions;\n  const createSelector2 = (...createSelectorArgs) => {\n    let recomputations = 0;\n    let dependencyRecomputations = 0;\n    let lastResult;\n    let directlyPassedOptions = {};\n    let resultFunc = createSelectorArgs.pop();\n    if (typeof resultFunc === \"object\") {\n      directlyPassedOptions = resultFunc;\n      resultFunc = createSelectorArgs.pop();\n    }\n    assertIsFunction(\n      resultFunc,\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\n    );\n    const combinedOptions = {\n      ...createSelectorCreatorOptions,\n      ...directlyPassedOptions\n    };\n    const {\n      memoize,\n      memoizeOptions = [],\n      argsMemoize = weakMapMemoize,\n      argsMemoizeOptions = [],\n      devModeChecks = {}\n    } = combinedOptions;\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions);\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);\n    const dependencies = getDependencies(createSelectorArgs);\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\n      recomputations++;\n      return resultFunc.apply(\n        null,\n        arguments\n      );\n    }, ...finalMemoizeOptions);\n    let firstRun = true;\n    const selector = argsMemoize(function dependenciesChecker() {\n      dependencyRecomputations++;\n      const inputSelectorResults = collectInputSelectorResults(\n        dependencies,\n        arguments\n      );\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults);\n      if (\"production\" !== \"production\") {\n        const { identityFunctionCheck, inputStabilityCheck } = getDevModeChecksExecutionInfo(firstRun, devModeChecks);\n        if (identityFunctionCheck.shouldRun) {\n          identityFunctionCheck.run(\n            resultFunc,\n            inputSelectorResults,\n            lastResult\n          );\n        }\n        if (inputStabilityCheck.shouldRun) {\n          const inputSelectorResultsCopy = collectInputSelectorResults(\n            dependencies,\n            arguments\n          );\n          inputStabilityCheck.run(\n            { inputSelectorResults, inputSelectorResultsCopy },\n            { memoize, memoizeOptions: finalMemoizeOptions },\n            arguments\n          );\n        }\n        if (firstRun)\n          firstRun = false;\n      }\n      return lastResult;\n    }, ...finalArgsMemoizeOptions);\n    return Object.assign(selector, {\n      resultFunc,\n      memoizedResultFunc,\n      dependencies,\n      dependencyRecomputations: () => dependencyRecomputations,\n      resetDependencyRecomputations: () => {\n        dependencyRecomputations = 0;\n      },\n      lastResult: () => lastResult,\n      recomputations: () => recomputations,\n      resetRecomputations: () => {\n        recomputations = 0;\n      },\n      memoize,\n      argsMemoize\n    });\n  };\n  Object.assign(createSelector2, {\n    withTypes: () => createSelector2\n  });\n  return createSelector2;\n}\nvar createSelector = /* @__PURE__ */ createSelectorCreator(weakMapMemoize);\n\n// src/createStructuredSelector.ts\nvar createStructuredSelector = Object.assign(\n  (inputSelectorsObject, selectorCreator = createSelector) => {\n    assertIsObject(\n      inputSelectorsObject,\n      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`\n    );\n    const inputSelectorKeys = Object.keys(inputSelectorsObject);\n    const dependencies = inputSelectorKeys.map(\n      (key) => inputSelectorsObject[key]\n    );\n    const structuredSelector = selectorCreator(\n      dependencies,\n      (...inputSelectorResults) => {\n        return inputSelectorResults.reduce((composition, value, index) => {\n          composition[inputSelectorKeys[index]] = value;\n          return composition;\n        }, {});\n      }\n    );\n    return structuredSelector;\n  },\n  { withTypes: () => createStructuredSelector }\n);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  createSelector,\n  createSelectorCreator,\n  createStructuredSelector,\n  lruMemoize,\n  referenceEqualityCheck,\n  setGlobalDevModeChecks,\n  unstable_autotrackMemoize,\n  weakMapMemoize\n});\n//# sourceMappingURL=reselect.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _NotificationServicesController_instances, _NotificationServicesController_isPushIntegrated, _NotificationServicesController_isPushNotificationsSetup, _NotificationServicesController_isUnlocked, _NotificationServicesController_keyringController, _NotificationServicesController_auth, _NotificationServicesController_storage, _NotificationServicesController_pushNotifications, _NotificationServicesController_accounts, _NotificationServicesController_featureAnnouncementEnv, _NotificationServicesController_registerMessageHandlers, _NotificationServicesController_clearLoadingStates, _NotificationServicesController_assertAuthEnabled, _NotificationServicesController_getValidStorageKeyAndBearerToken, _NotificationServicesController_performEnableProfileSyncing, _NotificationServicesController_assertUserStorage, _NotificationServicesController_getUserStorage, _NotificationServicesController_setIsUpdatingMetamaskNotifications, _NotificationServicesController_setIsFetchingMetamaskNotifications, _NotificationServicesController_setIsCheckingAccountsPresence, _NotificationServicesController_updateUpdatingAccountsState, _NotificationServicesController_clearUpdatingAccountsState;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultState = void 0;\nconst base_controller_1 = require(\"@metamask/base-controller\");\nconst controller_utils_1 = require(\"@metamask/controller-utils\");\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst constants_1 = require(\"./constants/constants.cjs\");\nconst notification_schema_1 = require(\"./constants/notification-schema.cjs\");\nconst process_notifications_1 = require(\"./processors/process-notifications.cjs\");\nconst FeatureNotifications = __importStar(require(\"./services/feature-announcements.cjs\"));\nconst OnChainNotifications = __importStar(require(\"./services/onchain-notifications.cjs\"));\nconst Utils = __importStar(require(\"./utils/utils.cjs\"));\n// Unique name for the controller\nconst controllerName = 'NotificationServicesController';\nconst metadata = {\n    subscriptionAccountsSeen: {\n        persist: true,\n        anonymous: true,\n    },\n    isMetamaskNotificationsFeatureSeen: {\n        persist: true,\n        anonymous: false,\n    },\n    isNotificationServicesEnabled: {\n        persist: true,\n        anonymous: false,\n    },\n    isFeatureAnnouncementsEnabled: {\n        persist: true,\n        anonymous: false,\n    },\n    metamaskNotificationsList: {\n        persist: true,\n        anonymous: true,\n    },\n    metamaskNotificationsReadList: {\n        persist: true,\n        anonymous: true,\n    },\n    isUpdatingMetamaskNotifications: {\n        persist: false,\n        anonymous: false,\n    },\n    isFetchingMetamaskNotifications: {\n        persist: false,\n        anonymous: false,\n    },\n    isUpdatingMetamaskNotificationsAccount: {\n        persist: false,\n        anonymous: false,\n    },\n    isCheckingAccountsPresence: {\n        persist: false,\n        anonymous: false,\n    },\n};\nexports.defaultState = {\n    subscriptionAccountsSeen: [],\n    isMetamaskNotificationsFeatureSeen: false,\n    isNotificationServicesEnabled: false,\n    isFeatureAnnouncementsEnabled: false,\n    metamaskNotificationsList: [],\n    metamaskNotificationsReadList: [],\n    isUpdatingMetamaskNotifications: false,\n    isFetchingMetamaskNotifications: false,\n    isUpdatingMetamaskNotificationsAccount: [],\n    isCheckingAccountsPresence: false,\n};\n/**\n * Controller that enables wallet notifications and feature announcements\n */\nclass NotificationServicesController extends base_controller_1.BaseController {\n    /**\n     * Creates a NotificationServicesController instance.\n     *\n     * @param args - The arguments to this function.\n     * @param args.messenger - Messenger used to communicate with BaseV2 controller.\n     * @param args.state - Initial state to set on this controller.\n     * @param args.env - environment variables for a given controller.\n     * @param args.env.featureAnnouncements - env variables for feature announcements.\n     * @param args.env.isPushIntegrated - toggle push notifications on/off if client has integrated them.\n     */\n    constructor({ messenger, state, env, }) {\n        super({\n            messenger,\n            metadata,\n            name: controllerName,\n            state: { ...exports.defaultState, ...state },\n        });\n        _NotificationServicesController_instances.add(this);\n        // Temporary boolean as push notifications are not yet enabled on mobile\n        _NotificationServicesController_isPushIntegrated.set(this, true);\n        // Flag to check is notifications have been setup when the browser/extension is initialized.\n        // We want to re-initialize push notifications when the browser/extension is refreshed\n        // To ensure we subscribe to the most up-to-date notifications\n        _NotificationServicesController_isPushNotificationsSetup.set(this, false);\n        _NotificationServicesController_isUnlocked.set(this, false);\n        _NotificationServicesController_keyringController.set(this, {\n            setupLockedStateSubscriptions: (onUnlock) => {\n                const { isUnlocked } = this.messagingSystem.call('KeyringController:getState');\n                __classPrivateFieldSet(this, _NotificationServicesController_isUnlocked, isUnlocked, \"f\");\n                this.messagingSystem.subscribe('KeyringController:unlock', () => {\n                    __classPrivateFieldSet(this, _NotificationServicesController_isUnlocked, true, \"f\");\n                    // messaging system cannot await promises\n                    // we don't need to wait for a result on this.\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    onUnlock();\n                });\n                this.messagingSystem.subscribe('KeyringController:lock', () => {\n                    __classPrivateFieldSet(this, _NotificationServicesController_isUnlocked, false, \"f\");\n                });\n            },\n        });\n        _NotificationServicesController_auth.set(this, {\n            getBearerToken: async () => {\n                return await this.messagingSystem.call('AuthenticationController:getBearerToken');\n            },\n            isSignedIn: () => {\n                return this.messagingSystem.call('AuthenticationController:isSignedIn');\n            },\n        });\n        _NotificationServicesController_storage.set(this, {\n            enableProfileSyncing: async () => {\n                return await this.messagingSystem.call('UserStorageController:enableProfileSyncing');\n            },\n            getStorageKey: () => {\n                return this.messagingSystem.call('UserStorageController:getStorageKey');\n            },\n            getNotificationStorage: async () => {\n                return await this.messagingSystem.call('UserStorageController:performGetStorage', 'notifications.notification_settings');\n            },\n            setNotificationStorage: async (state) => {\n                return await this.messagingSystem.call('UserStorageController:performSetStorage', 'notifications.notification_settings', state);\n            },\n        });\n        _NotificationServicesController_pushNotifications.set(this, {\n            subscribeToPushNotifications: async () => {\n                await this.messagingSystem.call('NotificationServicesPushController:subscribeToPushNotifications');\n            },\n            enablePushNotifications: async (UUIDs) => {\n                if (!__classPrivateFieldGet(this, _NotificationServicesController_isPushIntegrated, \"f\")) {\n                    return;\n                }\n                try {\n                    await this.messagingSystem.call('NotificationServicesPushController:enablePushNotifications', UUIDs);\n                }\n                catch (e) {\n                    loglevel_1.default.error('Silently failed to enable push notifications', e);\n                }\n            },\n            disablePushNotifications: async (UUIDs) => {\n                if (!__classPrivateFieldGet(this, _NotificationServicesController_isPushIntegrated, \"f\")) {\n                    return;\n                }\n                try {\n                    await this.messagingSystem.call('NotificationServicesPushController:disablePushNotifications', UUIDs);\n                }\n                catch (e) {\n                    loglevel_1.default.error('Silently failed to disable push notifications', e);\n                }\n            },\n            updatePushNotifications: async (UUIDs) => {\n                if (!__classPrivateFieldGet(this, _NotificationServicesController_isPushIntegrated, \"f\")) {\n                    return;\n                }\n                try {\n                    await this.messagingSystem.call('NotificationServicesPushController:updateTriggerPushNotifications', UUIDs);\n                }\n                catch (e) {\n                    loglevel_1.default.error('Silently failed to update push notifications', e);\n                }\n            },\n            subscribe: () => {\n                if (!__classPrivateFieldGet(this, _NotificationServicesController_isPushIntegrated, \"f\")) {\n                    return;\n                }\n                this.messagingSystem.subscribe('NotificationServicesPushController:onNewNotifications', (notification) => {\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    this.updateMetamaskNotificationsList(notification);\n                });\n            },\n            initializePushNotifications: async () => {\n                if (!__classPrivateFieldGet(this, _NotificationServicesController_isPushIntegrated, \"f\")) {\n                    return;\n                }\n                if (!this.state.isNotificationServicesEnabled) {\n                    return;\n                }\n                if (__classPrivateFieldGet(this, _NotificationServicesController_isPushNotificationsSetup, \"f\")) {\n                    return;\n                }\n                // If wallet is unlocked, we can create a fresh push subscription\n                // Otherwise we can subscribe to original subscription\n                if (__classPrivateFieldGet(this, _NotificationServicesController_isUnlocked, \"f\")) {\n                    const storage = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getUserStorage).call(this);\n                    if (!storage) {\n                        return;\n                    }\n                    const uuids = Utils.getAllUUIDs(storage);\n                    await __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").enablePushNotifications(uuids);\n                    __classPrivateFieldSet(this, _NotificationServicesController_isPushNotificationsSetup, true, \"f\");\n                }\n                else {\n                    await __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").subscribeToPushNotifications();\n                }\n            },\n        });\n        _NotificationServicesController_accounts.set(this, {\n            /**\n             * Used to get list of addresses from keyring (wallet addresses)\n             *\n             * @returns addresses removed, added, and latest list of addresses\n             */\n            listAccounts: async () => {\n                // Get previous and current account sets\n                const nonChecksumAccounts = await this.messagingSystem.call('KeyringController:getAccounts');\n                const accounts = nonChecksumAccounts.map((a) => (0, controller_utils_1.toChecksumHexAddress)(a));\n                const currentAccountsSet = new Set(accounts);\n                const prevAccountsSet = new Set(this.state.subscriptionAccountsSeen);\n                // Invalid value you cannot have zero accounts\n                // Only occurs when the Accounts controller is initializing.\n                if (accounts.length === 0) {\n                    return {\n                        accountsAdded: [],\n                        accountsRemoved: [],\n                        accounts: [],\n                    };\n                }\n                // Calculate added and removed addresses\n                const accountsAdded = accounts.filter((a) => !prevAccountsSet.has(a));\n                const accountsRemoved = [...prevAccountsSet.values()].filter((a) => !currentAccountsSet.has(a));\n                // Update accounts seen\n                this.update((state) => {\n                    state.subscriptionAccountsSeen = [...prevAccountsSet, ...accountsAdded];\n                });\n                return {\n                    accountsAdded,\n                    accountsRemoved,\n                    accounts,\n                };\n            },\n            /**\n             * Initializes the cache/previous list. This is handy so we have an accurate in-mem state of the previous list of accounts.\n             *\n             * @returns result from list accounts\n             */\n            initialize: () => {\n                return __classPrivateFieldGet(this, _NotificationServicesController_accounts, \"f\").listAccounts();\n            },\n            /**\n             * Subscription to any state change in the keyring controller (aka wallet accounts).\n             * We can call the `listAccounts` defined above to find out about any accounts added, removed\n             * And call effects to subscribe/unsubscribe to notifications.\n             */\n            subscribe: () => {\n                this.messagingSystem.subscribe('KeyringController:stateChange', \n                // eslint-disable-next-line @typescript-eslint/no-misused-promises\n                async () => {\n                    if (!this.state.isNotificationServicesEnabled) {\n                        return;\n                    }\n                    const { accountsAdded, accountsRemoved } = await __classPrivateFieldGet(this, _NotificationServicesController_accounts, \"f\").listAccounts();\n                    const promises = [];\n                    if (accountsAdded.length > 0) {\n                        promises.push(this.updateOnChainTriggersByAccount(accountsAdded));\n                    }\n                    if (accountsRemoved.length > 0) {\n                        promises.push(this.deleteOnChainTriggersByAccount(accountsRemoved));\n                    }\n                    await Promise.all(promises);\n                });\n            },\n        });\n        _NotificationServicesController_featureAnnouncementEnv.set(this, void 0);\n        _NotificationServicesController_performEnableProfileSyncing.set(this, async () => {\n            try {\n                await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").enableProfileSyncing();\n            }\n            catch (e) {\n                loglevel_1.default.error('Failed to enable profile syncing', e);\n                throw new Error('Failed to enable profile syncing');\n            }\n        });\n        __classPrivateFieldSet(this, _NotificationServicesController_isPushIntegrated, env.isPushIntegrated ?? true, \"f\");\n        __classPrivateFieldSet(this, _NotificationServicesController_featureAnnouncementEnv, env.featureAnnouncements, \"f\");\n        __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_registerMessageHandlers).call(this);\n        __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_clearLoadingStates).call(this);\n        __classPrivateFieldGet(this, _NotificationServicesController_keyringController, \"f\").setupLockedStateSubscriptions(__classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").initializePushNotifications);\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        __classPrivateFieldGet(this, _NotificationServicesController_accounts, \"f\").initialize();\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").initializePushNotifications();\n        __classPrivateFieldGet(this, _NotificationServicesController_accounts, \"f\").subscribe();\n        __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").subscribe();\n    }\n    /**\n     * Retrieves the current enabled state of MetaMask notifications.\n     *\n     * This method directly returns the boolean value of `isMetamaskNotificationsEnabled`\n     * from the controller's state, indicating whether MetaMask notifications are currently enabled.\n     *\n     * @returns The enabled state of MetaMask notifications.\n     */\n    selectIsNotificationServicesEnabled() {\n        return this.state.isNotificationServicesEnabled;\n    }\n    async checkAccountsPresence(accounts) {\n        try {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsCheckingAccountsPresence).call(this, true);\n            // Retrieve user storage\n            const userStorage = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getUserStorage).call(this);\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_assertUserStorage).call(this, userStorage);\n            const presence = Utils.checkAccountsPresence(userStorage, accounts);\n            return presence;\n        }\n        catch (error) {\n            loglevel_1.default.error('Failed to check accounts presence', error);\n            throw error;\n        }\n        finally {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsCheckingAccountsPresence).call(this, false);\n        }\n    }\n    /**\n     * Sets the enabled state of feature announcements.\n     *\n     * **Action** - used in the notification settings to enable/disable feature announcements.\n     *\n     * @param featureAnnouncementsEnabled - A boolean value indicating the desired enabled state of the feature announcements.\n     * @async\n     * @throws {Error} If fails to update\n     */\n    async setFeatureAnnouncementsEnabled(featureAnnouncementsEnabled) {\n        try {\n            this.update((s) => {\n                s.isFeatureAnnouncementsEnabled = featureAnnouncementsEnabled;\n            });\n        }\n        catch (e) {\n            loglevel_1.default.error('Unable to toggle feature announcements', e);\n            throw new Error('Unable to toggle feature announcements');\n        }\n    }\n    /**\n     * This creates/re-creates on-chain triggers defined in User Storage.\n     *\n     * **Action** - Used during Sign In / Enabling of notifications.\n     *\n     * @returns The updated or newly created user storage.\n     * @throws {Error} Throws an error if unauthenticated or from other operations.\n     */\n    async createOnChainTriggers() {\n        try {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsUpdatingMetamaskNotifications).call(this, true);\n            await __classPrivateFieldGet(this, _NotificationServicesController_performEnableProfileSyncing, \"f\").call(this);\n            const { bearerToken, storageKey } = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getValidStorageKeyAndBearerToken).call(this);\n            const { accounts } = await __classPrivateFieldGet(this, _NotificationServicesController_accounts, \"f\").listAccounts();\n            let userStorage = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getUserStorage).call(this);\n            // If userStorage does not exist, create a new one\n            // All the triggers created are set as: \"disabled\"\n            if (userStorage?.[constants_1.USER_STORAGE_VERSION_KEY] === undefined) {\n                userStorage = Utils.initializeUserStorage(accounts.map((account) => ({ address: account })), false);\n                // Write the userStorage\n                await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").setNotificationStorage(JSON.stringify(userStorage));\n            }\n            // Create the triggers\n            const triggers = Utils.traverseUserStorageTriggers(userStorage);\n            await OnChainNotifications.createOnChainTriggers(userStorage, storageKey, bearerToken, triggers);\n            // Create push notifications triggers\n            const allUUIDS = Utils.getAllUUIDs(userStorage);\n            await __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").enablePushNotifications(allUUIDS);\n            // Write the new userStorage (triggers are now \"enabled\")\n            await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").setNotificationStorage(JSON.stringify(userStorage));\n            // Update the state of the controller\n            this.update((state) => {\n                state.isNotificationServicesEnabled = true;\n                state.isFeatureAnnouncementsEnabled = true;\n                state.isMetamaskNotificationsFeatureSeen = true;\n            });\n            return userStorage;\n        }\n        catch (err) {\n            loglevel_1.default.error('Failed to create On Chain triggers', err);\n            throw new Error('Failed to create On Chain triggers');\n        }\n        finally {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsUpdatingMetamaskNotifications).call(this, false);\n        }\n    }\n    /**\n     * Enables all MetaMask notifications for the user.\n     * This is identical flow when initializing notifications for the first time.\n     * 1. Enable Profile Syncing\n     * 2. Get or Create Notification User Storage\n     * 3. Upsert Triggers\n     * 4. Update Push notifications\n     *\n     * @throws {Error} If there is an error during the process of enabling notifications.\n     */\n    async enableMetamaskNotifications() {\n        try {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsUpdatingMetamaskNotifications).call(this, true);\n            await this.createOnChainTriggers();\n        }\n        catch (e) {\n            loglevel_1.default.error('Unable to enable notifications', e);\n            throw new Error('Unable to enable notifications');\n        }\n        finally {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsUpdatingMetamaskNotifications).call(this, false);\n        }\n    }\n    /**\n     * Disables all MetaMask notifications for the user.\n     * This method ensures that the user is authenticated, retrieves all linked accounts,\n     * and disables on-chain triggers for each account. It also sets the global notification\n     * settings for MetaMask, feature announcements to false.\n     *\n     * @throws {Error} If the user is not authenticated or if there is an error during the process.\n     */\n    async disableNotificationServices() {\n        try {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsUpdatingMetamaskNotifications).call(this, true);\n            // Disable Push Notifications\n            const userStorage = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getUserStorage).call(this);\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_assertUserStorage).call(this, userStorage);\n            const UUIDs = Utils.getAllUUIDs(userStorage);\n            await __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").disablePushNotifications(UUIDs);\n            // Clear Notification States (toggles and list)\n            this.update((state) => {\n                state.isNotificationServicesEnabled = false;\n                state.isFeatureAnnouncementsEnabled = false;\n                state.metamaskNotificationsList = [];\n            });\n        }\n        catch (e) {\n            loglevel_1.default.error('Unable to disable notifications', e);\n            throw new Error('Unable to disable notifications');\n        }\n        finally {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsUpdatingMetamaskNotifications).call(this, false);\n        }\n    }\n    /**\n     * Deletes on-chain triggers associated with a specific account.\n     * This method performs several key operations:\n     * 1. Validates Auth & Storage\n     * 2. Finds and deletes all triggers associated with the account\n     * 3. Disables any related push notifications\n     * 4. Updates Storage to reflect new state.\n     *\n     * **Action** - When a user disables notifications for a given account in settings.\n     *\n     * @param accounts - The account for which on-chain triggers are to be deleted.\n     * @returns A promise that resolves to void or an object containing a success message.\n     * @throws {Error} Throws an error if unauthenticated or from other operations.\n     */\n    async deleteOnChainTriggersByAccount(accounts) {\n        try {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_updateUpdatingAccountsState).call(this, accounts);\n            // Get and Validate BearerToken and User Storage Key\n            const { bearerToken, storageKey } = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getValidStorageKeyAndBearerToken).call(this);\n            // Get & Validate User Storage\n            const userStorage = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getUserStorage).call(this);\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_assertUserStorage).call(this, userStorage);\n            // Get the UUIDs to delete\n            const UUIDs = accounts\n                .map((a) => Utils.getUUIDsForAccount(userStorage, a.toLowerCase()))\n                .flat();\n            if (UUIDs.length === 0) {\n                return userStorage;\n            }\n            // Delete these UUIDs (Mutates User Storage)\n            await OnChainNotifications.deleteOnChainTriggers(userStorage, storageKey, bearerToken, UUIDs);\n            // Delete these UUIDs from the push notifications\n            await __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").disablePushNotifications(UUIDs);\n            // Update User Storage\n            await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").setNotificationStorage(JSON.stringify(userStorage));\n            return userStorage;\n        }\n        catch (err) {\n            loglevel_1.default.error('Failed to delete OnChain triggers', err);\n            throw new Error('Failed to delete OnChain triggers');\n        }\n        finally {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_clearUpdatingAccountsState).call(this, accounts);\n        }\n    }\n    /**\n     * Updates/Creates on-chain triggers for a specific account.\n     *\n     * This method performs several key operations:\n     * 1. Validates Auth & Storage\n     * 2. Finds and creates any missing triggers associated with the account\n     * 3. Enables any related push notifications\n     * 4. Updates Storage to reflect new state.\n     *\n     * **Action** - When a user enables notifications for an account\n     *\n     * @param accounts - List of accounts you want to update.\n     * @returns A promise that resolves to the updated user storage.\n     * @throws {Error} Throws an error if unauthenticated or from other operations.\n     */\n    async updateOnChainTriggersByAccount(accounts) {\n        try {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_updateUpdatingAccountsState).call(this, accounts);\n            // Get and Validate BearerToken and User Storage Key\n            const { bearerToken, storageKey } = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getValidStorageKeyAndBearerToken).call(this);\n            // Get & Validate User Storage\n            const userStorage = await __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_getUserStorage).call(this);\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_assertUserStorage).call(this, userStorage);\n            // Add any missing triggers\n            accounts.forEach((a) => Utils.upsertAddressTriggers(a, userStorage));\n            const newTriggers = Utils.traverseUserStorageTriggers(userStorage, {\n                mapTrigger: (t) => {\n                    if (!t.enabled) {\n                        return t;\n                    }\n                    return undefined;\n                },\n            });\n            // Create any missing triggers.\n            if (newTriggers.length > 0) {\n                // Write te updated userStorage (where triggers are disabled)\n                await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").setNotificationStorage(JSON.stringify(userStorage));\n                // Create the triggers\n                const triggers = Utils.traverseUserStorageTriggers(userStorage, {\n                    mapTrigger: (t) => {\n                        if (accounts.some((a) => a.toLowerCase() === t.address.toLowerCase())) {\n                            return t;\n                        }\n                        return undefined;\n                    },\n                });\n                await OnChainNotifications.createOnChainTriggers(userStorage, storageKey, bearerToken, triggers);\n            }\n            // Update Push Notifications Triggers\n            const UUIDs = Utils.getAllUUIDs(userStorage);\n            await __classPrivateFieldGet(this, _NotificationServicesController_pushNotifications, \"f\").updatePushNotifications(UUIDs);\n            // Update the userStorage (where triggers are enabled)\n            await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").setNotificationStorage(JSON.stringify(userStorage));\n            return userStorage;\n        }\n        catch (err) {\n            loglevel_1.default.error('Failed to update OnChain triggers', err);\n            throw new Error('Failed to update OnChain triggers');\n        }\n        finally {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_clearUpdatingAccountsState).call(this, accounts);\n        }\n    }\n    /**\n     * Fetches the list of metamask notifications.\n     * This includes OnChain notifications and Feature Announcements.\n     *\n     * **Action** - When a user views the notification list page/dropdown\n     *\n     * @throws {Error} Throws an error if unauthenticated or from other operations.\n     */\n    async fetchAndUpdateMetamaskNotifications() {\n        try {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsFetchingMetamaskNotifications).call(this, true);\n            // Raw Feature Notifications\n            const rawFeatureAnnouncementNotifications = this.state\n                .isFeatureAnnouncementsEnabled\n                ? await FeatureNotifications.getFeatureAnnouncementNotifications(__classPrivateFieldGet(this, _NotificationServicesController_featureAnnouncementEnv, \"f\")).catch(() => [])\n                : [];\n            // Raw On Chain Notifications\n            const rawOnChainNotifications = [];\n            const userStorage = await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\")\n                .getNotificationStorage()\n                .then((s) => s && JSON.parse(s))\n                .catch(() => null);\n            const bearerToken = await __classPrivateFieldGet(this, _NotificationServicesController_auth, \"f\").getBearerToken().catch(() => null);\n            if (userStorage && bearerToken) {\n                const notifications = await OnChainNotifications.getOnChainNotifications(userStorage, bearerToken).catch(() => []);\n                rawOnChainNotifications.push(...notifications);\n            }\n            const readIds = this.state.metamaskNotificationsReadList;\n            // Combined Notifications\n            const isNotUndefined = (t) => Boolean(t);\n            const processAndFilter = (ns) => ns\n                .map((n) => (0, process_notifications_1.safeProcessNotification)(n, readIds))\n                .filter(isNotUndefined);\n            const featureAnnouncementNotifications = processAndFilter(rawFeatureAnnouncementNotifications);\n            const onChainNotifications = processAndFilter(rawOnChainNotifications);\n            const metamaskNotifications = [\n                ...featureAnnouncementNotifications,\n                ...onChainNotifications,\n            ];\n            metamaskNotifications.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n            // Update State\n            this.update((state) => {\n                state.metamaskNotificationsList = metamaskNotifications;\n            });\n            this.messagingSystem.publish(`${controllerName}:notificationsListUpdated`, this.state.metamaskNotificationsList);\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsFetchingMetamaskNotifications).call(this, false);\n            return metamaskNotifications;\n        }\n        catch (err) {\n            __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_setIsFetchingMetamaskNotifications).call(this, false);\n            loglevel_1.default.error('Failed to fetch notifications', err);\n            throw new Error('Failed to fetch notifications');\n        }\n    }\n    /**\n     * Marks specified metamask notifications as read.\n     *\n     * @param notifications - An array of notifications to be marked as read. Each notification should include its type and read status.\n     * @returns A promise that resolves when the operation is complete.\n     */\n    async markMetamaskNotificationsAsRead(notifications) {\n        let onchainNotificationIds = [];\n        let featureAnnouncementNotificationIds = [];\n        try {\n            // Filter unread on/off chain notifications\n            const onChainNotifications = notifications.filter((notification) => notification.type !== notification_schema_1.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT &&\n                !notification.isRead);\n            const featureAnnouncementNotifications = notifications.filter((notification) => notification.type === notification_schema_1.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT &&\n                !notification.isRead);\n            // Mark On-Chain Notifications as Read\n            if (onChainNotifications.length > 0) {\n                const bearerToken = await __classPrivateFieldGet(this, _NotificationServicesController_auth, \"f\").getBearerToken();\n                if (bearerToken) {\n                    onchainNotificationIds = onChainNotifications.map((notification) => notification.id);\n                    await OnChainNotifications.markNotificationsAsRead(bearerToken, onchainNotificationIds).catch(() => {\n                        onchainNotificationIds = [];\n                        loglevel_1.default.warn('Unable to mark onchain notifications as read');\n                    });\n                }\n            }\n            // Mark Off-Chain notifications as Read\n            if (featureAnnouncementNotifications.length > 0) {\n                featureAnnouncementNotificationIds =\n                    featureAnnouncementNotifications.map((notification) => notification.id);\n            }\n        }\n        catch (err) {\n            loglevel_1.default.warn('Something failed when marking notifications as read', err);\n        }\n        // Update the state (state is also used on counter & badge)\n        this.update((state) => {\n            const currentReadList = state.metamaskNotificationsReadList;\n            const newReadIds = [...featureAnnouncementNotificationIds];\n            state.metamaskNotificationsReadList = [\n                ...new Set([...currentReadList, ...newReadIds]),\n            ];\n            state.metamaskNotificationsList = state.metamaskNotificationsList.map((notification) => {\n                if (newReadIds.includes(notification.id) ||\n                    onchainNotificationIds.includes(notification.id)) {\n                    return { ...notification, isRead: true };\n                }\n                return notification;\n            });\n        });\n        this.messagingSystem.publish(`${controllerName}:markNotificationsAsRead`, this.state.metamaskNotificationsList);\n    }\n    /**\n     * Updates the list of MetaMask notifications by adding a new notification at the beginning of the list.\n     * This method ensures that the most recent notification is displayed first in the UI.\n     *\n     * @param notification - The new notification object to be added to the list.\n     * @returns A promise that resolves when the notification list has been successfully updated.\n     */\n    async updateMetamaskNotificationsList(notification) {\n        if (this.state.metamaskNotificationsList.some((n) => n.id === notification.id)) {\n            return;\n        }\n        const processedNotification = (0, process_notifications_1.safeProcessNotification)(notification);\n        if (processedNotification) {\n            this.update((state) => {\n                const existingNotificationIds = new Set(state.metamaskNotificationsList.map((n) => n.id));\n                // Add the new notification only if its ID is not already present in the list\n                if (!existingNotificationIds.has(notification.id)) {\n                    state.metamaskNotificationsList = [\n                        notification,\n                        ...state.metamaskNotificationsList,\n                    ];\n                    this.messagingSystem.publish(`${controllerName}:notificationsListUpdated`, state.metamaskNotificationsList);\n                }\n            });\n        }\n    }\n}\n_NotificationServicesController_isPushIntegrated = new WeakMap(), _NotificationServicesController_isPushNotificationsSetup = new WeakMap(), _NotificationServicesController_isUnlocked = new WeakMap(), _NotificationServicesController_keyringController = new WeakMap(), _NotificationServicesController_auth = new WeakMap(), _NotificationServicesController_storage = new WeakMap(), _NotificationServicesController_pushNotifications = new WeakMap(), _NotificationServicesController_accounts = new WeakMap(), _NotificationServicesController_featureAnnouncementEnv = new WeakMap(), _NotificationServicesController_performEnableProfileSyncing = new WeakMap(), _NotificationServicesController_instances = new WeakSet(), _NotificationServicesController_registerMessageHandlers = function _NotificationServicesController_registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler(`${controllerName}:updateMetamaskNotificationsList`, this.updateMetamaskNotificationsList.bind(this));\n    this.messagingSystem.registerActionHandler(`${controllerName}:disableNotificationServices`, this.disableNotificationServices.bind(this));\n    this.messagingSystem.registerActionHandler(`${controllerName}:selectIsNotificationServicesEnabled`, this.selectIsNotificationServicesEnabled.bind(this));\n}, _NotificationServicesController_clearLoadingStates = function _NotificationServicesController_clearLoadingStates() {\n    this.update((state) => {\n        state.isUpdatingMetamaskNotifications = false;\n        state.isCheckingAccountsPresence = false;\n        state.isFetchingMetamaskNotifications = false;\n        state.isUpdatingMetamaskNotificationsAccount = [];\n    });\n}, _NotificationServicesController_assertAuthEnabled = function _NotificationServicesController_assertAuthEnabled() {\n    if (!__classPrivateFieldGet(this, _NotificationServicesController_auth, \"f\").isSignedIn()) {\n        this.update((state) => {\n            state.isNotificationServicesEnabled = false;\n        });\n        throw new Error('User is not signed in.');\n    }\n}, _NotificationServicesController_getValidStorageKeyAndBearerToken = async function _NotificationServicesController_getValidStorageKeyAndBearerToken() {\n    __classPrivateFieldGet(this, _NotificationServicesController_instances, \"m\", _NotificationServicesController_assertAuthEnabled).call(this);\n    const bearerToken = await __classPrivateFieldGet(this, _NotificationServicesController_auth, \"f\").getBearerToken();\n    const storageKey = await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").getStorageKey();\n    if (!bearerToken || !storageKey) {\n        throw new Error('Missing BearerToken or storage key');\n    }\n    return { bearerToken, storageKey };\n}, _NotificationServicesController_assertUserStorage = function _NotificationServicesController_assertUserStorage(storage) {\n    if (!storage) {\n        throw new Error('User Storage does not exist');\n    }\n}, _NotificationServicesController_getUserStorage = \n/**\n * Retrieves and parses the user storage from the storage key.\n *\n * This method attempts to retrieve the user storage using the specified storage key,\n * then parses the JSON string to an object. If the storage is not found or cannot be parsed,\n * it throws an error.\n *\n * @returns The parsed user storage object or null\n */\nasync function _NotificationServicesController_getUserStorage() {\n    const userStorageString = await __classPrivateFieldGet(this, _NotificationServicesController_storage, \"f\").getNotificationStorage();\n    if (!userStorageString) {\n        return null;\n    }\n    try {\n        const userStorage = JSON.parse(userStorageString);\n        return userStorage;\n    }\n    catch (error) {\n        loglevel_1.default.error('Unable to parse User Storage');\n        return null;\n    }\n}, _NotificationServicesController_setIsUpdatingMetamaskNotifications = function _NotificationServicesController_setIsUpdatingMetamaskNotifications(isUpdatingMetamaskNotifications) {\n    this.update((state) => {\n        state.isUpdatingMetamaskNotifications = isUpdatingMetamaskNotifications;\n    });\n}, _NotificationServicesController_setIsFetchingMetamaskNotifications = function _NotificationServicesController_setIsFetchingMetamaskNotifications(isFetchingMetamaskNotifications) {\n    this.update((state) => {\n        state.isFetchingMetamaskNotifications = isFetchingMetamaskNotifications;\n    });\n}, _NotificationServicesController_setIsCheckingAccountsPresence = function _NotificationServicesController_setIsCheckingAccountsPresence(isCheckingAccountsPresence) {\n    this.update((state) => {\n        state.isCheckingAccountsPresence = isCheckingAccountsPresence;\n    });\n}, _NotificationServicesController_updateUpdatingAccountsState = function _NotificationServicesController_updateUpdatingAccountsState(accounts) {\n    this.update((state) => {\n        const uniqueAccounts = new Set([\n            ...state.isUpdatingMetamaskNotificationsAccount,\n            ...accounts,\n        ]);\n        state.isUpdatingMetamaskNotificationsAccount = Array.from(uniqueAccounts);\n    });\n}, _NotificationServicesController_clearUpdatingAccountsState = function _NotificationServicesController_clearUpdatingAccountsState(accounts) {\n    this.update((state) => {\n        state.isUpdatingMetamaskNotificationsAccount =\n            state.isUpdatingMetamaskNotificationsAccount.filter((existingAccount) => !accounts.includes(existingAccount));\n    });\n};\nexports.default = NotificationServicesController;\n//# sourceMappingURL=NotificationServicesController.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./mock-feature-announcements.cjs\"), exports);\n__exportStar(require(\"./mock-notification-trigger.cjs\"), exports);\n__exportStar(require(\"./mock-notification-user-storage.cjs\"), exports);\n__exportStar(require(\"./mock-raw-notifications.cjs\"), exports);\n__exportStar(require(\"./mockResponses.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMockFeatureAnnouncementRaw = exports.createMockFeatureAnnouncementAPIResult = void 0;\nconst notification_schema_1 = require(\"../constants/notification-schema.cjs\");\n/**\n * Mocking Utility - create a mock normalized feature announcement\n *\n * @returns Mock Normalized Feature Announcement\n */\nfunction createMockFeatureAnnouncementAPIResult() {\n    return {\n        sys: {\n            type: 'Array',\n        },\n        total: 17,\n        skip: 0,\n        limit: 1,\n        items: [\n            {\n                metadata: {\n                    tags: [],\n                },\n                sys: {\n                    space: {\n                        sys: {\n                            type: 'Link',\n                            linkType: 'Space',\n                            id: 'jdkgyfmyd9sw',\n                        },\n                    },\n                    id: '1ABRmHaNCgmxROKXXLXsMu',\n                    type: 'Entry',\n                    createdAt: '2024-04-09T13:24:01.872Z',\n                    updatedAt: '2024-04-09T13:24:01.872Z',\n                    environment: {\n                        sys: {\n                            id: 'master',\n                            type: 'Link',\n                            linkType: 'Environment',\n                        },\n                    },\n                    revision: 1,\n                    contentType: {\n                        sys: {\n                            type: 'Link',\n                            linkType: 'ContentType',\n                            id: 'productAnnouncement',\n                        },\n                    },\n                    locale: 'en-US',\n                },\n                fields: {\n                    title: 'Don’t miss out on airdrops and new NFT mints!',\n                    id: 'dont-miss-out-on-airdrops-and-new-nft-mints',\n                    category: 'ANNOUNCEMENT',\n                    shortDescription: 'Check your airdrop eligibility and see trending NFT drops. Head over to the Explore tab to get started. ',\n                    image: {\n                        sys: {\n                            type: 'Link',\n                            linkType: 'Asset',\n                            id: '5jqq8sFeLc6XEoeWlpI3aB',\n                        },\n                    },\n                    longDescription: {\n                        data: {},\n                        content: [\n                            {\n                                data: {},\n                                content: [\n                                    {\n                                        data: {},\n                                        marks: [],\n                                        value: 'You can now verify if any of your connected addresses are eligible for airdrops and other ERC-20 claims in a secure and convenient way. We’ve also added trending NFT mints based on creators you’ve minted from before or other tokens you hold. Head over to the Explore tab to get started. \\n',\n                                        nodeType: 'text',\n                                    },\n                                ],\n                                nodeType: 'paragraph',\n                            },\n                        ],\n                        nodeType: 'document',\n                    },\n                    link: {\n                        sys: {\n                            type: 'Link',\n                            linkType: 'Entry',\n                            id: '62xKYM2ydo4F1mS5q97K5q',\n                        },\n                    },\n                },\n            },\n        ],\n        includes: {\n            Entry: [\n                {\n                    metadata: {\n                        tags: [],\n                    },\n                    sys: {\n                        space: {\n                            sys: {\n                                type: 'Link',\n                                linkType: 'Space',\n                                id: 'jdkgyfmyd9sw',\n                            },\n                        },\n                        id: '62xKYM2ydo4F1mS5q97K5q',\n                        type: 'Entry',\n                        createdAt: '2024-04-09T13:23:03.636Z',\n                        updatedAt: '2024-04-09T13:23:03.636Z',\n                        environment: {\n                            sys: {\n                                id: 'master',\n                                type: 'Link',\n                                linkType: 'Environment',\n                            },\n                        },\n                        revision: 1,\n                        contentType: {\n                            sys: {\n                                type: 'Link',\n                                linkType: 'ContentType',\n                                id: 'link',\n                            },\n                        },\n                        locale: 'en-US',\n                    },\n                    fields: {\n                        extensionLinkText: 'Try now',\n                        extensionLinkRoute: 'home.html',\n                    },\n                },\n            ],\n            Asset: [\n                {\n                    metadata: {\n                        tags: [],\n                    },\n                    sys: {\n                        space: {\n                            sys: {\n                                type: 'Link',\n                                linkType: 'Space',\n                                id: 'jdkgyfmyd9sw',\n                            },\n                        },\n                        id: '5jqq8sFeLc6XEoeWlpI3aB',\n                        type: 'Asset',\n                        createdAt: '2024-04-09T13:23:13.327Z',\n                        updatedAt: '2024-04-09T13:23:13.327Z',\n                        environment: {\n                            sys: {\n                                id: 'master',\n                                type: 'Link',\n                                linkType: 'Environment',\n                            },\n                        },\n                        revision: 1,\n                        locale: 'en-US',\n                    },\n                    fields: {\n                        title: 'PDAPP notification image Airdrops & NFT mints',\n                        description: '',\n                        file: {\n                            url: '//images.ctfassets.net/jdkgyfmyd9sw/5jqq8sFeLc6XEoeWlpI3aB/73ee0f1afa9916c3a7538b0bbee09c26/PDAPP_notification_image_Airdrops___NFT_mints.png',\n                            details: {\n                                size: 797731,\n                                image: {\n                                    width: 2880,\n                                    height: 1921,\n                                },\n                            },\n                            fileName: 'PDAPP notification image_Airdrops & NFT mints.png',\n                            contentType: 'image/png',\n                        },\n                    },\n                },\n            ],\n        },\n    };\n}\nexports.createMockFeatureAnnouncementAPIResult = createMockFeatureAnnouncementAPIResult;\n/**\n * Mocking Utility - create a mock raw feature announcement\n *\n * @returns Mock Raw Feature Announcement\n */\nfunction createMockFeatureAnnouncementRaw() {\n    return {\n        type: notification_schema_1.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT,\n        createdAt: '2999-04-09T13:24:01.872Z',\n        data: {\n            id: 'dont-miss-out-on-airdrops-and-new-nft-mints',\n            category: 'ANNOUNCEMENT',\n            title: 'Don’t miss out on airdrops and new NFT mints!',\n            longDescription: `<p>You can now verify if any of your connected addresses are eligible for airdrops and other ERC-20 claims in a secure and convenient way. We’ve also added trending NFT mints based on creators you’ve minted from before or other tokens you hold. Head over to the Explore tab to get started.</p>`,\n            shortDescription: 'Check your airdrop eligibility and see trending NFT drops. Head over to the Explore tab to get started.',\n            image: {\n                title: 'PDAPP notification image Airdrops & NFT mints',\n                description: '',\n                url: '//images.ctfassets.net/jdkgyfmyd9sw/5jqq8sFeLc6XEoeWlpI3aB/73ee0f1afa9916c3a7538b0bbee09c26/PDAPP_notification_image_Airdrops___NFT_mints.png',\n            },\n            extensionLink: {\n                extensionLinkText: 'Try now',\n                extensionLinkRoute: 'home.html',\n            },\n        },\n    };\n}\nexports.createMockFeatureAnnouncementRaw = createMockFeatureAnnouncementRaw;\n//# sourceMappingURL=mock-feature-announcements.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMockNotificationTrigger = void 0;\nconst uuid_1 = require(\"uuid\");\n/**\n * Mocking Utility - create a mock Notification Trigger\n *\n * @param override - provide any override configuration for the mock\n * @returns a mock Notification Trigger\n */\nfunction createMockNotificationTrigger(override) {\n    return {\n        id: (0, uuid_1.v4)(),\n        address: '0xFAKE_ADDRESS',\n        chainId: '1',\n        kind: 'eth_sent',\n        enabled: true,\n        ...override,\n    };\n}\nexports.createMockNotificationTrigger = createMockNotificationTrigger;\n//# sourceMappingURL=mock-notification-trigger.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMockFullUserStorage = exports.createMockUserStorageWithTriggers = exports.createMockUserStorage = exports.MOCK_USER_STORAGE_CHAIN = exports.MOCK_USER_STORAGE_ACCOUNT = void 0;\nconst constants_1 = require(\"../constants/constants.cjs\");\nconst notification_schema_1 = require(\"../constants/notification-schema.cjs\");\nconst utils_1 = require(\"../utils/utils.cjs\");\nexports.MOCK_USER_STORAGE_ACCOUNT = '0x0000000000000000000000000000000000000000';\nexports.MOCK_USER_STORAGE_CHAIN = '1';\n/**\n * Mocking Utility - create a mock notification user storage object\n *\n * @param override - provide any override configuration for the mock\n * @returns a mock notification user storage object\n */\nfunction createMockUserStorage(override) {\n    return {\n        [constants_1.USER_STORAGE_VERSION_KEY]: '1',\n        [exports.MOCK_USER_STORAGE_ACCOUNT]: {\n            [exports.MOCK_USER_STORAGE_CHAIN]: {\n                '111-111-111-111': {\n                    k: notification_schema_1.TRIGGER_TYPES.ERC20_RECEIVED,\n                    e: true,\n                },\n                '222-222-222-222': {\n                    k: notification_schema_1.TRIGGER_TYPES.ERC20_SENT,\n                    e: true,\n                },\n            },\n        },\n        ...override,\n    };\n}\nexports.createMockUserStorage = createMockUserStorage;\n/**\n * Mocking Utility - create a mock notification user storage object with triggers\n *\n * @param triggers - provide any override configuration for the mock\n * @returns a mock notification user storage object with triggers\n */\nfunction createMockUserStorageWithTriggers(triggers) {\n    const userStorage = {\n        [constants_1.USER_STORAGE_VERSION_KEY]: '1',\n        [exports.MOCK_USER_STORAGE_ACCOUNT]: {\n            [exports.MOCK_USER_STORAGE_CHAIN]: {},\n        },\n    };\n    // insert triggerIds\n    triggers.forEach((t) => {\n        let tId;\n        let e;\n        let k;\n        if (typeof t === 'string') {\n            tId = t;\n            e = true;\n            k = notification_schema_1.TRIGGER_TYPES.ERC20_RECEIVED;\n        }\n        else {\n            tId = t.id;\n            e = t.e;\n            k = t.k ?? notification_schema_1.TRIGGER_TYPES.ERC20_RECEIVED;\n        }\n        userStorage[exports.MOCK_USER_STORAGE_ACCOUNT][exports.MOCK_USER_STORAGE_CHAIN][tId] = {\n            k,\n            e,\n        };\n    });\n    return userStorage;\n}\nexports.createMockUserStorageWithTriggers = createMockUserStorageWithTriggers;\n/**\n * Mocking Utility - create a mock notification user storage object (full/realistic object)\n *\n * @param props - provide any override configuration for the mock\n * @param props.triggersEnabled - choose if all triggers created are enabled/disabled\n * @param props.address - choose a specific address for triggers to be assigned to\n * @returns a mock full notification user storage object\n */\nfunction createMockFullUserStorage(props = {}) {\n    return (0, utils_1.initializeUserStorage)([{ address: props.address ?? exports.MOCK_USER_STORAGE_ACCOUNT }], props.triggersEnabled ?? true);\n}\nexports.createMockFullUserStorage = createMockFullUserStorage;\n//# sourceMappingURL=mock-notification-user-storage.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMockRawOnChainNotifications = exports.createMockNotificationLidoReadyToBeWithdrawn = exports.createMockNotificationLidoWithdrawalCompleted = exports.createMockNotificationLidoWithdrawalRequested = exports.createMockNotificationLidoStakeCompleted = exports.createMockNotificationRocketPoolUnStakeCompleted = exports.createMockNotificationRocketPoolStakeCompleted = exports.createMockNotificationMetaMaskSwapsCompleted = exports.createMockNotificationERC1155Received = exports.createMockNotificationERC1155Sent = exports.createMockNotificationERC721Received = exports.createMockNotificationERC721Sent = exports.createMockNotificationERC20Received = exports.createMockNotificationERC20Sent = exports.createMockNotificationEthReceived = exports.createMockNotificationEthSent = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst notification_schema_1 = require(\"../constants/notification-schema.cjs\");\n/**\n * Mocking Utility - create a mock Eth sent notification\n * @returns Mock raw Eth sent notification\n */\nfunction createMockNotificationEthSent() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ETH_SENT,\n        id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        trigger_id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        chain_id: 1,\n        block_number: 17485840,\n        block_timestamp: '2022-03-01T00:00:00Z',\n        tx_hash: '0xb2256b183f2fb3872f99294ab55fb03e6a479b0d4aca556a3b27568b712505a6',\n        unread: true,\n        created_at: '2022-03-01T00:00:00Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'eth_sent',\n            network_fee: {\n                gas_price: '207806259583',\n                native_token_price_in_usd: '0.83',\n            },\n            from: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n            to: '0x881D40237659C251811CEC9c364ef91dC08D300D',\n            amount: {\n                usd: '670.64',\n                eth: '0.005',\n            },\n        },\n    };\n    return mockNotification;\n}\nexports.createMockNotificationEthSent = createMockNotificationEthSent;\n/**\n * Mocking Utility - create a mock Eth Received notification\n * @returns Mock raw Eth Received notification\n */\nfunction createMockNotificationEthReceived() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ETH_RECEIVED,\n        id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        trigger_id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        chain_id: 1,\n        block_number: 17485840,\n        block_timestamp: '2022-03-01T00:00:00Z',\n        tx_hash: '0xb2256b183f2fb3872f99294ab55fb03e6a479b0d4aca556a3b27568b712505a6',\n        unread: true,\n        created_at: '2022-03-01T00:00:00Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'eth_received',\n            network_fee: {\n                gas_price: '207806259583',\n                native_token_price_in_usd: '0.83',\n            },\n            from: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n            to: '0x881D40237659C251811CEC9c364ef91dC08D300D',\n            amount: {\n                usd: '670.64',\n                eth: '808.000000000000000000',\n            },\n        },\n    };\n    return mockNotification;\n}\nexports.createMockNotificationEthReceived = createMockNotificationEthReceived;\n/**\n * Mocking Utility - create a mock ERC20 sent notification\n * @returns Mock raw ERC20 sent notification\n */\nfunction createMockNotificationERC20Sent() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ERC20_SENT,\n        id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        trigger_id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        chain_id: 1,\n        block_number: 17485840,\n        block_timestamp: '2022-03-01T00:00:00Z',\n        tx_hash: '0xb2256b183f2fb3872f99294ab55fb03e6a479b0d4aca556a3b27568b712505a6',\n        unread: true,\n        created_at: '2022-03-01T00:00:00Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'erc20_sent',\n            network_fee: {\n                gas_price: '207806259583',\n                native_token_price_in_usd: '0.83',\n            },\n            to: '0xecc19e177d24551aa7ed6bc6fe566eca726cc8a9',\n            from: '0x1231deb6f5749ef6ce6943a275a1d3e7486f4eae',\n            token: {\n                usd: '1.00',\n                name: 'USDC',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/usdc.svg',\n                amount: '4956250000',\n                symbol: 'USDC',\n                address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n                decimals: '6',\n            },\n        },\n    };\n    return mockNotification;\n}\nexports.createMockNotificationERC20Sent = createMockNotificationERC20Sent;\n/**\n * Mocking Utility - create a mock ERC20 received notification\n * @returns Mock raw ERC20 received notification\n */\nfunction createMockNotificationERC20Received() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ERC20_RECEIVED,\n        id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        trigger_id: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n        chain_id: 1,\n        block_number: 17485840,\n        block_timestamp: '2022-03-01T00:00:00Z',\n        tx_hash: '0xb2256b183f2fb3872f99294ab55fb03e6a479b0d4aca556a3b27568b712505a6',\n        unread: true,\n        created_at: '2022-03-01T00:00:00Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'erc20_received',\n            network_fee: {\n                gas_price: '207806259583',\n                native_token_price_in_usd: '0.83',\n            },\n            to: '0xeae7380dd4cef6fbd1144f49e4d1e6964258a4f4',\n            from: '0x51c72848c68a965f66fa7a88855f9f7784502a7f',\n            token: {\n                usd: '0.00',\n                name: 'SHIBA INU',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/shib.svg',\n                amount: '8382798736999999457296646144',\n                symbol: 'SHIB',\n                address: '0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce',\n                decimals: '18',\n            },\n        },\n    };\n    return mockNotification;\n}\nexports.createMockNotificationERC20Received = createMockNotificationERC20Received;\n/**\n * Mocking Utility - create a mock ERC721 sent notification\n * @returns Mock raw ERC721 sent notification\n */\nfunction createMockNotificationERC721Sent() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ERC721_SENT,\n        block_number: 18576643,\n        block_timestamp: '1700043467',\n        chain_id: 1,\n        created_at: '2023-11-15T11:08:17.895407Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            to: '0xf47f628fe3bd2595e9ab384bfffc3859b448e451',\n            nft: {\n                name: 'Captainz #8680',\n                image: 'https://i.seadn.io/s/raw/files/ae0fc06714ff7fb40217340d8a242c0e.gif?w=500&auto=format',\n                token_id: '8680',\n                collection: {\n                    name: 'The Captainz',\n                    image: 'https://i.seadn.io/gcs/files/6df4d75778066bce740050615bc84e21.png?w=500&auto=format',\n                    symbol: 'Captainz',\n                    address: '0x769272677fab02575e84945f03eca517acc544cc',\n                },\n            },\n            from: '0x24a0bb54b7e7a8e406e9b28058a9fd6c49e6df4f',\n            kind: 'erc721_sent',\n            network_fee: {\n                gas_price: '24550653274',\n                native_token_price_in_usd: '1986.61',\n            },\n        },\n        id: 'a4193058-9814-537e-9df4-79dcac727fb6',\n        trigger_id: '028485be-b994-422b-a93b-03fcc01ab715',\n        tx_hash: '0x0833c69fb41cf972a0f031fceca242939bc3fcf82b964b74606649abcad371bd',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationERC721Sent = createMockNotificationERC721Sent;\n/**\n * Mocking Utility - create a mock ERC721 received notification\n * @returns Mock raw ERC721 received notification\n */\nfunction createMockNotificationERC721Received() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ERC721_RECEIVED,\n        block_number: 18571446,\n        block_timestamp: '1699980623',\n        chain_id: 1,\n        created_at: '2023-11-14T17:40:52.319281Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            to: '0xba7f3daa8adfdad686574406ab9bd5d2f0a49d2e',\n            nft: {\n                name: 'The Plague #2722',\n                image: 'https://i.seadn.io/s/raw/files/a96f90ec8ebf55a2300c66a0c46d6a16.png?w=500&auto=format',\n                token_id: '2722',\n                collection: {\n                    name: 'The Plague NFT',\n                    image: 'https://i.seadn.io/gcs/files/4577987a5ca45ca5118b2e31559ee4d1.jpg?w=500&auto=format',\n                    symbol: 'FROG',\n                    address: '0xc379e535caff250a01caa6c3724ed1359fe5c29b',\n                },\n            },\n            from: '0x24a0bb54b7e7a8e406e9b28058a9fd6c49e6df4f',\n            kind: 'erc721_received',\n            network_fee: {\n                gas_price: '53701898538',\n                native_token_price_in_usd: '2047.01',\n            },\n        },\n        id: '00a79d24-befa-57ed-a55a-9eb8696e1654',\n        trigger_id: 'd24ac26a-8579-49ec-9947-d04d63592ebd',\n        tx_hash: '0xe554c9e29e6eeca8ba94da4d047334ba08b8eb9ca3b801dd69cec08dfdd4ae43',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationERC721Received = createMockNotificationERC721Received;\n/**\n * Mocking Utility - create a mock ERC1155 sent notification\n * @returns Mock raw ERC1155 sent notification\n */\nfunction createMockNotificationERC1155Sent() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ERC1155_SENT,\n        block_number: 18615206,\n        block_timestamp: '1700510003',\n        chain_id: 1,\n        created_at: '2023-11-20T20:44:10.110706Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            to: '0x15bd77ccacf2da39b84f0c31fee2e451225bb190',\n            nft: {\n                name: 'IlluminatiNFT DAO',\n                image: 'https://i.seadn.io/gcs/files/79a77cb37c7b2f1069f752645d29fea7.jpg?w=500&auto=format',\n                token_id: '1',\n                collection: {\n                    name: 'IlluminatiNFT DAO',\n                    image: 'https://i.seadn.io/gae/LTKz3om2eCQfn3M6PkqEmY7KhLtdMCOm0QVch2318KJq7-KyToCH7NBTMo4UuJ0AZI-oaBh1HcgrAEIEWYbXY3uMcYpuGXunaXEh?w=500&auto=format',\n                    symbol: 'TRUTH',\n                    address: '0xe25f0fe686477f9df3c2876c4902d3b85f75f33a',\n                },\n            },\n            from: '0x0000000000000000000000000000000000000000',\n            kind: 'erc1155_sent',\n            network_fee: {\n                gas_price: '33571446596',\n                native_token_price_in_usd: '2038.88',\n            },\n        },\n        id: 'a09ff9d1-623a-52ab-a3d4-c7c8c9a58362',\n        trigger_id: 'e2130f7d-78b8-4c34-999a-3f3d3bb5b03c',\n        tx_hash: '0x03381aba290facbaf71c123e263c8dc3dd550aac00ef589cce395182eaeff76f',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationERC1155Sent = createMockNotificationERC1155Sent;\n/**\n * Mocking Utility - create a mock ERC1155 received notification\n * @returns Mock raw ERC1155 received notification\n */\nfunction createMockNotificationERC1155Received() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ERC1155_RECEIVED,\n        block_number: 18615206,\n        block_timestamp: '1700510003',\n        chain_id: 1,\n        created_at: '2023-11-20T20:44:10.110706Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            to: '0x15bd77ccacf2da39b84f0c31fee2e451225bb190',\n            nft: {\n                name: 'IlluminatiNFT DAO',\n                image: 'https://i.seadn.io/gcs/files/79a77cb37c7b2f1069f752645d29fea7.jpg?w=500&auto=format',\n                token_id: '1',\n                collection: {\n                    name: 'IlluminatiNFT DAO',\n                    image: 'https://i.seadn.io/gae/LTKz3om2eCQfn3M6PkqEmY7KhLtdMCOm0QVch2318KJq7-KyToCH7NBTMo4UuJ0AZI-oaBh1HcgrAEIEWYbXY3uMcYpuGXunaXEh?w=500&auto=format',\n                    symbol: 'TRUTH',\n                    address: '0xe25f0fe686477f9df3c2876c4902d3b85f75f33a',\n                },\n            },\n            from: '0x0000000000000000000000000000000000000000',\n            kind: 'erc1155_received',\n            network_fee: {\n                gas_price: '33571446596',\n                native_token_price_in_usd: '2038.88',\n            },\n        },\n        id: 'b6b93c84-e8dc-54ed-9396-7ea50474843a',\n        trigger_id: '710c8abb-43a9-42a5-9d86-9dd258726c82',\n        tx_hash: '0x03381aba290facbaf71c123e263c8dc3dd550aac00ef589cce395182eaeff76f',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationERC1155Received = createMockNotificationERC1155Received;\n/**\n * Mocking Utility - create a mock MetaMask Swaps notification\n * @returns Mock raw MetaMask Swaps notification\n */\nfunction createMockNotificationMetaMaskSwapsCompleted() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.METAMASK_SWAP_COMPLETED,\n        block_number: 18377666,\n        block_timestamp: '1697637275',\n        chain_id: 1,\n        created_at: '2023-10-18T13:58:49.854596Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'metamask_swap_completed',\n            rate: '1558.27',\n            token_in: {\n                usd: '1576.73',\n                image: 'https://token.api.cx.metamask.io/assets/nativeCurrencyLogos/ethereum.svg',\n                amount: '9000000000000000',\n                symbol: 'ETH',\n                address: '0x0000000000000000000000000000000000000000',\n                decimals: '18',\n                name: 'Ethereum',\n            },\n            token_out: {\n                usd: '1.00',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/usdt.svg',\n                amount: '14024419',\n                symbol: 'USDT',\n                address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n                decimals: '6',\n                name: 'USDT',\n            },\n            network_fee: {\n                gas_price: '15406129273',\n                native_token_price_in_usd: '1576.73',\n            },\n        },\n        id: '7ddfe6a1-ac52-5ffe-aa40-f04242db4b8b',\n        trigger_id: 'd2eaa2eb-2e6e-4fd5-8763-b70ea571b46c',\n        tx_hash: '0xf69074290f3aa11bce567aabc9ca0df7a12559dfae1b80ba1a124e9dfe19ecc5',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationMetaMaskSwapsCompleted = createMockNotificationMetaMaskSwapsCompleted;\n/**\n * Mocking Utility - create a mock RocketPool Stake Completed notification\n * @returns Mock raw RocketPool Stake Completed notification\n */\nfunction createMockNotificationRocketPoolStakeCompleted() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ROCKETPOOL_STAKE_COMPLETED,\n        block_number: 18585057,\n        block_timestamp: '1700145059',\n        chain_id: 1,\n        created_at: '2023-11-20T12:02:48.796824Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'rocketpool_stake_completed',\n            stake_in: {\n                usd: '2031.86',\n                name: 'Ethereum',\n                image: 'https://token.api.cx.metamask.io/assets/nativeCurrencyLogos/ethereum.svg',\n                amount: '190690478063438272',\n                symbol: 'ETH',\n                address: '0x0000000000000000000000000000000000000000',\n                decimals: '18',\n            },\n            stake_out: {\n                usd: '2226.49',\n                name: 'Rocket Pool ETH',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/rETH.svg',\n                amount: '175024360778165879',\n                symbol: 'RETH',\n                address: '0xae78736Cd615f374D3085123A210448E74Fc6393',\n                decimals: '18',\n            },\n            network_fee: {\n                gas_price: '36000000000',\n                native_token_price_in_usd: '2031.86',\n            },\n        },\n        id: 'c2a2f225-b2fb-5d6c-ba56-e27a5c71ffb9',\n        trigger_id: '5110ff97-acff-40c0-83b4-11d487b8c7b0',\n        tx_hash: '0xcfc0693bf47995907b0f46ef0644cf16dd9a0de797099b2e00fd481e1b2117d3',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationRocketPoolStakeCompleted = createMockNotificationRocketPoolStakeCompleted;\n/**\n * Mocking Utility - create a mock RocketPool Un-staked notification\n * @returns Mock raw RocketPool Un-staked notification\n */\nfunction createMockNotificationRocketPoolUnStakeCompleted() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.ROCKETPOOL_UNSTAKE_COMPLETED,\n        block_number: 18384336,\n        block_timestamp: '1697718011',\n        chain_id: 1,\n        created_at: '2023-10-19T13:11:10.623042Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'rocketpool_unstake_completed',\n            stake_in: {\n                usd: '1686.34',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/rETH.svg',\n                amount: '66608041413696770',\n                symbol: 'RETH',\n                address: '0xae78736Cd615f374D3085123A210448E74Fc6393',\n                decimals: '18',\n                name: 'Rocketpool Eth',\n            },\n            stake_out: {\n                usd: '1553.75',\n                image: 'https://token.api.cx.metamask.io/assets/nativeCurrencyLogos/ethereum.svg',\n                amount: '72387843427700824',\n                symbol: 'ETH',\n                address: '0x0000000000000000000000000000000000000000',\n                decimals: '18',\n                name: 'Ethereum',\n            },\n            network_fee: {\n                gas_price: '5656322987',\n                native_token_price_in_usd: '1553.75',\n            },\n        },\n        id: 'd8c246e7-a0a4-5f1d-b079-2b1707665fbc',\n        trigger_id: '291ec897-f569-4837-b6c0-21001b198dff',\n        tx_hash: '0xc7972a7e409abfc62590ec90e633acd70b9b74e76ad02305be8bf133a0e22d5f',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationRocketPoolUnStakeCompleted = createMockNotificationRocketPoolUnStakeCompleted;\n/**\n * Mocking Utility - create a mock Lido Stake Completed notification\n * @returns Mock raw Lido Stake Completed notification\n */\nfunction createMockNotificationLidoStakeCompleted() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.LIDO_STAKE_COMPLETED,\n        block_number: 18487118,\n        block_timestamp: '1698961091',\n        chain_id: 1,\n        created_at: '2023-11-02T22:28:49.970865Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'lido_stake_completed',\n            stake_in: {\n                usd: '1806.33',\n                name: 'Ethereum',\n                image: 'https://token.api.cx.metamask.io/assets/nativeCurrencyLogos/ethereum.svg',\n                amount: '330303634023928032',\n                symbol: 'ETH',\n                address: '0x0000000000000000000000000000000000000000',\n                decimals: '18',\n            },\n            stake_out: {\n                usd: '1801.30',\n                name: 'Liquid staked Ether 2.0',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/stETH.svg',\n                amount: '330303634023928032',\n                symbol: 'STETH',\n                address: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',\n                decimals: '18',\n            },\n            network_fee: {\n                gas_price: '26536359866',\n                native_token_price_in_usd: '1806.33',\n            },\n        },\n        id: '9d9b1467-b3ee-5492-8ca2-22382657b690',\n        trigger_id: 'ec10d66a-f78f-461f-83c9-609aada8cc50',\n        tx_hash: '0x8cc0fa805f7c3b1743b14f3b91c6b824113b094f26d4ccaf6a71ad8547ce6a0f',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationLidoStakeCompleted = createMockNotificationLidoStakeCompleted;\n/**\n * Mocking Utility - create a mock Lido Withdrawal Requested notification\n * @returns Mock raw Lido Withdrawal Requested notification\n */\nfunction createMockNotificationLidoWithdrawalRequested() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.LIDO_WITHDRAWAL_REQUESTED,\n        block_number: 18377760,\n        block_timestamp: '1697638415',\n        chain_id: 1,\n        created_at: '2023-10-18T15:04:02.482526Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'lido_withdrawal_requested',\n            stake_in: {\n                usd: '1568.54',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/stETH.svg',\n                amount: '97180668792218669859',\n                symbol: 'STETH',\n                address: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',\n                decimals: '18',\n                name: 'Staked Eth',\n            },\n            stake_out: {\n                usd: '1576.73',\n                image: 'https://token.api.cx.metamask.io/assets/nativeCurrencyLogos/ethereum.svg',\n                amount: '97180668792218669859',\n                symbol: 'ETH',\n                address: '0x0000000000000000000000000000000000000000',\n                decimals: '18',\n                name: 'Ethereum',\n            },\n            network_fee: {\n                gas_price: '11658906980',\n                native_token_price_in_usd: '1576.73',\n            },\n        },\n        id: '29ddc718-78c6-5f91-936f-2bef13a605f0',\n        trigger_id: 'ef003925-3379-4ba7-9e2d-8218690cadc8',\n        tx_hash: '0x58b5f82e084cb750ea174e02b20fbdfd2ba8d78053deac787f34fc38e5d427aa',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationLidoWithdrawalRequested = createMockNotificationLidoWithdrawalRequested;\n/**\n * Mocking Utility - create a mock Lido Withdrawal Completed notification\n * @returns Mock raw Lido Withdrawal Completed notification\n */\nfunction createMockNotificationLidoWithdrawalCompleted() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.LIDO_WITHDRAWAL_COMPLETED,\n        block_number: 18378208,\n        block_timestamp: '1697643851',\n        chain_id: 1,\n        created_at: '2023-10-18T16:35:03.147606Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'lido_withdrawal_completed',\n            stake_in: {\n                usd: '1570.23',\n                image: 'https://raw.githubusercontent.com/MetaMask/contract-metadata/master/images/stETH.svg',\n                amount: '35081997661451346',\n                symbol: 'STETH',\n                address: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',\n                decimals: '18',\n                name: 'Staked Eth',\n            },\n            stake_out: {\n                usd: '1571.74',\n                image: 'https://token.api.cx.metamask.io/assets/nativeCurrencyLogos/ethereum.svg',\n                amount: '35081997661451346',\n                symbol: 'ETH',\n                address: '0x0000000000000000000000000000000000000000',\n                decimals: '18',\n                name: 'Ethereum',\n            },\n            network_fee: {\n                gas_price: '12699495150',\n                native_token_price_in_usd: '1571.74',\n            },\n        },\n        id: 'f4ef0b7f-5612-537f-9144-0b5c63ae5391',\n        trigger_id: 'd73df14d-ce73-4f38-bad3-ab028154042c',\n        tx_hash: '0xe6d210d2e601ef3dd1075c48e71452cf35f2daae3886911e964e3babad8ac657',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationLidoWithdrawalCompleted = createMockNotificationLidoWithdrawalCompleted;\n/**\n * Mocking Utility - create a mock Lido Withdrawal Ready notification\n * @returns Mock raw Lido Withdrawal Ready notification\n */\nfunction createMockNotificationLidoReadyToBeWithdrawn() {\n    const mockNotification = {\n        type: notification_schema_1.TRIGGER_TYPES.LIDO_STAKE_READY_TO_BE_WITHDRAWN,\n        block_number: 18378208,\n        block_timestamp: '1697643851',\n        chain_id: 1,\n        created_at: '2023-10-18T16:35:03.147606Z',\n        address: '0x881D40237659C251811CEC9c364ef91dC08D300C',\n        data: {\n            kind: 'lido_stake_ready_to_be_withdrawn',\n            request_id: '123456789',\n            staked_eth: {\n                address: '0x881D40237659C251811CEC9c364ef91dC08D300F',\n                symbol: 'ETH',\n                name: 'Ethereum',\n                amount: '2.5',\n                decimals: '18',\n                image: 'https://token.api.cx.metamask.io/assets/nativeCurrencyLogos/ethereum.svg',\n                usd: '10000.00',\n            },\n        },\n        id: 'f4ef0b7f-5612-537f-9144-0b5c63ae5391',\n        trigger_id: 'd73df14d-ce73-4f38-bad3-ab028154042c',\n        tx_hash: '0xe6d210d2e601ef3dd1075c48e71452cf35f2daae3886911e964e3babad8ac657',\n        unread: true,\n    };\n    return mockNotification;\n}\nexports.createMockNotificationLidoReadyToBeWithdrawn = createMockNotificationLidoReadyToBeWithdrawn;\n/**\n * Mocking Utility - creates an array of raw on-chain notifications\n * @returns Array of raw on-chain notifications\n */\nfunction createMockRawOnChainNotifications() {\n    return [1, 2, 3].map((id) => {\n        const notification = createMockNotificationEthSent();\n        notification.id += `-${id}`;\n        return notification;\n    });\n}\nexports.createMockRawOnChainNotifications = createMockRawOnChainNotifications;\n//# sourceMappingURL=mock-raw-notifications.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMockMarkNotificationsAsReadResponse = exports.getMockListNotificationsResponse = exports.MOCK_RAW_ON_CHAIN_NOTIFICATIONS = exports.getMockBatchDeleteTriggersResponse = exports.getMockBatchCreateTriggersResponse = exports.getMockFeatureAnnouncementResponse = exports.CONTENTFUL_RESPONSE = void 0;\nconst feature_announcements_1 = require(\"../services/feature-announcements.cjs\");\nconst onchain_notifications_1 = require(\"../services/onchain-notifications.cjs\");\nconst mock_feature_announcements_1 = require(\"./mock-feature-announcements.cjs\");\nconst mock_raw_notifications_1 = require(\"./mock-raw-notifications.cjs\");\nexports.CONTENTFUL_RESPONSE = (0, mock_feature_announcements_1.createMockFeatureAnnouncementAPIResult)();\nconst getMockFeatureAnnouncementResponse = () => {\n    return {\n        url: feature_announcements_1.FEATURE_ANNOUNCEMENT_API,\n        requestMethod: 'GET',\n        response: exports.CONTENTFUL_RESPONSE,\n    };\n};\nexports.getMockFeatureAnnouncementResponse = getMockFeatureAnnouncementResponse;\nconst getMockBatchCreateTriggersResponse = () => {\n    return {\n        url: onchain_notifications_1.TRIGGER_API_BATCH_ENDPOINT,\n        requestMethod: 'POST',\n        response: null,\n    };\n};\nexports.getMockBatchCreateTriggersResponse = getMockBatchCreateTriggersResponse;\nconst getMockBatchDeleteTriggersResponse = () => {\n    return {\n        url: onchain_notifications_1.TRIGGER_API_BATCH_ENDPOINT,\n        requestMethod: 'DELETE',\n        response: null,\n    };\n};\nexports.getMockBatchDeleteTriggersResponse = getMockBatchDeleteTriggersResponse;\nexports.MOCK_RAW_ON_CHAIN_NOTIFICATIONS = (0, mock_raw_notifications_1.createMockRawOnChainNotifications)();\nconst getMockListNotificationsResponse = () => {\n    return {\n        url: onchain_notifications_1.NOTIFICATION_API_LIST_ENDPOINT,\n        requestMethod: 'POST',\n        response: exports.MOCK_RAW_ON_CHAIN_NOTIFICATIONS,\n    };\n};\nexports.getMockListNotificationsResponse = getMockListNotificationsResponse;\nconst getMockMarkNotificationsAsReadResponse = () => {\n    return {\n        url: onchain_notifications_1.NOTIFICATION_API_MARK_ALL_AS_READ_ENDPOINT,\n        requestMethod: 'POST',\n        response: null,\n    };\n};\nexports.getMockMarkNotificationsAsReadResponse = getMockMarkNotificationsAsReadResponse;\n//# sourceMappingURL=mockResponses.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.USER_STORAGE_VERSION_KEY = exports.USER_STORAGE_VERSION = void 0;\nexports.USER_STORAGE_VERSION = '1';\n// Force cast. We don't really care about the type here since we treat it as a unique symbol\nexports.USER_STORAGE_VERSION_KEY = 'v';\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./constants.cjs\"), exports);\n__exportStar(require(\"./notification-schema.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TRIGGERS = exports.SUPPORTED_CHAINS = exports.CHAIN_SYMBOLS = exports.NOTIFICATION_CHAINS = exports.NOTIFICATION_CHAINS_ID = exports.TRIGGER_TYPES_GROUPS = exports.TRIGGER_TYPES_WALLET_SET = exports.TRIGGER_TYPES = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nvar TRIGGER_TYPES;\n(function (TRIGGER_TYPES) {\n    TRIGGER_TYPES[\"FEATURES_ANNOUNCEMENT\"] = \"features_announcement\";\n    TRIGGER_TYPES[\"METAMASK_SWAP_COMPLETED\"] = \"metamask_swap_completed\";\n    TRIGGER_TYPES[\"ERC20_SENT\"] = \"erc20_sent\";\n    TRIGGER_TYPES[\"ERC20_RECEIVED\"] = \"erc20_received\";\n    TRIGGER_TYPES[\"ETH_SENT\"] = \"eth_sent\";\n    TRIGGER_TYPES[\"ETH_RECEIVED\"] = \"eth_received\";\n    TRIGGER_TYPES[\"ROCKETPOOL_STAKE_COMPLETED\"] = \"rocketpool_stake_completed\";\n    TRIGGER_TYPES[\"ROCKETPOOL_UNSTAKE_COMPLETED\"] = \"rocketpool_unstake_completed\";\n    TRIGGER_TYPES[\"LIDO_STAKE_COMPLETED\"] = \"lido_stake_completed\";\n    TRIGGER_TYPES[\"LIDO_WITHDRAWAL_REQUESTED\"] = \"lido_withdrawal_requested\";\n    TRIGGER_TYPES[\"LIDO_WITHDRAWAL_COMPLETED\"] = \"lido_withdrawal_completed\";\n    TRIGGER_TYPES[\"LIDO_STAKE_READY_TO_BE_WITHDRAWN\"] = \"lido_stake_ready_to_be_withdrawn\";\n    TRIGGER_TYPES[\"ERC721_SENT\"] = \"erc721_sent\";\n    TRIGGER_TYPES[\"ERC721_RECEIVED\"] = \"erc721_received\";\n    TRIGGER_TYPES[\"ERC1155_SENT\"] = \"erc1155_sent\";\n    TRIGGER_TYPES[\"ERC1155_RECEIVED\"] = \"erc1155_received\";\n})(TRIGGER_TYPES || (exports.TRIGGER_TYPES = TRIGGER_TYPES = {}));\nexports.TRIGGER_TYPES_WALLET_SET = new Set([\n    TRIGGER_TYPES.METAMASK_SWAP_COMPLETED,\n    TRIGGER_TYPES.ERC20_SENT,\n    TRIGGER_TYPES.ERC20_RECEIVED,\n    TRIGGER_TYPES.ETH_SENT,\n    TRIGGER_TYPES.ETH_RECEIVED,\n    TRIGGER_TYPES.ROCKETPOOL_STAKE_COMPLETED,\n    TRIGGER_TYPES.ROCKETPOOL_UNSTAKE_COMPLETED,\n    TRIGGER_TYPES.LIDO_STAKE_COMPLETED,\n    TRIGGER_TYPES.LIDO_WITHDRAWAL_REQUESTED,\n    TRIGGER_TYPES.LIDO_WITHDRAWAL_COMPLETED,\n    TRIGGER_TYPES.LIDO_STAKE_READY_TO_BE_WITHDRAWN,\n    TRIGGER_TYPES.ERC721_SENT,\n    TRIGGER_TYPES.ERC721_RECEIVED,\n    TRIGGER_TYPES.ERC1155_SENT,\n    TRIGGER_TYPES.ERC1155_RECEIVED,\n]);\nvar TRIGGER_TYPES_GROUPS;\n(function (TRIGGER_TYPES_GROUPS) {\n    TRIGGER_TYPES_GROUPS[\"RECEIVED\"] = \"received\";\n    TRIGGER_TYPES_GROUPS[\"SENT\"] = \"sent\";\n    TRIGGER_TYPES_GROUPS[\"DEFI\"] = \"defi\";\n})(TRIGGER_TYPES_GROUPS || (exports.TRIGGER_TYPES_GROUPS = TRIGGER_TYPES_GROUPS = {}));\nexports.NOTIFICATION_CHAINS_ID = {\n    ETHEREUM: '1',\n    OPTIMISM: '10',\n    BSC: '56',\n    POLYGON: '137',\n    ARBITRUM: '42161',\n    AVALANCHE: '43114',\n    LINEA: '59144',\n};\nexports.NOTIFICATION_CHAINS = exports.NOTIFICATION_CHAINS_ID;\nexports.CHAIN_SYMBOLS = {\n    [exports.NOTIFICATION_CHAINS.ETHEREUM]: 'ETH',\n    [exports.NOTIFICATION_CHAINS.OPTIMISM]: 'ETH',\n    [exports.NOTIFICATION_CHAINS.BSC]: 'BNB',\n    [exports.NOTIFICATION_CHAINS.POLYGON]: 'POL',\n    [exports.NOTIFICATION_CHAINS.ARBITRUM]: 'ETH',\n    [exports.NOTIFICATION_CHAINS.AVALANCHE]: 'AVAX',\n    [exports.NOTIFICATION_CHAINS.LINEA]: 'ETH',\n};\nexports.SUPPORTED_CHAINS = [\n    exports.NOTIFICATION_CHAINS.ETHEREUM,\n    exports.NOTIFICATION_CHAINS.OPTIMISM,\n    exports.NOTIFICATION_CHAINS.BSC,\n    exports.NOTIFICATION_CHAINS.POLYGON,\n    exports.NOTIFICATION_CHAINS.ARBITRUM,\n    exports.NOTIFICATION_CHAINS.AVALANCHE,\n    exports.NOTIFICATION_CHAINS.LINEA,\n];\nexports.TRIGGERS = {\n    [TRIGGER_TYPES.METAMASK_SWAP_COMPLETED]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.OPTIMISM,\n            exports.NOTIFICATION_CHAINS.BSC,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n            exports.NOTIFICATION_CHAINS.ARBITRUM,\n            exports.NOTIFICATION_CHAINS.AVALANCHE,\n        ],\n    },\n    [TRIGGER_TYPES.ERC20_SENT]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.OPTIMISM,\n            exports.NOTIFICATION_CHAINS.BSC,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n            exports.NOTIFICATION_CHAINS.ARBITRUM,\n            exports.NOTIFICATION_CHAINS.AVALANCHE,\n            exports.NOTIFICATION_CHAINS.LINEA,\n        ],\n    },\n    [TRIGGER_TYPES.ERC20_RECEIVED]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.OPTIMISM,\n            exports.NOTIFICATION_CHAINS.BSC,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n            exports.NOTIFICATION_CHAINS.ARBITRUM,\n            exports.NOTIFICATION_CHAINS.AVALANCHE,\n            exports.NOTIFICATION_CHAINS.LINEA,\n        ],\n    },\n    [TRIGGER_TYPES.ERC721_SENT]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n        ],\n    },\n    [TRIGGER_TYPES.ERC721_RECEIVED]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n        ],\n    },\n    [TRIGGER_TYPES.ERC1155_SENT]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n        ],\n    },\n    [TRIGGER_TYPES.ERC1155_RECEIVED]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n        ],\n    },\n    [TRIGGER_TYPES.ETH_SENT]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.OPTIMISM,\n            exports.NOTIFICATION_CHAINS.BSC,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n            exports.NOTIFICATION_CHAINS.ARBITRUM,\n            exports.NOTIFICATION_CHAINS.AVALANCHE,\n            exports.NOTIFICATION_CHAINS.LINEA,\n        ],\n    },\n    [TRIGGER_TYPES.ETH_RECEIVED]: {\n        supported_chains: [\n            exports.NOTIFICATION_CHAINS.ETHEREUM,\n            exports.NOTIFICATION_CHAINS.OPTIMISM,\n            exports.NOTIFICATION_CHAINS.BSC,\n            exports.NOTIFICATION_CHAINS.POLYGON,\n            exports.NOTIFICATION_CHAINS.ARBITRUM,\n            exports.NOTIFICATION_CHAINS.AVALANCHE,\n            exports.NOTIFICATION_CHAINS.LINEA,\n        ],\n    },\n    [TRIGGER_TYPES.ROCKETPOOL_STAKE_COMPLETED]: {\n        supported_chains: [exports.NOTIFICATION_CHAINS.ETHEREUM],\n    },\n    [TRIGGER_TYPES.ROCKETPOOL_UNSTAKE_COMPLETED]: {\n        supported_chains: [exports.NOTIFICATION_CHAINS.ETHEREUM],\n    },\n    [TRIGGER_TYPES.LIDO_STAKE_COMPLETED]: {\n        supported_chains: [exports.NOTIFICATION_CHAINS.ETHEREUM],\n    },\n    [TRIGGER_TYPES.LIDO_WITHDRAWAL_REQUESTED]: {\n        supported_chains: [exports.NOTIFICATION_CHAINS.ETHEREUM],\n    },\n    [TRIGGER_TYPES.LIDO_WITHDRAWAL_COMPLETED]: {\n        supported_chains: [exports.NOTIFICATION_CHAINS.ETHEREUM],\n    },\n};\n//# sourceMappingURL=notification-schema.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UI = exports.Mocks = exports.Constants = exports.Processors = exports.Types = exports.Controller = void 0;\nconst NotificationServicesController_1 = __importDefault(require(\"./NotificationServicesController.cjs\"));\nexports.Controller = NotificationServicesController_1.default;\nconst NotificationServicesController = NotificationServicesController_1.default;\nexports.default = NotificationServicesController;\n__exportStar(require(\"./NotificationServicesController.cjs\"), exports);\nexports.Types = __importStar(require(\"./types/index.cjs\"));\n__exportStar(require(\"./types/index.cjs\"), exports);\nexports.Processors = __importStar(require(\"./processors/index.cjs\"));\n__exportStar(require(\"./processors/index.cjs\"), exports);\nexports.Constants = __importStar(require(\"./constants/index.cjs\"));\n__exportStar(require(\"./constants/index.cjs\"), exports);\nexports.Mocks = __importStar(require(\"./__fixtures__/index.cjs\"));\nexports.UI = __importStar(require(\"./ui/index.cjs\"));\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./process-feature-announcement.cjs\"), exports);\n__exportStar(require(\"./process-notifications.cjs\"), exports);\n__exportStar(require(\"./process-onchain-notifications.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.processFeatureAnnouncement = exports.isFeatureAnnouncementRead = void 0;\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24;\nconst shouldAutoExpire = (oldDate) => {\n    const differenceInTime = Date.now() - oldDate.getTime();\n    const differenceInDays = differenceInTime / ONE_DAY_MS;\n    return differenceInDays >= 90;\n};\n/**\n * Checks if a feature announcement should be read.\n * Checks feature announcement state (from param), as well as if the notification is \"expired\"\n *\n * @param notification - notification to check\n * @param readPlatformNotificationsList - list of read notifications\n * @returns boolean if notification should be marked as read or unread\n */\nfunction isFeatureAnnouncementRead(notification, readPlatformNotificationsList) {\n    if (readPlatformNotificationsList.includes(notification.id)) {\n        return true;\n    }\n    return shouldAutoExpire(new Date(notification.createdAt));\n}\nexports.isFeatureAnnouncementRead = isFeatureAnnouncementRead;\n/**\n * Processes a feature announcement into a shared/normalised notification shape.\n *\n * @param notification - raw feature announcement\n * @returns a normalised feature announcement\n */\nfunction processFeatureAnnouncement(notification) {\n    return {\n        type: notification.type,\n        id: notification.data.id,\n        createdAt: new Date(notification.createdAt).toISOString(),\n        data: notification.data,\n        isRead: false,\n    };\n}\nexports.processFeatureAnnouncement = processFeatureAnnouncement;\n//# sourceMappingURL=process-feature-announcement.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeProcessNotification = exports.processNotification = void 0;\nconst notification_schema_1 = require(\"../constants/notification-schema.cjs\");\nconst process_feature_announcement_1 = require(\"./process-feature-announcement.cjs\");\nconst process_onchain_notifications_1 = require(\"./process-onchain-notifications.cjs\");\nconst isOnChainNotification = (n) => Object.values(notification_schema_1.TRIGGER_TYPES).includes(n.type);\nconst isFeatureAnnouncement = (n) => n.type === notification_schema_1.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT;\n/**\n * Process feature announcement and wallet notifications into a shared/normalised notification shape.\n * We can still differentiate notifications by the `type` property\n *\n * @param notification - a feature announcement or on chain notification\n * @param readNotifications - all read notifications currently\n * @returns a processed notification\n */\nfunction processNotification(notification, readNotifications = []) {\n    const exhaustedAllCases = (_) => {\n        const type = notification?.type;\n        throw new Error(`No processor found for notification kind ${type}`);\n    };\n    if (isFeatureAnnouncement(notification)) {\n        const n = (0, process_feature_announcement_1.processFeatureAnnouncement)(notification);\n        n.isRead = (0, process_feature_announcement_1.isFeatureAnnouncementRead)(n, readNotifications);\n        return n;\n    }\n    if (isOnChainNotification(notification)) {\n        return (0, process_onchain_notifications_1.processOnChainNotification)(notification);\n    }\n    return exhaustedAllCases(notification);\n}\nexports.processNotification = processNotification;\n/**\n * Safe version of processing a notification. Rather than throwing an error if failed to process, it will return the Notification or undefined\n *\n * @param notification - notification to processes\n * @param readNotifications - all read notifications currently\n * @returns a process notification or undefined if failed to process\n */\nfunction safeProcessNotification(notification, readNotifications = []) {\n    try {\n        const processedNotification = processNotification(notification, readNotifications);\n        return processedNotification;\n    }\n    catch {\n        return undefined;\n    }\n}\nexports.safeProcessNotification = safeProcessNotification;\n//# sourceMappingURL=process-notifications.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.processOnChainNotification = void 0;\n/**\n * Processes On-Chain notifications to a normalized notification\n *\n * @param notification - On-Chain Notification\n * @returns Normalized Notification\n */\nfunction processOnChainNotification(notification) {\n    return {\n        ...notification,\n        id: notification.id,\n        createdAt: new Date(notification.created_at).toISOString(),\n        isRead: !notification.unread,\n    };\n}\nexports.processOnChainNotification = processOnChainNotification;\n//# sourceMappingURL=process-onchain-notifications.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeatureAnnouncementNotifications = exports.FEATURE_ANNOUNCEMENT_URL = exports.FEATURE_ANNOUNCEMENT_API = void 0;\nconst rich_text_html_renderer_1 = require(\"@contentful/rich-text-html-renderer\");\nconst notification_schema_1 = require(\"../constants/notification-schema.cjs\");\nconst process_feature_announcement_1 = require(\"../processors/process-feature-announcement.cjs\");\nconst DEFAULT_SPACE_ID = ':space_id';\nconst DEFAULT_ACCESS_TOKEN = ':access_token';\nconst DEFAULT_CLIENT_ID = ':client_id';\nexports.FEATURE_ANNOUNCEMENT_API = `https://cdn.contentful.com/spaces/${DEFAULT_SPACE_ID}/environments/master/entries`;\nexports.FEATURE_ANNOUNCEMENT_URL = `${exports.FEATURE_ANNOUNCEMENT_API}?access_token=${DEFAULT_ACCESS_TOKEN}&content_type=productAnnouncement&include=10&fields.clients=${DEFAULT_CLIENT_ID}`;\nconst getFeatureAnnouncementUrl = (env) => exports.FEATURE_ANNOUNCEMENT_URL.replace(DEFAULT_SPACE_ID, env.spaceId)\n    .replace(DEFAULT_ACCESS_TOKEN, env.accessToken)\n    .replace(DEFAULT_CLIENT_ID, env.platform);\nconst fetchFeatureAnnouncementNotifications = async (env) => {\n    const url = getFeatureAnnouncementUrl(env);\n    const data = await fetch(url)\n        .then((r) => r.json())\n        .catch(() => null);\n    if (!data) {\n        return [];\n    }\n    const findIncludedItem = (sysId) => {\n        const typedData = data;\n        const item = typedData?.includes?.Entry?.find((i) => i?.sys?.id === sysId) ||\n            typedData?.includes?.Asset?.find((i) => i?.sys?.id === sysId);\n        return item ? item?.fields : null;\n    };\n    const contentfulNotifications = data?.items ?? [];\n    const rawNotifications = contentfulNotifications.map((n) => {\n        const { fields } = n;\n        const imageFields = fields.image\n            ? findIncludedItem(fields.image.sys.id)\n            : undefined;\n        const externalLinkFields = fields.externalLink\n            ? findIncludedItem(fields.externalLink.sys.id)\n            : undefined;\n        const portfolioLinkFields = fields.portfolioLink\n            ? findIncludedItem(fields.portfolioLink.sys.id)\n            : undefined;\n        const extensionLinkFields = fields.extensionLink\n            ? findIncludedItem(fields.extensionLink.sys.id)\n            : undefined;\n        const mobileLinkFields = fields.mobileLink\n            ? findIncludedItem(fields.mobileLink.sys.id)\n            : undefined;\n        const notification = {\n            type: notification_schema_1.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT,\n            createdAt: new Date(n.sys.createdAt).toString(),\n            data: {\n                id: fields.id,\n                category: fields.category,\n                title: fields.title,\n                longDescription: (0, rich_text_html_renderer_1.documentToHtmlString)(fields.longDescription),\n                shortDescription: fields.shortDescription,\n                image: {\n                    title: imageFields?.title,\n                    description: imageFields?.description,\n                    url: imageFields?.file?.url ?? '',\n                },\n                externalLink: externalLinkFields && {\n                    externalLinkText: externalLinkFields?.externalLinkText,\n                    externalLinkUrl: externalLinkFields?.externalLinkUrl,\n                },\n                portfolioLink: portfolioLinkFields && {\n                    portfolioLinkText: portfolioLinkFields?.portfolioLinkText,\n                    portfolioLinkUrl: portfolioLinkFields?.portfolioLinkUrl,\n                },\n                extensionLink: extensionLinkFields && {\n                    extensionLinkText: extensionLinkFields?.extensionLinkText,\n                    extensionLinkRoute: extensionLinkFields?.extensionLinkRoute,\n                },\n                mobileLink: mobileLinkFields && {\n                    mobileLinkText: mobileLinkFields?.mobileLinkText,\n                    mobileLinkUrl: mobileLinkFields?.mobileLinkUrl,\n                },\n            },\n        };\n        return notification;\n    });\n    return rawNotifications;\n};\n/**\n * Gets Feature Announcement from our services\n * @param env - environment for feature announcements\n * @returns Raw Feature Announcements\n */\nasync function getFeatureAnnouncementNotifications(env) {\n    if (env?.accessToken && env?.spaceId && env?.platform) {\n        const rawNotifications = await fetchFeatureAnnouncementNotifications(env);\n        const notifications = rawNotifications.map((notification) => (0, process_feature_announcement_1.processFeatureAnnouncement)(notification));\n        return notifications;\n    }\n    return [];\n}\nexports.getFeatureAnnouncementNotifications = getFeatureAnnouncementNotifications;\n//# sourceMappingURL=feature-announcements.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.markNotificationsAsRead = exports.getOnChainNotifications = exports.deleteOnChainTriggers = exports.createOnChainTriggers = exports.NOTIFICATION_API_MARK_ALL_AS_READ_ENDPOINT = exports.NOTIFICATION_API_LIST_ENDPOINT_PAGE_QUERY = exports.NOTIFICATION_API_LIST_ENDPOINT = exports.TRIGGER_API_BATCH_ENDPOINT = exports.NOTIFICATION_API = exports.TRIGGER_API = void 0;\nconst profile_sync_controller_1 = require(\"@metamask/profile-sync-controller\");\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst to_raw_notification_1 = require(\"../../shared/to-raw-notification.cjs\");\nconst utils_1 = require(\"../utils/utils.cjs\");\nexports.TRIGGER_API = 'https://trigger.api.cx.metamask.io';\nexports.NOTIFICATION_API = 'https://notification.api.cx.metamask.io';\nexports.TRIGGER_API_BATCH_ENDPOINT = `${exports.TRIGGER_API}/api/v1/triggers/batch`;\nexports.NOTIFICATION_API_LIST_ENDPOINT = `${exports.NOTIFICATION_API}/api/v1/notifications`;\nconst NOTIFICATION_API_LIST_ENDPOINT_PAGE_QUERY = (page) => `${exports.NOTIFICATION_API_LIST_ENDPOINT}?page=${page}&per_page=100`;\nexports.NOTIFICATION_API_LIST_ENDPOINT_PAGE_QUERY = NOTIFICATION_API_LIST_ENDPOINT_PAGE_QUERY;\nexports.NOTIFICATION_API_MARK_ALL_AS_READ_ENDPOINT = `${exports.NOTIFICATION_API}/api/v1/notifications/mark-as-read`;\n/**\n * Creates on-chain triggers based on the provided notification triggers.\n * This method generates a unique token for each trigger using the trigger ID and storage key,\n * proving ownership of the trigger being updated. It then makes an API call to create these triggers.\n * Upon successful creation, it updates the userStorage to reflect the new trigger status.\n *\n * @param userStorage - The user's storage object where triggers and their statuses are stored.\n * @param storageKey - A key used along with the trigger ID to generate a unique token for each trigger.\n * @param bearerToken - The JSON Web Token used for authentication in the API call.\n * @param triggers - An array of notification triggers to be created. Each trigger includes an ID, chain ID, kind, and address.\n * @returns A promise that resolves to void. Throws an error if the API call fails or if there's an issue creating the triggers.\n */\nasync function createOnChainTriggers(userStorage, storageKey, bearerToken, triggers) {\n    const triggersToCreate = triggers.map((t) => ({\n        id: t.id,\n        token: profile_sync_controller_1.UserStorageController.createSHA256Hash(t.id + storageKey),\n        config: {\n            kind: t.kind,\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            chain_id: Number(t.chainId),\n            address: t.address,\n        },\n    }));\n    if (triggersToCreate.length === 0) {\n        return;\n    }\n    const response = await (0, utils_1.makeApiCall)(bearerToken, exports.TRIGGER_API_BATCH_ENDPOINT, 'POST', triggersToCreate);\n    if (!response.ok) {\n        const errorData = await response.json().catch(() => undefined);\n        loglevel_1.default.error('Error creating triggers:', errorData);\n        throw new Error('OnChain Notifications - unable to create triggers');\n    }\n    // If the trigger creation was fine\n    // then update the userStorage\n    for (const trigger of triggersToCreate) {\n        (0, utils_1.toggleUserStorageTriggerStatus)(userStorage, trigger.config.address, String(trigger.config.chain_id), trigger.id, true);\n    }\n}\nexports.createOnChainTriggers = createOnChainTriggers;\n/**\n * Deletes on-chain triggers based on the provided UUIDs.\n * This method generates a unique token for each trigger using the UUID and storage key,\n * proving ownership of the trigger being deleted. It then makes an API call to delete these triggers.\n * Upon successful deletion, it updates the userStorage to remove the deleted trigger statuses.\n *\n * @param userStorage - The user's storage object where triggers and their statuses are stored.\n * @param storageKey - A key used along with the UUID to generate a unique token for each trigger.\n * @param bearerToken - The JSON Web Token used for authentication in the API call.\n * @param uuids - An array of UUIDs representing the triggers to be deleted.\n * @returns A promise that resolves to the updated UserStorage object. Throws an error if the API call fails or if there's an issue deleting the triggers.\n */\nasync function deleteOnChainTriggers(userStorage, storageKey, bearerToken, uuids) {\n    const triggersToDelete = uuids.map((uuid) => ({\n        id: uuid,\n        token: profile_sync_controller_1.UserStorageController.createSHA256Hash(uuid + storageKey),\n    }));\n    try {\n        const response = await (0, utils_1.makeApiCall)(bearerToken, exports.TRIGGER_API_BATCH_ENDPOINT, 'DELETE', triggersToDelete);\n        if (!response.ok) {\n            throw new Error(`Failed to delete on-chain notifications for uuids ${uuids.join(', ')}`);\n        }\n        // Update the state of the deleted trigger to false\n        for (const uuid of uuids) {\n            for (const address in userStorage) {\n                if (address in userStorage) {\n                    for (const chainId in userStorage[address]) {\n                        if (userStorage?.[address]?.[chainId]?.[uuid]) {\n                            delete userStorage[address][chainId][uuid];\n                        }\n                    }\n                }\n            }\n        }\n        // Follow-up cleanup, if an address had no triggers whatsoever, then we can delete the address\n        const isEmpty = (obj = {}) => Object.keys(obj).length === 0;\n        for (const address in userStorage) {\n            if (address in userStorage) {\n                for (const chainId in userStorage[address]) {\n                    // Chain isEmpty Check\n                    if (isEmpty(userStorage?.[address]?.[chainId])) {\n                        delete userStorage[address][chainId];\n                    }\n                }\n                // Address isEmpty Check\n                if (isEmpty(userStorage?.[address])) {\n                    delete userStorage[address];\n                }\n            }\n        }\n    }\n    catch (err) {\n        loglevel_1.default.error(`Error deleting on-chain notifications for uuids ${uuids.join(', ')}:`, err);\n        throw err;\n    }\n    return userStorage;\n}\nexports.deleteOnChainTriggers = deleteOnChainTriggers;\n/**\n * Fetches on-chain notifications for the given user storage and BearerToken.\n * This method iterates through the userStorage to find enabled triggers and fetches notifications for those triggers.\n * It makes paginated API calls to the notifications service, transforming and aggregating the notifications into a single array.\n * The process stops either when all pages have been fetched or when a page has less than 100 notifications, indicating the end of the data.\n *\n * @param userStorage - The user's storage object containing trigger information.\n * @param bearerToken - The JSON Web Token used for authentication in the API call.\n * @returns A promise that resolves to an array of OnChainRawNotification objects. If no triggers are enabled or an error occurs, it may return an empty array.\n */\nasync function getOnChainNotifications(userStorage, bearerToken) {\n    const triggerIds = (0, utils_1.traverseUserStorageTriggers)(userStorage, {\n        mapTrigger: (t) => {\n            if (!t.enabled) {\n                return undefined;\n            }\n            return t.id;\n        },\n    });\n    if (triggerIds.length === 0) {\n        return [];\n    }\n    const onChainNotifications = [];\n    const PAGE_LIMIT = 2;\n    for (let page = 1; page <= PAGE_LIMIT; page++) {\n        try {\n            const response = await (0, utils_1.makeApiCall)(bearerToken, (0, exports.NOTIFICATION_API_LIST_ENDPOINT_PAGE_QUERY)(page), 'POST', \n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            { trigger_ids: triggerIds });\n            const notifications = (await response.json());\n            // Transform and sort notifications\n            const transformedNotifications = notifications\n                .map((n) => {\n                if (!n.data?.kind) {\n                    return undefined;\n                }\n                return (0, to_raw_notification_1.toRawOnChainNotification)(n);\n            })\n                .filter((n) => Boolean(n));\n            onChainNotifications.push(...transformedNotifications);\n            // if less than 100 notifications on page, then means we reached end\n            if (notifications.length < 100) {\n                page = PAGE_LIMIT + 1;\n                break;\n            }\n        }\n        catch (err) {\n            loglevel_1.default.error(`Error fetching on-chain notifications for trigger IDs ${triggerIds.join(', ')}:`, err);\n            // do nothing\n        }\n    }\n    return onChainNotifications;\n}\nexports.getOnChainNotifications = getOnChainNotifications;\n/**\n * Marks the specified notifications as read.\n * This method sends a POST request to the notifications service to mark the provided notification IDs as read.\n * If the operation is successful, it completes without error. If the operation fails, it throws an error with details.\n *\n * @param bearerToken - The JSON Web Token used for authentication in the API call.\n * @param notificationIds - An array of notification IDs to be marked as read.\n * @returns A promise that resolves to void. The promise will reject if there's an error during the API call or if the response status is not 200.\n */\nasync function markNotificationsAsRead(bearerToken, notificationIds) {\n    if (notificationIds.length === 0) {\n        return;\n    }\n    try {\n        const response = await (0, utils_1.makeApiCall)(bearerToken, exports.NOTIFICATION_API_MARK_ALL_AS_READ_ENDPOINT, 'POST', { ids: notificationIds });\n        if (response.status !== 200) {\n            const errorData = await response.json().catch(() => undefined);\n            throw new Error(`Error marking notifications as read: ${errorData?.message}`);\n        }\n    }\n    catch (err) {\n        loglevel_1.default.error('Error marking notifications as read:', err);\n        throw err;\n    }\n}\nexports.markNotificationsAsRead = markNotificationsAsRead;\n//# sourceMappingURL=onchain-notifications.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=feature-announcement.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./feature-announcement.cjs\"), exports);\n__exportStar(require(\"./type-links.cjs\"), exports);\n__exportStar(require(\"./type-feature-announcement.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=type-feature-announcement.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=type-links.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./feature-announcement/index.cjs\"), exports);\n__exportStar(require(\"./notification/index.cjs\"), exports);\n__exportStar(require(\"./on-chain-notification/index.cjs\"), exports);\n__exportStar(require(\"./user-storage/index.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./notification.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=notification.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./on-chain-notification.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=on-chain-notification.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./user-storage.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user-storage.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOTIFICATION_CHAINS_ID = exports.SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS = exports.NOTIFICATION_NETWORK_CURRENCY_SYMBOL = exports.NOTIFICATION_NETWORK_CURRENCY_NAME = void 0;\nconst notification_schema_1 = require(\"../constants/notification-schema.cjs\");\nexports.NOTIFICATION_NETWORK_CURRENCY_NAME = {\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.ETHEREUM]: 'Ethereum',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.ARBITRUM]: 'Arbitrum',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.AVALANCHE]: 'Avalanche',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.BSC]: 'Binance',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.LINEA]: 'Linea',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.OPTIMISM]: 'Optimism',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.POLYGON]: 'Polygon',\n};\nexports.NOTIFICATION_NETWORK_CURRENCY_SYMBOL = {\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.ETHEREUM]: 'ETH',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.ARBITRUM]: 'ETH',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.AVALANCHE]: 'AVAX',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.BSC]: 'BNB',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.LINEA]: 'ETH',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.OPTIMISM]: 'ETH',\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.POLYGON]: 'MATIC',\n};\nexports.SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS = {\n    // ETHEREUM\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.ETHEREUM]: {\n        url: 'https://etherscan.io',\n        name: 'Etherscan',\n    },\n    // OPTIMISM\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.OPTIMISM]: {\n        url: 'https://optimistic.etherscan.io',\n        name: 'Optimistic Etherscan',\n    },\n    // BSC\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.BSC]: {\n        url: 'https://bscscan.com',\n        name: 'BscScan',\n    },\n    // POLYGON\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.POLYGON]: {\n        url: 'https://polygonscan.com',\n        name: 'PolygonScan',\n    },\n    // ARBITRUM\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.ARBITRUM]: {\n        url: 'https://arbiscan.io',\n        name: 'Arbiscan',\n    },\n    // AVALANCHE\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.AVALANCHE]: {\n        url: 'https://snowtrace.io',\n        name: 'Snowtrace',\n    },\n    // LINEA\n    [notification_schema_1.NOTIFICATION_CHAINS_ID.LINEA]: {\n        url: 'https://lineascan.build',\n        name: 'LineaScan',\n    },\n};\nvar notification_schema_2 = require(\"../constants/notification-schema.cjs\");\nObject.defineProperty(exports, \"NOTIFICATION_CHAINS_ID\", { enumerable: true, get: function () { return notification_schema_2.NOTIFICATION_CHAINS_ID; } });\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./constants.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeApiCall = exports.toggleUserStorageTriggerStatus = exports.upsertTriggerTypeTriggers = exports.upsertAddressTriggers = exports.getUUIDsForAccountByKinds = exports.getUUIDsForKinds = exports.getAllUUIDs = exports.getUUIDsForAccount = exports.inferEnabledKinds = exports.checkAccountsPresence = exports.traverseUserStorageTriggers = exports.initializeUserStorage = void 0;\nconst uuid_1 = require(\"uuid\");\nconst constants_1 = require(\"../constants/constants.cjs\");\nconst notification_schema_1 = require(\"../constants/notification-schema.cjs\");\n/**\n * Extracts and returns the ID from a notification trigger.\n * This utility function is primarily used as a mapping function in `traverseUserStorageTriggers`\n * to convert a full trigger object into its ID string.\n *\n * @param trigger - The notification trigger from which the ID is extracted.\n * @returns The ID of the provided notification trigger.\n */\nconst triggerToId = (trigger) => trigger.id;\n/**\n * A utility function that returns the input trigger without any transformation.\n * This function is used as the default mapping function in `traverseUserStorageTriggers`\n * when no custom mapping function is provided.\n *\n * @param trigger - The notification trigger to be returned as is.\n * @returns The same notification trigger that was passed in.\n */\nconst triggerIdentity = (trigger) => trigger;\n/**\n * Create a completely new user storage object with the given accounts and state.\n * This method initializes the user storage with a version key and iterates over each account to populate it with triggers.\n * Each trigger is associated with supported chains, and for each chain, a unique identifier (UUID) is generated.\n * The trigger object contains a kind (`k`) indicating the type of trigger and an enabled state (`e`).\n * The kind and enabled state are stored with abbreviated keys to reduce the JSON size.\n *\n * This is used primarily for creating a new user storage (e.g. when first signing in/enabling notification profile syncing),\n * caution is needed in case you need to remove triggers that you don't want (due to notification setting filters)\n *\n * @param accounts - An array of account objects, each optionally containing an address.\n * @param state - A boolean indicating the initial enabled state for all triggers in the user storage.\n * @returns A `UserStorage` object populated with triggers for each account and chain.\n */\nfunction initializeUserStorage(accounts, state) {\n    const userStorage = {\n        [constants_1.USER_STORAGE_VERSION_KEY]: constants_1.USER_STORAGE_VERSION,\n    };\n    accounts.forEach((account) => {\n        const address = account.address?.toLowerCase();\n        if (!address) {\n            return;\n        }\n        if (!userStorage[address]) {\n            userStorage[address] = {};\n        }\n        Object.entries(notification_schema_1.TRIGGERS).forEach(([trigger, { supported_chains: supportedChains }]) => {\n            supportedChains.forEach((chain) => {\n                if (!userStorage[address]?.[chain]) {\n                    userStorage[address][chain] = {};\n                }\n                userStorage[address][chain][(0, uuid_1.v4)()] = {\n                    k: trigger,\n                    e: state, // use 'e' instead of 'enabled' to reduce the json weight\n                };\n            });\n        });\n    });\n    return userStorage;\n}\nexports.initializeUserStorage = initializeUserStorage;\n/**\n * Iterates over user storage to find and optionally transform notification triggers.\n * This method allows for flexible retrieval and transformation of triggers based on provided options.\n *\n * @param userStorage - The user storage object containing notification triggers.\n * @param options - Optional parameters to filter and map triggers:\n * - `address`: If provided, only triggers for this address are considered.\n * - `mapTrigger`: A function to transform each trigger. If not provided, triggers are returned as is.\n * @returns An array of triggers, potentially transformed by the `mapTrigger` function.\n */\nfunction traverseUserStorageTriggers(userStorage, options) {\n    const triggers = [];\n    const mapTrigger = options?.mapTrigger ?? triggerIdentity;\n    for (const address in userStorage) {\n        if (address === constants_1.USER_STORAGE_VERSION_KEY) {\n            continue;\n        }\n        if (options?.address && address !== options.address) {\n            continue;\n        }\n        for (const chainId in userStorage[address]) {\n            if (chainId in userStorage[address]) {\n                for (const uuid in userStorage[address][chainId]) {\n                    if (uuid) {\n                        const mappedTrigger = mapTrigger({\n                            id: uuid,\n                            kind: userStorage[address]?.[chainId]?.[uuid]?.k,\n                            chainId,\n                            address,\n                            enabled: userStorage[address]?.[chainId]?.[uuid]?.e ?? false,\n                        });\n                        if (mappedTrigger) {\n                            triggers.push(mappedTrigger);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return triggers;\n}\nexports.traverseUserStorageTriggers = traverseUserStorageTriggers;\n/**\n * Verifies the presence of specified accounts and their chains in the user storage.\n * This method checks if each provided account exists in the user storage and if all its supported chains are present.\n *\n * @param userStorage - The user storage object containing notification triggers.\n * @param accounts - An array of account addresses to check for presence.\n * @returns A record where each key is an account address and each value is a boolean indicating whether the account and all its supported chains are present in the user storage.\n */\nfunction checkAccountsPresence(userStorage, accounts) {\n    const presenceRecord = {};\n    // Initialize presence record for all accounts as false\n    accounts.forEach((account) => {\n        presenceRecord[account.toLowerCase()] = isAccountEnabled(account, userStorage);\n    });\n    return presenceRecord;\n}\nexports.checkAccountsPresence = checkAccountsPresence;\n/**\n * Internal method to check if a given account should be marked as enabled by introspecting user storage\n * Introspection: check if account exists; and also see if has all triggers in schema enabled\n *\n * @param accountAddress - address to check in user storage\n * @param userStorage - user storage object to traverse/introspect\n * @returns boolean if the account is enabled or disabled\n */\nfunction isAccountEnabled(accountAddress, userStorage) {\n    const accountObject = userStorage[accountAddress?.toLowerCase()];\n    // If the account address is not present in the userStorage, return true\n    if (!accountObject) {\n        return false;\n    }\n    // Check if all available chains are present\n    for (const [triggerKind, triggerConfig] of Object.entries(notification_schema_1.TRIGGERS)) {\n        for (const chain of triggerConfig.supported_chains) {\n            if (!accountObject[chain]) {\n                return false;\n            }\n            const triggerExists = Object.values(accountObject[chain]).some((obj) => obj.k === triggerKind);\n            if (!triggerExists) {\n                return false;\n            }\n            // Check if any trigger is disabled\n            for (const uuid in accountObject[chain]) {\n                if (!accountObject[chain][uuid].e) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * Infers and returns an array of enabled notification trigger kinds from the user storage.\n * This method counts the occurrences of each kind of trigger and returns the kinds that are present.\n *\n * @param userStorage - The user storage object containing notification triggers.\n * @returns An array of trigger kinds (`TRIGGER_TYPES`) that are enabled in the user storage.\n */\nfunction inferEnabledKinds(userStorage) {\n    const allSupportedKinds = new Set();\n    traverseUserStorageTriggers(userStorage, {\n        mapTrigger: (t) => {\n            allSupportedKinds.add(t.kind);\n        },\n    });\n    return Array.from(allSupportedKinds);\n}\nexports.inferEnabledKinds = inferEnabledKinds;\n/**\n * Retrieves all UUIDs associated with a specific account address from the user storage.\n * This function utilizes `traverseUserStorageTriggers` with a mapping function to extract\n * just the UUIDs of the notification triggers for the given address.\n *\n * @param userStorage - The user storage object containing notification triggers.\n * @param address - The specific account address to retrieve UUIDs for.\n * @returns An array of UUID strings associated with the given account address.\n */\nfunction getUUIDsForAccount(userStorage, address) {\n    return traverseUserStorageTriggers(userStorage, {\n        address,\n        mapTrigger: triggerToId,\n    });\n}\nexports.getUUIDsForAccount = getUUIDsForAccount;\n/**\n * Retrieves all UUIDs from the user storage, regardless of the account address or chain ID.\n * This method leverages `traverseUserStorageTriggers` with a specific mapping function (`triggerToId`)\n * to extract only the UUIDs from all notification triggers present in the user storage.\n *\n * @param userStorage - The user storage object containing notification triggers.\n * @returns An array of UUID strings from all notification triggers in the user storage.\n */\nfunction getAllUUIDs(userStorage) {\n    return traverseUserStorageTriggers(userStorage, {\n        mapTrigger: triggerToId,\n    });\n}\nexports.getAllUUIDs = getAllUUIDs;\n/**\n * Retrieves UUIDs for notification triggers that match any of the specified kinds.\n * This method filters triggers based on their kind and returns an array of UUIDs for those that match the allowed kinds.\n * It utilizes `traverseUserStorageTriggers` with a custom mapping function that checks if a trigger's kind is in the allowed list.\n *\n * @param userStorage - The user storage object containing notification triggers.\n * @param allowedKinds - An array of kinds (as strings) to filter the triggers by.\n * @returns An array of UUID strings for triggers that match the allowed kinds.\n */\nfunction getUUIDsForKinds(userStorage, allowedKinds) {\n    const kindsSet = new Set(allowedKinds);\n    return traverseUserStorageTriggers(userStorage, {\n        mapTrigger: (t) => (kindsSet.has(t.kind) ? t.id : undefined),\n    });\n}\nexports.getUUIDsForKinds = getUUIDsForKinds;\n/**\n * Retrieves notification triggers for a specific account address that match any of the specified kinds.\n * This method filters triggers both by the account address and their kind, returning triggers that match the allowed kinds for the specified address.\n * It leverages `traverseUserStorageTriggers` with a custom mapping function to filter and return only the relevant triggers.\n *\n * @param userStorage - The user storage object containing notification triggers.\n * @param address - The specific account address for which to retrieve triggers.\n * @param allowedKinds - An array of trigger kinds (`TRIGGER_TYPES`) to filter the triggers by.\n * @returns An array of `NotificationTrigger` objects that match the allowed kinds for the specified account address.\n */\nfunction getUUIDsForAccountByKinds(userStorage, address, allowedKinds) {\n    const allowedKindsSet = new Set(allowedKinds);\n    return traverseUserStorageTriggers(userStorage, {\n        address,\n        mapTrigger: (trigger) => {\n            if (allowedKindsSet.has(trigger.kind)) {\n                return trigger;\n            }\n            return undefined;\n        },\n    });\n}\nexports.getUUIDsForAccountByKinds = getUUIDsForAccountByKinds;\n/**\n * Upserts (updates or inserts) notification triggers for a given account across all supported chains.\n * This method ensures that each supported trigger type exists for each chain associated with the account.\n * If a trigger type does not exist for a chain, it creates a new trigger with a unique UUID.\n *\n * @param _account - The account address for which to upsert triggers. The address is normalized to lowercase.\n * @param userStorage - The user storage object to be updated with new or existing triggers.\n * @returns The updated user storage object with upserted triggers for the specified account.\n */\nfunction upsertAddressTriggers(_account, userStorage) {\n    // Ensure the account exists in userStorage\n    const account = _account.toLowerCase();\n    userStorage[account] = userStorage[account] || {};\n    // Iterate over each trigger and its supported chains\n    for (const [trigger, { supported_chains: supportedChains }] of Object.entries(notification_schema_1.TRIGGERS)) {\n        for (const chain of supportedChains) {\n            // Ensure the chain exists for the account\n            userStorage[account][chain] = userStorage[account][chain] || {};\n            // Check if the trigger exists for the chain\n            const existingTrigger = Object.values(userStorage[account][chain]).find((obj) => obj.k === trigger);\n            if (!existingTrigger) {\n                // If the trigger doesn't exist, create a new one with a new UUID\n                const uuid = (0, uuid_1.v4)();\n                userStorage[account][chain][uuid] = {\n                    k: trigger,\n                    e: false,\n                };\n            }\n        }\n    }\n    return userStorage;\n}\nexports.upsertAddressTriggers = upsertAddressTriggers;\n/**\n * Upserts (updates or inserts) notification triggers of a specific type across all accounts and chains in user storage.\n * This method ensures that a trigger of the specified type exists for each account and chain. If a trigger of the specified type\n * does not exist for an account and chain, it creates a new trigger with a unique UUID.\n *\n * @param triggerType - The type of trigger to upsert across all accounts and chains.\n * @param userStorage - The user storage object to be updated with new or existing triggers of the specified type.\n * @returns The updated user storage object with upserted triggers of the specified type for all accounts and chains.\n */\nfunction upsertTriggerTypeTriggers(triggerType, userStorage) {\n    // Iterate over each account in userStorage\n    Object.entries(userStorage).forEach(([account, chains]) => {\n        if (account === constants_1.USER_STORAGE_VERSION_KEY) {\n            return;\n        }\n        // Iterate over each chain for the account\n        Object.entries(chains).forEach(([chain, triggers]) => {\n            // Check if the trigger type exists for the chain\n            const existingTrigger = Object.values(triggers).find((obj) => obj.k === triggerType);\n            if (!existingTrigger) {\n                // If the trigger type doesn't exist, create a new one with a new UUID\n                const uuid = (0, uuid_1.v4)();\n                userStorage[account][chain][uuid] = {\n                    k: triggerType,\n                    e: false,\n                };\n            }\n        });\n    });\n    return userStorage;\n}\nexports.upsertTriggerTypeTriggers = upsertTriggerTypeTriggers;\n/**\n * Toggles the enabled status of a user storage trigger.\n *\n * @param userStorage - The user storage object.\n * @param address - The user's address.\n * @param chainId - The chain ID.\n * @param uuid - The unique identifier for the trigger.\n * @param enabled - The new enabled status.\n * @returns The updated user storage object.\n */\nfunction toggleUserStorageTriggerStatus(userStorage, address, chainId, uuid, enabled) {\n    if (userStorage?.[address]?.[chainId]?.[uuid]) {\n        userStorage[address][chainId][uuid].e = enabled;\n    }\n    return userStorage;\n}\nexports.toggleUserStorageTriggerStatus = toggleUserStorageTriggerStatus;\n/**\n * Performs an API call with automatic retries on failure.\n *\n * @param bearerToken - The JSON Web Token for authorization.\n * @param endpoint - The URL of the API endpoint to call.\n * @param method - The HTTP method ('POST' or 'DELETE').\n * @param body - The body of the request. It should be an object that can be serialized to JSON.\n * @returns A Promise that resolves to the response of the fetch request.\n */\nasync function makeApiCall(bearerToken, endpoint, method, body) {\n    const options = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${bearerToken}`,\n        },\n        body: JSON.stringify(body),\n    };\n    return await fetch(endpoint, options);\n}\nexports.makeApiCall = makeApiCall;\n//# sourceMappingURL=utils.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _NotificationServicesPushController_instances, _NotificationServicesPushController_pushListenerUnsubscribe, _NotificationServicesPushController_env, _NotificationServicesPushController_config, _NotificationServicesPushController_registerMessageHandlers, _NotificationServicesPushController_getAndAssertBearerToken;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultState = void 0;\nconst base_controller_1 = require(\"@metamask/base-controller\");\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst push_web_1 = require(\"./services/push/push-web.cjs\");\nconst services_1 = require(\"./services/services.cjs\");\nconst controllerName = 'NotificationServicesPushController';\nexports.defaultState = {\n    fcmToken: '',\n};\nconst metadata = {\n    fcmToken: {\n        persist: true,\n        anonymous: true,\n    },\n};\n/**\n * Manages push notifications for the application, including enabling, disabling, and updating triggers for push notifications.\n * This controller integrates with Firebase Cloud Messaging (FCM) to handle the registration and management of push notifications.\n * It is responsible for registering and unregistering the service worker that listens for push notifications,\n * managing the FCM token, and communicating with the server to register or unregister the device for push notifications.\n * Additionally, it provides functionality to update the server with new UUIDs that should trigger push notifications.\n *\n * @augments {BaseController<typeof controllerName, NotificationServicesPushControllerState, NotificationServicesPushControllerMessenger>}\n */\nclass NotificationServicesPushController extends base_controller_1.BaseController {\n    constructor({ messenger, state, env, config, }) {\n        super({\n            messenger,\n            metadata,\n            name: controllerName,\n            state: { ...exports.defaultState, ...state },\n        });\n        _NotificationServicesPushController_instances.add(this);\n        _NotificationServicesPushController_pushListenerUnsubscribe.set(this, undefined);\n        _NotificationServicesPushController_env.set(this, void 0);\n        _NotificationServicesPushController_config.set(this, void 0);\n        __classPrivateFieldSet(this, _NotificationServicesPushController_env, env, \"f\");\n        __classPrivateFieldSet(this, _NotificationServicesPushController_config, config, \"f\");\n        __classPrivateFieldGet(this, _NotificationServicesPushController_instances, \"m\", _NotificationServicesPushController_registerMessageHandlers).call(this);\n    }\n    async subscribeToPushNotifications() {\n        if (__classPrivateFieldGet(this, _NotificationServicesPushController_pushListenerUnsubscribe, \"f\")) {\n            __classPrivateFieldGet(this, _NotificationServicesPushController_pushListenerUnsubscribe, \"f\").call(this);\n            __classPrivateFieldSet(this, _NotificationServicesPushController_pushListenerUnsubscribe, undefined, \"f\");\n        }\n        try {\n            __classPrivateFieldSet(this, _NotificationServicesPushController_pushListenerUnsubscribe, await (0, services_1.listenToPushNotifications)({\n                env: __classPrivateFieldGet(this, _NotificationServicesPushController_env, \"f\"),\n                listenToPushReceived: async (n) => {\n                    this.messagingSystem.publish('NotificationServicesPushController:onNewNotifications', n);\n                    await __classPrivateFieldGet(this, _NotificationServicesPushController_config, \"f\").onPushNotificationReceived(n);\n                },\n                listenToPushClicked: (e, n) => {\n                    if (n) {\n                        this.messagingSystem.publish('NotificationServicesPushController:pushNotificationClicked', n);\n                    }\n                    __classPrivateFieldGet(this, _NotificationServicesPushController_config, \"f\").onPushNotificationClicked(e, n);\n                },\n            }), \"f\");\n        }\n        catch (e) {\n            // Do nothing, we are silently failing if push notification registration fails\n        }\n    }\n    /**\n     * Enables push notifications for the application.\n     *\n     * This method sets up the necessary infrastructure for handling push notifications by:\n     * 1. Registering the service worker to listen for messages.\n     * 2. Fetching the Firebase Cloud Messaging (FCM) token from Firebase.\n     * 3. Sending the FCM token to the server responsible for sending notifications, to register the device.\n     *\n     * @param UUIDs - An array of UUIDs to enable push notifications for.\n     */\n    async enablePushNotifications(UUIDs) {\n        if (!__classPrivateFieldGet(this, _NotificationServicesPushController_config, \"f\").isPushEnabled) {\n            return;\n        }\n        // Handle creating new reg token (if available)\n        try {\n            const bearerToken = await __classPrivateFieldGet(this, _NotificationServicesPushController_instances, \"m\", _NotificationServicesPushController_getAndAssertBearerToken).call(this).catch(() => null);\n            // If there is a bearer token, lets try to refresh/create new reg token\n            if (bearerToken) {\n                // Activate Push Notifications\n                const regToken = await (0, services_1.activatePushNotifications)({\n                    bearerToken,\n                    triggers: UUIDs,\n                    env: __classPrivateFieldGet(this, _NotificationServicesPushController_env, \"f\"),\n                    createRegToken: push_web_1.createRegToken,\n                    platform: __classPrivateFieldGet(this, _NotificationServicesPushController_config, \"f\").platform,\n                }).catch(() => null);\n                if (regToken) {\n                    this.update((state) => {\n                        state.fcmToken = regToken;\n                    });\n                }\n            }\n        }\n        catch {\n            // Do nothing, we are silently failing\n        }\n        // New token created, (re)subscribe to push notifications\n        await this.subscribeToPushNotifications();\n    }\n    /**\n     * Disables push notifications for the application.\n     * This method handles the process of disabling push notifications by:\n     * 1. Unregistering the service worker to stop listening for messages.\n     * 2. Sending a request to the server to unregister the device using the FCM token.\n     * 3. Removing the FCM token from the state to complete the process.\n     *\n     * @param UUIDs - An array of UUIDs for which push notifications should be disabled.\n     */\n    async disablePushNotifications(UUIDs) {\n        if (!__classPrivateFieldGet(this, _NotificationServicesPushController_config, \"f\").isPushEnabled) {\n            return;\n        }\n        const bearerToken = await __classPrivateFieldGet(this, _NotificationServicesPushController_instances, \"m\", _NotificationServicesPushController_getAndAssertBearerToken).call(this);\n        let isPushNotificationsDisabled;\n        try {\n            // Send a request to the server to unregister the token/device\n            isPushNotificationsDisabled = await (0, services_1.deactivatePushNotifications)({\n                bearerToken,\n                triggers: UUIDs,\n                env: __classPrivateFieldGet(this, _NotificationServicesPushController_env, \"f\"),\n                deleteRegToken: push_web_1.deleteRegToken,\n                regToken: this.state.fcmToken,\n            });\n        }\n        catch (error) {\n            const errorMessage = `Failed to disable push notifications: ${error}`;\n            loglevel_1.default.error(errorMessage);\n            throw new Error(errorMessage);\n        }\n        // Remove the FCM token from the state\n        if (!isPushNotificationsDisabled) {\n            return;\n        }\n        // Unsubscribe from push notifications\n        __classPrivateFieldGet(this, _NotificationServicesPushController_pushListenerUnsubscribe, \"f\")?.call(this);\n        // Update State\n        if (isPushNotificationsDisabled) {\n            this.update((state) => {\n                state.fcmToken = '';\n            });\n        }\n    }\n    /**\n     * Updates the triggers for push notifications.\n     * This method is responsible for updating the server with the new set of UUIDs that should trigger push notifications.\n     * It uses the current FCM token and a BearerToken for authentication.\n     *\n     * @param UUIDs - An array of UUIDs that should trigger push notifications.\n     */\n    async updateTriggerPushNotifications(UUIDs) {\n        if (!__classPrivateFieldGet(this, _NotificationServicesPushController_config, \"f\").isPushEnabled) {\n            return;\n        }\n        const bearerToken = await __classPrivateFieldGet(this, _NotificationServicesPushController_instances, \"m\", _NotificationServicesPushController_getAndAssertBearerToken).call(this);\n        try {\n            const { fcmToken } = await (0, services_1.updateTriggerPushNotifications)({\n                bearerToken,\n                triggers: UUIDs,\n                env: __classPrivateFieldGet(this, _NotificationServicesPushController_env, \"f\"),\n                createRegToken: push_web_1.createRegToken,\n                deleteRegToken: push_web_1.deleteRegToken,\n                platform: __classPrivateFieldGet(this, _NotificationServicesPushController_config, \"f\").platform,\n                regToken: this.state.fcmToken,\n            });\n            // update the state with the new FCM token\n            if (fcmToken) {\n                this.update((state) => {\n                    state.fcmToken = fcmToken;\n                });\n            }\n        }\n        catch (error) {\n            const errorMessage = `Failed to update triggers for push notifications: ${error}`;\n            loglevel_1.default.error(errorMessage);\n            throw new Error(errorMessage);\n        }\n    }\n}\n_NotificationServicesPushController_pushListenerUnsubscribe = new WeakMap(), _NotificationServicesPushController_env = new WeakMap(), _NotificationServicesPushController_config = new WeakMap(), _NotificationServicesPushController_instances = new WeakSet(), _NotificationServicesPushController_registerMessageHandlers = function _NotificationServicesPushController_registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler('NotificationServicesPushController:enablePushNotifications', this.enablePushNotifications.bind(this));\n    this.messagingSystem.registerActionHandler('NotificationServicesPushController:disablePushNotifications', this.disablePushNotifications.bind(this));\n    this.messagingSystem.registerActionHandler('NotificationServicesPushController:updateTriggerPushNotifications', this.updateTriggerPushNotifications.bind(this));\n    this.messagingSystem.registerActionHandler('NotificationServicesPushController:subscribeToPushNotifications', this.subscribeToPushNotifications.bind(this));\n}, _NotificationServicesPushController_getAndAssertBearerToken = async function _NotificationServicesPushController_getAndAssertBearerToken() {\n    const bearerToken = await this.messagingSystem.call('AuthenticationController:getBearerToken');\n    if (!bearerToken) {\n        loglevel_1.default.error('Failed to enable push notifications: BearerToken token is missing.');\n        throw new Error('BearerToken token is missing');\n    }\n    return bearerToken;\n};\nexports.default = NotificationServicesPushController;\n//# sourceMappingURL=NotificationServicesPushController.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./mockResponse.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMockDeleteFCMRegistrationTokenResponse = exports.getMockCreateFCMRegistrationTokenResponse = exports.MOCK_FCM_RESPONSE = exports.getMockUpdatePushNotificationLinksResponse = exports.getMockRetrievePushNotificationLinksResponse = exports.MOCK_LINKS_RESPONSE = exports.MOCK_REG_TOKEN = void 0;\nconst endpoints_1 = require(\"../services/endpoints.cjs\");\nexports.MOCK_REG_TOKEN = 'REG_TOKEN';\nexports.MOCK_LINKS_RESPONSE = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    trigger_ids: ['1', '2', '3'],\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    registration_tokens: [\n        { token: 'reg_token_1', platform: 'portfolio' },\n        { token: 'reg_token_2', platform: 'extension' },\n    ],\n};\nconst getMockRetrievePushNotificationLinksResponse = () => {\n    return {\n        url: endpoints_1.REGISTRATION_TOKENS_ENDPOINT,\n        requestMethod: 'GET',\n        response: exports.MOCK_LINKS_RESPONSE,\n    };\n};\nexports.getMockRetrievePushNotificationLinksResponse = getMockRetrievePushNotificationLinksResponse;\nconst getMockUpdatePushNotificationLinksResponse = () => {\n    return {\n        url: endpoints_1.REGISTRATION_TOKENS_ENDPOINT,\n        requestMethod: 'POST',\n        response: null,\n    };\n};\nexports.getMockUpdatePushNotificationLinksResponse = getMockUpdatePushNotificationLinksResponse;\nexports.MOCK_FCM_RESPONSE = {\n    name: '',\n    token: 'fcm-token',\n    web: {\n        endpoint: '',\n        p256dh: '',\n        auth: '',\n        applicationPubKey: '',\n    },\n};\nconst getMockCreateFCMRegistrationTokenResponse = () => {\n    return {\n        url: /^https:\\/\\/fcmregistrations\\.googleapis\\.com\\/v1\\/projects\\/.*$/u,\n        requestMethod: 'POST',\n        response: exports.MOCK_FCM_RESPONSE,\n    };\n};\nexports.getMockCreateFCMRegistrationTokenResponse = getMockCreateFCMRegistrationTokenResponse;\nconst getMockDeleteFCMRegistrationTokenResponse = () => {\n    return {\n        url: /^https:\\/\\/fcmregistrations\\.googleapis\\.com\\/v1\\/projects\\/.*$/u,\n        requestMethod: 'POST',\n        response: {},\n    };\n};\nexports.getMockDeleteFCMRegistrationTokenResponse = getMockDeleteFCMRegistrationTokenResponse;\n//# sourceMappingURL=mockResponse.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mocks = exports.Utils = exports.Types = exports.Controller = void 0;\nconst NotificationServicesPushController_1 = __importDefault(require(\"./NotificationServicesPushController.cjs\"));\nexports.Controller = NotificationServicesPushController_1.default;\nconst NotificationServicesPushController = NotificationServicesPushController_1.default;\nexports.default = NotificationServicesPushController;\n__exportStar(require(\"./NotificationServicesPushController.cjs\"), exports);\nexports.Types = __importStar(require(\"./types/index.cjs\"));\n__exportStar(require(\"./types/index.cjs\"), exports);\nexports.Utils = __importStar(require(\"./utils/index.cjs\"));\n__exportStar(require(\"./utils/index.cjs\"), exports);\nexports.Mocks = __importStar(require(\"./__fixtures__/index.cjs\"));\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REGISTRATION_TOKENS_ENDPOINT = void 0;\nconst url = 'https://push.api.cx.metamask.io';\nexports.REGISTRATION_TOKENS_ENDPOINT = `${url}/v1/link`;\n//# sourceMappingURL=endpoints.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listenToPushNotificationsClicked = exports.listenToPushNotificationsReceived = exports.deleteRegToken = exports.createRegToken = void 0;\nconst app_1 = require(\"firebase/app\");\nconst messaging_1 = require(\"firebase/messaging\");\nconst sw_1 = require(\"firebase/messaging/sw\");\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst NotificationServicesController_1 = require(\"../../../NotificationServicesController/index.cjs\");\nconst to_raw_notification_1 = require(\"../../../shared/to-raw-notification.cjs\");\nconst createFirebaseApp = async (env) => {\n    try {\n        return (0, app_1.getApp)();\n    }\n    catch {\n        const firebaseConfig = {\n            apiKey: env.apiKey,\n            authDomain: env.authDomain,\n            storageBucket: env.storageBucket,\n            projectId: env.projectId,\n            messagingSenderId: env.messagingSenderId,\n            appId: env.appId,\n            measurementId: env.measurementId,\n        };\n        return (0, app_1.initializeApp)(firebaseConfig);\n    }\n};\nconst getFirebaseMessaging = async (env) => {\n    const app = await createFirebaseApp(env);\n    return (0, sw_1.getMessaging)(app);\n};\n/**\n * Creates a registration token for Firebase Cloud Messaging.\n *\n * @param env - env to configure push notifications\n * @returns A promise that resolves with the registration token or null if an error occurs.\n */\nasync function createRegToken(env) {\n    try {\n        const messaging = await getFirebaseMessaging(env);\n        const token = await (0, messaging_1.getToken)(messaging, {\n            serviceWorkerRegistration: self.registration,\n            vapidKey: env.vapidKey,\n        });\n        return token;\n    }\n    catch {\n        return null;\n    }\n}\nexports.createRegToken = createRegToken;\n/**\n * Deletes the Firebase Cloud Messaging registration token.\n *\n * @param env - env to configure push notifications\n * @returns A promise that resolves with true if the token was successfully deleted, false otherwise.\n */\nasync function deleteRegToken(env) {\n    try {\n        const messaging = await getFirebaseMessaging(env);\n        await (0, messaging_1.deleteToken)(messaging);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.deleteRegToken = deleteRegToken;\n/**\n * Service Worker Listener for when push notifications are received.\n * @param env - push notification environment\n * @param handler - handler to actually showing notification, MUST BE PROVEDED\n * @returns unsubscribe handler\n */\nasync function listenToPushNotificationsReceived(env, handler) {\n    const messaging = await getFirebaseMessaging(env);\n    const unsubscribePushNotifications = (0, sw_1.onBackgroundMessage)(messaging, \n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async (payload) => {\n        try {\n            const data = payload?.data?.data ? JSON.parse(payload?.data?.data) : undefined;\n            if (!data) {\n                return;\n            }\n            const notificationData = (0, to_raw_notification_1.toRawOnChainNotification)(data);\n            const notification = NotificationServicesController_1.Processors.processNotification(notificationData);\n            await handler(notification);\n        }\n        catch (error) {\n            // Do Nothing, cannot parse a bad notification\n            loglevel_1.default.error('Unable to send push notification:', {\n                notification: payload?.data?.data,\n                error,\n            });\n            throw new Error('Unable to send push notification');\n        }\n    });\n    const unsubscribe = () => unsubscribePushNotifications();\n    return unsubscribe;\n}\nexports.listenToPushNotificationsReceived = listenToPushNotificationsReceived;\n/**\n * Service Worker Listener for when a notification is clicked\n *\n * @param handler - listen to NotificationEvent from the service worker\n * @returns unsubscribe handler\n */\nfunction listenToPushNotificationsClicked(handler) {\n    const clickHandler = (event) => {\n        // Get Data\n        const data = event?.notification?.data;\n        handler(event, data);\n    };\n    self.addEventListener('notificationclick', clickHandler);\n    const unsubscribe = () => self.removeEventListener('notificationclick', clickHandler);\n    return unsubscribe;\n}\nexports.listenToPushNotificationsClicked = listenToPushNotificationsClicked;\n//# sourceMappingURL=push-web.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listenToPushNotifications = exports.updateTriggerPushNotifications = exports.deactivatePushNotifications = exports.activatePushNotifications = exports.updateLinksAPI = exports.getPushNotificationLinks = void 0;\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst endpoints = __importStar(require(\"./endpoints.cjs\"));\nconst push_web_1 = require(\"./push/push-web.cjs\");\n/**\n * Fetches push notification links from a remote endpoint using a BearerToken for authorization.\n *\n * @param bearerToken - The JSON Web Token used for authorization.\n * @returns A promise that resolves with the links result or null if an error occurs.\n */\nasync function getPushNotificationLinks(bearerToken) {\n    try {\n        const response = await fetch(endpoints.REGISTRATION_TOKENS_ENDPOINT, {\n            headers: { Authorization: `Bearer ${bearerToken}` },\n        });\n        if (!response.ok) {\n            loglevel_1.default.error('Failed to fetch the push notification links');\n            throw new Error('Failed to fetch the push notification links');\n        }\n        return response.json();\n    }\n    catch (error) {\n        loglevel_1.default.error('Failed to fetch the push notification links', error);\n        return null;\n    }\n}\nexports.getPushNotificationLinks = getPushNotificationLinks;\n/**\n * Updates the push notification links on a remote API.\n *\n * @param bearerToken - The JSON Web Token used for authorization.\n * @param triggers - An array of trigger identifiers.\n * @param regTokens - An array of registration tokens.\n * @returns A promise that resolves with true if the update was successful, false otherwise.\n */\nasync function updateLinksAPI(bearerToken, triggers, regTokens) {\n    try {\n        const body = {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            trigger_ids: triggers,\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            registration_tokens: regTokens,\n        };\n        const response = await fetch(endpoints.REGISTRATION_TOKENS_ENDPOINT, {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${bearerToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        });\n        return response.status === 200;\n    }\n    catch {\n        return false;\n    }\n}\nexports.updateLinksAPI = updateLinksAPI;\n/**\n * Enables push notifications by registering the device and linking triggers.\n *\n * @param params - Activate Push Params\n * @returns A promise that resolves with an object containing the success status and the BearerToken token.\n */\nasync function activatePushNotifications(params) {\n    const { bearerToken, triggers, env, createRegToken, platform } = params;\n    const notificationLinks = await getPushNotificationLinks(bearerToken);\n    if (!notificationLinks) {\n        return null;\n    }\n    const regToken = await createRegToken(env).catch(() => null);\n    if (!regToken) {\n        return null;\n    }\n    const newRegTokens = new Set(notificationLinks.registration_tokens);\n    newRegTokens.add({ token: regToken, platform });\n    await updateLinksAPI(bearerToken, triggers, Array.from(newRegTokens));\n    return regToken;\n}\nexports.activatePushNotifications = activatePushNotifications;\n/**\n * Disables push notifications by removing the registration token and unlinking triggers.\n *\n * @param params - Deactivate Push Params\n * @returns A promise that resolves with true if notifications were successfully disabled, false otherwise.\n */\nasync function deactivatePushNotifications(params) {\n    const { regToken, bearerToken, triggers, env, deleteRegToken } = params;\n    // if we don't have a reg token, then we can early return\n    if (!regToken) {\n        return true;\n    }\n    const notificationLinks = await getPushNotificationLinks(bearerToken);\n    if (!notificationLinks) {\n        return false;\n    }\n    const filteredRegTokens = notificationLinks.registration_tokens.filter((r) => r.token !== regToken);\n    const isTokenRemovedFromAPI = await updateLinksAPI(bearerToken, triggers, filteredRegTokens);\n    if (!isTokenRemovedFromAPI) {\n        return false;\n    }\n    const isTokenRemovedFromFCM = await deleteRegToken(env);\n    if (!isTokenRemovedFromFCM) {\n        return false;\n    }\n    return true;\n}\nexports.deactivatePushNotifications = deactivatePushNotifications;\n/**\n * Updates the triggers linked to push notifications for a given registration token.\n * If the provided registration token does not exist or is not in the current set of registration tokens,\n * a new registration token is created and used for the update.\n *\n * @param params - Update Push Params\n * @returns A promise that resolves with an object containing:\n * - isTriggersLinkedToPushNotifications: boolean indicating if the triggers were successfully updated.\n * - fcmToken: the new or existing Firebase Cloud Messaging token used for the update, if applicable.\n */\nasync function updateTriggerPushNotifications(params) {\n    const { bearerToken, regToken, triggers, createRegToken, platform, deleteRegToken, env, } = params;\n    const notificationLinks = await getPushNotificationLinks(bearerToken);\n    if (!notificationLinks) {\n        return { isTriggersLinkedToPushNotifications: false };\n    }\n    // Create new registration token if doesn't exist\n    const hasRegToken = Boolean(regToken &&\n        notificationLinks.registration_tokens.some((r) => r.token === regToken));\n    let newRegToken = null;\n    if (!hasRegToken) {\n        await deleteRegToken(env);\n        newRegToken = await createRegToken(env);\n        if (!newRegToken) {\n            throw new Error('Failed to create a new registration token');\n        }\n        notificationLinks.registration_tokens.push({\n            token: newRegToken,\n            platform,\n        });\n    }\n    const isTriggersLinkedToPushNotifications = await updateLinksAPI(bearerToken, triggers, notificationLinks.registration_tokens);\n    return {\n        isTriggersLinkedToPushNotifications,\n        fcmToken: newRegToken ?? null,\n    };\n}\nexports.updateTriggerPushNotifications = updateTriggerPushNotifications;\n/**\n * Listens to push notifications and invokes the provided callback function with the received notification data.\n *\n * @param params - listen params\n * @returns A promise that resolves to an unsubscribe function to stop listening to push notifications.\n */\nasync function listenToPushNotifications(params) {\n    const { env, listenToPushReceived, listenToPushClicked } = params;\n    /*\n    Push notifications require 2 listeners that need tracking (when creating and for tearing down):\n    1. handling receiving a push notification (and the content we want to display)\n    2. handling when a user clicks on a push notification\n    */\n    const unsubscribePushNotifications = await (0, push_web_1.listenToPushNotificationsReceived)(env, listenToPushReceived);\n    const unsubscribeNotificationClicks = (0, push_web_1.listenToPushNotificationsClicked)(listenToPushClicked);\n    const unsubscribe = () => {\n        unsubscribePushNotifications();\n        unsubscribeNotificationClicks();\n    };\n    return unsubscribe;\n}\nexports.listenToPushNotifications = listenToPushNotifications;\n//# sourceMappingURL=services.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=firebase.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./firebase.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAmount = exports.formatAmount = exports.getLeadingZeroCount = exports.calcTokenAmount = void 0;\nconst bignumber_js_1 = require(\"bignumber.js\");\nconst defaultFormatOptions = {\n    decimalPlaces: 4,\n};\n/**\n * Calculates the token amount based on the given value and decimals.\n *\n * @param value - The value to calculate the token amount from.\n * @param decimals - The number of decimals to use for the calculation.\n * @returns The calculated token amount.\n */\nfunction calcTokenAmount(value, decimals) {\n    const multiplier = Math.pow(10, Number(decimals || 0));\n    return new bignumber_js_1.BigNumber(String(value)).div(multiplier);\n}\nexports.calcTokenAmount = calcTokenAmount;\n/**\n * Calculates the number of leading zeros in the fractional part of a number.\n *\n * This function converts a number or a string representation of a number into\n * its decimal form and then counts the number of leading zeros present in the\n * fractional part of the number. This is useful for determining the precision\n * of very small numbers.\n *\n * @param num - The number to analyze, which can be in the form\n * of a number or a string.\n * @returns The count of leading zeros in the fractional part of the number.\n */\nconst getLeadingZeroCount = (num) => {\n    const numToString = new bignumber_js_1.BigNumber(num, 10).toString(10);\n    const fractionalPart = numToString.split('.')[1] ?? '';\n    return fractionalPart.match(/^0*/u)?.[0]?.length || 0;\n};\nexports.getLeadingZeroCount = getLeadingZeroCount;\n/**\n * This formats a number using Intl\n * It abbreviates large numbers (using K, M, B, T)\n * And abbreviates small numbers in 2 ways:\n * - Will format to the given number of decimal places\n * - Will format up to 4 decimal places\n * - Will ellipse the number if longer than given decimal places\n *\n * @param numericAmount - The number to format\n * @param opts - The options to use when formatting\n * @returns The formatted number\n */\nconst formatAmount = (numericAmount, opts) => {\n    // create options with defaults\n    const options = { ...defaultFormatOptions, ...opts };\n    const leadingZeros = (0, exports.getLeadingZeroCount)(numericAmount);\n    const isDecimal = numericAmount.toString().includes('.') || leadingZeros > 0;\n    const isLargeNumber = numericAmount > 999;\n    const handleShouldEllipse = (decimalPlaces) => Boolean(options?.shouldEllipse) && leadingZeros >= decimalPlaces;\n    if (isLargeNumber) {\n        return Intl.NumberFormat('en-US', {\n            notation: 'compact',\n            compactDisplay: 'short',\n            maximumFractionDigits: 2,\n        }).format(numericAmount);\n    }\n    if (isDecimal) {\n        const ellipse = handleShouldEllipse(options.decimalPlaces);\n        const formattedValue = Intl.NumberFormat('en-US', {\n            minimumFractionDigits: ellipse ? options.decimalPlaces : undefined,\n            maximumFractionDigits: options.decimalPlaces,\n        }).format(numericAmount);\n        return ellipse ? `${formattedValue}...` : formattedValue;\n    }\n    // Default to showing the raw amount\n    return numericAmount.toString();\n};\nexports.formatAmount = formatAmount;\nconst getAmount = (amount, decimals, options) => {\n    if (!amount || !decimals) {\n        return '';\n    }\n    const numericAmount = calcTokenAmount(amount, parseFloat(decimals)).toNumber();\n    return (0, exports.formatAmount)(numericAmount, options);\n};\nexports.getAmount = getAmount;\n//# sourceMappingURL=get-notification-data.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createOnChainPushNotificationMessage = exports.isOnChainNotification = exports.createOnChainPushNotificationMessages = void 0;\nconst NotificationServicesController_1 = require(\"../../NotificationServicesController/index.cjs\");\nconst get_notification_data_1 = require(\"./get-notification-data.cjs\");\n/**\n * On Chain Push Notification Messages.\n * This is a list of all the push notifications we support. Update this for synced notifications on mobile and extension\n *\n * @param translationKeys - all translations supported\n * @returns A translation push message object.\n */\nconst createOnChainPushNotificationMessages = (translationKeys) => {\n    const t = (...args) => {\n        const [key, ...otherArgs] = args;\n        // Coerce types for the translation function\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const fn = translationKeys[key];\n        return fn(...otherArgs);\n    };\n    return {\n        erc20_sent: {\n            title: t('pushPlatformNotificationsFundsSentTitle'),\n            defaultDescription: t('pushPlatformNotificationsFundsSentDescriptionDefault'),\n            getDescription: (n) => {\n                const symbol = n?.data?.token?.symbol;\n                const tokenAmount = n?.data?.token?.amount;\n                const tokenDecimals = n?.data?.token?.decimals;\n                if (!symbol || !tokenAmount || !tokenDecimals) {\n                    return null;\n                }\n                const amount = (0, get_notification_data_1.getAmount)(tokenAmount, tokenDecimals, {\n                    shouldEllipse: true,\n                });\n                return t('pushPlatformNotificationsFundsSentDescription', amount, symbol);\n            },\n        },\n        eth_sent: {\n            title: t('pushPlatformNotificationsFundsSentTitle'),\n            defaultDescription: t('pushPlatformNotificationsFundsSentDescriptionDefault'),\n            getDescription: (n) => {\n                const symbol = getChainSymbol(n?.chain_id);\n                const tokenAmount = n?.data?.amount?.eth;\n                if (!symbol || !tokenAmount) {\n                    return null;\n                }\n                const amount = (0, get_notification_data_1.formatAmount)(parseFloat(tokenAmount), {\n                    shouldEllipse: true,\n                });\n                return t('pushPlatformNotificationsFundsSentDescription', amount, symbol);\n            },\n        },\n        erc20_received: {\n            title: t('pushPlatformNotificationsFundsReceivedTitle'),\n            defaultDescription: t('pushPlatformNotificationsFundsReceivedDescriptionDefault'),\n            getDescription: (n) => {\n                const symbol = n?.data?.token?.symbol;\n                const tokenAmount = n?.data?.token?.amount;\n                const tokenDecimals = n?.data?.token?.decimals;\n                if (!symbol || !tokenAmount || !tokenDecimals) {\n                    return null;\n                }\n                const amount = (0, get_notification_data_1.getAmount)(tokenAmount, tokenDecimals, {\n                    shouldEllipse: true,\n                });\n                return t('pushPlatformNotificationsFundsReceivedDescription', amount, symbol);\n            },\n        },\n        eth_received: {\n            title: t('pushPlatformNotificationsFundsReceivedTitle'),\n            defaultDescription: t('pushPlatformNotificationsFundsReceivedDescriptionDefault'),\n            getDescription: (n) => {\n                const symbol = getChainSymbol(n?.chain_id);\n                const tokenAmount = n?.data?.amount?.eth;\n                if (!symbol || !tokenAmount) {\n                    return null;\n                }\n                const amount = (0, get_notification_data_1.formatAmount)(parseFloat(tokenAmount), {\n                    shouldEllipse: true,\n                });\n                return t('pushPlatformNotificationsFundsReceivedDescription', amount, symbol);\n            },\n        },\n        metamask_swap_completed: {\n            title: t('pushPlatformNotificationsSwapCompletedTitle'),\n            defaultDescription: t('pushPlatformNotificationsSwapCompletedDescription'),\n        },\n        erc721_sent: {\n            title: t('pushPlatformNotificationsNftSentTitle'),\n            defaultDescription: t('pushPlatformNotificationsNftSentDescription'),\n        },\n        erc1155_sent: {\n            title: t('pushPlatformNotificationsNftSentTitle'),\n            defaultDescription: t('pushPlatformNotificationsNftSentDescription'),\n        },\n        erc721_received: {\n            title: t('pushPlatformNotificationsNftReceivedTitle'),\n            defaultDescription: t('pushPlatformNotificationsNftReceivedDescription'),\n        },\n        erc1155_received: {\n            title: t('pushPlatformNotificationsNftReceivedTitle'),\n            defaultDescription: t('pushPlatformNotificationsNftReceivedDescription'),\n        },\n        rocketpool_stake_completed: {\n            title: t('pushPlatformNotificationsStakingRocketpoolStakeCompletedTitle'),\n            defaultDescription: t('pushPlatformNotificationsStakingRocketpoolStakeCompletedDescription'),\n        },\n        rocketpool_unstake_completed: {\n            title: t('pushPlatformNotificationsStakingRocketpoolUnstakeCompletedTitle'),\n            defaultDescription: t('pushPlatformNotificationsStakingRocketpoolUnstakeCompletedDescription'),\n        },\n        lido_stake_completed: {\n            title: t('pushPlatformNotificationsStakingLidoStakeCompletedTitle'),\n            defaultDescription: t('pushPlatformNotificationsStakingLidoStakeCompletedDescription'),\n        },\n        lido_stake_ready_to_be_withdrawn: {\n            title: t('pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnTitle'),\n            defaultDescription: t('pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnDescription'),\n        },\n        lido_withdrawal_requested: {\n            title: t('pushPlatformNotificationsStakingLidoWithdrawalRequestedTitle'),\n            defaultDescription: t('pushPlatformNotificationsStakingLidoWithdrawalRequestedDescription'),\n        },\n        lido_withdrawal_completed: {\n            title: t('pushPlatformNotificationsStakingLidoWithdrawalCompletedTitle'),\n            defaultDescription: t('pushPlatformNotificationsStakingLidoWithdrawalCompletedDescription'),\n        },\n    };\n};\nexports.createOnChainPushNotificationMessages = createOnChainPushNotificationMessages;\n/**\n * Retrieves the symbol associated with a given chain ID.\n *\n * @param chainId - The ID of the chain.\n * @returns The symbol associated with the chain ID, or null if not found.\n */\nfunction getChainSymbol(chainId) {\n    return NotificationServicesController_1.Constants.CHAIN_SYMBOLS[chainId] ?? null;\n}\n/**\n * Checks if the given value is an OnChainRawNotification object.\n *\n * @param n - The value to check.\n * @returns True if the value is an OnChainRawNotification object, false otherwise.\n */\nfunction isOnChainNotification(n) {\n    const assumed = n;\n    // We don't have a validation/parsing library to check all possible types of an on chain notification\n    // It is safe enough just to check \"some\" fields, and catch any errors down the line if the shape is bad.\n    const isValidEnoughToBeOnChainNotification = [\n        assumed?.id,\n        assumed?.data,\n        assumed?.trigger_id,\n    ].every((field) => field !== undefined);\n    return isValidEnoughToBeOnChainNotification;\n}\nexports.isOnChainNotification = isOnChainNotification;\n/**\n * Creates a push notification message based on the given on-chain raw notification.\n *\n * @param n - processed notification.\n * @param translations - translates keys into text\n * @returns The push notification message object, or null if the notification is invalid.\n */\nfunction createOnChainPushNotificationMessage(n, translations) {\n    if (!n?.type) {\n        return null;\n    }\n    const notificationMessage = (0, exports.createOnChainPushNotificationMessages)(translations)[n.type];\n    if (!notificationMessage) {\n        return null;\n    }\n    let description = null;\n    try {\n        description =\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            notificationMessage?.getDescription?.(n) ??\n                notificationMessage.defaultDescription ??\n                null;\n    }\n    catch (e) {\n        description = notificationMessage.defaultDescription ?? null;\n    }\n    return {\n        title: notificationMessage.title ?? '',\n        description: description ?? '', // Fallback to empty string if null\n    };\n}\nexports.createOnChainPushNotificationMessage = createOnChainPushNotificationMessage;\n//# sourceMappingURL=get-notification-message.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./get-notification-data.cjs\"), exports);\n__exportStar(require(\"./get-notification-message.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotificationServicesPushController = exports.NotificationServicesController = void 0;\nexports.NotificationServicesController = __importStar(require(\"./NotificationServicesController/index.cjs\"));\nexports.NotificationServicesPushController = __importStar(require(\"./NotificationServicesPushController/index.cjs\"));\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toRawOnChainNotification = void 0;\n/**\n * A true \"raw notification\" does not have some fields that exist on this type. E.g. the `type` field.\n * This is retro-actively added when we fetch notifications to be able to easily type-discriminate notifications.\n * We use this to ensure that the correct missing fields are added to the raw shapes\n *\n * @param data - raw onchain notification\n * @returns a complete raw onchain notification\n */\nfunction toRawOnChainNotification(data) {\n    return {\n        ...data,\n        type: data?.data?.kind,\n    };\n}\nexports.toRawOnChainNotification = toRawOnChainNotification;\n//# sourceMappingURL=to-raw-notification.cjs.map","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectMultiplex = void 0;\nconst readable_stream_1 = require(\"readable-stream\");\nconst once_1 = __importDefault(require(\"once\"));\nconst Substream_1 = require(\"./Substream\");\nconst IGNORE_SUBSTREAM = Symbol('IGNORE_SUBSTREAM');\nclass ObjectMultiplex extends readable_stream_1.Duplex {\n    constructor(opts = {}) {\n        super(Object.assign(Object.assign({}, opts), { objectMode: true }));\n        this._substreams = {};\n    }\n    createStream(name) {\n        // guard stream against destroyed already\n        if (this.destroyed) {\n            throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already destroyed`);\n        }\n        // guard stream against ended already\n        if (this._readableState.ended || this._writableState.ended) {\n            throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already ended`);\n        }\n        // validate name\n        if (!name) {\n            throw new Error('ObjectMultiplex - name must not be empty');\n        }\n        if (this._substreams[name]) {\n            throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n        }\n        // create substream\n        const substream = new Substream_1.Substream({ parent: this, name });\n        this._substreams[name] = substream;\n        // listen for parent stream to end\n        anyStreamEnd(this, (_error) => {\n            return substream.destroy(_error || undefined);\n        });\n        return substream;\n    }\n    // ignore streams (dont display orphaned data warning)\n    ignoreStream(name) {\n        // validate name\n        if (!name) {\n            throw new Error('ObjectMultiplex - name must not be empty');\n        }\n        if (this._substreams[name]) {\n            throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n        }\n        // set\n        this._substreams[name] = IGNORE_SUBSTREAM;\n    }\n    _read() {\n        return undefined;\n    }\n    _write(chunk, _encoding, callback) {\n        const { name, data } = chunk;\n        if (!name) {\n            console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n            return callback();\n        }\n        // get corresponding substream\n        const substream = this._substreams[name];\n        if (!substream) {\n            console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n            return callback();\n        }\n        // push data into substream\n        if (substream !== IGNORE_SUBSTREAM) {\n            substream.push(data);\n        }\n        return callback();\n    }\n}\nexports.ObjectMultiplex = ObjectMultiplex;\n// util\nfunction anyStreamEnd(stream, _cb) {\n    const cb = (0, once_1.default)(_cb);\n    (0, readable_stream_1.finished)(stream, { readable: false }, cb);\n    (0, readable_stream_1.finished)(stream, { writable: false }, cb);\n}\n//# sourceMappingURL=ObjectMultiplex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Substream = void 0;\nconst readable_stream_1 = require(\"readable-stream\");\nclass Substream extends readable_stream_1.Duplex {\n    constructor({ parent, name }) {\n        super({ objectMode: true });\n        this._parent = parent;\n        this._name = name;\n    }\n    /**\n     * Explicitly sets read operations to a no-op.\n     */\n    _read() {\n        return undefined;\n    }\n    /**\n     * Called when data should be written to this writable stream.\n     *\n     * @param chunk - Arbitrary object to write\n     * @param encoding - Encoding to use when writing payload\n     * @param callback - Called when writing is complete or an error occurs\n     */\n    _write(chunk, _encoding, callback) {\n        this._parent.push({\n            name: this._name,\n            data: chunk,\n        });\n        callback();\n    }\n}\nexports.Substream = Substream;\n//# sourceMappingURL=Substream.js.map","\"use strict\";\nconst ObjectMultiplex_1 = require(\"./ObjectMultiplex\");\nmodule.exports = ObjectMultiplex_1.ObjectMultiplex;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/errors.ts\n\n\n\n\n\nvar _rpcerrors = require('@metamask/rpc-errors');\nfunction unauthorized(opts) {\n  return _rpcerrors.providerErrors.unauthorized({\n    message: \"Unauthorized to perform action. Try requesting the required permission(s) first. For more information, see: https://docs.metamask.io/guide/rpc-api.html#permissions\",\n    data: opts.data\n  });\n}\nfunction methodNotFound(method, data) {\n  const message = `The method \"${method}\" does not exist / is not available.`;\n  const opts = { message };\n  if (data !== void 0) {\n    opts.data = data;\n  }\n  return _rpcerrors.rpcErrors.methodNotFound(opts);\n}\nfunction invalidParams(opts) {\n  return _rpcerrors.rpcErrors.invalidParams({\n    data: opts.data,\n    message: opts.message\n  });\n}\nfunction userRejectedRequest(data) {\n  return _rpcerrors.providerErrors.userRejectedRequest({ data });\n}\nfunction internalError(message, data) {\n  return _rpcerrors.rpcErrors.internal({ message, data });\n}\nvar InvalidSubjectIdentifierError = class extends Error {\n  constructor(origin) {\n    super(\n      `Invalid subject identifier: \"${typeof origin === \"string\" ? origin : typeof origin}\"`\n    );\n  }\n};\nvar UnrecognizedSubjectError = class extends Error {\n  constructor(origin) {\n    super(`Unrecognized subject: \"${origin}\" has no permissions.`);\n  }\n};\nvar CaveatMergerDoesNotExistError = class extends Error {\n  constructor(caveatType) {\n    super(`Caveat value merger does not exist for type: \"${caveatType}\"`);\n  }\n};\nvar InvalidMergedPermissionsError = class extends Error {\n  constructor(origin, cause, diff) {\n    super(\n      `Invalid merged permissions for subject \"${origin}\":\n${cause.message}`\n    );\n    this.cause = cause;\n    this.data = { diff };\n  }\n};\nvar InvalidApprovedPermissionError = class extends Error {\n  constructor(origin, target, approvedPermission) {\n    super(\n      `Invalid approved permission for origin \"${origin}\" and target \"${target}\".`\n    );\n    this.data = { origin, target, approvedPermission };\n  }\n};\nvar PermissionDoesNotExistError = class extends Error {\n  constructor(origin, target) {\n    super(`Subject \"${origin}\" has no permission for \"${target}\".`);\n  }\n};\nvar EndowmentPermissionDoesNotExistError = class extends Error {\n  constructor(target, origin) {\n    super(`Subject \"${origin}\" has no permission for \"${target}\".`);\n    if (origin) {\n      this.data = { origin };\n    }\n  }\n};\nvar UnrecognizedCaveatTypeError = class extends Error {\n  constructor(caveatType, origin, target) {\n    super(`Unrecognized caveat type: \"${caveatType}\"`);\n    this.data = { caveatType };\n    if (origin !== void 0) {\n      this.data.origin = origin;\n    }\n    if (target !== void 0) {\n      this.data.target = target;\n    }\n  }\n};\nvar InvalidCaveatsPropertyError = class extends Error {\n  constructor(origin, target, caveatsProperty) {\n    super(\n      `The \"caveats\" property of permission for \"${target}\" of subject \"${origin}\" is invalid. It must be a non-empty array if specified.`\n    );\n    this.data = { origin, target, caveatsProperty };\n  }\n};\nvar CaveatDoesNotExistError = class extends Error {\n  constructor(origin, target, caveatType) {\n    super(\n      `Permission for \"${target}\" of subject \"${origin}\" has no caveat of type \"${caveatType}\".`\n    );\n  }\n};\nvar CaveatAlreadyExistsError = class extends Error {\n  constructor(origin, target, caveatType) {\n    super(\n      `Permission for \"${target}\" of subject \"${origin}\" already has a caveat of type \"${caveatType}\".`\n    );\n  }\n};\nvar InvalidCaveatError = class extends _rpcerrors.JsonRpcError {\n  constructor(receivedCaveat, origin, target) {\n    super(\n      _rpcerrors.errorCodes.rpc.invalidParams,\n      `Invalid caveat. Caveats must be plain objects.`,\n      { receivedCaveat }\n    );\n    this.data = { origin, target };\n  }\n};\nvar InvalidCaveatTypeError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat types must be strings. Received: \"${typeof caveat.type}\"`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar CaveatMissingValueError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat is missing \"value\" field.`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar CaveatInvalidJsonError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(`Caveat \"value\" is invalid JSON.`);\n    this.data = { caveat, origin, target };\n  }\n};\nvar InvalidCaveatFieldsError = class extends Error {\n  constructor(caveat, origin, target) {\n    super(\n      `Caveat has unexpected number of fields: \"${Object.keys(caveat).length}\"`\n    );\n    this.data = { caveat, origin, target };\n  }\n};\nvar ForbiddenCaveatError = class extends Error {\n  constructor(caveatType, origin, targetName) {\n    super(\n      `Permissions for target \"${targetName}\" may not have caveats of type \"${caveatType}\".`\n    );\n    this.data = { caveatType, origin, target: targetName };\n  }\n};\nvar DuplicateCaveatError = class extends Error {\n  constructor(caveatType, origin, targetName) {\n    super(\n      `Permissions for target \"${targetName}\" contains multiple caveats of type \"${caveatType}\".`\n    );\n    this.data = { caveatType, origin, target: targetName };\n  }\n};\nvar CaveatMergeTypeMismatchError = class extends Error {\n  constructor(leftCaveatType, rightCaveatType) {\n    super(\n      `Cannot merge caveats of different types: \"${leftCaveatType}\" and \"${rightCaveatType}\".`\n    );\n    this.data = { leftCaveatType, rightCaveatType };\n  }\n};\nvar CaveatSpecificationMismatchError = class extends Error {\n  constructor(caveatSpec, permissionType) {\n    super(\n      `Caveat specification uses a mismatched type. Expected caveats for ${permissionType}`\n    );\n    this.data = { caveatSpec, permissionType };\n  }\n};\nvar PermissionsRequestNotFoundError = class extends Error {\n  constructor(id) {\n    super(`Permissions request with id \"${id}\" not found.`);\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.unauthorized = unauthorized; exports.methodNotFound = methodNotFound; exports.invalidParams = invalidParams; exports.userRejectedRequest = userRejectedRequest; exports.internalError = internalError; exports.InvalidSubjectIdentifierError = InvalidSubjectIdentifierError; exports.UnrecognizedSubjectError = UnrecognizedSubjectError; exports.CaveatMergerDoesNotExistError = CaveatMergerDoesNotExistError; exports.InvalidMergedPermissionsError = InvalidMergedPermissionsError; exports.InvalidApprovedPermissionError = InvalidApprovedPermissionError; exports.PermissionDoesNotExistError = PermissionDoesNotExistError; exports.EndowmentPermissionDoesNotExistError = EndowmentPermissionDoesNotExistError; exports.UnrecognizedCaveatTypeError = UnrecognizedCaveatTypeError; exports.InvalidCaveatsPropertyError = InvalidCaveatsPropertyError; exports.CaveatDoesNotExistError = CaveatDoesNotExistError; exports.CaveatAlreadyExistsError = CaveatAlreadyExistsError; exports.InvalidCaveatError = InvalidCaveatError; exports.InvalidCaveatTypeError = InvalidCaveatTypeError; exports.CaveatMissingValueError = CaveatMissingValueError; exports.CaveatInvalidJsonError = CaveatInvalidJsonError; exports.InvalidCaveatFieldsError = InvalidCaveatFieldsError; exports.ForbiddenCaveatError = ForbiddenCaveatError; exports.DuplicateCaveatError = DuplicateCaveatError; exports.CaveatMergeTypeMismatchError = CaveatMergeTypeMismatchError; exports.CaveatSpecificationMismatchError = CaveatSpecificationMismatchError; exports.PermissionsRequestNotFoundError = PermissionsRequestNotFoundError;\n//# sourceMappingURL=chunk-3X6WO7UG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/SubjectMetadataController.ts\nvar _basecontroller = require('@metamask/base-controller');\nvar controllerName = \"SubjectMetadataController\";\nvar SubjectType = /* @__PURE__ */ ((SubjectType2) => {\n  SubjectType2[\"Extension\"] = \"extension\";\n  SubjectType2[\"Internal\"] = \"internal\";\n  SubjectType2[\"Unknown\"] = \"unknown\";\n  SubjectType2[\"Website\"] = \"website\";\n  SubjectType2[\"Snap\"] = \"snap\";\n  return SubjectType2;\n})(SubjectType || {});\nvar stateMetadata = {\n  subjectMetadata: { persist: true, anonymous: false }\n};\nvar defaultState = {\n  subjectMetadata: {}\n};\nvar SubjectMetadataController = class _SubjectMetadataController extends _basecontroller.BaseController {\n  constructor({\n    messenger,\n    subjectCacheLimit,\n    state = {}\n  }) {\n    if (!Number.isInteger(subjectCacheLimit) || subjectCacheLimit < 1) {\n      throw new Error(\n        `subjectCacheLimit must be a positive integer. Received: \"${subjectCacheLimit}\"`\n      );\n    }\n    const hasPermissions = (origin) => {\n      return messenger.call(\"PermissionController:hasPermissions\", origin);\n    };\n    super({\n      name: controllerName,\n      metadata: stateMetadata,\n      messenger,\n      state: {\n        ..._SubjectMetadataController.getTrimmedState(state, hasPermissions)\n      }\n    });\n    this.subjectHasPermissions = hasPermissions;\n    this.subjectCacheLimit = subjectCacheLimit;\n    this.subjectsWithoutPermissionsEncounteredSinceStartup = /* @__PURE__ */ new Set();\n    this.messagingSystem.registerActionHandler(\n      `${this.name}:getSubjectMetadata`,\n      this.getSubjectMetadata.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${this.name}:addSubjectMetadata`,\n      this.addSubjectMetadata.bind(this)\n    );\n  }\n  /**\n   * Clears the state of this controller. Also resets the cache of subjects\n   * encountered since startup, so as to not prematurely reach the cache limit.\n   */\n  clearState() {\n    this.subjectsWithoutPermissionsEncounteredSinceStartup.clear();\n    this.update((_draftState) => {\n      return { ...defaultState };\n    });\n  }\n  /**\n   * Stores domain metadata for the given origin (subject). Deletes metadata for\n   * subjects without permissions in a FIFO manner once more than\n   * {@link SubjectMetadataController.subjectCacheLimit} distinct origins have\n   * been added since boot.\n   *\n   * In order to prevent a degraded user experience,\n   * metadata is never deleted for subjects with permissions, since metadata\n   * cannot yet be requested on demand.\n   *\n   * @param metadata - The subject metadata to store.\n   */\n  addSubjectMetadata(metadata) {\n    const { origin } = metadata;\n    const newMetadata = {\n      ...metadata,\n      extensionId: metadata.extensionId || null,\n      iconUrl: metadata.iconUrl || null,\n      name: metadata.name || null,\n      subjectType: metadata.subjectType || null\n    };\n    let originToForget = null;\n    if (this.subjectsWithoutPermissionsEncounteredSinceStartup.size >= this.subjectCacheLimit) {\n      const cachedOrigin = this.subjectsWithoutPermissionsEncounteredSinceStartup.values().next().value;\n      this.subjectsWithoutPermissionsEncounteredSinceStartup.delete(\n        cachedOrigin\n      );\n      if (!this.subjectHasPermissions(cachedOrigin)) {\n        originToForget = cachedOrigin;\n      }\n    }\n    this.subjectsWithoutPermissionsEncounteredSinceStartup.add(origin);\n    this.update((draftState) => {\n      draftState.subjectMetadata[origin] = newMetadata;\n      if (typeof originToForget === \"string\") {\n        delete draftState.subjectMetadata[originToForget];\n      }\n    });\n  }\n  /**\n   * Gets the subject metadata for the given origin, if any.\n   *\n   * @param origin - The origin for which to get the subject metadata.\n   * @returns The subject metadata, if any, or `undefined` otherwise.\n   */\n  getSubjectMetadata(origin) {\n    return this.state.subjectMetadata[origin];\n  }\n  /**\n   * Deletes all subjects without permissions from the controller's state.\n   */\n  trimMetadataState() {\n    this.update((draftState) => {\n      return _SubjectMetadataController.getTrimmedState(\n        draftState,\n        this.subjectHasPermissions\n      );\n    });\n  }\n  /**\n   * Returns a new state object that only includes subjects with permissions.\n   * This method is static because we want to call it in the constructor, before\n   * the controller's state is initialized.\n   *\n   * @param state - The state object to trim.\n   * @param hasPermissions - A function that returns a boolean indicating\n   * whether a particular subject (identified by its origin) has any\n   * permissions.\n   * @returns The new state object. If the specified `state` object has no\n   * subject metadata, the returned object will be equivalent to the default\n   * state of this controller.\n   */\n  static getTrimmedState(state, hasPermissions) {\n    const { subjectMetadata = {} } = state;\n    return {\n      subjectMetadata: Object.keys(subjectMetadata).reduce((newSubjectMetadata, origin) => {\n        if (hasPermissions(origin)) {\n          newSubjectMetadata[origin] = subjectMetadata[origin];\n        }\n        return newSubjectMetadata;\n      }, {})\n    };\n  }\n};\n\n\n\n\nexports.SubjectType = SubjectType; exports.SubjectMetadataController = SubjectMetadataController;\n//# sourceMappingURL=chunk-C73QV75D.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkHRDKMOYSjs = require('./chunk-HRDKMOYS.js');\n\n\nvar _chunkXM622CMPjs = require('./chunk-XM622CMP.js');\n\n\nvar _chunkGHOOCGN3js = require('./chunk-GHOOCGN3.js');\n\n\nvar _chunkZ2XKIXLSjs = require('./chunk-Z2XKIXLS.js');\n\n// src/rpc-methods/index.ts\nvar rpc_methods_exports = {};\n_chunkZ2XKIXLSjs.__export.call(void 0, rpc_methods_exports, {\n  handlers: () => handlers\n});\nvar handlers = [\n  _chunkXM622CMPjs.requestPermissionsHandler,\n  _chunkHRDKMOYSjs.getPermissionsHandler,\n  _chunkGHOOCGN3js.revokePermissionsHandler\n];\n\n\n\n\nexports.handlers = handlers; exports.rpc_methods_exports = rpc_methods_exports;\n//# sourceMappingURL=chunk-DV74ZDGD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunk3X6WO7UGjs = require('./chunk-3X6WO7UG.js');\n\n// src/rpc-methods/revokePermissions.ts\n\n\nvar _utils = require('@metamask/utils');\nvar revokePermissionsHandler = {\n  methodNames: [\"wallet_revokePermissions\" /* revokePermissions */],\n  implementation: revokePermissionsImplementation,\n  hookNames: {\n    revokePermissionsForOrigin: true\n  }\n};\nasync function revokePermissionsImplementation(req, res, _next, end, { revokePermissionsForOrigin }) {\n  const { params } = req;\n  const param = params?.[0];\n  if (!param) {\n    return end(_chunk3X6WO7UGjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  const permissionKeys = Object.keys(param);\n  if (!_utils.isNonEmptyArray.call(void 0, permissionKeys)) {\n    return end(_chunk3X6WO7UGjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  revokePermissionsForOrigin(permissionKeys);\n  res.result = null;\n  return end();\n}\n\n\n\nexports.revokePermissionsHandler = revokePermissionsHandler;\n//# sourceMappingURL=chunk-GHOOCGN3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/rpc-methods/getPermissions.ts\nvar getPermissionsHandler = {\n  methodNames: [\"wallet_getPermissions\" /* getPermissions */],\n  implementation: getPermissionsImplementation,\n  hookNames: {\n    getPermissionsForOrigin: true\n  }\n};\nasync function getPermissionsImplementation(_req, res, _next, end, { getPermissionsForOrigin }) {\n  res.result = Object.values(getPermissionsForOrigin() || {});\n  return end();\n}\n\n\n\nexports.getPermissionsHandler = getPermissionsHandler;\n//# sourceMappingURL=chunk-HRDKMOYS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\nvar _chunkRKDXFKNNjs = require('./chunk-RKDXFKNN.js');\n\n\n\n\n\nvar _chunkZH4MLSXXjs = require('./chunk-ZH4MLSXX.js');\n\n\nvar _chunkVM4LI55Wjs = require('./chunk-VM4LI55W.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunk3X6WO7UGjs = require('./chunk-3X6WO7UG.js');\n\n\nvar _chunkPTE4672Ijs = require('./chunk-PTE4672I.js');\n\n\n\nvar _chunkZ2XKIXLSjs = require('./chunk-Z2XKIXLS.js');\n\n// src/PermissionController.ts\nvar _basecontroller = require('@metamask/base-controller');\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _utils = require('@metamask/utils');\nvar _deepfreezestrict = require('deep-freeze-strict'); var _deepfreezestrict2 = _interopRequireDefault(_deepfreezestrict);\nvar _immer = require('immer');\nvar _nanoid = require('nanoid');\nvar controllerName = \"PermissionController\";\nfunction getStateMetadata() {\n  return { subjects: { anonymous: true, persist: true } };\n}\nfunction getDefaultState() {\n  return { subjects: {} };\n}\nvar CaveatMutatorOperation = /* @__PURE__ */ ((CaveatMutatorOperation2) => {\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"noop\"] = 0] = \"noop\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"updateValue\"] = 1] = \"updateValue\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"deleteCaveat\"] = 2] = \"deleteCaveat\";\n  CaveatMutatorOperation2[CaveatMutatorOperation2[\"revokePermission\"] = 3] = \"revokePermission\";\n  return CaveatMutatorOperation2;\n})(CaveatMutatorOperation || {});\nvar _expectGetCaveatMerger, expectGetCaveatMerger_fn, _applyGrantedPermissions, applyGrantedPermissions_fn, _mergeIncrementalPermissions, mergeIncrementalPermissions_fn, _mergePermission, mergePermission_fn, _mergeCaveat, mergeCaveat_fn, _handleApprovedPermissions, handleApprovedPermissions_fn;\nvar PermissionController = class extends _basecontroller.BaseController {\n  /**\n   * Constructs the PermissionController.\n   *\n   * @param options - Permission controller options.\n   * @param options.caveatSpecifications - The specifications of all caveats\n   * available to the controller. See {@link CaveatSpecificationMap} and the\n   * documentation for more details.\n   * @param options.permissionSpecifications - The specifications of all\n   * permissions available to the controller. See\n   * {@link PermissionSpecificationMap} and the README for more details.\n   * @param options.unrestrictedMethods - The callable names of all JSON-RPC\n   * methods ignored by the new controller.\n   * @param options.messenger - The controller messenger. See\n   * {@link BaseController} for more information.\n   * @param options.state - Existing state to hydrate the controller with at\n   * initialization.\n   */\n  constructor(options) {\n    const {\n      caveatSpecifications,\n      permissionSpecifications,\n      unrestrictedMethods,\n      messenger,\n      state = {}\n    } = options;\n    super({\n      name: controllerName,\n      metadata: getStateMetadata(),\n      messenger,\n      state: {\n        ...getDefaultState(),\n        ...state\n      }\n    });\n    /**\n     * Gets the merger function for the specified caveat. Throws if no\n     * merger exists.\n     *\n     * @param caveatType - The type of the caveat whose merger to get.\n     * @returns The caveat value merger function for the specified caveat type.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _expectGetCaveatMerger);\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _applyGrantedPermissions);\n    /**\n     * Merges a set of incrementally requested permissions into the existing permissions of\n     * the requesting subject. The merge is a right-biased union, where the existing\n     * permissions are the left-hand side, and the incrementally requested permissions are\n     * the right-hand side.\n     *\n     * @param existingPermissions - The subject's existing permissions.\n     * @param incrementalRequestedPermissions - The requested permissions to merge.\n     * @returns The merged permissions and the resulting diff.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergeIncrementalPermissions);\n    /**\n     * Performs a right-biased union between two permissions. The task of merging caveats\n     * of the same type between the two permissions is delegated to the corresponding\n     * caveat type's merger implementation.\n     *\n     * Throws if the left-hand and right-hand permissions both have a caveat whose\n     * specification does not provide a caveat value merger function.\n     *\n     * @param leftPermission - The left-hand permission to merge.\n     * @param rightPermission - The right-hand permission to merge.\n     * @returns The merged permission.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergePermission);\n    /**\n     * Merges two caveats of the same type. The task of merging the values of the\n     * two caveats is delegated to the corresponding caveat type's merger implementation.\n     *\n     * @param leftCaveat - The left-hand caveat to merge.\n     * @param rightCaveat - The right-hand caveat to merge.\n     * @returns The merged caveat and the diff between the two caveats.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _mergeCaveat);\n    /**\n     * Accepts a permissions request that has been approved by the user. This\n     * method should be called after the user has approved the request and the\n     * {@link ApprovalController} has resolved the user approval promise.\n     *\n     * @param options - Options bag.\n     * @param options.subject - The subject to grant permissions to.\n     * @param options.metadata - The metadata of the approved permissions request.\n     * @param options.preserveExistingPermissions - Whether to preserve the\n     * subject's existing permissions.\n     * @param options.approvedRequest - The approved permissions request to handle.\n     * @returns The granted permissions and request metadata.\n     */\n    _chunkZ2XKIXLSjs.__privateAdd.call(void 0, this, _handleApprovedPermissions);\n    this._unrestrictedMethods = new Set(unrestrictedMethods);\n    this._caveatSpecifications = _deepfreezestrict2.default.call(void 0, { ...caveatSpecifications });\n    this.validatePermissionSpecifications(\n      permissionSpecifications,\n      this._caveatSpecifications\n    );\n    this._permissionSpecifications = _deepfreezestrict2.default.call(void 0, {\n      ...permissionSpecifications\n    });\n    this.registerMessageHandlers();\n    this.createPermissionMiddleware = _chunkVM4LI55Wjs.getPermissionMiddlewareFactory.call(void 0, {\n      executeRestrictedMethod: this._executeRestrictedMethod.bind(this),\n      getRestrictedMethod: this.getRestrictedMethod.bind(this),\n      isUnrestrictedMethod: this.unrestrictedMethods.has.bind(\n        this.unrestrictedMethods\n      )\n    });\n  }\n  /**\n   * The names of all JSON-RPC methods that will be ignored by the controller.\n   *\n   * @returns The names of all unrestricted JSON-RPC methods\n   */\n  get unrestrictedMethods() {\n    return this._unrestrictedMethods;\n  }\n  /**\n   * Gets a permission specification.\n   *\n   * @param targetName - The name of the permission specification to get.\n   * @returns The permission specification with the specified target name.\n   */\n  getPermissionSpecification(targetName) {\n    return this._permissionSpecifications[targetName];\n  }\n  /**\n   * Gets a caveat specification.\n   *\n   * @param caveatType - The type of the caveat specification to get.\n   * @returns The caveat specification with the specified type.\n   */\n  getCaveatSpecification(caveatType) {\n    return this._caveatSpecifications[caveatType];\n  }\n  /**\n   * Constructor helper for validating permission specifications.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param permissionSpecifications - The permission specifications passed to\n   * this controller's constructor.\n   * @param caveatSpecifications - The caveat specifications passed to this\n   * controller.\n   */\n  validatePermissionSpecifications(permissionSpecifications, caveatSpecifications) {\n    Object.entries(\n      permissionSpecifications\n    ).forEach(\n      ([\n        targetName,\n        { permissionType, targetName: innerTargetName, allowedCaveats }\n      ]) => {\n        if (!permissionType || !_utils.hasProperty.call(void 0, _chunkZH4MLSXXjs.PermissionType, permissionType)) {\n          throw new Error(`Invalid permission type: \"${permissionType}\"`);\n        }\n        if (!targetName) {\n          throw new Error(`Invalid permission target name: \"${targetName}\"`);\n        }\n        if (targetName !== innerTargetName) {\n          throw new Error(\n            `Invalid permission specification: target name \"${targetName}\" must match specification.targetName value \"${innerTargetName}\".`\n          );\n        }\n        if (allowedCaveats) {\n          allowedCaveats.forEach((caveatType) => {\n            if (!_utils.hasProperty.call(void 0, caveatSpecifications, caveatType)) {\n              throw new (0, _chunk3X6WO7UGjs.UnrecognizedCaveatTypeError)(caveatType);\n            }\n            const specification = caveatSpecifications[caveatType];\n            const isRestrictedMethodCaveat = _chunkRKDXFKNNjs.isRestrictedMethodCaveatSpecification.call(void 0, specification);\n            if (permissionType === \"RestrictedMethod\" /* RestrictedMethod */ && !isRestrictedMethodCaveat || permissionType === \"Endowment\" /* Endowment */ && isRestrictedMethodCaveat) {\n              throw new (0, _chunk3X6WO7UGjs.CaveatSpecificationMismatchError)(\n                specification,\n                permissionType\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n  /**\n   * Constructor helper for registering the controller's messaging system\n   * actions.\n   */\n  registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:clearPermissions`,\n      () => this.clearState()\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getEndowments`,\n      (origin, targetName, requestData) => this.getEndowments(origin, targetName, requestData)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getSubjectNames`,\n      () => this.getSubjectNames()\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:getPermissions`,\n      (origin) => this.getPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasPermission`,\n      (origin, targetName) => this.hasPermission(origin, targetName)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasPermissions`,\n      (origin) => this.hasPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:grantPermissions`,\n      this.grantPermissions.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:grantPermissionsIncremental`,\n      this.grantPermissionsIncremental.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:requestPermissions`,\n      (subject, permissions) => this.requestPermissions(subject, permissions)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:requestPermissionsIncremental`,\n      (subject, permissions) => this.requestPermissionsIncremental(subject, permissions)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokeAllPermissions`,\n      (origin) => this.revokeAllPermissions(origin)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokePermissionForAllSubjects`,\n      (target) => this.revokePermissionForAllSubjects(target)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:revokePermissions`,\n      this.revokePermissions.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:updateCaveat`,\n      (origin, target, caveatType, caveatValue) => {\n        this.updateCaveat(\n          origin,\n          target,\n          caveatType,\n          caveatValue\n        );\n      }\n    );\n  }\n  /**\n   * Clears the state of the controller.\n   */\n  clearState() {\n    this.update((_draftState) => {\n      return {\n        ...getDefaultState()\n      };\n    });\n  }\n  /**\n   * Gets the permission specification corresponding to the given permission\n   * type and target name. Throws an error if the target name does not\n   * correspond to a permission, or if the specification is not of the\n   * given permission type.\n   *\n   * @template Type - The type of the permission specification to get.\n   * @param permissionType - The type of the permission specification to get.\n   * @param targetName - The name of the permission whose specification to get.\n   * @param requestingOrigin - The origin of the requesting subject, if any.\n   * Will be added to any thrown errors.\n   * @returns The specification object corresponding to the given type and\n   * target name.\n   */\n  getTypedPermissionSpecification(permissionType, targetName, requestingOrigin) {\n    const failureError = permissionType === \"RestrictedMethod\" /* RestrictedMethod */ ? _chunk3X6WO7UGjs.methodNotFound.call(void 0, \n      targetName,\n      requestingOrigin ? { origin: requestingOrigin } : void 0\n    ) : new (0, _chunk3X6WO7UGjs.EndowmentPermissionDoesNotExistError)(\n      targetName,\n      requestingOrigin\n    );\n    if (!this.targetExists(targetName)) {\n      throw failureError;\n    }\n    const specification = this.getPermissionSpecification(targetName);\n    if (!_chunkZH4MLSXXjs.hasSpecificationType.call(void 0, specification, permissionType)) {\n      throw failureError;\n    }\n    return specification;\n  }\n  /**\n   * Gets the implementation of the specified restricted method.\n   *\n   * A JSON-RPC error is thrown if the method does not exist.\n   *\n   * @see {@link PermissionController.executeRestrictedMethod} and\n   * {@link PermissionController.createPermissionMiddleware} for internal usage.\n   * @param method - The name of the restricted method.\n   * @param origin - The origin associated with the request for the restricted\n   * method, if any.\n   * @returns The restricted method implementation.\n   */\n  getRestrictedMethod(method, origin) {\n    return this.getTypedPermissionSpecification(\n      \"RestrictedMethod\" /* RestrictedMethod */,\n      method,\n      origin\n    ).methodImplementation;\n  }\n  /**\n   * Gets a list of all origins of subjects.\n   *\n   * @returns The origins (i.e. IDs) of all subjects.\n   */\n  getSubjectNames() {\n    return Object.keys(this.state.subjects);\n  }\n  /**\n   * Gets the permission for the specified target of the subject corresponding\n   * to the specified origin.\n   *\n   * @param origin - The origin of the subject.\n   * @param targetName - The method name as invoked by a third party (i.e., not\n   * a method key).\n   * @returns The permission if it exists, or undefined otherwise.\n   */\n  getPermission(origin, targetName) {\n    return this.state.subjects[origin]?.permissions[targetName];\n  }\n  /**\n   * Gets all permissions for the specified subject, if any.\n   *\n   * @param origin - The origin of the subject.\n   * @returns The permissions of the subject, if any.\n   */\n  getPermissions(origin) {\n    return this.state.subjects[origin]?.permissions;\n  }\n  /**\n   * Checks whether the subject with the specified origin has the specified\n   * permission.\n   *\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @returns Whether the subject has the permission.\n   */\n  hasPermission(origin, target) {\n    return Boolean(this.getPermission(origin, target));\n  }\n  /**\n   * Checks whether the subject with the specified origin has any permissions.\n   * Use this if you want to know if a subject \"exists\".\n   *\n   * @param origin - The origin of the subject to check.\n   * @returns Whether the subject has any permissions.\n   */\n  hasPermissions(origin) {\n    return Boolean(this.state.subjects[origin]);\n  }\n  /**\n   * Revokes all permissions from the specified origin.\n   *\n   * Throws an error of the origin has no permissions.\n   *\n   * @param origin - The origin whose permissions to revoke.\n   */\n  revokeAllPermissions(origin) {\n    this.update((draftState) => {\n      if (!draftState.subjects[origin]) {\n        throw new (0, _chunk3X6WO7UGjs.UnrecognizedSubjectError)(origin);\n      }\n      delete draftState.subjects[origin];\n    });\n  }\n  /**\n   * Revokes the specified permission from the subject with the specified\n   * origin.\n   *\n   * Throws an error if the subject or the permission does not exist.\n   *\n   * @param origin - The origin of the subject whose permission to revoke.\n   * @param target - The target name of the permission to revoke.\n   */\n  revokePermission(origin, target) {\n    this.revokePermissions({ [origin]: [target] });\n  }\n  /**\n   * Revokes the specified permissions from the specified subjects.\n   *\n   * Throws an error if any of the subjects or permissions do not exist.\n   *\n   * @param subjectsAndPermissions - An object mapping subject origins\n   * to arrays of permission target names to revoke.\n   */\n  revokePermissions(subjectsAndPermissions) {\n    this.update((draftState) => {\n      Object.keys(subjectsAndPermissions).forEach((origin) => {\n        if (!_utils.hasProperty.call(void 0, draftState.subjects, origin)) {\n          throw new (0, _chunk3X6WO7UGjs.UnrecognizedSubjectError)(origin);\n        }\n        subjectsAndPermissions[origin].forEach((target) => {\n          const { permissions } = draftState.subjects[origin];\n          if (!_utils.hasProperty.call(void 0, permissions, target)) {\n            throw new (0, _chunk3X6WO7UGjs.PermissionDoesNotExistError)(origin, target);\n          }\n          this.deletePermission(draftState.subjects, origin, target);\n        });\n      });\n    });\n  }\n  /**\n   * Revokes all permissions corresponding to the specified target for all subjects.\n   * Does nothing if no subjects or no such permission exists.\n   *\n   * @param target - The name of the target to revoke all permissions for.\n   */\n  revokePermissionForAllSubjects(target) {\n    if (this.getSubjectNames().length === 0) {\n      return;\n    }\n    this.update((draftState) => {\n      Object.entries(draftState.subjects).forEach(([origin, subject]) => {\n        const { permissions } = subject;\n        if (_utils.hasProperty.call(void 0, permissions, target)) {\n          this.deletePermission(draftState.subjects, origin, target);\n        }\n      });\n    });\n  }\n  /**\n   * Deletes the permission identified by the given origin and target. If the\n   * permission is the single remaining permission of its subject, the subject\n   * is also deleted.\n   *\n   * @param subjects - The draft permission controller subjects.\n   * @param origin - The origin of the subject associated with the permission\n   * to delete.\n   * @param target - The target name of the permission to delete.\n   */\n  deletePermission(subjects, origin, target) {\n    const { permissions } = subjects[origin];\n    if (Object.keys(permissions).length > 1) {\n      delete permissions[target];\n    } else {\n      delete subjects[origin];\n    }\n  }\n  /**\n   * Checks whether the permission of the subject corresponding to the given\n   * origin has a caveat of the specified type.\n   *\n   * Throws an error if the subject does not have a permission with the\n   * specified target name.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to check for.\n   * @returns Whether the permission has the specified caveat.\n   */\n  hasCaveat(origin, target, caveatType) {\n    return Boolean(this.getCaveat(origin, target, caveatType));\n  }\n  /**\n   * Gets the caveat of the specified type, if any, for the permission of\n   * the subject corresponding to the given origin.\n   *\n   * Throws an error if the subject does not have a permission with the\n   * specified target name.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to get.\n   * @returns The caveat, or `undefined` if no such caveat exists.\n   */\n  getCaveat(origin, target, caveatType) {\n    const permission = this.getPermission(origin, target);\n    if (!permission) {\n      throw new (0, _chunk3X6WO7UGjs.PermissionDoesNotExistError)(origin, target);\n    }\n    return _chunkZH4MLSXXjs.findCaveat.call(void 0, permission, caveatType);\n  }\n  /**\n   * Adds a caveat of the specified type, with the specified caveat value, to\n   * the permission corresponding to the given subject origin and permission\n   * target.\n   *\n   * For modifying existing caveats, use\n   * {@link PermissionController.updateCaveat}.\n   *\n   * Throws an error if no such permission exists, or if the caveat already\n   * exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to add.\n   * @param caveatValue - The value of the caveat to add.\n   */\n  addCaveat(origin, target, caveatType, caveatValue) {\n    if (this.hasCaveat(origin, target, caveatType)) {\n      throw new (0, _chunk3X6WO7UGjs.CaveatAlreadyExistsError)(origin, target, caveatType);\n    }\n    this.setCaveat(origin, target, caveatType, caveatValue);\n  }\n  /**\n   * Updates the value of the caveat of the specified type belonging to the\n   * permission corresponding to the given subject origin and permission\n   * target.\n   *\n   * For adding new caveats, use\n   * {@link PermissionController.addCaveat}.\n   *\n   * Throws an error if no such permission or caveat exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to update.\n   * @param caveatValue - The new value of the caveat.\n   */\n  updateCaveat(origin, target, caveatType, caveatValue) {\n    if (!this.hasCaveat(origin, target, caveatType)) {\n      throw new (0, _chunk3X6WO7UGjs.CaveatDoesNotExistError)(origin, target, caveatType);\n    }\n    this.setCaveat(origin, target, caveatType, caveatValue);\n  }\n  /**\n   * Sets the specified caveat on the specified permission. Overwrites existing\n   * caveats of the same type in-place (preserving array order), and adds the\n   * caveat to the end of the array otherwise.\n   *\n   * Throws an error if the permission does not exist or fails to validate after\n   * its caveats have been modified.\n   *\n   * @see {@link PermissionController.addCaveat}\n   * @see {@link PermissionController.updateCaveat}\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to set.\n   * @param caveatValue - The value of the caveat to set.\n   */\n  setCaveat(origin, target, caveatType, caveatValue) {\n    this.update((draftState) => {\n      const subject = draftState.subjects[origin];\n      if (!subject) {\n        throw new (0, _chunk3X6WO7UGjs.UnrecognizedSubjectError)(origin);\n      }\n      const permission = subject.permissions[target];\n      if (!permission) {\n        throw new (0, _chunk3X6WO7UGjs.PermissionDoesNotExistError)(origin, target);\n      }\n      const caveat = {\n        type: caveatType,\n        value: caveatValue\n      };\n      this.validateCaveat(caveat, origin, target);\n      if (permission.caveats) {\n        const caveatIndex = permission.caveats.findIndex(\n          (existingCaveat) => existingCaveat.type === caveat.type\n        );\n        if (caveatIndex === -1) {\n          permission.caveats.push(caveat);\n        } else {\n          permission.caveats.splice(caveatIndex, 1, caveat);\n        }\n      } else {\n        permission.caveats = [caveat];\n      }\n      this.validateModifiedPermission(permission, origin);\n    });\n  }\n  /**\n   * Updates all caveats with the specified type for all subjects and\n   * permissions by applying the specified mutator function to them.\n   *\n   * ATTN: Permissions can be revoked entirely by the action of this method,\n   * read on for details.\n   *\n   * Caveat mutators are functions that receive a caveat value and return a\n   * tuple consisting of a {@link CaveatMutatorOperation} and, optionally, a new\n   * value to update the existing caveat with.\n   *\n   * For each caveat, depending on the mutator result, this method will:\n   * - Do nothing ({@link CaveatMutatorOperation.noop})\n   * - Update the value of the caveat ({@link CaveatMutatorOperation.updateValue}). The caveat specification validator, if any, will be called after updating the value.\n   * - Delete the caveat ({@link CaveatMutatorOperation.deleteCaveat}). The permission specification validator, if any, will be called after deleting the caveat.\n   * - Revoke the parent permission ({@link CaveatMutatorOperation.revokePermission})\n   *\n   * This method throws if the validation of any caveat or permission fails.\n   *\n   * @param targetCaveatType - The type of the caveats to update.\n   * @param mutator - The mutator function which will be applied to all caveat\n   * values.\n   */\n  updatePermissionsByCaveat(targetCaveatType, mutator) {\n    if (Object.keys(this.state.subjects).length === 0) {\n      return;\n    }\n    this.update((draftState) => {\n      Object.values(draftState.subjects).forEach((subject) => {\n        Object.values(subject.permissions).forEach((permission) => {\n          const { caveats } = permission;\n          const targetCaveat = caveats?.find(\n            ({ type }) => type === targetCaveatType\n          );\n          if (!targetCaveat) {\n            return;\n          }\n          const mutatorResult = mutator(targetCaveat.value);\n          const { operation } = mutatorResult;\n          switch (operation) {\n            case 0 /* noop */:\n              break;\n            case 1 /* updateValue */:\n              targetCaveat.value = mutatorResult.value;\n              this.validateCaveat(\n                targetCaveat,\n                subject.origin,\n                permission.parentCapability\n              );\n              break;\n            case 2 /* deleteCaveat */:\n              this.deleteCaveat(permission, targetCaveatType, subject.origin);\n              break;\n            case 3 /* revokePermission */:\n              this.deletePermission(\n                draftState.subjects,\n                subject.origin,\n                permission.parentCapability\n              );\n              break;\n            default: {\n              throw new Error(`Unrecognized mutation result: \"${operation}\"`);\n            }\n          }\n        });\n      });\n    });\n  }\n  /**\n   * Removes the caveat of the specified type from the permission corresponding\n   * to the given subject origin and target name.\n   *\n   * Throws an error if no such permission or caveat exists.\n   *\n   * @template TargetName - The permission target name. Should be inferred.\n   * @template CaveatType - The valid caveat types for the permission. Should\n   * be inferred.\n   * @param origin - The origin of the subject.\n   * @param target - The target name of the permission.\n   * @param caveatType - The type of the caveat to remove.\n   */\n  removeCaveat(origin, target, caveatType) {\n    this.update((draftState) => {\n      const permission = draftState.subjects[origin]?.permissions[target];\n      if (!permission) {\n        throw new (0, _chunk3X6WO7UGjs.PermissionDoesNotExistError)(origin, target);\n      }\n      if (!permission.caveats) {\n        throw new (0, _chunk3X6WO7UGjs.CaveatDoesNotExistError)(origin, target, caveatType);\n      }\n      this.deleteCaveat(permission, caveatType, origin);\n    });\n  }\n  /**\n   * Deletes the specified caveat from the specified permission. If no caveats\n   * remain after deletion, the permission's caveat property is set to `null`.\n   * The permission is validated after being modified.\n   *\n   * Throws an error if the permission does not have a caveat with the specified\n   * type.\n   *\n   * @param permission - The permission whose caveat to delete.\n   * @param caveatType - The type of the caveat to delete.\n   * @param origin - The origin the permission subject.\n   */\n  deleteCaveat(permission, caveatType, origin) {\n    if (!permission.caveats) {\n      throw new (0, _chunk3X6WO7UGjs.CaveatDoesNotExistError)(\n        origin,\n        permission.parentCapability,\n        caveatType\n      );\n    }\n    const caveatIndex = permission.caveats.findIndex(\n      (existingCaveat) => existingCaveat.type === caveatType\n    );\n    if (caveatIndex === -1) {\n      throw new (0, _chunk3X6WO7UGjs.CaveatDoesNotExistError)(\n        origin,\n        permission.parentCapability,\n        caveatType\n      );\n    }\n    if (permission.caveats.length === 1) {\n      permission.caveats = null;\n    } else {\n      permission.caveats.splice(caveatIndex, 1);\n    }\n    this.validateModifiedPermission(permission, origin);\n  }\n  /**\n   * Validates the specified modified permission. Should **always** be invoked\n   * on a permission after its caveats have been modified.\n   *\n   * Just like {@link PermissionController.validatePermission}, except that the\n   * corresponding target name and specification are retrieved first, and an\n   * error is thrown if the target name does not exist.\n   *\n   * @param permission - The modified permission to validate.\n   * @param origin - The origin associated with the permission.\n   */\n  validateModifiedPermission(permission, origin) {\n    if (!this.targetExists(permission.parentCapability)) {\n      throw new Error(\n        `Fatal: Existing permission target \"${permission.parentCapability}\" has no specification.`\n      );\n    }\n    this.validatePermission(\n      this.getPermissionSpecification(permission.parentCapability),\n      permission,\n      origin\n    );\n  }\n  /**\n   * Verifies the existence the specified permission target, i.e. whether it has\n   * a specification.\n   *\n   * @param target - The requested permission target.\n   * @returns Whether the permission target exists.\n   */\n  targetExists(target) {\n    return _utils.hasProperty.call(void 0, this._permissionSpecifications, target);\n  }\n  /**\n   * Grants _approved_ permissions to the specified subject. Every permission and\n   * caveat is stringently validated—including by calling their specification\n   * validators—and an error is thrown if validation fails.\n   *\n   * ATTN: This method does **not** prompt the user for approval. User consent must\n   * first be obtained through some other means.\n   *\n   * @see {@link PermissionController.requestPermissions} For initiating a\n   * permissions request requiring user approval.\n   * @param options - Options bag.\n   * @param options.approvedPermissions - The requested permissions approved by\n   * the user.\n   * @param options.requestData - Permission request data. Passed to permission\n   * factory functions.\n   * @param options.preserveExistingPermissions - Whether to preserve the\n   * subject's existing permissions.\n   * @param options.subject - The subject to grant permissions to.\n   * @returns The subject's new permission state. It may or may not have changed.\n   */\n  grantPermissions({\n    approvedPermissions,\n    requestData,\n    preserveExistingPermissions = true,\n    subject\n  }) {\n    return _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _applyGrantedPermissions, applyGrantedPermissions_fn).call(this, {\n      approvedPermissions,\n      subject,\n      mergePermissions: false,\n      preserveExistingPermissions,\n      requestData\n    });\n  }\n  /**\n   * Incrementally grants _approved_ permissions to the specified subject. Every\n   * permission and caveat is stringently validated—including by calling their\n   * specification validators—and an error is thrown if validation fails.\n   *\n   * ATTN: This method does **not** prompt the user for approval. User consent must\n   * first be obtained through some other means.\n   *\n   * @see {@link PermissionController.requestPermissionsIncremental} For initiating\n   * an incremental permissions request requiring user approval.\n   * @param options - Options bag.\n   * @param options.approvedPermissions - The requested permissions approved by\n   * the user.\n   * @param options.requestData - Permission request data. Passed to permission\n   * factory functions.\n   * @param options.subject - The subject to grant permissions to.\n   * @returns The subject's new permission state. It may or may not have changed.\n   */\n  grantPermissionsIncremental({\n    approvedPermissions,\n    requestData,\n    subject\n  }) {\n    return _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _applyGrantedPermissions, applyGrantedPermissions_fn).call(this, {\n      approvedPermissions,\n      subject,\n      mergePermissions: true,\n      preserveExistingPermissions: true,\n      requestData\n    });\n  }\n  /**\n   * Validates the specified permission by:\n   * - Ensuring that if `subjectTypes` is specified, the subject requesting the permission is of a type in the list.\n   * - Ensuring that its `caveats` property is either `null` or a non-empty array.\n   * - Ensuring that it only includes caveats allowed by its specification.\n   * - Ensuring that it includes no duplicate caveats (by caveat type).\n   * - Validating each caveat object, if `performCaveatValidation` is `true`.\n   * - Calling the validator of its specification, if one exists and `invokePermissionValidator` is `true`.\n   *\n   * An error is thrown if validation fails.\n   *\n   * @param specification - The specification of the permission.\n   * @param permission - The permission to validate.\n   * @param origin - The origin associated with the permission.\n   * @param validationOptions - Validation options.\n   * @param validationOptions.invokePermissionValidator - Whether to invoke the\n   * permission's consumer-specified validator function, if any.\n   * @param validationOptions.performCaveatValidation - Whether to invoke\n   * {@link PermissionController.validateCaveat} on each of the permission's\n   * caveats.\n   */\n  validatePermission(specification, permission, origin, { invokePermissionValidator, performCaveatValidation } = {\n    invokePermissionValidator: true,\n    performCaveatValidation: true\n  }) {\n    const { allowedCaveats, validator, targetName } = specification;\n    if (specification.subjectTypes?.length && specification.subjectTypes.length > 0) {\n      const metadata = this.messagingSystem.call(\n        \"SubjectMetadataController:getSubjectMetadata\",\n        origin\n      );\n      if (!metadata || metadata.subjectType === null || !specification.subjectTypes.includes(metadata.subjectType)) {\n        throw specification.permissionType === \"RestrictedMethod\" /* RestrictedMethod */ ? _chunk3X6WO7UGjs.methodNotFound.call(void 0, targetName, { origin }) : new (0, _chunk3X6WO7UGjs.EndowmentPermissionDoesNotExistError)(targetName, origin);\n      }\n    }\n    if (_utils.hasProperty.call(void 0, permission, \"caveats\")) {\n      const { caveats } = permission;\n      if (caveats !== null && !(Array.isArray(caveats) && caveats.length > 0)) {\n        throw new (0, _chunk3X6WO7UGjs.InvalidCaveatsPropertyError)(origin, targetName, caveats);\n      }\n      const seenCaveatTypes = /* @__PURE__ */ new Set();\n      caveats?.forEach((caveat) => {\n        if (performCaveatValidation) {\n          this.validateCaveat(caveat, origin, targetName);\n        }\n        if (!allowedCaveats?.includes(caveat.type)) {\n          throw new (0, _chunk3X6WO7UGjs.ForbiddenCaveatError)(caveat.type, origin, targetName);\n        }\n        if (seenCaveatTypes.has(caveat.type)) {\n          throw new (0, _chunk3X6WO7UGjs.DuplicateCaveatError)(caveat.type, origin, targetName);\n        }\n        seenCaveatTypes.add(caveat.type);\n      });\n    }\n    if (invokePermissionValidator && validator) {\n      validator(permission, origin, targetName);\n    }\n  }\n  /**\n   * Assigns the specified permissions to the subject with the given origin.\n   * Overwrites all existing permissions, and creates a subject entry if it\n   * doesn't already exist.\n   *\n   * ATTN: Assumes that the new permissions have been validated.\n   *\n   * @param origin - The origin of the grantee subject.\n   * @param permissions - The new permissions for the grantee subject.\n   */\n  setValidatedPermissions(origin, permissions) {\n    this.update((draftState) => {\n      if (!draftState.subjects[origin]) {\n        draftState.subjects[origin] = { origin, permissions: {} };\n      }\n      draftState.subjects[origin].permissions = _immer.castDraft.call(void 0, permissions);\n    });\n  }\n  /**\n   * Validates the requested caveats for the permission of the specified\n   * subject origin and target name and returns the validated caveat array.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param origin - The origin of the permission subject.\n   * @param target - The permission target name.\n   * @param requestedCaveats - The requested caveats to construct.\n   * @returns The constructed caveats.\n   */\n  constructCaveats(origin, target, requestedCaveats) {\n    const caveatArray = requestedCaveats?.map((requestedCaveat) => {\n      this.validateCaveat(requestedCaveat, origin, target);\n      const { type, value } = requestedCaveat;\n      return { type, value };\n    });\n    return caveatArray && _controllerutils.isNonEmptyArray.call(void 0, caveatArray) ? caveatArray : void 0;\n  }\n  /**\n   * This methods validates that the specified caveat is an object with the\n   * expected properties and types. It also ensures that a caveat specification\n   * exists for the requested caveat type, and calls the specification\n   * validator, if it exists, on the caveat object.\n   *\n   * Throws an error if validation fails.\n   *\n   * @param caveat - The caveat object to validate.\n   * @param origin - The origin associated with the subject of the parent\n   * permission.\n   * @param target - The target name associated with the parent permission.\n   */\n  validateCaveat(caveat, origin, target) {\n    if (!_controllerutils.isPlainObject.call(void 0, caveat)) {\n      throw new (0, _chunk3X6WO7UGjs.InvalidCaveatError)(caveat, origin, target);\n    }\n    if (Object.keys(caveat).length !== 2) {\n      throw new (0, _chunk3X6WO7UGjs.InvalidCaveatFieldsError)(caveat, origin, target);\n    }\n    if (typeof caveat.type !== \"string\") {\n      throw new (0, _chunk3X6WO7UGjs.InvalidCaveatTypeError)(caveat, origin, target);\n    }\n    const specification = this.getCaveatSpecification(caveat.type);\n    if (!specification) {\n      throw new (0, _chunk3X6WO7UGjs.UnrecognizedCaveatTypeError)(caveat.type, origin, target);\n    }\n    if (!_utils.hasProperty.call(void 0, caveat, \"value\") || caveat.value === void 0) {\n      throw new (0, _chunk3X6WO7UGjs.CaveatMissingValueError)(caveat, origin, target);\n    }\n    if (!_controllerutils.isValidJson.call(void 0, caveat.value)) {\n      throw new (0, _chunk3X6WO7UGjs.CaveatInvalidJsonError)(caveat, origin, target);\n    }\n    specification.validator?.(caveat, origin, target);\n  }\n  /**\n   * Initiates a permission request that requires user approval.\n   *\n   * Either this or {@link PermissionController.requestPermissionsIncremental}\n   * should always be used to grant additional permissions to a subject,\n   * unless user approval has been obtained through some other means.\n   *\n   * Permissions are validated at every step of the approval process, and this\n   * method will reject if validation fails.\n   *\n   * @see {@link ApprovalController} For the user approval logic.\n   * @see {@link PermissionController.acceptPermissionsRequest} For the method\n   * that _accepts_ the request and resolves the user approval promise.\n   * @see {@link PermissionController.rejectPermissionsRequest} For the method\n   * that _rejects_ the request and the user approval promise.\n   * @param subject - The grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   * @param options - Additional options.\n   * @param options.id - The id of the permissions request. Defaults to a unique\n   * id.\n   * @param options.preserveExistingPermissions - Whether to preserve the\n   * subject's existing permissions. Defaults to `true`.\n   * @param options.metadata - Additional metadata about the permission request.\n   * @returns The granted permissions and request metadata.\n   */\n  async requestPermissions(subject, requestedPermissions, options = {}) {\n    const { origin } = subject;\n    const { id = _nanoid.nanoid.call(void 0, ), preserveExistingPermissions = true } = options;\n    this.validateRequestedPermissions(origin, requestedPermissions);\n    const metadata = {\n      ...options.metadata,\n      id,\n      origin\n    };\n    const permissionsRequest = {\n      metadata,\n      permissions: requestedPermissions\n    };\n    const approvedRequest = await this.requestUserApproval(permissionsRequest);\n    return await _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _handleApprovedPermissions, handleApprovedPermissions_fn).call(this, {\n      subject,\n      metadata,\n      preserveExistingPermissions,\n      approvedRequest\n    });\n  }\n  /**\n   * Initiates an incremental permission request that prompts for user approval.\n   * Incremental permission requests allow the caller to replace existing and/or\n   * add brand new permissions and caveats for the specified subject.\n   *\n   * Incremental permission request are merged with the subject's existing permissions\n   * through a right-biased union, where the incremental permission are the right-hand\n   * side of the merger. If both sides of the merger specify the same caveats for a\n   * given permission, the caveats are merged using their specification's caveat value\n   * merger property.\n   *\n   * Either this or {@link PermissionController.requestPermissions} should\n   * always be used to grant additional permissions to a subject, unless user\n   * approval has been obtained through some other means.\n   *\n   * Permissions are validated at every step of the approval process, and this\n   * method will reject if validation fails.\n   *\n   * @see {@link ApprovalController} For the user approval logic.\n   * @see {@link PermissionController.acceptPermissionsRequest} For the method\n   * that _accepts_ the request and resolves the user approval promise.\n   * @see {@link PermissionController.rejectPermissionsRequest} For the method\n   * that _rejects_ the request and the user approval promise.\n   * @param subject - The grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   * @param options - Additional options.\n   * @param options.id - The id of the permissions request. Defaults to a unique\n   * id.\n   * @param options.metadata - Additional metadata about the permission request.\n   * @returns The granted permissions and request metadata.\n   */\n  async requestPermissionsIncremental(subject, requestedPermissions, options = {}) {\n    const { origin } = subject;\n    const { id = _nanoid.nanoid.call(void 0, ) } = options;\n    this.validateRequestedPermissions(origin, requestedPermissions);\n    const currentPermissions = this.getPermissions(origin) ?? {};\n    const [newPermissions, permissionDiffMap] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeIncrementalPermissions, mergeIncrementalPermissions_fn).call(this, currentPermissions, requestedPermissions);\n    if (newPermissions === void 0 || permissionDiffMap === void 0) {\n      return [];\n    }\n    try {\n      this.validateRequestedPermissions(origin, newPermissions);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new (0, _chunk3X6WO7UGjs.InvalidMergedPermissionsError)(\n          origin,\n          error,\n          permissionDiffMap\n        );\n      }\n      throw _chunk3X6WO7UGjs.internalError.call(void 0, \"Unrecognized error type\", { error });\n    }\n    const metadata = {\n      ...options.metadata,\n      id,\n      origin\n    };\n    const permissionsRequest = {\n      metadata,\n      permissions: newPermissions,\n      diff: {\n        currentPermissions,\n        permissionDiffMap\n      }\n    };\n    const approvedRequest = await this.requestUserApproval(permissionsRequest);\n    return await _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _handleApprovedPermissions, handleApprovedPermissions_fn).call(this, {\n      subject,\n      metadata,\n      preserveExistingPermissions: false,\n      approvedRequest\n    });\n  }\n  /**\n   * Validates requested permissions. Throws if validation fails.\n   *\n   * This method ensures that the requested permissions are a properly\n   * formatted {@link RequestedPermissions} object, and performs the same\n   * validation as {@link PermissionController.grantPermissions}, except that\n   * consumer-specified permission validator functions are not called, since\n   * they are only called on fully constructed, approved permissions that are\n   * otherwise completely valid.\n   *\n   * Unrecognzied properties on requested permissions are ignored.\n   *\n   * @param origin - The origin of the grantee subject.\n   * @param requestedPermissions - The requested permissions.\n   */\n  validateRequestedPermissions(origin, requestedPermissions) {\n    if (!_controllerutils.isPlainObject.call(void 0, requestedPermissions)) {\n      throw _chunk3X6WO7UGjs.invalidParams.call(void 0, {\n        message: `Requested permissions for origin \"${origin}\" is not a plain object.`,\n        data: { origin, requestedPermissions }\n      });\n    }\n    if (Object.keys(requestedPermissions).length === 0) {\n      throw _chunk3X6WO7UGjs.invalidParams.call(void 0, {\n        message: `Permissions request for origin \"${origin}\" contains no permissions.`,\n        data: { requestedPermissions }\n      });\n    }\n    for (const targetName of Object.keys(requestedPermissions)) {\n      const permission = requestedPermissions[targetName];\n      if (!this.targetExists(targetName)) {\n        throw _chunk3X6WO7UGjs.methodNotFound.call(void 0, targetName, { origin, requestedPermissions });\n      }\n      if (!_controllerutils.isPlainObject.call(void 0, permission) || permission.parentCapability !== void 0 && targetName !== permission.parentCapability) {\n        throw _chunk3X6WO7UGjs.invalidParams.call(void 0, {\n          message: `Permissions request for origin \"${origin}\" contains invalid requested permission(s).`,\n          data: { origin, requestedPermissions }\n        });\n      }\n      this.validatePermission(\n        this.getPermissionSpecification(targetName),\n        // Typecast: The permission is still a \"PlainObject\" here.\n        permission,\n        origin,\n        { invokePermissionValidator: false, performCaveatValidation: true }\n      );\n    }\n  }\n  /**\n   * Adds a request to the {@link ApprovalController} using the\n   * {@link AddApprovalRequest} action. Also validates the resulting approved\n   * permissions request, and throws an error if validation fails.\n   *\n   * @param permissionsRequest - The permissions request object.\n   * @returns The approved permissions request object.\n   */\n  async requestUserApproval(permissionsRequest) {\n    const { origin, id } = permissionsRequest.metadata;\n    const approvedRequest = await this.messagingSystem.call(\n      \"ApprovalController:addRequest\",\n      {\n        id,\n        origin,\n        requestData: permissionsRequest,\n        type: \"wallet_requestPermissions\" /* requestPermissions */\n      },\n      true\n    );\n    this.validateApprovedPermissions(approvedRequest, { id, origin });\n    return approvedRequest;\n  }\n  /**\n   * Reunites all the side-effects (onPermitted and onFailure) of the requested permissions inside a record of arrays.\n   *\n   * @param permissions - The approved permissions.\n   * @returns The {@link SideEffects} object containing the handlers arrays.\n   */\n  getSideEffects(permissions) {\n    return Object.keys(permissions).reduce(\n      (sideEffectList, targetName) => {\n        if (this.targetExists(targetName)) {\n          const specification = this.getPermissionSpecification(targetName);\n          if (specification.sideEffect) {\n            sideEffectList.permittedHandlers[targetName] = specification.sideEffect.onPermitted;\n            if (specification.sideEffect.onFailure) {\n              sideEffectList.failureHandlers[targetName] = specification.sideEffect.onFailure;\n            }\n          }\n        }\n        return sideEffectList;\n      },\n      { permittedHandlers: {}, failureHandlers: {} }\n    );\n  }\n  /**\n   * Executes the side-effects of the approved permissions while handling the errors if any.\n   * It will pass an instance of the {@link messagingSystem} and the request data associated with the permission request to the handlers through its params.\n   *\n   * @param sideEffects - the side-effect record created by {@link getSideEffects}\n   * @param requestData - the permissions requestData.\n   * @returns the value returned by all the `onPermitted` handlers in an array.\n   */\n  async executeSideEffects(sideEffects, requestData) {\n    const { permittedHandlers, failureHandlers } = sideEffects;\n    const params = {\n      requestData,\n      messagingSystem: this.messagingSystem\n    };\n    const promiseResults = await Promise.allSettled(\n      Object.values(permittedHandlers).map(\n        (permittedHandler) => permittedHandler(params)\n      )\n    );\n    const rejectedHandlers = promiseResults.filter(\n      (promise) => promise.status === \"rejected\"\n    );\n    if (rejectedHandlers.length > 0) {\n      const failureHandlersList = Object.values(failureHandlers);\n      if (failureHandlersList.length > 0) {\n        try {\n          await Promise.all(\n            failureHandlersList.map((failureHandler) => failureHandler(params))\n          );\n        } catch (error) {\n          throw _chunk3X6WO7UGjs.internalError.call(void 0, \"Unexpected error in side-effects\", { error });\n        }\n      }\n      const reasons = rejectedHandlers.map((handler) => handler.reason);\n      reasons.forEach((reason) => {\n        console.error(reason);\n      });\n      throw reasons.length > 1 ? _chunk3X6WO7UGjs.internalError.call(void 0, \n        \"Multiple errors occurred during side-effects execution\",\n        { errors: reasons }\n      ) : reasons[0];\n    }\n    return promiseResults.map(\n      ({ value }) => value\n    );\n  }\n  /**\n   * Validates an approved {@link PermissionsRequest} object. The approved\n   * request must have the required `metadata` and `permissions` properties,\n   * the `id` and `origin` of the `metadata` must match the original request\n   * metadata, and the requested permissions must be valid per\n   * {@link PermissionController.validateRequestedPermissions}. Any extra\n   * metadata properties are ignored.\n   *\n   * An error is thrown if validation fails.\n   *\n   * @param approvedRequest - The approved permissions request object.\n   * @param originalMetadata - The original request metadata.\n   */\n  validateApprovedPermissions(approvedRequest, originalMetadata) {\n    const { id, origin } = originalMetadata;\n    if (!_controllerutils.isPlainObject.call(void 0, approvedRequest) || !_controllerutils.isPlainObject.call(void 0, approvedRequest.metadata)) {\n      throw _chunk3X6WO7UGjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" is invalid.`,\n        { data: { approvedRequest } }\n      );\n    }\n    const {\n      metadata: { id: newId, origin: newOrigin },\n      permissions\n    } = approvedRequest;\n    if (newId !== id) {\n      throw _chunk3X6WO7UGjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" mutated its id.`,\n        { originalId: id, mutatedId: newId }\n      );\n    }\n    if (newOrigin !== origin) {\n      throw _chunk3X6WO7UGjs.internalError.call(void 0, \n        `Approved permissions request for subject \"${origin}\" mutated its origin.`,\n        { originalOrigin: origin, mutatedOrigin: newOrigin }\n      );\n    }\n    try {\n      this.validateRequestedPermissions(origin, permissions);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw _chunk3X6WO7UGjs.internalError.call(void 0, \n          `Invalid approved permissions request: ${error.message}`,\n          error instanceof _rpcerrors.JsonRpcError ? error.data : void 0\n        );\n      }\n      throw _chunk3X6WO7UGjs.internalError.call(void 0, \"Unrecognized error type\", { error });\n    }\n  }\n  /**\n   * Accepts a permissions request created by\n   * {@link PermissionController.requestPermissions}.\n   *\n   * @param request - The permissions request.\n   */\n  async acceptPermissionsRequest(request) {\n    const { id } = request.metadata;\n    if (!this.hasApprovalRequest({ id })) {\n      throw new (0, _chunk3X6WO7UGjs.PermissionsRequestNotFoundError)(id);\n    }\n    if (Object.keys(request.permissions).length === 0) {\n      this._rejectPermissionsRequest(\n        id,\n        _chunk3X6WO7UGjs.invalidParams.call(void 0, {\n          message: \"Must request at least one permission.\"\n        })\n      );\n      return;\n    }\n    try {\n      this.messagingSystem.call(\n        \"ApprovalController:acceptRequest\",\n        id,\n        request\n      );\n    } catch (error) {\n      this._rejectPermissionsRequest(id, error);\n      throw error;\n    }\n  }\n  /**\n   * Rejects a permissions request created by\n   * {@link PermissionController.requestPermissions}.\n   *\n   * @param id - The id of the request to be rejected.\n   */\n  async rejectPermissionsRequest(id) {\n    if (!this.hasApprovalRequest({ id })) {\n      throw new (0, _chunk3X6WO7UGjs.PermissionsRequestNotFoundError)(id);\n    }\n    this._rejectPermissionsRequest(id, _chunk3X6WO7UGjs.userRejectedRequest.call(void 0, ));\n  }\n  /**\n   * Checks whether the {@link ApprovalController} has a particular permissions\n   * request.\n   *\n   * @see {@link PermissionController.acceptPermissionsRequest} and\n   * {@link PermissionController.rejectPermissionsRequest} for usage.\n   * @param options - The {@link HasApprovalRequest} options.\n   * @param options.id - The id of the approval request to check for.\n   * @returns Whether the specified request exists.\n   */\n  hasApprovalRequest(options) {\n    return this.messagingSystem.call(\"ApprovalController:hasRequest\", options);\n  }\n  /**\n   * Rejects the permissions request with the specified id, with the specified\n   * error as the reason. This method is effectively a wrapper around a\n   * messenger call for the `ApprovalController:rejectRequest` action.\n   *\n   * @see {@link PermissionController.acceptPermissionsRequest} and\n   * {@link PermissionController.rejectPermissionsRequest} for usage.\n   * @param id - The id of the request to reject.\n   * @param error - The error associated with the rejection.\n   * @returns Nothing\n   */\n  _rejectPermissionsRequest(id, error) {\n    return this.messagingSystem.call(\n      \"ApprovalController:rejectRequest\",\n      id,\n      error\n    );\n  }\n  /**\n   * Gets the subject's endowments per the specified endowment permission.\n   * Throws if the subject does not have the required permission or if the\n   * permission is not an endowment permission.\n   *\n   * @param origin - The origin of the subject whose endowments to retrieve.\n   * @param targetName - The name of the endowment permission. This must be a\n   * valid permission target name.\n   * @param requestData - Additional data associated with the request, if any.\n   * Forwarded to the endowment getter function for the permission.\n   * @returns The endowments, if any.\n   */\n  async getEndowments(origin, targetName, requestData) {\n    if (!this.hasPermission(origin, targetName)) {\n      throw _chunk3X6WO7UGjs.unauthorized.call(void 0, { data: { origin, targetName } });\n    }\n    return this.getTypedPermissionSpecification(\n      \"Endowment\" /* Endowment */,\n      targetName,\n      origin\n    ).endowmentGetter({ origin, requestData });\n  }\n  /**\n   * Executes a restricted method as the subject with the given origin.\n   * The specified params, if any, will be passed to the method implementation.\n   *\n   * ATTN: Great caution should be exercised in the use of this method.\n   * Methods that cause side effects or affect application state should\n   * be avoided.\n   *\n   * This method will first attempt to retrieve the requested restricted method\n   * implementation, throwing if it does not exist. The method will then be\n   * invoked as though the subject with the specified origin had invoked it with\n   * the specified parameters. This means that any existing caveats will be\n   * applied to the restricted method, and this method will throw if the\n   * restricted method or its caveat decorators throw.\n   *\n   * In addition, this method will throw if the subject does not have a\n   * permission for the specified restricted method.\n   *\n   * @param origin - The origin of the subject to execute the method on behalf\n   * of.\n   * @param targetName - The name of the method to execute. This must be a valid\n   * permission target name.\n   * @param params - The parameters to pass to the method implementation.\n   * @returns The result of the executed method.\n   */\n  async executeRestrictedMethod(origin, targetName, params) {\n    const methodImplementation = this.getRestrictedMethod(targetName, origin);\n    const result = await this._executeRestrictedMethod(\n      methodImplementation,\n      { origin },\n      targetName,\n      params\n    );\n    if (result === void 0) {\n      throw new Error(\n        `Internal request for method \"${targetName}\" as origin \"${origin}\" returned no result.`\n      );\n    }\n    return result;\n  }\n  /**\n   * An internal method used in the controller's `json-rpc-engine` middleware\n   * and {@link PermissionController.executeRestrictedMethod}. Calls the\n   * specified restricted method implementation after decorating it with the\n   * caveats of its permission. Throws if the subject does not have the\n   * requisite permission.\n   *\n   * ATTN: Parameter validation is the responsibility of the caller, or\n   * the restricted method implementation in the case of `params`.\n   *\n   * @see {@link PermissionController.executeRestrictedMethod} and\n   * {@link PermissionController.createPermissionMiddleware} for usage.\n   * @param methodImplementation - The implementation of the method to call.\n   * @param subject - Metadata about the subject that made the request.\n   * @param method - The method name\n   * @param params - Params needed for executing the restricted method\n   * @returns The result of the restricted method implementation\n   */\n  _executeRestrictedMethod(methodImplementation, subject, method, params = []) {\n    const { origin } = subject;\n    const permission = this.getPermission(origin, method);\n    if (!permission) {\n      throw _chunk3X6WO7UGjs.unauthorized.call(void 0, { data: { origin, method } });\n    }\n    return _chunkRKDXFKNNjs.decorateWithCaveats.call(void 0, \n      methodImplementation,\n      permission,\n      this._caveatSpecifications\n    )({ method, params, context: { origin } });\n  }\n};\n_expectGetCaveatMerger = new WeakSet();\nexpectGetCaveatMerger_fn = function(caveatType) {\n  const { merger } = this.getCaveatSpecification(caveatType);\n  if (merger === void 0) {\n    throw new (0, _chunk3X6WO7UGjs.CaveatMergerDoesNotExistError)(caveatType);\n  }\n  return merger;\n};\n_applyGrantedPermissions = new WeakSet();\napplyGrantedPermissions_fn = function({\n  approvedPermissions,\n  subject,\n  mergePermissions,\n  preserveExistingPermissions,\n  requestData\n}) {\n  const { origin } = subject;\n  if (!origin || typeof origin !== \"string\") {\n    throw new (0, _chunk3X6WO7UGjs.InvalidSubjectIdentifierError)(origin);\n  }\n  const permissions = preserveExistingPermissions ? {\n    ...this.getPermissions(origin)\n  } : {};\n  for (const [requestedTarget, approvedPermission] of Object.entries(\n    approvedPermissions\n  )) {\n    if (!this.targetExists(requestedTarget)) {\n      throw _chunk3X6WO7UGjs.methodNotFound.call(void 0, requestedTarget);\n    }\n    if (approvedPermission.parentCapability !== void 0 && requestedTarget !== approvedPermission.parentCapability) {\n      throw new (0, _chunk3X6WO7UGjs.InvalidApprovedPermissionError)(\n        origin,\n        requestedTarget,\n        approvedPermission\n      );\n    }\n    const targetName = requestedTarget;\n    const specification = this.getPermissionSpecification(targetName);\n    const caveats = this.constructCaveats(\n      origin,\n      targetName,\n      approvedPermission.caveats\n    );\n    const permissionOptions = {\n      caveats,\n      invoker: origin,\n      target: targetName\n    };\n    let permission;\n    let performCaveatValidation = true;\n    if (specification.factory) {\n      permission = specification.factory(permissionOptions, requestData);\n    } else {\n      permission = _chunkZH4MLSXXjs.constructPermission.call(void 0, permissionOptions);\n      performCaveatValidation = false;\n    }\n    if (mergePermissions) {\n      permission = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergePermission, mergePermission_fn).call(this, permissions[targetName], permission)[0];\n    }\n    this.validatePermission(specification, permission, origin, {\n      invokePermissionValidator: true,\n      performCaveatValidation\n    });\n    permissions[targetName] = permission;\n  }\n  this.setValidatedPermissions(origin, permissions);\n  return permissions;\n};\n_mergeIncrementalPermissions = new WeakSet();\nmergeIncrementalPermissions_fn = function(existingPermissions, incrementalRequestedPermissions) {\n  const permissionDiffMap = {};\n  const newPermissions = _immer.produce.call(void 0, \n    existingPermissions,\n    (draftExistingPermissions) => {\n      const leftPermissions = draftExistingPermissions;\n      Object.entries(incrementalRequestedPermissions).forEach(\n        ([targetName, rightPermission]) => {\n          const leftPermission = leftPermissions[targetName];\n          const [newPermission, caveatsDiff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergePermission, mergePermission_fn).call(this, leftPermission ?? {}, rightPermission);\n          if (leftPermission === void 0 || Object.keys(caveatsDiff).length > 0) {\n            leftPermissions[targetName] = newPermission;\n            permissionDiffMap[targetName] = caveatsDiff;\n          }\n        }\n      );\n    }\n  );\n  if (Object.keys(permissionDiffMap).length === 0) {\n    return [];\n  }\n  return [newPermissions, permissionDiffMap];\n};\n_mergePermission = new WeakSet();\nmergePermission_fn = function(leftPermission, rightPermission) {\n  const { caveatPairs, leftUniqueCaveats, rightUniqueCaveats } = _chunkPTE4672Ijs.collectUniqueAndPairedCaveats.call(void 0, leftPermission, rightPermission);\n  const [mergedCaveats, caveatDiffMap] = caveatPairs.reduce(\n    ([caveats, diffMap], [leftCaveat, rightCaveat]) => {\n      const [newCaveat, diff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeCaveat, mergeCaveat_fn).call(this, leftCaveat, rightCaveat);\n      if (newCaveat !== void 0 && diff !== void 0) {\n        caveats.push(newCaveat);\n        diffMap[newCaveat.type] = diff;\n      } else {\n        caveats.push(leftCaveat);\n      }\n      return [caveats, diffMap];\n    },\n    [[], {}]\n  );\n  const mergedRightUniqueCaveats = rightUniqueCaveats.map((caveat) => {\n    const [newCaveat, diff] = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _mergeCaveat, mergeCaveat_fn).call(this, void 0, caveat);\n    caveatDiffMap[newCaveat.type] = diff;\n    return newCaveat;\n  });\n  const allCaveats = [\n    ...mergedCaveats,\n    ...leftUniqueCaveats,\n    ...mergedRightUniqueCaveats\n  ];\n  const newPermission = {\n    ...leftPermission,\n    ...rightPermission,\n    ...allCaveats.length > 0 ? { caveats: allCaveats } : {}\n  };\n  return [newPermission, caveatDiffMap];\n};\n_mergeCaveat = new WeakSet();\nmergeCaveat_fn = function(leftCaveat, rightCaveat) {\n  if (leftCaveat !== void 0 && leftCaveat.type !== rightCaveat.type) {\n    throw new (0, _chunk3X6WO7UGjs.CaveatMergeTypeMismatchError)(leftCaveat.type, rightCaveat.type);\n  }\n  const merger = _chunkZ2XKIXLSjs.__privateMethod.call(void 0, this, _expectGetCaveatMerger, expectGetCaveatMerger_fn).call(this, rightCaveat.type);\n  if (leftCaveat === void 0) {\n    return [\n      {\n        ...rightCaveat\n      },\n      rightCaveat.value\n    ];\n  }\n  const [newValue, diff] = merger(leftCaveat.value, rightCaveat.value);\n  return newValue !== void 0 && diff !== void 0 ? [\n    {\n      type: rightCaveat.type,\n      value: newValue\n    },\n    diff\n  ] : [];\n};\n_handleApprovedPermissions = new WeakSet();\nhandleApprovedPermissions_fn = async function({\n  subject,\n  metadata,\n  preserveExistingPermissions,\n  approvedRequest\n}) {\n  const { permissions: approvedPermissions, ...requestData } = approvedRequest;\n  const approvedMetadata = { ...metadata };\n  const sideEffects = this.getSideEffects(approvedPermissions);\n  if (Object.values(sideEffects.permittedHandlers).length > 0) {\n    const sideEffectsData = await this.executeSideEffects(\n      sideEffects,\n      approvedRequest\n    );\n    approvedMetadata.data = Object.keys(sideEffects.permittedHandlers).reduce(\n      (acc, permission, i) => ({ [permission]: sideEffectsData[i], ...acc }),\n      {}\n    );\n  }\n  return [\n    this.grantPermissions({\n      subject,\n      approvedPermissions,\n      preserveExistingPermissions,\n      requestData\n    }),\n    approvedMetadata\n  ];\n};\n\n\n\n\nexports.CaveatMutatorOperation = CaveatMutatorOperation; exports.PermissionController = PermissionController;\n//# sourceMappingURL=chunk-I3DJ23QH.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/utils.ts\nvar MethodNames = /* @__PURE__ */ ((MethodNames2) => {\n  MethodNames2[\"requestPermissions\"] = \"wallet_requestPermissions\";\n  MethodNames2[\"getPermissions\"] = \"wallet_getPermissions\";\n  MethodNames2[\"revokePermissions\"] = \"wallet_revokePermissions\";\n  return MethodNames2;\n})(MethodNames || {});\nfunction collectUniqueAndPairedCaveats(leftPermission, rightPermission) {\n  const leftCaveats = leftPermission?.caveats?.slice() ?? [];\n  const rightCaveats = rightPermission.caveats?.slice() ?? [];\n  const leftUniqueCaveats = [];\n  const caveatPairs = [];\n  leftCaveats.forEach((leftCaveat) => {\n    const rightCaveatIndex = rightCaveats.findIndex(\n      (rightCaveat) => rightCaveat.type === leftCaveat.type\n    );\n    if (rightCaveatIndex === -1) {\n      leftUniqueCaveats.push(leftCaveat);\n    } else {\n      caveatPairs.push([leftCaveat, rightCaveats[rightCaveatIndex]]);\n      rightCaveats.splice(rightCaveatIndex, 1);\n    }\n  });\n  return {\n    caveatPairs,\n    leftUniqueCaveats,\n    rightUniqueCaveats: [...rightCaveats]\n  };\n}\n\n\n\n\nexports.MethodNames = MethodNames; exports.collectUniqueAndPairedCaveats = collectUniqueAndPairedCaveats;\n//# sourceMappingURL=chunk-PTE4672I.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunk3X6WO7UGjs = require('./chunk-3X6WO7UG.js');\n\n// src/Caveat.ts\nvar _utils = require('@metamask/utils');\nfunction isRestrictedMethodCaveatSpecification(specification) {\n  return _utils.hasProperty.call(void 0, specification, \"decorator\");\n}\nfunction decorateWithCaveats(methodImplementation, permission, caveatSpecifications) {\n  const { caveats } = permission;\n  if (!caveats) {\n    return methodImplementation;\n  }\n  let decorated = async (args) => methodImplementation(args);\n  for (const caveat of caveats) {\n    const specification = caveatSpecifications[caveat.type];\n    if (!specification) {\n      throw new (0, _chunk3X6WO7UGjs.UnrecognizedCaveatTypeError)(caveat.type);\n    }\n    if (!isRestrictedMethodCaveatSpecification(specification)) {\n      throw new (0, _chunk3X6WO7UGjs.CaveatSpecificationMismatchError)(\n        specification,\n        \"RestrictedMethod\" /* RestrictedMethod */\n      );\n    }\n    decorated = specification.decorator(decorated, caveat);\n  }\n  return decorated;\n}\n\n\n\n\nexports.isRestrictedMethodCaveatSpecification = isRestrictedMethodCaveatSpecification; exports.decorateWithCaveats = decorateWithCaveats;\n//# sourceMappingURL=chunk-RKDXFKNN.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunk3X6WO7UGjs = require('./chunk-3X6WO7UG.js');\n\n// src/permission-middleware.ts\nvar _jsonrpcengine = require('@metamask/json-rpc-engine');\nfunction getPermissionMiddlewareFactory({\n  executeRestrictedMethod,\n  getRestrictedMethod,\n  isUnrestrictedMethod\n}) {\n  return function createPermissionMiddleware(subject) {\n    const { origin } = subject;\n    if (typeof origin !== \"string\" || !origin) {\n      throw new Error('The subject \"origin\" must be a non-empty string.');\n    }\n    const permissionsMiddleware = async (req, res, next) => {\n      const { method, params } = req;\n      if (isUnrestrictedMethod(method)) {\n        return next();\n      }\n      const methodImplementation = getRestrictedMethod(method, origin);\n      const result = await executeRestrictedMethod(\n        methodImplementation,\n        subject,\n        method,\n        params\n      );\n      if (result === void 0) {\n        res.error = _chunk3X6WO7UGjs.internalError.call(void 0, \n          `Request for method \"${req.method}\" returned undefined result.`,\n          { request: req }\n        );\n        return void 0;\n      }\n      res.result = result;\n      return void 0;\n    };\n    return _jsonrpcengine.createAsyncMiddleware.call(void 0, permissionsMiddleware);\n  };\n}\n\n\n\nexports.getPermissionMiddlewareFactory = getPermissionMiddlewareFactory;\n//# sourceMappingURL=chunk-VM4LI55W.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunk3X6WO7UGjs = require('./chunk-3X6WO7UG.js');\n\n// src/rpc-methods/requestPermissions.ts\nvar _controllerutils = require('@metamask/controller-utils');\nvar requestPermissionsHandler = {\n  methodNames: [\"wallet_requestPermissions\" /* requestPermissions */],\n  implementation: requestPermissionsImplementation,\n  hookNames: {\n    requestPermissionsForOrigin: true\n  }\n};\nasync function requestPermissionsImplementation(req, res, _next, end, { requestPermissionsForOrigin }) {\n  const { params } = req;\n  if (!Array.isArray(params) || !_controllerutils.isPlainObject.call(void 0, params[0])) {\n    return end(_chunk3X6WO7UGjs.invalidParams.call(void 0, { data: { request: req } }));\n  }\n  const [requestedPermissions] = params;\n  const [grantedPermissions] = await requestPermissionsForOrigin(\n    requestedPermissions\n  );\n  res.result = Object.values(grantedPermissions);\n  return end();\n}\n\n\n\nexports.requestPermissionsHandler = requestPermissionsHandler;\n//# sourceMappingURL=chunk-XM622CMP.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\nexports.__export = __export; exports.__privateAdd = __privateAdd; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z2XKIXLS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/Permission.ts\nvar _nanoid = require('nanoid');\nfunction constructPermission(options) {\n  const { caveats = null, invoker, target } = options;\n  return {\n    id: _nanoid.nanoid.call(void 0, ),\n    parentCapability: target,\n    invoker,\n    caveats,\n    date: (/* @__PURE__ */ new Date()).getTime()\n  };\n}\nfunction findCaveat(permission, caveatType) {\n  return permission.caveats?.find((caveat) => caveat.type === caveatType);\n}\nvar PermissionType = /* @__PURE__ */ ((PermissionType2) => {\n  PermissionType2[\"RestrictedMethod\"] = \"RestrictedMethod\";\n  PermissionType2[\"Endowment\"] = \"Endowment\";\n  return PermissionType2;\n})(PermissionType || {});\nfunction hasSpecificationType(specification, expectedType) {\n  return specification.permissionType === expectedType;\n}\n\n\n\n\n\n\nexports.constructPermission = constructPermission; exports.findCaveat = findCaveat; exports.PermissionType = PermissionType; exports.hasSpecificationType = hasSpecificationType;\n//# sourceMappingURL=chunk-ZH4MLSXX.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkDV74ZDGDjs = require('./chunk-DV74ZDGD.js');\nrequire('./chunk-HRDKMOYS.js');\nrequire('./chunk-XM622CMP.js');\nrequire('./chunk-GHOOCGN3.js');\n\n\n\nvar _chunkI3DJ23QHjs = require('./chunk-I3DJ23QH.js');\n\n\n\nvar _chunkRKDXFKNNjs = require('./chunk-RKDXFKNN.js');\n\n\n\n\n\nvar _chunkZH4MLSXXjs = require('./chunk-ZH4MLSXX.js');\n\n\n\nvar _chunkC73QV75Djs = require('./chunk-C73QV75D.js');\nrequire('./chunk-VM4LI55W.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunk3X6WO7UGjs = require('./chunk-3X6WO7UG.js');\n\n\nvar _chunkPTE4672Ijs = require('./chunk-PTE4672I.js');\nrequire('./chunk-Z2XKIXLS.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.CaveatAlreadyExistsError = _chunk3X6WO7UGjs.CaveatAlreadyExistsError; exports.CaveatDoesNotExistError = _chunk3X6WO7UGjs.CaveatDoesNotExistError; exports.CaveatInvalidJsonError = _chunk3X6WO7UGjs.CaveatInvalidJsonError; exports.CaveatMergeTypeMismatchError = _chunk3X6WO7UGjs.CaveatMergeTypeMismatchError; exports.CaveatMergerDoesNotExistError = _chunk3X6WO7UGjs.CaveatMergerDoesNotExistError; exports.CaveatMissingValueError = _chunk3X6WO7UGjs.CaveatMissingValueError; exports.CaveatMutatorOperation = _chunkI3DJ23QHjs.CaveatMutatorOperation; exports.CaveatSpecificationMismatchError = _chunk3X6WO7UGjs.CaveatSpecificationMismatchError; exports.DuplicateCaveatError = _chunk3X6WO7UGjs.DuplicateCaveatError; exports.EndowmentPermissionDoesNotExistError = _chunk3X6WO7UGjs.EndowmentPermissionDoesNotExistError; exports.ForbiddenCaveatError = _chunk3X6WO7UGjs.ForbiddenCaveatError; exports.InvalidApprovedPermissionError = _chunk3X6WO7UGjs.InvalidApprovedPermissionError; exports.InvalidCaveatError = _chunk3X6WO7UGjs.InvalidCaveatError; exports.InvalidCaveatFieldsError = _chunk3X6WO7UGjs.InvalidCaveatFieldsError; exports.InvalidCaveatTypeError = _chunk3X6WO7UGjs.InvalidCaveatTypeError; exports.InvalidCaveatsPropertyError = _chunk3X6WO7UGjs.InvalidCaveatsPropertyError; exports.InvalidMergedPermissionsError = _chunk3X6WO7UGjs.InvalidMergedPermissionsError; exports.InvalidSubjectIdentifierError = _chunk3X6WO7UGjs.InvalidSubjectIdentifierError; exports.MethodNames = _chunkPTE4672Ijs.MethodNames; exports.PermissionController = _chunkI3DJ23QHjs.PermissionController; exports.PermissionDoesNotExistError = _chunk3X6WO7UGjs.PermissionDoesNotExistError; exports.PermissionType = _chunkZH4MLSXXjs.PermissionType; exports.PermissionsRequestNotFoundError = _chunk3X6WO7UGjs.PermissionsRequestNotFoundError; exports.SubjectMetadataController = _chunkC73QV75Djs.SubjectMetadataController; exports.SubjectType = _chunkC73QV75Djs.SubjectType; exports.UnrecognizedCaveatTypeError = _chunk3X6WO7UGjs.UnrecognizedCaveatTypeError; exports.UnrecognizedSubjectError = _chunk3X6WO7UGjs.UnrecognizedSubjectError; exports.constructPermission = _chunkZH4MLSXXjs.constructPermission; exports.decorateWithCaveats = _chunkRKDXFKNNjs.decorateWithCaveats; exports.findCaveat = _chunkZH4MLSXXjs.findCaveat; exports.hasSpecificationType = _chunkZH4MLSXXjs.hasSpecificationType; exports.internalError = _chunk3X6WO7UGjs.internalError; exports.invalidParams = _chunk3X6WO7UGjs.invalidParams; exports.isRestrictedMethodCaveatSpecification = _chunkRKDXFKNNjs.isRestrictedMethodCaveatSpecification; exports.methodNotFound = _chunk3X6WO7UGjs.methodNotFound; exports.permissionRpcMethods = _chunkDV74ZDGDjs.rpc_methods_exports; exports.unauthorized = _chunk3X6WO7UGjs.unauthorized; exports.userRejectedRequest = _chunk3X6WO7UGjs.userRejectedRequest;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/BaseControllerV1.ts\nvar BaseControllerV1 = class {\n  /**\n   * Creates a BaseControllerV1 instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config = {}, state = {}) {\n    /**\n     * Default options used to configure this controller\n     */\n    this.defaultConfig = {};\n    /**\n     * Default state set on this controller\n     */\n    this.defaultState = {};\n    /**\n     * Determines if listeners are notified of state changes\n     */\n    this.disabled = false;\n    /**\n     * Name of this controller used during composition\n     */\n    this.name = \"BaseController\";\n    this.internalConfig = this.defaultConfig;\n    this.internalState = this.defaultState;\n    this.internalListeners = [];\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns This controller instance.\n   */\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n  /**\n   * Retrieves current controller configuration options.\n   *\n   * @returns The current configuration.\n   */\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration.\n   *\n   * @param config - New configuration options.\n   * @param overwrite - Overwrite config instead of merging.\n   * @param fullUpdate - Boolean that defines if the update is partial or not.\n   */\n  configure(config, overwrite = false, fullUpdate = true) {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n      for (const key of Object.keys(this.internalConfig)) {\n        const value = this.internalConfig[key];\n        if (value !== void 0) {\n          this[key] = value;\n        }\n      }\n    } else {\n      for (const key of Object.keys(config)) {\n        if (this.internalConfig[key] !== void 0) {\n          const value = config[key];\n          this.internalConfig[key] = value;\n          this[key] = value;\n        }\n      }\n    }\n  }\n  /**\n   * Notifies all subscribed listeners of current state.\n   */\n  notify() {\n    if (this.disabled) {\n      return;\n    }\n    this.internalListeners.forEach((listener) => {\n      listener(this.internalState);\n    });\n  }\n  /**\n   * Adds new listener to be notified of state changes.\n   *\n   * @param listener - The callback triggered when state changes.\n   */\n  subscribe(listener) {\n    this.internalListeners.push(listener);\n  }\n  /**\n   * Removes existing listener from receiving state changes.\n   *\n   * @param listener - The callback to remove.\n   * @returns `true` if a listener is found and unsubscribed.\n   */\n  unsubscribe(listener) {\n    const index = this.internalListeners.findIndex((cb) => listener === cb);\n    index > -1 && this.internalListeners.splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Updates controller state.\n   *\n   * @param state - The new state.\n   * @param overwrite - Overwrite state instead of merging.\n   */\n  update(state, overwrite = false) {\n    this.internalState = overwrite ? Object.assign({}, state) : Object.assign({}, this.internalState, state);\n    this.notify();\n  }\n};\nvar BaseControllerV1_default = BaseControllerV1;\n\n\n\n\nexports.BaseControllerV1 = BaseControllerV1; exports.BaseControllerV1_default = BaseControllerV1_default;\n//# sourceMappingURL=chunk-FTHCJ6HY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/ControllerMessenger.ts\nvar _actions, _events, _initialEventPayloadGetters, _eventPayloadCache;\nvar ControllerMessenger = class {\n  constructor() {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _actions, /* @__PURE__ */ new Map());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _events, /* @__PURE__ */ new Map());\n    /**\n     * A map of functions for getting the initial event payload.\n     *\n     * Used only for events that represent state changes.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _initialEventPayloadGetters, /* @__PURE__ */ new Map());\n    /**\n     * A cache of selector return values for their respective handlers.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _eventPayloadCache, /* @__PURE__ */ new Map());\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw when a handler has been registered for this action type already.\n   * @template ActionType - A type union of Action type strings.\n   */\n  registerActionHandler(actionType, handler) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).has(actionType)) {\n      throw new Error(\n        `A handler for ${actionType} has already been registered`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).set(actionType, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @template ActionType - A type union of Action type strings.\n   */\n  unregisterActionHandler(actionType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).delete(actionType);\n  }\n  /**\n   * Unregister all action handlers.\n   *\n   * This prevents all actions from being called.\n   */\n  clearActions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).clear();\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    const handler = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).get(actionType);\n    if (!handler) {\n      throw new Error(`A handler for ${actionType} has not been registered`);\n    }\n    return handler(...params);\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).set(eventType, getPayload);\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * Note that this method should never throw directly. Any errors from\n   * subscribers are captured and re-thrown in a timeout handler.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @template EventType - A type union of Event type strings.\n   */\n  publish(eventType, ...payload) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (subscribers) {\n      for (const [handler, selector] of subscribers.entries()) {\n        try {\n          if (selector) {\n            const previousValue = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).get(handler);\n            const newValue = selector(...payload);\n            if (newValue !== previousValue) {\n              _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, newValue);\n              handler(newValue, previousValue);\n            }\n          } else {\n            handler(...payload);\n          }\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n      }\n    }\n  }\n  subscribe(eventType, handler, selector) {\n    let subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Map();\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).set(eventType, subscribers);\n    }\n    subscribers.set(handler, selector);\n    if (selector) {\n      const getPayload = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).get(eventType);\n      if (getPayload) {\n        const initialValue = selector(...getPayload());\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, initialValue);\n      }\n    }\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw when the given event handler is not registered for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  unsubscribe(eventType, handler) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers || !subscribers.has(handler)) {\n      throw new Error(`Subscription not found for event: ${eventType}`);\n    }\n    const selector = subscribers.get(handler);\n    if (selector) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).delete(handler);\n    }\n    subscribers.delete(handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  clearEventSubscriptions(eventType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).delete(eventType);\n  }\n  /**\n   * Clear all subscriptions.\n   *\n   * This will remove all subscribed handlers for all events.\n   */\n  clearSubscriptions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).clear();\n  }\n  /**\n   * Get a restricted controller messenger\n   *\n   * Returns a wrapper around the controller messenger instance that restricts access to actions\n   * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n   * to the listed events. The \"name\" provided grants ownership of any actions and events under\n   * that namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - Controller messenger options.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n   * module that this messenger has been created for. The authority to publish events and register\n   * actions under this namespace is granted to this restricted messenger instance.\n   * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n   * This must not include internal actions that are in the messenger's namespace.\n   * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n   * This must not include internal events that are in the messenger's namespace.\n   * @returns The restricted controller messenger.\n   */\n  getRestricted({\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    return new (0, _chunkUJFCPTF3js.RestrictedControllerMessenger)({\n      controllerMessenger: this,\n      name,\n      allowedActions,\n      allowedEvents\n    });\n  }\n};\n_actions = new WeakMap();\n_events = new WeakMap();\n_initialEventPayloadGetters = new WeakMap();\n_eventPayloadCache = new WeakMap();\n\n\n\nexports.ControllerMessenger = ControllerMessenger;\n//# sourceMappingURL=chunk-G42723LG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/BaseControllerV2.ts\nvar _immer = require('immer');\n_immer.enablePatches.call(void 0, );\nvar _internalState;\nvar BaseController = class {\n  /**\n   * Creates a BaseController instance.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Controller messaging system.\n   * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n   * parts should be persisted.\n   * @param options.name - The name of the controller, used as a namespace for events and actions.\n   * @param options.state - Initial controller state.\n   */\n  constructor({\n    messenger,\n    metadata,\n    name,\n    state\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _internalState, void 0);\n    this.messagingSystem = messenger;\n    this.name = name;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, _immer.freeze.call(void 0, state, true));\n    this.metadata = metadata;\n    this.messagingSystem.registerActionHandler(\n      `${name}:getState`,\n      () => this.state\n    );\n    this.messagingSystem.registerInitialEventPayload({\n      eventType: `${name}:stateChange`,\n      getPayload: () => [this.state, []]\n    });\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState);\n  }\n  set state(_) {\n    throw new Error(\n      `Controller state cannot be directly mutated; use 'update' method instead.`\n    );\n  }\n  /**\n   * Updates controller state. Accepts a callback that is passed a draft copy\n   * of the controller state. If a value is returned, it is set as the new\n   * state. Otherwise, any changes made within that callback to the draft are\n   * applied to the controller state.\n   *\n   * @param callback - Callback for updating state, passed a draft state\n   * object. Return a new state object or mutate the draft to update state.\n   * @returns An object that has the next state, patches applied in the update and inverse patches to\n   * rollback the update.\n   */\n  update(callback) {\n    const [nextState, patches, inversePatches] = _immer.produceWithPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), callback);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n    return { nextState, patches, inversePatches };\n  }\n  /**\n   * Applies immer patches to the current state. The patches come from the\n   * update function itself and can either be normal or inverse patches.\n   *\n   * @param patches - An array of immer patches that are to be applied to make\n   * or undo changes.\n   */\n  applyPatches(patches) {\n    const nextState = _immer.applyPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), patches);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n  }\n  /**\n   * Prepares the controller for garbage collection. This should be extended\n   * by any subclasses to clean up any additional connections or events.\n   *\n   * The only cleanup performed here is to remove listeners. While technically\n   * this is not required to ensure this instance is garbage collected, it at\n   * least ensures this instance won't be responsible for preventing the\n   * listeners from being garbage collected.\n   */\n  destroy() {\n    this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n  }\n};\n_internalState = new WeakMap();\nfunction getAnonymizedState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"anonymous\");\n}\nfunction getPersistentState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"persist\");\n}\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n  return Object.keys(state).reduce((derivedState, key) => {\n    try {\n      const stateMetadata = metadata[key];\n      if (!stateMetadata) {\n        throw new Error(`No metadata found for '${String(key)}'`);\n      }\n      const propertyMetadata = stateMetadata[metadataProperty];\n      const stateProperty = state[key];\n      if (typeof propertyMetadata === \"function\") {\n        derivedState[key] = propertyMetadata(stateProperty);\n      } else if (propertyMetadata) {\n        derivedState[key] = stateProperty;\n      }\n      return derivedState;\n    } catch (error) {\n      setTimeout(() => {\n        throw error;\n      });\n      return derivedState;\n    }\n  }, {});\n}\n\n\n\n\n\nexports.BaseController = BaseController; exports.getAnonymizedState = getAnonymizedState; exports.getPersistentState = getPersistentState;\n//# sourceMappingURL=chunk-IURK6TKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RestrictedControllerMessenger.ts\nvar _controllerMessenger, _controllerName, _allowedActions, _allowedEvents, _isAllowedEvent, isAllowedEvent_fn, _isAllowedAction, isAllowedAction_fn, _isInCurrentNamespace, isInCurrentNamespace_fn;\nvar RestrictedControllerMessenger = class {\n  /**\n   * Constructs a restricted controller messenger\n   *\n   * The provided allowlists grant the ability to call the listed actions and subscribe to the\n   * listed events. The \"name\" provided grants ownership of any actions and events under that\n   * namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - The controller options.\n   * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   */\n  constructor({\n    controllerMessenger,\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    /**\n     * Determine whether the given event type is allowed. Event types are\n     * allowed if they are in the current namespace or on the list of\n     * allowed events.\n     *\n     * @param eventType - The event type to check.\n     * @returns Whether the event type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedEvent);\n    /**\n     * Determine whether the given action type is allowed. Action types\n     * are allowed if they are in the current namespace or on the list of\n     * allowed actions.\n     *\n     * @param actionType - The action type to check.\n     * @returns Whether the action type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedAction);\n    /**\n     * Determine whether the given name is within the current namespace.\n     *\n     * @param name - The name to check\n     * @returns Whether the name is within the current namespace\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInCurrentNamespace);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerMessenger, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerName, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedActions, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedEvents, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerMessenger, controllerMessenger);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerName, name);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedActions, allowedActions);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedEvents, allowedEvents);\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * The action type this handler is registered under *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw if an action handler that is not in the current namespace is being registered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  registerActionHandler(action, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed registering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerActionHandler(action, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * The action type being unregistered *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unique identifier for this action.\n   * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  unregisterActionHandler(action) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed unregistering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unregisterActionHandler(action);\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * The action type being called must be on the action allowlist.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of allowed Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedAction, isAllowedAction_fn).call(this, actionType)) {\n      throw new Error(`Action missing from allow list: ${actionType}`);\n    }\n    const response = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).call(\n      actionType,\n      ...params\n    );\n    return response;\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * The event type *must* be in the current namespace\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerInitialEventPayload({\n      eventType,\n      getPayload\n    });\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * The event type being published *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @throws Will throw if an event that is not in the current namespace is being published.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  publish(event, ...payload) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).publish(event, ...payload);\n  }\n  subscribe(event, handler, selector) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    if (selector) {\n      return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler, selector);\n    }\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler);\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * The event type being unsubscribed to must be on the event allowlist.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw if the given event is not an allowed event for this controller messenger.\n   * @template EventType - A type union of allowed Event type strings.\n   */\n  unsubscribe(event, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unsubscribe(event, handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * The event type being cleared *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  clearEventSubscriptions(event) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed clearing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).clearEventSubscriptions(event);\n  }\n};\n_controllerMessenger = new WeakMap();\n_controllerName = new WeakMap();\n_allowedActions = new WeakMap();\n_allowedEvents = new WeakMap();\n_isAllowedEvent = new WeakSet();\nisAllowedEvent_fn = function(eventType) {\n  const allowedEvents = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedEvents);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType) || allowedEvents !== null && allowedEvents.includes(eventType);\n};\n_isAllowedAction = new WeakSet();\nisAllowedAction_fn = function(actionType) {\n  const allowedActions = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedActions);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, actionType) || allowedActions !== null && allowedActions.includes(actionType);\n};\n_isInCurrentNamespace = new WeakSet();\nisInCurrentNamespace_fn = function(name) {\n  return name.startsWith(`${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:`);\n};\n\n\n\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n//# sourceMappingURL=chunk-UJFCPTF3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFTHCJ6HYjs = require('./chunk-FTHCJ6HY.js');\n\n\n\n\nvar _chunkIURK6TKDjs = require('./chunk-IURK6TKD.js');\n\n\nvar _chunkG42723LGjs = require('./chunk-G42723LG.js');\n\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\nexports.BaseController = _chunkIURK6TKDjs.BaseController; exports.BaseControllerV1 = _chunkFTHCJ6HYjs.BaseControllerV1; exports.ControllerMessenger = _chunkG42723LGjs.ControllerMessenger; exports.RestrictedControllerMessenger = _chunkUJFCPTF3js.RestrictedControllerMessenger; exports.getAnonymizedState = _chunkIURK6TKDjs.getAnonymizedState; exports.getPersistentState = _chunkIURK6TKDjs.getPersistentState;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","let { urlAlphabet } = require('./url-alphabet/index.cjs')\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nmodule.exports = { urlAlphabet }\n","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\n\nvar _chunkLBXAXAXHjs = require('./chunk-LBXAXAXH.js');\n\n// src/StaticIntervalPollingController.ts\nvar _basecontroller = require('@metamask/base-controller');\nfunction StaticIntervalPollingControllerMixin(Base) {\n  var _intervalIds, _intervalLength;\n  class StaticIntervalPollingController2 extends _chunkLBXAXAXHjs.AbstractPollingControllerBaseMixin.call(void 0, Base) {\n    constructor() {\n      super(...arguments);\n      _chunkLBXAXAXHjs.__privateAdd.call(void 0, this, _intervalIds, {});\n      _chunkLBXAXAXHjs.__privateAdd.call(void 0, this, _intervalLength, 1e3);\n    }\n    setIntervalLength(intervalLength) {\n      _chunkLBXAXAXHjs.__privateSet.call(void 0, this, _intervalLength, intervalLength);\n    }\n    getIntervalLength() {\n      return _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalLength);\n    }\n    _startPollingByNetworkClientId(networkClientId, options) {\n      if (!_chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalLength)) {\n        throw new Error(\"intervalLength must be defined and greater than 0\");\n      }\n      const key = _chunkLBXAXAXHjs.getKey.call(void 0, networkClientId, options);\n      const existingInterval = _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalIds)[key];\n      this._stopPollingByPollingTokenSetId(key);\n      const intervalId = _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalIds)[key] = setTimeout(\n        async () => {\n          try {\n            await this._executePoll(networkClientId, options);\n          } catch (error) {\n            console.error(error);\n          }\n          if (intervalId === _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalIds)[key]) {\n            this._startPollingByNetworkClientId(networkClientId, options);\n          }\n        },\n        existingInterval ? _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalLength) : 0\n      );\n    }\n    _stopPollingByPollingTokenSetId(key) {\n      const intervalId = _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalIds)[key];\n      if (intervalId) {\n        clearTimeout(intervalId);\n        delete _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _intervalIds)[key];\n      }\n    }\n  }\n  _intervalIds = new WeakMap();\n  _intervalLength = new WeakMap();\n  return StaticIntervalPollingController2;\n}\nvar Empty = class {\n};\nvar StaticIntervalPollingControllerOnly = StaticIntervalPollingControllerMixin(Empty);\nvar StaticIntervalPollingController = StaticIntervalPollingControllerMixin(_basecontroller.BaseController);\nvar StaticIntervalPollingControllerV1 = StaticIntervalPollingControllerMixin(_basecontroller.BaseControllerV1);\n\n\n\n\n\nexports.StaticIntervalPollingControllerOnly = StaticIntervalPollingControllerOnly; exports.StaticIntervalPollingController = StaticIntervalPollingController; exports.StaticIntervalPollingControllerV1 = StaticIntervalPollingControllerV1;\n//# sourceMappingURL=chunk-I2PH5XQP.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/AbstractPollingController.ts\nvar _fastjsonstablestringify = require('fast-json-stable-stringify'); var _fastjsonstablestringify2 = _interopRequireDefault(_fastjsonstablestringify);\nvar _uuid = require('uuid');\nvar getKey = (networkClientId, options) => `${networkClientId}:${_fastjsonstablestringify2.default.call(void 0, options)}`;\nfunction AbstractPollingControllerBaseMixin(Base) {\n  var _pollingTokenSets, _callbacks;\n  class AbstractPollingControllerBase extends Base {\n    constructor() {\n      super(...arguments);\n      __privateAdd(this, _pollingTokenSets, /* @__PURE__ */ new Map());\n      __privateAdd(this, _callbacks, /* @__PURE__ */ new Map());\n    }\n    startPollingByNetworkClientId(networkClientId, options = {}) {\n      const pollToken = _uuid.v4.call(void 0, );\n      const key = getKey(networkClientId, options);\n      const pollingTokenSet = __privateGet(this, _pollingTokenSets).get(key) ?? /* @__PURE__ */ new Set();\n      pollingTokenSet.add(pollToken);\n      __privateGet(this, _pollingTokenSets).set(key, pollingTokenSet);\n      if (pollingTokenSet.size === 1) {\n        this._startPollingByNetworkClientId(networkClientId, options);\n      }\n      return pollToken;\n    }\n    stopAllPolling() {\n      __privateGet(this, _pollingTokenSets).forEach((tokenSet, _key) => {\n        tokenSet.forEach((token) => {\n          this.stopPollingByPollingToken(token);\n        });\n      });\n    }\n    stopPollingByPollingToken(pollingToken) {\n      if (!pollingToken) {\n        throw new Error(\"pollingToken required\");\n      }\n      let keyToDelete = null;\n      for (const [key, tokenSet] of __privateGet(this, _pollingTokenSets)) {\n        if (tokenSet.delete(pollingToken)) {\n          if (tokenSet.size === 0) {\n            keyToDelete = key;\n          }\n          break;\n        }\n      }\n      if (keyToDelete) {\n        this._stopPollingByPollingTokenSetId(keyToDelete);\n        __privateGet(this, _pollingTokenSets).delete(keyToDelete);\n        const callbacks = __privateGet(this, _callbacks).get(keyToDelete);\n        if (callbacks) {\n          for (const callback of callbacks) {\n            callback(keyToDelete);\n          }\n          callbacks.clear();\n        }\n      }\n    }\n    onPollingCompleteByNetworkClientId(networkClientId, callback, options = {}) {\n      const key = getKey(networkClientId, options);\n      const callbacks = __privateGet(this, _callbacks).get(key) ?? /* @__PURE__ */ new Set();\n      callbacks.add(callback);\n      __privateGet(this, _callbacks).set(key, callbacks);\n    }\n  }\n  _pollingTokenSets = new WeakMap();\n  _callbacks = new WeakMap();\n  return AbstractPollingControllerBase;\n}\n\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.getKey = getKey; exports.AbstractPollingControllerBaseMixin = AbstractPollingControllerBaseMixin;\n//# sourceMappingURL=chunk-LBXAXAXH.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkLBXAXAXHjs = require('./chunk-LBXAXAXH.js');\n\n// src/BlockTrackerPollingController.ts\nvar _basecontroller = require('@metamask/base-controller');\nfunction BlockTrackerPollingControllerMixin(Base) {\n  var _activeListeners;\n  class BlockTrackerPollingController2 extends _chunkLBXAXAXHjs.AbstractPollingControllerBaseMixin.call(void 0, \n    Base\n  ) {\n    constructor() {\n      super(...arguments);\n      _chunkLBXAXAXHjs.__privateAdd.call(void 0, this, _activeListeners, {});\n    }\n    _startPollingByNetworkClientId(networkClientId, options) {\n      const key = _chunkLBXAXAXHjs.getKey.call(void 0, networkClientId, options);\n      if (_chunkLBXAXAXHjs.__privateGet.call(void 0, this, _activeListeners)[key]) {\n        return;\n      }\n      const networkClient = this._getNetworkClientById(networkClientId);\n      if (networkClient) {\n        const updateOnNewBlock = this._executePoll.bind(\n          this,\n          networkClientId,\n          options\n        );\n        networkClient.blockTracker.addListener(\"latest\", updateOnNewBlock);\n        _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _activeListeners)[key] = updateOnNewBlock;\n      } else {\n        throw new Error(\n          `Unable to retrieve blockTracker for networkClientId ${networkClientId}`\n        );\n      }\n    }\n    _stopPollingByPollingTokenSetId(key) {\n      const [networkClientId] = key.split(\":\");\n      const networkClient = this._getNetworkClientById(\n        networkClientId\n      );\n      if (networkClient && _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _activeListeners)[key]) {\n        const listener = _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _activeListeners)[key];\n        if (listener) {\n          networkClient.blockTracker.removeListener(\"latest\", listener);\n          delete _chunkLBXAXAXHjs.__privateGet.call(void 0, this, _activeListeners)[key];\n        }\n      }\n    }\n  }\n  _activeListeners = new WeakMap();\n  return BlockTrackerPollingController2;\n}\nvar Empty = class {\n};\nvar BlockTrackerPollingControllerOnly = BlockTrackerPollingControllerMixin(Empty);\nvar BlockTrackerPollingController = BlockTrackerPollingControllerMixin(_basecontroller.BaseController);\nvar BlockTrackerPollingControllerV1 = BlockTrackerPollingControllerMixin(_basecontroller.BaseControllerV1);\n\n\n\n\n\nexports.BlockTrackerPollingControllerOnly = BlockTrackerPollingControllerOnly; exports.BlockTrackerPollingController = BlockTrackerPollingController; exports.BlockTrackerPollingControllerV1 = BlockTrackerPollingControllerV1;\n//# sourceMappingURL=chunk-MUDX6BUY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkMUDX6BUYjs = require('./chunk-MUDX6BUY.js');\n\n\n\n\nvar _chunkI2PH5XQPjs = require('./chunk-I2PH5XQP.js');\nrequire('./chunk-LBXAXAXH.js');\n\n\n\n\n\n\n\nexports.BlockTrackerPollingController = _chunkMUDX6BUYjs.BlockTrackerPollingController; exports.BlockTrackerPollingControllerOnly = _chunkMUDX6BUYjs.BlockTrackerPollingControllerOnly; exports.BlockTrackerPollingControllerV1 = _chunkMUDX6BUYjs.BlockTrackerPollingControllerV1; exports.StaticIntervalPollingController = _chunkI2PH5XQPjs.StaticIntervalPollingController; exports.StaticIntervalPollingControllerOnly = _chunkI2PH5XQPjs.StaticIntervalPollingControllerOnly; exports.StaticIntervalPollingControllerV1 = _chunkI2PH5XQPjs.StaticIntervalPollingControllerV1;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/BaseControllerV1.ts\nvar BaseControllerV1 = class {\n  /**\n   * Creates a BaseControllerV1 instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config = {}, state = {}) {\n    /**\n     * Default options used to configure this controller\n     */\n    this.defaultConfig = {};\n    /**\n     * Default state set on this controller\n     */\n    this.defaultState = {};\n    /**\n     * Determines if listeners are notified of state changes\n     */\n    this.disabled = false;\n    /**\n     * Name of this controller used during composition\n     */\n    this.name = \"BaseController\";\n    this.internalConfig = this.defaultConfig;\n    this.internalState = this.defaultState;\n    this.internalListeners = [];\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns This controller instance.\n   */\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n  /**\n   * Retrieves current controller configuration options.\n   *\n   * @returns The current configuration.\n   */\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration.\n   *\n   * @param config - New configuration options.\n   * @param overwrite - Overwrite config instead of merging.\n   * @param fullUpdate - Boolean that defines if the update is partial or not.\n   */\n  configure(config, overwrite = false, fullUpdate = true) {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n      for (const key of Object.keys(this.internalConfig)) {\n        const value = this.internalConfig[key];\n        if (value !== void 0) {\n          this[key] = value;\n        }\n      }\n    } else {\n      for (const key of Object.keys(config)) {\n        if (this.internalConfig[key] !== void 0) {\n          const value = config[key];\n          this.internalConfig[key] = value;\n          this[key] = value;\n        }\n      }\n    }\n  }\n  /**\n   * Notifies all subscribed listeners of current state.\n   */\n  notify() {\n    if (this.disabled) {\n      return;\n    }\n    this.internalListeners.forEach((listener) => {\n      listener(this.internalState);\n    });\n  }\n  /**\n   * Adds new listener to be notified of state changes.\n   *\n   * @param listener - The callback triggered when state changes.\n   */\n  subscribe(listener) {\n    this.internalListeners.push(listener);\n  }\n  /**\n   * Removes existing listener from receiving state changes.\n   *\n   * @param listener - The callback to remove.\n   * @returns `true` if a listener is found and unsubscribed.\n   */\n  unsubscribe(listener) {\n    const index = this.internalListeners.findIndex((cb) => listener === cb);\n    index > -1 && this.internalListeners.splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Updates controller state.\n   *\n   * @param state - The new state.\n   * @param overwrite - Overwrite state instead of merging.\n   */\n  update(state, overwrite = false) {\n    this.internalState = overwrite ? Object.assign({}, state) : Object.assign({}, this.internalState, state);\n    this.notify();\n  }\n};\nvar BaseControllerV1_default = BaseControllerV1;\n\n\n\n\nexports.BaseControllerV1 = BaseControllerV1; exports.BaseControllerV1_default = BaseControllerV1_default;\n//# sourceMappingURL=chunk-FTHCJ6HY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/ControllerMessenger.ts\nvar _actions, _events, _initialEventPayloadGetters, _eventPayloadCache;\nvar ControllerMessenger = class {\n  constructor() {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _actions, /* @__PURE__ */ new Map());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _events, /* @__PURE__ */ new Map());\n    /**\n     * A map of functions for getting the initial event payload.\n     *\n     * Used only for events that represent state changes.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _initialEventPayloadGetters, /* @__PURE__ */ new Map());\n    /**\n     * A cache of selector return values for their respective handlers.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _eventPayloadCache, /* @__PURE__ */ new Map());\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw when a handler has been registered for this action type already.\n   * @template ActionType - A type union of Action type strings.\n   */\n  registerActionHandler(actionType, handler) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).has(actionType)) {\n      throw new Error(\n        `A handler for ${actionType} has already been registered`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).set(actionType, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @template ActionType - A type union of Action type strings.\n   */\n  unregisterActionHandler(actionType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).delete(actionType);\n  }\n  /**\n   * Unregister all action handlers.\n   *\n   * This prevents all actions from being called.\n   */\n  clearActions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).clear();\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    const handler = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).get(actionType);\n    if (!handler) {\n      throw new Error(`A handler for ${actionType} has not been registered`);\n    }\n    return handler(...params);\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).set(eventType, getPayload);\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * Note that this method should never throw directly. Any errors from\n   * subscribers are captured and re-thrown in a timeout handler.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @template EventType - A type union of Event type strings.\n   */\n  publish(eventType, ...payload) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (subscribers) {\n      for (const [handler, selector] of subscribers.entries()) {\n        try {\n          if (selector) {\n            const previousValue = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).get(handler);\n            const newValue = selector(...payload);\n            if (newValue !== previousValue) {\n              _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, newValue);\n              handler(newValue, previousValue);\n            }\n          } else {\n            handler(...payload);\n          }\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n      }\n    }\n  }\n  subscribe(eventType, handler, selector) {\n    let subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Map();\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).set(eventType, subscribers);\n    }\n    subscribers.set(handler, selector);\n    if (selector) {\n      const getPayload = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).get(eventType);\n      if (getPayload) {\n        const initialValue = selector(...getPayload());\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, initialValue);\n      }\n    }\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw when the given event handler is not registered for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  unsubscribe(eventType, handler) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers || !subscribers.has(handler)) {\n      throw new Error(`Subscription not found for event: ${eventType}`);\n    }\n    const selector = subscribers.get(handler);\n    if (selector) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).delete(handler);\n    }\n    subscribers.delete(handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  clearEventSubscriptions(eventType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).delete(eventType);\n  }\n  /**\n   * Clear all subscriptions.\n   *\n   * This will remove all subscribed handlers for all events.\n   */\n  clearSubscriptions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).clear();\n  }\n  /**\n   * Get a restricted controller messenger\n   *\n   * Returns a wrapper around the controller messenger instance that restricts access to actions\n   * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n   * to the listed events. The \"name\" provided grants ownership of any actions and events under\n   * that namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - Controller messenger options.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n   * module that this messenger has been created for. The authority to publish events and register\n   * actions under this namespace is granted to this restricted messenger instance.\n   * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n   * This must not include internal actions that are in the messenger's namespace.\n   * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n   * This must not include internal events that are in the messenger's namespace.\n   * @returns The restricted controller messenger.\n   */\n  getRestricted({\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    return new (0, _chunkUJFCPTF3js.RestrictedControllerMessenger)({\n      controllerMessenger: this,\n      name,\n      allowedActions,\n      allowedEvents\n    });\n  }\n};\n_actions = new WeakMap();\n_events = new WeakMap();\n_initialEventPayloadGetters = new WeakMap();\n_eventPayloadCache = new WeakMap();\n\n\n\nexports.ControllerMessenger = ControllerMessenger;\n//# sourceMappingURL=chunk-G42723LG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/BaseControllerV2.ts\nvar _immer = require('immer');\n_immer.enablePatches.call(void 0, );\nvar _internalState;\nvar BaseController = class {\n  /**\n   * Creates a BaseController instance.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Controller messaging system.\n   * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n   * parts should be persisted.\n   * @param options.name - The name of the controller, used as a namespace for events and actions.\n   * @param options.state - Initial controller state.\n   */\n  constructor({\n    messenger,\n    metadata,\n    name,\n    state\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _internalState, void 0);\n    this.messagingSystem = messenger;\n    this.name = name;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, _immer.freeze.call(void 0, state, true));\n    this.metadata = metadata;\n    this.messagingSystem.registerActionHandler(\n      `${name}:getState`,\n      () => this.state\n    );\n    this.messagingSystem.registerInitialEventPayload({\n      eventType: `${name}:stateChange`,\n      getPayload: () => [this.state, []]\n    });\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState);\n  }\n  set state(_) {\n    throw new Error(\n      `Controller state cannot be directly mutated; use 'update' method instead.`\n    );\n  }\n  /**\n   * Updates controller state. Accepts a callback that is passed a draft copy\n   * of the controller state. If a value is returned, it is set as the new\n   * state. Otherwise, any changes made within that callback to the draft are\n   * applied to the controller state.\n   *\n   * @param callback - Callback for updating state, passed a draft state\n   * object. Return a new state object or mutate the draft to update state.\n   * @returns An object that has the next state, patches applied in the update and inverse patches to\n   * rollback the update.\n   */\n  update(callback) {\n    const [nextState, patches, inversePatches] = _immer.produceWithPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), callback);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n    return { nextState, patches, inversePatches };\n  }\n  /**\n   * Applies immer patches to the current state. The patches come from the\n   * update function itself and can either be normal or inverse patches.\n   *\n   * @param patches - An array of immer patches that are to be applied to make\n   * or undo changes.\n   */\n  applyPatches(patches) {\n    const nextState = _immer.applyPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), patches);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n  }\n  /**\n   * Prepares the controller for garbage collection. This should be extended\n   * by any subclasses to clean up any additional connections or events.\n   *\n   * The only cleanup performed here is to remove listeners. While technically\n   * this is not required to ensure this instance is garbage collected, it at\n   * least ensures this instance won't be responsible for preventing the\n   * listeners from being garbage collected.\n   */\n  destroy() {\n    this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n  }\n};\n_internalState = new WeakMap();\nfunction getAnonymizedState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"anonymous\");\n}\nfunction getPersistentState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"persist\");\n}\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n  return Object.keys(state).reduce((derivedState, key) => {\n    try {\n      const stateMetadata = metadata[key];\n      if (!stateMetadata) {\n        throw new Error(`No metadata found for '${String(key)}'`);\n      }\n      const propertyMetadata = stateMetadata[metadataProperty];\n      const stateProperty = state[key];\n      if (typeof propertyMetadata === \"function\") {\n        derivedState[key] = propertyMetadata(stateProperty);\n      } else if (propertyMetadata) {\n        derivedState[key] = stateProperty;\n      }\n      return derivedState;\n    } catch (error) {\n      setTimeout(() => {\n        throw error;\n      });\n      return derivedState;\n    }\n  }, {});\n}\n\n\n\n\n\nexports.BaseController = BaseController; exports.getAnonymizedState = getAnonymizedState; exports.getPersistentState = getPersistentState;\n//# sourceMappingURL=chunk-IURK6TKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RestrictedControllerMessenger.ts\nvar _controllerMessenger, _controllerName, _allowedActions, _allowedEvents, _isAllowedEvent, isAllowedEvent_fn, _isAllowedAction, isAllowedAction_fn, _isInCurrentNamespace, isInCurrentNamespace_fn;\nvar RestrictedControllerMessenger = class {\n  /**\n   * Constructs a restricted controller messenger\n   *\n   * The provided allowlists grant the ability to call the listed actions and subscribe to the\n   * listed events. The \"name\" provided grants ownership of any actions and events under that\n   * namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - The controller options.\n   * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   */\n  constructor({\n    controllerMessenger,\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    /**\n     * Determine whether the given event type is allowed. Event types are\n     * allowed if they are in the current namespace or on the list of\n     * allowed events.\n     *\n     * @param eventType - The event type to check.\n     * @returns Whether the event type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedEvent);\n    /**\n     * Determine whether the given action type is allowed. Action types\n     * are allowed if they are in the current namespace or on the list of\n     * allowed actions.\n     *\n     * @param actionType - The action type to check.\n     * @returns Whether the action type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedAction);\n    /**\n     * Determine whether the given name is within the current namespace.\n     *\n     * @param name - The name to check\n     * @returns Whether the name is within the current namespace\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInCurrentNamespace);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerMessenger, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerName, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedActions, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedEvents, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerMessenger, controllerMessenger);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerName, name);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedActions, allowedActions);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedEvents, allowedEvents);\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * The action type this handler is registered under *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw if an action handler that is not in the current namespace is being registered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  registerActionHandler(action, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed registering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerActionHandler(action, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * The action type being unregistered *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unique identifier for this action.\n   * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  unregisterActionHandler(action) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed unregistering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unregisterActionHandler(action);\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * The action type being called must be on the action allowlist.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of allowed Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedAction, isAllowedAction_fn).call(this, actionType)) {\n      throw new Error(`Action missing from allow list: ${actionType}`);\n    }\n    const response = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).call(\n      actionType,\n      ...params\n    );\n    return response;\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * The event type *must* be in the current namespace\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerInitialEventPayload({\n      eventType,\n      getPayload\n    });\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * The event type being published *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @throws Will throw if an event that is not in the current namespace is being published.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  publish(event, ...payload) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).publish(event, ...payload);\n  }\n  subscribe(event, handler, selector) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    if (selector) {\n      return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler, selector);\n    }\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler);\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * The event type being unsubscribed to must be on the event allowlist.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw if the given event is not an allowed event for this controller messenger.\n   * @template EventType - A type union of allowed Event type strings.\n   */\n  unsubscribe(event, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unsubscribe(event, handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * The event type being cleared *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  clearEventSubscriptions(event) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed clearing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).clearEventSubscriptions(event);\n  }\n};\n_controllerMessenger = new WeakMap();\n_controllerName = new WeakMap();\n_allowedActions = new WeakMap();\n_allowedEvents = new WeakMap();\n_isAllowedEvent = new WeakSet();\nisAllowedEvent_fn = function(eventType) {\n  const allowedEvents = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedEvents);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType) || allowedEvents !== null && allowedEvents.includes(eventType);\n};\n_isAllowedAction = new WeakSet();\nisAllowedAction_fn = function(actionType) {\n  const allowedActions = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedActions);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, actionType) || allowedActions !== null && allowedActions.includes(actionType);\n};\n_isInCurrentNamespace = new WeakSet();\nisInCurrentNamespace_fn = function(name) {\n  return name.startsWith(`${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:`);\n};\n\n\n\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n//# sourceMappingURL=chunk-UJFCPTF3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFTHCJ6HYjs = require('./chunk-FTHCJ6HY.js');\n\n\n\n\nvar _chunkIURK6TKDjs = require('./chunk-IURK6TKD.js');\n\n\nvar _chunkG42723LGjs = require('./chunk-G42723LG.js');\n\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\nexports.BaseController = _chunkIURK6TKDjs.BaseController; exports.BaseControllerV1 = _chunkFTHCJ6HYjs.BaseControllerV1; exports.ControllerMessenger = _chunkG42723LGjs.ControllerMessenger; exports.RestrictedControllerMessenger = _chunkUJFCPTF3js.RestrictedControllerMessenger; exports.getAnonymizedState = _chunkIURK6TKDjs.getAnonymizedState; exports.getPersistentState = _chunkIURK6TKDjs.getPersistentState;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasePostMessageStream = void 0;\nconst readable_stream_1 = require(\"readable-stream\");\nconst noop = () => undefined;\nconst SYN = 'SYN';\nconst ACK = 'ACK';\n/**\n * Abstract base class for postMessage streams.\n */\nclass BasePostMessageStream extends readable_stream_1.Duplex {\n    constructor(streamOptions) {\n        super(Object.assign({ objectMode: true }, streamOptions));\n        // Initialization flags\n        this._init = false;\n        this._haveSyn = false;\n        this._log = () => null;\n    }\n    /**\n     * Must be called at end of child constructor to initiate\n     * communication with other end.\n     */\n    _handshake() {\n        // Send synchronization message\n        this._write(SYN, null, noop);\n        this.cork();\n    }\n    _onData(data) {\n        if (this._init) {\n            // Forward message\n            try {\n                this.push(data);\n                this._log(data, false);\n            }\n            catch (err) {\n                this.emit('error', err);\n            }\n        }\n        else if (data === SYN) {\n            // Listen for handshake\n            this._haveSyn = true;\n            this._write(ACK, null, noop);\n        }\n        else if (data === ACK) {\n            this._init = true;\n            if (!this._haveSyn) {\n                this._write(ACK, null, noop);\n            }\n            this.uncork();\n        }\n    }\n    _read() {\n        return undefined;\n    }\n    _write(data, _encoding, cb) {\n        if (data !== ACK && data !== SYN) {\n            this._log(data, true);\n        }\n        this._postMessage(data);\n        cb();\n    }\n    _setLogger(log) {\n        this._log = log;\n    }\n}\nexports.BasePostMessageStream = BasePostMessageStream;\n//# sourceMappingURL=BasePostMessageStream.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebWorkerParentPostMessageStream = void 0;\nconst BasePostMessageStream_1 = require(\"../BasePostMessageStream\");\nconst utils_1 = require(\"../utils\");\n/**\n * Parent-side dedicated `WebWorker.postMessage` stream. Designed for use with\n * dedicated workers only.\n */\nclass WebWorkerParentPostMessageStream extends BasePostMessageStream_1.BasePostMessageStream {\n    /**\n     * Creates a stream for communicating with a dedicated `WebWorker`.\n     *\n     * @param args - Options bag.\n     * @param args.worker - The Web Worker to exchange messages with. The worker\n     * must instantiate a `WebWorkerPostMessageStream`.\n     */\n    constructor(_a) {\n        var { worker } = _a, streamOptions = __rest(_a, [\"worker\"]);\n        super(streamOptions);\n        this._target = utils_1.DEDICATED_WORKER_NAME;\n        this._worker = worker;\n        this._worker.onmessage = this._onMessage.bind(this);\n        this._handshake();\n    }\n    _postMessage(data) {\n        this._worker.postMessage({\n            target: this._target,\n            data,\n        });\n    }\n    _onMessage(event) {\n        const message = event.data;\n        if (!(0, utils_1.isValidStreamMessage)(message)) {\n            return;\n        }\n        this._onData(message.data);\n    }\n    _destroy() {\n        this._worker.onmessage = null;\n        this._worker = null;\n    }\n}\nexports.WebWorkerParentPostMessageStream = WebWorkerParentPostMessageStream;\n//# sourceMappingURL=WebWorkerParentPostMessageStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebWorkerPostMessageStream = void 0;\nconst BasePostMessageStream_1 = require(\"../BasePostMessageStream\");\nconst utils_1 = require(\"../utils\");\n/**\n * Worker-side dedicated `WebWorker.postMessage` stream. Designed for use with\n * dedicated workers only.\n */\nclass WebWorkerPostMessageStream extends BasePostMessageStream_1.BasePostMessageStream {\n    constructor(streamOptions = {}) {\n        // Kudos: https://stackoverflow.com/a/18002694\n        if (typeof self === 'undefined' ||\n            // @ts-expect-error: No types for WorkerGlobalScope\n            typeof WorkerGlobalScope === 'undefined') {\n            throw new Error('WorkerGlobalScope not found. This class should only be instantiated in a WebWorker.');\n        }\n        super(streamOptions);\n        this._name = utils_1.DEDICATED_WORKER_NAME;\n        self.addEventListener('message', this._onMessage.bind(this));\n        this._handshake();\n    }\n    _postMessage(data) {\n        // Cast of self.postMessage due to usage of DOM lib\n        self.postMessage({ data });\n    }\n    _onMessage(event) {\n        const message = event.data;\n        // validate message\n        if (!(0, utils_1.isValidStreamMessage)(message) || message.target !== this._name) {\n            return;\n        }\n        this._onData(message.data);\n    }\n    // worker stream lifecycle assumed to be coterminous with global scope\n    _destroy() {\n        return undefined;\n    }\n}\nexports.WebWorkerPostMessageStream = WebWorkerPostMessageStream;\n//# sourceMappingURL=WebWorkerPostMessageStream.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Exports a subset of functionality for browsers\n__exportStar(require(\"./window/WindowPostMessageStream\"), exports);\n__exportStar(require(\"./WebWorker/WebWorkerPostMessageStream\"), exports);\n__exportStar(require(\"./WebWorker/WebWorkerParentPostMessageStream\"), exports);\n__exportStar(require(\"./runtime/BrowserRuntimePostMessageStream\"), exports);\n__exportStar(require(\"./BasePostMessageStream\"), exports);\n//# sourceMappingURL=browser.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _BrowserRuntimePostMessageStream_name, _BrowserRuntimePostMessageStream_target;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserRuntimePostMessageStream = void 0;\nconst BasePostMessageStream_1 = require(\"../BasePostMessageStream\");\nconst utils_1 = require(\"../utils\");\n/**\n * A {@link browser.runtime} stream.\n */\nclass BrowserRuntimePostMessageStream extends BasePostMessageStream_1.BasePostMessageStream {\n    /**\n     * Creates a stream for communicating with other streams across the extension\n     * runtime.\n     *\n     * @param args - Options bag.\n     * @param args.name - The name of the stream. Used to differentiate between\n     * multiple streams sharing the same runtime.\n     * @param args.target - The name of the stream to exchange messages with.\n     */\n    constructor(_a) {\n        var { name, target } = _a, streamOptions = __rest(_a, [\"name\", \"target\"]);\n        super(streamOptions);\n        _BrowserRuntimePostMessageStream_name.set(this, void 0);\n        _BrowserRuntimePostMessageStream_target.set(this, void 0);\n        __classPrivateFieldSet(this, _BrowserRuntimePostMessageStream_name, name, \"f\");\n        __classPrivateFieldSet(this, _BrowserRuntimePostMessageStream_target, target, \"f\");\n        this._onMessage = this._onMessage.bind(this);\n        this._getRuntime().onMessage.addListener(this._onMessage);\n        this._handshake();\n    }\n    _postMessage(data) {\n        // This returns a Promise, which resolves if the receiver responds to the\n        // message. Rather than responding to specific messages, we send new\n        // messages in response to incoming messages, so we don't care about the\n        // Promise.\n        this._getRuntime().sendMessage({\n            target: __classPrivateFieldGet(this, _BrowserRuntimePostMessageStream_target, \"f\"),\n            data,\n        });\n    }\n    _onMessage(message) {\n        if (!(0, utils_1.isValidStreamMessage)(message) || message.target !== __classPrivateFieldGet(this, _BrowserRuntimePostMessageStream_name, \"f\")) {\n            return;\n        }\n        this._onData(message.data);\n    }\n    _getRuntime() {\n        var _a, _b;\n        if ('chrome' in globalThis &&\n            typeof ((_a = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _a === void 0 ? void 0 : _a.sendMessage) === 'function') {\n            return chrome.runtime;\n        }\n        if ('browser' in globalThis &&\n            typeof ((_b = browser === null || browser === void 0 ? void 0 : browser.runtime) === null || _b === void 0 ? void 0 : _b.sendMessage) === 'function') {\n            return browser.runtime;\n        }\n        throw new Error('browser.runtime.sendMessage is not a function. This class should only be instantiated in a web extension.');\n    }\n    _destroy() {\n        this._getRuntime().onMessage.removeListener(this._onMessage);\n    }\n}\nexports.BrowserRuntimePostMessageStream = BrowserRuntimePostMessageStream;\n_BrowserRuntimePostMessageStream_name = new WeakMap(), _BrowserRuntimePostMessageStream_target = new WeakMap();\n//# sourceMappingURL=BrowserRuntimePostMessageStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidStreamMessage = exports.DEDICATED_WORKER_NAME = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nexports.DEDICATED_WORKER_NAME = 'dedicatedWorker';\n/**\n * Checks whether the specified stream event message is valid per the\n * expectations of this library.\n *\n * @param message - The stream event message property.\n * @returns Whether the `message` is a valid stream message.\n */\nfunction isValidStreamMessage(message) {\n    return ((0, utils_1.isObject)(message) &&\n        Boolean(message.data) &&\n        (typeof message.data === 'number' ||\n            typeof message.data === 'object' ||\n            typeof message.data === 'string'));\n}\nexports.isValidStreamMessage = isValidStreamMessage;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WindowPostMessageStream = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst BasePostMessageStream_1 = require(\"../BasePostMessageStream\");\nconst utils_2 = require(\"../utils\");\n/* istanbul ignore next */\nconst getSource = (_a = Object.getOwnPropertyDescriptor(MessageEvent.prototype, 'source')) === null || _a === void 0 ? void 0 : _a.get;\n(0, utils_1.assert)(getSource, 'MessageEvent.prototype.source getter is not defined.');\n/* istanbul ignore next */\nconst getOrigin = (_b = Object.getOwnPropertyDescriptor(MessageEvent.prototype, 'origin')) === null || _b === void 0 ? void 0 : _b.get;\n(0, utils_1.assert)(getOrigin, 'MessageEvent.prototype.origin getter is not defined.');\n/**\n * A {@link Window.postMessage} stream.\n */\nclass WindowPostMessageStream extends BasePostMessageStream_1.BasePostMessageStream {\n    /**\n     * Creates a stream for communicating with other streams across the same or\n     * different `window` objects.\n     *\n     * @param args - Options bag.\n     * @param args.name - The name of the stream. Used to differentiate between\n     * multiple streams sharing the same window object.\n     * @param args.target - The name of the stream to exchange messages with.\n     * @param args.targetOrigin - The origin of the target. Defaults to\n     * `location.origin`, '*' is permitted.\n     * @param args.targetWindow - The window object of the target stream. Defaults\n     * to `window`.\n     */\n    constructor(_a) {\n        var { name, target, targetOrigin = location.origin, targetWindow = window } = _a, streamOptions = __rest(_a, [\"name\", \"target\", \"targetOrigin\", \"targetWindow\"]);\n        super(streamOptions);\n        if (typeof window === 'undefined' ||\n            typeof window.postMessage !== 'function') {\n            throw new Error('window.postMessage is not a function. This class should only be instantiated in a Window.');\n        }\n        this._name = name;\n        this._target = target;\n        this._targetOrigin = targetOrigin;\n        this._targetWindow = targetWindow;\n        this._onMessage = this._onMessage.bind(this);\n        window.addEventListener('message', this._onMessage, false);\n        this._handshake();\n    }\n    _postMessage(data) {\n        this._targetWindow.postMessage({\n            target: this._target,\n            data,\n        }, this._targetOrigin);\n    }\n    _onMessage(event) {\n        const message = event.data;\n        /* eslint-disable @typescript-eslint/no-non-null-assertion */\n        if ((this._targetOrigin !== '*' &&\n            getOrigin.call(event) !== this._targetOrigin) ||\n            getSource.call(event) !== this._targetWindow ||\n            !(0, utils_2.isValidStreamMessage)(message) ||\n            message.target !== this._name) {\n            return;\n        }\n        /* eslint-enable @typescript-eslint/no-non-null-assertion */\n        this._onData(message.data);\n    }\n    _destroy() {\n        window.removeEventListener('message', this._onMessage, false);\n    }\n}\nexports.WindowPostMessageStream = WindowPostMessageStream;\n//# sourceMappingURL=WindowPostMessageStream.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AuthenticationController_instances, _AuthenticationController_metametrics, _AuthenticationController_isUnlocked, _AuthenticationController_keyringController, _AuthenticationController_registerMessageHandlers, _AuthenticationController_assertLoggedIn, _AuthenticationController_performAuthenticationFlow, _AuthenticationController_hasValidSession, _AuthenticationController__snapPublicKeyCache, _AuthenticationController_snapGetPublicKey, _AuthenticationController__snapSignMessageCache, _AuthenticationController_snapSignMessage;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultState = void 0;\nconst base_controller_1 = require(\"@metamask/base-controller\");\nconst auth_snap_requests_1 = require(\"./auth-snap-requests.cjs\");\nconst services_1 = require(\"./services.cjs\");\nconst THIRTY_MIN_MS = 1000 * 60 * 30;\nconst controllerName = 'AuthenticationController';\nexports.defaultState = {\n    isSignedIn: false,\n};\nconst metadata = {\n    isSignedIn: {\n        persist: true,\n        anonymous: true,\n    },\n    sessionData: {\n        persist: true,\n        anonymous: false,\n    },\n};\n/**\n * Controller that enables authentication for restricted endpoints.\n * Used for Global Profile Syncing and Notifications\n */\nclass AuthenticationController extends base_controller_1.BaseController {\n    constructor({ messenger, state, metametrics, }) {\n        super({\n            messenger,\n            metadata,\n            name: controllerName,\n            state: { ...exports.defaultState, ...state },\n        });\n        _AuthenticationController_instances.add(this);\n        _AuthenticationController_metametrics.set(this, void 0);\n        _AuthenticationController_isUnlocked.set(this, false);\n        _AuthenticationController_keyringController.set(this, {\n            setupLockedStateSubscriptions: () => {\n                const { isUnlocked } = this.messagingSystem.call('KeyringController:getState');\n                __classPrivateFieldSet(this, _AuthenticationController_isUnlocked, isUnlocked, \"f\");\n                this.messagingSystem.subscribe('KeyringController:unlock', () => {\n                    __classPrivateFieldSet(this, _AuthenticationController_isUnlocked, true, \"f\");\n                });\n                this.messagingSystem.subscribe('KeyringController:lock', () => {\n                    __classPrivateFieldSet(this, _AuthenticationController_isUnlocked, false, \"f\");\n                });\n            },\n        });\n        _AuthenticationController__snapPublicKeyCache.set(this, void 0);\n        _AuthenticationController__snapSignMessageCache.set(this, {});\n        if (!metametrics) {\n            throw new Error('`metametrics` field is required');\n        }\n        __classPrivateFieldSet(this, _AuthenticationController_metametrics, metametrics, \"f\");\n        __classPrivateFieldGet(this, _AuthenticationController_keyringController, \"f\").setupLockedStateSubscriptions();\n        __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_registerMessageHandlers).call(this);\n    }\n    async performSignIn() {\n        const { accessToken } = await __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_performAuthenticationFlow).call(this);\n        return accessToken;\n    }\n    performSignOut() {\n        __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_assertLoggedIn).call(this);\n        this.update((state) => {\n            state.isSignedIn = false;\n            state.sessionData = undefined;\n        });\n    }\n    async getBearerToken() {\n        __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_assertLoggedIn).call(this);\n        if (__classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_hasValidSession).call(this, this.state.sessionData)) {\n            return this.state.sessionData.accessToken;\n        }\n        const { accessToken } = await __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_performAuthenticationFlow).call(this);\n        return accessToken;\n    }\n    /**\n     * Will return a session profile.\n     * Throws if a user is not logged in.\n     *\n     * @returns profile for the session.\n     */\n    async getSessionProfile() {\n        __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_assertLoggedIn).call(this);\n        if (__classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_hasValidSession).call(this, this.state.sessionData)) {\n            return this.state.sessionData.profile;\n        }\n        const { profile } = await __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_performAuthenticationFlow).call(this);\n        return profile;\n    }\n    isSignedIn() {\n        return this.state.isSignedIn;\n    }\n}\n_AuthenticationController_metametrics = new WeakMap(), _AuthenticationController_isUnlocked = new WeakMap(), _AuthenticationController_keyringController = new WeakMap(), _AuthenticationController__snapPublicKeyCache = new WeakMap(), _AuthenticationController__snapSignMessageCache = new WeakMap(), _AuthenticationController_instances = new WeakSet(), _AuthenticationController_registerMessageHandlers = function _AuthenticationController_registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler('AuthenticationController:getBearerToken', this.getBearerToken.bind(this));\n    this.messagingSystem.registerActionHandler('AuthenticationController:getSessionProfile', this.getSessionProfile.bind(this));\n    this.messagingSystem.registerActionHandler('AuthenticationController:isSignedIn', this.isSignedIn.bind(this));\n    this.messagingSystem.registerActionHandler('AuthenticationController:performSignIn', this.performSignIn.bind(this));\n    this.messagingSystem.registerActionHandler('AuthenticationController:performSignOut', this.performSignOut.bind(this));\n}, _AuthenticationController_assertLoggedIn = function _AuthenticationController_assertLoggedIn() {\n    if (!this.state.isSignedIn) {\n        throw new Error(`${controllerName}: Unable to call method, user is not authenticated`);\n    }\n}, _AuthenticationController_performAuthenticationFlow = async function _AuthenticationController_performAuthenticationFlow() {\n    try {\n        // 1. Nonce\n        const publicKey = await __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_snapGetPublicKey).call(this);\n        const nonce = await (0, services_1.getNonce)(publicKey);\n        if (!nonce) {\n            throw new Error(`Unable to get nonce`);\n        }\n        // 2. Login\n        const rawMessage = (0, services_1.createLoginRawMessage)(nonce, publicKey);\n        const signature = await __classPrivateFieldGet(this, _AuthenticationController_instances, \"m\", _AuthenticationController_snapSignMessage).call(this, rawMessage);\n        const loginResponse = await (0, services_1.login)(rawMessage, signature, {\n            metametricsId: await __classPrivateFieldGet(this, _AuthenticationController_metametrics, \"f\").getMetaMetricsId(),\n            agent: __classPrivateFieldGet(this, _AuthenticationController_metametrics, \"f\").agent,\n        });\n        if (!loginResponse?.token) {\n            throw new Error(`Unable to login`);\n        }\n        const profile = {\n            identifierId: loginResponse.profile.identifier_id,\n            profileId: loginResponse.profile.profile_id,\n        };\n        // 3. Trade for Access Token\n        const accessToken = await (0, services_1.getAccessToken)(loginResponse.token, __classPrivateFieldGet(this, _AuthenticationController_metametrics, \"f\").agent);\n        if (!accessToken) {\n            throw new Error(`Unable to get Access Token`);\n        }\n        // Update Internal State\n        this.update((state) => {\n            state.isSignedIn = true;\n            const expiresIn = new Date();\n            expiresIn.setTime(expiresIn.getTime() + THIRTY_MIN_MS);\n            state.sessionData = {\n                profile,\n                accessToken,\n                expiresIn: expiresIn.toString(),\n            };\n        });\n        return {\n            profile,\n            accessToken,\n        };\n    }\n    catch (e) {\n        console.error('Failed to authenticate', e);\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new Error(`${controllerName}: Failed to authenticate - ${errorMessage}`);\n    }\n}, _AuthenticationController_hasValidSession = function _AuthenticationController_hasValidSession(sessionData) {\n    if (!sessionData) {\n        return false;\n    }\n    const prevDate = Date.parse(sessionData.expiresIn);\n    if (isNaN(prevDate)) {\n        return false;\n    }\n    const currentDate = new Date();\n    const diffMs = Math.abs(currentDate.getTime() - prevDate);\n    return THIRTY_MIN_MS > diffMs;\n}, _AuthenticationController_snapGetPublicKey = \n/**\n * Returns the auth snap public key.\n *\n * @returns The snap public key.\n */\nasync function _AuthenticationController_snapGetPublicKey() {\n    if (__classPrivateFieldGet(this, _AuthenticationController__snapPublicKeyCache, \"f\")) {\n        return __classPrivateFieldGet(this, _AuthenticationController__snapPublicKeyCache, \"f\");\n    }\n    if (!__classPrivateFieldGet(this, _AuthenticationController_isUnlocked, \"f\")) {\n        throw new Error('#snapGetPublicKey - unable to call snap, wallet is locked');\n    }\n    const result = (await this.messagingSystem.call('SnapController:handleRequest', (0, auth_snap_requests_1.createSnapPublicKeyRequest)()));\n    __classPrivateFieldSet(this, _AuthenticationController__snapPublicKeyCache, result, \"f\");\n    return result;\n}, _AuthenticationController_snapSignMessage = \n/**\n * Signs a specific message using an underlying auth snap.\n *\n * @param message - A specific tagged message to sign.\n * @returns A Signature created by the snap.\n */\nasync function _AuthenticationController_snapSignMessage(message) {\n    if (__classPrivateFieldGet(this, _AuthenticationController__snapSignMessageCache, \"f\")[message]) {\n        return __classPrivateFieldGet(this, _AuthenticationController__snapSignMessageCache, \"f\")[message];\n    }\n    if (!__classPrivateFieldGet(this, _AuthenticationController_isUnlocked, \"f\")) {\n        throw new Error('#snapSignMessage - unable to call snap, wallet is locked');\n    }\n    const result = (await this.messagingSystem.call('SnapController:handleRequest', (0, auth_snap_requests_1.createSnapSignMessageRequest)(message)));\n    __classPrivateFieldGet(this, _AuthenticationController__snapSignMessageCache, \"f\")[message] = result;\n    return result;\n};\nexports.default = AuthenticationController;\n//# sourceMappingURL=AuthenticationController.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./mockResponses.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMockAuthAccessTokenResponse = exports.MOCK_OATH_TOKEN_RESPONSE = exports.MOCK_ACCESS_TOKEN = exports.getMockAuthLoginResponse = exports.MOCK_LOGIN_RESPONSE = exports.MOCK_JWT = exports.getMockAuthNonceResponse = exports.MOCK_NONCE_RESPONSE = exports.MOCK_NONCE = void 0;\nconst services_1 = require(\"../services.cjs\");\nexports.MOCK_NONCE = '4cbfqzoQpcNxVImGv';\nexports.MOCK_NONCE_RESPONSE = {\n    nonce: exports.MOCK_NONCE,\n};\nconst getMockAuthNonceResponse = () => {\n    return {\n        url: services_1.AUTH_NONCE_ENDPOINT,\n        requestMethod: 'GET',\n        response: exports.MOCK_NONCE_RESPONSE,\n    };\n};\nexports.getMockAuthNonceResponse = getMockAuthNonceResponse;\nexports.MOCK_JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c';\nexports.MOCK_LOGIN_RESPONSE = {\n    token: exports.MOCK_JWT,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    expires_in: new Date().toString(),\n    profile: {\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        identifier_id: 'MOCK_IDENTIFIER',\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        profile_id: 'MOCK_PROFILE_ID',\n    },\n};\nconst getMockAuthLoginResponse = () => {\n    return {\n        url: services_1.AUTH_LOGIN_ENDPOINT,\n        requestMethod: 'POST',\n        response: exports.MOCK_LOGIN_RESPONSE,\n    };\n};\nexports.getMockAuthLoginResponse = getMockAuthLoginResponse;\nexports.MOCK_ACCESS_TOKEN = `MOCK_ACCESS_TOKEN-${exports.MOCK_JWT}`;\nexports.MOCK_OATH_TOKEN_RESPONSE = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    access_token: exports.MOCK_ACCESS_TOKEN,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    expires_in: new Date().getTime(),\n};\nconst getMockAuthAccessTokenResponse = () => {\n    return {\n        url: services_1.OIDC_TOKENS_ENDPOINT,\n        requestMethod: 'POST',\n        response: exports.MOCK_OATH_TOKEN_RESPONSE,\n    };\n};\nexports.getMockAuthAccessTokenResponse = getMockAuthAccessTokenResponse;\n//# sourceMappingURL=mockResponses.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSnapSignMessageRequest = exports.createSnapPublicKeyRequest = void 0;\nconst snapId = 'npm:@metamask/message-signing-snap';\n/**\n * Constructs Request to Message Signing Snap to get Public Key\n *\n * @returns Snap Public Key Request\n */\nfunction createSnapPublicKeyRequest() {\n    return {\n        snapId,\n        origin: '',\n        handler: 'onRpcRequest',\n        request: {\n            method: 'getPublicKey',\n        },\n    };\n}\nexports.createSnapPublicKeyRequest = createSnapPublicKeyRequest;\n/**\n * Constructs Request to get Message Signing Snap to sign a message.\n *\n * @param message - message to sign\n * @returns Snap Sign Message Request\n */\nfunction createSnapSignMessageRequest(message) {\n    return {\n        snapId,\n        origin: '',\n        handler: 'onRpcRequest',\n        request: {\n            method: 'signMessage',\n            params: { message },\n        },\n    };\n}\nexports.createSnapSignMessageRequest = createSnapSignMessageRequest;\n//# sourceMappingURL=auth-snap-requests.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mocks = exports.Controller = void 0;\nconst AuthenticationController_1 = __importDefault(require(\"./AuthenticationController.cjs\"));\nexports.Controller = AuthenticationController_1.default;\nconst AuthenticationController = AuthenticationController_1.default;\nexports.default = AuthenticationController;\n__exportStar(require(\"./AuthenticationController.cjs\"), exports);\nexports.Mocks = __importStar(require(\"./__fixtures__/index.cjs\"));\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLoginRawMessage = exports.getAccessToken = exports.login = exports.getNonce = exports.OIDC_TOKENS_ENDPOINT = exports.AUTH_LOGIN_ENDPOINT = exports.AUTH_NONCE_ENDPOINT = void 0;\nconst env_1 = require(\"../../sdk/env.cjs\");\nconst ENV_URLS = (0, env_1.getEnvUrls)(env_1.Env.PRD);\nconst AUTH_ENDPOINT = ENV_URLS.authApiUrl;\nexports.AUTH_NONCE_ENDPOINT = `${AUTH_ENDPOINT}/api/v2/nonce`;\nexports.AUTH_LOGIN_ENDPOINT = `${AUTH_ENDPOINT}/api/v2/srp/login`;\nconst OIDC_ENDPOINT = ENV_URLS.oidcApiUrl || '';\nexports.OIDC_TOKENS_ENDPOINT = `${OIDC_ENDPOINT}/oauth2/token`;\nconst OIDC_CLIENT_ID = (platform) => {\n    if (platform === 'extension') {\n        return (0, env_1.getOidcClientId)(env_1.Env.PRD, env_1.Platform.EXTENSION);\n    }\n    if (platform === 'mobile') {\n        return (0, env_1.getOidcClientId)(env_1.Env.PRD, env_1.Platform.MOBILE);\n    }\n    throw new Error(`Unsupported platform - ${platform}`);\n};\nconst OIDC_GRANT_TYPE = 'urn:ietf:params:oauth:grant-type:jwt-bearer';\n/**\n * Auth Service - Get Nonce. Used for the initial JWTBearer flow\n *\n * @param publicKey - public key to associate a nonce with\n * @returns the nonce or null if failed\n */\nasync function getNonce(publicKey) {\n    const nonceUrl = new URL(exports.AUTH_NONCE_ENDPOINT);\n    nonceUrl.searchParams.set('identifier', publicKey);\n    try {\n        const nonceResponse = await fetch(nonceUrl.toString());\n        if (!nonceResponse.ok) {\n            return null;\n        }\n        const nonceJson = await nonceResponse.json();\n        return nonceJson?.nonce ?? null;\n    }\n    catch (e) {\n        console.error('authentication-controller/services: unable to get nonce', e);\n        return null;\n    }\n}\nexports.getNonce = getNonce;\n/**\n * Auth Service - Login. Will perform login with a given signature and will return a single use JWT Token.\n *\n * @param rawMessage - the original message before signing\n * @param signature - the signed message\n * @param clientMetaMetrics - optional client metametrics id (to associate on backend)\n * @returns The Login Response\n */\nasync function login(rawMessage, signature, clientMetaMetrics) {\n    try {\n        const response = await fetch(exports.AUTH_LOGIN_ENDPOINT, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                signature,\n                // eslint-disable-next-line @typescript-eslint/naming-convention\n                raw_message: rawMessage,\n                metametrics: {\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    metametrics_id: clientMetaMetrics.metametricsId,\n                    agent: clientMetaMetrics.agent,\n                },\n            }),\n        });\n        if (!response.ok) {\n            return null;\n        }\n        const loginResponse = await response.json();\n        return loginResponse ?? null;\n    }\n    catch (e) {\n        console.error('authentication-controller/services: unable to login', e);\n        return null;\n    }\n}\nexports.login = login;\n/**\n * OIDC Service - Access Token. Trades the Auth Token for an access token (to be used for other authenticated endpoints)\n * NOTE - the access token is short lived, which means it is best practice to validate session before calling authenticated endpoints\n *\n * @param jwtToken - the JWT Auth Token, received from `/login`\n * @param platform - the OIDC platform to retrieve access token\n * @returns JWT Access token to store and use on authorized endpoints.\n */\nasync function getAccessToken(jwtToken, platform) {\n    const headers = new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    const urlEncodedBody = new URLSearchParams();\n    urlEncodedBody.append('grant_type', OIDC_GRANT_TYPE);\n    urlEncodedBody.append('client_id', OIDC_CLIENT_ID(platform));\n    urlEncodedBody.append('assertion', jwtToken);\n    try {\n        const response = await fetch(exports.OIDC_TOKENS_ENDPOINT, {\n            method: 'POST',\n            headers,\n            body: urlEncodedBody.toString(),\n        });\n        if (!response.ok) {\n            return null;\n        }\n        const accessTokenResponse = await response.json();\n        return accessTokenResponse?.access_token ?? null;\n    }\n    catch (e) {\n        console.error('authentication-controller/services: unable to get access token', e);\n        return null;\n    }\n}\nexports.getAccessToken = getAccessToken;\n/**\n * Utility to create the raw login message for the JWT bearer flow (via SRP)\n *\n * @param nonce - nonce received from `/nonce` endpoint\n * @param publicKey - public key used to retrieve nonce and for message signing\n * @returns Raw Message which will be used for signing & logging in.\n */\nfunction createLoginRawMessage(nonce, publicKey) {\n    return `metamask:${nonce}:${publicKey}`;\n}\nexports.createLoginRawMessage = createLoginRawMessage;\n//# sourceMappingURL=services.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _UserStorageController_instances, _UserStorageController_auth, _UserStorageController_accounts, _UserStorageController_config, _UserStorageController_notificationServices, _UserStorageController_isUnlocked, _UserStorageController_keyringController, _UserStorageController_nativeScryptCrypto, _UserStorageController_registerMessageHandlers, _UserStorageController_assertProfileSyncingEnabled, _UserStorageController_getStorageKeyAndBearerToken, _UserStorageController_createStorageKey, _UserStorageController__snapSignMessageCache, _UserStorageController_snapSignMessage, _UserStorageController_setIsProfileSyncingUpdateLoading;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultState = void 0;\nconst base_controller_1 = require(\"@metamask/base-controller\");\nconst auth_snap_requests_1 = require(\"../authentication/auth-snap-requests.cjs\");\nconst user_storage_1 = require(\"./accounts/user-storage.cjs\");\nconst encryption_1 = require(\"./encryption/index.cjs\");\nconst controller_integration_1 = require(\"./network-syncing/controller-integration.cjs\");\nconst services_1 = require(\"./services.cjs\");\nconst controllerName = 'UserStorageController';\nexports.defaultState = {\n    isProfileSyncingEnabled: true,\n    isProfileSyncingUpdateLoading: false,\n};\nconst metadata = {\n    isProfileSyncingEnabled: {\n        persist: true,\n        anonymous: true,\n    },\n    isProfileSyncingUpdateLoading: {\n        persist: false,\n        anonymous: false,\n    },\n};\n/**\n * Reusable controller that allows any team to store synchronized data for a given user.\n * These can be settings shared cross MetaMask clients, or data we want to persist when uninstalling/reinstalling.\n *\n * NOTE:\n * - data stored on UserStorage is FULLY encrypted, with the only keys stored/managed on the client.\n * - No one can access this data unless they are have the SRP and are able to run the signing snap.\n */\nclass UserStorageController extends base_controller_1.BaseController {\n    constructor({ messenger, state, env, config, getMetaMetricsState, nativeScryptCrypto, }) {\n        super({\n            messenger,\n            metadata,\n            name: controllerName,\n            state: { ...exports.defaultState, ...state },\n        });\n        _UserStorageController_instances.add(this);\n        _UserStorageController_auth.set(this, {\n            getBearerToken: async () => {\n                return await this.messagingSystem.call('AuthenticationController:getBearerToken');\n            },\n            getProfileId: async () => {\n                const sessionProfile = await this.messagingSystem.call('AuthenticationController:getSessionProfile');\n                return sessionProfile?.profileId;\n            },\n            isAuthEnabled: () => {\n                return this.messagingSystem.call('AuthenticationController:isSignedIn');\n            },\n            signIn: async () => {\n                return await this.messagingSystem.call('AuthenticationController:performSignIn');\n            },\n            signOut: async () => {\n                return this.messagingSystem.call('AuthenticationController:performSignOut');\n            },\n        });\n        _UserStorageController_accounts.set(this, {\n            // This is replaced with the actual value in the constructor\n            // We will remove this once the feature will be released\n            isAccountSyncingEnabled: false,\n            isAccountSyncingInProgress: false,\n            canSync: () => {\n                try {\n                    __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_assertProfileSyncingEnabled).call(this);\n                    return (__classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").isAccountSyncingEnabled && __classPrivateFieldGet(this, _UserStorageController_auth, \"f\").isAuthEnabled());\n                }\n                catch {\n                    return false;\n                }\n            },\n            setupAccountSyncingSubscriptions: () => {\n                this.messagingSystem.subscribe('AccountsController:accountAdded', \n                // eslint-disable-next-line @typescript-eslint/no-misused-promises\n                async (account) => {\n                    if (__classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").isAccountSyncingInProgress) {\n                        return;\n                    }\n                    await this.saveInternalAccountToUserStorage(account);\n                });\n                this.messagingSystem.subscribe('AccountsController:accountRenamed', \n                // eslint-disable-next-line @typescript-eslint/no-misused-promises\n                async (account) => {\n                    if (__classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").isAccountSyncingInProgress) {\n                        return;\n                    }\n                    await this.saveInternalAccountToUserStorage(account);\n                });\n            },\n            getInternalAccountsList: async () => {\n                return this.messagingSystem.call('AccountsController:listAccounts');\n            },\n            getUserStorageAccountsList: async () => {\n                const rawAccountsListResponse = await this.performGetStorageAllFeatureEntries('accounts');\n                return (rawAccountsListResponse?.map((rawAccount) => JSON.parse(rawAccount)) ??\n                    null);\n            },\n            saveInternalAccountToUserStorage: async (internalAccount) => {\n                // Map the internal account to the user storage account schema\n                const mappedAccount = (0, user_storage_1.mapInternalAccountToUserStorageAccount)(internalAccount);\n                await this.performSetStorage(`accounts.${internalAccount.address}`, JSON.stringify(mappedAccount));\n            },\n            saveInternalAccountsListToUserStorage: async () => {\n                const internalAccountsList = await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").getInternalAccountsList();\n                if (!internalAccountsList) {\n                    return;\n                }\n                const userStorageAccountsList = internalAccountsList.map(user_storage_1.mapInternalAccountToUserStorageAccount);\n                await Promise.all(userStorageAccountsList.map(async (userStorageAccount) => {\n                    await this.performSetStorage(`accounts.${userStorageAccount.a}`, JSON.stringify(userStorageAccount));\n                }));\n            },\n        });\n        _UserStorageController_config.set(this, void 0);\n        _UserStorageController_notificationServices.set(this, {\n            disableNotificationServices: async () => {\n                return await this.messagingSystem.call('NotificationServicesController:disableNotificationServices');\n            },\n            selectIsNotificationServicesEnabled: async () => {\n                return this.messagingSystem.call('NotificationServicesController:selectIsNotificationServicesEnabled');\n            },\n        });\n        _UserStorageController_isUnlocked.set(this, false);\n        _UserStorageController_keyringController.set(this, {\n            setupLockedStateSubscriptions: () => {\n                const { isUnlocked } = this.messagingSystem.call('KeyringController:getState');\n                __classPrivateFieldSet(this, _UserStorageController_isUnlocked, isUnlocked, \"f\");\n                this.messagingSystem.subscribe('KeyringController:unlock', () => {\n                    __classPrivateFieldSet(this, _UserStorageController_isUnlocked, true, \"f\");\n                });\n                this.messagingSystem.subscribe('KeyringController:lock', () => {\n                    __classPrivateFieldSet(this, _UserStorageController_isUnlocked, false, \"f\");\n                });\n            },\n        });\n        _UserStorageController_nativeScryptCrypto.set(this, undefined);\n        _UserStorageController__snapSignMessageCache.set(this, {});\n        __classPrivateFieldSet(this, _UserStorageController_config, config, \"f\");\n        __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").isAccountSyncingEnabled = Boolean(env?.isAccountSyncingEnabled);\n        this.getMetaMetricsState = getMetaMetricsState;\n        __classPrivateFieldGet(this, _UserStorageController_keyringController, \"f\").setupLockedStateSubscriptions();\n        __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_registerMessageHandlers).call(this);\n        __classPrivateFieldSet(this, _UserStorageController_nativeScryptCrypto, nativeScryptCrypto, \"f\");\n        __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").setupAccountSyncingSubscriptions();\n        // Network Syncing\n        if (env?.isNetworkSyncingEnabled) {\n            (0, controller_integration_1.startNetworkSyncing)({\n                messenger,\n                getStorageConfig: async () => {\n                    const { storageKey, bearerToken } = await __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_getStorageKeyAndBearerToken).call(this);\n                    return {\n                        storageKey,\n                        bearerToken,\n                        nativeScryptCrypto: __classPrivateFieldGet(this, _UserStorageController_nativeScryptCrypto, \"f\"),\n                    };\n                },\n            });\n        }\n    }\n    async enableProfileSyncing() {\n        try {\n            __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_setIsProfileSyncingUpdateLoading).call(this, true);\n            const authEnabled = __classPrivateFieldGet(this, _UserStorageController_auth, \"f\").isAuthEnabled();\n            if (!authEnabled) {\n                await __classPrivateFieldGet(this, _UserStorageController_auth, \"f\").signIn();\n            }\n            this.update((state) => {\n                state.isProfileSyncingEnabled = true;\n            });\n            __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_setIsProfileSyncingUpdateLoading).call(this, false);\n        }\n        catch (e) {\n            __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_setIsProfileSyncingUpdateLoading).call(this, false);\n            const errorMessage = e instanceof Error ? e.message : JSON.stringify(e);\n            throw new Error(`${controllerName} - failed to enable profile syncing - ${errorMessage}`);\n        }\n    }\n    async setIsProfileSyncingEnabled(isProfileSyncingEnabled) {\n        this.update((state) => {\n            state.isProfileSyncingEnabled = isProfileSyncingEnabled;\n        });\n    }\n    async disableProfileSyncing() {\n        const isAlreadyDisabled = !this.state.isProfileSyncingEnabled;\n        if (isAlreadyDisabled) {\n            return;\n        }\n        try {\n            __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_setIsProfileSyncingUpdateLoading).call(this, true);\n            const isNotificationServicesEnabled = await __classPrivateFieldGet(this, _UserStorageController_notificationServices, \"f\").selectIsNotificationServicesEnabled();\n            if (isNotificationServicesEnabled) {\n                await __classPrivateFieldGet(this, _UserStorageController_notificationServices, \"f\").disableNotificationServices();\n            }\n            const isMetaMetricsParticipation = this.getMetaMetricsState();\n            if (!isMetaMetricsParticipation) {\n                await __classPrivateFieldGet(this, _UserStorageController_auth, \"f\").signOut();\n            }\n            __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_setIsProfileSyncingUpdateLoading).call(this, false);\n            this.update((state) => {\n                state.isProfileSyncingEnabled = false;\n            });\n        }\n        catch (e) {\n            __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_setIsProfileSyncingUpdateLoading).call(this, false);\n            const errorMessage = e instanceof Error ? e.message : JSON.stringify(e);\n            throw new Error(`${controllerName} - failed to disable profile syncing - ${errorMessage}`);\n        }\n    }\n    /**\n     * Allows retrieval of stored data. Data stored is string formatted.\n     * Developers can extend the entry path and entry name through the `schema.ts` file.\n     *\n     * @param path - string in the form of `${feature}.${key}` that matches schema\n     * @returns the decrypted string contents found from user storage (or null if not found)\n     */\n    async performGetStorage(path) {\n        __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_assertProfileSyncingEnabled).call(this);\n        const { bearerToken, storageKey } = await __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_getStorageKeyAndBearerToken).call(this);\n        const result = await (0, services_1.getUserStorage)({\n            path,\n            bearerToken,\n            storageKey,\n            nativeScryptCrypto: __classPrivateFieldGet(this, _UserStorageController_nativeScryptCrypto, \"f\"),\n        });\n        return result;\n    }\n    /**\n     * Allows retrieval of all stored data for a specific feature. Data stored is formatted as an array of strings.\n     * Developers can extend the entry path through the `schema.ts` file.\n     *\n     * @param path - string in the form of `${feature}` that matches schema\n     * @returns the array of decrypted string contents found from user storage (or null if not found)\n     */\n    async performGetStorageAllFeatureEntries(path) {\n        __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_assertProfileSyncingEnabled).call(this);\n        const { bearerToken, storageKey } = await __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_getStorageKeyAndBearerToken).call(this);\n        const result = await (0, services_1.getUserStorageAllFeatureEntries)({\n            path,\n            bearerToken,\n            storageKey,\n            nativeScryptCrypto: __classPrivateFieldGet(this, _UserStorageController_nativeScryptCrypto, \"f\"),\n        });\n        return result;\n    }\n    /**\n     * Allows storage of user data. Data stored must be string formatted.\n     * Developers can extend the entry path and entry name through the `schema.ts` file.\n     *\n     * @param path - string in the form of `${feature}.${key}` that matches schema\n     * @param value - The string data you want to store.\n     * @returns nothing. NOTE that an error is thrown if fails to store data.\n     */\n    async performSetStorage(path, value) {\n        __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_assertProfileSyncingEnabled).call(this);\n        const { bearerToken, storageKey } = await __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_getStorageKeyAndBearerToken).call(this);\n        await (0, services_1.upsertUserStorage)(value, {\n            path,\n            bearerToken,\n            storageKey,\n            nativeScryptCrypto: __classPrivateFieldGet(this, _UserStorageController_nativeScryptCrypto, \"f\"),\n        });\n    }\n    /**\n     * Retrieves the storage key, for internal use only!\n     *\n     * @returns the storage key\n     */\n    async getStorageKey() {\n        __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_assertProfileSyncingEnabled).call(this);\n        const storageKey = await __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_createStorageKey).call(this);\n        return storageKey;\n    }\n    /**\n     * Syncs the internal accounts list with the user storage accounts list.\n     * This method is used to make sure that the internal accounts list is up-to-date with the user storage accounts list and vice-versa.\n     * It will add new accounts to the internal accounts list, update/merge conflicting names and re-upload the results in some cases to the user storage.\n     */\n    async syncInternalAccountsWithUserStorage() {\n        if (!__classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").canSync()) {\n            return;\n        }\n        try {\n            __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").isAccountSyncingInProgress = true;\n            const profileId = await __classPrivateFieldGet(this, _UserStorageController_auth, \"f\").getProfileId();\n            const userStorageAccountsList = await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").getUserStorageAccountsList();\n            if (!userStorageAccountsList || !userStorageAccountsList.length) {\n                await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").saveInternalAccountsListToUserStorage();\n                return;\n            }\n            // Compare internal accounts list with user storage accounts list\n            // First step: compare lengths\n            let internalAccountsList = await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").getInternalAccountsList();\n            if (!internalAccountsList || !internalAccountsList.length) {\n                throw new Error(`Failed to get internal accounts list`);\n            }\n            const hasMoreInternalAccountsThanUserStorageAccounts = internalAccountsList.length > userStorageAccountsList.length;\n            // We don't want to remove existing accounts for a user\n            // so we only add new accounts if the user has more accounts than the internal accounts list\n            if (!hasMoreInternalAccountsThanUserStorageAccounts) {\n                const numberOfAccountsToAdd = userStorageAccountsList.length - internalAccountsList.length;\n                // Create new accounts to match the user storage accounts list\n                const addNewAccountsPromises = Array.from({\n                    length: numberOfAccountsToAdd,\n                }).map(async () => {\n                    await this.messagingSystem.call('KeyringController:addNewAccount');\n                    __classPrivateFieldGet(this, _UserStorageController_config, \"f\")?.accountSyncing?.onAccountAdded?.(profileId);\n                });\n                await Promise.all(addNewAccountsPromises);\n            }\n            // Second step: compare account names\n            // Get the internal accounts list again since new accounts might have been added in the previous step\n            internalAccountsList = await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").getInternalAccountsList();\n            for await (const internalAccount of internalAccountsList) {\n                const userStorageAccount = userStorageAccountsList.find((account) => account.a === internalAccount.address);\n                if (!userStorageAccount) {\n                    await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").saveInternalAccountToUserStorage(internalAccount);\n                    continue;\n                }\n                // One or both accounts have default names\n                const isInternalAccountNameDefault = (0, user_storage_1.isNameDefaultAccountName)(internalAccount.metadata.name);\n                const isUserStorageAccountNameDefault = (0, user_storage_1.isNameDefaultAccountName)(userStorageAccount.n);\n                // Internal account has default name\n                if (isInternalAccountNameDefault) {\n                    if (!isUserStorageAccountNameDefault) {\n                        this.messagingSystem.call('AccountsController:updateAccountMetadata', internalAccount.id, {\n                            name: userStorageAccount.n,\n                        });\n                        __classPrivateFieldGet(this, _UserStorageController_config, \"f\")?.accountSyncing?.onAccountNameUpdated?.(profileId);\n                    }\n                    continue;\n                }\n                // Internal account has custom name but user storage account has default name\n                if (isUserStorageAccountNameDefault) {\n                    await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").saveInternalAccountToUserStorage(internalAccount);\n                    continue;\n                }\n                // Both accounts have custom names\n                // User storage account has a nameLastUpdatedAt timestamp\n                // Note: not storing the undefined checks in constants to act as a type guard\n                if (userStorageAccount.nlu !== undefined) {\n                    if (internalAccount.metadata.nameLastUpdatedAt !== undefined) {\n                        const isInternalAccountNameNewer = internalAccount.metadata.nameLastUpdatedAt >\n                            userStorageAccount.nlu;\n                        if (isInternalAccountNameNewer) {\n                            await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").saveInternalAccountToUserStorage(internalAccount);\n                            continue;\n                        }\n                    }\n                    this.messagingSystem.call('AccountsController:updateAccountMetadata', internalAccount.id, {\n                        name: userStorageAccount.n,\n                        nameLastUpdatedAt: userStorageAccount.nlu,\n                    });\n                    __classPrivateFieldGet(this, _UserStorageController_config, \"f\")?.accountSyncing?.onAccountNameUpdated?.(profileId);\n                    continue;\n                }\n                else if (internalAccount.metadata.nameLastUpdatedAt !== undefined) {\n                    await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").saveInternalAccountToUserStorage(internalAccount);\n                    continue;\n                }\n            }\n        }\n        catch (e) {\n            const errorMessage = e instanceof Error ? e.message : JSON.stringify(e);\n            throw new Error(`${controllerName} - failed to sync user storage accounts list - ${errorMessage}`);\n        }\n        finally {\n            __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").isAccountSyncingInProgress = false;\n        }\n    }\n    /**\n     * Saves an individual internal account to the user storage.\n     * @param internalAccount - The internal account to save\n     */\n    async saveInternalAccountToUserStorage(internalAccount) {\n        if (!__classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").canSync()) {\n            return;\n        }\n        try {\n            await __classPrivateFieldGet(this, _UserStorageController_accounts, \"f\").saveInternalAccountToUserStorage(internalAccount);\n        }\n        catch (e) {\n            const errorMessage = e instanceof Error ? e.message : JSON.stringify(e);\n            throw new Error(`${controllerName} - failed to save account to user storage - ${errorMessage}`);\n        }\n    }\n}\n_UserStorageController_auth = new WeakMap(), _UserStorageController_accounts = new WeakMap(), _UserStorageController_config = new WeakMap(), _UserStorageController_notificationServices = new WeakMap(), _UserStorageController_isUnlocked = new WeakMap(), _UserStorageController_keyringController = new WeakMap(), _UserStorageController_nativeScryptCrypto = new WeakMap(), _UserStorageController__snapSignMessageCache = new WeakMap(), _UserStorageController_instances = new WeakSet(), _UserStorageController_registerMessageHandlers = function _UserStorageController_registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler('UserStorageController:performGetStorage', this.performGetStorage.bind(this));\n    this.messagingSystem.registerActionHandler('UserStorageController:performGetStorageAllFeatureEntries', this.performGetStorageAllFeatureEntries.bind(this));\n    this.messagingSystem.registerActionHandler('UserStorageController:performSetStorage', this.performSetStorage.bind(this));\n    this.messagingSystem.registerActionHandler('UserStorageController:getStorageKey', this.getStorageKey.bind(this));\n    this.messagingSystem.registerActionHandler('UserStorageController:enableProfileSyncing', this.enableProfileSyncing.bind(this));\n    this.messagingSystem.registerActionHandler('UserStorageController:disableProfileSyncing', this.disableProfileSyncing.bind(this));\n    this.messagingSystem.registerActionHandler('UserStorageController:syncInternalAccountsWithUserStorage', this.syncInternalAccountsWithUserStorage.bind(this));\n    this.messagingSystem.registerActionHandler('UserStorageController:saveInternalAccountToUserStorage', this.saveInternalAccountToUserStorage.bind(this));\n}, _UserStorageController_assertProfileSyncingEnabled = function _UserStorageController_assertProfileSyncingEnabled() {\n    if (!this.state.isProfileSyncingEnabled) {\n        throw new Error(`${controllerName}: Unable to call method, user is not authenticated`);\n    }\n}, _UserStorageController_getStorageKeyAndBearerToken = \n/**\n * Utility to get the bearer token and storage key\n */\nasync function _UserStorageController_getStorageKeyAndBearerToken() {\n    const bearerToken = await __classPrivateFieldGet(this, _UserStorageController_auth, \"f\").getBearerToken();\n    if (!bearerToken) {\n        throw new Error('UserStorageController - unable to get bearer token');\n    }\n    const storageKey = await __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_createStorageKey).call(this);\n    return { bearerToken, storageKey };\n}, _UserStorageController_createStorageKey = \n/**\n * Rather than storing the storage key, we can compute the storage key when needed.\n *\n * @returns the storage key\n */\nasync function _UserStorageController_createStorageKey() {\n    const id = await __classPrivateFieldGet(this, _UserStorageController_auth, \"f\").getProfileId();\n    if (!id) {\n        throw new Error('UserStorageController - unable to create storage key');\n    }\n    const storageKeySignature = await __classPrivateFieldGet(this, _UserStorageController_instances, \"m\", _UserStorageController_snapSignMessage).call(this, `metamask:${id}`);\n    const storageKey = (0, encryption_1.createSHA256Hash)(storageKeySignature);\n    return storageKey;\n}, _UserStorageController_snapSignMessage = \n/**\n * Signs a specific message using an underlying auth snap.\n *\n * @param message - A specific tagged message to sign.\n * @returns A Signature created by the snap.\n */\nasync function _UserStorageController_snapSignMessage(message) {\n    if (__classPrivateFieldGet(this, _UserStorageController__snapSignMessageCache, \"f\")[message]) {\n        return __classPrivateFieldGet(this, _UserStorageController__snapSignMessageCache, \"f\")[message];\n    }\n    if (!__classPrivateFieldGet(this, _UserStorageController_isUnlocked, \"f\")) {\n        throw new Error('#snapSignMessage - unable to call snap, wallet is locked');\n    }\n    const result = (await this.messagingSystem.call('SnapController:handleRequest', (0, auth_snap_requests_1.createSnapSignMessageRequest)(message)));\n    __classPrivateFieldGet(this, _UserStorageController__snapSignMessageCache, \"f\")[message] = result;\n    return result;\n}, _UserStorageController_setIsProfileSyncingUpdateLoading = function _UserStorageController_setIsProfileSyncingUpdateLoading(isProfileSyncingUpdateLoading) {\n    this.update((state) => {\n        state.isProfileSyncingUpdateLoading = isProfileSyncingUpdateLoading;\n    });\n};\nexports.default = UserStorageController;\n//# sourceMappingURL=UserStorageController.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./mockResponses.cjs\"), exports);\n__exportStar(require(\"./mockStorage.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMockUserStoragePutResponse = exports.getMockUserStorageAllFeatureEntriesResponse = exports.getMockUserStorageGetResponse = exports.createMockAllFeatureEntriesResponse = exports.createMockGetStorageResponse = exports.getMockUserStorageEndpoint = void 0;\nconst schema_1 = require(\"../schema.cjs\");\nconst services_1 = require(\"../services.cjs\");\nconst mockStorage_1 = require(\"./mockStorage.cjs\");\nconst getMockUserStorageEndpoint = (path) => {\n    if (path.split('.').length === 1) {\n        return `${services_1.USER_STORAGE_ENDPOINT}/${path}`;\n    }\n    return `${services_1.USER_STORAGE_ENDPOINT}/${(0, schema_1.createEntryPath)(path, mockStorage_1.MOCK_STORAGE_KEY)}`;\n};\nexports.getMockUserStorageEndpoint = getMockUserStorageEndpoint;\nconst createMockGetStorageResponse = async (data) => ({\n    HashedKey: 'HASHED_KEY',\n    Data: await (0, mockStorage_1.MOCK_ENCRYPTED_STORAGE_DATA)(data),\n});\nexports.createMockGetStorageResponse = createMockGetStorageResponse;\nconst createMockAllFeatureEntriesResponse = async (dataArr = [mockStorage_1.MOCK_STORAGE_DATA]) => Promise.all(dataArr.map(async (d) => ({\n    HashedKey: 'HASHED_KEY',\n    Data: await (0, mockStorage_1.MOCK_ENCRYPTED_STORAGE_DATA)(d),\n})));\nexports.createMockAllFeatureEntriesResponse = createMockAllFeatureEntriesResponse;\nconst getMockUserStorageGetResponse = async (path = 'notifications.notification_settings') => {\n    return {\n        url: (0, exports.getMockUserStorageEndpoint)(path),\n        requestMethod: 'GET',\n        response: await (0, exports.createMockGetStorageResponse)(),\n    };\n};\nexports.getMockUserStorageGetResponse = getMockUserStorageGetResponse;\nconst getMockUserStorageAllFeatureEntriesResponse = async (path = 'notifications', dataArr) => {\n    return {\n        url: (0, exports.getMockUserStorageEndpoint)(path),\n        requestMethod: 'GET',\n        response: await (0, exports.createMockAllFeatureEntriesResponse)(dataArr),\n    };\n};\nexports.getMockUserStorageAllFeatureEntriesResponse = getMockUserStorageAllFeatureEntriesResponse;\nconst getMockUserStoragePutResponse = (path = 'notifications.notification_settings') => {\n    return {\n        url: (0, exports.getMockUserStorageEndpoint)(path),\n        requestMethod: 'PUT',\n        response: null,\n    };\n};\nexports.getMockUserStoragePutResponse = getMockUserStoragePutResponse;\n//# sourceMappingURL=mockResponses.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MOCK_ENCRYPTED_STORAGE_DATA = exports.MOCK_STORAGE_DATA = exports.MOCK_STORAGE_KEY = exports.MOCK_STORAGE_KEY_SIGNATURE = void 0;\nconst encryption_1 = __importStar(require(\"../encryption/index.cjs\"));\nexports.MOCK_STORAGE_KEY_SIGNATURE = 'mockStorageKey';\nexports.MOCK_STORAGE_KEY = (0, encryption_1.createSHA256Hash)(exports.MOCK_STORAGE_KEY_SIGNATURE);\nexports.MOCK_STORAGE_DATA = JSON.stringify({ hello: 'world' });\n// NOTE - using encryption.encryptString directly in fixtures causes issues on mobile.\n// This is because this fixture is getting added in at run time. Will be improved once we support multiple exports\nlet cachedMockEncryptedData;\nconst MOCK_ENCRYPTED_STORAGE_DATA = async (data) => (cachedMockEncryptedData ?? (cachedMockEncryptedData = await encryption_1.default.encryptString(data ?? exports.MOCK_STORAGE_DATA, exports.MOCK_STORAGE_KEY)));\nexports.MOCK_ENCRYPTED_STORAGE_DATA = MOCK_ENCRYPTED_STORAGE_DATA;\n//# sourceMappingURL=mockStorage.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LOCALIZED_DEFAULT_ACCOUNT_NAMES = exports.USER_STORAGE_VERSION_KEY = exports.USER_STORAGE_VERSION = void 0;\nexports.USER_STORAGE_VERSION = '1';\n// Force cast. We don't really care about the type here since we treat it as a unique symbol\nexports.USER_STORAGE_VERSION_KEY = 'v';\n// We need this in order to know if an account is a default account or not when we do account syncing\nexports.LOCALIZED_DEFAULT_ACCOUNT_NAMES = [\n    'Account',\n    'መለያ',\n    'الحساب',\n    'Профил',\n    'অ্যাকাউন্ট',\n    'Compte',\n    'Účet',\n    'Konto',\n    'Λογαριασμός',\n    'Cuenta',\n    'حساب',\n    'Tili',\n    'એકાઉન્ટ',\n    'חשבון',\n    'अकाउंट',\n    'खाता',\n    'Račun',\n    'Kont',\n    'Fiók',\n    'Akun',\n    'アカウント',\n    'ಖಾತೆ',\n    '계정',\n    'Paskyra',\n    'Konts',\n    'അക്കൗണ്ട്',\n    'खाते',\n    'Akaun',\n    'Conta',\n    'Cont',\n    'Счет',\n    'налог',\n    'Akaunti',\n    'கணக்கு',\n    'ఖాతా',\n    'บัญชี',\n    'Hesap',\n    'Обліковий запис',\n    'Tài khoản',\n    '账户',\n    '帳戶',\n];\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapInternalAccountToUserStorageAccount = exports.isNameDefaultAccountName = void 0;\nconst constants_1 = require(\"./constants.cjs\");\n/**\n * Tells if the given name is a default account name.\n * Default account names are localized names that are automatically generated by the clients.\n *\n * @param name - the name to check\n * @returns true if the name is a default account name, false otherwise\n */\nconst isNameDefaultAccountName = (name) => {\n    return constants_1.LOCALIZED_DEFAULT_ACCOUNT_NAMES.some((prefix) => {\n        return new RegExp(`^${prefix} ([0-9]+)$`, 'u').test(name);\n    });\n};\nexports.isNameDefaultAccountName = isNameDefaultAccountName;\n/**\n * Map an internal account to a user storage account\n * @param internalAccount - An internal account\n * @returns A user storage account\n */\nconst mapInternalAccountToUserStorageAccount = (internalAccount) => {\n    const { address, id, metadata } = internalAccount;\n    return {\n        [constants_1.USER_STORAGE_VERSION_KEY]: constants_1.USER_STORAGE_VERSION,\n        a: address,\n        i: id,\n        n: metadata.name,\n        nlu: metadata.nameLastUpdatedAt,\n    };\n};\nexports.mapInternalAccountToUserStorageAccount = mapInternalAccountToUserStorageAccount;\n//# sourceMappingURL=user-storage.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setCachedKey = exports.getAnyCachedKey = exports.getCachedKeyBySalt = void 0;\nconst utils_1 = require(\"./utils.cjs\");\nconst MAX_PASSWORD_CACHES = 3;\nconst MAX_SALT_CACHES = 10;\nlet inMemCachedKDF = {};\nconst getPasswordCache = (hashedPassword) => {\n    inMemCachedKDF[hashedPassword] ?? (inMemCachedKDF[hashedPassword] = new Map());\n    return inMemCachedKDF[hashedPassword];\n};\n/**\n * Returns a given cached derived key from a hashed password and salt\n *\n * @param hashedPassword - hashed password for cache lookup\n * @param salt - provide salt to receive cached key\n * @returns cached key\n */\nfunction getCachedKeyBySalt(hashedPassword, salt) {\n    const cache = getPasswordCache(hashedPassword);\n    const base64Salt = (0, utils_1.byteArrayToBase64)(salt);\n    const cachedKey = cache.get(base64Salt);\n    if (!cachedKey) {\n        return undefined;\n    }\n    return {\n        salt,\n        base64Salt,\n        key: cachedKey,\n    };\n}\nexports.getCachedKeyBySalt = getCachedKeyBySalt;\n/**\n * Gets any cached key for a given hashed password\n *\n * @param hashedPassword - hashed password for cache lookup\n * @returns any (the first) cached key\n */\nfunction getAnyCachedKey(hashedPassword) {\n    const cache = getPasswordCache(hashedPassword);\n    // Takes 1 item from an Iterator via Map.entries()\n    const cachedEntry = cache\n        .entries()\n        .next().value;\n    if (!cachedEntry) {\n        return undefined;\n    }\n    const base64Salt = cachedEntry[0];\n    const bytesSalt = (0, utils_1.base64ToByteArray)(base64Salt);\n    return {\n        salt: bytesSalt,\n        base64Salt,\n        key: cachedEntry[1],\n    };\n}\nexports.getAnyCachedKey = getAnyCachedKey;\n/**\n * Sets a key to the in memory cache.\n * We have set an arbitrary size of 10 cached keys per hashed password.\n *\n * @param hashedPassword - hashed password for cache lookup\n * @param salt - salt to set new derived key\n * @param key - derived key we are setting\n */\nfunction setCachedKey(hashedPassword, salt, key) {\n    // Max password caches\n    if (Object.keys(inMemCachedKDF).length > MAX_PASSWORD_CACHES) {\n        inMemCachedKDF = {};\n    }\n    const cache = getPasswordCache(hashedPassword);\n    const base64Salt = (0, utils_1.byteArrayToBase64)(salt);\n    // Max salt caches\n    if (cache.size > MAX_SALT_CACHES) {\n        cache.clear();\n    }\n    cache.set(base64Salt, key);\n}\nexports.setCachedKey = setCachedKey;\n//# sourceMappingURL=cache.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EncryptorDecryptor_instances, _EncryptorDecryptor_encryptStringV1, _EncryptorDecryptor_decryptStringV1, _EncryptorDecryptor_encrypt, _EncryptorDecryptor_decrypt, _EncryptorDecryptor_getOrGenerateScryptKey;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSHA256Hash = void 0;\nconst aes_1 = require(\"@noble/ciphers/aes\");\nconst webcrypto_1 = require(\"@noble/ciphers/webcrypto\");\nconst scrypt_1 = require(\"@noble/hashes/scrypt\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst cache_1 = require(\"./cache.cjs\");\nconst utils_2 = require(\"./utils.cjs\");\n// Nonce/Key Sizes\nconst ALGORITHM_NONCE_SIZE = 12; // 12 bytes\nconst ALGORITHM_KEY_SIZE = 16; // 16 bytes\n// Scrypt settings\n// see: https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#scrypt\nconst SCRYPT_SALT_SIZE = 16; // 16 bytes\nconst SCRYPT_N = 2 ** 17; // CPU/memory cost parameter (must be a power of 2, > 1)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst SCRYPT_r = 8; // Block size parameter\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst SCRYPT_p = 1; // Parallelization parameter\nclass EncryptorDecryptor {\n    constructor() {\n        _EncryptorDecryptor_instances.add(this);\n    }\n    async encryptString(plaintext, password, nativeScryptCrypto) {\n        try {\n            return await __classPrivateFieldGet(this, _EncryptorDecryptor_instances, \"m\", _EncryptorDecryptor_encryptStringV1).call(this, plaintext, password, nativeScryptCrypto);\n        }\n        catch (e) {\n            const errorMessage = e instanceof Error ? e.message : JSON.stringify(e);\n            throw new Error(`Unable to encrypt string - ${errorMessage}`);\n        }\n    }\n    async decryptString(encryptedDataStr, password, nativeScryptCrypto) {\n        try {\n            const encryptedData = JSON.parse(encryptedDataStr);\n            if (encryptedData.v === '1') {\n                if (encryptedData.t === 'scrypt') {\n                    return await __classPrivateFieldGet(this, _EncryptorDecryptor_instances, \"m\", _EncryptorDecryptor_decryptStringV1).call(this, encryptedData, password, nativeScryptCrypto);\n                }\n            }\n            throw new Error(`Unsupported encrypted data payload - ${encryptedDataStr}`);\n        }\n        catch (e) {\n            const errorMessage = e instanceof Error ? e.message : JSON.stringify(e);\n            throw new Error(`Unable to decrypt string - ${errorMessage}`);\n        }\n    }\n}\n_EncryptorDecryptor_instances = new WeakSet(), _EncryptorDecryptor_encryptStringV1 = async function _EncryptorDecryptor_encryptStringV1(plaintext, password, nativeScryptCrypto) {\n    const { key, salt } = await __classPrivateFieldGet(this, _EncryptorDecryptor_instances, \"m\", _EncryptorDecryptor_getOrGenerateScryptKey).call(this, password, {\n        N: SCRYPT_N,\n        r: SCRYPT_r,\n        p: SCRYPT_p,\n        dkLen: ALGORITHM_KEY_SIZE,\n    }, (0, webcrypto_1.randomBytes)(SCRYPT_SALT_SIZE), nativeScryptCrypto);\n    // Encrypt and prepend salt.\n    const plaintextRaw = (0, utils_1.utf8ToBytes)(plaintext);\n    const ciphertextAndNonceAndSalt = (0, utils_1.concatBytes)(salt, __classPrivateFieldGet(this, _EncryptorDecryptor_instances, \"m\", _EncryptorDecryptor_encrypt).call(this, plaintextRaw, key));\n    // Convert to Base64\n    const encryptedData = (0, utils_2.byteArrayToBase64)(ciphertextAndNonceAndSalt);\n    const encryptedPayload = {\n        v: '1',\n        t: 'scrypt',\n        d: encryptedData,\n        o: {\n            N: SCRYPT_N,\n            r: SCRYPT_r,\n            p: SCRYPT_p,\n            dkLen: ALGORITHM_KEY_SIZE,\n        },\n        saltLen: SCRYPT_SALT_SIZE,\n    };\n    return JSON.stringify(encryptedPayload);\n}, _EncryptorDecryptor_decryptStringV1 = async function _EncryptorDecryptor_decryptStringV1(data, password, nativeScryptCrypto) {\n    const { o, d: base64CiphertextAndNonceAndSalt, saltLen } = data;\n    // Decode the base64.\n    const ciphertextAndNonceAndSalt = (0, utils_2.base64ToByteArray)(base64CiphertextAndNonceAndSalt);\n    // Create buffers of salt and ciphertextAndNonce.\n    const salt = ciphertextAndNonceAndSalt.slice(0, saltLen);\n    const ciphertextAndNonce = ciphertextAndNonceAndSalt.slice(saltLen, ciphertextAndNonceAndSalt.length);\n    // Derive the key.\n    const { key } = await __classPrivateFieldGet(this, _EncryptorDecryptor_instances, \"m\", _EncryptorDecryptor_getOrGenerateScryptKey).call(this, password, {\n        N: o.N,\n        r: o.r,\n        p: o.p,\n        dkLen: o.dkLen,\n    }, salt, nativeScryptCrypto);\n    // Decrypt and return result.\n    return (0, utils_2.bytesToUtf8)(__classPrivateFieldGet(this, _EncryptorDecryptor_instances, \"m\", _EncryptorDecryptor_decrypt).call(this, ciphertextAndNonce, key));\n}, _EncryptorDecryptor_encrypt = function _EncryptorDecryptor_encrypt(plaintext, key) {\n    const nonce = (0, webcrypto_1.randomBytes)(ALGORITHM_NONCE_SIZE);\n    // Encrypt and prepend nonce.\n    const ciphertext = (0, aes_1.gcm)(key, nonce).encrypt(plaintext);\n    return (0, utils_1.concatBytes)(nonce, ciphertext);\n}, _EncryptorDecryptor_decrypt = function _EncryptorDecryptor_decrypt(ciphertextAndNonce, key) {\n    // Create buffers of nonce and ciphertext.\n    const nonce = ciphertextAndNonce.slice(0, ALGORITHM_NONCE_SIZE);\n    const ciphertext = ciphertextAndNonce.slice(ALGORITHM_NONCE_SIZE, ciphertextAndNonce.length);\n    // Decrypt and return result.\n    return (0, aes_1.gcm)(key, nonce).decrypt(ciphertext);\n}, _EncryptorDecryptor_getOrGenerateScryptKey = async function _EncryptorDecryptor_getOrGenerateScryptKey(password, o, salt, nativeScryptCrypto) {\n    const hashedPassword = createSHA256Hash(password);\n    const cachedKey = salt\n        ? (0, cache_1.getCachedKeyBySalt)(hashedPassword, salt)\n        : (0, cache_1.getAnyCachedKey)(hashedPassword);\n    if (cachedKey) {\n        return {\n            key: cachedKey.key,\n            salt: cachedKey.salt,\n        };\n    }\n    const newSalt = salt ?? (0, webcrypto_1.randomBytes)(SCRYPT_SALT_SIZE);\n    let newKey;\n    if (nativeScryptCrypto) {\n        newKey = await nativeScryptCrypto(password, newSalt, o.N, o.r, o.p, o.dkLen);\n    }\n    else {\n        newKey = await (0, scrypt_1.scryptAsync)(password, newSalt, {\n            N: o.N,\n            r: o.r,\n            p: o.p,\n            dkLen: o.dkLen,\n        });\n    }\n    (0, cache_1.setCachedKey)(hashedPassword, newSalt, newKey);\n    return {\n        key: newKey,\n        salt: newSalt,\n    };\n};\nconst encryption = new EncryptorDecryptor();\nexports.default = encryption;\n/**\n * Receive a SHA256 hash from a given string\n * @param data - input\n * @returns sha256 hash\n */\nfunction createSHA256Hash(data) {\n    const hashedData = (0, sha256_1.sha256)(data);\n    return (0, utils_1.bytesToHex)(hashedData);\n}\nexports.createSHA256Hash = createSHA256Hash;\n//# sourceMappingURL=encryption.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Encryption = void 0;\nconst encryption_1 = __importDefault(require(\"./encryption.cjs\"));\nexports.Encryption = encryption_1.default;\n__exportStar(require(\"./encryption.cjs\"), exports);\nexports.default = encryption_1.default;\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytesToUtf8 = exports.base64ToByteArray = exports.byteArrayToBase64 = void 0;\nconst byteArrayToBase64 = (byteArray) => {\n    return Buffer.from(byteArray).toString('base64');\n};\nexports.byteArrayToBase64 = byteArrayToBase64;\nconst base64ToByteArray = (base64) => {\n    return new Uint8Array(Buffer.from(base64, 'base64'));\n};\nexports.base64ToByteArray = base64ToByteArray;\nconst bytesToUtf8 = (byteArray) => {\n    const decoder = new TextDecoder('utf-8');\n    return decoder.decode(byteArray);\n};\nexports.bytesToUtf8 = bytesToUtf8;\n//# sourceMappingURL=utils.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mocks = exports.Controller = void 0;\nconst UserStorageController_1 = __importDefault(require(\"./UserStorageController.cjs\"));\nexports.Controller = UserStorageController_1.default;\nconst UserStorageController = UserStorageController_1.default;\nexports.default = UserStorageController;\n__exportStar(require(\"./UserStorageController.cjs\"), exports);\n__exportStar(require(\"./encryption/index.cjs\"), exports);\nexports.Mocks = __importStar(require(\"./__fixtures__/index.cjs\"));\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.startNetworkSyncing = void 0;\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst sync_mutations_1 = require(\"./sync-mutations.cjs\");\n/**\n * Initialize and setup events to listen to for network syncing\n * @param props - parameters used for initializing and enabling network syncing\n */\nfunction startNetworkSyncing(props) {\n    const { messenger, getStorageConfig } = props;\n    try {\n        messenger.subscribe('NetworkController:networkAdded', \n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        async (networkConfiguration) => {\n            try {\n                const opts = await getStorageConfig();\n                await (0, sync_mutations_1.addNetwork)(networkConfiguration, opts);\n            }\n            catch {\n                // Silently fail sync\n            }\n        });\n    }\n    catch (e) {\n        loglevel_1.default.warn('NetworkSyncing, event subscription failed', e);\n    }\n    try {\n        messenger.subscribe('NetworkController:networkDeleted', \n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        async (networkConfiguration) => {\n            try {\n                const opts = await getStorageConfig();\n                await (0, sync_mutations_1.deleteNetwork)(networkConfiguration, opts);\n            }\n            catch {\n                // Silently fail sync\n            }\n        });\n    }\n    catch (e) {\n        loglevel_1.default.warn('NetworkSyncing, event subscription failed', e);\n    }\n    try {\n        messenger.subscribe('NetworkController:networkChanged', \n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        async (networkConfiguration) => {\n            try {\n                const opts = await getStorageConfig();\n                await (0, sync_mutations_1.updateNetwork)(networkConfiguration, opts);\n            }\n            catch {\n                // Silently fail sync\n            }\n        });\n    }\n    catch (e) {\n        loglevel_1.default.warn('NetworkSyncing, event subscription failed', e);\n    }\n}\nexports.startNetworkSyncing = startNetworkSyncing;\n//# sourceMappingURL=controller-integration.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.batchUpsertRemoteNetworks = exports.upsertRemoteNetwork = exports.getAllRemoteNetworks = void 0;\nconst services_1 = require(\"../services.cjs\");\n// TODO - parse type, and handle version changes\n/**\n * parses the raw remote data to the NetworkConfiguration shape\n * @todo - improve parsing instead of asserting\n * @todo - improve version handling\n * @param rawData - raw remote user storage data\n * @returns NetworkConfiguration or undefined if failed to parse\n */\nfunction parseNetworkConfiguration(rawData) {\n    try {\n        return JSON.parse(rawData);\n    }\n    catch {\n        return undefined;\n    }\n}\nconst isDefined = (value) => value !== undefined && value !== null;\n/**\n * gets all remote networks from user storage\n * @param opts - user storage options/configuration\n * @returns array of all remote networks\n */\nasync function getAllRemoteNetworks(opts) {\n    const rawResults = (await (0, services_1.getUserStorageAllFeatureEntries)({\n        ...opts,\n        path: 'networks',\n    })) ?? [];\n    const results = rawResults\n        .map((rawData) => parseNetworkConfiguration(rawData))\n        .filter(isDefined);\n    return results;\n}\nexports.getAllRemoteNetworks = getAllRemoteNetworks;\n/**\n * Upserts a remote network to user storage\n * @param network - network we are updating or inserting\n * @param opts - user storage options/configuration\n */\nasync function upsertRemoteNetwork(network, opts) {\n    const chainId = network.chainId.toString();\n    const data = JSON.stringify(network);\n    return await (0, services_1.upsertUserStorage)(data, {\n        ...opts,\n        path: `networks.${chainId}`,\n    });\n}\nexports.upsertRemoteNetwork = upsertRemoteNetwork;\n/**\n * Batch upsert a list of remote networks into user storage\n * @param networks - a list of networks to update or insert\n * @param opts - user storage options/configuration\n */\nasync function batchUpsertRemoteNetworks(networks, opts) {\n    // TODO - this has not yet been provided by the backend team\n    // we will replace this with a batch endpoint in near future\n    const promises = networks.map((n) => upsertRemoteNetwork(n, opts));\n    await Promise.allSettled(promises);\n}\nexports.batchUpsertRemoteNetworks = batchUpsertRemoteNetworks;\n//# sourceMappingURL=services.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.batchUpdateNetworks = exports.deleteNetwork = exports.addNetwork = exports.updateNetwork = void 0;\nconst services_1 = require(\"./services.cjs\");\nconst updateNetwork = async (network, opts) => {\n    return await (0, services_1.upsertRemoteNetwork)({ v: '1', ...network, d: false }, opts);\n};\nexports.updateNetwork = updateNetwork;\nexports.addNetwork = exports.updateNetwork;\nconst deleteNetwork = async (network, opts) => {\n    // we are soft deleting, as we need to consider devices that have not yet synced\n    return await (0, services_1.upsertRemoteNetwork)({\n        v: '1',\n        ...network,\n        d: true,\n        lastUpdatedAt: network.lastUpdatedAt ?? Date.now(), // Ensures that a deleted entry has a date field\n    }, opts);\n};\nexports.deleteNetwork = deleteNetwork;\nconst batchUpdateNetworks = async (networks, opts) => {\n    const remoteNetworks = networks.map((n) => ({\n        v: '1',\n        ...n,\n    }));\n    return await (0, services_1.batchUpsertRemoteNetworks)(remoteNetworks, opts);\n};\nexports.batchUpdateNetworks = batchUpdateNetworks;\n//# sourceMappingURL=sync-mutations.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEntryPath = exports.isPathWithFeatureAndKey = exports.getFeatureAndKeyFromPath = exports.USER_STORAGE_SCHEMA = void 0;\nconst encryption_1 = require(\"./encryption/index.cjs\");\n/**\n * The User Storage Endpoint requires a feature name and a namespace key.\n * Developers can provide additional features and keys by extending these types below.\n *\n * Adding ALLOW_ARBITRARY_KEYS as the first key in the array allows for any key to be used for this feature.\n * This can be useful for features where keys are not deterministic (eg. accounts addresses).\n */\nconst ALLOW_ARBITRARY_KEYS = 'ALLOW_ARBITRARY_KEYS';\nexports.USER_STORAGE_SCHEMA = {\n    notifications: ['notification_settings'],\n    accounts: [ALLOW_ARBITRARY_KEYS],\n    networks: [ALLOW_ARBITRARY_KEYS], // keyed by chains/networks\n};\nconst getFeatureAndKeyFromPath = (path) => {\n    const pathRegex = /^\\w+\\.\\w+$/u;\n    if (!pathRegex.test(path)) {\n        throw new Error(`user-storage - path is not in the correct format. Correct format: 'feature.key'`);\n    }\n    const [feature, key] = path.split('.');\n    if (!(feature in exports.USER_STORAGE_SCHEMA)) {\n        throw new Error(`user-storage - invalid feature provided: ${feature}`);\n    }\n    const validFeature = exports.USER_STORAGE_SCHEMA[feature];\n    if (!validFeature.includes(key) &&\n        !validFeature.includes(ALLOW_ARBITRARY_KEYS)) {\n        const validKeys = exports.USER_STORAGE_SCHEMA[feature].join(', ');\n        throw new Error(`user-storage - invalid key provided for this feature: ${key}. Valid keys: ${validKeys}`);\n    }\n    return { feature, key };\n};\nexports.getFeatureAndKeyFromPath = getFeatureAndKeyFromPath;\nconst isPathWithFeatureAndKey = (path) => {\n    const pathRegex = /^\\w+\\.\\w+$/u;\n    return pathRegex.test(path);\n};\nexports.isPathWithFeatureAndKey = isPathWithFeatureAndKey;\n/**\n * Constructs a unique entry path for a user.\n * This can be done due to the uniqueness of the storage key (no users will share the same storage key).\n * The users entry is a unique hash that cannot be reversed.\n *\n * @param path - string in the form of `${feature}.${key}` that matches schema\n * @param storageKey - users storage key\n * @returns path to store entry\n */\nfunction createEntryPath(path, storageKey) {\n    const { feature, key } = (0, exports.getFeatureAndKeyFromPath)(path);\n    const hashedKey = (0, encryption_1.createSHA256Hash)(key + storageKey);\n    return `${feature}/${hashedKey}`;\n}\nexports.createEntryPath = createEntryPath;\n//# sourceMappingURL=schema.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.upsertUserStorage = exports.getUserStorageAllFeatureEntries = exports.getUserStorage = exports.USER_STORAGE_ENDPOINT = exports.USER_STORAGE_API = void 0;\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst env_1 = require(\"../../sdk/env.cjs\");\nconst encryption_1 = __importDefault(require(\"./encryption/index.cjs\"));\nconst schema_1 = require(\"./schema.cjs\");\nconst ENV_URLS = (0, env_1.getEnvUrls)(env_1.Env.PRD);\nexports.USER_STORAGE_API = ENV_URLS.userStorageApiUrl;\nexports.USER_STORAGE_ENDPOINT = `${exports.USER_STORAGE_API}/api/v1/userstorage`;\n/**\n * User Storage Service - Get Storage Entry.\n *\n * @param opts - User Storage Options\n * @returns The storage entry, or null if fails to find entry\n */\nasync function getUserStorage(opts) {\n    try {\n        const { bearerToken, path, storageKey, nativeScryptCrypto } = opts;\n        const encryptedPath = (0, schema_1.createEntryPath)(path, storageKey);\n        const url = new URL(`${exports.USER_STORAGE_ENDPOINT}/${encryptedPath}`);\n        const userStorageResponse = await fetch(url.toString(), {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${bearerToken}`,\n            },\n        });\n        // Acceptable error - since indicates entry does not exist.\n        if (userStorageResponse.status === 404) {\n            return null;\n        }\n        if (userStorageResponse.status !== 200) {\n            throw new Error('Unable to get User Storage');\n        }\n        const userStorage = await userStorageResponse.json();\n        const encryptedData = userStorage?.Data ?? null;\n        if (!encryptedData) {\n            return null;\n        }\n        const decryptedData = await encryption_1.default.decryptString(encryptedData, opts.storageKey, nativeScryptCrypto);\n        return decryptedData;\n    }\n    catch (e) {\n        loglevel_1.default.error('Failed to get user storage', e);\n        return null;\n    }\n}\nexports.getUserStorage = getUserStorage;\n/**\n * User Storage Service - Get all storage entries for a specific feature.\n *\n * @param opts - User Storage Options\n * @returns The storage entry, or null if fails to find entry\n */\nasync function getUserStorageAllFeatureEntries(opts) {\n    try {\n        const { bearerToken, path, nativeScryptCrypto } = opts;\n        const url = new URL(`${exports.USER_STORAGE_ENDPOINT}/${path}`);\n        const userStorageResponse = await fetch(url.toString(), {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${bearerToken}`,\n            },\n        });\n        // Acceptable error - since indicates feature does not exist.\n        if (userStorageResponse.status === 404) {\n            return null;\n        }\n        if (userStorageResponse.status !== 200) {\n            throw new Error('Unable to get User Storage');\n        }\n        const userStorage = await userStorageResponse.json();\n        if (!Array.isArray(userStorage)) {\n            return null;\n        }\n        const decryptedData = userStorage?.flatMap((entry) => {\n            if (!entry.Data) {\n                return [];\n            }\n            return encryption_1.default.decryptString(entry.Data, opts.storageKey, nativeScryptCrypto);\n        });\n        return (await Promise.allSettled(decryptedData))\n            .map((d) => (d.status === 'fulfilled' ? d.value : undefined))\n            .filter((d) => d !== undefined);\n    }\n    catch (e) {\n        loglevel_1.default.error('Failed to get user storage', e);\n        return null;\n    }\n}\nexports.getUserStorageAllFeatureEntries = getUserStorageAllFeatureEntries;\n/**\n * User Storage Service - Set Storage Entry.\n *\n * @param data - data to store\n * @param opts - storage options\n */\nasync function upsertUserStorage(data, opts) {\n    const { bearerToken, path, storageKey, nativeScryptCrypto } = opts;\n    const encryptedData = await encryption_1.default.encryptString(data, opts.storageKey, nativeScryptCrypto);\n    const encryptedPath = (0, schema_1.createEntryPath)(path, storageKey);\n    const url = new URL(`${exports.USER_STORAGE_ENDPOINT}/${encryptedPath}`);\n    const res = await fetch(url.toString(), {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${bearerToken}`,\n        },\n        body: JSON.stringify({ data: encryptedData }),\n    });\n    if (!res.ok) {\n        throw new Error('user-storage - unable to upsert data');\n    }\n}\nexports.upsertUserStorage = upsertUserStorage;\n//# sourceMappingURL=services.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserStorageController = exports.AuthenticationController = exports.SDK = void 0;\nexports.SDK = __importStar(require(\"./sdk/index.cjs\"));\nexports.AuthenticationController = __importStar(require(\"./controllers/authentication/index.cjs\"));\nexports.UserStorageController = __importStar(require(\"./controllers/user-storage/index.cjs\"));\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SIWEJwtBearerAuth_instances, _SIWEJwtBearerAuth_config, _SIWEJwtBearerAuth_options, _SIWEJwtBearerAuth_signer, _SIWEJwtBearerAuth_getAuthSession, _SIWEJwtBearerAuth_login, _SIWEJwtBearerAuth_createSiWELoginRawMessage, _SIWEJwtBearerAuth_assertSigner;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SIWEJwtBearerAuth = void 0;\nconst siwe_1 = require(\"siwe\");\nconst errors_1 = require(\"../errors.cjs\");\nconst validate_login_response_1 = require(\"../utils/validate-login-response.cjs\");\nconst services_1 = require(\"./services.cjs\");\nclass SIWEJwtBearerAuth {\n    constructor(config, options) {\n        _SIWEJwtBearerAuth_instances.add(this);\n        _SIWEJwtBearerAuth_config.set(this, void 0);\n        _SIWEJwtBearerAuth_options.set(this, void 0);\n        _SIWEJwtBearerAuth_signer.set(this, void 0);\n        __classPrivateFieldSet(this, _SIWEJwtBearerAuth_config, config, \"f\");\n        __classPrivateFieldSet(this, _SIWEJwtBearerAuth_options, options, \"f\");\n    }\n    async getAccessToken() {\n        const session = await __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_getAuthSession).call(this);\n        if (session) {\n            return session.token.accessToken;\n        }\n        const loginResponse = await __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_login).call(this);\n        return loginResponse.token.accessToken;\n    }\n    async getUserProfile() {\n        const session = await __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_getAuthSession).call(this);\n        if (session) {\n            return session.profile;\n        }\n        const loginResponse = await __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_login).call(this);\n        return loginResponse.profile;\n    }\n    async getIdentifier() {\n        __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_assertSigner).call(this, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\"));\n        return __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\").address;\n    }\n    async signMessage(message) {\n        __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_assertSigner).call(this, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\"));\n        return await __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\").signMessage(message);\n    }\n    prepare(signer) {\n        __classPrivateFieldSet(this, _SIWEJwtBearerAuth_signer, signer, \"f\");\n    }\n}\nexports.SIWEJwtBearerAuth = SIWEJwtBearerAuth;\n_SIWEJwtBearerAuth_config = new WeakMap(), _SIWEJwtBearerAuth_options = new WeakMap(), _SIWEJwtBearerAuth_signer = new WeakMap(), _SIWEJwtBearerAuth_instances = new WeakSet(), _SIWEJwtBearerAuth_getAuthSession = \n// convert expiresIn from seconds to milliseconds and use 90% of expiresIn\nasync function _SIWEJwtBearerAuth_getAuthSession() {\n    const auth = await __classPrivateFieldGet(this, _SIWEJwtBearerAuth_options, \"f\").storage.getLoginResponse();\n    if (!(0, validate_login_response_1.validateLoginResponse)(auth)) {\n        return null;\n    }\n    const currentTime = Date.now();\n    const sessionAge = currentTime - auth.token.obtainedAt;\n    const refreshThreshold = auth.token.expiresIn * 1000 * 0.9;\n    if (sessionAge < refreshThreshold) {\n        return auth;\n    }\n    return null;\n}, _SIWEJwtBearerAuth_login = async function _SIWEJwtBearerAuth_login() {\n    __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_assertSigner).call(this, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\"));\n    // Nonce\n    const address = await this.getIdentifier();\n    const nonceRes = await (0, services_1.getNonce)(address, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_config, \"f\").env);\n    const rawMessage = __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_createSiWELoginRawMessage).call(this, nonceRes.nonce);\n    const signature = await this.signMessage(rawMessage);\n    // Authenticate\n    const authResponse = await (0, services_1.authenticate)(rawMessage, signature, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_config, \"f\").type, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_config, \"f\").env);\n    // Authorize\n    const tokenResponse = await (0, services_1.authorizeOIDC)(authResponse.token, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_config, \"f\").env, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_config, \"f\").platform);\n    // Save\n    const result = {\n        profile: authResponse.profile,\n        token: tokenResponse,\n    };\n    await __classPrivateFieldGet(this, _SIWEJwtBearerAuth_options, \"f\").storage.setLoginResponse(result);\n    return result;\n}, _SIWEJwtBearerAuth_createSiWELoginRawMessage = function _SIWEJwtBearerAuth_createSiWELoginRawMessage(nonce) {\n    __classPrivateFieldGet(this, _SIWEJwtBearerAuth_instances, \"m\", _SIWEJwtBearerAuth_assertSigner).call(this, __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\"));\n    return new siwe_1.SiweMessage({\n        domain: __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\")?.domain,\n        address: __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\")?.address,\n        uri: (0, services_1.SIWE_LOGIN_URL)(__classPrivateFieldGet(this, _SIWEJwtBearerAuth_config, \"f\").env),\n        version: '1',\n        chainId: __classPrivateFieldGet(this, _SIWEJwtBearerAuth_signer, \"f\")?.chainId,\n        nonce,\n        issuedAt: new Date().toISOString(),\n    }).prepareMessage();\n}, _SIWEJwtBearerAuth_assertSigner = function _SIWEJwtBearerAuth_assertSigner(signer) {\n    if (!signer) {\n        throw new errors_1.ValidationError(`you must call 'prepare()' before logging in`);\n    }\n};\n//# sourceMappingURL=flow-siwe.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SRPJwtBearerAuth_instances, _SRPJwtBearerAuth_config, _SRPJwtBearerAuth_options, _SRPJwtBearerAuth_getAuthSession, _SRPJwtBearerAuth_login, _SRPJwtBearerAuth_createSrpLoginRawMessage;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SRPJwtBearerAuth = void 0;\nconst errors_1 = require(\"../errors.cjs\");\nconst eip_6963_metamask_provider_1 = require(\"../utils/eip-6963-metamask-provider.cjs\");\nconst messaging_signing_snap_requests_1 = require(\"../utils/messaging-signing-snap-requests.cjs\");\nconst validate_login_response_1 = require(\"../utils/validate-login-response.cjs\");\nconst services_1 = require(\"./services.cjs\");\nconst getDefaultEIP6963Provider = async () => {\n    const provider = await (0, eip_6963_metamask_provider_1.getMetaMaskProviderEIP6963)();\n    if (!provider) {\n        throw new errors_1.ValidationError('No MetaMask wallet connected');\n    }\n    return provider;\n};\nconst defaultEIP6963SigningOptions = {\n    getIdentifier: async () => {\n        const provider = await getDefaultEIP6963Provider();\n        return await messaging_signing_snap_requests_1.MESSAGE_SIGNING_SNAP.getPublicKey(provider);\n    },\n    signMessage: async (message) => {\n        const provider = await getDefaultEIP6963Provider();\n        if (!message.startsWith('metamask:')) {\n            throw new errors_1.ValidationError('message must start with \"metamask:\"');\n        }\n        const formattedMessage = message;\n        return await messaging_signing_snap_requests_1.MESSAGE_SIGNING_SNAP.signMessage(provider, formattedMessage);\n    },\n};\nclass SRPJwtBearerAuth {\n    constructor(config, options) {\n        _SRPJwtBearerAuth_instances.add(this);\n        _SRPJwtBearerAuth_config.set(this, void 0);\n        _SRPJwtBearerAuth_options.set(this, void 0);\n        __classPrivateFieldSet(this, _SRPJwtBearerAuth_config, config, \"f\");\n        __classPrivateFieldSet(this, _SRPJwtBearerAuth_options, {\n            storage: options.storage,\n            signing: options.signing ?? defaultEIP6963SigningOptions,\n        }, \"f\");\n    }\n    async getAccessToken() {\n        const session = await __classPrivateFieldGet(this, _SRPJwtBearerAuth_instances, \"m\", _SRPJwtBearerAuth_getAuthSession).call(this);\n        if (session) {\n            return session.token.accessToken;\n        }\n        const loginResponse = await __classPrivateFieldGet(this, _SRPJwtBearerAuth_instances, \"m\", _SRPJwtBearerAuth_login).call(this);\n        return loginResponse.token.accessToken;\n    }\n    async getUserProfile() {\n        const session = await __classPrivateFieldGet(this, _SRPJwtBearerAuth_instances, \"m\", _SRPJwtBearerAuth_getAuthSession).call(this);\n        if (session) {\n            return session.profile;\n        }\n        const loginResponse = await __classPrivateFieldGet(this, _SRPJwtBearerAuth_instances, \"m\", _SRPJwtBearerAuth_login).call(this);\n        return loginResponse.profile;\n    }\n    async getIdentifier() {\n        return await __classPrivateFieldGet(this, _SRPJwtBearerAuth_options, \"f\").signing.getIdentifier();\n    }\n    async signMessage(message) {\n        return await __classPrivateFieldGet(this, _SRPJwtBearerAuth_options, \"f\").signing.signMessage(message);\n    }\n    async isSnapConnected() {\n        const provider = await (0, eip_6963_metamask_provider_1.getMetaMaskProviderEIP6963)();\n        if (!provider) {\n            return false;\n        }\n        const isConnected = await (0, messaging_signing_snap_requests_1.isSnapConnected)(provider);\n        return isConnected;\n    }\n    async connectSnap() {\n        const provider = await getDefaultEIP6963Provider();\n        const res = await (0, messaging_signing_snap_requests_1.connectSnap)(provider);\n        return res;\n    }\n}\nexports.SRPJwtBearerAuth = SRPJwtBearerAuth;\n_SRPJwtBearerAuth_config = new WeakMap(), _SRPJwtBearerAuth_options = new WeakMap(), _SRPJwtBearerAuth_instances = new WeakSet(), _SRPJwtBearerAuth_getAuthSession = \n// convert expiresIn from seconds to milliseconds and use 90% of expiresIn\nasync function _SRPJwtBearerAuth_getAuthSession() {\n    const auth = await __classPrivateFieldGet(this, _SRPJwtBearerAuth_options, \"f\").storage.getLoginResponse();\n    if (!(0, validate_login_response_1.validateLoginResponse)(auth)) {\n        return null;\n    }\n    const currentTime = Date.now();\n    const sessionAge = currentTime - auth.token.obtainedAt;\n    const refreshThreshold = auth.token.expiresIn * 1000 * 0.9;\n    if (sessionAge < refreshThreshold) {\n        return auth;\n    }\n    return null;\n}, _SRPJwtBearerAuth_login = async function _SRPJwtBearerAuth_login() {\n    // Nonce\n    const address = await this.getIdentifier();\n    const nonceRes = await (0, services_1.getNonce)(address, __classPrivateFieldGet(this, _SRPJwtBearerAuth_config, \"f\").env);\n    const publicKey = await __classPrivateFieldGet(this, _SRPJwtBearerAuth_options, \"f\").signing.getIdentifier();\n    const rawMessage = __classPrivateFieldGet(this, _SRPJwtBearerAuth_instances, \"m\", _SRPJwtBearerAuth_createSrpLoginRawMessage).call(this, nonceRes.nonce, publicKey);\n    const signature = await this.signMessage(rawMessage);\n    // Authenticate\n    const authResponse = await (0, services_1.authenticate)(rawMessage, signature, __classPrivateFieldGet(this, _SRPJwtBearerAuth_config, \"f\").type, __classPrivateFieldGet(this, _SRPJwtBearerAuth_config, \"f\").env);\n    // Authorize\n    const tokenResponse = await (0, services_1.authorizeOIDC)(authResponse.token, __classPrivateFieldGet(this, _SRPJwtBearerAuth_config, \"f\").env, __classPrivateFieldGet(this, _SRPJwtBearerAuth_config, \"f\").platform);\n    // Save\n    const result = {\n        profile: authResponse.profile,\n        token: tokenResponse,\n    };\n    await __classPrivateFieldGet(this, _SRPJwtBearerAuth_options, \"f\").storage.setLoginResponse(result);\n    return result;\n}, _SRPJwtBearerAuth_createSrpLoginRawMessage = function _SRPJwtBearerAuth_createSrpLoginRawMessage(nonce, publicKey) {\n    return `metamask:${nonce}:${publicKey}`;\n};\n//# sourceMappingURL=flow-srp.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authenticate = exports.authorizeOIDC = exports.getNonce = exports.pairIdentifiers = exports.SIWE_LOGIN_URL = exports.SRP_LOGIN_URL = exports.OIDC_TOKEN_URL = exports.PAIR_IDENTIFIERS = exports.NONCE_URL = void 0;\nconst env_1 = require(\"../env.cjs\");\nconst errors_1 = require(\"../errors.cjs\");\nconst types_1 = require(\"./types.cjs\");\nconst NONCE_URL = (env) => `${(0, env_1.getEnvUrls)(env).authApiUrl}/api/v2/nonce`;\nexports.NONCE_URL = NONCE_URL;\nconst PAIR_IDENTIFIERS = (env) => `${(0, env_1.getEnvUrls)(env).authApiUrl}/api/v2/identifiers/pair`;\nexports.PAIR_IDENTIFIERS = PAIR_IDENTIFIERS;\nconst OIDC_TOKEN_URL = (env) => `${(0, env_1.getEnvUrls)(env).oidcApiUrl}/oauth2/token`;\nexports.OIDC_TOKEN_URL = OIDC_TOKEN_URL;\nconst SRP_LOGIN_URL = (env) => `${(0, env_1.getEnvUrls)(env).authApiUrl}/api/v2/srp/login`;\nexports.SRP_LOGIN_URL = SRP_LOGIN_URL;\nconst SIWE_LOGIN_URL = (env) => `${(0, env_1.getEnvUrls)(env).authApiUrl}/api/v2/siwe/login`;\nexports.SIWE_LOGIN_URL = SIWE_LOGIN_URL;\nconst getAuthenticationUrl = (authType, env) => {\n    switch (authType) {\n        case types_1.AuthType.SRP:\n            return (0, exports.SRP_LOGIN_URL)(env);\n        case types_1.AuthType.SiWE:\n            return (0, exports.SIWE_LOGIN_URL)(env);\n        /* istanbul ignore next */\n        default:\n            throw new errors_1.ValidationError(`Invalid AuthType: ${authType} - unable to create Auth URL`);\n    }\n};\n/**\n * Pair multiple identifiers under a single profile\n *\n * @param nonce - session nonce\n * @param logins - pairing request payload\n * @param accessToken - JWT access token used to access protected resources\n * @param env - server environment\n * @returns void.\n */\nasync function pairIdentifiers(nonce, logins, accessToken, env) {\n    const pairUrl = new URL((0, exports.PAIR_IDENTIFIERS)(env));\n    try {\n        const response = await fetch(pairUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken}`,\n            },\n            body: JSON.stringify({\n                nonce,\n                logins,\n            }),\n        });\n        if (!response.ok) {\n            const responseBody = (await response.json());\n            throw new Error(`HTTP error message: ${responseBody.message}, error: ${responseBody.error}`);\n        }\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new errors_1.PairError(`unable to pair identifiers: ${errorMessage}`);\n    }\n}\nexports.pairIdentifiers = pairIdentifiers;\n/**\n * Service to Get Nonce for JWT Bearer Flow\n *\n * @param id - identifier ID\n * @param env - server environment\n * @returns the nonce.\n */\nasync function getNonce(id, env) {\n    const nonceUrl = new URL((0, exports.NONCE_URL)(env));\n    nonceUrl.searchParams.set('identifier', id);\n    try {\n        const nonceResponse = await fetch(nonceUrl.toString());\n        if (!nonceResponse.ok) {\n            const responseBody = (await nonceResponse.json());\n            throw new Error(`HTTP error message: ${responseBody.message}, error: ${responseBody.error}`);\n        }\n        const nonceJson = await nonceResponse.json();\n        return {\n            nonce: nonceJson.nonce,\n            identifier: nonceJson.identifier,\n            expiresIn: nonceJson.expires_in,\n        };\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new errors_1.NonceRetrievalError(`failed to generate nonce: ${errorMessage}`);\n    }\n}\nexports.getNonce = getNonce;\n/**\n * Service to Authorize And perform OIDC Flow to get the Access Token\n *\n * @param jwtToken - The original token received from Authentication. This is traded for the Access Token. (the authentication token is single-use)\n * @param env - server environment\n * @param platform - SDK platform\n * @returns Access Token from Authorization server\n */\nasync function authorizeOIDC(jwtToken, env, platform) {\n    const grantType = 'urn:ietf:params:oauth:grant-type:jwt-bearer';\n    const headers = new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    const urlEncodedBody = new URLSearchParams();\n    urlEncodedBody.append('grant_type', grantType);\n    urlEncodedBody.append('client_id', (0, env_1.getOidcClientId)(env, platform));\n    urlEncodedBody.append('assertion', jwtToken);\n    try {\n        const response = await fetch((0, exports.OIDC_TOKEN_URL)(env), {\n            method: 'POST',\n            headers,\n            body: urlEncodedBody.toString(),\n        });\n        if (!response.ok) {\n            const responseBody = (await response.json());\n            throw new Error(`HTTP error: ${responseBody.error_description}, error code: ${responseBody.error}`);\n        }\n        const accessTokenResponse = await response.json();\n        return {\n            accessToken: accessTokenResponse.access_token,\n            expiresIn: accessTokenResponse.expires_in,\n            obtainedAt: Date.now(),\n        };\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new errors_1.SignInError(`unable to get access token: ${errorMessage}`);\n    }\n}\nexports.authorizeOIDC = authorizeOIDC;\n/**\n * Service to Authenticate/Login a user via SIWE or SRP derived key.\n *\n * @param rawMessage - raw message for validation when authenticating\n * @param signature - signed raw message\n * @param authType - authentication type/flow used\n * @param env - server environment\n * @returns Authentication Token\n */\nasync function authenticate(rawMessage, signature, authType, env) {\n    const authenticationUrl = getAuthenticationUrl(authType, env);\n    try {\n        const response = await fetch(authenticationUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                signature,\n                // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                // eslint-disable-next-line @typescript-eslint/naming-convention\n                raw_message: rawMessage,\n            }),\n        });\n        if (!response.ok) {\n            const responseBody = (await response.json());\n            throw new Error(`${authType} login HTTP error: ${responseBody.message}, error code: ${responseBody.error}`);\n        }\n        const loginResponse = await response.json();\n        return {\n            token: loginResponse.token,\n            expiresIn: loginResponse.expires_in,\n            profile: {\n                identifierId: loginResponse.profile.identifier_id,\n                metaMetricsId: loginResponse.profile.metametrics_id,\n                profileId: loginResponse.profile.profile_id,\n            },\n        };\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new errors_1.SignInError(`unable to perform SRP login: ${errorMessage}`);\n    }\n}\nexports.authenticate = authenticate;\n//# sourceMappingURL=services.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthType = void 0;\nvar AuthType;\n(function (AuthType) {\n    /* sign in using a private key derived from your secret recovery phrase (SRP).\n         Uses message signing snap to perform this operation */\n    AuthType[\"SRP\"] = \"SRP\";\n    /* sign in with Ethereum */\n    AuthType[\"SiWE\"] = \"SiWE\";\n})(AuthType || (exports.AuthType = AuthType = {}));\n//# sourceMappingURL=types.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _JwtBearerAuth_instances, _JwtBearerAuth_type, _JwtBearerAuth_env, _JwtBearerAuth_sdk, _JwtBearerAuth_assertSIWE, _JwtBearerAuth_assertSRP;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SRPJwtBearerAuth = exports.SIWEJwtBearerAuth = exports.JwtBearerAuth = void 0;\nconst flow_siwe_1 = require(\"./authentication-jwt-bearer/flow-siwe.cjs\");\nconst flow_srp_1 = require(\"./authentication-jwt-bearer/flow-srp.cjs\");\nconst services_1 = require(\"./authentication-jwt-bearer/services.cjs\");\nconst types_1 = require(\"./authentication-jwt-bearer/types.cjs\");\nconst errors_1 = require(\"./errors.cjs\");\nclass JwtBearerAuth {\n    constructor(...args) {\n        _JwtBearerAuth_instances.add(this);\n        _JwtBearerAuth_type.set(this, void 0);\n        _JwtBearerAuth_env.set(this, void 0);\n        _JwtBearerAuth_sdk.set(this, void 0);\n        __classPrivateFieldSet(this, _JwtBearerAuth_type, args[0].type, \"f\");\n        __classPrivateFieldSet(this, _JwtBearerAuth_env, args[0].env, \"f\");\n        if (args[0].type === types_1.AuthType.SRP) {\n            __classPrivateFieldSet(this, _JwtBearerAuth_sdk, new flow_srp_1.SRPJwtBearerAuth(args[0], args[1]), \"f\");\n            return;\n        }\n        if (args[0].type === types_1.AuthType.SiWE) {\n            __classPrivateFieldSet(this, _JwtBearerAuth_sdk, new flow_siwe_1.SIWEJwtBearerAuth(args[0], args[1]), \"f\");\n            return;\n        }\n        throw new errors_1.UnsupportedAuthTypeError('unsupported auth type');\n    }\n    async getAccessToken() {\n        return await __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\").getAccessToken();\n    }\n    async connectSnap() {\n        __classPrivateFieldGet(this, _JwtBearerAuth_instances, \"m\", _JwtBearerAuth_assertSRP).call(this, __classPrivateFieldGet(this, _JwtBearerAuth_type, \"f\"), __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\"));\n        return __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\").connectSnap();\n    }\n    async isSnapConnected() {\n        __classPrivateFieldGet(this, _JwtBearerAuth_instances, \"m\", _JwtBearerAuth_assertSRP).call(this, __classPrivateFieldGet(this, _JwtBearerAuth_type, \"f\"), __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\"));\n        return __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\").isSnapConnected();\n    }\n    async getUserProfile() {\n        return await __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\").getUserProfile();\n    }\n    async getIdentifier() {\n        return await __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\").getIdentifier();\n    }\n    async signMessage(message) {\n        return await __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\").signMessage(message);\n    }\n    async pairIdentifiers(pairing) {\n        const profile = await this.getUserProfile();\n        const n = await (0, services_1.getNonce)(profile.profileId, __classPrivateFieldGet(this, _JwtBearerAuth_env, \"f\"));\n        const logins = await Promise.all(pairing.map(async (p) => {\n            try {\n                const raw = `metamask:${n.nonce}:${p.identifier}`;\n                const sig = await p.signMessage(raw);\n                return {\n                    signature: sig,\n                    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    raw_message: raw,\n                    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    encrypted_storage_key: p.encryptedStorageKey,\n                    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    identifier_type: p.identifierType,\n                };\n            }\n            catch (e) {\n                /* istanbul ignore next */\n                const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n                throw new errors_1.PairError(`failed to sign pairing message: ${errorMessage}`);\n            }\n        }));\n        const accessToken = await this.getAccessToken();\n        await (0, services_1.pairIdentifiers)(n.nonce, logins, accessToken, __classPrivateFieldGet(this, _JwtBearerAuth_env, \"f\"));\n    }\n    prepare(signer) {\n        __classPrivateFieldGet(this, _JwtBearerAuth_instances, \"m\", _JwtBearerAuth_assertSIWE).call(this, __classPrivateFieldGet(this, _JwtBearerAuth_type, \"f\"), __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\"));\n        __classPrivateFieldGet(this, _JwtBearerAuth_sdk, \"f\").prepare(signer);\n    }\n}\nexports.JwtBearerAuth = JwtBearerAuth;\n_JwtBearerAuth_type = new WeakMap(), _JwtBearerAuth_env = new WeakMap(), _JwtBearerAuth_sdk = new WeakMap(), _JwtBearerAuth_instances = new WeakSet(), _JwtBearerAuth_assertSIWE = function _JwtBearerAuth_assertSIWE(type, _sdk) {\n    if (type === types_1.AuthType.SiWE) {\n        return;\n    }\n    throw new errors_1.UnsupportedAuthTypeError('This method is only available via SIWE auth type');\n}, _JwtBearerAuth_assertSRP = function _JwtBearerAuth_assertSRP(type, _sdk) {\n    if (type === types_1.AuthType.SRP) {\n        return;\n    }\n    throw new errors_1.UnsupportedAuthTypeError('This method is only available via SRP auth type');\n};\nvar flow_siwe_2 = require(\"./authentication-jwt-bearer/flow-siwe.cjs\");\nObject.defineProperty(exports, \"SIWEJwtBearerAuth\", { enumerable: true, get: function () { return flow_siwe_2.SIWEJwtBearerAuth; } });\nvar flow_srp_2 = require(\"./authentication-jwt-bearer/flow-srp.cjs\");\nObject.defineProperty(exports, \"SRPJwtBearerAuth\", { enumerable: true, get: function () { return flow_srp_2.SRPJwtBearerAuth; } });\n__exportStar(require(\"./authentication-jwt-bearer/types.cjs\"), exports);\n//# sourceMappingURL=authentication.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst encryption_1 = __importDefault(require(\"../controllers/user-storage/encryption/encryption.cjs\"));\n__exportStar(require(\"../controllers/user-storage/encryption/encryption.cjs\"), exports);\nexports.default = encryption_1.default;\n//# sourceMappingURL=encryption.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOidcClientId = exports.getEnvUrls = exports.Platform = exports.Env = void 0;\nvar Env;\n(function (Env) {\n    Env[\"DEV\"] = \"dev\";\n    Env[\"UAT\"] = \"uat\";\n    Env[\"PRD\"] = \"prd\";\n})(Env || (exports.Env = Env = {}));\nvar Platform;\n(function (Platform) {\n    Platform[\"MOBILE\"] = \"mobile\";\n    Platform[\"EXTENSION\"] = \"extension\";\n    Platform[\"PORTFOLIO\"] = \"portfolio\";\n    Platform[\"INFURA\"] = \"infura\";\n})(Platform || (exports.Platform = Platform = {}));\nconst ENV_URLS = {\n    dev: {\n        authApiUrl: 'https://authentication.dev-api.cx.metamask.io',\n        oidcApiUrl: 'https://oidc.dev-api.cx.metamask.io',\n        userStorageApiUrl: 'https://user-storage.dev-api.cx.metamask.io',\n    },\n    uat: {\n        authApiUrl: 'https://authentication.uat-api.cx.metamask.io',\n        oidcApiUrl: 'https://oidc.uat-api.cx.metamask.io',\n        userStorageApiUrl: 'https://user-storage.uat-api.cx.metamask.io',\n    },\n    prd: {\n        authApiUrl: 'https://authentication.api.cx.metamask.io',\n        oidcApiUrl: 'https://oidc.api.cx.metamask.io',\n        userStorageApiUrl: 'https://user-storage.api.cx.metamask.io',\n    },\n};\n/**\n * Validates and returns correct environment endpoints\n *\n * @param env - environment field\n * @returns the correct environment url\n * @throws on invalid environment passed\n */\nfunction getEnvUrls(env) {\n    if (!ENV_URLS[env]) {\n        throw new Error('invalid environment configuration');\n    }\n    return ENV_URLS[env];\n}\nexports.getEnvUrls = getEnvUrls;\n/**\n * Returns the valid OIDC Client ID (used during authorization)\n *\n * @param env - environment field\n * @param platform - platform field\n * @returns the OIDC client id for the environment\n */\nfunction getOidcClientId(env, platform) {\n    const clientIds = {\n        [Env.DEV]: {\n            [Platform.PORTFOLIO]: 'c7ca94a0-5d52-4635-9502-1a50a9c410cc',\n            [Platform.MOBILE]: 'e83c7cc9-267d-4fb4-8fec-f0e3bbe5ae8e',\n            [Platform.EXTENSION]: 'f1a963d7-50dc-4cb5-8d81-f1f3654f0df3',\n            [Platform.INFURA]: 'bd887006-0d55-481a-a395-5ff9a0dc52c9',\n        },\n        [Env.UAT]: {\n            [Platform.PORTFOLIO]: '8f2dd4ac-db07-4819-9ba5-1ee0ec1b56d1',\n            [Platform.MOBILE]: 'c3cfdcd2-51d6-4fae-ad2c-ff238c8fef53',\n            [Platform.EXTENSION]: 'a9de167c-c9a6-43d8-af39-d301fd44c485',\n            [Platform.INFURA]: '01929890-7002-4c97-9913-8f6c09a6d674',\n        },\n        [Env.PRD]: {\n            [Platform.PORTFOLIO]: '35e1cd62-49c5-4be8-8b6e-a5212f2d2cfb',\n            [Platform.MOBILE]: '75fa62a3-9ca0-4b91-9fe5-76bec86b0257',\n            [Platform.EXTENSION]: '1132f10a-b4e5-4390-a5f2-d9c6022db564',\n            [Platform.INFURA]: 'fdde9417-e193-4d23-9943-a8346b18d097',\n        },\n    };\n    if (!clientIds[env]) {\n        throw new Error(`invalid env ${env}: cannot determine oidc client id`);\n    }\n    if (!clientIds[env][platform]) {\n        throw new Error(`invalid env ${env} and platform ${platform} combination: cannot determine oidc client id`);\n    }\n    return clientIds[env][platform];\n}\nexports.getOidcClientId = getOidcClientId;\n//# sourceMappingURL=env.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotFoundError = exports.UnsupportedAuthTypeError = exports.ValidationError = exports.UserStorageError = exports.PairError = exports.SignInError = exports.NonceRetrievalError = void 0;\nclass NonceRetrievalError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'NonceRetrievalError';\n    }\n}\nexports.NonceRetrievalError = NonceRetrievalError;\nclass SignInError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'SignInError';\n    }\n}\nexports.SignInError = SignInError;\nclass PairError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'PairError';\n    }\n}\nexports.PairError = PairError;\nclass UserStorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'UserStorageError';\n    }\n}\nexports.UserStorageError = UserStorageError;\nclass ValidationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ValidationError';\n    }\n}\nexports.ValidationError = ValidationError;\nclass UnsupportedAuthTypeError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'UnsupportedAuthTypeError';\n    }\n}\nexports.UnsupportedAuthTypeError = UnsupportedAuthTypeError;\nclass NotFoundError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'NotFoundError';\n    }\n}\nexports.NotFoundError = NotFoundError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./authentication.cjs\"), exports);\n__exportStar(require(\"./user-storage.cjs\"), exports);\n__exportStar(require(\"./env.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./encryption.cjs\"), exports);\n__exportStar(require(\"./utils/messaging-signing-snap-requests.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _UserStorage_instances, _UserStorage_upsertUserStorage, _UserStorage_getUserStorage, _UserStorage_getUserStorageAllFeatureEntries, _UserStorage_createEntryKey, _UserStorage_getAuthorizationHeader;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserStorage = exports.STORAGE_URL = void 0;\nconst schema_1 = require(\"../controllers/user-storage/schema.cjs\");\nconst encryption_1 = __importStar(require(\"./encryption.cjs\"));\nconst env_1 = require(\"./env.cjs\");\nconst errors_1 = require(\"./errors.cjs\");\nconst STORAGE_URL = (env, encryptedPath) => `${(0, env_1.getEnvUrls)(env).userStorageApiUrl}/api/v1/userstorage/${encryptedPath}`;\nexports.STORAGE_URL = STORAGE_URL;\nclass UserStorage {\n    constructor(config, options) {\n        _UserStorage_instances.add(this);\n        this.env = config.env;\n        this.config = config;\n        this.options = options;\n    }\n    async setItem(path, value) {\n        await __classPrivateFieldGet(this, _UserStorage_instances, \"m\", _UserStorage_upsertUserStorage).call(this, path, value);\n    }\n    async getItem(path) {\n        return __classPrivateFieldGet(this, _UserStorage_instances, \"m\", _UserStorage_getUserStorage).call(this, path);\n    }\n    async getAllFeatureItems(path) {\n        return __classPrivateFieldGet(this, _UserStorage_instances, \"m\", _UserStorage_getUserStorageAllFeatureEntries).call(this, path);\n    }\n    async getStorageKey() {\n        const storageKey = await this.options.storage?.getStorageKey();\n        if (storageKey) {\n            return storageKey;\n        }\n        const userProfile = await this.config.auth.getUserProfile();\n        const storageKeySignature = await this.config.auth.signMessage(`metamask:${userProfile.profileId}`);\n        const hashedStorageKeySignature = (0, encryption_1.createSHA256Hash)(storageKeySignature);\n        await this.options.storage?.setStorageKey(hashedStorageKeySignature);\n        return hashedStorageKeySignature;\n    }\n}\nexports.UserStorage = UserStorage;\n_UserStorage_instances = new WeakSet(), _UserStorage_upsertUserStorage = async function _UserStorage_upsertUserStorage(path, data) {\n    try {\n        const headers = await __classPrivateFieldGet(this, _UserStorage_instances, \"m\", _UserStorage_getAuthorizationHeader).call(this);\n        const storageKey = await this.getStorageKey();\n        const encryptedData = await encryption_1.default.encryptString(data, storageKey);\n        const encryptedPath = (0, schema_1.createEntryPath)(path, storageKey);\n        const url = new URL((0, exports.STORAGE_URL)(this.env, encryptedPath));\n        const response = await fetch(url.toString(), {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                ...headers,\n            },\n            body: JSON.stringify({ data: encryptedData }),\n        });\n        if (!response.ok) {\n            const responseBody = await response.json().catch(() => ({\n                message: 'unknown',\n                error: 'unknown',\n            }));\n            throw new Error(`HTTP error message: ${responseBody.message}, error: ${responseBody.error}`);\n        }\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new errors_1.UserStorageError(`failed to upsert user storage for path '${path}'. ${errorMessage}`);\n    }\n}, _UserStorage_getUserStorage = async function _UserStorage_getUserStorage(path) {\n    try {\n        const headers = await __classPrivateFieldGet(this, _UserStorage_instances, \"m\", _UserStorage_getAuthorizationHeader).call(this);\n        const storageKey = await this.getStorageKey();\n        const encryptedPath = (0, schema_1.createEntryPath)(path, storageKey);\n        const url = new URL((0, exports.STORAGE_URL)(this.env, encryptedPath));\n        const response = await fetch(url.toString(), {\n            headers: {\n                'Content-Type': 'application/json',\n                ...headers,\n            },\n        });\n        if (response.status === 404) {\n            throw new errors_1.NotFoundError(`feature/key set not found for path '${path}'.`);\n        }\n        if (!response.ok) {\n            const responseBody = (await response.json());\n            throw new Error(`HTTP error message: ${responseBody.message}, error: ${responseBody.error}`);\n        }\n        const { Data: encryptedData } = await response.json();\n        return encryption_1.default.decryptString(encryptedData, storageKey);\n    }\n    catch (e) {\n        if (e instanceof errors_1.NotFoundError) {\n            throw e;\n        }\n        /* istanbul ignore next */\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new errors_1.UserStorageError(`failed to get user storage for path '${path}'. ${errorMessage}`);\n    }\n}, _UserStorage_getUserStorageAllFeatureEntries = async function _UserStorage_getUserStorageAllFeatureEntries(path) {\n    try {\n        const headers = await __classPrivateFieldGet(this, _UserStorage_instances, \"m\", _UserStorage_getAuthorizationHeader).call(this);\n        const storageKey = await this.getStorageKey();\n        const url = new URL((0, exports.STORAGE_URL)(this.env, path));\n        const response = await fetch(url.toString(), {\n            headers: {\n                'Content-Type': 'application/json',\n                ...headers,\n            },\n        });\n        if (response.status === 404) {\n            throw new errors_1.NotFoundError(`feature not found for path '${path}'.`);\n        }\n        if (!response.ok) {\n            const responseBody = (await response.json());\n            throw new Error(`HTTP error message: ${responseBody.message}, error: ${responseBody.error}`);\n        }\n        const userStorage = await response.json();\n        if (!Array.isArray(userStorage)) {\n            return null;\n        }\n        const decryptedData = userStorage.flatMap((entry) => {\n            if (!entry.Data) {\n                return [];\n            }\n            return encryption_1.default.decryptString(entry.Data, storageKey);\n        });\n        return (await Promise.allSettled(decryptedData))\n            .map((d) => (d.status === 'fulfilled' ? d.value : undefined))\n            .filter((d) => d !== undefined);\n    }\n    catch (e) {\n        if (e instanceof errors_1.NotFoundError) {\n            throw e;\n        }\n        /* istanbul ignore next */\n        const errorMessage = e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        throw new errors_1.UserStorageError(`failed to get user storage for path '${path}'. ${errorMessage}`);\n    }\n}, _UserStorage_createEntryKey = function _UserStorage_createEntryKey(key, storageKey) {\n    const hashedKey = (0, encryption_1.createSHA256Hash)(key + storageKey);\n    return hashedKey;\n}, _UserStorage_getAuthorizationHeader = \n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nasync function _UserStorage_getAuthorizationHeader() {\n    const accessToken = await this.config.auth.getAccessToken();\n    return { Authorization: `Bearer ${accessToken}` };\n};\n//# sourceMappingURL=user-storage.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMetaMaskProviderEIP6963 = exports.metamaskClientsRdns = void 0;\nexports.metamaskClientsRdns = {\n    main: 'io.metamask',\n    flask: 'io.metamask.flask',\n    institutional: 'io.metamask.mmi',\n};\n// Cache, as when the function is recalled, we can reuse instead of continue waiting\nconst providerCache = {};\n/**\n * This uses EIP6963 to find all metamask accounts and returns the first matching provider\n * the consumer requests (main, flask, institutional, or any)\n *\n * @param type - the MetaMask Wallet type (main, flask, institutional, or any)\n * @returns a ethers provider so you can make requests to that specific wallet\n */\nfunction getMetaMaskProviderEIP6963(type = 'any') {\n    return new Promise((res) => {\n        if (type !== 'any' && exports.metamaskClientsRdns[type] === undefined) {\n            res(null);\n            return;\n        }\n        const cachedProvider = providerCache[type];\n        if (cachedProvider) {\n            res(cachedProvider);\n            return;\n        }\n        const providers = [];\n        const handleProviderEvent = (event) => {\n            const typedEvent = event;\n            const providerDetail = typedEvent?.detail;\n            if (providerDetail?.provider && providerDetail?.info?.rdns) {\n                providers.push({\n                    rdns: providerDetail?.info?.rdns,\n                    provider: providerDetail?.provider,\n                });\n            }\n        };\n        window.addEventListener('eip6963:announceProvider', handleProviderEvent);\n        window.dispatchEvent(new Event('eip6963:requestProvider'));\n        /**\n         * It may take some time for the events to be emitted from the different wallets.\n         * So waiting a small period of time before we use the collected events.\n         */\n        setTimeout(() => {\n            // remove attached listener\n            window.removeEventListener('eip6963:announceProvider', handleProviderEvent);\n            let provider;\n            if (type === 'any') {\n                // return the first MM client we find\n                const metamaskClients = Object.values(exports.metamaskClientsRdns);\n                provider =\n                    providers.find((p) => metamaskClients.includes(p.rdns))?.provider ??\n                        null;\n            }\n            else {\n                const metamaskRdns = exports.metamaskClientsRdns[type];\n                provider =\n                    providers.find((p) => p.rdns === metamaskRdns)?.provider ?? null;\n            }\n            if (provider) {\n                providerCache[type] = provider;\n            }\n            return res(provider);\n        }, 100);\n    });\n}\nexports.getMetaMaskProviderEIP6963 = getMetaMaskProviderEIP6963;\n//# sourceMappingURL=eip-6963-metamask-provider.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MESSAGE_SIGNING_SNAP = exports.isSnapConnected = exports.getSnaps = exports.connectSnap = exports.SNAP_ORIGIN = void 0;\nexports.SNAP_ORIGIN = 'npm:@metamask/message-signing-snap';\n/**\n * Requests Connection to the Message Signing Snap\n *\n * @param provider - MetaMask Wallet Provider\n * @returns snap connect result\n */\nasync function connectSnap(provider) {\n    const result = await provider.request({\n        method: 'wallet_requestSnaps',\n        params: {\n            [exports.SNAP_ORIGIN]: {},\n        },\n    });\n    return result;\n}\nexports.connectSnap = connectSnap;\n/**\n * Gets Snaps from a MetaMask Wallet\n *\n * @param provider - MetaMask Wallet Provider\n * @returns All currently installed snaps.\n */\nasync function getSnaps(provider) {\n    const result = await provider.request({\n        method: 'wallet_getSnaps',\n    });\n    return result;\n}\nexports.getSnaps = getSnaps;\n/**\n * Check if snap is connected\n *\n * @param provider - MetaMask Wallet Provider\n * @returns if snap is connected\n */\nasync function isSnapConnected(provider) {\n    try {\n        const snaps = await getSnaps(provider);\n        if (!snaps) {\n            return false;\n        }\n        return Object.keys(snaps).includes(exports.SNAP_ORIGIN);\n    }\n    catch (e) {\n        console.error('Failed to determine if snap is connected', e);\n        return false;\n    }\n}\nexports.isSnapConnected = isSnapConnected;\nexports.MESSAGE_SIGNING_SNAP = {\n    async getPublicKey(provider) {\n        const publicKey = await provider.request({\n            method: 'wallet_invokeSnap',\n            params: { snapId: exports.SNAP_ORIGIN, request: { method: 'getPublicKey' } },\n        });\n        return publicKey;\n    },\n    async signMessage(provider, message) {\n        const signedMessage = await provider?.request({\n            method: 'wallet_invokeSnap',\n            params: {\n                snapId: exports.SNAP_ORIGIN,\n                request: { method: 'signMessage', params: { message } },\n            },\n        });\n        return signedMessage;\n    },\n};\n//# sourceMappingURL=messaging-signing-snap-requests.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateLoginResponse = void 0;\n/**\n * Validates Shape is LoginResponse\n * NOTE - validation is pretty loose, we can improve this by using external libs like Zod for improved/tighter validation\n *\n * @param input - unknown/untyped input\n * @returns boolean if input is LoginResponse\n */\nfunction validateLoginResponse(input) {\n    const assumedInput = input;\n    if (!assumedInput) {\n        return false;\n    }\n    if (!assumedInput?.token || !assumedInput?.profile) {\n        return false;\n    }\n    return true;\n}\nexports.validateLoginResponse = validateLoginResponse;\n//# sourceMappingURL=validate-login-response.cjs.map","module.exports={\n  \"QRHardwareInvalidTransactionTitle\": {\n    \"message\": \"Error\"\n  },\n  \"QRHardwareMismatchedSignId\": {\n    \"message\": \"Incongruent transaction data. Please check the transaction details.\"\n  },\n  \"QRHardwarePubkeyAccountOutOfRange\": {\n    \"message\": \"No more accounts. If you would like to access another account unlisted below, please reconnect your hardware wallet and select it.\"\n  },\n  \"QRHardwareScanInstructions\": {\n    \"message\": \"Place the QR code in front of your camera. The screen is blurred, but it will not affect the reading.\"\n  },\n  \"QRHardwareSignRequestCancel\": {\n    \"message\": \"Reject\"\n  },\n  \"QRHardwareSignRequestDescription\": {\n    \"message\": \"After you’ve signed with your wallet, click on 'Get Signature' to receive the signature\"\n  },\n  \"QRHardwareSignRequestGetSignature\": {\n    \"message\": \"Get signature\"\n  },\n  \"QRHardwareSignRequestSubtitle\": {\n    \"message\": \"Scan the QR code with your wallet\"\n  },\n  \"QRHardwareSignRequestTitle\": {\n    \"message\": \"Request signature\"\n  },\n  \"QRHardwareUnknownQRCodeTitle\": {\n    \"message\": \"Error\"\n  },\n  \"QRHardwareUnknownWalletQRCode\": {\n    \"message\": \"Invalid QR code. Please scan the sync QR code of the hardware wallet.\"\n  },\n  \"QRHardwareWalletImporterTitle\": {\n    \"message\": \"Scan QR code\"\n  },\n  \"QRHardwareWalletSteps1Description\": {\n    \"message\": \"You can choose from a list of official QR-code supporting partners below.\"\n  },\n  \"QRHardwareWalletSteps1Title\": {\n    \"message\": \"Connect your QR hardware wallet\"\n  },\n  \"QRHardwareWalletSteps2Description\": {\n    \"message\": \"Ngrave Zero\"\n  },\n  \"SIWEAddressInvalid\": {\n    \"message\": \"The address in the sign-in request does not match the address of the account you are using to sign in.\"\n  },\n  \"SIWEDomainInvalidText\": {\n    \"message\": \"The site you're attempting to sign into doesn't match the domain in the request. Proceed with caution.\"\n  },\n  \"SIWEDomainInvalidTitle\": {\n    \"message\": \"Deceptive site request.\"\n  },\n  \"SIWEDomainWarningBody\": {\n    \"message\": \"The website ($1) is asking you to sign in to the wrong domain. This may be a phishing attack.\",\n    \"description\": \"$1 represents the website domain\"\n  },\n  \"SIWEDomainWarningLabel\": {\n    \"message\": \"Unsafe\"\n  },\n  \"SIWELabelChainID\": {\n    \"message\": \"Chain ID:\"\n  },\n  \"SIWELabelExpirationTime\": {\n    \"message\": \"Expires At:\"\n  },\n  \"SIWELabelIssuedAt\": {\n    \"message\": \"Issued At:\"\n  },\n  \"SIWELabelMessage\": {\n    \"message\": \"Message:\"\n  },\n  \"SIWELabelNonce\": {\n    \"message\": \"Nonce:\"\n  },\n  \"SIWELabelNotBefore\": {\n    \"message\": \"Not Before:\"\n  },\n  \"SIWELabelRequestID\": {\n    \"message\": \"Request ID:\"\n  },\n  \"SIWELabelResources\": {\n    \"message\": \"Resources: $1\",\n    \"description\": \"$1 represents the number of resources\"\n  },\n  \"SIWELabelURI\": {\n    \"message\": \"URI:\"\n  },\n  \"SIWELabelVersion\": {\n    \"message\": \"Version:\"\n  },\n  \"SIWESiteRequestSubtitle\": {\n    \"message\": \"This site is requesting to sign in with\"\n  },\n  \"SIWESiteRequestTitle\": {\n    \"message\": \"Sign-in request\"\n  },\n  \"SIWEWarningSubtitle\": {\n    \"message\": \"To confirm you understand, check:\"\n  },\n  \"SIWEWarningTitle\": {\n    \"message\": \"Are you sure?\"\n  },\n  \"about\": {\n    \"message\": \"About\"\n  },\n  \"accept\": {\n    \"message\": \"Accept\"\n  },\n  \"acceptTermsOfUse\": {\n    \"message\": \"I have read and agree to the $1\",\n    \"description\": \"$1 is the `terms` message\"\n  },\n  \"accessAndSpendNoticeNFT\": {\n    \"message\": \"$1 may access and spend this asset\",\n    \"description\": \"$1 is the url of the site requesting ability to spend\"\n  },\n  \"accessYourWalletWithSRP\": {\n    \"message\": \"Access your wallet with your Secret Recovery Phrase\"\n  },\n  \"accessYourWalletWithSRPDescription\": {\n    \"message\": \"MetaMask cannot recover your password. We will use your Secret Recovery Phrase to validate your ownership, restore your wallet and set up a new password. First, enter the Secret Recovery Phrase that you were given when you created your wallet. $1\",\n    \"description\": \"$1 is the words 'Learn More' from key 'learnMore', separated here so that it can be added as a link\"\n  },\n  \"accessingYourCamera\": {\n    \"message\": \"Accessing your camera...\"\n  },\n  \"account\": {\n    \"message\": \"Account\"\n  },\n  \"accountActivity\": {\n    \"message\": \"Account activity\"\n  },\n  \"accountActivityText\": {\n    \"message\": \"Select the accounts you want to be notified about:\"\n  },\n  \"accountBalance\": {\n    \"message\": \"Account balance\"\n  },\n  \"accountDetails\": {\n    \"message\": \"Account details\"\n  },\n  \"accountIdenticon\": {\n    \"message\": \"Account identicon\"\n  },\n  \"accountIsntConnectedToastText\": {\n    \"message\": \"$1 isn't connected to $2\"\n  },\n  \"accountName\": {\n    \"message\": \"Account name\"\n  },\n  \"accountNameDuplicate\": {\n    \"message\": \"This account name already exists\",\n    \"description\": \"This is an error message shown when the user enters a new account name that matches an existing account name\"\n  },\n  \"accountNameReserved\": {\n    \"message\": \"This account name is reserved\",\n    \"description\": \"This is an error message shown when the user enters a new account name that is reserved for future use\"\n  },\n  \"accountOptions\": {\n    \"message\": \"Account options\"\n  },\n  \"accountSelectionRequired\": {\n    \"message\": \"You need to select an account!\"\n  },\n  \"accountTypeNotSupported\": {\n    \"message\": \"Account type not supported\"\n  },\n  \"accounts\": {\n    \"message\": \"Accounts\"\n  },\n  \"accountsConnected\": {\n    \"message\": \"Accounts connected\"\n  },\n  \"active\": {\n    \"message\": \"Active\"\n  },\n  \"activity\": {\n    \"message\": \"Activity\"\n  },\n  \"activityLog\": {\n    \"message\": \"Activity log\"\n  },\n  \"add\": {\n    \"message\": \"Add\"\n  },\n  \"addACustomNetwork\": {\n    \"message\": \"Add a custom network\"\n  },\n  \"addANetwork\": {\n    \"message\": \"Add a network\"\n  },\n  \"addANickname\": {\n    \"message\": \"Add a nickname\"\n  },\n  \"addAUrl\": {\n    \"message\": \"Add a URL\"\n  },\n  \"addAccount\": {\n    \"message\": \"Add account\"\n  },\n  \"addAccountToMetaMask\": {\n    \"message\": \"Add account to MetaMask\"\n  },\n  \"addAcquiredTokens\": {\n    \"message\": \"Add the tokens you've acquired using MetaMask\"\n  },\n  \"addAlias\": {\n    \"message\": \"Add alias\"\n  },\n  \"addBlockExplorer\": {\n    \"message\": \"Add a block explorer\"\n  },\n  \"addBlockExplorerUrl\": {\n    \"message\": \"Add a block explorer URL\"\n  },\n  \"addContact\": {\n    \"message\": \"Add contact\"\n  },\n  \"addCustomNetwork\": {\n    \"message\": \"Add custom network\"\n  },\n  \"addEthereumChainConfirmationDescription\": {\n    \"message\": \"This will allow this network to be used within MetaMask.\"\n  },\n  \"addEthereumChainConfirmationRisks\": {\n    \"message\": \"MetaMask does not verify custom networks.\"\n  },\n  \"addEthereumChainConfirmationRisksLearnMore\": {\n    \"message\": \"Learn about $1.\",\n    \"description\": \"$1 is a link with text that is provided by the 'addEthereumChainConfirmationRisksLearnMoreLink' key\"\n  },\n  \"addEthereumChainConfirmationRisksLearnMoreLink\": {\n    \"message\": \"scams and network security risks\",\n    \"description\": \"Link text for the 'addEthereumChainConfirmationRisksLearnMore' translation key\"\n  },\n  \"addEthereumChainConfirmationTitle\": {\n    \"message\": \"Allow this site to add a network?\"\n  },\n  \"addEthereumChainWarningModalHeader\": {\n    \"message\": \"Only add this RPC provider if you’re sure you can trust it. $1\",\n    \"description\": \"$1 is addEthereumChainWarningModalHeaderPartTwo passed separately so that it can be bolded\"\n  },\n  \"addEthereumChainWarningModalHeaderPartTwo\": {\n    \"message\": \"Malicious providers may lie about the state of the blockchain and record your network activity.\"\n  },\n  \"addEthereumChainWarningModalListHeader\": {\n    \"message\": \"It's important that your provider is reliable, as it has the power to:\"\n  },\n  \"addEthereumChainWarningModalListPointOne\": {\n    \"message\": \"See your accounts and IP address, and associate them together\"\n  },\n  \"addEthereumChainWarningModalListPointThree\": {\n    \"message\": \"Show account balances and other on-chain states\"\n  },\n  \"addEthereumChainWarningModalListPointTwo\": {\n    \"message\": \"Broadcast your transactions\"\n  },\n  \"addEthereumChainWarningModalTitle\": {\n    \"message\": \"You are adding a new RPC provider for Ethereum Mainnet\"\n  },\n  \"addEthereumWatchOnlyAccount\": {\n    \"message\": \"Watch an Ethereum account (Beta)\"\n  },\n  \"addFriendsAndAddresses\": {\n    \"message\": \"Add friends and addresses you trust\"\n  },\n  \"addHardwareWallet\": {\n    \"message\": \"Add hardware wallet\"\n  },\n  \"addIPFSGateway\": {\n    \"message\": \"Add your preferred IPFS gateway\"\n  },\n  \"addImportAccount\": {\n    \"message\": \"Add account or hardware wallet\"\n  },\n  \"addMemo\": {\n    \"message\": \"Add memo\"\n  },\n  \"addNetwork\": {\n    \"message\": \"Add network\"\n  },\n  \"addNetworkConfirmationTitle\": {\n    \"message\": \"Add $1\",\n    \"description\": \"$1 represents network name\"\n  },\n  \"addNewAccount\": {\n    \"message\": \"Add a new Ethereum account\"\n  },\n  \"addNewBitcoinAccount\": {\n    \"message\": \"Add a new Bitcoin account (Beta)\"\n  },\n  \"addNewBitcoinTestnetAccount\": {\n    \"message\": \"Add a new Bitcoin account (Testnet)\"\n  },\n  \"addNewToken\": {\n    \"message\": \"Add new token\"\n  },\n  \"addNft\": {\n    \"message\": \"Add NFT\"\n  },\n  \"addNfts\": {\n    \"message\": \"Add NFTs\"\n  },\n  \"addRpcUrl\": {\n    \"message\": \"Add RPC URL\"\n  },\n  \"addSnapAccountToggle\": {\n    \"message\": \"Enable \\\"Add account Snap (Beta)\\\"\"\n  },\n  \"addSnapAccountsDescription\": {\n    \"message\": \"Turning on this feature will give you the option to add the new Beta account Snaps right from your account list. If you install an account Snap, remember that it is a third-party service.\"\n  },\n  \"addSuggestedNFTs\": {\n    \"message\": \"Add suggested NFTs\"\n  },\n  \"addSuggestedTokens\": {\n    \"message\": \"Add suggested tokens\"\n  },\n  \"addToken\": {\n    \"message\": \"Add token\"\n  },\n  \"addTokenByContractAddress\": {\n    \"message\": \"Can’t find a token? You can manually add any token by pasting its address. Token contract addresses can be found on $1\",\n    \"description\": \"$1 is a blockchain explorer for a specific network, e.g. Etherscan for Ethereum\"\n  },\n  \"addUrl\": {\n    \"message\": \"Add URL\"\n  },\n  \"addingAccount\": {\n    \"message\": \"Adding account\"\n  },\n  \"addingCustomNetwork\": {\n    \"message\": \"Adding Network\"\n  },\n  \"addingTokens\": {\n    \"message\": \"Adding tokens\"\n  },\n  \"additionalNetworks\": {\n    \"message\": \"Additional networks\"\n  },\n  \"address\": {\n    \"message\": \"Address\"\n  },\n  \"addressCopied\": {\n    \"message\": \"Address copied!\"\n  },\n  \"addressMismatch\": {\n    \"message\": \"Site address mismatch\"\n  },\n  \"addressMismatchOriginal\": {\n    \"message\": \"Current URL: $1\",\n    \"description\": \"$1 replaced by origin URL in confirmation request\"\n  },\n  \"addressMismatchPunycode\": {\n    \"message\": \"Punycode version: $1\",\n    \"description\": \"$1 replaced by punycode version of the URL in confirmation request\"\n  },\n  \"advanced\": {\n    \"message\": \"Advanced\"\n  },\n  \"advancedBaseGasFeeToolTip\": {\n    \"message\": \"When your transaction gets included in the block, any difference between your max base fee and the actual base fee will be refunded. Total amount is calculated as max base fee (in GWEI) * gas limit.\"\n  },\n  \"advancedConfiguration\": {\n    \"message\": \"Advanced configuration\"\n  },\n  \"advancedDetailsDataDesc\": {\n    \"message\": \"Data\"\n  },\n  \"advancedDetailsHexDesc\": {\n    \"message\": \"Hex\"\n  },\n  \"advancedDetailsNonceDesc\": {\n    \"message\": \"Nonce\"\n  },\n  \"advancedDetailsNonceTooltip\": {\n    \"message\": \"This is the transaction number of an account. Nonce for the first transaction is 0 and it increases in sequential order.\"\n  },\n  \"advancedGasFeeDefaultOptIn\": {\n    \"message\": \"Save these values as my default for the $1 network.\",\n    \"description\": \"$1 is the current network name.\"\n  },\n  \"advancedGasFeeModalTitle\": {\n    \"message\": \"Advanced gas fee\"\n  },\n  \"advancedGasPriceTitle\": {\n    \"message\": \"Gas price\"\n  },\n  \"advancedPriorityFeeToolTip\": {\n    \"message\": \"Priority fee (aka “miner tip”) goes directly to miners and incentivizes them to prioritize your transaction.\"\n  },\n  \"agreeTermsOfUse\": {\n    \"message\": \"I agree to MetaMask's $1\",\n    \"description\": \"$1 is the `terms` link\"\n  },\n  \"airgapVault\": {\n    \"message\": \"AirGap Vault\"\n  },\n  \"alert\": {\n    \"message\": \"Alert\"\n  },\n  \"alertActionBuy\": {\n    \"message\": \"Buy ETH\"\n  },\n  \"alertActionUpdateGas\": {\n    \"message\": \"Update gas limit\"\n  },\n  \"alertActionUpdateGasFee\": {\n    \"message\": \"Update fee\"\n  },\n  \"alertActionUpdateGasFeeLevel\": {\n    \"message\": \"Update gas options\"\n  },\n  \"alertBannerMultipleAlertsDescription\": {\n    \"message\": \"If you approve this request, a third party known for scams might take all your assets.\"\n  },\n  \"alertBannerMultipleAlertsTitle\": {\n    \"message\": \"Multiple alerts!\"\n  },\n  \"alertDisableTooltip\": {\n    \"message\": \"This can be changed in \\\"Settings > Alerts\\\"\"\n  },\n  \"alertMessageAddressMismatchWarning\": {\n    \"message\": \"Attackers sometimes mimic sites by making small changes to the site address. Make sure you're interacting with the intended site before you continue.\"\n  },\n  \"alertMessageGasEstimateFailed\": {\n    \"message\": \"We’re unable to provide an accurate fee and this estimate might be high. We suggest you to input a custom gas limit, but there’s a risk the transaction will still fail.\"\n  },\n  \"alertMessageGasFeeLow\": {\n    \"message\": \"When choosing a low fee, expect slower transactions and longer wait times. For faster transactions, choose Market or Aggressive fee options.\"\n  },\n  \"alertMessageGasTooLow\": {\n    \"message\": \"To continue with this transaction, you’ll need to increase the gas limit to 21000 or higher.\"\n  },\n  \"alertMessageInsufficientBalance\": {\n    \"message\": \"You do not have enough ETH in your account to pay for transaction fees.\"\n  },\n  \"alertMessageNetworkBusy\": {\n    \"message\": \"Gas prices are high and estimates are less accurate.\"\n  },\n  \"alertMessageNoGasPrice\": {\n    \"message\": \"We can’t move forward with this transaction until you manually update the fee.\"\n  },\n  \"alertMessagePendingTransactions\": {\n    \"message\": \"This transaction won’t go through until a previous transaction is complete. Learn how to cancel or speed up a transaction.\"\n  },\n  \"alertMessageSignInDomainMismatch\": {\n    \"message\": \"The site making the request is not the site you’re signing into. This could be an attempt to steal your login credentials.\"\n  },\n  \"alertMessageSignInWrongAccount\": {\n    \"message\": \"This site is asking you to sign in using the wrong account.\"\n  },\n  \"alertMessageSigningOrSubmitting\": {\n    \"message\": \"This transaction will only go through once your previous transaction is complete.\"\n  },\n  \"alertModalAcknowledge\": {\n    \"message\": \"I have acknowledged the risk and still want to proceed\"\n  },\n  \"alertModalDetails\": {\n    \"message\": \"Alert Details\"\n  },\n  \"alertModalReviewAllAlerts\": {\n    \"message\": \"Review all alerts\"\n  },\n  \"alertReasonGasEstimateFailed\": {\n    \"message\": \"Inaccurate fee\"\n  },\n  \"alertReasonGasFeeLow\": {\n    \"message\": \"Slow speed\"\n  },\n  \"alertReasonGasTooLow\": {\n    \"message\": \"Low gas limit\"\n  },\n  \"alertReasonInsufficientBalance\": {\n    \"message\": \"Insufficient funds\"\n  },\n  \"alertReasonNetworkBusy\": {\n    \"message\": \"Network is busy\"\n  },\n  \"alertReasonNoGasPrice\": {\n    \"message\": \"Fee estimate unavailable\"\n  },\n  \"alertReasonPendingTransactions\": {\n    \"message\": \"Pending transaction\"\n  },\n  \"alertReasonSignIn\": {\n    \"message\": \"Suspicious sign-in request\"\n  },\n  \"alertReasonWrongAccount\": {\n    \"message\": \"Wrong account\"\n  },\n  \"alertSettingsUnconnectedAccount\": {\n    \"message\": \"Browsing a website with an unconnected account selected\"\n  },\n  \"alertSettingsUnconnectedAccountDescription\": {\n    \"message\": \"This alert is shown in the popup when you are browsing a connected web3 site, but the currently selected account is not connected.\"\n  },\n  \"alertSettingsWeb3ShimUsage\": {\n    \"message\": \"When a website tries to use the removed window.web3 API\"\n  },\n  \"alertSettingsWeb3ShimUsageDescription\": {\n    \"message\": \"This alert is shown in the popup when you are browsing a site that tries to use the removed window.web3 API, and may be broken as a result.\"\n  },\n  \"alerts\": {\n    \"message\": \"Alerts\"\n  },\n  \"all\": {\n    \"message\": \"All\"\n  },\n  \"allCustodianAccountsConnectedSubtitle\": {\n    \"message\": \"You have either already connected all your custodian accounts or don’t have any account to connect to MetaMask Institutional.\"\n  },\n  \"allCustodianAccountsConnectedTitle\": {\n    \"message\": \"No accounts available to connect\"\n  },\n  \"allOfYour\": {\n    \"message\": \"All of your $1\",\n    \"description\": \"$1 is the symbol or name of the token that the user is approving spending\"\n  },\n  \"allPermissions\": {\n    \"message\": \"All Permissions\"\n  },\n  \"allTimeHigh\": {\n    \"message\": \"All time high\"\n  },\n  \"allTimeLow\": {\n    \"message\": \"All time low\"\n  },\n  \"allYourNFTsOf\": {\n    \"message\": \"All of your NFTs from $1\",\n    \"description\": \"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name\"\n  },\n  \"allow\": {\n    \"message\": \"Allow\"\n  },\n  \"allowMmiToConnectToCustodian\": {\n    \"message\": \"This will allow MMI to connect to $1 to import your accounts.\"\n  },\n  \"allowNotifications\": {\n    \"message\": \"Allow notifications\"\n  },\n  \"allowSpendToken\": {\n    \"message\": \"Give permission to access your $1?\",\n    \"description\": \"$1 is the symbol of the token that are requesting to spend\"\n  },\n  \"allowWithdrawAndSpend\": {\n    \"message\": \"Allow $1 to withdraw and spend up to the following amount:\",\n    \"description\": \"The url of the site that requested permission to 'withdraw and spend'\"\n  },\n  \"amount\": {\n    \"message\": \"Amount\"\n  },\n  \"amountReceived\": {\n    \"message\": \"Amount Received\"\n  },\n  \"amountSent\": {\n    \"message\": \"Amount Sent\"\n  },\n  \"andForListItems\": {\n    \"message\": \"$1, and $2\",\n    \"description\": \"$1 is the first item, $2 is the last item in a list of items. Used in Snap Install Warning modal.\"\n  },\n  \"andForTwoItems\": {\n    \"message\": \"$1 and $2\",\n    \"description\": \"$1 is the first item, $2 is the second item. Used in Snap Install Warning modal.\"\n  },\n  \"appDescription\": {\n    \"message\": \"An Ethereum Wallet in your Browser\",\n    \"description\": \"The description of the application\"\n  },\n  \"appName\": {\n    \"message\": \"MetaMask\",\n    \"description\": \"The name of the application\"\n  },\n  \"appNameBeta\": {\n    \"message\": \"MetaMask Beta\",\n    \"description\": \"The name of the application (Beta)\"\n  },\n  \"appNameFlask\": {\n    \"message\": \"MetaMask Flask\",\n    \"description\": \"The name of the application (Flask)\"\n  },\n  \"appNameMmi\": {\n    \"message\": \"MetaMask Institutional\",\n    \"description\": \"The name of the application (MMI)\"\n  },\n  \"approve\": {\n    \"message\": \"Approve spend limit\"\n  },\n  \"approveAllTokensTitle\": {\n    \"message\": \"Allow access to and transfer of all your $1?\",\n    \"description\": \"$1 is the symbol of the token for which the user is granting approval\"\n  },\n  \"approveAllTokensTitleWithoutSymbol\": {\n    \"message\": \"Allow access to and transfer all of your NFTs from $1?\",\n    \"description\": \"$1 a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name\"\n  },\n  \"approveButtonText\": {\n    \"message\": \"Approve\"\n  },\n  \"approveIncreaseAllowance\": {\n    \"message\": \"Increase $1 spending cap\",\n    \"description\": \"The token symbol that is being approved\"\n  },\n  \"approveSpendingCap\": {\n    \"message\": \"Approve $1 spending cap\",\n    \"description\": \"The token symbol that is being approved\"\n  },\n  \"approveTokenDescription\": {\n    \"message\": \"This allows a third party to access and transfer the following NFTs without further notice until you revoke its access.\"\n  },\n  \"approveTokenDescriptionWithoutSymbol\": {\n    \"message\": \"This allows a third party to access and transfer all of your NFTs from $1 without further notice until you revoke its access.\",\n    \"description\": \"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name\"\n  },\n  \"approveTokenTitle\": {\n    \"message\": \"Allow access to and transfer of your $1?\",\n    \"description\": \"$1 is the symbol of the token for which the user is granting approval\"\n  },\n  \"approved\": {\n    \"message\": \"Approved\"\n  },\n  \"approvedAsset\": {\n    \"message\": \"Approved asset\"\n  },\n  \"approvedOn\": {\n    \"message\": \"Approved on $1\",\n    \"description\": \"$1 is the approval date for a permission\"\n  },\n  \"approvedOnForAccounts\": {\n    \"message\": \"Approved on $1 for $2\",\n    \"description\": \"$1 is the approval date for a permission. $2 is the AvatarGroup component displaying account images.\"\n  },\n  \"areYouSure\": {\n    \"message\": \"Are you sure?\"\n  },\n  \"asset\": {\n    \"message\": \"Asset\"\n  },\n  \"assetOptions\": {\n    \"message\": \"Asset options\"\n  },\n  \"attemptSendingAssets\": {\n    \"message\": \"You may lose your assets if you try to send them from another network. Transfer funds safely between networks by using a bridge.\"\n  },\n  \"attemptSendingAssetsWithPortfolio\": {\n    \"message\": \"You may lose your assets if you try to send them from another network. Transfer funds safely between networks by using a bridge, like $1\"\n  },\n  \"attemptToCancelSwapForFree\": {\n    \"message\": \"Attempt to cancel swap for free\"\n  },\n  \"attributes\": {\n    \"message\": \"Attributes\"\n  },\n  \"attributions\": {\n    \"message\": \"Attributions\"\n  },\n  \"auroraRpcDeprecationMessage\": {\n    \"message\": \"The Infura RPC URL is no longer supporting Aurora.\"\n  },\n  \"authorizedPermissions\": {\n    \"message\": \"You have authorized the following permissions\"\n  },\n  \"autoDetectTokens\": {\n    \"message\": \"Autodetect tokens\"\n  },\n  \"autoDetectTokensDescription\": {\n    \"message\": \"We use third-party APIs to detect and display new tokens sent to your wallet. Turn off if you don’t want the app to automatically pull data from those services. $1\",\n    \"description\": \"$1 is a link to a support article\"\n  },\n  \"autoLockTimeLimit\": {\n    \"message\": \"Auto-lock timer (minutes)\"\n  },\n  \"autoLockTimeLimitDescription\": {\n    \"message\": \"Set the idle time in minutes before MetaMask will become locked.\"\n  },\n  \"average\": {\n    \"message\": \"Average\"\n  },\n  \"awaitingApproval\": {\n    \"message\": \"Awaiting approval...\"\n  },\n  \"back\": {\n    \"message\": \"Back\"\n  },\n  \"backupApprovalInfo\": {\n    \"message\": \"This secret code is required to recover your wallet in case you lose your device, forget your password, have to re-install MetaMask, or want to access your wallet on another device.\"\n  },\n  \"backupApprovalNotice\": {\n    \"message\": \"Back up your Secret Recovery Phrase to keep your wallet and funds secure.\"\n  },\n  \"backupKeyringSnapReminder\": {\n    \"message\": \"Be sure you can access any accounts created by this Snap on your own before removing it\"\n  },\n  \"backupNow\": {\n    \"message\": \"Back up now\"\n  },\n  \"balance\": {\n    \"message\": \"Balance\"\n  },\n  \"balanceOutdated\": {\n    \"message\": \"Balance may be outdated\"\n  },\n  \"baseFee\": {\n    \"message\": \"Base fee\"\n  },\n  \"basic\": {\n    \"message\": \"Basic\"\n  },\n  \"basicConfigurationBannerCTA\": {\n    \"message\": \"Turn on basic functionality\"\n  },\n  \"basicConfigurationBannerTitle\": {\n    \"message\": \"Basic functionality is off\"\n  },\n  \"basicConfigurationDescription\": {\n    \"message\": \"MetaMask offers basic features like token details and gas settings through internet services. When you use internet services, your IP address is shared, in this case with MetaMask. This is just like when you visit any website. MetaMask uses this data temporarily and never sells your data. You can use a VPN or turn off these services, but it may affect your MetaMask experience. To learn more read our $1.\",\n    \"description\": \"$1 is to be replaced by the message for privacyMsg, and will link to https://consensys.io/privacy-policy\"\n  },\n  \"basicConfigurationLabel\": {\n    \"message\": \"Basic functionality\"\n  },\n  \"basicConfigurationModalCheckbox\": {\n    \"message\": \"I understand and want to continue\"\n  },\n  \"basicConfigurationModalDisclaimerOff\": {\n    \"message\": \"This means you won't fully optimize your time on MetaMask. Basic features (like token details, optimal gas settings, and others) won't be available to you.\"\n  },\n  \"basicConfigurationModalDisclaimerOn\": {\n    \"message\": \"To optimize your time on MetaMask, you’ll need to turn on this feature. Basic functions (like token details, optimal gas settings, and others) are important to the web3 experience.\"\n  },\n  \"basicConfigurationModalHeadingOff\": {\n    \"message\": \"Turn off basic functionality\"\n  },\n  \"basicConfigurationModalHeadingOn\": {\n    \"message\": \"Turn on basic functionality\"\n  },\n  \"beCareful\": {\n    \"message\": \"Be careful\"\n  },\n  \"beta\": {\n    \"message\": \"Beta\"\n  },\n  \"betaHeaderText\": {\n    \"message\": \"This is a beta version. Please report bugs $1\",\n    \"description\": \"$1 represents the word 'here' in a hyperlink\"\n  },\n  \"betaMetamaskInstitutionalVersion\": {\n    \"message\": \"MetaMask Institutional Beta Version\"\n  },\n  \"betaMetamaskVersion\": {\n    \"message\": \"MetaMask Beta Version\"\n  },\n  \"betaTerms\": {\n    \"message\": \"Beta Terms of use\"\n  },\n  \"betaWalletCreationSuccessReminder1\": {\n    \"message\": \"MetaMask Beta can’t recover your Secret Recovery Phrase.\"\n  },\n  \"betaWalletCreationSuccessReminder2\": {\n    \"message\": \"MetaMask Beta will never ask you for your Secret Recovery Phrase.\"\n  },\n  \"billionAbbreviation\": {\n    \"message\": \"B\",\n    \"description\": \"Shortened form of 'billion'\"\n  },\n  \"bitcoinActivityNotSupported\": {\n    \"message\": \"Bitcoin activity is not supported\"\n  },\n  \"bitcoinSupportSectionTitle\": {\n    \"message\": \"Bitcoin\"\n  },\n  \"bitcoinSupportToggleDescription\": {\n    \"message\": \"Turning on this feature will give you the option to add a Bitcoin Account to your MetaMask Extension derived from your existing Secret Recovery Phrase. This is an experimental Beta feature, so you should use it at your own risk. To give us feedback on this new Bitcoin experience, please fill out this $1.\",\n    \"description\": \"$1 is the link to a product feedback form\"\n  },\n  \"bitcoinSupportToggleTitle\": {\n    \"message\": \"Enable \\\"Add a new Bitcoin account (Beta)\\\"\"\n  },\n  \"bitcoinTestnetSupportToggleDescription\": {\n    \"message\": \"Turning on this feature will give you the option to add a Bitcoin Account for the test network.\"\n  },\n  \"bitcoinTestnetSupportToggleTitle\": {\n    \"message\": \"Enable \\\"Add a new Bitcoin account (Testnet)\\\"\"\n  },\n  \"blockExplorerAccountAction\": {\n    \"message\": \"Account\",\n    \"description\": \"This is used with viewOnEtherscan and viewInExplorer e.g View Account in Explorer\"\n  },\n  \"blockExplorerAssetAction\": {\n    \"message\": \"Asset\",\n    \"description\": \"This is used with viewOnEtherscan and viewInExplorer e.g View Asset in Explorer\"\n  },\n  \"blockExplorerSwapAction\": {\n    \"message\": \"Swap\",\n    \"description\": \"This is used with viewOnEtherscan e.g View Swap on Etherscan\"\n  },\n  \"blockExplorerUrl\": {\n    \"message\": \"Block explorer URL\"\n  },\n  \"blockExplorerUrlDefinition\": {\n    \"message\": \"The URL used as the block explorer for this network.\"\n  },\n  \"blockExplorerView\": {\n    \"message\": \"View account at $1\",\n    \"description\": \"$1 replaced by URL for custom block explorer\"\n  },\n  \"blockaid\": {\n    \"message\": \"Blockaid\"\n  },\n  \"blockaidAlertInfo\": {\n    \"message\": \"We don't recommend proceeding with this request.\"\n  },\n  \"blockaidDescriptionApproveFarming\": {\n    \"message\": \"If you approve this request, a third party known for scams might take all your assets.\"\n  },\n  \"blockaidDescriptionBlurFarming\": {\n    \"message\": \"If you approve this request, someone can steal your assets listed on Blur.\"\n  },\n  \"blockaidDescriptionErrored\": {\n    \"message\": \"Because of an error, we couldn't check for security alerts. Only continue if you trust every address involved.\"\n  },\n  \"blockaidDescriptionMaliciousDomain\": {\n    \"message\": \"You're interacting with a malicious domain. If you approve this request, you might lose your assets.\"\n  },\n  \"blockaidDescriptionMightLoseAssets\": {\n    \"message\": \"If you approve this request, you might lose your assets.\"\n  },\n  \"blockaidDescriptionSeaportFarming\": {\n    \"message\": \"If you approve this request, someone can steal your assets listed on OpenSea.\"\n  },\n  \"blockaidDescriptionTransferFarming\": {\n    \"message\": \"If you approve this request, a third party known for scams will take all your assets.\"\n  },\n  \"blockaidDescriptionWarning\": {\n    \"message\": \"This could be a deceptive request. Only continue if you trust every address involved.\"\n  },\n  \"blockaidMessage\": {\n    \"message\": \"Privacy preserving - no data is shared with third parties. Available on Arbitrum, Avalanche, BNB chain, Ethereum Mainnet, Linea, Optimism, Polygon, Base and Sepolia.\"\n  },\n  \"blockaidTitleDeceptive\": {\n    \"message\": \"This is a deceptive request\"\n  },\n  \"blockaidTitleMayNotBeSafe\": {\n    \"message\": \"Be careful\"\n  },\n  \"blockaidTitleSuspicious\": {\n    \"message\": \"This is a suspicious request\"\n  },\n  \"blockies\": {\n    \"message\": \"Blockies\"\n  },\n  \"boughtFor\": {\n    \"message\": \"Bought for\"\n  },\n  \"bridge\": {\n    \"message\": \"Bridge\"\n  },\n  \"bridgeDontSend\": {\n    \"message\": \"Bridge, don't send\"\n  },\n  \"browserNotSupported\": {\n    \"message\": \"Your browser is not supported...\"\n  },\n  \"buildContactList\": {\n    \"message\": \"Build your contact list\"\n  },\n  \"builtAroundTheWorld\": {\n    \"message\": \"MetaMask is designed and built around the world.\"\n  },\n  \"busy\": {\n    \"message\": \"Busy\"\n  },\n  \"buyAndSell\": {\n    \"message\": \"Buy & Sell\"\n  },\n  \"buyAsset\": {\n    \"message\": \"Buy $1\",\n    \"description\": \"$1 is the ticker symbol of a an asset the user is being prompted to purchase\"\n  },\n  \"buyCrypto\": {\n    \"message\": \"Buy crypto\"\n  },\n  \"buyFirstCrypto\": {\n    \"message\": \"Buy your first crypto with a debit or credit card.\"\n  },\n  \"buyMoreAsset\": {\n    \"message\": \"Buy more $1\",\n    \"description\": \"$1 is the ticker symbol of a an asset the user is being prompted to purchase\"\n  },\n  \"buyNow\": {\n    \"message\": \"Buy Now\"\n  },\n  \"buyToken\": {\n    \"message\": \"Buy $1\",\n    \"description\": \"$1 is the token symbol\"\n  },\n  \"bytes\": {\n    \"message\": \"Bytes\"\n  },\n  \"canToggleInSettings\": {\n    \"message\": \"You can re-enable this notification in Settings > Alerts.\"\n  },\n  \"cancel\": {\n    \"message\": \"Cancel\"\n  },\n  \"cancelPopoverTitle\": {\n    \"message\": \"Cancel transaction\"\n  },\n  \"cancelSpeedUp\": {\n    \"message\": \"cancel or speed up a transaction.\"\n  },\n  \"cancelSpeedUpLabel\": {\n    \"message\": \"This gas fee will $1 the original.\",\n    \"description\": \"$1 is text 'replace' in bold\"\n  },\n  \"cancelSpeedUpTransactionTooltip\": {\n    \"message\": \"To $1 a transaction the gas fee must be increased by at least 10% for it to be recognized by the network.\",\n    \"description\": \"$1 is string 'cancel' or 'speed up'\"\n  },\n  \"cancelled\": {\n    \"message\": \"Cancelled\"\n  },\n  \"chainId\": {\n    \"message\": \"Chain ID\"\n  },\n  \"chainIdDefinition\": {\n    \"message\": \"The chain ID used to sign transactions for this network.\"\n  },\n  \"chainIdExistsErrorMsg\": {\n    \"message\": \"This Chain ID is currently used by the $1 network.\"\n  },\n  \"chainListReturnedDifferentTickerSymbol\": {\n    \"message\": \"This token symbol doesn't match the network name or chain ID entered. Many popular tokens use similar symbols, which scammers can use to trick you into sending them a more valuable token in return. Verify everything before you continue.\"\n  },\n  \"chooseYourNetwork\": {\n    \"message\": \"Choose your network\"\n  },\n  \"chooseYourNetworkDescription\": {\n    \"message\": \"We use Infura as our remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. Read our $1 to learn more about how Infura handles data.\",\n    \"description\": \"$1 is a link to the privacy policy\"\n  },\n  \"chromeRequiredForHardwareWallets\": {\n    \"message\": \"You need to use MetaMask on Google Chrome in order to connect to your Hardware Wallet.\"\n  },\n  \"circulatingSupply\": {\n    \"message\": \"Circulating supply\"\n  },\n  \"clear\": {\n    \"message\": \"Clear\"\n  },\n  \"clearActivity\": {\n    \"message\": \"Clear activity and nonce data\"\n  },\n  \"clearActivityButton\": {\n    \"message\": \"Clear activity tab data\"\n  },\n  \"clearActivityDescription\": {\n    \"message\": \"This resets the account's nonce and erases data from the activity tab in your wallet. Only the current account and network will be affected. Your balances and incoming transactions won't change.\"\n  },\n  \"click\": {\n    \"message\": \"Click\"\n  },\n  \"clickToConnectLedgerViaWebHID\": {\n    \"message\": \"Click here to connect your Ledger via WebHID\",\n    \"description\": \"Text that can be clicked to open a browser popup for connecting the ledger device via webhid\"\n  },\n  \"clickToManuallyAdd\": {\n    \"message\": \"You can always add tokens manually.\"\n  },\n  \"close\": {\n    \"message\": \"Close\"\n  },\n  \"closeExtension\": {\n    \"message\": \"Close extension\"\n  },\n  \"closeWindowAnytime\": {\n    \"message\": \"You may close this window anytime.\"\n  },\n  \"coingecko\": {\n    \"message\": \"CoinGecko\"\n  },\n  \"collectionName\": {\n    \"message\": \"Collection name\"\n  },\n  \"comboNoOptions\": {\n    \"message\": \"No options found\",\n    \"description\": \"Default text shown in the combo field dropdown if no options.\"\n  },\n  \"configureSnapPopupDescription\": {\n    \"message\": \"You're now leaving MetaMask to configure this snap.\"\n  },\n  \"configureSnapPopupInstallDescription\": {\n    \"message\": \"You're now leaving MetaMask to install this snap.\"\n  },\n  \"configureSnapPopupInstallTitle\": {\n    \"message\": \"Install snap\"\n  },\n  \"configureSnapPopupLink\": {\n    \"message\": \"Click this link to continue:\"\n  },\n  \"configureSnapPopupTitle\": {\n    \"message\": \"Configure snap\"\n  },\n  \"confirm\": {\n    \"message\": \"Confirm\"\n  },\n  \"confirmAlertModalAcknowledgeMultiple\": {\n    \"message\": \"I have acknowledged the alerts and still want to proceed\"\n  },\n  \"confirmAlertModalAcknowledgeSingle\": {\n    \"message\": \"I have acknowledged the alert and still want to proceed\"\n  },\n  \"confirmAlertModalDetails\": {\n    \"message\": \"If you sign in, a third party known for scams might take all your assets. Please review the alerts before you proceed.\"\n  },\n  \"confirmAlertModalTitle\": {\n    \"message\": \"Your assets may be at risk\"\n  },\n  \"confirmConnectCustodianRedirect\": {\n    \"message\": \"We will redirect you to $1 upon clicking continue.\"\n  },\n  \"confirmConnectCustodianText\": {\n    \"message\": \"To connect your accounts log into your $1 account and click on the 'connect to MMI' button.\"\n  },\n  \"confirmConnectionTitle\": {\n    \"message\": \"Confirm connection to $1\"\n  },\n  \"confirmFieldPaymaster\": {\n    \"message\": \"Fee paid by\"\n  },\n  \"confirmFieldTooltipPaymaster\": {\n    \"message\": \"The fee for this transaction will be paid by the paymaster smart contract.\"\n  },\n  \"confirmPassword\": {\n    \"message\": \"Confirm password\"\n  },\n  \"confirmRecoveryPhrase\": {\n    \"message\": \"Confirm Secret Recovery Phrase\"\n  },\n  \"confirmTitleApproveTransaction\": {\n    \"message\": \"Allowance request\"\n  },\n  \"confirmTitleDeployContract\": {\n    \"message\": \"Deploy a contract\"\n  },\n  \"confirmTitleDescApproveTransaction\": {\n    \"message\": \"This site wants permission to withdraw your NFTs\"\n  },\n  \"confirmTitleDescDeployContract\": {\n    \"message\": \"This site wants you to deploy a contract\"\n  },\n  \"confirmTitleDescERC20ApproveTransaction\": {\n    \"message\": \"This site wants permission to withdraw your tokens\"\n  },\n  \"confirmTitleDescPermitSignature\": {\n    \"message\": \"This site wants permission to spend your tokens.\"\n  },\n  \"confirmTitleDescSIWESignature\": {\n    \"message\": \"A site wants you to sign in to prove you own this account.\"\n  },\n  \"confirmTitleDescSignature\": {\n    \"message\": \"Only confirm this message if you approve the content and trust the requesting site.\"\n  },\n  \"confirmTitlePermitTokens\": {\n    \"message\": \"Spending cap request\"\n  },\n  \"confirmTitleSIWESignature\": {\n    \"message\": \"Sign-in request\"\n  },\n  \"confirmTitleSignature\": {\n    \"message\": \"Signature request\"\n  },\n  \"confirmTitleTransaction\": {\n    \"message\": \"Transaction request\"\n  },\n  \"confirmed\": {\n    \"message\": \"Confirmed\"\n  },\n  \"confusableUnicode\": {\n    \"message\": \"'$1' is similar to '$2'.\"\n  },\n  \"confusableZeroWidthUnicode\": {\n    \"message\": \"Zero-width character found.\"\n  },\n  \"confusingEnsDomain\": {\n    \"message\": \"We have detected a confusable character in the ENS name. Check the ENS name to avoid a potential scam.\"\n  },\n  \"connect\": {\n    \"message\": \"Connect\"\n  },\n  \"connectAccount\": {\n    \"message\": \"Connect account\"\n  },\n  \"connectAccountOrCreate\": {\n    \"message\": \"Connect account or create new\"\n  },\n  \"connectAccounts\": {\n    \"message\": \"Connect accounts\"\n  },\n  \"connectCustodialAccountMenu\": {\n    \"message\": \"Connect Custodial Account\"\n  },\n  \"connectCustodialAccountMsg\": {\n    \"message\": \"Please choose the custodian you want to connect in order to add or refresh a token.\"\n  },\n  \"connectCustodialAccountTitle\": {\n    \"message\": \"Custodial Accounts\"\n  },\n  \"connectCustodianAccounts\": {\n    \"message\": \"Connect $1 accounts\"\n  },\n  \"connectManually\": {\n    \"message\": \"Manually connect to current site\"\n  },\n  \"connectMoreAccounts\": {\n    \"message\": \"Connect more accounts\"\n  },\n  \"connectSnap\": {\n    \"message\": \"Connect $1\",\n    \"description\": \"$1 is the snap for which a connection is being requested.\"\n  },\n  \"connectWithMetaMask\": {\n    \"message\": \"Connect with MetaMask\"\n  },\n  \"connectedAccounts\": {\n    \"message\": \"Connected accounts\"\n  },\n  \"connectedAccountsDescriptionPlural\": {\n    \"message\": \"You have $1 accounts connected to this site.\",\n    \"description\": \"$1 is the number of accounts\"\n  },\n  \"connectedAccountsDescriptionSingular\": {\n    \"message\": \"You have 1 account connected to this site.\"\n  },\n  \"connectedAccountsEmptyDescription\": {\n    \"message\": \"MetaMask is not connected to this site. To connect to a web3 site, find and click the connect button.\"\n  },\n  \"connectedAccountsListTooltip\": {\n    \"message\": \"$1 can see the account balance, address, activity, and suggest transactions to approve for connected accounts.\",\n    \"description\": \"$1 is the origin name\"\n  },\n  \"connectedAccountsToast\": {\n    \"message\": \"Connected accounts updated\"\n  },\n  \"connectedSites\": {\n    \"message\": \"Connected sites\"\n  },\n  \"connectedSitesAndSnaps\": {\n    \"message\": \"Connected sites and Snaps\"\n  },\n  \"connectedSitesDescription\": {\n    \"message\": \"$1 is connected to these sites. They can view your account address.\",\n    \"description\": \"$1 is the account name\"\n  },\n  \"connectedSitesEmptyDescription\": {\n    \"message\": \"$1 is not connected to any sites.\",\n    \"description\": \"$1 is the account name\"\n  },\n  \"connectedSnapAndNoAccountDescription\": {\n    \"message\": \"MetaMask is connected to this site, but no accounts are connected yet\"\n  },\n  \"connectedSnaps\": {\n    \"message\": \"Connected Snaps\"\n  },\n  \"connectedWith\": {\n    \"message\": \"Connected with\"\n  },\n  \"connecting\": {\n    \"message\": \"Connecting\"\n  },\n  \"connectingTo\": {\n    \"message\": \"Connecting to $1\"\n  },\n  \"connectingToDeprecatedNetwork\": {\n    \"message\": \"'$1' is being phased out and may not work. Try another network.\"\n  },\n  \"connectingToGoerli\": {\n    \"message\": \"Connecting to Goerli test network\"\n  },\n  \"connectingToLineaGoerli\": {\n    \"message\": \"Connecting to Linea Goerli test network\"\n  },\n  \"connectingToLineaMainnet\": {\n    \"message\": \"Connecting to Linea Mainnet\"\n  },\n  \"connectingToLineaSepolia\": {\n    \"message\": \"Connecting to Linea Sepolia test network\"\n  },\n  \"connectingToMainnet\": {\n    \"message\": \"Connecting to Ethereum Mainnet\"\n  },\n  \"connectingToSepolia\": {\n    \"message\": \"Connecting to Sepolia test network\"\n  },\n  \"connectionFailed\": {\n    \"message\": \"Connection failed\"\n  },\n  \"connectionFailedDescription\": {\n    \"message\": \"Fetching of $1 failed, check your network and try again.\",\n    \"description\": \"$1 is the name of the snap being fetched.\"\n  },\n  \"connectionRequest\": {\n    \"message\": \"Connection request\"\n  },\n  \"contactUs\": {\n    \"message\": \"Contact us\"\n  },\n  \"contacts\": {\n    \"message\": \"Contacts\"\n  },\n  \"contentFromSnap\": {\n    \"message\": \"Content from $1\",\n    \"description\": \"$1 represents the name of the snap\"\n  },\n  \"continue\": {\n    \"message\": \"Continue\"\n  },\n  \"continueMmiOnboarding\": {\n    \"message\": \"Continue MetaMask Institutional onboarding\"\n  },\n  \"continueToWallet\": {\n    \"message\": \"Continue to wallet\"\n  },\n  \"contract\": {\n    \"message\": \"Contract\"\n  },\n  \"contractAddress\": {\n    \"message\": \"Contract address\"\n  },\n  \"contractAddressError\": {\n    \"message\": \"You are sending tokens to the token's contract address. This may result in the loss of these tokens.\"\n  },\n  \"contractDeployment\": {\n    \"message\": \"Contract deployment\"\n  },\n  \"contractDescription\": {\n    \"message\": \"To protect yourself against scammers, take a moment to verify third-party details.\"\n  },\n  \"contractInteraction\": {\n    \"message\": \"Contract interaction\"\n  },\n  \"contractNFT\": {\n    \"message\": \"NFT contract\"\n  },\n  \"contractRequestingAccess\": {\n    \"message\": \"Third party requesting access\"\n  },\n  \"contractRequestingSignature\": {\n    \"message\": \"Third party requesting signature\"\n  },\n  \"contractRequestingSpendingCap\": {\n    \"message\": \"Third party requesting spending cap\"\n  },\n  \"contractTitle\": {\n    \"message\": \"Third-party details\"\n  },\n  \"contractToken\": {\n    \"message\": \"Token contract\"\n  },\n  \"convertTokenToNFTDescription\": {\n    \"message\": \"We've detected that this asset is an NFT. MetaMask now has full native support for NFTs. Would you like to remove it from your token list and add it as an NFT?\"\n  },\n  \"convertTokenToNFTExistDescription\": {\n    \"message\": \"We’ve detected that this asset has been added as an NFT. Would you like to remove it from your token list?\"\n  },\n  \"coolWallet\": {\n    \"message\": \"CoolWallet\"\n  },\n  \"copiedExclamation\": {\n    \"message\": \"Copied.\"\n  },\n  \"copyAddress\": {\n    \"message\": \"Copy address to clipboard\"\n  },\n  \"copyAddressShort\": {\n    \"message\": \"Copy address\"\n  },\n  \"copyPrivateKey\": {\n    \"message\": \"Copy private key\"\n  },\n  \"copyRawTransactionData\": {\n    \"message\": \"Copy raw transaction data\"\n  },\n  \"copyToClipboard\": {\n    \"message\": \"Copy to clipboard\"\n  },\n  \"copyTransactionId\": {\n    \"message\": \"Copy transaction ID\"\n  },\n  \"create\": {\n    \"message\": \"Create\"\n  },\n  \"createNewWallet\": {\n    \"message\": \"Create a new wallet\"\n  },\n  \"createPassword\": {\n    \"message\": \"Create password\"\n  },\n  \"createSnapAccountDescription\": {\n    \"message\": \"$1 wants to add a new account to MetaMask.\"\n  },\n  \"createSnapAccountTitle\": {\n    \"message\": \"Create account\"\n  },\n  \"creatorAddress\": {\n    \"message\": \"Creator address\"\n  },\n  \"crossChainSwapsLink\": {\n    \"message\": \"Swap across networks with MetaMask Portfolio\"\n  },\n  \"cryptoCompare\": {\n    \"message\": \"CryptoCompare\"\n  },\n  \"currencyConversion\": {\n    \"message\": \"Currency conversion\"\n  },\n  \"currencyRateCheckToggle\": {\n    \"message\": \"Show balance and token price checker\"\n  },\n  \"currencyRateCheckToggleDescription\": {\n    \"message\": \"We use $1 and $2 APIs to display your balance and token price. $3\",\n    \"description\": \"$1 represents Coingecko, $2 represents CryptoCompare and $3 represents Privacy Policy\"\n  },\n  \"currencySymbol\": {\n    \"message\": \"Currency symbol\"\n  },\n  \"currencySymbolDefinition\": {\n    \"message\": \"The ticker symbol displayed for this network’s currency.\"\n  },\n  \"currentAccountNotConnected\": {\n    \"message\": \"Your current account is not connected\"\n  },\n  \"currentExtension\": {\n    \"message\": \"Current extension page\"\n  },\n  \"currentLanguage\": {\n    \"message\": \"Current language\"\n  },\n  \"currentRpcUrlDeprecated\": {\n    \"message\": \"The current rpc url for this network has been deprecated.\"\n  },\n  \"currentTitle\": {\n    \"message\": \"Current:\"\n  },\n  \"currentlyUnavailable\": {\n    \"message\": \"Unavailable on this network\"\n  },\n  \"curveHighGasEstimate\": {\n    \"message\": \"Aggressive gas estimate graph\"\n  },\n  \"curveLowGasEstimate\": {\n    \"message\": \"Low gas estimate graph\"\n  },\n  \"curveMediumGasEstimate\": {\n    \"message\": \"Market gas estimate graph\"\n  },\n  \"custodian\": {\n    \"message\": \"Custodian\"\n  },\n  \"custodianAccountAddedDesc\": {\n    \"message\": \"You can now use your accounts in MetaMask Institutional.\"\n  },\n  \"custodianAccountAddedTitle\": {\n    \"message\": \"Selected $1 accounts have been added.\"\n  },\n  \"custodianQRCodeScan\": {\n    \"message\": \"Scan QR code with your $1 mobile app\"\n  },\n  \"custodianQRCodeScanDescription\": {\n    \"message\": \"Or log into your $1 account and click on the 'Connect to MMI' button\"\n  },\n  \"custodianReplaceRefreshTokenChangedFailed\": {\n    \"message\": \"Please go to $1 and click the 'Connect to MMI' button within their user interface to connect your accounts to MMI again.\"\n  },\n  \"custodianReplaceRefreshTokenChangedSubtitle\": {\n    \"message\": \"You can now use your custodian accounts in MetaMask Institutional.\"\n  },\n  \"custodianReplaceRefreshTokenChangedTitle\": {\n    \"message\": \"Your custodian token has been refreshed\"\n  },\n  \"custodianReplaceRefreshTokenSubtitle\": {\n    \"message\": \"This is will replace the custodian token for the following address:\"\n  },\n  \"custodianReplaceRefreshTokenTitle\": {\n    \"message\": \"Replace custodian token\"\n  },\n  \"custodyDeeplinkDescription\": {\n    \"message\": \"Approve the transaction in the $1 app. Once all required custody approvals have been performed the transaction will complete. Check your $1 app for status.\"\n  },\n  \"custodyRefreshTokenModalDescription\": {\n    \"message\": \"Please go to $1 and click the 'Connect to MMI' button within their user interface to connect your accounts to MMI again.\"\n  },\n  \"custodyRefreshTokenModalDescription1\": {\n    \"message\": \"Your custodian issues a token that authenticates the MetaMask Institutional extension, allowing you to connect your accounts.\"\n  },\n  \"custodyRefreshTokenModalDescription2\": {\n    \"message\": \"This token expires after a certain period for security reasons. This requires you to reconnect to MMI.\"\n  },\n  \"custodyRefreshTokenModalSubtitle\": {\n    \"message\": \"Why am I seeing this?\"\n  },\n  \"custodyRefreshTokenModalTitle\": {\n    \"message\": \"Your custodian session has expired\"\n  },\n  \"custodySessionExpired\": {\n    \"message\": \"Custodian session expired.\"\n  },\n  \"custodyWrongChain\": {\n    \"message\": \"This account is not set up for use with $1\"\n  },\n  \"custom\": {\n    \"message\": \"Advanced\"\n  },\n  \"customGasSettingToolTipMessage\": {\n    \"message\": \"Use $1 to customize the gas price. This can be confusing if you aren’t familiar. Interact at your own risk.\",\n    \"description\": \"$1 is key 'advanced' (text: 'Advanced') separated here so that it can be passed in with bold font-weight\"\n  },\n  \"customSpendLimit\": {\n    \"message\": \"Custom spend limit\"\n  },\n  \"customSpendingCap\": {\n    \"message\": \"Custom spending cap\"\n  },\n  \"customToken\": {\n    \"message\": \"Custom token\"\n  },\n  \"customTokenWarningInNonTokenDetectionNetwork\": {\n    \"message\": \"Token detection is not available on this network yet. Please import token manually and make sure you trust it. Learn about $1\"\n  },\n  \"customTokenWarningInTokenDetectionNetwork\": {\n    \"message\": \"Anyone can create a token, including creating fake versions of existing tokens. Learn about $1\"\n  },\n  \"customTokenWarningInTokenDetectionNetworkWithTDOFF\": {\n    \"message\": \"Make sure you trust a token before you import it. Learn how to avoid $1. You can also enable token detection $2.\"\n  },\n  \"customerSupport\": {\n    \"message\": \"customer support\"\n  },\n  \"customizeYourNotifications\": {\n    \"message\": \"Customize your notifications\"\n  },\n  \"customizeYourNotificationsText\": {\n    \"message\": \"Turn on the types of notifications you want to receive:\"\n  },\n  \"dappRequestedSpendingCap\": {\n    \"message\": \"Site requested spending cap\"\n  },\n  \"dappSuggested\": {\n    \"message\": \"Site suggested\"\n  },\n  \"dappSuggestedGasSettingToolTipMessage\": {\n    \"message\": \"$1 has suggested this price.\",\n    \"description\": \"$1 is url for the dapp that has suggested gas settings\"\n  },\n  \"dappSuggestedHigh\": {\n    \"message\": \"Site suggested\"\n  },\n  \"dappSuggestedHighShortLabel\": {\n    \"message\": \"Site (high)\"\n  },\n  \"dappSuggestedShortLabel\": {\n    \"message\": \"Site\"\n  },\n  \"dappSuggestedTooltip\": {\n    \"message\": \"$1 has recommended this price.\",\n    \"description\": \"$1 represents the Dapp's origin\"\n  },\n  \"darkTheme\": {\n    \"message\": \"Dark\"\n  },\n  \"data\": {\n    \"message\": \"Data\"\n  },\n  \"dataCollectionForMarketing\": {\n    \"message\": \"Data collection for marketing\"\n  },\n  \"dataCollectionForMarketingDescription\": {\n    \"message\": \"We'll use MetaMetrics to learn how you interact with our marketing communications. We may share relevant news (like product features and other materials).\"\n  },\n  \"dataCollectionWarningPopoverButton\": {\n    \"message\": \"Okay\"\n  },\n  \"dataCollectionWarningPopoverDescription\": {\n    \"message\": \"You turned off data collection for our marketing purposes. This only applies to this device. If you use MetaMask on other devices, make sure to opt out there as well.\"\n  },\n  \"dataHex\": {\n    \"message\": \"Hex\"\n  },\n  \"dataUnavailable\": {\n    \"message\": \"data unavailable\"\n  },\n  \"dateCreated\": {\n    \"message\": \"Date created\"\n  },\n  \"dcent\": {\n    \"message\": \"D'Cent\"\n  },\n  \"decimal\": {\n    \"message\": \"Token decimal\"\n  },\n  \"decimalsMustZerotoTen\": {\n    \"message\": \"Decimals must be at least 0, and not over 36.\"\n  },\n  \"decrypt\": {\n    \"message\": \"Decrypt\"\n  },\n  \"decryptCopy\": {\n    \"message\": \"Copy encrypted message\"\n  },\n  \"decryptInlineError\": {\n    \"message\": \"This message cannot be decrypted due to error: $1\",\n    \"description\": \"$1 is error message\"\n  },\n  \"decryptMessageNotice\": {\n    \"message\": \"$1 would like to read this message to complete your action\",\n    \"description\": \"$1 is the web3 site name\"\n  },\n  \"decryptMetamask\": {\n    \"message\": \"Decrypt message\"\n  },\n  \"decryptRequest\": {\n    \"message\": \"Decrypt request\"\n  },\n  \"defaultRpcUrl\": {\n    \"message\": \"Default RPC URL\"\n  },\n  \"delete\": {\n    \"message\": \"Delete\"\n  },\n  \"deleteContact\": {\n    \"message\": \"Delete contact\"\n  },\n  \"deleteNetworkIntro\": {\n    \"message\": \"If you delete this network, you will need to add it again to view your assets in this network\"\n  },\n  \"deleteNetworkTitle\": {\n    \"message\": \"Delete $1 network?\",\n    \"description\": \"$1 represents the name of the network\"\n  },\n  \"deposit\": {\n    \"message\": \"Deposit\"\n  },\n  \"depositCrypto\": {\n    \"message\": \"Deposit crypto from another account with a wallet address or QR code.\"\n  },\n  \"deprecatedGoerliNtwrkMsg\": {\n    \"message\": \"Because of updates to the Ethereum system, the Goerli test network will be phased out soon.\"\n  },\n  \"deprecatedNetwork\": {\n    \"message\": \"This network is deprecated\"\n  },\n  \"deprecatedNetworkButtonMsg\": {\n    \"message\": \"Got it\"\n  },\n  \"deprecatedNetworkDescription\": {\n    \"message\": \"The network you're trying to connect to is no longer supported by Metamask. $1\"\n  },\n  \"description\": {\n    \"message\": \"Description\"\n  },\n  \"descriptionFromSnap\": {\n    \"message\": \"Description from $1\",\n    \"description\": \"$1 represents the name of the snap\"\n  },\n  \"details\": {\n    \"message\": \"Details\"\n  },\n  \"developerOptions\": {\n    \"message\": \"Developer Options\"\n  },\n  \"disabledGasOptionToolTipMessage\": {\n    \"message\": \"“$1” is disabled because it does not meet the minimum of a 10% increase from the original gas fee.\",\n    \"description\": \"$1 is gas estimate type which can be market or aggressive\"\n  },\n  \"disconnect\": {\n    \"message\": \"Disconnect\"\n  },\n  \"disconnectAllAccounts\": {\n    \"message\": \"Disconnect all accounts\"\n  },\n  \"disconnectAllAccountsConfirmationDescription\": {\n    \"message\": \"Are you sure you want to disconnect? You may lose site functionality.\"\n  },\n  \"disconnectAllAccountsText\": {\n    \"message\": \"accounts\"\n  },\n  \"disconnectAllSnapsText\": {\n    \"message\": \"Snaps\"\n  },\n  \"disconnectAllText\": {\n    \"message\": \"If you disconnect your $1 from $2, you'll need to reconnect to use them again.\",\n    \"description\": \"$1 will map to `disconnectAllAccountsText` or `disconnectAllSnapsText`, $2 represents the website hostname\"\n  },\n  \"disconnectAllTitle\": {\n    \"message\": \"Disconnect all $1\",\n    \"description\": \"$1 will map to `disconnectAllAccountsText` or `disconnectAllSnapsText`\"\n  },\n  \"disconnectPrompt\": {\n    \"message\": \"Disconnect $1\"\n  },\n  \"disconnectThisAccount\": {\n    \"message\": \"Disconnect this account\"\n  },\n  \"disconnectedAllAccountsToast\": {\n    \"message\": \"All accounts disconnected from $1\",\n    \"description\": \"$1 is name of the dapp`\"\n  },\n  \"disconnectedSingleAccountToast\": {\n    \"message\": \"$1 disconnected from $2\",\n    \"description\": \"$1 is name of the name and $2 represents the dapp name`\"\n  },\n  \"discoverSnaps\": {\n    \"message\": \"Discover Snaps\",\n    \"description\": \"Text that links to the Snaps website. Displayed in a banner on Snaps list page in settings.\"\n  },\n  \"dismiss\": {\n    \"message\": \"Dismiss\"\n  },\n  \"dismissReminderDescriptionField\": {\n    \"message\": \"Turn this on to dismiss the Secret Recovery Phrase backup reminder message. We highly recommend that you back up your Secret Recovery Phrase to avoid loss of funds\"\n  },\n  \"dismissReminderField\": {\n    \"message\": \"Dismiss Secret Recovery Phrase backup reminder\"\n  },\n  \"displayNftMedia\": {\n    \"message\": \"Display NFT media\"\n  },\n  \"displayNftMediaDescription\": {\n    \"message\": \"Displaying NFT media and data exposes your IP address to OpenSea or other third parties. This can allow attackers to associate your IP address with your Ethereum address. NFT autodetection relies on this setting, and won't be available when this is turned off.\"\n  },\n  \"doNotShare\": {\n    \"message\": \"Do not share this with anyone\"\n  },\n  \"domain\": {\n    \"message\": \"Domain\"\n  },\n  \"done\": {\n    \"message\": \"Done\"\n  },\n  \"dontShowThisAgain\": {\n    \"message\": \"Don't show this again\"\n  },\n  \"downArrow\": {\n    \"message\": \"down arrow\"\n  },\n  \"downloadGoogleChrome\": {\n    \"message\": \"Download Google Chrome\"\n  },\n  \"downloadNow\": {\n    \"message\": \"Download Now\"\n  },\n  \"downloadStateLogs\": {\n    \"message\": \"Download state logs\"\n  },\n  \"dragAndDropBanner\": {\n    \"message\": \"You can drag networks to reorder them. \"\n  },\n  \"dropped\": {\n    \"message\": \"Dropped\"\n  },\n  \"edit\": {\n    \"message\": \"Edit\"\n  },\n  \"editANickname\": {\n    \"message\": \"Edit nickname\"\n  },\n  \"editAccounts\": {\n    \"message\": \"Edit accounts\"\n  },\n  \"editAddressNickname\": {\n    \"message\": \"Edit address nickname\"\n  },\n  \"editCancellationGasFeeModalTitle\": {\n    \"message\": \"Edit cancellation gas fee\"\n  },\n  \"editContact\": {\n    \"message\": \"Edit contact\"\n  },\n  \"editGasFeeModalTitle\": {\n    \"message\": \"Edit gas fee\"\n  },\n  \"editGasLimitOutOfBounds\": {\n    \"message\": \"Gas limit must be at least $1\"\n  },\n  \"editGasLimitOutOfBoundsV2\": {\n    \"message\": \"Gas limit must be greater than $1 and less than $2\",\n    \"description\": \"$1 is the minimum limit for gas and $2 is the maximum limit\"\n  },\n  \"editGasLimitTooltip\": {\n    \"message\": \"Gas limit is the maximum units of gas you are willing to use. Units of gas are a multiplier to “Max priority fee” and “Max fee”.\"\n  },\n  \"editGasMaxBaseFeeGWEIImbalance\": {\n    \"message\": \"Max base fee cannot be lower than priority fee\"\n  },\n  \"editGasMaxBaseFeeHigh\": {\n    \"message\": \"Max base fee is higher than necessary\"\n  },\n  \"editGasMaxBaseFeeLow\": {\n    \"message\": \"Max base fee is low for current network conditions\"\n  },\n  \"editGasMaxFeeHigh\": {\n    \"message\": \"Max fee is higher than necessary\"\n  },\n  \"editGasMaxFeeLow\": {\n    \"message\": \"Max fee too low for network conditions\"\n  },\n  \"editGasMaxFeePriorityImbalance\": {\n    \"message\": \"Max fee cannot be lower than max priority fee\"\n  },\n  \"editGasMaxPriorityFeeBelowMinimum\": {\n    \"message\": \"Max priority fee must be greater than 0 GWEI\"\n  },\n  \"editGasMaxPriorityFeeBelowMinimumV2\": {\n    \"message\": \"Priority fee must be greater than 0.\"\n  },\n  \"editGasMaxPriorityFeeHigh\": {\n    \"message\": \"Max priority fee is higher than necessary. You may pay more than needed.\"\n  },\n  \"editGasMaxPriorityFeeHighV2\": {\n    \"message\": \"Priority fee is higher than necessary. You may pay more than needed\"\n  },\n  \"editGasMaxPriorityFeeLow\": {\n    \"message\": \"Max priority fee is low for current network conditions\"\n  },\n  \"editGasMaxPriorityFeeLowV2\": {\n    \"message\": \"Priority fee is low for current network conditions\"\n  },\n  \"editGasPriceTooLow\": {\n    \"message\": \"Gas price must be greater than 0\"\n  },\n  \"editGasPriceTooltip\": {\n    \"message\": \"This network requires a “Gas price” field when submitting a transaction. Gas price is the amount you will pay pay per unit of gas.\"\n  },\n  \"editGasSubTextAmountLabel\": {\n    \"message\": \"Max amount:\",\n    \"description\": \"This is meant to be used as the $1 substitution editGasSubTextAmount\"\n  },\n  \"editGasSubTextFeeLabel\": {\n    \"message\": \"Max fee:\"\n  },\n  \"editGasTitle\": {\n    \"message\": \"Edit priority\"\n  },\n  \"editGasTooLow\": {\n    \"message\": \"Unknown processing time\"\n  },\n  \"editNetworkLink\": {\n    \"message\": \"edit the original network\"\n  },\n  \"editNetworksTitle\": {\n    \"message\": \"Edit networks\"\n  },\n  \"editNonceField\": {\n    \"message\": \"Edit nonce\"\n  },\n  \"editNonceMessage\": {\n    \"message\": \"This is an advanced feature, use cautiously.\"\n  },\n  \"editPermission\": {\n    \"message\": \"Edit permission\"\n  },\n  \"editSpeedUpEditGasFeeModalTitle\": {\n    \"message\": \"Edit speed up gas fee\"\n  },\n  \"editSpendingCap\": {\n    \"message\": \"Edit spending cap\"\n  },\n  \"editSpendingCapAccountBalance\": {\n    \"message\": \"Account balance: $1 $2\"\n  },\n  \"editSpendingCapDesc\": {\n    \"message\": \"Enter the amount that you feel comfortable being spent on your behalf.\"\n  },\n  \"enable\": {\n    \"message\": \"Enable\"\n  },\n  \"enableAutoDetect\": {\n    \"message\": \" Enable autodetect\"\n  },\n  \"enableFromSettings\": {\n    \"message\": \" Enable it from Settings.\"\n  },\n  \"enableSnap\": {\n    \"message\": \"Enable\"\n  },\n  \"enableToken\": {\n    \"message\": \"enable $1\",\n    \"description\": \"$1 is a token symbol, e.g. ETH\"\n  },\n  \"enabled\": {\n    \"message\": \"Enabled\"\n  },\n  \"enabledNetworks\": {\n    \"message\": \"Enabled networks\"\n  },\n  \"encryptionPublicKeyNotice\": {\n    \"message\": \"$1 would like your public encryption key. By consenting, this site will be able to compose encrypted messages to you.\",\n    \"description\": \"$1 is the web3 site name\"\n  },\n  \"encryptionPublicKeyRequest\": {\n    \"message\": \"Request encryption public key\"\n  },\n  \"endpointReturnedDifferentChainId\": {\n    \"message\": \"The RPC URL you have entered returned a different chain ID ($1).\",\n    \"description\": \"$1 is the return value of eth_chainId from an RPC endpoint\"\n  },\n  \"enhancedTokenDetectionAlertMessage\": {\n    \"message\": \"Enhanced token detection is currently available on $1. $2\"\n  },\n  \"ensDomainsSettingDescriptionIntroduction\": {\n    \"message\": \"MetaMask lets you see ENS domains right in your browser's address bar. Here's how it works:\"\n  },\n  \"ensDomainsSettingDescriptionOutroduction\": {\n    \"message\": \"Keep in mind that using this feature exposes your IP address to IPFS third-party services.\"\n  },\n  \"ensDomainsSettingDescriptionPart1\": {\n    \"message\": \"MetaMask checks with Ethereum's ENS contract to find the code connected to the ENS name.\"\n  },\n  \"ensDomainsSettingDescriptionPart2\": {\n    \"message\": \"If the code links to IPFS, you can see the content associated with it (usually a website).\"\n  },\n  \"ensDomainsSettingTitle\": {\n    \"message\": \"Show ENS domains in address bar\"\n  },\n  \"ensUnknownError\": {\n    \"message\": \"ENS lookup failed.\"\n  },\n  \"enterANameToIdentifyTheUrl\": {\n    \"message\": \"Enter a name to identify the URL\"\n  },\n  \"enterANumber\": {\n    \"message\": \"Enter a number\"\n  },\n  \"enterChainId\": {\n    \"message\": \"Enter Chain ID\"\n  },\n  \"enterCustodianToken\": {\n    \"message\": \"Enter your $1 token or add a new token\"\n  },\n  \"enterMaxSpendLimit\": {\n    \"message\": \"Enter max spend limit\"\n  },\n  \"enterNetworkName\": {\n    \"message\": \"Enter network name\"\n  },\n  \"enterOptionalPassword\": {\n    \"message\": \"Enter optional password\"\n  },\n  \"enterPasswordContinue\": {\n    \"message\": \"Enter password to continue\"\n  },\n  \"enterRpcUrl\": {\n    \"message\": \"Enter RPC URL\"\n  },\n  \"enterSymbol\": {\n    \"message\": \"Enter symbol\"\n  },\n  \"enterTokenNameOrAddress\": {\n    \"message\": \"Enter token name or paste address\"\n  },\n  \"enterYourPassword\": {\n    \"message\": \"Enter your password\"\n  },\n  \"errorCode\": {\n    \"message\": \"Code: $1\",\n    \"description\": \"Displayed error code for debugging purposes. $1 is the error code\"\n  },\n  \"errorDetails\": {\n    \"message\": \"Error details\",\n    \"description\": \"Title for collapsible section that displays error details for debugging purposes\"\n  },\n  \"errorGettingSafeChainList\": {\n    \"message\": \"Error while getting safe chain list, please continue with caution.\"\n  },\n  \"errorMessage\": {\n    \"message\": \"Message: $1\",\n    \"description\": \"Displayed error message for debugging purposes. $1 is the error message\"\n  },\n  \"errorName\": {\n    \"message\": \"Code: $1\",\n    \"description\": \"Displayed error name for debugging purposes. $1 is the error name\"\n  },\n  \"errorPageMessage\": {\n    \"message\": \"Try again by reloading the page, or contact support $1.\",\n    \"description\": \"Message displayed on generic error page in the fullscreen or notification UI, $1 is a clickable link with text defined by the 'here' key. The link will open to a form where users can file support tickets.\"\n  },\n  \"errorPagePopupMessage\": {\n    \"message\": \"Try again by closing and reopening the popup, or contact support $1.\",\n    \"description\": \"Message displayed on generic error page in the popup UI, $1 is a clickable link with text defined by the 'here' key. The link will open to a form where users can file support tickets.\"\n  },\n  \"errorPageTitle\": {\n    \"message\": \"MetaMask encountered an error\",\n    \"description\": \"Title of generic error page\"\n  },\n  \"errorStack\": {\n    \"message\": \"Stack:\",\n    \"description\": \"Title for error stack, which is displayed for debugging purposes\"\n  },\n  \"errorWhileConnectingToRPC\": {\n    \"message\": \"Error while connecting to the custom network.\"\n  },\n  \"errorWithSnap\": {\n    \"message\": \"Error with $1\",\n    \"description\": \"$1 represents the name of the snap\"\n  },\n  \"estimatedFee\": {\n    \"message\": \"Estimated fee\"\n  },\n  \"estimatedFeeTooltip\": {\n    \"message\": \"Amount paid to process the transaction on network.\"\n  },\n  \"ethGasPriceFetchWarning\": {\n    \"message\": \"Backup gas price is provided as the main gas estimation service is unavailable right now.\"\n  },\n  \"ethereumProviderAccess\": {\n    \"message\": \"Grant Ethereum provider access to $1\",\n    \"description\": \"The parameter is the name of the requesting origin\"\n  },\n  \"ethereumPublicAddress\": {\n    \"message\": \"Ethereum public address\"\n  },\n  \"etherscan\": {\n    \"message\": \"Etherscan\"\n  },\n  \"etherscanView\": {\n    \"message\": \"View account on Etherscan\"\n  },\n  \"etherscanViewOn\": {\n    \"message\": \"View on Etherscan\"\n  },\n  \"existingChainId\": {\n    \"message\": \"The information you have entered is associated with an existing chain ID.\"\n  },\n  \"existingRequestsBannerAlertDesc\": {\n    \"message\": \"To view and confirm your most recent request, you'll need to approve or reject existing requests first.\"\n  },\n  \"expandView\": {\n    \"message\": \"Expand view\"\n  },\n  \"experimental\": {\n    \"message\": \"Experimental\"\n  },\n  \"exportYourData\": {\n    \"message\": \"Export your data\"\n  },\n  \"exportYourDataButton\": {\n    \"message\": \"Download\"\n  },\n  \"exportYourDataDescription\": {\n    \"message\": \"You can export data like your contacts and preferences.\"\n  },\n  \"extendWalletWithSnaps\": {\n    \"message\": \"Explore community-built Snaps to customize your web3 experience\",\n    \"description\": \"Banner description displayed on Snaps list page in Settings when less than 6 Snaps is installed.\"\n  },\n  \"extensionInsallCompleteDescription\": {\n    \"message\": \"Return to the MetaMask Institutional product onboarding to connect your custodial or self-custodial accounts.\"\n  },\n  \"extensionInsallCompleteTitle\": {\n    \"message\": \"Extension install complete\"\n  },\n  \"externalExtension\": {\n    \"message\": \"External extension\"\n  },\n  \"externalNameSourcesSetting\": {\n    \"message\": \"Proposed nicknames\"\n  },\n  \"externalNameSourcesSettingDescription\": {\n    \"message\": \"We’ll fetch proposed nicknames for addresses you interact with from third-party sources like Etherscan, Infura, and Lens Protocol. These sources will be able to see those addresses and your IP address. Your account address won’t be exposed to third parties.\"\n  },\n  \"failed\": {\n    \"message\": \"Failed\"\n  },\n  \"failedToFetchChainId\": {\n    \"message\": \"Could not fetch chain ID. Is your RPC URL correct?\"\n  },\n  \"failureMessage\": {\n    \"message\": \"Something went wrong, and we were unable to complete the action\"\n  },\n  \"fast\": {\n    \"message\": \"Fast\"\n  },\n  \"feeAssociatedRequest\": {\n    \"message\": \"A fee is associated with this request.\"\n  },\n  \"feeDetails\": {\n    \"message\": \"Fee details\"\n  },\n  \"fiat\": {\n    \"message\": \"Fiat\",\n    \"description\": \"Exchange type\"\n  },\n  \"fileImportFail\": {\n    \"message\": \"File import not working? Click here!\",\n    \"description\": \"Helps user import their account from a JSON file\"\n  },\n  \"flaskWelcomeUninstall\": {\n    \"message\": \"you should uninstall this extension\",\n    \"description\": \"This request is shown on the Flask Welcome screen. It is intended for non-developers, and will be bolded.\"\n  },\n  \"flaskWelcomeWarning1\": {\n    \"message\": \"Flask is for developers to experiment with new unstable APIs. Unless you are a developer or beta tester, $1.\",\n    \"description\": \"This is a warning shown on the Flask Welcome screen, intended to encourage non-developers not to proceed any further. $1 is the bolded message 'flaskWelcomeUninstall'\"\n  },\n  \"flaskWelcomeWarning2\": {\n    \"message\": \"We do not guarantee the safety or stability of this extension. The new APIs offered by Flask are not hardened against phishing attacks, meaning that any site or snap that requires Flask might be a malicious attempt to steal your assets.\",\n    \"description\": \"This explains the risks of using MetaMask Flask\"\n  },\n  \"flaskWelcomeWarning3\": {\n    \"message\": \"All Flask APIs are experimental. They may be changed or removed without notice, or they might stay on Flask indefinitely without ever being migrated to stable MetaMask. Use them at your own risk.\",\n    \"description\": \"This message warns developers about unstable Flask APIs\"\n  },\n  \"flaskWelcomeWarning4\": {\n    \"message\": \"Make sure to disable your regular MetaMask extension when using Flask.\",\n    \"description\": \"This message calls to pay attention about multiple versions of MetaMask running on the same site (Flask + Prod)\"\n  },\n  \"flaskWelcomeWarningAcceptButton\": {\n    \"message\": \"I accept the risks\",\n    \"description\": \"this text is shown on a button, which the user presses to confirm they understand the risks of using Flask\"\n  },\n  \"floatAmountToken\": {\n    \"message\": \"Token amount must be an integer\"\n  },\n  \"followUsOnTwitter\": {\n    \"message\": \"Follow us on Twitter\"\n  },\n  \"forbiddenIpfsGateway\": {\n    \"message\": \"Forbidden IPFS Gateway: Please specify a CID gateway\"\n  },\n  \"forgetDevice\": {\n    \"message\": \"Forget this device\"\n  },\n  \"forgotPassword\": {\n    \"message\": \"Forgot password?\"\n  },\n  \"form\": {\n    \"message\": \"form\"\n  },\n  \"from\": {\n    \"message\": \"From\"\n  },\n  \"fromAddress\": {\n    \"message\": \"From: $1\",\n    \"description\": \"$1 is the address to include in the From label. It is typically shortened first using shortenAddress\"\n  },\n  \"fromTokenLists\": {\n    \"message\": \"From token lists: $1\"\n  },\n  \"function\": {\n    \"message\": \"Function: $1\"\n  },\n  \"functionApprove\": {\n    \"message\": \"Function: Approve\"\n  },\n  \"functionSetApprovalForAll\": {\n    \"message\": \"Function: SetApprovalForAll\"\n  },\n  \"functionType\": {\n    \"message\": \"Function type\"\n  },\n  \"fundYourWallet\": {\n    \"message\": \"Fund your wallet\"\n  },\n  \"fundYourWalletDescription\": {\n    \"message\": \"Get started by adding some $1 to your wallet.\",\n    \"description\": \"$1 is the token symbol\"\n  },\n  \"gas\": {\n    \"message\": \"Gas\"\n  },\n  \"gasDisplayAcknowledgeDappButtonText\": {\n    \"message\": \"Edit suggested gas fee\"\n  },\n  \"gasDisplayDappWarning\": {\n    \"message\": \"This gas fee has been suggested by $1. Overriding this may cause a problem with your transaction. Please reach out to $1 if you have questions.\",\n    \"description\": \"$1 represents the Dapp's origin\"\n  },\n  \"gasIsETH\": {\n    \"message\": \"Gas is $1 \"\n  },\n  \"gasLimit\": {\n    \"message\": \"Gas limit\"\n  },\n  \"gasLimitInfoTooltipContent\": {\n    \"message\": \"Gas limit is the maximum amount of units of gas you are willing to spend.\"\n  },\n  \"gasLimitRecommended\": {\n    \"message\": \"Recommended gas limit is $1. If the gas limit is less than that, it may fail.\"\n  },\n  \"gasLimitTooLow\": {\n    \"message\": \"Gas limit must be at least 21000\"\n  },\n  \"gasLimitTooLowWithDynamicFee\": {\n    \"message\": \"Gas limit must be at least $1\",\n    \"description\": \"$1 is the custom gas limit, in decimal.\"\n  },\n  \"gasLimitV2\": {\n    \"message\": \"Gas limit\"\n  },\n  \"gasOption\": {\n    \"message\": \"Gas option\"\n  },\n  \"gasPrice\": {\n    \"message\": \"Gas price (GWEI)\"\n  },\n  \"gasPriceExcessive\": {\n    \"message\": \"Your gas fee is set unnecessarily high. Consider lowering the amount.\"\n  },\n  \"gasPriceExcessiveInput\": {\n    \"message\": \"Gas price is excessive\"\n  },\n  \"gasPriceExtremelyLow\": {\n    \"message\": \"Gas price extremely low\"\n  },\n  \"gasPriceFetchFailed\": {\n    \"message\": \"Gas price estimation failed due to network error.\"\n  },\n  \"gasPriceInfoTooltipContent\": {\n    \"message\": \"Gas price specifies the amount of Ether you are willing to pay for each unit of gas.\"\n  },\n  \"gasTimingHoursShort\": {\n    \"message\": \"$1 hrs\",\n    \"description\": \"$1 represents a number of hours\"\n  },\n  \"gasTimingLow\": {\n    \"message\": \"Slow\"\n  },\n  \"gasTimingMinutesShort\": {\n    \"message\": \"$1 min\",\n    \"description\": \"$1 represents a number of minutes\"\n  },\n  \"gasTimingSecondsShort\": {\n    \"message\": \"$1 sec\",\n    \"description\": \"$1 represents a number of seconds\"\n  },\n  \"gasUsed\": {\n    \"message\": \"Gas used\"\n  },\n  \"general\": {\n    \"message\": \"General\"\n  },\n  \"generalCameraError\": {\n    \"message\": \"We couldn't access your camera. Please give it another try.\"\n  },\n  \"generalCameraErrorTitle\": {\n    \"message\": \"Something went wrong....\"\n  },\n  \"genericExplorerView\": {\n    \"message\": \"View account on $1\"\n  },\n  \"getStarted\": {\n    \"message\": \"Get Started\"\n  },\n  \"getStartedByFundingWallet\": {\n    \"message\": \"Get started by adding some crypto to your wallet.\"\n  },\n  \"getStartedWithNFTs\": {\n    \"message\": \"Get $1 to buy NFTs\",\n    \"description\": \"$1 is the token symbol\"\n  },\n  \"getStartedWithNFTsDescription\": {\n    \"message\": \"Get started with NFTs by adding some $1 to your wallet.\",\n    \"description\": \"$1 is the token symbol\"\n  },\n  \"goBack\": {\n    \"message\": \"Go back\"\n  },\n  \"goToSite\": {\n    \"message\": \"Go to site\"\n  },\n  \"goerli\": {\n    \"message\": \"Goerli test network\"\n  },\n  \"gotIt\": {\n    \"message\": \"Got it\"\n  },\n  \"grantedToWithColon\": {\n    \"message\": \"Granted to:\"\n  },\n  \"gwei\": {\n    \"message\": \"GWEI\"\n  },\n  \"hardware\": {\n    \"message\": \"Hardware\"\n  },\n  \"hardwareWalletConnected\": {\n    \"message\": \"Hardware wallet connected\"\n  },\n  \"hardwareWalletLegacyDescription\": {\n    \"message\": \"(legacy)\",\n    \"description\": \"Text representing the MEW path\"\n  },\n  \"hardwareWalletSupportLinkConversion\": {\n    \"message\": \"click here\"\n  },\n  \"hardwareWallets\": {\n    \"message\": \"Connect a hardware wallet\"\n  },\n  \"hardwareWalletsInfo\": {\n    \"message\": \"Hardware wallet integrations use API calls to external servers, which can see your IP address and the smart contract addresses you interact with.\"\n  },\n  \"hardwareWalletsMsg\": {\n    \"message\": \"Select a hardware wallet you would like to use with MetaMask.\"\n  },\n  \"here\": {\n    \"message\": \"here\",\n    \"description\": \"as in -click here- for more information (goes with troubleTokenBalances)\"\n  },\n  \"hexData\": {\n    \"message\": \"Hex data\"\n  },\n  \"hiddenAccounts\": {\n    \"message\": \"Hidden accounts\"\n  },\n  \"hide\": {\n    \"message\": \"Hide\"\n  },\n  \"hideAccount\": {\n    \"message\": \"Hide account\"\n  },\n  \"hideFullTransactionDetails\": {\n    \"message\": \"Hide full transaction details\"\n  },\n  \"hideSeedPhrase\": {\n    \"message\": \"Hide seed phrase\"\n  },\n  \"hideSentitiveInfo\": {\n    \"message\": \"Hide sensitive information\"\n  },\n  \"hideToken\": {\n    \"message\": \"Hide token\"\n  },\n  \"hideTokenPrompt\": {\n    \"message\": \"Hide token?\"\n  },\n  \"hideTokenSymbol\": {\n    \"message\": \"Hide $1\",\n    \"description\": \"$1 is the symbol for a token (e.g. 'DAI')\"\n  },\n  \"hideZeroBalanceTokens\": {\n    \"message\": \"Hide tokens without balance\"\n  },\n  \"high\": {\n    \"message\": \"Aggressive\"\n  },\n  \"highGasSettingToolTipMessage\": {\n    \"message\": \"High probability, even in volatile markets. Use $1 to cover surges in network traffic due to things like popular NFT drops.\",\n    \"description\": \"$1 is key 'high' (text: 'Aggressive') separated here so that it can be passed in with bold font-weight\"\n  },\n  \"highLowercase\": {\n    \"message\": \"high\"\n  },\n  \"highestCurrentBid\": {\n    \"message\": \"Highest current bid\"\n  },\n  \"highestFloorPrice\": {\n    \"message\": \"Highest floor price\"\n  },\n  \"history\": {\n    \"message\": \"History\"\n  },\n  \"holdToRevealContent1\": {\n    \"message\": \"Your Secret Recovery Phrase provides $1\",\n    \"description\": \"$1 is a bolded text with the message from 'holdToRevealContent2'\"\n  },\n  \"holdToRevealContent2\": {\n    \"message\": \"full access to your wallet and funds.\",\n    \"description\": \"Is the bolded text in 'holdToRevealContent1'\"\n  },\n  \"holdToRevealContent3\": {\n    \"message\": \"Do not share this with anyone. $1 $2\",\n    \"description\": \"$1 is a message from 'holdToRevealContent4' and $2 is a text link with the message from 'holdToRevealContent5'\"\n  },\n  \"holdToRevealContent4\": {\n    \"message\": \"MetaMask Support will not request this,\",\n    \"description\": \"Part of 'holdToRevealContent3'\"\n  },\n  \"holdToRevealContent5\": {\n    \"message\": \"but phishers might.\",\n    \"description\": \"The text link in 'holdToRevealContent3'\"\n  },\n  \"holdToRevealContentPrivateKey1\": {\n    \"message\": \"Your Private Key provides $1\",\n    \"description\": \"$1 is a bolded text with the message from 'holdToRevealContentPrivateKey2'\"\n  },\n  \"holdToRevealContentPrivateKey2\": {\n    \"message\": \"full access to your wallet and funds.\",\n    \"description\": \"Is the bolded text in 'holdToRevealContentPrivateKey2'\"\n  },\n  \"holdToRevealLockedLabel\": {\n    \"message\": \"hold to reveal circle locked\"\n  },\n  \"holdToRevealPrivateKey\": {\n    \"message\": \"Hold to reveal Private Key\"\n  },\n  \"holdToRevealPrivateKeyTitle\": {\n    \"message\": \"Keep your private key safe\"\n  },\n  \"holdToRevealSRP\": {\n    \"message\": \"Hold to reveal SRP\"\n  },\n  \"holdToRevealSRPTitle\": {\n    \"message\": \"Keep your SRP safe\"\n  },\n  \"holdToRevealUnlockedLabel\": {\n    \"message\": \"hold to reveal circle unlocked\"\n  },\n  \"id\": {\n    \"message\": \"ID\"\n  },\n  \"ignoreAll\": {\n    \"message\": \"Ignore all\"\n  },\n  \"ignoreTokenWarning\": {\n    \"message\": \"If you hide tokens, they will not be shown in your wallet. However, you can still add them by searching for them.\"\n  },\n  \"imToken\": {\n    \"message\": \"imToken\"\n  },\n  \"import\": {\n    \"message\": \"Import\",\n    \"description\": \"Button to import an account from a selected file\"\n  },\n  \"importAccount\": {\n    \"message\": \"Import account\"\n  },\n  \"importAccountError\": {\n    \"message\": \"Error importing account.\"\n  },\n  \"importAccountErrorIsSRP\": {\n    \"message\": \"You have entered a Secret Recovery Phrase (or mnemonic). To import an account here, you have to enter a private key, which is a hexadecimal string of length 64.\"\n  },\n  \"importAccountErrorNotAValidPrivateKey\": {\n    \"message\": \"This is not a valid private key. You have entered a hexadecimal string, but it must be 64 characters long.\"\n  },\n  \"importAccountErrorNotHexadecimal\": {\n    \"message\": \"This is not a valid private key. You must enter a hexadecimal string of length 64.\"\n  },\n  \"importAccountJsonLoading1\": {\n    \"message\": \"Expect this JSON import to take a few minutes and freeze MetaMask.\"\n  },\n  \"importAccountJsonLoading2\": {\n    \"message\": \"We apologize, and we will make it faster in the future.\"\n  },\n  \"importAccountMsg\": {\n    \"message\": \"Imported accounts won’t be associated with your MetaMask Secret Recovery Phrase. Learn more about imported accounts\"\n  },\n  \"importMyWallet\": {\n    \"message\": \"Import my wallet\"\n  },\n  \"importNFT\": {\n    \"message\": \"Import NFT\"\n  },\n  \"importNFTAddressToolTip\": {\n    \"message\": \"On OpenSea, for example, on the NFT's page under Details, there is a blue hyperlinked value labeled 'Contract Address'. If you click on this, it will take you to the contract's address on Etherscan; at the top-left of that page, there should be an icon labeled 'Contract', and to the right, a long string of letters and numbers. This is the address of the contract that created your NFT. Click on the 'copy' icon to the right of the address, and you'll have it on your clipboard.\"\n  },\n  \"importNFTPage\": {\n    \"message\": \"Import NFT page\"\n  },\n  \"importNFTTokenIdToolTip\": {\n    \"message\": \"An NFT's ID is a unique identifier since no two NFTs are alike. Again, on OpenSea this number is under 'Details'. Make a note of it, or copy it onto your clipboard.\"\n  },\n  \"importSelectedTokens\": {\n    \"message\": \"Import selected tokens?\"\n  },\n  \"importSelectedTokensDescription\": {\n    \"message\": \"Only the tokens you've selected will appear in your wallet. You can always import hidden tokens later by searching for them.\"\n  },\n  \"importTokenQuestion\": {\n    \"message\": \"Import token?\"\n  },\n  \"importTokenWarning\": {\n    \"message\": \"Anyone can create a token with any name, including fake versions of existing tokens. Add and trade at your own risk!\"\n  },\n  \"importTokensCamelCase\": {\n    \"message\": \"Import tokens\"\n  },\n  \"importTokensError\": {\n    \"message\": \"We could not import the tokens. Please try again later.\"\n  },\n  \"importWithCount\": {\n    \"message\": \"Import $1\",\n    \"description\": \"$1 will the number of detected tokens that are selected for importing, if all of them are selected then $1 will be all\"\n  },\n  \"imported\": {\n    \"message\": \"Imported\",\n    \"description\": \"status showing that an account has been fully loaded into the keyring\"\n  },\n  \"inYourSettings\": {\n    \"message\": \"in your Settings\"\n  },\n  \"infuraBlockedNotification\": {\n    \"message\": \"MetaMask is unable to connect to the blockchain host. Review possible reasons $1.\",\n    \"description\": \"$1 is a clickable link with with text defined by the 'here' key\"\n  },\n  \"initialTransactionConfirmed\": {\n    \"message\": \"Your initial transaction was confirmed by the network. Click OK to go back.\"\n  },\n  \"inputLogicEmptyState\": {\n    \"message\": \"Only enter a number that you're comfortable with the third party spending now or in the future. You can always increase the spending cap later.\"\n  },\n  \"inputLogicEqualOrSmallerNumber\": {\n    \"message\": \"This allows the third party to spend $1 from your current balance.\",\n    \"description\": \"$1 is the current token balance in the account and the name of the current token\"\n  },\n  \"inputLogicHigherNumber\": {\n    \"message\": \"This allows the third party to spend all your token balance until it reaches the cap or you revoke the spending cap. If this is not intended, consider setting a lower spending cap.\"\n  },\n  \"insightWarning\": {\n    \"message\": \"warning\"\n  },\n  \"insightWarningCheckboxMessage\": {\n    \"message\": \"$1 the request by $2\",\n    \"description\": \"$1 is the action i.e. sign, confirm. $2 is the origin making the request.\"\n  },\n  \"insightWarningContentPlural\": {\n    \"message\": \"Review $1 before $2. Once made, the $3 is irreversible.\",\n    \"description\": \"$1 the 'insightWarnings' message (2 warnings) representing warnings, $2 is the action (i.e. signing) and $3 is the result (i.e. signature, transaction)\"\n  },\n  \"insightWarningContentSingular\": {\n    \"message\": \"Review $1 before $2. Once made, the $3 is irreversible.\",\n    \"description\": \"$1 is the 'insightWarning' message (1 warning), $2 is the action (i.e. signing) and $3 is the result (i.e. signature, transaction)\"\n  },\n  \"insightWarningHeader\": {\n    \"message\": \"This request may be risky\"\n  },\n  \"insightWarnings\": {\n    \"message\": \"warnings\"\n  },\n  \"insightsFromSnap\": {\n    \"message\": \"Insights from $1\",\n    \"description\": \"$1 represents the name of the snap\"\n  },\n  \"install\": {\n    \"message\": \"Install\"\n  },\n  \"installExtension\": {\n    \"message\": \"Install extension\"\n  },\n  \"installExtensionDescription\": {\n    \"message\": \"The institution-compliant version of the world's leading web3 wallet, MetaMask.\"\n  },\n  \"installOrigin\": {\n    \"message\": \"Install origin\"\n  },\n  \"installRequest\": {\n    \"message\": \"Add to MetaMask\"\n  },\n  \"installedOn\": {\n    \"message\": \"Installed on $1\",\n    \"description\": \"$1 is the date when the snap has been installed\"\n  },\n  \"insufficientBalance\": {\n    \"message\": \"Insufficient balance.\"\n  },\n  \"insufficientCurrencyBuyOrDeposit\": {\n    \"message\": \"You do not have enough $1 in your account to pay for transaction fees on $2 network. $3 or deposit from another account.\",\n    \"description\": \"$1 is the native currency of the network, $2 is the name of the current network, $3 is the key 'buy' + the ticker symbol of the native currency of the chain wrapped in a button\"\n  },\n  \"insufficientCurrencyBuyOrReceive\": {\n    \"message\": \"You do not have enough $1 in your account to pay for transaction fees on $2 network. $3 or $4 from another account.\",\n    \"description\": \"$1 is the native currency of the network, $2 is the name of the current network, $3 is the key 'buy' + the ticker symbol of the native currency of the chain wrapped in a button, $4 is the key 'deposit' button\"\n  },\n  \"insufficientCurrencyDeposit\": {\n    \"message\": \"You do not have enough $1 in your account to pay for transaction fees on $2 network. Deposit $1 from another account.\",\n    \"description\": \"$1 is the native currency of the network, $2 is the name of the current network\"\n  },\n  \"insufficientFunds\": {\n    \"message\": \"Insufficient funds.\"\n  },\n  \"insufficientFundsForGas\": {\n    \"message\": \"Insufficient funds for gas\"\n  },\n  \"insufficientTokens\": {\n    \"message\": \"Insufficient tokens.\"\n  },\n  \"interactingWith\": {\n    \"message\": \"Interacting with\"\n  },\n  \"interactingWithTransactionDescription\": {\n    \"message\": \"This is the contract you're interacting with. Protect yourself from scammers by verifying the details.\"\n  },\n  \"invalidAddress\": {\n    \"message\": \"Invalid address\"\n  },\n  \"invalidAddressRecipient\": {\n    \"message\": \"Recipient address is invalid\"\n  },\n  \"invalidAssetType\": {\n    \"message\": \"This asset is an NFT and needs to be re-added on the Import NFTs page found under the NFTs tab\"\n  },\n  \"invalidChainIdTooBig\": {\n    \"message\": \"Invalid chain ID. The chain ID is too big.\"\n  },\n  \"invalidCustomNetworkAlertContent1\": {\n    \"message\": \"The chain ID for custom network '$1' has to be re-entered.\",\n    \"description\": \"$1 is the name/identifier of the network.\"\n  },\n  \"invalidCustomNetworkAlertContent2\": {\n    \"message\": \"To protect you from malicious or faulty network providers, chain IDs are now required for all custom networks.\"\n  },\n  \"invalidCustomNetworkAlertContent3\": {\n    \"message\": \"Go to Settings > Network and enter the chain ID. You can find the chain IDs of most popular networks on $1.\",\n    \"description\": \"$1 is a link to https://chainid.network\"\n  },\n  \"invalidCustomNetworkAlertTitle\": {\n    \"message\": \"Invalid custom network\"\n  },\n  \"invalidHexNumber\": {\n    \"message\": \"Invalid hexadecimal number.\"\n  },\n  \"invalidHexNumberLeadingZeros\": {\n    \"message\": \"Invalid hexadecimal number. Remove any leading zeros.\"\n  },\n  \"invalidIpfsGateway\": {\n    \"message\": \"Invalid IPFS Gateway: The value must be a valid URL\"\n  },\n  \"invalidNumber\": {\n    \"message\": \"Invalid number. Enter a decimal or '0x'-prefixed hexadecimal number.\"\n  },\n  \"invalidNumberLeadingZeros\": {\n    \"message\": \"Invalid number. Remove any leading zeros.\"\n  },\n  \"invalidRPC\": {\n    \"message\": \"Invalid RPC URL\"\n  },\n  \"invalidSeedPhrase\": {\n    \"message\": \"Invalid Secret Recovery Phrase\"\n  },\n  \"invalidSeedPhraseCaseSensitive\": {\n    \"message\": \"Invalid input! Secret Recovery Phrase is case sensitive.\"\n  },\n  \"ipfsGateway\": {\n    \"message\": \"IPFS gateway\"\n  },\n  \"ipfsGatewayDescription\": {\n    \"message\": \"MetaMask uses third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them.\"\n  },\n  \"ipfsToggleModalDescriptionOne\": {\n    \"message\": \"We use third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them.\"\n  },\n  \"ipfsToggleModalDescriptionTwo\": {\n    \"message\": \"Selecting Confirm turns on IPFS resolution. You can turn it off in $1 at any time.\",\n    \"description\": \"$1 is the method to turn off ipfs\"\n  },\n  \"ipfsToggleModalSettings\": {\n    \"message\": \"Settings > Security and privacy\"\n  },\n  \"isSigningOrSubmitting\": {\n    \"message\": \"A previous transaction is still being signed or submitted\"\n  },\n  \"jazzAndBlockies\": {\n    \"message\": \"Jazzicons and Blockies are two different styles of unique icons that help you identify an account at a glance.\"\n  },\n  \"jazzicons\": {\n    \"message\": \"Jazzicons\"\n  },\n  \"jsDeliver\": {\n    \"message\": \"jsDeliver\"\n  },\n  \"jsonFile\": {\n    \"message\": \"JSON File\",\n    \"description\": \"format for importing an account\"\n  },\n  \"keyringAccountName\": {\n    \"message\": \"Account name\"\n  },\n  \"keyringAccountPublicAddress\": {\n    \"message\": \"Public Address\"\n  },\n  \"keyringSnapRemovalResult1\": {\n    \"message\": \"$1 $2removed\",\n    \"description\": \"Displays the result after removal of a keyring snap. $1 is the snap name, $2 is whether it is successful or not\"\n  },\n  \"keyringSnapRemovalResultNotSuccessful\": {\n    \"message\": \"not \",\n    \"description\": \"Displays the `not` word in $2.\"\n  },\n  \"keyringSnapRemoveConfirmation\": {\n    \"message\": \"Type $1 to confirm you want to remove this snap:\",\n    \"description\": \"Asks user to input the name nap prior to deleting the snap. $1 is the snap name\"\n  },\n  \"keystone\": {\n    \"message\": \"Keystone\"\n  },\n  \"knownAddressRecipient\": {\n    \"message\": \"Known contract address.\"\n  },\n  \"knownTokenWarning\": {\n    \"message\": \"This action will edit tokens that are already listed in your wallet, which can be used to phish you. Only approve if you are certain that you mean to change what these tokens represent. Learn more about $1\"\n  },\n  \"l1Fee\": {\n    \"message\": \"L1 fee\"\n  },\n  \"l1FeeTooltip\": {\n    \"message\": \"L1 gas fee\"\n  },\n  \"l2Fee\": {\n    \"message\": \"L2 fee\"\n  },\n  \"l2FeeTooltip\": {\n    \"message\": \"L2 gas fee\"\n  },\n  \"lastConnected\": {\n    \"message\": \"Last connected\"\n  },\n  \"lastSold\": {\n    \"message\": \"Last sold\"\n  },\n  \"lavaDomeCopyWarning\": {\n    \"message\": \"For your safety, selecting this text is not available right now.\"\n  },\n  \"layer1Fees\": {\n    \"message\": \"Layer 1 fees\"\n  },\n  \"layer2Fees\": {\n    \"message\": \"Layer 2 fees\"\n  },\n  \"learnCancelSpeeedup\": {\n    \"message\": \"Learn how to $1\",\n    \"description\": \"$1 is link to cancel or speed up transactions\"\n  },\n  \"learnMore\": {\n    \"message\": \"learn more\"\n  },\n  \"learnMoreAboutGas\": {\n    \"message\": \"Want to $1 about gas?\",\n    \"description\": \"$1 will be replaced by the learnMore translation key\"\n  },\n  \"learnMoreKeystone\": {\n    \"message\": \"Learn More\"\n  },\n  \"learnMoreUpperCase\": {\n    \"message\": \"Learn more\"\n  },\n  \"learnMoreUpperCaseWithDot\": {\n    \"message\": \"Learn more.\"\n  },\n  \"learnScamRisk\": {\n    \"message\": \"scams and security risks.\"\n  },\n  \"learnToBridge\": {\n    \"message\": \"Learn to bridge\"\n  },\n  \"leaveMetaMask\": {\n    \"message\": \"Leave MetaMask?\"\n  },\n  \"leaveMetaMaskDesc\": {\n    \"message\": \"You're about to visit a site outside of MetaMask. Double-check the URL before continuing.\"\n  },\n  \"ledgerAccountRestriction\": {\n    \"message\": \"You need to make use your last account before you can add a new one.\"\n  },\n  \"ledgerConnectionInstructionCloseOtherApps\": {\n    \"message\": \"Close any other software connected to your device and then click here to refresh.\"\n  },\n  \"ledgerConnectionInstructionHeader\": {\n    \"message\": \"Prior to clicking confirm:\"\n  },\n  \"ledgerConnectionInstructionStepFour\": {\n    \"message\": \"Enable \\\"smart contract data\\\" or \\\"blind signing\\\" on your Ledger device.\"\n  },\n  \"ledgerConnectionInstructionStepThree\": {\n    \"message\": \"Be sure your Ledger is plugged in and to select the Ethereum app.\"\n  },\n  \"ledgerDeviceOpenFailureMessage\": {\n    \"message\": \"The Ledger device failed to open. Your Ledger might be connected to other software. Please close Ledger Live or other applications connected to your Ledger device, and try to connect again.\"\n  },\n  \"ledgerErrorConnectionIssue\": {\n    \"message\": \"Reconnect your ledger, open the ETH app and try again.\"\n  },\n  \"ledgerErrorDevicedLocked\": {\n    \"message\": \"Your Ledger is locked. Unlock it then try again.\"\n  },\n  \"ledgerErrorEthAppNotOpen\": {\n    \"message\": \"To solve the issue, open the ETH application on your device and retry.\"\n  },\n  \"ledgerErrorTransactionDataNotPadded\": {\n    \"message\": \"Ethereum transaction's input data isn't sufficiently padded.\"\n  },\n  \"ledgerLiveApp\": {\n    \"message\": \"Ledger Live App\"\n  },\n  \"ledgerLocked\": {\n    \"message\": \"Cannot connect to Ledger device. Please make sure your device is unlocked and Ethereum app is opened.\"\n  },\n  \"ledgerTimeout\": {\n    \"message\": \"Ledger Live is taking too long to respond or connection timeout. Make sure Ledger Live app is opened and your device is unlocked.\"\n  },\n  \"ledgerWebHIDNotConnectedErrorMessage\": {\n    \"message\": \"The ledger device was not connected. If you wish to connect your Ledger, please click 'Continue' again and approve HID connection\",\n    \"description\": \"An error message shown to the user during the hardware connect flow.\"\n  },\n  \"levelArrow\": {\n    \"message\": \"level arrow\"\n  },\n  \"lightTheme\": {\n    \"message\": \"Light\"\n  },\n  \"likeToImportToken\": {\n    \"message\": \"Would you like to import this token?\"\n  },\n  \"likeToImportTokens\": {\n    \"message\": \"Would you like to import these tokens?\"\n  },\n  \"lineaGoerli\": {\n    \"message\": \"Linea Goerli test network\"\n  },\n  \"lineaMainnet\": {\n    \"message\": \"Linea Mainnet\"\n  },\n  \"lineaSepolia\": {\n    \"message\": \"Linea Sepolia test network\"\n  },\n  \"link\": {\n    \"message\": \"Link\"\n  },\n  \"linkCentralizedExchanges\": {\n    \"message\": \"Link your Coinbase or Binance accounts to transfer crypto to MetaMask for free.\"\n  },\n  \"links\": {\n    \"message\": \"Links\"\n  },\n  \"loadMore\": {\n    \"message\": \"Load more\"\n  },\n  \"loading\": {\n    \"message\": \"Loading...\"\n  },\n  \"loadingScreenHardwareWalletMessage\": {\n    \"message\": \"Please complete the transaction on the hardware wallet.\"\n  },\n  \"loadingScreenSnapMessage\": {\n    \"message\": \"Please complete the transaction on the Snap.\"\n  },\n  \"loadingTokens\": {\n    \"message\": \"Loading tokens...\"\n  },\n  \"localhost\": {\n    \"message\": \"Localhost 8545\"\n  },\n  \"lock\": {\n    \"message\": \"Lock\"\n  },\n  \"lockMetaMask\": {\n    \"message\": \"Lock MetaMask\"\n  },\n  \"lockTimeInvalid\": {\n    \"message\": \"Lock time must be a number between 0 and 10080\"\n  },\n  \"logo\": {\n    \"message\": \"$1 logo\",\n    \"description\": \"$1 is the name of the ticker\"\n  },\n  \"low\": {\n    \"message\": \"Low\"\n  },\n  \"lowGasSettingToolTipMessage\": {\n    \"message\": \"Use $1 to wait for a cheaper price. Time estimates are much less accurate as prices are somewhat unpredictable.\",\n    \"description\": \"$1 is key 'low' separated here so that it can be passed in with bold font-weight\"\n  },\n  \"lowLowercase\": {\n    \"message\": \"low\"\n  },\n  \"lowPriorityMessage\": {\n    \"message\": \"Future transactions will queue after this one.\"\n  },\n  \"mainnet\": {\n    \"message\": \"Ethereum Mainnet\"\n  },\n  \"mainnetToken\": {\n    \"message\": \"This address matches a known Ethereum Mainnet token address. Recheck the contract address and network for the token you are trying to add.\"\n  },\n  \"makeAnotherSwap\": {\n    \"message\": \"Create a new swap\"\n  },\n  \"makeSureNoOneWatching\": {\n    \"message\": \"Make sure nobody is looking\",\n    \"description\": \"Warning to users to be care while creating and saving their new Secret Recovery Phrase\"\n  },\n  \"marketCap\": {\n    \"message\": \"Market cap\"\n  },\n  \"marketDetails\": {\n    \"message\": \"Market details\"\n  },\n  \"max\": {\n    \"message\": \"Max\"\n  },\n  \"maxBaseFee\": {\n    \"message\": \"Max base fee\"\n  },\n  \"maxFee\": {\n    \"message\": \"Max fee\"\n  },\n  \"maxFeeTooltip\": {\n    \"message\": \"A maximum fee provided to pay for the transaction.\"\n  },\n  \"maxPriorityFee\": {\n    \"message\": \"Max priority fee\"\n  },\n  \"medium\": {\n    \"message\": \"Market\"\n  },\n  \"mediumGasSettingToolTipMessage\": {\n    \"message\": \"Use $1 for fast processing at current market price.\",\n    \"description\": \"$1 is key 'medium' (text: 'Market') separated here so that it can be passed in with bold font-weight\"\n  },\n  \"memo\": {\n    \"message\": \"memo\"\n  },\n  \"message\": {\n    \"message\": \"Message\"\n  },\n  \"metaMaskConnectStatusParagraphOne\": {\n    \"message\": \"You now have more control over your account connections in MetaMask.\"\n  },\n  \"metaMaskConnectStatusParagraphThree\": {\n    \"message\": \"Click it to manage your connected accounts.\"\n  },\n  \"metaMaskConnectStatusParagraphTwo\": {\n    \"message\": \"The connection status button shows if the website you’re visiting is connected to your currently selected account.\"\n  },\n  \"metadataModalSourceTooltip\": {\n    \"message\": \"$1 is hosted on npm and $2 is this Snap’s unique identifier.\",\n    \"description\": \"$1 is the snap name and $2 is the snap NPM id.\"\n  },\n  \"metamaskInstitutionalVersion\": {\n    \"message\": \"MetaMask Institutional Version\"\n  },\n  \"metamaskNotificationsAreOff\": {\n    \"message\": \"Wallet notifications are currently not active.\"\n  },\n  \"metamaskPortfolio\": {\n    \"message\": \"MetaMask Portfolio.\"\n  },\n  \"metamaskSwapsOfflineDescription\": {\n    \"message\": \"MetaMask Swaps is undergoing maintenance. Please check back later.\"\n  },\n  \"metamaskVersion\": {\n    \"message\": \"MetaMask Version\"\n  },\n  \"methodData\": {\n    \"message\": \"Method\"\n  },\n  \"methodDataTransactionDesc\": {\n    \"message\": \"Function executed based on decoded input data.\"\n  },\n  \"methodNotSupported\": {\n    \"message\": \"Not supported with this account.\"\n  },\n  \"metrics\": {\n    \"message\": \"Metrics\"\n  },\n  \"millionAbbreviation\": {\n    \"message\": \"M\",\n    \"description\": \"Shortened form of 'million'\"\n  },\n  \"mismatchAccount\": {\n    \"message\": \"Your selected account ($1) is different than the account trying to sign ($2)\"\n  },\n  \"mismatchedChainLinkText\": {\n    \"message\": \"verify the network details\",\n    \"description\": \"Serves as link text for the 'mismatchedChain' key. This text will be embedded inside the translation for that key.\"\n  },\n  \"mismatchedChainRecommendation\": {\n    \"message\": \"We recommend that you $1 before proceeding.\",\n    \"description\": \"$1 is a clickable link with text defined by the 'mismatchedChainLinkText' key. The link will open to instructions for users to validate custom network details.\"\n  },\n  \"mismatchedNetworkName\": {\n    \"message\": \"According to our record the network name may not correctly match this chain ID.\"\n  },\n  \"mismatchedNetworkSymbol\": {\n    \"message\": \"The submitted currency symbol does not match what we expect for this chain ID.\"\n  },\n  \"mismatchedRpcChainId\": {\n    \"message\": \"Chain ID returned by the custom network does not match the submitted chain ID.\"\n  },\n  \"mismatchedRpcUrl\": {\n    \"message\": \"According to our records the submitted RPC URL value does not match a known provider for this chain ID.\"\n  },\n  \"missingSetting\": {\n    \"message\": \"Can't find a setting?\"\n  },\n  \"missingSettingRequest\": {\n    \"message\": \"Request here\"\n  },\n  \"mmiBuiltAroundTheWorld\": {\n    \"message\": \"MetaMask Institutional is designed and built around the world.\"\n  },\n  \"mmiNewNFTDetectedInNFTsTabMessage\": {\n    \"message\": \"Let MetaMask Institutional automatically detect and display NFTs in your wallet.\"\n  },\n  \"mmiPasswordSetupDetails\": {\n    \"message\": \"This password will unlock your MetaMask Institutional extension only.\"\n  },\n  \"more\": {\n    \"message\": \"more\"\n  },\n  \"multichainAddEthereumChainConfirmationDescription\": {\n    \"message\": \"You're adding this network to MetaMask and giving this site permission to use it.\"\n  },\n  \"multipleSnapConnectionWarning\": {\n    \"message\": \"$1 wants to use $2 Snaps\",\n    \"description\": \"$1 is the dapp and $2 is the number of snaps it wants to connect to.\"\n  },\n  \"mustSelectOne\": {\n    \"message\": \"Must select at least 1 token.\"\n  },\n  \"name\": {\n    \"message\": \"Name\"\n  },\n  \"nameAddressLabel\": {\n    \"message\": \"Address\",\n    \"description\": \"Label above address field in name component modal.\"\n  },\n  \"nameInstructionsNew\": {\n    \"message\": \"If you know this address, give it a nickname to recognize it in the future.\",\n    \"description\": \"Instruction text in name component modal when value is not recognised.\"\n  },\n  \"nameInstructionsRecognized\": {\n    \"message\": \"This address has a default nickname, but you can edit it or explore other suggestions.\",\n    \"description\": \"Instruction text in name component modal when value is recognized but not saved.\"\n  },\n  \"nameInstructionsSaved\": {\n    \"message\": \"You've added a nickname for this address before. You can edit or view other suggested nicknames.\",\n    \"description\": \"Instruction text in name component modal when value is saved.\"\n  },\n  \"nameLabel\": {\n    \"message\": \"Nickname\",\n    \"description\": \"Label above name input field in name component modal.\"\n  },\n  \"nameModalMaybeProposedName\": {\n    \"message\": \"Maybe: $1\",\n    \"description\": \"$1 is the proposed name\"\n  },\n  \"nameModalTitleNew\": {\n    \"message\": \"Unknown address\",\n    \"description\": \"Title of the modal created by the name component when value is not recognised.\"\n  },\n  \"nameModalTitleRecognized\": {\n    \"message\": \"Recognized address\",\n    \"description\": \"Title of the modal created by the name component when value is recognized but not saved.\"\n  },\n  \"nameModalTitleSaved\": {\n    \"message\": \"Saved address\",\n    \"description\": \"Title of the modal created by the name component when value is saved.\"\n  },\n  \"nameProviderProposedBy\": {\n    \"message\": \"Proposed by $1\",\n    \"description\": \"$1 is the name of the provider\"\n  },\n  \"nameProvider_ens\": {\n    \"message\": \"Ethereum Name Service (ENS)\"\n  },\n  \"nameProvider_etherscan\": {\n    \"message\": \"Etherscan\"\n  },\n  \"nameProvider_lens\": {\n    \"message\": \"Lens Protocol\"\n  },\n  \"nameProvider_token\": {\n    \"message\": \"MetaMask\"\n  },\n  \"nameSetPlaceholder\": {\n    \"message\": \"Choose a nickname...\",\n    \"description\": \"Placeholder text for name input field in name component modal.\"\n  },\n  \"nativeNetworkPermissionRequestDescription\": {\n    \"message\": \"$1 is asking for your approval to:\",\n    \"description\": \"$1 represents dapp name\"\n  },\n  \"nativePermissionRequestDescription\": {\n    \"message\": \"Do you want this site to do the following?\",\n    \"description\": \"Description below header used on Permission Connect screen for native permissions.\"\n  },\n  \"nativeToken\": {\n    \"message\": \"The native token on this network is $1. It is the token used for gas fees. \",\n    \"description\": \"$1 represents the name of the native token on the current network\"\n  },\n  \"nativeTokenScamWarningConversion\": {\n    \"message\": \"Edit network details\"\n  },\n  \"nativeTokenScamWarningDescription\": {\n    \"message\": \"This network doesn't match its associated chain ID or name. Many popular tokens use the name $1, making it a target for scams. Scammers may trick you into sending them more valuable currency in return. Verify everything before you continue.\",\n    \"description\": \"$1 represents the currency name\"\n  },\n  \"nativeTokenScamWarningTitle\": {\n    \"message\": \"This is a potential scam\"\n  },\n  \"needHelp\": {\n    \"message\": \"Need help? Contact $1\",\n    \"description\": \"$1 represents `needHelpLinkText`, the text which goes in the help link\"\n  },\n  \"needHelpFeedback\": {\n    \"message\": \"Share your feedback\"\n  },\n  \"needHelpLinkText\": {\n    \"message\": \"MetaMask support\"\n  },\n  \"needHelpSubmitTicket\": {\n    \"message\": \"Submit a ticket\"\n  },\n  \"needImportFile\": {\n    \"message\": \"You must select a file to import.\",\n    \"description\": \"User is important an account and needs to add a file to continue\"\n  },\n  \"negativeETH\": {\n    \"message\": \"Can not send negative amounts of ETH.\"\n  },\n  \"negativeOrZeroAmountToken\": {\n    \"message\": \"Cannot send negative or zero amounts of asset.\"\n  },\n  \"network\": {\n    \"message\": \"Network:\"\n  },\n  \"networkDetails\": {\n    \"message\": \"Network details\"\n  },\n  \"networkFee\": {\n    \"message\": \"Network fee\"\n  },\n  \"networkIsBusy\": {\n    \"message\": \"Network is busy. Gas prices are high and estimates are less accurate.\"\n  },\n  \"networkMenu\": {\n    \"message\": \"Network Menu\"\n  },\n  \"networkMenuHeading\": {\n    \"message\": \"Select a network\"\n  },\n  \"networkName\": {\n    \"message\": \"Network name\"\n  },\n  \"networkNameArbitrum\": {\n    \"message\": \"Arbitrum\"\n  },\n  \"networkNameAvalanche\": {\n    \"message\": \"Avalanche\"\n  },\n  \"networkNameBSC\": {\n    \"message\": \"BSC\"\n  },\n  \"networkNameBase\": {\n    \"message\": \"Base\"\n  },\n  \"networkNameBitcoin\": {\n    \"message\": \"Bitcoin\"\n  },\n  \"networkNameDefinition\": {\n    \"message\": \"The name associated with this network.\"\n  },\n  \"networkNameEthereum\": {\n    \"message\": \"Ethereum\"\n  },\n  \"networkNameGoerli\": {\n    \"message\": \"Goerli\"\n  },\n  \"networkNameLinea\": {\n    \"message\": \"Linea\"\n  },\n  \"networkNameOpMainnet\": {\n    \"message\": \"OP Mainnet\"\n  },\n  \"networkNamePolygon\": {\n    \"message\": \"Polygon\"\n  },\n  \"networkNameTestnet\": {\n    \"message\": \"Testnet\"\n  },\n  \"networkNameZkSyncEra\": {\n    \"message\": \"zkSync Era\"\n  },\n  \"networkOptions\": {\n    \"message\": \"Network options\"\n  },\n  \"networkProvider\": {\n    \"message\": \"Network provider\"\n  },\n  \"networkStatus\": {\n    \"message\": \"Network status\"\n  },\n  \"networkStatusBaseFeeTooltip\": {\n    \"message\": \"The base fee is set by the network and changes every 13-14 seconds. Our $1 and $2 options account for sudden increases.\",\n    \"description\": \"$1 and $2 are bold text for Medium and Aggressive respectively.\"\n  },\n  \"networkStatusPriorityFeeTooltip\": {\n    \"message\": \"Range of priority fees (aka “miner tip”). This goes to miners and incentivizes them to prioritize your transaction.\"\n  },\n  \"networkStatusStabilityFeeTooltip\": {\n    \"message\": \"Gas fees are $1 relative to the past 72 hours.\",\n    \"description\": \"$1 is networks stability value - stable, low, high\"\n  },\n  \"networkSwitchConnectionError\": {\n    \"message\": \"We can't connect to $1\",\n    \"description\": \"$1 represents the network name\"\n  },\n  \"networkSwitchMessage\": {\n    \"message\": \"Network switched to $1\",\n    \"description\": \"$1 represents the network name\"\n  },\n  \"networkURL\": {\n    \"message\": \"Network URL\"\n  },\n  \"networkURLDefinition\": {\n    \"message\": \"The URL used to access this network.\"\n  },\n  \"networkUrlErrorWarning\": {\n    \"message\": \"Attackers sometimes mimic sites by making small changes to the site address. Make sure you're interacting with the intended site before you continue. Punycode version: $1\",\n    \"description\": \"$1 replaced by RPC URL for network\"\n  },\n  \"networks\": {\n    \"message\": \"Networks\"\n  },\n  \"nevermind\": {\n    \"message\": \"Nevermind\"\n  },\n  \"new\": {\n    \"message\": \"New!\"\n  },\n  \"newAccount\": {\n    \"message\": \"New account\"\n  },\n  \"newAccountNumberName\": {\n    \"message\": \"Account $1\",\n    \"description\": \"Default name of next account to be created on create account screen\"\n  },\n  \"newContact\": {\n    \"message\": \"New contact\"\n  },\n  \"newContract\": {\n    \"message\": \"New contract\"\n  },\n  \"newNFTDetectedInImportNFTsMessageStrongText\": {\n    \"message\": \"Settings > Security and privacy\"\n  },\n  \"newNFTDetectedInImportNFTsMsg\": {\n    \"message\": \"To use Opensea to see your NFTs, turn on 'Display NFT Media' in $1.\",\n    \"description\": \"$1 is used for newNFTDetectedInImportNFTsMessageStrongText\"\n  },\n  \"newNFTDetectedInNFTsTabMessage\": {\n    \"message\": \"Let MetaMask automatically detect and display NFTs in your wallet.\"\n  },\n  \"newNFTsAutodetected\": {\n    \"message\": \"NFT autodetection\"\n  },\n  \"newNetworkAdded\": {\n    \"message\": \"“$1” was successfully added!\"\n  },\n  \"newNetworkEdited\": {\n    \"message\": \"“$1” was successfully edited!\"\n  },\n  \"newNftAddedMessage\": {\n    \"message\": \"NFT was successfully added!\"\n  },\n  \"newPassword\": {\n    \"message\": \"New password (8 characters min)\"\n  },\n  \"newPrivacyPolicyActionButton\": {\n    \"message\": \"Read more\"\n  },\n  \"newPrivacyPolicyTitle\": {\n    \"message\": \"We’ve updated our privacy policy\"\n  },\n  \"newRpcUrl\": {\n    \"message\": \"New RPC URL\"\n  },\n  \"newTokensImportedMessage\": {\n    \"message\": \"You’ve successfully imported $1.\",\n    \"description\": \"$1 is the string of symbols of all the tokens imported\"\n  },\n  \"newTokensImportedTitle\": {\n    \"message\": \"Token imported\"\n  },\n  \"next\": {\n    \"message\": \"Next\"\n  },\n  \"nextNonceWarning\": {\n    \"message\": \"Nonce is higher than suggested nonce of $1\",\n    \"description\": \"The next nonce according to MetaMask's internal logic\"\n  },\n  \"nftAddFailedMessage\": {\n    \"message\": \"NFT can’t be added as the ownership details do not match. Make sure you have entered correct information.\"\n  },\n  \"nftAddressError\": {\n    \"message\": \"This token is an NFT. Add on the $1\",\n    \"description\": \"$1 is a clickable link with text defined by the 'importNFTPage' key\"\n  },\n  \"nftAlreadyAdded\": {\n    \"message\": \"NFT has already been added.\"\n  },\n  \"nftAutoDetectionEnabled\": {\n    \"message\": \"NFT autodetection enabled\"\n  },\n  \"nftDisclaimer\": {\n    \"message\": \"Disclaimer: MetaMask pulls the media file from the source url. This url sometimes gets changed by the marketplace on which the NFT was minted.\"\n  },\n  \"nftOptions\": {\n    \"message\": \"NFT Options\"\n  },\n  \"nftTokenIdPlaceholder\": {\n    \"message\": \"Enter the token id\"\n  },\n  \"nftWarningContent\": {\n    \"message\": \"You're granting access to $1, including any you might own in the future. The party on the other end can transfer these NFTs from your wallet at any time without asking you until you revoke this approval. $2\",\n    \"description\": \"$1 is nftWarningContentBold bold part, $2 is Learn more link\"\n  },\n  \"nftWarningContentBold\": {\n    \"message\": \"all your $1 NFTs\",\n    \"description\": \"$1 is name of the collection\"\n  },\n  \"nftWarningContentGrey\": {\n    \"message\": \"Proceed with caution.\"\n  },\n  \"nfts\": {\n    \"message\": \"NFTs\"\n  },\n  \"nftsPreviouslyOwned\": {\n    \"message\": \"Previously Owned\"\n  },\n  \"nickname\": {\n    \"message\": \"Nickname\"\n  },\n  \"noAccountsFound\": {\n    \"message\": \"No accounts found for the given search query\"\n  },\n  \"noConnectedAccountDescription\": {\n    \"message\": \"Select an account you want to use on this site to continue.\"\n  },\n  \"noConnectedAccountTitle\": {\n    \"message\": \"MetaMask isn’t connected to this site\"\n  },\n  \"noConversionDateAvailable\": {\n    \"message\": \"No currency conversion date available\"\n  },\n  \"noConversionRateAvailable\": {\n    \"message\": \"No conversion rate available\"\n  },\n  \"noDomainResolution\": {\n    \"message\": \"No resolution for domain provided.\"\n  },\n  \"noHardwareWalletOrSnapsSupport\": {\n    \"message\": \"Snaps, and most hardware wallets, will not work with your current browser version.\"\n  },\n  \"noNFTs\": {\n    \"message\": \"No NFTs yet\"\n  },\n  \"noNetworksFound\": {\n    \"message\": \"No networks found for the given search query\"\n  },\n  \"noSnaps\": {\n    \"message\": \"You don't have any snaps installed.\"\n  },\n  \"noThanks\": {\n    \"message\": \"No thanks\"\n  },\n  \"noTransactions\": {\n    \"message\": \"You have no transactions\"\n  },\n  \"noWebcamFound\": {\n    \"message\": \"Your computer's webcam was not found. Please try again.\"\n  },\n  \"noWebcamFoundTitle\": {\n    \"message\": \"Webcam not found\"\n  },\n  \"nonCustodialAccounts\": {\n    \"message\": \"MetaMask Institutional allows you to use non-custodial accounts, if you plan to use these accounts backup the Secret Recovery Phrase.\"\n  },\n  \"nonce\": {\n    \"message\": \"Nonce\"\n  },\n  \"nonceField\": {\n    \"message\": \"Customize transaction nonce\"\n  },\n  \"nonceFieldDesc\": {\n    \"message\": \"Turn this on to change the nonce (transaction number) when sending assets. This is an advanced feature, use cautiously.\"\n  },\n  \"nonceFieldHeading\": {\n    \"message\": \"Custom nonce\"\n  },\n  \"none\": {\n    \"message\": \"None\"\n  },\n  \"notBusy\": {\n    \"message\": \"Not busy\"\n  },\n  \"notCurrentAccount\": {\n    \"message\": \"Is this the correct account? It's different from the currently selected account in your wallet\"\n  },\n  \"notEnoughBalance\": {\n    \"message\": \"Insufficient balance\"\n  },\n  \"notEnoughGas\": {\n    \"message\": \"Not enough gas\"\n  },\n  \"note\": {\n    \"message\": \"Note\"\n  },\n  \"notePlaceholder\": {\n    \"message\": \"The approver will see this note when approving the transaction at the custodian.\"\n  },\n  \"notificationDetail\": {\n    \"message\": \"Details\"\n  },\n  \"notificationDetailBaseFee\": {\n    \"message\": \"Base fee (GWEI)\"\n  },\n  \"notificationDetailGasLimit\": {\n    \"message\": \"Gas limit (units)\"\n  },\n  \"notificationDetailGasUsed\": {\n    \"message\": \"Gas used (units)\"\n  },\n  \"notificationDetailMaxFee\": {\n    \"message\": \"Max fee per gas\"\n  },\n  \"notificationDetailNetwork\": {\n    \"message\": \"Network\"\n  },\n  \"notificationDetailNetworkFee\": {\n    \"message\": \"Network fee\"\n  },\n  \"notificationDetailPriorityFee\": {\n    \"message\": \"Priority fee (GWEI)\"\n  },\n  \"notificationItemCheckBlockExplorer\": {\n    \"message\": \"Check on the Block Explorer\"\n  },\n  \"notificationItemCollection\": {\n    \"message\": \"Collection\"\n  },\n  \"notificationItemConfirmed\": {\n    \"message\": \"Confirmed\"\n  },\n  \"notificationItemError\": {\n    \"message\": \"Unable to retrieve fees currently\"\n  },\n  \"notificationItemFrom\": {\n    \"message\": \"From\"\n  },\n  \"notificationItemLidoStakeReadyToBeWithdrawn\": {\n    \"message\": \"Withdrawal Ready\"\n  },\n  \"notificationItemLidoStakeReadyToBeWithdrawnMessage\": {\n    \"message\": \"You can now withdraw your unstaked $1\"\n  },\n  \"notificationItemLidoWithdrawalRequestedMessage\": {\n    \"message\": \"Your request to unstake $1 has been sent\"\n  },\n  \"notificationItemNFTReceivedFrom\": {\n    \"message\": \"Received NFT from\"\n  },\n  \"notificationItemNFTSentTo\": {\n    \"message\": \"Sent NFT to\"\n  },\n  \"notificationItemNetwork\": {\n    \"message\": \"Network\"\n  },\n  \"notificationItemRate\": {\n    \"message\": \"Rate (fee included)\"\n  },\n  \"notificationItemReceived\": {\n    \"message\": \"Received\"\n  },\n  \"notificationItemReceivedFrom\": {\n    \"message\": \"Received from\"\n  },\n  \"notificationItemSent\": {\n    \"message\": \"Sent\"\n  },\n  \"notificationItemSentTo\": {\n    \"message\": \"Sent to\"\n  },\n  \"notificationItemStakeCompleted\": {\n    \"message\": \"Stake completed\"\n  },\n  \"notificationItemStaked\": {\n    \"message\": \"Staked\"\n  },\n  \"notificationItemStakingProvider\": {\n    \"message\": \"Staking Provider\"\n  },\n  \"notificationItemStatus\": {\n    \"message\": \"Status\"\n  },\n  \"notificationItemSwapped\": {\n    \"message\": \"Swapped\"\n  },\n  \"notificationItemSwappedFor\": {\n    \"message\": \"for\"\n  },\n  \"notificationItemTo\": {\n    \"message\": \"To\"\n  },\n  \"notificationItemTransactionId\": {\n    \"message\": \"Transaction ID\"\n  },\n  \"notificationItemUnStakeCompleted\": {\n    \"message\": \"UnStaking complete\"\n  },\n  \"notificationItemUnStaked\": {\n    \"message\": \"Unstaked\"\n  },\n  \"notificationItemUnStakingRequested\": {\n    \"message\": \"Unstaking requested\"\n  },\n  \"notificationTransactionFailedMessage\": {\n    \"message\": \"Transaction $1 failed! $2\",\n    \"description\": \"Content of the browser notification that appears when a transaction fails\"\n  },\n  \"notificationTransactionFailedMessageMMI\": {\n    \"message\": \"Transaction failed! $1\",\n    \"description\": \"Content of the browser notification that appears when a transaction fails in MMI\"\n  },\n  \"notificationTransactionFailedTitle\": {\n    \"message\": \"Failed transaction\",\n    \"description\": \"Title of the browser notification that appears when a transaction fails\"\n  },\n  \"notificationTransactionSuccessMessage\": {\n    \"message\": \"Transaction $1 confirmed!\",\n    \"description\": \"Content of the browser notification that appears when a transaction is confirmed\"\n  },\n  \"notificationTransactionSuccessTitle\": {\n    \"message\": \"Confirmed transaction\",\n    \"description\": \"Title of the browser notification that appears when a transaction is confirmed\"\n  },\n  \"notificationTransactionSuccessView\": {\n    \"message\": \"View on $1\",\n    \"description\": \"Additional content in a notification that appears when a transaction is confirmed and has a block explorer URL.\"\n  },\n  \"notifications\": {\n    \"message\": \"Notifications\"\n  },\n  \"notificationsDropLedgerFirefoxDescription\": {\n    \"message\": \"Firefox no longer supports U2F, so Ledger won't work with MetaMask on Firefox. Try MetaMask on Google Chrome instead.\",\n    \"description\": \"Description of a notification in the 'See What's New' popup. Describes that ledger will not longer be supported for firefox users and they should use MetaMask on chrome for ledger support instead.\"\n  },\n  \"notificationsDropLedgerFirefoxTitle\": {\n    \"message\": \"Dropping Ledger Support for Firefox\",\n    \"description\": \"Title for a notification in the 'See What's New' popup. Tells firefox users that ledger support is being dropped.\"\n  },\n  \"notificationsFeatureToggle\": {\n    \"message\": \"Enable Wallet Notifications\",\n    \"description\": \"Experimental feature title\"\n  },\n  \"notificationsFeatureToggleDescription\": {\n    \"message\": \"This enables wallet notifications like send/receive funds or nfts and feature announcements.\",\n    \"description\": \"Description of the experimental notifications feature\"\n  },\n  \"notificationsMarkAllAsRead\": {\n    \"message\": \"Mark all as read\"\n  },\n  \"notificationsPageEmptyTitle\": {\n    \"message\": \"Nothing to see here\"\n  },\n  \"notificationsPageErrorContent\": {\n    \"message\": \"Please, try to visit this page again.\"\n  },\n  \"notificationsPageErrorTitle\": {\n    \"message\": \"There has been an error\"\n  },\n  \"notificationsPageNoNotificationsContent\": {\n    \"message\": \"You have not received any notifications yet.\"\n  },\n  \"notificationsSettingsBoxError\": {\n    \"message\": \"Something went wrong. Please try again.\"\n  },\n  \"notificationsSettingsPageAllowNotifications\": {\n    \"message\": \"Stay in the loop on what’s happening in your wallet with notifications. To use notifications, we use a profile to sync some settings across your devices. $1\"\n  },\n  \"notificationsSettingsPageAllowNotificationsLink\": {\n    \"message\": \"Learn how we protect your privacy while using this feature.\"\n  },\n  \"numberOfNewTokensDetectedPlural\": {\n    \"message\": \"$1 new tokens found in this account\",\n    \"description\": \"$1 is the number of new tokens detected\"\n  },\n  \"numberOfNewTokensDetectedSingular\": {\n    \"message\": \"1 new token found in this account\"\n  },\n  \"numberOfTokens\": {\n    \"message\": \"Number of tokens\"\n  },\n  \"ofTextNofM\": {\n    \"message\": \"of\"\n  },\n  \"off\": {\n    \"message\": \"Off\"\n  },\n  \"offlineForMaintenance\": {\n    \"message\": \"Offline for maintenance\"\n  },\n  \"ok\": {\n    \"message\": \"Ok\"\n  },\n  \"on\": {\n    \"message\": \"On\"\n  },\n  \"onboardedMetametricsAccept\": {\n    \"message\": \"I agree\"\n  },\n  \"onboardedMetametricsDisagree\": {\n    \"message\": \"No thanks\"\n  },\n  \"onboardedMetametricsKey1\": {\n    \"message\": \"Latest developments\"\n  },\n  \"onboardedMetametricsKey2\": {\n    \"message\": \"Product features\"\n  },\n  \"onboardedMetametricsKey3\": {\n    \"message\": \"Other relevant promotional materials\"\n  },\n  \"onboardedMetametricsLink\": {\n    \"message\": \"MetaMetrics\"\n  },\n  \"onboardedMetametricsParagraph1\": {\n    \"message\": \"In addition to $1, we'd like to use data to understand how you interact with marketing communications.\",\n    \"description\": \"$1 represents the 'onboardedMetametricsLink' locale string\"\n  },\n  \"onboardedMetametricsParagraph2\": {\n    \"message\": \"This helps us personalize what we share with you, like:\"\n  },\n  \"onboardedMetametricsParagraph3\": {\n    \"message\": \"Remember, we never sell the data you provide and you can opt out any time.\"\n  },\n  \"onboardedMetametricsTitle\": {\n    \"message\": \"Help us enhance your experience\"\n  },\n  \"onboardingAdvancedPrivacyIPFSDescription\": {\n    \"message\": \"The IPFS gateway makes it possible to access and view data hosted by third parties. You can add a custom IPFS gateway or continue using the default.\"\n  },\n  \"onboardingAdvancedPrivacyIPFSInvalid\": {\n    \"message\": \"Please enter a valid URL\"\n  },\n  \"onboardingAdvancedPrivacyIPFSTitle\": {\n    \"message\": \"Add custom IPFS Gateway\"\n  },\n  \"onboardingAdvancedPrivacyIPFSValid\": {\n    \"message\": \"IPFS gateway URL is valid\"\n  },\n  \"onboardingAdvancedPrivacyNetworkDescription\": {\n    \"message\": \"We use Infura as our remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. Read our $1 to learn more about how Infura handles data.\"\n  },\n  \"onboardingAdvancedPrivacyNetworkTitle\": {\n    \"message\": \"Choose your network\"\n  },\n  \"onboardingCreateWallet\": {\n    \"message\": \"Create a new wallet\"\n  },\n  \"onboardingImportWallet\": {\n    \"message\": \"Import an existing wallet\"\n  },\n  \"onboardingMetametricsAgree\": {\n    \"message\": \"I agree\"\n  },\n  \"onboardingMetametricsDescription\": {\n    \"message\": \"We’d like to gather basic usage and diagnostics data to improve MetaMask. Know that we never sell the data you provide here.\"\n  },\n  \"onboardingMetametricsDescription2\": {\n    \"message\": \"When we gather metrics, it will always be...\"\n  },\n  \"onboardingMetametricsInfuraTerms\": {\n    \"message\": \"We’ll let you know if we decide to use this data for other purposes. You can review our $1 for more information. Remember, you can go to settings and opt out at any time.\",\n    \"description\": \"$1 represents `onboardingMetametricsInfuraTermsPolicy`\"\n  },\n  \"onboardingMetametricsInfuraTermsPolicy\": {\n    \"message\": \"Privacy Policy\"\n  },\n  \"onboardingMetametricsNeverCollect\": {\n    \"message\": \"$1 clicks and views on the app are stored, but other details (like your public address) are not.\",\n    \"description\": \"$1 represents `onboardingMetametricsNeverCollectEmphasis`\"\n  },\n  \"onboardingMetametricsNeverCollectEmphasis\": {\n    \"message\": \"Private:\"\n  },\n  \"onboardingMetametricsNeverCollectIP\": {\n    \"message\": \"$1 we temporarily use your IP address to detect a general location (like your country or region), but it's never stored.\",\n    \"description\": \"$1 represents `onboardingMetametricsNeverCollectIPEmphasis`\"\n  },\n  \"onboardingMetametricsNeverCollectIPEmphasis\": {\n    \"message\": \"General:\"\n  },\n  \"onboardingMetametricsNeverSellData\": {\n    \"message\": \"$1 you decide if you want to share or delete your usage data via settings any time.\",\n    \"description\": \"$1 represents `onboardingMetametricsNeverSellDataEmphasis`\"\n  },\n  \"onboardingMetametricsNeverSellDataEmphasis\": {\n    \"message\": \"Optional:\"\n  },\n  \"onboardingMetametricsPrivacyDescription\": {\n    \"message\": \"Learn how we protect your privacy while collecting usage data for your profile.\"\n  },\n  \"onboardingMetametricsTitle\": {\n    \"message\": \"Help us improve MetaMask\"\n  },\n  \"onboardingMetametricsUseDataCheckbox\": {\n    \"message\": \"We’ll use this data to learn how you interact with our marketing communications. We may share relevant news (like product features).\"\n  },\n  \"onboardingPinExtensionBillboardAccess\": {\n    \"message\": \"Full access\"\n  },\n  \"onboardingPinExtensionBillboardDescription\": {\n    \"message\": \"These extensions can see and change information\"\n  },\n  \"onboardingPinExtensionBillboardDescription2\": {\n    \"message\": \"on this site.\"\n  },\n  \"onboardingPinExtensionBillboardTitle\": {\n    \"message\": \"Extensions\"\n  },\n  \"onboardingPinExtensionChrome\": {\n    \"message\": \"Click the browser extension icon\"\n  },\n  \"onboardingPinExtensionDescription\": {\n    \"message\": \"Pin MetaMask on your browser so it's accessible and easy to view transaction confirmations.\"\n  },\n  \"onboardingPinExtensionDescription2\": {\n    \"message\": \"You can open MetaMask by clicking on the extension and access your wallet with 1 click.\"\n  },\n  \"onboardingPinExtensionDescription3\": {\n    \"message\": \"Click browser extension icon to access it instantly\"\n  },\n  \"onboardingPinExtensionLabel\": {\n    \"message\": \"Pin MetaMask\"\n  },\n  \"onboardingPinExtensionStep1\": {\n    \"message\": \"1\"\n  },\n  \"onboardingPinExtensionStep2\": {\n    \"message\": \"2\"\n  },\n  \"onboardingPinExtensionTitle\": {\n    \"message\": \"Your MetaMask install is complete!\"\n  },\n  \"onboardingPinMmiExtensionLabel\": {\n    \"message\": \"Pin MetaMask Institutional\"\n  },\n  \"onboardingUsePhishingDetectionDescription\": {\n    \"message\": \"Phishing detection alerts rely on communication with $1. jsDeliver will have access to your IP address. View $2.\",\n    \"description\": \"The $1 is the word 'jsDeliver', from key 'jsDeliver' and $2 is the words Privacy Policy from key 'privacyMsg', both separated here so that it can be wrapped as a link\"\n  },\n  \"oneDayAbbreviation\": {\n    \"message\": \"1D\",\n    \"description\": \"Shortened form of '1 day'\"\n  },\n  \"oneMonthAbbreviation\": {\n    \"message\": \"1M\",\n    \"description\": \"Shortened form of '1 month'\"\n  },\n  \"oneWeekAbbreviation\": {\n    \"message\": \"1W\",\n    \"description\": \"Shortened form of '1 week'\"\n  },\n  \"oneYearAbbreviation\": {\n    \"message\": \"1Y\",\n    \"description\": \"Shortened form of '1 year'\"\n  },\n  \"onekey\": {\n    \"message\": \"OneKey\"\n  },\n  \"onlyConnectTrust\": {\n    \"message\": \"Only connect with sites you trust. $1\",\n    \"description\": \"Text displayed above the buttons for connection confirmation. $1 is the link to the learn more web page.\"\n  },\n  \"openCustodianApp\": {\n    \"message\": \"Open $1 app\",\n    \"description\": \"The $1 is the name of the Custodian that will be open\"\n  },\n  \"openFullScreenForLedgerWebHid\": {\n    \"message\": \"Go to full screen to connect your Ledger.\",\n    \"description\": \"Shown to the user on the confirm screen when they are viewing MetaMask in a popup window but need to connect their ledger via webhid.\"\n  },\n  \"openInBlockExplorer\": {\n    \"message\": \"Open in block explorer\"\n  },\n  \"openSeaNew\": {\n    \"message\": \"OpenSea\"\n  },\n  \"operationFailed\": {\n    \"message\": \"Operation Failed\"\n  },\n  \"optional\": {\n    \"message\": \"Optional\"\n  },\n  \"options\": {\n    \"message\": \"Options\"\n  },\n  \"or\": {\n    \"message\": \"or\"\n  },\n  \"origin\": {\n    \"message\": \"Origin\"\n  },\n  \"osTheme\": {\n    \"message\": \"System\"\n  },\n  \"otherSnaps\": {\n    \"message\": \"other snaps\",\n    \"description\": \"Used in the 'permission_rpc' message.\"\n  },\n  \"outdatedBrowserNotification\": {\n    \"message\": \"Your browser is out of date. If you don't update your browser, you won't be able to get security patches and new features from MetaMask.\"\n  },\n  \"padlock\": {\n    \"message\": \"Padlock\"\n  },\n  \"parameters\": {\n    \"message\": \"Parameters\"\n  },\n  \"participateInMetaMetrics\": {\n    \"message\": \"Participate in MetaMetrics\"\n  },\n  \"participateInMetaMetricsDescription\": {\n    \"message\": \"Participate in MetaMetrics to help us make MetaMask better\"\n  },\n  \"password\": {\n    \"message\": \"Password\"\n  },\n  \"passwordMmiTermsWarning\": {\n    \"message\": \"I understand that MetaMask Institutional cannot recover this password for me. $1\"\n  },\n  \"passwordNotLongEnough\": {\n    \"message\": \"Password not long enough\"\n  },\n  \"passwordSetupDetails\": {\n    \"message\": \"This password will unlock your MetaMask wallet only on this device. MetaMask can not recover this password.\"\n  },\n  \"passwordStrength\": {\n    \"message\": \"Password strength: $1\",\n    \"description\": \"Return password strength to the user when user wants to create password.\"\n  },\n  \"passwordStrengthDescription\": {\n    \"message\": \"A strong password can improve the security of your wallet should your device be stolen or compromised.\"\n  },\n  \"passwordTermsWarning\": {\n    \"message\": \"I understand that MetaMask cannot recover this password for me. $1\"\n  },\n  \"passwordsDontMatch\": {\n    \"message\": \"Passwords don't match\"\n  },\n  \"pasteJWTToken\": {\n    \"message\": \"Paste or drop your token here:\"\n  },\n  \"pastePrivateKey\": {\n    \"message\": \"Enter your private key string here:\",\n    \"description\": \"For importing an account from a private key\"\n  },\n  \"paymasterInUse\": {\n    \"message\": \"The gas for this transaction will be paid by a paymaster.\",\n    \"description\": \"Alert shown in transaction confirmation if paymaster in use.\"\n  },\n  \"pending\": {\n    \"message\": \"Pending\"\n  },\n  \"pendingTransactionInfo\": {\n    \"message\": \"This transaction will not process until that one is complete.\"\n  },\n  \"pendingTransactionMultiple\": {\n    \"message\": \"You have ($1) pending transactions.\"\n  },\n  \"pendingTransactionSingle\": {\n    \"message\": \"You have (1) pending transaction.\",\n    \"description\": \"$1 is count of pending transactions\"\n  },\n  \"permissionDetails\": {\n    \"message\": \"Permission details\"\n  },\n  \"permissionRequest\": {\n    \"message\": \"Permission request\"\n  },\n  \"permissionRequested\": {\n    \"message\": \"Requested now\"\n  },\n  \"permissionRequestedForAccounts\": {\n    \"message\": \"Requested now for $1\",\n    \"description\": \"Permission cell status for requested permission including accounts, rendered as AvatarGroup which is $1.\"\n  },\n  \"permissionRevoked\": {\n    \"message\": \"Revoked in this update\"\n  },\n  \"permissionRevokedForAccounts\": {\n    \"message\": \"Revoked in this update for $1\",\n    \"description\": \"Permission cell status for revoked permission including accounts, rendered as AvatarGroup which is $1.\"\n  },\n  \"permission_accessNamedSnap\": {\n    \"message\": \"Connect to $1.\",\n    \"description\": \"The description for the `wallet_snap` permission. $1 is the human-readable name of the snap.\"\n  },\n  \"permission_accessNetwork\": {\n    \"message\": \"Access the internet.\",\n    \"description\": \"The description of the `endowment:network-access` permission.\"\n  },\n  \"permission_accessNetworkDescription\": {\n    \"message\": \"Allow $1 to access the internet. This can be used to both send and receive data with third-party servers.\",\n    \"description\": \"An extended description of the `endowment:network-access` permission. $1 is the snap name.\"\n  },\n  \"permission_accessSnap\": {\n    \"message\": \"Connect to the $1 snap.\",\n    \"description\": \"The description for the `wallet_snap` permission. $1 is the name of the snap.\"\n  },\n  \"permission_accessSnapDescription\": {\n    \"message\": \"Allow the website or snap to interact with $1.\",\n    \"description\": \"The description for the `wallet_snap_*` permission. $1 is the name of the Snap.\"\n  },\n  \"permission_cronjob\": {\n    \"message\": \"Schedule and execute periodic actions.\",\n    \"description\": \"The description for the `snap_cronjob` permission\"\n  },\n  \"permission_cronjobDescription\": {\n    \"message\": \"Allow $1 to perform actions that run periodically at fixed times, dates, or intervals. This can be used to trigger time-sensitive interactions or notifications.\",\n    \"description\": \"An extended description for the `snap_cronjob` permission. $1 is the snap name.\"\n  },\n  \"permission_dialog\": {\n    \"message\": \"Display dialog windows in MetaMask.\",\n    \"description\": \"The description for the `snap_dialog` permission\"\n  },\n  \"permission_dialogDescription\": {\n    \"message\": \"Allow $1 to display MetaMask popups with custom text, input field, and buttons to approve or reject an action.\\nCan be used to create e.g. alerts, confirmations, and opt-in flows for a snap.\",\n    \"description\": \"An extended description for the `snap_dialog` permission. $1 is the snap name.\"\n  },\n  \"permission_ethereumAccounts\": {\n    \"message\": \"See address, account balance, activity and suggest transactions to approve\",\n    \"description\": \"The description for the `eth_accounts` permission\"\n  },\n  \"permission_ethereumProvider\": {\n    \"message\": \"Access the Ethereum provider.\",\n    \"description\": \"The description for the `endowment:ethereum-provider` permission\"\n  },\n  \"permission_ethereumProviderDescription\": {\n    \"message\": \"Allow $1 to communicate with MetaMask directly, in order for it to read data from the blockchain and suggest messages and transactions.\",\n    \"description\": \"An extended description for the `endowment:ethereum-provider` permission. $1 is the snap name.\"\n  },\n  \"permission_getEntropy\": {\n    \"message\": \"Derive arbitrary keys unique to $1.\",\n    \"description\": \"The description for the `snap_getEntropy` permission. $1 is the snap name.\"\n  },\n  \"permission_getEntropyDescription\": {\n    \"message\": \"Allow $1 to derive arbitrary keys unique to $1, without exposing them. These keys are separate from your MetaMask account(s) and not related to your private keys or Secret Recovery Phrase. Other snaps cannot access this information.\",\n    \"description\": \"An extended description for the `snap_getEntropy` permission. $1 is the snap name.\"\n  },\n  \"permission_getLocale\": {\n    \"message\": \"View your preferred language.\",\n    \"description\": \"The description for the `snap_getLocale` permission\"\n  },\n  \"permission_getLocaleDescription\": {\n    \"message\": \"Let $1 access your preferred language from your MetaMask settings. This can be used to localize and display $1's content using your language.\",\n    \"description\": \"An extended description for the `snap_getLocale` permission. $1 is the snap name.\"\n  },\n  \"permission_getPreferences\": {\n    \"message\": \"See information like your preferred language and fiat currency.\",\n    \"description\": \"The description for the `snap_getPreferences` permission\"\n  },\n  \"permission_getPreferencesDescription\": {\n    \"message\": \"Let $1 access information like your preferred language and fiat currency in your MetaMask settings. This helps $1 display content tailored to your preferences. \",\n    \"description\": \"An extended description for the `snap_getPreferences` permission. $1 is the snap name.\"\n  },\n  \"permission_homePage\": {\n    \"message\": \"Display a custom screen\",\n    \"description\": \"The description for the `endowment:page-home` permission\"\n  },\n  \"permission_homePageDescription\": {\n    \"message\": \"Let $1 display a custom home screen in MetaMask. This can be used for user interfaces, configuration, and dashboards.\",\n    \"description\": \"An extended description for the `endowment:page-home` permission. $1 is the snap name.\"\n  },\n  \"permission_keyring\": {\n    \"message\": \"Allow requests for adding and controlling Ethereum accounts\",\n    \"description\": \"The description for the `endowment:keyring` permission\"\n  },\n  \"permission_keyringDescription\": {\n    \"message\": \"Let $1 receive requests to add or remove accounts, plus sign and transact on behalf of these accounts.\",\n    \"description\": \"An extended description for the `endowment:keyring` permission. $1 is the snap name.\"\n  },\n  \"permission_lifecycleHooks\": {\n    \"message\": \"Use lifecycle hooks.\",\n    \"description\": \"The description for the `endowment:lifecycle-hooks` permission\"\n  },\n  \"permission_lifecycleHooksDescription\": {\n    \"message\": \"Allow $1 to use lifecycle hooks to run code at specific times during its lifecycle.\",\n    \"description\": \"An extended description for the `endowment:lifecycle-hooks` permission. $1 is the snap name.\"\n  },\n  \"permission_manageAccounts\": {\n    \"message\": \"Add and control Ethereum accounts\",\n    \"description\": \"The description for `snap_manageAccounts` permission\"\n  },\n  \"permission_manageAccountsDescription\": {\n    \"message\": \"Allow $1 to add or remove Ethereum accounts, then transact and sign with these accounts.\",\n    \"description\": \"An extended description for the `snap_manageAccounts` permission. $1 is the snap name.\"\n  },\n  \"permission_manageBip32Keys\": {\n    \"message\": \"Manage $1 accounts.\",\n    \"description\": \"The description for the `snap_getBip32Entropy` permission. $1 is a derivation path, e.g. 'm/44'/0'/0' (secp256k1)'.\"\n  },\n  \"permission_manageBip44AndBip32KeysDescription\": {\n    \"message\": \"Allow $1 to manage accounts and assets on the requested network. These accounts are derived and backed up using your secret recovery phrase (without revealing it). With the power to derive keys, $1 can support a variety of blockchain protocols beyond Ethereum (EVMs).\",\n    \"description\": \"An extended description for the `snap_getBip44Entropy` and `snap_getBip44Entropy` permissions. $1 is the snap name.\"\n  },\n  \"permission_manageBip44Keys\": {\n    \"message\": \"Manage $1 accounts.\",\n    \"description\": \"The description for the `snap_getBip44Entropy` permission. $1 is the name of a protocol, e.g. 'Filecoin'.\"\n  },\n  \"permission_manageState\": {\n    \"message\": \"Store and manage its data on your device.\",\n    \"description\": \"The description for the `snap_manageState` permission\"\n  },\n  \"permission_manageStateDescription\": {\n    \"message\": \"Allow $1 to store, update, and retrieve data securely with encryption. Other snaps cannot access this information.\",\n    \"description\": \"An extended description for the `snap_manageState` permission. $1 is the snap name.\"\n  },\n  \"permission_nameLookup\": {\n    \"message\": \"Provide domain and address lookups.\",\n    \"description\": \"The description for the `endowment:name-lookup` permission.\"\n  },\n  \"permission_nameLookupDescription\": {\n    \"message\": \"Allow the snap to fetch and display address and domain lookups in different parts of the MetaMask UI.\",\n    \"description\": \"An extended description for the `endowment:name-lookup` permission.\"\n  },\n  \"permission_notifications\": {\n    \"message\": \"Show notifications.\",\n    \"description\": \"The description for the `snap_notify` permission\"\n  },\n  \"permission_notificationsDescription\": {\n    \"message\": \"Allow $1 to display notifications within MetaMask. A short notification text can be triggered by a snap for actionable or time-sensitive information.\",\n    \"description\": \"An extended description for the `snap_notify` permission. $1 is the snap name.\"\n  },\n  \"permission_rpc\": {\n    \"message\": \"Allow $1 to communicate directly with $2.\",\n    \"description\": \"The description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites', $2 is the snap name.\"\n  },\n  \"permission_rpcDescription\": {\n    \"message\": \"Allow $1 to send messages to $2 and receive a response from $2.\",\n    \"description\": \"An extended description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites', $2 is the snap name.\"\n  },\n  \"permission_rpcDescriptionOriginList\": {\n    \"message\": \"$1 and $2\",\n    \"description\": \"A list of allowed origins where $2 is the last origin of the list and $1 is the rest of the list separated by ','.\"\n  },\n  \"permission_signatureInsight\": {\n    \"message\": \"Display signature insights modal.\",\n    \"description\": \"The description for the `endowment:signature-insight` permission\"\n  },\n  \"permission_signatureInsightDescription\": {\n    \"message\": \"Allow $1 to display a modal with insights on any signature request before approval. This can be used for anti-phishing and security solutions.\",\n    \"description\": \"An extended description for the `endowment:signature-insight` permission. $1 is the snap name.\"\n  },\n  \"permission_signatureInsightOrigin\": {\n    \"message\": \"See the origins of websites that initiate a signature request\",\n    \"description\": \"The description for the `signatureOrigin` caveat, to be used with the `endowment:signature-insight` permission\"\n  },\n  \"permission_signatureInsightOriginDescription\": {\n    \"message\": \"Allow $1 to see the origin (URI) of websites that initiate signature requests. This can be used for anti-phishing and security solutions.\",\n    \"description\": \"An extended description for the `signatureOrigin` caveat, to be used with the `endowment:signature-insight` permission. $1 is the snap name.\"\n  },\n  \"permission_transactionInsight\": {\n    \"message\": \"Fetch and display transaction insights.\",\n    \"description\": \"The description for the `endowment:transaction-insight` permission\"\n  },\n  \"permission_transactionInsightDescription\": {\n    \"message\": \"Allow $1 to decode transactions and show insights within the MetaMask UI. This can be used for anti-phishing and security solutions.\",\n    \"description\": \"An extended description for the `endowment:transaction-insight` permission. $1 is the snap name.\"\n  },\n  \"permission_transactionInsightOrigin\": {\n    \"message\": \"See the origins of websites that suggest transactions\",\n    \"description\": \"The description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission\"\n  },\n  \"permission_transactionInsightOriginDescription\": {\n    \"message\": \"Allow $1 to see the origin (URI) of websites that suggest transactions. This can be used for anti-phishing and security solutions.\",\n    \"description\": \"An extended description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission. $1 is the snap name.\"\n  },\n  \"permission_unknown\": {\n    \"message\": \"Unknown permission: $1\",\n    \"description\": \"$1 is the name of a requested permission that is not recognized.\"\n  },\n  \"permission_viewBip32PublicKeys\": {\n    \"message\": \"View your public key for $1 ($2).\",\n    \"description\": \"The description for the `snap_getBip32PublicKey` permission. $1 is a derivation path, e.g. 'm/44'/0'/0''. $2 is the elliptic curve name, e.g. 'secp256k1'.\"\n  },\n  \"permission_viewBip32PublicKeysDescription\": {\n    \"message\": \"Allow $2 to view your public keys (and addresses) for $1. This does not grant any control of accounts or assets.\",\n    \"description\": \"An extended description for the `snap_getBip32PublicKey` permission. $1 is a derivation path (name). $2 is the snap name.\"\n  },\n  \"permission_viewNamedBip32PublicKeys\": {\n    \"message\": \"View your public key for $1.\",\n    \"description\": \"The description for the `snap_getBip32PublicKey` permission. $1 is a name for the derivation path, e.g., 'Ethereum accounts'.\"\n  },\n  \"permission_walletSwitchEthereumChain\": {\n    \"message\": \"Use your enabled networks\",\n    \"description\": \"The label for the `wallet_switchEthereumChain` permission\"\n  },\n  \"permission_webAssembly\": {\n    \"message\": \"Support for WebAssembly.\",\n    \"description\": \"The description of the `endowment:webassembly` permission.\"\n  },\n  \"permission_webAssemblyDescription\": {\n    \"message\": \"Allow $1 to access low-level execution environments via WebAssembly.\",\n    \"description\": \"An extended description of the `endowment:webassembly` permission. $1 is the snap name.\"\n  },\n  \"permissions\": {\n    \"message\": \"Permissions\"\n  },\n  \"permissionsPageEmptyContent\": {\n    \"message\": \"Nothing to see here\"\n  },\n  \"permissionsPageEmptySubContent\": {\n    \"message\": \"This is where you can see the permissions you've given to installed Snaps or connected sites.\"\n  },\n  \"permissionsPageTourDescription\": {\n    \"message\": \"This is your control panel for managing permissions given to connected sites and installed Snaps.\"\n  },\n  \"permissionsPageTourTitle\": {\n    \"message\": \"Connected sites are now permissions\"\n  },\n  \"permitSimulationDetailInfo\": {\n    \"message\": \"You're giving the spender permission to spend this many tokens from your account.\"\n  },\n  \"personalAddressDetected\": {\n    \"message\": \"Personal address detected. Input the token contract address.\"\n  },\n  \"petnamesEnabledToggle\": {\n    \"message\": \"Allow nicknames\"\n  },\n  \"petnamesEnabledToggleDescription\": {\n    \"message\": \"This lets you assign a nickname to any address. We’ll suggest names for addresses that you interact with when possible.\"\n  },\n  \"pinExtensionDescription\": {\n    \"message\": \"Navigate to the extension menu and pin MetaMask Institutional for seamless access.\"\n  },\n  \"pinExtensionTitle\": {\n    \"message\": \"Pin extension\"\n  },\n  \"pinToTop\": {\n    \"message\": \"Pin to top\"\n  },\n  \"pleaseConfirm\": {\n    \"message\": \"Please confirm\"\n  },\n  \"plusMore\": {\n    \"message\": \"+ $1 more\",\n    \"description\": \"$1 is the number of additional items\"\n  },\n  \"plusXMore\": {\n    \"message\": \"+ $1 more\",\n    \"description\": \"$1 is a number of additional but unshown items in a list- this message will be shown in place of those items\"\n  },\n  \"popularNetworkAddToolTip\": {\n    \"message\": \"Some of these networks rely on third parties. The connections may be less reliable or enable third-parties to track activity. $1\",\n    \"description\": \"$1 is Learn more link\"\n  },\n  \"portfolio\": {\n    \"message\": \"Portfolio\"\n  },\n  \"portfolioDashboard\": {\n    \"message\": \"Portfolio Dashboard\"\n  },\n  \"preparingSwap\": {\n    \"message\": \"Preparing swap...\"\n  },\n  \"prev\": {\n    \"message\": \"Prev\"\n  },\n  \"price\": {\n    \"message\": \"Price\"\n  },\n  \"priceUnavailable\": {\n    \"message\": \"price unavailable\"\n  },\n  \"primaryCurrencySetting\": {\n    \"message\": \"Primary currency\"\n  },\n  \"primaryCurrencySettingDescription\": {\n    \"message\": \"Select native to prioritize displaying values in the native currency of the chain (e.g. ETH). Select Fiat to prioritize displaying values in your selected fiat currency.\"\n  },\n  \"primaryType\": {\n    \"message\": \"Primary type\"\n  },\n  \"priorityFee\": {\n    \"message\": \"Priority fee\"\n  },\n  \"priorityFeeProperCase\": {\n    \"message\": \"Priority Fee\"\n  },\n  \"privacy\": {\n    \"message\": \"Privacy\"\n  },\n  \"privacyMsg\": {\n    \"message\": \"Privacy policy\"\n  },\n  \"privateKey\": {\n    \"message\": \"Private Key\",\n    \"description\": \"select this type of file to use to import an account\"\n  },\n  \"privateKeyCopyWarning\": {\n    \"message\": \"Private key for $1\",\n    \"description\": \"$1 represents the account name\"\n  },\n  \"privateKeyHidden\": {\n    \"message\": \"The private key is hidden\",\n    \"description\": \"Explains that the private key input is hidden\"\n  },\n  \"privateKeyShow\": {\n    \"message\": \"Show/Hide the private key input\",\n    \"description\": \"Describes a toggle that is used to show or hide the private key input\"\n  },\n  \"privateKeyShown\": {\n    \"message\": \"This private key is being shown\",\n    \"description\": \"Explains that the private key input is being shown\"\n  },\n  \"privateKeyWarning\": {\n    \"message\": \"Warning: Never disclose this key. Anyone with your private keys can steal any assets held in your account.\"\n  },\n  \"privateNetwork\": {\n    \"message\": \"Private network\"\n  },\n  \"proceedWithTransaction\": {\n    \"message\": \"I want to proceed anyway\"\n  },\n  \"productAnnouncements\": {\n    \"message\": \"Product announcements\"\n  },\n  \"profileSync\": {\n    \"message\": \"Profile Sync\"\n  },\n  \"profileSyncConfirmation\": {\n    \"message\": \"If you turn off profile sync, you won’t be able to receive notifications.\"\n  },\n  \"profileSyncDescription\": {\n    \"message\": \"Creates a profile that MetaMask uses to sync some settings among your devices. This is required to get notifications. $1.\"\n  },\n  \"profileSyncPrivacyLink\": {\n    \"message\": \"Learn how we protect your privacy\"\n  },\n  \"proposedApprovalLimit\": {\n    \"message\": \"Proposed approval limit\"\n  },\n  \"provide\": {\n    \"message\": \"Provide\"\n  },\n  \"publicAddress\": {\n    \"message\": \"Public address\"\n  },\n  \"pushPlatformNotificationsFundsReceivedDescription\": {\n    \"message\": \"You received $1 $2\"\n  },\n  \"pushPlatformNotificationsFundsReceivedDescriptionDefault\": {\n    \"message\": \"You received some tokens\"\n  },\n  \"pushPlatformNotificationsFundsReceivedTitle\": {\n    \"message\": \"Funds received\"\n  },\n  \"pushPlatformNotificationsFundsSentDescription\": {\n    \"message\": \"You successfully sent $1 $2\"\n  },\n  \"pushPlatformNotificationsFundsSentDescriptionDefault\": {\n    \"message\": \"You successfully sent some tokens\"\n  },\n  \"pushPlatformNotificationsFundsSentTitle\": {\n    \"message\": \"Funds sent\"\n  },\n  \"pushPlatformNotificationsNftReceivedDescription\": {\n    \"message\": \"You received new NFTs\"\n  },\n  \"pushPlatformNotificationsNftReceivedTitle\": {\n    \"message\": \"NFT received\"\n  },\n  \"pushPlatformNotificationsNftSentDescription\": {\n    \"message\": \"You have successfully sent an NFT\"\n  },\n  \"pushPlatformNotificationsNftSentTitle\": {\n    \"message\": \"NFT sent\"\n  },\n  \"pushPlatformNotificationsStakingLidoStakeCompletedDescription\": {\n    \"message\": \"Your Lido stake was successful\"\n  },\n  \"pushPlatformNotificationsStakingLidoStakeCompletedTitle\": {\n    \"message\": \"Stake complete\"\n  },\n  \"pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnDescription\": {\n    \"message\": \"Your Lido stake is now ready to be withdrawn\"\n  },\n  \"pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnTitle\": {\n    \"message\": \"Stake ready for withdrawal\"\n  },\n  \"pushPlatformNotificationsStakingLidoWithdrawalCompletedDescription\": {\n    \"message\": \"Your Lido withdrawal was successful\"\n  },\n  \"pushPlatformNotificationsStakingLidoWithdrawalCompletedTitle\": {\n    \"message\": \"Withdrawal completed\"\n  },\n  \"pushPlatformNotificationsStakingLidoWithdrawalRequestedDescription\": {\n    \"message\": \"Your Lido withdrawal request was submitted\"\n  },\n  \"pushPlatformNotificationsStakingLidoWithdrawalRequestedTitle\": {\n    \"message\": \"Withdrawal requested\"\n  },\n  \"pushPlatformNotificationsStakingRocketpoolStakeCompletedDescription\": {\n    \"message\": \"Your RocketPool stake was successful\"\n  },\n  \"pushPlatformNotificationsStakingRocketpoolStakeCompletedTitle\": {\n    \"message\": \"Stake complete\"\n  },\n  \"pushPlatformNotificationsStakingRocketpoolUnstakeCompletedDescription\": {\n    \"message\": \"Your RocketPool unstake was successful\"\n  },\n  \"pushPlatformNotificationsStakingRocketpoolUnstakeCompletedTitle\": {\n    \"message\": \"Unstake complete\"\n  },\n  \"pushPlatformNotificationsSwapCompletedDescription\": {\n    \"message\": \"Your MetaMask Swap was successful\"\n  },\n  \"pushPlatformNotificationsSwapCompletedTitle\": {\n    \"message\": \"Swap completed\"\n  },\n  \"queued\": {\n    \"message\": \"Queued\"\n  },\n  \"quoteRate\": {\n    \"message\": \"Quote rate\"\n  },\n  \"rank\": {\n    \"message\": \"Rank\"\n  },\n  \"reAddAccounts\": {\n    \"message\": \"re-add any other accounts\"\n  },\n  \"reAdded\": {\n    \"message\": \"re-added\"\n  },\n  \"readdToken\": {\n    \"message\": \"You can add this token back in the future by going to “Import token” in your accounts options menu.\"\n  },\n  \"receive\": {\n    \"message\": \"Receive\"\n  },\n  \"receiveCrypto\": {\n    \"message\": \"Receive crypto\"\n  },\n  \"recipientAddressPlaceholderNew\": {\n    \"message\": \"Enter public address (0x) or domain name\"\n  },\n  \"recommendedGasLabel\": {\n    \"message\": \"Recommended\"\n  },\n  \"recoveryPhraseReminderBackupStart\": {\n    \"message\": \"Start here\"\n  },\n  \"recoveryPhraseReminderConfirm\": {\n    \"message\": \"Got it\"\n  },\n  \"recoveryPhraseReminderHasBackedUp\": {\n    \"message\": \"Always keep your Secret Recovery Phrase in a secure and secret place\"\n  },\n  \"recoveryPhraseReminderHasNotBackedUp\": {\n    \"message\": \"Need to backup your Secret Recovery Phrase again?\"\n  },\n  \"recoveryPhraseReminderItemOne\": {\n    \"message\": \"Never share your Secret Recovery Phrase with anyone\"\n  },\n  \"recoveryPhraseReminderItemTwo\": {\n    \"message\": \"The MetaMask team will never ask for your Secret Recovery Phrase\"\n  },\n  \"recoveryPhraseReminderSubText\": {\n    \"message\": \"Your Secret Recovery Phrase controls all of your accounts.\"\n  },\n  \"recoveryPhraseReminderTitle\": {\n    \"message\": \"Protect your funds\"\n  },\n  \"redesignedConfirmationsEnabledToggle\": {\n    \"message\": \"Improved signature requests\"\n  },\n  \"redesignedConfirmationsToggleDescription\": {\n    \"message\": \"Turn this on to see signature requests in an enhanced format.\"\n  },\n  \"redesignedTransactionsEnabledToggle\": {\n    \"message\": \"Improved transaction requests\"\n  },\n  \"redesignedTransactionsToggleDescription\": {\n    \"message\": \"Turn this on to see transactions requests in an enhanced format.\"\n  },\n  \"refreshList\": {\n    \"message\": \"Refresh list\"\n  },\n  \"reject\": {\n    \"message\": \"Reject\"\n  },\n  \"rejectAll\": {\n    \"message\": \"Reject all\"\n  },\n  \"rejectRequestsDescription\": {\n    \"message\": \"You are about to batch reject $1 requests.\"\n  },\n  \"rejectRequestsN\": {\n    \"message\": \"Reject $1 requests\"\n  },\n  \"rejectTxsDescription\": {\n    \"message\": \"You are about to batch reject $1 transactions.\"\n  },\n  \"rejectTxsN\": {\n    \"message\": \"Reject $1 transactions\"\n  },\n  \"rejected\": {\n    \"message\": \"Rejected\"\n  },\n  \"remember\": {\n    \"message\": \"Remember:\"\n  },\n  \"remove\": {\n    \"message\": \"Remove\"\n  },\n  \"removeAccount\": {\n    \"message\": \"Remove account\"\n  },\n  \"removeAccountDescription\": {\n    \"message\": \"This account will be removed from your wallet. Please make sure you have the original Secret Recovery Phrase or private key for this imported account before continuing. You can import or create accounts again from the account drop-down. \"\n  },\n  \"removeJWT\": {\n    \"message\": \"Remove custodian token\"\n  },\n  \"removeJWTDescription\": {\n    \"message\": \"Are you sure you want to remove this token? All accounts assigned to this token will be removed from extension as well: \"\n  },\n  \"removeKeyringSnap\": {\n    \"message\": \"Removing this Snap removes these accounts from MetaMask:\"\n  },\n  \"removeKeyringSnapToolTip\": {\n    \"message\": \"The snap controls the accounts, and by removing it, the accounts will be removed from MetaMask, too, but they will remain in the blockchain.\"\n  },\n  \"removeNFT\": {\n    \"message\": \"Remove NFT\"\n  },\n  \"removeNftErrorMessage\": {\n    \"message\": \"We could not remove this NFT.\"\n  },\n  \"removeNftMessage\": {\n    \"message\": \"NFT was successfully removed!\"\n  },\n  \"removeSnap\": {\n    \"message\": \"Remove Snap\"\n  },\n  \"removeSnapAccountDescription\": {\n    \"message\": \"If you proceed, this account will no longer be available in MetaMask.\"\n  },\n  \"removeSnapAccountTitle\": {\n    \"message\": \"Remove account\"\n  },\n  \"removeSnapConfirmation\": {\n    \"message\": \"Are you sure you want to remove $1?\",\n    \"description\": \"$1 represents the name of the snap\"\n  },\n  \"removeSnapDescription\": {\n    \"message\": \"This action will delete the snap, its data and revoke your given permissions.\"\n  },\n  \"replace\": {\n    \"message\": \"replace\"\n  },\n  \"reportIssue\": {\n    \"message\": \"Report an issue\"\n  },\n  \"requestFlaggedAsMaliciousFallbackCopyReason\": {\n    \"message\": \"The security provider has not shared additional details\"\n  },\n  \"requestFlaggedAsMaliciousFallbackCopyReasonTitle\": {\n    \"message\": \"Request flagged as malicious\"\n  },\n  \"requestFrom\": {\n    \"message\": \"Request from\"\n  },\n  \"requestFromInfo\": {\n    \"message\": \"This is the site asking for your signature.\"\n  },\n  \"requestFromTransactionDescription\": {\n    \"message\": \"This is the site asking for your confirmation.\"\n  },\n  \"requestMayNotBeSafe\": {\n    \"message\": \"Request may not be safe\"\n  },\n  \"requestMayNotBeSafeError\": {\n    \"message\": \"The security provider didn't detect any known malicious activity, but it still may not be safe to continue.\"\n  },\n  \"requestNotVerified\": {\n    \"message\": \"Request not verified\"\n  },\n  \"requestNotVerifiedError\": {\n    \"message\": \"Because of an error, this request was not verified by the security provider. Proceed with caution.\"\n  },\n  \"requestsAwaitingAcknowledgement\": {\n    \"message\": \"requests waiting to be acknowledged\"\n  },\n  \"required\": {\n    \"message\": \"Required\"\n  },\n  \"reset\": {\n    \"message\": \"Reset\"\n  },\n  \"resetWallet\": {\n    \"message\": \"Reset wallet\"\n  },\n  \"resetWalletSubHeader\": {\n    \"message\": \"MetaMask does not keep a copy of your password. If you’re having trouble unlocking your account, you will need to reset your wallet. You can do this by providing the Secret Recovery Phrase you used when you set up your wallet.\"\n  },\n  \"resetWalletUsingSRP\": {\n    \"message\": \"This action will delete your current wallet and Secret Recovery Phrase from this device, along with the list of accounts you’ve curated. After resetting with a Secret Recovery Phrase, you’ll see a list of accounts based on the Secret Recovery Phrase you use to reset. This new list will automatically include accounts that have a balance. You’ll also be able to $1 created previously. Custom accounts that you’ve imported will need to be $2, and any custom tokens you’ve added to an account will need to be $3 as well.\"\n  },\n  \"resetWalletWarning\": {\n    \"message\": \"Make sure you’re using the correct Secret Recovery Phrase before proceeding. You will not be able to undo this.\"\n  },\n  \"restartMetamask\": {\n    \"message\": \"Restart MetaMask\"\n  },\n  \"restore\": {\n    \"message\": \"Restore\"\n  },\n  \"restoreUserData\": {\n    \"message\": \"Restore user data\"\n  },\n  \"resultPageError\": {\n    \"message\": \"Error\"\n  },\n  \"resultPageErrorDefaultMessage\": {\n    \"message\": \"The operation failed.\"\n  },\n  \"resultPageSuccess\": {\n    \"message\": \"Success\"\n  },\n  \"resultPageSuccessDefaultMessage\": {\n    \"message\": \"The operation completed successfully.\"\n  },\n  \"retryTransaction\": {\n    \"message\": \"Retry transaction\"\n  },\n  \"reusedTokenNameWarning\": {\n    \"message\": \"A token here reuses a symbol from another token you watch, this can be confusing or deceptive.\"\n  },\n  \"revealSeedWords\": {\n    \"message\": \"Reveal Secret Recovery Phrase\"\n  },\n  \"revealSeedWordsDescription1\": {\n    \"message\": \"The $1 provides $2\",\n    \"description\": \"This is a sentence consisting of link using 'revealSeedWordsSRPName' as $1 and bolded text using 'revealSeedWordsDescription3' as $2.\"\n  },\n  \"revealSeedWordsDescription2\": {\n    \"message\": \"MetaMask is a $1. That means you're the owner of your SRP.\",\n    \"description\": \"$1 is text link with the message from 'revealSeedWordsNonCustodialWallet'\"\n  },\n  \"revealSeedWordsDescription3\": {\n    \"message\": \"full access to your wallet and funds.\\n\"\n  },\n  \"revealSeedWordsNonCustodialWallet\": {\n    \"message\": \"non-custodial wallet\"\n  },\n  \"revealSeedWordsQR\": {\n    \"message\": \"QR\"\n  },\n  \"revealSeedWordsSRPName\": {\n    \"message\": \"Secret Recovery Phrase (SRP)\"\n  },\n  \"revealSeedWordsText\": {\n    \"message\": \"Text\"\n  },\n  \"revealSeedWordsWarning\": {\n    \"message\": \"Make sure no one is looking at your screen. $1\",\n    \"description\": \"$1 is bolded text using the message from 'revealSeedWordsWarning2'\"\n  },\n  \"revealSeedWordsWarning2\": {\n    \"message\": \"MetaMask Support will never request this.\",\n    \"description\": \"The bolded texted in the second part of 'revealSeedWordsWarning'\"\n  },\n  \"revealSensitiveContent\": {\n    \"message\": \"Reveal sensitive content\"\n  },\n  \"revealTheSeedPhrase\": {\n    \"message\": \"Reveal seed phrase\"\n  },\n  \"reviewAlerts\": {\n    \"message\": \"Review alerts\"\n  },\n  \"reviewPermissions\": {\n    \"message\": \"Review permissions\"\n  },\n  \"revokeAllTokensTitle\": {\n    \"message\": \"Revoke permission to access and transfer all of your $1?\",\n    \"description\": \"$1 is the symbol of the token for which the user is revoking approval\"\n  },\n  \"revokeAllTokensTitleWithoutSymbol\": {\n    \"message\": \"Revoke permission to access and transfer all of your NFTs from $1?\",\n    \"description\": \"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name\"\n  },\n  \"revokeApproveForAllDescription\": {\n    \"message\": \"This revokes the permission for a third party to access and transfer all of your $1 without further notice.\",\n    \"description\": \"$1 is either a string or link of a given token symbol or name\"\n  },\n  \"revokeApproveForAllDescriptionWithoutSymbol\": {\n    \"message\": \"This revokes the permission for a third party to access and transfer all of your NFTs from $1 without further notice.\",\n    \"description\": \"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name\"\n  },\n  \"revokePermission\": {\n    \"message\": \"Revoke permission\"\n  },\n  \"revokeSpendingCap\": {\n    \"message\": \"Revoke spending cap for your $1\",\n    \"description\": \"$1 is a token symbol\"\n  },\n  \"revokeSpendingCapTooltipText\": {\n    \"message\": \"This third party will be unable to spend any more of your current or future tokens.\"\n  },\n  \"rpcNameOptional\": {\n    \"message\": \"RPC Name (Optional)\"\n  },\n  \"rpcUrl\": {\n    \"message\": \"RPC URL\"\n  },\n  \"safeTransferFrom\": {\n    \"message\": \"Safe transfer from\"\n  },\n  \"save\": {\n    \"message\": \"Save\"\n  },\n  \"scanInstructions\": {\n    \"message\": \"Place the QR code in front of your camera\"\n  },\n  \"scanQrCode\": {\n    \"message\": \"Scan QR code\"\n  },\n  \"scrollDown\": {\n    \"message\": \"Scroll down\"\n  },\n  \"search\": {\n    \"message\": \"Search\"\n  },\n  \"searchAccounts\": {\n    \"message\": \"Search accounts\"\n  },\n  \"searchNfts\": {\n    \"message\": \"Search NFTs\"\n  },\n  \"searchTokens\": {\n    \"message\": \"Search tokens\"\n  },\n  \"secretRecoveryPhrase\": {\n    \"message\": \"Secret Recovery Phrase\"\n  },\n  \"secureWallet\": {\n    \"message\": \"Secure wallet\"\n  },\n  \"security\": {\n    \"message\": \"Security\"\n  },\n  \"securityAlert\": {\n    \"message\": \"Security alert from $1 and $2\"\n  },\n  \"securityAlerts\": {\n    \"message\": \"Security alerts\"\n  },\n  \"securityAlertsDescription\": {\n    \"message\": \"This feature alerts you to malicious activity by actively reviewing transaction and signature requests. $1\",\n    \"description\": \"Link to learn more about security alerts\"\n  },\n  \"securityAndPrivacy\": {\n    \"message\": \"Security & privacy\"\n  },\n  \"securityProviderPoweredBy\": {\n    \"message\": \"Powered by $1\",\n    \"description\": \"The security provider that is providing data\"\n  },\n  \"seeAllPermissions\": {\n    \"message\": \"See all permissions\",\n    \"description\": \"Used for revealing more content (e.g. permission list, etc.)\"\n  },\n  \"seeDetails\": {\n    \"message\": \"See details\"\n  },\n  \"seedPhraseConfirm\": {\n    \"message\": \"Confirm Secret Recovery Phrase\"\n  },\n  \"seedPhraseEnterMissingWords\": {\n    \"message\": \"Confirm Secret Recovery Phrase\"\n  },\n  \"seedPhraseIntroNotRecommendedButtonCopy\": {\n    \"message\": \"Remind me later (not recommended)\"\n  },\n  \"seedPhraseIntroRecommendedButtonCopy\": {\n    \"message\": \"Secure my wallet (recommended)\"\n  },\n  \"seedPhraseIntroSidebarBulletOne\": {\n    \"message\": \"Write down and store in multiple secret places\"\n  },\n  \"seedPhraseIntroSidebarBulletTwo\": {\n    \"message\": \"Store in a safe deposit box\"\n  },\n  \"seedPhraseIntroSidebarCopyOne\": {\n    \"message\": \"Your Secret Recovery Phrase is a 12-word phrase that is the “master key” to your wallet and your funds\"\n  },\n  \"seedPhraseIntroSidebarCopyThree\": {\n    \"message\": \"If someone asks for your recovery phrase they are likely trying to scam you and steal your wallet funds.\"\n  },\n  \"seedPhraseIntroSidebarCopyTwo\": {\n    \"message\": \"Never, ever share your Secret Recovery Phrase, not even with MetaMask!\"\n  },\n  \"seedPhraseIntroSidebarTitleOne\": {\n    \"message\": \"What is a Secret Recovery Phrase?\"\n  },\n  \"seedPhraseIntroSidebarTitleThree\": {\n    \"message\": \"Should I share my Secret Recovery Phrase?\"\n  },\n  \"seedPhraseIntroSidebarTitleTwo\": {\n    \"message\": \"How do I save my Secret Recovery Phrase?\"\n  },\n  \"seedPhraseIntroTitle\": {\n    \"message\": \"Secure your wallet\"\n  },\n  \"seedPhraseIntroTitleCopy\": {\n    \"message\": \"Before getting started, watch this short video to learn about your Secret Recovery Phrase and how to keep your wallet safe.\"\n  },\n  \"seedPhraseReq\": {\n    \"message\": \"Secret Recovery Phrases contain 12, 15, 18, 21, or 24 words\"\n  },\n  \"seedPhraseWriteDownDetails\": {\n    \"message\": \"Write down this 12-word Secret Recovery Phrase and save it in a place that you trust and only you can access.\"\n  },\n  \"seedPhraseWriteDownHeader\": {\n    \"message\": \"Write down your Secret Recovery Phrase\"\n  },\n  \"select\": {\n    \"message\": \"Select\"\n  },\n  \"selectAccounts\": {\n    \"message\": \"Select the account(s) to use on this site\"\n  },\n  \"selectAccountsForSnap\": {\n    \"message\": \"Select the account(s) to use with this snap\"\n  },\n  \"selectAll\": {\n    \"message\": \"Select all\"\n  },\n  \"selectAllAccounts\": {\n    \"message\": \"Select all accounts\"\n  },\n  \"selectAnAccount\": {\n    \"message\": \"Select an account\"\n  },\n  \"selectAnAccountAlreadyConnected\": {\n    \"message\": \"This account has already been connected to MetaMask\"\n  },\n  \"selectAnAccountHelp\": {\n    \"message\": \"Select the custodian accounts to use in MetaMask Institutional.\"\n  },\n  \"selectEnableDisplayMediaPrivacyPreference\": {\n    \"message\": \"Turn on Display NFT Media\"\n  },\n  \"selectFundingMethod\": {\n    \"message\": \"Select a funding method\"\n  },\n  \"selectHdPath\": {\n    \"message\": \"Select HD path\"\n  },\n  \"selectJWT\": {\n    \"message\": \"Select token\"\n  },\n  \"selectNFTPrivacyPreference\": {\n    \"message\": \"Enable NFT Autodetection\"\n  },\n  \"selectPathHelp\": {\n    \"message\": \"If you don't see the accounts you expect, try switching the HD path or current selected network.\"\n  },\n  \"selectRpcUrl\": {\n    \"message\": \"Select RPC URL\"\n  },\n  \"selectType\": {\n    \"message\": \"Select Type\"\n  },\n  \"selectingAllWillAllow\": {\n    \"message\": \"Selecting all will allow this site to view all of your current accounts. Make sure you trust this site.\"\n  },\n  \"send\": {\n    \"message\": \"Send\"\n  },\n  \"sendBugReport\": {\n    \"message\": \"Send us a bug report.\"\n  },\n  \"sendNoContactsConversionText\": {\n    \"message\": \"click here\"\n  },\n  \"sendNoContactsDescription\": {\n    \"message\": \"Contacts allow you to safely send transactions to another account multiple times.  To create a contact, $1\",\n    \"description\": \"$1 represents the action text 'click here'\"\n  },\n  \"sendNoContactsTitle\": {\n    \"message\": \"You don't have any contacts yet\"\n  },\n  \"sendSelectReceiveAsset\": {\n    \"message\": \"Select asset to receive\"\n  },\n  \"sendSelectSendAsset\": {\n    \"message\": \"Select asset to send\"\n  },\n  \"sendSpecifiedTokens\": {\n    \"message\": \"Send $1\",\n    \"description\": \"Symbol of the specified token\"\n  },\n  \"sendSwapSubmissionWarning\": {\n    \"message\": \"Clicking this button will immediately initiate your swap transaction. Please review your transaction details before proceeding.\"\n  },\n  \"sendTokenAsToken\": {\n    \"message\": \"Send $1 as $2\",\n    \"description\": \"Used in the transaction display list to describe a swap and send. $1 and $2 are the symbols of tokens in involved in the swap.\"\n  },\n  \"sendingAsset\": {\n    \"message\": \"Sending $1\"\n  },\n  \"sendingDisabled\": {\n    \"message\": \"Sending of ERC-1155 NFT assets is not yet supported.\"\n  },\n  \"sendingNativeAsset\": {\n    \"message\": \"Sending $1\",\n    \"description\": \"$1 represents the native currency symbol for the current network (e.g. ETH or BNB)\"\n  },\n  \"sendingToTokenContractWarning\": {\n    \"message\": \"Warning: you are about to send to a token contract which could result in a loss of funds. $1\",\n    \"description\": \"$1 is a clickable link with text defined by the 'learnMoreUpperCase' key. The link will open to a support article regarding the known contract address warning\"\n  },\n  \"sendingZeroAmount\": {\n    \"message\": \"You are sending 0 $1.\"\n  },\n  \"sepolia\": {\n    \"message\": \"Sepolia test network\"\n  },\n  \"setAdvancedPrivacySettingsDetails\": {\n    \"message\": \"MetaMask uses these trusted third-party services to enhance product usability and safety.\"\n  },\n  \"setApprovalForAll\": {\n    \"message\": \"Set approval for all\"\n  },\n  \"setApprovalForAllTitle\": {\n    \"message\": \"Approve $1 with no spend limit\",\n    \"description\": \"The token symbol that is being approved\"\n  },\n  \"settingAddSnapAccount\": {\n    \"message\": \"Add account Snap\"\n  },\n  \"settings\": {\n    \"message\": \"Settings\"\n  },\n  \"settingsSearchMatchingNotFound\": {\n    \"message\": \"No matching results found.\"\n  },\n  \"settingsSubHeadingSignaturesAndTransactions\": {\n    \"message\": \"Signature and transaction requests\"\n  },\n  \"show\": {\n    \"message\": \"Show\"\n  },\n  \"showAccount\": {\n    \"message\": \"Show account\"\n  },\n  \"showExtensionInFullSizeView\": {\n    \"message\": \"Show extension in full-size view\"\n  },\n  \"showExtensionInFullSizeViewDescription\": {\n    \"message\": \"Turn this on to make full-size view your default when you click the extension icon.\"\n  },\n  \"showFiatConversionInTestnets\": {\n    \"message\": \"Show conversion on test networks\"\n  },\n  \"showFiatConversionInTestnetsDescription\": {\n    \"message\": \"Select this to show fiat conversion on test networks\"\n  },\n  \"showHexData\": {\n    \"message\": \"Show hex data\"\n  },\n  \"showHexDataDescription\": {\n    \"message\": \"Select this to show the hex data field on the send screen\"\n  },\n  \"showIncomingTransactions\": {\n    \"message\": \"Show incoming transactions\"\n  },\n  \"showIncomingTransactionsDescription\": {\n    \"message\": \"This relies on $1 which will have access to your Ethereum address and your IP address. $2\",\n    \"description\": \"$1 is the link to etherscan url and $2 is the link to the privacy policy of consensys APIs\"\n  },\n  \"showIncomingTransactionsExplainer\": {\n    \"message\": \"This relies on different third-party APIs for each network, which expose your Ethereum address and your IP address.\"\n  },\n  \"showLess\": {\n    \"message\": \"Show less\"\n  },\n  \"showMore\": {\n    \"message\": \"Show more\"\n  },\n  \"showNft\": {\n    \"message\": \"Show NFT\"\n  },\n  \"showPermissions\": {\n    \"message\": \"Show permissions\"\n  },\n  \"showPrivateKey\": {\n    \"message\": \"Show private key\"\n  },\n  \"showTestnetNetworks\": {\n    \"message\": \"Show test networks\"\n  },\n  \"showTestnetNetworksDescription\": {\n    \"message\": \"Select this to show test networks in network list\"\n  },\n  \"sigRequest\": {\n    \"message\": \"Signature request\"\n  },\n  \"sign\": {\n    \"message\": \"Sign\"\n  },\n  \"signatureRequest\": {\n    \"message\": \"Signature request\"\n  },\n  \"signatureRequestGuidance\": {\n    \"message\": \"Only sign this message if you fully understand the content and trust the requesting site.\"\n  },\n  \"signed\": {\n    \"message\": \"Signed\"\n  },\n  \"signin\": {\n    \"message\": \"Sign-In\"\n  },\n  \"signing\": {\n    \"message\": \"Signing\"\n  },\n  \"signingInWith\": {\n    \"message\": \"Signing in with\"\n  },\n  \"simulationApproveHeading\": {\n    \"message\": \"Withdraw\"\n  },\n  \"simulationDetailsApproveDesc\": {\n    \"message\": \"You're giving someone else permission to withdraw NFTs from your account.\"\n  },\n  \"simulationDetailsERC20ApproveDesc\": {\n    \"message\": \"You're giving someone else permission to spend this amount from your account.\"\n  },\n  \"simulationDetailsFailed\": {\n    \"message\": \"There was an error loading your estimation.\"\n  },\n  \"simulationDetailsFiatNotAvailable\": {\n    \"message\": \"Not Available\"\n  },\n  \"simulationDetailsIncomingHeading\": {\n    \"message\": \"You receive\"\n  },\n  \"simulationDetailsNoBalanceChanges\": {\n    \"message\": \"No changes predicted for your wallet\"\n  },\n  \"simulationDetailsOutgoingHeading\": {\n    \"message\": \"You send\"\n  },\n  \"simulationDetailsTitle\": {\n    \"message\": \"Estimated changes\"\n  },\n  \"simulationDetailsTitleTooltip\": {\n    \"message\": \"Estimated changes are what might happen if you go through with this transaction. This is just a prediction, not a guarantee.\"\n  },\n  \"simulationDetailsTotalFiat\": {\n    \"message\": \"Total = $1\",\n    \"description\": \"$1 is the total amount in fiat currency on one side of the transaction\"\n  },\n  \"simulationDetailsTransactionReverted\": {\n    \"message\": \"This transaction is likely to fail\"\n  },\n  \"simulationErrorMessageV2\": {\n    \"message\": \"We were not able to estimate gas. There might be an error in the contract and this transaction may fail.\"\n  },\n  \"simulationsSettingDescription\": {\n    \"message\": \"Turn this on to estimate balance changes of transactions before you confirm them. This doesn't guarantee the final outcome of your transactions. $1\"\n  },\n  \"simulationsSettingSubHeader\": {\n    \"message\": \"Estimate balance changes\"\n  },\n  \"siweIssued\": {\n    \"message\": \"Issued\"\n  },\n  \"siweNetwork\": {\n    \"message\": \"Network\"\n  },\n  \"siweRequestId\": {\n    \"message\": \"Request ID\"\n  },\n  \"siweResources\": {\n    \"message\": \"Resources\"\n  },\n  \"siweSignatureSimulationDetailInfo\": {\n    \"message\": \"You’re signing into a site and there are no predicted changes to your account.\"\n  },\n  \"siweURI\": {\n    \"message\": \"URL\"\n  },\n  \"skip\": {\n    \"message\": \"Skip\"\n  },\n  \"skipAccountSecurity\": {\n    \"message\": \"Skip account security?\"\n  },\n  \"skipAccountSecurityDetails\": {\n    \"message\": \"I understand that until I back up my Secret Recovery Phrase, I may lose my accounts and all of their assets.\"\n  },\n  \"smartContracts\": {\n    \"message\": \"Smart contracts\"\n  },\n  \"smartSwapsErrorNotEnoughFunds\": {\n    \"message\": \"Not enough funds for a smart swap.\"\n  },\n  \"smartSwapsErrorUnavailable\": {\n    \"message\": \"Smart Swaps are temporarily unavailable.\"\n  },\n  \"smartTransactionCancelled\": {\n    \"message\": \"Your transaction was canceled\"\n  },\n  \"smartTransactionCancelledDescription\": {\n    \"message\": \"Your transaction couldn't be completed, so it was canceled to save you from paying unnecessary gas fees.\"\n  },\n  \"smartTransactionError\": {\n    \"message\": \"Your transaction failed\"\n  },\n  \"smartTransactionErrorDescription\": {\n    \"message\": \"Sudden market changes can cause failures. If the problem continues, reach out to MetaMask customer support.\"\n  },\n  \"smartTransactionPending\": {\n    \"message\": \"Submitting your transaction\"\n  },\n  \"smartTransactionSuccess\": {\n    \"message\": \"Your transaction is complete\"\n  },\n  \"smartTransactionTakingTooLong\": {\n    \"message\": \"Sorry for the wait\"\n  },\n  \"smartTransactionTakingTooLongDescription\": {\n    \"message\": \"If your transaction is not finalized within $1, it will be canceled and you will not be charged for gas.\",\n    \"description\": \"$1 is remaining time in seconds\"\n  },\n  \"smartTransactions\": {\n    \"message\": \"Smart Transactions\"\n  },\n  \"smartTransactionsBenefit1\": {\n    \"message\": \"99.5% success rate\"\n  },\n  \"smartTransactionsBenefit2\": {\n    \"message\": \"Saves you money\"\n  },\n  \"smartTransactionsBenefit3\": {\n    \"message\": \"Real-time updates\"\n  },\n  \"smartTransactionsDescription\": {\n    \"message\": \"Unlock higher success rates, frontrunning protection, and better visibility with Smart Transactions.\"\n  },\n  \"smartTransactionsDescription2\": {\n    \"message\": \"Only available on Ethereum. Enable or disable any time in settings. $1\",\n    \"description\": \"$1 is an external link to learn more about Smart Transactions\"\n  },\n  \"smartTransactionsOptItModalTitle\": {\n    \"message\": \"Enhanced Transaction Protection\"\n  },\n  \"snapAccountCreated\": {\n    \"message\": \"Account created\"\n  },\n  \"snapAccountCreatedDescription\": {\n    \"message\": \"Your new account is ready to use!\"\n  },\n  \"snapAccountCreationFailed\": {\n    \"message\": \"Account creation failed\"\n  },\n  \"snapAccountCreationFailedDescription\": {\n    \"message\": \"$1 didn't manage to create an account for you.\",\n    \"description\": \"$1 is the snap name\"\n  },\n  \"snapAccountRedirectFinishSigningTitle\": {\n    \"message\": \"Finish signing\"\n  },\n  \"snapAccountRedirectSiteDescription\": {\n    \"message\": \"Follow the instructions from $1\"\n  },\n  \"snapAccountRemovalFailed\": {\n    \"message\": \"Account removal failed\"\n  },\n  \"snapAccountRemovalFailedDescription\": {\n    \"message\": \"$1 didn't manage to remove this account for you.\",\n    \"description\": \"$1 is the snap name\"\n  },\n  \"snapAccountRemoved\": {\n    \"message\": \"Account removed\"\n  },\n  \"snapAccountRemovedDescription\": {\n    \"message\": \"This account will no longer be available to use in MetaMask.\"\n  },\n  \"snapAccounts\": {\n    \"message\": \"Account Snaps\"\n  },\n  \"snapAccountsDescription\": {\n    \"message\": \"Accounts controlled by third-party Snaps.\"\n  },\n  \"snapConnectTo\": {\n    \"message\": \"Connect to $1\",\n    \"description\": \"$1 is the website URL or a Snap name. Used for Snaps pre-approved connections.\"\n  },\n  \"snapConnectionPermissionDescription\": {\n    \"message\": \"Let $1 automatically connect to $2 without your approval.\",\n    \"description\": \"Used for Snap pre-approved connections. $1 is the Snap name, $2 is a website URL.\"\n  },\n  \"snapConnectionWarning\": {\n    \"message\": \"$1 wants to use $2\",\n    \"description\": \"$2 is the snap and $1 is the dapp requesting connection to the snap.\"\n  },\n  \"snapContent\": {\n    \"message\": \"This content is coming from $1\",\n    \"description\": \"This is shown when a snap shows transaction insight information in the confirmation UI. $1 is a link to the snap's settings page with the link text being the name of the snap.\"\n  },\n  \"snapDetailWebsite\": {\n    \"message\": \"Website\"\n  },\n  \"snapHomeMenu\": {\n    \"message\": \"Snap Home Menu\"\n  },\n  \"snapInstallRequest\": {\n    \"message\": \"Installing $1 gives it the following permissions.\",\n    \"description\": \"$1 is the snap name.\"\n  },\n  \"snapInstallSuccess\": {\n    \"message\": \"Installation complete\"\n  },\n  \"snapInstallWarningCheck\": {\n    \"message\": \"$1 wants permission to do the following:\",\n    \"description\": \"Warning message used in popup displayed on snap install. $1 is the snap name.\"\n  },\n  \"snapInstallWarningHeading\": {\n    \"message\": \"Proceed with caution\"\n  },\n  \"snapInstallWarningPermissionDescriptionForBip32View\": {\n    \"message\": \"Allow $1 to view your public keys (and addresses). This does not grant any control of accounts or assets.\",\n    \"description\": \"An extended description for the `snap_getBip32PublicKey` permission used for tooltip on Snap Install Warning screen (popup/modal). $1 is the snap name.\"\n  },\n  \"snapInstallWarningPermissionDescriptionForEntropy\": {\n    \"message\": \"Allow $1 Snap to manage accounts and assets on the requested network(s). These accounts are derived and backed up using your secret recovery phrase (without revealing it). With the power to derive keys, $1 can support a variety of blockchain protocols beyond Ethereum (EVMs).\",\n    \"description\": \"An extended description for the `snap_getBip44Entropy` and `snap_getBip44Entropy` permissions used for tooltip on Snap Install Warning screen (popup/modal). $1 is the snap name.\"\n  },\n  \"snapInstallWarningPermissionNameForEntropy\": {\n    \"message\": \"Manage $1 accounts\",\n    \"description\": \"Permission name used for the Permission Cell component displayed on warning popup when installing a Snap. $1 is list of account types.\"\n  },\n  \"snapInstallWarningPermissionNameForViewPublicKey\": {\n    \"message\": \"View your public key for $1\",\n    \"description\": \"Permission name used for the Permission Cell component displayed on warning popup when installing a Snap. $1 is list of account types.\"\n  },\n  \"snapInstallationErrorDescription\": {\n    \"message\": \"$1 couldn’t be installed.\",\n    \"description\": \"Error description used when snap installation fails. $1 is the snap name.\"\n  },\n  \"snapInstallationErrorTitle\": {\n    \"message\": \"Installation failed\",\n    \"description\": \"Error title used when snap installation fails.\"\n  },\n  \"snapResultError\": {\n    \"message\": \"Error\"\n  },\n  \"snapResultSuccess\": {\n    \"message\": \"Success\"\n  },\n  \"snapResultSuccessDescription\": {\n    \"message\": \"$1 is ready to use\"\n  },\n  \"snapUpdateAlertDescription\": {\n    \"message\": \"Get the latest version of $1\",\n    \"description\": \"Description used in Snap update alert banner when snap update is available. $1 is the Snap name.\"\n  },\n  \"snapUpdateAvailable\": {\n    \"message\": \"Update available\"\n  },\n  \"snapUpdateErrorDescription\": {\n    \"message\": \"$1 couldn’t be updated.\",\n    \"description\": \"Error description used when snap update fails. $1 is the snap name.\"\n  },\n  \"snapUpdateErrorTitle\": {\n    \"message\": \"Update failed\",\n    \"description\": \"Error title used when snap update fails.\"\n  },\n  \"snapUpdateRequest\": {\n    \"message\": \"Updating $1 gives it the following permissions.\",\n    \"description\": \"$1 is the Snap name.\"\n  },\n  \"snapUpdateSuccess\": {\n    \"message\": \"Update complete\"\n  },\n  \"snapUrlIsBlocked\": {\n    \"message\": \"This Snap wants to take you to a blocked site. $1.\"\n  },\n  \"snaps\": {\n    \"message\": \"Snaps\"\n  },\n  \"snapsConnected\": {\n    \"message\": \"Snaps connected\"\n  },\n  \"snapsNoInsight\": {\n    \"message\": \"No insight to show\"\n  },\n  \"snapsPrivacyWarningFirstMessage\": {\n    \"message\": \"You acknowledge that any Snap that you install is a Third Party Service, unless otherwise identified, as defined in the Consensys $1. Your use of Third Party Services is governed by separate terms and conditions set forth by the Third Party Service provider. Consensys does not recommend the use of any Snap by any particular person for any particular reason. You access, rely upon or use the Third Party Service at your own risk. Consensys disclaims all responsibility and liability for any losses on account of your use of Third Party Services.\",\n    \"description\": \"First part of a message in popup modal displayed when installing a snap for the first time. $1 is terms of use link.\"\n  },\n  \"snapsPrivacyWarningSecondMessage\": {\n    \"message\": \"Any information you share with Third Party Services will be collected directly by those Third Party Services in accordance with their privacy policies. Please refer to their privacy policies for more information.\",\n    \"description\": \"Second part of a message in popup modal displayed when installing a snap for the first time.\"\n  },\n  \"snapsPrivacyWarningThirdMessage\": {\n    \"message\": \"Consensys has no access to information you share with Third Party Services.\",\n    \"description\": \"Third part of a message in popup modal displayed when installing a snap for the first time.\"\n  },\n  \"snapsSettings\": {\n    \"message\": \"Snap settings\"\n  },\n  \"snapsTermsOfUse\": {\n    \"message\": \"Terms of Use\"\n  },\n  \"snapsToggle\": {\n    \"message\": \"A snap will only run if it is enabled\"\n  },\n  \"snapsUIError\": {\n    \"message\": \"Contact the creators of $1 for further support.\",\n    \"description\": \"This is shown when the insight snap throws an error. $1 is the snap name\"\n  },\n  \"someNetworksMayPoseSecurity\": {\n    \"message\": \"Some networks may pose security and/or privacy risks. Understand the risks before adding & using a network.\"\n  },\n  \"somethingDoesntLookRight\": {\n    \"message\": \"Something doesn't look right? $1\",\n    \"description\": \"A false positive message for users to contact support. $1 is a link to the support page.\"\n  },\n  \"somethingIsWrong\": {\n    \"message\": \"Something's gone wrong. Try reloading the page.\"\n  },\n  \"somethingWentWrong\": {\n    \"message\": \"Oops! Something went wrong.\"\n  },\n  \"source\": {\n    \"message\": \"Source\"\n  },\n  \"speed\": {\n    \"message\": \"Speed\"\n  },\n  \"speedUp\": {\n    \"message\": \"Speed up\"\n  },\n  \"speedUpCancellation\": {\n    \"message\": \"Speed up this cancellation\"\n  },\n  \"speedUpExplanation\": {\n    \"message\": \"We’ve updated the gas fee based on current network conditions and have increased it by at least 10% (required by the network).\"\n  },\n  \"speedUpPopoverTitle\": {\n    \"message\": \"Speed up transaction\"\n  },\n  \"speedUpTooltipText\": {\n    \"message\": \"New gas fee\"\n  },\n  \"speedUpTransaction\": {\n    \"message\": \"Speed up this transaction\"\n  },\n  \"spendLimitInsufficient\": {\n    \"message\": \"Spend limit insufficient\"\n  },\n  \"spendLimitInvalid\": {\n    \"message\": \"Spend limit invalid; must be a positive number\"\n  },\n  \"spendLimitPermission\": {\n    \"message\": \"Spend limit permission\"\n  },\n  \"spendLimitRequestedBy\": {\n    \"message\": \"Spend limit requested by $1\",\n    \"description\": \"Origin of the site requesting the spend limit\"\n  },\n  \"spendLimitTooLarge\": {\n    \"message\": \"Spend limit too large\"\n  },\n  \"spender\": {\n    \"message\": \"Spender\"\n  },\n  \"spenderTooltipDesc\": {\n    \"message\": \"This is the address that will be able to withdraw your NFTs.\"\n  },\n  \"spenderTooltipERC20ApproveDesc\": {\n    \"message\": \"This is the address that will be able to spend your tokens on your behalf.\"\n  },\n  \"spendingCap\": {\n    \"message\": \"Spending cap\"\n  },\n  \"spendingCapError\": {\n    \"message\": \"Error: Enter numbers only\"\n  },\n  \"spendingCapErrorDescription\": {\n    \"message\": \"Only enter a number that you're comfortable with $1 accessing now or in the future. You can always increase the token limit later.\",\n    \"description\": \"$1 is origin of the site requesting the token limit\"\n  },\n  \"spendingCapRequest\": {\n    \"message\": \"Spending cap request for your $1\"\n  },\n  \"spendingCapTooltipDesc\": {\n    \"message\": \"This is the amount of tokens the spender will be able to access on your behalf.\"\n  },\n  \"srpInputNumberOfWords\": {\n    \"message\": \"I have a $1-word phrase\",\n    \"description\": \"This is the text for each option in the dropdown where a user selects how many words their secret recovery phrase has during import. The $1 is the number of words (either 12, 15, 18, 21, or 24).\"\n  },\n  \"srpPasteFailedTooManyWords\": {\n    \"message\": \"Paste failed because it contained over 24 words. A secret recovery phrase can have a maximum of 24 words.\",\n    \"description\": \"Description of SRP paste error when the pasted content has too many words\"\n  },\n  \"srpPasteTip\": {\n    \"message\": \"You can paste your entire secret recovery phrase into any field\",\n    \"description\": \"Our secret recovery phrase input is split into one field per word. This message explains to users that they can paste their entire secrete recovery phrase into any field, and we will handle it correctly.\"\n  },\n  \"srpSecurityQuizGetStarted\": {\n    \"message\": \"Get started\"\n  },\n  \"srpSecurityQuizImgAlt\": {\n    \"message\": \"An eye with a keyhole in the center, and three floating password fields\"\n  },\n  \"srpSecurityQuizIntroduction\": {\n    \"message\": \"To reveal your Secret Recovery Phrase, you need to correctly answer two questions\"\n  },\n  \"srpSecurityQuizQuestionOneQuestion\": {\n    \"message\": \"If you lose your Secret Recovery Phrase, MetaMask...\"\n  },\n  \"srpSecurityQuizQuestionOneRightAnswer\": {\n    \"message\": \"Can’t help you\"\n  },\n  \"srpSecurityQuizQuestionOneRightAnswerDescription\": {\n    \"message\": \"Write it down, engrave it on metal, or keep it in multiple secret spots so you never lose it. If you lose it, it’s gone forever.\"\n  },\n  \"srpSecurityQuizQuestionOneRightAnswerTitle\": {\n    \"message\": \"Right! No one can help get your Secret Recovery Phrase back\"\n  },\n  \"srpSecurityQuizQuestionOneWrongAnswer\": {\n    \"message\": \"Can get it back for you\"\n  },\n  \"srpSecurityQuizQuestionOneWrongAnswerDescription\": {\n    \"message\": \"If you lose your Secret Recovery Phrase, it’s gone forever. No one can help you get it back, no matter what they might say.\"\n  },\n  \"srpSecurityQuizQuestionOneWrongAnswerTitle\": {\n    \"message\": \"Wrong! No one can help get your Secret Recovery Phrase back\"\n  },\n  \"srpSecurityQuizQuestionTwoQuestion\": {\n    \"message\": \"If anyone, even a support agent, asks for your Secret Recovery Phrase...\"\n  },\n  \"srpSecurityQuizQuestionTwoRightAnswer\": {\n    \"message\": \"You’re being scammed\"\n  },\n  \"srpSecurityQuizQuestionTwoRightAnswerDescription\": {\n    \"message\": \"Anyone claiming to need your Secret Recovery Phrase is lying to you. If you share it with them, they will steal your assets.\"\n  },\n  \"srpSecurityQuizQuestionTwoRightAnswerTitle\": {\n    \"message\": \"Correct! Sharing your Secret Recovery Phrase is never a good idea\"\n  },\n  \"srpSecurityQuizQuestionTwoWrongAnswer\": {\n    \"message\": \"You should give it to them\"\n  },\n  \"srpSecurityQuizQuestionTwoWrongAnswerDescription\": {\n    \"message\": \"Anyone claiming to need your Secret Recovery Phrase is lying to you. If you share it with them, they will steal your assets.\"\n  },\n  \"srpSecurityQuizQuestionTwoWrongAnswerTitle\": {\n    \"message\": \"Nope! Never share your Secret Recovery Phrase with anyone, ever\"\n  },\n  \"srpSecurityQuizTitle\": {\n    \"message\": \"Security quiz\"\n  },\n  \"srpToggleShow\": {\n    \"message\": \"Show/Hide this word of the secret recovery phrase\",\n    \"description\": \"Describes a toggle that is used to show or hide a single word of the secret recovery phrase\"\n  },\n  \"srpWordHidden\": {\n    \"message\": \"This word is hidden\",\n    \"description\": \"Explains that a word in the secret recovery phrase is hidden\"\n  },\n  \"srpWordShown\": {\n    \"message\": \"This word is being shown\",\n    \"description\": \"Explains that a word in the secret recovery phrase is being shown\"\n  },\n  \"stable\": {\n    \"message\": \"Stable\"\n  },\n  \"stableLowercase\": {\n    \"message\": \"stable\"\n  },\n  \"stake\": {\n    \"message\": \"Stake\"\n  },\n  \"startYourJourney\": {\n    \"message\": \"Start your journey with $1\",\n    \"description\": \"$1 is the token symbol\"\n  },\n  \"startYourJourneyDescription\": {\n    \"message\": \"Get started with web3 by adding some $1 to your wallet.\",\n    \"description\": \"$1 is the token symbol\"\n  },\n  \"stateLogError\": {\n    \"message\": \"Error in retrieving state logs.\"\n  },\n  \"stateLogFileName\": {\n    \"message\": \"MetaMask state logs\"\n  },\n  \"stateLogs\": {\n    \"message\": \"State logs\"\n  },\n  \"stateLogsDescription\": {\n    \"message\": \"State logs contain your public account addresses and sent transactions.\"\n  },\n  \"status\": {\n    \"message\": \"Status\"\n  },\n  \"statusNotConnected\": {\n    \"message\": \"Not connected\"\n  },\n  \"statusNotConnectedAccount\": {\n    \"message\": \"No accounts connected\"\n  },\n  \"step1LatticeWallet\": {\n    \"message\": \"Connect your Lattice1\"\n  },\n  \"step1LatticeWalletMsg\": {\n    \"message\": \"You can connect MetaMask to your Lattice1 device once it is set up and online. Unlock your device and have your Device ID ready.\",\n    \"description\": \"$1 represents the `hardwareWalletSupportLinkConversion` localization key\"\n  },\n  \"step1LedgerWallet\": {\n    \"message\": \"Download Ledger app\"\n  },\n  \"step1LedgerWalletMsg\": {\n    \"message\": \"Download, set up, and enter your password to unlock $1.\",\n    \"description\": \"$1 represents the `ledgerLiveApp` localization value\"\n  },\n  \"step1TrezorWallet\": {\n    \"message\": \"Connect your Trezor\"\n  },\n  \"step1TrezorWalletMsg\": {\n    \"message\": \"Plug your Trezor directly into your computer and unlock it. Make sure you use the correct passphrase.\",\n    \"description\": \"$1 represents the `hardwareWalletSupportLinkConversion` localization key\"\n  },\n  \"step2LedgerWallet\": {\n    \"message\": \"Connect your Ledger\"\n  },\n  \"step2LedgerWalletMsg\": {\n    \"message\": \"Plug your Ledger directly into your computer, then  unlock it and open the Ethereum app.\",\n    \"description\": \"$1 represents the `hardwareWalletSupportLinkConversion` localization key\"\n  },\n  \"stillGettingMessage\": {\n    \"message\": \"Still getting this message?\"\n  },\n  \"strong\": {\n    \"message\": \"Strong\"\n  },\n  \"stxCancelled\": {\n    \"message\": \"Swap would have failed\"\n  },\n  \"stxCancelledDescription\": {\n    \"message\": \"Your transaction would have failed and was cancelled to protect you from paying unnecessary gas fees.\"\n  },\n  \"stxCancelledSubDescription\": {\n    \"message\": \"Try your swap again. We’ll be here to protect you against similar risks next time.\"\n  },\n  \"stxEstimatedCompletion\": {\n    \"message\": \"Estimated completion in < $1\",\n    \"description\": \"$1 is remeaning time in minutes and seconds, e.g. 0:10\"\n  },\n  \"stxFailure\": {\n    \"message\": \"Swap failed\"\n  },\n  \"stxFailureDescription\": {\n    \"message\": \"Sudden market changes can cause failures. If the problem persists, please reach out to $1.\",\n    \"description\": \"This message is shown to a user if their swap fails. The $1 will be replaced by support.metamask.io\"\n  },\n  \"stxOptInDescription\": {\n    \"message\": \"Turn on Smart Transactions for more reliable and secure transactions on Ethereum Mainnet. $1\"\n  },\n  \"stxPendingPrivatelySubmittingSwap\": {\n    \"message\": \"Privately submitting your Swap...\"\n  },\n  \"stxPendingPubliclySubmittingSwap\": {\n    \"message\": \"Publicly submitting your Swap...\"\n  },\n  \"stxSuccess\": {\n    \"message\": \"Swap complete!\"\n  },\n  \"stxSuccessDescription\": {\n    \"message\": \"Your $1 is now available.\",\n    \"description\": \"$1 is a token symbol, e.g. ETH\"\n  },\n  \"stxSwapCompleteIn\": {\n    \"message\": \"Swap will complete in <\",\n    \"description\": \"'<' means 'less than', e.g. Swap will complete in < 2:59\"\n  },\n  \"stxTryingToCancel\": {\n    \"message\": \"Trying to cancel your transaction...\"\n  },\n  \"stxUnknown\": {\n    \"message\": \"Status unknown\"\n  },\n  \"stxUnknownDescription\": {\n    \"message\": \"A transaction has been successful but we’re unsure what it is. This may be due to submitting another transaction while this swap was processing.\"\n  },\n  \"stxUserCancelled\": {\n    \"message\": \"Swap cancelled\"\n  },\n  \"stxUserCancelledDescription\": {\n    \"message\": \"Your transaction has been cancelled and you did not pay any unnecessary gas fees.\"\n  },\n  \"submit\": {\n    \"message\": \"Submit\"\n  },\n  \"submitted\": {\n    \"message\": \"Submitted\"\n  },\n  \"suggestedBySnap\": {\n    \"message\": \"Suggested by $1\",\n    \"description\": \"$1 is the snap name\"\n  },\n  \"suggestedCurrencySymbol\": {\n    \"message\": \"Suggested currency symbol:\"\n  },\n  \"suggestedTokenName\": {\n    \"message\": \"Suggested name:\"\n  },\n  \"support\": {\n    \"message\": \"Support\"\n  },\n  \"supportCenter\": {\n    \"message\": \"Visit our support center\"\n  },\n  \"supportMultiRpcInformation\": {\n    \"message\": \"We now support multiple RPCs for a single network. Your most recent RPC has been selected as the default one to resolve conflicting information.\"\n  },\n  \"surveyConversion\": {\n    \"message\": \"Take our survey\"\n  },\n  \"surveyTitle\": {\n    \"message\": \"Shape the future of MetaMask\"\n  },\n  \"swap\": {\n    \"message\": \"Swap\"\n  },\n  \"swapAdjustSlippage\": {\n    \"message\": \"Adjust slippage\"\n  },\n  \"swapAggregator\": {\n    \"message\": \"Aggregator\"\n  },\n  \"swapAllowSwappingOf\": {\n    \"message\": \"Allow swapping of $1\",\n    \"description\": \"Shows a user that they need to allow a token for swapping on their hardware wallet\"\n  },\n  \"swapAmountReceived\": {\n    \"message\": \"Guaranteed amount\"\n  },\n  \"swapAmountReceivedInfo\": {\n    \"message\": \"This is the minimum amount you will receive. You may receive more depending on slippage.\"\n  },\n  \"swapAndSend\": {\n    \"message\": \"Swap & Send\"\n  },\n  \"swapAnyway\": {\n    \"message\": \"Swap anyway\"\n  },\n  \"swapApproval\": {\n    \"message\": \"Approve $1 for swaps\",\n    \"description\": \"Used in the transaction display list to describe a transaction that is an approve call on a token that is to be swapped.. $1 is the symbol of a token that has been approved.\"\n  },\n  \"swapApproveNeedMoreTokens\": {\n    \"message\": \"You need $1 more $2 to complete this swap\",\n    \"description\": \"Tells the user how many more of a given token they need for a specific swap. $1 is an amount of tokens and $2 is the token symbol.\"\n  },\n  \"swapAreYouStillThere\": {\n    \"message\": \"Are you still there?\"\n  },\n  \"swapAreYouStillThereDescription\": {\n    \"message\": \"We’re ready to show you the latest quotes when you want to continue\"\n  },\n  \"swapBuildQuotePlaceHolderText\": {\n    \"message\": \"No tokens available matching $1\",\n    \"description\": \"Tells the user that a given search string does not match any tokens in our token lists. $1 can be any string of text\"\n  },\n  \"swapConfirmWithHwWallet\": {\n    \"message\": \"Confirm with your hardware wallet\"\n  },\n  \"swapContinueSwapping\": {\n    \"message\": \"Continue swapping\"\n  },\n  \"swapContractDataDisabledErrorDescription\": {\n    \"message\": \"In the Ethereum app on your Ledger, go to \\\"Settings\\\" and allow contract data. Then, try your swap again.\"\n  },\n  \"swapContractDataDisabledErrorTitle\": {\n    \"message\": \"Contract data is not enabled on your Ledger\"\n  },\n  \"swapCustom\": {\n    \"message\": \"custom\"\n  },\n  \"swapDecentralizedExchange\": {\n    \"message\": \"Decentralized exchange\"\n  },\n  \"swapDirectContract\": {\n    \"message\": \"Direct contract\"\n  },\n  \"swapEditLimit\": {\n    \"message\": \"Edit limit\"\n  },\n  \"swapEnableDescription\": {\n    \"message\": \"This is required and gives MetaMask permission to swap your $1.\",\n    \"description\": \"Gives the user info about the required approval transaction for swaps. $1 will be the symbol of a token being approved for swaps.\"\n  },\n  \"swapEnableTokenForSwapping\": {\n    \"message\": \"This will $1 for swapping\",\n    \"description\": \"$1 is for the 'enableToken' key, e.g. 'enable ETH'\"\n  },\n  \"swapEnterAmount\": {\n    \"message\": \"Enter an amount\"\n  },\n  \"swapEstimatedNetworkFees\": {\n    \"message\": \"Estimated network fees\"\n  },\n  \"swapEstimatedNetworkFeesInfo\": {\n    \"message\": \"This is an estimate of the network fee that will be used to complete your swap. The actual amount may change according to network conditions.\"\n  },\n  \"swapFailedErrorDescriptionWithSupportLink\": {\n    \"message\": \"Transaction failures happen and we are here to help. If this issue persists, you can reach our customer support at $1 for further assistance.\",\n    \"description\": \"This message is shown to a user if their swap fails. The $1 will be replaced by support.metamask.io\"\n  },\n  \"swapFailedErrorTitle\": {\n    \"message\": \"Swap failed\"\n  },\n  \"swapFetchingQuote\": {\n    \"message\": \"Fetching quote\"\n  },\n  \"swapFetchingQuoteNofN\": {\n    \"message\": \"Fetching quote $1 of $2\",\n    \"description\": \"A count of possible quotes shown to the user while they are waiting for quotes to be fetched. $1 is the number of quotes already loaded, and $2 is the total number of resources that we check for quotes. Keep in mind that not all resources will have a quote for a particular swap.\"\n  },\n  \"swapFetchingQuotes\": {\n    \"message\": \"Fetching quotes...\"\n  },\n  \"swapFetchingQuotesErrorDescription\": {\n    \"message\": \"Hmmm... something went wrong. Try again, or if errors persist, contact customer support.\"\n  },\n  \"swapFetchingQuotesErrorTitle\": {\n    \"message\": \"Error fetching quotes\"\n  },\n  \"swapFetchingTokens\": {\n    \"message\": \"Fetching tokens...\"\n  },\n  \"swapFromTo\": {\n    \"message\": \"The swap of $1 to $2\",\n    \"description\": \"Tells a user that they need to confirm on their hardware wallet a swap of 2 tokens. $1 is a source token and $2 is a destination token\"\n  },\n  \"swapGasFeesDetails\": {\n    \"message\": \"Gas fees are estimated and will fluctuate based on network traffic and transaction complexity.\"\n  },\n  \"swapGasFeesExplanation\": {\n    \"message\": \"MetaMask doesn't make money from gas fees. These fees are estimates and can change based on how busy the network is and how complex a transaction is. Learn more $1.\",\n    \"description\": \"$1 is a link (text in link can be found at 'swapGasFeesSummaryLinkText')\"\n  },\n  \"swapGasFeesExplanationLinkText\": {\n    \"message\": \"here\",\n    \"description\": \"Text for link in swapGasFeesExplanation\"\n  },\n  \"swapGasFeesLearnMore\": {\n    \"message\": \"Learn more about gas fees\"\n  },\n  \"swapGasFeesSplit\": {\n    \"message\": \"Gas fees on the previous screen are split between these two transactions.\"\n  },\n  \"swapGasFeesSummary\": {\n    \"message\": \"Gas fees are paid to crypto miners who process transactions on the $1 network. MetaMask does not profit from gas fees.\",\n    \"description\": \"$1 is the selected network, e.g. Ethereum or BSC\"\n  },\n  \"swapHighSlippage\": {\n    \"message\": \"High slippage\"\n  },\n  \"swapHighSlippageWarning\": {\n    \"message\": \"Slippage amount is very high.\"\n  },\n  \"swapIncludesMMFee\": {\n    \"message\": \"Includes a $1% MetaMask fee.\",\n    \"description\": \"Provides information about the fee that metamask takes for swaps. $1 is a decimal number.\"\n  },\n  \"swapIncludesMMFeeAlt\": {\n    \"message\": \"Quote reflects $1% MetaMask fee\",\n    \"description\": \"Provides information about the fee that metamask takes for swaps using the latest copy. $1 is a decimal number.\"\n  },\n  \"swapIncludesMetaMaskFeeViewAllQuotes\": {\n    \"message\": \"Includes a $1% MetaMask fee – $2\",\n    \"description\": \"Provides information about the fee that metamask takes for swaps. $1 is a decimal number and $2 is a link to view all quotes.\"\n  },\n  \"swapLearnMore\": {\n    \"message\": \"Learn more about Swaps\"\n  },\n  \"swapLiquiditySourceInfo\": {\n    \"message\": \"We search multiple liquidity sources (exchanges, aggregators and professional market makers) to compare exchange rates and network fees.\"\n  },\n  \"swapLowSlippage\": {\n    \"message\": \"Low slippage\"\n  },\n  \"swapLowSlippageError\": {\n    \"message\": \"Transaction may fail, max slippage too low.\"\n  },\n  \"swapMaxSlippage\": {\n    \"message\": \"Max slippage\"\n  },\n  \"swapMetaMaskFee\": {\n    \"message\": \"MetaMask fee\"\n  },\n  \"swapMetaMaskFeeDescription\": {\n    \"message\": \"The fee of $1% is automatically factored into this quote. You pay it in exchange for a license to use MetaMask's liquidity provider information aggregation software.\",\n    \"description\": \"Provides information about the fee that metamask takes for swaps. $1 is a decimal number.\"\n  },\n  \"swapNQuotesWithDot\": {\n    \"message\": \"$1 quotes.\",\n    \"description\": \"$1 is the number of quotes that the user can select from when opening the list of quotes on the 'view quote' screen\"\n  },\n  \"swapNewQuoteIn\": {\n    \"message\": \"New quotes in $1\",\n    \"description\": \"Tells the user the amount of time until the currently displayed quotes are update. $1 is a time that is counting down from 1:00 to 0:00\"\n  },\n  \"swapNoTokensAvailable\": {\n    \"message\": \"No tokens available matching $1\",\n    \"description\": \"Tells the user that a given search string does not match any tokens in our token lists. $1 can be any string of text\"\n  },\n  \"swapOnceTransactionHasProcess\": {\n    \"message\": \"Your $1 will be added to your account once this transaction has processed.\",\n    \"description\": \"This message communicates the token that is being transferred. It is shown on the awaiting swap screen. The $1 will be a token symbol.\"\n  },\n  \"swapPriceDifference\": {\n    \"message\": \"You are about to swap $1 $2 (~$3) for $4 $5 (~$6).\",\n    \"description\": \"This message represents the price slippage for the swap.  $1 and $4 are a number (ex: 2.89), $2 and $5 are symbols (ex: ETH), and $3 and $6 are fiat currency amounts.\"\n  },\n  \"swapPriceDifferenceTitle\": {\n    \"message\": \"Price difference of ~$1%\",\n    \"description\": \"$1 is a number (ex: 1.23) that represents the price difference.\"\n  },\n  \"swapPriceImpactTooltip\": {\n    \"message\": \"Price impact is the difference between the current market price and the amount received during transaction execution. Price impact is a function of the size of your trade relative to the size of the liquidity pool.\"\n  },\n  \"swapPriceUnavailableDescription\": {\n    \"message\": \"Price impact could not be determined due to lack of market price data. Please confirm that you are comfortable with the amount of tokens you are about to receive before swapping.\"\n  },\n  \"swapPriceUnavailableTitle\": {\n    \"message\": \"Check your rate before proceeding\"\n  },\n  \"swapProcessing\": {\n    \"message\": \"Processing\"\n  },\n  \"swapQuoteDetails\": {\n    \"message\": \"Quote details\"\n  },\n  \"swapQuoteNofM\": {\n    \"message\": \"$1 of $2\",\n    \"description\": \"A count of possible quotes shown to the user while they are waiting for quotes to be fetched. $1 is the number of quotes already loaded, and $2 is the total number of resources that we check for quotes. Keep in mind that not all resources will have a quote for a particular swap.\"\n  },\n  \"swapQuoteSource\": {\n    \"message\": \"Quote source\"\n  },\n  \"swapQuotesExpiredErrorDescription\": {\n    \"message\": \"Please request new quotes to get the latest rates.\"\n  },\n  \"swapQuotesExpiredErrorTitle\": {\n    \"message\": \"Quotes timeout\"\n  },\n  \"swapQuotesNotAvailableDescription\": {\n    \"message\": \"Reduce the size of your trade or use a different token.\"\n  },\n  \"swapQuotesNotAvailableErrorDescription\": {\n    \"message\": \"Try adjusting the amount or slippage settings and try again.\"\n  },\n  \"swapQuotesNotAvailableErrorTitle\": {\n    \"message\": \"No quotes available\"\n  },\n  \"swapRate\": {\n    \"message\": \"Rate\"\n  },\n  \"swapReceiving\": {\n    \"message\": \"Receiving\"\n  },\n  \"swapReceivingInfoTooltip\": {\n    \"message\": \"This is an estimate. The exact amount depends on slippage.\"\n  },\n  \"swapRequestForQuotation\": {\n    \"message\": \"Request for quotation\"\n  },\n  \"swapReviewSwap\": {\n    \"message\": \"Review swap\"\n  },\n  \"swapSearchNameOrAddress\": {\n    \"message\": \"Search name or paste address\"\n  },\n  \"swapSelect\": {\n    \"message\": \"Select\"\n  },\n  \"swapSelectAQuote\": {\n    \"message\": \"Select a quote\"\n  },\n  \"swapSelectAToken\": {\n    \"message\": \"Select token\"\n  },\n  \"swapSelectQuotePopoverDescription\": {\n    \"message\": \"Below are all the quotes gathered from multiple liquidity sources.\"\n  },\n  \"swapSelectToken\": {\n    \"message\": \"Select token\"\n  },\n  \"swapShowLatestQuotes\": {\n    \"message\": \"Show latest quotes\"\n  },\n  \"swapSlippageHighDescription\": {\n    \"message\": \"The slippage entered ($1%) is considered very high and may result in a bad rate\",\n    \"description\": \"$1 is the amount of % for slippage\"\n  },\n  \"swapSlippageHighTitle\": {\n    \"message\": \"High slippage\"\n  },\n  \"swapSlippageLowDescription\": {\n    \"message\": \"A value this low ($1%) may result in a failed swap\",\n    \"description\": \"$1 is the amount of % for slippage\"\n  },\n  \"swapSlippageLowTitle\": {\n    \"message\": \"Low slippage\"\n  },\n  \"swapSlippageNegative\": {\n    \"message\": \"Slippage must be greater or equal to zero\"\n  },\n  \"swapSlippageNegativeDescription\": {\n    \"message\": \"Slippage must be greater or equal to zero\"\n  },\n  \"swapSlippageNegativeTitle\": {\n    \"message\": \"Increase slippage to continue\"\n  },\n  \"swapSlippageOverLimitDescription\": {\n    \"message\": \"Slippage tolerance must be 15% or less. Anything higher will result in a bad rate.\"\n  },\n  \"swapSlippageOverLimitTitle\": {\n    \"message\": \"Very high slippage\"\n  },\n  \"swapSlippagePercent\": {\n    \"message\": \"$1%\",\n    \"description\": \"$1 is the amount of % for slippage\"\n  },\n  \"swapSlippageTooltip\": {\n    \"message\": \"If the price changes between the time your order is placed and confirmed it’s called “slippage”. Your swap will automatically cancel if slippage exceeds your “slippage tolerance” setting.\"\n  },\n  \"swapSlippageZeroDescription\": {\n    \"message\": \"There are fewer zero-slippage quote providers which will result in a less competitive quote.\"\n  },\n  \"swapSlippageZeroTitle\": {\n    \"message\": \"Sourcing zero-slippage providers\"\n  },\n  \"swapSource\": {\n    \"message\": \"Liquidity source\"\n  },\n  \"swapSuggested\": {\n    \"message\": \"Swap suggested\"\n  },\n  \"swapSuggestedGasSettingToolTipMessage\": {\n    \"message\": \"Swaps are complex and time sensitive transactions. We recommend this gas fee for a good balance between cost and confidence of a successful Swap.\"\n  },\n  \"swapSwapFrom\": {\n    \"message\": \"Swap from\"\n  },\n  \"swapSwapSwitch\": {\n    \"message\": \"Switch token order\"\n  },\n  \"swapSwapTo\": {\n    \"message\": \"Swap to\"\n  },\n  \"swapToConfirmWithHwWallet\": {\n    \"message\": \"to confirm with your hardware wallet\"\n  },\n  \"swapTokenAddedManuallyDescription\": {\n    \"message\": \"Verify this token on $1 and make sure it is the token you want to trade.\",\n    \"description\": \"$1 points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for \\\"etherscan\\\"\"\n  },\n  \"swapTokenAddedManuallyTitle\": {\n    \"message\": \"Token added manually\"\n  },\n  \"swapTokenAvailable\": {\n    \"message\": \"Your $1 has been added to your account.\",\n    \"description\": \"This message is shown after a swap is successful and communicates the exact amount of tokens the user has received for a swap. The $1 is a decimal number of tokens followed by the token symbol.\"\n  },\n  \"swapTokenBalanceUnavailable\": {\n    \"message\": \"We were unable to retrieve your $1 balance\",\n    \"description\": \"This message communicates to the user that their balance of a given token is currently unavailable. $1 will be replaced by a token symbol\"\n  },\n  \"swapTokenNotAvailable\": {\n    \"message\": \"Token is not available to swap in this region\"\n  },\n  \"swapTokenToToken\": {\n    \"message\": \"Swap $1 to $2\",\n    \"description\": \"Used in the transaction display list to describe a swap. $1 and $2 are the symbols of tokens in involved in a swap.\"\n  },\n  \"swapTokenVerificationAddedManually\": {\n    \"message\": \"This token has been added manually.\"\n  },\n  \"swapTokenVerificationMessage\": {\n    \"message\": \"Always confirm the token address on $1.\",\n    \"description\": \"Points the user to Etherscan as a place they can verify information about a token. $1 is replaced with the translation for \\\"Etherscan\\\" followed by an info icon that shows more info on hover.\"\n  },\n  \"swapTokenVerificationOnlyOneSource\": {\n    \"message\": \"Only verified on 1 source.\"\n  },\n  \"swapTokenVerificationSources\": {\n    \"message\": \"Verified on $1 sources.\",\n    \"description\": \"Indicates the number of token information sources that recognize the symbol + address. $1 is a decimal number.\"\n  },\n  \"swapTokenVerifiedOn1SourceDescription\": {\n    \"message\": \"$1 is only verified on 1 source. Consider verifying it on $2 before proceeding.\",\n    \"description\": \"$1 is a token name, $2 points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for \\\"etherscan\\\"\"\n  },\n  \"swapTokenVerifiedOn1SourceTitle\": {\n    \"message\": \"Potentially inauthentic token\"\n  },\n  \"swapTooManyDecimalsError\": {\n    \"message\": \"$1 allows up to $2 decimals\",\n    \"description\": \"$1 is a token symbol and $2 is the max. number of decimals allowed for the token\"\n  },\n  \"swapTransactionComplete\": {\n    \"message\": \"Transaction complete\"\n  },\n  \"swapTwoTransactions\": {\n    \"message\": \"2 transactions\"\n  },\n  \"swapUnknown\": {\n    \"message\": \"Unknown\"\n  },\n  \"swapVerifyTokenExplanation\": {\n    \"message\": \"Multiple tokens can use the same name and symbol. Check $1 to verify this is the token you're looking for.\",\n    \"description\": \"This appears in a tooltip next to the verifyThisTokenOn message. It gives the user more information about why they should check the token on a block explorer. $1 will be the name or url of the block explorer, which will be the translation of 'etherscan' or a block explorer url specified for a custom network.\"\n  },\n  \"swapYourTokenBalance\": {\n    \"message\": \"$1 $2 available to swap\",\n    \"description\": \"Tells the user how much of a token they have in their balance. $1 is a decimal number amount of tokens, and $2 is a token symbol\"\n  },\n  \"swapZeroSlippage\": {\n    \"message\": \"0% Slippage\"\n  },\n  \"swapsAdvancedOptions\": {\n    \"message\": \"Advanced options\"\n  },\n  \"swapsExcessiveSlippageWarning\": {\n    \"message\": \"Slippage amount is too high and will result in a bad rate. Please reduce your slippage tolerance to a value below 15%.\"\n  },\n  \"swapsMaxSlippage\": {\n    \"message\": \"Slippage tolerance\"\n  },\n  \"swapsNotEnoughForTx\": {\n    \"message\": \"Not enough $1 to complete this transaction\",\n    \"description\": \"Tells the user that they don't have enough of a token for a proposed swap. $1 is a token symbol\"\n  },\n  \"swapsNotEnoughToken\": {\n    \"message\": \"Not enough $1\",\n    \"description\": \"Tells the user that they don't have enough of a token for a proposed swap. $1 is a token symbol\"\n  },\n  \"swapsViewInActivity\": {\n    \"message\": \"View in activity\"\n  },\n  \"switch\": {\n    \"message\": \"Switch\"\n  },\n  \"switchEthereumChainConfirmationDescription\": {\n    \"message\": \"This will switch the selected network within MetaMask to a previously added network:\"\n  },\n  \"switchEthereumChainConfirmationTitle\": {\n    \"message\": \"Allow this site to switch the network?\"\n  },\n  \"switchInputCurrency\": {\n    \"message\": \"Switch input currency\"\n  },\n  \"switchNetwork\": {\n    \"message\": \"Switch network\"\n  },\n  \"switchNetworks\": {\n    \"message\": \"Switch networks\"\n  },\n  \"switchToNetwork\": {\n    \"message\": \"Switch to $1\",\n    \"description\": \"$1 represents the custom network that has previously been added\"\n  },\n  \"switchToThisAccount\": {\n    \"message\": \"Switch to this account\"\n  },\n  \"switchedNetworkToastDecline\": {\n    \"message\": \"Don't show again\"\n  },\n  \"switchedNetworkToastMessage\": {\n    \"message\": \"$1 is now active on $2\",\n    \"description\": \"$1 represents the account name, $2 represents the network name\"\n  },\n  \"switchedTo\": {\n    \"message\": \"You're now using\"\n  },\n  \"switchingNetworksCancelsPendingConfirmations\": {\n    \"message\": \"Switching networks will cancel all pending confirmations\"\n  },\n  \"symbol\": {\n    \"message\": \"Symbol\"\n  },\n  \"symbolBetweenZeroTwelve\": {\n    \"message\": \"Symbol must be 11 characters or fewer.\"\n  },\n  \"tenPercentIncreased\": {\n    \"message\": \"10% increase\"\n  },\n  \"terms\": {\n    \"message\": \"Terms of use\"\n  },\n  \"termsOfService\": {\n    \"message\": \"Terms of service\"\n  },\n  \"termsOfUseAgreeText\": {\n    \"message\": \" I agree to the Terms of Use, which apply to my use of MetaMask and all of its features\"\n  },\n  \"termsOfUseFooterText\": {\n    \"message\": \"Please scroll to read all sections\"\n  },\n  \"termsOfUseTitle\": {\n    \"message\": \"Our Terms of Use have updated\"\n  },\n  \"testnets\": {\n    \"message\": \"Testnets\"\n  },\n  \"theme\": {\n    \"message\": \"Theme\"\n  },\n  \"themeDescription\": {\n    \"message\": \"Choose your preferred MetaMask theme.\"\n  },\n  \"thingsToKeep\": {\n    \"message\": \"Keep in mind:\"\n  },\n  \"thirdPartySoftware\": {\n    \"message\": \"Third-party software notice\",\n    \"description\": \"Title of a popup modal displayed when installing a snap for the first time.\"\n  },\n  \"thisCollection\": {\n    \"message\": \"this collection\"\n  },\n  \"threeMonthsAbbreviation\": {\n    \"message\": \"3M\",\n    \"description\": \"Shortened form of '3 months'\"\n  },\n  \"time\": {\n    \"message\": \"Time\"\n  },\n  \"tips\": {\n    \"message\": \"Tips\"\n  },\n  \"to\": {\n    \"message\": \"To\"\n  },\n  \"toAddress\": {\n    \"message\": \"To: $1\",\n    \"description\": \"$1 is the address to include in the To label. It is typically shortened first using shortenAddress\"\n  },\n  \"toggleRequestQueueDescription\": {\n    \"message\": \"This allows you to select a network for each site instead of a single selected network for all sites. This feature will prevent you from switching networks manually, which may break your user experience on certain sites.\"\n  },\n  \"toggleRequestQueueField\": {\n    \"message\": \"Select networks for each site\"\n  },\n  \"toggleRequestQueueOff\": {\n    \"message\": \"Off\"\n  },\n  \"toggleRequestQueueOn\": {\n    \"message\": \"On\"\n  },\n  \"token\": {\n    \"message\": \"Token\"\n  },\n  \"tokenAddress\": {\n    \"message\": \"Token address\"\n  },\n  \"tokenAlreadyAdded\": {\n    \"message\": \"Token has already been added.\"\n  },\n  \"tokenAutoDetection\": {\n    \"message\": \"Token autodetection\"\n  },\n  \"tokenContractAddress\": {\n    \"message\": \"Token contract address\"\n  },\n  \"tokenDecimal\": {\n    \"message\": \"Token decimal\"\n  },\n  \"tokenDecimalFetchFailed\": {\n    \"message\": \"Token decimal required. Find it on: $1\"\n  },\n  \"tokenDecimalTitle\": {\n    \"message\": \"Token decimal:\"\n  },\n  \"tokenDetails\": {\n    \"message\": \"Token details\"\n  },\n  \"tokenFoundTitle\": {\n    \"message\": \"1 new token found\"\n  },\n  \"tokenId\": {\n    \"message\": \"Token ID\"\n  },\n  \"tokenList\": {\n    \"message\": \"Token lists\"\n  },\n  \"tokenScamSecurityRisk\": {\n    \"message\": \"token scams and security risks\"\n  },\n  \"tokenShowUp\": {\n    \"message\": \"Your tokens may not automatically show up in your wallet. \"\n  },\n  \"tokenStandard\": {\n    \"message\": \"Token standard\"\n  },\n  \"tokenSymbol\": {\n    \"message\": \"Token symbol\"\n  },\n  \"tokens\": {\n    \"message\": \"Tokens\"\n  },\n  \"tokensFoundTitle\": {\n    \"message\": \"$1 new tokens found\",\n    \"description\": \"$1 is the number of new tokens detected\"\n  },\n  \"tokensInCollection\": {\n    \"message\": \"Tokens in collection\"\n  },\n  \"tooltipApproveButton\": {\n    \"message\": \"I understand\"\n  },\n  \"tooltipSatusConnected\": {\n    \"message\": \"connected\"\n  },\n  \"tooltipSatusConnectedUpperCase\": {\n    \"message\": \"Connected\"\n  },\n  \"tooltipSatusNotConnected\": {\n    \"message\": \"not connected\"\n  },\n  \"total\": {\n    \"message\": \"Total\"\n  },\n  \"totalVolume\": {\n    \"message\": \"Total volume\"\n  },\n  \"transaction\": {\n    \"message\": \"transaction\"\n  },\n  \"transactionCancelAttempted\": {\n    \"message\": \"Transaction cancel attempted with estimated gas fee of $1 at $2\"\n  },\n  \"transactionCancelSuccess\": {\n    \"message\": \"Transaction successfully cancelled at $2\"\n  },\n  \"transactionConfirmed\": {\n    \"message\": \"Transaction confirmed at $2.\"\n  },\n  \"transactionCreated\": {\n    \"message\": \"Transaction created with a value of $1 at $2.\"\n  },\n  \"transactionDataFunction\": {\n    \"message\": \"Function\"\n  },\n  \"transactionDetailDappGasMoreInfo\": {\n    \"message\": \"Site suggested\"\n  },\n  \"transactionDetailDappGasTooltip\": {\n    \"message\": \"Edit to use MetaMask's recommended gas fee based on the latest block.\"\n  },\n  \"transactionDetailGasHeading\": {\n    \"message\": \"Estimated gas fee\"\n  },\n  \"transactionDetailGasTooltipConversion\": {\n    \"message\": \"Learn more about gas fees\"\n  },\n  \"transactionDetailGasTooltipExplanation\": {\n    \"message\": \"Gas fees are set by the network and fluctuate based on network traffic and transaction complexity.\"\n  },\n  \"transactionDetailGasTooltipIntro\": {\n    \"message\": \"Gas fees are paid to crypto miners who process transactions on the $1 network. MetaMask does not profit from gas fees.\"\n  },\n  \"transactionDetailGasTotalSubtitle\": {\n    \"message\": \"Amount + gas fee\"\n  },\n  \"transactionDetailLayer2GasHeading\": {\n    \"message\": \"Layer 2 gas fee\"\n  },\n  \"transactionDetailMultiLayerTotalSubtitle\": {\n    \"message\": \"Amount + fees\"\n  },\n  \"transactionDropped\": {\n    \"message\": \"Transaction dropped at $2.\"\n  },\n  \"transactionError\": {\n    \"message\": \"Transaction error. Exception thrown in contract code.\"\n  },\n  \"transactionErrorNoContract\": {\n    \"message\": \"Trying to call a function on a non-contract address.\"\n  },\n  \"transactionErrored\": {\n    \"message\": \"Transaction encountered an error.\"\n  },\n  \"transactionFailed\": {\n    \"message\": \"Transaction Failed\"\n  },\n  \"transactionFee\": {\n    \"message\": \"Transaction fee\"\n  },\n  \"transactionHistoryBaseFee\": {\n    \"message\": \"Base fee (GWEI)\"\n  },\n  \"transactionHistoryL1GasLabel\": {\n    \"message\": \"Total L1 gas fee\"\n  },\n  \"transactionHistoryL2GasLimitLabel\": {\n    \"message\": \"L2 gas limit\"\n  },\n  \"transactionHistoryL2GasPriceLabel\": {\n    \"message\": \"L2 gas price\"\n  },\n  \"transactionHistoryMaxFeePerGas\": {\n    \"message\": \"Max fee per gas\"\n  },\n  \"transactionHistoryPriorityFee\": {\n    \"message\": \"Priority fee (GWEI)\"\n  },\n  \"transactionHistoryTotalGasFee\": {\n    \"message\": \"Total gas fee\"\n  },\n  \"transactionNote\": {\n    \"message\": \"Transaction note\"\n  },\n  \"transactionResubmitted\": {\n    \"message\": \"Transaction resubmitted with estimated gas fee increased to $1 at $2\"\n  },\n  \"transactionSettings\": {\n    \"message\": \"Transaction settings\"\n  },\n  \"transactionSubmitted\": {\n    \"message\": \"Transaction submitted with estimated gas fee of $1 at $2.\"\n  },\n  \"transactionUpdated\": {\n    \"message\": \"Transaction updated at $2.\"\n  },\n  \"transactions\": {\n    \"message\": \"Transactions\"\n  },\n  \"transfer\": {\n    \"message\": \"Transfer\"\n  },\n  \"transferCrypto\": {\n    \"message\": \"Transfer crypto\"\n  },\n  \"transferFrom\": {\n    \"message\": \"Transfer from\"\n  },\n  \"trillionAbbreviation\": {\n    \"message\": \"T\",\n    \"description\": \"Shortened form of 'trillion'\"\n  },\n  \"troubleConnectingToLedgerU2FOnFirefox\": {\n    \"message\": \"We're having trouble connecting your Ledger. $1\",\n    \"description\": \"$1 is a link to the wallet connection guide;\"\n  },\n  \"troubleConnectingToLedgerU2FOnFirefox2\": {\n    \"message\": \"Review our hardware wallet connection guide and try again.\",\n    \"description\": \"$1 of the ledger wallet connection guide\"\n  },\n  \"troubleConnectingToLedgerU2FOnFirefoxLedgerSolution\": {\n    \"message\": \"If you're on the latest version of Firefox, you might be experiencing an issue related to Firefox dropping U2F support. Learn how to fix this issue $1.\",\n    \"description\": \"It is a link to the ledger website for the workaround.\"\n  },\n  \"troubleConnectingToLedgerU2FOnFirefoxLedgerSolution2\": {\n    \"message\": \"here\",\n    \"description\": \"Second part of the error message; It is a link to the ledger website for the workaround.\"\n  },\n  \"troubleConnectingToWallet\": {\n    \"message\": \"We had trouble connecting to your $1, try reviewing $2 and try again.\",\n    \"description\": \"$1 is the wallet device name; $2 is a link to wallet connection guide\"\n  },\n  \"troubleStarting\": {\n    \"message\": \"MetaMask had trouble starting. This error could be intermittent, so try restarting the extension.\"\n  },\n  \"trustSiteApprovePermission\": {\n    \"message\": \"By granting permission, you are allowing the following $1 to access your funds\"\n  },\n  \"tryAgain\": {\n    \"message\": \"Try again\"\n  },\n  \"turnOff\": {\n    \"message\": \"Turn off\"\n  },\n  \"turnOffMetamaskNotificationsError\": {\n    \"message\": \"There was an error in disabling the notifications. Please try again later.\"\n  },\n  \"turnOn\": {\n    \"message\": \"Turn on\"\n  },\n  \"turnOnMetamaskNotifications\": {\n    \"message\": \"Turn on notifications\"\n  },\n  \"turnOnMetamaskNotificationsButton\": {\n    \"message\": \"Turn on\"\n  },\n  \"turnOnMetamaskNotificationsError\": {\n    \"message\": \"There was an error in creating the notifications. Please try again later.\"\n  },\n  \"turnOnMetamaskNotificationsMessageFirst\": {\n    \"message\": \"Stay in the loop on what's happening in your wallet with notifications.\"\n  },\n  \"turnOnMetamaskNotificationsMessagePrivacyBold\": {\n    \"message\": \"notifications settings.\"\n  },\n  \"turnOnMetamaskNotificationsMessagePrivacyLink\": {\n    \"message\": \"Learn how we protect your privacy while using this feature.\"\n  },\n  \"turnOnMetamaskNotificationsMessageSecond\": {\n    \"message\": \"To use wallet notifications, we use a profile to sync some settings across your devices. $1\"\n  },\n  \"turnOnMetamaskNotificationsMessageThird\": {\n    \"message\": \"You can turn off notifications at any time in the $1\"\n  },\n  \"turnOnTokenDetection\": {\n    \"message\": \"Turn on enhanced token detection\"\n  },\n  \"tutorial\": {\n    \"message\": \"Tutorial\"\n  },\n  \"twelveHrTitle\": {\n    \"message\": \"12hr:\"\n  },\n  \"typeYourSRP\": {\n    \"message\": \"Type your Secret Recovery Phrase\"\n  },\n  \"u2f\": {\n    \"message\": \"U2F\",\n    \"description\": \"A name on an API for the browser to interact with devices that support the U2F protocol. On some browsers we use it to connect MetaMask to Ledger devices.\"\n  },\n  \"unapproved\": {\n    \"message\": \"Unapproved\"\n  },\n  \"units\": {\n    \"message\": \"units\"\n  },\n  \"unknown\": {\n    \"message\": \"Unknown\"\n  },\n  \"unknownChainWarning\": {\n    \"message\": \"We can’t verify custom networks. To avoid malicious providers from recording your network activity, only add networks you trust.\"\n  },\n  \"unknownCollection\": {\n    \"message\": \"Unnamed collection\"\n  },\n  \"unknownNetwork\": {\n    \"message\": \"Unknown private network\"\n  },\n  \"unknownNetworkForKeyEntropy\": {\n    \"message\": \"Unknown network\",\n    \"description\": \"Displayed on places like Snap install warning when regular name is not available.\"\n  },\n  \"unknownQrCode\": {\n    \"message\": \"Error: We couldn't identify that QR code\"\n  },\n  \"unlimited\": {\n    \"message\": \"Unlimited\"\n  },\n  \"unlock\": {\n    \"message\": \"Unlock\"\n  },\n  \"unlockMessage\": {\n    \"message\": \"The decentralized web awaits\"\n  },\n  \"unpin\": {\n    \"message\": \"Unpin\"\n  },\n  \"unrecognizedChain\": {\n    \"message\": \"This custom network is not recognized\",\n    \"description\": \"$1 is a clickable link with text defined by the 'unrecognizedChanLinkText' key. The link will open to instructions for users to validate custom network details.\"\n  },\n  \"unsendableAsset\": {\n    \"message\": \"Sending NFT (ERC-721) tokens is not currently supported\",\n    \"description\": \"This is an error message we show the user if they attempt to send an NFT asset type, for which currently don't support sending\"\n  },\n  \"unverifiedContractAddressMessage\": {\n    \"message\": \"We cannot verify this contract. Make sure you trust this address.\"\n  },\n  \"upArrow\": {\n    \"message\": \"up arrow\"\n  },\n  \"update\": {\n    \"message\": \"Update\"\n  },\n  \"updateEthereumChainConfirmationDescription\": {\n    \"message\": \"This site is requesting to update your default network URL. You can edit defaults and network information any time.\"\n  },\n  \"updateNetworkConfirmationTitle\": {\n    \"message\": \"Update $1\",\n    \"description\": \"$1 represents network name\"\n  },\n  \"updateOrEditNetworkInformations\": {\n    \"message\": \"Update your information or\"\n  },\n  \"updateRequest\": {\n    \"message\": \"Update request\"\n  },\n  \"updatedRpcForNetworks\": {\n    \"message\": \"Network RPCs Updated\"\n  },\n  \"updatedWithDate\": {\n    \"message\": \"Updated $1\"\n  },\n  \"uploadDropFile\": {\n    \"message\": \"Drop your file here\"\n  },\n  \"uploadFile\": {\n    \"message\": \"Upload file\"\n  },\n  \"urlErrorMsg\": {\n    \"message\": \"URLs require the appropriate HTTP/HTTPS prefix.\"\n  },\n  \"use4ByteResolution\": {\n    \"message\": \"Decode smart contracts\"\n  },\n  \"use4ByteResolutionDescription\": {\n    \"message\": \"To improve user experience, we customize the activity tab with messages based on the smart contracts you interact with. MetaMask uses a service called 4byte.directory to decode data and show you a version of a smart contract that's easier to read. This helps reduce your chances of approving malicious smart contract actions, but can result in your IP address being shared.\"\n  },\n  \"useMultiAccountBalanceChecker\": {\n    \"message\": \"Batch account balance requests\"\n  },\n  \"useMultiAccountBalanceCheckerSettingDescription\": {\n    \"message\": \"Get faster balance updates by batching account balance requests. This lets us fetch your account balances together, so you get quicker updates for an improved experience. When this feature is off, third parties may be less likely to associate your accounts with each other.\"\n  },\n  \"useNftDetection\": {\n    \"message\": \"Autodetect NFTs\"\n  },\n  \"useNftDetectionDescriptionText\": {\n    \"message\": \"Let MetaMask add NFTs you own using third-party services. Autodetecting NFTs exposes your IP and account address to these services. Enabling this feature could associate your IP address with your Ethereum address and display fake NFTs airdropped by scammers. You can add tokens manually to avoid this risk.\"\n  },\n  \"usePhishingDetection\": {\n    \"message\": \"Use phishing detection\"\n  },\n  \"usePhishingDetectionDescription\": {\n    \"message\": \"Display a warning for phishing domains targeting Ethereum users\"\n  },\n  \"useSafeChainsListValidation\": {\n    \"message\": \"Network details check\"\n  },\n  \"useSafeChainsListValidationDescription\": {\n    \"message\": \"MetaMask uses a third-party service called $1 to show accurate and standardized network details. This reduces your chances of connecting to malicious or incorrect network. When using this feature, your IP address is exposed to chainid.network.\"\n  },\n  \"useSafeChainsListValidationWebsite\": {\n    \"message\": \"chainid.network\",\n    \"description\": \"useSafeChainsListValidationWebsite is separated from the rest of the text so that we can bold the third party service name in the middle of them\"\n  },\n  \"useSiteSuggestion\": {\n    \"message\": \"Use site suggestion\"\n  },\n  \"useTokenDetectionPrivacyDesc\": {\n    \"message\": \"Automatically displaying tokens sent to your account involves communication with third party servers to fetch token’s images. Those serves will have access to your IP address.\"\n  },\n  \"usedByClients\": {\n    \"message\": \"Used by a variety of different clients\"\n  },\n  \"userName\": {\n    \"message\": \"Username\"\n  },\n  \"userOpContractDeployError\": {\n    \"message\": \"Contract deployment from a smart contract account is not supported\"\n  },\n  \"verifyContractDetails\": {\n    \"message\": \"Verify third-party details\"\n  },\n  \"verifyThisTokenOn\": {\n    \"message\": \"Verify this token on $1\",\n    \"description\": \"Points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for \\\"etherscan\\\"\"\n  },\n  \"verifyThisUnconfirmedTokenOn\": {\n    \"message\": \"Verify this token on $1 and make sure this is the token you want to trade.\",\n    \"description\": \"Points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for \\\"etherscan\\\"\"\n  },\n  \"version\": {\n    \"message\": \"Version\"\n  },\n  \"view\": {\n    \"message\": \"View\"\n  },\n  \"viewActivity\": {\n    \"message\": \"View activity\"\n  },\n  \"viewAllDetails\": {\n    \"message\": \"View all details\"\n  },\n  \"viewAllQuotes\": {\n    \"message\": \"view all quotes\"\n  },\n  \"viewContact\": {\n    \"message\": \"View contact\"\n  },\n  \"viewDetails\": {\n    \"message\": \"View details\"\n  },\n  \"viewFullTransactionDetails\": {\n    \"message\": \"View full transaction details\"\n  },\n  \"viewMore\": {\n    \"message\": \"View more\"\n  },\n  \"viewOnBlockExplorer\": {\n    \"message\": \"View on block explorer\"\n  },\n  \"viewOnCustomBlockExplorer\": {\n    \"message\": \"View $1 at $2\",\n    \"description\": \"$1 is the action type. e.g (Account, Transaction, Swap) and $2 is the Custom Block Explorer URL\"\n  },\n  \"viewOnEtherscan\": {\n    \"message\": \"View $1 on Etherscan\",\n    \"description\": \"$1 is the action type. e.g (Account, Transaction, Swap)\"\n  },\n  \"viewOnExplorer\": {\n    \"message\": \"View on explorer\"\n  },\n  \"viewOnOpensea\": {\n    \"message\": \"View on Opensea\"\n  },\n  \"viewTransaction\": {\n    \"message\": \"View transaction\"\n  },\n  \"viewinCustodianApp\": {\n    \"message\": \"View in custodian app\"\n  },\n  \"viewinExplorer\": {\n    \"message\": \"View $1 in explorer\",\n    \"description\": \"$1 is the action type. e.g (Account, Transaction, Swap)\"\n  },\n  \"visitSite\": {\n    \"message\": \"Visit site\"\n  },\n  \"visitWebSite\": {\n    \"message\": \"Visit our website\"\n  },\n  \"wallet\": {\n    \"message\": \"Wallet\"\n  },\n  \"walletConnectionGuide\": {\n    \"message\": \"our hardware wallet connection guide\"\n  },\n  \"walletCreationSuccessDetail\": {\n    \"message\": \"You’ve successfully protected your wallet. Keep your Secret Recovery Phrase safe and secret -- it’s your responsibility!\"\n  },\n  \"walletCreationSuccessReminder1\": {\n    \"message\": \"MetaMask can’t recover your Secret Recovery Phrase.\"\n  },\n  \"walletCreationSuccessReminder2\": {\n    \"message\": \"MetaMask will never ask you for your Secret Recovery Phrase.\"\n  },\n  \"walletCreationSuccessReminder3\": {\n    \"message\": \"$1 with anyone or risk your funds being stolen\",\n    \"description\": \"$1 is separated as walletCreationSuccessReminder3BoldSection so that we can bold it\"\n  },\n  \"walletCreationSuccessReminder3BoldSection\": {\n    \"message\": \"Never share your Secret Recovery Phrase\",\n    \"description\": \"This string is localized separately from walletCreationSuccessReminder3 so that we can bold it\"\n  },\n  \"walletCreationSuccessTitle\": {\n    \"message\": \"Wallet creation successful\"\n  },\n  \"wantToAddThisNetwork\": {\n    \"message\": \"Want to add this network?\"\n  },\n  \"wantsToAddThisAsset\": {\n    \"message\": \"This allows the following asset to be added to your wallet.\"\n  },\n  \"warning\": {\n    \"message\": \"Warning\"\n  },\n  \"warningFromSnap\": {\n    \"message\": \"Warning from $1\",\n    \"description\": \"$1 represents the name of the snap\"\n  },\n  \"warningTooltipText\": {\n    \"message\": \"$1 The third party could spend your entire token balance without further notice or consent. Protect yourself by customizing a lower spending cap.\",\n    \"description\": \"$1 is a warning icon with text 'Be careful' in 'warning' colour\"\n  },\n  \"watchEthereumAccountsDescription\": {\n    \"message\": \"Turning this option on will give you the ability to watch Ethereum accounts via a public address or ENS name. For feedback on this Beta feature please complete this $1.\",\n    \"description\": \"$1 is the link to a product feedback form\"\n  },\n  \"watchEthereumAccountsToggle\": {\n    \"message\": \"Watch Ethereum Accounts (Beta)\"\n  },\n  \"weak\": {\n    \"message\": \"Weak\"\n  },\n  \"web3\": {\n    \"message\": \"Web3\"\n  },\n  \"web3ShimUsageNotification\": {\n    \"message\": \"We noticed that the current website tried to use the removed window.web3 API. If the site appears to be broken, please click $1 for more information.\",\n    \"description\": \"$1 is a clickable link.\"\n  },\n  \"webhid\": {\n    \"message\": \"WebHID\",\n    \"description\": \"Refers to a interface for connecting external devices to the browser. Used for connecting ledger to the browser. Read more here https://developer.mozilla.org/en-US/docs/Web/API/WebHID_API\"\n  },\n  \"websites\": {\n    \"message\": \"websites\",\n    \"description\": \"Used in the 'permission_rpc' message.\"\n  },\n  \"welcomeBack\": {\n    \"message\": \"Welcome back!\"\n  },\n  \"welcomeExploreDescription\": {\n    \"message\": \"Store, send and spend crypto currencies and assets.\"\n  },\n  \"welcomeExploreTitle\": {\n    \"message\": \"Explore decentralized apps\"\n  },\n  \"welcomeLoginDescription\": {\n    \"message\": \"Use your MetaMask to login to decentralized apps - no signup needed.\"\n  },\n  \"welcomeLoginTitle\": {\n    \"message\": \"Say hello to your wallet\"\n  },\n  \"welcomeToMetaMask\": {\n    \"message\": \"Let's get started\"\n  },\n  \"welcomeToMetaMaskIntro\": {\n    \"message\": \"Trusted by millions, MetaMask is a secure wallet making the world of web3 accessible to all.\"\n  },\n  \"whatsNew\": {\n    \"message\": \"What's new\",\n    \"description\": \"This is the title of a popup that gives users notifications about new features and updates to MetaMask.\"\n  },\n  \"whatsThis\": {\n    \"message\": \"What's this?\"\n  },\n  \"wrongNetworkName\": {\n    \"message\": \"According to our records, the network name may not correctly match this chain ID.\"\n  },\n  \"xOfYPending\": {\n    \"message\": \"$1 of $2 pending\",\n    \"description\": \"$1 and $2 are intended to be two numbers, where $2 is a total number of pending confirmations, and $1 is a count towards that total\"\n  },\n  \"yes\": {\n    \"message\": \"Yes\"\n  },\n  \"you\": {\n    \"message\": \"You\"\n  },\n  \"youNeedToAllowCameraAccess\": {\n    \"message\": \"You need to allow camera access to use this feature.\"\n  },\n  \"youSign\": {\n    \"message\": \"You are signing\"\n  },\n  \"yourAccounts\": {\n    \"message\": \"Your accounts\"\n  },\n  \"yourActivity\": {\n    \"message\": \"Your activity\"\n  },\n  \"yourBalance\": {\n    \"message\": \"Your balance\"\n  },\n  \"yourNFTmayBeAtRisk\": {\n    \"message\": \"Your NFT may be at risk\"\n  },\n  \"yourPrivateSeedPhrase\": {\n    \"message\": \"Your Secret Recovery Phrase\"\n  },\n  \"yourTransactionConfirmed\": {\n    \"message\": \"Transaction already confirmed\"\n  },\n  \"yourTransactionJustConfirmed\": {\n    \"message\": \"We weren't able to cancel your transaction before it was confirmed on the blockchain.\"\n  },\n  \"zeroGasPriceOnSpeedUpError\": {\n    \"message\": \"Zero gas price on speed up\"\n  }\n}\n","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/error-constants.ts\nvar errorCodes = {\n  rpc: {\n    invalidInput: -32e3,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    limitExceeded: -32005,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n    disconnected: 4900,\n    chainDisconnected: 4901\n  }\n};\nvar errorValues = {\n  \"-32700\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.\"\n  },\n  \"-32600\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"The JSON sent is not a valid Request object.\"\n  },\n  \"-32601\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"The method does not exist / is not available.\"\n  },\n  \"-32602\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Invalid method parameter(s).\"\n  },\n  \"-32603\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Internal JSON-RPC error.\"\n  },\n  \"-32000\": {\n    standard: \"EIP-1474\",\n    message: \"Invalid input.\"\n  },\n  \"-32001\": {\n    standard: \"EIP-1474\",\n    message: \"Resource not found.\"\n  },\n  \"-32002\": {\n    standard: \"EIP-1474\",\n    message: \"Resource unavailable.\"\n  },\n  \"-32003\": {\n    standard: \"EIP-1474\",\n    message: \"Transaction rejected.\"\n  },\n  \"-32004\": {\n    standard: \"EIP-1474\",\n    message: \"Method not supported.\"\n  },\n  \"-32005\": {\n    standard: \"EIP-1474\",\n    message: \"Request limit exceeded.\"\n  },\n  \"4001\": {\n    standard: \"EIP-1193\",\n    message: \"User rejected the request.\"\n  },\n  \"4100\": {\n    standard: \"EIP-1193\",\n    message: \"The requested account and/or method has not been authorized by the user.\"\n  },\n  \"4200\": {\n    standard: \"EIP-1193\",\n    message: \"The requested method is not supported by this Ethereum provider.\"\n  },\n  \"4900\": {\n    standard: \"EIP-1193\",\n    message: \"The provider is disconnected from all chains.\"\n  },\n  \"4901\": {\n    standard: \"EIP-1193\",\n    message: \"The provider is disconnected from the specified chain.\"\n  }\n};\n\n\n\n\nexports.errorCodes = errorCodes; exports.errorValues = errorValues;\n//# sourceMappingURL=chunk-FBHPY3A4.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }\n\n\nvar _chunkPV5NRPSSjs = require('./chunk-PV5NRPSS.js');\n\n\nvar _chunkXOYARAPPjs = require('./chunk-XOYARAPP.js');\n\n\nvar _chunkFBHPY3A4js = require('./chunk-FBHPY3A4.js');\n\n// src/errors.ts\nvar rpcErrors = {\n  /**\n   * Get a JSON RPC 2.0 Parse (-32700) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  parse: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.parse, arg),\n  /**\n   * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidRequest: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.invalidRequest, arg),\n  /**\n   * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidParams: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.invalidParams, arg),\n  /**\n   * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  methodNotFound: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.methodNotFound, arg),\n  /**\n   * Get a JSON RPC 2.0 Internal (-32603) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  internal: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.internal, arg),\n  /**\n   * Get a JSON RPC 2.0 Server error.\n   * Permits integer error codes in the [ -32099 <= -32005 ] range.\n   * Codes -32000 through -32004 are reserved by EIP-1474.\n   *\n   * @param opts - The error options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  server: (opts) => {\n    if (!opts || typeof opts !== \"object\" || Array.isArray(opts)) {\n      throw new Error(\n        \"Ethereum RPC Server errors must provide single object argument.\"\n      );\n    }\n    const { code } = opts;\n    if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n      throw new Error(\n        '\"code\" must be an integer such that: -32099 <= code <= -32005'\n      );\n    }\n    return getJsonRpcError(code, opts);\n  },\n  /**\n   * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidInput: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.invalidInput, arg),\n  /**\n   * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  resourceNotFound: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.resourceNotFound, arg),\n  /**\n   * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  resourceUnavailable: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.resourceUnavailable, arg),\n  /**\n   * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  transactionRejected: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.transactionRejected, arg),\n  /**\n   * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  methodNotSupported: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.methodNotSupported, arg),\n  /**\n   * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  limitExceeded: (arg) => getJsonRpcError(_chunkFBHPY3A4js.errorCodes.rpc.limitExceeded, arg)\n};\nvar providerErrors = {\n  /**\n   * Get an Ethereum Provider User Rejected Request (4001) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  userRejectedRequest: (arg) => {\n    return getEthProviderError(_chunkFBHPY3A4js.errorCodes.provider.userRejectedRequest, arg);\n  },\n  /**\n   * Get an Ethereum Provider Unauthorized (4100) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  unauthorized: (arg) => {\n    return getEthProviderError(_chunkFBHPY3A4js.errorCodes.provider.unauthorized, arg);\n  },\n  /**\n   * Get an Ethereum Provider Unsupported Method (4200) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  unsupportedMethod: (arg) => {\n    return getEthProviderError(_chunkFBHPY3A4js.errorCodes.provider.unsupportedMethod, arg);\n  },\n  /**\n   * Get an Ethereum Provider Not Connected (4900) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  disconnected: (arg) => {\n    return getEthProviderError(_chunkFBHPY3A4js.errorCodes.provider.disconnected, arg);\n  },\n  /**\n   * Get an Ethereum Provider Chain Not Connected (4901) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  chainDisconnected: (arg) => {\n    return getEthProviderError(_chunkFBHPY3A4js.errorCodes.provider.chainDisconnected, arg);\n  },\n  /**\n   * Get a custom Ethereum Provider error.\n   *\n   * @param opts - The error options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  custom: (opts) => {\n    if (!opts || typeof opts !== \"object\" || Array.isArray(opts)) {\n      throw new Error(\n        \"Ethereum Provider custom errors must provide single object argument.\"\n      );\n    }\n    const { code, message, data } = opts;\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string');\n    }\n    return new (0, _chunkPV5NRPSSjs.EthereumProviderError)(code, message, data);\n  }\n};\nfunction getJsonRpcError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new (0, _chunkPV5NRPSSjs.JsonRpcError)(code, _nullishCoalesce(message, () => ( _chunkXOYARAPPjs.getMessageFromCode.call(void 0, code))), data);\n}\nfunction getEthProviderError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new (0, _chunkPV5NRPSSjs.EthereumProviderError)(\n    code,\n    _nullishCoalesce(message, () => ( _chunkXOYARAPPjs.getMessageFromCode.call(void 0, code))),\n    data\n  );\n}\nfunction parseOpts(arg) {\n  if (arg) {\n    if (typeof arg === \"string\") {\n      return [arg];\n    } else if (typeof arg === \"object\" && !Array.isArray(arg)) {\n      const { message, data } = arg;\n      if (message && typeof message !== \"string\") {\n        throw new Error(\"Must specify string message.\");\n      }\n      return [_nullishCoalesce(message, () => ( void 0)), data];\n    }\n  }\n  return [];\n}\n\n\n\n\nexports.rpcErrors = rpcErrors; exports.providerErrors = providerErrors;\n//# sourceMappingURL=chunk-HJCBU6QB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\nvar _chunkXOYARAPPjs = require('./chunk-XOYARAPP.js');\n\n// src/classes.ts\nvar _utils = require('@metamask/utils');\nvar _fastsafestringify = require('fast-safe-stringify'); var _fastsafestringify2 = _interopRequireDefault(_fastsafestringify);\nvar JsonRpcError = class extends Error {\n  constructor(code, message, data) {\n    var __super = (...args) => {\n      super(...args);\n    };\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a non-empty string.');\n    }\n    if (_chunkXOYARAPPjs.dataHasCause.call(void 0, data)) {\n      __super(message, { cause: data.cause });\n      if (!_utils.hasProperty.call(void 0, this, \"cause\")) {\n        Object.assign(this, { cause: data.cause });\n      }\n    } else {\n      __super(message);\n    }\n    if (data !== void 0) {\n      this.data = data;\n    }\n    this.code = code;\n  }\n  /**\n   * Get the error as JSON-serializable object.\n   *\n   * @returns A plain object with all public class properties.\n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message\n    };\n    if (this.data !== void 0) {\n      serialized.data = this.data;\n      if (_utils.isPlainObject.call(void 0, this.data)) {\n        serialized.data.cause = _chunkXOYARAPPjs.serializeCause.call(void 0, this.data.cause);\n      }\n    }\n    if (this.stack) {\n      serialized.stack = this.stack;\n    }\n    return serialized;\n  }\n  /**\n   * Get a string representation of the serialized error, omitting any circular\n   * references.\n   *\n   * @returns A string representation of the serialized error.\n   */\n  toString() {\n    return _fastsafestringify2.default.call(void 0, this.serialize(), stringifyReplacer, 2);\n  }\n};\nvar EthereumProviderError = class extends JsonRpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   *\n   * @param code - The JSON-RPC error code. Must be an integer in the\n   * `1000 <= n <= 4999` range.\n   * @param message - The JSON-RPC error message.\n   * @param data - Optional data to include in the error.\n   */\n  constructor(code, message, data) {\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      );\n    }\n    super(code, message, data);\n  }\n};\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1e3 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n  if (value === \"[Circular]\") {\n    return void 0;\n  }\n  return value;\n}\n\n\n\n\nexports.JsonRpcError = JsonRpcError; exports.EthereumProviderError = EthereumProviderError;\n//# sourceMappingURL=chunk-PV5NRPSS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkFBHPY3A4js = require('./chunk-FBHPY3A4.js');\n\n// src/utils.ts\n\n\n\n\n\nvar _utils = require('@metamask/utils');\nvar FALLBACK_ERROR_CODE = _chunkFBHPY3A4js.errorCodes.rpc.internal;\nvar FALLBACK_MESSAGE = \"Unspecified error message. This is a bug, please report it.\";\nvar FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n};\nvar JSON_RPC_SERVER_ERROR_MESSAGE = \"Unspecified server error.\";\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n  if (isValidCode(code)) {\n    const codeString = code.toString();\n    if (_utils.hasProperty.call(void 0, _chunkFBHPY3A4js.errorValues, codeString)) {\n      return _chunkFBHPY3A4js.errorValues[codeString].message;\n    }\n    if (isJsonRpcServerError(code)) {\n      return JSON_RPC_SERVER_ERROR_MESSAGE;\n    }\n  }\n  return fallbackMessage;\n}\nfunction isValidCode(code) {\n  return Number.isInteger(code);\n}\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = true } = {}) {\n  if (!_utils.isJsonRpcError.call(void 0, fallbackError)) {\n    throw new Error(\n      \"Must provide fallback error with integer number code and string message.\"\n    );\n  }\n  const serialized = buildError(error, fallbackError);\n  if (!shouldIncludeStack) {\n    delete serialized.stack;\n  }\n  return serialized;\n}\nfunction buildError(error, fallbackError) {\n  if (error && typeof error === \"object\" && \"serialize\" in error && typeof error.serialize === \"function\") {\n    return error.serialize();\n  }\n  if (_utils.isJsonRpcError.call(void 0, error)) {\n    return error;\n  }\n  const cause = serializeCause(error);\n  const fallbackWithCause = {\n    ...fallbackError,\n    data: { cause }\n  };\n  return fallbackWithCause;\n}\nfunction isJsonRpcServerError(code) {\n  return code >= -32099 && code <= -32e3;\n}\nfunction serializeCause(error) {\n  if (Array.isArray(error)) {\n    return error.map((entry) => {\n      if (_utils.isValidJson.call(void 0, entry)) {\n        return entry;\n      } else if (_utils.isObject.call(void 0, entry)) {\n        return serializeObject(entry);\n      }\n      return null;\n    });\n  } else if (_utils.isObject.call(void 0, error)) {\n    return serializeObject(error);\n  }\n  if (_utils.isValidJson.call(void 0, error)) {\n    return error;\n  }\n  return null;\n}\nfunction serializeObject(object) {\n  return Object.getOwnPropertyNames(object).reduce(\n    (acc, key) => {\n      const value = object[key];\n      if (_utils.isValidJson.call(void 0, value)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {}\n  );\n}\nfunction dataHasCause(data) {\n  return _utils.isObject.call(void 0, data) && _utils.hasProperty.call(void 0, data, \"cause\") && _utils.isObject.call(void 0, data.cause);\n}\n\n\n\n\n\n\n\n\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = JSON_RPC_SERVER_ERROR_MESSAGE; exports.getMessageFromCode = getMessageFromCode; exports.isValidCode = isValidCode; exports.serializeError = serializeError; exports.serializeCause = serializeCause; exports.dataHasCause = dataHasCause;\n//# sourceMappingURL=chunk-XOYARAPP.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkHJCBU6QBjs = require('./chunk-HJCBU6QB.js');\n\n\n\nvar _chunkPV5NRPSSjs = require('./chunk-PV5NRPSS.js');\n\n\n\n\n\nvar _chunkXOYARAPPjs = require('./chunk-XOYARAPP.js');\n\n\nvar _chunkFBHPY3A4js = require('./chunk-FBHPY3A4.js');\n\n\n\n\n\n\n\n\n\n\nexports.EthereumProviderError = _chunkPV5NRPSSjs.EthereumProviderError; exports.JsonRpcError = _chunkPV5NRPSSjs.JsonRpcError; exports.dataHasCause = _chunkXOYARAPPjs.dataHasCause; exports.errorCodes = _chunkFBHPY3A4js.errorCodes; exports.getMessageFromCode = _chunkXOYARAPPjs.getMessageFromCode; exports.providerErrors = _chunkHJCBU6QBjs.providerErrors; exports.rpcErrors = _chunkHJCBU6QBjs.rpcErrors; exports.serializeCause = _chunkXOYARAPPjs.serializeCause; exports.serializeError = _chunkXOYARAPPjs.serializeError;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nclass SafeEventEmitter extends events_1.EventEmitter {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\nexports.default = SafeEventEmitter;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2 ** 11 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    let entropy;\n    if (typeof mnemonic === 'string') {\n        const { words } = normalize(mnemonic);\n        entropy = getCoder(wordlist).decode(words);\n    }\n    else {\n        // expected intanceOf Uint8Array when used with eth-hd-keyring\n        entropy = getCoder(wordlist).decode(Array.from(new Uint16Array(mnemonic.buffer)).map((i) => wordlist[i]));\n    }\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    const indices = words.map((word) => wordlist.indexOf(word));\n    const uInt8ArrayOfMnemonic = new Uint8Array(new Uint16Array(indices).buffer);\n    return uInt8ArrayOfMnemonic;\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words (string | Uint8Array)\n * @param wordlist array of 2048 words used to recover the mnemonic string from a Uint8Array\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, wordlist, passphrase = '') {\n    const encodedMnemonicUint8Array = encodeMnemonicForSeedDerivation(mnemonic, wordlist);\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, encodedMnemonicUint8Array, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words (string | Uint8Array)\n * @param wordlist array of 2048 words used to recover the mnemonic string from a Uint8Array\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, wordlist, passphrase = '') {\n    const encodedMnemonicUint8Array = encodeMnemonicForSeedDerivation(mnemonic, wordlist);\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, encodedMnemonicUint8Array, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n/**\n * Helper function to encode mnemonic passed either as a string or `Uint8Array` for deriving a seed/key with pbkdf2.\n */\nfunction encodeMnemonicForSeedDerivation(mnemonic, wordlist) {\n    let encodedMnemonicUint8Array;\n    if (typeof mnemonic === 'string') {\n        encodedMnemonicUint8Array = new TextEncoder().encode(normalize(mnemonic).nfkd);\n    }\n    else {\n        encodedMnemonicUint8Array = new TextEncoder().encode(Array.from(new Uint16Array(mnemonic.buffer))\n            .map((i) => wordlist[i])\n            .join(' '));\n    }\n    return encodedMnemonicUint8Array;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = exports.HMAC = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0, _assert_js_1.hash)(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        (0, _assert_js_1.exists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.bytes)(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\nexports.HMAC = HMAC;\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    (0, _assert_js_1.hash)(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    (0, _assert_js_1.number)(c);\n    (0, _assert_js_1.number)(dkLen);\n    (0, _assert_js_1.number)(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites __import__\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!isBytes(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cancellationReasonToStatusMap = exports.SmartTransactionStatuses = exports.SmartTransactionCancellationReason = exports.SmartTransactionMinedTx = exports.APIType = void 0;\n/** API */\nvar APIType;\n(function (APIType) {\n    APIType[APIType[\"GET_FEES\"] = 0] = \"GET_FEES\";\n    APIType[APIType[\"ESTIMATE_GAS\"] = 1] = \"ESTIMATE_GAS\";\n    APIType[APIType[\"SUBMIT_TRANSACTIONS\"] = 2] = \"SUBMIT_TRANSACTIONS\";\n    APIType[APIType[\"CANCEL\"] = 3] = \"CANCEL\";\n    APIType[APIType[\"BATCH_STATUS\"] = 4] = \"BATCH_STATUS\";\n    APIType[APIType[\"LIVENESS\"] = 5] = \"LIVENESS\";\n})(APIType = exports.APIType || (exports.APIType = {}));\n/** SmartTransactions */\nvar SmartTransactionMinedTx;\n(function (SmartTransactionMinedTx) {\n    SmartTransactionMinedTx[\"NOT_MINED\"] = \"not_mined\";\n    SmartTransactionMinedTx[\"SUCCESS\"] = \"success\";\n    SmartTransactionMinedTx[\"CANCELLED\"] = \"cancelled\";\n    SmartTransactionMinedTx[\"REVERTED\"] = \"reverted\";\n    SmartTransactionMinedTx[\"UNKNOWN\"] = \"unknown\";\n})(SmartTransactionMinedTx = exports.SmartTransactionMinedTx || (exports.SmartTransactionMinedTx = {}));\nvar SmartTransactionCancellationReason;\n(function (SmartTransactionCancellationReason) {\n    SmartTransactionCancellationReason[\"WOULD_REVERT\"] = \"would_revert\";\n    SmartTransactionCancellationReason[\"TOO_CHEAP\"] = \"too_cheap\";\n    SmartTransactionCancellationReason[\"DEADLINE_MISSED\"] = \"deadline_missed\";\n    SmartTransactionCancellationReason[\"INVALID_NONCE\"] = \"invalid_nonce\";\n    SmartTransactionCancellationReason[\"USER_CANCELLED\"] = \"user_cancelled\";\n    SmartTransactionCancellationReason[\"NOT_CANCELLED\"] = \"not_cancelled\";\n    SmartTransactionCancellationReason[\"PREVIOUS_TX_CANCELLED\"] = \"previous_tx_cancelled\";\n})(SmartTransactionCancellationReason = exports.SmartTransactionCancellationReason || (exports.SmartTransactionCancellationReason = {}));\nvar SmartTransactionStatuses;\n(function (SmartTransactionStatuses) {\n    SmartTransactionStatuses[\"PENDING\"] = \"pending\";\n    SmartTransactionStatuses[\"SUCCESS\"] = \"success\";\n    SmartTransactionStatuses[\"REVERTED\"] = \"reverted\";\n    SmartTransactionStatuses[\"UNKNOWN\"] = \"unknown\";\n    SmartTransactionStatuses[\"CANCELLED\"] = \"cancelled\";\n    SmartTransactionStatuses[\"CANCELLED_WOULD_REVERT\"] = \"cancelled_would_revert\";\n    SmartTransactionStatuses[\"CANCELLED_TOO_CHEAP\"] = \"cancelled_too_cheap\";\n    SmartTransactionStatuses[\"CANCELLED_DEADLINE_MISSED\"] = \"cancelled_deadline_missed\";\n    SmartTransactionStatuses[\"CANCELLED_INVALID_NONCE\"] = \"cancelled_invalid_nonce\";\n    SmartTransactionStatuses[\"CANCELLED_USER_CANCELLED\"] = \"cancelled_user_cancelled\";\n    SmartTransactionStatuses[\"CANCELLED_PREVIOUS_TX_CANCELLED\"] = \"cancelled_previous_tx_cancelled\";\n    SmartTransactionStatuses[\"RESOLVED\"] = \"resolved\";\n})(SmartTransactionStatuses = exports.SmartTransactionStatuses || (exports.SmartTransactionStatuses = {}));\nexports.cancellationReasonToStatusMap = {\n    [SmartTransactionCancellationReason.WOULD_REVERT]: SmartTransactionStatuses.CANCELLED_WOULD_REVERT,\n    [SmartTransactionCancellationReason.TOO_CHEAP]: SmartTransactionStatuses.CANCELLED_TOO_CHEAP,\n    [SmartTransactionCancellationReason.DEADLINE_MISSED]: SmartTransactionStatuses.CANCELLED_DEADLINE_MISSED,\n    [SmartTransactionCancellationReason.INVALID_NONCE]: SmartTransactionStatuses.CANCELLED_INVALID_NONCE,\n    [SmartTransactionCancellationReason.USER_CANCELLED]: SmartTransactionStatuses.CANCELLED_USER_CANCELLED,\n    [SmartTransactionCancellationReason.PREVIOUS_TX_CANCELLED]: SmartTransactionStatuses.CANCELLED_PREVIOUS_TX_CANCELLED,\n};\n//# sourceMappingURL=types.js.map","import nanoid from 'nanoid';\nimport {\n  CaveatTypes,\n  RestrictedMethods,\n} from '../../../../shared/constants/permissions';\nimport { CaveatFactories } from './specifications';\n\nexport function getPermissionBackgroundApiMethods(permissionController) {\n  const addMoreAccounts = (origin, accountOrAccounts) => {\n    const accounts = Array.isArray(accountOrAccounts)\n      ? accountOrAccounts\n      : [accountOrAccounts];\n    const caveat = CaveatFactories.restrictReturnedAccounts(accounts);\n\n    permissionController.grantPermissionsIncremental({\n      subject: { origin },\n      approvedPermissions: {\n        [RestrictedMethods.eth_accounts]: { caveats: [caveat] },\n      },\n    });\n  };\n\n  return {\n    addPermittedAccount: (origin, account) => addMoreAccounts(origin, account),\n\n    // To add more than one account when already connected to the dapp\n    addMorePermittedAccounts: (origin, accounts) =>\n      addMoreAccounts(origin, accounts),\n\n    removePermittedAccount: (origin, account) => {\n      const { value: existingAccounts } = permissionController.getCaveat(\n        origin,\n        RestrictedMethods.eth_accounts,\n        CaveatTypes.restrictReturnedAccounts,\n      );\n\n      const remainingAccounts = existingAccounts.filter(\n        (existingAccount) => existingAccount !== account,\n      );\n\n      if (remainingAccounts.length === existingAccounts.length) {\n        return;\n      }\n\n      if (remainingAccounts.length === 0) {\n        permissionController.revokePermission(\n          origin,\n          RestrictedMethods.eth_accounts,\n        );\n      } else {\n        permissionController.updateCaveat(\n          origin,\n          RestrictedMethods.eth_accounts,\n          CaveatTypes.restrictReturnedAccounts,\n          remainingAccounts,\n        );\n      }\n    },\n\n    requestAccountsPermissionWithId: async (origin) => {\n      const id = nanoid();\n      permissionController.requestPermissions(\n        { origin },\n        {\n          eth_accounts: {},\n        },\n        { id },\n      );\n      return id;\n    },\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createGenericPermissionValidator = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\n/**\n * Create a generic permission validator that validates the presence of certain caveats.\n *\n * This validator only validates the types of the caveats, not the values.\n *\n * @param caveatsToValidate - A list of objects that represent caveats.\n * @param caveatsToValidate.type - The string defining the caveat type.\n * @param caveatsToValidate.optional - An optional boolean flag that defines\n * whether the caveat is optional or not.\n * @returns A function that validates a permission.\n */\nfunction createGenericPermissionValidator(caveatsToValidate) {\n    const validCaveatTypes = new Set(caveatsToValidate.map((caveat) => caveat.type));\n    const requiredCaveats = caveatsToValidate.filter((caveat) => !caveat.optional);\n    return function ({ caveats }) {\n        const actualCaveats = caveats ?? [];\n        const passedCaveatTypes = actualCaveats.map((caveat) => caveat.type);\n        const passedCaveatsSet = new Set(passedCaveatTypes);\n        // Disallow duplicates\n        if (passedCaveatsSet.size !== passedCaveatTypes.length) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: 'Duplicate caveats are not allowed.',\n            });\n        }\n        // Disallow caveats that don't match expected types\n        if (!actualCaveats.every((caveat) => validCaveatTypes.has(caveat.type))) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Expected the following caveats: ${caveatsToValidate\n                    .map((caveat) => `\"${caveat.type}\"`)\n                    .join(', ')}, received ${actualCaveats\n                    .map((caveat) => `\"${caveat.type}\"`)\n                    .join(', ')}.`,\n            });\n        }\n        // Fail if not all required caveats are specified\n        if (!requiredCaveats.every((caveat) => passedCaveatsSet.has(caveat.type))) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Expected the following caveats: ${requiredCaveats\n                    .map((caveat) => `\"${caveat.type}\"`)\n                    .join(', ')}.`,\n            });\n        }\n    };\n}\nexports.createGenericPermissionValidator = createGenericPermissionValidator;\n//# sourceMappingURL=generic.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./generic.cjs\"), exports);\n__exportStar(require(\"./requestTime.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maxRequestTimeCaveatSpecifications = exports.getMaxRequestTimeCaveat = exports.createMaxRequestTimeMapper = exports.getMaxRequestTimeCaveatMapper = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Asserts that the given value is a valid `maxRequestTime` value.\n *\n * @param value - The value to assert.\n * @param ErrorWrapper - An optional error wrapper to use. Defaults to\n * {@link AssertionError}.\n * @throws If the value is not a valid `maxRequestTime` value.\n */\nfunction assertIsMaxRequestTime(value, // eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, utils_1.assertStruct)(value, snaps_utils_1.MaxRequestTimeStruct, 'Invalid maxRequestTime', ErrorWrapper);\n}\n/**\n * Validate the value of a caveat. This does not validate the type of the\n * caveat itself, only the value of the caveat.\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat value is invalid.\n */\nfunction validateMaxRequestTimeCaveat(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value')) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Invalid maxRequestTime caveat.',\n        });\n    }\n    const { value } = caveat;\n    assertIsMaxRequestTime(value, rpc_errors_1.rpcErrors.invalidParams);\n}\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction getMaxRequestTimeCaveatMapper(value) {\n    if (!value ||\n        !(0, utils_1.isObject)(value) ||\n        ((0, utils_1.isObject)(value) && !(0, utils_1.hasProperty)(value, 'maxRequestTime'))) {\n        return { caveats: null };\n    }\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.MaxRequestTime,\n                value: value.maxRequestTime,\n            },\n        ],\n    };\n}\nexports.getMaxRequestTimeCaveatMapper = getMaxRequestTimeCaveatMapper;\n/**\n * Creates a wrapping caveat mapper that creates the `maxRequestTime` caveat\n * and merges it with any other caveats created by the mapper function.\n *\n * @param mapper - Another caveat mapper function.\n * @returns The caveat specification.\n */\nfunction createMaxRequestTimeMapper(mapper) {\n    return function (value) {\n        // We assume this to be used only with caveats of this type\n        const { maxRequestTime, ...rest } = value;\n        const mapperResult = mapper(rest);\n        if (!maxRequestTime) {\n            return mapperResult;\n        }\n        return {\n            ...mapperResult,\n            caveats: [\n                ...(mapperResult.caveats ?? []),\n                {\n                    type: snaps_utils_1.SnapCaveatType.MaxRequestTime,\n                    value: maxRequestTime,\n                },\n            ],\n        };\n    };\n}\nexports.createMaxRequestTimeMapper = createMaxRequestTimeMapper;\n/**\n * Getter function to get the {@link MaxRequestTime} caveat value from a permission if specified.\n *\n * @param permission - The permission to get the caveat value from.\n * @returns The caveat value if present, otherwise null.\n */\nfunction getMaxRequestTimeCaveat(permission) {\n    const foundCaveat = permission?.caveats?.find((caveat) => caveat.type === snaps_utils_1.SnapCaveatType.MaxRequestTime);\n    return foundCaveat?.value ?? null;\n}\nexports.getMaxRequestTimeCaveat = getMaxRequestTimeCaveat;\nexports.maxRequestTimeCaveatSpecifications = {\n    [snaps_utils_1.SnapCaveatType.MaxRequestTime]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.MaxRequestTime,\n        validator: (caveat) => validateMaxRequestTimeCaveat(caveat),\n    }),\n};\n//# sourceMappingURL=requestTime.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cronjobCaveatSpecifications = exports.validateCronjobCaveat = exports.getCronjobCaveatJobs = exports.getCronjobCaveatMapper = exports.cronjobEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.Cronjob;\n/**\n * `endowment:cronjob` returns nothing; it is intended to be used as a flag to determine whether the snap wants to run cronjobs.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the cronjob endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: [snaps_utils_1.SnapCaveatType.SnapCronjob],\n        endowmentGetter: (_getterOptions) => null,\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.cronjobEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction getCronjobCaveatMapper(value) {\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.SnapCronjob,\n                value,\n            },\n        ],\n    };\n}\nexports.getCronjobCaveatMapper = getCronjobCaveatMapper;\n/**\n * Getter function to get the cronjobs from a permission.\n *\n * This does basic validation of the caveat, but does not validate the type or\n * value of the namespaces object itself, as this is handled by the\n * `PermissionsController` when the permission is requested.\n *\n * @param permission - The permission to get the keyring namespaces from.\n * @returns The cronjobs, or `null` if the permission does not have a\n * cronjob caveat.\n */\nfunction getCronjobCaveatJobs(permission) {\n    if (!permission?.caveats) {\n        return null;\n    }\n    (0, utils_1.assert)(permission.caveats.length === 1);\n    (0, utils_1.assert)(permission.caveats[0].type === snaps_utils_1.SnapCaveatType.SnapCronjob);\n    const caveat = permission.caveats[0];\n    return caveat.value?.jobs ?? null;\n}\nexports.getCronjobCaveatJobs = getCronjobCaveatJobs;\n/**\n * Validate the cronjob specification values associated with a caveat.\n * This validates that the value is a non-empty array with valid\n * cronjob expression and request object.\n *\n * @param caveat - The caveat to validate.\n * @throws If the value is invalid.\n */\nfunction validateCronjobCaveat(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value') || !(0, utils_1.isPlainObject)(caveat.value)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected a plain object.',\n        });\n    }\n    const { value } = caveat;\n    if (!(0, utils_1.hasProperty)(value, 'jobs') || !(0, utils_1.isPlainObject)(value)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected a plain object.',\n        });\n    }\n    if (!(0, snaps_utils_1.isCronjobSpecificationArray)(value.jobs)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected a valid cronjob specification array.',\n        });\n    }\n}\nexports.validateCronjobCaveat = validateCronjobCaveat;\n/**\n * Caveat specification for the Cronjob.\n */\nexports.cronjobCaveatSpecifications = {\n    [snaps_utils_1.SnapCaveatType.SnapCronjob]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.SnapCronjob,\n        validator: (caveat) => validateCronjobCaveat(caveat),\n    }),\n};\n//# sourceMappingURL=cronjob.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnapEndowments = void 0;\nvar SnapEndowments;\n(function (SnapEndowments) {\n    SnapEndowments[\"NetworkAccess\"] = \"endowment:network-access\";\n    SnapEndowments[\"SignatureInsight\"] = \"endowment:signature-insight\";\n    SnapEndowments[\"TransactionInsight\"] = \"endowment:transaction-insight\";\n    SnapEndowments[\"Cronjob\"] = \"endowment:cronjob\";\n    SnapEndowments[\"EthereumProvider\"] = \"endowment:ethereum-provider\";\n    SnapEndowments[\"Rpc\"] = \"endowment:rpc\";\n    SnapEndowments[\"WebAssemblyAccess\"] = \"endowment:webassembly\";\n    SnapEndowments[\"NameLookup\"] = \"endowment:name-lookup\";\n    SnapEndowments[\"LifecycleHooks\"] = \"endowment:lifecycle-hooks\";\n    SnapEndowments[\"Keyring\"] = \"endowment:keyring\";\n    SnapEndowments[\"HomePage\"] = \"endowment:page-home\";\n})(SnapEndowments || (exports.SnapEndowments = SnapEndowments = {}));\n//# sourceMappingURL=enum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethereumProviderEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.EthereumProvider;\n/**\n * `endowment:ethereum-provider` returns the name of the ethereum global browser API.\n * This is intended to populate the endowments of the\n * SES Compartment in which a Snap executes.\n *\n * This populates the global scope with an EIP-1193 provider, which DOES NOT implement all legacy functionality exposed to dapps.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the network endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: null,\n        endowmentGetter: (_getterOptions) => {\n            return ['ethereum'];\n        },\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.ethereumProviderEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n//# sourceMappingURL=ethereum-provider.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.homePageEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.HomePage;\n/**\n * `endowment:page-home` returns nothing; it is intended to be used as a\n * flag by the snap controller to detect whether the snap has the capability to\n * use the snap home page feature.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the `snap-pages` endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: null,\n        endowmentGetter: (_getterOptions) => null,\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.homePageEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n//# sourceMappingURL=home-page.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCronjobCaveatJobs = exports.getMaxRequestTimeCaveat = exports.getKeyringCaveatOrigins = exports.getLookupMatchersCaveat = exports.getChainIdsCaveat = exports.getTransactionOriginCaveat = exports.getSignatureOriginCaveat = exports.getRpcCaveatOrigins = exports.handlerEndowments = exports.endowmentCaveatMappers = exports.endowmentCaveatSpecifications = exports.endowmentPermissionBuilders = void 0;\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst caveats_1 = require(\"./caveats/index.cjs\");\nconst cronjob_1 = require(\"./cronjob.cjs\");\nconst ethereum_provider_1 = require(\"./ethereum-provider.cjs\");\nconst home_page_1 = require(\"./home-page.cjs\");\nconst keyring_1 = require(\"./keyring.cjs\");\nconst lifecycle_hooks_1 = require(\"./lifecycle-hooks.cjs\");\nconst name_lookup_1 = require(\"./name-lookup.cjs\");\nconst network_access_1 = require(\"./network-access.cjs\");\nconst rpc_1 = require(\"./rpc.cjs\");\nconst signature_insight_1 = require(\"./signature-insight.cjs\");\nconst transaction_insight_1 = require(\"./transaction-insight.cjs\");\nconst web_assembly_1 = require(\"./web-assembly.cjs\");\nexports.endowmentPermissionBuilders = {\n    [network_access_1.networkAccessEndowmentBuilder.targetName]: network_access_1.networkAccessEndowmentBuilder,\n    [transaction_insight_1.transactionInsightEndowmentBuilder.targetName]: transaction_insight_1.transactionInsightEndowmentBuilder,\n    [cronjob_1.cronjobEndowmentBuilder.targetName]: cronjob_1.cronjobEndowmentBuilder,\n    [ethereum_provider_1.ethereumProviderEndowmentBuilder.targetName]: ethereum_provider_1.ethereumProviderEndowmentBuilder,\n    [rpc_1.rpcEndowmentBuilder.targetName]: rpc_1.rpcEndowmentBuilder,\n    [web_assembly_1.webAssemblyEndowmentBuilder.targetName]: web_assembly_1.webAssemblyEndowmentBuilder,\n    [name_lookup_1.nameLookupEndowmentBuilder.targetName]: name_lookup_1.nameLookupEndowmentBuilder,\n    [lifecycle_hooks_1.lifecycleHooksEndowmentBuilder.targetName]: lifecycle_hooks_1.lifecycleHooksEndowmentBuilder,\n    [keyring_1.keyringEndowmentBuilder.targetName]: keyring_1.keyringEndowmentBuilder,\n    [home_page_1.homePageEndowmentBuilder.targetName]: home_page_1.homePageEndowmentBuilder,\n    [signature_insight_1.signatureInsightEndowmentBuilder.targetName]: signature_insight_1.signatureInsightEndowmentBuilder,\n};\nexports.endowmentCaveatSpecifications = {\n    ...cronjob_1.cronjobCaveatSpecifications,\n    ...transaction_insight_1.transactionInsightCaveatSpecifications,\n    ...rpc_1.rpcCaveatSpecifications,\n    ...name_lookup_1.nameLookupCaveatSpecifications,\n    ...keyring_1.keyringCaveatSpecifications,\n    ...signature_insight_1.signatureInsightCaveatSpecifications,\n    ...caveats_1.maxRequestTimeCaveatSpecifications,\n};\nexports.endowmentCaveatMappers = {\n    [cronjob_1.cronjobEndowmentBuilder.targetName]: (0, caveats_1.createMaxRequestTimeMapper)(cronjob_1.getCronjobCaveatMapper),\n    [transaction_insight_1.transactionInsightEndowmentBuilder.targetName]: (0, caveats_1.createMaxRequestTimeMapper)(transaction_insight_1.getTransactionInsightCaveatMapper),\n    [rpc_1.rpcEndowmentBuilder.targetName]: (0, caveats_1.createMaxRequestTimeMapper)(rpc_1.getRpcCaveatMapper),\n    [name_lookup_1.nameLookupEndowmentBuilder.targetName]: (0, caveats_1.createMaxRequestTimeMapper)(name_lookup_1.getNameLookupCaveatMapper),\n    [keyring_1.keyringEndowmentBuilder.targetName]: (0, caveats_1.createMaxRequestTimeMapper)(keyring_1.getKeyringCaveatMapper),\n    [signature_insight_1.signatureInsightEndowmentBuilder.targetName]: (0, caveats_1.createMaxRequestTimeMapper)(signature_insight_1.getSignatureInsightCaveatMapper),\n    [lifecycle_hooks_1.lifecycleHooksEndowmentBuilder.targetName]: caveats_1.getMaxRequestTimeCaveatMapper,\n    [home_page_1.homePageEndowmentBuilder.targetName]: caveats_1.getMaxRequestTimeCaveatMapper,\n};\n// We allow null because a permitted handler does not have an endowment\nexports.handlerEndowments = {\n    [snaps_utils_1.HandlerType.OnRpcRequest]: rpc_1.rpcEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnTransaction]: transaction_insight_1.transactionInsightEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnCronjob]: cronjob_1.cronjobEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnNameLookup]: name_lookup_1.nameLookupEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnInstall]: lifecycle_hooks_1.lifecycleHooksEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnUpdate]: lifecycle_hooks_1.lifecycleHooksEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnKeyringRequest]: keyring_1.keyringEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnHomePage]: home_page_1.homePageEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnSignature]: signature_insight_1.signatureInsightEndowmentBuilder.targetName,\n    [snaps_utils_1.HandlerType.OnUserInput]: null,\n};\n__exportStar(require(\"./enum.cjs\"), exports);\nvar rpc_2 = require(\"./rpc.cjs\");\nObject.defineProperty(exports, \"getRpcCaveatOrigins\", { enumerable: true, get: function () { return rpc_2.getRpcCaveatOrigins; } });\nvar signature_insight_2 = require(\"./signature-insight.cjs\");\nObject.defineProperty(exports, \"getSignatureOriginCaveat\", { enumerable: true, get: function () { return signature_insight_2.getSignatureOriginCaveat; } });\nvar transaction_insight_2 = require(\"./transaction-insight.cjs\");\nObject.defineProperty(exports, \"getTransactionOriginCaveat\", { enumerable: true, get: function () { return transaction_insight_2.getTransactionOriginCaveat; } });\nvar name_lookup_2 = require(\"./name-lookup.cjs\");\nObject.defineProperty(exports, \"getChainIdsCaveat\", { enumerable: true, get: function () { return name_lookup_2.getChainIdsCaveat; } });\nObject.defineProperty(exports, \"getLookupMatchersCaveat\", { enumerable: true, get: function () { return name_lookup_2.getLookupMatchersCaveat; } });\nvar keyring_2 = require(\"./keyring.cjs\");\nObject.defineProperty(exports, \"getKeyringCaveatOrigins\", { enumerable: true, get: function () { return keyring_2.getKeyringCaveatOrigins; } });\nvar caveats_2 = require(\"./caveats/index.cjs\");\nObject.defineProperty(exports, \"getMaxRequestTimeCaveat\", { enumerable: true, get: function () { return caveats_2.getMaxRequestTimeCaveat; } });\nvar cronjob_2 = require(\"./cronjob.cjs\");\nObject.defineProperty(exports, \"getCronjobCaveatJobs\", { enumerable: true, get: function () { return cronjob_2.getCronjobCaveatJobs; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keyringCaveatSpecifications = exports.getKeyringCaveatOrigins = exports.getKeyringCaveatMapper = exports.keyringEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst caveats_1 = require(\"./caveats/index.cjs\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.Keyring;\n/**\n * `endowment:keyring` returns nothing; it is intended to be used as a flag\n * by the client to detect whether the snap has keyring capabilities.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the keyring endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: [\n            snaps_utils_1.SnapCaveatType.KeyringOrigin,\n            snaps_utils_1.SnapCaveatType.MaxRequestTime,\n        ],\n        endowmentGetter: (_getterOptions) => null,\n        validator: (0, caveats_1.createGenericPermissionValidator)([\n            { type: snaps_utils_1.SnapCaveatType.KeyringOrigin },\n            { type: snaps_utils_1.SnapCaveatType.MaxRequestTime, optional: true },\n        ]),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.keyringEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n/**\n * Validate the value of a caveat. This does not validate the type of the\n * caveat itself, only the value of the caveat.\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat value is invalid.\n */\nfunction validateCaveatOrigins(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value') || !(0, utils_1.isPlainObject)(caveat.value)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Invalid keyring origins: Expected a plain object.',\n        });\n    }\n    const { value } = caveat;\n    (0, snaps_utils_1.assertIsKeyringOrigins)(value, rpc_errors_1.rpcErrors.invalidParams);\n}\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction getKeyringCaveatMapper(value) {\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.KeyringOrigin,\n                value,\n            },\n        ],\n    };\n}\nexports.getKeyringCaveatMapper = getKeyringCaveatMapper;\n/**\n * Getter function to get the {@link KeyringOrigins} caveat value from a\n * permission.\n *\n * @param permission - The permission to get the caveat value from.\n * @returns The caveat value.\n * @throws If the permission does not have a valid {@link KeyringOrigins}\n * caveat.\n */\nfunction getKeyringCaveatOrigins(permission) {\n    (0, utils_1.assert)(permission?.caveats);\n    (0, utils_1.assert)(permission.caveats.length === 1);\n    (0, utils_1.assert)(permission.caveats[0].type === snaps_utils_1.SnapCaveatType.KeyringOrigin);\n    const caveat = permission.caveats[0];\n    return caveat.value;\n}\nexports.getKeyringCaveatOrigins = getKeyringCaveatOrigins;\nexports.keyringCaveatSpecifications = {\n    [snaps_utils_1.SnapCaveatType.KeyringOrigin]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.KeyringOrigin,\n        validator: (caveat) => validateCaveatOrigins(caveat),\n    }),\n};\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lifecycleHooksEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.LifecycleHooks;\n/**\n * `endowment:lifecycle-hooks` returns nothing; it is intended to be used as a\n * flag by the snap controller to detect whether the snap has the capability to\n * use lifecycle hooks.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the `lifecycle-hooks` endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: null,\n        endowmentGetter: (_getterOptions) => null,\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.lifecycleHooksEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n//# sourceMappingURL=lifecycle-hooks.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nameLookupCaveatSpecifications = exports.getLookupMatchersCaveat = exports.getChainIdsCaveat = exports.getNameLookupCaveatMapper = exports.nameLookupEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst caveats_1 = require(\"./caveats/index.cjs\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.NameLookup;\n/**\n * `endowment:name-lookup` returns nothing; it is intended to be used as a flag\n * by the extension to detect whether the snap has the capability to resolve a domain/address.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the name-lookup endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: [\n            snaps_utils_1.SnapCaveatType.ChainIds,\n            snaps_utils_1.SnapCaveatType.LookupMatchers,\n            snaps_utils_1.SnapCaveatType.MaxRequestTime,\n        ],\n        endowmentGetter: (_getterOptions) => null,\n        validator: (0, caveats_1.createGenericPermissionValidator)([\n            { type: snaps_utils_1.SnapCaveatType.ChainIds, optional: true },\n            { type: snaps_utils_1.SnapCaveatType.LookupMatchers, optional: true },\n            { type: snaps_utils_1.SnapCaveatType.MaxRequestTime, optional: true },\n        ]),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.nameLookupEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n/**\n * Validates the type of the caveat value.\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat value is invalid.\n */\nfunction validateCaveat(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value') || !(0, utils_1.isPlainObject)(caveat)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected a plain object.',\n        });\n    }\n    const { value } = caveat;\n    switch (caveat.type) {\n        case snaps_utils_1.SnapCaveatType.ChainIds:\n            (0, utils_1.assertStruct)(value, snaps_utils_1.ChainIdsStruct);\n            break;\n        case snaps_utils_1.SnapCaveatType.LookupMatchers:\n            (0, utils_1.assertStruct)(value, snaps_utils_1.LookupMatchersStruct);\n            break;\n        default:\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: 'Invalid caveat type, must be one of the following: \"chainIds\", \"matchers\".',\n            });\n    }\n}\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction getNameLookupCaveatMapper(value) {\n    if (!value || !(0, utils_1.isObject)(value) || Object.keys(value).length === 0) {\n        return { caveats: null };\n    }\n    const caveats = [];\n    if (value.chains) {\n        caveats.push({\n            type: snaps_utils_1.SnapCaveatType.ChainIds,\n            value: value.chains,\n        });\n    }\n    if (value.matchers) {\n        caveats.push({\n            type: snaps_utils_1.SnapCaveatType.LookupMatchers,\n            value: value.matchers,\n        });\n    }\n    (0, utils_1.assert)(caveats.length > 0);\n    return { caveats: caveats };\n}\nexports.getNameLookupCaveatMapper = getNameLookupCaveatMapper;\n/**\n * Getter function to get the chainIds caveat from a permission.\n *\n * This does basic validation of the caveat, but does not validate the type or\n * value of the namespaces object itself, as this is handled by the\n * `PermissionsController` when the permission is requested.\n *\n * @param permission - The permission to get the `chainIds` caveat from.\n * @returns An array of `chainIds` that the snap supports.\n */\nfunction getChainIdsCaveat(permission) {\n    if (!permission?.caveats) {\n        return null;\n    }\n    const caveat = permission.caveats.find((permCaveat) => permCaveat.type === snaps_utils_1.SnapCaveatType.ChainIds);\n    return caveat ? caveat.value : null;\n}\nexports.getChainIdsCaveat = getChainIdsCaveat;\n/**\n * Getter function to get the matchers caveat from a permission.\n *\n * This does basic validation of the caveat, but does not validate the type or\n * value of the namespaces object itself, as this is handled by the\n * `PermissionsController` when the permission is requested.\n *\n * @param permission - The permission to get the `matchers` caveat from.\n * @returns A `matchers` object that defines the input that the snap supports.\n */\nfunction getLookupMatchersCaveat(permission) {\n    if (!permission?.caveats) {\n        return null;\n    }\n    const caveat = permission.caveats.find((permCaveat) => permCaveat.type === snaps_utils_1.SnapCaveatType.LookupMatchers);\n    return caveat ? caveat.value : null;\n}\nexports.getLookupMatchersCaveat = getLookupMatchersCaveat;\nexports.nameLookupCaveatSpecifications = {\n    [snaps_utils_1.SnapCaveatType.ChainIds]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.ChainIds,\n        validator: (caveat) => validateCaveat(caveat),\n    }),\n    [snaps_utils_1.SnapCaveatType.LookupMatchers]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.LookupMatchers,\n        validator: (caveat) => validateCaveat(caveat),\n    }),\n};\n//# sourceMappingURL=name-lookup.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.networkAccessEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.NetworkAccess;\n/**\n * `endowment:network-access` returns the name of global browser API(s) that\n * enable network access. This is intended to populate the endowments of the\n * SES Compartment in which a Snap executes.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the network endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: null,\n        endowmentGetter: (_getterOptions) => {\n            return ['fetch', 'Request', 'Headers', 'Response'];\n        },\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.networkAccessEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n//# sourceMappingURL=network-access.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rpcCaveatSpecifications = exports.getRpcCaveatOrigins = exports.getRpcCaveatMapper = exports.rpcEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst caveats_1 = require(\"./caveats/index.cjs\");\nconst enum_1 = require(\"./enum.cjs\");\nconst targetName = enum_1.SnapEndowments.Rpc;\n/**\n * The specification builder for the JSON-RPC endowment permission.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the JSON-RPC endowment permission.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName,\n        allowedCaveats: [snaps_utils_1.SnapCaveatType.RpcOrigin, snaps_utils_1.SnapCaveatType.MaxRequestTime],\n        endowmentGetter: (_getterOptions) => null,\n        validator: (0, caveats_1.createGenericPermissionValidator)([\n            { type: snaps_utils_1.SnapCaveatType.RpcOrigin },\n            { type: snaps_utils_1.SnapCaveatType.MaxRequestTime, optional: true },\n        ]),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.rpcEndowmentBuilder = Object.freeze({\n    targetName,\n    specificationBuilder,\n});\n/**\n * Validate the value of a caveat. This does not validate the type of the\n * caveat itself, only the value of the caveat.\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat value is invalid.\n */\nfunction validateCaveatOrigins(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value') || !(0, utils_1.isPlainObject)(caveat.value)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Invalid JSON-RPC origins: Expected a plain object.',\n        });\n    }\n    const { value } = caveat;\n    (0, snaps_utils_1.assertIsRpcOrigins)(value, rpc_errors_1.rpcErrors.invalidParams);\n}\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction getRpcCaveatMapper(value) {\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.RpcOrigin,\n                value,\n            },\n        ],\n    };\n}\nexports.getRpcCaveatMapper = getRpcCaveatMapper;\n/**\n * Getter function to get the {@link RpcOrigins} caveat value from a permission.\n *\n * @param permission - The permission to get the caveat value from.\n * @returns The caveat value.\n * @throws If the permission does not have a valid {@link RpcOrigins} caveat.\n */\nfunction getRpcCaveatOrigins(permission) {\n    const caveats = permission?.caveats?.filter((caveat) => caveat.type === snaps_utils_1.SnapCaveatType.RpcOrigin);\n    (0, utils_1.assert)(caveats);\n    (0, utils_1.assert)(caveats.length === 1);\n    const caveat = caveats[0];\n    return caveat.value;\n}\nexports.getRpcCaveatOrigins = getRpcCaveatOrigins;\nexports.rpcCaveatSpecifications = {\n    [snaps_utils_1.SnapCaveatType.RpcOrigin]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.RpcOrigin,\n        validator: (caveat) => validateCaveatOrigins(caveat),\n    }),\n};\n//# sourceMappingURL=rpc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureInsightCaveatSpecifications = exports.getSignatureOriginCaveat = exports.getSignatureInsightCaveatMapper = exports.signatureInsightEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst caveats_1 = require(\"./caveats/index.cjs\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.SignatureInsight;\n/**\n * `endowment:signature-insight` returns nothing; it is intended to be used as a flag\n * by the extension to detect whether the snap has the capability to show information on the signature confirmation screen.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the signature-insight endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: [snaps_utils_1.SnapCaveatType.SignatureOrigin],\n        endowmentGetter: (_getterOptions) => null,\n        validator: (0, caveats_1.createGenericPermissionValidator)([\n            { type: snaps_utils_1.SnapCaveatType.SignatureOrigin, optional: true },\n            { type: snaps_utils_1.SnapCaveatType.MaxRequestTime, optional: true },\n        ]),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.signatureInsightEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n/**\n * Validates the type of the caveat value.\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat value is invalid.\n */\nfunction validateCaveat(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value') || !(0, utils_1.isPlainObject)(caveat)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected a plain object.',\n        });\n    }\n    const { value } = caveat;\n    (0, utils_1.assert)(typeof value === 'boolean', 'Expected caveat value to have type \"boolean\"');\n}\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction getSignatureInsightCaveatMapper(value) {\n    if (!value ||\n        !(0, utils_1.isObject)(value) ||\n        ((0, utils_1.isObject)(value) && Object.keys(value).length === 0)) {\n        return { caveats: null };\n    }\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.SignatureOrigin,\n                value: (0, utils_1.hasProperty)(value, 'allowSignatureOrigin') &&\n                    value.allowSignatureOrigin,\n            },\n        ],\n    };\n}\nexports.getSignatureInsightCaveatMapper = getSignatureInsightCaveatMapper;\n/**\n * Getter function to get the signature origin caveat from a permission.\n *\n * This does basic validation of the caveat, but does not validate the type or\n * value of the namespaces object itself, as this is handled by the\n * `PermissionsController` when the permission is requested.\n *\n * @param permission - The permission to get the signature origin caveat from.\n * @returns The signature origin, or `null` if the permission does not have a\n * signature origin caveat.\n */\nfunction getSignatureOriginCaveat(permission) {\n    if (!permission?.caveats) {\n        return null;\n    }\n    (0, utils_1.assert)(permission.caveats.length === 1);\n    (0, utils_1.assert)(permission.caveats[0].type === snaps_utils_1.SnapCaveatType.SignatureOrigin);\n    const caveat = permission.caveats[0];\n    return caveat.value ?? null;\n}\nexports.getSignatureOriginCaveat = getSignatureOriginCaveat;\nexports.signatureInsightCaveatSpecifications = {\n    [snaps_utils_1.SnapCaveatType.SignatureOrigin]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.SignatureOrigin,\n        validator: (caveat) => validateCaveat(caveat),\n    }),\n};\n//# sourceMappingURL=signature-insight.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transactionInsightCaveatSpecifications = exports.getTransactionOriginCaveat = exports.getTransactionInsightCaveatMapper = exports.transactionInsightEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst caveats_1 = require(\"./caveats/index.cjs\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.TransactionInsight;\n/**\n * `endowment:transaction-insight` returns nothing; it is intended to be used as a flag\n * by the extension to detect whether the snap has the capability to show information on the transaction confirmation screen.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the transaction-insight endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: [\n            snaps_utils_1.SnapCaveatType.TransactionOrigin,\n            snaps_utils_1.SnapCaveatType.MaxRequestTime,\n        ],\n        endowmentGetter: (_getterOptions) => null,\n        validator: (0, caveats_1.createGenericPermissionValidator)([\n            { type: snaps_utils_1.SnapCaveatType.TransactionOrigin, optional: true },\n            { type: snaps_utils_1.SnapCaveatType.MaxRequestTime, optional: true },\n        ]),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.transactionInsightEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n/**\n * Validates the type of the caveat value.\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat value is invalid.\n */\nfunction validateCaveat(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value') || !(0, utils_1.isPlainObject)(caveat)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected a plain object.',\n        });\n    }\n    const { value } = caveat;\n    (0, utils_1.assert)(typeof value === 'boolean', 'Expected caveat value to have type \"boolean\"');\n}\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction getTransactionInsightCaveatMapper(value) {\n    if (!value ||\n        !(0, utils_1.isObject)(value) ||\n        ((0, utils_1.isObject)(value) && Object.keys(value).length === 0)) {\n        return { caveats: null };\n    }\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.TransactionOrigin,\n                value: (0, utils_1.hasProperty)(value, 'allowTransactionOrigin') &&\n                    value.allowTransactionOrigin,\n            },\n        ],\n    };\n}\nexports.getTransactionInsightCaveatMapper = getTransactionInsightCaveatMapper;\n/**\n * Getter function to get the transaction origin caveat from a permission.\n *\n * This does basic validation of the caveat, but does not validate the type or\n * value of the namespaces object itself, as this is handled by the\n * `PermissionsController` when the permission is requested.\n *\n * @param permission - The permission to get the transaction origin caveat from.\n * @returns The transaction origin, or `null` if the permission does not have a\n * transaction origin caveat.\n */\nfunction getTransactionOriginCaveat(permission) {\n    if (!permission?.caveats) {\n        return null;\n    }\n    (0, utils_1.assert)(permission.caveats.length === 1);\n    (0, utils_1.assert)(permission.caveats[0].type === snaps_utils_1.SnapCaveatType.TransactionOrigin);\n    const caveat = permission.caveats[0];\n    return caveat.value ?? null;\n}\nexports.getTransactionOriginCaveat = getTransactionOriginCaveat;\nexports.transactionInsightCaveatSpecifications = {\n    [snaps_utils_1.SnapCaveatType.TransactionOrigin]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.TransactionOrigin,\n        validator: (caveat) => validateCaveat(caveat),\n    }),\n};\n//# sourceMappingURL=transaction-insight.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.webAssemblyEndowmentBuilder = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst enum_1 = require(\"./enum.cjs\");\nconst permissionName = enum_1.SnapEndowments.WebAssemblyAccess;\n/**\n * `endowment:webassembly` returns the name of global browser API(s) that\n * enable access to the WebAssembly API.\n * This is intended to populate the endowments of the SES Compartment\n * in which a Snap executes.\n *\n * @param _builderOptions - Optional specification builder options.\n * @returns The specification for the WebAssembly endowment.\n */\nconst specificationBuilder = (_builderOptions) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.Endowment,\n        targetName: permissionName,\n        allowedCaveats: null,\n        endowmentGetter: (_getterOptions) => {\n            return ['WebAssembly'];\n        },\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nexports.webAssemblyEndowmentBuilder = Object.freeze({\n    targetName: permissionName,\n    specificationBuilder,\n});\n//# sourceMappingURL=web-assembly.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.selectHooks = exports.SnapCaveatType = exports.createSnapsMethodMiddleware = exports.permittedMethods = void 0;\nvar permitted_1 = require(\"./permitted/index.cjs\");\nObject.defineProperty(exports, \"permittedMethods\", { enumerable: true, get: function () { return permitted_1.handlers; } });\nObject.defineProperty(exports, \"createSnapsMethodMiddleware\", { enumerable: true, get: function () { return permitted_1.createSnapsMethodMiddleware; } });\nvar snaps_utils_1 = require(\"@metamask/snaps-utils\");\nObject.defineProperty(exports, \"SnapCaveatType\", { enumerable: true, get: function () { return snaps_utils_1.SnapCaveatType; } });\nvar utils_1 = require(\"./utils.cjs\");\nObject.defineProperty(exports, \"selectHooks\", { enumerable: true, get: function () { return utils_1.selectHooks; } });\n__exportStar(require(\"./endowments/index.cjs\"), exports);\n__exportStar(require(\"./permissions.cjs\"), exports);\n__exportStar(require(\"./restricted/index.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildSnapRestrictedMethodSpecifications = exports.buildSnapEndowmentSpecifications = exports.processSnapPermissions = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst endowments_1 = require(\"./endowments/index.cjs\");\nconst restricted_1 = require(\"./restricted/index.cjs\");\nconst utils_2 = require(\"./utils.cjs\");\n/**\n * Map initial permissions as defined in a Snap manifest to something that can\n * be processed by the PermissionsController. Each caveat mapping function\n * should return a valid permission caveat value.\n *\n * This function does not validate the caveat values, since that is done by\n * the PermissionsController itself, upon requesting the permissions.\n *\n * @param initialPermissions - The initial permissions to process.\n * @returns The processed permissions.\n */\nfunction processSnapPermissions(initialPermissions) {\n    return Object.fromEntries(Object.entries(initialPermissions).map(([initialPermission, value]) => {\n        if ((0, utils_1.hasProperty)(restricted_1.caveatMappers, initialPermission)) {\n            return [initialPermission, restricted_1.caveatMappers[initialPermission](value)];\n        }\n        else if ((0, utils_1.hasProperty)(endowments_1.endowmentCaveatMappers, initialPermission)) {\n            return [\n                initialPermission,\n                endowments_1.endowmentCaveatMappers[initialPermission](value),\n            ];\n        }\n        // If we have no mapping, this may be a non-snap permission, return as-is\n        return [\n            initialPermission,\n            value,\n        ];\n    }));\n}\nexports.processSnapPermissions = processSnapPermissions;\nconst buildSnapEndowmentSpecifications = (excludedEndowments) => Object.values(endowments_1.endowmentPermissionBuilders).reduce((allSpecifications, { targetName, specificationBuilder }) => {\n    if (!excludedEndowments.includes(targetName)) {\n        allSpecifications[targetName] = specificationBuilder({});\n    }\n    return allSpecifications;\n}, {});\nexports.buildSnapEndowmentSpecifications = buildSnapEndowmentSpecifications;\nconst buildSnapRestrictedMethodSpecifications = (excludedPermissions, hooks) => Object.values(restricted_1.restrictedMethodPermissionBuilders).reduce((specifications, { targetName, specificationBuilder, methodHooks }) => {\n    if (!excludedPermissions.includes(targetName)) {\n        specifications[targetName] = specificationBuilder({\n            // @ts-expect-error The selectHooks type is wonky\n            methodHooks: (0, utils_2.selectHooks)(hooks, methodHooks),\n        });\n    }\n    return specifications;\n}, {});\nexports.buildSnapRestrictedMethodSpecifications = buildSnapRestrictedMethodSpecifications;\n//# sourceMappingURL=permissions.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createInterfaceHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst hookNames = {\n    createInterface: true,\n};\nexports.createInterfaceHandler = {\n    methodNames: ['snap_createInterface'],\n    implementation: getCreateInterfaceImplementation,\n    hookNames,\n};\nconst CreateInterfaceParametersStruct = (0, superstruct_1.object)({\n    ui: snaps_sdk_1.ComponentOrElementStruct,\n    context: (0, superstruct_1.optional)(snaps_sdk_1.InterfaceContextStruct),\n});\n/**\n * The `snap_createInterface` method implementation.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.createInterface - The function to create the interface.\n * @returns Nothing.\n */\nasync function getCreateInterfaceImplementation(req, res, _next, end, { createInterface }) {\n    const { params } = req;\n    try {\n        const validatedParams = getValidatedParams(params);\n        const { ui, context } = validatedParams;\n        res.result = await createInterface(ui, context);\n    }\n    catch (error) {\n        return end(error);\n    }\n    return end();\n}\n/**\n * Validate the createInterface method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @returns The validated createInterface method parameter object.\n */\nfunction getValidatedParams(params) {\n    try {\n        return (0, superstruct_1.create)(params, CreateInterfaceParametersStruct);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Invalid params: ${error.message}.`,\n            });\n        }\n        /* istanbul ignore next */\n        throw rpc_errors_1.rpcErrors.internal();\n    }\n}\n//# sourceMappingURL=createInterface.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAllSnapsHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst hookNames = {\n    getAllSnaps: true,\n};\n/**\n * `wallet_getAllSnaps` gets all installed Snaps. Currently, this can only be\n * called from `https://snaps.metamask.io`.\n */\nexports.getAllSnapsHandler = {\n    methodNames: ['wallet_getAllSnaps'],\n    implementation: getAllSnapsImplementation,\n    hookNames,\n};\n/**\n * The `wallet_getAllSnaps` method implementation.\n * Fetches all installed snaps and adds them to the JSON-RPC response.\n *\n * @param request - The JSON-RPC request object.\n * @param response - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.getAllSnaps - A function that returns all installed snaps.\n * @returns Nothing.\n */\nasync function getAllSnapsImplementation(request, response, _next, end, { getAllSnaps }) {\n    // The origin is added by the MetaMask middleware stack.\n    const { origin } = request;\n    if (origin !== 'https://snaps.metamask.io') {\n        return end(rpc_errors_1.rpcErrors.methodNotFound());\n    }\n    response.result = await getAllSnaps();\n    return end();\n}\n//# sourceMappingURL=getAllSnaps.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getClientStatusHandler = void 0;\nconst hookNames = {\n    getIsLocked: true,\n};\n/**\n * `snap_getClientStatus` returns useful information about the client running the snap.\n */\nexports.getClientStatusHandler = {\n    methodNames: ['snap_getClientStatus'],\n    implementation: getClientStatusImplementation,\n    hookNames,\n};\n/**\n * The `snap_getClientStatus` method implementation.\n * Returns useful information about the client running the snap.\n *\n * @param _request - The JSON-RPC request object. Not used by this function.\n * @param response - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.getIsLocked - A function that returns whether the client is locked or not.\n * @returns Nothing.\n */\nasync function getClientStatusImplementation(_request, response, _next, end, { getIsLocked }) {\n    response.result = { locked: getIsLocked() };\n    return end();\n}\n//# sourceMappingURL=getClientStatus.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFileHandler = exports.GetFileArgsStruct = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nexports.GetFileArgsStruct = (0, superstruct_1.object)({\n    path: (0, superstruct_1.string)(),\n    encoding: (0, superstruct_1.optional)((0, superstruct_1.union)([\n        (0, snaps_sdk_1.enumValue)(snaps_sdk_1.AuxiliaryFileEncoding.Base64),\n        (0, snaps_sdk_1.enumValue)(snaps_sdk_1.AuxiliaryFileEncoding.Hex),\n        (0, snaps_sdk_1.enumValue)(snaps_sdk_1.AuxiliaryFileEncoding.Utf8),\n    ])),\n});\nconst hookNames = {\n    getSnapFile: true,\n};\nexports.getFileHandler = {\n    methodNames: ['snap_getFile'],\n    implementation,\n    hookNames,\n};\n/**\n * The `snap_getFile` method implementation.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.getSnapFile - The function to load a static snap file.\n * @returns Nothing.\n */\nasync function implementation(req, res, _next, end, { getSnapFile }) {\n    const { params } = req;\n    (0, utils_1.assertStruct)(params, exports.GetFileArgsStruct, 'Invalid \"snap_getFile\" parameters', rpc_errors_1.rpcErrors.invalidParams);\n    try {\n        res.result = await getSnapFile(params.path, params.encoding ?? snaps_sdk_1.AuxiliaryFileEncoding.Base64);\n    }\n    catch (error) {\n        return end(error);\n    }\n    return end();\n}\n//# sourceMappingURL=getFile.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInterfaceStateHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst hookNames = {\n    getInterfaceState: true,\n};\nexports.getInterfaceStateHandler = {\n    methodNames: ['snap_getInterfaceState'],\n    implementation: getGetInterfaceStateImplementation,\n    hookNames,\n};\nconst GetInterfaceStateParametersStruct = (0, superstruct_1.object)({\n    id: (0, superstruct_1.string)(),\n});\n/**\n * The `snap_getInterfaceState` method implementation.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.getInterfaceState - The function to get the interface state.\n * @returns Noting.\n */\nfunction getGetInterfaceStateImplementation(req, res, _next, end, { getInterfaceState }) {\n    const { params } = req;\n    try {\n        const validatedParams = getValidatedParams(params);\n        const { id } = validatedParams;\n        res.result = getInterfaceState(id);\n    }\n    catch (error) {\n        return end(error);\n    }\n    return end();\n}\n/**\n * Validate the getInterfaceState method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @returns The validated getInterfaceState method parameter object.\n */\nfunction getValidatedParams(params) {\n    try {\n        return (0, superstruct_1.create)(params, GetInterfaceStateParametersStruct);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Invalid params: ${error.message}.`,\n            });\n        }\n        /* istanbul ignore next */\n        throw rpc_errors_1.rpcErrors.internal();\n    }\n}\n//# sourceMappingURL=getInterfaceState.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSnapsHandler = void 0;\nconst hookNames = {\n    getSnaps: true,\n};\n/**\n * `wallet_getSnaps` gets the requester's permitted and installed Snaps.\n */\nexports.getSnapsHandler = {\n    methodNames: ['wallet_getSnaps'],\n    implementation: getSnapsImplementation,\n    hookNames,\n};\n/**\n * The `wallet_getSnaps` method implementation.\n * Fetches available snaps for the requesting origin and adds them to the JSON-RPC response.\n *\n * @param _req - The JSON-RPC request object. Not used by this function.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.getSnaps - A function that returns the snaps available for the requesting origin.\n * @returns Nothing.\n */\nasync function getSnapsImplementation(_req, res, _next, end, { getSnaps }) {\n    // getSnaps is already bound to the origin\n    res.result = await getSnaps();\n    return end();\n}\n//# sourceMappingURL=getSnaps.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handlers = exports.methodHandlers = void 0;\nconst createInterface_1 = require(\"./createInterface.cjs\");\nconst getAllSnaps_1 = require(\"./getAllSnaps.cjs\");\nconst getClientStatus_1 = require(\"./getClientStatus.cjs\");\nconst getFile_1 = require(\"./getFile.cjs\");\nconst getInterfaceState_1 = require(\"./getInterfaceState.cjs\");\nconst getSnaps_1 = require(\"./getSnaps.cjs\");\nconst invokeKeyring_1 = require(\"./invokeKeyring.cjs\");\nconst invokeSnapSugar_1 = require(\"./invokeSnapSugar.cjs\");\nconst requestSnaps_1 = require(\"./requestSnaps.cjs\");\nconst resolveInterface_1 = require(\"./resolveInterface.cjs\");\nconst updateInterface_1 = require(\"./updateInterface.cjs\");\n/* eslint-disable @typescript-eslint/naming-convention */\nexports.methodHandlers = {\n    wallet_getAllSnaps: getAllSnaps_1.getAllSnapsHandler,\n    wallet_getSnaps: getSnaps_1.getSnapsHandler,\n    wallet_requestSnaps: requestSnaps_1.requestSnapsHandler,\n    wallet_invokeSnap: invokeSnapSugar_1.invokeSnapSugarHandler,\n    wallet_invokeKeyring: invokeKeyring_1.invokeKeyringHandler,\n    snap_getClientStatus: getClientStatus_1.getClientStatusHandler,\n    snap_getFile: getFile_1.getFileHandler,\n    snap_createInterface: createInterface_1.createInterfaceHandler,\n    snap_updateInterface: updateInterface_1.updateInterfaceHandler,\n    snap_getInterfaceState: getInterfaceState_1.getInterfaceStateHandler,\n    snap_resolveInterface: resolveInterface_1.resolveInterfaceHandler,\n};\n/* eslint-enable @typescript-eslint/naming-convention */\nexports.handlers = Object.values(exports.methodHandlers);\n//# sourceMappingURL=handlers.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./handlers.cjs\"), exports);\n__exportStar(require(\"./middleware.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invokeKeyringHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst invokeSnapSugar_1 = require(\"./invokeSnapSugar.cjs\");\nconst hookNames = {\n    hasPermission: true,\n    handleSnapRpcRequest: true,\n    getSnap: true,\n    getAllowedKeyringMethods: true,\n};\n/**\n * `wallet_invokeKeyring` gets the requester's permitted and installed Snaps.\n */\nexports.invokeKeyringHandler = {\n    methodNames: ['wallet_invokeKeyring'],\n    implementation: invokeKeyringImplementation,\n    hookNames,\n};\n/**\n * The `wallet_invokeKeyring` method implementation.\n * Invokes onKeyringRequest if the snap requested is installed and connected to the dapp.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.handleSnapRpcRequest - Invokes a snap with a given RPC request.\n * @param hooks.hasPermission - Checks whether a given origin has a given permission.\n * @param hooks.getSnap - Gets information about a given snap.\n * @param hooks.getAllowedKeyringMethods - Get the list of allowed Keyring\n * methods for a given origin.\n * @returns Nothing.\n */\nasync function invokeKeyringImplementation(req, res, _next, end, { handleSnapRpcRequest, hasPermission, getSnap, getAllowedKeyringMethods, }) {\n    let params;\n    try {\n        params = (0, invokeSnapSugar_1.getValidatedParams)(req.params);\n    }\n    catch (error) {\n        return end(error);\n    }\n    // We expect the MM middleware stack to always add the origin to requests\n    const { origin } = req;\n    const { snapId, request } = params;\n    if (!origin || !hasPermission(snaps_utils_1.WALLET_SNAP_PERMISSION_KEY)) {\n        return end(rpc_errors_1.rpcErrors.invalidRequest({\n            message: `The snap \"${snapId}\" is not connected to \"${origin}\". Please connect before invoking the snap.`,\n        }));\n    }\n    if (!getSnap(snapId)) {\n        return end(rpc_errors_1.rpcErrors.invalidRequest({\n            message: `The snap \"${snapId}\" is not installed. Please install it first, before invoking the snap.`,\n        }));\n    }\n    if (!(0, utils_1.hasProperty)(request, 'method') || typeof request.method !== 'string') {\n        return end(rpc_errors_1.rpcErrors.invalidRequest({\n            message: 'The request must have a method.',\n        }));\n    }\n    const allowedMethods = getAllowedKeyringMethods();\n    if (!allowedMethods.includes(request.method)) {\n        return end(rpc_errors_1.rpcErrors.invalidRequest({\n            message: `The origin \"${origin}\" is not allowed to invoke the method \"${request.method}\".`,\n        }));\n    }\n    try {\n        res.result = (await handleSnapRpcRequest({\n            snapId,\n            request,\n            handler: snaps_utils_1.HandlerType.OnKeyringRequest,\n        }));\n    }\n    catch (error) {\n        return end(error);\n    }\n    return end();\n}\n//# sourceMappingURL=invokeKeyring.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidatedParams = exports.invokeSnapSugar = exports.invokeSnapSugarHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * `wallet_invokeSnap` attempts to invoke an RPC method of the specified Snap.\n */\nexports.invokeSnapSugarHandler = {\n    methodNames: ['wallet_invokeSnap'],\n    implementation: invokeSnapSugar,\n    hookNames: {\n        invokeSnap: true,\n    },\n};\n/**\n * The `wallet_invokeSnap` method implementation.\n * Effectively calls `wallet_snap` under the hood.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.invokeSnap - A function to invoke a snap designated by its parameters,\n * bound to the requesting origin.\n * @returns Nothing.\n * @throws If the params are invalid.\n */\nasync function invokeSnapSugar(req, res, _next, end, { invokeSnap }) {\n    try {\n        const params = getValidatedParams(req.params);\n        res.result = await invokeSnap(params);\n    }\n    catch (error) {\n        return end(error);\n    }\n    return end();\n}\nexports.invokeSnapSugar = invokeSnapSugar;\n/**\n * Validates the wallet_invokeSnap method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @returns The validated method parameter object.\n */\nfunction getValidatedParams(params) {\n    if (!(0, utils_1.isObject)(params)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected params to be a single object.',\n        });\n    }\n    const { snapId, request } = params;\n    if (!snapId || typeof snapId !== 'string' || snapId === '') {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Must specify a valid snap ID.',\n        });\n    }\n    if (!(0, utils_1.isObject)(request)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected request to be a single object.',\n        });\n    }\n    return params;\n}\nexports.getValidatedParams = getValidatedParams;\n//# sourceMappingURL=invokeSnapSugar.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSnapsMethodMiddleware = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"../utils.cjs\");\nconst handlers_1 = require(\"./handlers.cjs\");\n/**\n * Creates a middleware that handles permitted snap RPC methods.\n *\n * @param isSnap - A flag that should indicate whether the requesting origin is a snap or not.\n * @param hooks - An object containing the hooks made available to the permitted RPC methods.\n * @returns The middleware.\n */\nfunction createSnapsMethodMiddleware(isSnap, hooks) {\n    // This is not actually a misused promise, the type is just wrong\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    return async function methodMiddleware(request, response, next, end) {\n        const handler = handlers_1.methodHandlers[request.method];\n        if (handler) {\n            if (String.prototype.startsWith.call(request.method, 'snap_') &&\n                !isSnap) {\n                return end(rpc_errors_1.rpcErrors.methodNotFound());\n            }\n            // TODO: Once json-rpc-engine types are up to date, we should type this correctly\n            const { implementation, hookNames } = handler;\n            try {\n                // Implementations may or may not be async, so we must await them.\n                return await implementation(request, response, next, end, (0, utils_1.selectHooks)(hooks, hookNames));\n            }\n            catch (error) {\n                (0, snaps_utils_1.logError)(error);\n                return end(error);\n            }\n        }\n        return next();\n    };\n}\nexports.createSnapsMethodMiddleware = createSnapsMethodMiddleware;\n//# sourceMappingURL=middleware.cjs.map","import { CaveatMutatorOperation } from '@metamask/permission-controller';\nimport { CaveatTypes } from '../../../../shared/constants/permissions';\nimport { normalizeSafeAddress } from '../../lib/multichain/address';\n\n/**\n * Factories that construct caveat mutator functions that are passed to\n * PermissionController.updatePermissionsByCaveat.\n */\nexport const CaveatMutatorFactories = {\n  [CaveatTypes.restrictReturnedAccounts]: {\n    removeAccount,\n  },\n  [CaveatTypes.restrictNetworkSwitching]: {\n    removeChainId,\n  },\n};\n\n/**\n * Removes the target account from the value arrays of all\n * `restrictReturnedAccounts` caveats. No-ops if the target account is not in\n * the array, and revokes the parent permission if it's the only account in\n * the array.\n *\n * @param {string} targetAccount - The address of the account to remove from\n * all accounts permissions.\n * @param {string[]} existingAccounts - The account address array from the\n * account permissions.\n */\nfunction removeAccount(targetAccount, existingAccounts) {\n  const checkSumTargetAccount = normalizeSafeAddress(targetAccount);\n  const newAccounts = existingAccounts.filter(\n    (address) => normalizeSafeAddress(address) !== checkSumTargetAccount,\n  );\n\n  if (newAccounts.length === existingAccounts.length) {\n    return { operation: CaveatMutatorOperation.noop };\n  } else if (newAccounts.length > 0) {\n    return {\n      operation: CaveatMutatorOperation.updateValue,\n      value: newAccounts,\n    };\n  }\n  return { operation: CaveatMutatorOperation.revokePermission };\n}\n\n/**\n * Removes the target chain ID from the value arrays of all\n * `restrictNetworkSwitching` caveats. No-ops if the target chain ID is not in\n * the array, and revokes the parent permission if it's the only chain ID in\n * the array.\n *\n * @param {string} targetChainId - The chain ID to remove from\n * all network switching permissions.\n * @param {string[]} existingChainIds - The chain ID array from the\n * network switching permissions.\n */\nfunction removeChainId(targetChainId, existingChainIds) {\n  const newChainIds = existingChainIds.filter(\n    (chainId) => chainId !== targetChainId,\n  );\n\n  if (newChainIds.length === existingChainIds.length) {\n    return { operation: CaveatMutatorOperation.noop };\n  } else if (newChainIds.length > 0) {\n    return {\n      operation: CaveatMutatorOperation.updateValue,\n      value: newChainIds,\n    };\n  }\n  return { operation: CaveatMutatorOperation.revokePermission };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSnapPermissionsRequest = exports.hasRequestedSnaps = exports.requestSnapsHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\nconst invokeSnap_1 = require(\"../restricted/invokeSnap.cjs\");\nconst hookNames = {\n    installSnaps: true,\n    requestPermissions: true,\n    getPermissions: true,\n};\n/**\n * `wallet_requestSnaps` installs the requested Snaps and requests permission to use them if necessary.\n */\nexports.requestSnapsHandler = {\n    methodNames: ['wallet_requestSnaps'],\n    implementation: requestSnapsImplementation,\n    hookNames,\n};\n/**\n * Checks whether an origin has existing `wallet_snap` permission and\n * whether or not it has the requested snapIds caveat.\n *\n * @param existingPermissions - The existing permissions for the origin.\n * @param requestedSnaps - The requested snaps.\n * @returns True if the existing permissions satisfy the requested snaps, otherwise false.\n */\nfunction hasRequestedSnaps(existingPermissions, requestedSnaps) {\n    const snapIdCaveat = existingPermissions[invokeSnap_1.WALLET_SNAP_PERMISSION_KEY]?.caveats?.find((caveat) => caveat.type === snaps_utils_1.SnapCaveatType.SnapIds);\n    const permittedSnaps = snapIdCaveat?.value;\n    if ((0, utils_1.isObject)(permittedSnaps)) {\n        return Object.keys(requestedSnaps).every((requestedSnap) => (0, utils_1.hasProperty)(permittedSnaps, requestedSnap));\n    }\n    return false;\n}\nexports.hasRequestedSnaps = hasRequestedSnaps;\n/**\n * Constructs a valid permission request with merged caveats based on existing permissions\n * and the requested snaps.\n *\n * @param existingPermissions - The existing permissions for the origin.\n * @param requestedPermissions - The permission request passed into `requestPermissions`.\n * @returns `requestedPermissions`.\n */\nfunction getSnapPermissionsRequest(existingPermissions, requestedPermissions) {\n    (0, snaps_utils_1.verifyRequestedSnapPermissions)(requestedPermissions);\n    if (!existingPermissions[invokeSnap_1.WALLET_SNAP_PERMISSION_KEY]) {\n        return requestedPermissions;\n    }\n    const snapIdCaveat = existingPermissions[invokeSnap_1.WALLET_SNAP_PERMISSION_KEY].caveats?.find((caveat) => caveat.type === snaps_utils_1.SnapCaveatType.SnapIds);\n    const permittedSnaps = snapIdCaveat?.value ?? {};\n    const requestedSnaps = requestedPermissions[invokeSnap_1.WALLET_SNAP_PERMISSION_KEY].caveats[0].value;\n    const snapIdSet = new Set([\n        ...Object.keys(permittedSnaps),\n        ...Object.keys(requestedSnaps),\n    ]);\n    const mergedCaveatValue = [...snapIdSet].reduce((request, snapId) => {\n        request[snapId] = requestedSnaps[snapId] ?? permittedSnaps[snapId];\n        return request;\n    }, {});\n    requestedPermissions[invokeSnap_1.WALLET_SNAP_PERMISSION_KEY].caveats[0].value =\n        mergedCaveatValue;\n    return requestedPermissions;\n}\nexports.getSnapPermissionsRequest = getSnapPermissionsRequest;\n/**\n * The `wallet_requestSnaps` method implementation.\n * Tries to install the requested snaps and adds them to the JSON-RPC response.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.installSnaps - A function that tries to install a given snap, prompting the user if necessary.\n * @param hooks.requestPermissions - A function that requests permissions on\n * behalf of a subject.\n * @param hooks.getPermissions - A function that gets the current permissions.\n * @returns A promise that resolves once the JSON-RPC response has been modified.\n * @throws If the params are invalid.\n */\nasync function requestSnapsImplementation(req, res, _next, end, { installSnaps, requestPermissions, getPermissions }) {\n    const requestedSnaps = req.params;\n    if (!(0, utils_1.isObject)(requestedSnaps)) {\n        return end(rpc_errors_1.rpcErrors.invalidParams({\n            message: '\"params\" must be an object.',\n        }));\n    }\n    try {\n        if (Object.keys(requestedSnaps).length === 0) {\n            return end(rpc_errors_1.rpcErrors.invalidParams({\n                message: 'Request must have at least one requested snap.',\n            }));\n        }\n        const requestedPermissions = {\n            [invokeSnap_1.WALLET_SNAP_PERMISSION_KEY]: {\n                caveats: [{ type: snaps_utils_1.SnapCaveatType.SnapIds, value: requestedSnaps }],\n            },\n        };\n        const existingPermissions = await getPermissions();\n        if (!existingPermissions) {\n            const [, metadata] = await requestPermissions(requestedPermissions);\n            res.result = metadata.data[invokeSnap_1.WALLET_SNAP_PERMISSION_KEY];\n        }\n        else if (hasRequestedSnaps(existingPermissions, requestedSnaps)) {\n            res.result = await installSnaps(requestedSnaps);\n        }\n        else {\n            const mergedPermissionsRequest = getSnapPermissionsRequest(existingPermissions, requestedPermissions);\n            const [, metadata] = await requestPermissions(mergedPermissionsRequest);\n            res.result = metadata.data[invokeSnap_1.WALLET_SNAP_PERMISSION_KEY];\n        }\n    }\n    catch (error) {\n        res.error = error;\n    }\n    return end();\n}\n//# sourceMappingURL=requestSnaps.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveInterfaceHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst hookNames = {\n    resolveInterface: true,\n};\nexports.resolveInterfaceHandler = {\n    methodNames: ['snap_resolveInterface'],\n    implementation: getResolveInterfaceImplementation,\n    hookNames,\n};\nconst ResolveInterfaceParametersStruct = (0, superstruct_1.object)({\n    id: (0, superstruct_1.string)(),\n    value: utils_1.JsonStruct,\n});\n/**\n * The `snap_resolveInterface` method implementation.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.resolveInterface - The function to resolve the interface.\n * @returns Nothing.\n */\nasync function getResolveInterfaceImplementation(req, res, _next, end, { resolveInterface }) {\n    const { params } = req;\n    try {\n        const validatedParams = getValidatedParams(params);\n        const { id, value } = validatedParams;\n        await resolveInterface(id, value);\n        res.result = null;\n    }\n    catch (error) {\n        return end(error);\n    }\n    return end();\n}\n/**\n * Validate the resolveInterface method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @returns The validated resolveInterface method parameter object.\n */\nfunction getValidatedParams(params) {\n    try {\n        return (0, superstruct_1.create)(params, ResolveInterfaceParametersStruct);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Invalid params: ${error.message}.`,\n            });\n        }\n        /* istanbul ignore next */\n        throw rpc_errors_1.rpcErrors.internal();\n    }\n}\n//# sourceMappingURL=resolveInterface.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateInterfaceHandler = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst hookNames = {\n    updateInterface: true,\n};\nexports.updateInterfaceHandler = {\n    methodNames: ['snap_updateInterface'],\n    implementation: getUpdateInterfaceImplementation,\n    hookNames,\n};\nconst UpdateInterfaceParametersStruct = (0, superstruct_1.object)({\n    id: (0, superstruct_1.string)(),\n    ui: snaps_sdk_1.ComponentOrElementStruct,\n});\n/**\n * The `snap_updateInterface` method implementation.\n *\n * @param req - The JSON-RPC request object.\n * @param res - The JSON-RPC response object.\n * @param _next - The `json-rpc-engine` \"next\" callback. Not used by this\n * function.\n * @param end - The `json-rpc-engine` \"end\" callback.\n * @param hooks - The RPC method hooks.\n * @param hooks.updateInterface - The function to update the interface.\n * @returns Nothing.\n */\nasync function getUpdateInterfaceImplementation(req, res, _next, end, { updateInterface }) {\n    const { params } = req;\n    try {\n        const validatedParams = getValidatedParams(params);\n        const { id, ui } = validatedParams;\n        await updateInterface(id, ui);\n        res.result = null;\n    }\n    catch (error) {\n        return end(error);\n    }\n    return end();\n}\n/**\n * Validate the updateInterface method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @returns The validated updateInterface method parameter object.\n */\nfunction getValidatedParams(params) {\n    try {\n        return (0, superstruct_1.create)(params, UpdateInterfaceParametersStruct);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: `Invalid params: ${error.message}.`,\n            });\n        }\n        /* istanbul ignore next */\n        throw rpc_errors_1.rpcErrors.internal();\n    }\n}\n//# sourceMappingURL=updateInterface.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.caveatMappers = exports.caveatSpecifications = void 0;\nconst getBip32Entropy_1 = require(\"../getBip32Entropy.cjs\");\nconst getBip32PublicKey_1 = require(\"../getBip32PublicKey.cjs\");\nconst getBip44Entropy_1 = require(\"../getBip44Entropy.cjs\");\nconst invokeSnap_1 = require(\"../invokeSnap.cjs\");\nconst permittedCoinTypes_1 = require(\"./permittedCoinTypes.cjs\");\nconst permittedDerivationPaths_1 = require(\"./permittedDerivationPaths.cjs\");\nconst snapIds_1 = require(\"./snapIds.cjs\");\nexports.caveatSpecifications = {\n    ...permittedDerivationPaths_1.PermittedDerivationPathsCaveatSpecification,\n    ...permittedCoinTypes_1.PermittedCoinTypesCaveatSpecification,\n    ...snapIds_1.SnapIdsCaveatSpecification,\n};\nexports.caveatMappers = {\n    [getBip32Entropy_1.getBip32EntropyBuilder.targetName]: permittedDerivationPaths_1.permittedDerivationPathsCaveatMapper,\n    [getBip32PublicKey_1.getBip32PublicKeyBuilder.targetName]: permittedDerivationPaths_1.permittedDerivationPathsCaveatMapper,\n    [getBip44Entropy_1.getBip44EntropyBuilder.targetName]: permittedCoinTypes_1.permittedCoinTypesCaveatMapper,\n    [invokeSnap_1.invokeSnapBuilder.targetName]: snapIds_1.snapIdsCaveatMapper,\n};\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PermittedCoinTypesCaveatSpecification = exports.validateBIP44Caveat = exports.validateBIP44Params = exports.permittedCoinTypesCaveatMapper = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction permittedCoinTypesCaveatMapper(value) {\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.PermittedCoinTypes,\n                value,\n            },\n        ],\n    };\n}\nexports.permittedCoinTypesCaveatMapper = permittedCoinTypesCaveatMapper;\n/**\n * Validate the params for `snap_getBip44Entropy`.\n *\n * @param value - The params to validate.\n * @throws If the params are invalid.\n */\nfunction validateBIP44Params(value) {\n    if (!(0, utils_1.isPlainObject)(value) || !(0, utils_1.hasProperty)(value, 'coinType')) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected a plain object containing a coin type.',\n        });\n    }\n    if (typeof value.coinType !== 'number' ||\n        !Number.isInteger(value.coinType) ||\n        value.coinType < 0 ||\n        value.coinType > 0x7fffffff) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Invalid \"coinType\" parameter. Coin type must be a non-negative integer.',\n        });\n    }\n    if (snaps_utils_1.FORBIDDEN_COIN_TYPES.includes(value.coinType)) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: `Coin type ${value.coinType} is forbidden.`,\n        });\n    }\n}\nexports.validateBIP44Params = validateBIP44Params;\n/**\n * Validate the coin types values associated with a caveat. This checks if the\n * values are non-negative integers (>= 0).\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat is invalid.\n */\nfunction validateBIP44Caveat(caveat) {\n    if (!(0, utils_1.hasProperty)(caveat, 'value') ||\n        !Array.isArray(caveat.value) ||\n        caveat.value.length === 0) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: 'Expected non-empty array of coin types.',\n        });\n    }\n    caveat.value.forEach(validateBIP44Params);\n}\nexports.validateBIP44Caveat = validateBIP44Caveat;\nexports.PermittedCoinTypesCaveatSpecification = {\n    [snaps_utils_1.SnapCaveatType.PermittedCoinTypes]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.PermittedCoinTypes,\n        decorator: (method, caveat) => {\n            return async (args) => {\n                const { params } = args;\n                validateBIP44Params(params);\n                const coinType = caveat.value.find((caveatValue) => caveatValue.coinType === params.coinType);\n                if (!coinType) {\n                    throw rpc_errors_1.providerErrors.unauthorized({\n                        message: 'The requested coin type is not permitted. Allowed coin types must be specified in the snap manifest.',\n                    });\n                }\n                return await method(args);\n            };\n        },\n        validator: (caveat) => validateBIP44Caveat(caveat),\n    }),\n};\n//# sourceMappingURL=permittedCoinTypes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PermittedDerivationPathsCaveatSpecification = exports.validateBIP32CaveatPaths = exports.validateBIP32Path = exports.permittedDerivationPathsCaveatMapper = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction permittedDerivationPathsCaveatMapper(value) {\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.PermittedDerivationPaths,\n                value,\n            },\n        ],\n    };\n}\nexports.permittedDerivationPathsCaveatMapper = permittedDerivationPathsCaveatMapper;\n/**\n * Validate a caveat path object. The object must consist of a `path` array and\n * a `curve` string. Paths must start with `m`, and must contain at\n * least two indices. If `ed25519` is used, this checks if all the path indices\n * are hardened.\n *\n * @param value - The value to validate.\n * @throws If the value is invalid.\n */\nfunction validateBIP32Path(value) {\n    (0, utils_1.assertStruct)(value, snaps_utils_1.Bip32EntropyStruct, 'Invalid BIP-32 entropy path definition', rpc_errors_1.rpcErrors.invalidParams);\n}\nexports.validateBIP32Path = validateBIP32Path;\n/**\n * Validate the path values associated with a caveat. This validates that the\n * value is a non-empty array with valid derivation paths and curves.\n *\n * @param caveat - The caveat to validate.\n * @throws If the value is invalid.\n */\nfunction validateBIP32CaveatPaths(caveat) {\n    (0, utils_1.assertStruct)(caveat, (0, superstruct_1.type)({ value: (0, superstruct_1.size)((0, superstruct_1.array)(snaps_utils_1.Bip32EntropyStruct), 1, Infinity) }), 'Invalid BIP-32 entropy caveat', rpc_errors_1.rpcErrors.internal);\n}\nexports.validateBIP32CaveatPaths = validateBIP32CaveatPaths;\nexports.PermittedDerivationPathsCaveatSpecification = {\n    [snaps_utils_1.SnapCaveatType.PermittedDerivationPaths]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.PermittedDerivationPaths,\n        decorator: (method, caveat) => {\n            return async (args) => {\n                const { params } = args;\n                validateBIP32Path(params);\n                const path = caveat.value.find((caveatPath) => (0, snaps_utils_1.isEqual)(params.path.slice(0, caveatPath.path.length), caveatPath.path) && caveatPath.curve === params.curve);\n                if (!path) {\n                    throw rpc_errors_1.providerErrors.unauthorized({\n                        message: 'The requested path is not permitted. Allowed paths must be specified in the snap manifest.',\n                    });\n                }\n                return await method(args);\n            };\n        },\n        validator: (caveat) => validateBIP32CaveatPaths(caveat),\n    }),\n};\n//# sourceMappingURL=permittedDerivationPaths.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnapIdsCaveatSpecification = exports.validateSnapIdsCaveat = exports.snapIdsCaveatMapper = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_utils_1 = require(\"@metamask/snaps-utils\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Map a raw value from the `initialPermissions` to a caveat specification.\n * Note that this function does not do any validation, that's handled by the\n * PermissionsController when the permission is requested.\n *\n * @param value - The raw value from the `initialPermissions`.\n * @returns The caveat specification.\n */\nfunction snapIdsCaveatMapper(value) {\n    return {\n        caveats: [\n            {\n                type: snaps_utils_1.SnapCaveatType.SnapIds,\n                value,\n            },\n        ],\n    };\n}\nexports.snapIdsCaveatMapper = snapIdsCaveatMapper;\n/**\n * Validates that the caveat value exists and is a non-empty object.\n *\n * @param caveat - The caveat to validate.\n * @throws If the caveat is invalid.\n */\nfunction validateSnapIdsCaveat(caveat) {\n    (0, utils_1.assertStruct)(caveat, (0, superstruct_1.type)({\n        value: snaps_utils_1.SnapIdsStruct,\n    }), 'Expected caveat to have a value property of a non-empty object of snap IDs.', rpc_errors_1.rpcErrors.invalidParams);\n}\nexports.validateSnapIdsCaveat = validateSnapIdsCaveat;\nexports.SnapIdsCaveatSpecification = {\n    [snaps_utils_1.SnapCaveatType.SnapIds]: Object.freeze({\n        type: snaps_utils_1.SnapCaveatType.SnapIds,\n        validator: (caveat) => validateSnapIdsCaveat(caveat),\n        decorator: (method, caveat) => {\n            return async (args) => {\n                const { params, context: { origin }, } = args;\n                const snapIds = caveat.value;\n                const { snapId } = params;\n                if (!(0, utils_1.hasProperty)(snapIds, snapId)) {\n                    throw new Error(`${origin} does not have permission to invoke ${snapId} snap.`);\n                }\n                return await method(args);\n            };\n        },\n    }),\n};\n//# sourceMappingURL=snapIds.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDialogImplementation = exports.dialogBuilder = exports.DIALOG_APPROVAL_TYPES = void 0;\nconst permission_controller_1 = require(\"@metamask/permission-controller\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst snaps_sdk_1 = require(\"@metamask/snaps-sdk\");\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst methodName = 'snap_dialog';\nexports.DIALOG_APPROVAL_TYPES = {\n    [snaps_sdk_1.DialogType.Alert]: `${methodName}:alert`,\n    [snaps_sdk_1.DialogType.Confirmation]: `${methodName}:confirmation`,\n    [snaps_sdk_1.DialogType.Prompt]: `${methodName}:prompt`,\n    default: methodName,\n};\nconst PlaceholderStruct = (0, superstruct_1.optional)((0, superstruct_1.size)((0, superstruct_1.string)(), 1, 40));\n/**\n * The specification builder for the `snap_dialog` permission. `snap_dialog`\n * lets the Snap display one of the following dialogs to the user:\n * - An alert, for displaying information.\n * - A confirmation, for accepting or rejecting some action.\n * - A prompt, for inputting some information.\n *\n * @param options - The specification builder options.\n * @param options.allowedCaveats - The optional allowed caveats for the\n * permission.\n * @param options.methodHooks - The RPC method hooks needed by the method\n * implementation.\n * @returns The specification for the `snap_dialog` permission.\n */\nconst specificationBuilder = ({ allowedCaveats = null, methodHooks, }) => {\n    return {\n        permissionType: permission_controller_1.PermissionType.RestrictedMethod,\n        targetName: methodName,\n        allowedCaveats,\n        methodImplementation: getDialogImplementation(methodHooks),\n        subjectTypes: [permission_controller_1.SubjectType.Snap],\n    };\n};\nconst methodHooks = {\n    requestUserApproval: true,\n    createInterface: true,\n    getInterface: true,\n};\nexports.dialogBuilder = Object.freeze({\n    targetName: methodName,\n    specificationBuilder,\n    methodHooks,\n});\nconst AlertParametersWithContentStruct = (0, superstruct_1.object)({\n    type: (0, snaps_sdk_1.enumValue)(snaps_sdk_1.DialogType.Alert),\n    content: snaps_sdk_1.ComponentOrElementStruct,\n});\nconst AlertParametersWithIdStruct = (0, superstruct_1.object)({\n    type: (0, snaps_sdk_1.enumValue)(snaps_sdk_1.DialogType.Alert),\n    id: (0, superstruct_1.string)(),\n});\nconst AlertParametersStruct = (0, snaps_sdk_1.selectiveUnion)((value) => {\n    if ((0, utils_1.isPlainObject)(value) && (0, utils_1.hasProperty)(value, 'id')) {\n        return AlertParametersWithIdStruct;\n    }\n    return AlertParametersWithContentStruct;\n});\nconst ConfirmationParametersWithContentStruct = (0, superstruct_1.object)({\n    type: (0, snaps_sdk_1.enumValue)(snaps_sdk_1.DialogType.Confirmation),\n    content: snaps_sdk_1.ComponentOrElementStruct,\n});\nconst ConfirmationParametersWithIdStruct = (0, superstruct_1.object)({\n    type: (0, snaps_sdk_1.enumValue)(snaps_sdk_1.DialogType.Confirmation),\n    id: (0, superstruct_1.string)(),\n});\nconst ConfirmationParametersStruct = (0, snaps_sdk_1.selectiveUnion)((value) => {\n    if ((0, utils_1.isPlainObject)(value) && (0, utils_1.hasProperty)(value, 'id')) {\n        return ConfirmationParametersWithIdStruct;\n    }\n    return ConfirmationParametersWithContentStruct;\n});\nconst PromptParametersWithContentStruct = (0, superstruct_1.object)({\n    type: (0, snaps_sdk_1.enumValue)(snaps_sdk_1.DialogType.Prompt),\n    content: snaps_sdk_1.ComponentOrElementStruct,\n    placeholder: PlaceholderStruct,\n});\nconst PromptParametersWithIdStruct = (0, superstruct_1.object)({\n    type: (0, snaps_sdk_1.enumValue)(snaps_sdk_1.DialogType.Prompt),\n    id: (0, superstruct_1.string)(),\n    placeholder: PlaceholderStruct,\n});\nconst PromptParametersStruct = (0, snaps_sdk_1.selectiveUnion)((value) => {\n    if ((0, utils_1.isPlainObject)(value) && (0, utils_1.hasProperty)(value, 'id')) {\n        return PromptParametersWithIdStruct;\n    }\n    return PromptParametersWithContentStruct;\n});\nconst DefaultParametersWithContentStruct = (0, superstruct_1.object)({\n    content: snaps_sdk_1.ComponentOrElementStruct,\n});\nconst DefaultParametersWithIdStruct = (0, superstruct_1.object)({\n    id: (0, superstruct_1.string)(),\n});\nconst DefaultParametersStruct = (0, snaps_sdk_1.selectiveUnion)((value) => {\n    if ((0, utils_1.isPlainObject)(value) && (0, utils_1.hasProperty)(value, 'id')) {\n        return DefaultParametersWithIdStruct;\n    }\n    return DefaultParametersWithContentStruct;\n});\nconst DialogParametersStruct = (0, snaps_sdk_1.selectiveUnion)((value) => {\n    if ((0, utils_1.isPlainObject)(value) && (0, utils_1.hasProperty)(value, 'type')) {\n        switch (value.type) {\n            // We cannot use typedUnion here unfortunately.\n            case snaps_sdk_1.DialogType.Alert:\n                return AlertParametersStruct;\n            case snaps_sdk_1.DialogType.Confirmation:\n                return ConfirmationParametersStruct;\n            case snaps_sdk_1.DialogType.Prompt:\n                return PromptParametersStruct;\n            default:\n                throw new Error(`The \"type\" property must be one of: ${Object.values(snaps_sdk_1.DialogType).join(', ')}.`);\n        }\n    }\n    return DefaultParametersStruct;\n});\n/**\n * Builds the method implementation for `snap_dialog`.\n *\n * @param hooks - The RPC method hooks.\n * @param hooks.requestUserApproval - A function that creates a new Approval in the ApprovalController.\n * This function should return a Promise that resolves with the appropriate value when the user has approved or rejected the request.\n * @param hooks.createInterface - A function that creates the interface in SnapInterfaceController.\n * @param hooks.getInterface - A function that gets an interface from SnapInterfaceController.\n * @returns The method implementation which return value depends on the dialog\n * type, valid return types are: string, boolean, null.\n */\nfunction getDialogImplementation({ requestUserApproval, createInterface, getInterface, }) {\n    return async function dialogImplementation(args) {\n        const { params, context: { origin }, } = args;\n        if (!(0, utils_1.isObject)(params)) {\n            throw rpc_errors_1.rpcErrors.invalidParams({\n                message: 'Invalid params: Expected params to be a single object.',\n            });\n        }\n        const validatedParams = getValidatedParams(params);\n        const placeholder = isPromptDialog(validatedParams)\n            ? validatedParams.placeholder\n            : undefined;\n        const validatedType = (0, utils_1.hasProperty)(validatedParams, 'type')\n            ? validatedParams.type\n            : 'default';\n        const approvalType = exports.DIALOG_APPROVAL_TYPES[validatedType];\n        if ((0, utils_1.hasProperty)(validatedParams, 'content')) {\n            const id = await createInterface(origin, validatedParams.content);\n            return requestUserApproval({\n                id: approvalType === exports.DIALOG_APPROVAL_TYPES.default ? id : undefined,\n                origin,\n                type: approvalType,\n                requestData: { id, placeholder },\n            });\n        }\n        validateInterface(origin, validatedParams.id, getInterface);\n        return requestUserApproval({\n            id: approvalType === exports.DIALOG_APPROVAL_TYPES.default\n                ? validatedParams.id\n                : undefined,\n            origin,\n            type: approvalType,\n            requestData: { id: validatedParams.id, placeholder },\n        });\n    };\n}\nexports.getDialogImplementation = getDialogImplementation;\n/**\n * Validate that the interface ID is valid.\n *\n * @param origin - The origin of the request.\n * @param id - The interface ID.\n * @param getInterface - The function to get the interface.\n */\nfunction validateInterface(origin, id, getInterface) {\n    try {\n        getInterface(origin, id);\n    }\n    catch (error) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: `Invalid params: ${error.message}`,\n        });\n    }\n}\n/**\n * Gets the dialog type from the dialog parameters.\n *\n * @param params - The dialog parameters.\n * @returns The dialog type.\n */\nfunction getDialogType(params) {\n    return (0, utils_1.hasProperty)(params, 'type') ? params.type : undefined;\n}\n/**\n * Checks if the dialog parameters are for a prompt dialog.\n *\n * @param params - The dialog parameters.\n * @returns `true` if the dialog parameters are for a prompt dialog, `false` otherwise.\n */\nfunction isPromptDialog(params) {\n    return getDialogType(params) === snaps_sdk_1.DialogType.Prompt;\n}\n/**\n * Validates the confirm method `params` and returns them cast to the correct\n * type. Throws if validation fails.\n *\n * @param params - The unvalidated params object from the method request.\n * @returns The validated confirm method parameter object.\n */\nfunction getValidatedParams(params) {\n    try {\n        return (0, superstruct_1.create)(params, DialogParametersStruct);\n    }\n    catch (error) {\n        throw rpc_errors_1.rpcErrors.invalidParams({\n            message: `Invalid params: ${error.message}`,\n        });\n    }\n}\n//# sourceMappingURL=dialog.cjs.map"]}