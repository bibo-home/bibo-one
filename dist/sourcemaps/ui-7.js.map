{"version":3,"sources":["ui/pages/confirmations/components/confirm-gas-display/confirm-legacy-gas-display/confirm-legacy-gas-display.js","ui/pages/confirmations/components/confirm-gas-display/confirm-legacy-gas-display/index.js","ui/pages/confirmations/components/confirm-gas-display/index.js","ui/pages/confirmations/components/confirm-hexdata/confirm-hexdata.js","ui/pages/confirmations/components/confirm-hexdata/index.js","ui/pages/confirmations/components/confirm-page-container/confirm-detail-row/confirm-detail-row.component.js","ui/pages/confirmations/components/confirm-page-container/confirm-detail-row/index.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-content/confirm-page-container-content.component.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-content/confirm-page-container-summary/confirm-page-container-summary.component.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-content/confirm-page-container-summary/index.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-content/confirm-page-container-warning/confirm-page-container-warning.component.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-content/confirm-page-container-warning/index.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-content/index.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-header/confirm-page-container-header.component.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-header/index.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-navigation/confirm-page-container-navigation.component.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container-navigation/index.js","ui/pages/confirmations/components/confirm-page-container/confirm-page-container.component.js","ui/pages/confirmations/components/confirm-page-container/index.js","ui/pages/confirmations/components/confirm-subtitle/confirm-subtitle.js","ui/pages/confirmations/components/confirm-subtitle/index.js","ui/pages/confirmations/components/confirm-title/confirm-title.js","ui/pages/confirmations/components/confirm-title/index.js","ui/pages/confirmations/components/confirm/blockaid-loading-indicator/blockaid-loading-indicator.tsx","ui/pages/confirmations/components/confirm/blockaid-loading-indicator/index.ts","ui/pages/confirmations/components/confirm/confirm-alerts/confirm-alerts.tsx","ui/pages/confirmations/components/confirm/confirm-alerts/index.tsx","ui/pages/confirmations/components/confirm/footer/footer.tsx","ui/pages/confirmations/components/confirm/footer/index.tsx","ui/pages/confirmations/components/confirm/header/header-info.tsx","ui/pages/confirmations/components/confirm/header/header.tsx","ui/pages/confirmations/components/confirm/header/index.tsx","ui/pages/confirmations/components/confirm/info/approve/approve-details/approve-details.tsx","ui/pages/confirmations/components/confirm/info/approve/approve-static-simulation/approve-static-simulation.tsx","ui/pages/confirmations/components/confirm/info/approve/approve.tsx","ui/pages/confirmations/components/confirm/info/approve/edit-spending-cap-modal/edit-spending-cap-modal.tsx","ui/pages/confirmations/components/confirm/info/approve/hooks/use-approve-token-simulation.ts","ui/pages/confirmations/components/confirm/info/approve/hooks/use-is-nft.ts","ui/pages/confirmations/components/confirm/info/approve/spending-cap/spending-cap.tsx","ui/pages/confirmations/components/confirm/info/base-transaction-info/base-transaction-info.tsx","ui/pages/confirmations/components/confirm/info/hooks/useDecodedTransactionData.ts","ui/pages/confirmations/components/confirm/info/hooks/useEIP1559TxFees.ts","ui/pages/confirmations/components/confirm/info/hooks/useFeeCalculations.ts","ui/pages/confirmations/components/confirm/info/hooks/useFourByte.ts","ui/pages/confirmations/components/confirm/info/hooks/useSupportsEIP1559.ts","ui/pages/confirmations/components/confirm/info/hooks/useTransactionGasFeeEstimate.ts","ui/pages/confirmations/components/confirm/info/index.ts","ui/pages/confirmations/components/confirm/info/info.tsx","ui/pages/confirmations/components/confirm/info/personal-sign/personal-sign.tsx","ui/pages/confirmations/components/confirm/info/personal-sign/siwe-sign/index.ts","ui/pages/confirmations/components/confirm/info/personal-sign/siwe-sign/siwe-sign.tsx","ui/pages/confirmations/components/confirm/info/shared/advanced-details/advanced-details.tsx","ui/pages/confirmations/components/confirm/info/shared/constants.ts","ui/pages/confirmations/components/confirm/info/shared/edit-gas-fees-row/edit-gas-fees-row.tsx","ui/pages/confirmations/components/confirm/info/shared/edit-gas-icon/edit-gas-icon-button.tsx","ui/pages/confirmations/components/confirm/info/shared/gas-fees-details/gas-fees-details.tsx","ui/pages/confirmations/components/confirm/info/shared/gas-fees-row/gas-fees-row.tsx","ui/pages/confirmations/components/confirm/info/shared/gas-fees-section/gas-fees-section.tsx","ui/pages/confirmations/components/confirm/info/shared/static-simulation/static-simulation.tsx","ui/pages/confirmations/components/confirm/info/shared/transaction-data/transaction-data.tsx","ui/pages/confirmations/components/confirm/info/shared/transaction-details/transaction-details.tsx","ui/pages/confirmations/components/confirm/info/typed-sign-v1/typed-sign-v1.tsx","ui/pages/confirmations/components/confirm/info/typed-sign/permit-simulation/index.ts","ui/pages/confirmations/components/confirm/info/typed-sign/permit-simulation/permit-simulation.tsx","ui/pages/confirmations/components/confirm/info/typed-sign/permit-simulation/value-display/value-display.tsx","ui/pages/confirmations/components/confirm/info/typed-sign/typed-sign.tsx","ui/pages/confirmations/components/confirm/ledger-info/index.ts","ui/pages/confirmations/components/confirm/ledger-info/ledger-info.tsx","ui/pages/confirmations/components/confirm/nav/index.tsx","ui/pages/confirmations/components/confirm/nav/nav.tsx","ui/pages/confirmations/components/confirm/network-change-toast/index.tsx","ui/pages/confirmations/components/confirm/network-change-toast/network-change-toast-legacy.tsx","ui/pages/confirmations/components/confirm/network-change-toast/network-change-toast.tsx","ui/pages/confirmations/components/confirm/pluggable-section/index.ts","ui/pages/confirmations/components/confirm/pluggable-section/pluggable-section.tsx","ui/pages/confirmations/components/confirm/row/dataTree.tsx","ui/pages/confirmations/components/confirm/row/typed-sign-data-v1/typedSignDataV1.tsx","ui/pages/confirmations/components/confirm/row/typed-sign-data/typedSignData.tsx","ui/pages/confirmations/components/confirm/scroll-to-bottom/index.ts","ui/pages/confirmations/components/confirm/scroll-to-bottom/scroll-to-bottom.tsx","ui/pages/confirmations/components/confirm/snaps/snaps-section/index.ts","ui/pages/confirmations/components/confirm/snaps/snaps-section/snap-insight.tsx","ui/pages/confirmations/components/confirm/snaps/snaps-section/snaps-section.tsx","ui/pages/confirmations/components/confirm/title/index.ts","ui/pages/confirmations/components/confirm/title/title.tsx","ui/pages/confirmations/components/confirm/utils.ts","ui/pages/confirmations/components/confirmation-warning-modal/confirmation-warning-modal.js","ui/pages/confirmations/components/confirmation-warning-modal/index.js","ui/pages/confirmations/components/contract-details-modal/contract-details-modal.js","ui/pages/confirmations/components/contract-details-modal/index.js","ui/pages/confirmations/components/contract-token-values/contract-token-values.js","ui/pages/confirmations/components/custom-nonce/custom-nonce.js","ui/pages/confirmations/components/custom-nonce/index.js","ui/pages/confirmations/components/custom-spending-cap/custom-spending-cap-tooltip.js","ui/pages/confirmations/components/custom-spending-cap/custom-spending-cap.js","ui/pages/confirmations/components/edit-gas-display/edit-gas-display.component.js","ui/pages/confirmations/components/edit-gas-display/index.js","ui/pages/confirmations/components/edit-gas-fee-button/edit-gas-fee-button.js","ui/pages/confirmations/components/edit-gas-fee-button/index.js","ui/pages/confirmations/components/edit-gas-fee-icon/edit-gas-fee-icon.js","ui/pages/confirmations/components/edit-gas-fee-popover/edit-gas-fee-popover.js","ui/pages/confirmations/components/edit-gas-fee-popover/edit-gas-item/edit-gas-item.js","ui/pages/confirmations/components/edit-gas-fee-popover/edit-gas-item/index.js","ui/pages/confirmations/components/edit-gas-fee-popover/edit-gas-item/useCustomTimeEstimate.js","ui/pages/confirmations/components/edit-gas-fee-popover/edit-gas-item/useGasItemFeeDetails.js","ui/pages/confirmations/components/edit-gas-fee-popover/edit-gas-tooltip/edit-gas-tooltip.js","ui/pages/confirmations/components/edit-gas-fee-popover/index.js","ui/pages/confirmations/components/edit-gas-fee-popover/network-statistics/index.js","ui/pages/confirmations/components/edit-gas-fee-popover/network-statistics/network-statistics.js","ui/pages/confirmations/components/edit-gas-fee-popover/network-statistics/status-slider/index.js","ui/pages/confirmations/components/edit-gas-fee-popover/network-statistics/status-slider/status-slider.js","ui/pages/confirmations/components/edit-gas-fee-popover/network-statistics/tooltips.js","ui/pages/confirmations/components/edit-gas-popover/edit-gas-popover.component.js","ui/pages/confirmations/components/edit-gas-popover/index.js","ui/pages/confirmations/components/fee-details-component/fee-details-component.js","ui/pages/confirmations/components/gas-details-item/gas-details-item.js","ui/pages/confirmations/components/gas-details-item/index.js","ui/pages/confirmations/components/gas-timing/gas-timing.component.js","ui/pages/confirmations/components/ledger-instruction-field/index.js","ui/pages/confirmations/components/ledger-instruction-field/ledger-instruction-field.js","ui/pages/confirmations/components/multilayer-fee-message/index.js","ui/pages/confirmations/components/multilayer-fee-message/multi-layer-fee-message.js","ui/pages/confirmations/components/review-spending-cap/review-spending-cap.js","ui/pages/confirmations/components/security-provider-banner-alert/blockaid-banner-alert/blockaid-banner-alert.js","ui/pages/confirmations/components/security-provider-banner-alert/blockaid-banner-alert/blockaid-banner-utils.js","ui/pages/confirmations/components/security-provider-banner-alert/security-provider-banner-alert.js","ui/pages/confirmations/components/security-provider-banner-message/index.js","ui/pages/confirmations/components/security-provider-banner-message/security-provider-banner-message.js","ui/pages/confirmations/components/set-approval-for-all-warning/index.js","ui/pages/confirmations/components/set-approval-for-all-warning/set-approval-for-all-warning.js","ui/pages/confirmations/components/signature-request-header/index.js","ui/pages/confirmations/components/signature-request-header/signature-request-header.js","ui/pages/confirmations/components/signature-request-original/index.js","ui/pages/confirmations/components/signature-request-original/signature-request-original.component.js","ui/pages/confirmations/components/signature-request-original/signature-request-original.container.js","ui/pages/confirmations/components/signature-request-siwe/index.js","ui/pages/confirmations/components/signature-request-siwe/signature-request-siwe-header/index.js","ui/pages/confirmations/components/signature-request-siwe/signature-request-siwe-header/signature-request-siwe-header.js","ui/pages/confirmations/components/signature-request-siwe/signature-request-siwe-icon/index.js","ui/pages/confirmations/components/signature-request-siwe/signature-request-siwe-message/index.js","ui/pages/confirmations/components/signature-request-siwe/signature-request-siwe-message/signature-request-siwe-message.js","ui/pages/confirmations/components/signature-request-siwe/signature-request-siwe-tag/index.js","ui/pages/confirmations/components/signature-request-siwe/signature-request-siwe.js","ui/pages/confirmations/components/signature-request/index.js","ui/pages/confirmations/components/signature-request/signature-request-data/index.js","ui/pages/confirmations/components/signature-request/signature-request-data/signature-request-data.js","ui/pages/confirmations/components/signature-request/signature-request-footer/index.js","ui/pages/confirmations/components/signature-request/signature-request-footer/signature-request-footer.component.js","ui/pages/confirmations/components/signature-request/signature-request-message/index.js","ui/pages/confirmations/components/signature-request/signature-request-message/signature-request-message.js","ui/pages/confirmations/components/signature-request/signature-request.js","ui/pages/confirmations/components/simulation-details/amount-pill.tsx","ui/pages/confirmations/components/simulation-details/asset-pill.tsx","ui/pages/confirmations/components/simulation-details/balance-change-list.tsx","ui/pages/confirmations/components/simulation-details/balance-change-row.tsx","ui/pages/confirmations/components/simulation-details/fiat-display.tsx","ui/pages/confirmations/components/simulation-details/formatAmount.ts","ui/pages/confirmations/components/simulation-details/index.ts","ui/pages/confirmations/components/simulation-details/simulation-details.tsx","ui/pages/confirmations/components/simulation-details/sortBalanceChanges.ts","ui/pages/confirmations/components/simulation-details/types.ts","ui/pages/confirmations/components/simulation-details/useBalanceChanges.ts","ui/pages/confirmations/components/simulation-details/useLoadingTime.ts","ui/pages/confirmations/components/simulation-details/useSimulationMetrics.ts","ui/pages/confirmations/components/simulation-error-message/index.js","ui/pages/confirmations/components/simulation-error-message/simulation-error-message.js","ui/pages/confirmations/components/snap-account-error-message/SnapAccountErrorMessage.tsx","ui/pages/confirmations/components/snap-account-error-message/index.tsx","ui/pages/confirmations/components/snap-account-success-message/SnapAccountSuccessMessage.tsx","ui/pages/confirmations/components/snap-account-success-message/index.tsx","ui/pages/confirmations/components/transaction-alerts/index.js","ui/pages/confirmations/components/transaction-alerts/transaction-alerts.js","ui/pages/confirmations/components/transaction-decoding/components/decoding/address/address.component.js","ui/pages/confirmations/components/transaction-decoding/components/decoding/address/index.js","ui/pages/confirmations/components/transaction-decoding/components/ui/copy-raw-data/copy-raw-data.component.js","ui/pages/confirmations/components/transaction-decoding/components/ui/copy-raw-data/index.js","ui/pages/confirmations/components/transaction-detail-item/index.js","ui/pages/confirmations/components/transaction-detail-item/transaction-detail-item.component.js","ui/pages/confirmations/components/transaction-detail/transaction-detail.component.js","ui/pages/confirmations/confirm-approve/confirm-approve-content/confirm-approve-content.component.js","ui/pages/confirmations/confirm-approve/confirm-approve-content/index.js","ui/pages/confirmations/confirm-approve/confirm-approve.js","ui/pages/confirmations/confirm-approve/confirm-approve.util.js","ui/pages/confirmations/confirm-approve/index.js","ui/pages/confirmations/confirm-contract-interaction/confirm-contract-interaction.js","ui/pages/confirmations/confirm-contract-interaction/index.js","ui/pages/confirmations/confirm-deploy-contract/confirm-deploy-contract.component.js"],"names":["_react","_interopRequireDefault","require","_propTypes","_reactRedux","_useI18nContext","_selectors","_common","_transactionDetailItem","_userPreferencedCurrencyDisplay","_infoTooltip","_loadingHeartbeat","_designSystem","_useDraftTransactionWithTxParams","_componentLibrary","_conversion","obj","__esModule","default","renderHeartBeatIfNotInTest","createElement","ConfirmLegacyGasDisplay","dataTestId","t","useI18nContext","isMainnet","useSelector","getIsMainnet","useCurrencyRateCheck","getUseCurrencyRateCheck","useNativeCurrencyAsPrimaryCurrency","getPreferences","unapprovedTxs","getUnapprovedTransactions","transactionData","useDraftTransactionWithTxParams","txData","state","txDataSelector","id","transactionId","dappSuggestedGasFees","layer1GasFee","transaction","Object","keys","length","hexMinimumTransactionFee","hexMaximumTransactionFee","transactionFeeSelector","estimatedHexMinFeeTotal","addHexes","estimatedHexMaxFeeTotal","key","detailTitle","Fragment","contentText","position","Icon","name","IconName","Info","href","target","rel","detailText","type","SECONDARY","value","hideLabel","Boolean","detailTotal","PRIMARY","suffixProps","color","TextColor","textDefault","variant","TextVariant","bodyMdBold","textProps","numberOfDecimals","subText","subTitle","propTypes","string","exports","_confirmLegacyGasDisplay","_confirmGasDisplay","_bufferUtils","_useTransactionFunctionType","_box","_copyRawData","ConfirmHexData","dataHexComponent","txParams","methodData","getKnownMethodData","data","functionType","useTransactionFunctionType","to","params","functionParams","map","join","padding","paddingBottom","paddingTop","Text","as","textTransform","TextTransform","Uppercase","bodySm","Color","paddingLeft","Capitalize","bodySmBold","backgroundColor","backgroundAlternative","overflowWrap","OverflowWrap","BreakWord","JSON","stringify","toBuffer","object","element","_confirmHexdata","_classnames","ConfirmDetailRow","props","label","primaryText","secondaryText","onHeaderClick","primaryValueTextColor","headerText","headerTextClassName","className","onClick","style","showEthLogo","func","oneOfType","node","_confirmDetailRow","e","r","_getRequireWildcardCache","has","get","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_tabs","_pageContainer","_errorKeys","_securityProvider","_","WeakMap","_defineProperty","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","ConfirmPageContainerContent","Component","renderContent","detailsComponent","insightComponent","this","renderTabs","context","Tabs","defaultActiveTabKey","Tab","tabKey","render","_txData$securityAlert","action","errorKey","errorMessage","image","titleComponent","subtitleComponent","tokenAddress","nonce","warning","onCancelAll","onCancel","cancelText","onSubmit","submitText","disabled","unapprovedTxCount","rejectNText","origin","ethGasPriceWarning","supportsEIP1559","hasTopBorder","nativeCurrency","networkName","toAddress","transactionType","isBuyableChain","openBuyCryptoInPdapp","showInsufficientFundsError","INSUFFICIENT_FUNDS_ERROR_KEY","showIsSigningOrSubmittingError","IS_SIGNING_OR_SUBMITTING","showUserOpContractDeployError","USER_OP_CONTRACT_DEPLOY_ERROR_KEY","submitButtonType","securityAlertResponse","result_type","BlockaidResultType","Malicious","ConfirmPageContainerWarning","ConfirmPageContainerSummary","BannerAlert","severity","Severity","Danger","description","marginBottom","marginLeft","marginRight","Button","BUTTON_VARIANT","LINK","size","BUTTON_SIZES","INHERIT","PageContainerFooter","isRequired","bool","number","_transactionController","_hexstringUtils","_useAddressDetails","_identicon","_nicknamePopovers","_app","_siteOrigin","_useGetAssetImageUrl","showNicknamePopovers","setShowNicknamePopovers","useState","ipfsGateway","getIpfsGateway","nftImageURL","txParamsToAddress","isContractTypeTransaction","TransactionType","contractInteraction","tokenMethodTransfer","tokenMethodTransferFrom","tokenMethodSafeTransferFrom","includes","contractAddress","tokenMethodSetApprovalForAll","toName","isTrusted","checksummedAddress","toChecksumHexAddress","ORIGIN_METAMASK","siteOrigin","role","width","src","diameter","address","onClose","_confirmPageContainerSummary","IconColor","warningDefault","_confirmPageContainerWarning","_confirmPageContainerContent","_util","_networkDisplay","_util2","_accountMismatchWarning","ConfirmPageContainerHeader","onEdit","showEdit","accountAddress","showAccountInHeader","children","windowType","getEnvironmentType","isFullScreen","ENVIRONMENT_TYPE_NOTIFICATION","ENVIRONMENT_TYPE_POPUP","shortenAddress","visibility","ArrowLeft","_confirmPageContainerHeader","_reactRouterDom","_i18n","_routes","_confirmTransaction","_metametrics","_useQueuedConfirmationEvents","useContext","I18nContext","dispatch","useDispatch","history","useHistory","useParams","unapprovedDecryptMsgs","unapprovedDecryptMsgsSelector","unapprovedEncryptionPublicKeyMsgs","unapprovedEncryptionPublicKeyMsgsSelector","unconfirmedTransactions","unconfirmedTransactionsListSelector","enumDecryptAndEncryptMsgs","enumUnapprovedTxs","tx","filter","currentPosition","indexOf","totalTx","positionOfCurrentTx","nextTxId","prevTxId","showNavigation","firstTx","lastTx","onNextTx","txId","_unconfirmedTransacti","clearConfirmTransaction","push","msgParams","CONFIRM_TRANSACTION_ROUTE","SIGNATURE_REQUEST_PATH","useQueuedConfirmationsEvent","QueueType","NavigationHeader","display","_confirmPageContainerNavigation","_gas","_gasFee","_transaction","_network","_button","_actionableMessage","_senderToRecipient","_tokenUtil","_advancedGasFeePopover","_editGasFeePopover","_editGasPopover","_errorMessage","_networkAccountBalanceHeader","_setApprovalForAllWarning","_useTransactionInsights","_insightWarnings","_useRamps","_metametrics2","_ramps","ConfirmPageContainer","fromName","fromAddress","toEns","toNickname","contentComponent","title","onSetApprovalForAll","showWarningModal","hideSenderToRecipient","editingGas","handleCloseEditGas","currentTransaction","assetStandard","isApprovalOrRejection","displayAccountBalanceHeader","trackEvent","MetaMetricsContext","collectionBalance","setCollectionBalance","isShowingTxInsightWarnings","setIsShowingTxInsightWarnings","getIsNativeTokenBuyable","contact","getAddressBookEntry","networkIdentifier","getNetworkIdentifier","accountBalance","getSwapsDefaultToken","internalAccounts","getInternalAccounts","ownedAccountName","getAccountName","recipientIsOwnedAccount","toMetadataName","getMetadataContractName","isSetApproveForAll","shouldDisplayWarning","NETWORK_TO_NAME_MAP","chainId","fetchCollectionBalance","useCallback","async","tokenBalance","fetchTokenBalance","global","ethereumProvider","toString","insightObject","handleSubmit","topLevelHandleSubmit","_insightObject$warnin","warnings","useEffect","TokenStandard","ERC721","isMaliciousRequest","GasFeeContextProvider","ConfirmPageContainerNavigation","accountName","tokenName","senderName","senderAddress","recipientName","recipientMetadataName","recipientAddress","recipientEns","recipientNickname","message","textAlign","TextAlign","Left","event","MetaMetricsEventName","NavBuyButtonClicked","category","MetaMetricsEventCategory","Navigation","properties","location","text","useIcon","iconFillColor","collectionName","isERC721","total","mode","EditGasModes","modifyInPlace","_confirmPageContainer","_snapInsight","_transactions","_useTransactionInfo","ConfirmSubTitle","hexTransactionAmount","shouldShowFiat","getShouldShowFiat","isNftTransfer","useTransactionInfo","isNFTAssetStandard","ellipsis","bodyMd","textAlternative","_confirmSubtitle","ConfirmTitle","_txData$txParams","isContractInteraction","deployContract","displayMd","headingMd","fontWeight","FONT_WEIGHT","NORMAL","showCurrencySuffix","_confirmTitle","_preloader","_useCurrentSignatureSecurityAlertResponse","signatureSecurityAlertResponse","Loading","Box","marginInline","marginTop","_blockaidLoadingIndicator","_alertActionHandler","_useConfirmationAlertActions","_setConfirmationAlerts","_alertMetricsContext","_useConfirmationAlertMetrics","trackAlertActionClicked","trackAlertRender","trackInlineAlertClicked","useConfirmationAlertMetrics","processAction","AlertMetricsProvider","metrics","AlertActionHandlerProvider","onProcessAction","_confirmAlerts","_ethRpcErrors","_confirmAlertModal","_page","_useAlerts","_actions","_preferences","_utils","_confirm","_utils2","ConfirmButton","alertOwnerId","confirmModalVisible","setConfirmModalVisible","dangerAlerts","hasDangerAlerts","hasUnconfirmedDangerAlerts","handleCloseConfirmModal","handleOpenConfirmModal","ConfirmAlertModal","ownerId","block","danger","ButtonSize","Lg","startIconName","customNonceValue","getCustomNonceValue","useTransactionSimulations","selectUseTransactionSimulations","currentConfirmation","isScrollToBottomCompleted","useConfirmContext","from","getConfirmationSender","hardwareWalletRequiresConnection","doesAddressRequireLedgerHidConnection","isSIWE","isSIWESignatureRequest","isPermit","isPermitSignatureRequest","isConfirmDisabled","error","ethErrors","provider","userRejectedRequest","rejectPendingApproval","serializeError","REDESIGN_DEV_TRANSACTION_TYPES","find","updatedTx","mergeTxDataWithNonce","updateAndApproveTx","resolvePendingApproval","onFooterCancel","MetaMetricsEventLocation","Confirmation","Footer","ButtonVariant","Secondary","_footer","_row","_currency","_multichain","_tooltip","_useBalance","_useConfirmationRecipientInfo","_confirm2","_msgParams","useBlockie","getUseBlockie","showAccountInfo","setShowAccountInfo","showAdvancedDetails","selectConfirmationAdvancedDetailsOpen","balance","balanceToUse","useBalance","eventProps","isSignatureTransactionType","SignatureConfirmation","signature_type","signatureMethod","Transaction","transaction_type","isShowAdvancedDetailsToggle","Display","Flex","justifyContent","JustifyContent","flexEnd","alignSelf","interactive","ButtonIcon","ariaLabel","iconDefault","iconName","ButtonIconSize","Md","Confirmations","AccountDetailsOpened","trackAccountModalOpened","BackgroundColor","infoMuted","transparent","borderRadius","BorderRadius","MD","Customize","setConfirmationAdvancedDetailsOpen","Modal","isOpen","isClosedOnEscapeKey","isClosedOnOutsideClick","ModalOverlay","ModalContent","ModalHeader","center","margin","flexDirection","FlexDirection","Column","alignItems","AlignItems","AvatarAccount","AvatarAccountVariant","Blockies","Jazzicon","AvatarAccountSize","FontWeight","Bold","right","Close","Sm","ModalBody","ConfirmInfoRow","AddressCopyButton","shorten","ConfirmInfoRowCurrency","_accounts","_useConfirmationNetworkInfo","_headerInfo","networkImageUrl","networkDisplayName","spaceBetween","flexStart","AvatarNetwork","AvatarNetworkSize","Xs","getAvatarNetworkColor","marginInlineStart","bodyMdMedium","_header","_section","_useDecodedTransactionData","_transactionData","_transactionDetails","_useIsNft","Spender","transactionMeta","isNFT","useIsNFT","decodedResponse","useDecodedTransactionData","pending","Container","isLoading","spender","tooltip","ConfirmInfoRowAddress","ConfirmInfoRowDivider","ApproveDetails","ConfirmInfoSection","OriginRow","RecipientRow","MethodDataRow","_nameController","_name","_constants","_useAssetDetails","_staticSimulation","_useApproveTokenSimulation","ApproveStaticSimulation","_transactionMeta$txPa","_transactionMeta$txPa2","_transactionMeta$txPa3","decimals","initialDecimals","useAssetDetails","spendingCap","formattedSpendingCap","useApproveTokenSimulation","formattedTokenText","XL","paddingInline","Center","SPENDING_CAP_UNLIMITED_MSG","simulationElements","Inline","marginInlineEnd","minWidth","BlockSize","Zero","NameType","ETHEREUM_ADDRESS","titleTooltip","simulationHeading","_advancedDetails","_gasFeesSection","_approveDetails","_approveStaticSimulation","_editSpendingCapModal","_spendingCap","isOpenEditSpendingCapModal","setIsOpenEditSpendingCapModal","SpendingCap","GasFeesSection","AdvancedDetails","EditSpendingCapModal","_transactionsControllerUtils","_confirmApprove","userBalance","tokenSymbol","calcTokenAmount","toFixed","customSpendingCapInputValue","setCustomSpendingCapInputValue","handleCancel","isModalSaving","setIsModalSaving","parsedValue","parseInt","customTxParamsData","getCustomTxParamsData","customPermissionAmount","estimatedGasLimit","estimateGas","updateEditableParams","gas","hexToDecimal","childrenWrapperProps","TextField","TextFieldType","onChange","placeholder","inputProps","ModalFooter","submitButtonProps","loading","_bignumber","_locale","UNLIMITED_THRESHOLD","locale","getIntlLocale","isNFTPending","decodedSpendingCap","useMemo","BigNumber","dividedBy","pow","toNumber","Intl","NumberFormat","format","isSpendingCapUnlimited","_useAsyncResult","useAsyncResult","getTokenStandardAndDetails","standard","ERC20","SpendingCapGroup","customSpendingCap","spendingCapValue","SpendingCapElement","ConfirmInfoRowText","onEditClick","editIconClassName","editIconDataTestId","_simulationDetails","noPadding","SimulationDetails","simulationData","isTransactionsRedesign","TransactionDetails","_currentConfirmation$","_currentConfirmation$2","decodeTransactionData","useEIP1559TxFees","hexMaxFeePerGas","maxFeePerGas","hexMaxPriorityFeePerGas","maxPriorityFeePerGas","_transactionMeta$dapp","currentCurrency","getCurrentCurrency","conversionRate","_metamask","getConversionRate","fiatFormatter","_useFiatFormatter","useFiatFormatter","getFeesFromHex","hexFee","nativeCurrencyFee","getEthConversionFromWeiHex","fromCurrency","EtherDenomination","GWEI","ETH","currentCurrencyFee","getValueFromWeiHex","toCurrency","_useEIP1559TxFees","_useSupportsEIP","useSupportsEIP1559","gasFeeEstimate","_useTransactionGasFeeEstimate","useTransactionGasFeeEstimate","gasFeeEstimates","_useGasFeeEstimates","useGasFeeEstimates","networkClientId","estimatedBaseFee","hasLayer1GasFee","feesL1","EMPTY_FEES","feesL2","gasLimit","HEX_ZERO","gasPrice","maxFee","multiplyHexes","decimalToHex","maxFeeFiat","maxFeeNative","estimatedFees","estimatedTotalFeesForL2","minimumFeePerGas","decGWEIToHexWEI","estimatedFee","estimatedFeeFiat","estimatedFeeNative","l1FeeFiat","l1FeeNative","l2FeeFiat","l2FeeNative","useFourByte","isFourByteEnabled","use4ByteResolutionSelector","getContractMethodData","isLegacyTxn","TransactionEnvelopeType","legacy","isLegacyTransaction","selectedNetworkClientId","getSelectedNetworkClientId","networkAndAccountSupports1559","checkNetworkAndAccountSupports1559","_transactionMeta$dapp2","_transactionMeta$dapp3","gasEstimate","_info","_baseTransactionInfo","_personalSign","_typedSignV","_typedSign","_approve","ConfirmationInfoComponentMap","personalSign","signTypedData","version","tokenMethodApprove","tokenMethodIncreaseAllowance","InfoComponent","_alertRow","_siweSign","ConfirmInfoAlertRow","alertKey","RowAlertKey","RequestFrom","ConfirmInfoRowUrl","url","SigningInWith","SIWESignInfo","sanitizeString","hexToText","_luxon","_controllerUtils","siweMessage","siwe","parsedMessage","domain","issuedAt","requestId","statement","resources","hexChainId","toHex","network","ConfirmInfoRowDate","unixTimestamp","DateTime","fromISO","zone","toUnixInteger","resource","index","NonceDetails","getNextNonce","enableCustomNonce","getUseNonceField","nextNonce","getNextSuggestedNonce","displayedNonce","showModal","updateCustomNonce","TransactionData","_editGasIconButton","EditGasFeesRow","fiatFee","nativeFee","setShowCustomizeGasPopover","isNativeCurrencyUsed","EstimatedFee","Row","EditGasIconButton","_transactionModal","_useTransactionEventFragment","openModal","useTransactionModalContext","updateTransactionEventFragment","useTransactionEventFragment","textDecoration","Link","Edit","primaryDefault","gas_edit_attempted","_gasTiming","_useFeeCalculations","_editGasFeesRow","_gasFeesRow","GasFeesDetails","useFeeCalculations","GasFeesRow","tooltipText","Speed","ConfirmInfoRowVariant","Default","_gasFeesDetails","LegacyTransactionGasModal","closeCustomizeGasPopover","showCustomizeGasPopover","maxWidth","_bytes","_lodash","_expandableRow","_transactionDecode","copyEnabled","copyText","RawDataRow","FunctionContainer","method","source","isExpandable","paramRows","param","paramIndex","ParamRow","ConfirmInfoExpandableRow","content","startExpanded","ParamValue","DecodedTransactionDataSource","Uniswap","UniswapPath","pathPools","valueString","Array","isArray","startsWith","hexStripZeros","_param$children","startCase","childRows","childParam","childIndex","flexWrap","FlexWrap","Wrap","pool","firstAddress","tickSpacing","secondAddress","decodeResponse","_ethereumjsUtil","_accountAbstraction","_useFourByte","isValidAddress","PaymasterRow","userOperationId","isUserOperation","paymasterAddress","selectPaymasterAddress","_typedSignDataV","ConfirmInfoRowTypedSignDataV1","_permitSimulation","_signatures","_valueDisplay","msgData","verifyingContract","primaryType","parseTypedDataMessage","tokenDetails","PrimaryType","PermitBatch","PermitSingle","details","PermitBatchTransferFrom","PermitTransferFrom","permitted","extractTokenDetailsByPrimaryType","gap","token","amount","tokenContract","_browser","_useTokenExchangeRate","_fiatDisplay","_formatAmount","_token","exchangeRate","tokenDecimals","fetchErc20Decimals","fiatValue","tokenAmount","times","tokenValue","tokenValueMaxPrecision","formatAmount","formatAmountMaxPrecision","wrapperStyle","shortenString","truncatedCharLimit","truncatedStartChars","truncatedEndChars","skipCharacterInEnd","IndividualFiatDisplay","fiatAmount","captureException","Error","_typedSignData","setDecimals","isOrder","isOrderSignatureRequest","PermitSimulation","ConfirmInfoRowTypedSignData","_ledgerInfo","_hardwareWallets","_app2","_useLedgerConnection","isLedgerWallet","webHidConnectedStatus","getLedgerWebHidConnectedStatus","ledgerTransportType","getLedgerTransportType","transportStatus","getLedgerTransportStatus","environmentTypeIsFullScreen","ENVIRONMENT_TYPE_FULLSCREEN","usingWebHID","LedgerTransportTypes","webhid","BannerAlertSeverity","headingSm","Medium","listStyle","HardwareTransportStates","deviceOpenFailure","Normal","_global$platform$open","_global$platform","window","reload","platform","openExtensionInBrowser","WebHIDConnectedStatuses","notConnected","webHidIsConnected","navigator","hid","requestDevice","filters","vendorId","LEDGER_USB_VENDOR_ID","some","device","setLedgerWebHidConnectedStatus","connected","_global$platform$open2","_global$platform2","_nav","pendingConfirmations","pendingConfirmationsSortedSelector","currentConfirmationPosition","findIndex","onNavigateToTransaction","pos","nextConfirmation","replace","isSignatureApprovalRequest","onRejectAll","forEach","conf","backgroundDefault","zIndex","full","iconAlternative","ArrowRight","paddingRight","_networkChangeToast","_networkChangeToastLegacy","confirmation","getCurrentChainId","newChainId","toastVisible","setToastVisible","getNetworkConfigurationsByChainId","hideToast","isMounted","lastInteractedConfirmationInfo","getLastInteractedConfirmationInfo","currentTimestamp","Date","getTime","timestamp","setTimeout","setLastInteractedConfirmationInfo","Toast","startAdornment","_useCurrentConfirmation","_pluggableSection","pluggedInSections","SnapsSection","Section","_token2","Field","FIELD_TOKEN_UTILS_PRIMARY_TYPES","Amount","PRIMARY_TYPES_PERMIT","BuyAmount","PRIMARY_TYPES_ORDER","EndAmount","SellAmount","StartAmount","Value","FIELD_DATE_PRIMARY_TYPES","Deadline","EndTime","Expiration","Expiry","SigDeadline","StartTime","ValidTo","DataTree","decimalsResponse","dataTreeData","isValidHexAddress","getTokenDecimalsOfDataTree","tokenContractDecimals","Full","entries","charAt","toUpperCase","slice","DataField","memo","_ref","isDateField","_ref2","isTokenUnitsField","ConfirmInfoRowTextTokenUnits","mixedCaseUseChecksum","_dataTree","parsedData","reduce","val","sanitizedMessage","parseSanitizeTypedDataMessage","_scrollToBottom","_usePrevious","_useScrollRequired","setIsScrollToBottomCompleted","previousId","usePrevious","hasScrolledToBottom","isScrollable","isScrolledToBottom","onScroll","scrollToBottom","setHasScrolledToBottom","ref","useScrollRequired","offsetPxFromBottom","currentRef","current","scrollTo","height","minHeight","overflow","Arrow2Down","_snapsSection","_snapUiRenderer","_delineator","SnapInsight","snapId","interfaceId","snapName","getSnapMetadata","headerComponent","inherit","Delineator","isDisabled","contentBoxProps","SnapUIRenderer","useDelineator","_useInsightSnaps","useInsightSnaps","_title","_generalAlert","ConfirmBannerAlert","generalAlerts","hasMultipleAlerts","singleAlert","highestSeverity","getHighestSeverity","reason","alertDetails","reportUrl","getTitle","getDescription","headingLg","formatNumber","minimumFractionDigits","maximumFractionDigits","_deprecated","_deprecated2","ConfirmationWarningModal","errorDefault","IconSize","Xl","LG","_confirmationWarningModal","_etherscanLink","_send","_popover","_useCopyToClipboard","_nftCollectionImage","_usePetnamesEnabled","ContractDetailsModal","rpcPrefs","tokenId","assetName","isContractRequestingSignature","_addressBookEntry$dat","_addressBookEntry$dat2","copiedTokenAddress","handleCopyTokenAddress","useCopyToClipboard","copiedToAddress","handleCopyToAddress","petnamesEnabled","usePetnamesEnabled","addressBookEntry","nft","ERC1155","Size","SM","borderStyle","BorderStyle","solid","borderColor","BorderColor","borderDefault","ellipsify","CopySuccess","Copy","iconMuted","Export","blockExplorerTokenLink","getAccountLink","blockExplorerUrl","openTab","_contractDetailsModal","ContractTokenValues","copied","handleCopy","DISPLAY","FLEX","CustomNonce","showCustomizeNonceModal","InlineFlex","ButtonLink","auto","_customNonce","CustomSpendingCapTooltip","tooltipContentText","tooltipIcon","html","Inherit","Question","_tokens","_Numeric","_zendeskUrl","_customSpendingCapTooltip","CustomSpendingCap","currentTokenBalance","dappProposedValue","passTheErrorText","setInputChangeInProgress","setCustomSpendingCap","updateTransaction","useGasFeeContext","inputRef","useRef","setError","showUseSiteSuggestionButton","setShowUseSiteSuggestionButton","inputLogicEmptyStateText","replaceCommaToDot","inputValue","decConversionGreaterThan","Numeric","greaterThan","getInputTextLogic","inputNumber","lessThanOrEqualTo","customSpendingCapText","setCustomSpendingCapText","handleChange","_match$","spendingCapError","inputTextLogicDescription","valueInput","match","DECIMAL_REGEX","exec","NUM_W_OPT_DECIMAL_COMMA_OR_DOT_REGEX","test","maxTokenAmount","MAX_TOKEN_ALLOWANCE_AMOUNT","setCustomTokenAmount","newData","txValue","addHexPrefix","exp","console","focus","preventScroll","chooseTooltipContentText","Label","htmlFor","preventDefault","paddingInlineEnd","endAccessory","HelpText","TOKEN_ALLOWANCE_WITH_SPENDING_CAP","externalLink","_confirmTx","_advancedGasControls","EditGasDisplay","estimatedMinimumNative","setGasPrice","setGasLimit","properGasLimit","dappSuggestedGasFeeAcknowledged","setDappSuggestedGasFeeAcknowledged","onManualChange","minimumGasLimit","balanceError","gasErrors","txParamsHaveBeenCustomized","scrollRef","dappSuggestedAndTxParamGasFeesAreTheSame","areDappSuggestedAndTxParamGasFeesTheSame","requireDappAcknowledgement","warningMessage","lessThan","showTopError","Warning","speedUp","oneOf","values","_editGasDisplay","_gas2","EditGasFeeButton","userAcknowledgedGasMissing","editGasMode","hasSimulationError","estimateUsed","icon","PriorityLevels","high","swaps","tenPercentIncreased","PRIORITY_LEVEL_ICON_MAP","_editGasFeeButton","EditGasFeeIcon","baseline","_appLoadingSpinner","_editGasItem","_networkStatistics","closeAllModals","closeModal","currentModal","openModalCount","popupTitle","cancel","onBack","priorityLevel","low","medium","dAppSuggested","custom","align","tag","USER_GUIDE_GAS","_editGasTooltip","_useGasItemFeeDetails","EditGasItem","updateTransactionToTenPercentIncreasedGasFee","updateTransactionUsingDAPPSuggestedValues","updateTransactionUsingEstimate","estimateGreaterThanGasUse","minWaitTime","useGasItemFeeDetails","dappSuggestedHigh","getTitleAndIcon","gas_edit_type","autoFocus","toHumanReadableTime","useCustomTimeEstimate","_gasFeeEstimates$medi","gasEstimateType","getGasEstimateType","isGasEstimatesLoading","getIsGasEstimatesLoading","customEstimatedTime","setCustomEstimatedTime","returnNoEstimates","GasEstimateTypes","feeMarket","isUnknownLow","suggestedMaxPriorityFeePerGas","getGasFeeTimeEstimate","then","result","waitTimeEstimate","upperTimeBound","_gasFeeEstimates$high","minWaitTimeEstimate","_gasFeeEstimates$low","maxWaitTimeEstimate","_gas3","_useCustomTimeEstimate","maxFeePerGasValue","maxPriorityFeePerGasValue","setEstimateGreaterThanGasUse","advancedGasFeeValues","getAdvancedGasFeeValues","suggestedMaxFeePerGas","hexWEIToDecGWEI","maxBaseFee","priorityFee","previousGas","_transaction$previous","_transaction$previous2","addTenPercentAndRound","getMaximumGasTotalInHexWei","estimateGreater","gasEstimateGreaterThanGasUsedPlusTenPercent","EditGasToolTip","toolTipMessage","imgAltText","showGasEstimateCurve","isMetamaskSuggestedGasEstimate","alt","roundToDecimalPlacesRemovingExtraZeroes","_tooltips","_statusSlider","formattedLatestBaseFee","formatGasFeeOrFeeRange","precision","formattedLatestPriorityFeeRange","latestPriorityFeeRange","networkCongestion","bodyXs","isNullish","BaseFeeTooltip","PriorityFeeTooltip","GRADIENT_COLORS","statusInfo","givenNetworkCongestion","colorIndex","Math","round","sliderTickValue","NetworkCongestionThresholds","busy","statusLabel","tooltipLabel","stable","determineStatusInfo","NetworkStabilityTooltip","borderTopColor","NetworkStatusTooltip","FLEX_DIRECTION","COLUMN","_useGasFeeInputs","_useIncrementedGasFees","_extends","assign","bind","arguments","apply","EditGasPopover","popoverTitle","confirmButtonText","editGasDisplayProps","GAS_LIMITS","SIMPLE","minimumGasLimitDec","updatedCustomGasSettings","useIncrementedGasFees","updatedTransaction","userFeeLevel","CUSTOM_GAS_ESTIMATE","estimateToUse","hasGasErrors","useGasFeeInputs","GasRecommendations","txParamsAreDappSuggested","closePopover","hideModal","newGasSettings","cleanTransactionParams","updatedTxMeta","userEditedGasLimit","originalGasEstimate","createCancelTransaction","createSpeedUpTransaction","showLoadingIndication","updateTransactionGasFees","hideLoadingIndication","footerButtonText","Primary","FeeDetailsComponent","hideGasDetails","expandFeeDetails","setExpandFeeDetails","minimumCostInHexWei","getTransactionFeeTotal","renderTotalDetailText","renderTotalDetailValue","endIconName","ArrowUp","ArrowDown","bodySmMedium","_editGasFeeIcon","GasDetailsItem","_transactionData$txPa","_transactionData$txPa2","getTxData","draftTransaction","getCurrentDraftTransaction","draftHexMinimumTransactionFee","draftHexMaximumTransactionFee","isNetworkBusy","maximumCostInHexWei","sumHexes","getMaxTransactionFeeTotal","maxPriorityFeePerGasToRender","maxFeePerGasToRender","wrapperClassName","paddingInlineStart","hasDetailTextInSeparateRow","paddingStart","_gasDetailsItem","_typography","milliseconds","seconds","ceil","GasTiming","gasWarnings","getGasFeeEstimates","previousMaxFeePerGas","previousMaxPriorityFeePerGas","previousIsUnknownLow","priority","fee","maxPriorityFee","GAS_FORM_ERRORS","MAX_PRIORITY_FEE_TOO_LOW","MAX_FEE_TOO_LOW","TypographyVariant","H7","estimateEmoji","time","_ledgerInstructionField","renderInstructionStep","show","LedgerInstructionField","showDataInstruction","none","transportedCreated","attemptLedgerTransportCreation","setLedgerTransportStatus","verified","unknownFailure","determineTransportStatus","_window$navigator","devices","getDevices","initialConnectedDeviceCheck","SEVERITIES","INFO","_multiLayerFeeMessage","_common2","MultilayerFeeMessage","layer2fee","plainStyle","_transaction$txParams","layer1Total","feeTotalInFiat","WEI","toDenomination","showFiat","totalInWeiHex","totalInEth","totalInFiat","noBold","flexWidthValues","ReviewSpendingCap","valueIsGreaterThanBalance","InlineBlock","verticalAlign","End","_package","_securityProviderBannerAlert","_loadingIndicator","_blockaidBannerUtils","zlib","REASON_TO_DESCRIPTION_TKEY","freeze","BlockaidReason","approvalFarming","permitFarming","setApprovalForAll","blurFarming","errored","seaportFarming","maliciousDomain","rawSignatureFarming","tradeOrderFarming","rawNativeTokenTransfer","transferFarming","transferFromFarming","other","REASON_TO_TITLE_TKEY","BlockaidBannerAlert","selectorChainId","flex","features","resultType","Benign","feature","isFailedResultType","Errored","_zlib$gzipSync","reportData","blockNumber","blockaidVersion","chain","classification","jsonRpcMethod","jsonRpcParams","reproduce","jsonData","encodedData","gzipSync","getReportUrl","SecurityProvider","Blockaid","onClickSupportLink","external_link_clicked","FALSE_POSITIVE_REPORT_BASE_URL","encodeURIComponent","SECURITY_PROVIDER_UTM_SOURCE","_disclosure","_disclosure2","SecurityProviderBannerAlert","DisclosureVariant","Arrow","SUPPORT_URL","SecurityTick","SECURITY_PROVIDER_CONFIG","tKeyName","_securityProviderBannerMessage","SecurityProviderBannerMessage","securityProviderResponse","messageTitle","messageText","flagAsDangerous","SECURITY_PROVIDER_MESSAGE_SEVERITY","MALICIOUS","reason_header","DANGER","NOT_SAFE","WARNING","SetApproveForAllWarning","footer","SPACE_BETWEEN","ROW","_signatureRequestHeader","SignatureRequestHeader","allAccounts","accountsWithSendEtherInfoSelector","fromAccount","getAccountByAddress","getNativeCurrency","currentChainId","providerConfig","getProviderConfig","getNetworkNameFromProviderType","conversionRateFromSelector","conversionRateSelector","currentNetwork","nickname","balanceInBaseAsset","formatCurrency","toBase","metadata","_signatureRequestOriginal","_reactInspector","_permissionController","_blockaidBannerAlert","_snapLegacyAuthorshipHeader","_securityProvider2","_queuedRequestsBannerAlert","SignatureRequestOriginal","constructor","args","super","showSignatureInsights","parse","ObjectInspector","expandLevel","rows","notice","subjectMetadata","MESSAGE_TYPE","PERSONAL_SIGN","ETH_SIGN_TYPED_DATA","targetSubjectMetadata","isSuspiciousResponse","QueuedRequestsBannerAlert","subjectType","SubjectType","Snap","iconSrc","iconUrl","getURLHostName","chip","H3","completedTx","mostRecentOverviewPage","setState","showRejectTransactionsConfirmationModal","messagesCount","cancelAllApprovals","renderBody","renderFooter","handleCancelAll","NetworkChangeToastLegacy","shape","array","_redux","_history","mapDispatchToProps","goHome","isRequestType","messagesList","rejectAllMessages","compose","withRouter","connect","ownProps","isAddressLedger","unconfirmedMessagesHashSelector","getTotalUnapprovedMessagesCount","requester","requesterAddress","getMostRecentOverviewPage","getSubjectMetadata","stateProps","dispatchProps","otherStateProps","dispatchCancelAllApprovals","valuesFor","_signatureRequestSiwe","_signatureRequestSiweHeader","_accountListItem","_permissionsConnectHeader","_signatureRequestSiweIcon","_signatureRequestSiweTag","SignatureRequestSIWEHeader","isSIWEDomainValid","headerTitle","leftIcon","rightIcon","account","hideDefaultMismatchWarning","errorInverse","_signatureRequestSiweMessage","SignatureRequestSIWEMessage","bodyLgMedium","OVERFLOW_WRAP","BREAK_WORD","arrayOf","SignatureRequestSIWETag","_loglevel","_checkBox","_siwe","SignatureRequestSIWE","isMatchingAddress","toLowerCase","isValidSIWEOrigin","isShowingDomainWarning","setIsShowingDomainWarning","hasAgreedToDomainWarning","setHasAgreedToDomainWarning","showSecurityProviderBanner","isShowingSigInsightWarnings","setIsShowingSigInsightWarnings","onSign","formatMessageParams","footerClassName","subtitle","cancelButtonType","checked","_signatureRequest","_signatureRequestData","_address","SignatureRequestData","getMemoizedMetaMaskInternalAccounts","infoDefault","addressOnly","checksummedRecipientAddress","prevProps","nextProps","isEqual","_signatureRequestFooter","SignatureRequestFooter","PureComponent","cancelAction","signAction","_signatureRequestMessage","SignatureRequestMessage","onMessageScrolled","setMessageRootRef","messageRootRef","messageIsScrollable","messageIsScrolled","setMessageIsScrolled","debounce","scrollTop","offsetHeight","scrollHeight","borderMuted","_useRejectTransactionModal","SignatureRequest","_txData$securityProvi","_txData$securityProvi2","hasScrolledMessage","setHasScrolledMessage","showContractDetails","setShowContractDetails","setMessageIsScrollable","unapprovedMessagesCount","useRejectTransactionModal","clientHeight","parseMessage","memoize","dataToParse","types","sanitizeMessage","Transactions","legacy_event","NOT_MALICIOUS","TagUrl","labelProps","AmountPill","asset","isNegative","errorMuted","successMuted","errorAlternative","successDefault","amountParts","tooltipParts","formattedAmount","abs","fullPrecisionAmount","decimalTokenId","shortenedTokenIdPart","tooltipIdPart","pill","flexShrink","flexBasis","theme","NativeAssetPill","ticker","imgSrc","getNativeCurrencyImage","AssetPill","preferContractSymbol","_balanceChangeRow","_sortBalanceChanges","BalanceChangeList","heading","balanceChanges","testId","sortedBalanceChanges","sortBalanceChanges","fiatAmounts","bc","showFiatTotal","balanceChange","BalanceChangeRow","RowReverse","TotalFiatDisplay","_assetPill","_amountPill","whiteSpace","_types","textStyle","FiatNotAvailableDisplay","calculateTotalFiat","fiat","FIAT_UNAVAILABLE","fiatDisplayValue","totalFiat","isZero","ZERO_DISPLAY","_useCurrencyDisplay","MIN_AMOUNT","maximumSignificantDigits","MAX_SIGNIFICANT_DECIMAL_PLACES","DEFAULT_PRECISION","digitsLeftOfDecimal","truncated","max","num","bigNumberValue","decimalPlaces","formattedValue","integerPart","fractionalPart","split","formattedIntegerPart","_preloaderIcon","_balanceChangeList","_useBalanceChanges","_useSimulationMetrics","LoadingIndicator","ErrorContent","code","SimulationErrorCode","Reverted","EmptyContent","HeaderLayout","containerClassName","tooltipInnerClassName","tooltipArrowClassName","SimulationDetailsLayout","inHeader","enableMetrics","balanceChangesResult","useBalanceChanges","useSimulationMetrics","ChainNotSupported","Disabled","outgoing","incoming","tokenStandardOrder","comparators","b","compareBalanceChanges","comparator","sort","NATIVE_ASSET_IDENTIFIER","convertNumberToStringWithPrecisionWarning","convertStandard","SimulationTokenStandard","erc20","erc721","erc1155","getAssetAmount","isDecrease","difference","quantity","shift","fiatCurrency","nativeFiatRate","nativeBalanceChange","tokenBalanceChanges","erc20TokenAddresses","tbc","erc20Decimals","useAsyncResultOrThrow","addresses","uniqueAddresses","Set","allDecimals","Promise","all","fromEntries","fetchAllErc20Decimals","erc20FiatRates","tokenRates","fetchTokenExchangeRates","rate","fetchTokenFiatRates","nativeChange","getNativeBalanceChange","tokenChanges","tokenBc","ERC20_DEFAULT_DECIMALS","fiatRate","getTokenBalanceChanges","loadingStart","now","loadingTime","setLoadingTime","setLoadingComplete","_simulationData$error","_useLoadingTime","useLoadingTime","displayNameRequests","displayNamesByAddress","_useDisplayName","useDisplayNames","acc","displayNameResponse","processedAssets","setProcessedAssets","change","assetAddress","displayName","isIncomplete","getPetnameType","PetnameType","Unknown","isProcessed","SimulationIncompleteAssetDisplayed","asset_address","asset_petname","asset_symbol","contractDisplayName","asset_type","getAssetType","fiat_conversion_available","FiatType","Available","NotAvailable","useIncompleteAssetEvent","receivingAssets","sendingAssets","simulationResponse","_simulationData$error2","SimulationResponseType","InProgress","Failed","NoChanges","Changes","getSimulationResponseType","simulation_response","simulation_latency","getProperties","sensitiveProperties","getSensitiveProperties","shouldSkipMetrics","AssetType","changes","prefix","unique","getPrefixProperties","petname","total_value","Native","hasPetname","Saved","list","_simulationErrorMessage","SimulationErrorMessage","setUserAcknowledgedGasMissing","SimulationFails","ui_customizations","MetaMetricsEventUiCustomization","GasEstimationFailed","actionButtonLabel","actionButtonOnClick","learnMoreLink","_SnapAccountErrorMessage","_removeSnapAccount","SnapAccountCard","_SnapAccountSuccessMessage","_transactionAlerts","_metamaskControllerUtils","TransactionAlerts","isUsingPaymaster","pendingTransactions","submittedPendingTransactionsSelector","currentTokenSymbol","currentTokenAmount","simpleSend","tokenData","parseStandardTokenTransactionData","getTokenValueParam","isSendingZero","SPEEDUP_CANCEL","_copyToClipboard","_copy","Address","onRecipientClick","addressBookEntryObject","getMemoizedAddressBook","entry","recipientToRender","COPY_OPTIONS","CopyRawData","TransactionDetailItem","NoWrap","Right","isValidElement","textMuted","TransactionDetail","disableEditGasFeeButton","_urlIcon","_multilayerFeeMessage","_feeDetailsComponent","ConfirmApproveContent","showFullTxDetails","renderApproveContentCard","showHeader","symbol","noBorder","showFeeDetails","renderTransactionDetailsContent","ethTransactionTotal","fiatTransactionTotal","hexTransactionTotal","renderSimulationFailureWarning","ConfirmGasDisplay","renderERC721OrERC1155PermissionContent","isContract","titleTokenDescription","getTitleTokenDescription","approvedAssetText","displayedAddress","addressSummary","renderDataContent","renderFullDetails","getTokenName","userAddress","useBlockExplorer","TEST_CHAINS","CHAIN_IDS","MAINNET","LINEA_MAINNET","tokenIdWrapped","blockExplorerLink","getTokenTrackerLink","renderTitle","renderDescription","grantee","siteImage","useNonceField","fromAddressIsLedger","fallbackClassName","Tag","showAdvanceGasFeeOptions","_confirmApproveContent","_confirmTransactionBase","_contractUtils","_confirmContractInteraction","_useApproveTransaction","_useSimulationFailureWarning","_loadingScreen","_transaction2","_tokenAllowance","isAddressLedgerByFromAddress","ConfirmApprove","tokenImage","getRpcPrefsForCurrentProvider","setCustomPermissionAmount","submitWarning","setSubmitWarning","setIsContract","previousTokenAmount","approveTransaction","useApproveTransaction","useSimulationFailureWarning","prevNonce","prevCustomNonce","checkIfContract","isContractAddress","readAddressAsContract","eth","formattedOrigin","tokensText","customData","parsedTransactionData","getTokenApprovedParam","identiconAddress","customTokenAmount","dappProposedTokenAmount","TransactionModalContextProvider","showCustomizeGasModal","customSpendingCapMethods","m","getTokenAddressParam","substring","signature","rest","extraCalldata","customPermissionValue","_swapsUtils","calcTokenValue","padStart","handleEdit","confirmTransactionData","editExistingTransaction","native","handleEditTransaction","SEND_ROUTE","actionKey","ConfirmDeployContract","renderData","TEXT_TRANSFORM","UPPERCASE"],"mappings":"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","file":"../metamask/ui-7.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport {\n  getIsMainnet,\n  getPreferences,\n  getUnapprovedTransactions,\n  getUseCurrencyRateCheck,\n  transactionFeeSelector,\n  txDataSelector,\n} from '../../../../../selectors';\nimport { PRIMARY, SECONDARY } from '../../../../../helpers/constants/common';\n\nimport TransactionDetailItem from '../../transaction-detail-item';\nimport UserPreferencedCurrencyDisplay from '../../../../../components/app/user-preferenced-currency-display';\nimport InfoTooltip from '../../../../../components/ui/info-tooltip';\nimport LoadingHeartBeat from '../../../../../components/ui/loading-heartbeat';\nimport {\n  TextVariant,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport { useDraftTransactionWithTxParams } from '../../../hooks/useDraftTransactionWithTxParams';\nimport { Icon, IconName } from '../../../../../components/component-library';\nimport { addHexes } from '../../../../../../shared/modules/conversion.utils';\n\nconst renderHeartBeatIfNotInTest = () =>\n  process.env.IN_TEST ? null : <LoadingHeartBeat />;\n\nconst ConfirmLegacyGasDisplay = ({ 'data-testid': dataTestId } = {}) => {\n  const t = useI18nContext();\n\n  // state selectors\n  const isMainnet = useSelector(getIsMainnet);\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n  const { useNativeCurrencyAsPrimaryCurrency } = useSelector(getPreferences);\n  const unapprovedTxs = useSelector(getUnapprovedTransactions);\n  const transactionData = useDraftTransactionWithTxParams();\n  const txData = useSelector((state) => txDataSelector(state));\n  const { id: transactionId, dappSuggestedGasFees, layer1GasFee } = txData;\n  const transaction = Object.keys(transactionData).length\n    ? transactionData\n    : unapprovedTxs[transactionId] || {};\n  const { hexMinimumTransactionFee, hexMaximumTransactionFee } = useSelector(\n    (state) => transactionFeeSelector(state, transaction),\n  );\n\n  const estimatedHexMinFeeTotal = addHexes(\n    hexMinimumTransactionFee,\n    layer1GasFee ?? '0x0',\n  );\n\n  const estimatedHexMaxFeeTotal = addHexes(\n    hexMaximumTransactionFee,\n    layer1GasFee ?? '0x0',\n  );\n\n  return (\n    <TransactionDetailItem\n      key=\"legacy-gas-details\"\n      data-testid={dataTestId}\n      detailTitle={\n        dappSuggestedGasFees ? (\n          <>\n            {t('transactionDetailGasHeading')}\n            <InfoTooltip\n              contentText={t('transactionDetailDappGasTooltip')}\n              position=\"top\"\n            >\n              <Icon name={IconName.Info} />\n            </InfoTooltip>\n          </>\n        ) : (\n          <>\n            {t('transactionDetailGasHeading')}\n            <InfoTooltip\n              contentText={\n                <>\n                  <p>\n                    {t('transactionDetailGasTooltipIntro', [\n                      isMainnet ? t('networkNameEthereum') : '',\n                    ])}\n                  </p>\n                  <p>{t('transactionDetailGasTooltipExplanation')}</p>\n                  <p>\n                    <a\n                      href=\"https://community.metamask.io/t/what-is-gas-why-do-transactions-take-so-long/3172\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {t('transactionDetailGasTooltipConversion')}\n                    </a>\n                  </p>\n                </>\n              }\n              position=\"top\"\n            >\n              <Icon name={IconName.Info} />\n            </InfoTooltip>\n          </>\n        )\n      }\n      detailText={\n        useCurrencyRateCheck && (\n          <div>\n            {renderHeartBeatIfNotInTest()}\n            <UserPreferencedCurrencyDisplay\n              type={SECONDARY}\n              value={estimatedHexMinFeeTotal}\n              hideLabel={Boolean(useNativeCurrencyAsPrimaryCurrency)}\n            />\n          </div>\n        )\n      }\n      detailTotal={\n        <div>\n          {renderHeartBeatIfNotInTest()}\n          <UserPreferencedCurrencyDisplay\n            type={PRIMARY}\n            value={estimatedHexMinFeeTotal}\n            hideLabel={!useNativeCurrencyAsPrimaryCurrency}\n            suffixProps={{\n              color: TextColor.textDefault,\n              variant: TextVariant.bodyMdBold,\n            }}\n            textProps={{\n              color: TextColor.textDefault,\n              variant: TextVariant.bodyMdBold,\n            }}\n            numberOfDecimals={6}\n          />\n        </div>\n      }\n      subText={\n        <>\n          <strong key=\"editGasSubTextFeeLabel\">\n            {t('editGasSubTextFeeLabel')}\n          </strong>\n          <div key=\"editGasSubTextFeeValue\">\n            {renderHeartBeatIfNotInTest()}\n            <UserPreferencedCurrencyDisplay\n              key=\"editGasSubTextFeeAmount\"\n              type={PRIMARY}\n              value={estimatedHexMaxFeeTotal}\n              hideLabel={!useNativeCurrencyAsPrimaryCurrency}\n            />\n          </div>\n        </>\n      }\n      subTitle={dappSuggestedGasFees && t('transactionDetailDappGasMoreInfo')}\n    />\n  );\n};\n\nConfirmLegacyGasDisplay.propTypes = {\n  'data-testid': PropTypes.string,\n};\n\nexport default ConfirmLegacyGasDisplay;\n","export { default as ConfirmLegacyGasDisplay } from './confirm-legacy-gas-display';\n","export { default as ConfirmGasDisplay } from './confirm-gas-display';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { toBuffer } from '../../../../../shared/modules/buffer-utils';\nimport { getKnownMethodData } from '../../../../selectors';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { useTransactionFunctionType } from '../../hooks/useTransactionFunctionType';\nimport {\n  Color,\n  OverflowWrap,\n  TextVariant,\n  TextTransform,\n} from '../../../../helpers/constants/design-system';\nimport Box from '../../../../components/ui/box';\nimport { Text } from '../../../../components/component-library';\nimport CopyRawData from '../transaction-decoding/components/ui/copy-raw-data';\n\nconst ConfirmHexData = ({ txData, dataHexComponent }) => {\n  const t = useI18nContext();\n  const { txParams = {} } = txData;\n  const methodData = useSelector(\n    (state) => getKnownMethodData(state, txParams.data) || {},\n  );\n  const { functionType } = useTransactionFunctionType(txData);\n\n  if (dataHexComponent) {\n    return dataHexComponent;\n  }\n\n  if (!txParams.data || !txParams.to) {\n    return null;\n  }\n\n  const { params } = methodData;\n  const functionParams = params?.length\n    ? `(${params.map(({ type }) => type).join(', ')})`\n    : '';\n\n  return (\n    <Box padding={4}>\n      <Box paddingBottom={3} paddingTop={2}>\n        <Text\n          as=\"span\"\n          textTransform={TextTransform.Uppercase}\n          variant={TextVariant.bodySm}\n        >\n          {`${t('functionType')}:`}\n        </Text>\n        <Text\n          as=\"span\"\n          color={Color.textDefault}\n          paddingLeft={1}\n          textTransform={TextTransform.Capitalize}\n          variant={TextVariant.bodySmBold}\n        >\n          {`${functionType} ${functionParams}`}\n        </Text>\n      </Box>\n      {params && (\n        <Box backgroundColor={Color.backgroundAlternative} padding={4}>\n          <Text\n            as=\"h3\"\n            paddingBottom={3}\n            paddingTop={2}\n            textTransform={TextTransform.Uppercase}\n            variant={TextVariant.bodySm}\n          >\n            {`${t('parameters')}:`}\n          </Text>\n          <Text\n            overflowWrap={OverflowWrap.BreakWord}\n            variant={TextVariant.bodySm}\n          >\n            <pre>{JSON.stringify(params, null, 2)}</pre>\n          </Text>\n        </Box>\n      )}\n      <Text\n        as=\"h3\"\n        paddingBottom={3}\n        paddingTop={2}\n        textTransform={TextTransform.Uppercase}\n        variant={TextVariant.bodySm}\n      >\n        {`${t('hexData')}: ${toBuffer(txParams?.data).length} bytes`}\n      </Text>\n      <Text\n        backgroundColor={Color.backgroundAlternative}\n        overflowWrap={OverflowWrap.BreakWord}\n        padding={4}\n        variant={TextVariant.bodySm}\n      >\n        {txParams?.data}\n      </Text>\n      <CopyRawData data={txParams?.data} />\n    </Box>\n  );\n};\n\nConfirmHexData.propTypes = {\n  txData: PropTypes.object,\n  dataHexComponent: PropTypes.element,\n};\n\nexport default ConfirmHexData;\n","export { default as ConfirmHexData } from './confirm-hexdata';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport UserPreferencedCurrencyDisplay from '../../../../../components/app/user-preferenced-currency-display';\nimport { PRIMARY, SECONDARY } from '../../../../../helpers/constants/common';\n\nconst ConfirmDetailRow = (props) => {\n  const {\n    label,\n    primaryText,\n    secondaryText,\n    onHeaderClick,\n    primaryValueTextColor,\n    headerText,\n    headerTextClassName,\n    value,\n  } = props;\n\n  return (\n    <div className=\"confirm-detail-row\">\n      <div className=\"confirm-detail-row__label\">{label}</div>\n      <div className=\"confirm-detail-row__details\">\n        {headerText && (\n          <div\n            className={classnames(\n              'confirm-detail-row__header-text',\n              headerTextClassName,\n            )}\n            onClick={() => onHeaderClick?.()}\n          >\n            {headerText}\n          </div>\n        )}\n        {primaryText ? (\n          <div\n            className=\"confirm-detail-row__primary\"\n            style={{ color: primaryValueTextColor }}\n          >\n            {primaryText}\n          </div>\n        ) : (\n          <UserPreferencedCurrencyDisplay\n            className=\"confirm-detail-row__primary\"\n            type={PRIMARY}\n            value={value}\n            showEthLogo\n            style={{ color: primaryValueTextColor }}\n            hideLabel\n          />\n        )}\n        {secondaryText ? (\n          <div className=\"confirm-detail-row__secondary\">{secondaryText}</div>\n        ) : (\n          <UserPreferencedCurrencyDisplay\n            className=\"confirm-detail-row__secondary\"\n            type={SECONDARY}\n            value={value}\n            showEthLogo\n            hideLabel\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nConfirmDetailRow.propTypes = {\n  headerText: PropTypes.string,\n  headerTextClassName: PropTypes.string,\n  label: PropTypes.string,\n  onHeaderClick: PropTypes.func,\n  primaryValueTextColor: PropTypes.string,\n  primaryText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  secondaryText: PropTypes.string,\n  value: PropTypes.string,\n};\n\nexport default ConfirmDetailRow;\n","export { default } from './confirm-detail-row.component';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Tabs, Tab } from '../../../../../components/ui/tabs';\nimport {\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  Button,\n  BUTTON_SIZES,\n  BUTTON_VARIANT,\n  ///: END:ONLY_INCLUDE_IF\n  BannerAlert,\n} from '../../../../../components/component-library';\nimport { PageContainerFooter } from '../../../../../components/ui/page-container';\nimport {\n  INSUFFICIENT_FUNDS_ERROR_KEY,\n  IS_SIGNING_OR_SUBMITTING,\n  USER_OP_CONTRACT_DEPLOY_ERROR_KEY,\n} from '../../../../../helpers/constants/error-keys';\nimport { Severity } from '../../../../../helpers/constants/design-system';\n\nimport { BlockaidResultType } from '../../../../../../shared/constants/security-provider';\nimport { ConfirmPageContainerSummary, ConfirmPageContainerWarning } from '.';\n\nexport default class ConfirmPageContainerContent extends Component {\n  static contextTypes = {\n    t: PropTypes.func.isRequired,\n  };\n\n  static propTypes = {\n    action: PropTypes.string,\n    dataHexComponent: PropTypes.node,\n    detailsComponent: PropTypes.node,\n    insightComponent: PropTypes.node,\n    errorKey: PropTypes.string,\n    errorMessage: PropTypes.string,\n    tokenAddress: PropTypes.string,\n    nonce: PropTypes.string,\n    subtitleComponent: PropTypes.node,\n    image: PropTypes.string,\n    titleComponent: PropTypes.node,\n    warning: PropTypes.string,\n    origin: PropTypes.string.isRequired,\n    ethGasPriceWarning: PropTypes.string,\n    // Footer\n    onCancelAll: PropTypes.func,\n    onCancel: PropTypes.func,\n    cancelText: PropTypes.string,\n    onSubmit: PropTypes.func,\n    submitText: PropTypes.string,\n    disabled: PropTypes.bool,\n    unapprovedTxCount: PropTypes.number,\n    rejectNText: PropTypes.string,\n    supportsEIP1559: PropTypes.bool,\n    hasTopBorder: PropTypes.bool,\n    nativeCurrency: PropTypes.string,\n    networkName: PropTypes.string,\n    toAddress: PropTypes.string,\n    transactionType: PropTypes.string,\n    isBuyableChain: PropTypes.bool,\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    openBuyCryptoInPdapp: PropTypes.func,\n    ///: END:ONLY_INCLUDE_IF\n    txData: PropTypes.object,\n  };\n\n  renderContent() {\n    const { detailsComponent, dataHexComponent, insightComponent } = this.props;\n\n    if (insightComponent && (detailsComponent || dataHexComponent)) {\n      return this.renderTabs();\n    }\n\n\n    if (detailsComponent && dataHexComponent) {\n      return this.renderTabs();\n    }\n\n    return detailsComponent || insightComponent;\n  }\n\n  renderTabs() {\n    const { t } = this.context;\n    const {\n      detailsComponent,\n      dataHexComponent,\n      insightComponent,\n    } = this.props;\n\n    return (\n      <Tabs defaultActiveTabKey=\"details\">\n        <Tab\n          className=\"confirm-page-container-content__tab\"\n          name={t('details')}\n          tabKey=\"details\"\n        >\n          {detailsComponent}\n        </Tab>\n        {\n        }\n        {dataHexComponent && (\n          <Tab\n            className=\"confirm-page-container-content__tab\"\n            name={t('dataHex')}\n            tabKey=\"dataHex\"\n          >\n            {dataHexComponent}\n          </Tab>\n        )}\n\n        {insightComponent}\n      </Tabs>\n    );\n  }\n\n  render() {\n    const {\n      action,\n      errorKey,\n      errorMessage,\n      image,\n      titleComponent,\n      subtitleComponent,\n      tokenAddress,\n      nonce,\n      detailsComponent,\n      warning,\n      onCancelAll,\n      onCancel,\n      cancelText,\n      onSubmit,\n      submitText,\n      disabled,\n      unapprovedTxCount,\n      rejectNText,\n      origin,\n      ethGasPriceWarning,\n      supportsEIP1559,\n      hasTopBorder,\n      nativeCurrency,\n      networkName,\n      toAddress,\n      transactionType,\n      isBuyableChain,\n      ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n      openBuyCryptoInPdapp,\n      ///: END:ONLY_INCLUDE_IF\n      txData,\n    } = this.props;\n\n    const { t } = this.context;\n\n    const showInsufficientFundsError =\n      (errorKey || errorMessage) && errorKey === INSUFFICIENT_FUNDS_ERROR_KEY;\n\n    const showIsSigningOrSubmittingError =\n      errorKey === IS_SIGNING_OR_SUBMITTING;\n\n    const showUserOpContractDeployError =\n      errorKey === USER_OP_CONTRACT_DEPLOY_ERROR_KEY;\n\n    const submitButtonType =\n      txData?.securityAlertResponse?.result_type ===\n      BlockaidResultType.Malicious\n        ? 'danger-primary'\n        : 'primary';\n\n    return (\n      <div\n        className={classnames('confirm-page-container-content', {\n          'confirm-page-container-content--with-top-border': hasTopBorder,\n        })}\n      >\n        {warning ? <ConfirmPageContainerWarning warning={warning} /> : null}\n        {ethGasPriceWarning && (\n          <ConfirmPageContainerWarning warning={ethGasPriceWarning} />\n        )}\n        <ConfirmPageContainerSummary\n          className={classnames({\n            'confirm-page-container-summary--border': !detailsComponent,\n          })}\n          action={action}\n          image={image}\n          titleComponent={titleComponent}\n          subtitleComponent={subtitleComponent}\n          tokenAddress={tokenAddress}\n          nonce={nonce}\n          origin={origin}\n          toAddress={toAddress}\n          transactionType={transactionType}\n        />\n        {this.renderContent()}\n        {!supportsEIP1559 &&\n          !showInsufficientFundsError &&\n          !showIsSigningOrSubmittingError &&\n          !showUserOpContractDeployError &&\n          (errorKey || errorMessage) && (\n            <BannerAlert\n              severity={Severity.Danger}\n              description={errorKey ? t(errorKey) : errorMessage}\n              marginBottom={4}\n              marginLeft={4}\n              marginRight={4}\n            />\n          )}\n        {showInsufficientFundsError && (\n          <BannerAlert\n            severity={Severity.Danger}\n            marginBottom={4}\n            marginLeft={4}\n            marginRight={4}\n            description={\n              isBuyableChain\n                ? t('insufficientCurrencyBuyOrDeposit', [\n                    nativeCurrency,\n                    networkName,\n                    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n                    <Button\n                      variant={BUTTON_VARIANT.LINK}\n                      size={BUTTON_SIZES.INHERIT}\n                      onClick={openBuyCryptoInPdapp}\n                      key={`${nativeCurrency}-buy-button`}\n                    >\n                      {t('buyAsset', [nativeCurrency])}\n                    </Button>,\n                    ///: END:ONLY_INCLUDE_IF\n                  ])\n                : t('insufficientCurrencyDeposit', [\n                    nativeCurrency,\n                    networkName,\n                  ])\n            }\n          />\n        )}\n        {(showIsSigningOrSubmittingError || showUserOpContractDeployError) && (\n          <BannerAlert\n            data-testid=\"confirm-page-container-content-error-banner-2\"\n            severity={Severity.Danger}\n            description={t(errorKey)}\n            marginBottom={4}\n            marginLeft={4}\n            marginRight={4}\n          />\n        )}\n        <PageContainerFooter\n          onCancel={onCancel}\n          cancelText={cancelText}\n          onSubmit={onSubmit}\n          submitText={submitText}\n          disabled={disabled}\n          submitButtonType={submitButtonType}\n        >\n          {unapprovedTxCount > 1 ? (\n            <a onClick={onCancelAll}>{rejectNText}</a>\n          ) : null}\n        </PageContainerFooter>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-negated-condition */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { TransactionType } from '@metamask/transaction-controller';\nimport { toChecksumHexAddress } from '../../../../../../../shared/modules/hexstring-utils';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport useAddressDetails from '../../../../../../hooks/useAddressDetails';\nimport { getIpfsGateway, txDataSelector } from '../../../../../../selectors';\n\nimport Identicon from '../../../../../../components/ui/identicon';\nimport InfoTooltip from '../../../../../../components/ui/info-tooltip';\nimport NicknamePopovers from '../../../../../../components/app/modals/nickname-popovers';\nimport { ORIGIN_METAMASK } from '../../../../../../../shared/constants/app';\nimport SiteOrigin from '../../../../../../components/ui/site-origin';\nimport useGetAssetImageUrl from '../../../../../../hooks/useGetAssetImageUrl';\n\nconst ConfirmPageContainerSummary = (props) => {\n  const {\n    action,\n    titleComponent,\n    subtitleComponent,\n    className,\n    tokenAddress,\n    nonce,\n    origin,\n    image,\n    transactionType,\n  } = props;\n\n  const [showNicknamePopovers, setShowNicknamePopovers] = useState(false);\n  const t = useI18nContext();\n  const ipfsGateway = useSelector(getIpfsGateway);\n\n  const txData = useSelector(txDataSelector);\n  const nftImageURL = useGetAssetImageUrl(image, ipfsGateway);\n  const { txParams = {} } = txData;\n  const { to: txParamsToAddress } = txParams;\n\n  const contractInitiatedTransactionType = [\n    TransactionType.contractInteraction,\n    TransactionType.tokenMethodTransfer,\n    TransactionType.tokenMethodTransferFrom,\n    TransactionType.tokenMethodSafeTransferFrom,\n  ];\n  const isContractTypeTransaction =\n    contractInitiatedTransactionType.includes(transactionType);\n  let contractAddress;\n  if (isContractTypeTransaction) {\n    // If the transaction is TOKEN_METHOD_TRANSFER or TOKEN_METHOD_TRANSFER_FROM\n    // the contract address is passed down as tokenAddress, if it is anyother\n    // type of contract interaction it is \"to\" from txParams\n\n    contractAddress =\n      transactionType === TransactionType.tokenMethodTransfer ||\n      transactionType === TransactionType.tokenMethodTransferFrom ||\n      transactionType === TransactionType.tokenMethodSafeTransferFrom ||\n      transactionType === TransactionType.tokenMethodSetApprovalForAll\n        ? tokenAddress\n        : txParamsToAddress;\n  }\n\n  const { toName, isTrusted } = useAddressDetails(contractAddress);\n  const checksummedAddress = toChecksumHexAddress(contractAddress);\n\n  const renderImage = () => {\n    if (image) {\n      return (\n        <img\n          className=\"confirm-page-container-summary__icon\"\n          width={36}\n          src={nftImageURL}\n        />\n      );\n    } else if (contractAddress) {\n      return (\n        <Identicon\n          className=\"confirm-page-container-summary__icon\"\n          diameter={36}\n          address={contractAddress}\n        />\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className={classnames('confirm-page-container-summary', className)}>\n      {origin === ORIGIN_METAMASK ? null : (\n        <SiteOrigin\n          className=\"confirm-page-container-summary__origin\"\n          siteOrigin={origin}\n        />\n      )}\n      <div className=\"confirm-page-container-summary__action-row\">\n        <div className=\"confirm-page-container-summary__action\">\n          {isContractTypeTransaction && toName && (\n            <span className=\"confirm-page-container-summary__action__contract-address\">\n              <button\n                className=\"confirm-page-container-summary__action__contract-address-btn\"\n                onClick={() => setShowNicknamePopovers(true)}\n                role=\"button\"\n              >\n                {toName}\n              </button>\n              :\n            </span>\n          )}\n          <span className=\"confirm-page-container-summary__action__name\">\n            {action}\n          </span>\n          {isContractTypeTransaction && isTrusted === false && (\n            <InfoTooltip\n              position=\"top\"\n              contentText={t('unverifiedContractAddressMessage')}\n            />\n          )}\n        </div>\n        {nonce && (\n          <div className=\"confirm-page-container-summary__nonce\">\n            {`#${nonce}`}\n          </div>\n        )}\n      </div>\n      <>\n        <div className=\"confirm-page-container-summary__title\">\n          {renderImage()}\n          {titleComponent}\n        </div>\n        {subtitleComponent}\n      </>\n      {showNicknamePopovers && (\n        <NicknamePopovers\n          onClose={() => setShowNicknamePopovers(false)}\n          address={checksummedAddress}\n        />\n      )}\n    </div>\n  );\n};\n\nConfirmPageContainerSummary.propTypes = {\n  action: PropTypes.string,\n  image: PropTypes.string,\n  titleComponent: PropTypes.node,\n  subtitleComponent: PropTypes.node,\n  className: PropTypes.string,\n  tokenAddress: PropTypes.string,\n  nonce: PropTypes.string,\n  origin: PropTypes.string.isRequired,\n  transactionType: PropTypes.string,\n};\n\nexport default ConfirmPageContainerSummary;\n","export { default } from './confirm-page-container-summary.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, IconName } from '../../../../../../components/component-library';\nimport { IconColor } from '../../../../../../helpers/constants/design-system';\n\n/**\n * @deprecated The `<ConfirmPageContainerWarning />` component has been deprecated in favor of the new `<BannerAlert>` component from the component-library.\n * Please update your code to use the new `<BannerAlert>` component instead, which can be found at ui/components/component-library/banner-alert/banner-alert.js.\n * You can find documentation for the new `BannerAlert` component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-banneralert--docs}\n * If you would like to help with the replacement of the old `ConfirmPageContainerWarning` component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20466}\n */\n\nconst ConfirmPageContainerWarning = (props) => {\n  return (\n    <div className=\"confirm-page-container-warning\">\n      <Icon\n        name={IconName.Info}\n        color={IconColor.warningDefault}\n        className=\"confirm-page-container-warning__icon\"\n      />\n      <div className=\"confirm-page-container-warning__warning\">\n        {props.warning}\n      </div>\n    </div>\n  );\n};\n\nConfirmPageContainerWarning.propTypes = {\n  warning: PropTypes.string,\n};\n\nexport default ConfirmPageContainerWarning;\n","export { default } from './confirm-page-container-warning.component';\n","export { default } from './confirm-page-container-content.component';\nexport { default as ConfirmPageContainerSummary } from './confirm-page-container-summary';\nexport { default as ConfirmPageContainerWarning } from './confirm-page-container-warning';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ENVIRONMENT_TYPE_POPUP,\n  ENVIRONMENT_TYPE_NOTIFICATION,\n  ORIGIN_METAMASK,\n} from '../../../../../../shared/constants/app';\nimport { getEnvironmentType } from '../../../../../../app/scripts/lib/util';\nimport NetworkDisplay from '../../../../../components/app/network-display';\nimport Identicon from '../../../../../components/ui/identicon';\nimport { shortenAddress } from '../../../../../helpers/utils/util';\nimport AccountMismatchWarning from '../../../../../components/ui/account-mismatch-warning/account-mismatch-warning.component';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { Icon, IconName } from '../../../../../components/component-library';\n\nexport default function ConfirmPageContainerHeader({\n  onEdit,\n  showEdit,\n  accountAddress,\n  showAccountInHeader,\n  children,\n  origin,\n}) {\n  const t = useI18nContext();\n  const windowType = getEnvironmentType();\n  const isFullScreen =\n    windowType !== ENVIRONMENT_TYPE_NOTIFICATION &&\n    windowType !== ENVIRONMENT_TYPE_POPUP;\n\n  if (!showEdit && isFullScreen) {\n    return children;\n  }\n  return (\n    <div\n      className=\"confirm-page-container-header\"\n      data-testid=\"header-container\"\n    >\n      <div className=\"confirm-page-container-header__row\">\n        {showAccountInHeader ? (\n          <div className=\"confirm-page-container-header__address-container\">\n            <div className=\"confirm-page-container-header__address-identicon\">\n              <Identicon address={accountAddress} diameter={24} />\n            </div>\n            <div\n              className=\"confirm-page-container-header__address\"\n              data-testid=\"header-address\"\n            >\n              {shortenAddress(accountAddress)}\n            </div>\n            <AccountMismatchWarning address={accountAddress} />\n          </div>\n        ) : (\n          origin === ORIGIN_METAMASK && (\n            <div\n              className=\"confirm-page-container-header__back-button-container\"\n              style={{\n                visibility: showEdit ? 'initial' : 'hidden',\n              }}\n            >\n              <Icon name={IconName.ArrowLeft} />\n              <span\n                data-testid=\"confirm-page-back-edit-button\"\n                className=\"confirm-page-container-header__back-button\"\n                onClick={() => onEdit()}\n              >\n                {t('edit')}\n              </span>\n            </div>\n          )\n        )}\n        <NetworkDisplay />\n      </div>\n      {children}\n    </div>\n  );\n}\n\nConfirmPageContainerHeader.propTypes = {\n  accountAddress: PropTypes.string,\n  showAccountInHeader: PropTypes.bool,\n  showEdit: PropTypes.bool,\n  onEdit: PropTypes.func,\n  children: PropTypes.node,\n  origin: PropTypes.string,\n};\n","export { default } from './confirm-page-container-header.component';\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  unapprovedDecryptMsgsSelector,\n  unapprovedEncryptionPublicKeyMsgsSelector,\n  unconfirmedTransactionsListSelector,\n} from '../../../../../selectors';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport {\n  CONFIRM_TRANSACTION_ROUTE,\n  SIGNATURE_REQUEST_PATH,\n} from '../../../../../helpers/constants/routes';\nimport { clearConfirmTransaction } from '../../../../../ducks/confirm-transaction/confirm-transaction.duck';\nimport { QueueType } from '../../../../../../shared/constants/metametrics';\nimport { useQueuedConfirmationsEvent } from '../../../hooks/useQueuedConfirmationEvents';\n\nconst ConfirmPageContainerNavigation = () => {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const unapprovedDecryptMsgs = useSelector(unapprovedDecryptMsgsSelector);\n  const unapprovedEncryptionPublicKeyMsgs = useSelector(\n    unapprovedEncryptionPublicKeyMsgsSelector,\n  );\n  const unconfirmedTransactions =\n    useSelector(unconfirmedTransactionsListSelector) ?? [];\n\n  const enumUnapprovedDecryptMsgsKey = Object.keys(unapprovedDecryptMsgs || {});\n  const enumUnapprovedEncryptMsgsKey = Object.keys(\n    unapprovedEncryptionPublicKeyMsgs || {},\n  );\n  const enumDecryptAndEncryptMsgs = [\n    ...enumUnapprovedDecryptMsgsKey,\n    ...enumUnapprovedEncryptMsgsKey,\n  ];\n\n  const enumUnapprovedTxs = unconfirmedTransactions\n    .map((tx) => tx.id)\n    .filter((key) => enumDecryptAndEncryptMsgs.includes(key) === false);\n\n  const currentPosition = enumUnapprovedTxs.indexOf(id);\n\n  const totalTx = enumUnapprovedTxs.length;\n  const positionOfCurrentTx = currentPosition + 1;\n  const nextTxId = enumUnapprovedTxs[currentPosition + 1];\n  const prevTxId = enumUnapprovedTxs[currentPosition - 1];\n  const showNavigation = enumUnapprovedTxs.length > 1;\n  const firstTx = enumUnapprovedTxs[0];\n  const lastTx = enumUnapprovedTxs[enumUnapprovedTxs.length - 1];\n\n  const onNextTx = (txId) => {\n    if (txId) {\n      dispatch(clearConfirmTransaction());\n      const position = enumUnapprovedTxs.indexOf(txId);\n      history.push(\n        unconfirmedTransactions[position]?.msgParams\n          ? `${CONFIRM_TRANSACTION_ROUTE}/${txId}${SIGNATURE_REQUEST_PATH}`\n          : `${CONFIRM_TRANSACTION_ROUTE}/${txId}`,\n      );\n    }\n  };\n\n  useQueuedConfirmationsEvent(QueueType.NavigationHeader);\n\n  return (\n    <div\n      className=\"confirm-page-container-navigation\"\n      style={{\n        display: showNavigation ? 'flex' : 'none',\n      }}\n    >\n      <div\n        className=\"confirm-page-container-navigation__container\"\n        data-testid=\"navigation-container\"\n        style={{\n          visibility: prevTxId ? 'initial' : 'hidden',\n        }}\n      >\n        <button\n          className=\"confirm-page-container-navigation__arrow\"\n          data-testid=\"first-page\"\n          onClick={() => onNextTx(firstTx)}\n        >\n          <i className=\"fa fa-angle-double-left fa-2x\" />\n        </button>\n        <button\n          className=\"confirm-page-container-navigation__arrow\"\n          data-testid=\"previous-page\"\n          onClick={() => onNextTx(prevTxId)}\n        >\n          <i className=\"fa fa-angle-left fa-2x\" />\n        </button>\n      </div>\n      <div className=\"confirm-page-container-navigation__textcontainer\">\n        <div className=\"confirm-page-container-navigation__navtext\">\n          {positionOfCurrentTx} {t('ofTextNofM')} {totalTx}\n        </div>\n        <div className=\"confirm-page-container-navigation__longtext\">\n          {t('requestsAwaitingAcknowledgement')}\n        </div>\n      </div>\n      <div\n        className=\"confirm-page-container-navigation__container\"\n        style={{\n          visibility: nextTxId ? 'initial' : 'hidden',\n        }}\n      >\n        <button\n          className=\"confirm-page-container-navigation__arrow\"\n          data-testid=\"next-page\"\n          onClick={() => onNextTx(nextTxId)}\n        >\n          <i className=\"fa fa-angle-right fa-2x\" />\n        </button>\n        <button\n          className=\"confirm-page-container-navigation__arrow\"\n          data-testid=\"last-page\"\n          onClick={() => onNextTx(lastTx)}\n        >\n          <i className=\"fa fa-angle-double-right fa-2x\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmPageContainerNavigation;\n","export { default } from './confirm-page-container-navigation.component';\n","import React, {\n  useCallback,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  useContext,\n  ///: END:ONLY_INCLUDE_IF\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { TransactionType } from '@metamask/transaction-controller';\nimport { EditGasModes } from '../../../../../shared/constants/gas';\nimport { GasFeeContextProvider } from '../../../../contexts/gasFee';\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\nimport { NETWORK_TO_NAME_MAP } from '../../../../../shared/constants/network';\n\nimport { PageContainerFooter } from '../../../../components/ui/page-container';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport Button from '../../../../components/ui/button';\n///: END:ONLY_INCLUDE_IF\nimport ActionableMessage from '../../../../components/ui/actionable-message/actionable-message';\nimport SenderToRecipient from '../../../../components/ui/sender-to-recipient';\n\nimport { fetchTokenBalance } from '../../../../../shared/lib/token-util';\nimport AdvancedGasFeePopover from '../advanced-gas-fee-popover';\nimport EditGasFeePopover from '../edit-gas-fee-popover/edit-gas-fee-popover';\nimport EditGasPopover from '../edit-gas-popover';\nimport ErrorMessage from '../../../../components/ui/error-message';\nimport { INSUFFICIENT_FUNDS_ERROR_KEY } from '../../../../helpers/constants/error-keys';\nimport { Text } from '../../../../components/component-library';\nimport {\n  TextVariant,\n  TextAlign,\n} from '../../../../helpers/constants/design-system';\n\nimport NetworkAccountBalanceHeader from '../../../../components/app/network-account-balance-header/network-account-balance-header';\nimport SetApproveForAllWarning from '../set-approval-for-all-warning';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport useTransactionInsights from '../../../../hooks/useTransactionInsights';\nimport InsightWarnings from '../../../../components/app/snaps/insight-warnings';\nimport {\n  getAccountName,\n  getAddressBookEntry,\n  getInternalAccounts,\n  getMetadataContractName,\n  getNetworkIdentifier,\n  getSwapsDefaultToken,\n} from '../../../../selectors';\nimport useRamps from '../../../../hooks/ramps/useRamps/useRamps';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../shared/constants/metametrics';\n///: END:ONLY_INCLUDE_IF\n\nimport { BlockaidResultType } from '../../../../../shared/constants/security-provider';\nimport { getIsNativeTokenBuyable } from '../../../../ducks/ramps';\nimport {\n  ConfirmPageContainerHeader,\n  ConfirmPageContainerContent,\n  ConfirmPageContainerNavigation,\n} from '.';\n\nconst ConfirmPageContainer = (props) => {\n  const {\n    showEdit,\n    onEdit,\n    fromName,\n    fromAddress,\n    toEns,\n    toNickname,\n    toAddress,\n    disabled,\n    errorKey,\n    errorMessage,\n    contentComponent,\n    action,\n    title,\n    image,\n    titleComponent,\n    subtitleComponent,\n    detailsComponent,\n    dataHexComponent,\n    onCancelAll,\n    onCancel,\n    onSubmit,\n    onSetApprovalForAll,\n    showWarningModal,\n    tokenAddress,\n    nonce,\n    unapprovedTxCount,\n    warning,\n    hideSenderToRecipient,\n    showAccountInHeader,\n    origin,\n    ethGasPriceWarning,\n    editingGas,\n    handleCloseEditGas,\n    currentTransaction,\n    supportsEIP1559,\n    nativeCurrency,\n    txData,\n    assetStandard,\n    isApprovalOrRejection,\n    displayAccountBalanceHeader,\n  } = props;\n\n  const t = useI18nContext();\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  const trackEvent = useContext(MetaMetricsContext);\n  ///: END:ONLY_INCLUDE_IF\n  const [collectionBalance, setCollectionBalance] = useState('0');\n  const [isShowingTxInsightWarnings, setIsShowingTxInsightWarnings] =\n    useState(false);\n  const isBuyableChain = useSelector(getIsNativeTokenBuyable);\n  const contact = useSelector((state) => getAddressBookEntry(state, toAddress));\n  const networkIdentifier = useSelector(getNetworkIdentifier);\n  const defaultToken = useSelector(getSwapsDefaultToken);\n  const accountBalance = defaultToken.string;\n  const internalAccounts = useSelector(getInternalAccounts);\n  const ownedAccountName = getAccountName(internalAccounts, toAddress);\n  const toName = ownedAccountName || contact?.name;\n  const recipientIsOwnedAccount = Boolean(ownedAccountName);\n  const toMetadataName = useSelector((state) =>\n    getMetadataContractName(state, toAddress),\n  );\n\n  const { openBuyCryptoInPdapp } = useRamps();\n\n  const isSetApproveForAll =\n    currentTransaction.type === TransactionType.tokenMethodSetApprovalForAll;\n\n  const shouldDisplayWarning =\n    contentComponent && disabled && (errorKey || errorMessage);\n\n  const networkName =\n    NETWORK_TO_NAME_MAP[currentTransaction.chainId] || networkIdentifier;\n\n  const fetchCollectionBalance = useCallback(async () => {\n    const tokenBalance = await fetchTokenBalance(\n      tokenAddress,\n      fromAddress,\n      global.ethereumProvider,\n    );\n    setCollectionBalance(tokenBalance.toString() || '0');\n  }, [fromAddress, tokenAddress]);\n\n  // As confirm-transction-base is converted to functional component\n  // this code can bemoved to it.\n  const insightObject = useTransactionInsights({ txData });\n  const insightComponent = insightObject?.insightComponent;\n\n  const handleSubmit = () => {\n    if (isSetApproveForAll && isApprovalOrRejection) {\n      return onSetApprovalForAll();\n    }\n    return onSubmit();\n  };\n\n  // TODO: Better name\n  const topLevelHandleSubmit = () => {\n    if (insightObject?.warnings?.length > 0) {\n      return setIsShowingTxInsightWarnings(true);\n    }\n\n    return handleSubmit();\n  };\n\n  useEffect(() => {\n    if (isSetApproveForAll && assetStandard === TokenStandard.ERC721) {\n      fetchCollectionBalance();\n    }\n  }, [\n    currentTransaction,\n    assetStandard,\n    isSetApproveForAll,\n    fetchCollectionBalance,\n    collectionBalance,\n  ]);\n\n  const isMaliciousRequest =\n    txData.securityAlertResponse?.result_type === BlockaidResultType.Malicious;\n\n  return (\n    <GasFeeContextProvider transaction={currentTransaction}>\n      <div className=\"page-container\" data-testid=\"page-container\">\n        <ConfirmPageContainerNavigation />\n        {displayAccountBalanceHeader ? (\n          <NetworkAccountBalanceHeader\n            accountName={fromName}\n            accountBalance={accountBalance}\n            tokenName={nativeCurrency}\n            accountAddress={fromAddress}\n            networkName={networkName}\n            chainId={currentTransaction.chainId}\n          />\n        ) : (\n          <ConfirmPageContainerHeader\n            showEdit={showEdit}\n            onEdit={() => onEdit()}\n            showAccountInHeader={showAccountInHeader}\n            accountAddress={fromAddress}\n            origin={origin}\n          >\n            {hideSenderToRecipient ? null : (\n              <SenderToRecipient\n                senderName={fromName}\n                senderAddress={fromAddress}\n                recipientName={toName}\n                recipientMetadataName={toMetadataName}\n                recipientAddress={toAddress}\n                recipientEns={toEns}\n                recipientNickname={toNickname}\n                recipientIsOwnedAccount={recipientIsOwnedAccount}\n              />\n            )}\n          </ConfirmPageContainerHeader>\n        )}\n        {contentComponent || (\n          <ConfirmPageContainerContent\n            action={action}\n            title={title}\n            image={image}\n            titleComponent={titleComponent}\n            subtitleComponent={subtitleComponent}\n            detailsComponent={detailsComponent}\n            dataHexComponent={dataHexComponent}\n            insightComponent={insightComponent}\n            errorMessage={errorMessage}\n            errorKey={errorKey}\n            tokenAddress={tokenAddress}\n            nonce={nonce}\n            warning={warning}\n            onCancelAll={onCancelAll}\n            onCancel={onCancel}\n            cancelText={t('reject')}\n            onSubmit={topLevelHandleSubmit}\n            submitText={t('confirm')}\n            disabled={disabled}\n            unapprovedTxCount={unapprovedTxCount}\n            rejectNText={t('rejectTxsN', [unapprovedTxCount])}\n            origin={origin}\n            ethGasPriceWarning={ethGasPriceWarning}\n            supportsEIP1559={supportsEIP1559}\n            currentTransaction={currentTransaction}\n            nativeCurrency={nativeCurrency}\n            networkName={networkName}\n            toAddress={toAddress}\n            transactionType={currentTransaction.type}\n            isBuyableChain={isBuyableChain}\n            openBuyCryptoInPdapp={openBuyCryptoInPdapp}\n            txData={txData}\n          />\n        )}\n        {shouldDisplayWarning && errorKey === INSUFFICIENT_FUNDS_ERROR_KEY && (\n          <div className=\"confirm-approve-content__warning\">\n            <ActionableMessage\n              message={\n                isBuyableChain ? (\n                  <Text\n                    variant={TextVariant.bodySm}\n                    textAlign={TextAlign.Left}\n                    as=\"h6\"\n                  >\n                    {t('insufficientCurrencyBuyOrDeposit', [\n                      nativeCurrency,\n                      networkName,\n                      ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n                      <Button\n                        type=\"inline\"\n                        className=\"confirm-page-container-content__link\"\n                        onClick={() => {\n                          openBuyCryptoInPdapp();\n                          trackEvent({\n                            event: MetaMetricsEventName.NavBuyButtonClicked,\n                            category: MetaMetricsEventCategory.Navigation,\n                            properties: {\n                              location: 'Transaction Confirmation',\n                              text: 'Buy',\n                            },\n                          });\n                        }}\n                        key={`${nativeCurrency}-buy-button`}\n                      >\n                        {t('buyAsset', [nativeCurrency])}\n                      </Button>,\n                      ///: END:ONLY_INCLUDE_IF\n                    ])}\n                  </Text>\n                ) : (\n                  <Text\n                    variant={TextVariant.bodySm}\n                    textAlign={TextAlign.Left}\n                    as=\"h6\"\n                  >\n                    {t('insufficientCurrencyDeposit', [\n                      nativeCurrency,\n                      networkName,\n                    ])}\n                  </Text>\n                )\n              }\n              useIcon\n              iconFillColor=\"var(--color-error-default)\"\n              type=\"danger\"\n            />\n          </div>\n        )}\n        {shouldDisplayWarning && errorKey !== INSUFFICIENT_FUNDS_ERROR_KEY && (\n          <div className=\"confirm-approve-content__warning\">\n            <ErrorMessage errorKey={errorKey} />\n          </div>\n        )}\n        {showWarningModal && (\n          <SetApproveForAllWarning\n            collectionName={title}\n            senderAddress={fromAddress}\n            name={fromName}\n            isERC721={assetStandard === TokenStandard.ERC721}\n            total={collectionBalance}\n            onSubmit={onSubmit}\n            onCancel={onCancel}\n          />\n        )}\n        {contentComponent && (\n          <PageContainerFooter\n            onCancel={onCancel}\n            cancelText={t('reject')}\n            onSubmit={topLevelHandleSubmit}\n            submitText={t('confirm')}\n            submitButtonType={\n              (isSetApproveForAll && isApprovalOrRejection) ||\n              isMaliciousRequest\n                ? 'danger-primary'\n                : 'primary'\n            }\n            disabled={disabled}\n          >\n            {unapprovedTxCount > 1 && (\n              <a onClick={onCancelAll}>\n                {t('rejectTxsN', [unapprovedTxCount])}\n              </a>\n            )}\n          </PageContainerFooter>\n        )}\n        {editingGas && !supportsEIP1559 && (\n          <EditGasPopover\n            mode={EditGasModes.modifyInPlace}\n            onClose={handleCloseEditGas}\n            transaction={currentTransaction}\n          />\n        )}\n        {supportsEIP1559 && (\n          <>\n            <EditGasFeePopover />\n            <AdvancedGasFeePopover />\n          </>\n        )}\n        {isShowingTxInsightWarnings && (\n          <InsightWarnings\n            warnings={insightObject.warnings}\n            origin={origin}\n            onCancel={() => setIsShowingTxInsightWarnings(false)}\n            onSubmit={() => {\n              handleSubmit();\n              setIsShowingTxInsightWarnings(false);\n            }}\n          />\n        )}\n      </div>\n    </GasFeeContextProvider>\n  );\n};\n\nConfirmPageContainer.propTypes = {\n  // Header\n  action: PropTypes.string,\n  onEdit: PropTypes.func,\n  showEdit: PropTypes.bool,\n  subtitleComponent: PropTypes.node,\n  title: PropTypes.string,\n  image: PropTypes.string,\n  titleComponent: PropTypes.node,\n  hideSenderToRecipient: PropTypes.bool,\n  showAccountInHeader: PropTypes.bool,\n  assetStandard: PropTypes.string,\n  // Sender to Recipient\n  fromAddress: PropTypes.string,\n  fromName: PropTypes.string,\n  toAddress: PropTypes.string,\n  toEns: PropTypes.string,\n  toNickname: PropTypes.string,\n  // Content\n  contentComponent: PropTypes.node,\n  errorKey: PropTypes.string,\n  errorMessage: PropTypes.string,\n  dataHexComponent: PropTypes.node,\n  detailsComponent: PropTypes.node,\n  txData: PropTypes.object,\n  tokenAddress: PropTypes.string,\n  nonce: PropTypes.string,\n  warning: PropTypes.string,\n  unapprovedTxCount: PropTypes.number,\n  origin: PropTypes.string.isRequired,\n  ethGasPriceWarning: PropTypes.string,\n  // Footer\n  onCancelAll: PropTypes.func,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onSetApprovalForAll: PropTypes.func,\n  showWarningModal: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editingGas: PropTypes.bool,\n  handleCloseEditGas: PropTypes.func,\n  // Gas Popover\n  currentTransaction: PropTypes.object.isRequired,\n  supportsEIP1559: PropTypes.bool,\n  nativeCurrency: PropTypes.string,\n  isApprovalOrRejection: PropTypes.bool,\n  displayAccountBalanceHeader: PropTypes.bool,\n};\n\nexport default ConfirmPageContainer;\n","export { default } from './confirm-page-container.component';\nexport { default as ConfirmPageContainerHeader } from './confirm-page-container-header';\nexport { default as ConfirmDetailRow } from './confirm-detail-row';\nexport { default as ConfirmPageContainerNavigation } from './confirm-page-container-navigation';\n\nexport {\n  default as ConfirmPageContainerContent,\n  ConfirmPageContainerSummary,\n} from './confirm-page-container-content';\nexport { SnapInsight } from '../../../../components/app/snaps/snap-insight/snap-insight';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { SECONDARY } from '../../../../helpers/constants/common';\nimport {\n  Color,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { isNFTAssetStandard } from '../../../../helpers/utils/transactions.util';\nimport { getShouldShowFiat } from '../../../../selectors';\nimport { useTransactionInfo } from '../../hooks/useTransactionInfo';\nimport { Text } from '../../../../components/component-library';\nimport UserPreferencedCurrencyDisplay from '../../../../components/app/user-preferenced-currency-display';\n\nconst ConfirmSubTitle = ({\n  txData,\n  hexTransactionAmount,\n  subtitleComponent,\n  assetStandard,\n}) => {\n  const shouldShowFiat = useSelector(getShouldShowFiat);\n  const { isNftTransfer } = useTransactionInfo(txData);\n\n  if (!shouldShowFiat && !isNftTransfer && !isNFTAssetStandard(assetStandard)) {\n    return null;\n  }\n\n  if (subtitleComponent) {\n    return subtitleComponent;\n  }\n\n  return (\n    <Text\n      as=\"h5\"\n      ellipsis\n      variant={TextVariant.bodyMd}\n      color={Color.textAlternative}\n    >\n      <UserPreferencedCurrencyDisplay\n        value={hexTransactionAmount}\n        type={SECONDARY}\n        showEthLogo\n        hideLabel\n      />\n    </Text>\n  );\n};\n\nConfirmSubTitle.propTypes = {\n  assetStandard: PropTypes.string,\n  hexTransactionAmount: PropTypes.string,\n  subtitleComponent: PropTypes.element,\n  txData: PropTypes.object.isRequired,\n};\n\nexport default ConfirmSubTitle;\n","export { default as ConfirmSubTitle } from './confirm-subtitle';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TransactionType } from '@metamask/transaction-controller';\nimport { PRIMARY } from '../../../../helpers/constants/common';\nimport { Text } from '../../../../components/component-library';\nimport {\n  FONT_WEIGHT,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport UserPreferencedCurrencyDisplay from '../../../../components/app/user-preferenced-currency-display';\n\nconst ConfirmTitle = ({ title, hexTransactionAmount, txData }) => {\n  const isContractInteraction =\n    txData.type === TransactionType.contractInteraction;\n\n  const hideTitle =\n    (isContractInteraction || txData.type === TransactionType.deployContract) &&\n    txData.txParams?.value === '0x0';\n\n  if (hideTitle) {\n    return null;\n  }\n\n  if (title) {\n    return (\n      <Text\n        as={title && title.length < 10 ? 'h1' : 'h3'}\n        ellipsis\n        title={title}\n        variant={\n          title && title.length < 10\n            ? TextVariant.displayMd\n            : TextVariant.headingMd\n        }\n        fontWeight={FONT_WEIGHT.NORMAL}\n      >\n        {title}\n      </Text>\n    );\n  }\n\n  return (\n    <Text\n      as=\"h3\"\n      ellipsis\n      fontWeight={FONT_WEIGHT.NORMAL}\n      variant={TextVariant.headingMd}\n    >\n      <UserPreferencedCurrencyDisplay\n        hideLabel={!isContractInteraction}\n        showCurrencySuffix={isContractInteraction}\n        showEthLogo\n        type={PRIMARY}\n        value={hexTransactionAmount}\n      />\n    </Text>\n  );\n};\n\nConfirmTitle.propTypes = {\n  txData: PropTypes.object.isRequired,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  hexTransactionAmount: PropTypes.string,\n};\n\nexport default ConfirmTitle;\n","export { default as ConfirmTitle } from './confirm-title';\n","import React from 'react';\n\nimport Preloader from '../../../../../components/ui/icon/preloader';\nimport { BlockaidResultType } from '../../../../../../shared/constants/security-provider';\nimport { Box } from '../../../../../components/component-library';\nimport useCurrentSignatureSecurityAlertResponse from '../../../hooks/useCurrentSignatureSecurityAlertResponse';\n\nconst BlockaidLoadingIndicator = () => {\n  const signatureSecurityAlertResponse =\n    useCurrentSignatureSecurityAlertResponse();\n\n  if (\n    signatureSecurityAlertResponse?.result_type !== BlockaidResultType.Loading\n  ) {\n    return null;\n  }\n\n  return (\n    <Box marginInline={'auto'} marginTop={4}>\n      <Preloader size={18} />\n    </Box>\n  );\n};\n\nexport default BlockaidLoadingIndicator;\n","export { default as BlockaidLoadingIndicator } from './blockaid-loading-indicator';\n","import React, { ReactElement } from 'react';\nimport { AlertActionHandlerProvider } from '../../../../../components/app/alert-system/contexts/alertActionHandler';\nimport useConfirmationAlertActions from '../../../hooks/useConfirmationAlertActions';\nimport setConfirmationAlerts from '../../../hooks/setConfirmationAlerts';\nimport { AlertMetricsProvider } from '../../../../../components/app/alert-system/contexts/alertMetricsContext';\nimport { useConfirmationAlertMetrics } from '../../../hooks/useConfirmationAlertMetrics';\n\nconst ConfirmAlerts = ({ children }: { children: ReactElement }) => {\n  const { trackAlertActionClicked, trackAlertRender, trackInlineAlertClicked } =\n    useConfirmationAlertMetrics();\n\n  const processAction = useConfirmationAlertActions();\n  setConfirmationAlerts();\n\n  return (\n    <AlertMetricsProvider\n      metrics={{\n        trackAlertActionClicked,\n        trackAlertRender,\n        trackInlineAlertClicked,\n      }}\n    >\n      <AlertActionHandlerProvider onProcessAction={processAction}>\n        {children}\n      </AlertActionHandlerProvider>\n    </AlertMetricsProvider>\n  );\n};\n\nexport default ConfirmAlerts;\n","export { default as ConfirmAlerts } from './confirm-alerts';\n","///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { TransactionMeta } from '@metamask/transaction-controller';\n///: END:ONLY_INCLUDE_IF\nimport { ethErrors, serializeError } from 'eth-rpc-errors';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ConfirmAlertModal } from '../../../../../components/app/alert-system/confirm-alert-modal';\nimport {\n  Button,\n  ButtonSize,\n  ButtonVariant,\n  IconName,\n} from '../../../../../components/component-library';\nimport { Footer as PageFooter } from '../../../../../components/multichain/pages/page';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport {\n  doesAddressRequireLedgerHidConnection,\n  getCustomNonceValue,\n} from '../../../../../selectors';\nimport useAlerts from '../../../../../hooks/useAlerts';\nimport {\n  rejectPendingApproval,\n  resolvePendingApproval,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  updateAndApproveTx,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../../../../store/actions';\nimport { selectUseTransactionSimulations } from '../../../selectors/preferences';\n\nimport {\n  isPermitSignatureRequest,\n  isSIWESignatureRequest,\n  REDESIGN_DEV_TRANSACTION_TYPES,\n} from '../../../utils';\nimport { useConfirmContext } from '../../../context/confirm';\nimport { getConfirmationSender } from '../utils';\nimport { MetaMetricsEventLocation } from '../../../../../../shared/constants/metametrics';\n\nexport type OnCancelHandler = ({\n  location,\n}: {\n  location: MetaMetricsEventLocation;\n}) => void;\n\nconst ConfirmButton = ({\n  alertOwnerId = '',\n  disabled,\n  onSubmit,\n  onCancel,\n}: {\n  alertOwnerId?: string;\n  disabled: boolean;\n  onSubmit: () => void;\n  onCancel: OnCancelHandler;\n}) => {\n  const t = useI18nContext();\n\n  const [confirmModalVisible, setConfirmModalVisible] =\n    useState<boolean>(false);\n\n  const { dangerAlerts, hasDangerAlerts, hasUnconfirmedDangerAlerts } =\n    useAlerts(alertOwnerId);\n\n  const handleCloseConfirmModal = useCallback(() => {\n    setConfirmModalVisible(false);\n  }, []);\n\n  const handleOpenConfirmModal = useCallback(() => {\n    setConfirmModalVisible(true);\n  }, []);\n\n  return (\n    <>\n      {confirmModalVisible && (\n        <ConfirmAlertModal\n          ownerId={alertOwnerId}\n          onClose={handleCloseConfirmModal}\n          onCancel={onCancel}\n          onSubmit={onSubmit}\n        />\n      )}\n      {hasDangerAlerts ? (\n        <Button\n          block\n          danger\n          data-testid=\"confirm-footer-button\"\n          disabled={hasUnconfirmedDangerAlerts ? false : disabled}\n          onClick={handleOpenConfirmModal}\n          size={ButtonSize.Lg}\n          startIconName={IconName.Danger}\n        >\n          {dangerAlerts?.length > 1 ? t('reviewAlerts') : t('confirm')}\n        </Button>\n      ) : (\n        <Button\n          block\n          data-testid=\"confirm-footer-button\"\n          disabled={disabled}\n          onClick={onSubmit}\n          size={ButtonSize.Lg}\n        >\n          {t('confirm')}\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst Footer = () => {\n  const dispatch = useDispatch();\n  const t = useI18nContext();\n  const customNonceValue = useSelector(getCustomNonceValue);\n  const useTransactionSimulations = useSelector(\n    selectUseTransactionSimulations,\n  );\n  const { currentConfirmation, isScrollToBottomCompleted } =\n    useConfirmContext();\n  const { from } = getConfirmationSender(currentConfirmation);\n\n\n  const hardwareWalletRequiresConnection = useSelector((state) => {\n    if (from) {\n      return doesAddressRequireLedgerHidConnection(state, from);\n    }\n    return false;\n  });\n\n  const isSIWE = isSIWESignatureRequest(currentConfirmation);\n  const isPermit = isPermitSignatureRequest(currentConfirmation);\n  const isPermitSimulationShown = isPermit && useTransactionSimulations;\n\n  const isConfirmDisabled =\n    (!isScrollToBottomCompleted && !isSIWE && !isPermitSimulationShown) ||\n    hardwareWalletRequiresConnection;\n\n  const onCancel = useCallback(\n    ({ location }: { location?: MetaMetricsEventLocation }) => {\n      if (!currentConfirmation) {\n        return;\n      }\n\n      const error = ethErrors.provider.userRejectedRequest();\n      error.data = { location };\n\n      dispatch(\n        rejectPendingApproval(currentConfirmation.id, serializeError(error)),\n      );\n    },\n    [currentConfirmation],\n  );\n\n  const onSubmit = useCallback(() => {\n    if (!currentConfirmation) {\n      return;\n    }\n\n    const isTransactionConfirmation = REDESIGN_DEV_TRANSACTION_TYPES.find(\n      (type) => type === currentConfirmation?.type,\n    );\n    if (isTransactionConfirmation) {\n      ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n      const mergeTxDataWithNonce = (transactionData: TransactionMeta) =>\n        customNonceValue\n          ? {\n              ...transactionData,\n              customNonceValue,\n            }\n          : transactionData;\n\n      const updatedTx = mergeTxDataWithNonce(\n        currentConfirmation as TransactionMeta,\n      );\n      ///: END:ONLY_INCLUDE_IF\n\n\n      ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n      dispatch(updateAndApproveTx(updatedTx, true, ''));\n      ///: END:ONLY_INCLUDE_IF\n    } else {\n      dispatch(resolvePendingApproval(currentConfirmation.id, undefined));\n\n    }\n  }, [currentConfirmation, customNonceValue]);\n\n  const onFooterCancel = useCallback(() => {\n    onCancel({ location: MetaMetricsEventLocation.Confirmation });\n  }, [currentConfirmation, onCancel]);\n\n  return (\n    <PageFooter className=\"confirm-footer_page-footer\">\n      <Button\n        block\n        data-testid=\"confirm-footer-cancel-button\"\n        onClick={onFooterCancel}\n        size={ButtonSize.Lg}\n        variant={ButtonVariant.Secondary}\n      >\n        {t('cancel')}\n      </Button>\n      <ConfirmButton\n        alertOwnerId={currentConfirmation?.id}\n        onSubmit={() => onSubmit()}\n        disabled={isConfirmDisabled}\n        onCancel={onCancel}\n      />\n    </PageFooter>\n  );\n};\n\nexport default Footer;\n","export { default as Footer } from './footer';\n","import { TransactionType } from '@metamask/transaction-controller';\nimport React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventLocation,\n  MetaMetricsEventName,\n} from '../../../../../../shared/constants/metametrics';\nimport { ConfirmInfoRow } from '../../../../../components/app/confirm/info/row';\nimport { ConfirmInfoRowCurrency } from '../../../../../components/app/confirm/info/row/currency';\nimport {\n  AvatarAccount,\n  AvatarAccountSize,\n  AvatarAccountVariant,\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '../../../../../components/component-library';\nimport { AddressCopyButton } from '../../../../../components/multichain';\nimport Tooltip from '../../../../../components/ui/tooltip/tooltip';\nimport { MetaMetricsContext } from '../../../../../contexts/metametrics';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  FontWeight,\n  IconColor,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { getUseBlockie } from '../../../../../selectors';\nimport { setConfirmationAdvancedDetailsOpen } from '../../../../../store/actions';\nimport { useBalance } from '../../../hooks/useBalance';\nimport useConfirmationRecipientInfo from '../../../hooks/useConfirmationRecipientInfo';\nimport { selectConfirmationAdvancedDetailsOpen } from '../../../selectors/preferences';\nimport { SignatureRequestType } from '../../../types/confirm';\nimport {\n  isSignatureTransactionType,\n  REDESIGN_DEV_TRANSACTION_TYPES,\n} from '../../../utils/confirm';\nimport { useConfirmContext } from '../../../context/confirm';\n\nconst HeaderInfo = () => {\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const useBlockie = useSelector(getUseBlockie);\n  const [showAccountInfo, setShowAccountInfo] = React.useState(false);\n\n  const showAdvancedDetails = useSelector(\n    selectConfirmationAdvancedDetailsOpen,\n  );\n\n  const setShowAdvancedDetails = (value: boolean): void => {\n    dispatch(setConfirmationAdvancedDetailsOpen(value));\n  };\n\n  const { currentConfirmation } = useConfirmContext();\n\n  const { senderAddress: fromAddress, senderName: fromName } =\n    useConfirmationRecipientInfo();\n\n  const t = useI18nContext();\n\n  const { balance: balanceToUse } = useBalance(fromAddress);\n\n  const isSignature = isSignatureTransactionType(currentConfirmation);\n\n  const eventProps = isSignature\n    ? {\n        location: MetaMetricsEventLocation.SignatureConfirmation,\n        signature_type: (currentConfirmation as SignatureRequestType)?.msgParams\n          ?.signatureMethod,\n      }\n    : {\n        location: MetaMetricsEventLocation.Transaction,\n        transaction_type: currentConfirmation?.type,\n      };\n\n  function trackAccountModalOpened() {\n    const event = {\n      category: MetaMetricsEventCategory.Confirmations,\n      event: MetaMetricsEventName.AccountDetailsOpened,\n      properties: {\n        action: 'Confirm Screen',\n        ...eventProps,\n      },\n    };\n\n    trackEvent(event);\n  }\n\n  const isShowAdvancedDetailsToggle = REDESIGN_DEV_TRANSACTION_TYPES.includes(\n    currentConfirmation?.type as TransactionType,\n  );\n\n  return (\n    <>\n      <Box\n        display={Display.Flex}\n        justifyContent={JustifyContent.flexEnd}\n        style={{\n          alignSelf: 'flex-end',\n        }}\n      >\n        <Tooltip position=\"bottom\" title={t('accountDetails')} interactive>\n          <ButtonIcon\n            ariaLabel={t('accountDetails')}\n            color={IconColor.iconDefault}\n            iconName={IconName.Info}\n            size={ButtonIconSize.Md}\n            onClick={() => {\n              trackAccountModalOpened();\n              setShowAccountInfo(true);\n            }}\n            data-testid=\"header-info__account-details-button\"\n          />\n        </Tooltip>\n        {isShowAdvancedDetailsToggle && (\n          <Box\n            backgroundColor={\n              showAdvancedDetails\n                ? BackgroundColor.infoMuted\n                : BackgroundColor.transparent\n            }\n            borderRadius={BorderRadius.MD}\n            marginLeft={4}\n          >\n            <ButtonIcon\n              ariaLabel={'Advanced tx details'}\n              color={IconColor.iconDefault}\n              iconName={IconName.Customize}\n              data-testid=\"header-advanced-details-button\"\n              size={ButtonIconSize.Md}\n              onClick={() => {\n                setShowAdvancedDetails(!showAdvancedDetails);\n              }}\n            />\n          </Box>\n        )}\n      </Box>\n      <Modal\n        isOpen={showAccountInfo}\n        onClose={() => setShowAccountInfo(false)}\n        data-testid=\"account-details-modal\"\n        isClosedOnEscapeKey={false}\n        isClosedOnOutsideClick={false}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            <Box\n              display={Display.Flex}\n              justifyContent={JustifyContent.center}\n              style={{ position: 'relative' }}\n            >\n              <Box\n                style={{ margin: '0 auto' }}\n                display={Display.Flex}\n                justifyContent={JustifyContent.center}\n                flexDirection={FlexDirection.Column}\n                alignItems={AlignItems.center}\n              >\n                <AvatarAccount\n                  variant={\n                    useBlockie\n                      ? AvatarAccountVariant.Blockies\n                      : AvatarAccountVariant.Jazzicon\n                  }\n                  address={fromAddress}\n                  size={AvatarAccountSize.Lg}\n                />\n                <Text\n                  fontWeight={FontWeight.Bold}\n                  variant={TextVariant.bodyMd}\n                  color={TextColor.textDefault}\n                  marginTop={2}\n                  data-testid={\n                    'confirmation-account-details-modal__account-name'\n                  }\n                >\n                  {fromName}\n                </Text>\n              </Box>\n              <Box style={{ position: 'absolute', right: 0 }}>\n                <ButtonIcon\n                  ariaLabel={t('close')}\n                  iconName={IconName.Close}\n                  size={ButtonIconSize.Sm}\n                  className=\"confirm_header__close-button\"\n                  onClick={() => setShowAccountInfo(false)}\n                  data-testid=\"confirmation-account-details-modal__close-button\"\n                />\n              </Box>\n            </Box>\n          </ModalHeader>\n          <ModalBody>\n            <ConfirmInfoRow label=\"Account address\">\n              <AddressCopyButton address={fromAddress} shorten={true} />\n            </ConfirmInfoRow>\n            <ConfirmInfoRow label=\"Balance\">\n              <ConfirmInfoRowCurrency\n                value={balanceToUse ?? 0}\n                data-testid=\"confirmation-account-details-modal__account-balance\"\n              />\n            </ConfirmInfoRow>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default HeaderInfo;\n","import React from 'react';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Box,\n  Text,\n} from '../../../../../components/component-library';\nimport Identicon from '../../../../../components/ui/identicon';\nimport {\n  AlignItems,\n  Display,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { getAvatarNetworkColor } from '../../../../../helpers/utils/accounts';\nimport useConfirmationNetworkInfo from '../../../hooks/useConfirmationNetworkInfo';\nimport useConfirmationRecipientInfo from '../../../hooks/useConfirmationRecipientInfo';\nimport HeaderInfo from './header-info';\n\nconst Header = () => {\n  const { networkImageUrl, networkDisplayName } = useConfirmationNetworkInfo();\n  const { senderAddress: fromAddress, senderName: fromName } =\n    useConfirmationRecipientInfo();\n\n  return (\n    <Box\n      display={Display.Flex}\n      className=\"confirm_header__wrapper\"\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.spaceBetween}\n      data-testid=\"confirm-header\"\n    >\n      <Box alignItems={AlignItems.flexStart} display={Display.Flex} padding={4}>\n        <Box display={Display.Flex} marginTop={2}>\n          <Identicon address={fromAddress} diameter={32} />\n          <AvatarNetwork\n            src={networkImageUrl}\n            name={networkDisplayName}\n            size={AvatarNetworkSize.Xs}\n            backgroundColor={getAvatarNetworkColor(networkDisplayName)}\n            className=\"confirm_header__avatar-network\"\n          />\n        </Box>\n        <Box marginInlineStart={4}>\n          <Text\n            color={TextColor.textDefault}\n            variant={TextVariant.bodyMdMedium}\n            data-testid=\"header-account-name\"\n          >\n            {fromName}\n          </Text>\n          <Text\n            color={TextColor.textAlternative}\n            data-testid=\"header-network-display-name\"\n          >\n            {networkDisplayName}\n          </Text>\n        </Box>\n      </Box>\n      <Box alignItems={AlignItems.flexEnd} display={Display.Flex} padding={4}>\n        <HeaderInfo />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Header;\n","export { default as Header } from './header';\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowDivider,\n} from '../../../../../../../components/app/confirm/info/row';\nimport { ConfirmInfoSection } from '../../../../../../../components/app/confirm/info/row/section';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport { selectConfirmationAdvancedDetailsOpen } from '../../../../../selectors/preferences';\nimport { useDecodedTransactionData } from '../../hooks/useDecodedTransactionData';\nimport { Container } from '../../shared/transaction-data/transaction-data';\nimport {\n  MethodDataRow,\n  OriginRow,\n  RecipientRow,\n} from '../../shared/transaction-details/transaction-details';\nimport { useIsNFT } from '../hooks/use-is-nft';\n\nconst Spender = () => {\n  const t = useI18nContext();\n\n  const { currentConfirmation: transactionMeta } =\n    useConfirmContext<TransactionMeta>();\n\n  const { isNFT } = useIsNFT(transactionMeta);\n\n  const decodedResponse = useDecodedTransactionData();\n\n  const { value, pending } = decodedResponse;\n\n  if (pending) {\n    return <Container isLoading />;\n  }\n\n  if (!value) {\n    return null;\n  }\n\n  const spender = value.data[0].params[0].value;\n\n  return (\n    <>\n      <ConfirmInfoRow\n        label={t('spender')}\n        tooltip={t(\n          isNFT ? 'spenderTooltipDesc' : 'spenderTooltipERC20ApproveDesc',\n        )}\n        data-testid=\"confirmation__approve-spender\"\n      >\n        <ConfirmInfoRowAddress address={spender} />\n      </ConfirmInfoRow>\n\n      <ConfirmInfoRowDivider />\n    </>\n  );\n};\n\nexport const ApproveDetails = () => {\n  const showAdvancedDetails = useSelector(\n    selectConfirmationAdvancedDetailsOpen,\n  );\n\n  return (\n    <ConfirmInfoSection data-testid=\"confirmation__approve-details\">\n      <Spender />\n      <OriginRow />\n      {showAdvancedDetails && (\n        <>\n          <RecipientRow />\n          <MethodDataRow />\n        </>\n      )}\n    </ConfirmInfoSection>\n  );\n};\n","import { NameType } from '@metamask/name-controller';\nimport { TransactionMeta } from '@metamask/transaction-controller';\nimport React from 'react';\nimport Name from '../../../../../../../components/app/name';\nimport { Box, Text } from '../../../../../../../components/component-library';\nimport Tooltip from '../../../../../../../components/ui/tooltip';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  TextAlign,\n} from '../../../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { SPENDING_CAP_UNLIMITED_MSG } from '../../../../../constants';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport { useAssetDetails } from '../../../../../hooks/useAssetDetails';\nimport StaticSimulation from '../../shared/static-simulation/static-simulation';\nimport { Container } from '../../shared/transaction-data/transaction-data';\nimport { useApproveTokenSimulation } from '../hooks/use-approve-token-simulation';\nimport { useIsNFT } from '../hooks/use-is-nft';\n\nexport const ApproveStaticSimulation = () => {\n  const t = useI18nContext();\n\n  const { currentConfirmation: transactionMeta } = useConfirmContext() as {\n    currentConfirmation: TransactionMeta;\n  };\n\n  const { decimals: initialDecimals } = useAssetDetails(\n    transactionMeta?.txParams?.to,\n    transactionMeta?.txParams?.from,\n    transactionMeta?.txParams?.data,\n  );\n\n  const decimals = initialDecimals || '0';\n\n  const { spendingCap, formattedSpendingCap, value, pending } =\n    useApproveTokenSimulation(transactionMeta, decimals);\n\n  const { isNFT } = useIsNFT(transactionMeta);\n\n  if (pending) {\n    return <Container isLoading />;\n  }\n\n  if (!value) {\n    return null;\n  }\n\n  const formattedTokenText = (\n    <Text\n      data-testid=\"simulation-token-value\"\n      backgroundColor={BackgroundColor.backgroundAlternative}\n      borderRadius={BorderRadius.XL}\n      paddingInline={2}\n      textAlign={TextAlign.Center}\n      alignItems={AlignItems.center}\n    >\n      {spendingCap === SPENDING_CAP_UNLIMITED_MSG\n        ? t('unlimited')\n        : spendingCap}\n    </Text>\n  );\n\n  const simulationElements = (\n    <Box display={Display.Flex}>\n      <Box\n        display={Display.Inline}\n        marginInlineEnd={1}\n        minWidth={BlockSize.Zero}\n      >\n        {spendingCap === SPENDING_CAP_UNLIMITED_MSG ? (\n          <Tooltip title={formattedSpendingCap}>{formattedTokenText}</Tooltip>\n        ) : (\n          formattedTokenText\n        )}\n      </Box>\n      <Name\n        value={transactionMeta.txParams.to as string}\n        type={NameType.ETHEREUM_ADDRESS}\n      />\n    </Box>\n  );\n\n  return (\n    <StaticSimulation\n      title={t('simulationDetailsTitle')}\n      titleTooltip={t('simulationDetailsTitleTooltip')}\n      description={t(\n        isNFT\n          ? 'simulationDetailsApproveDesc'\n          : 'simulationDetailsERC20ApproveDesc',\n      )}\n      simulationHeading={\n        isNFT ? t('simulationApproveHeading') : t('spendingCap')\n      }\n      simulationElements={simulationElements}\n    />\n  );\n};\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useConfirmContext } from '../../../../context/confirm';\nimport { selectConfirmationAdvancedDetailsOpen } from '../../../../selectors/preferences';\nimport { AdvancedDetails } from '../shared/advanced-details/advanced-details';\nimport { GasFeesSection } from '../shared/gas-fees-section/gas-fees-section';\nimport { ApproveDetails } from './approve-details/approve-details';\nimport { ApproveStaticSimulation } from './approve-static-simulation/approve-static-simulation';\nimport { EditSpendingCapModal } from './edit-spending-cap-modal/edit-spending-cap-modal';\nimport { useIsNFT } from './hooks/use-is-nft';\nimport { SpendingCap } from './spending-cap/spending-cap';\n\nconst ApproveInfo = () => {\n  const { currentConfirmation: transactionMeta } = useConfirmContext() as {\n    currentConfirmation: TransactionMeta;\n  };\n\n  const showAdvancedDetails = useSelector(\n    selectConfirmationAdvancedDetailsOpen,\n  );\n\n  const { isNFT } = useIsNFT(transactionMeta);\n\n  const [isOpenEditSpendingCapModal, setIsOpenEditSpendingCapModal] =\n    useState(false);\n\n  if (!transactionMeta?.txParams) {\n    return null;\n  }\n\n  return (\n    <>\n      <ApproveStaticSimulation />\n      <ApproveDetails />\n      {!isNFT && (\n        <SpendingCap\n          setIsOpenEditSpendingCapModal={setIsOpenEditSpendingCapModal}\n        />\n      )}\n      <GasFeesSection />\n      {showAdvancedDetails && <AdvancedDetails />}\n      <EditSpendingCapModal\n        isOpenEditSpendingCapModal={isOpenEditSpendingCapModal}\n        setIsOpenEditSpendingCapModal={setIsOpenEditSpendingCapModal}\n      />\n    </>\n  );\n};\n\nexport default ApproveInfo;\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { calcTokenAmount } from '../../../../../../../../shared/lib/transactions-controller-utils';\nimport { hexToDecimal } from '../../../../../../../../shared/modules/conversion.utils';\nimport {\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  TextField,\n  TextFieldType,\n} from '../../../../../../../components/component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport {\n  estimateGas,\n  updateEditableParams,\n} from '../../../../../../../store/actions';\nimport { getCustomTxParamsData } from '../../../../../confirm-approve/confirm-approve.util';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport { useAssetDetails } from '../../../../../hooks/useAssetDetails';\nimport { useApproveTokenSimulation } from '../hooks/use-approve-token-simulation';\n\nexport const EditSpendingCapModal = ({\n  isOpenEditSpendingCapModal,\n  setIsOpenEditSpendingCapModal,\n}: {\n  isOpenEditSpendingCapModal: boolean;\n  setIsOpenEditSpendingCapModal: (newValue: boolean) => void;\n}) => {\n  const t = useI18nContext();\n\n  const dispatch = useDispatch();\n\n  const { currentConfirmation: transactionMeta } = useConfirmContext() as {\n    currentConfirmation: TransactionMeta;\n  };\n\n  const { userBalance, tokenSymbol, decimals } = useAssetDetails(\n    transactionMeta.txParams.to,\n    transactionMeta.txParams.from,\n    transactionMeta.txParams.data,\n  );\n\n  const accountBalance = calcTokenAmount(\n    userBalance ?? '0',\n    Number(decimals ?? '0'),\n  ).toFixed();\n\n  const { formattedSpendingCap } = useApproveTokenSimulation(\n    transactionMeta,\n    decimals || '0',\n  );\n\n  const [customSpendingCapInputValue, setCustomSpendingCapInputValue] =\n    useState('');\n\n  const handleCancel = useCallback(() => {\n    setIsOpenEditSpendingCapModal(false);\n    setCustomSpendingCapInputValue('');\n  }, [setIsOpenEditSpendingCapModal, setCustomSpendingCapInputValue]);\n\n  const [isModalSaving, setIsModalSaving] = useState(false);\n\n  const handleSubmit = useCallback(async () => {\n    setIsModalSaving(true);\n    const parsedValue = parseInt(customSpendingCapInputValue, 10);\n\n    const customTxParamsData = getCustomTxParamsData(\n      transactionMeta?.txParams?.data,\n      {\n        customPermissionAmount:\n          // coerce negative numbers to zero\n          parsedValue < 0 ? '0' : customSpendingCapInputValue || '0',\n        decimals: decimals || '0',\n      },\n    );\n\n    const estimatedGasLimit = await estimateGas({\n      from: transactionMeta.txParams.from,\n      to: transactionMeta.txParams.to,\n      value: transactionMeta.txParams.value,\n      data: customTxParamsData,\n    });\n\n    dispatch(\n      updateEditableParams(transactionMeta.id, {\n        data: customTxParamsData,\n        gas: hexToDecimal(estimatedGasLimit as string),\n      }),\n    );\n\n    setIsModalSaving(false);\n    setIsOpenEditSpendingCapModal(false);\n    setCustomSpendingCapInputValue('');\n  }, [customSpendingCapInputValue]);\n\n  return (\n    <Modal\n      isOpen={isOpenEditSpendingCapModal}\n      onClose={() => setIsOpenEditSpendingCapModal(false)}\n      isClosedOnEscapeKey\n      isClosedOnOutsideClick\n      className=\"edit-spending-cap-modal\"\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader\n          justifyContent={JustifyContent.center}\n          childrenWrapperProps={{\n            alignItems: AlignItems.center,\n            display: Display.Flex,\n            flexDirection: FlexDirection.Column,\n          }}\n        >\n          <Text variant={TextVariant.headingMd}>{t('editSpendingCap')}</Text>\n        </ModalHeader>\n        <ModalBody>\n          <Text\n            variant={TextVariant.bodyMd}\n            color={TextColor.textAlternative}\n            paddingBottom={4}\n          >\n            {t('editSpendingCapDesc')}\n          </Text>\n          <TextField\n            type={TextFieldType.Number}\n            value={customSpendingCapInputValue}\n            onChange={(event) =>\n              setCustomSpendingCapInputValue(event.target.value)\n            }\n            placeholder={`${formattedSpendingCap} ${tokenSymbol}`}\n            style={{ width: '100%' }}\n            inputProps={{ 'data-testid': 'custom-spending-cap-input' }}\n          />\n          <Text\n            variant={TextVariant.bodySm}\n            color={TextColor.textAlternative}\n            paddingTop={1}\n          >\n            {t('editSpendingCapAccountBalance', [\n              accountBalance,\n              tokenSymbol || '',\n            ])}\n          </Text>\n        </ModalBody>\n        <ModalFooter\n          onSubmit={handleSubmit}\n          onCancel={handleCancel}\n          submitButtonProps={{ children: t('save'), loading: isModalSaving }}\n        />\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport { BigNumber } from 'bignumber.js';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getIntlLocale } from '../../../../../../../ducks/locale/locale';\nimport { SPENDING_CAP_UNLIMITED_MSG } from '../../../../../constants';\nimport { useDecodedTransactionData } from '../../hooks/useDecodedTransactionData';\nimport { useIsNFT } from './use-is-nft';\n\nconst UNLIMITED_THRESHOLD = 10 ** 15;\n\nfunction isSpendingCapUnlimited(decodedSpendingCap: number) {\n  return decodedSpendingCap >= UNLIMITED_THRESHOLD;\n}\n\nexport const useApproveTokenSimulation = (\n  transactionMeta: TransactionMeta,\n  decimals: string,\n) => {\n  const locale = useSelector(getIntlLocale);\n  const { isNFT, pending: isNFTPending } = useIsNFT(transactionMeta);\n  const decodedResponse = useDecodedTransactionData();\n  const { value, pending } = decodedResponse;\n\n  const decodedSpendingCap = useMemo(() => {\n    return value\n      ? new BigNumber(value.data[0].params[1].value)\n          .dividedBy(new BigNumber(10).pow(Number(decimals)))\n          .toNumber()\n      : 0;\n  }, [value, decimals]);\n\n  const formattedSpendingCap = useMemo(() => {\n    return isNFT\n      ? decodedSpendingCap\n      : new Intl.NumberFormat(locale).format(decodedSpendingCap);\n  }, [decodedSpendingCap, isNFT, locale]);\n\n  const spendingCap = useMemo(() => {\n    if (!isNFT && isSpendingCapUnlimited(decodedSpendingCap)) {\n      return SPENDING_CAP_UNLIMITED_MSG;\n    }\n    const tokenPrefix = isNFT ? '#' : '';\n    return `${tokenPrefix}${formattedSpendingCap}`;\n  }, [decodedSpendingCap, formattedSpendingCap, isNFT]);\n\n  return {\n    spendingCap,\n    formattedSpendingCap,\n    value,\n    pending: pending || isNFTPending,\n  };\n};\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport { TokenStandard } from '../../../../../../../../shared/constants/transaction';\nimport { useAsyncResult } from '../../../../../../../hooks/useAsyncResult';\nimport { getTokenStandardAndDetails } from '../../../../../../../store/actions';\n\nexport const useIsNFT = (\n  transactionMeta: TransactionMeta,\n): { isNFT: boolean; pending: boolean } => {\n  const { value, pending } = useAsyncResult(async () => {\n    return await getTokenStandardAndDetails(\n      transactionMeta?.txParams?.to as string,\n    );\n  }, [transactionMeta]);\n\n  const isNFT = value?.standard !== TokenStandard.ERC20;\n\n  return { pending, isNFT };\n};\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport React from 'react';\nimport { calcTokenAmount } from '../../../../../../../../shared/lib/transactions-controller-utils';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowDivider,\n  ConfirmInfoRowText,\n} from '../../../../../../../components/app/confirm/info/row';\nimport { ConfirmInfoSection } from '../../../../../../../components/app/confirm/info/row/section';\nimport Tooltip from '../../../../../../../components/ui/tooltip';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { SPENDING_CAP_UNLIMITED_MSG } from '../../../../../constants';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport { useAssetDetails } from '../../../../../hooks/useAssetDetails';\nimport { Container } from '../../shared/transaction-data/transaction-data';\nimport { useApproveTokenSimulation } from '../hooks/use-approve-token-simulation';\n\nconst SpendingCapGroup = ({\n  tokenSymbol,\n  decimals,\n  setIsOpenEditSpendingCapModal,\n  customSpendingCap,\n}: {\n  tokenSymbol: string;\n  decimals: string;\n  setIsOpenEditSpendingCapModal: (newValue: boolean) => void;\n  customSpendingCap: string;\n}) => {\n  const t = useI18nContext();\n\n  const { currentConfirmation: transactionMeta } = useConfirmContext() as {\n    currentConfirmation: TransactionMeta;\n  };\n\n  const { spendingCap, formattedSpendingCap, value } =\n    useApproveTokenSimulation(transactionMeta, decimals);\n\n  const spendingCapValue =\n    customSpendingCap === '' ? formattedSpendingCap : customSpendingCap;\n\n  const SpendingCapElement = (\n    <ConfirmInfoRowText\n      text={\n        spendingCap === SPENDING_CAP_UNLIMITED_MSG\n          ? `${t('unlimited')} ${tokenSymbol}`\n          : `${spendingCapValue} ${tokenSymbol}`\n      }\n      onEditClick={() => setIsOpenEditSpendingCapModal(true)}\n      editIconClassName=\"edit-spending-cap-btn\"\n      editIconDataTestId=\"edit-spending-cap-icon\"\n    />\n  );\n\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConfirmInfoRowDivider />\n\n      <ConfirmInfoRow\n        label={t('spendingCap')}\n        tooltip={t('spendingCapTooltipDesc')}\n        data-testid=\"confirmation__approve-spending-cap-group\"\n      >\n        {spendingCap === SPENDING_CAP_UNLIMITED_MSG ? (\n          <Tooltip title={formattedSpendingCap}>{SpendingCapElement}</Tooltip>\n        ) : (\n          SpendingCapElement\n        )}\n      </ConfirmInfoRow>\n    </>\n  );\n};\n\nexport const SpendingCap = ({\n  setIsOpenEditSpendingCapModal,\n}: {\n  setIsOpenEditSpendingCapModal: (newValue: boolean) => void;\n}) => {\n  const t = useI18nContext();\n\n  const { currentConfirmation: transactionMeta } = useConfirmContext() as {\n    currentConfirmation: TransactionMeta;\n  };\n\n  const { userBalance, tokenSymbol, decimals } = useAssetDetails(\n    transactionMeta.txParams.to,\n    transactionMeta.txParams.from,\n    transactionMeta.txParams.data,\n  );\n\n  const accountBalance = calcTokenAmount(\n    userBalance ?? '0',\n    Number(decimals ?? '0'),\n  ).toFixed();\n\n  const { pending, spendingCap } = useApproveTokenSimulation(\n    transactionMeta,\n    decimals || '0',\n  );\n\n  if (pending) {\n    return <Container isLoading />;\n  }\n\n  return (\n    <ConfirmInfoSection data-testid=\"confirmation__approve-spending-cap-section\">\n      <ConfirmInfoRow label={t('accountBalance')}>\n        <ConfirmInfoRowText text={`${accountBalance} ${tokenSymbol || ''}`} />\n      </ConfirmInfoRow>\n\n      <SpendingCapGroup\n        tokenSymbol={tokenSymbol || ''}\n        decimals={decimals || '0'}\n        setIsOpenEditSpendingCapModal={setIsOpenEditSpendingCapModal}\n        customSpendingCap={spendingCap}\n      />\n    </ConfirmInfoSection>\n  );\n};\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { ConfirmInfoSection } from '../../../../../../components/app/confirm/info/row/section';\nimport { selectConfirmationAdvancedDetailsOpen } from '../../../../selectors/preferences';\nimport { useConfirmContext } from '../../../../context/confirm';\nimport { SimulationDetails } from '../../../simulation-details';\nimport { AdvancedDetails } from '../shared/advanced-details/advanced-details';\nimport { GasFeesSection } from '../shared/gas-fees-section/gas-fees-section';\nimport { TransactionDetails } from '../shared/transaction-details/transaction-details';\n\nconst BaseTransactionInfo = () => {\n  const { currentConfirmation: transactionMeta } =\n    useConfirmContext<TransactionMeta>();\n\n  const showAdvancedDetails = useSelector(\n    selectConfirmationAdvancedDetailsOpen,\n  );\n\n  if (!transactionMeta?.txParams) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConfirmInfoSection noPadding>\n        <SimulationDetails\n          simulationData={transactionMeta.simulationData}\n          transactionId={transactionMeta.id}\n          isTransactionsRedesign\n        />\n      </ConfirmInfoSection>\n      <TransactionDetails />\n      <GasFeesSection />\n      {showAdvancedDetails && <AdvancedDetails />}\n    </>\n  );\n};\n\nexport default BaseTransactionInfo;\n","import { Hex } from '@metamask/utils';\nimport { TransactionMeta } from '@metamask/transaction-controller';\n\nimport {\n  AsyncResult,\n  useAsyncResult,\n} from '../../../../../../hooks/useAsyncResult';\nimport { decodeTransactionData } from '../../../../../../store/actions';\nimport { DecodedTransactionDataResponse } from '../../../../../../../shared/types/transaction-decode';\nimport { useConfirmContext } from '../../../../context/confirm';\n\nexport function useDecodedTransactionData(): AsyncResult<\n  DecodedTransactionDataResponse | undefined\n> {\n  const { currentConfirmation } = useConfirmContext<TransactionMeta>();\n\n  const chainId = currentConfirmation?.chainId as Hex;\n  const contractAddress = currentConfirmation?.txParams?.to as Hex;\n  const transactionData = currentConfirmation?.txParams?.data as Hex;\n\n  return useAsyncResult(async () => {\n    if (!transactionData?.length) {\n      return undefined;\n    }\n\n    return await decodeTransactionData({\n      transactionData,\n      chainId,\n      contractAddress,\n    });\n  }, [transactionData, chainId, contractAddress]);\n}\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport { useMemo } from 'react';\nimport { hexToDecimal } from '../../../../../../../shared/modules/conversion.utils';\n\nexport const useEIP1559TxFees = (\n  transactionMeta: TransactionMeta,\n): {\n  maxFeePerGas: string;\n  maxPriorityFeePerGas: string;\n} => {\n  const hexMaxFeePerGas = transactionMeta?.txParams?.maxFeePerGas;\n  const hexMaxPriorityFeePerGas =\n    transactionMeta?.txParams?.maxPriorityFeePerGas;\n\n  return useMemo(() => {\n    const maxFeePerGas = hexMaxFeePerGas ? hexToDecimal(hexMaxFeePerGas) : '0';\n    const maxPriorityFeePerGas = hexMaxPriorityFeePerGas\n      ? hexToDecimal(hexMaxPriorityFeePerGas)\n      : '0';\n\n    return { maxFeePerGas, maxPriorityFeePerGas };\n  }, [hexMaxFeePerGas, hexMaxPriorityFeePerGas]);\n};\n","import { GasFeeEstimates } from '@metamask/gas-fee-controller';\nimport { TransactionMeta } from '@metamask/transaction-controller';\nimport { Hex } from '@metamask/utils';\nimport { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { EtherDenomination } from '../../../../../../../shared/constants/common';\nimport {\n  addHexes,\n  decGWEIToHexWEI,\n  decimalToHex,\n  getEthConversionFromWeiHex,\n  getValueFromWeiHex,\n  multiplyHexes,\n} from '../../../../../../../shared/modules/conversion.utils';\nimport { getConversionRate } from '../../../../../../ducks/metamask/metamask';\nimport { useFiatFormatter } from '../../../../../../hooks/useFiatFormatter';\nimport { useGasFeeEstimates } from '../../../../../../hooks/useGasFeeEstimates';\nimport { getCurrentCurrency } from '../../../../../../selectors';\nimport { HEX_ZERO } from '../shared/constants';\nimport { useEIP1559TxFees } from './useEIP1559TxFees';\nimport { useSupportsEIP1559 } from './useSupportsEIP1559';\nimport { useTransactionGasFeeEstimate } from './useTransactionGasFeeEstimate';\n\nconst EMPTY_FEE = '';\nconst EMPTY_FEES = {\n  currentCurrencyFee: EMPTY_FEE,\n  nativeCurrencyFee: EMPTY_FEE,\n};\n\nexport function useFeeCalculations(transactionMeta: TransactionMeta) {\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const conversionRate = useSelector(getConversionRate);\n  const fiatFormatter = useFiatFormatter();\n\n  const getFeesFromHex = useCallback(\n    (hexFee: string) => {\n      const nativeCurrencyFee =\n        getEthConversionFromWeiHex({\n          value: hexFee,\n          fromCurrency: EtherDenomination.GWEI,\n          numberOfDecimals: 4,\n        }) || `0 ${EtherDenomination.ETH}`;\n\n      const currentCurrencyFee = fiatFormatter(\n        Number(\n          getValueFromWeiHex({\n            value: hexFee,\n            conversionRate,\n            fromCurrency: EtherDenomination.GWEI,\n            toCurrency: currentCurrency,\n            numberOfDecimals: 2,\n          }),\n        ),\n      );\n\n      return { currentCurrencyFee, nativeCurrencyFee };\n    },\n    [conversionRate, currentCurrency, fiatFormatter],\n  );\n\n  const { maxFeePerGas, maxPriorityFeePerGas } =\n    useEIP1559TxFees(transactionMeta);\n  const { supportsEIP1559 } = useSupportsEIP1559(transactionMeta);\n  const gasFeeEstimate = useTransactionGasFeeEstimate(\n    transactionMeta,\n    supportsEIP1559,\n  );\n\n  const { gasFeeEstimates } = useGasFeeEstimates(\n    transactionMeta.networkClientId,\n  );\n  const estimatedBaseFee = (gasFeeEstimates as GasFeeEstimates)\n    ?.estimatedBaseFee;\n\n  const layer1GasFee = transactionMeta?.layer1GasFee as string;\n  const hasLayer1GasFee = Boolean(layer1GasFee);\n\n  // L1 fee\n  const feesL1 = useMemo(\n    () => (hasLayer1GasFee ? getFeesFromHex(layer1GasFee) : EMPTY_FEES),\n    [layer1GasFee],\n  );\n\n  // L2 fee\n  const feesL2 = useMemo(\n    () => (hasLayer1GasFee ? getFeesFromHex(gasFeeEstimate) : EMPTY_FEES),\n    [gasFeeEstimate],\n  );\n\n  // Max fee\n  const gasLimit =\n    transactionMeta?.dappSuggestedGasFees?.gas ||\n    transactionMeta?.txParams?.gas ||\n    HEX_ZERO;\n  const gasPrice = transactionMeta?.txParams?.gasPrice || HEX_ZERO;\n\n  const maxFee = useMemo(() => {\n    return multiplyHexes(\n      supportsEIP1559 ? (decimalToHex(maxFeePerGas) as Hex) : (gasPrice as Hex),\n      gasLimit as Hex,\n    );\n  }, [supportsEIP1559, maxFeePerGas, gasLimit, gasPrice]);\n\n  const { currentCurrencyFee: maxFeeFiat, nativeCurrencyFee: maxFeeNative } =\n    getFeesFromHex(maxFee);\n\n  // Estimated fee\n  const estimatedFees = useMemo(() => {\n    if (hasLayer1GasFee) {\n      // Logic for L2 transactions with L1 and L2 fee components\n      const estimatedTotalFeesForL2 = addHexes(gasFeeEstimate, layer1GasFee);\n\n      return getFeesFromHex(estimatedTotalFeesForL2);\n    }\n\n    // Logic for any network without L1 and L2 fee components\n    const minimumFeePerGas = addHexes(\n      decGWEIToHexWEI(estimatedBaseFee) || HEX_ZERO,\n      decimalToHex(maxPriorityFeePerGas),\n    );\n\n    const estimatedFee = multiplyHexes(\n      supportsEIP1559 ? (minimumFeePerGas as Hex) : (gasPrice as Hex),\n      gasLimit as Hex,\n    );\n\n    return getFeesFromHex(estimatedFee);\n  }, [gasFeeEstimate, transactionMeta, estimatedBaseFee, getFeesFromHex]);\n\n  return {\n    estimatedFeeFiat: estimatedFees.currentCurrencyFee,\n    estimatedFeeNative: estimatedFees.nativeCurrencyFee,\n    l1FeeFiat: feesL1.currentCurrencyFee,\n    l1FeeNative: feesL1.nativeCurrencyFee,\n    l2FeeFiat: feesL2.currentCurrencyFee,\n    l2FeeNative: feesL2.nativeCurrencyFee,\n    maxFeeFiat,\n    maxFeeNative,\n  };\n}\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  getKnownMethodData,\n  use4ByteResolutionSelector,\n} from '../../../../../../selectors';\nimport { getContractMethodData } from '../../../../../../store/actions';\n\nexport const useFourByte = (currentConfirmation: TransactionMeta) => {\n  const dispatch = useDispatch();\n  const isFourByteEnabled = useSelector(use4ByteResolutionSelector);\n  const transactionData = currentConfirmation?.txParams?.data;\n\n  useEffect(() => {\n    if (!isFourByteEnabled || !transactionData) {\n      return;\n    }\n\n    dispatch(getContractMethodData(transactionData));\n  }, [isFourByteEnabled, transactionData, dispatch]);\n\n  const methodData = useSelector((state) =>\n    getKnownMethodData(state, transactionData),\n  );\n\n  return methodData;\n};\n","import {\n  TransactionEnvelopeType,\n  TransactionMeta,\n} from '@metamask/transaction-controller';\nimport { useSelector } from 'react-redux';\nimport { isLegacyTransaction } from '../../../../../../helpers/utils/transactions.util';\nimport {\n  checkNetworkAndAccountSupports1559,\n  getSelectedNetworkClientId,\n} from '../../../../../../selectors';\n\nexport function useSupportsEIP1559(transactionMeta: TransactionMeta) {\n  const isLegacyTxn =\n    transactionMeta?.txParams?.type === TransactionEnvelopeType.legacy ||\n    isLegacyTransaction(transactionMeta);\n\n  const selectedNetworkClientId = useSelector(getSelectedNetworkClientId);\n\n  const networkAndAccountSupports1559 = useSelector((state) =>\n    checkNetworkAndAccountSupports1559(state, selectedNetworkClientId),\n  );\n\n  const supportsEIP1559 = networkAndAccountSupports1559 && !isLegacyTxn;\n\n  return { supportsEIP1559 };\n}\n","import { GasFeeEstimates } from '@metamask/gas-fee-controller';\nimport { TransactionMeta } from '@metamask/transaction-controller';\nimport { Hex } from '@metamask/utils';\nimport {\n  addHexes,\n  multiplyHexes,\n} from '../../../../../../../shared/modules/conversion.utils';\nimport { useGasFeeEstimates } from '../../../../../../hooks/useGasFeeEstimates';\nimport { HEX_ZERO } from '../shared/constants';\n\nexport function useTransactionGasFeeEstimate(\n  transactionMeta: TransactionMeta,\n  supportsEIP1559: boolean,\n): Hex {\n  let { gas: gasLimit, gasPrice } = transactionMeta.txParams;\n\n  const { gasFeeEstimates } = useGasFeeEstimates(\n    transactionMeta.networkClientId,\n  );\n  const estimatedBaseFee = (gasFeeEstimates as GasFeeEstimates)\n    ?.estimatedBaseFee;\n\n  // override with values from `dappSuggestedGasFees` if they exist\n  gasLimit = transactionMeta.dappSuggestedGasFees?.gas || gasLimit || HEX_ZERO;\n  gasPrice =\n    transactionMeta.dappSuggestedGasFees?.gasPrice || gasPrice || HEX_ZERO;\n  const maxPriorityFeePerGas =\n    transactionMeta.dappSuggestedGasFees?.maxPriorityFeePerGas ||\n    transactionMeta.txParams?.maxPriorityFeePerGas ||\n    HEX_ZERO;\n\n  let gasEstimate: Hex;\n  if (supportsEIP1559) {\n    // Minimum Total Fee = (estimatedBaseFee + maxPriorityFeePerGas) * gasLimit\n    const minimumFeePerGas = addHexes(\n      estimatedBaseFee || HEX_ZERO,\n      maxPriorityFeePerGas,\n    );\n\n    gasEstimate = multiplyHexes(minimumFeePerGas as Hex, gasLimit as Hex);\n  } else {\n    gasEstimate = multiplyHexes(gasPrice as Hex, gasLimit as Hex);\n  }\n\n  return gasEstimate;\n}\n","export { default as Info } from './info';\n","import { TransactionType } from '@metamask/transaction-controller';\nimport React, { useMemo } from 'react';\nimport { SignatureRequestType } from '../../../types/confirm';\nimport { useConfirmContext } from '../../../context/confirm';\nimport BaseTransactionInfo from './base-transaction-info/base-transaction-info';\nimport PersonalSignInfo from './personal-sign/personal-sign';\nimport TypedSignV1Info from './typed-sign-v1/typed-sign-v1';\nimport TypedSignInfo from './typed-sign/typed-sign';\nimport ApproveInfo from './approve/approve';\n\nconst Info = () => {\n  const { currentConfirmation } = useConfirmContext();\n\n  const ConfirmationInfoComponentMap = useMemo(\n    () => ({\n      [TransactionType.personalSign]: () => PersonalSignInfo,\n      [TransactionType.signTypedData]: () => {\n        const { version } =\n          (currentConfirmation as SignatureRequestType)?.msgParams ?? {};\n        if (version === 'V1') {\n          return TypedSignV1Info;\n        }\n        return TypedSignInfo;\n      },\n      [TransactionType.contractInteraction]: () => BaseTransactionInfo,\n      [TransactionType.deployContract]: () => BaseTransactionInfo,\n      [TransactionType.tokenMethodApprove]: () => ApproveInfo,\n      [TransactionType.tokenMethodIncreaseAllowance]: () => ApproveInfo,\n    }),\n    [currentConfirmation],\n  );\n\n  if (!currentConfirmation?.type) {\n    return null;\n  }\n\n  const InfoComponent =\n    ConfirmationInfoComponentMap[\n      currentConfirmation?.type as keyof typeof ConfirmationInfoComponentMap\n    ]();\n\n  return <InfoComponent />;\n};\n\nexport default Info;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowText,\n  ConfirmInfoRowUrl,\n} from '../../../../../../components/app/confirm/info/row';\nimport { RowAlertKey } from '../../../../../../components/app/confirm/info/row/constants';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { useConfirmContext } from '../../../../context/confirm';\nimport {\n  hexToText,\n  sanitizeString,\n} from '../../../../../../helpers/utils/util';\nimport { SignatureRequestType } from '../../../../types/confirm';\nimport { selectUseTransactionSimulations } from '../../../../selectors/preferences';\nimport { isSIWESignatureRequest } from '../../../../utils';\nimport { ConfirmInfoAlertRow } from '../../../../../../components/app/confirm/info/row/alert-row/alert-row';\nimport { ConfirmInfoSection } from '../../../../../../components/app/confirm/info/row/section';\nimport { SIWESignInfo } from './siwe-sign';\n\nconst PersonalSignInfo: React.FC = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<SignatureRequestType>();\n  const useTransactionSimulations = useSelector(\n    selectUseTransactionSimulations,\n  );\n\n  if (!currentConfirmation?.msgParams) {\n    return null;\n  }\n\n  const { from } = currentConfirmation.msgParams;\n  const isSIWE = isSIWESignatureRequest(currentConfirmation);\n\n  return (\n    <>\n      {isSIWE && useTransactionSimulations && (\n        <ConfirmInfoSection>\n          <ConfirmInfoRow\n            label={t('simulationDetailsTitle')}\n            tooltip={t('simulationDetailsTitleTooltip')}\n          >\n            <ConfirmInfoRowText text={t('siweSignatureSimulationDetailInfo')} />\n          </ConfirmInfoRow>\n        </ConfirmInfoSection>\n      )}\n      <ConfirmInfoSection>\n        <ConfirmInfoAlertRow\n          alertKey={RowAlertKey.RequestFrom}\n          ownerId={currentConfirmation.id}\n          label={t('requestFrom')}\n          tooltip={isSIWE ? undefined : t('requestFromInfo')}\n        >\n          <ConfirmInfoRowUrl url={currentConfirmation.msgParams.origin} />\n        </ConfirmInfoAlertRow>\n        {isSIWE && (\n          <ConfirmInfoAlertRow\n            alertKey={RowAlertKey.SigningInWith}\n            label={t('signingInWith')}\n            ownerId={currentConfirmation.id}\n          >\n            <ConfirmInfoRowAddress address={from} />\n          </ConfirmInfoAlertRow>\n        )}\n      </ConfirmInfoSection>\n      <ConfirmInfoSection>\n        {isSIWE ? (\n          <SIWESignInfo />\n        ) : (\n          <ConfirmInfoAlertRow\n            alertKey=\"message\"\n            ownerId={currentConfirmation.id}\n            label={t('message')}\n          >\n            <ConfirmInfoRowText\n              text={sanitizeString(\n                hexToText(currentConfirmation.msgParams?.data),\n              )}\n            />\n          </ConfirmInfoAlertRow>\n        )}\n      </ConfirmInfoSection>\n    </>\n  );\n};\n\nexport default PersonalSignInfo;\n","export { default as SIWESignInfo } from './siwe-sign';\n","import React from 'react';\nimport { DateTime } from 'luxon';\nimport { toHex } from '@metamask/controller-utils';\n\nimport { NETWORK_TO_NAME_MAP } from '../../../../../../../../shared/constants/network';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { SignatureRequestType } from '../../../../../types/confirm';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowDate,\n  ConfirmInfoRowText,\n} from '../../../../../../../components/app/confirm/info/row';\nimport { useConfirmContext } from '../../../../../context/confirm';\n\nconst SIWESignInfo: React.FC = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<SignatureRequestType>();\n\n  const siweMessage = currentConfirmation?.msgParams?.siwe?.parsedMessage;\n\n  if (!siweMessage) {\n    return null;\n  }\n\n  const {\n    address,\n    chainId,\n    domain,\n    issuedAt,\n    nonce,\n    requestId,\n    statement,\n    resources,\n    version,\n  } = siweMessage;\n  const hexChainId = toHex(chainId);\n  const network =\n    (NETWORK_TO_NAME_MAP as Record<string, string>)[hexChainId] ?? hexChainId;\n\n  return (\n    <>\n      <ConfirmInfoRow label={t('message')}>\n        <ConfirmInfoRowText text={statement || ''} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={t('siweURI')}>\n        <ConfirmInfoRowText text={domain} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={t('siweNetwork')}>\n        <ConfirmInfoRowText text={network} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={t('account')}>\n        <ConfirmInfoRowAddress address={address} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={t('version')}>\n        <ConfirmInfoRowText text={version} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={t('chainId')}>\n        <ConfirmInfoRowText text={`${chainId}`} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={t('nonce')}>\n        <ConfirmInfoRowText text={nonce} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={t('siweIssued')}>\n        <ConfirmInfoRowDate\n          unixTimestamp={DateTime.fromISO(issuedAt, {\n            zone: 'utc',\n          }).toUnixInteger()}\n        />\n      </ConfirmInfoRow>\n      {requestId && (\n        <ConfirmInfoRow label={t('siweRequestId')}>\n          <ConfirmInfoRowText text={requestId} />\n        </ConfirmInfoRow>\n      )}\n      {resources && (\n        <ConfirmInfoRow label={t('siweResources')}>\n          {resources.map((resource, index) => (\n            <ConfirmInfoRowText key={`resource-${index}`} text={resource} />\n          ))}\n        </ConfirmInfoRow>\n      )}\n    </>\n  );\n};\n\nexport default SIWESignInfo;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowText,\n} from '../../../../../../../components/app/confirm/info/row';\nimport { ConfirmInfoSection } from '../../../../../../../components/app/confirm/info/row/section';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport {\n  getCustomNonceValue,\n  getNextSuggestedNonce,\n  getUseNonceField,\n} from '../../../../../../../selectors';\nimport {\n  getNextNonce,\n  showModal,\n  updateCustomNonce,\n} from '../../../../../../../store/actions';\nimport { TransactionData } from '../transaction-data/transaction-data';\n\nconst NonceDetails = () => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getNextNonce());\n  }, [dispatch]);\n\n  const enableCustomNonce = useSelector(getUseNonceField);\n  const nextNonce = useSelector(getNextSuggestedNonce);\n  const customNonceValue = useSelector(getCustomNonceValue);\n\n  const openEditNonceModal = () =>\n    dispatch(\n      showModal({\n        name: 'CUSTOMIZE_NONCE',\n        customNonceValue,\n        nextNonce,\n        updateCustomNonce: (value: string) => {\n          dispatch(updateCustomNonce(value));\n        },\n        getNextNonce,\n      }),\n    );\n\n  const displayedNonce = customNonceValue || nextNonce;\n\n  return (\n    <ConfirmInfoSection data-testid=\"advanced-details-nonce-section\">\n      <ConfirmInfoRow\n        label={t('advancedDetailsNonceDesc')}\n        tooltip={t('advancedDetailsNonceTooltip')}\n      >\n        <ConfirmInfoRowText\n          data-testid=\"advanced-details-displayed-nonce\"\n          text={`${displayedNonce}`}\n          onEditClick={\n            enableCustomNonce ? () => openEditNonceModal() : undefined\n          }\n          editIconClassName=\"edit-nonce-btn\"\n          editIconDataTestId=\"edit-nonce-icon\"\n        />\n      </ConfirmInfoRow>\n    </ConfirmInfoSection>\n  );\n};\n\nexport const AdvancedDetails: React.FC = () => {\n  return (\n    <>\n      <NonceDetails />\n      <TransactionData />\n    </>\n  );\n};\n","export const HEX_ZERO = '0x0';\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TransactionMeta } from '@metamask/transaction-controller';\nimport { Box, Text } from '../../../../../../../components/component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n} from '../../../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { getPreferences } from '../../../../../../../selectors';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport { EditGasIconButton } from '../edit-gas-icon/edit-gas-icon-button';\nimport { ConfirmInfoAlertRow } from '../../../../../../../components/app/confirm/info/row/alert-row/alert-row';\nimport { RowAlertKey } from '../../../../../../../components/app/confirm/info/row/constants';\n\nexport const EditGasFeesRow = ({\n  fiatFee,\n  nativeFee,\n  supportsEIP1559,\n  setShowCustomizeGasPopover,\n}: {\n  fiatFee: string;\n  nativeFee: string;\n  supportsEIP1559: boolean;\n  setShowCustomizeGasPopover: Dispatch<SetStateAction<boolean>>;\n}) => {\n  const t = useI18nContext();\n\n  const { useNativeCurrencyAsPrimaryCurrency: isNativeCurrencyUsed } =\n    useSelector(getPreferences);\n\n  const { currentConfirmation: transactionMeta } =\n    useConfirmContext<TransactionMeta>();\n\n  return (\n    <ConfirmInfoAlertRow\n      alertKey={RowAlertKey.EstimatedFee}\n      ownerId={transactionMeta.id}\n      data-testid=\"edit-gas-fees-row\"\n      label={t('networkFee')}\n      tooltip={t('estimatedFeeTooltip')}\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        justifyContent={JustifyContent.spaceBetween}\n        alignItems={AlignItems.center}\n        textAlign={TextAlign.Center}\n      >\n        <Text\n          marginRight={1}\n          color={TextColor.textDefault}\n          data-testid=\"first-gas-field\"\n        >\n          {isNativeCurrencyUsed ? nativeFee : fiatFee}\n        </Text>\n        <Text\n          marginRight={2}\n          color={TextColor.textAlternative}\n          data-testid=\"native-currency\"\n        >\n          {isNativeCurrencyUsed ? fiatFee : nativeFee}\n        </Text>\n        <EditGasIconButton\n          supportsEIP1559={supportsEIP1559}\n          setShowCustomizeGasPopover={setShowCustomizeGasPopover}\n        />\n      </Box>\n    </ConfirmInfoAlertRow>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\nimport {\n  Button,\n  ButtonSize,\n  ButtonVariant,\n  IconName,\n} from '../../../../../../../components/component-library';\nimport { useTransactionModalContext } from '../../../../../../../contexts/transaction-modal';\nimport { IconColor } from '../../../../../../../helpers/constants/design-system';\nimport { useTransactionEventFragment } from '../../../../../hooks/useTransactionEventFragment';\n\nexport const EditGasIconButton = ({\n  supportsEIP1559,\n  setShowCustomizeGasPopover,\n}: {\n  supportsEIP1559: boolean;\n  setShowCustomizeGasPopover: Dispatch<SetStateAction<boolean>>;\n}) => {\n  const { openModal } = useTransactionModalContext() as {\n    openModal: (modalId: string) => void;\n  };\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n\n  const openEditEIP1559TxGasFeeModal = () => {\n    updateTransactionEventFragment({\n      gas_edit_attempted: 'basic',\n    });\n    openModal('editGasFee');\n  };\n\n  const openEditGasFeeLegacyTxModal = () => {\n    setShowCustomizeGasPopover(true);\n  };\n\n  const openEditGasFeeModal = () =>\n    supportsEIP1559\n      ? openEditEIP1559TxGasFeeModal()\n      : openEditGasFeeLegacyTxModal();\n\n  return (\n    <Button\n      style={{ textDecoration: 'none' }}\n      size={ButtonSize.Sm}\n      variant={ButtonVariant.Link}\n      startIconName={IconName.Edit}\n      color={IconColor.primaryDefault}\n      data-testid=\"edit-gas-fee-icon\"\n      onClick={openEditGasFeeModal}\n    />\n  );\n};\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport React, { Dispatch, SetStateAction } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ConfirmInfoRowVariant } from '../../../../../../../components/app/confirm/info/row';\nimport { Box } from '../../../../../../../components/component-library';\nimport {\n  AlignItems,\n  Display,\n} from '../../../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { selectConfirmationAdvancedDetailsOpen } from '../../../../../selectors/preferences';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport GasTiming from '../../../../gas-timing/gas-timing.component';\nimport { useEIP1559TxFees } from '../../hooks/useEIP1559TxFees';\nimport { useFeeCalculations } from '../../hooks/useFeeCalculations';\nimport { useSupportsEIP1559 } from '../../hooks/useSupportsEIP1559';\nimport { EditGasFeesRow } from '../edit-gas-fees-row/edit-gas-fees-row';\nimport { GasFeesRow } from '../gas-fees-row/gas-fees-row';\nimport { ConfirmInfoAlertRow } from '../../../../../../../components/app/confirm/info/row/alert-row/alert-row';\nimport { RowAlertKey } from '../../../../../../../components/app/confirm/info/row/constants';\n\nexport const GasFeesDetails = ({\n  setShowCustomizeGasPopover,\n}: {\n  setShowCustomizeGasPopover: Dispatch<SetStateAction<boolean>>;\n}) => {\n  const t = useI18nContext();\n\n  const { currentConfirmation: transactionMeta } =\n    useConfirmContext<TransactionMeta>();\n\n  const { maxFeePerGas, maxPriorityFeePerGas } =\n    useEIP1559TxFees(transactionMeta);\n  const { supportsEIP1559 } = useSupportsEIP1559(transactionMeta);\n\n  const hasLayer1GasFee = Boolean(transactionMeta?.layer1GasFee);\n\n  const {\n    estimatedFeeFiat,\n    estimatedFeeNative,\n    l1FeeFiat,\n    l1FeeNative,\n    l2FeeFiat,\n    l2FeeNative,\n    maxFeeFiat,\n    maxFeeNative,\n  } = useFeeCalculations(transactionMeta);\n\n  const showAdvancedDetails = useSelector(\n    selectConfirmationAdvancedDetailsOpen,\n  );\n\n  if (!transactionMeta?.txParams) {\n    return null;\n  }\n\n  return (\n    <>\n      <EditGasFeesRow\n        fiatFee={estimatedFeeFiat}\n        nativeFee={estimatedFeeNative}\n        supportsEIP1559={supportsEIP1559}\n        setShowCustomizeGasPopover={setShowCustomizeGasPopover}\n      />\n      {showAdvancedDetails && hasLayer1GasFee && (\n        <>\n          <GasFeesRow\n            data-testid=\"gas-fee-details-l1\"\n            label={t('l1Fee')}\n            tooltipText={t('l1FeeTooltip')}\n            fiatFee={l1FeeFiat}\n            nativeFee={l1FeeNative}\n          />\n          <GasFeesRow\n            data-testid=\"gas-fee-details-l2\"\n            label={t('l2Fee')}\n            tooltipText={t('l2FeeTooltip')}\n            fiatFee={l2FeeFiat}\n            nativeFee={l2FeeNative}\n          />\n        </>\n      )}\n      {supportsEIP1559 && (\n        <ConfirmInfoAlertRow\n          alertKey={RowAlertKey.Speed}\n          data-testid=\"gas-fee-details-speed\"\n          label={t('speed')}\n          variant={ConfirmInfoRowVariant.Default}\n          ownerId={transactionMeta.id}\n        >\n          <Box display={Display.Flex} alignItems={AlignItems.center}>\n            <GasTiming\n              maxFeePerGas={maxFeePerGas}\n              maxPriorityFeePerGas={maxPriorityFeePerGas}\n            />\n          </Box>\n        </ConfirmInfoAlertRow>\n      )}\n      {showAdvancedDetails && (\n        <GasFeesRow\n          data-testid=\"gas-fee-details-max-fee\"\n          label={t('maxFee')}\n          tooltipText={t('maxFeeTooltip')}\n          fiatFee={maxFeeFiat}\n          nativeFee={maxFeeNative}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowVariant,\n} from '../../../../../../../components/app/confirm/info/row';\nimport { Box, Text } from '../../../../../../../components/component-library';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n} from '../../../../../../../helpers/constants/design-system';\nimport { getPreferences } from '../../../../../../../selectors';\n\nexport const GasFeesRow = ({\n  label,\n  tooltipText,\n  fiatFee,\n  nativeFee,\n  'data-testid': dataTestId,\n}: {\n  label: string;\n  tooltipText: string;\n  fiatFee: string;\n  nativeFee: string;\n  'data-testid'?: string;\n}) => {\n  const { useNativeCurrencyAsPrimaryCurrency: isNativeCurrencyUsed } =\n    useSelector(getPreferences);\n\n  return (\n    <ConfirmInfoRow\n      data-testid={dataTestId}\n      label={label}\n      tooltip={tooltipText}\n      variant={ConfirmInfoRowVariant.Default}\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        justifyContent={JustifyContent.spaceBetween}\n        alignItems={AlignItems.center}\n        textAlign={TextAlign.Center}\n        marginLeft={8}\n      >\n        <Text marginRight={1} color={TextColor.textDefault}>\n          {isNativeCurrencyUsed ? nativeFee : fiatFee}\n        </Text>\n        <Text color={TextColor.textAlternative}>\n          {isNativeCurrencyUsed ? fiatFee : nativeFee}\n        </Text>\n      </Box>\n    </ConfirmInfoRow>\n  );\n};\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport React, { useCallback, useState } from 'react';\nimport { EditGasModes } from '../../../../../../../../shared/constants/gas';\nimport { ConfirmInfoSection } from '../../../../../../../components/app/confirm/info/row/section';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport EditGasPopover from '../../../../edit-gas-popover';\nimport { useSupportsEIP1559 } from '../../hooks/useSupportsEIP1559';\nimport { GasFeesDetails } from '../gas-fees-details/gas-fees-details';\n\nconst LegacyTransactionGasModal = ({\n  closeCustomizeGasPopover,\n  transactionMeta,\n}: {\n  closeCustomizeGasPopover: () => void;\n  transactionMeta: TransactionMeta;\n}) => {\n  return (\n    <EditGasPopover\n      onClose={closeCustomizeGasPopover}\n      mode={EditGasModes.modifyInPlace}\n      transaction={transactionMeta}\n    />\n  );\n};\n\nexport const GasFeesSection = () => {\n  const { currentConfirmation: transactionMeta } =\n    useConfirmContext<TransactionMeta>();\n\n  const [showCustomizeGasPopover, setShowCustomizeGasPopover] = useState(false);\n  const closeCustomizeGasPopover = useCallback(\n    () => setShowCustomizeGasPopover(false),\n    [setShowCustomizeGasPopover],\n  );\n\n  const { supportsEIP1559 } = useSupportsEIP1559(transactionMeta);\n\n  if (!transactionMeta?.txParams) {\n    return null;\n  }\n\n  return (\n    <ConfirmInfoSection data-testid=\"gas-fee-section\">\n      <GasFeesDetails setShowCustomizeGasPopover={setShowCustomizeGasPopover} />\n      {!supportsEIP1559 && showCustomizeGasPopover && (\n        <LegacyTransactionGasModal\n          closeCustomizeGasPopover={closeCustomizeGasPopover}\n          transactionMeta={transactionMeta}\n        />\n      )}\n    </ConfirmInfoSection>\n  );\n};\n","import React from 'react';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowText,\n} from '../../../../../../../components/app/confirm/info/row';\nimport { ConfirmInfoSection } from '../../../../../../../components/app/confirm/info/row/section';\nimport { Box } from '../../../../../../../components/component-library';\n\nconst StaticSimulation: React.FC<{\n  title: string;\n  titleTooltip: string;\n  description: string;\n  simulationHeading: string;\n  simulationElements: React.ReactNode;\n}> = ({\n  title,\n  titleTooltip,\n  description,\n  simulationHeading,\n  simulationElements,\n}) => {\n  return (\n    <ConfirmInfoSection data-testid=\"confirmation__simulation_section\">\n      <ConfirmInfoRow label={title} tooltip={titleTooltip}>\n        <ConfirmInfoRowText text={description} />\n      </ConfirmInfoRow>\n      <ConfirmInfoRow label={simulationHeading}>\n        <Box style={{ marginLeft: 'auto', maxWidth: '100%' }}>\n          {simulationElements}\n        </Box>\n      </ConfirmInfoRow>\n    </ConfirmInfoSection>\n  );\n};\n\nexport default StaticSimulation;\n","import React from 'react';\nimport { TransactionMeta } from '@metamask/transaction-controller';\nimport { hexStripZeros } from '@ethersproject/bytes';\nimport _ from 'lodash';\nimport { Hex } from '@metamask/utils';\nimport { useDecodedTransactionData } from '../../hooks/useDecodedTransactionData';\nimport { ConfirmInfoSection } from '../../../../../../../components/app/confirm/info/row/section';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowDivider,\n  ConfirmInfoRowText,\n} from '../../../../../../../components/app/confirm/info/row';\nimport {\n  Display,\n  FlexWrap,\n  JustifyContent,\n} from '../../../../../../../helpers/constants/design-system';\nimport { Box } from '../../../../../../../components/component-library';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { ConfirmInfoExpandableRow } from '../../../../../../../components/app/confirm/info/row/expandable-row';\nimport Preloader from '../../../../../../../components/ui/icon/preloader';\nimport {\n  DecodedTransactionDataMethod,\n  DecodedTransactionDataParam,\n  DecodedTransactionDataSource,\n} from '../../../../../../../../shared/types/transaction-decode';\nimport { UniswapPathPool } from '../../../../../../../../app/scripts/lib/transaction/decode/uniswap';\nimport { useConfirmContext } from '../../../../../context/confirm';\n\nexport const TransactionData = () => {\n  const { currentConfirmation } = useConfirmContext<TransactionMeta>();\n\n  const transactionData = currentConfirmation?.txParams?.data as Hex;\n  const decodeResponse = useDecodedTransactionData();\n\n  const { value, pending } = decodeResponse;\n\n  if (pending) {\n    return <Container isLoading />;\n  }\n\n  if (!transactionData?.length) {\n    return null;\n  }\n\n  if (!value) {\n    return (\n      <Container transactionData={transactionData}>\n        <RawDataRow transactionData={transactionData} />\n      </Container>\n    );\n  }\n\n  const { data, source } = value;\n  const isExpandable = data.length > 1;\n\n  return (\n    <Container transactionData={transactionData}>\n      <>\n        {data.map((method, index) => (\n          <React.Fragment key={index}>\n            <FunctionContainer\n              method={method}\n              source={source}\n              isExpandable={isExpandable}\n            />\n            {index < data.length - 1 && <ConfirmInfoRowDivider />}\n          </React.Fragment>\n        ))}\n      </>\n    </Container>\n  );\n};\n\nexport function Container({\n  children,\n  isLoading,\n  transactionData,\n}: {\n  children?: React.ReactNode;\n  isLoading?: boolean;\n  transactionData?: string;\n}) {\n  const t = useI18nContext();\n\n  return (\n    <>\n      <ConfirmInfoSection data-testid=\"advanced-details-data-section\">\n        <ConfirmInfoRow\n          label={t('advancedDetailsDataDesc')}\n          copyEnabled={Boolean(transactionData)}\n          copyText={transactionData || undefined}\n        >\n          <Box>{isLoading && <Preloader size={20} />}</Box>\n        </ConfirmInfoRow>\n        {children}\n      </ConfirmInfoSection>\n    </>\n  );\n}\n\nfunction RawDataRow({ transactionData }: { transactionData: string }) {\n  const t = useI18nContext();\n  return (\n    <ConfirmInfoRow label={t('advancedDetailsHexDesc')}>\n      <ConfirmInfoRowText\n        data-testid=\"advanced-details-transaction-hex\"\n        text={transactionData}\n      />\n    </ConfirmInfoRow>\n  );\n}\n\nfunction FunctionContainer({\n  method,\n  source,\n  isExpandable,\n}: {\n  method: DecodedTransactionDataMethod;\n  source?: DecodedTransactionDataSource;\n  isExpandable: boolean;\n}) {\n  const t = useI18nContext();\n\n  const paramRows = (\n    <Box paddingLeft={2}>\n      {method.params.map((param, paramIndex) => (\n        <ParamRow\n          key={paramIndex}\n          param={param}\n          index={paramIndex}\n          source={source}\n        />\n      ))}\n    </Box>\n  );\n\n  if (isExpandable) {\n    return (\n      <ConfirmInfoExpandableRow\n        label={t('transactionDataFunction')}\n        tooltip={method.description}\n        content={paramRows}\n        startExpanded\n      >\n        <ConfirmInfoRowText\n          data-testid=\"advanced-details-data-function\"\n          text={method.name}\n        />\n      </ConfirmInfoExpandableRow>\n    );\n  }\n\n  return (\n    <>\n      <ConfirmInfoRow\n        data-testid=\"advanced-details-data-function\"\n        label={t('transactionDataFunction')}\n        tooltip={method.description}\n      >\n        <ConfirmInfoRowText text={method.name} />\n      </ConfirmInfoRow>\n      {paramRows}\n    </>\n  );\n}\n\nfunction ParamValue({\n  param,\n  source,\n}: {\n  param: DecodedTransactionDataParam;\n  source?: DecodedTransactionDataSource;\n}) {\n  const { name, type, value } = param;\n\n  if (type === 'address') {\n    return <ConfirmInfoRowAddress address={value} />;\n  }\n\n  if (name === 'path' && source === DecodedTransactionDataSource.Uniswap) {\n    return <UniswapPath pathPools={value} />;\n  }\n\n  let valueString = value.toString();\n\n  if (!Array.isArray(value) && valueString.startsWith('0x')) {\n    valueString = hexStripZeros(valueString);\n  }\n\n  return <ConfirmInfoRowText text={valueString} />;\n}\n\nfunction ParamRow({\n  param,\n  index,\n  source,\n}: {\n  param: DecodedTransactionDataParam;\n  index: number;\n  source?: DecodedTransactionDataSource;\n}) {\n  const { name, type, description } = param;\n  const label = name ? _.startCase(name) : `Param #${index + 1}`;\n  const tooltip = `${type}${description ? ` - ${description}` : ''}`;\n  const dataTestId = `advanced-details-data-param-${index}`;\n\n  const childRows = param.children?.map((childParam, childIndex) => (\n    <ParamRow\n      key={childIndex}\n      param={childParam}\n      index={childIndex}\n      source={source}\n    />\n  ));\n\n  return (\n    <>\n      <ConfirmInfoRow label={label} tooltip={tooltip} data-testid={dataTestId}>\n        {!childRows?.length && <ParamValue param={param} source={source} />}\n      </ConfirmInfoRow>\n      {childRows && <Box paddingLeft={2}>{childRows}</Box>}\n    </>\n  );\n}\n\nfunction UniswapPath({ pathPools }: { pathPools: UniswapPathPool[] }) {\n  return (\n    <Box\n      display={Display.Flex}\n      flexWrap={FlexWrap.Wrap}\n      justifyContent={JustifyContent.flexEnd}\n    >\n      {pathPools.map((pool, index) => (\n        <>\n          {index === 0 && <ConfirmInfoRowAddress address={pool.firstAddress} />}\n          <ConfirmInfoRowText text={String(pool.tickSpacing)} />\n          <ConfirmInfoRowAddress address={pool.secondAddress} />\n        </>\n      ))}\n    </Box>\n  );\n}\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport { isValidAddress } from 'ethereumjs-util';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowText,\n  ConfirmInfoRowUrl,\n} from '../../../../../../../components/app/confirm/info/row';\nimport { ConfirmInfoAlertRow } from '../../../../../../../components/app/confirm/info/row/alert-row/alert-row';\nimport { RowAlertKey } from '../../../../../../../components/app/confirm/info/row/constants';\nimport { ConfirmInfoSection } from '../../../../../../../components/app/confirm/info/row/section';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { selectPaymasterAddress } from '../../../../../../../selectors/account-abstraction';\nimport { selectConfirmationAdvancedDetailsOpen } from '../../../../../selectors/preferences';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport { useFourByte } from '../../hooks/useFourByte';\n\nexport const OriginRow = () => {\n  const t = useI18nContext();\n\n  const { currentConfirmation } = useConfirmContext<TransactionMeta>();\n\n  const origin = currentConfirmation?.origin;\n\n  if (!origin) {\n    return null;\n  }\n\n  return (\n    <ConfirmInfoAlertRow\n      alertKey={RowAlertKey.RequestFrom}\n      ownerId={currentConfirmation.id}\n      data-testid=\"transaction-details-origin-row\"\n      label={t('requestFrom')}\n      tooltip={t('requestFromTransactionDescription')}\n    >\n      <ConfirmInfoRowUrl url={origin} />\n    </ConfirmInfoAlertRow>\n  );\n};\n\nexport const RecipientRow = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<TransactionMeta>();\n\n  if (\n    !currentConfirmation?.txParams?.to ||\n    !isValidAddress(currentConfirmation?.txParams?.to ?? '')\n  ) {\n    return null;\n  }\n\n  return (\n    <ConfirmInfoRow\n      data-testid=\"transaction-details-recipient-row\"\n      label={t('interactingWith')}\n      tooltip={t('interactingWithTransactionDescription')}\n    >\n      <ConfirmInfoRowAddress address={currentConfirmation.txParams.to} />\n    </ConfirmInfoRow>\n  );\n};\n\nexport const MethodDataRow = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<TransactionMeta>();\n  const methodData = useFourByte(currentConfirmation);\n\n  if (!methodData?.name) {\n    return null;\n  }\n\n  return (\n    <ConfirmInfoRow\n      data-testid=\"transaction-details-method-data-row\"\n      label={t('methodData')}\n      tooltip={t('methodDataTransactionDesc')}\n    >\n      <ConfirmInfoRowText text={methodData.name} />\n    </ConfirmInfoRow>\n  );\n};\n\nconst PaymasterRow = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<TransactionMeta>();\n\n  const { id: userOperationId } = currentConfirmation ?? {};\n  const isUserOperation = Boolean(currentConfirmation?.isUserOperation);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const paymasterAddress = useSelector((state: any) =>\n    selectPaymasterAddress(state, userOperationId as string),\n  );\n\n  if (!isUserOperation || !paymasterAddress) {\n    return null;\n  }\n\n  return (\n    <ConfirmInfoSection>\n      <ConfirmInfoRow\n        data-testid=\"transaction-details-paymaster-row\"\n        label={t('confirmFieldPaymaster')}\n        tooltip={t('confirmFieldTooltipPaymaster')}\n      >\n        <ConfirmInfoRowAddress address={paymasterAddress} />\n      </ConfirmInfoRow>\n    </ConfirmInfoSection>\n  );\n};\n\nexport const TransactionDetails = () => {\n  const showAdvancedDetails = useSelector(\n    selectConfirmationAdvancedDetailsOpen,\n  );\n\n  return (\n    <>\n      <ConfirmInfoSection data-testid=\"transaction-details-section\">\n        <OriginRow />\n        <RecipientRow />\n        {showAdvancedDetails && <MethodDataRow />}\n      </ConfirmInfoSection>\n      <PaymasterRow />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { ConfirmInfoAlertRow } from '../../../../../../components/app/confirm/info/row/alert-row/alert-row';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowUrl,\n} from '../../../../../../components/app/confirm/info/row';\nimport { RowAlertKey } from '../../../../../../components/app/confirm/info/row/constants';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport {\n  SignatureRequestType,\n  TypedSignDataV1Type,\n} from '../../../../types/confirm';\nimport { useConfirmContext } from '../../../../context/confirm';\nimport { ConfirmInfoRowTypedSignDataV1 } from '../../row/typed-sign-data-v1/typedSignDataV1';\nimport { ConfirmInfoSection } from '../../../../../../components/app/confirm/info/row/section';\n\nconst TypedSignV1Info: React.FC = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<SignatureRequestType>();\n\n  if (!(currentConfirmation as SignatureRequestType)?.msgParams) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConfirmInfoSection>\n        <ConfirmInfoAlertRow\n          alertKey={RowAlertKey.RequestFrom}\n          ownerId={currentConfirmation.id}\n          label={t('requestFrom')}\n          tooltip={t('requestFromInfo')}\n        >\n          <ConfirmInfoRowUrl\n            url={currentConfirmation.msgParams?.origin ?? ''}\n          />\n        </ConfirmInfoAlertRow>\n      </ConfirmInfoSection>\n      <ConfirmInfoSection>\n        <ConfirmInfoRow label={t('message')}>\n          <ConfirmInfoRowTypedSignDataV1\n            data={currentConfirmation.msgParams?.data as TypedSignDataV1Type}\n          />\n        </ConfirmInfoRow>\n      </ConfirmInfoSection>\n    </>\n  );\n};\n\nexport default TypedSignV1Info;\n","export { default as PermitSimulation } from './permit-simulation';\n","import React from 'react';\nimport { PrimaryType } from '../../../../../../../../shared/constants/signatures';\nimport { parseTypedDataMessage } from '../../../../../../../../shared/modules/transaction.utils';\nimport { Box } from '../../../../../../../components/component-library';\nimport {\n  Display,\n  FlexDirection,\n} from '../../../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport { useConfirmContext } from '../../../../../context/confirm';\nimport { SignatureRequestType } from '../../../../../types/confirm';\nimport StaticSimulation from '../../shared/static-simulation/static-simulation';\nimport PermitSimulationValueDisplay from './value-display/value-display';\n\nfunction extractTokenDetailsByPrimaryType(\n  message: Record<string, unknown>,\n  primaryType: PrimaryType,\n): object[] | unknown {\n  let tokenDetails;\n\n  switch (primaryType) {\n    case PrimaryType.PermitBatch:\n    case PrimaryType.PermitSingle:\n      tokenDetails = message?.details;\n      break;\n    case PrimaryType.PermitBatchTransferFrom:\n    case PrimaryType.PermitTransferFrom:\n      tokenDetails = message?.permitted;\n      break;\n    default:\n      break;\n  }\n\n  const isNonArrayObject = tokenDetails && !Array.isArray(tokenDetails);\n\n  return isNonArrayObject ? [tokenDetails] : tokenDetails;\n}\n\nconst PermitSimulation: React.FC<object> = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<SignatureRequestType>();\n  const msgData = currentConfirmation.msgParams?.data;\n  const {\n    domain: { verifyingContract },\n    message,\n    primaryType,\n  } = parseTypedDataMessage(msgData as string);\n\n  const tokenDetails = extractTokenDetailsByPrimaryType(message, primaryType);\n\n  return (\n    <StaticSimulation\n      title={t('simulationDetailsTitle')}\n      titleTooltip={t('simulationDetailsTitleTooltip')}\n      description={t('permitSimulationDetailInfo')}\n      simulationHeading={t('spendingCap')}\n      simulationElements={\n        Array.isArray(tokenDetails) ? (\n          <Box\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n            gap={2}\n          >\n            {tokenDetails.map(\n              (\n                { token, amount }: { token: string; amount: string },\n                i: number,\n              ) => (\n                <PermitSimulationValueDisplay\n                  key={`${token}-${i}`}\n                  primaryType={primaryType}\n                  tokenContract={token}\n                  value={amount}\n                />\n              ),\n            )}\n          </Box>\n        ) : (\n          <PermitSimulationValueDisplay\n            tokenContract={verifyingContract}\n            value={message.value}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PermitSimulation;\n","import React, { useMemo } from 'react';\nimport { NameType } from '@metamask/name-controller';\nimport { Hex } from '@metamask/utils';\nimport { captureException } from '@sentry/browser';\nimport { shortenString } from '../../../../../../../../helpers/utils/util';\n\nimport { calcTokenAmount } from '../../../../../../../../../shared/lib/transactions-controller-utils';\nimport useTokenExchangeRate from '../../../../../../../../components/app/currency-input/hooks/useTokenExchangeRate';\nimport { IndividualFiatDisplay } from '../../../../../simulation-details/fiat-display';\nimport {\n  formatAmount,\n  formatAmountMaxPrecision,\n} from '../../../../../simulation-details/formatAmount';\nimport { useAsyncResult } from '../../../../../../../../hooks/useAsyncResult';\n\nimport {\n  Box,\n  Text,\n} from '../../../../../../../../components/component-library';\nimport Tooltip from '../../../../../../../../components/ui/tooltip';\nimport {\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  JustifyContent,\n  TextAlign,\n} from '../../../../../../../../helpers/constants/design-system';\nimport Name from '../../../../../../../../components/app/name/name';\nimport { fetchErc20Decimals } from '../../../../../../utils/token';\n\ntype PermitSimulationValueDisplayParams = {\n  /** The primaryType of the typed sign message */\n  primaryType?: string;\n\n  /**\n   * The ethereum token contract address. It is expected to be in hex format.\n   * We currently accept strings since we have a patch that accepts a custom string\n   * {@see .yarn/patches/@metamask-eth-json-rpc-middleware-npm-14.0.1-b6c2ccbe8c.patch}\n   */\n  tokenContract: Hex | string;\n\n  /** The token amount */\n  value: number | string;\n};\n\nconst PermitSimulationValueDisplay: React.FC<\n  PermitSimulationValueDisplayParams\n> = ({ primaryType, tokenContract, value }) => {\n  const exchangeRate = useTokenExchangeRate(tokenContract);\n\n  const { value: tokenDecimals } = useAsyncResult(\n    async () => await fetchErc20Decimals(tokenContract),\n    [tokenContract],\n  );\n\n  const fiatValue = useMemo(() => {\n    if (exchangeRate && value) {\n      const tokenAmount = calcTokenAmount(value, tokenDecimals);\n      return exchangeRate.times(tokenAmount).toNumber();\n    }\n    return undefined;\n  }, [exchangeRate, tokenDecimals, value]);\n\n  const { tokenValue, tokenValueMaxPrecision } = useMemo(() => {\n    if (!value) {\n      return { tokenValue: null, tokenValueMaxPrecision: null };\n    }\n\n    const tokenAmount = calcTokenAmount(value, tokenDecimals);\n\n    return {\n      tokenValue: formatAmount('en-US', tokenAmount),\n      tokenValueMaxPrecision: formatAmountMaxPrecision('en-US', tokenAmount),\n    };\n  }, [tokenDecimals, value]);\n\n  /** Temporary error capturing as we are building out Permit Simulations */\n  if (!tokenContract) {\n    captureException(\n      new Error(\n        `PermitSimulationValueDisplay: Token contract address is missing where primaryType === ${primaryType}`,\n      ),\n    );\n    return null;\n  }\n\n  return (\n    <Box>\n      <Box display={Display.Flex} justifyContent={JustifyContent.flexEnd}>\n        <Box\n          display={Display.Inline}\n          marginInlineEnd={1}\n          minWidth={BlockSize.Zero}\n        >\n          <Tooltip\n            position=\"bottom\"\n            title={tokenValueMaxPrecision}\n            wrapperStyle={{ minWidth: 0 }}\n            interactive\n          >\n            <Text\n              data-testid=\"simulation-token-value\"\n              backgroundColor={BackgroundColor.backgroundAlternative}\n              borderRadius={BorderRadius.XL}\n              paddingInline={2}\n              style={{ paddingTop: '1px', paddingBottom: '1px' }}\n              textAlign={TextAlign.Center}\n            >\n              {shortenString(tokenValue || '', {\n                truncatedCharLimit: 15,\n                truncatedStartChars: 15,\n                truncatedEndChars: 0,\n                skipCharacterInEnd: true,\n              })}\n            </Text>\n          </Tooltip>\n        </Box>\n        <Name value={tokenContract} type={NameType.ETHEREUM_ADDRESS} />\n      </Box>\n      <Box>\n        {fiatValue && <IndividualFiatDisplay fiatAmount={fiatValue} shorten />}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PermitSimulationValueDisplay;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { isValidAddress } from 'ethereumjs-util';\n\nimport { ConfirmInfoAlertRow } from '../../../../../../components/app/confirm/info/row/alert-row/alert-row';\nimport { parseTypedDataMessage } from '../../../../../../../shared/modules/transaction.utils';\nimport { RowAlertKey } from '../../../../../../components/app/confirm/info/row/constants';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowDivider,\n  ConfirmInfoRowUrl,\n} from '../../../../../../components/app/confirm/info/row';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { getTokenStandardAndDetails } from '../../../../../../store/actions';\nimport { SignatureRequestType } from '../../../../types/confirm';\nimport {\n  isOrderSignatureRequest,\n  isPermitSignatureRequest,\n} from '../../../../utils';\nimport { useConfirmContext } from '../../../../context/confirm';\nimport { selectUseTransactionSimulations } from '../../../../selectors/preferences';\nimport { ConfirmInfoRowTypedSignData } from '../../row/typed-sign-data/typedSignData';\nimport { ConfirmInfoSection } from '../../../../../../components/app/confirm/info/row/section';\nimport { PermitSimulation } from './permit-simulation';\n\nconst TypedSignInfo: React.FC = () => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext<SignatureRequestType>();\n  const useTransactionSimulations = useSelector(\n    selectUseTransactionSimulations,\n  );\n  const [decimals, setDecimals] = useState<number>(0);\n\n  if (!currentConfirmation?.msgParams) {\n    return null;\n  }\n\n  const {\n    domain: { verifyingContract },\n    message: { spender },\n  } = parseTypedDataMessage(currentConfirmation.msgParams.data as string);\n\n  const isPermit = isPermitSignatureRequest(currentConfirmation);\n  const isOrder = isOrderSignatureRequest(currentConfirmation);\n\n  useEffect(() => {\n    (async () => {\n      if (!isPermit && !isOrder) {\n        return;\n      }\n      const tokenDetails = await getTokenStandardAndDetails(verifyingContract);\n      const tokenDecimals = tokenDetails?.decimals;\n\n      setDecimals(parseInt(tokenDecimals ?? '0', 10));\n    })();\n  }, [verifyingContract]);\n\n  return (\n    <>\n      {isPermit && useTransactionSimulations && <PermitSimulation />}\n      <ConfirmInfoSection>\n        {isPermit && (\n          <>\n            <ConfirmInfoRow label={t('spender')}>\n              <ConfirmInfoRowAddress address={spender} />\n            </ConfirmInfoRow>\n            <ConfirmInfoRowDivider />\n          </>\n        )}\n        <ConfirmInfoAlertRow\n          alertKey={RowAlertKey.RequestFrom}\n          ownerId={currentConfirmation.id}\n          label={t('requestFrom')}\n          tooltip={t('requestFromInfo')}\n        >\n          <ConfirmInfoRowUrl url={currentConfirmation.msgParams.origin} />\n        </ConfirmInfoAlertRow>\n        {isValidAddress(verifyingContract) && (\n          <ConfirmInfoRow label={t('interactingWith')}>\n            <ConfirmInfoRowAddress address={verifyingContract} />\n          </ConfirmInfoRow>\n        )}\n      </ConfirmInfoSection>\n      <ConfirmInfoSection>\n        <ConfirmInfoRow label={t('message')}>\n          <ConfirmInfoRowTypedSignData\n            data={currentConfirmation.msgParams?.data as string}\n            tokenDecimals={decimals}\n          />\n        </ConfirmInfoRow>\n      </ConfirmInfoSection>\n    </>\n  );\n};\n\nexport default TypedSignInfo;\n","export { default as LedgerInfo } from './ledger-info';\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getEnvironmentType } from '../../../../../../app/scripts/lib/util';\nimport { ENVIRONMENT_TYPE_FULLSCREEN } from '../../../../../../shared/constants/app';\nimport {\n  HardwareTransportStates,\n  LEDGER_USB_VENDOR_ID,\n  LedgerTransportTypes,\n  WebHIDConnectedStatuses,\n} from '../../../../../../shared/constants/hardware-wallets';\nimport {\n  BannerAlert,\n  BannerAlertSeverity,\n  Button,\n  ButtonVariant,\n  Text,\n} from '../../../../../components/component-library';\nimport {\n  getLedgerTransportStatus,\n  getLedgerWebHidConnectedStatus,\n  setLedgerWebHidConnectedStatus,\n} from '../../../../../ducks/app/app';\nimport { getLedgerTransportType } from '../../../../../ducks/metamask/metamask';\nimport {\n  FontWeight,\n  TextAlign,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport useLedgerConnection from '../../../hooks/useLedgerConnection';\n\nconst LedgerInfo: React.FC = () => {\n  const { isLedgerWallet } = useLedgerConnection();\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  const webHidConnectedStatus = useSelector(getLedgerWebHidConnectedStatus);\n  const ledgerTransportType = useSelector(getLedgerTransportType);\n  const transportStatus = useSelector(getLedgerTransportStatus);\n  const environmentType = getEnvironmentType();\n  const environmentTypeIsFullScreen =\n    environmentType === ENVIRONMENT_TYPE_FULLSCREEN;\n\n  if (!isLedgerWallet) {\n    return null;\n  }\n\n  const usingWebHID = ledgerTransportType === LedgerTransportTypes.webhid;\n\n  return (\n    <BannerAlert severity={BannerAlertSeverity.Info} style={{ marginTop: 16 }}>\n      <Text variant={TextVariant.headingSm} fontWeight={FontWeight.Medium}>\n        {t('ledgerConnectionInstructionHeader')}\n      </Text>\n      <ul style={{ listStyle: 'disc' }}>\n        <li>\n          <Text variant={TextVariant.bodyMd}>\n            {t('ledgerConnectionInstructionStepThree')}\n          </Text>\n        </li>\n        <li>\n          <Text variant={TextVariant.bodyMd}>\n            {t('ledgerConnectionInstructionStepFour')}\n          </Text>\n        </li>\n      </ul>\n      {transportStatus === HardwareTransportStates.deviceOpenFailure && (\n        <Button\n          variant={ButtonVariant.Link}\n          textAlign={TextAlign.Left}\n          fontWeight={FontWeight.Normal}\n          onClick={async () => {\n            if (environmentTypeIsFullScreen) {\n              window.location.reload();\n            } else {\n              global.platform.openExtensionInBrowser?.(null, null, true);\n            }\n          }}\n        >\n          {t('ledgerConnectionInstructionCloseOtherApps')}\n        </Button>\n      )}\n      {usingWebHID &&\n        webHidConnectedStatus === WebHIDConnectedStatuses.notConnected && (\n          <Button\n            variant={ButtonVariant.Link}\n            textAlign={TextAlign.Left}\n            fontWeight={FontWeight.Normal}\n            onClick={async () => {\n              if (environmentTypeIsFullScreen) {\n                const connectedDevices =\n                  await window.navigator.hid.requestDevice({\n                    filters: [{ vendorId: Number(LEDGER_USB_VENDOR_ID) }],\n                  });\n                const webHidIsConnected = connectedDevices.some(\n                  (device) => device.vendorId === Number(LEDGER_USB_VENDOR_ID),\n                );\n                dispatch(\n                  setLedgerWebHidConnectedStatus(\n                    webHidIsConnected\n                      ? WebHIDConnectedStatuses.connected\n                      : WebHIDConnectedStatuses.notConnected,\n                  ),\n                );\n              } else {\n                global.platform.openExtensionInBrowser?.(null, null, true);\n              }\n            }}\n          >\n            {environmentTypeIsFullScreen\n              ? t('clickToConnectLedgerViaWebHID')\n              : t('openFullScreenForLedgerWebHid')}\n          </Button>\n        )}\n    </BannerAlert>\n  );\n};\n\nexport default LedgerInfo;\n","export { default as Nav } from './nav';\n","import { ethErrors, serializeError } from 'eth-rpc-errors';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { QueueType } from '../../../../../../shared/constants/metametrics';\nimport {\n  Box,\n  Button,\n  ButtonIcon,\n  ButtonIconSize,\n  ButtonVariant,\n  IconName,\n  Text,\n} from '../../../../../components/component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  FontWeight,\n  IconColor,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport {\n  CONFIRM_TRANSACTION_ROUTE,\n  SIGNATURE_REQUEST_PATH,\n} from '../../../../../helpers/constants/routes';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { pendingConfirmationsSortedSelector } from '../../../../../selectors';\nimport { rejectPendingApproval } from '../../../../../store/actions';\nimport { useQueuedConfirmationsEvent } from '../../../hooks/useQueuedConfirmationEvents';\nimport { isSignatureApprovalRequest } from '../../../utils';\nimport { useConfirmContext } from '../../../context/confirm';\n\nconst Nav = () => {\n  const history = useHistory();\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  const { currentConfirmation } = useConfirmContext();\n\n  const pendingConfirmations = useSelector(pendingConfirmationsSortedSelector);\n\n  const currentConfirmationPosition = useMemo(() => {\n    if (pendingConfirmations?.length <= 0 || !currentConfirmation) {\n      return 0;\n    }\n    return pendingConfirmations.findIndex(\n      ({ id }) => id === currentConfirmation.id,\n    );\n  }, [currentConfirmation, pendingConfirmations]);\n\n  const onNavigateToTransaction = useCallback(\n    (pos: number) => {\n      const nextConfirmation =\n        pendingConfirmations[currentConfirmationPosition + pos];\n      // todo: once all signature request pages are ported to new designs\n      // SIGNATURE_REQUEST_PATH from path below can be removed\n      // In new routing all confirmations will support\n      // \"/confirm-transaction/<confirmation_id>\"\n      history.replace(\n        `${CONFIRM_TRANSACTION_ROUTE}/${nextConfirmation.id}${\n          isSignatureApprovalRequest(nextConfirmation)\n            ? SIGNATURE_REQUEST_PATH\n            : ''\n        }`,\n      );\n    },\n    [currentConfirmationPosition, pendingConfirmations],\n  );\n\n  const onRejectAll = useCallback(() => {\n    pendingConfirmations.forEach((conf) => {\n      dispatch(\n        rejectPendingApproval(\n          conf.id,\n          serializeError(ethErrors.provider.userRejectedRequest()),\n        ),\n      );\n    });\n  }, [pendingConfirmations]);\n\n  useQueuedConfirmationsEvent(QueueType.NavigationHeader);\n\n  if (pendingConfirmations.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Box\n      alignItems={AlignItems.center}\n      backgroundColor={BackgroundColor.backgroundDefault}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      justifyContent={JustifyContent.spaceBetween}\n      padding={3}\n      style={{\n        zIndex: 2,\n      }}\n    >\n      <Box alignItems={AlignItems.center} display={Display.Flex}>\n        <ButtonIcon\n          ariaLabel=\"Previous Confirmation\"\n          data-testid=\"confirm-nav__previous-confirmation\"\n          backgroundColor={BackgroundColor.backgroundAlternative}\n          borderRadius={BorderRadius.full}\n          className=\"confirm_nav__left_btn\"\n          color={IconColor.iconAlternative}\n          disabled={currentConfirmationPosition === 0}\n          iconName={IconName.ArrowLeft}\n          onClick={() => onNavigateToTransaction(-1)}\n          size={ButtonIconSize.Sm}\n        />\n        <Text\n          color={TextColor.textAlternative}\n          marginInline={2}\n          variant={TextVariant.bodySm}\n        >\n          {currentConfirmationPosition + 1} of {pendingConfirmations.length}\n        </Text>\n        <ButtonIcon\n          ariaLabel=\"Next Confirmation\"\n          data-testid=\"confirm-nav__next-confirmation\"\n          backgroundColor={BackgroundColor.backgroundAlternative}\n          borderRadius={BorderRadius.full}\n          className=\"confirm_nav__right_btn\"\n          color={IconColor.iconAlternative}\n          disabled={\n            currentConfirmationPosition === pendingConfirmations.length - 1\n          }\n          iconName={IconName.ArrowRight}\n          onClick={() => onNavigateToTransaction(1)}\n          size={ButtonIconSize.Sm}\n        />\n      </Box>\n      <Button\n        borderRadius={BorderRadius.XL}\n        className=\"confirm_nav__reject_all\"\n        data-testid=\"confirm-nav__reject-all\"\n        fontWeight={FontWeight.Normal}\n        onClick={onRejectAll}\n        paddingLeft={3}\n        paddingRight={3}\n        startIconName={IconName.Close}\n        type={ButtonVariant.Secondary}\n      >\n        {t('rejectAll')}\n      </Button>\n    </Box>\n  );\n};\n\nexport default Nav;\n","export { default as NetworkChangeToast } from './network-change-toast';\nexport { default as NetworkChangeToastLegacy } from './network-change-toast-legacy';\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Hex } from '@metamask/utils';\nimport { Box } from '../../../../../components/component-library';\nimport { Toast } from '../../../../../components/multichain';\nimport {\n  getLastInteractedConfirmationInfo,\n  setLastInteractedConfirmationInfo,\n} from '../../../../../store/actions';\nimport {\n  getCurrentChainId,\n  getNetworkConfigurationsByChainId,\n} from '../../../../../selectors';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\n\nconst CHAIN_CHANGE_THRESHOLD_MILLISECONDS = 60 * 1000; // 1 Minute\nconst TOAST_TIMEOUT_MILLISECONDS = 5 * 1000; // 5 Seconds\n\nconst NetworkChangeToastLegacy = ({\n  confirmation,\n}: {\n  confirmation: { id: string; chainId: string };\n}) => {\n  const chainId = useSelector(getCurrentChainId);\n  const newChainId = confirmation?.chainId ?? chainId;\n  const [toastVisible, setToastVisible] = useState(false);\n  const t = useI18nContext();\n  const networkConfigurations = useSelector(getNetworkConfigurationsByChainId);\n  const network = networkConfigurations[newChainId as Hex];\n\n  const hideToast = useCallback(() => {\n    setToastVisible(false);\n  }, [setToastVisible]);\n\n  useEffect(() => {\n    let isMounted = true;\n    if (!confirmation) {\n      return undefined;\n    }\n    (async () => {\n      const lastInteractedConfirmationInfo =\n        await getLastInteractedConfirmationInfo();\n      const currentTimestamp = new Date().getTime();\n      if (\n        lastInteractedConfirmationInfo &&\n        lastInteractedConfirmationInfo.chainId !== newChainId &&\n        currentTimestamp - lastInteractedConfirmationInfo.timestamp <=\n          CHAIN_CHANGE_THRESHOLD_MILLISECONDS &&\n        isMounted\n      ) {\n        setToastVisible(true);\n        setTimeout(() => {\n          if (isMounted) {\n            hideToast();\n          }\n        }, TOAST_TIMEOUT_MILLISECONDS);\n      }\n      if (\n        (!lastInteractedConfirmationInfo ||\n          lastInteractedConfirmationInfo?.id !== confirmation.id) &&\n        isMounted\n      ) {\n        setLastInteractedConfirmationInfo({\n          id: confirmation.id,\n          chainId: newChainId,\n          timestamp: new Date().getTime(),\n        });\n      }\n    })();\n    return () => {\n      isMounted = false;\n    };\n  }, [confirmation?.id, chainId]);\n\n  if (!toastVisible) {\n    return null;\n  }\n\n  return (\n    <Box className=\"toast_wrapper\">\n      <Toast\n        onClose={hideToast}\n        text={t('networkSwitchMessage', [network.name ?? ''])}\n        startAdornment={null}\n      />\n    </Box>\n  );\n};\n\nexport default NetworkChangeToastLegacy;\n","import React from 'react';\n\nimport useCurrentConfirmation from '../../../hooks/useCurrentConfirmation';\nimport NetworkChangeToastLegacy from './network-change-toast-legacy';\n\n// The component has been broken into NetworkChangeToast and NetworkChangeToastLegacy\n// to suffice need of old and re-designed confirmation pages.\n// These can be merged once we get rid of old confirmation pages.\nconst NetworkChangeToast = () => {\n  const { currentConfirmation } = useCurrentConfirmation();\n  return <NetworkChangeToastLegacy confirmation={currentConfirmation} />;\n};\n\nexport default NetworkChangeToast;\n","export { default as PluggableSection } from './pluggable-section';\n","import React from 'react';\nimport { ReactComponentLike } from 'prop-types';\n\nimport { useConfirmContext } from '../../../context/confirm';\nimport { SnapsSection } from '../snaps/snaps-section';\n\n// Components to be plugged into confirmation page can be added to the array below\nconst pluggedInSections: ReactComponentLike[] = [SnapsSection];\n\nconst PluggableSection = () => {\n  const { currentConfirmation } = useConfirmContext();\n\n  return (\n    <>\n      {pluggedInSections.map((Section, index) => (\n        <Section key={`section-${index}`} confirmation={currentConfirmation} />\n      ))}\n    </>\n  );\n};\n\nexport default PluggableSection;\n","import { Hex } from '@metamask/utils';\nimport React, { memo } from 'react';\n\nimport {\n  PrimaryType,\n  PRIMARY_TYPES_ORDER,\n  PRIMARY_TYPES_PERMIT,\n} from '../../../../../../shared/constants/signatures';\nimport { isValidHexAddress } from '../../../../../../shared/modules/hexstring-utils';\n\nimport { sanitizeString } from '../../../../../helpers/utils/util';\nimport { Box } from '../../../../../components/component-library';\nimport { BlockSize } from '../../../../../helpers/constants/design-system';\nimport { useAsyncResult } from '../../../../../hooks/useAsyncResult';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowAddress,\n  ConfirmInfoRowDate,\n  ConfirmInfoRowText,\n  ConfirmInfoRowTextTokenUnits,\n} from '../../../../../components/app/confirm/info/row';\nimport { fetchErc20Decimals } from '../../../utils/token';\n\ntype ValueType = string | Record<string, TreeData> | TreeData[];\n\nexport type TreeData = {\n  value: ValueType;\n  type: string;\n};\n\nenum Field {\n  Amount = 'amount',\n  BuyAmount = 'buyAmount',\n  Deadline = 'deadline',\n  EndAmount = 'endAmount',\n  EndTime = 'endTime',\n  Expiration = 'expiration',\n  Expiry = 'expiry',\n  SellAmount = 'sellAmount',\n  SigDeadline = 'sigDeadline',\n  StartAmount = 'startAmount',\n  StartTime = 'startTime',\n  ValidTo = 'validTo',\n  Value = 'value',\n}\n\nconst FIELD_TOKEN_UTILS_PRIMARY_TYPES: Record<string, string[]> = {\n  [Field.Amount]: [...PRIMARY_TYPES_PERMIT],\n  [Field.BuyAmount]: [...PRIMARY_TYPES_ORDER],\n  [Field.EndAmount]: [...PRIMARY_TYPES_ORDER],\n  [Field.SellAmount]: [...PRIMARY_TYPES_ORDER],\n  [Field.StartAmount]: [...PRIMARY_TYPES_ORDER],\n  [Field.Value]: [...PRIMARY_TYPES_PERMIT],\n};\n\nconst FIELD_DATE_PRIMARY_TYPES: Record<string, string[]> = {\n  [Field.Deadline]: [...PRIMARY_TYPES_PERMIT],\n  [Field.EndTime]: [...PRIMARY_TYPES_ORDER],\n  [Field.Expiration]: [PrimaryType.PermitBatch, PrimaryType.PermitSingle],\n  [Field.Expiry]: [...PRIMARY_TYPES_PERMIT],\n  [Field.SigDeadline]: [...PRIMARY_TYPES_PERMIT],\n  [Field.StartTime]: [...PRIMARY_TYPES_ORDER],\n  [Field.ValidTo]: [...PRIMARY_TYPES_ORDER],\n};\n\n/**\n * Date values may include -1 to represent a null value\n * e.g.\n * {@see {@link https://eips.ethereum.org/EIPS/eip-2612}}\n * \"The deadline argument can be set to uint(-1) to create Permits that effectively never expire.\"\n */\nconst NONE_DATE_VALUE = -1;\n\nconst getTokenDecimalsOfDataTree = async (\n  dataTreeData: Record<string, TreeData> | TreeData[],\n): Promise<void | number> => {\n  if (Array.isArray(dataTreeData)) {\n    return undefined;\n  }\n\n  const tokenContract = (dataTreeData as Record<string, TreeData>).token\n    ?.value as Hex;\n  if (!tokenContract || !isValidHexAddress(tokenContract)) {\n    return undefined;\n  }\n\n  return await fetchErc20Decimals(tokenContract);\n};\n\nexport const DataTree = ({\n  data,\n  primaryType,\n  tokenDecimals = 0,\n}: {\n  data: Record<string, TreeData> | TreeData[];\n  primaryType?: PrimaryType;\n  tokenDecimals?: number;\n}) => {\n  const { value: decimalsResponse } = useAsyncResult(\n    async () => await getTokenDecimalsOfDataTree(data),\n    [data],\n  );\n\n  const tokenContractDecimals =\n    typeof decimalsResponse === 'number' ? decimalsResponse : undefined;\n\n  return (\n    <Box width={BlockSize.Full}>\n      {Object.entries(data).map(([label, { value, type }], i) => (\n        <ConfirmInfoRow\n          label={`${sanitizeString(\n            label.charAt(0).toUpperCase() + label.slice(1),\n          )}:`}\n          style={{ paddingRight: 0 }}\n          key={`tree-data-${label}-index-${i}`}\n        >\n          {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            <DataField\n              label={label}\n              primaryType={primaryType}\n              value={value}\n              type={type}\n              tokenDecimals={tokenContractDecimals ?? tokenDecimals}\n            />\n          }\n        </ConfirmInfoRow>\n      ))}\n    </Box>\n  );\n};\n\nfunction isDateField(label: string, primaryType?: PrimaryType) {\n  return (FIELD_DATE_PRIMARY_TYPES[label] || [])?.includes(primaryType || '');\n}\n\nfunction isTokenUnitsField(label: string, primaryType?: PrimaryType) {\n  return (FIELD_TOKEN_UTILS_PRIMARY_TYPES[label] || [])?.includes(\n    primaryType || '',\n  );\n}\n\nconst DataField = memo(\n  ({\n    label,\n    primaryType,\n    type,\n    value,\n    tokenDecimals,\n  }: {\n    label: string;\n    primaryType?: PrimaryType;\n    type: string;\n    value: ValueType;\n    tokenDecimals: number;\n  }) => {\n    const t = useI18nContext();\n\n    if (typeof value === 'object' && value !== null) {\n      return (\n        <DataTree\n          data={value}\n          primaryType={primaryType}\n          tokenDecimals={tokenDecimals}\n        />\n      );\n    }\n\n    if (isDateField(label, primaryType) && Boolean(value)) {\n      const intValue = parseInt(value, 10);\n\n      return intValue === NONE_DATE_VALUE ? (\n        <ConfirmInfoRowText text={t('none')}></ConfirmInfoRowText>\n      ) : (\n        <ConfirmInfoRowDate unixTimestamp={parseInt(value, 10)} />\n      );\n    }\n\n    if (isTokenUnitsField(label, primaryType)) {\n      return (\n        <ConfirmInfoRowTextTokenUnits value={value} decimals={tokenDecimals} />\n      );\n    }\n\n    if (\n      type === 'address' &&\n      isValidHexAddress(value, {\n        mixedCaseUseChecksum: true,\n      })\n    ) {\n      return <ConfirmInfoRowAddress address={value} />;\n    }\n\n    return <ConfirmInfoRowText text={sanitizeString(value)} />;\n  },\n);\n","import React from 'react';\n\nimport { Box } from '../../../../../../components/component-library';\nimport { BlockSize } from '../../../../../../helpers/constants/design-system';\nimport { TypedSignDataV1Type } from '../../../../types/confirm';\nimport { DataTree } from '../dataTree';\n\nexport const ConfirmInfoRowTypedSignDataV1 = ({\n  data,\n}: {\n  data?: TypedSignDataV1Type;\n}) => {\n  if (!data) {\n    return null;\n  }\n\n  const parsedData = data.reduce(\n    (val, { name, value, type }) => ({ ...val, [name]: { type, value } }),\n    {},\n  );\n\n  return (\n    <Box width={BlockSize.Full}>\n      <Box style={{ marginLeft: -8 }}>\n        <DataTree data={parsedData} />\n      </Box>\n    </Box>\n  );\n};\n","import React from 'react';\n\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { Box } from '../../../../../../components/component-library';\nimport { BlockSize } from '../../../../../../helpers/constants/design-system';\nimport {\n  ConfirmInfoRow,\n  ConfirmInfoRowText,\n} from '../../../../../../components/app/confirm/info/row';\nimport { parseSanitizeTypedDataMessage } from '../../../../utils';\nimport { DataTree } from '../dataTree';\n\nexport const ConfirmInfoRowTypedSignData = ({\n  data,\n  tokenDecimals,\n}: {\n  data: string;\n  isPermit?: boolean;\n  tokenDecimals?: number;\n}) => {\n  const t = useI18nContext();\n\n  if (!data) {\n    return null;\n  }\n\n  const { sanitizedMessage, primaryType } = parseSanitizeTypedDataMessage(data);\n\n  return (\n    <Box width={BlockSize.Full}>\n      <ConfirmInfoRow\n        label={`${t('primaryType')}:`}\n        style={{ paddingLeft: 0, paddingRight: 0 }}\n      >\n        <ConfirmInfoRowText text={primaryType} />\n      </ConfirmInfoRow>\n      <Box style={{ marginLeft: -8 }}>\n        <DataTree\n          data={sanitizedMessage.value}\n          primaryType={primaryType}\n          tokenDecimals={tokenDecimals}\n        />\n      </Box>\n    </Box>\n  );\n};\n","export { default } from './scroll-to-bottom';\n","import React, { useContext, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n} from '../../../../../components/component-library';\nimport { I18nContext } from '../../../../../contexts/i18n';\n\nimport {\n  BackgroundColor,\n  BlockSize,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  IconColor,\n} from '../../../../../helpers/constants/design-system';\nimport { usePrevious } from '../../../../../hooks/usePrevious';\nimport { useScrollRequired } from '../../../../../hooks/useScrollRequired';\nimport { useConfirmContext } from '../../../context/confirm';\nimport { selectConfirmationAdvancedDetailsOpen } from '../../../selectors/preferences';\n\ntype ContentProps = {\n  /**\n   * Elements that go in the page content section\n   */\n  children: React.ReactNode | React.ReactNode[];\n};\n\nconst ScrollToBottom = ({ children }: ContentProps) => {\n  const t = useContext(I18nContext);\n  const { currentConfirmation, setIsScrollToBottomCompleted } =\n    useConfirmContext();\n  const previousId = usePrevious(currentConfirmation?.id);\n  const showAdvancedDetails = useSelector(\n    selectConfirmationAdvancedDetailsOpen,\n  );\n\n  const {\n    hasScrolledToBottom,\n    isScrollable,\n    isScrolledToBottom,\n    onScroll,\n    scrollToBottom,\n    setHasScrolledToBottom,\n    ref,\n  } = useScrollRequired([currentConfirmation?.id, showAdvancedDetails], {\n    offsetPxFromBottom: 0,\n  });\n\n  /**\n   * Scroll to the top of the page when the confirmation changes. This happens\n   * when we navigate through different confirmations. Also, resets hasScrolledToBottom\n   */\n  useEffect(() => {\n    if (previousId === currentConfirmation?.id) {\n      return;\n    }\n\n    const currentRef = ref?.current as null | HTMLDivElement;\n    if (!currentRef) {\n      return;\n    }\n\n    if (typeof currentRef.scrollTo === 'function') {\n      currentRef.scrollTo(0, 0);\n    }\n\n    setHasScrolledToBottom(false);\n  }, [currentConfirmation?.id, previousId, ref?.current]);\n\n  useEffect(() => {\n    setIsScrollToBottomCompleted(!isScrollable || hasScrolledToBottom);\n  }, [isScrollable, hasScrolledToBottom]);\n\n  return (\n    <Box\n      backgroundColor={BackgroundColor.backgroundAlternative}\n      width={BlockSize.Full}\n      height={BlockSize.Full}\n      style={{\n        /** As a flex child, this ensures the element stretches the full available space without overflowing */\n        minHeight: '0',\n        overflow: 'hidden',\n        /**\n         * This is for the scroll button. If we placed position: relative on the element below, with overflow: 'auto',\n         * the button would be positioned absolute to the entire content relative the scroll container. Thus, it would\n         * not stick to the bottom of the scroll container.\n         */\n        position: 'relative',\n      }}\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        width={BlockSize.Full}\n        height={BlockSize.Full}\n        paddingLeft={4}\n        paddingRight={4}\n        onScroll={onScroll}\n        ref={ref}\n        style={{ overflow: 'auto' }}\n      >\n        {children}\n\n        {isScrollable && !isScrolledToBottom && (\n          <ButtonIcon\n            className=\"confirm-scroll-to-bottom__button\"\n            onClick={scrollToBottom}\n            iconName={IconName.Arrow2Down}\n            ariaLabel={t('scrollDown')}\n            backgroundColor={BackgroundColor.backgroundDefault}\n            borderRadius={BorderRadius.full}\n            color={IconColor.primaryDefault}\n            display={Display.Flex}\n            size={ButtonIconSize.Md}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ScrollToBottom;\n","export * from './snaps-section';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { SnapUIRenderer } from '../../../../../../components/app/snaps/snap-ui-renderer';\nimport { Delineator } from '../../../../../../components/ui/delineator';\nimport { Text } from '../../../../../../components/component-library';\nimport {\n  TextColor,\n  TextVariant,\n  FontWeight,\n} from '../../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { getSnapMetadata } from '../../../../../../selectors';\nimport Tooltip from '../../../../../../components/ui/tooltip';\n\nexport type SnapInsightProps = {\n  snapId: string;\n  interfaceId: string;\n  loading: boolean;\n};\n\nexport const SnapInsight: React.FunctionComponent<SnapInsightProps> = ({\n  snapId,\n  interfaceId,\n  loading,\n}) => {\n  const t = useI18nContext();\n  const { name: snapName } = useSelector((state) =>\n    /* @ts-expect-error wrong type on selector. */\n    getSnapMetadata(state, snapId),\n  );\n\n  const headerComponent = (\n    <Text>\n      {t('insightsFromSnap', [\n        <Text\n          fontWeight={FontWeight.Medium}\n          variant={TextVariant.inherit}\n          color={TextColor.inherit}\n        >\n          {snapName}\n        </Text>,\n      ])}\n    </Text>\n  );\n\n  const hasNoInsight = !loading && !interfaceId;\n\n  if (hasNoInsight) {\n    return (\n      <Tooltip position=\"top\" title={t('snapsNoInsight')}>\n        <Delineator headerComponent={headerComponent} isDisabled={true} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Delineator\n      headerComponent={headerComponent}\n      isLoading={loading}\n      contentBoxProps={\n        loading\n          ? undefined\n          : {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingTop: 0,\n              paddingBottom: 0,\n            }\n      }\n    >\n      <SnapUIRenderer\n        snapId={snapId}\n        interfaceId={interfaceId}\n        isLoading={loading}\n        useDelineator={false}\n      />\n    </Delineator>\n  );\n};\n","import React from 'react';\nimport { useInsightSnaps } from '../../../../../../hooks/snaps/useInsightSnaps';\nimport { Box } from '../../../../../../components/component-library';\nimport {\n  Display,\n  FlexDirection,\n} from '../../../../../../helpers/constants/design-system';\nimport { useConfirmContext } from '../../../../context/confirm';\nimport { SnapInsight } from './snap-insight';\n\nexport const SnapsSection = () => {\n  const { currentConfirmation } = useConfirmContext();\n  const { data } = useInsightSnaps(currentConfirmation?.id);\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      gap={4}\n      marginBottom={4}\n    >\n      {data.map(({ snapId, interfaceId, loading }) => (\n        <SnapInsight\n          key={snapId}\n          snapId={snapId}\n          interfaceId={interfaceId}\n          loading={loading}\n        />\n      ))}\n    </Box>\n  );\n};\n","export { default as Title } from './title';\n","import {\n  TransactionMeta,\n  TransactionType,\n} from '@metamask/transaction-controller';\nimport React, { memo, useMemo } from 'react';\n\nimport { Box, Text } from '../../../../../components/component-library';\nimport {\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport useAlerts from '../../../../../hooks/useAlerts';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { getHighestSeverity } from '../../../../../components/app/alert-system/utils';\nimport GeneralAlert from '../../../../../components/app/alert-system/general-alert/general-alert';\nimport { Confirmation, SignatureRequestType } from '../../../types/confirm';\nimport {\n  isPermitSignatureRequest,\n  isSIWESignatureRequest,\n} from '../../../utils';\nimport { useConfirmContext } from '../../../context/confirm';\nimport { useIsNFT } from '../info/approve/hooks/use-is-nft';\n\nfunction ConfirmBannerAlert({ ownerId }: { ownerId: string }) {\n  const t = useI18nContext();\n  const { generalAlerts } = useAlerts(ownerId);\n\n  if (generalAlerts.length === 0) {\n    return null;\n  }\n\n  const hasMultipleAlerts = generalAlerts.length > 1;\n  const singleAlert = generalAlerts[0];\n  const highestSeverity = hasMultipleAlerts\n    ? getHighestSeverity(generalAlerts)\n    : singleAlert.severity;\n  return (\n    <Box marginTop={4}>\n      <GeneralAlert\n        data-testid=\"confirm-banner-alert\"\n        title={\n          hasMultipleAlerts\n            ? t('alertBannerMultipleAlertsTitle')\n            : singleAlert.reason\n        }\n        description={\n          hasMultipleAlerts\n            ? t('alertBannerMultipleAlertsDescription')\n            : singleAlert.message\n        }\n        severity={highestSeverity}\n        provider={hasMultipleAlerts ? undefined : singleAlert.provider}\n        details={hasMultipleAlerts ? undefined : singleAlert.alertDetails}\n        reportUrl={singleAlert.reportUrl}\n      />\n    </Box>\n  );\n}\n\ntype IntlFunction = (str: string) => string;\n\nconst getTitle = (\n  t: IntlFunction,\n  confirmation?: Confirmation,\n  isNFT?: boolean,\n) => {\n  switch (confirmation?.type) {\n    case TransactionType.contractInteraction:\n      return t('confirmTitleTransaction');\n    case TransactionType.deployContract:\n      return t('confirmTitleDeployContract');\n    case TransactionType.personalSign:\n      if (isSIWESignatureRequest(confirmation as SignatureRequestType)) {\n        return t('confirmTitleSIWESignature');\n      }\n      return t('confirmTitleSignature');\n    case TransactionType.signTypedData:\n      return isPermitSignatureRequest(confirmation as SignatureRequestType)\n        ? t('confirmTitlePermitTokens')\n        : t('confirmTitleSignature');\n    case TransactionType.tokenMethodApprove:\n      if (isNFT) {\n        return t('confirmTitleApproveTransaction');\n      }\n      return t('confirmTitlePermitTokens');\n    case TransactionType.tokenMethodIncreaseAllowance:\n      return t('confirmTitlePermitTokens');\n    default:\n      return '';\n  }\n};\n\nconst getDescription = (\n  t: IntlFunction,\n  confirmation?: Confirmation,\n  isNFT?: boolean,\n) => {\n  switch (confirmation?.type) {\n    case TransactionType.contractInteraction:\n      return '';\n    case TransactionType.deployContract:\n      return t('confirmTitleDescDeployContract');\n    case TransactionType.personalSign:\n      if (isSIWESignatureRequest(confirmation as SignatureRequestType)) {\n        return t('confirmTitleDescSIWESignature');\n      }\n      return t('confirmTitleDescSignature');\n    case TransactionType.signTypedData:\n      return isPermitSignatureRequest(confirmation as SignatureRequestType)\n        ? t('confirmTitleDescPermitSignature')\n        : t('confirmTitleDescSignature');\n    case TransactionType.tokenMethodApprove:\n      if (isNFT) {\n        return t('confirmTitleDescApproveTransaction');\n      }\n      return t('confirmTitleDescERC20ApproveTransaction');\n    case TransactionType.tokenMethodIncreaseAllowance:\n      return t('confirmTitleDescPermitSignature');\n    default:\n      return '';\n  }\n};\n\nconst ConfirmTitle: React.FC = memo(() => {\n  const t = useI18nContext();\n  const { currentConfirmation } = useConfirmContext();\n\n  const { isNFT } = useIsNFT(currentConfirmation as TransactionMeta);\n\n  const title = useMemo(\n    () => getTitle(t as IntlFunction, currentConfirmation, isNFT),\n    [currentConfirmation, isNFT],\n  );\n\n  const description = useMemo(\n    () => getDescription(t as IntlFunction, currentConfirmation, isNFT),\n    [currentConfirmation, isNFT],\n  );\n\n  if (!currentConfirmation) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConfirmBannerAlert ownerId={currentConfirmation.id} />\n      <Text\n        variant={TextVariant.headingLg}\n        paddingTop={4}\n        paddingBottom={2}\n        textAlign={TextAlign.Center}\n      >\n        {title}\n      </Text>\n      <Text\n        paddingBottom={4}\n        color={TextColor.textAlternative}\n        textAlign={TextAlign.Center}\n      >\n        {description}\n      </Text>\n    </>\n  );\n});\n\nexport default ConfirmTitle;\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport { Confirmation, SignatureRequestType } from '../../types/confirm';\n\nexport const getConfirmationSender = (\n  currentConfirmation: Confirmation | undefined,\n): { from: string | undefined } => {\n  const msgParams = (currentConfirmation as SignatureRequestType)?.msgParams;\n  const txParams = (currentConfirmation as TransactionMeta)?.txParams;\n\n  let from: string | undefined;\n  if (msgParams) {\n    from = msgParams.from;\n  }\n  if (txParams) {\n    from = txParams.from;\n  }\n\n  return { from };\n};\n\nexport const formatNumber = (value: number, decimals: number) => {\n  if (value === undefined) {\n    return value;\n  }\n  const formatter = new Intl.NumberFormat('en-US', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals,\n  });\n  return formatter.format(value);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nimport {\n  Display,\n  FlexDirection,\n  FontWeight,\n  TextVariant,\n  AlignItems,\n  IconColor,\n  TextAlign,\n} from '../../../../helpers/constants/design-system';\n\nimport {\n  Box,\n  Button,\n  BUTTON_SIZES,\n  BUTTON_VARIANT,\n  Icon,\n  IconName,\n  IconSize,\n  Modal,\n  ModalOverlay,\n  Text,\n} from '../../../../components/component-library';\nimport { ModalContent } from '../../../../components/component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../../components/component-library/modal-header/deprecated';\n\nconst ConfirmationWarningModal = ({ onSubmit, onCancel }) => {\n  const t = useI18nContext();\n  return (\n    <Modal\n      isOpen\n      onClose={onCancel}\n      className=\"confirmation-warning-modal__content\"\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader\n          childrenWrapperProps={{\n            display: Display.Flex,\n            flexDirection: FlexDirection.Column,\n            alignItems: AlignItems.center,\n            gap: 4,\n          }}\n        >\n          <Icon\n            name={IconName.Danger}\n            color={IconColor.errorDefault}\n            size={IconSize.Xl}\n          />\n          <Text\n            variant={TextVariant.headingSm}\n            as=\"h4\"\n            fontWeight={FontWeight.Bold}\n            textAlign={TextAlign.Center}\n          >\n            {t('addEthereumChainWarningModalTitle')}\n          </Text>\n        </ModalHeader>\n        <Box marginBottom={4}>\n          <Text marginTop={4} variant={TextVariant.bodySm}>\n            {t('addEthereumChainWarningModalHeader', [\n              <strong key=\"part-2\">\n                {t('addEthereumChainWarningModalHeaderPartTwo')}\n              </strong>,\n            ])}\n          </Text>\n          <Text marginTop={4} variant={TextVariant.bodySm}>\n            {t('addEthereumChainWarningModalListHeader')}\n          </Text>\n          <ul>\n            <Text as=\"li\" marginTop={2} variant={TextVariant.bodySm}>\n              {t('addEthereumChainWarningModalListPointOne')}\n            </Text>\n            <Text as=\"li\" marginTop={2} variant={TextVariant.bodySm}>\n              {t('addEthereumChainWarningModalListPointTwo')}\n            </Text>\n            <Text as=\"li\" marginTop={2} variant={TextVariant.bodySm}>\n              {t('addEthereumChainWarningModalListPointThree')}\n            </Text>\n          </ul>\n        </Box>\n        <Box display={Display.Flex} gap={4}>\n          <Button\n            variant={BUTTON_VARIANT.SECONDARY}\n            onClick={onCancel}\n            block\n            size={BUTTON_SIZES.LG}\n          >\n            {t('reject')}\n          </Button>\n          <Button\n            variant={BUTTON_VARIANT.PRIMARY}\n            onClick={onSubmit}\n            danger\n            block\n            size={BUTTON_SIZES.LG}\n          >\n            {t('approveButtonText')}\n          </Button>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nConfirmationWarningModal.propTypes = {\n  /**\n   * Function that approves collection\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * Function that rejects collection\n   */\n  onCancel: PropTypes.func,\n};\n\nexport default ConfirmationWarningModal;\n","export { default } from './confirmation-warning-modal';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAccountLink } from '@metamask/etherscan-link';\nimport { useSelector } from 'react-redux';\nimport { NameType } from '@metamask/name-controller';\nimport Box from '../../../../components/ui/box';\nimport Button from '../../../../components/ui/button/button.component';\nimport Tooltip from '../../../../components/ui/tooltip/tooltip';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport Identicon from '../../../../components/ui/identicon';\nimport { ellipsify } from '../../send/send.utils';\nimport Popover from '../../../../components/ui/popover';\nimport {\n  FontWeight,\n  TextVariant,\n  Display,\n  Size,\n  BorderStyle,\n  BorderColor,\n  TextColor,\n  Color,\n  AlignItems,\n} from '../../../../helpers/constants/design-system';\nimport { useCopyToClipboard } from '../../../../hooks/useCopyToClipboard';\nimport { getAddressBookEntry } from '../../../../selectors';\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\nimport NftCollectionImage from '../../../../components/ui/nft-collection-image/nft-collection-image';\nimport {\n  ButtonIcon,\n  IconName,\n  Text,\n} from '../../../../components/component-library';\nimport Name from '../../../../components/app/name/name';\nimport { usePetnamesEnabled } from '../../../../hooks/usePetnamesEnabled';\n\nexport default function ContractDetailsModal({\n  onClose,\n  tokenName,\n  tokenAddress,\n  toAddress,\n  chainId,\n  rpcPrefs,\n  tokenId,\n  assetName,\n  assetStandard,\n  isContractRequestingSignature,\n}) {\n  const t = useI18nContext();\n  const [copiedTokenAddress, handleCopyTokenAddress] = useCopyToClipboard();\n  const [copiedToAddress, handleCopyToAddress] = useCopyToClipboard();\n  const petnamesEnabled = usePetnamesEnabled();\n\n  const addressBookEntry = useSelector((state) => ({\n    data: getAddressBookEntry(state, toAddress),\n  }));\n\n  const nft =\n    assetStandard === TokenStandard.ERC721 ||\n    assetStandard === TokenStandard.ERC1155 ||\n    // if we don't have an asset standard but we do have either both an assetname and a tokenID or both a tokenName and tokenId we assume its an NFT\n    (assetName && tokenId) ||\n    (tokenName && tokenId);\n\n  return (\n    <Popover className=\"contract-details-modal\">\n      <Box\n        paddingTop={6}\n        paddingRight={4}\n        paddingBottom={8}\n        paddingLeft={4}\n        className=\"contract-details-modal__content\"\n      >\n        <Text\n          fontWeight={FontWeight.Bold}\n          variant={TextVariant.bodyMd}\n          as=\"h5\"\n          display={Display.Flex}\n        >\n          {t('contractTitle')}\n        </Text>\n        <Text\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          display={Display.Flex}\n          color={TextColor.textAlternative}\n          marginTop={2}\n        >\n          {t('contractDescription')}\n        </Text>\n        {!isContractRequestingSignature && (\n          <>\n            <Text\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              display={Display.Flex}\n              marginTop={4}\n              marginBottom={2}\n            >\n              {nft ? t('contractNFT') : t('contractToken')}\n            </Text>\n            <Box\n              display={Display.Flex}\n              borderRadius={Size.SM}\n              borderStyle={BorderStyle.solid}\n              borderColor={BorderColor.borderDefault}\n              className=\"contract-details-modal__content__contract\"\n            >\n              {nft ? (\n                <Box margin={4}>\n                  <NftCollectionImage\n                    assetName={assetName}\n                    tokenAddress={tokenAddress}\n                  />\n                </Box>\n              ) : (\n                <Identicon\n                  className=\"contract-details-modal__content__contract__identicon\"\n                  address={tokenAddress}\n                  diameter={24}\n                />\n              )}\n              <Box data-testid=\"recipient\">\n                <Text\n                  fontWeight={FontWeight.Bold}\n                  variant={TextVariant.bodyMd}\n                  as=\"h5\"\n                  marginTop={4}\n                >\n                  {tokenName || ellipsify(tokenAddress)}\n                </Text>\n                {tokenName && (\n                  <Text\n                    variant={TextVariant.bodySm}\n                    as=\"h6\"\n                    display={Display.Flex}\n                    color={TextColor.textAlternative}\n                    marginBottom={4}\n                  >\n                    {ellipsify(tokenAddress)}\n                  </Text>\n                )}\n              </Box>\n              <Box\n                alignItems={AlignItems.center}\n                marginLeft=\"auto\"\n                marginRight={4}\n                gap={2}\n              >\n                <Tooltip\n                  position=\"top\"\n                  title={\n                    copiedTokenAddress\n                      ? t('copiedExclamation')\n                      : t('copyToClipboard')\n                  }\n                >\n                  <ButtonIcon\n                    display={Display.Flex}\n                    iconName={\n                      copiedTokenAddress ? IconName.CopySuccess : IconName.Copy\n                    }\n                    onClick={() => handleCopyTokenAddress(tokenAddress)}\n                    color={Color.iconMuted}\n                    ariaLabel={\n                      copiedTokenAddress\n                        ? t('copiedExclamation')\n                        : t('copyToClipboard')\n                    }\n                  />\n                </Tooltip>\n                <Tooltip position=\"top\" title={t('openInBlockExplorer')}>\n                  <ButtonIcon\n                    display={Display.Flex}\n                    iconName={IconName.Export}\n                    color={Color.iconMuted}\n                    onClick={() => {\n                      const blockExplorerTokenLink = getAccountLink(\n                        tokenAddress,\n                        chainId,\n                        {\n                          blockExplorerUrl: rpcPrefs?.blockExplorerUrl ?? null,\n                        },\n                        null,\n                      );\n                      global.platform.openTab({\n                        url: blockExplorerTokenLink,\n                      });\n                    }}\n                    ariaLabel={t('openInBlockExplorer')}\n                  />\n                </Tooltip>\n              </Box>\n            </Box>\n          </>\n        )}\n        <Text\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          display={Display.Flex}\n          marginTop={4}\n          marginBottom={2}\n        >\n          {nft && t('contractRequestingAccess')}\n          {isContractRequestingSignature && t('contractRequestingSignature')}\n          {!nft &&\n            !isContractRequestingSignature &&\n            t('contractRequestingSpendingCap')}\n        </Text>\n        <Box\n          display={Display.Flex}\n          borderRadius={Size.SM}\n          borderStyle={BorderStyle.solid}\n          borderColor={BorderColor.borderDefault}\n          alignItems={AlignItems.center}\n          className=\"contract-details-modal__content__contract\"\n        >\n          {!petnamesEnabled && (\n            <Identicon\n              className=\"contract-details-modal__content__contract__identicon\"\n              diameter={24}\n              address={toAddress}\n            />\n          )}\n          <Box data-testid=\"recipient\">\n            {petnamesEnabled ? (\n              <Text variant={TextVariant.bodyMd} as=\"h5\">\n                <Name value={toAddress} type={NameType.ETHEREUM_ADDRESS} />\n              </Text>\n            ) : (\n              <Text\n                fontWeight={FontWeight.Bold}\n                variant={TextVariant.bodyMd}\n                as=\"h5\"\n              >\n                {addressBookEntry?.data?.name || ellipsify(toAddress)}\n              </Text>\n            )}\n            {!petnamesEnabled && addressBookEntry?.data?.name && (\n              <Text\n                variant={TextVariant.bodySm}\n                as=\"h6\"\n                display={Display.Flex}\n                color={TextColor.textAlternative}\n                marginBottom={4}\n              >\n                {ellipsify(toAddress)}\n              </Text>\n            )}\n          </Box>\n          <Box\n            alignItems={AlignItems.center}\n            marginLeft=\"auto\"\n            marginRight={4}\n            gap={2}\n          >\n            <Tooltip\n              position=\"top\"\n              title={\n                copiedToAddress ? t('copiedExclamation') : t('copyToClipboard')\n              }\n            >\n              <ButtonIcon\n                display={Display.Flex}\n                iconName={\n                  copiedToAddress ? IconName.CopySuccess : IconName.Copy\n                }\n                onClick={() => handleCopyToAddress(toAddress)}\n                color={Color.iconMuted}\n                ariaLabel={\n                  copiedTokenAddress\n                    ? t('copiedExclamation')\n                    : t('copyToClipboard')\n                }\n              />\n            </Tooltip>\n            <Tooltip position=\"top\" title={t('openInBlockExplorer')}>\n              <ButtonIcon\n                display={Display.Flex}\n                iconName={IconName.Export}\n                color={Color.iconMuted}\n                onClick={() => {\n                  const blockExplorerTokenLink = getAccountLink(\n                    toAddress,\n                    chainId,\n                    {\n                      blockExplorerUrl: rpcPrefs?.blockExplorerUrl ?? null,\n                    },\n                    null,\n                  );\n                  global.platform.openTab({\n                    url: blockExplorerTokenLink,\n                  });\n                }}\n                ariaLabel={t('openInBlockExplorer')}\n              />\n            </Tooltip>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        display={Display.Flex}\n        paddingTop={6}\n        paddingRight={4}\n        paddingBottom={6}\n        paddingLeft={4}\n      >\n        <Button type=\"primary\" onClick={() => onClose()}>\n          {t('recoveryPhraseReminderConfirm')}\n        </Button>\n      </Box>\n    </Popover>\n  );\n}\n\nContractDetailsModal.propTypes = {\n  /**\n   * Function that should close the modal\n   */\n  onClose: PropTypes.func,\n  /**\n   * Name of the token that is waiting to be allowed\n   */\n  tokenName: PropTypes.string,\n  /**\n   * Address of the token that is waiting to be allowed\n   */\n  tokenAddress: PropTypes.string,\n  /**\n   * Contract address requesting spending cap\n   */\n  toAddress: PropTypes.string,\n  /**\n   * Current network chainId\n   */\n  chainId: PropTypes.string,\n  /**\n   * RPC prefs of the current network\n   */\n  rpcPrefs: PropTypes.object,\n  /**\n   * The token id of the NFT\n   */\n  tokenId: PropTypes.string,\n  /**\n   * Token Standard\n   */\n  assetStandard: PropTypes.string,\n  /**\n   * The name of the collection\n   */\n  assetName: PropTypes.string,\n  /**\n   * Whether contract requesting signature flow has started\n   */\n  isContractRequestingSignature: PropTypes.bool,\n};\n","export { default } from './contract-details-modal';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAccountLink } from '@metamask/etherscan-link';\nimport Box from '../../../../components/ui/box/box';\nimport Tooltip from '../../../../components/ui/tooltip/tooltip';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport Identicon from '../../../../components/ui/identicon';\nimport {\n  Text,\n  ButtonIcon,\n  IconName,\n} from '../../../../components/component-library';\nimport {\n  TextVariant,\n  DISPLAY,\n  AlignItems,\n  JustifyContent,\n  TextColor,\n  Color,\n  FontWeight,\n} from '../../../../helpers/constants/design-system';\nimport { useCopyToClipboard } from '../../../../hooks/useCopyToClipboard';\n\nexport default function ContractTokenValues({\n  address,\n  tokenName,\n  chainId,\n  rpcPrefs,\n}) {\n  const t = useI18nContext();\n  const [copied, handleCopy] = useCopyToClipboard();\n\n  return (\n    <Box\n      className=\"contract-token-values\"\n      display={DISPLAY.FLEX}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.center}\n      gap={2}\n    >\n      <Identicon address={address} diameter={24} />\n      <Text\n        variant={TextVariant.headingLg}\n        fontWeight={FontWeight.Bold}\n        color={TextColor.textAlternative}\n        marginTop={0}\n        marginBottom={0}\n      >\n        {tokenName}\n      </Text>\n      <Tooltip\n        position=\"top\"\n        title={copied ? t('copiedExclamation') : t('copyToClipboard')}\n      >\n        <ButtonIcon\n          iconName={copied ? IconName.CopySuccess : IconName.Copy}\n          color={Color.iconMuted}\n          onClick={() => handleCopy(address)}\n          ariaLabel={copied ? t('copiedExclamation') : t('copyToClipboard')}\n        />\n      </Tooltip>\n      <Tooltip position=\"top\" title={t('openInBlockExplorer')}>\n        <ButtonIcon\n          display={DISPLAY.FLEX}\n          iconName={IconName.Export}\n          color={Color.iconMuted}\n          onClick={() => {\n            const blockExplorerTokenLink = getAccountLink(\n              address,\n              chainId,\n              {\n                blockExplorerUrl: rpcPrefs?.blockExplorerUrl ?? null,\n              },\n              null,\n            );\n            global.platform.openTab({\n              url: blockExplorerTokenLink,\n            });\n          }}\n          ariaLabel={t('openInBlockExplorer')}\n        />\n      </Tooltip>\n    </Box>\n  );\n}\n\nContractTokenValues.propTypes = {\n  /**\n   * Address used for generating token image\n   */\n  address: PropTypes.string,\n  /**\n   * Displayed the token name currently tracked in state\n   */\n  tokenName: PropTypes.string,\n  /**\n   * Current network chainId\n   */\n  chainId: PropTypes.string,\n  /**\n   * RPC prefs\n   */\n  rpcPrefs: PropTypes.object,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { I18nContext } from '../../../../../.storybook/i18n';\nimport {\n  Box,\n  ButtonLink,\n  Text,\n} from '../../../../components/component-library';\nimport {\n  AlignItems,\n  BorderRadius,\n  Display,\n  JustifyContent,\n  Size,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\n\nexport default function CustomNonce({\n  nextNonce,\n  customNonceValue,\n  showCustomizeNonceModal,\n}) {\n  const t = useContext(I18nContext);\n\n  return (\n    <Box\n      display={Display.Flex}\n      marginBottom={4}\n      paddingTop={3}\n      paddingRight={3}\n      paddingBottom={4}\n      paddingLeft={3}\n      borderRadius={BorderRadius.MD}\n      alignItems={AlignItems.center}\n      className=\"custom-nonce__content\"\n    >\n      <Box\n        className=\"custom-nonce__header\"\n        display={Display.InlineFlex}\n        justifyContent={JustifyContent.flexStart}\n        alignItems={AlignItems.center}\n      >\n        <Text variant={TextVariant.bodySm} as=\"h6\">\n          {t('nonce')}\n        </Text>\n        <ButtonLink\n          key=\"editCustomNonce\"\n          size={Size.auto}\n          marginLeft={3}\n          onClick={() => showCustomizeNonceModal()}\n        >\n          {t('edit')}\n        </ButtonLink>\n      </Box>\n      <Text\n        className=\"custom-nonce__value\"\n        variant={TextVariant.bodySmBold}\n        as=\"h6\"\n      >\n        {customNonceValue || nextNonce}\n      </Text>\n    </Box>\n  );\n}\n\nCustomNonce.propTypes = {\n  /**\n   * Getting the next suggested nonce\n   */\n  nextNonce: PropTypes.number,\n  /**\n   * Custom nonce value\n   */\n  customNonceValue: PropTypes.string,\n  /**\n   * Function that is supposed to open the customized nonce modal\n   */\n  showCustomizeNonceModal: PropTypes.func,\n};\n","export { default } from './custom-nonce';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../../../../components/ui/tooltip';\nimport {\n  TextColor,\n  TextVariant,\n  Display,\n  AlignItems,\n  IconColor,\n} from '../../../../helpers/constants/design-system';\n\nimport {\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n  Box,\n} from '../../../../components/component-library';\n\nexport const CustomSpendingCapTooltip = ({\n  tooltipContentText,\n  tooltipIcon,\n}) => (\n  <Box display={Display.InlineFlex} alignItems={AlignItems.center}>\n    <Tooltip\n      interactive\n      position=\"top\"\n      html={\n        <Text variant={TextVariant.bodySm} color={TextColor.textAlternative}>\n          {tooltipContentText}\n        </Text>\n      }\n    >\n      {tooltipIcon ? (\n        <Icon\n          name={IconName.Danger}\n          size={IconSize.Inherit}\n          color={IconColor.errorDefault}\n        />\n      ) : (\n        tooltipIcon !== '' && (\n          <Icon\n            name={IconName.Question}\n            size={IconSize.Inherit}\n            color={IconColor.iconAlternative}\n          />\n        )\n      )}\n    </Tooltip>\n  </Box>\n);\n\nCustomSpendingCapTooltip.propTypes = {\n  tooltipContentText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  tooltipIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport { addHexPrefix } from 'ethereumjs-util';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  TextVariant,\n  Size,\n  BackgroundColor,\n  TextColor,\n  BlockSize,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Text,\n  TextField,\n  ButtonLink,\n  Icon,\n  IconName,\n  IconSize,\n  Label,\n  HelpText,\n  Box,\n} from '../../../../components/component-library';\nimport { setCustomTokenAmount } from '../../../../ducks/app/app';\nimport { calcTokenAmount } from '../../../../../shared/lib/transactions-controller-utils';\nimport { hexToDecimal } from '../../../../../shared/modules/conversion.utils';\nimport {\n  MAX_TOKEN_ALLOWANCE_AMOUNT,\n  NUM_W_OPT_DECIMAL_COMMA_OR_DOT_REGEX,\n  DECIMAL_REGEX,\n} from '../../../../../shared/constants/tokens';\nimport { Numeric } from '../../../../../shared/modules/Numeric';\nimport { estimateGas } from '../../../../store/actions';\nimport { getCustomTxParamsData } from '../../confirm-approve/confirm-approve.util';\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\nimport { CustomSpendingCapTooltip } from './custom-spending-cap-tooltip';\n\nexport default function CustomSpendingCap({\n  txParams,\n  tokenName,\n  currentTokenBalance,\n  dappProposedValue,\n  siteOrigin,\n  passTheErrorText,\n  decimals,\n  setInputChangeInProgress,\n  customSpendingCap,\n  setCustomSpendingCap,\n}) {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const { updateTransaction } = useGasFeeContext();\n  const inputRef = useRef(null);\n\n  const [error, setError] = useState('');\n  const [showUseSiteSuggestionButton, setShowUseSiteSuggestionButton] =\n    useState(customSpendingCap !== String(dappProposedValue) && true);\n  const inputLogicEmptyStateText = t('inputLogicEmptyState');\n\n  const replaceCommaToDot = (inputValue) => {\n    return inputValue.replace(/,/gu, '.');\n  };\n\n  const decConversionGreaterThan = (tokenValue, tokenBalance) => {\n    return new Numeric(Number(replaceCommaToDot(tokenValue)), 10).greaterThan(\n      Number(tokenBalance),\n      10,\n    );\n  };\n\n  const getInputTextLogic = (inputNumber) => {\n    if (\n      new Numeric(Number(replaceCommaToDot(inputNumber)), 10).lessThanOrEqualTo(\n        new Numeric(Number(currentTokenBalance), 10),\n      )\n    ) {\n      return {\n        className: 'custom-spending-cap__lowerValue',\n        description: t('inputLogicEqualOrSmallerNumber', [\n          <Text\n            key=\"custom-spending-cap\"\n            variant={TextVariant.bodySmBold}\n            as=\"span\"\n          >\n            {replaceCommaToDot(inputNumber)} {tokenName}\n          </Text>,\n        ]),\n      };\n    } else if (decConversionGreaterThan(inputNumber, currentTokenBalance)) {\n      return {\n        className: 'custom-spending-cap__higherValue',\n        description: t('inputLogicHigherNumber'),\n      };\n    }\n    return {\n      className: 'custom-spending-cap__emptyState',\n      description: t('inputLogicEmptyState'),\n    };\n  };\n\n  const [customSpendingCapText, setCustomSpendingCapText] = useState(\n    getInputTextLogic(customSpendingCap).description,\n  );\n\n  const handleChange = async (valueInput) => {\n    if (!txParams) {\n      return;\n    }\n    setInputChangeInProgress(true);\n    let spendingCapError = '';\n    const inputTextLogic = getInputTextLogic(valueInput);\n    const inputTextLogicDescription = inputTextLogic.description;\n    const match = DECIMAL_REGEX.exec(replaceCommaToDot(valueInput));\n    if (match?.[1]?.length > decimals) {\n      setInputChangeInProgress(false);\n      return;\n    }\n\n    if (valueInput && !NUM_W_OPT_DECIMAL_COMMA_OR_DOT_REGEX.test(valueInput)) {\n      spendingCapError = t('spendingCapError');\n      setCustomSpendingCapText(t('spendingCapErrorDescription', [siteOrigin]));\n      setError(spendingCapError);\n    } else {\n      setCustomSpendingCapText(inputTextLogicDescription);\n      setError('');\n    }\n\n    const maxTokenAmount = calcTokenAmount(\n      MAX_TOKEN_ALLOWANCE_AMOUNT,\n      decimals,\n    );\n    if (Number(valueInput.length) > 1 && Number(valueInput)) {\n      const customSpendLimitNumber = new BigNumber(valueInput);\n      if (customSpendLimitNumber.greaterThan(maxTokenAmount)) {\n        spendingCapError = t('spendLimitTooLarge');\n        setError(spendingCapError);\n      }\n    }\n\n    setCustomSpendingCap(String(valueInput));\n    dispatch(setCustomTokenAmount(String(valueInput)));\n\n    if (String(valueInput) !== '') {\n      try {\n        const newData = getCustomTxParamsData(txParams.data, {\n          customPermissionAmount: valueInput,\n          decimals,\n        });\n        const { from, to, value: txValue } = txParams;\n        const estimatedGasLimit = await estimateGas({\n          from,\n          to,\n          value: txValue,\n          data: newData,\n        });\n        if (estimatedGasLimit) {\n          await updateTransaction({\n            gasLimit: hexToDecimal(addHexPrefix(estimatedGasLimit)),\n          });\n        }\n      } catch (exp) {\n        console.error('Error in trying to update gas limit', exp);\n      }\n    }\n\n    setInputChangeInProgress(false);\n  };\n\n  useEffect(() => {\n    if (customSpendingCap === String(dappProposedValue)) {\n      setShowUseSiteSuggestionButton(false);\n    } else {\n      setShowUseSiteSuggestionButton(true);\n    }\n  }, [customSpendingCap, dappProposedValue]);\n\n  useEffect(() => {\n    passTheErrorText(error);\n  }, [error, passTheErrorText]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus({\n        preventScroll: true,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const chooseTooltipContentText = decConversionGreaterThan(\n    customSpendingCap,\n    currentTokenBalance,\n  )\n    ? t('warningTooltipText', [\n        <Text\n          key=\"tooltip-text\"\n          variant={TextVariant.bodySmBold}\n          as=\"span\"\n          color={TextColor.errorDefault}\n        >\n          <Icon name={IconName.Danger} size={IconSize.Inherit} />{' '}\n          {t('beCareful')}\n        </Text>,\n      ])\n    : t('inputLogicEmptyState');\n\n  return (\n    <>\n      <Box\n        className=\"custom-spending-cap\"\n        display={Display.Flex}\n        alignItems={AlignItems.flexStart}\n        flexDirection={FlexDirection.Column}\n        gap={2}\n        padding={4}\n        backgroundColor={BackgroundColor.backgroundAlternative}\n        borderRadius={Size.SM}\n      >\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          gap={1}\n          width={BlockSize.Full}\n        >\n          <div>\n            <Label\n              htmlFor=\"custom-spending-cap\"\n              display={Display.Inline}\n              marginRight={1}\n            >\n              {t('customSpendingCap')}\n            </Label>\n            <CustomSpendingCapTooltip\n              tooltipContentText={\n                replaceCommaToDot(customSpendingCap)\n                  ? chooseTooltipContentText\n                  : ''\n              }\n              tooltipIcon={\n                replaceCommaToDot(customSpendingCap)\n                  ? decConversionGreaterThan(\n                      customSpendingCap,\n                      currentTokenBalance,\n                    )\n                  : ''\n              }\n            />\n          </div>\n          {showUseSiteSuggestionButton && (\n            <ButtonLink\n              marginLeft=\"auto\"\n              size={Size.auto}\n              onClick={(e) => {\n                e.preventDefault();\n                setShowUseSiteSuggestionButton(false);\n                handleChange(dappProposedValue);\n              }}\n            >\n              {t('useSiteSuggestion')}\n            </ButtonLink>\n          )}\n        </Box>\n        <TextField\n          inputRef={inputRef}\n          inputProps={{\n            'data-testid': 'custom-spending-cap-input',\n            color: decConversionGreaterThan(\n              customSpendingCap,\n              currentTokenBalance,\n            )\n              ? TextColor.errorDefault\n              : TextColor.textDefault,\n            paddingInlineEnd: 4,\n          }}\n          id=\"custom-spending-cap\"\n          onChange={(e) => handleChange(e.target.value)}\n          placeholder={t('enterANumber')}\n          value={customSpendingCap}\n          endAccessory={\n            <ButtonLink\n              onClick={(e) => {\n                e.preventDefault();\n                handleChange(currentTokenBalance);\n              }}\n              data-testid=\"custom-spending-cap-max-button\"\n            >\n              {t('max')}\n            </ButtonLink>\n          }\n          width={BlockSize.Full}\n        />\n        <HelpText\n          color={error ? TextColor.errorDefault : TextColor.textDefault}\n          variant={TextVariant.bodySm}\n        >\n          {error ||\n            (replaceCommaToDot(customSpendingCap)\n              ? customSpendingCapText\n              : inputLogicEmptyStateText)}\n        </HelpText>\n        <ButtonLink\n          size={Size.SM}\n          href={ZENDESK_URLS.TOKEN_ALLOWANCE_WITH_SPENDING_CAP}\n          externalLink\n        >\n          {t('learnMoreUpperCase')}\n        </ButtonLink>\n      </Box>\n    </>\n  );\n}\n\nCustomSpendingCap.propTypes = {\n  /**\n   * Transaction params\n   */\n  txParams: PropTypes.object.isRequired,\n  /**\n   * Displayed the token name currently tracked in description related to the input state\n   */\n  tokenName: PropTypes.string,\n  /**\n   * The current token balance of the token\n   */\n  currentTokenBalance: PropTypes.string,\n  /**\n   * The dapp suggested amount\n   */\n  dappProposedValue: PropTypes.string,\n  /**\n   * The origin of the site generally the URL\n   */\n  siteOrigin: PropTypes.string,\n  /**\n   * Parent component's callback function passed in order to get the error text\n   */\n  passTheErrorText: PropTypes.func,\n  /**\n   * Number of decimals\n   */\n  decimals: PropTypes.string,\n  /**\n   * Updating input state to changing\n   */\n  setInputChangeInProgress: PropTypes.func.isRequired,\n  /**\n   * Custom token amount or The dapp suggested amount\n   */\n  customSpendingCap: PropTypes.string,\n  /**\n   * State method to update the custom token value\n   */\n  setCustomSpendingCap: PropTypes.func.isRequired,\n};\n","import React, { useContext, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport BigNumber from 'bignumber.js';\nimport { EditGasModes } from '../../../../../shared/constants/gas';\n\nimport Button from '../../../../components/ui/button';\n\nimport {\n  TextAlign,\n  FontWeight,\n  TextColor,\n  TextVariant,\n  Severity,\n} from '../../../../helpers/constants/design-system';\nimport { BannerAlert, Text } from '../../../../components/component-library';\nimport { areDappSuggestedAndTxParamGasFeesTheSame } from '../../../../helpers/utils/confirm-tx.util';\n\nimport InfoTooltip from '../../../../components/ui/info-tooltip';\nimport AdvancedGasControls from '../advanced-gas-controls/advanced-gas-controls.component';\n\nimport { I18nContext } from '../../../../contexts/i18n';\n\nexport default function EditGasDisplay({\n  mode = EditGasModes.modifyInPlace,\n  estimatedMinimumNative,\n  transaction,\n  gasPrice,\n  setGasPrice,\n  gasLimit,\n  setGasLimit,\n  properGasLimit,\n  dappSuggestedGasFeeAcknowledged,\n  setDappSuggestedGasFeeAcknowledged,\n  onManualChange,\n  minimumGasLimit,\n  balanceError,\n  gasErrors,\n  txParamsHaveBeenCustomized,\n}) {\n  const t = useContext(I18nContext);\n  const scrollRef = useRef(null);\n\n  const dappSuggestedAndTxParamGasFeesAreTheSame =\n    areDappSuggestedAndTxParamGasFeesTheSame(transaction);\n\n  const requireDappAcknowledgement = Boolean(\n    transaction?.dappSuggestedGasFees &&\n      !dappSuggestedGasFeeAcknowledged &&\n      dappSuggestedAndTxParamGasFeesAreTheSame,\n  );\n\n  let warningMessage;\n  if (\n    gasLimit !== undefined &&\n    properGasLimit !== undefined &&\n    new BigNumber(gasLimit).lessThan(new BigNumber(properGasLimit))\n  ) {\n    warningMessage = t('gasLimitRecommended', [properGasLimit]);\n  }\n\n  const showTopError = balanceError && txParamsHaveBeenCustomized;\n\n  return (\n    <div className=\"edit-gas-display\">\n      <div className=\"edit-gas-display__content\">\n        {showTopError && (\n          <BannerAlert\n            severity={Severity.Danger}\n            description={t('insufficientFunds')}\n            marginBottom={6}\n          />\n        )}\n        {warningMessage && (\n          <BannerAlert\n            severity={Severity.Warning}\n            description={warningMessage}\n            marginBottom={6}\n          />\n        )}\n        {requireDappAcknowledgement && (\n          <BannerAlert\n            severity={Severity.Warning}\n            className=\"banner-alert--warning\"\n            description={t('gasDisplayDappWarning', [transaction.origin])}\n            marginBottom={6}\n          />\n        )}\n        {mode === EditGasModes.speedUp && (\n          <div className=\"edit-gas-display__top-tooltip\">\n            <Text\n              color={TextColor.textDefault}\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              fontWeight={FontWeight.Bold}\n            >\n              {t('speedUpTooltipText')}{' '}\n              <InfoTooltip\n                position=\"top\"\n                contentText={t('speedUpExplanation')}\n              />\n            </Text>\n          </div>\n        )}\n        <Text\n          color={TextColor.textDefault}\n          variant={TextVariant.headingLg}\n          as=\"h1\"\n          textAlign={TextAlign.Center}\n        >\n          {estimatedMinimumNative}\n        </Text>\n        {requireDappAcknowledgement && (\n          <Button\n            className=\"edit-gas-display__dapp-acknowledgement-button\"\n            onClick={() => setDappSuggestedGasFeeAcknowledged(true)}\n          >\n            {t('gasDisplayAcknowledgeDappButtonText')}\n          </Button>\n        )}\n        {!requireDappAcknowledgement && (\n          <AdvancedGasControls\n            gasLimit={gasLimit}\n            setGasLimit={setGasLimit}\n            gasPrice={gasPrice}\n            setGasPrice={setGasPrice}\n            onManualChange={onManualChange}\n            minimumGasLimit={minimumGasLimit}\n            gasErrors={gasErrors}\n          />\n        )}\n      </div>\n      <div ref={scrollRef} className=\"edit-gas-display__scroll-bottom\" />\n    </div>\n  );\n}\n\nEditGasDisplay.propTypes = {\n  mode: PropTypes.oneOf(Object.values(EditGasModes)),\n  estimatedMinimumNative: PropTypes.string,\n  gasPrice: PropTypes.string,\n  setGasPrice: PropTypes.func,\n  gasLimit: PropTypes.number,\n  setGasLimit: PropTypes.func,\n  properGasLimit: PropTypes.number,\n  dappSuggestedGasFeeAcknowledged: PropTypes.bool,\n  setDappSuggestedGasFeeAcknowledged: PropTypes.func,\n  transaction: PropTypes.object,\n  onManualChange: PropTypes.func,\n  minimumGasLimit: PropTypes.string,\n  balanceError: PropTypes.bool,\n  gasErrors: PropTypes.object,\n  txParamsHaveBeenCustomized: PropTypes.bool,\n};\n","export { default } from './edit-gas-display.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  EditGasModes,\n  PriorityLevels,\n} from '../../../../../shared/constants/gas';\nimport {\n  Color,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { PRIORITY_LEVEL_ICON_MAP } from '../../../../helpers/constants/gas';\n///: END:ONLY_INCLUDE_IF\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { useTransactionEventFragment } from '../../hooks/useTransactionEventFragment';\nimport { useTransactionModalContext } from '../../../../contexts/transaction-modal';\nimport InfoTooltip from '../../../../components/ui/info-tooltip/info-tooltip';\nimport {\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../../components/component-library';\n\nexport default function EditGasFeeButton({ userAcknowledgedGasMissing }) {\n  const t = useI18nContext();\n  const {\n    editGasMode,\n    gasLimit,\n    hasSimulationError,\n    estimateUsed,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    supportsEIP1559,\n    transaction,\n  } = useGasFeeContext();\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n  const { openModal } = useTransactionModalContext();\n  const editEnabled =\n    !hasSimulationError || userAcknowledgedGasMissing === true;\n\n  if (!supportsEIP1559 || !estimateUsed || !editEnabled) {\n    return null;\n  }\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  let icon = estimateUsed;\n  ///: END:ONLY_INCLUDE_IF\n  let title = estimateUsed;\n  if (\n    estimateUsed === PriorityLevels.high &&\n    editGasMode === EditGasModes.swaps\n  ) {\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    icon = 'swapSuggested';\n    ///: END:ONLY_INCLUDE_IF\n    title = 'swapSuggested';\n  } else if (estimateUsed === PriorityLevels.tenPercentIncreased) {\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    icon = undefined;\n    ///: END:ONLY_INCLUDE_IF\n    title = 'tenPercentIncreased';\n  }\n\n  const openEditGasFeeModal = () => {\n    updateTransactionEventFragment({\n      gas_edit_attempted: 'basic',\n    });\n    openModal('editGasFee');\n  };\n\n  const openAdvancedGasFeeModal = () => {\n    updateTransactionEventFragment({\n      gas_edit_attempted: 'advanced',\n    });\n    openModal('advancedGasFee');\n  };\n\n  return (\n    <div className=\"edit-gas-fee-button\">\n      <button onClick={openEditGasFeeModal} data-testid=\"edit-gas-fee-button\">\n        {\n          ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n          icon && (\n            <span className=\"edit-gas-fee-button__icon\">\n              {PRIORITY_LEVEL_ICON_MAP[icon]}\n            </span>\n          )\n          ///: END:ONLY_INCLUDE_IF\n        }\n        <span className=\"edit-gas-fee-button__label\">{t(title)}</span>\n        <Icon\n          name={IconName.ArrowRight}\n          color={Color.primaryDefault}\n          size={IconSize.Xs}\n        />\n      </button>\n      {estimateUsed === 'custom' && (\n        <button onClick={openAdvancedGasFeeModal}>{t('edit')}</button>\n      )}\n      {estimateUsed === 'dappSuggested' && (\n        <InfoTooltip\n          contentText={\n            <div className=\"edit-gas-fee-button__tooltip\">\n              {transaction?.origin && (\n                <Text\n                  variant={TextVariant.bodySm}\n                  as=\"h6\"\n                  color={TextColor.textAlternative}\n                >\n                  {t('dappSuggestedTooltip', [transaction.origin])}\n                </Text>\n              )}\n              <Text variant={TextVariant.bodySm} as=\"h6\">\n                <b>{t('maxFee')}</b> {maxFeePerGas}\n              </Text>\n              <Text variant={TextVariant.bodySm} as=\"h6\">\n                <b>{t('maxPriorityFee')}</b> {maxPriorityFeePerGas}\n              </Text>\n              <Text variant={TextVariant.bodySm} as=\"h6\">\n                <b>{t('gasLimit')}</b> {gasLimit}\n              </Text>\n            </div>\n          }\n          position=\"top\"\n        />\n      )}\n    </div>\n  );\n}\n\nEditGasFeeButton.propTypes = {\n  userAcknowledgedGasMissing: PropTypes.bool,\n};\n","export { default } from './edit-gas-fee-button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport { useTransactionEventFragment } from '../../hooks/useTransactionEventFragment';\nimport { useTransactionModalContext } from '../../../../contexts/transaction-modal';\nimport {\n  ButtonVariant,\n  Button,\n  IconName,\n} from '../../../../components/component-library';\nimport {\n  AlignItems,\n  IconColor,\n  Size,\n} from '../../../../helpers/constants/design-system';\n\nexport default function EditGasFeeIcon({ userAcknowledgedGasMissing = false }) {\n  const { hasSimulationError, estimateUsed, supportsEIP1559 } =\n    useGasFeeContext();\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n  const { openModal } = useTransactionModalContext();\n  const editEnabled = !hasSimulationError || userAcknowledgedGasMissing;\n\n  if (!supportsEIP1559 || !estimateUsed || !editEnabled) {\n    return null;\n  }\n\n  const openEditGasFeeModal = () => {\n    updateTransactionEventFragment({\n      gas_edit_attempted: 'basic',\n    });\n    openModal('editGasFee');\n  };\n\n  return (\n    <Button\n      style={{\n        textDecoration: 'none',\n        height: 'var(--typography-l-body-md-medium-line-height)',\n      }}\n      size={Size.SM}\n      variant={ButtonVariant.Link}\n      startIconName={IconName.Edit}\n      color={IconColor.primaryDefault}\n      alignItems={AlignItems.baseline}\n      paddingTop={1}\n      data-testid=\"edit-gas-fee-icon\"\n      onClick={openEditGasFeeModal}\n    />\n  );\n}\n\nEditGasFeeIcon.propTypes = {\n  userAcknowledgedGasMissing: PropTypes.bool,\n};\n","import React from 'react';\n\nimport {\n  EditGasModes,\n  PriorityLevels,\n} from '../../../../../shared/constants/gas';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { useTransactionModalContext } from '../../../../contexts/transaction-modal';\nimport Box from '../../../../components/ui/box';\nimport ErrorMessage from '../../../../components/ui/error-message';\nimport Popover from '../../../../components/ui/popover';\n\nimport {\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { INSUFFICIENT_FUNDS_ERROR_KEY } from '../../../../helpers/constants/error-keys';\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport AppLoadingSpinner from '../../../../components/app/app-loading-spinner';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\nimport { Text } from '../../../../components/component-library';\nimport EditGasItem from './edit-gas-item';\nimport NetworkStatistics from './network-statistics';\n\nconst EditGasFeePopover = () => {\n  const { balanceError, editGasMode } = useGasFeeContext();\n  const t = useI18nContext();\n  const { closeAllModals, closeModal, currentModal, openModalCount } =\n    useTransactionModalContext();\n\n  if (currentModal !== 'editGasFee') {\n    return null;\n  }\n\n  let popupTitle = 'editGasFeeModalTitle';\n  if (editGasMode === EditGasModes.cancel) {\n    popupTitle = 'editCancellationGasFeeModalTitle';\n  } else if (editGasMode === EditGasModes.speedUp) {\n    popupTitle = 'editSpeedUpEditGasFeeModalTitle';\n  }\n\n  return (\n    <Popover\n      title={t(popupTitle)}\n      // below logic ensures that back button is visible only if there are other modals open before this.\n      onBack={\n        openModalCount === 1 ? undefined : () => closeModal(['editGasFee'])\n      }\n      onClose={closeAllModals}\n      className=\"edit-gas-fee-popover\"\n    >\n      <>\n        <AppLoadingSpinner />\n        <div className=\"edit-gas-fee-popover__wrapper\">\n          <div className=\"edit-gas-fee-popover__content\">\n            <Box>\n              {balanceError && (\n                <ErrorMessage errorKey={INSUFFICIENT_FUNDS_ERROR_KEY} />\n              )}\n              <div className=\"edit-gas-fee-popover__content__header\">\n                <span className=\"edit-gas-fee-popover__content__header-option\">\n                  {t('gasOption')}\n                </span>\n                <span className=\"edit-gas-fee-popover__content__header-time\">\n                  {editGasMode !== EditGasModes.swaps && t('time')}\n                </span>\n                <span className=\"edit-gas-fee-popover__content__header-max-fee\">\n                  {t('maxFee')}\n                </span>\n              </div>\n              {(editGasMode === EditGasModes.cancel ||\n                editGasMode === EditGasModes.speedUp) && (\n                <EditGasItem\n                  priorityLevel={PriorityLevels.tenPercentIncreased}\n                />\n              )}\n              {editGasMode === EditGasModes.modifyInPlace && (\n                <EditGasItem priorityLevel={PriorityLevels.low} />\n              )}\n              <EditGasItem priorityLevel={PriorityLevels.medium} />\n              <EditGasItem priorityLevel={PriorityLevels.high} />\n              <div className=\"edit-gas-fee-popover__content__separator\" />\n              {editGasMode === EditGasModes.modifyInPlace && (\n                <EditGasItem priorityLevel={PriorityLevels.dAppSuggested} />\n              )}\n              <EditGasItem priorityLevel={PriorityLevels.custom} />\n            </Box>\n            <Box>\n              <NetworkStatistics />\n              <Text\n                className=\"edit-gas-fee-popover__know-more\"\n                align=\"center\"\n                color={TextColor.textAlternative}\n                tag={TextVariant.bodyMd}\n                variant={TextVariant.bodySm}\n                as=\"h6\"\n              >\n                {t('learnMoreAboutGas', [\n                  <a\n                    key=\"learnMoreLink\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={ZENDESK_URLS.USER_GUIDE_GAS}\n                  >\n                    {t('learnMore')}\n                  </a>,\n                ])}\n              </Text>\n            </Box>\n          </div>\n        </div>\n      </>\n    </Popover>\n  );\n};\n\nexport default EditGasFeePopover;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  EditGasModes,\n  PriorityLevels,\n} from '../../../../../../shared/constants/gas';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { PRIORITY_LEVEL_ICON_MAP } from '../../../../../helpers/constants/gas';\n///: END:ONLY_INCLUDE_IF\nimport { PRIMARY } from '../../../../../helpers/constants/common';\nimport { toHumanReadableTime } from '../../../../../helpers/utils/util';\nimport { useGasFeeContext } from '../../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { useTransactionEventFragment } from '../../../hooks/useTransactionEventFragment';\nimport { useTransactionModalContext } from '../../../../../contexts/transaction-modal';\nimport InfoTooltip from '../../../../../components/ui/info-tooltip';\nimport LoadingHeartBeat from '../../../../../components/ui/loading-heartbeat';\nimport UserPreferencedCurrencyDisplay from '../../../../../components/app/user-preferenced-currency-display';\nimport EditGasToolTip from '../edit-gas-tooltip/edit-gas-tooltip';\n\nimport { useGasItemFeeDetails } from './useGasItemFeeDetails';\n\nconst getTitleAndIcon = (priorityLevel, editGasMode) => {\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  let icon = priorityLevel;\n  ///: END:ONLY_INCLUDE_IF\n  let title = priorityLevel;\n  if (priorityLevel === PriorityLevels.dAppSuggested) {\n    title = 'dappSuggestedShortLabel';\n  } else if (priorityLevel === PriorityLevels.dappSuggestedHigh) {\n    title = 'dappSuggestedHighShortLabel';\n  } else if (priorityLevel === PriorityLevels.tenPercentIncreased) {\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    icon = null;\n    ///: END:ONLY_INCLUDE_IF\n    title = 'tenPercentIncreased';\n  } else if (\n    priorityLevel === PriorityLevels.high &&\n    editGasMode === EditGasModes.swaps\n  ) {\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    icon = 'swapSuggested';\n    ///: END:ONLY_INCLUDE_IF\n    title = 'swapSuggested';\n  }\n  return {\n    title,\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    icon,\n    ///: END:ONLY_INCLUDE_IF\n  };\n};\n\nconst EditGasItem = ({ priorityLevel }) => {\n  const {\n    editGasMode,\n    estimateUsed,\n    gasLimit,\n    updateTransactionToTenPercentIncreasedGasFee,\n    updateTransactionUsingDAPPSuggestedValues,\n    updateTransactionUsingEstimate,\n    transaction,\n  } = useGasFeeContext();\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n  const t = useI18nContext();\n  const { closeModal, openModal } = useTransactionModalContext();\n  const { dappSuggestedGasFees } = transaction;\n\n  const {\n    // for cancel or speedup estimateGreaterThaGasUse is true if previous gas used\n    // was more than estimate for the priorityLevel\n    estimateGreaterThanGasUse,\n    hexMaximumTransactionFee,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    minWaitTime,\n  } = useGasItemFeeDetails(priorityLevel);\n\n  if (\n    priorityLevel === PriorityLevels.dAppSuggested &&\n    !dappSuggestedGasFees?.maxFeePerGas &&\n    !dappSuggestedGasFees?.gasPrice\n  ) {\n    return null;\n  }\n\n  const onOptionSelect = () => {\n    if (priorityLevel === PriorityLevels.custom) {\n      updateTransactionEventFragment({\n        properties: {\n          gas_edit_attempted: 'advanced',\n        },\n      });\n      openModal('advancedGasFee');\n    } else {\n      updateTransactionEventFragment({\n        properties: {\n          gas_edit_type: 'basic',\n        },\n      });\n\n      closeModal(['editGasFee']);\n\n      if (priorityLevel === PriorityLevels.tenPercentIncreased) {\n        updateTransactionToTenPercentIncreasedGasFee();\n      } else if (priorityLevel === PriorityLevels.dAppSuggested) {\n        updateTransactionUsingDAPPSuggestedValues();\n      } else {\n        updateTransactionUsingEstimate(priorityLevel);\n      }\n    }\n  };\n\n  const {\n    title,\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    icon,\n    ///: END:ONLY_INCLUDE_IF\n  } = getTitleAndIcon(priorityLevel, editGasMode);\n\n  return (\n    <button\n      className={classNames('edit-gas-item', {\n        'edit-gas-item--selected': priorityLevel === estimateUsed,\n        'edit-gas-item--disabled': estimateGreaterThanGasUse,\n      })}\n      onClick={onOptionSelect}\n      aria-label={priorityLevel}\n      autoFocus={priorityLevel === estimateUsed}\n      disabled={estimateGreaterThanGasUse}\n      data-testid={`edit-gas-fee-item-${priorityLevel}`}\n    >\n      <span className=\"edit-gas-item__name\">\n        {\n          ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n          icon && (\n            <span\n              className={`edit-gas-item__icon edit-gas-item__icon-${priorityLevel}`}\n            >\n              {PRIORITY_LEVEL_ICON_MAP[icon]}\n            </span>\n          )\n          ///: END:ONLY_INCLUDE_IF\n        }\n        {t(title)}\n      </span>\n      <span\n        className={`edit-gas-item__time-estimate edit-gas-item__time-estimate-${priorityLevel}`}\n      >\n        {editGasMode !== EditGasModes.swaps &&\n          (minWaitTime ? toHumanReadableTime(t, minWaitTime) : '--')}\n      </span>\n      <span\n        className={`edit-gas-item__fee-estimate edit-gas-item__fee-estimate-${priorityLevel}`}\n      >\n        {hexMaximumTransactionFee ? (\n          <div className=\"edit-gas-item__maxfee\">\n            <LoadingHeartBeat\n              backgroundColor={\n                priorityLevel === estimateUsed\n                  ? 'var(--color-background-alternative)'\n                  : 'var(--color-background-default)'\n              }\n              estimateUsed={priorityLevel}\n            />\n            <UserPreferencedCurrencyDisplay\n              key=\"editGasSubTextFeeAmount\"\n              type={PRIMARY}\n              value={hexMaximumTransactionFee}\n            />\n          </div>\n        ) : (\n          '--'\n        )}\n      </span>\n      <span className=\"edit-gas-item__tooltip\" data-testid=\"gas-tooltip\">\n        <InfoTooltip\n          contentText={\n            <EditGasToolTip\n              t={t}\n              priorityLevel={priorityLevel}\n              maxFeePerGas={maxFeePerGas}\n              maxPriorityFeePerGas={maxPriorityFeePerGas}\n              editGasMode={editGasMode}\n              gasLimit={gasLimit}\n              transaction={transaction}\n              estimateGreaterThanGasUse={estimateGreaterThanGasUse}\n            />\n          }\n          position=\"top\"\n        />\n      </span>\n    </button>\n  );\n};\n\nEditGasItem.propTypes = {\n  priorityLevel: PropTypes.string,\n};\n\nexport default EditGasItem;\n","export { default } from './edit-gas-item';\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BigNumber from 'bignumber.js';\n\nimport { GasEstimateTypes } from '../../../../../../shared/constants/gas';\nimport {\n  getGasEstimateType,\n  getIsGasEstimatesLoading,\n} from '../../../../../ducks/metamask/metamask';\nimport { getGasFeeTimeEstimate } from '../../../../../store/actions';\n\nexport const useCustomTimeEstimate = ({\n  gasFeeEstimates,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n}) => {\n  const gasEstimateType = useSelector(getGasEstimateType);\n  const isGasEstimatesLoading = useSelector(getIsGasEstimatesLoading);\n\n  const [customEstimatedTime, setCustomEstimatedTime] = useState(null);\n\n  const returnNoEstimates =\n    isGasEstimatesLoading ||\n    gasEstimateType !== GasEstimateTypes.feeMarket ||\n    !maxPriorityFeePerGas;\n\n  // If the user has chosen a value lower than the low gas fee estimate,\n  // We'll need to use the useEffect hook below to make a call to calculate\n  // the time to show\n  const isUnknownLow =\n    gasFeeEstimates?.low &&\n    Number(maxPriorityFeePerGas) <\n      Number(gasFeeEstimates.low.suggestedMaxPriorityFeePerGas);\n\n  useEffect(() => {\n    if (\n      isGasEstimatesLoading ||\n      gasEstimateType !== GasEstimateTypes.feeMarket ||\n      !maxPriorityFeePerGas\n    ) {\n      return;\n    }\n    if (isUnknownLow) {\n      // getGasFeeTimeEstimate requires parameters in string format\n      getGasFeeTimeEstimate(\n        new BigNumber(maxPriorityFeePerGas, 10).toString(10),\n        new BigNumber(maxFeePerGas, 10).toString(10),\n      ).then((result) => {\n        setCustomEstimatedTime(result);\n      });\n    }\n  }, [\n    gasEstimateType,\n    isUnknownLow,\n    isGasEstimatesLoading,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    returnNoEstimates,\n  ]);\n\n  if (returnNoEstimates) {\n    return {};\n  }\n\n  let waitTimeEstimate = '';\n\n  if (\n    isUnknownLow &&\n    customEstimatedTime &&\n    customEstimatedTime !== 'unknown' &&\n    customEstimatedTime?.upperTimeBound !== 'unknown'\n  ) {\n    waitTimeEstimate = Number(customEstimatedTime?.upperTimeBound);\n  } else if (\n    Number(maxPriorityFeePerGas) >=\n    Number(gasFeeEstimates?.medium?.suggestedMaxPriorityFeePerGas)\n  ) {\n    waitTimeEstimate = gasFeeEstimates?.high?.minWaitTimeEstimate;\n  } else {\n    waitTimeEstimate = gasFeeEstimates?.low?.maxWaitTimeEstimate;\n  }\n\n  return { waitTimeEstimate };\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  EditGasModes,\n  PriorityLevels,\n} from '../../../../../../shared/constants/gas';\nimport { getMaximumGasTotalInHexWei } from '../../../../../../shared/modules/gas.utils';\nimport {\n  addTenPercentAndRound,\n  gasEstimateGreaterThanGasUsedPlusTenPercent,\n} from '../../../../../helpers/utils/gas';\nimport { getAdvancedGasFeeValues } from '../../../../../selectors';\nimport { useGasFeeContext } from '../../../../../contexts/gasFee';\nimport {\n  decGWEIToHexWEI,\n  decimalToHex,\n  hexWEIToDecGWEI,\n} from '../../../../../../shared/modules/conversion.utils';\nimport { useCustomTimeEstimate } from './useCustomTimeEstimate';\n\nexport const useGasItemFeeDetails = (priorityLevel) => {\n  const {\n    editGasMode,\n    estimateUsed,\n    gasFeeEstimates,\n    gasLimit,\n    maxFeePerGas: maxFeePerGasValue,\n    maxPriorityFeePerGas: maxPriorityFeePerGasValue,\n    transaction,\n  } = useGasFeeContext();\n  const [estimateGreaterThanGasUse, setEstimateGreaterThanGasUse] =\n    useState(false);\n  const advancedGasFeeValues = useSelector(getAdvancedGasFeeValues);\n\n  let maxFeePerGas;\n  let maxPriorityFeePerGas;\n  let minWaitTime;\n\n  const { dappSuggestedGasFees } = transaction;\n\n  if (gasFeeEstimates?.[priorityLevel]) {\n    maxFeePerGas = gasFeeEstimates[priorityLevel].suggestedMaxFeePerGas;\n    maxPriorityFeePerGas =\n      gasFeeEstimates[priorityLevel].suggestedMaxPriorityFeePerGas;\n  } else if (\n    priorityLevel === PriorityLevels.dAppSuggested &&\n    dappSuggestedGasFees\n  ) {\n    maxFeePerGas = hexWEIToDecGWEI(\n      dappSuggestedGasFees.maxFeePerGas || dappSuggestedGasFees.gasPrice,\n    );\n    maxPriorityFeePerGas = hexWEIToDecGWEI(\n      dappSuggestedGasFees.maxPriorityFeePerGas || maxFeePerGas,\n    );\n  } else if (priorityLevel === PriorityLevels.custom) {\n    if (estimateUsed === PriorityLevels.custom) {\n      maxFeePerGas = maxFeePerGasValue;\n      maxPriorityFeePerGas = maxPriorityFeePerGasValue;\n    } else if (advancedGasFeeValues && editGasMode !== EditGasModes.swaps) {\n      maxFeePerGas = advancedGasFeeValues.maxBaseFee;\n      maxPriorityFeePerGas = advancedGasFeeValues.priorityFee;\n    }\n  } else if (\n    priorityLevel === PriorityLevels.tenPercentIncreased &&\n    transaction.previousGas\n  ) {\n    maxFeePerGas = hexWEIToDecGWEI(\n      addTenPercentAndRound(transaction.previousGas?.maxFeePerGas),\n    );\n    maxPriorityFeePerGas = hexWEIToDecGWEI(\n      addTenPercentAndRound(transaction.previousGas?.maxPriorityFeePerGas),\n    );\n  }\n\n  const { waitTimeEstimate } = useCustomTimeEstimate({\n    gasFeeEstimates,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n  });\n\n  if (gasFeeEstimates?.[priorityLevel]) {\n    minWaitTime =\n      priorityLevel === PriorityLevels.high\n        ? gasFeeEstimates?.high.minWaitTimeEstimate\n        : gasFeeEstimates?.low.maxWaitTimeEstimate;\n  } else {\n    minWaitTime = waitTimeEstimate;\n  }\n\n  const hexMaximumTransactionFee = maxFeePerGas\n    ? getMaximumGasTotalInHexWei({\n        gasLimit: decimalToHex(gasLimit),\n        maxFeePerGas: decGWEIToHexWEI(maxFeePerGas),\n      })\n    : null;\n\n  useEffect(() => {\n    // For cancel and speed-up medium / high option is disabled if\n    // gas used in transaction + 10% is greater tham estimate\n    if (\n      (editGasMode === EditGasModes.cancel ||\n        editGasMode === EditGasModes.speedUp) &&\n      (priorityLevel === PriorityLevels.medium ||\n        priorityLevel === PriorityLevels.high)\n    ) {\n      const estimateGreater = !gasEstimateGreaterThanGasUsedPlusTenPercent(\n        transaction.previousGas || transaction.txParams,\n        gasFeeEstimates,\n        priorityLevel,\n      );\n      setEstimateGreaterThanGasUse(estimateGreater);\n    }\n  }, [editGasMode, gasFeeEstimates, priorityLevel, transaction]);\n\n  return {\n    estimateGreaterThanGasUse,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    minWaitTime,\n    hexMaximumTransactionFee,\n  };\n};\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EditGasModes,\n  PriorityLevels,\n} from '../../../../../../shared/constants/gas';\nimport {\n  FontWeight,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { isMetamaskSuggestedGasEstimate } from '../../../../../helpers/utils/gas';\nimport { roundToDecimalPlacesRemovingExtraZeroes } from '../../../../../helpers/utils/util';\nimport { Text } from '../../../../../components/component-library';\n\nconst EditGasToolTip = ({\n  editGasMode,\n  estimateGreaterThanGasUse,\n  gasLimit,\n  priorityLevel,\n  // maxFeePerGas & maxPriorityFeePerGas are derived from conditional logic\n  // related to the source of the estimates. We pass these values from the\n  // the parent component (edit-gas-item) rather than recalculate them\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  transaction,\n  t,\n}) => {\n  const toolTipMessage = useMemo(() => {\n    switch (priorityLevel) {\n      case PriorityLevels.low:\n        return t('lowGasSettingToolTipMessage', [\n          <span key={priorityLevel}>\n            <b>{t('low')}</b>\n          </span>,\n        ]);\n      case PriorityLevels.medium:\n        if (estimateGreaterThanGasUse) {\n          return t('disabledGasOptionToolTipMessage', [\n            <span key={`disabled-priority-level-${priorityLevel}`}>\n              {t(priorityLevel)}\n            </span>,\n          ]);\n        }\n        return t('mediumGasSettingToolTipMessage', [\n          <span key={priorityLevel}>\n            <b>{t('medium')}</b>\n          </span>,\n        ]);\n      case PriorityLevels.high:\n        if (estimateGreaterThanGasUse) {\n          return t('disabledGasOptionToolTipMessage', [\n            <span key={`disabled-priority-level-${priorityLevel}`}>\n              {t(priorityLevel)}\n            </span>,\n          ]);\n        }\n        if (editGasMode === EditGasModes.swaps) {\n          return t('swapSuggestedGasSettingToolTipMessage');\n        }\n        return t('highGasSettingToolTipMessage', [\n          <span key={priorityLevel}>\n            <b>{t('high')}</b>\n          </span>,\n        ]);\n      case PriorityLevels.custom:\n        return t('customGasSettingToolTipMessage', [\n          <span key={priorityLevel}>\n            <b>{t('custom')}</b>\n          </span>,\n        ]);\n      case PriorityLevels.dAppSuggested:\n        return transaction?.origin\n          ? t('dappSuggestedGasSettingToolTipMessage', [\n              <span key={transaction?.origin}>{transaction?.origin}</span>,\n            ])\n          : null;\n      default:\n        return '';\n    }\n  }, [editGasMode, estimateGreaterThanGasUse, priorityLevel, transaction, t]);\n\n  let imgAltText;\n  if (priorityLevel === PriorityLevels.low) {\n    imgAltText = t('curveLowGasEstimate');\n  } else if (priorityLevel === PriorityLevels.medium) {\n    imgAltText = t('curveMediumGasEstimate');\n  } else if (priorityLevel === PriorityLevels.high) {\n    imgAltText = t('curveHighGasEstimate');\n  }\n\n  // Gas estimate curve is visible for low/medium/high gas estimates\n  // the curve is not visible for high estimates for swaps\n  // also it is not visible in case of cancel/speedup if the medium/high option is disabled\n  const showGasEstimateCurve =\n    isMetamaskSuggestedGasEstimate(priorityLevel) &&\n    !(\n      priorityLevel === PriorityLevels.high &&\n      editGasMode === EditGasModes.swaps\n    ) &&\n    !estimateGreaterThanGasUse;\n\n  return (\n    <div className=\"edit-gas-tooltip__container\">\n      {showGasEstimateCurve ? (\n        <img alt={imgAltText} src={`./images/curve-${priorityLevel}.svg`} />\n      ) : null}\n      {toolTipMessage && (\n        <div className=\"edit-gas-tooltip__container__message\">\n          <Text variant={TextVariant.bodySm} as=\"h6\">\n            {toolTipMessage}\n          </Text>\n        </div>\n      )}\n      {priorityLevel === PriorityLevels.custom ||\n      estimateGreaterThanGasUse ? null : (\n        <div className=\"edit-gas-tooltip__container__values\">\n          <div>\n            <Text\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              fontWeight={FontWeight.Bold}\n              className=\"edit-gas-tooltip__container__label\"\n            >\n              {t('maxBaseFee')}\n            </Text>\n            {maxFeePerGas && (\n              <Text\n                variant={TextVariant.bodySm}\n                as=\"h6\"\n                color={TextColor.textAlternative}\n                className=\"edit-gas-tooltip__container__value\"\n              >\n                {roundToDecimalPlacesRemovingExtraZeroes(maxFeePerGas, 4)}\n              </Text>\n            )}\n          </div>\n          <div>\n            <Text\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              fontWeight={FontWeight.Bold}\n              className=\"edit-gas-tooltip__container__label\"\n            >\n              {t('priorityFeeProperCase')}\n            </Text>\n            {maxPriorityFeePerGas && (\n              <Text\n                variant={TextVariant.bodySm}\n                as=\"h6\"\n                color={TextColor.textAlternative}\n                className=\"edit-gas-tooltip__container__value\"\n              >\n                {roundToDecimalPlacesRemovingExtraZeroes(\n                  maxPriorityFeePerGas,\n                  4,\n                )}\n              </Text>\n            )}\n          </div>\n          <div>\n            <Text\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              fontWeight={FontWeight.Bold}\n              className=\"edit-gas-tooltip__container__label\"\n            >\n              {t('gasLimit')}\n            </Text>\n            {gasLimit && (\n              <Text\n                variant={TextVariant.bodySm}\n                as=\"h6\"\n                color={TextColor.textAlternative}\n                className=\"edit-gas-tooltip__container__value\"\n              >\n                {roundToDecimalPlacesRemovingExtraZeroes(gasLimit, 4)}\n              </Text>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nEditGasToolTip.propTypes = {\n  estimateGreaterThanGasUse: PropTypes.bool,\n  priorityLevel: PropTypes.string,\n  maxFeePerGas: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  maxPriorityFeePerGas: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  t: PropTypes.func,\n  editGasMode: PropTypes.string,\n  gasLimit: PropTypes.number,\n  transaction: PropTypes.object,\n};\n\nexport default EditGasToolTip;\n","export { default } from './edit-gas-fee-popover';\n","export { default } from './network-statistics';\n","import React, { useContext } from 'react';\nimport {\n  FontWeight,\n  TextColor,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\nimport { isNullish } from '../../../../../helpers/utils/util';\nimport { formatGasFeeOrFeeRange } from '../../../../../helpers/utils/gas';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport { useGasFeeContext } from '../../../../../contexts/gasFee';\nimport { Text } from '../../../../../components/component-library';\nimport { BaseFeeTooltip, PriorityFeeTooltip } from './tooltips';\nimport StatusSlider from './status-slider';\n\nconst NetworkStatistics = () => {\n  const t = useContext(I18nContext);\n  const { gasFeeEstimates } = useGasFeeContext();\n  const formattedLatestBaseFee = formatGasFeeOrFeeRange(\n    gasFeeEstimates?.estimatedBaseFee,\n    {\n      precision: 0,\n    },\n  );\n  const formattedLatestPriorityFeeRange = formatGasFeeOrFeeRange(\n    gasFeeEstimates?.latestPriorityFeeRange,\n    { precision: [1, 0] },\n  );\n  const networkCongestion = gasFeeEstimates?.networkCongestion;\n\n  return (\n    <div className=\"network-statistics\">\n      <Text\n        color={TextColor.textAlternative}\n        fontWeight={FontWeight.Bold}\n        marginTop={3}\n        marginBottom={3}\n        variant={TextVariant.bodyXs}\n        as=\"h6\"\n      >\n        {t('networkStatus')}\n      </Text>\n      <div className=\"network-statistics__info\">\n        {isNullish(formattedLatestBaseFee) ? null : (\n          <div\n            className=\"network-statistics__field\"\n            data-testid=\"formatted-latest-base-fee\"\n          >\n            <BaseFeeTooltip>\n              <span className=\"network-statistics__field-data\">\n                {formattedLatestBaseFee}\n              </span>\n              <span className=\"network-statistics__field-label\">\n                {t('baseFee')}\n              </span>\n            </BaseFeeTooltip>\n          </div>\n        )}\n        {isNullish(formattedLatestPriorityFeeRange) ? null : (\n          <div\n            className=\"network-statistics__field\"\n            data-testid=\"formatted-latest-priority-fee-range\"\n          >\n            <PriorityFeeTooltip>\n              <span className=\"network-statistics__field-data\">\n                {formattedLatestPriorityFeeRange}\n              </span>\n              <span className=\"network-statistics__field-label\">\n                {t('priorityFee')}\n              </span>\n            </PriorityFeeTooltip>\n          </div>\n        )}\n        {isNullish(networkCongestion) ? null : (\n          <div className=\"network-statistics__field\">\n            <StatusSlider />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkStatistics;\n","export { default } from './status-slider';\n","import React from 'react';\n\nimport { NetworkCongestionThresholds } from '../../../../../../../shared/constants/gas';\nimport { useGasFeeContext } from '../../../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { NetworkStabilityTooltip } from '../tooltips';\n\n/* eslint-disable @metamask/design-tokens/color-no-hex */\nconst GRADIENT_COLORS = [\n  '#037DD6',\n  '#1876C8',\n  '#2D70BA',\n  '#4369AB',\n  '#57629E',\n  '#6A5D92',\n  '#805683',\n  '#9A4D71',\n  '#B44561',\n  '#C54055',\n  '#D73A49',\n];\n/* eslint-enable @metamask/design-tokens/color-no-hex */\n\nconst determineStatusInfo = (givenNetworkCongestion) => {\n  const networkCongestion = givenNetworkCongestion ?? 0.5;\n  const colorIndex = Math.round(networkCongestion * 10);\n  const color = GRADIENT_COLORS[colorIndex];\n  const sliderTickValue = colorIndex * 10;\n\n  if (networkCongestion >= NetworkCongestionThresholds.busy) {\n    return {\n      statusLabel: 'busy',\n      tooltipLabel: 'highLowercase',\n      color,\n      sliderTickValue,\n    };\n  } else if (networkCongestion >= NetworkCongestionThresholds.stable) {\n    return {\n      statusLabel: 'stable',\n      tooltipLabel: 'stableLowercase',\n      color,\n      sliderTickValue,\n    };\n  }\n  return {\n    statusLabel: 'notBusy',\n    tooltipLabel: 'lowLowercase',\n    color,\n    sliderTickValue,\n  };\n};\n\nconst StatusSlider = () => {\n  const t = useI18nContext();\n  const { gasFeeEstimates } = useGasFeeContext();\n  const statusInfo = determineStatusInfo(gasFeeEstimates.networkCongestion);\n\n  return (\n    <NetworkStabilityTooltip\n      color={statusInfo.color}\n      tooltipLabel={statusInfo.tooltipLabel}\n    >\n      <div className=\"status-slider\">\n        <div className=\"status-slider__arrow-container\">\n          <div\n            className=\"status-slider__arrow-border\"\n            style={{\n              marginLeft: `${statusInfo.sliderTickValue}%`,\n            }}\n            data-testid=\"status-slider-arrow-border\"\n          >\n            <div\n              className=\"status-slider__arrow\"\n              style={{\n                borderTopColor: statusInfo.color,\n              }}\n              data-testid=\"status-slider-arrow\"\n            />\n          </div>\n        </div>\n        <div className=\"status-slider__line\" />\n        <div\n          className=\"status-slider__label\"\n          style={{ color: statusInfo.color }}\n          data-testid=\"status-slider-label\"\n        >\n          {t(statusInfo.statusLabel)}\n        </div>\n      </div>\n    </NetworkStabilityTooltip>\n  );\n};\n\nexport default StatusSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport Box from '../../../../../components/ui/box';\nimport Tooltip from '../../../../../components/ui/tooltip';\n\nimport {\n  DISPLAY,\n  FLEX_DIRECTION,\n} from '../../../../../helpers/constants/design-system';\n\nconst NetworkStatusTooltip = ({ children, html, title }) => (\n  <Tooltip position=\"top\" html={html} title={title}>\n    <Box display={DISPLAY.FLEX} flexDirection={FLEX_DIRECTION.COLUMN}>\n      {children}\n    </Box>\n  </Tooltip>\n);\n\nNetworkStatusTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  html: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport const BaseFeeTooltip = ({ children }) => {\n  const t = useI18nContext();\n  return (\n    <NetworkStatusTooltip\n      html={t('networkStatusBaseFeeTooltip', [\n        <strong\n          key=\"base_fee_medium_estimate\"\n          className=\"network-status__tooltip-label\"\n        >\n          {t('medium')}\n        </strong>,\n        <strong\n          key=\"base_fee_high_estimate\"\n          className=\"network-status__tooltip-label\"\n        >\n          {t('high')}\n        </strong>,\n      ])}\n    >\n      {children}\n    </NetworkStatusTooltip>\n  );\n};\n\nBaseFeeTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const PriorityFeeTooltip = ({ children }) => {\n  const t = useI18nContext();\n  return (\n    <NetworkStatusTooltip title={t('networkStatusPriorityFeeTooltip')}>\n      {children}\n    </NetworkStatusTooltip>\n  );\n};\n\nPriorityFeeTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const NetworkStabilityTooltip = ({ children, color, tooltipLabel }) => {\n  const t = useI18nContext();\n\n  return (\n    <NetworkStatusTooltip\n      html={t('networkStatusStabilityFeeTooltip', [\n        <strong\n          key=\"network-status__tooltip\"\n          className=\"network-status__tooltip-label\"\n          style={{ color }}\n        >\n          {t(tooltipLabel)}\n        </strong>,\n      ])}\n    >\n      {children}\n    </NetworkStatusTooltip>\n  );\n};\n\nNetworkStabilityTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  color: PropTypes.string.isRequired,\n  tooltipLabel: PropTypes.string.isRequired,\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useGasFeeInputs } from '../../hooks/useGasFeeInputs';\nimport { txParamsAreDappSuggested } from '../../../../../shared/modules/transaction.utils';\nimport {\n  EditGasModes,\n  GAS_LIMITS,\n  CUSTOM_GAS_ESTIMATE,\n  GasRecommendations,\n} from '../../../../../shared/constants/gas';\n\nimport {\n  Modal,\n  ModalOverlay,\n  Button,\n  ButtonVariant,\n  ButtonSize,\n} from '../../../../components/component-library';\nimport { ModalContent } from '../../../../components/component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../../components/component-library/modal-header/deprecated';\nimport EditGasDisplay from '../edit-gas-display';\n\nimport { I18nContext } from '../../../../contexts/i18n';\nimport {\n  createCancelTransaction,\n  createSpeedUpTransaction,\n  hideModal,\n  updateTransactionGasFees,\n  hideLoadingIndication,\n  showLoadingIndication,\n} from '../../../../store/actions';\nimport LoadingHeartBeat from '../../../../components/ui/loading-heartbeat';\nimport { useIncrementedGasFees } from '../../hooks/useIncrementedGasFees';\nimport {\n  decGWEIToHexWEI,\n  decimalToHex,\n  hexToDecimal,\n} from '../../../../../shared/modules/conversion.utils';\n\nexport default function EditGasPopover({\n  popoverTitle = '',\n  confirmButtonText = '',\n  editGasDisplayProps = {},\n  transaction,\n  mode,\n  onClose,\n  minimumGasLimit = GAS_LIMITS.SIMPLE,\n}) {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n\n  const [dappSuggestedGasFeeAcknowledged, setDappSuggestedGasFeeAcknowledged] =\n    useState(false);\n\n  const minimumGasLimitDec = hexToDecimal(minimumGasLimit);\n  const updatedCustomGasSettings = useIncrementedGasFees(transaction);\n\n  let updatedTransaction = transaction;\n  if (mode === EditGasModes.speedUp || mode === EditGasModes.cancel) {\n    updatedTransaction = {\n      ...transaction,\n      userFeeLevel: CUSTOM_GAS_ESTIMATE,\n      txParams: {\n        ...transaction.txParams,\n        ...updatedCustomGasSettings,\n      },\n    };\n  }\n\n  const {\n    estimatedMinimumNative,\n    gasPrice,\n    setGasPrice,\n    gasLimit,\n    setGasLimit,\n    properGasLimit,\n    estimateToUse,\n    hasGasErrors,\n    gasErrors,\n    onManualChange,\n    balanceError,\n  } = useGasFeeInputs(\n    GasRecommendations.medium,\n    updatedTransaction,\n    minimumGasLimit,\n    mode,\n  );\n\n  const txParamsHaveBeenCustomized =\n    estimateToUse === CUSTOM_GAS_ESTIMATE ||\n    txParamsAreDappSuggested(updatedTransaction);\n\n  /**\n   * Temporary placeholder, this should be managed by the parent component but\n   * we will be extracting this component from the hard to maintain modal\n   * component. For now this is just to be able to appropriately close\n   * the modal in testing\n   */\n  const closePopover = useCallback(() => {\n    if (onClose) {\n      onClose();\n    } else {\n      dispatch(hideModal());\n    }\n  }, [onClose, dispatch]);\n\n  const onSubmit = useCallback(async () => {\n    if (!updatedTransaction || !mode) {\n      closePopover();\n    }\n\n    const newGasSettings = {\n      gas: decimalToHex(gasLimit),\n      gasLimit: decimalToHex(gasLimit),\n      estimateUsed: estimateToUse,\n      gasPrice: decGWEIToHexWEI(gasPrice),\n    };\n\n    const cleanTransactionParams = { ...updatedTransaction.txParams };\n\n    const updatedTxMeta = {\n      ...updatedTransaction,\n      userEditedGasLimit: gasLimit !== Number(transaction.originalGasEstimate),\n      userFeeLevel: estimateToUse || CUSTOM_GAS_ESTIMATE,\n      txParams: {\n        ...cleanTransactionParams,\n        ...newGasSettings,\n      },\n    };\n\n    switch (mode) {\n      case EditGasModes.cancel:\n        dispatch(\n          createCancelTransaction(updatedTransaction.id, newGasSettings),\n        );\n        break;\n      case EditGasModes.speedUp:\n        dispatch(\n          createSpeedUpTransaction(updatedTransaction.id, newGasSettings),\n        );\n        break;\n      case EditGasModes.modifyInPlace:\n        newGasSettings.userEditedGasLimit = updatedTxMeta.userEditedGasLimit;\n        newGasSettings.userFeeLevel = updatedTxMeta.userFeeLevel;\n\n        dispatch(showLoadingIndication());\n        await dispatch(\n          updateTransactionGasFees(updatedTxMeta.id, newGasSettings),\n        );\n        dispatch(hideLoadingIndication());\n        break;\n      default:\n        break;\n    }\n\n    closePopover();\n  }, [\n    updatedTransaction,\n    mode,\n    dispatch,\n    closePopover,\n    gasLimit,\n    gasPrice,\n    transaction.originalGasEstimate,\n    estimateToUse,\n  ]);\n\n  let title = t('editGasTitle');\n  if (popoverTitle) {\n    title = popoverTitle;\n  } else if (mode === EditGasModes.speedUp) {\n    title = t('speedUpPopoverTitle');\n  } else if (mode === EditGasModes.cancel) {\n    title = t('cancelPopoverTitle');\n  }\n\n  const footerButtonText = confirmButtonText || t('save');\n  return (\n    <Modal isOpen onClose={closePopover}>\n      <ModalOverlay />\n      <ModalContent autoFocus={false} className=\"edit-gas-popover\">\n        <ModalHeader onClose={closePopover} marginBottom={4}>\n          {title}\n        </ModalHeader>\n        <div className=\"edit-gas-popover__edit-gas-display\">\n          {process.env.IN_TEST ? null : <LoadingHeartBeat />}\n          <EditGasDisplay\n            dappSuggestedGasFeeAcknowledged={dappSuggestedGasFeeAcknowledged}\n            setDappSuggestedGasFeeAcknowledged={\n              setDappSuggestedGasFeeAcknowledged\n            }\n            estimatedMinimumNative={estimatedMinimumNative}\n            gasPrice={gasPrice}\n            setGasPrice={setGasPrice}\n            gasLimit={gasLimit}\n            setGasLimit={setGasLimit}\n            properGasLimit={properGasLimit}\n            mode={mode}\n            transaction={updatedTransaction}\n            onManualChange={onManualChange}\n            minimumGasLimit={minimumGasLimitDec}\n            balanceError={balanceError}\n            txParamsHaveBeenCustomized={txParamsHaveBeenCustomized}\n            gasErrors={gasErrors}\n            {...editGasDisplayProps}\n          />\n        </div>\n        <Button\n          block\n          variant={ButtonVariant.Primary}\n          size={ButtonSize.LG}\n          marginTop={4}\n          onClick={onSubmit}\n          disabled={hasGasErrors || balanceError || !txParamsHaveBeenCustomized}\n        >\n          {footerButtonText}\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nEditGasPopover.propTypes = {\n  popoverTitle: PropTypes.string,\n  editGasDisplayProps: PropTypes.object,\n  confirmButtonText: PropTypes.string,\n  onClose: PropTypes.func,\n  transaction: PropTypes.object,\n  mode: PropTypes.oneOf(Object.values(EditGasModes)),\n  minimumGasLimit: PropTypes.string,\n};\n","export { default } from './edit-gas-popover.component';\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  Size,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Box,\n  Button,\n  ButtonVariant,\n  IconName,\n  Text,\n} from '../../../../components/component-library';\nimport TransactionDetailItem from '../transaction-detail-item/transaction-detail-item.component';\nimport { getPreferences, getShouldShowFiat } from '../../../../selectors';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport LoadingHeartBeat from '../../../../components/ui/loading-heartbeat';\nimport UserPreferencedCurrencyDisplay from '../../../../components/app/user-preferenced-currency-display/user-preferenced-currency-display.component';\nimport { PRIMARY, SECONDARY } from '../../../../helpers/constants/common';\nimport { addHexes } from '../../../../../shared/modules/conversion.utils';\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\n\nexport default function FeeDetailsComponent({\n  txData,\n  useCurrencyRateCheck,\n  hideGasDetails = false,\n}) {\n  const layer1GasFee = txData?.layer1GasFee ?? null;\n  const [expandFeeDetails, setExpandFeeDetails] = useState(false);\n  const shouldShowFiat = useSelector(getShouldShowFiat);\n\n  const { useNativeCurrencyAsPrimaryCurrency } = useSelector(getPreferences);\n\n  const t = useI18nContext();\n\n  const { minimumCostInHexWei: hexMinimumTransactionFee } = useGasFeeContext();\n\n  const getTransactionFeeTotal = useMemo(() => {\n    return addHexes(hexMinimumTransactionFee, layer1GasFee ?? 0);\n  }, [hexMinimumTransactionFee, layer1GasFee]);\n\n  const renderTotalDetailText = useCallback(\n    (value) => {\n      return (\n        <div className=\"confirm-page-container-content__total-value\">\n          <LoadingHeartBeat estimateUsed={txData?.userFeeLevel} />\n          {shouldShowFiat && (\n            <UserPreferencedCurrencyDisplay\n              type={SECONDARY}\n              key=\"total-detail-text\"\n              value={value}\n              suffixProps={{\n                color: TextColor.textAlternative,\n                variant: TextVariant.bodySmBold,\n              }}\n              textProps={{\n                color: TextColor.textAlternative,\n                variant: TextVariant.bodySmBold,\n              }}\n              hideLabel={Boolean(useNativeCurrencyAsPrimaryCurrency)}\n            />\n          )}\n        </div>\n      );\n    },\n    [txData, useNativeCurrencyAsPrimaryCurrency],\n  );\n\n  const renderTotalDetailValue = useCallback(\n    (value) => {\n      return (\n        <Box className=\"confirm-page-container-content__total-value\">\n          <LoadingHeartBeat estimateUsed={txData?.userFeeLevel} />\n          {shouldShowFiat && (\n            <UserPreferencedCurrencyDisplay\n              type={PRIMARY}\n              key=\"total-detail-value\"\n              value={value}\n              suffixProps={{\n                color: TextColor.textAlternative,\n                variant: TextVariant.bodySm,\n              }}\n              textProps={{\n                color: TextColor.textAlternative,\n                variant: TextVariant.bodySm,\n              }}\n              hideLabel={!useNativeCurrencyAsPrimaryCurrency}\n            />\n          )}\n        </Box>\n      );\n    },\n    [txData, useNativeCurrencyAsPrimaryCurrency],\n  );\n\n  const hasLayer1GasFee = layer1GasFee !== null;\n\n  return (\n    <>\n      <Box\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.center}\n        flexDirection={FlexDirection.Column}\n      >\n        {!hideGasDetails && hasLayer1GasFee && (\n          <Box\n            paddingTop={4}\n            display={Display.Flex}\n            alignItems={AlignItems.center}\n            justifyContent={JustifyContent.center}\n          >\n            <Button\n              style={{ textDecoration: 'none' }}\n              size={Size.Xs}\n              variant={ButtonVariant.Link}\n              endIconName={\n                expandFeeDetails ? IconName.ArrowUp : IconName.ArrowDown\n              }\n              color={IconColor.iconAlternative}\n              data-testid=\"expand-fee-details-button\"\n              onClick={() => setExpandFeeDetails(!expandFeeDetails)}\n            >\n              <Text\n                variant={TextVariant.bodyMdMedium}\n                color={TextColor.textAlternative}\n                paddingInlineEnd={1}\n              >\n                {t('feeDetails')}\n              </Text>\n            </Button>\n          </Box>\n        )}\n      </Box>\n\n      {!hideGasDetails && expandFeeDetails && (\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          paddingTop={4}\n        >\n          {hasLayer1GasFee && (\n            <TransactionDetailItem\n              detailTitle={\n                <Text\n                  color={TextColor.textAlternative}\n                  variant={TextVariant.bodySmMedium}\n                >\n                  {t('layer2Fees')}\n                </Text>\n              }\n              detailText={\n                useCurrencyRateCheck &&\n                renderTotalDetailText(hexMinimumTransactionFee)\n              }\n              detailTotal={renderTotalDetailValue(hexMinimumTransactionFee)}\n            />\n          )}\n          {layer1GasFee && (\n            <TransactionDetailItem\n              detailTitle={\n                <Text\n                  color={TextColor.textAlternative}\n                  variant={TextVariant.bodySmMedium}\n                >\n                  {t('layer1Fees')}\n                </Text>\n              }\n              detailText={shouldShowFiat && renderTotalDetailText(layer1GasFee)}\n              detailTotal={renderTotalDetailValue(layer1GasFee)}\n            />\n          )}\n          {!hasLayer1GasFee && (\n            <TransactionDetailItem\n              detailTitle={t('total')}\n              detailText={\n                shouldShowFiat && renderTotalDetailText(getTransactionFeeTotal)\n              }\n              detailTotal={renderTotalDetailValue(getTransactionFeeTotal)}\n            />\n          )}\n        </Box>\n      )}\n    </>\n  );\n}\n\nFeeDetailsComponent.propTypes = {\n  txData: PropTypes.object,\n  useCurrencyRateCheck: PropTypes.bool,\n  hideGasDetails: PropTypes.bool,\n};\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { useSelector } from 'react-redux';\nimport {\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../../components/component-library';\nimport {\n  IconColor,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { PRIMARY, SECONDARY } from '../../../../helpers/constants/common';\nimport { PriorityLevels } from '../../../../../shared/constants/gas';\nimport {\n  getPreferences,\n  getShouldShowFiat,\n  getTxData,\n  transactionFeeSelector,\n} from '../../../../selectors';\nimport { getCurrentDraftTransaction } from '../../../../ducks/send';\nimport {\n  hexWEIToDecGWEI,\n  sumHexes,\n} from '../../../../../shared/modules/conversion.utils';\nimport { useDraftTransactionWithTxParams } from '../../hooks/useDraftTransactionWithTxParams';\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nimport Box from '../../../../components/ui/box';\nimport LoadingHeartBeat from '../../../../components/ui/loading-heartbeat';\nimport EditGasFeeIcon from '../edit-gas-fee-icon/edit-gas-fee-icon';\nimport GasTiming from '../gas-timing/gas-timing.component';\nimport TransactionDetailItem from '../transaction-detail-item/transaction-detail-item.component';\nimport UserPreferencedCurrencyDisplay from '../../../../components/app/user-preferenced-currency-display';\nimport Tooltip from '../../../../components/ui/tooltip';\n\nconst GasDetailsItem = ({\n  'data-testid': dataTestId,\n  userAcknowledgedGasMissing = false,\n}) => {\n  const t = useI18nContext();\n  const shouldShowFiat = useSelector(getShouldShowFiat);\n\n  const txData = useSelector(getTxData);\n  const { layer1GasFee } = txData;\n\n  const draftTransaction = useSelector(getCurrentDraftTransaction);\n  const transactionData = useDraftTransactionWithTxParams();\n\n  const {\n    hexMinimumTransactionFee: draftHexMinimumTransactionFee,\n    hexMaximumTransactionFee: draftHexMaximumTransactionFee,\n  } = useSelector((state) => transactionFeeSelector(state, transactionData));\n\n  const {\n    estimateUsed,\n    hasSimulationError,\n    isNetworkBusy,\n    maximumCostInHexWei: hexMaximumTransactionFee,\n    minimumCostInHexWei: hexMinimumTransactionFee,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    supportsEIP1559,\n  } = useGasFeeContext();\n\n  const { useNativeCurrencyAsPrimaryCurrency } = useSelector(getPreferences);\n  const getTransactionFeeTotal = useMemo(() => {\n    if (layer1GasFee) {\n      return sumHexes(hexMinimumTransactionFee, layer1GasFee);\n    }\n\n    return hexMinimumTransactionFee;\n  }, [hexMinimumTransactionFee, layer1GasFee]);\n\n  const getMaxTransactionFeeTotal = useMemo(() => {\n    if (layer1GasFee) {\n      return sumHexes(hexMaximumTransactionFee, layer1GasFee);\n    }\n\n    return hexMaximumTransactionFee;\n  }, [hexMaximumTransactionFee, layer1GasFee]);\n\n  if (hasSimulationError && !userAcknowledgedGasMissing) {\n    return null;\n  }\n\n  const maxPriorityFeePerGasToRender = (\n    maxPriorityFeePerGas ??\n    hexWEIToDecGWEI(transactionData.txParams?.maxPriorityFeePerGas ?? '0x0')\n  ).toString();\n\n  const maxFeePerGasToRender = (\n    maxFeePerGas ??\n    hexWEIToDecGWEI(transactionData.txParams?.maxFeePerGas ?? '0x0')\n  ).toString();\n\n  const detailTitle = () => {\n    if (supportsEIP1559 && isNetworkBusy) {\n      return (\n        <>\n          {t('estimatedFee')}\n          <Tooltip\n            wrapperClassName=\"gas-details-item__dangerTooltip\"\n            interactive\n            position=\"top\"\n            html={t('networkIsBusy')}\n          >\n            <Icon\n              data-testid=\"network-busy-tooltip\"\n              name={IconName.Danger}\n              size={IconSize.Sm}\n              color={IconColor.errorDefault}\n            />\n          </Tooltip>\n        </>\n      );\n    }\n    return <>{t('estimatedFee')}</>;\n  };\n  return (\n    <TransactionDetailItem\n      key=\"gas-details-item\"\n      data-testid={dataTestId}\n      detailTitle={detailTitle()}\n      detailText={\n        Object.keys(draftTransaction).length === 0 && (\n          <div\n            className=\"gas-details-item__currency-container\"\n            style={{ width: '100%' }}\n          >\n            <LoadingHeartBeat estimateUsed={estimateUsed} />\n            <EditGasFeeIcon\n              userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n            />\n            {shouldShowFiat && (\n              <UserPreferencedCurrencyDisplay\n                paddingInlineStart={1}\n                suffixProps={{\n                  variant: TextVariant.bodyMdBold,\n                }}\n                textProps={{\n                  variant: TextVariant.bodyMdBold,\n                }}\n                type={SECONDARY}\n                value={getTransactionFeeTotal}\n                hideLabel={Boolean(useNativeCurrencyAsPrimaryCurrency)}\n              />\n            )}\n          </div>\n        )\n      }\n      detailTotal={\n        <div className=\"gas-details-item__currency-container\">\n          <LoadingHeartBeat estimateUsed={estimateUsed} />\n          <UserPreferencedCurrencyDisplay\n            suffixProps={{\n              variant: TextVariant.bodyMd,\n              color: TextColor.textAlternative,\n            }}\n            textProps={{\n              variant: TextVariant.bodyMd,\n              color: TextColor.textAlternative,\n            }}\n            type={PRIMARY}\n            value={getTransactionFeeTotal || draftHexMinimumTransactionFee}\n            hideLabel={!useNativeCurrencyAsPrimaryCurrency}\n          />\n        </div>\n      }\n      hasDetailTextInSeparateRow\n      subText={\n        <>\n          <Box\n            key=\"editGasSubTextFeeLabel\"\n            display=\"inline-flex\"\n            className={classNames('gas-details-item__gasfee-label', {\n              'gas-details-item__gas-fee-warning':\n                estimateUsed === PriorityLevels.high ||\n                estimateUsed === PriorityLevels.dappSuggestedHigh,\n            })}\n          >\n            <LoadingHeartBeat estimateUsed={estimateUsed} />\n            <Box>\n              <Text\n                color={TextColor.textAlternative}\n                variant={TextVariant.bodySmMedium}\n              >\n                {(estimateUsed === PriorityLevels.high ||\n                  estimateUsed === PriorityLevels.dappSuggestedHigh) &&\n                  '⚠ '}\n                {t('editGasSubTextFeeLabel')}\n              </Text>\n            </Box>\n            <div\n              key=\"editGasSubTextFeeValue\"\n              className=\"gas-details-item__currency-container\"\n              paddingStart={1}\n            >\n              <LoadingHeartBeat estimateUsed={estimateUsed} />\n              <UserPreferencedCurrencyDisplay\n                key=\"editGasSubTextFeeAmount\"\n                suffixProps={{\n                  color: TextColor.textAlternative,\n                  variant: TextVariant.bodySm,\n                }}\n                textProps={{\n                  color: TextColor.textAlternative,\n                  variant: TextVariant.bodySm,\n                }}\n                type={PRIMARY}\n                value={\n                  getMaxTransactionFeeTotal || draftHexMaximumTransactionFee\n                }\n                hideLabel={!useNativeCurrencyAsPrimaryCurrency}\n              />\n            </div>\n          </Box>\n        </>\n      }\n      subTitle={\n        <GasTiming\n          maxPriorityFeePerGas={maxPriorityFeePerGasToRender}\n          maxFeePerGas={maxFeePerGasToRender}\n        />\n      }\n    />\n  );\n};\n\nGasDetailsItem.propTypes = {\n  'data-testid': PropTypes.string,\n  userAcknowledgedGasMissing: PropTypes.bool,\n};\n\nexport default GasDetailsItem;\n","export { default } from './gas-details-item';\n","import BigNumber from 'bignumber.js';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { GasEstimateTypes } from '../../../../../shared/constants/gas';\nimport { Box, Text } from '../../../../components/component-library';\nimport Typography from '../../../../components/ui/typography/typography';\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport {\n  getGasEstimateType,\n  getGasFeeEstimates,\n  getIsGasEstimatesLoading,\n} from '../../../../ducks/metamask/metamask';\nimport {\n  Display,\n  FlexWrap,\n  FontWeight,\n  TextColor,\n  TextVariant,\n  TypographyVariant,\n} from '../../../../helpers/constants/design-system';\nimport {\n  GAS_FORM_ERRORS,\n  PRIORITY_LEVEL_ICON_MAP,\n} from '../../../../helpers/constants/gas';\nimport { usePrevious } from '../../../../hooks/usePrevious';\nimport { getGasFeeTimeEstimate } from '../../../../store/actions';\nimport { useDraftTransactionWithTxParams } from '../../hooks/useDraftTransactionWithTxParams';\n\n// Once we reach this second threshold, we switch to minutes as a unit\nconst SECOND_CUTOFF = 90;\n\n// Shows \"seconds\" as unit of time if under SECOND_CUTOFF, otherwise \"minutes\"\nconst toHumanReadableTime = (milliseconds = 1, t) => {\n  const seconds = Math.ceil(milliseconds / 1000);\n  if (seconds <= SECOND_CUTOFF) {\n    return t('gasTimingSecondsShort', [seconds]);\n  }\n  return t('gasTimingMinutesShort', [Math.ceil(seconds / 60)]);\n};\nexport default function GasTiming({\n  maxFeePerGas = '0',\n  maxPriorityFeePerGas = '0',\n  gasWarnings,\n}) {\n  const gasEstimateType = useSelector(getGasEstimateType);\n  const gasFeeEstimates = useSelector(getGasFeeEstimates);\n  const isGasEstimatesLoading = useSelector(getIsGasEstimatesLoading);\n\n  const [customEstimatedTime, setCustomEstimatedTime] = useState(null);\n  const t = useContext(I18nContext);\n  const { estimateUsed } = useGasFeeContext();\n\n  const transactionData = useDraftTransactionWithTxParams();\n\n  // If the user has chosen a value lower than the low gas fee estimate,\n  // We'll need to use the useEffect hook below to make a call to calculate\n  // the time to show\n  const isUnknownLow =\n    gasFeeEstimates?.low &&\n    Number(maxPriorityFeePerGas) <\n      Number(gasFeeEstimates.low.suggestedMaxPriorityFeePerGas);\n\n  const previousMaxFeePerGas = usePrevious(maxFeePerGas);\n  const previousMaxPriorityFeePerGas = usePrevious(maxPriorityFeePerGas);\n  const previousIsUnknownLow = usePrevious(isUnknownLow);\n\n  useEffect(() => {\n    let isMounted = true;\n    const priority = maxPriorityFeePerGas;\n    const fee = maxFeePerGas;\n\n    if (\n      isUnknownLow ||\n      (priority && priority !== previousMaxPriorityFeePerGas) ||\n      (fee && fee !== previousMaxFeePerGas)\n    ) {\n      // getGasFeeTimeEstimate requires parameters in string format\n      getGasFeeTimeEstimate(\n        new BigNumber(priority, 10).toString(10),\n        new BigNumber(fee, 10).toString(10),\n      ).then((result) => {\n        if (\n          maxFeePerGas === fee &&\n          maxPriorityFeePerGas === priority &&\n          isMounted\n        ) {\n          setCustomEstimatedTime(result);\n        }\n      });\n    }\n\n    if (isUnknownLow !== false && previousIsUnknownLow === true) {\n      setCustomEstimatedTime(null);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    isUnknownLow,\n    previousMaxFeePerGas,\n    previousMaxPriorityFeePerGas,\n    previousIsUnknownLow,\n  ]);\n\n  if (\n    gasWarnings?.maxPriorityFee === GAS_FORM_ERRORS.MAX_PRIORITY_FEE_TOO_LOW ||\n    gasWarnings?.maxFee === GAS_FORM_ERRORS.MAX_FEE_TOO_LOW\n  ) {\n    return (\n      <Typography\n        variant={TypographyVariant.H7}\n        fontWeight={FontWeight.Bold}\n        className={classNames('gas-timing', 'gas-timing--negative')}\n      >\n        {t('editGasTooLow')}\n      </Typography>\n    );\n  }\n\n  // Don't show anything if we don't have enough information\n  if (isGasEstimatesLoading || gasEstimateType !== GasEstimateTypes.feeMarket) {\n    return null;\n  }\n\n  const { low = {}, medium = {}, high = {} } = gasFeeEstimates;\n\n  const estimateToUse =\n    estimateUsed || transactionData.userFeeLevel || 'medium';\n  const estimateEmoji = PRIORITY_LEVEL_ICON_MAP[estimateToUse];\n  let text = `${estimateEmoji} ${t(estimateToUse)}`;\n  let time = '';\n\n  if (estimateToUse === 'low') {\n    text = `${estimateEmoji} ${t('gasTimingLow')}`;\n  }\n\n  // Anything medium or faster is positive\n  if (\n    Number(maxPriorityFeePerGas) >= Number(medium.suggestedMaxPriorityFeePerGas)\n  ) {\n    // High+ is very likely, medium is likely\n    if (\n      Number(maxPriorityFeePerGas) < Number(high.suggestedMaxPriorityFeePerGas)\n    ) {\n      // Medium\n      time = toHumanReadableTime(low.maxWaitTimeEstimate, t);\n    } else {\n      // High\n      time = toHumanReadableTime(high.minWaitTimeEstimate, t);\n    }\n  } else if (isUnknownLow) {\n    // If the user has chosen a value less than our low estimate,\n    // calculate a potential wait time\n\n    // If we didn't get any useful information, show the\n    // \"unknown processing time\" message\n    if (\n      !customEstimatedTime ||\n      customEstimatedTime === 'unknown' ||\n      customEstimatedTime?.upperTimeBound === 'unknown'\n    ) {\n      text = t('editGasTooLow');\n    } else {\n      time = toHumanReadableTime(\n        Number(customEstimatedTime?.upperTimeBound),\n        t,\n      );\n    }\n  } else {\n    time = toHumanReadableTime(low.maxWaitTimeEstimate, t);\n  }\n\n  return (\n    <Box display={Display.Flex} flexWrap={FlexWrap.Wrap}>\n      <Text\n        color={TextColor.textAlternative}\n        variant={TextVariant.bodyMd}\n        paddingInlineEnd={1}\n      >\n        {text}\n      </Text>\n\n      {time && (\n        <Text variant={TextVariant.bodyMd} color={TextColor.textDefault}>\n          <span data-testid=\"gas-timing-time\">~{time}</span>\n        </Text>\n      )}\n    </Box>\n  );\n}\n\nGasTiming.propTypes = {\n  maxPriorityFeePerGas: PropTypes.string,\n  maxFeePerGas: PropTypes.string,\n  gasWarnings: PropTypes.object,\n};\n","export { default } from './ledger-instruction-field';\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEnvironmentType } from '../../../../../app/scripts/lib/util';\nimport { ENVIRONMENT_TYPE_FULLSCREEN } from '../../../../../shared/constants/app';\nimport {\n  HardwareTransportStates,\n  LEDGER_USB_VENDOR_ID,\n  LedgerTransportTypes,\n  WebHIDConnectedStatuses,\n} from '../../../../../shared/constants/hardware-wallets';\nimport {\n  getLedgerTransportStatus,\n  getLedgerWebHidConnectedStatus,\n  setLedgerTransportStatus,\n  setLedgerWebHidConnectedStatus,\n} from '../../../../ducks/app/app';\nimport { getLedgerTransportType } from '../../../../ducks/metamask/metamask';\nimport {\n  SEVERITIES,\n  TextAlign,\n  TextColor,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { attemptLedgerTransportCreation } from '../../../../store/actions';\nimport {\n  BannerAlert,\n  ButtonLink,\n  Text,\n} from '../../../../components/component-library';\n\nconst renderInstructionStep = (\n  text,\n  show = true,\n  color = TextColor.textDefault,\n) => {\n  return (\n    show && (\n      <Text color={color} as=\"h6\">\n        {text}\n      </Text>\n    )\n  );\n};\n\nexport default function LedgerInstructionField({ showDataInstruction }) {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  const webHidConnectedStatus = useSelector(getLedgerWebHidConnectedStatus);\n  const ledgerTransportType = useSelector(getLedgerTransportType);\n  const transportStatus = useSelector(getLedgerTransportStatus);\n  const environmentType = getEnvironmentType();\n  const environmentTypeIsFullScreen =\n    environmentType === ENVIRONMENT_TYPE_FULLSCREEN;\n\n  useEffect(() => {\n    const initialConnectedDeviceCheck = async () => {\n      if (\n        ledgerTransportType === LedgerTransportTypes.webhid &&\n        webHidConnectedStatus !== WebHIDConnectedStatuses.connected\n      ) {\n        const devices = await window.navigator?.hid?.getDevices();\n        const webHidIsConnected = devices?.some(\n          (device) => device.vendorId === Number(LEDGER_USB_VENDOR_ID),\n        );\n        dispatch(\n          setLedgerWebHidConnectedStatus(\n            webHidIsConnected\n              ? WebHIDConnectedStatuses.connected\n              : WebHIDConnectedStatuses.notConnected,\n          ),\n        );\n      }\n    };\n    const determineTransportStatus = async () => {\n      if (\n        ledgerTransportType === LedgerTransportTypes.webhid &&\n        webHidConnectedStatus === WebHIDConnectedStatuses.connected &&\n        transportStatus === HardwareTransportStates.none\n      ) {\n        try {\n          const transportedCreated = await attemptLedgerTransportCreation();\n          dispatch(\n            setLedgerTransportStatus(\n              transportedCreated\n                ? HardwareTransportStates.verified\n                : HardwareTransportStates.unknownFailure,\n            ),\n          );\n        } catch (e) {\n          if (e.message.match('Failed to open the device')) {\n            dispatch(\n              setLedgerTransportStatus(\n                HardwareTransportStates.deviceOpenFailure,\n              ),\n            );\n          } else if (e.message.match('the device is already open')) {\n            dispatch(\n              setLedgerTransportStatus(HardwareTransportStates.verified),\n            );\n          } else {\n            dispatch(\n              setLedgerTransportStatus(HardwareTransportStates.unknownFailure),\n            );\n          }\n        }\n      }\n    };\n    determineTransportStatus();\n    initialConnectedDeviceCheck();\n  }, [dispatch, ledgerTransportType, webHidConnectedStatus, transportStatus]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(setLedgerTransportStatus(HardwareTransportStates.none));\n    };\n  }, [dispatch]);\n\n  const usingWebHID = ledgerTransportType === LedgerTransportTypes.webhid;\n\n  return (\n    <div>\n      <div className=\"confirm-detail-row\">\n        <BannerAlert severity={SEVERITIES.INFO}>\n          <div className=\"ledger-live-dialog\">\n            {renderInstructionStep(t('ledgerConnectionInstructionHeader'))}\n            {renderInstructionStep(\n              `• ${t('ledgerConnectionInstructionStepThree')}`,\n            )}\n            {renderInstructionStep(\n              `• ${t('ledgerConnectionInstructionStepFour')}`,\n              showDataInstruction,\n            )}\n            {renderInstructionStep(\n              <span>\n                <ButtonLink\n                  textAlign={TextAlign.Left}\n                  onClick={async () => {\n                    if (environmentTypeIsFullScreen) {\n                      window.location.reload();\n                    } else {\n                      global.platform.openExtensionInBrowser(null, null, true);\n                    }\n                  }}\n                >\n                  {t('ledgerConnectionInstructionCloseOtherApps')}\n                </ButtonLink>\n              </span>,\n              transportStatus === HardwareTransportStates.deviceOpenFailure,\n            )}\n            {renderInstructionStep(\n              <span>\n                <ButtonLink\n                  textAlign={TextAlign.Left}\n                  onClick={async () => {\n                    if (environmentTypeIsFullScreen) {\n                      const connectedDevices =\n                        await window.navigator.hid.requestDevice({\n                          filters: [{ vendorId: LEDGER_USB_VENDOR_ID }],\n                        });\n                      const webHidIsConnected = connectedDevices.some(\n                        (device) =>\n                          device.vendorId === Number(LEDGER_USB_VENDOR_ID),\n                      );\n                      dispatch(\n                        setLedgerWebHidConnectedStatus({\n                          webHidConnectedStatus: webHidIsConnected\n                            ? WebHIDConnectedStatuses.connected\n                            : WebHIDConnectedStatuses.notConnected,\n                        }),\n                      );\n                    } else {\n                      global.platform.openExtensionInBrowser(null, null, true);\n                    }\n                  }}\n                >\n                  {environmentTypeIsFullScreen\n                    ? t('clickToConnectLedgerViaWebHID')\n                    : t('openFullScreenForLedgerWebHid')}\n                </ButtonLink>\n              </span>,\n              usingWebHID &&\n                webHidConnectedStatus === WebHIDConnectedStatuses.notConnected,\n              TextColor.warningDefault,\n            )}\n          </div>\n        </BannerAlert>\n      </div>\n    </div>\n  );\n}\n\nLedgerInstructionField.propTypes = {\n  // whether or not to show the data instruction\n  showDataInstruction: PropTypes.bool,\n};\n","export { default } from './multi-layer-fee-message';\n","import React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TransactionDetailItem from '../transaction-detail-item/transaction-detail-item.component';\nimport UserPreferencedCurrencyDisplay from '../../../../components/app/user-preferenced-currency-display';\nimport { SECONDARY } from '../../../../helpers/constants/common';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport { sumHexes } from '../../../../../shared/modules/conversion.utils';\nimport { EtherDenomination } from '../../../../../shared/constants/common';\nimport { Numeric } from '../../../../../shared/modules/Numeric';\nimport { getUseCurrencyRateCheck } from '../../../../selectors';\n\nexport default function MultilayerFeeMessage({\n  transaction,\n  layer2fee,\n  nativeCurrency,\n  plainStyle,\n}) {\n  const t = useContext(I18nContext);\n  const { layer1GasFee } = transaction;\n\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n\n  if (!transaction?.txParams) {\n    return null;\n  }\n\n  let layer1Total = t('unknown');\n  let feeTotalInFiat = t('unknown');\n\n  if (layer1GasFee) {\n    const layer1TotalBN = new Numeric(layer1GasFee, 16, EtherDenomination.WEI);\n    layer1Total = `${layer1TotalBN\n      .toDenomination(EtherDenomination.ETH)\n      .toFixed(12)} ${nativeCurrency}`;\n\n    feeTotalInFiat = useCurrencyRateCheck ? (\n      <UserPreferencedCurrencyDisplay\n        type={SECONDARY}\n        value={layer1GasFee}\n        showFiat\n        hideLabel\n      />\n    ) : null;\n  }\n\n  const totalInWeiHex = sumHexes(\n    layer2fee || '0x0',\n    layer1GasFee || '0x0',\n    transaction?.txParams?.value || '0x0',\n  );\n\n  const totalBN = new Numeric(totalInWeiHex, 16, EtherDenomination.WEI);\n  const totalInEth = `${totalBN\n    .toDenomination(EtherDenomination.ETH)\n    .toFixed(12)} ${nativeCurrency}`;\n\n  const totalInFiat = useCurrencyRateCheck ? (\n    <UserPreferencedCurrencyDisplay\n      type={SECONDARY}\n      value={totalInWeiHex}\n      showFiat\n      hideLabel\n    />\n  ) : null;\n\n  return (\n    <div className=\"multi-layer-fee-message\">\n      <TransactionDetailItem\n        key=\"multi-layer-fee-message-total-item-gas-fee\"\n        detailTitle={t('layer1Fees')}\n        detailTotal={layer1Total}\n        detailText={useCurrencyRateCheck && feeTotalInFiat}\n        noBold={plainStyle}\n        flexWidthValues={plainStyle}\n      />\n      <TransactionDetailItem\n        className=\"multi-layer-fee-message__transaction-detail-item__total-item\"\n        key=\"multi-layer-fee-message-total-item-total\"\n        detailTitle={t('total')}\n        detailTotal={totalInEth}\n        detailText={totalInFiat}\n        subTitle={t('transactionDetailMultiLayerTotalSubtitle')}\n        noBold={plainStyle}\n        flexWidthValues={plainStyle}\n      />\n    </div>\n  );\n}\n\nMultilayerFeeMessage.propTypes = {\n  transaction: PropTypes.object,\n  layer2fee: PropTypes.string,\n  nativeCurrency: PropTypes.string,\n  plainStyle: PropTypes.bool,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport Tooltip from '../../../../components/ui/tooltip';\nimport {\n  ButtonLink,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n  Box,\n} from '../../../../components/component-library';\n\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  TextVariant,\n  TextAlign,\n  Size,\n  BackgroundColor,\n  TextColor,\n  IconColor,\n} from '../../../../helpers/constants/design-system';\nimport { Numeric } from '../../../../../shared/modules/Numeric';\n\nexport default function ReviewSpendingCap({\n  tokenName,\n  currentTokenBalance,\n  tokenValue,\n  onEdit,\n}) {\n  const t = useContext(I18nContext);\n  const valueIsGreaterThanBalance = new Numeric(\n    Number(tokenValue),\n    10,\n  ).greaterThan(Number(currentTokenBalance), 10);\n\n  return (\n    <Box\n      className=\"review-spending-cap\"\n      borderRadius={Size.SM}\n      paddingTop={4}\n      paddingRight={4}\n      paddingLeft={4}\n      display={Display.Flex}\n      alignItems={AlignItems.flexStart}\n      flexDirection={FlexDirection.Column}\n      backgroundColor={BackgroundColor.backgroundAlternative}\n      gap={1}\n    >\n      <Box\n        flexDirection={FlexDirection.Row}\n        display={Display.Flex}\n        alignItems={AlignItems.center}\n        className=\"review-spending-cap__heading\"\n      >\n        <Box\n          flexDirection={FlexDirection.Row}\n          className=\"review-spending-cap__heading-title\"\n        >\n          <Text\n            variant={TextVariant.bodySmBold}\n            as=\"h6\"\n            display={Display.InlineBlock}\n          >\n            {t('dappRequestedSpendingCap')}\n          </Text>\n          <Box marginLeft={2} display={Display.InlineBlock}>\n            <Tooltip\n              interactive\n              position=\"top\"\n              html={\n                <Text\n                  variant={TextVariant.bodySmBold}\n                  as=\"h6\"\n                  color={TextColor.textAlternative}\n                  className=\"review-spending-cap__heading-title__tooltip\"\n                >\n                  {valueIsGreaterThanBalance &&\n                    t('warningTooltipText', [\n                      <Text\n                        key=\"tooltip-text\"\n                        variant={TextVariant.bodySmBold}\n                        as=\"h6\"\n                        color={TextColor.errorDefault}\n                      >\n                        <Icon\n                          name={IconName.Warning}\n                          style={{ verticalAlign: 'middle' }}\n                        />\n                        {t('beCareful')}\n                      </Text>,\n                    ])}\n                  {Number(tokenValue) === 0 &&\n                    t('revokeSpendingCapTooltipText')}\n                </Text>\n              }\n            >\n              {valueIsGreaterThanBalance && (\n                <Icon\n                  className=\"review-spending-cap__heading-title__tooltip__warning-icon\"\n                  name={IconName.Danger}\n                  color={IconColor.errorDefault}\n                  size={IconSize.Sm}\n                  style={{ verticalAlign: 'middle' }}\n                />\n              )}\n              {Number(tokenValue) === 0 && (\n                <Icon\n                  className=\"review-spending-cap__heading-title__tooltip__question-icon\"\n                  name={IconName.Question}\n                  color={IconColor.iconDefault}\n                />\n              )}\n            </Tooltip>\n          </Box>\n        </Box>\n        <Box\n          className=\"review-spending-cap__heading-detail\"\n          textAlign={TextAlign.End}\n        >\n          <ButtonLink\n            size={Size.auto}\n            onClick={(e) => {\n              e.preventDefault();\n              onEdit();\n            }}\n          >\n            {t('edit')}\n          </ButtonLink>\n        </Box>\n      </Box>\n      <Box className=\"review-spending-cap__value\">\n        <Text\n          color={\n            valueIsGreaterThanBalance\n              ? TextColor.errorDefault\n              : TextColor.textDefault\n          }\n          variant={TextVariant.bodySmBold}\n          as=\"h6\"\n          marginBottom={3}\n        >\n          {tokenValue} {tokenName}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n\nReviewSpendingCap.propTypes = {\n  tokenName: PropTypes.string,\n  currentTokenBalance: PropTypes.string,\n  tokenValue: PropTypes.string,\n  onEdit: PropTypes.func,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { captureException } from '@sentry/browser';\nimport BlockaidPackage from '@blockaid/ppom_release/package.json';\n\nimport { useSelector } from 'react-redux';\nimport { NETWORK_TO_NAME_MAP } from '../../../../../../shared/constants/network';\nimport { OverflowWrap } from '../../../../../helpers/constants/design-system';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport {\n  BlockaidReason,\n  BlockaidResultType,\n  SecurityProvider,\n} from '../../../../../../shared/constants/security-provider';\nimport {\n  BannerAlertSeverity,\n  Text,\n} from '../../../../../components/component-library';\nimport { useTransactionEventFragment } from '../../../hooks/useTransactionEventFragment';\n\nimport SecurityProviderBannerAlert from '../security-provider-banner-alert';\nimport LoadingIndicator from '../../../../../components/ui/loading-indicator';\nimport { getCurrentChainId } from '../../../../../selectors';\nimport { getReportUrl } from './blockaid-banner-utils';\n\nconst zlib = require('zlib');\n\n/** Reason to description translation key mapping. Grouped by translations. */\nexport const REASON_TO_DESCRIPTION_TKEY = Object.freeze({\n  [BlockaidReason.approvalFarming]: 'blockaidDescriptionApproveFarming',\n  [BlockaidReason.permitFarming]: 'blockaidDescriptionApproveFarming',\n  [BlockaidReason.setApprovalForAll]: 'blockaidDescriptionApproveFarming',\n\n  [BlockaidReason.blurFarming]: 'blockaidDescriptionBlurFarming',\n\n  [BlockaidReason.errored]: 'blockaidDescriptionErrored', // TODO: change in i8n\n\n  [BlockaidReason.seaportFarming]: 'blockaidDescriptionSeaportFarming',\n\n  [BlockaidReason.maliciousDomain]: 'blockaidDescriptionMaliciousDomain',\n\n  [BlockaidReason.rawSignatureFarming]: 'blockaidDescriptionMightLoseAssets',\n  [BlockaidReason.tradeOrderFarming]: 'blockaidDescriptionMightLoseAssets',\n\n  [BlockaidReason.rawNativeTokenTransfer]: 'blockaidDescriptionTransferFarming',\n  [BlockaidReason.transferFarming]: 'blockaidDescriptionTransferFarming',\n  [BlockaidReason.transferFromFarming]: 'blockaidDescriptionTransferFarming',\n\n  [BlockaidReason.other]: 'blockaidDescriptionMightLoseAssets',\n});\n\n/** Reason to title translation key mapping. */\nexport const REASON_TO_TITLE_TKEY = Object.freeze({\n  [BlockaidReason.errored]: 'blockaidTitleMayNotBeSafe',\n  [BlockaidReason.rawSignatureFarming]: 'blockaidTitleSuspicious',\n});\n\nfunction BlockaidBannerAlert({ txData, ...props }) {\n  const { securityAlertResponse, origin, msgParams, type, txParams, chainId } =\n    txData;\n\n  const selectorChainId = useSelector(getCurrentChainId);\n\n  const t = useContext(I18nContext);\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n\n  if (\n    !securityAlertResponse ||\n    Object.keys(securityAlertResponse).length === 0\n  ) {\n    return null;\n  } else if (securityAlertResponse.result_type === BlockaidResultType.Loading) {\n    return (\n      <LoadingIndicator\n        isLoading\n        style={{ position: 'relative', flex: '0 0 auto', margin: '8px auto 0' }}\n      />\n    );\n  }\n\n  const {\n    block,\n    features,\n    reason,\n    result_type: resultType,\n  } = securityAlertResponse;\n\n  let title, description;\n  if (resultType === BlockaidResultType.Benign) {\n    return null;\n  } else if (resultType === BlockaidResultType.Warning) {\n    // When `result_type` is `Warning`, the `reason` is no longer relevant for\n    // determining the copy. This is because Blockaid has lower certainty when\n    // they flag something as warning so that requires a softer and broader\n    // message than the ones we use when `result_type` is `Malicious` or\n    // `Error`.\n\n    title = t(REASON_TO_TITLE_TKEY[BlockaidReason.errored]);\n    description = t('blockaidDescriptionWarning');\n  } else {\n    if (!REASON_TO_DESCRIPTION_TKEY[reason]) {\n      captureException(`BlockaidBannerAlert: Unidentified reason '${reason}'`);\n    }\n\n    title = t(REASON_TO_TITLE_TKEY[reason] || 'blockaidTitleDeceptive');\n    description = t(\n      REASON_TO_DESCRIPTION_TKEY[reason] || REASON_TO_DESCRIPTION_TKEY.other,\n    );\n  }\n\n  const details = features?.length ? (\n    <Text as=\"ul\" overflowWrap={OverflowWrap.BreakWord}>\n      {features.map((feature, i) => (\n        <li key={`blockaid-detail-${i}`}>• {feature}</li>\n      ))}\n    </Text>\n  ) : null;\n\n  const isFailedResultType = resultType === BlockaidResultType.Errored;\n\n  // On the banner colors:\n  // Malicious -> red\n  // Error and Warning -> orange\n  const severity =\n    resultType === BlockaidResultType.Malicious\n      ? BannerAlertSeverity.Danger\n      : BannerAlertSeverity.Warning;\n\n  /** Data we pass to Blockaid false reporting portal. As far as I know, there are no documents that exist that specifies these key values */\n  const reportUrl = (() => {\n    const reportData = {\n      blockNumber: block,\n      blockaidVersion: BlockaidPackage.version,\n      chain: NETWORK_TO_NAME_MAP[chainId ?? selectorChainId],\n      classification: isFailedResultType ? 'error' : reason,\n      domain: origin ?? msgParams?.origin ?? txParams?.origin,\n      jsonRpcMethod: type,\n      jsonRpcParams: JSON.stringify(txParams ?? msgParams),\n      resultType: isFailedResultType ? BlockaidResultType.Errored : resultType,\n      reproduce: JSON.stringify(features),\n    };\n\n    const jsonData = JSON.stringify(reportData);\n\n    const encodedData = zlib?.gzipSync?.(jsonData) ?? jsonData;\n\n    return getReportUrl(encodedData);\n  })();\n\n  const onClickSupportLink = () => {\n    updateTransactionEventFragment(\n      {\n        properties: {\n          external_link_clicked: 'security_alert_support_link',\n        },\n      },\n      txData.id,\n    );\n  };\n\n  return (\n    <SecurityProviderBannerAlert\n      description={description}\n      details={details}\n      provider={SecurityProvider.Blockaid}\n      reportUrl={reportUrl}\n      severity={severity}\n      title={title}\n      onClickSupportLink={onClickSupportLink}\n      {...props}\n    />\n  );\n}\n\nBlockaidBannerAlert.propTypes = {\n  txData: PropTypes.object,\n};\n\nexport default BlockaidBannerAlert;\n","import {\n  FALSE_POSITIVE_REPORT_BASE_URL,\n  SECURITY_PROVIDER_UTM_SOURCE,\n} from '../../../../../../shared/constants/security-provider';\n\nexport const getReportUrl = (encodedData) => {\n  return `${FALSE_POSITIVE_REPORT_BASE_URL}?data=${encodeURIComponent(\n    encodedData.toString('base64'),\n  )}&utm_source=${SECURITY_PROVIDER_UTM_SOURCE}`;\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BannerAlert,\n  Box,\n  ButtonLink,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../../components/component-library';\nimport Disclosure from '../../../../components/ui/disclosure';\nimport { DisclosureVariant } from '../../../../components/ui/disclosure/disclosure.constants';\n\nimport { I18nContext } from '../../../../contexts/i18n';\nimport {\n  AlignItems,\n  Color,\n  Display,\n  IconColor,\n  Severity,\n  Size,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\n\nimport {\n  SecurityProvider,\n  SECURITY_PROVIDER_CONFIG,\n} from '../../../../../shared/constants/security-provider';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\n\nfunction SecurityProviderBannerAlert({\n  description,\n  details,\n  onClickSupportLink,\n  provider,\n  severity,\n  title,\n  reportUrl,\n  ...props\n}) {\n  const t = useContext(I18nContext);\n\n  return (\n    <BannerAlert\n      data-testid=\"security-provider-banner-alert\"\n      title={title}\n      severity={severity}\n      {...props}\n    >\n      <Text marginTop={2}>{description}</Text>\n\n      <Box marginTop={3}>\n        <Disclosure title={t('seeDetails')} variant={DisclosureVariant.Arrow}>\n          {details}\n          <Text marginTop={3} display={Display.Flex}>\n            {t('somethingDoesntLookRight', [\n              <ButtonLink\n                key={`security-provider-button-supporturl-${provider}`}\n                size={Size.inherit}\n                href={reportUrl || ZENDESK_URLS.SUPPORT_URL}\n                externalLink\n                onClick={onClickSupportLink}\n              >\n                {t('reportIssue')}\n              </ButtonLink>,\n            ])}\n          </Text>\n        </Disclosure>\n      </Box>\n\n      {provider && (\n        <Text\n          marginTop={3}\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          color={Color.textAlternative}\n          variant={TextVariant.bodySm}\n        >\n          <Icon\n            className=\"disclosure__summary--icon\"\n            color={IconColor.primaryDefault}\n            name={IconName.SecurityTick}\n            size={IconSize.Sm}\n            marginInlineEnd={1}\n          />\n          {t('securityProviderPoweredBy', [\n            <ButtonLink\n              key={`security-provider-button-link-${provider}`}\n              size={Size.inherit}\n              href={SECURITY_PROVIDER_CONFIG[provider].url}\n              externalLink\n            >\n              {t(SECURITY_PROVIDER_CONFIG[provider].tKeyName)}\n            </ButtonLink>,\n          ])}\n        </Text>\n      )}\n    </BannerAlert>\n  );\n}\n\nSecurityProviderBannerAlert.propTypes = {\n  /** Description content that may be plain text or contain hyperlinks */\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    .isRequired,\n\n  /** Severity level */\n  severity: PropTypes.oneOf([Severity.Danger, Severity.Warning]).isRequired,\n\n  /** Title to be passed as <BannerAlert> param */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * Optional\n   */\n\n  /** Additional details to be displayed under the description */\n  details: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /** Name of the security provider */\n  provider: PropTypes.oneOf(Object.values(SecurityProvider)),\n\n  /** Function to be called when the support link is clicked */\n  onClickSupportLink: PropTypes.func,\n\n  /** URL to open when report an issue link is clicked */\n  reportUrl: PropTypes.string,\n};\n\nexport default SecurityProviderBannerAlert;\n","export { default } from './security-provider-banner-message';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Color,\n  SEVERITIES,\n  Size,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { SECURITY_PROVIDER_MESSAGE_SEVERITY } from '../../../../../shared/constants/security-provider';\nimport { I18nContext } from '../../../../../.storybook/i18n';\nimport {\n  BannerAlert,\n  ButtonLink,\n  Text,\n} from '../../../../components/component-library';\n\nexport default function SecurityProviderBannerMessage({\n  securityProviderResponse,\n}) {\n  const t = useContext(I18nContext);\n\n  let messageTitle;\n  let messageText;\n  let severity;\n\n  if (\n    securityProviderResponse.flagAsDangerous ===\n    SECURITY_PROVIDER_MESSAGE_SEVERITY.MALICIOUS\n  ) {\n    messageTitle =\n      securityProviderResponse.reason_header === ''\n        ? t('requestFlaggedAsMaliciousFallbackCopyReasonTitle')\n        : securityProviderResponse.reason_header;\n    messageText =\n      securityProviderResponse.reason === ''\n        ? t('requestFlaggedAsMaliciousFallbackCopyReason')\n        : securityProviderResponse.reason;\n    severity = SEVERITIES.DANGER;\n  } else if (\n    securityProviderResponse.flagAsDangerous ===\n    SECURITY_PROVIDER_MESSAGE_SEVERITY.NOT_SAFE\n  ) {\n    messageTitle = t('requestMayNotBeSafe');\n    messageText = t('requestMayNotBeSafeError');\n    severity = SEVERITIES.WARNING;\n  } else {\n    messageTitle = t('requestNotVerified');\n    messageText = t('requestNotVerifiedError');\n    severity = SEVERITIES.WARNING;\n  }\n\n  return (\n    <BannerAlert\n      className=\"security-provider-banner-message\"\n      marginTop={4}\n      marginRight={4}\n      marginLeft={4}\n      title={messageTitle}\n      severity={severity}\n    >\n      <Text variant={TextVariant.bodySm} as=\"h6\">\n        {messageText}\n      </Text>\n      <Text variant={TextVariant.bodySm} as=\"h6\" color={Color.textAlternative}>\n        {t('securityAlert', [\n          <ButtonLink\n            key=\"opensea_link\"\n            size={Size.inherit}\n            href=\"https://opensea.io/\"\n            target=\"_blank\"\n          >\n            {t('openSeaNew')}\n          </ButtonLink>,\n          <ButtonLink\n            key=\"blockaid_link\"\n            size={Size.inherit}\n            href=\"https://blockaid.io/\"\n            target=\"_blank\"\n          >\n            {t('blockaid')}\n          </ButtonLink>,\n        ])}\n      </Text>\n    </BannerAlert>\n  );\n}\n\nSecurityProviderBannerMessage.propTypes = {\n  securityProviderResponse: PropTypes.object,\n};\n","export { default } from './set-approval-for-all-warning';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nimport Popover from '../../../../components/ui/popover';\nimport Box from '../../../../components/ui/box';\n\nimport {\n  DISPLAY,\n  FLEX_DIRECTION,\n  JustifyContent,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport Identicon from '../../../../components/ui/identicon';\nimport { shortenAddress } from '../../../../helpers/utils/util';\nimport {\n  Icon,\n  IconName,\n  Button,\n  BUTTON_VARIANT,\n  Text,\n} from '../../../../components/component-library';\n\nconst SetApproveForAllWarning = ({\n  collectionName,\n  senderAddress,\n  name,\n  total,\n  isERC721,\n  onSubmit,\n  onCancel,\n}) => {\n  const t = useI18nContext();\n\n  const footer = (\n    <Box\n      display={DISPLAY.FLEX}\n      flexDirection={FLEX_DIRECTION.COLUMN}\n      justifyContent={JustifyContent.SPACE_BETWEEN}\n      className=\"set-approval-for-all-warning__footer\"\n      gap={4}\n    >\n      <Button\n        className=\"set-approval-for-all-warning__footer__approve-button\"\n        variant={BUTTON_VARIANT.PRIMARY}\n        danger\n        onClick={onSubmit}\n      >\n        {t('approveButtonText')}\n      </Button>\n      <Button\n        className=\"set-approval-for-all-warning__footer__cancel-button\"\n        variant={BUTTON_VARIANT.SECONDARY}\n        onClick={onCancel}\n      >\n        {t('reject')}\n      </Button>\n    </Box>\n  );\n\n  return (\n    <Popover className=\"set-approval-for-all-warning__content\" footer={footer}>\n      <Box\n        display={DISPLAY.FLEX}\n        flexDirection={FLEX_DIRECTION.ROW}\n        padding={4}\n        className=\"set-approval-for-all-warning__content__header\"\n      >\n        <Icon\n          name={IconName.Danger}\n          className=\"set-approval-for-all-warning__content__header__warning-icon\"\n        />\n        <Text variant={TextVariant.headingSm} as=\"h4\">\n          {t('yourNFTmayBeAtRisk')}\n        </Text>\n      </Box>\n      <Box\n        display={DISPLAY.FLEX}\n        padding={4}\n        justifyContent={JustifyContent.spaceBetween}\n        className=\"set-approval-for-all-warning__content__account\"\n      >\n        <Box display={DISPLAY.FLEX}>\n          <Identicon address={senderAddress} diameter={32} />\n          <Text\n            variant={TextVariant.bodyMd}\n            as=\"h5\"\n            marginLeft={2}\n            className=\"set-approval-for-all-warning__content__account-name\"\n          >\n            <strong>{name}</strong> {` (${shortenAddress(senderAddress)})`}\n          </Text>\n        </Box>\n        {isERC721 && total && <Text>{`${t('total')}: ${total}`}</Text>}\n      </Box>\n\n      <Text\n        margin={4}\n        marginTop={4}\n        marginBottom={4}\n        variant={TextVariant.bodySm}\n        as=\"h6\"\n      >\n        {t('nftWarningContent', [\n          <strong key=\"non_custodial_bold\">\n            {t('nftWarningContentBold', [collectionName || ''])}\n          </strong>,\n          <strong key=\"non_custodial_grey\">\n            {t('nftWarningContentGrey')}\n          </strong>,\n        ])}\n      </Text>\n    </Popover>\n  );\n};\n\nSetApproveForAllWarning.propTypes = {\n  /**\n   * NFT collection name that is being approved\n   */\n  collectionName: PropTypes.string,\n  /**\n   * Address of a current user that is approving collection\n   */\n  senderAddress: PropTypes.string,\n  /**\n   * Name of a current user that is approving collection\n   */\n  name: PropTypes.string,\n  /**\n   * Total number of items that are being approved\n   */\n  total: PropTypes.string,\n  /**\n   * Is asset standard ERC721\n   */\n  isERC721: PropTypes.bool,\n  /**\n   * Function that approves collection\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * Function that rejects collection\n   */\n  onCancel: PropTypes.func,\n};\n\nexport default SetApproveForAllWarning;\n","export { default } from './signature-request-header';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nimport {\n  getNativeCurrency,\n  getProviderConfig,\n} from '../../../../ducks/metamask/metamask';\nimport {\n  accountsWithSendEtherInfoSelector,\n  conversionRateSelector,\n  getCurrentChainId,\n  getCurrentCurrency,\n  getPreferences,\n} from '../../../../selectors';\nimport { formatCurrency } from '../../../../helpers/utils/confirm-tx.util';\nimport {\n  getAccountByAddress,\n  getNetworkNameFromProviderType,\n} from '../../../../helpers/utils/util';\nimport { EtherDenomination } from '../../../../../shared/constants/common';\nimport { getValueFromWeiHex } from '../../../../../shared/modules/conversion.utils';\nimport { Numeric } from '../../../../../shared/modules/Numeric';\n\nimport NetworkAccountBalanceHeader from '../../../../components/app/network-account-balance-header';\n\nconst SignatureRequestHeader = ({ txData }) => {\n  const t = useI18nContext();\n  const {\n    msgParams: { from },\n  } = txData;\n  const allAccounts = useSelector(accountsWithSendEtherInfoSelector);\n  const fromAccount = getAccountByAddress(allAccounts, from);\n  const nativeCurrency = useSelector(getNativeCurrency);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const currentChainId = useSelector(getCurrentChainId);\n\n  const providerConfig = useSelector(getProviderConfig);\n  const networkName = getNetworkNameFromProviderType(providerConfig.type);\n  const { useNativeCurrencyAsPrimaryCurrency } = useSelector(getPreferences);\n  const conversionRateFromSelector = useSelector(conversionRateSelector);\n  const conversionRate = useNativeCurrencyAsPrimaryCurrency\n    ? null\n    : conversionRateFromSelector;\n\n  const currentNetwork =\n    networkName === ''\n      ? providerConfig.nickname || t('unknownNetwork')\n      : t(networkName);\n\n  const balanceInBaseAsset = conversionRate\n    ? formatCurrency(\n        getValueFromWeiHex({\n          value: fromAccount.balance,\n          fromCurrency: nativeCurrency,\n          toCurrency: currentCurrency,\n          conversionRate,\n          numberOfDecimals: 6,\n          toDenomination: EtherDenomination.ETH,\n        }),\n        currentCurrency,\n      )\n    : new Numeric(fromAccount.balance, 16, EtherDenomination.WEI)\n        .toDenomination(EtherDenomination.ETH)\n        .round(6)\n        .toBase(10)\n        .toString();\n\n  return (\n    <NetworkAccountBalanceHeader\n      networkName={currentNetwork}\n      accountName={fromAccount.metadata.name}\n      accountBalance={balanceInBaseAsset}\n      tokenName={\n        conversionRate ? currentCurrency?.toUpperCase() : nativeCurrency\n      }\n      accountAddress={fromAccount.address}\n      chainId={currentChainId}\n    />\n  );\n};\n\nSignatureRequestHeader.propTypes = {\n  /**\n   * The display content of transaction data\n   */\n  txData: PropTypes.object.isRequired,\n};\n\nexport default SignatureRequestHeader;\n","export { default } from './signature-request-original.container';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { ObjectInspector } from 'react-inspector';\nimport { ethErrors, serializeError } from 'eth-rpc-errors';\nimport { SubjectType } from '@metamask/permission-controller';\nimport LedgerInstructionField from '../ledger-instruction-field';\nimport { MESSAGE_TYPE } from '../../../../../shared/constants/app';\nimport {\n  getURLHostName,\n  hexToText,\n  sanitizeString,\n} from '../../../../helpers/utils/util';\nimport { isSuspiciousResponse } from '../../../../../shared/modules/security-provider.utils';\nimport SiteOrigin from '../../../../components/ui/site-origin';\nimport Typography from '../../../../components/ui/typography/typography';\nimport { PageContainerFooter } from '../../../../components/ui/page-container';\nimport {\n  TypographyVariant,\n  FontWeight,\n  TextAlign,\n  TextColor,\n  Size,\n} from '../../../../helpers/constants/design-system';\nimport {\n  ButtonLink,\n} from '../../../../components/component-library';\n\nimport BlockaidBannerAlert from '../security-provider-banner-alert/blockaid-banner-alert/blockaid-banner-alert';\nimport ConfirmPageContainerNavigation from '../confirm-page-container/confirm-page-container-navigation';\nimport SecurityProviderBannerMessage from '../security-provider-banner-message/security-provider-banner-message';\n\nimport SignatureRequestHeader from '../signature-request-header';\nimport SnapLegacyAuthorshipHeader from '../../../../components/app/snaps/snap-legacy-authorship-header';\nimport InsightWarnings from '../../../../components/app/snaps/insight-warnings';\nimport { BlockaidResultType } from '../../../../../shared/constants/security-provider';\nimport { NetworkChangeToastLegacy } from '../confirm/network-change-toast';\nimport { QueuedRequestsBannerAlert } from '../../confirmation/components/queued-requests-banner-alert';\n\nexport default class SignatureRequestOriginal extends Component {\n  static contextTypes = {\n    t: PropTypes.func.isRequired,\n    trackEvent: PropTypes.func,\n  };\n\n  static propTypes = {\n    fromAccount: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    }).isRequired,\n    txData: PropTypes.object.isRequired,\n    subjectMetadata: PropTypes.object,\n    hardwareWalletRequiresConnection: PropTypes.bool,\n    isLedgerWallet: PropTypes.bool,\n    messagesCount: PropTypes.number,\n    showRejectTransactionsConfirmationModal: PropTypes.func.isRequired,\n    cancelAllApprovals: PropTypes.func.isRequired,\n    rejectPendingApproval: PropTypes.func.isRequired,\n    clearConfirmTransaction: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired,\n    mostRecentOverviewPage: PropTypes.string.isRequired,\n    resolvePendingApproval: PropTypes.func.isRequired,\n    completedTx: PropTypes.func.isRequired,\n    warnings: PropTypes.array,\n  };\n\n  state = {\n    showSignatureInsights: false,\n  };\n\n  renderTypedData = (data) => {\n    const { t } = this.context;\n    const { domain, message } = JSON.parse(data);\n    return (\n      <div className=\"request-signature__typed-container\">\n        {domain ? (\n          <div>\n            <h1>{t('domain')}</h1>\n            <ObjectInspector data={domain} expandLevel={1} name=\"domain\" />\n          </div>\n        ) : (\n          ''\n        )}\n        {message ? (\n          <div>\n            <h1>{t('message')}</h1>\n            <ObjectInspector data={message} expandLevel={1} name=\"message\" />\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  };\n\n  renderBody = () => {\n    let rows;\n    const notice = `${this.context.t('youSign')}:`;\n\n    const { txData, subjectMetadata } = this.props;\n    const {\n      type,\n      msgParams: { data },\n    } = txData;\n\n    if (type === MESSAGE_TYPE.PERSONAL_SIGN) {\n      rows = [{ name: this.context.t('message'), value: hexToText(data) }];\n    } else if (type === MESSAGE_TYPE.ETH_SIGN_TYPED_DATA) {\n      rows = data;\n    }\n\n    const targetSubjectMetadata = txData.msgParams.origin\n      ? subjectMetadata?.[txData.msgParams.origin]\n      : null;\n\n    return (\n      <div className=\"request-signature__body\">\n        <BlockaidBannerAlert\n          txData={txData}\n          marginTop={4}\n          marginLeft={4}\n          marginRight={4}\n        />\n        {isSuspiciousResponse(txData?.securityProviderResponse) && (\n          <SecurityProviderBannerMessage\n            securityProviderResponse={txData.securityProviderResponse}\n          />\n        )}\n        <QueuedRequestsBannerAlert />\n        {\n        }\n        <div className=\"request-signature__origin\">\n          {\n            // Use legacy authorship header for snaps\n            targetSubjectMetadata?.subjectType === SubjectType.Snap ? (\n              <SnapLegacyAuthorshipHeader\n                snapId={targetSubjectMetadata.origin}\n                marginLeft={4}\n                marginRight={4}\n              />\n            ) : (\n              <SiteOrigin\n                title={txData.msgParams.origin}\n                siteOrigin={txData.msgParams.origin}\n                iconSrc={targetSubjectMetadata?.iconUrl}\n                iconName={\n                  getURLHostName(targetSubjectMetadata?.origin) ||\n                  targetSubjectMetadata?.origin\n                }\n                chip\n              />\n            )\n          }\n        </div>\n        <Typography\n          className=\"request-signature__content__title\"\n          variant={TypographyVariant.H3}\n          fontWeight={FontWeight.Bold}\n        >\n          {this.context.t('sigRequest')}\n        </Typography>\n        <Typography\n          className=\"request-signature__content__subtitle\"\n          variant={TypographyVariant.H7}\n          color={TextColor.textAlternative}\n          align={TextAlign.Center}\n          margin={12}\n          marginTop={3}\n        >\n          {this.context.t('signatureRequestGuidance')}\n        </Typography>\n        <div className={classnames('request-signature__notice')}>{notice}</div>\n        <div className=\"request-signature__rows\">\n          {rows.map(({ name, value }, index) => {\n            if (typeof value === 'boolean') {\n              // eslint-disable-next-line no-param-reassign\n              value = value.toString();\n            }\n            return (\n              <div\n                className=\"request-signature__row\"\n                key={`request-signature-row-${index}`}\n              >\n                <div className=\"request-signature__row-title\">\n                  {sanitizeString(`${name}:`)}\n                </div>\n                <div className=\"request-signature__row-value\">\n                  {sanitizeString(value)}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  onSubmit = async () => {\n    const {\n      resolvePendingApproval,\n      completedTx,\n      clearConfirmTransaction,\n      history,\n      mostRecentOverviewPage,\n      txData,\n    } = this.props;\n\n    await resolvePendingApproval(txData.id);\n    completedTx(txData.id);\n    clearConfirmTransaction();\n    history.push(mostRecentOverviewPage);\n  };\n\n  onCancel = async () => {\n    const {\n      clearConfirmTransaction,\n      history,\n      mostRecentOverviewPage,\n      rejectPendingApproval,\n      txData: { id },\n    } = this.props;\n\n    await rejectPendingApproval(\n      id,\n      serializeError(ethErrors.provider.userRejectedRequest()),\n    );\n    clearConfirmTransaction();\n    history.push(mostRecentOverviewPage);\n  };\n\n  renderFooter = () => {\n    const {\n      clearConfirmTransaction,\n      history,\n      mostRecentOverviewPage,\n      txData,\n      hardwareWalletRequiresConnection,\n      rejectPendingApproval,\n      warnings,\n    } = this.props;\n    const { t } = this.context;\n\n    const submitButtonType =\n      txData.securityAlertResponse?.result_type === BlockaidResultType.Malicious\n        ? 'danger-primary'\n        : 'primary';\n    return (\n      <PageContainerFooter\n        cancelText={t('reject')}\n        submitText={t('sign')}\n        onCancel={async () => {\n          await rejectPendingApproval(\n            txData.id,\n            serializeError(ethErrors.provider.userRejectedRequest()),\n          );\n          clearConfirmTransaction();\n          history.push(mostRecentOverviewPage);\n        }}\n        onSubmit={async () => {\n          if (warnings?.length >= 1) {\n            return this.setState({ showSignatureInsights: true });\n          }\n\n          return await this.onSubmit();\n        }}\n        disabled={\n          hardwareWalletRequiresConnection\n        }\n        submitButtonType={submitButtonType}\n      />\n    );\n  };\n\n  handleCancelAll = () => {\n    const {\n      clearConfirmTransaction,\n      history,\n      mostRecentOverviewPage,\n      showRejectTransactionsConfirmationModal,\n      messagesCount,\n      cancelAllApprovals,\n    } = this.props;\n    const unapprovedTxCount = messagesCount;\n\n    showRejectTransactionsConfirmationModal({\n      unapprovedTxCount,\n      onSubmit: async () => {\n        await cancelAllApprovals();\n        clearConfirmTransaction();\n        history.push(mostRecentOverviewPage);\n      },\n    });\n  };\n\n  render = () => {\n    const { messagesCount, txData, warnings } = this.props;\n    const { t } = this.context;\n\n    const rejectNText = t('rejectRequestsN', [messagesCount]);\n\n    return (\n      <div className=\"request-signature__container\">\n        <div className=\"request-signature__navigation\">\n          <ConfirmPageContainerNavigation />\n        </div>\n        <div className=\"request-signature__account\">\n          <SignatureRequestHeader txData={txData} />\n        </div>\n        {this.renderBody()}\n        {this.props.isLedgerWallet ? (\n          <div className=\"confirm-approve-content__ledger-instruction-wrapper\">\n            <LedgerInstructionField showDataInstruction />\n          </div>\n        ) : null}\n\n        {this.state.showSignatureInsights && (\n          <InsightWarnings\n            warnings={warnings}\n            action=\"signing\"\n            origin={txData.msgParams.origin}\n            onCancel={() => {\n              this.setState({ showSignatureInsights: false });\n            }}\n            onSubmit={async () => {\n              await this.onSubmit();\n              this.setState({ showSignatureInsights: false });\n            }}\n          />\n        )}\n        {this.renderFooter()}\n        {messagesCount > 1 ? (\n          <ButtonLink\n            size={Size.inherit}\n            className=\"request-signature__container__reject\"\n            onClick={() => this.handleCancelAll()}\n          >\n            {rejectNText}\n          </ButtonLink>\n        ) : null}\n        <NetworkChangeToastLegacy confirmation={txData} />\n      </div>\n    );\n  };\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  goHome,\n  showModal,\n  resolvePendingApproval,\n  rejectPendingApproval,\n  rejectAllMessages,\n  completedTx,\n} from '../../../../store/actions';\nimport {\n  accountsWithSendEtherInfoSelector,\n  getSubjectMetadata,\n  doesAddressRequireLedgerHidConnection,\n  unconfirmedMessagesHashSelector,\n  getTotalUnapprovedMessagesCount,\n} from '../../../../selectors';\nimport { getAccountByAddress, valuesFor } from '../../../../helpers/utils/util';\nimport { clearConfirmTransaction } from '../../../../ducks/confirm-transaction/confirm-transaction.duck';\nimport { getMostRecentOverviewPage } from '../../../../ducks/history/history';\nimport { isAddressLedger } from '../../../../ducks/metamask/metamask';\nimport SignatureRequestOriginal from './signature-request-original.component';\n\nfunction mapStateToProps(state, ownProps) {\n  const {\n    msgParams: { from },\n  } = ownProps.txData;\n\n  const hardwareWalletRequiresConnection =\n    doesAddressRequireLedgerHidConnection(state, from);\n  const isLedgerWallet = isAddressLedger(state, from);\n  const messagesList = unconfirmedMessagesHashSelector(state);\n  const messagesCount = getTotalUnapprovedMessagesCount(state);\n\n  return {\n    requester: null,\n    requesterAddress: null,\n    mostRecentOverviewPage: getMostRecentOverviewPage(state),\n    hardwareWalletRequiresConnection,\n    isLedgerWallet,\n    // not passed to component\n    allAccounts: accountsWithSendEtherInfoSelector(state),\n    subjectMetadata: getSubjectMetadata(state),\n    messagesList,\n    messagesCount,\n  };\n}\n\nlet mapDispatchToProps = null;\n\nmapDispatchToProps = function (dispatch) {\n  return {\n    goHome: () => dispatch(goHome()),\n    clearConfirmTransaction: () => dispatch(clearConfirmTransaction()),\n    showRejectTransactionsConfirmationModal: ({\n      onSubmit,\n      unapprovedTxCount: messagesCount,\n    }) => {\n      return dispatch(\n        showModal({\n          name: 'REJECT_TRANSACTIONS',\n          onSubmit,\n          unapprovedTxCount: messagesCount,\n          isRequestType: true,\n        }),\n      );\n    },\n    completedTx: (txId) => dispatch(completedTx(txId)),\n    resolvePendingApproval: (id) => {\n      dispatch(resolvePendingApproval(id));\n    },\n    rejectPendingApproval: (id, error) =>\n      dispatch(rejectPendingApproval(id, error)),\n    cancelAllApprovals: (messagesList) => {\n      dispatch(rejectAllMessages(messagesList));\n    },\n  };\n};\n\n\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\n  const { txData } = ownProps;\n\n  const {\n    allAccounts,\n    messagesList,\n    ...otherStateProps\n  } = stateProps;\n\n  const {\n    msgParams: { from },\n  } = txData;\n\n  const fromAccount = getAccountByAddress(allAccounts, from);\n\n  const { cancelAllApprovals: dispatchCancelAllApprovals } = dispatchProps;\n\n\n  return {\n    ...ownProps,\n    ...otherStateProps,\n    ...dispatchProps,\n    fromAccount,\n    txData,\n    cancelAllApprovals: () =>\n      dispatchCancelAllApprovals(valuesFor(messagesList)),\n  };\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps, mergeProps),\n)(SignatureRequestOriginal);\n","export { default } from './signature-request-siwe';\n","export { default } from './signature-request-siwe-header';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport AccountListItem from '../../../../../components/app/account-list-item';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport PermissionsConnectHeader from '../../../../../components/app/permissions-connect-header';\nimport SignatureRequestSIWEIcon from '../signature-request-siwe-icon';\nimport SignatureRequestSIWETag from '../signature-request-siwe-tag';\nimport Tooltip from '../../../../../components/ui/tooltip';\n\nexport default function SignatureRequestSIWEHeader({\n  fromAccount,\n  domain,\n  isSIWEDomainValid,\n  subjectMetadata,\n}) {\n  const t = useContext(I18nContext);\n\n  return (\n    <div className=\"signature-request-siwe-header\">\n      <PermissionsConnectHeader\n        iconUrl={subjectMetadata.iconUrl}\n        iconName={subjectMetadata.name}\n        headerTitle={t('SIWESiteRequestTitle')}\n        headerText={t('SIWESiteRequestSubtitle')}\n        siteOrigin={domain}\n        className={isSIWEDomainValid ? '' : 'bad-domain'}\n        leftIcon={\n          !isSIWEDomainValid && (\n            <Tooltip\n              position=\"bottom\"\n              html={<p>{t('SIWEDomainWarningBody', [domain])}</p>}\n            >\n              <SignatureRequestSIWEIcon />\n            </Tooltip>\n          )\n        }\n        rightIcon={\n          !isSIWEDomainValid && (\n            <Tooltip\n              position=\"bottom\"\n              html={<p>{t('SIWEDomainWarningBody', [domain])}</p>}\n            >\n              <SignatureRequestSIWETag text={t('SIWEDomainWarningLabel')} />\n            </Tooltip>\n          )\n        }\n      />\n      {fromAccount && (\n        <AccountListItem\n          account={fromAccount}\n          hideDefaultMismatchWarning\n          className=\"signature-request-siwe-header__account-list-item\"\n        />\n      )}\n    </div>\n  );\n}\n\nSignatureRequestSIWEHeader.propTypes = {\n  /**\n   * The account that is requesting permissions\n   */\n  fromAccount: PropTypes.object,\n  /**\n   * The domain that the request is for\n   */\n  domain: PropTypes.string,\n  /**\n   * Whether the domain is valid\n   */\n  isSIWEDomainValid: PropTypes.bool,\n  /**\n   * The metadata for the subject. This is used to display the icon and name\n   * and is selected from the domain in the SIWE request.\n   */\n  subjectMetadata: PropTypes.object,\n};\n","import React from 'react';\nimport {\n  Display,\n  AlignItems,\n  Color,\n  JustifyContent,\n} from '../../../../../helpers/constants/design-system';\nimport {\n  Icon,\n  IconName,\n  Box,\n} from '../../../../../components/component-library';\n\nconst SignatureRequestSIWEIcon = () => {\n  return (\n    <Box\n      className=\"signature-request-siwe-icon\"\n      display={Display.InlineFlex}\n      alignItems={AlignItems.center}\n      backgroundColor={Color.errorDefault}\n      justifyContent={JustifyContent.center}\n    >\n      <Icon name={IconName.Danger} color={Color.errorInverse} />\n    </Box>\n  );\n};\n\nexport default SignatureRequestSIWEIcon;\n","export { default } from './signature-request-siwe-message';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '../../../../../components/ui/box';\nimport { Text } from '../../../../../components/component-library';\n\nimport {\n  FLEX_DIRECTION,\n  OVERFLOW_WRAP,\n  TextVariant,\n} from '../../../../../helpers/constants/design-system';\n\nconst SignatureRequestSIWEMessage = ({ data }) => {\n  return (\n    <Box className=\"signature-request-siwe-message\">\n      <Box flexDirection={FLEX_DIRECTION.COLUMN}>\n        {data.map(({ label, value }, i) => (\n          <Box key={i.toString()} marginTop={2} marginBottom={2}>\n            <Text\n              as=\"h4\"\n              variant={TextVariant.bodyLgMedium}\n              marginTop={2}\n              marginBottom={2}\n            >\n              {label}\n            </Text>\n            <Text\n              className=\"signature-request-siwe-message__sub-text\"\n              overflowWrap={OVERFLOW_WRAP.BREAK_WORD}\n              marginTop={2}\n              marginBottom={2}\n            >\n              {value}\n            </Text>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nSignatureRequestSIWEMessage.propTypes = {\n  /**\n   * The data array that contains objects of data about the message\n   */\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      /**\n       * The label or title of the value data\n       */\n      label: PropTypes.string,\n      /**\n       * The value of the data\n       */\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ),\n};\n\nexport default React.memo(SignatureRequestSIWEMessage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextVariant,\n  Size,\n  Display,\n  AlignItems,\n  BackgroundColor,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport Box from '../../../../../components/ui/box';\nimport { Text } from '../../../../../components/component-library';\n\nconst SignatureRequestSIWETag = ({ text }) => {\n  return (\n    <Box\n      className=\"signature-request-siwe-tag\"\n      marginRight={1}\n      display={Display.InlineFlex}\n      alignItems={AlignItems.center}\n      backgroundColor={BackgroundColor.errorDefault}\n      borderRadius={Size.XL}\n      paddingLeft={4}\n      paddingRight={4}\n    >\n      <Text\n        margin={0}\n        variant={TextVariant.bodySmBold}\n        as=\"h6\"\n        color={TextColor.errorInverse}\n      >\n        {text}\n      </Text>\n    </Box>\n  );\n};\n\nexport default SignatureRequestSIWETag;\n\nSignatureRequestSIWETag.propTypes = {\n  /**\n   * The text to display in the tag\n   */\n  text: PropTypes.string,\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport log from 'loglevel';\nimport { isValidSIWEOrigin } from '@metamask/controller-utils';\nimport { ethErrors, serializeError } from 'eth-rpc-errors';\nimport { BannerAlert, Text } from '../../../../components/component-library';\nimport Popover from '../../../../components/ui/popover';\nimport Checkbox from '../../../../components/ui/check-box';\nimport Button from '../../../../components/ui/button';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport { PageContainerFooter } from '../../../../components/ui/page-container';\nimport { isAddressLedger } from '../../../../ducks/metamask/metamask';\nimport {\n  accountsWithSendEtherInfoSelector,\n  getSubjectMetadata,\n  getTotalUnapprovedMessagesCount,\n  unconfirmedMessagesHashSelector,\n} from '../../../../selectors';\nimport { valuesFor, getAccountByAddress } from '../../../../helpers/utils/util';\nimport { isSuspiciousResponse } from '../../../../../shared/modules/security-provider.utils';\nimport { formatMessageParams } from '../../../../../shared/modules/siwe';\nimport { clearConfirmTransaction } from '../../../../ducks/confirm-transaction/confirm-transaction.duck';\n\nimport {\n  SEVERITIES,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport {\n  resolvePendingApproval,\n  rejectPendingApproval,\n  rejectAllMessages,\n  completedTx,\n  showModal,\n} from '../../../../store/actions';\n\nimport SecurityProviderBannerMessage from '../security-provider-banner-message/security-provider-banner-message';\nimport ConfirmPageContainerNavigation from '../confirm-page-container/confirm-page-container-navigation';\nimport { getMostRecentOverviewPage } from '../../../../ducks/history/history';\nimport BlockaidBannerAlert from '../security-provider-banner-alert/blockaid-banner-alert/blockaid-banner-alert';\nimport LedgerInstructionField from '../ledger-instruction-field';\n\nimport SignatureRequestHeader from '../signature-request-header';\nimport InsightWarnings from '../../../../components/app/snaps/insight-warnings';\nimport { BlockaidResultType } from '../../../../../shared/constants/security-provider';\nimport { NetworkChangeToastLegacy } from '../confirm/network-change-toast';\nimport Header from './signature-request-siwe-header';\nimport Message from './signature-request-siwe-message';\n\nexport default function SignatureRequestSIWE({ txData, warnings }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const t = useContext(I18nContext);\n  const allAccounts = useSelector(accountsWithSendEtherInfoSelector);\n  const subjectMetadata = useSelector(getSubjectMetadata);\n  const messagesCount = useSelector(getTotalUnapprovedMessagesCount);\n  const messagesList = useSelector(unconfirmedMessagesHashSelector);\n  const mostRecentOverviewPage = useSelector(getMostRecentOverviewPage);\n\n  const {\n    msgParams: {\n      from,\n      origin,\n      siwe: { parsedMessage },\n    },\n    id,\n  } = txData;\n\n  const isLedgerWallet = useSelector((state) => isAddressLedger(state, from));\n\n  const fromAccount = getAccountByAddress(allAccounts, from);\n  const targetSubjectMetadata = subjectMetadata[origin];\n\n  const isMatchingAddress =\n    from.toLowerCase() === parsedMessage.address.toLowerCase();\n\n  const isSIWEDomainValid = isValidSIWEOrigin(txData.msgParams);\n\n  const [isShowingDomainWarning, setIsShowingDomainWarning] = useState(false);\n  const [hasAgreedToDomainWarning, setHasAgreedToDomainWarning] =\n    useState(false);\n\n  const showSecurityProviderBanner = isSuspiciousResponse(\n    txData?.securityProviderResponse,\n  );\n\n  const [isShowingSigInsightWarnings, setIsShowingSigInsightWarnings] =\n    useState(false);\n\n  const onSign = useCallback(async () => {\n    try {\n      await dispatch(resolvePendingApproval(id, null));\n      dispatch(completedTx(id));\n    } catch (e) {\n      log.error(e);\n    }\n  }, [id, dispatch]);\n\n  const onCancel = useCallback(async () => {\n    try {\n      await dispatch(\n        rejectPendingApproval(\n          id,\n          serializeError(ethErrors.provider.userRejectedRequest()),\n        ),\n      );\n    } catch (e) {\n      log.error(e);\n    }\n  }, [dispatch, id]);\n\n  const handleCancelAll = () => {\n    const unapprovedTxCount = messagesCount;\n\n    dispatch(\n      showModal({\n        name: 'REJECT_TRANSACTIONS',\n        unapprovedTxCount,\n        onSubmit: async () => {\n          await dispatch(rejectAllMessages(valuesFor(messagesList)));\n          dispatch(clearConfirmTransaction());\n          history.push(mostRecentOverviewPage);\n        },\n      }),\n    );\n  };\n\n  const rejectNText = t('rejectRequestsN', [messagesCount]);\n\n  const submitButtonType =\n    txData.securityAlertResponse?.result_type ===\n      BlockaidResultType.Malicious || !isSIWEDomainValid\n      ? 'danger-primary'\n      : 'primary';\n\n  return (\n    <>\n      <div className=\"signature-request-siwe\">\n        <div className=\"request-signature__navigation\">\n          <ConfirmPageContainerNavigation />\n        </div>\n        <SignatureRequestHeader txData={txData} />\n        <BlockaidBannerAlert\n          txData={txData}\n          marginTop={4}\n          marginLeft={4}\n          marginRight={4}\n        />\n        {showSecurityProviderBanner && (\n          <SecurityProviderBannerMessage\n            securityProviderResponse={txData.securityProviderResponse}\n          />\n        )}\n\n        <Header\n          fromAccount={fromAccount}\n          domain={origin}\n          isSIWEDomainValid={isSIWEDomainValid}\n          subjectMetadata={targetSubjectMetadata}\n        />\n        <Message data={formatMessageParams(parsedMessage, t)} />\n        {!isMatchingAddress && (\n          <BannerAlert\n            severity={SEVERITIES.WARNING}\n            marginLeft={4}\n            marginRight={4}\n            marginBottom={4}\n          >\n            {t('SIWEAddressInvalid', [\n              parsedMessage.address,\n              fromAccount.address,\n            ])}\n          </BannerAlert>\n        )}\n        {isLedgerWallet && (\n          <div className=\"confirm-approve-content__ledger-instruction-wrapper\">\n            <LedgerInstructionField showDataInstruction />\n          </div>\n        )}\n        {!isSIWEDomainValid && (\n          <BannerAlert\n            severity={SEVERITIES.DANGER}\n            marginLeft={4}\n            marginRight={4}\n            marginBottom={4}\n          >\n            <Text variant={TextVariant.bodyMdBold}>\n              {t('SIWEDomainInvalidTitle')}\n            </Text>{' '}\n            <Text>{t('SIWEDomainInvalidText')}</Text>\n          </BannerAlert>\n        )}\n        <PageContainerFooter\n          footerClassName=\"signature-request-siwe__page-container-footer\"\n          onCancel={onCancel}\n          onSubmit={() => {\n            if (warnings?.length >= 1) {\n              return isSIWEDomainValid\n                ? setIsShowingSigInsightWarnings(true)\n                : setIsShowingDomainWarning(true);\n            }\n\n            if (isSIWEDomainValid) {\n              return onSign();\n            }\n\n            return setIsShowingDomainWarning(true);\n          }}\n          cancelText={t('cancel')}\n          submitText={t('signin')}\n          submitButtonType={submitButtonType}\n        />\n        {messagesCount > 1 ? (\n          <Button\n            type=\"link\"\n            className=\"request-signature__container__reject\"\n            onClick={(e) => {\n              e.preventDefault();\n              handleCancelAll();\n            }}\n          >\n            {rejectNText}\n          </Button>\n        ) : null}\n        {isShowingDomainWarning && (\n          <Popover\n            onClose={() => setIsShowingDomainWarning(false)}\n            title={t('SIWEWarningTitle')}\n            subtitle={t('SIWEWarningSubtitle')}\n            className=\"signature-request-siwe__warning-popover\"\n            footerClassName=\"signature-request-siwe__warning-popover__footer\"\n            footer={\n              <PageContainerFooter\n                footerClassName=\"signature-request-siwe__warning-popover__footer__warning-footer\"\n                onCancel={() => setIsShowingDomainWarning(false)}\n                cancelText={t('cancel')}\n                cancelButtonType=\"default\"\n                onSubmit={() => {\n                  if (warnings?.length >= 1) {\n                    return setIsShowingSigInsightWarnings(true);\n                  }\n\n                  onSign();\n                  return setIsShowingDomainWarning(false);\n                }}\n                submitText={t('confirm')}\n                submitButtonType=\"danger-primary\"\n                disabled={!hasAgreedToDomainWarning}\n              />\n            }\n          >\n            <div className=\"signature-request-siwe__warning-popover__checkbox-wrapper\">\n              <Checkbox\n                id=\"signature-request-siwe_domain-checkbox\"\n                checked={hasAgreedToDomainWarning}\n                className=\"signature-request-siwe__warning-popover__checkbox-wrapper__checkbox\"\n                onClick={() =>\n                  setHasAgreedToDomainWarning((checked) => !checked)\n                }\n              />\n              <label\n                className=\"signature-request-siwe__warning-popover__checkbox-wrapper__label\"\n                htmlFor=\"signature-request-siwe_domain-checkbox\"\n              >\n                {t('SIWEDomainWarningBody', [parsedMessage.domain])}\n              </label>\n            </div>\n          </Popover>\n        )}\n      </div>\n      {isShowingSigInsightWarnings && (\n        <InsightWarnings\n          warnings={warnings}\n          action=\"signing\"\n          origin={origin}\n          onCancel={() => setIsShowingSigInsightWarnings(false)}\n          onSubmit={() => {\n            onSign();\n            setIsShowingSigInsightWarnings(false);\n          }}\n        />\n      )}\n      <NetworkChangeToastLegacy confirmation={txData} />\n    </>\n  );\n}\n\nSignatureRequestSIWE.propTypes = {\n  /**\n   * The display content of transaction data\n   */\n  txData: PropTypes.object.isRequired,\n\n  /**\n   * Signature insights array\n   */\n  warnings: PropTypes.array,\n};\n","export { default } from './signature-request';\n","export { default } from './signature-request-data';\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { NameType } from '@metamask/name-controller';\nimport {\n  getMemoizedMetaMaskInternalAccounts,\n  getAccountName,\n} from '../../../../../selectors';\nimport Address from '../../transaction-decoding/components/decoding/address';\nimport {\n  isValidHexAddress,\n  toChecksumHexAddress,\n} from '../../../../../../shared/modules/hexstring-utils';\nimport {\n  Display,\n  FontWeight,\n  TextVariant,\n  TextColor,\n} from '../../../../../helpers/constants/design-system';\nimport { sanitizeString } from '../../../../../helpers/utils/util';\nimport { Box, Text } from '../../../../../components/component-library';\nimport { usePetnamesEnabled } from '../../../../../hooks/usePetnamesEnabled';\nimport Name from '../../../../../components/app/name/name';\n\nfunction SignatureRequestData({ data }) {\n  const internalAccounts = useSelector(getMemoizedMetaMaskInternalAccounts);\n  const petnamesEnabled = usePetnamesEnabled();\n\n  return (\n    <Box as=\"ul\" className=\"signature-request-data__node\">\n      {Object.entries(data).map(([label, { value, type }], i) => (\n        <Box\n          as=\"li\"\n          className=\"signature-request-data__node\"\n          marginBottom={2}\n          key={`${label}-${i}`}\n          paddingLeft={2}\n          display={\n            typeof value !== 'object' || value === null ? Display.Flex : null\n          }\n        >\n          <Text\n            as=\"div\"\n            color={TextColor.textDefault}\n            marginLeft={4}\n            fontWeight={\n              typeof value === 'object' ? FontWeight.Bold : FontWeight.Normal\n            }\n          >\n            {sanitizeString(label.charAt(0).toUpperCase() + label.slice(1))}:{' '}\n          </Text>\n          {typeof value === 'object' && value !== null ? (\n            <SignatureRequestData data={value} />\n          ) : (\n            <Text\n              as=\"div\"\n              color={TextColor.textDefault}\n              marginLeft={4}\n              className=\"signature-request-data__node__value\"\n            >\n              {type === 'address' &&\n              isValidHexAddress(value, {\n                mixedCaseUseChecksum: true,\n              }) ? (\n                <Text\n                  variant={TextVariant.bodySm}\n                  as=\"div\"\n                  color={TextColor.infoDefault}\n                  className=\"signature-request-data__node__value__address\"\n                >\n                  {petnamesEnabled ? (\n                    <Name value={value} type={NameType.ETHEREUM_ADDRESS} />\n                  ) : (\n                    <Address\n                      addressOnly\n                      checksummedRecipientAddress={toChecksumHexAddress(value)}\n                      recipientName={getAccountName(internalAccounts, value)}\n                    />\n                  )}\n                </Text>\n              ) : (\n                sanitizeString(`${value}`)\n              )}\n            </Text>\n          )}\n        </Box>\n      ))}\n    </Box>\n  );\n}\n\nSignatureRequestData.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n\nexport default memo(SignatureRequestData, (prevProps, nextProps) => {\n  return isEqual(prevProps.data, nextProps.data);\n});\n","export { default } from './signature-request-footer.component';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PageContainerFooter } from '../../../../../components/ui/page-container';\n\nexport default class SignatureRequestFooter extends PureComponent {\n  static propTypes = {\n    cancelAction: PropTypes.func.isRequired,\n    signAction: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n    submitButtonType: PropTypes.string,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  render() {\n    const {\n      submitButtonType,\n      cancelAction,\n      signAction,\n      disabled = false,\n    } = this.props;\n    return (\n      <PageContainerFooter\n        cancelText={this.context.t('reject')}\n        submitText={this.context.t('sign')}\n        onCancel={cancelAction}\n        onSubmit={signAction}\n        disabled={disabled}\n        submitButtonType={submitButtonType}\n      />\n    );\n  }\n}\n","export { default } from './signature-request-message';\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport Box from '../../../../../components/ui/box';\nimport { Text } from '../../../../../components/component-library';\nimport {\n  Display,\n  FlexDirection,\n  AlignItems,\n  JustifyContent,\n  Color,\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  TextColor,\n  FontWeight,\n} from '../../../../../helpers/constants/design-system';\nimport SignatureRequestData from '../signature-request-data';\n\nexport default function SignatureRequestMessage({\n  data,\n  onMessageScrolled,\n  setMessageRootRef,\n  messageRootRef,\n  messageIsScrollable,\n  primaryType,\n}) {\n  const t = useContext(I18nContext);\n  const [messageIsScrolled, setMessageIsScrolled] = useState(false);\n  const setMessageIsScrolledAtBottom = () => {\n    if (!messageRootRef || messageIsScrolled) {\n      return;\n    }\n\n    const { scrollTop, offsetHeight, scrollHeight } = messageRootRef;\n    const isAtBottom = Math.round(scrollTop) + offsetHeight >= scrollHeight;\n\n    if (isAtBottom) {\n      setMessageIsScrolled(true);\n      onMessageScrolled();\n    }\n  };\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      onScroll={debounce(setMessageIsScrolledAtBottom, 25)}\n      className=\"signature-request-message\"\n    >\n      {messageIsScrollable ? (\n        <Box\n          display={Display.Flex}\n          alignItems={AlignItems.center}\n          justifyContent={JustifyContent.center}\n          borderColor={BorderColor.borderDefault}\n          backgroundColor={BackgroundColor.backgroundDefault}\n          color={Color.iconDefault}\n          onClick={() => {\n            setMessageIsScrolled(true);\n            onMessageScrolled();\n            messageRootRef?.scrollTo(0, messageRootRef?.scrollHeight);\n          }}\n          className=\"signature-request-message__scroll-button\"\n          data-testid=\"signature-request-scroll-button\"\n        >\n          <i className=\"fa fa-arrow-down\" aria-label={t('scrollDown')} />\n        </Box>\n      ) : null}\n      <Box\n        backgroundColor={BackgroundColor.backgroundDefault}\n        paddingBottom={3}\n        paddingTop={3}\n        paddingRight={3}\n        margin={2}\n        borderRadius={BorderRadius.XL}\n        borderColor={BorderColor.borderMuted}\n        className=\"signature-request-message__root\"\n        ref={setMessageRootRef}\n      >\n        <Text\n          fontWeight={FontWeight.Bold}\n          color={TextColor.textDefault}\n          marginLeft={4}\n        >\n          {primaryType}\n        </Text>\n        <SignatureRequestData data={data.value} />\n      </Box>\n    </Box>\n  );\n}\n\nSignatureRequestMessage.propTypes = {\n  data: PropTypes.object.isRequired,\n  onMessageScrolled: PropTypes.func,\n  setMessageRootRef: PropTypes.func,\n  messageRootRef: PropTypes.object,\n  messageIsScrollable: PropTypes.bool,\n  primaryType: PropTypes.string,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  useDispatch,\n  useSelector,\n} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { memoize } from 'lodash';\nimport { ethErrors, serializeError } from 'eth-rpc-errors';\nimport {\n  resolvePendingApproval,\n  completedTx,\n  rejectPendingApproval,\n} from '../../../../store/actions';\nimport {\n  doesAddressRequireLedgerHidConnection,\n  getSubjectMetadata,\n  getTotalUnapprovedMessagesCount,\n} from '../../../../selectors';\nimport {\n  getProviderConfig,\n  isAddressLedger,\n} from '../../../../ducks/metamask/metamask';\nimport {\n  sanitizeMessage,\n} from '../../../../helpers/utils/util';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { useRejectTransactionModal } from '../../hooks/useRejectTransactionModal';\nimport { ConfirmPageContainerNavigation } from '../confirm-page-container';\nimport SignatureRequestHeader from '../signature-request-header/signature-request-header';\nimport SecurityProviderBannerMessage from '../security-provider-banner-message';\nimport LedgerInstructionField from '../ledger-instruction-field';\nimport ContractDetailsModal from '../contract-details-modal';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\nimport { MetaMetricsEventCategory } from '../../../../../shared/constants/metametrics';\nimport {\n  BlockaidResultType,\n  SECURITY_PROVIDER_MESSAGE_SEVERITY,\n} from '../../../../../shared/constants/security-provider';\nimport {\n  TextAlign,\n  TextColor,\n  TextVariant,\n  Size,\n} from '../../../../helpers/constants/design-system';\nimport {\n  ButtonVariant,\n  Button,\n  ButtonLink,\n  TagUrl,\n  Text,\n} from '../../../../components/component-library';\n\nimport BlockaidBannerAlert from '../security-provider-banner-alert/blockaid-banner-alert/blockaid-banner-alert';\nimport InsightWarnings from '../../../../components/app/snaps/insight-warnings';\nimport { NetworkChangeToastLegacy } from '../confirm/network-change-toast';\nimport { QueuedRequestsBannerAlert } from '../../confirmation/components/queued-requests-banner-alert';\nimport Message from './signature-request-message';\nimport Footer from './signature-request-footer';\n\nconst SignatureRequest = ({ txData, warnings }) => {\n  const trackEvent = useContext(MetaMetricsContext);\n  const dispatch = useDispatch();\n  const t = useI18nContext();\n\n  const [hasScrolledMessage, setHasScrolledMessage] = useState(false);\n  const [showContractDetails, setShowContractDetails] = useState(false);\n  const [messageRootRef, setMessageRootRef] = useState(null);\n  const [messageIsScrollable, setMessageIsScrollable] = useState(false);\n\n  const {\n    id,\n    type,\n    msgParams: { from, data, origin, version },\n  } = txData;\n\n  // not forwarded to component\n  const hardwareWalletRequiresConnection = useSelector((state) =>\n    doesAddressRequireLedgerHidConnection(state, from),\n  );\n  const { chainId, rpcPrefs } = useSelector(getProviderConfig);\n  const unapprovedMessagesCount = useSelector(getTotalUnapprovedMessagesCount);\n  const subjectMetadata = useSelector(getSubjectMetadata);\n  const isLedgerWallet = useSelector((state) => isAddressLedger(state, from));\n  const { handleCancelAll } = useRejectTransactionModal();\n\n\n  const [isShowingSigInsightWarnings, setIsShowingSigInsightWarnings] =\n    useState(false);\n\n  useEffect(() => {\n    setMessageIsScrollable(\n      messageRootRef?.scrollHeight > messageRootRef?.clientHeight,\n    );\n  }, [messageRootRef]);\n\n  const targetSubjectMetadata = subjectMetadata?.[origin] || null;\n\n  const parseMessage = memoize((dataToParse) => {\n    const {\n      message,\n      domain = {},\n      primaryType,\n      types,\n    } = JSON.parse(dataToParse);\n    const sanitizedMessage = sanitizeMessage(message, primaryType, types);\n    return { sanitizedMessage, domain, primaryType };\n  });\n\n  const submitButtonType =\n    txData.securityAlertResponse?.result_type === BlockaidResultType.Malicious\n      ? 'danger-primary'\n      : 'primary';\n\n  const onSign = async () => {\n\n    await dispatch(resolvePendingApproval(id));\n    completedTx(id);\n\n    trackEvent({\n      category: MetaMetricsEventCategory.Transactions,\n      event: 'Confirm',\n      properties: {\n        action: 'Sign Request',\n        legacy_event: true,\n        type,\n        version,\n      },\n    });\n  };\n\n  const onCancel = async () => {\n    await dispatch(\n      rejectPendingApproval(\n        id,\n        serializeError(ethErrors.provider.userRejectedRequest()),\n      ),\n    );\n    trackEvent({\n      category: MetaMetricsEventCategory.Transactions,\n      event: 'Cancel',\n      properties: {\n        action: 'Sign Request',\n        legacy_event: true,\n        type,\n        version,\n      },\n    });\n  };\n\n  const {\n    sanitizedMessage,\n    domain: { verifyingContract },\n    primaryType,\n  } = parseMessage(data);\n\n  return (\n    <>\n      <div className=\"signature-request\">\n        <ConfirmPageContainerNavigation />\n        <div\n          className=\"request-signature__account\"\n          data-testid=\"request-signature-account\"\n        >\n          <SignatureRequestHeader txData={txData} />\n        </div>\n        <div className=\"signature-request-content\">\n          <BlockaidBannerAlert\n            txData={txData}\n            marginLeft={4}\n            marginRight={4}\n            marginBottom={4}\n          />\n          <QueuedRequestsBannerAlert />\n          {(txData?.securityProviderResponse?.flagAsDangerous !== undefined &&\n            txData?.securityProviderResponse?.flagAsDangerous !==\n              SECURITY_PROVIDER_MESSAGE_SEVERITY.NOT_MALICIOUS) ||\n          (txData?.securityProviderResponse &&\n            Object.keys(txData.securityProviderResponse).length === 0) ? (\n            <SecurityProviderBannerMessage\n              securityProviderResponse={txData.securityProviderResponse}\n            />\n          ) : null}\n          {\n          }\n          <div className=\"signature-request__origin\">\n            <TagUrl\n              label={origin}\n              labelProps={{\n                color: TextColor.textAlternative,\n              }}\n              src={targetSubjectMetadata?.iconUrl}\n            />\n          </div>\n          <Text\n            className=\"signature-request__content__title\"\n            variant={TextVariant.headingLg}\n            marginTop={4}\n          >\n            {t('sigRequest')}\n          </Text>\n          <Text\n            className=\"request-signature__content__subtitle\"\n            variant={TextVariant.bodySm}\n            color={TextColor.textAlternative}\n            textAlign={TextAlign.Center}\n            marginLeft={12}\n            marginRight={12}\n            marginTop={4}\n            as=\"h6\"\n          >\n            {t('signatureRequestGuidance')}\n          </Text>\n          {verifyingContract ? (\n            <div>\n              <Button\n                variant={ButtonVariant.Link}\n                onClick={() => setShowContractDetails(true)}\n                className=\"signature-request-content__verify-contract-details\"\n                data-testid=\"verify-contract-details\"\n              >\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.primaryDefault}\n                  as=\"h6\"\n                >\n                  {t('verifyContractDetails')}\n                </Text>\n              </Button>\n            </div>\n          ) : null}\n        </div>\n        {isLedgerWallet ? (\n          <div className=\"confirm-approve-content__ledger-instruction-wrapper\">\n            <LedgerInstructionField showDataInstruction />\n          </div>\n        ) : null}\n        <Message\n          data={sanitizedMessage}\n          onMessageScrolled={() => setHasScrolledMessage(true)}\n          setMessageRootRef={setMessageRootRef}\n          messageRootRef={messageRootRef}\n          messageIsScrollable={messageIsScrollable}\n          primaryType={primaryType}\n        />\n        <Footer\n          cancelAction={onCancel}\n          signAction={() => {\n            if (warnings?.length >= 1) {\n              return setIsShowingSigInsightWarnings(true);\n            }\n\n            return onSign();\n          }}\n          disabled={\n            hardwareWalletRequiresConnection ||\n            (messageIsScrollable && !hasScrolledMessage)\n          }\n          submitButtonType={submitButtonType}\n        />\n        {showContractDetails && (\n          <ContractDetailsModal\n            toAddress={verifyingContract}\n            chainId={chainId}\n            rpcPrefs={rpcPrefs}\n            onClose={() => setShowContractDetails(false)}\n            isContractRequestingSignature\n          />\n        )}\n        {unapprovedMessagesCount > 1 ? (\n          <ButtonLink\n            size={Size.inherit}\n            className=\"signature-request__reject-all-button\"\n            data-testid=\"signature-request-reject-all\"\n            onClick={handleCancelAll}\n          >\n            {t('rejectRequestsN', [unapprovedMessagesCount])}\n          </ButtonLink>\n        ) : null}\n      </div>\n      {isShowingSigInsightWarnings && (\n        <InsightWarnings\n          warnings={warnings}\n          action=\"signing\"\n          origin={origin}\n          onCancel={() => setIsShowingSigInsightWarnings(false)}\n          onSubmit={() => {\n            onSign();\n            setIsShowingSigInsightWarnings(false);\n          }}\n        />\n      )}\n      <NetworkChangeToastLegacy confirmation={txData} />\n    </>\n  );\n};\n\nSignatureRequest.propTypes = {\n  txData: PropTypes.object,\n  warnings: PropTypes.array,\n};\n\nexport default SignatureRequest;\n","import React from 'react';\nimport { BigNumber } from 'bignumber.js';\nimport { useSelector } from 'react-redux';\nimport { Box, Text } from '../../../../components/component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { hexToDecimal } from '../../../../../shared/modules/conversion.utils';\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\nimport Tooltip from '../../../../components/ui/tooltip';\nimport { getIntlLocale } from '../../../../ducks/locale/locale';\nimport { shortenString as shortenAssetId } from '../../../../helpers/utils/util';\nimport { AssetIdentifier } from './types';\nimport { formatAmount, formatAmountMaxPrecision } from './formatAmount';\n\n/**\n * Displays a pill with an amount and a background color indicating whether the amount\n * is an increase or decrease.\n *\n * @param props\n * @param props.asset\n * @param props.amount\n */\nexport const AmountPill: React.FC<{\n  asset: AssetIdentifier;\n  amount: BigNumber;\n}> = ({ asset, amount }) => {\n  const locale = useSelector(getIntlLocale);\n\n  const backgroundColor = amount.isNegative()\n    ? BackgroundColor.errorMuted\n    : BackgroundColor.successMuted;\n\n  const color = amount.isNegative()\n    ? TextColor.errorAlternative\n    : TextColor.successDefault;\n\n  const amountParts: string[] = [amount.isNegative() ? '-' : '+'];\n  const tooltipParts: string[] = [];\n\n  // ERC721 amounts are always 1 and are not displayed.\n  if (asset.standard !== TokenStandard.ERC721) {\n    const formattedAmount = formatAmount(locale, amount.abs());\n    const fullPrecisionAmount = formatAmountMaxPrecision(locale, amount.abs());\n\n    amountParts.push(formattedAmount);\n    tooltipParts.push(fullPrecisionAmount);\n  }\n\n  if (asset.tokenId) {\n    const decimalTokenId = hexToDecimal(asset.tokenId);\n    const shortenedDecimalTokenId = shortenAssetId(decimalTokenId, {\n      truncatedCharLimit: 11,\n      truncatedStartChars: 4,\n      truncatedEndChars: 4,\n      skipCharacterInEnd: false,\n    });\n\n    const shortenedTokenIdPart = `#${shortenedDecimalTokenId}`;\n    const tooltipIdPart = `#${decimalTokenId}`;\n\n    amountParts.push(shortenedTokenIdPart);\n    tooltipParts.push(tooltipIdPart);\n  }\n\n  return (\n    <Box\n      data-testid=\"simulation-details-amount-pill\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      backgroundColor={backgroundColor}\n      alignItems={AlignItems.center}\n      borderRadius={BorderRadius.pill}\n      style={{\n        padding: '0px 8px',\n        flexShrink: 1,\n        flexBasis: 'auto',\n        minWidth: 0,\n      }}\n    >\n      <Tooltip\n        position=\"bottom\"\n        title={tooltipParts.join(' ')}\n        wrapperStyle={{ minWidth: 0 }}\n        theme=\"word-break-all\"\n        interactive\n      >\n        <Text ellipsis variant={TextVariant.bodyMd} color={color}>\n          {amountParts.join(' ')}\n        </Text>\n      </Tooltip>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { NameType } from '@metamask/name-controller';\nimport { useSelector } from 'react-redux';\nimport {\n  AvatarNetwork,\n  AvatarNetworkSize,\n  Box,\n  Text,\n} from '../../../../components/component-library';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport Name from '../../../../components/app/name';\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\nimport { getNativeCurrencyImage } from '../../../../selectors';\nimport { getNativeCurrency } from '../../../../ducks/metamask/metamask';\nimport { AssetIdentifier } from './types';\n\nconst NativeAssetPill: React.FC = () => {\n  const ticker = useSelector(getNativeCurrency);\n  const imgSrc = useSelector(getNativeCurrencyImage);\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      borderRadius={BorderRadius.pill}\n      alignItems={AlignItems.center}\n      backgroundColor={BackgroundColor.backgroundAlternative}\n      gap={1}\n      style={{\n        padding: '1px 8px 1px 4px',\n      }}\n    >\n      <AvatarNetwork\n        name={ticker}\n        size={AvatarNetworkSize.Xs}\n        src={imgSrc}\n        borderColor={BorderColor.borderDefault}\n      />\n      <Text ellipsis variant={TextVariant.bodyMd}>\n        {ticker}\n      </Text>\n    </Box>\n  );\n};\n\n/**\n * Displays a pill with an asset's icon and name.\n *\n * @param props\n * @param props.asset\n */\nexport const AssetPill: React.FC<{ asset: AssetIdentifier }> = ({ asset }) => (\n  <Box\n    data-testid=\"simulation-details-asset-pill\"\n    style={{\n      flexShrink: 1,\n      flexBasis: 'auto',\n      minWidth: 0,\n    }}\n  >\n    {asset.standard === TokenStandard.none ? (\n      <NativeAssetPill />\n    ) : (\n      <Name\n        type={NameType.ETHEREUM_ADDRESS}\n        value={asset.address}\n        preferContractSymbol\n      />\n    )}\n  </Box>\n);\n","import React, { useMemo } from 'react';\nimport { Box } from '../../../../components/component-library';\nimport {\n  Display,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\nimport { BalanceChangeRow } from './balance-change-row';\nimport { BalanceChange } from './types';\nimport { TotalFiatDisplay } from './fiat-display';\nimport { sortBalanceChanges } from './sortBalanceChanges';\n\n/**\n * Displays a list of incoming or outgoing balance changes, along with a heading and a\n * total fiat amount.\n *\n * @param props\n * @param props.heading\n * @param props.balanceChanges\n * @param props.testId\n * @returns\n */\nexport const BalanceChangeList: React.FC<{\n  heading: string;\n  balanceChanges: BalanceChange[];\n  testId?: string;\n}> = ({ heading, balanceChanges, testId }) => {\n  const sortedBalanceChanges = useMemo(() => {\n    return sortBalanceChanges(balanceChanges);\n  }, [balanceChanges]);\n\n  const fiatAmounts = useMemo(() => {\n    return sortedBalanceChanges.map((bc) => bc.fiatAmount);\n  }, [sortedBalanceChanges]);\n\n  if (sortedBalanceChanges.length === 0) {\n    return null; // Hide this component.\n  }\n  const showFiatTotal = sortedBalanceChanges.length > 1;\n\n  return (\n    <Box>\n      <Box\n        data-testid={testId}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        gap={3}\n      >\n        {sortedBalanceChanges.map((balanceChange, index) => (\n          <BalanceChangeRow\n            key={index}\n            label={index === 0 ? heading : undefined}\n            balanceChange={balanceChange}\n            showFiat={!showFiatTotal}\n          />\n        ))}\n      </Box>\n      {showFiatTotal && (\n        <Box display={Display.Flex} flexDirection={FlexDirection.RowReverse}>\n          <TotalFiatDisplay fiatAmounts={fiatAmounts} />\n        </Box>\n      )}\n    </Box>\n  );\n};\n","import React from 'react';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  FlexWrap,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { Box, Text } from '../../../../components/component-library';\nimport { AssetPill } from './asset-pill';\nimport { AmountPill } from './amount-pill';\nimport { BalanceChange } from './types';\nimport { IndividualFiatDisplay } from './fiat-display';\n\n/**\n * Displays a single balance change, including the asset, amount, and fiat value.\n *\n * @param props\n * @param props.label\n * @param props.showFiat\n * @param props.balanceChange\n */\nexport const BalanceChangeRow: React.FC<{\n  label?: string;\n  showFiat?: boolean;\n  balanceChange: BalanceChange;\n}> = ({ label, showFiat, balanceChange }) => {\n  const { asset, amount, fiatAmount } = balanceChange;\n  return (\n    <Box\n      data-testid=\"simulation-details-balance-change-row\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      alignItems={AlignItems.flexStart}\n      gap={1}\n      flexWrap={FlexWrap.Wrap}\n    >\n      {label && (\n        <Text style={{ whiteSpace: 'nowrap' }} variant={TextVariant.bodyMd}>\n          {label}\n        </Text>\n      )}\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        gap={1}\n        marginLeft={'auto'}\n        style={{ minWidth: 0 }}\n      >\n        <Box display={Display.Flex} flexDirection={FlexDirection.Row} gap={1}>\n          <AmountPill asset={asset} amount={amount} />\n          <AssetPill asset={asset} />\n        </Box>\n        {showFiat && <IndividualFiatDisplay fiatAmount={fiatAmount} />}\n      </Box>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { Text } from '../../../../components/component-library';\nimport { SizeNumber } from '../../../../components/component-library/box/box.types';\nimport Tooltip from '../../../../components/ui/tooltip';\nimport { useFiatFormatter } from '../../../../hooks/useFiatFormatter';\nimport { getShouldShowFiat } from '../../../../selectors';\nimport { FIAT_UNAVAILABLE, FiatAmount } from './types';\n\nconst textStyle = {\n  color: TextColor.textAlternative,\n  variant: TextVariant.bodySm,\n  paddingRight: 2 as SizeNumber,\n  textAlign: 'right' as TextAlign,\n} as const;\n\nconst FiatNotAvailableDisplay: React.FC = () => {\n  const t = useI18nContext();\n  return <Text {...textStyle}>{t('simulationDetailsFiatNotAvailable')}</Text>;\n};\n\nexport function calculateTotalFiat(fiatAmounts: FiatAmount[]): number {\n  return fiatAmounts.reduce((total: number, fiat) => {\n    return total + (fiat === FIAT_UNAVAILABLE ? 0 : fiat);\n  }, 0);\n}\n\n/**\n * Displays the fiat value of a single balance change.\n *\n * @param props - The props object.\n * @param props.fiatAmount - The fiat amount to display.\n * @param props.shorten - Whether to shorten the fiat amount.\n */\nexport const IndividualFiatDisplay: React.FC<{\n  fiatAmount: FiatAmount;\n  shorten?: boolean;\n}> = ({ fiatAmount, shorten = false }) => {\n  const shouldShowFiat = useSelector(getShouldShowFiat);\n  const fiatFormatter = useFiatFormatter();\n\n  if (!shouldShowFiat) {\n    return null;\n  }\n\n  if (fiatAmount === FIAT_UNAVAILABLE) {\n    return <FiatNotAvailableDisplay />;\n  }\n  const absFiat = Math.abs(fiatAmount);\n  const fiatDisplayValue = fiatFormatter(absFiat, { shorten });\n\n  return shorten ? (\n    <Tooltip position=\"bottom\" title={fiatDisplayValue} interactive>\n      <Text {...textStyle} data-testid=\"individual-fiat-display\">\n        {fiatDisplayValue}\n      </Text>\n    </Tooltip>\n  ) : (\n    <Text {...textStyle} data-testid=\"individual-fiat-display\">\n      {fiatDisplayValue}\n    </Text>\n  );\n};\n\n/**\n * Displays the total fiat value of a list of balance changes.\n *\n * @param props\n * @param props.fiatAmounts\n */\nexport const TotalFiatDisplay: React.FC<{\n  fiatAmounts: FiatAmount[];\n}> = ({ fiatAmounts }) => {\n  const shouldShowFiat = useSelector(getShouldShowFiat);\n  const t = useI18nContext();\n  const fiatFormatter = useFiatFormatter();\n  const totalFiat = calculateTotalFiat(fiatAmounts);\n\n  if (!shouldShowFiat) {\n    return null;\n  }\n\n  return totalFiat === 0 ? (\n    <FiatNotAvailableDisplay />\n  ) : (\n    <Text {...textStyle}>\n      {t('simulationDetailsTotalFiat', [fiatFormatter(Math.abs(totalFiat))])}\n    </Text>\n  );\n};\n","import { BigNumber } from 'bignumber.js';\nimport {\n  MIN_AMOUNT,\n  DEFAULT_PRECISION,\n} from '../../../../hooks/useCurrencyDisplay';\n\n// The number of significant decimals places to show for amounts less than 1.\nconst MAX_SIGNIFICANT_DECIMAL_PLACES = 3;\n\nconst ZERO_DISPLAY = '0';\n\nexport function formatAmountMaxPrecision(\n  locale: string,\n  num: number | BigNumber,\n): string {\n  const bigNumberValue = new BigNumber(num);\n  const numberOfDecimals = bigNumberValue.decimalPlaces();\n  const formattedValue = bigNumberValue.toFixed(numberOfDecimals);\n\n  const [integerPart, fractionalPart] = formattedValue.split('.');\n  const formattedIntegerPart = new Intl.NumberFormat(locale).format(\n    integerPart as unknown as number,\n  );\n\n  return fractionalPart\n    ? `${formattedIntegerPart}.${fractionalPart}`\n    : formattedIntegerPart;\n}\n\n/**\n * Formats the a token amount with variable precision and significant\n * digits.\n *\n * If |amount| < 1, we display a maximum number of significant\n * digits.\n *\n * If |amount| >= 1, we display all digits left of the decimal point.\n * We also display some decimal places for smaller amounts, and\n * gradually reduce the decimal precision as the amount\n * gets bigger until we only show whole numbers.\n *\n * Examples:\n *\n * | Amount               | Formatted          |\n * |----------------------|--------------------|\n * | 0                    | 0                  |\n * | 0.0000009            | <0.000001          |\n * | 0.0000456            | 0.000046           |\n * | 0.0004567            | 0.000457           |\n * | 0.003456             | 0.00346            |\n * | 0.023456             | 0.0235             |\n * | 0.125456             | 0.125              |\n * | 1.0034               | 1.003              |\n * | 1.034                | 1.034              |\n * | 1.3034               | 1.303              |\n * | 12.0345              | 12.03              |\n * | 121.456              | 121.5              |\n * | 1,034.123            | 1,034              |\n * | 47,361,034.006       | 47,361,034         |\n * | 12,130,982,923,409.5 | 12,130,982,923,410 |\n *\n * @param locale\n * @param amount\n */\nexport function formatAmount(locale: string, amount: BigNumber): string {\n  if (amount.isZero()) {\n    return ZERO_DISPLAY;\n  }\n\n  if (amount.abs().lessThan(MIN_AMOUNT)) {\n    return `<${formatAmountMaxPrecision(locale, MIN_AMOUNT)}`;\n  }\n\n  if (amount.abs().lessThan(1)) {\n    return new Intl.NumberFormat(locale, {\n      maximumSignificantDigits: MAX_SIGNIFICANT_DECIMAL_PLACES,\n    } as Intl.NumberFormatOptions).format(\n      amount.round(DEFAULT_PRECISION).toNumber(),\n    );\n  }\n\n  // Preserve all digits left of the decimal point.\n  // Cap the digits right of the decimal point: The more digits present\n  // on the left side of the decimal point, the less decimal places\n  // we show on the right side.\n  const digitsLeftOfDecimal = amount.abs().truncated().toString().length;\n  const maximumFractionDigits = Math.max(\n    0,\n    MAX_SIGNIFICANT_DECIMAL_PLACES - digitsLeftOfDecimal + 1,\n  );\n\n  return new Intl.NumberFormat(locale, {\n    maximumFractionDigits,\n  } as Intl.NumberFormatOptions).format(\n    // string is valid parameter for format function\n    // for some reason it gives TS issue\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/format#number\n    amount.toFixed(maximumFractionDigits) as unknown as number,\n  );\n}\n","export { SimulationDetails } from './simulation-details';\n","import {\n  SimulationData,\n  SimulationError,\n  SimulationErrorCode,\n} from '@metamask/transaction-controller';\nimport React from 'react';\nimport {\n  Box,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../../../components/component-library';\nimport Preloader from '../../../../components/ui/icon/preloader/preloader-icon.component';\nimport Tooltip from '../../../../components/ui/tooltip';\nimport {\n  AlignItems,\n  BorderColor,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { BalanceChangeList } from './balance-change-list';\nimport { useBalanceChanges } from './useBalanceChanges';\nimport { useSimulationMetrics } from './useSimulationMetrics';\n\nexport type SimulationDetailsProps = {\n  simulationData?: SimulationData;\n  transactionId: string;\n  enableMetrics?: boolean;\n  isTransactionsRedesign?: boolean;\n};\n\n/**\n * Displayed while loading the simulation preview.\n *\n * @returns\n */\nconst LoadingIndicator: React.FC = () => {\n  return (\n    <div role=\"progressbar\">\n      <Preloader size={20} />\n    </div>\n  );\n};\n\n/**\n * Content when simulation has failed.\n *\n * @param props\n * @param props.error\n */\nconst ErrorContent: React.FC<{ error: SimulationError }> = ({ error }) => {\n  const t = useI18nContext();\n\n  function getMessage() {\n    return error.code === SimulationErrorCode.Reverted\n      ? t('simulationDetailsTransactionReverted')\n      : t('simulationDetailsFailed');\n  }\n\n  return (\n    <Text\n      color={TextColor.warningDefault}\n      variant={TextVariant.bodyMd}\n      display={Display.Flex}\n      alignItems={AlignItems.center}\n    >\n      <Icon name={IconName.Warning} marginInlineEnd={1} />\n      {getMessage()}\n    </Text>\n  );\n};\n\n/**\n * Content when there are no balance changes.\n */\nconst EmptyContent: React.FC = () => {\n  const t = useI18nContext();\n  return (\n    <Text color={TextColor.textAlternative} variant={TextVariant.bodyMd}>\n      {t('simulationDetailsNoBalanceChanges')}\n    </Text>\n  );\n};\n\n/**\n * Header at the top of the simulation preview.\n *\n * @param props\n * @param props.children\n */\nconst HeaderLayout: React.FC = ({ children }) => {\n  const t = useI18nContext();\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.spaceBetween}\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        alignItems={AlignItems.center}\n        gap={1}\n      >\n        <Text variant={TextVariant.bodyMdMedium}>\n          {t('simulationDetailsTitle')}\n        </Text>\n        <Tooltip\n          interactive\n          position=\"top\"\n          containerClassName=\"info-tooltip__tooltip-container\"\n          tooltipInnerClassName=\"info-tooltip__tooltip-content\"\n          tooltipArrowClassName=\"info-tooltip__top-tooltip-arrow\"\n          html={t('simulationDetailsTitleTooltip')}\n          theme=\"tippy-tooltip-info\"\n          style={{ display: Display.Flex }}\n        >\n          <Icon\n            name={IconName.Question}\n            marginLeft={1}\n            color={IconColor.iconMuted}\n            size={IconSize.Sm}\n          />\n        </Tooltip>\n      </Box>\n      {children}\n    </Box>\n  );\n};\n\n/**\n * Top-level layout for the simulation preview.\n *\n * @param props\n * @param props.inHeader\n * @param props.isTransactionsRedesign\n * @param props.children\n */\nconst SimulationDetailsLayout: React.FC<{\n  inHeader?: React.ReactNode;\n  isTransactionsRedesign: boolean;\n}> = ({ inHeader, isTransactionsRedesign, children }) => (\n  <Box\n    data-testid=\"simulation-details-layout\"\n    className=\"simulation-details-layout\"\n    display={Display.Flex}\n    flexDirection={FlexDirection.Column}\n    borderRadius={BorderRadius.LG}\n    borderColor={\n      isTransactionsRedesign\n        ? BorderColor.transparent\n        : BorderColor.borderDefault\n    }\n    padding={3}\n    margin={isTransactionsRedesign ? null : 4}\n    gap={3}\n  >\n    <HeaderLayout>{inHeader}</HeaderLayout>\n    {children}\n  </Box>\n);\n\n/**\n * Preview of a transaction's effects using simulation data.\n *\n * @param props\n * @param props.simulationData - The simulation data to display.\n * @param props.transactionId - The ID of the transaction being simulated.\n * @param props.enableMetrics - Whether to enable simulation metrics.\n * @param props.isTransactionsRedesign - Whether or not the component is being\n * used inside the transaction redesign flow.\n */\nexport const SimulationDetails: React.FC<SimulationDetailsProps> = ({\n  simulationData,\n  transactionId,\n  enableMetrics = false,\n  isTransactionsRedesign = false,\n}: SimulationDetailsProps) => {\n  const t = useI18nContext();\n  const balanceChangesResult = useBalanceChanges(simulationData);\n  const loading = !simulationData || balanceChangesResult.pending;\n\n  useSimulationMetrics({\n    enableMetrics,\n    balanceChanges: balanceChangesResult.value,\n    loading,\n    simulationData,\n    transactionId,\n  });\n\n  if (loading) {\n    return (\n      <SimulationDetailsLayout\n        inHeader={<LoadingIndicator />}\n        isTransactionsRedesign={isTransactionsRedesign}\n      ></SimulationDetailsLayout>\n    );\n  }\n\n  const { error } = simulationData;\n\n  if (\n    [\n      SimulationErrorCode.ChainNotSupported,\n      SimulationErrorCode.Disabled,\n    ].includes(error?.code as SimulationErrorCode)\n  ) {\n    return null;\n  }\n\n  if (error) {\n    return (\n      <SimulationDetailsLayout isTransactionsRedesign={isTransactionsRedesign}>\n        <ErrorContent error={error} />\n      </SimulationDetailsLayout>\n    );\n  }\n\n  const balanceChanges = balanceChangesResult.value;\n  const empty = balanceChanges.length === 0;\n  if (empty) {\n    return (\n      <SimulationDetailsLayout isTransactionsRedesign={isTransactionsRedesign}>\n        <EmptyContent />\n      </SimulationDetailsLayout>\n    );\n  }\n\n  const outgoing = balanceChanges.filter((bc) => bc.amount.isNegative());\n  const incoming = balanceChanges.filter((bc) => !bc.amount.isNegative());\n  return (\n    <SimulationDetailsLayout isTransactionsRedesign={isTransactionsRedesign}>\n      <Box display={Display.Flex} flexDirection={FlexDirection.Column} gap={3}>\n        <BalanceChangeList\n          heading={t('simulationDetailsOutgoingHeading')}\n          balanceChanges={outgoing}\n          testId=\"simulation-rows-outgoing\"\n        />\n        <BalanceChangeList\n          heading={t('simulationDetailsIncomingHeading')}\n          balanceChanges={incoming}\n          testId=\"simulation-rows-incoming\"\n        />\n      </Box>\n    </SimulationDetailsLayout>\n  );\n};\n","import { TokenStandard } from '../../../../../shared/constants/transaction';\nimport { BalanceChange, FIAT_UNAVAILABLE } from './types';\n\n/** Comparator function for comparing two BalanceChange objects. */\ntype BalanceChangeComparator = (a: BalanceChange, b: BalanceChange) => number;\n\n/** Order of token standards for comparison. */\nconst tokenStandardOrder: TokenStandard[] = [\n  TokenStandard.none,\n  TokenStandard.ERC20,\n  TokenStandard.ERC721,\n  TokenStandard.ERC1155,\n];\n\n// Compares BalanceChange objects based on fiat amount.\nconst byFiatAmount: BalanceChangeComparator = (a, b) => {\n  if (a.fiatAmount === b.fiatAmount) {\n    return 0;\n  }\n  if (a.fiatAmount === FIAT_UNAVAILABLE) {\n    return 1;\n  }\n  if (b.fiatAmount === FIAT_UNAVAILABLE) {\n    return -1;\n  }\n  return b.fiatAmount - a.fiatAmount;\n};\n\n// Compares BalanceChange objects based on token standard.\nconst byTokenStandard: BalanceChangeComparator = (a, b) => {\n  const indexA = tokenStandardOrder.indexOf(a.asset.standard);\n  const indexB = tokenStandardOrder.indexOf(b.asset.standard);\n  return indexA - indexB;\n};\n\n/** Array of comparator functions for BalanceChange objects. */\nconst comparators: BalanceChangeComparator[] = [byFiatAmount, byTokenStandard];\n\n/**\n * Compares BalanceChange objects based on multiple criteria.\n *\n * @param a\n * @param b\n */\nexport const compareBalanceChanges: BalanceChangeComparator = (a, b) => {\n  for (const comparator of comparators) {\n    const result = comparator(a, b);\n    if (result !== 0) {\n      return result;\n    }\n  }\n  return 0;\n};\n\n/**\n * Sorts an array of balance changes based on multiple criteria\n *\n * @param balanceChanges\n */\nexport const sortBalanceChanges = (\n  balanceChanges: BalanceChange[],\n): BalanceChange[] => {\n  return [...balanceChanges].sort(compareBalanceChanges);\n};\n","import { Hex } from '@metamask/utils';\nimport { BigNumber } from 'bignumber.js';\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\n\nexport const NATIVE_ASSET_IDENTIFIER: NativeAssetIdentifier = {\n  standard: TokenStandard.none,\n};\n\n/**\n * Describes an amount of fiat.\n */\nexport const FIAT_UNAVAILABLE = null;\nexport type FiatAmountAvailable = number;\nexport type FiatAmount = FiatAmountAvailable | typeof FIAT_UNAVAILABLE;\n\n/**\n * Identifies the native asset of a chain.\n */\nexport type NativeAssetIdentifier = {\n  standard: TokenStandard.none;\n  address?: undefined;\n  tokenId?: undefined;\n};\n\n/**\n * Uniquely identifies a token asset on a chain.\n */\nexport type TokenAssetIdentifier = {\n  standard: Exclude<TokenStandard, TokenStandard.none>;\n  address: Hex;\n  tokenId?: Hex;\n};\n\nexport type AssetIdentifier = Readonly<\n  NativeAssetIdentifier | TokenAssetIdentifier\n>;\n\n/**\n * Describes a change in an asset's balance to a user's wallet.\n */\nexport type BalanceChange = Readonly<{\n  /**\n   * The asset identifier for the balance change.\n   */\n  asset: AssetIdentifier;\n\n  /**\n   * The quantity of asset tokens, expressed as a decimal value.\n   *\n   * This property represents the amount of tokens, taking into account the\n   * number of decimals supported by the asset. The value can be positive\n   * (increase) or negative (decrease).\n   *\n   * Example: If an asset supports 18 decimals, an `amount` of 1.5 represents\n   * 1.5 tokens, or more precisely, 1.5 * 10^18 of the smallest divisible unit.\n   */\n  amount: BigNumber;\n\n  /**\n   * The amount of fiat currency that corresponds to the asset amount.\n   */\n  fiatAmount: FiatAmount;\n}>;\n","import { Hex } from '@metamask/utils';\nimport { useSelector } from 'react-redux';\nimport {\n  SimulationBalanceChange,\n  SimulationData,\n  SimulationTokenBalanceChange,\n  SimulationTokenStandard,\n} from '@metamask/transaction-controller';\nimport { BigNumber } from 'bignumber.js';\nimport { ContractExchangeRates } from '@metamask/assets-controllers';\nimport { useAsyncResultOrThrow } from '../../../../hooks/useAsyncResult';\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\nimport { getConversionRate } from '../../../../ducks/metamask/metamask';\nimport { getCurrentChainId, getCurrentCurrency } from '../../../../selectors';\nimport { fetchTokenExchangeRates } from '../../../../helpers/utils/util';\nimport { ERC20_DEFAULT_DECIMALS, fetchErc20Decimals } from '../../utils/token';\n\nimport {\n  BalanceChange,\n  FIAT_UNAVAILABLE,\n  NATIVE_ASSET_IDENTIFIER,\n  TokenAssetIdentifier,\n} from './types';\n\nconst NATIVE_DECIMALS = 18;\n\n// See https://github.com/MikeMcl/bignumber.js/issues/11#issuecomment-23053776\nfunction convertNumberToStringWithPrecisionWarning(value: number): string {\n  return String(value);\n}\n\n// Converts a SimulationTokenStandard to a TokenStandard\nfunction convertStandard(standard: SimulationTokenStandard) {\n  switch (standard) {\n    case SimulationTokenStandard.erc20:\n      return TokenStandard.ERC20;\n    case SimulationTokenStandard.erc721:\n      return TokenStandard.ERC721;\n    case SimulationTokenStandard.erc1155:\n      return TokenStandard.ERC1155;\n    default:\n      throw new Error(`Unknown token standard: ${standard}`);\n  }\n}\n\n// Calculates the asset amount based on the balance change and decimals\nfunction getAssetAmount(\n  { isDecrease: isNegative, difference: quantity }: SimulationBalanceChange,\n  decimals: number,\n): BigNumber {\n  return (\n    new BigNumber(quantity, 16)\n      .times(isNegative ? -1 : 1)\n      // Shift the decimal point to the left by the number of decimals.\n      .shift(-decimals)\n  );\n}\n\n// Fetches token details for all the token addresses in the SimulationTokenBalanceChanges\nasync function fetchAllErc20Decimals(\n  addresses: Hex[],\n): Promise<Record<Hex, number>> {\n  const uniqueAddresses = [\n    ...new Set(addresses.map((address) => address.toLowerCase() as Hex)),\n  ];\n  const allDecimals = await Promise.all(\n    uniqueAddresses.map(fetchErc20Decimals),\n  );\n  return Object.fromEntries(\n    allDecimals.map((decimals, i) => [uniqueAddresses[i], decimals]),\n  );\n}\n\nasync function fetchTokenFiatRates(\n  fiatCurrency: string,\n  erc20TokenAddresses: Hex[],\n  chainId: Hex,\n): Promise<ContractExchangeRates> {\n  const tokenRates = await fetchTokenExchangeRates(\n    fiatCurrency,\n    erc20TokenAddresses,\n    chainId,\n  );\n\n  return Object.fromEntries(\n    Object.entries(tokenRates).map(([address, rate]) => [\n      address.toLowerCase(),\n      rate,\n    ]),\n  );\n}\n\n// Compiles the balance change for the native asset\nfunction getNativeBalanceChange(\n  nativeBalanceChange: SimulationBalanceChange | undefined,\n  nativeFiatRate: number | undefined,\n): BalanceChange | undefined {\n  if (!nativeBalanceChange) {\n    return undefined;\n  }\n  const asset = NATIVE_ASSET_IDENTIFIER;\n  const amount = getAssetAmount(nativeBalanceChange, NATIVE_DECIMALS);\n  const fiatAmount = nativeFiatRate\n    ? amount\n        .times(convertNumberToStringWithPrecisionWarning(nativeFiatRate))\n        .toNumber()\n    : FIAT_UNAVAILABLE;\n  return { asset, amount, fiatAmount };\n}\n\n// Compiles the balance changes for token assets\nfunction getTokenBalanceChanges(\n  tokenBalanceChanges: SimulationTokenBalanceChange[],\n  erc20Decimals: Record<Hex, number>,\n  erc20FiatRates: Partial<Record<Hex, number>>,\n): BalanceChange[] {\n  return tokenBalanceChanges.map((tokenBc) => {\n    const asset: TokenAssetIdentifier = {\n      standard: convertStandard(tokenBc.standard),\n      address: tokenBc.address.toLowerCase() as Hex,\n      tokenId: tokenBc.id,\n    };\n\n    const decimals =\n      // TODO(dbrans): stopgap for https://github.com/MetaMask/metamask-extension/issues/24690\n      asset.standard === TokenStandard.ERC20\n        ? erc20Decimals[asset.address] ?? ERC20_DEFAULT_DECIMALS\n        : 0;\n    const amount = getAssetAmount(tokenBc, decimals);\n\n    const fiatRate = erc20FiatRates[tokenBc.address];\n    const fiatAmount = fiatRate\n      ? amount\n          .times(convertNumberToStringWithPrecisionWarning(fiatRate))\n          .toNumber()\n      : FIAT_UNAVAILABLE;\n\n    return { asset, amount, fiatAmount };\n  });\n}\n\n// Compiles a list of balance changes from simulation data\nexport const useBalanceChanges = (\n  simulationData: SimulationData | undefined,\n): { pending: boolean; value: BalanceChange[] } => {\n  const chainId = useSelector(getCurrentChainId);\n  const fiatCurrency = useSelector(getCurrentCurrency);\n  const nativeFiatRate = useSelector(getConversionRate);\n\n  const { nativeBalanceChange, tokenBalanceChanges = [] } =\n    simulationData ?? {};\n\n  const erc20TokenAddresses = tokenBalanceChanges\n    .filter((tbc) => tbc.standard === SimulationTokenStandard.erc20)\n    .map((tbc) => tbc.address);\n\n  const erc20Decimals = useAsyncResultOrThrow(\n    () => fetchAllErc20Decimals(erc20TokenAddresses),\n    [JSON.stringify(erc20TokenAddresses)],\n  );\n\n  const erc20FiatRates = useAsyncResultOrThrow(\n    () => fetchTokenFiatRates(fiatCurrency, erc20TokenAddresses, chainId),\n    [JSON.stringify(erc20TokenAddresses), chainId, fiatCurrency],\n  );\n\n  if (erc20Decimals.pending || erc20FiatRates.pending || !simulationData) {\n    return { pending: true, value: [] };\n  }\n\n  const nativeChange = getNativeBalanceChange(\n    nativeBalanceChange,\n    nativeFiatRate,\n  );\n  const tokenChanges = getTokenBalanceChanges(\n    tokenBalanceChanges,\n    erc20Decimals.value,\n    erc20FiatRates.value,\n  );\n\n  const balanceChanges: BalanceChange[] = [\n    ...(nativeChange ? [nativeChange] : []),\n    ...tokenChanges,\n  ];\n  return { pending: false, value: balanceChanges };\n};\n","import { useState } from 'react';\n\nexport function useLoadingTime() {\n  const [loadingStart] = useState(Date.now());\n  const [loadingTime, setLoadingTime] = useState<number | undefined>();\n\n  const setLoadingComplete = () => {\n    if (loadingTime === undefined) {\n      setLoadingTime((Date.now() - loadingStart) / 1000);\n    }\n  };\n  return { loadingTime, setLoadingComplete };\n}\n","import {\n  SimulationData,\n  SimulationErrorCode,\n} from '@metamask/transaction-controller';\nimport { useContext, useEffect, useState } from 'react';\nimport { NameType } from '@metamask/name-controller';\nimport { useTransactionEventFragment } from '../../hooks/useTransactionEventFragment';\nimport {\n  UseDisplayNameRequest,\n  UseDisplayNameResponse,\n  useDisplayNames,\n} from '../../../../hooks/useDisplayName';\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../../shared/constants/metametrics';\nimport { calculateTotalFiat } from './fiat-display';\nimport { BalanceChange } from './types';\nimport { useLoadingTime } from './useLoadingTime';\n\nexport type UseSimulationMetricsProps = {\n  balanceChanges: BalanceChange[];\n  loading: boolean;\n  simulationData?: SimulationData;\n  transactionId: string;\n  enableMetrics: boolean;\n};\n\nexport enum SimulationResponseType {\n  Failed = 'failed',\n  Reverted = 'transaction_revert',\n  NoChanges = 'no_balance_change',\n  Changes = 'balance_change',\n  InProgress = 'simulation_in_progress',\n}\n\nexport enum AssetType {\n  Native = 'native',\n  ERC20 = 'erc20',\n  ERC721 = 'erc721',\n  ERC1155 = 'erc1155',\n}\n\nexport enum FiatType {\n  Available = 'available',\n  NotAvailable = 'not_available',\n}\n\nexport enum PetnameType {\n  Saved = 'saved',\n  Default = 'default',\n  Unknown = 'unknown',\n}\n\nexport function useSimulationMetrics({\n  balanceChanges,\n  loading,\n  simulationData,\n  transactionId,\n  enableMetrics,\n}: UseSimulationMetricsProps) {\n  const { loadingTime, setLoadingComplete } = useLoadingTime();\n\n  if (!loading) {\n    setLoadingComplete();\n  }\n\n  const displayNameRequests: UseDisplayNameRequest[] = balanceChanges.map(\n    ({ asset }) => ({\n      value: asset.address ?? '',\n      type: NameType.ETHEREUM_ADDRESS,\n      preferContractSymbol: true,\n    }),\n  );\n\n  const displayNames = useDisplayNames(displayNameRequests);\n\n  const displayNamesByAddress = displayNames.reduce(\n    (acc, displayNameResponse, index) => ({\n      ...acc,\n      [balanceChanges[index].asset.address ?? '']: displayNameResponse,\n    }),\n    {} as { [address: string]: UseDisplayNameResponse },\n  );\n\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n\n  useIncompleteAssetEvent(balanceChanges, displayNamesByAddress);\n\n  const receivingAssets = balanceChanges.filter(\n    (change) => !change.amount.isNegative(),\n  );\n\n  const sendingAssets = balanceChanges.filter((change) =>\n    change.amount.isNegative(),\n  );\n\n  const simulationResponse = getSimulationResponseType(simulationData);\n  const simulationLatency = loadingTime;\n\n  const properties = {\n    simulation_response: simulationResponse,\n    simulation_latency: simulationLatency,\n    ...getProperties(\n      receivingAssets,\n      'simulation_receiving_assets_',\n      displayNamesByAddress,\n    ),\n    ...getProperties(\n      sendingAssets,\n      'simulation_sending_assets_',\n      displayNamesByAddress,\n    ),\n  };\n\n  const sensitiveProperties = {\n    ...getSensitiveProperties(receivingAssets, 'simulation_receiving_assets_'),\n    ...getSensitiveProperties(sendingAssets, 'simulation_sending_assets_'),\n  };\n\n  const params = { properties, sensitiveProperties };\n\n  const shouldSkipMetrics =\n    !enableMetrics ||\n    [\n      SimulationErrorCode.ChainNotSupported,\n      SimulationErrorCode.Disabled,\n    ].includes(simulationData?.error?.code as SimulationErrorCode);\n\n  useEffect(() => {\n    if (shouldSkipMetrics) {\n      return;\n    }\n\n    updateTransactionEventFragment(params, transactionId);\n  }, [\n    shouldSkipMetrics,\n    updateTransactionEventFragment,\n    transactionId,\n    JSON.stringify(params),\n  ]);\n}\n\nfunction useIncompleteAssetEvent(\n  balanceChanges: BalanceChange[],\n  displayNamesByAddress: { [address: string]: UseDisplayNameResponse },\n) {\n  const trackEvent = useContext(MetaMetricsContext);\n  const [processedAssets, setProcessedAssets] = useState<string[]>([]);\n\n  for (const change of balanceChanges) {\n    const assetAddress = change.asset.address ?? '';\n    const displayName = displayNamesByAddress[assetAddress];\n\n    const isIncomplete =\n      (change.asset.address && !change.fiatAmount) ||\n      getPetnameType(change, displayName) === PetnameType.Unknown;\n\n    const isProcessed = processedAssets.includes(assetAddress);\n\n    if (!isIncomplete || isProcessed) {\n      continue;\n    }\n\n    trackEvent({\n      event: MetaMetricsEventName.SimulationIncompleteAssetDisplayed,\n      category: MetaMetricsEventCategory.Transactions,\n      properties: {\n        asset_address: change.asset.address,\n        asset_petname: getPetnameType(change, displayName),\n        asset_symbol: displayName.contractDisplayName,\n        asset_type: getAssetType(change.asset.standard),\n        fiat_conversion_available: change.fiatAmount\n          ? FiatType.Available\n          : FiatType.NotAvailable,\n        location: 'confirmation',\n      },\n    });\n\n    setProcessedAssets([...processedAssets, assetAddress]);\n  }\n}\n\nfunction getProperties(\n  changes: BalanceChange[],\n  prefix: string,\n  displayNamesByAddress: { [address: string]: UseDisplayNameResponse },\n) {\n  const quantity = changes.length;\n\n  const type = unique(\n    changes.map((change) => getAssetType(change.asset.standard)),\n  );\n\n  const value = unique(\n    changes.map((change) =>\n      change.fiatAmount ? FiatType.Available : FiatType.NotAvailable,\n    ),\n  );\n\n  const petname = unique(\n    changes.map((change) =>\n      getPetnameType(change, displayNamesByAddress[change.asset.address ?? '']),\n    ),\n  );\n\n  return getPrefixProperties({ petname, quantity, type, value }, prefix);\n}\n\nfunction getSensitiveProperties(changes: BalanceChange[], prefix: string) {\n  const fiatAmounts = changes.map((change) => change.fiatAmount);\n  const totalFiat = calculateTotalFiat(fiatAmounts);\n  const totalValue = totalFiat ? Math.abs(totalFiat) : undefined;\n\n  return getPrefixProperties({ total_value: totalValue }, prefix);\n}\n\n// TODO: Replace `any` with type\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getPrefixProperties(properties: Record<string, any>, prefix: string) {\n  return Object.entries(properties).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [`${prefix}${key}`]: value,\n    }),\n    {},\n  );\n}\n\nfunction getAssetType(standard: TokenStandard) {\n  switch (standard) {\n    case TokenStandard.ERC20:\n      return AssetType.ERC20;\n    case TokenStandard.ERC721:\n      return AssetType.ERC721;\n    case TokenStandard.ERC1155:\n      return AssetType.ERC1155;\n    default:\n      return AssetType.Native;\n  }\n}\n\nfunction getPetnameType(\n  balanceChange: BalanceChange,\n  displayName: UseDisplayNameResponse,\n) {\n  if (balanceChange.asset.standard === TokenStandard.none) {\n    return PetnameType.Default;\n  }\n\n  if (displayName.hasPetname) {\n    return PetnameType.Saved;\n  }\n\n  if (displayName.name) {\n    return PetnameType.Default;\n  }\n\n  return PetnameType.Unknown;\n}\n\nfunction getSimulationResponseType(\n  simulationData?: SimulationData,\n): SimulationResponseType {\n  if (!simulationData) {\n    return SimulationResponseType.InProgress;\n  }\n\n  if (simulationData.error?.code === SimulationErrorCode.Reverted) {\n    return SimulationResponseType.Reverted;\n  }\n\n  if (simulationData.error) {\n    return SimulationResponseType.Failed;\n  }\n\n  if (\n    !simulationData?.nativeBalanceChange &&\n    !simulationData?.tokenBalanceChanges.length\n  ) {\n    return SimulationResponseType.NoChanges;\n  }\n\n  return SimulationResponseType.Changes;\n}\n\nfunction unique<T>(list: T[]): T[] {\n  return Array.from(new Set(list));\n}\n","export { default } from './simulation-error-message';\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { BannerAlert } from '../../../../components/component-library';\nimport { Severity } from '../../../../helpers/constants/design-system';\n\nimport { I18nContext } from '../../../../../.storybook/i18n';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n  MetaMetricsEventUiCustomization,\n} from '../../../../../shared/constants/metametrics';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\n\nexport default function SimulationErrorMessage({\n  userAcknowledgedGasMissing = false,\n  setUserAcknowledgedGasMissing,\n}) {\n  const t = useContext(I18nContext);\n\n  const trackEvent = useContext(MetaMetricsContext);\n\n  useEffect(() => {\n    trackEvent({\n      category: MetaMetricsEventCategory.Transactions,\n      event: MetaMetricsEventName.SimulationFails,\n      properties: {\n        ui_customizations: [\n          MetaMetricsEventUiCustomization.GasEstimationFailed,\n        ],\n      },\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return userAcknowledgedGasMissing === true ? (\n    <BannerAlert severity={Severity.Danger}>\n      {t('simulationErrorMessageV2')}\n    </BannerAlert>\n  ) : (\n    <BannerAlert\n      severity={Severity.Danger}\n      actionButtonLabel={t('proceedWithTransaction')}\n      actionButtonOnClick={setUserAcknowledgedGasMissing}\n    >\n      {t('simulationErrorMessageV2')}\n    </BannerAlert>\n  );\n}\n\nSimulationErrorMessage.propTypes = {\n  userAcknowledgedGasMissing: PropTypes.bool,\n  setUserAcknowledgedGasMissing: PropTypes.func,\n};\n","import React from 'react';\n\nimport ActionableMessage from '../../../../components/ui/actionable-message';\nimport { Text } from '../../../../components/component-library';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\n\nconst SnapAccountErrorMessage = ({\n  message,\n  learnMoreLink,\n  error,\n}: {\n  message: string;\n  learnMoreLink?: string;\n  error?: string;\n}) => {\n  const t = useI18nContext();\n\n  return (\n    <>\n      <Text\n        data-testid=\"snap-account-error-message-text\"\n        style={error ? { marginBottom: 2 } : {}}\n      >\n        {message}\n        {Boolean(learnMoreLink) && (\n          <>\n            {' '}\n            <a\n              data-testid=\"snap-account-error-message-learn-more-link\"\n              href={learnMoreLink}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {t('learnMoreUpperCase') as string}\n            </a>\n          </>\n        )}\n      </Text>\n      {Boolean(error) && (\n        <ActionableMessage\n          type={'danger'}\n          message={error}\n          dataTestId={'snap-account-error-message-error'}\n        ></ActionableMessage>\n      )}\n    </>\n  );\n};\n\nexport default SnapAccountErrorMessage;\n","export { default as SnapAccountErrorMessage } from './SnapAccountErrorMessage';\n","import React from 'react';\n\nimport { Text } from '../../../../components/component-library';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { SnapAccountCard } from '../../../remove-snap-account';\n\nconst SnapAccountSuccessMessage = ({\n  message,\n  address,\n  learnMoreLink,\n}: {\n  message: string;\n  address: string;\n  learnMoreLink?: string;\n}) => {\n  const t = useI18nContext();\n\n  return (\n    <>\n      <SnapAccountCard address={address} />\n      <Text data-testid=\"snap-account-success-message-text\">\n        {message}\n        {Boolean(learnMoreLink) && (\n          <>\n            {' '}\n            <a\n              data-testid=\"snap-account-success-message-learn-more-link\"\n              href={learnMoreLink}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {t('learnMoreUpperCase') as string}\n            </a>\n          </>\n        )}\n      </Text>\n    </>\n  );\n};\n\nexport default SnapAccountSuccessMessage;\n","export { default as SnapAccountSuccessMessage } from './SnapAccountSuccessMessage';\n","export { default } from './transaction-alerts';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { TransactionType } from '@metamask/transaction-controller';\nimport { PriorityLevels } from '../../../../../shared/constants/gas';\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport {\n  BannerAlert,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  ButtonLink,\n  Text,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../../../components/component-library';\nimport SimulationErrorMessage from '../simulation-error-message';\nimport { SEVERITIES } from '../../../../helpers/constants/design-system';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { submittedPendingTransactionsSelector } from '../../../../selectors';\nimport ZENDESK_URLS from '../../../../helpers/constants/zendesk-url';\n///: END:ONLY_INCLUDE_IF\n\nimport { isSuspiciousResponse } from '../../../../../shared/modules/security-provider.utils';\nimport BlockaidBannerAlert from '../security-provider-banner-alert/blockaid-banner-alert/blockaid-banner-alert';\nimport SecurityProviderBannerMessage from '../security-provider-banner-message/security-provider-banner-message';\nimport { getNativeCurrency } from '../../../../ducks/metamask/metamask';\nimport { parseStandardTokenTransactionData } from '../../../../../shared/modules/transaction.utils';\nimport { getTokenValueParam } from '../../../../../shared/lib/metamask-controller-utils';\nimport { QueuedRequestsBannerAlert } from '../../confirmation/components/queued-requests-banner-alert';\n\nconst TransactionAlerts = ({\n  userAcknowledgedGasMissing,\n  setUserAcknowledgedGasMissing,\n  tokenSymbol,\n  txData,\n  isUsingPaymaster,\n}) => {\n  const {\n    estimateUsed,\n    hasSimulationError,\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    supportsEIP1559,\n    ///: END:ONLY_INCLUDE_IF\n  } = useGasFeeContext();\n\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  const pendingTransactions = useSelector(submittedPendingTransactionsSelector);\n  ///: END:ONLY_INCLUDE_IF\n\n  const t = useI18nContext();\n  const nativeCurrency = useSelector(getNativeCurrency);\n  const transactionData = txData.txParams.data;\n  const currentTokenSymbol = tokenSymbol || nativeCurrency;\n  let currentTokenAmount;\n\n  if (txData.type === TransactionType.simpleSend) {\n    currentTokenAmount = txData.txParams.value;\n  }\n  if (txData.type === TransactionType.tokenMethodTransfer) {\n    const tokenData = parseStandardTokenTransactionData(transactionData);\n    currentTokenAmount = getTokenValueParam(tokenData);\n  }\n\n  // isSendingZero is true when either sending native tokens where the value is in txParams\n  // or sending tokens where the value is in the txData\n  // We want to only display this warning in the cases where txType is simpleSend || transfer and not contractInteractions\n  const hasProperTxType =\n    txData.type === TransactionType.simpleSend ||\n    txData.type === TransactionType.tokenMethodTransfer;\n\n  const isSendingZero =\n    hasProperTxType &&\n    (currentTokenAmount === '0x0' || currentTokenAmount === '0');\n\n  return (\n    <div className=\"transaction-alerts\">\n      <BlockaidBannerAlert txData={txData} />\n      {isSuspiciousResponse(txData?.securityProviderResponse) && (\n        <SecurityProviderBannerMessage\n          securityProviderResponse={txData.securityProviderResponse}\n        />\n      )}\n\n      <QueuedRequestsBannerAlert />\n\n      {hasSimulationError && (\n        <SimulationErrorMessage\n          userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n          setUserAcknowledgedGasMissing={setUserAcknowledgedGasMissing}\n        />\n      )}\n\n      {\n        ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n        supportsEIP1559 && pendingTransactions?.length > 0 && (\n          <BannerAlert severity={SEVERITIES.WARNING}>\n            <Text as=\"p\">\n              <strong>\n                {pendingTransactions?.length === 1\n                  ? t('pendingTransactionSingle', [pendingTransactions?.length])\n                  : t('pendingTransactionMultiple', [\n                      pendingTransactions?.length,\n                    ])}\n              </strong>{' '}\n              {t('pendingTransactionInfo')}\n              {t('learnCancelSpeeedup', [\n                <ButtonLink\n                  key=\"cancelSpeedUpInfo\"\n                  href={ZENDESK_URLS.SPEEDUP_CANCEL}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  {t('cancelSpeedUp')}\n                </ButtonLink>,\n              ])}\n            </Text>\n          </BannerAlert>\n        )\n        ///: END:ONLY_INCLUDE_IF\n      }\n\n      {estimateUsed === PriorityLevels.low && (\n        <BannerAlert\n          data-testid=\"low-gas-fee-alert\"\n          severity={SEVERITIES.WARNING}\n        >\n          {t('lowPriorityMessage')}\n        </BannerAlert>\n      )}\n      {isSendingZero && (\n        <BannerAlert severity={SEVERITIES.WARNING}>\n          {t('sendingZeroAmount', [currentTokenSymbol])}\n        </BannerAlert>\n      )}\n      {isUsingPaymaster && (\n        <BannerAlert data-testid=\"paymaster-alert\" severity={SEVERITIES.INFO}>\n          {t('paymasterInUse')}\n        </BannerAlert>\n      )}\n    </div>\n  );\n};\n\nTransactionAlerts.propTypes = {\n  userAcknowledgedGasMissing: PropTypes.bool,\n  setUserAcknowledgedGasMissing: PropTypes.func,\n  tokenSymbol: PropTypes.string,\n  txData: PropTypes.object,\n  isUsingPaymaster: PropTypes.bool,\n};\n\nexport default TransactionAlerts;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { shortenAddress } from '../../../../../../../helpers/utils/util';\nimport Identicon from '../../../../../../../components/ui/identicon';\nimport { useI18nContext } from '../../../../../../../hooks/useI18nContext';\nimport {\n  getMemoizedAddressBook,\n  getMetadataContractName,\n} from '../../../../../../../selectors';\nimport NicknamePopovers from '../../../../../../../components/app/modals/nickname-popovers';\nimport { COPY_OPTIONS } from '../../../../../../../../shared/constants/copy';\n\nconst Address = ({\n  checksummedRecipientAddress,\n  onRecipientClick,\n  addressOnly,\n  recipientEns,\n  recipientName,\n}) => {\n  const t = useI18nContext();\n  const [showNicknamePopovers, setShowNicknamePopovers] = useState(false);\n\n  const addressBook = useSelector(getMemoizedAddressBook);\n  const addressBookEntryObject = addressBook.find(\n    (entry) =>\n      entry.address.toLowerCase() === checksummedRecipientAddress.toLowerCase(),\n  );\n  const recipientNickname = addressBookEntryObject?.name;\n  const recipientMetadataName = useSelector((state) =>\n    getMetadataContractName(state, checksummedRecipientAddress),\n  );\n\n  const recipientToRender = addressOnly\n    ? recipientName ||\n      recipientNickname ||\n      recipientMetadataName ||\n      recipientEns ||\n      shortenAddress(checksummedRecipientAddress)\n    : recipientName ||\n      recipientNickname ||\n      recipientMetadataName ||\n      recipientEns ||\n      t('newContract');\n\n  return (\n    <div\n      className=\"tx-insight tx-insight-component tx-insight-component-address\"\n      onClick={() => {\n        copyToClipboard(checksummedRecipientAddress, COPY_OPTIONS);\n        if (onRecipientClick) {\n          onRecipientClick();\n        }\n      }}\n    >\n      <div className=\"tx-insight-component-address__sender-icon\">\n        <Identicon address={checksummedRecipientAddress} diameter={18} />\n      </div>\n\n      <div\n        className=\"tx-insight-component-address__name\"\n        onClick={() => setShowNicknamePopovers(true)}\n      >\n        {recipientToRender}\n      </div>\n      {showNicknamePopovers ? (\n        <NicknamePopovers\n          onClose={() => setShowNicknamePopovers(false)}\n          address={checksummedRecipientAddress}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nAddress.propTypes = {\n  checksummedRecipientAddress: PropTypes.string,\n  recipientName: PropTypes.string,\n  recipientEns: PropTypes.string,\n  addressOnly: PropTypes.bool,\n  onRecipientClick: PropTypes.func,\n};\n\nexport default Address;\n","export { default } from './address.component';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../../../../../../../components/ui/tooltip/tooltip';\nimport { I18nContext } from '../../../../../../../contexts/i18n';\n\nimport { useCopyToClipboard } from '../../../../../../../hooks/useCopyToClipboard';\nimport {\n  Icon,\n  IconName,\n} from '../../../../../../../components/component-library';\nimport { IconColor } from '../../../../../../../helpers/constants/design-system';\n\nconst CopyRawData = ({ data }) => {\n  const t = useContext(I18nContext);\n  const [copied, handleCopy] = useCopyToClipboard();\n\n  return (\n    <div className=\"copy-raw-data\">\n      <Tooltip position=\"right\" title={copied ? t('copiedExclamation') : ''}>\n        <button\n          onClick={() => {\n            handleCopy(data);\n          }}\n          className=\"copy-raw-data__button\"\n        >\n          <div className=\"copy-raw-data__icon\">\n            <Icon\n              name={copied ? IconName.CopySuccess : IconName.Copy}\n              color={IconColor.iconDefault}\n            />\n          </div>\n          <div className=\"copy-raw-data__label\">\n            {t('copyRawTransactionData')}\n          </div>\n        </button>\n      </Tooltip>\n    </div>\n  );\n};\n\nCopyRawData.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default CopyRawData;\n","export { default } from './copy-raw-data.component';\n","export { default } from './transaction-detail-item.component';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport {\n  Color,\n  TextAlign,\n  TextVariant,\n  Display,\n  FlexWrap,\n  BlockSize,\n} from '../../../../helpers/constants/design-system';\nimport { Text } from '../../../../components/component-library';\n\nexport default function TransactionDetailItem({\n  'data-testid': dataTestId,\n  detailTitle = '',\n  detailText,\n  detailTotal = '',\n  hasDetailTextInSeparateRow = false,\n  subTitle = '',\n  subText = '',\n  flexWidthValues = false,\n  ...props\n}) {\n  return (\n    <div\n      className=\"transaction-detail-item\"\n      data-testid={dataTestId}\n      {...props}\n    >\n      <div className=\"transaction-detail-item__row\">\n        <Text\n          as=\"h6\"\n          display={Display.Flex}\n          flexWrap={FlexWrap.NoWrap}\n          paddingBottom={1}\n          variant={TextVariant.bodyMdMedium}\n        >\n          {detailTitle}\n        </Text>\n        <div\n          className={classnames('transaction-detail-item__detail-values', {\n            'transaction-detail-item__detail-values--flex-width':\n              flexWidthValues,\n          })}\n        >\n          {detailText && (\n            <Text\n              as=\"h6\"\n              color={Color.textAlternative}\n              width={hasDetailTextInSeparateRow ? BlockSize.Full : null}\n            >\n              {detailText}\n            </Text>\n          )}\n          <Text\n            as=\"h6\"\n            color={Color.textDefault}\n            marginLeft={1}\n            textAlign={TextAlign.Right}\n            variant={TextVariant.bodyMd}\n          >\n            {detailTotal}\n          </Text>\n        </div>\n      </div>\n      <div className=\"transaction-detail-item__row\">\n        {React.isValidElement(subTitle) ? (\n          <div>{subTitle}</div>\n        ) : (\n          <Text\n            as=\"h6\"\n            variant={TextVariant.bodySm}\n            color={Color.textMuted}\n            style={{ flex: '1 0 auto' }}\n          >\n            {subTitle}\n          </Text>\n        )}\n\n        <Text\n          as=\"h6\"\n          variant={TextVariant.bodySm}\n          color={Color.textAlternative}\n          textAlign={TextAlign.End}\n          className=\"transaction-detail-item__row-subText\"\n        >\n          {subText}\n        </Text>\n      </div>\n    </div>\n  );\n}\n\nTransactionDetailItem.propTypes = {\n  /**\n   * An identifier for use in end-to-end tests.\n   */\n  'data-testid': PropTypes.string,\n  /**\n   * Detail title text wrapped in Typography component.\n   */\n  detailTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * Text to show on the left of the detailTotal. Wrapped in Typography component.\n   */\n  detailText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * Total amount to show. Wrapped in Typography component.\n   */\n  detailTotal: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * If true, separates detailText and detailTotal into separate rows\n   */\n  hasDetailTextInSeparateRow: PropTypes.bool,\n  /**\n   * Subtitle text. Checks if React.isValidElement before displaying. Displays under detailTitle\n   */\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * Text to show under detailTotal. Wrapped in Typography component.\n   */\n  subText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /**\n   * Changes width to auto for transaction-detail-item__detail-values\n   */\n  flexWidthValues: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useGasFeeContext } from '../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport Box from '../../../../components/ui/box';\n\nimport EditGasFeeButton from '../edit-gas-fee-button';\nimport TransactionDetailItem from '../transaction-detail-item/transaction-detail-item.component';\n\nexport default function TransactionDetail({\n  rows = [],\n  onEdit,\n  userAcknowledgedGasMissing = false,\n  disableEditGasFeeButton = false,\n}) {\n  const t = useI18nContext();\n  const { supportsEIP1559 } = useGasFeeContext();\n\n  return (\n    <div className=\"transaction-detail\">\n      {supportsEIP1559 && !disableEditGasFeeButton && (\n        <Box display=\"flex\" justifyContent=\"flex-end\" paddingTop={5}>\n          <EditGasFeeButton\n            userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n          />\n        </Box>\n      )}\n      {!supportsEIP1559 && onEdit && (\n        <div className=\"transaction-detail-edit\">\n          <button onClick={onEdit}>{t('edit')}</button>\n        </div>\n      )}\n      <div className=\"transaction-detail-rows\">{rows}</div>\n    </div>\n  );\n}\n\nTransactionDetail.propTypes = {\n  /**\n   * Show item content for transaction detail. Array of TransactionDetailItem components\n   */\n  rows: PropTypes.arrayOf(TransactionDetailItem).isRequired,\n  /**\n   * onClick handler for the Edit link\n   */\n  onEdit: PropTypes.func,\n  userAcknowledgedGasMissing: PropTypes.bool,\n  disableEditGasFeeButton: PropTypes.bool,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { getTokenTrackerLink } from '@metamask/etherscan-link';\nimport UrlIcon from '../../../../components/ui/url-icon';\nimport { addressSummary } from '../../../../helpers/utils/util';\nimport { formatCurrency } from '../../../../helpers/utils/confirm-tx.util';\nimport Button from '../../../../components/ui/button';\nimport SimulationErrorMessage from '../../components/simulation-error-message';\nimport MultiLayerFeeMessage from '../../components/multilayer-fee-message';\nimport SecurityProviderBannerMessage from '../../components/security-provider-banner-message/security-provider-banner-message';\nimport {\n  DISPLAY,\n  TextColor,\n  IconColor,\n  TextVariant,\n  AlignItems,\n} from '../../../../helpers/constants/design-system';\nimport { ConfirmPageContainerWarning } from '../../components/confirm-page-container/confirm-page-container-content';\nimport LedgerInstructionField from '../../components/ledger-instruction-field';\nimport BlockaidBannerAlert from '../../components/security-provider-banner-alert/blockaid-banner-alert/blockaid-banner-alert';\nimport { isSuspiciousResponse } from '../../../../../shared/modules/security-provider.utils';\n\nimport { TokenStandard } from '../../../../../shared/constants/transaction';\nimport {\n  CHAIN_IDS,\n  TEST_CHAINS,\n} from '../../../../../shared/constants/network';\nimport ContractDetailsModal from '../../components/contract-details-modal/contract-details-modal';\nimport {\n  ButtonIcon,\n  Icon,\n  IconName,\n  Text,\n  Box,\n} from '../../../../components/component-library';\nimport TransactionDetailItem from '../../components/transaction-detail-item/transaction-detail-item.component';\nimport UserPreferencedCurrencyDisplay from '../../../../components/app/user-preferenced-currency-display';\nimport { PRIMARY, SECONDARY } from '../../../../helpers/constants/common';\nimport { ConfirmGasDisplay } from '../../components/confirm-gas-display';\nimport CustomNonce from '../../components/custom-nonce';\nimport { COPY_OPTIONS } from '../../../../../shared/constants/copy';\nimport FeeDetailsComponent from '../../components/fee-details-component/fee-details-component';\n\nexport default class ConfirmApproveContent extends Component {\n  static contextTypes = {\n    t: PropTypes.func,\n    trackEvent: PropTypes.func,\n  };\n\n  static propTypes = {\n    tokenSymbol: PropTypes.string,\n    siteImage: PropTypes.string,\n    origin: PropTypes.string,\n    data: PropTypes.string,\n    toAddress: PropTypes.string,\n    currentCurrency: PropTypes.string,\n    nativeCurrency: PropTypes.string,\n    fiatTransactionTotal: PropTypes.string,\n    ethTransactionTotal: PropTypes.string,\n    useNonceField: PropTypes.bool,\n    customNonceValue: PropTypes.string,\n    updateCustomNonce: PropTypes.func,\n    getNextNonce: PropTypes.func,\n    nextNonce: PropTypes.number,\n    showCustomizeNonceModal: PropTypes.func,\n    warning: PropTypes.string,\n    txData: PropTypes.object,\n    fromAddressIsLedger: PropTypes.bool,\n    chainId: PropTypes.string,\n    tokenAddress: PropTypes.string,\n    rpcPrefs: PropTypes.object,\n    isContract: PropTypes.bool,\n    hexTransactionTotal: PropTypes.string,\n    hexMinimumTransactionFee: PropTypes.string,\n    hasLayer1GasFee: PropTypes.bool,\n    supportsEIP1559: PropTypes.bool,\n    assetName: PropTypes.string,\n    tokenId: PropTypes.string,\n    assetStandard: PropTypes.string,\n    isSetApproveForAll: PropTypes.bool,\n    isApprovalOrRejection: PropTypes.bool,\n    userAddress: PropTypes.string,\n    userAcknowledgedGasMissing: PropTypes.bool,\n    setUserAcknowledgedGasMissing: PropTypes.func,\n    renderSimulationFailureWarning: PropTypes.bool,\n    useCurrencyRateCheck: PropTypes.bool,\n    useNativeCurrencyAsPrimaryCurrency: PropTypes.bool,\n  };\n\n  state = {\n    showFullTxDetails: false,\n    copied: false,\n    setShowContractDetails: false,\n  };\n\n  renderApproveContentCard({\n    showHeader = true,\n    symbol,\n    title,\n    content,\n    footer,\n    noBorder,\n    showFeeDetails = false,\n  }) {\n    const { supportsEIP1559, txData, useCurrencyRateCheck } = this.props;\n    const { t } = this.context;\n    return (\n      <div\n        className={classnames({\n          'confirm-approve-content__card': !noBorder,\n          'confirm-approve-content__card--no-border': noBorder,\n        })}\n      >\n        {showHeader && (\n          <div className=\"confirm-approve-content__card-header\">\n            {supportsEIP1559 && title === t('transactionFee') ? null : (\n              <>\n                <div className=\"confirm-approve-content__card-header__symbol\">\n                  {symbol}\n                </div>\n                <div className=\"confirm-approve-content__card-header__title\">\n                  {title}\n                </div>\n              </>\n            )}\n          </div>\n        )}\n        <div className=\"confirm-approve-content__card-content\">{content}</div>\n\n        {showFeeDetails && (\n          <Box marginBottom={4}>\n            <FeeDetailsComponent\n              txData={txData}\n              useCurrencyRateCheck={useCurrencyRateCheck}\n            />\n          </Box>\n        )}\n\n        {footer}\n      </div>\n    );\n  }\n\n  // TODO: Add \"Learn Why\" with link to the feeAssociatedRequest text\n  renderTransactionDetailsContent() {\n    const { t } = this.context;\n    const {\n      currentCurrency,\n      nativeCurrency,\n      ethTransactionTotal,\n      fiatTransactionTotal,\n      hexTransactionTotal,\n      hexMinimumTransactionFee,\n      txData,\n      hasLayer1GasFee,\n      supportsEIP1559,\n      userAcknowledgedGasMissing,\n      renderSimulationFailureWarning,\n      useCurrencyRateCheck,\n      useNativeCurrencyAsPrimaryCurrency,\n    } = this.props;\n    if (\n      !hasLayer1GasFee &&\n      supportsEIP1559 &&\n      !renderSimulationFailureWarning\n    ) {\n      return (\n        <ConfirmGasDisplay\n          userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n        />\n      );\n    }\n    return (\n      <div className=\"confirm-approve-content__transaction-details-content\">\n        {hasLayer1GasFee ? (\n          <div className=\"confirm-approve-content__transaction-details-extra-content\">\n            <TransactionDetailItem\n              key=\"confirm-approve-content-min-tx-fee\"\n              detailTitle={t('transactionDetailLayer2GasHeading')}\n              detailTotal={\n                <UserPreferencedCurrencyDisplay\n                  type={PRIMARY}\n                  value={hexMinimumTransactionFee}\n                  hideLabel={!useNativeCurrencyAsPrimaryCurrency}\n                  numberOfDecimals={18}\n                  suffixProps={{\n                    color: TextColor.textDefault,\n                    variant: TextVariant.bodyMdBold,\n                  }}\n                  textProps={{\n                    color: TextColor.textDefault,\n                    variant: TextVariant.bodyMdBold,\n                  }}\n                />\n              }\n              detailText={\n                <UserPreferencedCurrencyDisplay\n                  type={SECONDARY}\n                  value={hexMinimumTransactionFee}\n                  hideLabel={Boolean(useNativeCurrencyAsPrimaryCurrency)}\n                />\n              }\n              noBold\n              flexWidthValues\n            />\n            <MultiLayerFeeMessage\n              transaction={txData}\n              layer2fee={hexTransactionTotal}\n              nativeCurrency={nativeCurrency}\n              plainStyle\n            />\n          </div>\n        ) : (\n          <>\n            <div className=\"confirm-approve-content__small-text\">\n              {t('feeAssociatedRequest')}\n            </div>\n            <div className=\"confirm-approve-content__transaction-details-content__fee\">\n              <div className=\"confirm-approve-content__transaction-details-content__primary-fee\">\n                {useCurrencyRateCheck &&\n                  formatCurrency(fiatTransactionTotal, currentCurrency)}\n              </div>\n              <div className=\"confirm-approve-content__transaction-details-content__secondary-fee\">\n                {`${ethTransactionTotal} ${nativeCurrency}`}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderERC721OrERC1155PermissionContent() {\n    const { t } = this.context;\n    const { origin, toAddress, isContract, isSetApproveForAll, tokenSymbol } =\n      this.props;\n\n    const titleTokenDescription = this.getTitleTokenDescription();\n    const approvedAssetText = tokenSymbol\n      ? t('allOfYour', [titleTokenDescription])\n      : t('allYourNFTsOf', [titleTokenDescription]);\n\n    const displayedAddress = isContract\n      ? `${t('contract')} (${addressSummary(toAddress)})`\n      : addressSummary(toAddress);\n    return (\n      <div className=\"flex-column\">\n        <div className=\"confirm-approve-content__small-text\">\n          {t('accessAndSpendNoticeNFT', [origin])}\n        </div>\n        <div className=\"flex-row\">\n          <div className=\"confirm-approve-content__label\">\n            {t('approvedAsset')}:\n          </div>\n          <div className=\"confirm-approve-content__medium-text\">\n            {isSetApproveForAll ? approvedAssetText : titleTokenDescription}\n          </div>\n        </div>\n        <div className=\"flex-row\">\n          <div className=\"confirm-approve-content__label\">\n            {t('grantedToWithColon')}\n          </div>\n          <div className=\"confirm-approve-content__medium-text\">\n            {displayedAddress}\n          </div>\n          <div className=\"confirm-approve-content__medium-text\">\n            <ButtonIcon\n              ariaLabel=\"copy\"\n              onClick={() => copyToClipboard(toAddress, COPY_OPTIONS)}\n              color={IconColor.iconDefault}\n              iconName={\n                this.state.copied ? IconName.CopySuccess : IconName.Copy\n              }\n              title={\n                this.state.copied\n                  ? t('copiedExclamation')\n                  : t('copyToClipboard')\n              }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderDataContent() {\n    const { t } = this.context;\n    const { data, isSetApproveForAll, isApprovalOrRejection } = this.props;\n\n\n    return (\n      <Box className=\"flex-column\">\n        <Text className=\"confirm-approve-content__small-text\">\n          {isSetApproveForAll\n            ? t('functionSetApprovalForAll')\n            : t('functionApprove')}\n        </Text>\n        {isSetApproveForAll && isApprovalOrRejection !== undefined ? (\n          <>\n            <Text className=\"confirm-approve-content__small-text\">\n              {`${t('parameters')}: ${isApprovalOrRejection}`}\n            </Text>\n            {\n            }\n          </>\n        ) : null}\n        <Text className=\"confirm-approve-content__small-text confirm-approve-content__data__data-block\">\n          {data}\n        </Text>\n      </Box>\n    );\n  }\n\n  renderFullDetails() {\n    const { t } = this.context;\n    const { assetStandard } = this.props;\n    if (\n      assetStandard === TokenStandard.ERC721 ||\n      assetStandard === TokenStandard.ERC1155\n    ) {\n      return (\n        <div className=\"confirm-approve-content__full-tx-content\">\n          <div className=\"confirm-approve-content__permission\">\n            {this.renderApproveContentCard({\n              symbol: <i className=\"fas fa-user-check\" />,\n              title: t('permissionRequest'),\n              content: this.renderERC721OrERC1155PermissionContent(),\n              showEdit: false,\n            })}\n          </div>\n          <div className=\"confirm-approve-content__data\">\n            {this.renderApproveContentCard({\n              symbol: <i className=\"fa fa-file\" />,\n              title: t('data'),\n              content: this.renderDataContent(),\n              noBorder: true,\n            })}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  getTokenName() {\n    const { tokenId, assetName, assetStandard, tokenSymbol } = this.props;\n    const { t } = this.context;\n\n    let titleTokenDescription = t('token');\n    if (\n      assetStandard === TokenStandard.ERC721 ||\n      assetStandard === TokenStandard.ERC1155 ||\n      // if we don't have an asset standard but we do have either both an assetname and a tokenID or both a tokenSymbol and tokenId we assume its an NFT\n      (assetName && tokenId) ||\n      (tokenSymbol && tokenId)\n    ) {\n      if (assetName || tokenSymbol) {\n        titleTokenDescription = `${assetName ?? tokenSymbol}`;\n      } else {\n        titleTokenDescription = t('thisCollection');\n      }\n    }\n\n    return titleTokenDescription;\n  }\n\n  getTitleTokenDescription() {\n    const { tokenId, tokenAddress, rpcPrefs, chainId, userAddress } =\n      this.props;\n    const useBlockExplorer =\n      rpcPrefs?.blockExplorerUrl ||\n      [...TEST_CHAINS, CHAIN_IDS.MAINNET, CHAIN_IDS.LINEA_MAINNET].includes(\n        chainId,\n      );\n\n    const titleTokenDescription = this.getTokenName();\n    const tokenIdWrapped = tokenId ? ` (#${tokenId})` : '';\n\n    if (useBlockExplorer) {\n      const blockExplorerLink = getTokenTrackerLink(\n        tokenAddress,\n        chainId,\n        null,\n        userAddress,\n        {\n          blockExplorerUrl: rpcPrefs?.blockExplorerUrl ?? null,\n        },\n      );\n      const blockExplorerElement = (\n        <>\n          <a\n            href={blockExplorerLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title={tokenAddress}\n            className=\"confirm-approve-content__approval-asset-link\"\n          >\n            {titleTokenDescription}\n          </a>\n          {tokenIdWrapped && <span>{tokenIdWrapped}</span>}\n        </>\n      );\n      return blockExplorerElement;\n    }\n\n    return (\n      <>\n        <span\n          className=\"confirm-approve-content__approval-asset-title\"\n          onClick={() => {\n            copyToClipboard(tokenAddress, COPY_OPTIONS);\n          }}\n          title={tokenAddress}\n        >\n          {titleTokenDescription}\n        </span>\n        {tokenIdWrapped && <span>{tokenIdWrapped}</span>}\n      </>\n    );\n  }\n\n  renderTitle() {\n    const { t } = this.context;\n    const {\n      assetName,\n      tokenId,\n      tokenSymbol,\n      assetStandard,\n      isSetApproveForAll,\n      isApprovalOrRejection,\n    } = this.props;\n    const titleTokenDescription = this.getTitleTokenDescription();\n\n    let title;\n\n    if (isSetApproveForAll) {\n      if (tokenSymbol) {\n        title = t('approveAllTokensTitle', [titleTokenDescription]);\n        if (isApprovalOrRejection === false) {\n          title = t('revokeAllTokensTitle', [titleTokenDescription]);\n        }\n      } else {\n        title = t('approveAllTokensTitleWithoutSymbol', [\n          titleTokenDescription,\n        ]);\n        if (isApprovalOrRejection === false) {\n          title = t('revokeAllTokensTitleWithoutSymbol', [\n            titleTokenDescription,\n          ]);\n        }\n      }\n    } else if (\n      assetStandard === TokenStandard.ERC721 ||\n      assetStandard === TokenStandard.ERC1155 ||\n      // if we don't have an asset standard but we do have either both an assetname and a tokenID or both a tokenSymbol and tokenId we assume its an NFT\n      (assetName && tokenId) ||\n      (tokenSymbol && tokenId)\n    ) {\n      title = t('approveTokenTitle', [titleTokenDescription]);\n    }\n    return title || t('allowSpendToken', [titleTokenDescription]);\n  }\n\n  renderDescription() {\n    const { t } = this.context;\n    const {\n      assetStandard,\n      assetName,\n      tokenId,\n      tokenSymbol,\n      isContract,\n      isSetApproveForAll,\n      isApprovalOrRejection,\n    } = this.props;\n    const grantee = isContract\n      ? t('contract').toLowerCase()\n      : t('account').toLowerCase();\n\n    let description = t('trustSiteApprovePermission', [grantee]);\n\n    if (isSetApproveForAll && isApprovalOrRejection === false) {\n      if (tokenSymbol) {\n        description = t('revokeApproveForAllDescription', [\n          this.getTitleTokenDescription(),\n        ]);\n      } else {\n        description = t('revokeApproveForAllDescriptionWithoutSymbol', [\n          this.getTitleTokenDescription(),\n        ]);\n      }\n    } else if (\n      isSetApproveForAll ||\n      assetStandard === TokenStandard.ERC721 ||\n      assetStandard === TokenStandard.ERC1155 ||\n      // if we don't have an asset standard but we do have either both an assetname and a tokenID or both a tokenSymbol and tokenId we assume its an NFT\n      (assetName && tokenId) ||\n      (tokenSymbol && tokenId)\n    ) {\n      if (tokenSymbol) {\n        description = t('approveTokenDescription');\n      } else {\n        description = t('approveTokenDescriptionWithoutSymbol', [\n          this.getTitleTokenDescription(),\n        ]);\n      }\n    }\n    return description;\n  }\n\n  render() {\n    const { t } = this.context;\n    const {\n      siteImage,\n      origin,\n      tokenSymbol,\n      useNonceField,\n      warning,\n      txData,\n      fromAddressIsLedger,\n      toAddress,\n      chainId,\n      rpcPrefs,\n      assetStandard,\n      tokenId,\n      tokenAddress,\n      assetName,\n      userAcknowledgedGasMissing,\n      setUserAcknowledgedGasMissing,\n      renderSimulationFailureWarning,\n      nextNonce,\n      getNextNonce,\n      customNonceValue,\n      updateCustomNonce,\n      showCustomizeNonceModal,\n    } = this.props;\n    const { showFullTxDetails, setShowContractDetails } = this.state;\n\n    return (\n      <div\n        className={classnames('confirm-approve-content', {\n          'confirm-approve-content--full': showFullTxDetails,\n        })}\n      >\n        <BlockaidBannerAlert\n          txData={txData}\n          marginTop={4}\n          marginLeft={4}\n          marginRight={4}\n        />\n        {isSuspiciousResponse(txData?.securityProviderResponse) && (\n          <SecurityProviderBannerMessage\n            securityProviderResponse={txData.securityProviderResponse}\n          />\n        )}\n        {warning && (\n          <div className=\"confirm-approve-content__custom-nonce-warning\">\n            <ConfirmPageContainerWarning warning={warning} />\n          </div>\n        )}\n        <Box\n          display={DISPLAY.FLEX}\n          className=\"confirm-approve-content__icon-display-content\"\n        >\n          <Box display={DISPLAY.FLEX} alignItems={AlignItems.center}>\n            <UrlIcon\n              className=\"confirm-approve-content__siteimage-identicon\"\n              fallbackClassName=\"confirm-approve-content__siteimage-identicon\"\n              name={origin}\n              url={siteImage}\n            />\n            <Text\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              color={TextColor.textAlternative}\n              marginLeft={1}\n            >\n              {origin}\n            </Text>\n          </Box>\n        </Box>\n        <div\n          className=\"confirm-approve-content__title\"\n          data-testid=\"confirm-approve-title\"\n        >\n          {this.renderTitle()}\n        </div>\n        <div className=\"confirm-approve-content__description\">\n          {this.renderDescription()}\n        </div>\n        <Box marginBottom={4} marginTop={2}>\n          <Button\n            type=\"link\"\n            className=\"confirm-approve-content__verify-contract-details\"\n            onClick={() => this.setState({ setShowContractDetails: true })}\n          >\n            {t('verifyContractDetails')}\n          </Button>\n          {setShowContractDetails && (\n            <ContractDetailsModal\n              onClose={() => this.setState({ setShowContractDetails: false })}\n              tokenName={tokenSymbol}\n              tokenAddress={tokenAddress}\n              toAddress={toAddress}\n              chainId={chainId}\n              rpcPrefs={rpcPrefs}\n              tokenId={tokenId}\n              assetName={assetName}\n              assetStandard={assetStandard}\n            />\n          )}\n        </Box>\n        <div className=\"confirm-approve-content__card-wrapper\">\n          {renderSimulationFailureWarning && (\n            <Box\n              paddingTop={0}\n              paddingRight={6}\n              paddingBottom={4}\n              paddingLeft={6}\n            >\n              <SimulationErrorMessage\n                userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n                setUserAcknowledgedGasMissing={() =>\n                  setUserAcknowledgedGasMissing(true)\n                }\n              />\n            </Box>\n          )}\n          {this.renderApproveContentCard({\n            symbol: <Icon name={IconName.Tag} />,\n            title: t('transactionFee'),\n            showEdit: true,\n            showAdvanceGasFeeOptions: true,\n            showFeeDetails: true,\n            content: this.renderTransactionDetailsContent(),\n            noBorder: useNonceField || !showFullTxDetails,\n            footer: !useNonceField && (\n              <div\n                className=\"confirm-approve-content__view-full-tx-button-wrapper\"\n                onClick={() =>\n                  this.setState({\n                    showFullTxDetails: !this.state.showFullTxDetails,\n                  })\n                }\n              >\n                <div className=\"confirm-approve-content__view-full-tx-button cursor-pointer\">\n                  <div className=\"confirm-approve-content__small-blue-text\">\n                    {this.state.showFullTxDetails\n                      ? t('hideFullTransactionDetails')\n                      : t('viewFullTransactionDetails')}\n                  </div>\n                  <i\n                    className={classnames({\n                      'fa fa-caret-up': showFullTxDetails,\n                      'fa fa-caret-down': !showFullTxDetails,\n                    })}\n                  />\n                </div>\n              </div>\n            ),\n          })}\n\n          {useNonceField &&\n            this.renderApproveContentCard({\n              showHeader: false,\n              content: (\n                <CustomNonce\n                  nextNonce={nextNonce}\n                  customNonceValue={customNonceValue}\n                  showCustomizeNonceModal={() => {\n                    showCustomizeNonceModal({\n                      nextNonce,\n                      customNonceValue,\n                      updateCustomNonce,\n                      getNextNonce,\n                    });\n                  }}\n                />\n              ),\n              useNonceField,\n              noBorder: !showFullTxDetails,\n              footer: (\n                <div\n                  className=\"confirm-approve-content__view-full-tx-button-wrapper\"\n                  onClick={() =>\n                    this.setState({\n                      showFullTxDetails: !this.state.showFullTxDetails,\n                    })\n                  }\n                >\n                  <div className=\"confirm-approve-content__view-full-tx-button cursor-pointer\">\n                    <div className=\"confirm-approve-content__small-blue-text\">\n                      {this.state.showFullTxDetails\n                        ? t('hideFullTransactionDetails')\n                        : t('viewFullTransactionDetails')}\n                    </div>\n                    <i\n                      className={classnames({\n                        'fa fa-caret-up': showFullTxDetails,\n                        'fa fa-caret-down': !showFullTxDetails,\n                      })}\n                    />\n                  </div>\n                </div>\n              ),\n            })}\n        </div>\n\n        {fromAddressIsLedger ? (\n          <div className=\"confirm-approve-content__ledger-instruction-wrapper\">\n            <LedgerInstructionField\n              showDataInstruction={Boolean(txData.txParams?.data)}\n            />\n          </div>\n        ) : null}\n\n        {showFullTxDetails ? this.renderFullDetails() : null}\n      </div>\n    );\n  }\n}\n","export { default } from './confirm-approve-content.component';\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ConfirmTransactionBase from '../confirm-transaction-base';\nimport { EditGasModes } from '../../../../shared/constants/gas';\nimport {\n  showModal,\n  updateCustomNonce,\n  getNextNonce,\n} from '../../../store/actions';\nimport { getTokenApprovedParam } from '../../../helpers/utils/token-util';\nimport { readAddressAsContract } from '../../../../shared/modules/contract-utils';\nimport { GasFeeContextProvider } from '../../../contexts/gasFee';\nimport { TransactionModalContextProvider } from '../../../contexts/transaction-modal';\nimport {\n  getNativeCurrency,\n  isAddressLedger,\n} from '../../../ducks/metamask/metamask';\nimport ConfirmContractInteraction from '../confirm-contract-interaction';\nimport {\n  getCurrentCurrency,\n  getSubjectMetadata,\n  getUseNonceField,\n  getCustomNonceValue,\n  getNextSuggestedNonce,\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n  checkNetworkAndAccountSupports1559,\n  getUseCurrencyRateCheck,\n  getPreferences,\n} from '../../../selectors';\nimport { useApproveTransaction } from '../hooks/useApproveTransaction';\nimport { useSimulationFailureWarning } from '../hooks/useSimulationFailureWarning';\nimport AdvancedGasFeePopover from '../components/advanced-gas-fee-popover';\nimport EditGasFeePopover from '../components/edit-gas-fee-popover';\nimport EditGasPopover from '../components/edit-gas-popover/edit-gas-popover.component';\nimport Loading from '../../../components/ui/loading-screen';\nimport { parseStandardTokenTransactionData } from '../../../../shared/modules/transaction.utils';\nimport { TokenStandard } from '../../../../shared/constants/transaction';\nimport { calcTokenAmount } from '../../../../shared/lib/transactions-controller-utils';\nimport TokenAllowance from '../token-allowance/token-allowance';\nimport { NetworkChangeToastLegacy } from '../components/confirm/network-change-toast';\nimport { getCustomTxParamsData } from './confirm-approve.util';\nimport ConfirmApproveContent from './confirm-approve-content';\n\nconst isAddressLedgerByFromAddress = (address) => (state) => {\n  return isAddressLedger(state, address);\n};\n\nexport default function ConfirmApprove({\n  assetStandard,\n  assetName,\n  userBalance,\n  tokenSymbol,\n  decimals,\n  tokenImage,\n  tokenAmount,\n  tokenId,\n  userAddress,\n  toAddress,\n  tokenAddress,\n  transaction,\n  ethTransactionTotal,\n  fiatTransactionTotal,\n  hexTransactionTotal,\n  hexMinimumTransactionFee,\n  isSetApproveForAll,\n}) {\n  const dispatch = useDispatch();\n  const { txParams: { data: transactionData } = {} } = transaction;\n\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const nativeCurrency = useSelector(getNativeCurrency);\n  const subjectMetadata = useSelector(getSubjectMetadata);\n  const useNonceField = useSelector(getUseNonceField);\n  const nextNonce = useSelector(getNextSuggestedNonce);\n  const customNonceValue = useSelector(getCustomNonceValue);\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider);\n  const networkAndAccountSupports1559 = useSelector(\n    checkNetworkAndAccountSupports1559,\n  );\n  const fromAddressIsLedger = useSelector(\n    isAddressLedgerByFromAddress(userAddress),\n  );\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n  const { useNativeCurrencyAsPrimaryCurrency } = useSelector(getPreferences);\n  const [customPermissionAmount, setCustomPermissionAmount] = useState('');\n  const [submitWarning, setSubmitWarning] = useState('');\n  const [isContract, setIsContract] = useState(false);\n  const [userAcknowledgedGasMissing, setUserAcknowledgedGasMissing] =\n    useState(false);\n\n  const supportsEIP1559 = networkAndAccountSupports1559;\n\n  const previousTokenAmount = useRef(tokenAmount);\n  const {\n    approveTransaction,\n    showCustomizeGasPopover,\n    closeCustomizeGasPopover,\n  } = useApproveTransaction();\n  const renderSimulationFailureWarning = useSimulationFailureWarning(\n    userAcknowledgedGasMissing,\n  );\n\n  useEffect(() => {\n    if (customPermissionAmount && previousTokenAmount.current !== tokenAmount) {\n      setCustomPermissionAmount(tokenAmount);\n    }\n    previousTokenAmount.current = tokenAmount;\n  }, [customPermissionAmount, tokenAmount]);\n\n  const prevNonce = useRef(nextNonce);\n  const prevCustomNonce = useRef(customNonceValue);\n  useEffect(() => {\n    if (\n      prevNonce.current !== nextNonce ||\n      prevCustomNonce.current !== customNonceValue\n    ) {\n      if (nextNonce !== null && customNonceValue > nextNonce) {\n        setSubmitWarning(\n          `Nonce is higher than suggested nonce of ${nextNonce}`,\n        );\n      } else {\n        setSubmitWarning('');\n      }\n    }\n    prevCustomNonce.current = customNonceValue;\n    prevNonce.current = nextNonce;\n  }, [customNonceValue, nextNonce]);\n\n  const checkIfContract = useCallback(async () => {\n    const { isContractAddress } = await readAddressAsContract(\n      global.eth,\n      toAddress,\n    );\n    setIsContract(isContractAddress);\n  }, [setIsContract, toAddress]);\n\n  useEffect(() => {\n    checkIfContract();\n  }, [checkIfContract]);\n\n  const { origin, layer1GasFee } = transaction;\n  const formattedOrigin = origin || '';\n\n  const { iconUrl: siteImage = '' } = subjectMetadata[origin] || {};\n\n  // Code below may need a additional look as ERC1155 tokens do not have a name\n  let tokensText;\n  if (\n    assetStandard === TokenStandard.ERC721 ||\n    assetStandard === TokenStandard.ERC1155\n  ) {\n    tokensText = assetName;\n  }\n\n  const tokenBalance = userBalance\n    ? calcTokenAmount(userBalance, decimals).toString(10)\n    : '';\n  const customData = customPermissionAmount\n    ? getCustomTxParamsData(transactionData, {\n        customPermissionAmount,\n        decimals,\n      })\n    : null;\n\n  const parsedTransactionData =\n    parseStandardTokenTransactionData(transactionData);\n  const isApprovalOrRejection = getTokenApprovedParam(parsedTransactionData);\n\n  if (tokenSymbol === undefined && assetName === undefined) {\n    return <Loading />;\n  }\n  if (assetStandard === undefined) {\n    return <ConfirmContractInteraction />;\n  }\n\n  if (assetStandard === TokenStandard.ERC20 && !isSetApproveForAll) {\n    return (\n      <GasFeeContextProvider transaction={transaction}>\n        <TransactionModalContextProvider>\n          <TokenAllowance\n            origin={formattedOrigin}\n            siteImage={siteImage}\n            showCustomizeGasModal={approveTransaction}\n            useNonceField={useNonceField}\n            currentCurrency={currentCurrency}\n            nativeCurrency={nativeCurrency}\n            ethTransactionTotal={ethTransactionTotal}\n            fiatTransactionTotal={fiatTransactionTotal}\n            hexTransactionTotal={hexTransactionTotal}\n            hexMinimumTransactionFee={hexMinimumTransactionFee}\n            txData={transaction}\n            supportsEIP1559={supportsEIP1559}\n            userAddress={userAddress}\n            tokenAddress={tokenAddress}\n            data={transactionData}\n            isSetApproveForAll={isSetApproveForAll}\n            isApprovalOrRejection={isApprovalOrRejection}\n            dappProposedTokenAmount={tokenAmount}\n            currentTokenBalance={tokenBalance}\n            toAddress={toAddress}\n            tokenSymbol={tokenSymbol}\n            decimals={decimals}\n            fromAddressIsLedger={fromAddressIsLedger}\n            warning={submitWarning}\n          />\n          {showCustomizeGasPopover && !supportsEIP1559 && (\n            <EditGasPopover\n              onClose={closeCustomizeGasPopover}\n              mode={EditGasModes.modifyInPlace}\n              transaction={transaction}\n            />\n          )}\n          {supportsEIP1559 && (\n            <>\n              <EditGasFeePopover />\n              <AdvancedGasFeePopover />\n            </>\n          )}\n        </TransactionModalContextProvider>\n        <NetworkChangeToastLegacy confirmation={transaction} />\n      </GasFeeContextProvider>\n    );\n  }\n\n  return (\n    <GasFeeContextProvider transaction={transaction}>\n      <ConfirmTransactionBase\n        toAddress={toAddress}\n        identiconAddress={toAddress}\n        showAccountInHeader\n        title={tokensText}\n        tokenAddress={tokenAddress}\n        customTokenAmount={String(customPermissionAmount)}\n        dappProposedTokenAmount={tokenAmount}\n        currentTokenBalance={tokenBalance}\n        isApprovalOrRejection={isApprovalOrRejection}\n        contentComponent={\n          <TransactionModalContextProvider>\n            <ConfirmApproveContent\n              userAddress={userAddress}\n              isSetApproveForAll={isSetApproveForAll}\n              isApprovalOrRejection={isApprovalOrRejection}\n              siteImage={siteImage}\n              origin={formattedOrigin}\n              tokenSymbol={tokenSymbol}\n              tokenImage={tokenImage}\n              tokenId={tokenId}\n              assetName={assetName}\n              assetStandard={assetStandard}\n              tokenAddress={tokenAddress}\n              data={customData || transactionData}\n              toAddress={toAddress}\n              currentCurrency={currentCurrency}\n              nativeCurrency={nativeCurrency}\n              ethTransactionTotal={ethTransactionTotal}\n              fiatTransactionTotal={fiatTransactionTotal}\n              hexTransactionTotal={hexTransactionTotal}\n              hexMinimumTransactionFee={hexMinimumTransactionFee}\n              useNonceField={useNonceField}\n              nextNonce={nextNonce}\n              customNonceValue={customNonceValue}\n              userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n              setUserAcknowledgedGasMissing={setUserAcknowledgedGasMissing}\n              renderSimulationFailureWarning={renderSimulationFailureWarning}\n              updateCustomNonce={(value) => {\n                dispatch(updateCustomNonce(value));\n              }}\n              getNextNonce={() => dispatch(getNextNonce())}\n              showCustomizeNonceModal={({\n                /* eslint-disable no-shadow */\n                useNonceField,\n                nextNonce,\n                customNonceValue,\n                updateCustomNonce,\n                getNextNonce,\n                /* eslint-disable no-shadow */\n              }) =>\n                dispatch(\n                  showModal({\n                    name: 'CUSTOMIZE_NONCE',\n                    useNonceField,\n                    nextNonce,\n                    customNonceValue,\n                    updateCustomNonce,\n                    getNextNonce,\n                  }),\n                )\n              }\n              warning={submitWarning}\n              txData={transaction}\n              fromAddressIsLedger={fromAddressIsLedger}\n              chainId={chainId}\n              rpcPrefs={rpcPrefs}\n              isContract={isContract}\n              hasLayer1GasFee={layer1GasFee !== undefined}\n              supportsEIP1559={supportsEIP1559}\n              useCurrencyRateCheck={useCurrencyRateCheck}\n              useNativeCurrencyAsPrimaryCurrency={\n                useNativeCurrencyAsPrimaryCurrency\n              }\n            />\n            {showCustomizeGasPopover && !supportsEIP1559 && (\n              <EditGasPopover\n                onClose={closeCustomizeGasPopover}\n                mode={EditGasModes.modifyInPlace}\n                transaction={transaction}\n              />\n            )}\n            {supportsEIP1559 && (\n              <>\n                <EditGasFeePopover />\n                <AdvancedGasFeePopover />\n              </>\n            )}\n          </TransactionModalContextProvider>\n        }\n        hideSenderToRecipient\n        customTxParamsData={customData}\n        assetStandard={assetStandard}\n        displayAccountBalanceHeader\n      />\n    </GasFeeContextProvider>\n  );\n}\n\nConfirmApprove.propTypes = {\n  assetStandard: PropTypes.string,\n  assetName: PropTypes.string,\n  tokenAddress: PropTypes.string,\n  userBalance: PropTypes.string,\n  tokenSymbol: PropTypes.string,\n  decimals: PropTypes.string,\n  tokenImage: PropTypes.string,\n  tokenAmount: PropTypes.string,\n  tokenId: PropTypes.string,\n  userAddress: PropTypes.string,\n  toAddress: PropTypes.string,\n  transaction: PropTypes.shape({\n    layer1GasFee: PropTypes.string,\n    origin: PropTypes.string,\n    txParams: PropTypes.shape({\n      data: PropTypes.string,\n      to: PropTypes.string,\n      from: PropTypes.string,\n    }),\n  }),\n  ethTransactionTotal: PropTypes.string,\n  fiatTransactionTotal: PropTypes.string,\n  hexTransactionTotal: PropTypes.string,\n  hexMinimumTransactionFee: PropTypes.string,\n  isSetApproveForAll: PropTypes.bool,\n};\n","import { TransactionType } from '@metamask/transaction-controller';\nimport { calcTokenValue } from '../../../../shared/lib/swaps-utils';\nimport { parseStandardTokenTransactionData } from '../../../../shared/modules/transaction.utils';\nimport { getTokenAddressParam } from '../../../helpers/utils/token-util';\nimport { decimalToHex } from '../../../../shared/modules/conversion.utils';\n\nexport function getCustomTxParamsData(\n  data,\n  { customPermissionAmount, decimals },\n) {\n  const tokenData = parseStandardTokenTransactionData(data);\n\n  const customSpendingCapMethods = [\n    TransactionType.tokenMethodApprove,\n    TransactionType.tokenMethodIncreaseAllowance,\n  ];\n\n  if (!tokenData) {\n    throw new Error('Invalid data');\n  } else if (!customSpendingCapMethods.includes(tokenData.name)) {\n    throw new Error(\n      `Invalid data; should be ${customSpendingCapMethods\n        .map((m) => `'${m}'`)\n        .join(' or ')} method, but instead is '${tokenData.name}'`,\n    );\n  }\n  let spender = getTokenAddressParam(tokenData);\n  if (spender.startsWith('0x')) {\n    spender = spender.substring(2);\n  }\n  const [signature, rest] = data.split(spender);\n  if (!signature || !rest) {\n    throw new Error('Invalid data');\n  } else if (rest.length < 64) {\n    throw new Error(\n      'Invalid calldata value; must be at least 64 hex digits long',\n    );\n  }\n\n  const tokenValue = rest.substring(0, 64);\n  const extraCalldata = rest.substring(64);\n\n  let customPermissionValue = decimalToHex(\n    calcTokenValue(customPermissionAmount, decimals),\n  );\n  if (customPermissionValue.length > 64) {\n    throw new Error('Custom value is larger than u256');\n  }\n\n  customPermissionValue = customPermissionValue.padStart(\n    tokenValue.length,\n    '0',\n  );\n  const customTxParamsData = `${signature}${spender}${customPermissionValue}${extraCalldata}`;\n  return customTxParamsData;\n}\n","export { default } from './confirm-approve';\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport ConfirmTransactionBase from '../confirm-transaction-base';\n\nimport { SEND_ROUTE } from '../../../helpers/constants/routes';\nimport { editExistingTransaction } from '../../../ducks/send';\n\nimport { clearConfirmTransaction } from '../../../ducks/confirm-transaction/confirm-transaction.duck';\nimport { AssetType } from '../../../../shared/constants/transaction';\n\nexport default function ConfirmContractInteraction() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleEditTransaction = async ({ txData }) => {\n    const { id } = txData;\n    await dispatch(editExistingTransaction(AssetType.native, id.toString()));\n    dispatch(clearConfirmTransaction());\n  };\n\n  const handleEdit = (confirmTransactionData) => {\n    handleEditTransaction(confirmTransactionData).then(() => {\n      history.push(SEND_ROUTE);\n    });\n  };\n\n  return (\n    <ConfirmTransactionBase\n      actionKey=\"confirm\"\n      onEdit={(confirmTransactionData) => handleEdit(confirmTransactionData)}\n    />\n  );\n}\n","export { default } from './confirm-contract-interaction';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ConfirmTransactionBase from '../confirm-transaction-base';\nimport { toBuffer } from '../../../../shared/modules/buffer-utils';\nimport Box from '../../../components/ui/box';\nimport { Text } from '../../../components/component-library';\nimport {\n  Color,\n  DISPLAY,\n  OVERFLOW_WRAP,\n  TextVariant,\n  TEXT_TRANSFORM,\n} from '../../../helpers/constants/design-system';\n\nexport default class ConfirmDeployContract extends Component {\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  static propTypes = {\n    txData: PropTypes.object,\n  };\n\n  renderData() {\n    const { t } = this.context;\n    const { txData: { origin, txParams: { data } = {} } = {} } = this.props;\n\n    return (\n      <Box color={Color.textAlternative} padding={4}>\n        <Box\n          backgroundColor={Color.backgroundAlternative}\n          padding={4}\n          variant={TextVariant.bodySm}\n        >\n          <Box display={DISPLAY.FLEX}>\n            <Text\n              backgroundColor={Color.backgroundAlternative}\n              marginBottom={1}\n              paddingRight={4}\n              variant={TextVariant.bodySmBold}\n            >\n              {`${t('origin')}:`}\n            </Text>\n            <Text\n              overflowWrap={OVERFLOW_WRAP.BREAK_WORD}\n              variant={TextVariant.bodySm}\n            >\n              {origin}\n            </Text>\n          </Box>\n          <Box display={DISPLAY.FLEX}>\n            <Text\n              backgroundColor={Color.backgroundAlternative}\n              paddingRight={4}\n              variant={TextVariant.bodySmBold}\n            >\n              {`${t('bytes')}:`}\n            </Text>\n            <Text variant={TextVariant.bodySm}>{toBuffer(data).length}</Text>\n          </Box>\n        </Box>\n        <Text\n          as=\"h3\"\n          paddingBottom={3}\n          paddingTop={2}\n          textTransform={TEXT_TRANSFORM.UPPERCASE}\n          variant={TextVariant.bodySm}\n        >{`${t('hexData')}:`}</Text>\n        <Text\n          backgroundColor={Color.backgroundAlternative}\n          overflowWrap={OVERFLOW_WRAP.BREAK_WORD}\n          padding={4}\n          variant={TextVariant.bodySm}\n        >\n          {data}\n        </Text>\n      </Box>\n    );\n  }\n\n  render() {\n    return (\n      <ConfirmTransactionBase\n        actionKey=\"contractDeployment\"\n        dataHexComponent={this.renderData()}\n      />\n    );\n  }\n}\n"]}