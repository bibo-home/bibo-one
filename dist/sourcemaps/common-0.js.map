{"version":3,"sources":["app/scripts/lib/sentry-filter-events.ts","app/scripts/lib/setup-initial-state-hooks.js","app/scripts/lib/setupSentry.js","node_modules/@metamask/abi-utils/dist/abi.js","node_modules/@metamask/abi-utils/dist/errors.js","node_modules/@metamask/abi-utils/dist/index.js","node_modules/@metamask/abi-utils/dist/iterator.js","node_modules/@metamask/abi-utils/dist/packer.js","node_modules/@metamask/abi-utils/dist/parsers/address.js","node_modules/@metamask/abi-utils/dist/parsers/array.js","node_modules/@metamask/abi-utils/dist/parsers/bool.js","node_modules/@metamask/abi-utils/dist/parsers/bytes.js","node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js","node_modules/@metamask/abi-utils/dist/parsers/function.js","node_modules/@metamask/abi-utils/dist/parsers/index.js","node_modules/@metamask/abi-utils/dist/parsers/number.js","node_modules/@metamask/abi-utils/dist/parsers/parser.js","node_modules/@metamask/abi-utils/dist/parsers/string.js","node_modules/@metamask/abi-utils/dist/parsers/tuple.js","node_modules/@metamask/abi-utils/dist/types/abi.js","node_modules/@metamask/abi-utils/dist/types/index.js","node_modules/@metamask/abi-utils/dist/utils/buffer.js","node_modules/@metamask/abi-utils/dist/utils/index.js","node_modules/@metamask/account-watcher/dist/preinstalled-snap.json","node_modules/@metamask/approval-controller/dist/chunk-LKCXZAKD.js","node_modules/@metamask/approval-controller/dist/chunk-PMXPCCKS.js","node_modules/@metamask/approval-controller/dist/index.js","node_modules/@metamask/approval-controller/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js","node_modules/@metamask/approval-controller/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js","node_modules/@metamask/approval-controller/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js","node_modules/@metamask/approval-controller/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js","node_modules/@metamask/approval-controller/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/approval-controller/node_modules/@metamask/base-controller/dist/index.js","node_modules/@metamask/approval-controller/node_modules/nanoid/index.browser.cjs","node_modules/@metamask/approval-controller/node_modules/nanoid/url-alphabet/index.cjs","node_modules/@metamask/assets-controllers/dist/chunk-2TZK6YZA.js","node_modules/@metamask/assets-controllers/dist/chunk-3LPQTUGG.js","node_modules/@metamask/assets-controllers/dist/chunk-5QLC2MHV.js","node_modules/@metamask/assets-controllers/dist/chunk-ADJ3IFJH.js","node_modules/@metamask/assets-controllers/dist/chunk-BBCZM5P4.js","node_modules/@metamask/assets-controllers/dist/chunk-F6L3DFOZ.js","node_modules/@metamask/assets-controllers/dist/chunk-GHG3DOUK.js","node_modules/@metamask/assets-controllers/dist/chunk-HVOIBGYN.js","node_modules/@metamask/assets-controllers/dist/chunk-ISK2VSBB.js","node_modules/@metamask/assets-controllers/dist/chunk-JCR4H6YL.js","node_modules/@metamask/assets-controllers/dist/chunk-K7A3EOIM.js","node_modules/@metamask/assets-controllers/dist/chunk-MZI3SDQN.js","node_modules/@metamask/assets-controllers/dist/chunk-RGHTNZQ6.js","node_modules/@metamask/assets-controllers/dist/chunk-T5ZX5BV7.js","node_modules/@metamask/assets-controllers/dist/chunk-V6DNVROD.js","node_modules/@metamask/assets-controllers/dist/chunk-X2HRAVDO.js","node_modules/@metamask/assets-controllers/dist/chunk-YGGUAMHV.js","node_modules/@metamask/assets-controllers/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/assets-controllers/dist/chunk-ZAR4BIOC.js","node_modules/@metamask/assets-controllers/dist/chunk-ZG5MS2TO.js","node_modules/@metamask/assets-controllers/dist/index.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/base-controller/dist/index.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/polling-controller/dist/chunk-JCXUPRTT.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/polling-controller/dist/chunk-JVLLYBTK.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/polling-controller/dist/chunk-RD6EX3RW.js","node_modules/@metamask/assets-controllers/node_modules/@metamask/polling-controller/dist/index.js","node_modules/@metamask/base-controller/dist/BaseControllerV1.cjs","node_modules/@metamask/base-controller/dist/BaseControllerV2.cjs","node_modules/@metamask/base-controller/dist/ControllerMessenger.cjs","app/scripts/lib/stream-utils.js","node_modules/@metamask/base-controller/dist/RestrictedControllerMessenger.cjs","node_modules/@metamask/base-controller/dist/index.cjs","node_modules/@metamask/browser-passworder/dist/index.js","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/contract-metadata/contract-map.json","node_modules/@metamask/contract-metadata/index.js","node_modules/@metamask/controller-utils/dist/constants.cjs","node_modules/@metamask/controller-utils/dist/index.cjs","node_modules/@metamask/controller-utils/dist/logger.cjs","node_modules/@metamask/controller-utils/dist/siwe.cjs","node_modules/@metamask/controller-utils/dist/types.cjs","node_modules/@metamask/controller-utils/dist/util.cjs","node_modules/@metamask/eth-block-tracker/dist/BlockTracker.js","node_modules/@metamask/eth-block-tracker/dist/PollingBlockTracker.js","node_modules/@metamask/eth-block-tracker/dist/SubscribeBlockTracker.js","node_modules/@metamask/eth-block-tracker/dist/index.js","node_modules/@metamask/eth-block-tracker/dist/logging-utils.js","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/eth-block-tracker/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/eth-hd-keyring/index.js","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/transaction-types.cjs","app/scripts/lib/util.ts","node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/eth-json-rpc-infura/dist/create-infura-middleware.js","node_modules/@metamask/eth-json-rpc-infura/dist/create-provider.js","node_modules/@metamask/eth-json-rpc-infura/dist/fetch-config-from-req.js","node_modules/@metamask/eth-json-rpc-infura/dist/index.js","node_modules/@metamask/eth-json-rpc-infura/dist/logging-utils.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/eth-json-rpc-provider/dist/index.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/eth-json-rpc-provider/dist/provider-from-engine.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/eth-json-rpc-provider/dist/provider-from-middleware.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/eth-json-rpc-provider/dist/safe-event-emitter-provider.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/json-rpc-engine/dist/JsonRpcEngine.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/json-rpc-engine/dist/createAsyncMiddleware.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/json-rpc-engine/dist/createScaffoldMiddleware.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/json-rpc-engine/dist/getUniqueId.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/json-rpc-engine/dist/idRemapMiddleware.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/json-rpc-engine/dist/index.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/json-rpc-engine/dist/mergeMiddleware.js","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/index.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/json.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/keyring.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/logging.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/misc.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/number.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/opaque.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/promise.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/time.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/transaction-types.cjs","node_modules/@metamask/eth-json-rpc-infura/node_modules/@metamask/utils/dist/versions.cjs","node_modules/@metamask/eth-json-rpc-provider/dist/chunk-IQRHEFHI.js","node_modules/@metamask/eth-json-rpc-provider/dist/chunk-V2OUBCY7.js","node_modules/@metamask/eth-json-rpc-provider/dist/chunk-VYK4XMOL.js","node_modules/@metamask/eth-json-rpc-provider/dist/index.js","node_modules/@metamask/eth-query/index.js","node_modules/@metamask/eth-sig-util/dist/encryption.js","node_modules/@metamask/eth-sig-util/dist/index.js","node_modules/@metamask/eth-sig-util/dist/personal-sign.js","node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js","node_modules/@metamask/eth-sig-util/dist/utils.js","node_modules/@metamask/eth-simple-keyring/dist/index.js","node_modules/@metamask/eth-simple-keyring/dist/simple-keyring.js","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/assert.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/base64.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/bytes.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/caip-types.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/checksum.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/coercers.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/collections.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/encryption-types.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/errors.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/hex.cjs","node_modules/@metamask/eth-simple-keyring/node_modules/@metamask/utils/dist/index.cjs"],"names":["getMetaMetricsEnabled","log","name","NAME","processEvent","async","event","_object","require","_extension","_interopRequireDefault","_sentryState","_localStore","obj","__esModule","default","platform","sentryLocalStore","globalThis","stateHooks","getPersistedState","get","persistedStateMask","data","SENTRY_BACKGROUND_STATE","meta","version","getSentryState","sentryState","browser","window","navigator","userAgent","getVersion","getSentryAppState","cleanUpMostRecentRetrievedState","state","mostRecentRetrievedState","getMostRecentPersistedState","persistedState","maskObject","RELEASE","Error","getSentryTarget","undefined","_webextensionPolyfill","management","getSelf","then","extensionInfo","installType","catch","error","METAMASK_DEBUG","loggerType","_utils2","logger","args","message","replace","internalLog","slice","integrateLogging","clientOptions","environment","METAMASK_BUILD_TYPE","METAMASK_ENVIRONMENT","getSentryEnvironment","sentryTarget","beforeBreadcrumb","beforeSend","report","rewriteReport","debug","dist","_mv","isManifestV3","dsn","integrations","Sentry","dedupeIntegration","extraErrorDataIntegration","browserTracingIntegration","_sentryFilterEvents","filterEvents","release","sendClientReports","tracesSampleRate","getTracesSampleRate","transport","makeTransport","getClientOptions","nw","history","registerSpanErrorInstrumentation","init","circleci","_manifestFlags","getManifestFlags","enabled","setTag","branch","buildNum","job","nodeIndex","prNumber","setCircleCiTags","client","getClient","on","envelope","_envelope$","_envelope$2","type","status","isCompletedSessionEnvelope","level","getEventType","addDebugListeners","setSentryClient","_utils","e","r","t","_getRequireWildcardCache","has","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_extractEthjsErrorMessage","WeakMap","projectLogger","createProjectLogger","exports","createModuleLogger","document","SENTRY_DSN","SENTRY_DSN_DEV","SENTRY_DSN_MMI","SENTRY_DSN_FAKE","ERROR_URL_ALLOWLIST","CRYPTOCOMPARE","COINGECKO","ETHERSCAN","CODEFI","SEGMENT","getMetaMetricsEnabledFromAppState","appState","getMetaMetricsEnabledFromPersistedState","metamask","Boolean","participateInMetaMetrics","_appState$state$MetaM","MetaMetricsController","_persistedState$data","getOnboardingCompleteFromAppState","getOnboardingCompleteFromPersistedState","completedOnboarding","_appState$state$Onboa","OnboardingController","_persistedState$data2","doNotForceSentryForThisTest","flags","getState","hideUrlIfNotInternal","url","match","breadcrumb","category","removeUrlsFromBreadCrumb","_breadcrumb$data","_breadcrumb$data2","_breadcrumb$data3","to","from","rewriteErrorMessages","errorMessage","simplifiedErrorMessage","indexOf","simplifyErrorMessages","newErrorMessage","re","forEach","urlObj","URL","hostname","values","some","allowedHostname","endsWith","sanitizeUrlsFromErrorMessages","sanitizeAddressesFromErrorMessages","_report$request","request","toMetamaskUrl","exception","item","stacktrace","frames","frame","filename","rewriteReportUrls","extra","runtime","id","extensionId","err","rewriteFn","value","origUrl","_globalThis$location","location","origin","filePath","split","_globalThis$stateHook","_globalThis$stateHook2","options","makeFetchTransport","fetch","decodeSingle","decode","encodePacked","encodeSingle","encode","utils_1","errors_1","packer_1","types","packed","tight","pack","ParserError","getErrorMessage","bytes","createBytes","unpack","result","assert","length","getErrorStack","isObject","hasProperty","stack","constructor","originalError","super","this","originalStack","__createBinding","create","o","m","k","k2","desc","writable","configurable","enumerable","__exportStar","p","iterate","buffer","size","pointer","skip","subarray","Uint8Array","isDynamicParser","getParser","iterator_1","parsers_1","utils_2","parsers","address","array","bool","fixedBytes","function","fn","number","string","tuple","staticParser","parser","find","isType","isDynamic","arrayPacked","byteArray","staticBuffer","dynamicBuffer","pointers","reduce","index","concatBytes","position","dynamicStart","updatedBuffer","target","offset","padStart","numberToBytes","iterator","map","done","next","bytesToNumber","getAddress","bytesValue","getByteLength","addressValue","addressBuffer","add0x","bytesToHex","getTupleType","getArrayType","isArrayType","fixed_bytes_1","tuple_1","ARRAY_REGEX","test","groups","parseInt","innerType","Array","fill","join","arrayType","fixedLength","arrayLength","rest","getBooleanValue","superstruct_1","number_1","BooleanCoercer","coerce","boolean","union","literal","BigInt","booleanValue","bigIntToBytes","bufferValue","paddedSize","Math","ceil","byteLength","padEnd","BYTES_REGEX","Number","getFunction","FunctionStruct","object","StrictHexStruct","selector","instance","input","hexToBytes","fnValue","getBigInt","assertNumberLength","getLength","isSigned","NUMBER_REGEX","startsWith","maxValue","createBigInt","bigIntValue","signedBigIntToBytes","numberValue","bytesToSignedBigInt","bytesToBigInt","bytes_1","stringToBytes","bytesToString","getTupleElements","TUPLE_REGEX","elements","current","depth","char","push","trim","element","isTupleType","total","padding","max","module","snapId","manifest","description","proposedName","repository","source","shasum","npm","iconPath","packageName","registry","initialPermissions","snap_dialog","allowedOrigins","snap_manageAccounts","snap_manageState","manifestVersion","files","path","removable","hidden","__accessCheck","member","msg","TypeError","ApprovalRequestNotFoundError","ApprovalRequestNoResultSupportError","NoApprovalFlowsError","EndInvalidFlowError","flowIds","MissingApprovalFlowError","__privateGet","getter","__privateAdd","WeakSet","add","__privateSet","setter","__privateMethod","method","_approvals","_origins","_showApprovalRequest","_typesExcludedFromRateLimiting","_add","add_fn","_validateAddParams","validateAddParams_fn","_addPendingApprovalOrigin","addPendingApprovalOrigin_fn","_addToStore","addToStore_fn","_delete","delete_fn","_deleteApprovalAndGetCallbacks","deleteApprovalAndGetCallbacks_fn","_result","result_fn","_chunkLKCXZAKDjs","_basecontroller","_rpcerrors","_nanoid","ORIGIN_METAMASK","APPROVAL_TYPE_RESULT_ERROR","APPROVAL_TYPE_RESULT_SUCCESS","controllerName","stateMetadata","pendingApprovals","persist","anonymous","pendingApprovalCount","approvalFlows","ApprovalController","BaseController","messenger","showApprovalRequest","typesExcludedFromRateLimiting","metadata","Map","registerMessageHandlers","messagingSystem","registerActionHandler","clear","bind","opts","shouldShowRequest","addAndShowApprovalRequest","accept","reject","updateRequestState","startFlow","endFlow","setFlowLoadingText","success","promise","requestData","requestState","expectsResult","getApprovalCount","_type","count","approval","getTotalApprovalCount","requestPromise","Promise","resolve","resultCallbacks","acceptValue","waitForResult","resultValue","resolveValue","rejectionError","keys","update","draftState","nanoid","loadingText","show","flow","pop","flowIndex","findIndex","header","title","icon","includes","rpcErrors","resourceUnavailable","getAlreadyPendingMessage","isArray","internal","originMap","currentValue","time","Date","now","delete","originTotalCount","originTypeCount","callbacks","console","info","flowToEnd","ApprovalController_default","_chunkPMXPCCKSjs","BaseControllerV1","config","defaultConfig","defaultState","disabled","internalConfig","internalState","internalListeners","initialState","initialConfig","initialize","configure","overwrite","fullUpdate","assign","key","notify","listener","subscribe","unsubscribe","cb","splice","BaseControllerV1_default","_actions","_events","_initialEventPayloadGetters","_eventPayloadCache","_chunkUJFCPTF3js","_chunkZ4BLTVTBjs","ControllerMessenger","actionType","handler","unregisterActionHandler","clearActions","params","registerInitialEventPayload","eventType","getPayload","publish","payload","subscribers","entries","previousValue","newValue","setTimeout","initialValue","clearEventSubscriptions","clearSubscriptions","getRestricted","allowedActions","allowedEvents","RestrictedControllerMessenger","controllerMessenger","_internalState","_immer","enablePatches","deriveStateFromMetadata","metadataProperty","derivedState","String","propertyMetadata","stateProperty","freeze","_","callback","nextState","patches","inversePatches","produceWithPatches","applyPatches","destroy","getAnonymizedState","getPersistentState","_controllerMessenger","_controllerName","_allowedActions","_allowedEvents","_isAllowedEvent","isAllowedEvent_fn","_isAllowedAction","isAllowedAction_fn","_isInCurrentNamespace","isInCurrentNamespace_fn","action","_chunkFTHCJ6HYjs","_chunkIURK6TKDjs","_chunkG42723LGjs","urlAlphabet","random","crypto","getRandomValues","customRandom","alphabet","defaultSize","getRandom","mask","LN2","step","j","byte","toString","toUpperCase","customAlphabet","_mutex","_selectedAccountId","_chainId","_ipfsGateway","_openSeaEnabled","_useIpfsSubdomains","_isIpfsGatewayEnabled","_onNftAdded","_onNetworkControllerNetworkDidChange","onNetworkControllerNetworkDidChange_fn","_onPreferencesControllerStateChange","onPreferencesControllerStateChange_fn","_onSelectedAccountChange","onSelectedAccountChange_fn","_updateNestedNftState","updateNestedNftState_fn","_getNftCollectionApi","getNftCollectionApi_fn","_getNftInformationFromApi","getNftInformationFromApi_fn","_getNftInformationFromTokenURI","getNftInformationFromTokenURI_fn","_getNftURIAndStandard","getNftURIAndStandard_fn","_getNftInformation","getNftInformation_fn","_getNftContractInformationFromContract","getNftContractInformationFromContract_fn","_getNftContractInformation","getNftContractInformation_fn","_addIndividualNft","addIndividualNft_fn","_addNftContract","addNftContract_fn","_removeAndIgnoreIndividualNft","removeAndIgnoreIndividualNft_fn","_removeIndividualNft","removeIndividualNft_fn","_removeNftContract","removeNftContract_fn","_validateWatchNft","validateWatchNft_fn","_getCorrectChainId","getCorrectChainId_fn","_getAddressOrSelectedAddress","getAddressOrSelectedAddress_fn","_updateNftUpdateForAccount","updateNftUpdateForAccount_fn","_chunkMZI3SDQNjs","_address","_controllerutils","_asyncmutex","_bnjs","_bnjs2","_uuid","nftControllerMetadata","allNftContracts","allNfts","ignoredNfts","ALL_NFTS_STATE_KEY","ALL_NFTS_CONTRACTS_STATE_KEY","getDefaultNftControllerState","NftController","chainId","initialChainId","ipfsGateway","IPFS_DEFAULT_GATEWAY_URL","openSeaEnabled","useIpfsSubdomains","isIpfsGatewayEnabled","onNftAdded","Mutex","getNftApi","NFT_API_BASE_URL","watchNft","asset","networkClientId","userAddress","addressToSearch","nftMetadata","tokenId","standard","invalidInput","suggestedNftMeta","v4","interactingAddress","_requestApproval","image","addNft","setApiKey","openSeaApiKey","isNftOwner","ownerAddress","nftAddress","owner","toLowerCase","isZero","addNftVerifyOwnership","tokenAddress","checksumHexAddress","toChecksumHexAddress","nftContract","contract","updateNftMetadata","nfts","releaseLock","acquire","nftsWithChecksumAdr","nft","nftMetadataResults","all","newMetadata","nftsWithDifferentMetadata","stateNfts","singleNft","existingEntry","compareNftMetadata","elm","updateNft","removeNft","removeAndIgnoreNft","clearIgnoredNfts","checkAndUpdateSingleNftOwnershipStatus","batch","isOwned","isCurrentlyOwned","updatedNft","indexToUpdate","checkAndUpdateAllNftsOwnershipStatus","updatedNfts","updateNftFavoriteStatus","favorite","findNftByAddressAndTokenId","selectedAddress","updates","nftInfo","newNfts","resetNftTransactionStatusByTransactionId","transactionId","getNFTContractInfo","contractAddresses","searchParams","append","handleFetch","headers","Version","NFT_API_VERSION","ApprovalType","WatchAsset","selectedNetworkClientId","configuration","selectedAccount","internalAccount","oldSelectedAccountId","newCollection","baseStateKey","oldState","newAddressState","contractAddress","urlParams","URLSearchParams","chainIds","tokens","includeTopBid","includeAttributes","includeLastSale","nftInformation","fetchWithErrorHandling","getCollectionParams","token","collection","collectionInformation","imageOriginal","kind","rarityRank","rarity","attributes","lastSale","imageSmall","creator","imageThumbnail","market","topBid","collections","openseaVerificationStatus","contractDeployedAt","ownerCount","tokenURI","hasIpfsTokenURI","isDisplayNFTMediaToggleEnabled","getFormattedIpfsUrl","ERC721","ERC1155","hexTokenId","remove0x","BNToHex","blockchainMetadata","nftApiMetadata","safelyExecute","symbol","nftMetadataFromApi","blockchainContractData","every","schema_name","image_url","imageUrl","tokenCount","asset_contract_type","created_date","total_supply","external_link","differentMetadata","hasNewFields","hasNewCollectionFields","newEntry","nftContracts","contractInformation","logo","totalSupply","assetContractType","createdDate","schemaName","externalLink","newNftContracts","newIgnoredNfts","filter","c","invalidParams","isAddress","account","nftsToUpdate","NftController_default","_contractmetadata","_contractmetadata2","_pollingcontroller","DEFAULT_INTERVAL","isEqualCaseInsensitive","value1","value2","_intervalId","_networkClientId","_tokenList","_disabled","_isUnlocked","_isDetectionEnabledFromPreferences","_isDetectionEnabledForNetwork","_getBalancesInSingleCall","_trackMetaMetricsEvent","_registerEventListeners","registerEventListeners_fn","_stopPolling","stopPolling_fn","_startPolling","startPolling_fn","_getCorrectChainIdAndNetworkClientId","getCorrectChainIdAndNetworkClientId_fn","_restartTokenDetection","restartTokenDetection_fn","_getSlicesOfTokensToDetect","getSlicesOfTokensToDetect_fn","_addDetectedTokens","addDetectedTokens_fn","_getSelectedAccount","getSelectedAccount_fn","_getSelectedAddress","getSelectedAddress_fn","STATIC_MAINNET_TOKEN_LIST","acc","base","erc20","erc721","tokenMetadata","iconUrl","aggregators","TokenDetectionController","StaticIntervalPollingController","interval","getBalancesInSingleCall","trackMetaMetricsEvent","setIntervalLength","useTokenDetection","defaultUseTokenDetection","isTokenDetectionSupportedForNetwork","isUnlocked","enable","disable","isActive","start","stop","_executePoll","detectTokens","addressAgainstWhichToDetect","chainIdAgainstWhichToDetect","networkClientIdAgainstWhichToDetect","ChainId","mainnet","isTokenDetectionInactiveInMainnet","tokensChainsCache","tokensSlice","tokenList","isDetectionChangedFromPreferences","isNetworkClientIdChanged","newChainId","clearInterval","setInterval","getIntervalLength","networkConfiguration","allTokens","allDetectedTokens","allIgnoredTokens","tokensAddresses","detectedTokensAddresses","ignoredTokensAddresses","tokensToDetect","addresses","slicesOfTokensToDetect","balances","tokensWithBalance","eventTokensDetails","nonZeroTokenAddress","decimals","isERC721","properties","token_standard","asset_type","TokenDetectionController_default","_contracts","_metamaskethabis","ERC1155Standard","provider","contractSupportsURIMetadataInterface","contractSupportsInterface","ERC1155_METADATA_URI_INTERFACE_ID","contractSupportsTokenReceiverInterface","ERC1155_TOKEN_RECEIVER_INTERFACE_ID","contractSupportsBase1155Interface","ERC1155_INTERFACE_ID","getTokenURI","Contract","abiERC1155","uri","getBalanceOf","balance","balanceOf","ethersBigNumberToBN","transferSingle","operator","getAssetSymbol","inputs","outputs","stateMutability","payable","getAssetName","interfaceId","supportsInterface","getDetails","response","timeoutFetch","json","_provider","_abortController","_onNetworkDidChange","onNetworkDidChange_fn","_fetchTokenMetadata","fetchTokenMetadata_fn","_updateTokensAttribute","updateTokensAttribute_fn","_detectIsERC721","detectIsERC721_fn","_getProvider","getProvider_fn","_createEthersContract","createEthersContract_fn","_generateRandomId","generateRandomId_fn","_getNewAllTokensState","getNewAllTokensState_fn","_isInteractingWithWallet","isInteractingWithWallet_fn","requestApproval_fn","_chunkJCR4H6YLjs","_chunk5QLC2MHVjs","_chunkK7A3EOIMjs","_providers","ignoredTokens","detectedTokens","getDefaultTokensState","TokensController","AbortController","addDetectedTokens","addToken","currentChainId","accountAddress","isInteractingWithWalletAccount","newTokens","formatIconUrlWithProxy","formatAggregatorNames","previousIndex","newIgnoredTokens","newDetectedTokens","newAllTokens","newAllIgnoredTokens","newAllDetectedTokens","interactingChainId","newState","addTokens","tokensToImport","importedTokensMap","newTokensMap","output","tokenToAdd","formattedToken","ignoreTokens","tokenAddressesToIgnore","ignoredTokensMap","checksummedTokenAddresses","checksumAddress","incomingDetectedTokens","detectionDetails","previousImportedIndex","previousDetectedIndex","updateTokenType","tokenIndex","updatedToken","watchAsset","ERC20","isValidHexAddress","ERC20Standard","contractName","contractSymbol","contractDecimals","getTokenName","getTokenSymbol","getTokenDecimals","decimalsStr","decimalsNum","isInteger","suggestedAssetMeta","clearIgnoredTokens","selectedNetworkClient","abort","fetchTokenMetadata","signal","TOKEN_METADATA_NO_SUPPORT_ERROR","tokenAttribute","newToken","tokenContract","abiERC721","ERC721_INTERFACE_ID","Web3Provider","abi","web3provider","v1","userAddressToAddTokens","chainIdToAddTokens","newNetworkTokens","newIgnoredNetworkTokens","newDetectedNetworkTokens","TokensController_default","_addNft","_getNftState","_inProcessNftFetchingUpdates","_getOwnerNftApi","getOwnerNftApi_fn","_getOwnerNfts","getOwnerNfts_fn","supportedNftDetectionNetworks","BlockaidResultType","BlockaidResultType2","NftDetectionController","getNftState","isMainnet","isMainnetByNetworkClientId","networkClient","detectNfts","updateKey","inProgressUpdate","updateSucceeded","updateFailed","createDeferredPromise","suppressUnhandledRejection","resultNftApi","apiNfts","isSpam","blockaidResult","result_type","currValue","collectionResponse","reduceInBatchesSerially","batchSize","eachBatch","allResponses","s","timeout","NFT_API_TIMEOUT","initialResult","singleNFT","found","addNftPromises","imageThumbnailUrl","imageOriginalUrl","rarityScore","ignored","continuation","useNftDetection","cursor","convertedChainId","convertHexToDecimal","NftDetectionController_default","MAX_GET_COLLECTION_BATCH_SIZE","_fetchMultiExchangeRate","_includeUsdRate","_intervalLength","_withLock","withLock_fn","executePoll_fn","_updateRates","updateRates_fn","_chunkZG5MS2TOjs","Cryptocurrency","Cryptocurrency2","fiatCurrency","rates","cryptocurrencies","btc","conversionDate","conversionRate","RatesController","includeUsdRate","fetchMultiExchangeRate","fetchMultiExchangeRate2","getCryptocurrencyList","setCryptocurrencyList","list","fromCurrencies","setFiatCurrency","updatedRates","cryptocurrency","usdConversionRate","usd","_registerActionHandlers","registerActionHandlers_fn","_registerEventSubscriptions","registerEventSubscriptions_fn","_getCorrectProvider","getCorrectProvider_fn","_chunkISK2VSBBjs","_singlecallbalancecheckerabi","_singlecallbalancecheckerabi2","SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID","MISSING_PROVIDER_ERROR","AssetsContractController","setProvider","getERC20Standard","getERC721Standard","ERC721Standard","getERC1155Standard","getERC20BalanceOf","getERC20TokenDecimals","getERC20TokenName","getERC721NftTokenId","getNftTokenId","getTokenStandardAndDetails","erc721Standard","erc1155Standard","erc20Standard","getERC721TokenURI","getERC721AssetName","getERC721AssetSymbol","getERC721OwnerOf","getOwnerOf","getERC1155TokenURI","getERC1155BalanceOf","nftId","transferSingleERC1155","senderAddress","recipientAddress","qty","nonZeroBalances","methodsExcludedFromMessenger","getKnownPropertyNames","getPrototypeOf","networkClientConfiguration","AssetsContractController_default","_refreshMutex","_handle","_getCurrentChainId","getCurrentChainId_fn","_getCorrectNetworkClient","getCorrectNetworkClient_fn","_getBalanceFromChain","getBalanceFromChain_fn","_ethquery","_ethquery2","_lodash","accountTrackerMetadata","accounts","accountsByChainId","AccountTrackerController","poll","refresh","syncAccounts","cloneDeep","existing","newAddresses","oldAddresses","clearTimeout","ethQuery","isMultiAccountBalancesEnabled","accountsToUpdate","accountsForChain","syncBalanceWithAddresses","safelyExecuteWithTimeout","query","AccountTrackerController_default","contractSupportsMetadataInterface","ERC721_METADATA_INTERFACE_ID","contractSupportsEnumerableInterface","ERC721_ENUMERABLE_INTERFACE_ID","contractSupportsBase721Interface","tokenOfOwnerByIndex","ownerOf","_util","_abiutils","abiERC20","assertIsStrictHexString","decoded","utf8","toUtf8","TOKEN_END_POINT_API","queryApi","apiURL","abortSignal","fetchOptions","referrer","referrerPolicy","mode","cache","Headers","parseJsonResponse","apiResponse","responseObj","fetchTokenListByChainId","tokenURL","occurrenceFloor","getTokensURL","isTokenListSupportedForNetwork","tokenMetadataURL","getTokenMetadataURL","aggregatorNameByKey","aave","bancor","cmc","cryptocom","coinGecko","oneInch","paraswap","pmm","zapper","zerion","zeroEx","synthetix","yearn","apeswap","binanceDex","pancakeTop100","pancakeExtended","balancer","quickswap","matcha","pangolinDex","pangolinDexStableCoin","pangolinDexAvaxBridge","traderJoe","airswapLight","kleros","SupportedTokenDetectionNetworks","SupportedTokenDetectionNetworks2","removeIpfsProtocolPrefix","ipfsUrl","getIpfsCIDv1AndPath","cid","substring","CID","newObj","parse","toV1","addUrlProtocolPrefix","urlString","divideIntoBatches","batches","workingResult","TOKEN_PRICES_BATCH_SIZE","newNftMetadata","keysNewNftMetadata","keysExistingNft","Set","subdomainSupported","host","protocol","bigNumber","toHexString","fetchTokenContractExchangeRates","tokenPricesService","nativeCurrency","tokenAddresses","isChainIdSupported","validateChainIdSupported","isCurrencySupported","validateCurrencySupported","tokenPricesByTokenAddress","sort","allTokenPricesByTokenAddress","fetchTokenPrices","currency","tokenPrice","price","Source","Source2","currentCurrency","currencyRates","ETH","CurrencyRateController","fetchExchangeRate","fetchExchangeRate2","mutex","setCurrentCurrency","nativeCurrencies","updateExchangeRate","nativeCurrencyForExchangeRate","TESTNET_TICKER_SYMBOLS","FALL_BACK_VS_CURRENCY","fetchExchangeRateResponse","stopAllPolling","ticker","CurrencyRateController_default","_tokenPricePolicy","_cockatiel","SUPPORTED_CURRENCIES","ZERO_ADDRESS","SUPPORTED_CHAIN_IDS","CodefiTokenPricesServiceV2","degradedThreshold","retries","maximumConsecutiveFailures","onBreak","onDegraded","circuitBreakDuration","retryPolicy","retry","handleAll","maxAttempts","backoff","ExponentialBackoff","circuitBreakerPolicy","circuitBreaker","halfOpenAfter","breaker","ConsecutiveBreaker","onGiveUp","CircuitState","Closed","onSuccess","duration","wrap","chainIdAsNumber","hexToNumber","addressCryptoDataMap","execute","lowercasedTokenAddress","marketData","_chunkV6DNVRODjs","getCurrencyConversionRate","_pollState","_tokenPricesService","_inProcessExchangeRateUpdates","_ticker","_interval","_allTokens","_allDetectedTokens","_subscribeToTokensStateChange","subscribeToTokensStateChange_fn","_subscribeToNetworkStateChange","subscribeToNetworkStateChange_fn","_subscribeToAccountChange","subscribeToAccountChange_fn","_getTokenAddresses","getTokenAddresses_fn","_getChainIdAndTicker","getChainIdAndTicker_fn","_getTokensControllerState","getTokensControllerState_fn","_stopPoll","stopPoll_fn","_poll","poll_fn","_fetchAndMapExchangeRates","fetchAndMapExchangeRates_fn","_fetchAndMapExchangeRatesForSupportedNativeCurrency","fetchAndMapExchangeRatesForSupportedNativeCurrency_fn","_fetchAndMapExchangeRatesForUnsupportedNativeCurrency","fetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn","tokenRatesControllerMetadata","getDefaultTokenRatesControllerState","TokenRatesController","currentTicker","updateExchangeRates","updateExchangeRatesByChainId","previousTokenAddresses","newTokenAddresses","isEqual","toHex","contractNativeInformations","contractNativeInformationsNative","contractExchangeInformations","fallbackCurrencyToNativeCurrencyConversionRate","TokenRatesController_default","_tokens","contractBalances","getDefaultTokenBalancesState","TokenBalancesController","updateBalances","selectedInternalAccount","newContractBalances","hasBalanceError","TokenBalancesController_default","_onNetworkControllerStateChange","onNetworkControllerStateChange_fn","_fetchFromCache","fetchFromCache_fn","preventPollingOnNetworkRestart","getDefaultTokenListState","TokenListController","onNetworkStateChange","cacheRefreshThreshold","intervalDelay","updatePreventPollingOnNetworkRestart","abortController","networkControllerState","startPolling","restart","stopPolling","intervalId","fetchTokenList","cachedTokens","tokensFromAPI","updatedTokensChainsCache","timestamp","clearingTokenListData","shouldPreventPolling","dataCache","TokenListController_default","nativeSymbolOverrides","CRYPTO_COMPARE_DOMAIN","handleErrorResponse","Response","Message","includeUSDRate","fsym","getPricingURL","USD","isFinite","fsyms","tsyms","updatedTsyms","search","getMultiPricingURL","_chunkX2HRAVDOjs","_chunkADJ3IFJHjs","_chunkF6L3DFOZjs","_chunkHVOIBGYNjs","_chunkGHG3DOUKjs","_chunkT5ZX5BV7js","_chunk2TZK6YZAjs","_chunkBBCZM5P4js","_chunkYGGUAMHVjs","_chunk3LPQTUGGjs","_chunkZAR4BIOCjs","_fastjsonstablestringify","_fastjsonstablestringify2","getKey","AbstractPollingControllerBaseMixin","Base","_pollingTokenSets","_callbacks","arguments","startPollingByNetworkClientId","pollToken","pollingTokenSet","_startPollingByNetworkClientId","tokenSet","_key","stopPollingByPollingToken","pollingToken","keyToDelete","_stopPollingByPollingTokenSetId","onPollingCompleteByNetworkClientId","_chunkJCXUPRTTjs","BlockTrackerPollingControllerMixin","_activeListeners","BlockTrackerPollingController2","_getNetworkClientById","updateOnNewBlock","blockTracker","addListener","removeListener","BlockTrackerPollingControllerOnly","BlockTrackerPollingController","BlockTrackerPollingControllerV1","StaticIntervalPollingControllerMixin","_intervalIds","StaticIntervalPollingController2","intervalLength","existingInterval","StaticIntervalPollingControllerOnly","StaticIntervalPollingControllerV1","_chunkJVLLYBTKjs","_chunkRD6EX3RWjs","isBaseControllerV1","controller","_BaseController_internalState","__classPrivateFieldSet","receiver","f","__classPrivateFieldGet","isBaseController","immer_1","_ControllerMessenger_actions","_ControllerMessenger_events","_ControllerMessenger_initialEventPayloadGetters","_ControllerMessenger_eventPayloadCache","RestrictedControllerMessenger_1","stream","_stream$_writableStat","destroyed","_writableState","ended","connectionStream","mux","_objectMultiplex","ignoreStream","_app","EXTENSION_MESSAGES","CONNECTION_READY","_readableStream","pipeline","_err$message","_RestrictedControllerMessenger_instances","_RestrictedControllerMessenger_controllerMessenger","_RestrictedControllerMessenger_controllerName","_RestrictedControllerMessenger_allowedActions","_RestrictedControllerMessenger_allowedEvents","_RestrictedControllerMessenger_isAllowedEvent","_RestrictedControllerMessenger_isAllowedAction","_RestrictedControllerMessenger_isInCurrentNamespace","BaseControllerV1_1","BaseControllerV2_1","ControllerMessenger_1","isVaultUpdated","updateVaultWithDetail","updateVault","generateSalt","serializeBufferForStorage","serializeBufferFromStorage","keyFromPassword","exportKey","importKey","decryptWithKey","decryptWithDetail","decrypt","encryptWithKey","encryptWithDetail","encrypt","EXPORT_FORMAT","DERIVED_KEY_FORMAT","STRING_ENCODING","OLD_DERIVATION_PARAMS","algorithm","iterations","DEFAULT_DERIVATION_PARAMS","password","dataObj","salt","keyDerivationOptions","cryptoKey","JSON","stringify","exportedKeyString","vault","encryptionKey","dataBuffer","Buffer","vector","global","unwrapKey","buf","subtle","iv","vectorStr","encryptionResult","isEncryptionKey","keyMetadata","derivationOptions","text","encryptedData","decryptedObj","decryptedData","decryptedStr","exportable","passBuffer","saltBuffer","derivedKey","deriveKey","hash","byteCount","view","btoa","fromCharCode","apply","isPlainObject","CryptoKey","isKeyDerivationOptions","targetDerivationParams","keyString","exportedEncryptionKey","exportedKey","str","stripStr","seg","substr","num","hex","unprefixedHex","assertExhaustive","assertStruct","AssertionError","getError","ErrorWrapper","code","struct","errorPrefix","getErrorMessageWithoutTrailingPeriod","base64","assert_1","paddingRequired","characterSet","letters","raw","RegExp","pattern","createDataView","valueToBytes","base64ToBytes","bytesToBase64","assertIsBytes","isBytes","base_1","hex_1","HEX_MINIMUM_NUMBER_CHARACTER","HEX_MAXIMUM_NUMBER_CHARACTER","HEX_CHARACTER_OFFSET","getPrecomputedHexValues","lookupTable","getPrecomputedHexValuesBuilder","hexadecimal","assertIsHexString","strippedValue","normalizedValue","c1","charCodeAt","c2","n1","n2","isSafeInteger","TextEncoder","asIntN","bigint","MAX_SAFE_INTEGER","TextDecoder","bigIntFits","asUintN","reverse","normalizedValues","byteOffset","DataView","toCaipChainId","parseCaipAccountId","parseCaipChainId","isCaipAccountAddress","isCaipAccountId","isCaipReference","isCaipNamespace","isCaipChainId","KnownCaipNamespace","CaipAccountAddressStruct","CaipAccountIdStruct","CaipReferenceStruct","CaipNamespaceStruct","CaipChainIdStruct","CAIP_ACCOUNT_ADDRESS_REGEX","CAIP_ACCOUNT_ID_REGEX","CAIP_REFERENCE_REGEX","CAIP_NAMESPACE_REGEX","CAIP_CHAIN_ID_REGEX","is","caipChainId","exec","namespace","reference","caipAccountId","chain","ChecksumStruct","base64_1","createHex","createNumber","NumberLikeStruct","NumberCoercer","BigIntCoercer","BytesCoercer","HexCoercer","StructError","_FrozenMap_map","_FrozenSet_set","FrozenSet","FrozenMap","Symbol","callbackfn","thisArg","_map","_set","wrapError","isErrorWithStack","isErrorWithMessage","isErrorWithCode","pony_cause_1","misc_1","isNullOrUndefined","cause","ErrorWithCause","isValidChecksumAddress","getChecksumAddress","isStrictHexString","isHexString","HexChecksumAddressStruct","HexAddressStruct","HexStruct","sha3_1","unPrefixed","unPrefixedHash","keccak_256","character","nibbleIndex","hashCharacter","possibleChecksum","possibleAddress","getJsonRpcIdValidator","assertIsJsonRpcError","isJsonRpcError","assertIsJsonRpcFailure","isJsonRpcFailure","assertIsJsonRpcSuccess","isJsonRpcSuccess","assertIsJsonRpcResponse","isJsonRpcResponse","assertIsPendingJsonRpcResponse","isPendingJsonRpcResponse","JsonRpcResponseStruct","JsonRpcFailureStruct","JsonRpcSuccessStruct","PendingJsonRpcResponseStruct","assertIsJsonRpcRequest","isJsonRpcRequest","assertIsJsonRpcNotification","isJsonRpcNotification","JsonRpcNotificationStruct","JsonRpcRequestStruct","JsonRpcParamsStruct","JsonRpcErrorStruct","JsonRpcIdStruct","JsonRpcVersionStruct","jsonrpc2","getJsonSize","getSafeJson","isValidJson","JsonStruct","UnsafeJsonStruct","exactOptional","hasOptional","field","Struct","validator","context","refiner","schema","define","lazy","record","any","propKey","propValue","nullable","integer","jsonrpc","optional","unknown","permitEmptyString","permitFractions","permitNull","__importDefault","mod","globalLogger","projectName","extend","moduleName","calculateNumberSize","calculateStringSize","isASCII","ESCAPE_CHARACTERS_REGEXP","JsonSize","isNonEmptyArray","objectToCheck","getOwnPropertyNames","proto","hexToBigInt","bigIntToHex","numberToHex","innerResolve","innerReject","_error","timeSince","inMilliseconds","Duration","assertIsNonNegativeInteger","isNonNegativeInteger","satisfiesVersionRange","gtRange","gtVersion","assertIsSemVerRange","assertIsSemVerVersion","isValidSemVerRange","isValidSemVerVersion","VersionRangeStruct","VersionStruct","semver_1","refine","valid","validRange","versionRange","range","version1","version2","gt","gtr","satisfies","includePrerelease","CHAIN_ID_TO_ETHERS_NETWORK_NAME_MAP","OPENSEA_PROXY_URL","BUILT_IN_NETWORKS","ASSET_TYPES","GWEI","MAX_SAFE_CHAIN_ID","GANACHE_CHAIN_ID","RPC","types_1","NATIVE","TOKEN","NFT","UNKNOWN","GOERLI","SEPOLIA","LINEA_GOERLI","LINEA_SEPOLIA","NetworkType","goerli","NetworksTicker","rpcPrefs","blockExplorerUrl","sepolia","rpc","BuiltInNetworkName","Goerli","Sepolia","Mainnet","LineaGoerli","LineaSepolia","LineaMainnet","aurora","Aurora","weiHexToGweiDec","successfulFetch","normalizeEnsName","isSmartContractCode","isSafeDynamicKey","isSafeChainId","hexToText","hexToBN","gweiDecToWEIBN","getBuyURL","fromHex","fractionBN","util_1","detectSIWE","isValidSIWEOrigin","parseDomainParts","siwe_parser_1","logger_1","msgHexToText","stripped","buff","DEFAULT_PORTS_BY_PROTOCOL","domain","originProtocol","req","siwe","parsedMessage","originParts","domainParts","localeCompare","sensitivity","port","username","msgParams","isSIWEMessage","ParsedMessage","NetworkNickname","BlockExplorerUrl","isInfuraNetworkType","isNetworkType","InfuraNetworkType","val","PROTOTYPE_POLLUTION_BLOCKLIST","ethjs_unit_1","bn_js_1","eth_ens_namehash_1","fast_deep_equal_1","constants_1","TIMEOUT_ERROR","inputHex","ok","blockedKey","decimalChainId","inputBn","targetBN","numerator","denominator","numBN","denomBN","mul","div","isNaN","parts","wholePart","decimalPart","toWei","decimalRoundingDigit","wei","hexWei","fromWei","networkCode","amount","isBN","operation","logError","race","hexPrefixed","toChecksumAddress","allowNonPrefixed","addressToCheck","isValidAddress","errorCodesToCatch","codesToCatch","logOrRethrowError","ensName","normalized","normalize","sendAsync","PollingBlockTracker","safe_event_emitter_1","json_rpc_random_id_1","pify_1","logging_utils_1","createRandomId","calculateSum","accumulator","blockTrackerEvents","_blockResetDuration","blockResetDuration","_usePastBlocks","usePastBlocks","_currentBlock","_isRunning","_onNewListener","_onRemoveListener","_resetCurrentBlock","_setupInternalEvents","_pollingInterval","pollingInterval","_retryTimeout","retryTimeout","_keepEventLoopActive","keepEventLoopActive","_setSkipCacheFlag","setSkipCacheFlag","_cancelBlockResetTimeout","_maybeEnd","removeAllListeners","isRunning","getCurrentBlock","getLatestBlock","once","eventName","_maybeStart","_getBlockTrackerEventCount","_start","emit","_setupBlockResetTimeout","_end","listenerCount","_shouldUseNewBlock","newBlock","currentBlock","newBlockInt","hexToInt","currentBlockInt","_newPotentialLatest","_setCurrentBlock","oldBlock","_blockResetTimeout","unref","checkForLatestBlock","_updateLatestBlock","_updateAndQueue","_clearPollingTimeout","latestBlock","_fetchLatestBlock","skipCache","res","_a","newErr","emitErr","timeoutRef","_pollingTimeout","hexInt","SubscribeBlockTracker","_subscriptionId","blockNumber","_call","_handleSubData","subscription","HDKey","keccak256","privateToPublic","publicToAddress","ecsign","arrToBufArr","bufferToHex","bip39","wordlist","concatSig","getEncryptionPublicKey","personalSign","signTypedData","SignTypedDataVersion","HdKeyring","_wallets","deserialize","generateRandomMnemonic","_initFromMnemonic","generateMnemonic","_uint8ArrayToString","mnemonic","Uint16Array","_stringToUint8Array","indices","word","_mnemonicToUint8Array","mnemonicData","isBuffer","mnemonicAsString","serialize","uint8ArrayMnemonic","numberOfAccounts","hdPath","root","addAccounts","oldLen","newWallets","wallet","deriveChild","hexWallets","w","_addressfromPublicKey","publicKey","getAccounts","getAppKeyAddress","_getWalletForAccount","withAppKeyOrigin","exportAccount","privateKey","signTransaction","tx","privKey","_getPrivateKeyFor","signedTx","sign","signMessage","msgSig","v","signPersonalMessage","msgHex","decryptMessage","withAccount","privateKeyAsUint8Array","privateKeyAsHex","typedData","V1","removeAccount","appKeyOriginBuffer","appKeyBuffer","concat","appKeyPrivateKey","validateMnemonic","seed","mnemonicToSeedSync","hdWallet","fromMasterSeed","derive","_bn","trimmed","_url","getValidUrl","alarmList","alarmName","alarm","txMeta","txReceipt","txParams","nonce","gas","gasPrice","accessList","maxFeePerGas","maxPriorityFeePerGas","formattedTxMeta","blockHash","transactionIndex","_transactionController","TransactionEnvelopeType","feeMarket","legacy","includeParentheses","isValidAmount","formattedNumber","toFixed","_network","CHAIN_IDS","MAINNET","TEST_CHAINS","_hexstringUtils","stripHexPrefix","comparator","first","metaMetricsId","lastFourCharacters","_fourByte","getEnvironmentTypeMemo","memoize","parsedUrl","pathname","ENVIRONMENT_TYPE_POPUP","ENVIRONMENT_TYPE_FULLSCREEN","ENVIRONMENT_TYPE_NOTIFICATION","ENVIRONMENT_TYPE_BACKGROUND","getEnvironmentType","href","getPlatform","PLATFORM_FIREFOX","PLATFORM_BRAVE","PLATFORM_EDGE","PLATFORM_OPERA","PLATFORM_CHROME","addHexPrefix","characters","generateRandomId","charAt","floor","decodeURIComponent","isValidDate","d","getMethodDataName","knownMethodData","use4ByteResolution","prefixedData","addKnownMethodData","fourBytePrefix","methodData","getMethodDataAsync","createInfuraMiddleware","json_rpc_engine_1","rpc_errors_1","node_fetch_1","fetch_config_from_req_1","RETRIABLE_ERRORS","performFetch","network","projectId","extraHeaders","fetchUrl","fetchParams","fetchConfigFromReq","rawData","methodNotFound","createInternalError","createTimeoutError","isRetriableError","errMessage","phrase","createAsyncMiddleware","attempt","errMsg","createProvider","eth_json_rpc_provider_1","create_infura_middleware_1","engine","JsonRpcEngine","providerFromEngine","normalizeReq","requestOrigin","Accept","body","SafeEventEmitterProvider","safe_event_emitter_provider_1","providerFromMiddleware","provider_from_engine_1","middleware","_SafeEventEmitterProvider_engine","handle","send","_JsonRpcEngine_instances","_JsonRpcEngine_isDestroyed","_JsonRpcEngine_middleware","_JsonRpcEngine_notificationHandler","_JsonRpcEngine_assertIsNotDestroyed","_JsonRpcEngine_handleBatch","_JsonRpcEngine_handle","_JsonRpcEngine_processRequest","_JsonRpcEngine_runAllMiddleware","_JsonRpcEngine_runMiddleware","_JsonRpcEngine_runReturnHandlers","_JsonRpcEngine_checkForCompletion","__awaiter","_arguments","P","generator","fulfilled","rejected","notificationHandler","_promiseHandle","asMiddleware","end","middlewareError","isComplete","returnHandlers","handlerCallback","jsonify","requests","JsonRpcError","errorCodes","invalidRequest","responses","callerReq","_b","serializeError","middlewares","parsedError","returnHandler","handlers","asyncMiddleware","resolveNextPromise","nextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","createScaffoldMiddleware","getUniqueId","MAX","idCounter","createIdRemapMiddleware","getUniqueId_1","originalId","newId","mergeMiddleware","JsonRpcEngine_1","middlewareStack","_engine","_safeeventemitter","_safeeventemitter2","convertEip1193RequestToJsonRpcRequest","eip1193Request","jsonRpcRequest","_chunkVYK4XMOLjs","_jsonrpcengine","_chunkIQRHEFHIjs","_chunkV2OUBCY7js","EthQuery","currentProvider","generateFnFor","methodName","generateFnWithDefaultBlockFor","argCount","getBalance","getCode","getTransactionCount","getStorageAt","protocolVersion","syncing","coinbase","mining","hashrate","getBlockTransactionCountByHash","getBlockTransactionCountByNumber","getUncleCountByBlockHash","getUncleCountByBlockNumber","sendTransaction","sendRawTransaction","estimateGas","getBlockByHash","getBlockByNumber","getTransactionByHash","getTransactionByBlockHashAndIndex","getTransactionByBlockNumberAndIndex","getTransactionReceipt","getUncleByBlockHashAndIndex","getUncleByBlockNumberAndIndex","getCompilers","compileLLL","compileSolidity","compileSerpent","newFilter","newBlockFilter","newPendingTransactionFilter","uninstallFilter","getFilterChanges","getFilterLogs","getLogs","getWork","submitWork","submitHashrate","improvedError","__setModuleDefault","__importStar","decryptSafely","encryptSafely","nacl","isNullish","ephemeralKeyPair","box","keyPair","pubKeyUInt8Array","msgParamsUInt8Array","randomBytes","nonceLength","encryptedMessage","secretKey","ephemPublicKey","ciphertext","receiverPrivateKeyUint8Array","receiverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","dataWithPadding","modVal","padLength","repeat","privateKeyUint8Array","encryptionPublicKey","extractPublicKey","recoverPersonalSignature","getPublicKeyFor","signature","messageHash","hashPersonalMessage","legacyToBuffer","recoverPublicKey","msgHash","sig","toBuffer","sender","recoverTypedSignature","typedSignatureHash","TypedDataUtils","TYPED_MESSAGE_SCHEMA","abi_utils_1","keccak_1","utils_3","validateVersion","allowedVersions","parseNumber","reallyStrangeAddressToBytes","encodeField","V3","V4","encodeData","parsedType","lastIndexOf","typeValuePairs","primaryType","encodedTypes","encodedValues","hashType","encodeType","unsortedDeps","findTypeDependencies","deps","results","hashStruct","encoded","hashed","encodedHashType","sanitizeData","sanitizedData","EIP712Domain","eip712DomainHash","normalizeValue","abs","normalizeIntegers","_typedSignatureHash","normalizedData","additionalProperties","items","required","eip712Hash","hashBuffer","padWithZeroes","hexString","targetLength","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","toUnsigned","sStr","vStr","sigParams","fromRpcSig","ecrecover","simple_keyring_1","_SimpleKeyring_instances","_SimpleKeyring_wallets","_SimpleKeyring_getPrivateKeyFor","_SimpleKeyring_getWalletForAccount","eth_sig_util_1","randombytes_1","TYPE","SimpleKeyring","privateKeys","hexPrivateKey","strippedHexPrivateKey","numAccounts","generateKey","transaction","validateMessage","isSignTypedDataVersion","isValidPrivate"],"mappings":"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","file":"../metamask/common-0.js","sourcesContent":["import { Event as SentryEvent, Integration } from '@sentry/types';\n\nconst NAME = 'FilterEvents';\n\n/**\n * Filter events when MetaMetrics is disabled.\n *\n * @param options - Options bag.\n * @param options.getMetaMetricsEnabled - Function that returns whether MetaMetrics is enabled.\n * @param options.log - Function to log messages.\n */\nexport function filterEvents({\n  getMetaMetricsEnabled,\n  log,\n}: {\n  getMetaMetricsEnabled: () => Promise<boolean>;\n  log: (message: string) => void;\n}): Integration {\n  return {\n    name: NAME,\n    processEvent: async (event: SentryEvent) => {\n      // This integration is required in addition to the custom transport as it provides an\n      // asynchronous context which we may need in order to read the persisted state from the\n      // store, so it can later be added to the event via the `beforeSend` overload.\n      // It also provides a more native solution for discarding events, but any\n      // session requests will always be handled by the custom transport.\n      const metricsEnabled = await getMetaMetricsEnabled();\n\n      if (!metricsEnabled) {\n        log('Event dropped as metrics disabled');\n        return null;\n      }\n\n      return event;\n    },\n  };\n}\n","import { maskObject } from '../../../shared/modules/object.utils';\nimport ExtensionPlatform from '../platforms/extension';\nimport { SENTRY_BACKGROUND_STATE } from '../constants/sentry-state';\nimport LocalStore from './local-store';\nimport ReadOnlyNetworkStore from './network-store';\n\nconst platform = new ExtensionPlatform();\n\n// This instance of `localStore` is used by Sentry to get the persisted state\nconst sentryLocalStore = process.env.IN_TEST\n  ? new ReadOnlyNetworkStore()\n  : new LocalStore();\n\n/**\n * Get the persisted wallet state.\n *\n * @returns The persisted wallet state.\n */\nglobalThis.stateHooks.getPersistedState = async function () {\n  return await sentryLocalStore.get();\n};\n\nconst persistedStateMask = {\n  data: SENTRY_BACKGROUND_STATE,\n  meta: {\n    version: true,\n  },\n};\n\n/**\n * Get a state snapshot for Sentry. This is used to add additional context to\n * error reports, and it's used when processing errors and breadcrumbs to\n * determine whether the user has opted into Metametrics.\n *\n * This uses the persisted state pre-initialization, and the in-memory state\n * post-initialization. In both cases the state is anonymized.\n *\n * @returns A Sentry state snapshot.\n */\nglobalThis.stateHooks.getSentryState = function () {\n  const sentryState = {\n    browser: window.navigator.userAgent,\n    // we use the manifest.json version from getVersion and not\n    // `process.env.METAMASK_VERSION` as they can be different (see `getVersion`\n    // for more info)\n    version: platform.getVersion(),\n  };\n  // If `getSentryAppState` is set, it implies that initialization has completed\n  if (globalThis.stateHooks.getSentryAppState) {\n    sentryLocalStore.cleanUpMostRecentRetrievedState();\n    return {\n      ...sentryState,\n      state: globalThis.stateHooks.getSentryAppState(),\n    };\n  } else if (\n    // This is truthy if Sentry has retrieved state at least once already. This\n    // should always be true when getting context for an error report, but can\n    // be unset when Sentry is performing the opt-in check.\n    sentryLocalStore.mostRecentRetrievedState ||\n    // This is only set in the background process.\n    globalThis.stateHooks.getMostRecentPersistedState\n  ) {\n    const persistedState =\n      sentryLocalStore.mostRecentRetrievedState ||\n      globalThis.stateHooks.getMostRecentPersistedState();\n    // This can be unset when this method is called in the background for an\n    // opt-in check, but the state hasn't been loaded yet.\n    if (persistedState) {\n      return {\n        ...sentryState,\n        persistedState: maskObject(persistedState, persistedStateMask),\n      };\n    }\n  }\n  // This branch means that local storage has not yet been read, so we have\n  // no choice but to omit the application state.\n  // This should be unreachable when getting context for an error report, but\n  // can be false when Sentry is performing the opt-in check.\n  return sentryState;\n};\n","import { createModuleLogger, createProjectLogger } from '@metamask/utils';\nimport * as Sentry from '@sentry/browser';\nimport { logger } from '@sentry/utils';\nimport browser from 'webextension-polyfill';\nimport { isManifestV3 } from '../../../shared/modules/mv3.utils';\nimport extractEthjsErrorMessage from './extractEthjsErrorMessage';\nimport { getManifestFlags } from './manifestFlags';\nimport { filterEvents } from './sentry-filter-events';\n\nconst projectLogger = createProjectLogger('sentry');\nlet installType = 'unknown';\n\nexport const log = createModuleLogger(\n  projectLogger,\n  globalThis.document ? 'ui' : 'background',\n);\n\nconst internalLog = createModuleLogger(log, 'internal');\n\n/* eslint-disable prefer-destructuring */\n// Destructuring breaks the inlining of the environment variables\nconst METAMASK_BUILD_TYPE = process.env.METAMASK_BUILD_TYPE;\nconst METAMASK_DEBUG = process.env.METAMASK_DEBUG;\nconst METAMASK_ENVIRONMENT = process.env.METAMASK_ENVIRONMENT;\nconst RELEASE = process.env.METAMASK_VERSION;\nconst SENTRY_DSN = process.env.SENTRY_DSN;\nconst SENTRY_DSN_DEV = process.env.SENTRY_DSN_DEV;\nconst SENTRY_DSN_MMI = process.env.SENTRY_MMI_DSN;\n/* eslint-enable prefer-destructuring */\n\n// This is a fake DSN that can be used to test Sentry without sending data to the real Sentry server.\nconst SENTRY_DSN_FAKE = 'https://fake@sentry.io/0000000';\n\nexport const ERROR_URL_ALLOWLIST = {\n  CRYPTOCOMPARE: 'cryptocompare.com',\n  COINGECKO: 'coingecko.com',\n  ETHERSCAN: 'etherscan.io',\n  CODEFI: 'codefi.network',\n  SEGMENT: 'segment.io',\n};\n\nexport default function setupSentry() {\n  if (!RELEASE) {\n    throw new Error('Missing release');\n  }\n\n  if (!getSentryTarget()) {\n    log('Skipped initialization');\n    return undefined;\n  }\n\n  log('Initializing');\n\n  // Normally this would be awaited, but getSelf should be available by the time the report is finalized.\n  // If it's not, we still get the extensionId, but the installType will default to \"unknown\"\n  browser.management\n    .getSelf()\n    .then((extensionInfo) => {\n      if (extensionInfo.installType) {\n        installType = extensionInfo.installType;\n      }\n    })\n    .catch((error) => {\n      log('Error getting extension installType', error);\n    });\n  integrateLogging();\n  setSentryClient();\n\n  return {\n    ...Sentry,\n    getMetaMetricsEnabled,\n  };\n}\n\nfunction getClientOptions() {\n  const environment = getSentryEnvironment();\n  const sentryTarget = getSentryTarget();\n\n  return {\n    beforeBreadcrumb: beforeBreadcrumb(),\n    beforeSend: (report) => rewriteReport(report),\n    debug: METAMASK_DEBUG,\n    dist: isManifestV3 ? 'mv3' : 'mv2',\n    dsn: sentryTarget,\n    environment,\n    integrations: [\n      Sentry.dedupeIntegration(),\n      Sentry.extraErrorDataIntegration(),\n      Sentry.browserTracingIntegration(),\n      filterEvents({ getMetaMetricsEnabled, log }),\n    ],\n    release: RELEASE,\n    // Client reports are automatically sent when a page's visibility changes to\n    // \"hidden\", but cancelled (with an Error) that gets logged to the console.\n    // Our test infra sometimes reports these errors as unexpected failures,\n    // which results in test flakiness. We don't use these client reports, so\n    // we can safely turn them off by setting the `sendClientReports` option to\n    // `false`.\n    sendClientReports: false,\n    tracesSampleRate: getTracesSampleRate(sentryTarget),\n    transport: makeTransport,\n  };\n}\n\n/**\n * Compute the tracesSampleRate depending on testing condition.\n *\n * @param {string} sentryTarget\n * @returns tracesSampleRate to setup Sentry\n */\nfunction getTracesSampleRate(sentryTarget) {\n  if (sentryTarget === SENTRY_DSN_FAKE) {\n    return 1.0;\n  }\n\n  const flags = getManifestFlags();\n\n  if (flags.circleci) {\n    return 0.003;\n  }\n\n  if (METAMASK_DEBUG) {\n    return 1.0;\n  }\n\n  return 0.01;\n}\n\n/**\n * Get CircleCI tags passed from the test environment, through manifest.json,\n * and give them to the Sentry client.\n */\nfunction setCircleCiTags() {\n  const { circleci } = getManifestFlags();\n\n  if (circleci?.enabled) {\n    Sentry.setTag('circleci.enabled', circleci.enabled);\n    Sentry.setTag('circleci.branch', circleci.branch);\n    Sentry.setTag('circleci.buildNum', circleci.buildNum);\n    Sentry.setTag('circleci.job', circleci.job);\n    Sentry.setTag('circleci.nodeIndex', circleci.nodeIndex);\n    Sentry.setTag('circleci.prNumber', circleci.prNumber);\n  }\n}\n\n/**\n * Returns whether MetaMetrics is enabled, given the application state.\n *\n * @param {{ state: unknown} | { persistedState: unknown }} appState - Application state\n * @returns `true` if MetaMask's state has been initialized, and MetaMetrics\n * is enabled, `false` otherwise.\n */\nfunction getMetaMetricsEnabledFromAppState(appState) {\n  // during initialization after loading persisted state\n  if (appState.persistedState) {\n    return getMetaMetricsEnabledFromPersistedState(appState.persistedState);\n    // After initialization\n  } else if (appState.state) {\n    // UI\n    if (appState.state.metamask) {\n      return Boolean(appState.state.metamask.participateInMetaMetrics);\n    }\n    // background\n    return Boolean(\n      appState.state.MetaMetricsController?.participateInMetaMetrics,\n    );\n  }\n  // during initialization, before first persisted state is read\n  return false;\n}\n\n/**\n * Returns whether MetaMetrics is enabled, given the persisted state.\n *\n * @param {unknown} persistedState - Application state\n * @returns `true` if MetaMask's state has been initialized, and MetaMetrics\n * is enabled, `false` otherwise.\n */\nfunction getMetaMetricsEnabledFromPersistedState(persistedState) {\n  return Boolean(\n    persistedState?.data?.MetaMetricsController?.participateInMetaMetrics,\n  );\n}\n\n/**\n * Returns whether onboarding has completed, given the application state.\n *\n * @param {Record<string, unknown>} appState - Application state\n * @returns `true` if onboarding has completed, `false` otherwise.\n */\nfunction getOnboardingCompleteFromAppState(appState) {\n  // during initialization after loading persisted state\n  if (appState.persistedState) {\n    return getOnboardingCompleteFromPersistedState(appState.persistedState);\n    // After initialization\n  } else if (appState.state) {\n    // UI\n    if (appState.state.metamask) {\n      return Boolean(appState.state.metamask.completedOnboarding);\n    }\n    // background\n    return Boolean(appState.state.OnboardingController?.completedOnboarding);\n  }\n  // during initialization, before first persisted state is read\n  return false;\n}\n\n/**\n * Returns whether onboarding has completed, given the persisted state.\n *\n * @param {Record<string, unknown>} persistedState - Persisted state\n * @returns `true` if onboarding has completed, `false` otherwise.\n */\nfunction getOnboardingCompleteFromPersistedState(persistedState) {\n  return Boolean(\n    persistedState.data?.OnboardingController?.completedOnboarding,\n  );\n}\n\nfunction getSentryEnvironment() {\n  if (METAMASK_BUILD_TYPE === 'main') {\n    return METAMASK_ENVIRONMENT;\n  }\n\n  return `${METAMASK_ENVIRONMENT}-${METAMASK_BUILD_TYPE}`;\n}\n\nfunction getSentryTarget() {\n  if (\n    getManifestFlags().doNotForceSentryForThisTest ||\n    (process.env.IN_TEST && !SENTRY_DSN_DEV)\n  ) {\n    return SENTRY_DSN_FAKE;\n  }\n\n  if (METAMASK_ENVIRONMENT !== 'production') {\n    return SENTRY_DSN_DEV;\n  }\n\n  if (METAMASK_BUILD_TYPE === 'mmi') {\n    return SENTRY_DSN_MMI;\n  }\n\n  if (!SENTRY_DSN) {\n    throw new Error(\n      `Missing SENTRY_DSN environment variable in production environment`,\n    );\n  }\n\n  return SENTRY_DSN;\n}\n\n/**\n * Returns whether MetaMetrics is enabled. If the application hasn't yet\n * been initialized, the persisted state will be used (if any).\n *\n * @returns `true` if MetaMetrics is enabled, `false` otherwise.\n */\nasync function getMetaMetricsEnabled() {\n  const flags = getManifestFlags();\n\n  if (\n    METAMASK_BUILD_TYPE === 'mmi' ||\n    (flags.circleci && !flags.doNotForceSentryForThisTest)\n  ) {\n    return true;\n  }\n\n  const appState = getState();\n\n  if (appState.state || appState.persistedState) {\n    return (\n      getMetaMetricsEnabledFromAppState(appState) &&\n      getOnboardingCompleteFromAppState(appState)\n    );\n  }\n\n  // If we reach here, it means the error was thrown before initialization\n  // completed, and before we loaded the persisted state for the first time.\n  try {\n    const persistedState = await globalThis.stateHooks.getPersistedState();\n    return (\n      getMetaMetricsEnabledFromPersistedState(persistedState) &&\n      getOnboardingCompleteFromPersistedState(persistedState)\n    );\n  } catch (error) {\n    log('Error retrieving persisted state', error);\n    return false;\n  }\n}\n\nfunction setSentryClient() {\n  const clientOptions = getClientOptions();\n  const { dsn, environment, release } = clientOptions;\n\n  /**\n   * Sentry throws on initialization as it wants to avoid polluting the global namespace and\n   * potentially clashing with a website also using Sentry, but this could only happen in the content script.\n   * This emulates NW.js which disables these validations.\n   * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n   */\n  globalThis.nw = {};\n\n  /**\n   * Sentry checks session tracking support by looking for global history object and functions inside it.\n   * Scuttling sets this property to undefined which breaks Sentry logic and crashes background.\n   */\n  globalThis.history ??= {};\n\n  log('Updating client', {\n    environment,\n    dsn,\n    release,\n  });\n\n  Sentry.registerSpanErrorInstrumentation();\n  Sentry.init(clientOptions);\n\n  setCircleCiTags();\n\n  addDebugListeners();\n\n  return true;\n}\n\n/**\n * Receives a string and returns that string if it is a\n * regex match for a url with a `chrome-extension` or `moz-extension`\n * protocol, and an empty string otherwise.\n *\n * @param {string} url - The URL to check.\n * @returns {string} An empty string if the URL was internal, or the unmodified URL otherwise.\n */\nfunction hideUrlIfNotInternal(url) {\n  const re = /^(chrome-extension|moz-extension):\\/\\//u;\n  if (!url.match(re)) {\n    return '';\n  }\n  return url;\n}\n\n/**\n * Returns a method that handles the Sentry breadcrumb using a specific method to get the extension state\n *\n * @returns {(breadcrumb: object) => object} A method that modifies a Sentry breadcrumb object\n */\nexport function beforeBreadcrumb() {\n  return (breadcrumb) => {\n    if (!getState) {\n      return null;\n    }\n    const appState = getState();\n    if (\n      !getMetaMetricsEnabledFromAppState(appState) ||\n      !getOnboardingCompleteFromAppState(appState) ||\n      breadcrumb?.category === 'ui.input'\n    ) {\n      return null;\n    }\n    const newBreadcrumb = removeUrlsFromBreadCrumb(breadcrumb);\n    return newBreadcrumb;\n  };\n}\n\n/**\n * Receives a Sentry breadcrumb object and potentially removes urls\n * from its `data` property, it particular those possibly found at\n * data.from, data.to and data.url\n *\n * @param {object} breadcrumb - A Sentry breadcrumb object: https://develop.sentry.dev/sdk/event-payloads/breadcrumbs/\n * @returns {object} A modified Sentry breadcrumb object.\n */\nexport function removeUrlsFromBreadCrumb(breadcrumb) {\n  if (breadcrumb?.data?.url) {\n    breadcrumb.data.url = hideUrlIfNotInternal(breadcrumb.data.url);\n  }\n  if (breadcrumb?.data?.to) {\n    breadcrumb.data.to = hideUrlIfNotInternal(breadcrumb.data.to);\n  }\n  if (breadcrumb?.data?.from) {\n    breadcrumb.data.from = hideUrlIfNotInternal(breadcrumb.data.from);\n  }\n  return breadcrumb;\n}\n\n/**\n * Receives a Sentry event object and modifies it before the\n * error is sent to Sentry. Modifications include both sanitization\n * of data via helper methods and addition of state data from the\n * return value of the second parameter passed to the function.\n *\n * @param {object} report - A Sentry event object: https://develop.sentry.dev/sdk/event-payloads/\n * @returns {object} A modified Sentry event object.\n */\nexport function rewriteReport(report) {\n  try {\n    // simplify certain complex error messages (e.g. Ethjs)\n    simplifyErrorMessages(report);\n    // remove urls from error message\n    sanitizeUrlsFromErrorMessages(report);\n    // Remove evm addresses from error message.\n    // Note that this is redundent with data scrubbing we do within our sentry dashboard,\n    // but putting the code here as well gives public visibility to how we are handling\n    // privacy with respect to sentry.\n    sanitizeAddressesFromErrorMessages(report);\n    // modify report urls\n    rewriteReportUrls(report);\n\n    // append app state\n    const appState = getState();\n\n    if (!report.extra) {\n      report.extra = {};\n    }\n\n    report.extra.appState = appState;\n    if (browser.runtime && browser.runtime.id) {\n      report.extra.extensionId = browser.runtime.id;\n    }\n    report.extra.installType = installType;\n  } catch (err) {\n    log('Error rewriting report', err);\n  }\n  return report;\n}\n\n/**\n * Receives a Sentry event object and modifies it so that urls are removed from any of its\n * error messages.\n *\n * @param {object} report - the report to modify\n */\nfunction sanitizeUrlsFromErrorMessages(report) {\n  rewriteErrorMessages(report, (errorMessage) => {\n    let newErrorMessage = errorMessage;\n    const re = /(([-.+a-zA-Z]+:\\/\\/)|(www\\.))\\S+[@:.]\\S+/gu;\n    const urlsInMessage = newErrorMessage.match(re) || [];\n    urlsInMessage.forEach((url) => {\n      try {\n        const urlObj = new URL(url);\n        const { hostname } = urlObj;\n        if (\n          !Object.values(ERROR_URL_ALLOWLIST).some(\n            (allowedHostname) =>\n              hostname === allowedHostname ||\n              hostname.endsWith(`.${allowedHostname}`),\n          )\n        ) {\n          newErrorMessage = newErrorMessage.replace(url, '**');\n        }\n      } catch (e) {\n        newErrorMessage = newErrorMessage.replace(url, '**');\n      }\n    });\n    return newErrorMessage;\n  });\n}\n\n/**\n * Receives a Sentry event object and modifies it so that ethereum addresses are removed from\n * any of its error messages.\n *\n * @param {object} report - the report to modify\n */\nfunction sanitizeAddressesFromErrorMessages(report) {\n  rewriteErrorMessages(report, (errorMessage) => {\n    const newErrorMessage = errorMessage.replace(/0x[A-Fa-f0-9]{40}/u, '0x**');\n    return newErrorMessage;\n  });\n}\n\nfunction simplifyErrorMessages(report) {\n  rewriteErrorMessages(report, (errorMessage) => {\n    // simplify ethjs error messages\n    let simplifiedErrorMessage = extractEthjsErrorMessage(errorMessage);\n    // simplify 'Transaction Failed: known transaction'\n    if (\n      simplifiedErrorMessage.indexOf(\n        'Transaction Failed: known transaction',\n      ) === 0\n    ) {\n      // cut the hash from the error message\n      simplifiedErrorMessage = 'Transaction Failed: known transaction';\n    }\n    return simplifiedErrorMessage;\n  });\n}\n\nfunction rewriteErrorMessages(report, rewriteFn) {\n  // rewrite top level message\n  if (typeof report.message === 'string') {\n    report.message = rewriteFn(report.message);\n  }\n  // rewrite each exception message\n  if (report.exception && report.exception.values) {\n    report.exception.values.forEach((item) => {\n      if (typeof item.value === 'string') {\n        item.value = rewriteFn(item.value);\n      }\n    });\n  }\n}\n\nfunction rewriteReportUrls(report) {\n  if (report.request?.url) {\n    // update request url\n    report.request.url = toMetamaskUrl(report.request.url);\n  }\n\n  // update exception stack trace\n  if (report.exception && report.exception.values) {\n    report.exception.values.forEach((item) => {\n      if (item.stacktrace) {\n        item.stacktrace.frames.forEach((frame) => {\n          frame.filename = toMetamaskUrl(frame.filename);\n        });\n      }\n    });\n  }\n}\n\nfunction toMetamaskUrl(origUrl) {\n  if (!globalThis.location?.origin) {\n    return origUrl;\n  }\n\n  const filePath = origUrl?.split(globalThis.location.origin)[1];\n  if (!filePath) {\n    return origUrl;\n  }\n  const metamaskUrl = `/metamask${filePath}`;\n  return metamaskUrl;\n}\n\nfunction getState() {\n  return globalThis.stateHooks?.getSentryState?.() || {};\n}\n\nfunction integrateLogging() {\n  if (!METAMASK_DEBUG) {\n    return;\n  }\n\n  for (const loggerType of ['log', 'error']) {\n    logger[loggerType] = (...args) => {\n      const message = args[0].replace(`Sentry Logger [${loggerType}]: `, '');\n      internalLog(message, ...args.slice(1));\n    };\n  }\n\n  log('Integrated logging');\n}\n\nfunction addDebugListeners() {\n  if (!METAMASK_DEBUG) {\n    return;\n  }\n\n  const client = Sentry.getClient();\n\n  client?.on('beforeEnvelope', (event) => {\n    if (isCompletedSessionEnvelope(event)) {\n      log('Completed session', event);\n    }\n  });\n\n  client?.on('afterSendEvent', (event) => {\n    const type = getEventType(event);\n    log(type, event);\n  });\n\n  log('Added debug listeners');\n}\n\nfunction makeTransport(options) {\n  return Sentry.makeFetchTransport(options, async (...args) => {\n    const metricsEnabled = await getMetaMetricsEnabled();\n\n    if (!metricsEnabled) {\n      throw new Error('Network request skipped as metrics disabled');\n    }\n\n    return await fetch(...args);\n  });\n}\n\nfunction isCompletedSessionEnvelope(envelope) {\n  const type = envelope?.[1]?.[0]?.[0]?.type;\n  const data = envelope?.[1]?.[0]?.[1] ?? {};\n\n  return type === 'session' && data.status === 'exited';\n}\n\nfunction getEventType(event) {\n  if (event.type === 'transaction') {\n    return 'Trace';\n  }\n\n  if (event.level === 'error') {\n    return 'Error';\n  }\n\n  return 'Event';\n}\n","\"use strict\";\n// ESLint gets confused by the nested list and tables in the docs, so we disable\n// the rule for this file.\n/* eslint-disable jsdoc/check-indentation, jsdoc/match-description */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeSingle = exports.decode = exports.encodePacked = exports.encodeSingle = exports.encode = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"./errors\");\nconst packer_1 = require(\"./packer\");\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types.\n *\n * This will attempt to parse the values into the correct types. For example,\n * if you pass in a hex string for a `uint256`, it will be parsed into a\n * `bigint`. Regular strings are interpreted as UTF-8 strings. If you want to\n * pass in a hex string, you must pass it in as a `Uint8Array`, or use the\n * \"0x\"-prefix.\n *\n * It will also attempt to infer the types of the values. For example, if you\n * pass in a string for a `uint256`, it will result in a TypeScript compile-time\n * error. This does not work for all types, however. For example, if you use\n * nested arrays or tuples, the type will be inferred as `unknown`.\n *\n * The following types are supported:\n *\n * - `address`: A 20-byte Ethereum address.\n *   - As a 40-character-long hexadecimal string, starting with \"0x\".\n *   - As a 20-byte-long byte array, i.e., `Uint8Array`.\n * - `bool`: A boolean value.\n *   - As a boolean literal, i.e., `true` or `false`.\n *   - As the strings \"true\" or \"false\".\n * - `bytes(n)`: A dynamic byte array.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n *   - As a regular string, which will be interpreted as UTF-8.\n * - `function`: A Solidity function.\n *   - As a 48-character-long hexadecimal string, starting with \"0x\".\n *   - As a 24-byte-long byte array, i.e., `Uint8Array`.\n *   - As a {@link SolidityFunction} object.\n * - `int(n)`: A signed integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n * - `string`: A dynamic UTF-8 string.\n *   - As a regular string.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n * - `tuple`: A tuple of values.\n *   - As an array of values.\n * - `uint(n)`: An unsigned integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html\n * @param types - The types to encode.\n * @param values - The values to encode. This array must have the same length as\n * the types array.\n * @param packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param tight - Whether to pack the values tightly. When enabled, the values\n * will be packed without any padding. This matches the behaviour of\n * `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nconst encode = (types, values, packed, tight) => {\n    try {\n        return (0, packer_1.pack)({ types, values, packed, tight });\n    }\n    catch (error) {\n        if (error instanceof errors_1.ParserError) {\n            throw new errors_1.ParserError(`Unable to encode value: ${error.message}`, error);\n        }\n        throw new errors_1.ParserError(`An unexpected error occurred: ${(0, errors_1.getErrorMessage)(error)}`, error);\n    }\n};\nexports.encode = encode;\n/**\n * Encode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to encode.\n * @param value - The value to encode.\n * @returns The ABI encoded bytes.\n */\nconst encodeSingle = (type, value) => {\n    return (0, exports.encode)([type], [value]);\n};\nexports.encodeSingle = encodeSingle;\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types. This is similar to {@link encode}, but the values are encoded in\n * the non-standard packed mode. This differs from the standard encoding in the\n * following ways:\n *\n * - Most values are packed tightly, without alignment padding.\n *   - The exception is array values, which are padded to 32 bytes.\n * - Values are still padded to their full size, i.e., `uint16` values are still\n *  padded to 2 bytes, regardless of the length of the value.\n * - The encoding of dynamic types (`bytes`, `string`) is different. The length\n * of the dynamic type is not included in the encoding, and the dynamic type is\n * not padded to a multiple of 32 bytes.\n * - All values are encoded in-place, without any offsets.\n *\n * The encoding of this is ambiguous as soon as there is more than one dynamic\n * type. That means that these values cannot be decoded with {@link decode} or\n * Solidity's `abi.decode` function.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodePacked } from '@metamask/abi-utils';\n *\n * const encoded = encodePacked(['uint8'], [42]);\n *\n * console.log(encoded); // `Uint8Array [ 42 ]`\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#non-standard-packed-mode\n * @param types - The types to encode.\n * @param values - The values to encode.\n * @param tight - Whether to pack the values tightly. When enabled, `bytesN`\n * values in arrays will be packed without any padding. This matches the\n * behaviour of `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nconst encodePacked = (types, values, tight) => {\n    return (0, exports.encode)(types, values, true, tight);\n};\nexports.encodePacked = encodePacked;\n/**\n * Decode an ABI encoded buffer with the specified types. The types must be\n * valid Solidity ABI types.\n *\n * This will attempt to infer the output types from the input types. For\n * example, if you use `uint256` as an input type, the output type will be\n * `bigint`. This does not work for all types, however. For example, if you use\n * nested array types or tuple types, the output type will be `unknown`.\n *\n * The resulting types of the values will be as follows:\n *\n * | Contract ABI Type | Resulting JavaScript Type |\n * | ----------------- | ------------------------- |\n * | `address`         | `string`                  |\n * | `bool`            | `boolean`                 |\n * | `bytes(n)`        | `Uint8Array`              |\n * | `function`        | {@link SolidityFunction}  |\n * | `int(n)`          | `bigint`                  |\n * | `string`          | `string`                  |\n * | `tuple`           | `Array`                   |\n * | `array`           | `Array`                   |\n * | `uint(n)`         | `bigint`                  |\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param types - The types to decode the bytes with.\n * @param value - The bytes-like value to decode.\n * @returns The decoded values as array.\n */\nconst decode = (types, value) => {\n    const bytes = (0, utils_1.createBytes)(value);\n    try {\n        return (0, packer_1.unpack)(types, bytes);\n    }\n    catch (error) {\n        if (error instanceof errors_1.ParserError) {\n            throw new errors_1.ParserError(`Unable to decode value: ${error.message}`, error);\n        }\n        throw new errors_1.ParserError(`An unexpected error occurred: ${(0, errors_1.getErrorMessage)(error)}`, error);\n    }\n};\nexports.decode = decode;\n/**\n * Decode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link decode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to decode.\n * @param value - The bytes-like value to decode.\n * @returns The decoded value.\n */\nconst decodeSingle = (type, value) => {\n    const result = (0, exports.decode)([type], value);\n    (0, utils_1.assert)(result.length === 1, new errors_1.ParserError('Decoded value array has unexpected length.'));\n    return result[0];\n};\nexports.decodeSingle = decodeSingle;\n//# sourceMappingURL=abi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParserError = exports.getErrorStack = exports.getErrorMessage = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Attempt to get an error message from a value.\n *\n * - If the value is an error, the error's message is returned.\n * - If the value is an object with a `message` property, the value of that\n * property is returned.\n * - If the value is a string, the value is returned.\n * - Otherwise, \"Unknown error.\" is returned.\n *\n * @param error - The value to get an error message from.\n * @returns The error message.\n * @internal\n */\nconst getErrorMessage = (error) => {\n    if (typeof error === 'string') {\n        return error;\n    }\n    if (error instanceof Error) {\n        return error.message;\n    }\n    if ((0, utils_1.isObject)(error) &&\n        (0, utils_1.hasProperty)(error, 'message') &&\n        typeof error.message === 'string') {\n        return error.message;\n    }\n    return 'Unknown error.';\n};\nexports.getErrorMessage = getErrorMessage;\n/**\n * Get the error stack from a value. If the value is an error, the error's stack\n * is returned. Otherwise, it returns `undefined`.\n *\n * @param error - The value to get an error stack from.\n * @returns The error stack, or `undefined` if the value is not an error.\n * @internal\n */\nconst getErrorStack = (error) => {\n    if (error instanceof Error) {\n        return error.stack;\n    }\n    return undefined;\n};\nexports.getErrorStack = getErrorStack;\n/**\n * An error that is thrown when the ABI encoder or decoder encounters an\n * issue.\n */\nclass ParserError extends Error {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'ParserError';\n        const originalStack = (0, exports.getErrorStack)(originalError);\n        if (originalStack) {\n            this.stack = originalStack;\n        }\n    }\n}\nexports.ParserError = ParserError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./abi\"), exports);\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.iterate = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Iterate over a buffer with the specified size. This will yield a part of the\n * buffer starting at an increment of the specified size, until the end of the\n * buffer is reached.\n *\n * Calling the `skip` function will make it skip the specified number of bytes.\n *\n * @param buffer - The buffer to iterate over.\n * @param size - The number of bytes to iterate with.\n * @returns An iterator that yields the parts of the byte array.\n * @yields The parts of the byte array.\n */\nconst iterate = function* (buffer, size = 32) {\n    for (let pointer = 0; pointer < buffer.length; pointer += size) {\n        const skip = (length) => {\n            (0, utils_1.assert)(length >= 0, 'Cannot skip a negative number of bytes.');\n            (0, utils_1.assert)(length % size === 0, 'Length must be a multiple of the size.');\n            pointer += length;\n        };\n        const value = buffer.subarray(pointer);\n        yield { skip, value };\n    }\n    return {\n        skip: () => undefined,\n        value: new Uint8Array(),\n    };\n};\nexports.iterate = iterate;\n//# sourceMappingURL=iterator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unpack = exports.pack = exports.isDynamicParser = exports.getParser = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"./errors\");\nconst iterator_1 = require(\"./iterator\");\nconst parsers_1 = require(\"./parsers\");\nconst utils_2 = require(\"./utils\");\n/**\n * Get the parser for the specified type.\n *\n * @param type - The type to get a parser for.\n * @returns The parser.\n * @throws If there is no parser for the specified type.\n */\nconst getParser = (type) => {\n    const parsers = {\n        address: parsers_1.address,\n        array: parsers_1.array,\n        bool: parsers_1.bool,\n        bytes: parsers_1.bytes,\n        fixedBytes: parsers_1.fixedBytes,\n        function: parsers_1.fn,\n        number: parsers_1.number,\n        string: parsers_1.string,\n        tuple: parsers_1.tuple,\n    };\n    const staticParser = parsers[type];\n    if (staticParser) {\n        return staticParser;\n    }\n    const parser = Object.values(parsers).find((value) => value.isType(type));\n    if (parser) {\n        return parser;\n    }\n    throw new errors_1.ParserError(`The type \"${type}\" is not supported.`);\n};\nexports.getParser = getParser;\n/**\n * Check if the specified parser is dynamic, for the provided types. This is\n * primarily used for parsing tuples, where a tuple can be dynamic based on the\n * types. For other parsers, it will simply use the set `isDynamic` value.\n *\n * @param parser - The parser to check.\n * @param type - The type to check the parser with.\n * @returns Whether the parser is dynamic.\n */\nconst isDynamicParser = (parser, type) => {\n    const { isDynamic } = parser;\n    if (typeof isDynamic === 'function') {\n        return isDynamic(type);\n    }\n    return isDynamic;\n};\nexports.isDynamicParser = isDynamicParser;\n/**\n * Pack the provided values in a buffer, encoded with the specified types. If a\n * buffer is specified, the resulting value will be concatenated with the\n * buffer.\n *\n * @param args - The arguments object.\n * @param args.types - The types of the values to pack.\n * @param args.values - The values to pack.\n * @param args.packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param args.arrayPacked - Whether to use the non-standard packed mode for\n * arrays. Defaults to `false`.\n * @param args.byteArray - The byte array to encode the values into. Defaults to\n * an empty array.\n * @param args.tight - Whether to use tight packing mode. Only applicable when\n * `packed` is true. When true, the packed mode will not add any padding bytes.\n * This matches the packing behaviour of `ethereumjs-abi`, but is not standard.\n * @returns The resulting encoded buffer.\n */\nconst pack = ({ types, values, packed = false, tight = false, arrayPacked = false, byteArray = new Uint8Array(), }) => {\n    (0, utils_1.assert)(types.length === values.length, new errors_1.ParserError(`The number of types (${types.length}) does not match the number of values (${values.length}).`));\n    const { staticBuffer, dynamicBuffer, pointers } = types.reduce(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ staticBuffer, dynamicBuffer, pointers }, type, index) => {\n        const parser = (0, exports.getParser)(type);\n        const value = values[index];\n        // If packed mode is enabled, we can skip the dynamic check, as all\n        // values are encoded in the static buffer.\n        if (packed || arrayPacked || !(0, exports.isDynamicParser)(parser, type)) {\n            return {\n                staticBuffer: parser.encode({\n                    buffer: staticBuffer,\n                    value,\n                    type,\n                    packed,\n                    tight,\n                }),\n                dynamicBuffer,\n                pointers,\n            };\n        }\n        const newStaticBuffer = (0, utils_1.concatBytes)([staticBuffer, new Uint8Array(32)]);\n        const newDynamicBuffer = parser.encode({\n            buffer: dynamicBuffer,\n            value,\n            type,\n            packed,\n            tight,\n        });\n        return {\n            staticBuffer: newStaticBuffer,\n            dynamicBuffer: newDynamicBuffer,\n            pointers: [\n                ...pointers,\n                { position: staticBuffer.length, pointer: dynamicBuffer.length },\n            ],\n        };\n    }, {\n        staticBuffer: new Uint8Array(),\n        dynamicBuffer: new Uint8Array(),\n        pointers: [],\n    });\n    // If packed mode is enabled, there shouldn't be any dynamic values.\n    (0, utils_1.assert)((!packed && !arrayPacked) || dynamicBuffer.length === 0, new errors_1.ParserError('Invalid pack state.'));\n    const dynamicStart = staticBuffer.length;\n    const updatedBuffer = pointers.reduce((target, { pointer, position }) => {\n        const offset = (0, utils_2.padStart)((0, utils_1.numberToBytes)(dynamicStart + pointer));\n        return (0, utils_2.set)(target, offset, position);\n    }, staticBuffer);\n    return (0, utils_1.concatBytes)([byteArray, updatedBuffer, dynamicBuffer]);\n};\nexports.pack = pack;\nconst unpack = (types, buffer) => {\n    const iterator = (0, iterator_1.iterate)(buffer);\n    return types.map((type) => {\n        const { value: { value, skip }, done, } = iterator.next();\n        (0, utils_1.assert)(!done, new errors_1.ParserError(`The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse \"${type}\".`));\n        const parser = (0, exports.getParser)(type);\n        const isDynamic = (0, exports.isDynamicParser)(parser, type);\n        if (isDynamic) {\n            const pointer = (0, utils_1.bytesToNumber)(value.subarray(0, 32));\n            const target = buffer.subarray(pointer);\n            return parser.decode({ type, value: target, skip });\n        }\n        return parser.decode({ type, value, skip });\n    });\n};\nexports.unpack = unpack;\n//# sourceMappingURL=packer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.address = exports.getAddress = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst utils_2 = require(\"../utils\");\n/**\n * Normalize an address value. This accepts the address as:\n *\n * - A hex string starting with the `0x` prefix.\n * - A byte array (`Uint8Array` or `Buffer`).\n *\n * It checks that the address is 20 bytes long.\n *\n * @param value - The value to normalize.\n * @returns The normalized address as `Uint8Array`.\n */\nconst getAddress = (value) => {\n    const bytesValue = (0, utils_1.createBytes)(value);\n    (0, utils_1.assert)(bytesValue.length <= 20, new errors_1.ParserError(`Invalid address value. Expected address to be 20 bytes long, but received ${bytesValue.length} bytes.`));\n    return (0, utils_2.padStart)(bytesValue, 20);\n};\nexports.getAddress = getAddress;\nexports.address = {\n    isDynamic: false,\n    /**\n     * Get if the given value is a valid address type. Since `address` is a simple\n     * type, this is just a check that the value is \"address\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a valid address type.\n     */\n    isType: (type) => type === 'address',\n    /**\n     * Get the byte length of an encoded address. Since `address` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual addresses are only 20 bytes long, but the encoding of\n     * the `address` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded address.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given address to a 32-byte-long byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The address to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded address added to it.\n     */\n    encode({ buffer, value, packed }) {\n        const addressValue = (0, exports.getAddress)(value);\n        // If we're using packed encoding, we can just add the address bytes to the\n        // byte array, without adding any padding.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, addressValue]);\n        }\n        const addressBuffer = (0, utils_2.padStart)(addressValue);\n        return (0, utils_1.concatBytes)([buffer, addressBuffer]);\n    },\n    /**\n     * Decode the given byte array to an address.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded address as a hexadecimal string, starting with the\n     * \"0x\"-prefix.\n     */\n    decode({ value }) {\n        return (0, utils_1.add0x)((0, utils_1.bytesToHex)(value.slice(12, 32)));\n    },\n};\n//# sourceMappingURL=address.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = exports.getTupleType = exports.getArrayType = exports.isArrayType = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst packer_1 = require(\"../packer\");\nconst utils_2 = require(\"../utils\");\nconst fixed_bytes_1 = require(\"./fixed-bytes\");\nconst tuple_1 = require(\"./tuple\");\nconst ARRAY_REGEX = /^(?<type>.*)\\[(?<length>\\d*?)\\]$/u;\nconst isArrayType = (type) => ARRAY_REGEX.test(type);\nexports.isArrayType = isArrayType;\n/**\n * Get the type of the array.\n *\n * @param type - The type to get the array type for.\n * @returns The array type.\n */\nconst getArrayType = (type) => {\n    const match = type.match(ARRAY_REGEX);\n    (0, utils_1.assert)(match?.groups?.type, new errors_1.ParserError(`Invalid array type. Expected an array type, but received \"${type}\".`));\n    return [\n        match.groups.type,\n        match.groups.length ? parseInt(match.groups.length, 10) : undefined,\n    ];\n};\nexports.getArrayType = getArrayType;\n/**\n * Get the type of the array as a tuple type. This is used for encoding fixed\n * length arrays, which are encoded as tuples.\n *\n * @param innerType - The type of the array.\n * @param length - The length of the array.\n * @returns The tuple type.\n */\nconst getTupleType = (innerType, length) => {\n    return `(${new Array(length).fill(innerType).join(',')})`;\n};\nexports.getTupleType = getTupleType;\nexports.array = {\n    /**\n     * Check if the array is dynamic. Arrays are dynamic if the array does not\n     * have a fixed length, or if the array type is dynamic.\n     *\n     * @param type - The type to check.\n     * @returns Whether the array is dynamic.\n     */\n    isDynamic(type) {\n        const [innerType, length] = (0, exports.getArrayType)(type);\n        return (\n        // `T[]` is dynamic for any `T`. `T[k]` is dynamic for any dynamic `T` and\n        // any `k >= 0`.\n        length === undefined || (0, packer_1.isDynamicParser)((0, packer_1.getParser)(innerType), innerType));\n    },\n    /**\n     * Check if a type is an array type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is an array type.\n     */\n    isType(type) {\n        return (0, exports.isArrayType)(type);\n    },\n    /**\n     * Get the byte length of an encoded array. If the array is dynamic, this\n     * returns 32, i.e., the length of the pointer to the array. If the array is\n     * static, this returns the byte length of the resulting tuple type.\n     *\n     * @param type - The type to get the byte length for.\n     * @returns The byte length of an encoded array.\n     */\n    getByteLength(type) {\n        (0, utils_1.assert)((0, exports.isArrayType)(type), new errors_1.ParserError(`Expected an array type, but received \"${type}\".`));\n        const [innerType, length] = (0, exports.getArrayType)(type);\n        if (!(0, packer_1.isDynamicParser)(this, type) && length !== undefined) {\n            return tuple_1.tuple.getByteLength((0, exports.getTupleType)(innerType, length));\n        }\n        return 32;\n    },\n    /**\n     * Encode the given array to a byte array. If the array is static, this uses\n     * the tuple encoder.\n     *\n     * @param args - The encoding arguments.\n     * @param args.type - The type of the array.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The array to encode.\n     * @param args.packed - Whether to use non-standard packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded array added to it.\n     */\n    encode({ type, buffer, value, packed, tight }) {\n        const [arrayType, fixedLength] = (0, exports.getArrayType)(type);\n        // Packed encoding does not support nested arrays.\n        (0, utils_1.assert)(!packed || !(0, exports.isArrayType)(arrayType), new errors_1.ParserError(`Cannot pack nested arrays.`));\n        // Tightly pack `T[]` where `T` is a dynamic type. This is not supported in\n        // Solidity, but is commonly used in the Ethereum ecosystem.\n        if (packed && (0, packer_1.isDynamicParser)((0, packer_1.getParser)(arrayType), arrayType)) {\n            return (0, packer_1.pack)({\n                types: new Array(value.length).fill(arrayType),\n                values: value,\n                byteArray: buffer,\n                packed,\n                arrayPacked: true,\n                tight,\n            });\n        }\n        if (fixedLength) {\n            (0, utils_1.assert)(fixedLength === value.length, new errors_1.ParserError(`Array length does not match type length. Expected a length of ${fixedLength}, but received ${value.length}.`));\n            // `T[k]` for any `T` and `k` is encoded as `(T[0], ..., T[k - 1])`.\n            return tuple_1.tuple.encode({\n                type: (0, exports.getTupleType)(arrayType, fixedLength),\n                buffer,\n                value,\n                // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n                // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n                // support to provide compatibility with it.\n                packed: fixed_bytes_1.fixedBytes.isType(arrayType) && tight,\n                tight,\n            });\n        }\n        // For packed encoding, we don't need to encode the length of the array,\n        // so we can just encode the values.\n        if (packed) {\n            return (0, packer_1.pack)({\n                types: new Array(value.length).fill(arrayType),\n                values: value,\n                byteArray: buffer,\n                // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n                // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n                // support to provide compatibility with it.\n                packed: fixed_bytes_1.fixedBytes.isType(arrayType) && tight,\n                arrayPacked: true,\n                tight,\n            });\n        }\n        // `T[]` with `k` elements is encoded as `k (T[0], ..., T[k - 1])`. That\n        // means that we just need to encode the length of the array, and then the\n        // array itself. The pointer is encoded by the {@link pack} function.\n        const arrayLength = (0, utils_2.padStart)((0, utils_1.numberToBytes)(value.length));\n        return (0, packer_1.pack)({\n            types: new Array(value.length).fill(arrayType),\n            values: value,\n            byteArray: (0, utils_1.concatBytes)([buffer, arrayLength]),\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode an array from the given byte array.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the array.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded array.\n     */\n    decode({ type, value, ...rest }) {\n        const [arrayType, fixedLength] = (0, exports.getArrayType)(type);\n        if (fixedLength) {\n            const result = tuple_1.tuple.decode({\n                type: (0, exports.getTupleType)(arrayType, fixedLength),\n                value,\n                ...rest,\n            });\n            (0, utils_1.assert)(result.length === fixedLength, new errors_1.ParserError(`Array length does not match type length. Expected a length of ${fixedLength}, but received ${result.length}.`));\n            return result;\n        }\n        const arrayLength = (0, utils_1.bytesToNumber)(value.subarray(0, 32));\n        return (0, packer_1.unpack)(new Array(arrayLength).fill(arrayType), value.subarray(32));\n    },\n};\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bool = exports.getBooleanValue = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst number_1 = require(\"./number\");\nconst BooleanCoercer = (0, superstruct_1.coerce)((0, superstruct_1.boolean)(), (0, superstruct_1.union)([(0, superstruct_1.literal)('true'), (0, superstruct_1.literal)('false')]), (value) => value === 'true');\n/**\n * Normalize a boolean value. This accepts the boolean as:\n *\n * - A boolean literal.\n * - The string \"true\" or \"false\".\n *\n * @param value - The value to get a boolean for.\n * @returns The parsed boolean value. This is `BigInt(1)` for truthy values, or\n * `BigInt(0)` for falsy values.\n */\nconst getBooleanValue = (value) => {\n    try {\n        const booleanValue = (0, superstruct_1.create)(value, BooleanCoercer);\n        if (booleanValue) {\n            return BigInt(1);\n        }\n        return BigInt(0);\n    }\n    catch {\n        throw new errors_1.ParserError(`Invalid boolean value. Expected a boolean literal, or the string \"true\" or \"false\", but received \"${value}\".`);\n    }\n};\nexports.getBooleanValue = getBooleanValue;\nexports.bool = {\n    isDynamic: false,\n    /**\n     * Get if the given value is a valid boolean type. Since `bool` is a simple\n     * type, this is just a check that the value is \"bool\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a valid boolean type.\n     */\n    isType: (type) => type === 'bool',\n    /**\n     * Get the byte length of an encoded boolean. Since `bool` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual booleans are only 1 byte long, but the encoding of\n     * the `bool` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded boolean.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given boolean to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The boolean to encode.\n     * @param args.packed - Whether the value is packed.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded boolean added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        const booleanValue = (0, exports.getBooleanValue)(value);\n        // For packed encoding, we add a single byte (`0x00` or `0x01`) to the byte\n        // array.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, (0, utils_1.bigIntToBytes)(booleanValue)]);\n        }\n        // Booleans are encoded as 32-byte integers, so we use the number parser\n        // to encode the boolean value.\n        return number_1.number.encode({\n            type: 'uint256',\n            buffer,\n            value: booleanValue,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a boolean.\n     *\n     * @param args - The decoding arguments.\n     * @returns The decoded boolean.\n     */\n    decode(args) {\n        // Booleans are encoded as 32-byte integers, so we use the number parser\n        // to decode the boolean value.\n        return number_1.number.decode({ ...args, type: 'uint256' }) === BigInt(1);\n    },\n};\n//# sourceMappingURL=bool.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst utils_2 = require(\"../utils\");\nexports.bytes = {\n    isDynamic: true,\n    /**\n     * Check if a type is a bytes type. Since `bytes` is a simple type, this is\n     * just a check that the type is \"bytes\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a bytes type.\n     */\n    isType: (type) => type === 'bytes',\n    /**\n     * Get the byte length of an encoded bytes value. Since `bytes` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual length of a bytes value is variable, but the encoded\n     * static value (pointer) is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded bytes value.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given bytes value to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The bytes value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded bytes value added to it.\n     */\n    encode({ buffer, value, packed }) {\n        const bufferValue = (0, utils_1.createBytes)(value);\n        // For packed encoding, we can just add the bytes value to the byte array,\n        // without adding any padding or alignment. There is also no need to\n        // encode the length of the bytes.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, bufferValue]);\n        }\n        const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n        // Bytes of length `k` are encoded as `k pad_right(bytes)`.\n        return (0, utils_1.concatBytes)([\n            buffer,\n            (0, utils_2.padStart)((0, utils_1.numberToBytes)(bufferValue.byteLength)),\n            (0, utils_2.padEnd)(bufferValue, paddedSize),\n        ]);\n    },\n    /**\n     * Decode the given byte array to a bytes value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded bytes value as a `Uint8Array`.\n     */\n    decode({ value }) {\n        const bytesValue = value.subarray(0, 32);\n        const length = (0, utils_1.bytesToNumber)(bytesValue);\n        // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n        // into a new array.\n        return value.slice(32, 32 + length);\n    },\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixedBytes = exports.getByteLength = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst utils_2 = require(\"../utils\");\nconst BYTES_REGEX = /^bytes([0-9]{1,2})$/u;\n/**\n * Get the length of the specified type. If a length is not specified, or if the\n * length is out of range (0 < n <= 32), this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The byte length of the type.\n */\nconst getByteLength = (type) => {\n    const bytes = type.match(BYTES_REGEX)?.[1];\n    (0, utils_1.assert)(bytes, `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`);\n    const length = Number(bytes);\n    (0, utils_1.assert)(length > 0 && length <= 32, new errors_1.ParserError(`Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`));\n    return length;\n};\nexports.getByteLength = getByteLength;\nexports.fixedBytes = {\n    isDynamic: false,\n    /**\n     * Check if a type is a fixed bytes type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a fixed bytes type.\n     */\n    isType(type) {\n        return BYTES_REGEX.test(type);\n    },\n    /**\n     * Get the byte length of an encoded fixed bytes type.\n     *\n     * @returns The byte length of the type.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode a fixed bytes value.\n     *\n     * @param args - The arguments to encode.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed }) {\n        const length = (0, exports.getByteLength)(type);\n        const bufferValue = (0, utils_1.createBytes)(value);\n        (0, utils_1.assert)(bufferValue.length <= length, new errors_1.ParserError(`Expected a value of length ${length}, but received a value of length ${bufferValue.length}.`));\n        // For packed encoding, the value is padded to the length of the type, and\n        // then added to the byte array.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, (0, utils_2.padEnd)(bufferValue, length)]);\n        }\n        return (0, utils_1.concatBytes)([buffer, (0, utils_2.padEnd)(bufferValue)]);\n    },\n    /**\n     * Decode a fixed bytes value.\n     *\n     * @param args - The arguments to decode.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @returns The decoded value as a `Uint8Array`.\n     */\n    decode({ type, value }) {\n        const length = (0, exports.getByteLength)(type);\n        // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n        // into a new array.\n        return value.slice(0, length);\n    },\n};\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fn = exports.getFunction = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst fixed_bytes_1 = require(\"./fixed-bytes\");\n/**\n * A struct that represents a Solidity function. The value must be a hex string\n * or a byte array. The created value will always be an object with an `address`\n * and `selector` property.\n */\nconst FunctionStruct = (0, superstruct_1.coerce)((0, superstruct_1.object)({\n    address: utils_1.StrictHexStruct,\n    selector: utils_1.StrictHexStruct,\n}), (0, superstruct_1.union)([utils_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]), (value) => {\n    const bytes = (0, utils_1.createBytes)(value);\n    (0, utils_1.assert)(bytes.length === 24, new errors_1.ParserError(`Invalid Solidity function. Expected function to be 24 bytes long, but received ${bytes.length} bytes.`));\n    return {\n        address: (0, utils_1.bytesToHex)(bytes.subarray(0, 20)),\n        selector: (0, utils_1.bytesToHex)(bytes.subarray(20, 24)),\n    };\n});\n/**\n * Normalize a function. This accepts the function as:\n *\n * - A {@link SolidityFunction} object.\n * - A hexadecimal string.\n * - A byte array.\n *\n * @param input - The function-like input.\n * @returns The function as buffer.\n */\nconst getFunction = (input) => {\n    const value = (0, superstruct_1.create)(input, FunctionStruct);\n    return (0, utils_1.concatBytes)([(0, utils_1.hexToBytes)(value.address), (0, utils_1.hexToBytes)(value.selector)]);\n};\nexports.getFunction = getFunction;\nexports.fn = {\n    isDynamic: false,\n    /**\n     * Check if a type is a function type. Since `function` is a simple type, this\n     * is just a check that the type is \"function\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a function type.\n     */\n    isType: (type) => type === 'function',\n    /**\n     * Get the byte length of an encoded function. Since `function` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual functions are only 24 bytes long, but the encoding of\n     * the `function` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded function.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given function to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The function to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded function added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        const fnValue = (0, exports.getFunction)(value);\n        // Functions are encoded as `bytes24`, so we use the fixedBytes parser to\n        // encode the function.\n        return fixed_bytes_1.fixedBytes.encode({\n            type: 'bytes24',\n            buffer,\n            value: fnValue,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a function.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded function as a {@link SolidityFunction} object.\n     */\n    decode({ value }) {\n        return {\n            address: (0, utils_1.bytesToHex)(value.slice(0, 20)),\n            selector: (0, utils_1.bytesToHex)(value.slice(20, 24)),\n        };\n    },\n};\n//# sourceMappingURL=function.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./address\"), exports);\n__exportStar(require(\"./array\"), exports);\n__exportStar(require(\"./bool\"), exports);\n__exportStar(require(\"./bytes\"), exports);\n__exportStar(require(\"./fixed-bytes\"), exports);\n__exportStar(require(\"./function\"), exports);\n__exportStar(require(\"./number\"), exports);\n__exportStar(require(\"./parser\"), exports);\n__exportStar(require(\"./string\"), exports);\n__exportStar(require(\"./tuple\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.number = exports.getBigInt = exports.assertNumberLength = exports.getLength = exports.isSigned = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst utils_2 = require(\"../utils\");\nconst NUMBER_REGEX = /^u?int(?<length>[0-9]*)?$/u;\n/**\n * Check if a number type is signed.\n *\n * @param type - The type to check.\n * @returns Whether the type is signed.\n */\nconst isSigned = (type) => {\n    return !type.startsWith('u');\n};\nexports.isSigned = isSigned;\n/**\n * Get the length of the specified type. If a length is not specified, if the\n * length is out of range (8 <= n <= 256), or if the length is not a multiple of\n * 8, this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The bit length of the type.\n */\nconst getLength = (type) => {\n    if (type === 'int' || type === 'uint') {\n        return 256;\n    }\n    const match = type.match(NUMBER_REGEX);\n    (0, utils_1.assert)(match?.groups?.length, new errors_1.ParserError(`Invalid number type. Expected a number type, but received \"${type}\".`));\n    const length = parseInt(match.groups.length, 10);\n    (0, utils_1.assert)(length >= 8 && length <= 256, new errors_1.ParserError(`Invalid number length. Expected a number between 8 and 256, but received \"${type}\".`));\n    (0, utils_1.assert)(length % 8 === 0, new errors_1.ParserError(`Invalid number length. Expected a multiple of 8, but received \"${type}\".`));\n    return length;\n};\nexports.getLength = getLength;\n/**\n * Assert that the byte length of the given value is in range for the given\n * number type.\n *\n * @param value - The value to check.\n * @param type - The type of the value.\n * @throws If the value is out of range for the type.\n */\nconst assertNumberLength = (value, type) => {\n    const length = (0, exports.getLength)(type);\n    const maxValue = BigInt(2) ** BigInt(length - ((0, exports.isSigned)(type) ? 1 : 0)) - BigInt(1);\n    if ((0, exports.isSigned)(type)) {\n        // Signed types must be in the range of `-(2^(length - 1))` to\n        // `2^(length - 1) - 1`.\n        (0, utils_1.assert)(value >= -(maxValue + BigInt(1)) && value <= maxValue, new errors_1.ParserError(`Number \"${value}\" is out of range for type \"${type}\".`));\n        return;\n    }\n    // Unsigned types must be in the range of `0` to `2^length - 1`.\n    (0, utils_1.assert)(value <= maxValue, new errors_1.ParserError(`Number \"${value}\" is out of range for type \"${type}\".`));\n};\nexports.assertNumberLength = assertNumberLength;\n/**\n * Normalize a `bigint` value. This accepts the value as:\n *\n * - A `bigint`.\n * - A `number`.\n * - A decimal string, i.e., a string that does not start with \"0x\".\n * - A hexadecimal string, i.e., a string that starts with \"0x\".\n *\n * @param value - The number-like value to parse.\n * @returns The value parsed as bigint.\n */\nconst getBigInt = (value) => {\n    try {\n        return (0, utils_1.createBigInt)(value);\n    }\n    catch {\n        throw new errors_1.ParserError(`Invalid number. Expected a valid number value, but received \"${value}\".`);\n    }\n};\nexports.getBigInt = getBigInt;\nexports.number = {\n    isDynamic: false,\n    /**\n     * Check if a type is a number type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a number type.\n     */\n    isType(type) {\n        return NUMBER_REGEX.test(type);\n    },\n    /**\n     * Get the byte length of an encoded number type. Since `int` and `uint` are\n     * simple types, this will always return 32.\n     *\n     * @returns The byte length of the type.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode a number value.\n     *\n     * @param args - The arguments to encode.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed }) {\n        const bigIntValue = (0, exports.getBigInt)(value);\n        (0, exports.assertNumberLength)(bigIntValue, type);\n        if ((0, exports.isSigned)(type)) {\n            // For packed encoding, the value is padded to the length of the type, and\n            // then added to the byte array.\n            if (packed) {\n                const length = (0, exports.getLength)(type) / 8;\n                return (0, utils_1.concatBytes)([buffer, (0, utils_1.signedBigIntToBytes)(bigIntValue, length)]);\n            }\n            return (0, utils_1.concatBytes)([\n                buffer,\n                (0, utils_2.padStart)((0, utils_1.signedBigIntToBytes)(bigIntValue, 32)),\n            ]);\n        }\n        // For packed encoding, the value is padded to the length of the type, and\n        // then added to the byte array.\n        if (packed) {\n            const length = (0, exports.getLength)(type) / 8;\n            return (0, utils_1.concatBytes)([\n                buffer,\n                (0, utils_2.padStart)((0, utils_1.bigIntToBytes)(bigIntValue), length),\n            ]);\n        }\n        return (0, utils_1.concatBytes)([buffer, (0, utils_2.padStart)((0, utils_1.bigIntToBytes)(bigIntValue))]);\n    },\n    /**\n     * Decode a number value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @returns The decoded value.\n     */\n    decode({ type, value }) {\n        const buffer = value.subarray(0, 32);\n        if ((0, exports.isSigned)(type)) {\n            const numberValue = (0, utils_1.bytesToSignedBigInt)(buffer);\n            (0, exports.assertNumberLength)(numberValue, type);\n            return numberValue;\n        }\n        const numberValue = (0, utils_1.bytesToBigInt)(buffer);\n        (0, exports.assertNumberLength)(numberValue, type);\n        return numberValue;\n    },\n};\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.string = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst bytes_1 = require(\"./bytes\");\nexports.string = {\n    isDynamic: true,\n    /**\n     * Check if a type is a string type. Since `string` is a simple type, this\n     * is just a check if the type is \"string\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a string type.\n     */\n    isType: (type) => type === 'string',\n    /**\n     * Get the byte length of an encoded string type. Since `string` is a simple\n     * type, this will always return 32.\n     *\n     * Note that actual strings are variable in length, but the encoded static\n     * value (pointer) is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded string.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given string value to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The string value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded string value added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        // Strings are encoded as UTF-8 bytes, so we use the bytes parser to encode\n        // the string as bytes.\n        return bytes_1.bytes.encode({\n            type: 'bytes',\n            buffer,\n            value: (0, utils_1.stringToBytes)(value),\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a string value.\n     *\n     * @param args - The decoding arguments.\n     * @returns The decoded string value.\n     */\n    decode(args) {\n        // Strings are encoded as UTF-8 bytes, so we use the bytes parser to decode\n        // the bytes, and convert them to a string.\n        return (0, utils_1.bytesToString)(bytes_1.bytes.decode(args));\n    },\n};\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tuple = exports.getTupleElements = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst packer_1 = require(\"../packer\");\nconst TUPLE_REGEX = /^\\((.+)\\)$/u;\nconst isTupleType = (type) => TUPLE_REGEX.test(type);\n/**\n * Get elements from a tuple type.\n *\n * @param type - The tuple type to get the types for.\n * @returns The elements of the tuple as string array.\n */\nconst getTupleElements = (type) => {\n    (0, utils_1.assert)(type.startsWith('(') && type.endsWith(')'), new errors_1.ParserError(`Invalid tuple type. Expected tuple type, but received \"${type}\".`));\n    const elements = [];\n    let current = '';\n    let depth = 0;\n    for (let i = 1; i < type.length - 1; i++) {\n        const char = type[i];\n        if (char === ',' && depth === 0) {\n            elements.push(current.trim());\n            current = '';\n        }\n        else {\n            current += char;\n            if (char === '(') {\n                depth += 1;\n            }\n            else if (char === ')') {\n                depth -= 1;\n            }\n        }\n    }\n    if (current.trim()) {\n        elements.push(current.trim());\n    }\n    return elements;\n};\nexports.getTupleElements = getTupleElements;\nexports.tuple = {\n    /**\n     * Check if the tuple is dynamic. Tuples are dynamic if one or more elements\n     * of the tuple are dynamic.\n     *\n     * @param type - The type to check.\n     * @returns Whether the tuple is dynamic.\n     */\n    isDynamic(type) {\n        const elements = (0, exports.getTupleElements)(type);\n        return elements.some((element) => {\n            const parser = (0, packer_1.getParser)(element);\n            return (0, packer_1.isDynamicParser)(parser, element);\n        });\n    },\n    /**\n     * Check if a type is a tuple type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a tuple type.\n     */\n    isType(type) {\n        return isTupleType(type);\n    },\n    /**\n     * Get the byte length of a tuple type. If the tuple is dynamic, this will\n     * always return 32. If the tuple is static, this will return the sum of the\n     * byte lengths of the tuple elements.\n     *\n     * @param type - The type to get the byte length for.\n     * @returns The byte length of the tuple type.\n     */\n    getByteLength(type) {\n        if ((0, packer_1.isDynamicParser)(this, type)) {\n            return 32;\n        }\n        const elements = (0, exports.getTupleElements)(type);\n        return elements.reduce((total, element) => {\n            return total + (0, packer_1.getParser)(element).getByteLength(element);\n        }, 0);\n    },\n    /**\n     * Encode a tuple value.\n     *\n     * @param args - The encoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use non-standard packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed, tight }) {\n        const elements = (0, exports.getTupleElements)(type);\n        return (0, packer_1.pack)({\n            types: elements,\n            values: value,\n            byteArray: buffer,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode a tuple value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @param args.skip - A function to skip a number of bytes.\n     * @returns The decoded value.\n     */\n    decode({ type, value, skip }) {\n        const elements = (0, exports.getTupleElements)(type);\n        const length = this.getByteLength(type) - 32;\n        skip(length);\n        return (0, packer_1.unpack)(elements, value);\n    },\n};\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=abi.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./abi\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.padEnd = exports.padStart = exports.set = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst BUFFER_WIDTH = 32;\n/**\n * Set `buffer` in `target` at the specified position.\n *\n * @param target - The buffer to set to.\n * @param buffer - The buffer to set in the target.\n * @param position - The position at which to set the target.\n * @returns The combined buffer.\n */\nconst set = (target, buffer, position) => {\n    return (0, utils_1.concatBytes)([\n        target.subarray(0, position),\n        buffer,\n        target.subarray(position + buffer.length),\n    ]);\n};\nexports.set = set;\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the start.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nconst padStart = (buffer, length = BUFFER_WIDTH) => {\n    const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(0x00);\n    return (0, utils_1.concatBytes)([padding, buffer]);\n};\nexports.padStart = padStart;\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the end.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nconst padEnd = (buffer, length = BUFFER_WIDTH) => {\n    const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(0x00);\n    return (0, utils_1.concatBytes)([buffer, padding]);\n};\nexports.padEnd = padEnd;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./buffer\"), exports);\n//# sourceMappingURL=index.js.map","module.exports={\"snapId\":\"npm:@metamask/account-watcher\",\"manifest\":{\"version\":\"4.1.0\",\"description\":\"Keep an eye on Ethereum addresses or ENS domains right in MetaMask\",\"proposedName\":\"Account Watcher\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/metamask/snap-watch-only.git\"},\"source\":{\"shasum\":\"GJ83dOQVJCYPnH1z5hKmfTlRiX8O2hu7d1Rs+LC8nHQ=\",\"location\":{\"npm\":{\"filePath\":\"dist/bundle.js\",\"iconPath\":\"images/watcher-fox-eye.svg\",\"packageName\":\"@metamask/account-watcher\",\"registry\":\"https://registry.npmjs.org/\"}}},\"initialPermissions\":{\"snap_dialog\":{},\"endowment:keyring\":{\"allowedOrigins\":[\"https://snaps.metamask.io\"]},\"endowment:rpc\":{\"allowedOrigins\":[\"https://snaps.metamask.io\"]},\"snap_manageAccounts\":{},\"endowment:page-home\":{},\"snap_manageState\":{},\"endowment:ethereum-provider\":{}},\"manifestVersion\":\"0.1\"},\"files\":[{\"path\":\"images/watcher-fox-eye.svg\",\"value\":\"<svg version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n\\t width=\\\"100%\\\" viewBox=\\\"0 0 1024 1024\\\" enable-background=\\\"new 0 0 1024 1024\\\" xml:space=\\\"preserve\\\">\\n<path fill=\\\"#F48320\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM1.000000,808.000000 \\n\\tC1.000000,541.977356 1.000000,275.954712 1.267370,9.191578 \\n\\tC5.780173,7.202375 10.069000,6.081650 14.256378,4.661746 \\n\\tC17.241562,3.649497 20.090347,2.234995 23.000000,1.000000 \\n\\tC23.444445,1.000000 23.888887,1.000000 24.849617,1.078521 \\n\\tC25.910603,1.104694 26.455301,1.052347 27.000000,1.000000 \\n\\tC87.689308,1.000000 148.378616,1.000000 209.452972,1.338681 \\n\\tC208.822403,3.388152 207.884964,5.151262 206.779633,6.801964 \\n\\tC186.321564,37.354450 165.834381,67.887444 145.371857,98.436951 \\n\\tC119.168259,137.557556 92.957733,176.673584 66.809624,215.831253 \\n\\tC62.387630,222.453323 58.264912,229.275223 54.157597,236.300262 \\n\\tC55.425724,237.828842 56.488300,239.113831 57.662003,240.287735 \\n\\tC151.383713,334.025421 245.111572,427.756897 338.868927,521.458923 \\n\\tC340.241394,522.830688 341.989777,523.826294 343.773865,525.327698 \\n\\tC367.573456,532.586487 391.151550,539.550476 414.752899,546.434753 \\n\\tC445.652008,555.447815 476.572906,564.386108 507.478119,573.378296 \\n\\tC542.048279,583.436646 576.609009,593.527283 611.178040,603.589294 \\n\\tC640.797058,612.210327 670.421997,620.810913 700.218628,629.724243 \\n\\tC700.906067,631.422791 701.619324,632.778320 701.901978,634.218445 \\n\\tC705.846802,654.315796 709.709595,674.429138 713.638123,694.529724 \\n\\tC720.857300,731.467102 728.083923,768.403015 735.348572,805.331543 \\n\\tC747.434814,866.770325 759.584473,928.196655 771.631226,989.643250 \\n\\tC773.934875,1001.393372 775.886169,1013.212646 778.000000,1025.000000 \\n\\tC727.977356,1025.000000 677.954773,1025.000000 627.387085,1024.666016 \\n\\tC625.752686,1023.124878 624.816589,1021.719421 623.550476,1020.740845 \\n\\tC608.668091,1009.237427 593.729553,997.806641 578.818787,986.339966 \\n\\tC531.184998,949.709045 483.555359,913.072693 435.926666,876.435181 \\n\\tC413.893219,859.486328 391.902679,842.481384 369.808716,825.611816 \\n\\tC364.418152,821.495850 358.697083,817.812744 352.766602,813.710571 \\n\\tC343.787598,813.010803 335.174957,812.260498 326.551392,812.102051 \\n\\tC300.757050,811.628357 274.958527,811.383728 249.161545,811.054443 \\n\\tC222.698441,810.716614 196.235214,810.388062 169.772125,810.048645 \\n\\tC144.308243,809.721985 118.844696,809.367554 93.380585,809.059814 \\n\\tC62.587288,808.687622 31.793549,808.351685 1.000000,808.000000 \\nz\\\"/>\\n<path fill=\\\"#F6851F\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM752.000000,1.000000 \\n\\tC842.974854,1.000000 933.949707,1.000000 1024.962280,1.000000 \\n\\tC1024.962280,342.213837 1024.962280,683.427673 1024.962280,1025.000000 \\n\\tC945.308777,1025.000000 865.617065,1025.000000 785.458740,1024.531372 \\n\\tC784.990112,849.986694 784.988464,675.910645 784.979797,501.834564 \\n\\tC784.979675,499.504059 785.011475,497.163635 784.822754,494.844574 \\n\\tC783.246826,475.478119 781.551636,456.121155 780.036194,436.750092 \\n\\tC778.870178,421.845490 778.010193,406.916931 776.837341,392.012939 \\n\\tC775.325928,372.808502 773.546753,353.625031 772.052185,334.419373 \\n\\tC770.583069,315.541229 769.356567,296.644196 767.908203,277.764313 \\n\\tC767.807983,276.458618 766.747803,275.226532 766.146729,273.575928 \\n\\tC766.420898,271.144806 766.682495,269.097992 766.956787,266.604858 \\n\\tC765.945435,246.917023 764.938538,227.674515 763.890930,208.434235 \\n\\tC763.249817,196.658966 762.548218,184.886963 761.870056,173.113724 \\n\\tC760.580688,150.730515 759.268799,128.348587 758.005188,105.963928 \\n\\tC757.256226,92.694771 756.628235,79.418716 755.863220,66.150528 \\n\\tC754.610840,44.431648 753.291260,22.716642 752.000000,1.000000 \\nz\\\"/>\\n<path fill=\\\"#E27726\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM751.531372,1.000000 \\n\\tC753.291260,22.716642 754.610840,44.431648 755.863220,66.150528 \\n\\tC756.628235,79.418716 757.256226,92.694771 758.005188,105.963928 \\n\\tC759.268799,128.348587 760.580688,150.730515 761.870056,173.113724 \\n\\tC762.548218,184.886963 763.249817,196.658966 763.890930,208.434235 \\n\\tC764.938538,227.674515 765.945435,246.917023 766.545166,266.547791 \\n\\tC764.316467,266.637482 762.520996,266.154083 760.706543,266.067352 \\n\\tC745.597656,265.344910 730.485657,264.687775 715.373840,264.026215 \\n\\tC700.096191,263.357361 684.817932,262.701599 669.539612,262.047913 \\n\\tC638.133972,260.704163 606.727905,259.367889 575.322266,258.024017 \\n\\tC560.043884,257.370239 544.766846,256.686127 529.487671,256.051727 \\n\\tC504.727753,255.023712 479.968445,253.976791 455.205383,253.029724 \\n\\tC435.432220,252.273514 415.653076,251.674454 395.878113,250.964142 \\n\\tC387.737732,250.671753 379.599182,250.312683 371.463409,249.911209 \\n\\tC345.553497,248.632614 319.646881,247.286392 293.735779,246.033127 \\n\\tC278.794128,245.310425 263.847443,244.687790 248.900909,244.071274 \\n\\tC223.641602,243.029404 198.379318,242.058807 173.120865,240.997482 \\n\\tC159.505386,240.425385 145.897919,239.661255 132.282059,239.099960 \\n\\tC106.191154,238.024460 80.096832,237.031830 54.003925,236.004807 \\n\\tC58.264912,229.275223 62.387630,222.453323 66.809624,215.831253 \\n\\tC92.957733,176.673584 119.168259,137.557556 145.371857,98.436951 \\n\\tC165.834381,67.887444 186.321564,37.354450 206.779633,6.801964 \\n\\tC207.884964,5.151262 208.822403,3.388152 209.919006,1.338681 \\n\\tC390.354218,1.000000 570.708435,1.000000 751.531372,1.000000 \\nz\\\"/>\\n<path fill=\\\"#CC6329\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM1.000000,808.468628 \\n\\tC31.793549,808.351685 62.587288,808.687622 93.380585,809.059814 \\n\\tC118.844696,809.367554 144.308243,809.721985 169.772125,810.048645 \\n\\tC196.235214,810.388062 222.698441,810.716614 249.161545,811.054443 \\n\\tC274.958527,811.383728 300.757050,811.628357 326.551392,812.102051 \\n\\tC335.174957,812.260498 343.787598,813.010803 352.718872,814.138000 \\n\\tC351.566711,826.657166 350.109009,838.529785 348.633484,850.400330 \\n\\tC345.764404,873.481506 342.891479,896.562256 340.008545,919.641724 \\n\\tC337.475555,939.919495 334.902679,960.192383 332.393066,980.473022 \\n\\tC330.557007,995.310608 328.795013,1010.157349 327.000000,1025.000000 \\n\\tC252.645767,1025.000000 178.291550,1025.000000 103.318298,1024.692627 \\n\\tC88.668358,1003.561279 74.614235,982.752808 60.612232,961.909302 \\n\\tC41.876354,934.018860 23.187817,906.096619 4.448768,878.208313 \\n\\tC3.441829,876.709717 2.156003,875.398438 0.999997,874.000000 \\n\\tC1.000000,852.312439 1.000000,830.624878 1.000000,808.468628 \\nz\\\"/>\\n<path fill=\\\"#E27726\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM766.134033,273.960205 \\n\\tC766.747803,275.226532 767.807983,276.458618 767.908203,277.764313 \\n\\tC769.356567,296.644196 770.583069,315.541229 772.052185,334.419373 \\n\\tC773.546753,353.625031 775.325928,372.808502 776.837341,392.012939 \\n\\tC778.010193,406.916931 778.870178,421.845490 780.036194,436.750092 \\n\\tC781.551636,456.121155 783.246826,475.478119 784.822754,494.844574 \\n\\tC785.011475,497.163635 784.979675,499.504059 784.979797,501.834564 \\n\\tC784.988464,675.910645 784.990112,849.986694 784.996094,1024.531372 \\n\\tC782.958313,1025.000000 780.916687,1025.000000 778.437500,1025.000000 \\n\\tC775.886169,1013.212646 773.934875,1001.393372 771.631226,989.643250 \\n\\tC759.584473,928.196655 747.434814,866.770325 735.348572,805.331543 \\n\\tC728.083923,768.403015 720.857300,731.467102 713.638123,694.529724 \\n\\tC709.709595,674.429138 705.846802,654.315796 701.901978,634.218445 \\n\\tC701.619324,632.778320 700.906067,631.422791 700.257080,629.324097 \\n\\tC700.075928,628.086487 700.030762,627.552673 700.278809,626.794678 \\n\\tC701.248718,624.560364 702.183472,622.597717 702.563538,620.533020 \\n\\tC708.017029,590.910156 713.411865,561.276428 718.789368,531.639648 \\n\\tC732.574585,455.664886 746.322327,379.683350 760.146545,303.715729 \\n\\tC761.957581,293.763580 764.129333,283.877075 766.134033,273.960205 \\nz\\\"/>\\n<path fill=\\\"#E27726\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM327.468658,1025.000000 \\n\\tC328.795013,1010.157349 330.557007,995.310608 332.393066,980.473022 \\n\\tC334.902679,960.192383 337.475555,939.919495 340.008545,919.641724 \\n\\tC342.891479,896.562256 345.764404,873.481506 348.633484,850.400330 \\n\\tC350.109009,838.529785 351.566711,826.657166 353.080261,814.358032 \\n\\tC358.697083,817.812744 364.418152,821.495850 369.808716,825.611816 \\n\\tC391.902679,842.481384 413.893219,859.486328 435.926666,876.435181 \\n\\tC483.555359,913.072693 531.184998,949.709045 578.818787,986.339966 \\n\\tC593.729553,997.806641 608.668091,1009.237427 623.550476,1020.740845 \\n\\tC624.816589,1021.719421 625.752686,1023.124878 626.921021,1024.666016 \\n\\tC527.312439,1025.000000 427.624878,1025.000000 327.468658,1025.000000 \\nz\\\"/>\\n<path fill=\\\"#E27726\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM0.999997,874.468628 \\n\\tC2.156003,875.398438 3.441829,876.709717 4.448768,878.208313 \\n\\tC23.187817,906.096619 41.876354,934.018860 60.612232,961.909302 \\n\\tC74.614235,982.752808 88.668358,1003.561279 102.849640,1024.692627 \\n\\tC69.058884,1025.000000 35.117767,1025.000000 1.000000,1025.000000 \\n\\tC1.000000,974.979248 1.000000,924.958252 0.999997,874.468628 \\nz\\\"/>\\n<path fill=\\\"#30353C\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM22.531218,1.000000 \\n\\tC20.090347,2.234995 17.241562,3.649497 14.256378,4.661746 \\n\\tC10.069000,6.081650 5.780173,7.202375 1.267370,8.725536 \\n\\tC1.000000,6.372888 1.000000,3.745775 1.000000,1.000000 \\n\\tC8.020491,1.000000 15.041463,1.000000 22.531218,1.000000 \\nz\\\"/>\\n<path fill=\\\"#30353C\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM26.666668,1.000000 \\n\\tC26.455301,1.052347 25.910603,1.104694 25.182953,1.078521 \\n\\tC25.444445,1.000000 25.888889,1.000000 26.666668,1.000000 \\nz\\\"/>\\n<path fill=\\\"#CC6329\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM766.146667,273.575928 \\n\\tC764.129333,283.877075 761.957581,293.763580 760.146545,303.715729 \\n\\tC746.322327,379.683350 732.574585,455.664886 718.789368,531.639648 \\n\\tC713.411865,561.276428 708.017029,590.910156 702.563538,620.533020 \\n\\tC702.183472,622.597717 701.248718,624.560364 700.013672,626.566406 \\n\\tC665.286377,554.975647 631.117249,483.388855 596.783142,411.456238 \\n\\tC594.540100,412.389313 592.866577,413.037079 591.232422,413.772278 \\n\\tC533.579102,439.709778 475.937836,465.674011 418.275574,491.591492 \\n\\tC393.393127,502.775391 368.468292,513.865051 343.562744,524.997437 \\n\\tC341.989777,523.826294 340.241394,522.830688 338.868927,521.458923 \\n\\tC245.111572,427.756897 151.383713,334.025421 57.662003,240.287735 \\n\\tC56.488300,239.113831 55.425724,237.828842 54.157597,236.300262 \\n\\tC80.096832,237.031830 106.191154,238.024460 132.282059,239.099960 \\n\\tC145.897919,239.661255 159.505386,240.425385 173.120865,240.997482 \\n\\tC198.379318,242.058807 223.641602,243.029404 248.900909,244.071274 \\n\\tC263.847443,244.687790 278.794128,245.310425 293.735779,246.033127 \\n\\tC319.646881,247.286392 345.553497,248.632614 371.463409,249.911209 \\n\\tC379.599182,250.312683 387.737732,250.671753 395.878113,250.964142 \\n\\tC415.653076,251.674454 435.432220,252.273514 455.205383,253.029724 \\n\\tC479.968445,253.976791 504.727753,255.023712 529.487671,256.051727 \\n\\tC544.766846,256.686127 560.043884,257.370239 575.322266,258.024017 \\n\\tC606.727905,259.367889 638.133972,260.704163 669.539612,262.047913 \\n\\tC684.817932,262.701599 700.096191,263.357361 715.373840,264.026215 \\n\\tC730.485657,264.687775 745.597656,265.344910 760.706543,266.067352 \\n\\tC762.520996,266.154083 764.316467,266.637482 766.532410,266.994080 \\n\\tC766.682495,269.097992 766.420898,271.144806 766.146667,273.575928 \\nz\\\"/>\\n<path fill=\\\"#30353C\\\" opacity=\\\"1.000000\\\" stroke=\\\"none\\\" \\n\\td=\\\"\\nM343.773865,525.327759 \\n\\tC368.468292,513.865051 393.393127,502.775391 418.275574,491.591492 \\n\\tC475.937836,465.674011 533.579102,439.709778 591.232422,413.772278 \\n\\tC592.866577,413.037079 594.540100,412.389313 596.783142,411.456238 \\n\\tC631.117249,483.388855 665.286377,554.975647 699.720520,626.790649 \\n\\tC700.030762,627.552673 700.075928,628.086487 700.082703,629.020386 \\n\\tC670.421997,620.810913 640.797058,612.210327 611.178040,603.589294 \\n\\tC576.609009,593.527283 542.048279,583.436646 507.478119,573.378296 \\n\\tC476.572906,564.386108 445.652008,555.447815 414.752899,546.434753 \\n\\tC391.151550,539.550476 367.573456,532.586487 343.773865,525.327759 \\nz\\\"/>\\n</svg>\"},{\"path\":\"dist/bundle.js\",\"value\":\"(()=>{var t={9034:(t,e,r)=>{var n;!function(){\\\"use strict\\\";var i=\\\"input is invalid type\\\",o=\\\"object\\\"==typeof window,s=o?window:{};s.JS_SHA3_NO_WINDOW&&(o=!1);var a=!o&&\\\"object\\\"==typeof self;!s.JS_SHA3_NO_NODE_JS&&\\\"object\\\"==typeof process&&process.versions&&process.versions.node?s=r.g:a&&(s=self);var u=!s.JS_SHA3_NO_COMMON_JS&&t.exports,c=r.amdO,l=!s.JS_SHA3_NO_ARRAY_BUFFER&&\\\"undefined\\\"!=typeof ArrayBuffer,f=\\\"0123456789abcdef\\\".split(\\\"\\\"),h=[4,1024,262144,67108864],d=[0,8,16,24],p=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],g=[224,256,384,512],m=[128,256],y=[\\\"hex\\\",\\\"buffer\\\",\\\"arrayBuffer\\\",\\\"array\\\",\\\"digest\\\"],v={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return\\\"[object Array]\\\"===Object.prototype.toString.call(t)}),!l||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return\\\"object\\\"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});for(var w=function(t,e,r){return function(n){return new B(t,e,t).update(n)[r]()}},b=function(t,e,r){return function(n,i){return new B(t,e,i).update(n)[r]()}},A=function(t,e,r){return function(e,n,i,o){return x[\\\"cshake\\\"+t].update(e,n,i,o)[r]()}},E=function(t,e,r){return function(e,n,i,o){return x[\\\"kmac\\\"+t].update(e,n,i,o)[r]()}},S=function(t,e,r,n){for(var i=0;i<y.length;++i){var o=y[i];t[o]=e(r,n,o)}return t},R=function(t,e){var r=w(t,e,\\\"hex\\\");return r.create=function(){return new B(t,e,t)},r.update=function(t){return r.create().update(t)},S(r,w,t,e)},I=[{name:\\\"keccak\\\",padding:[1,256,65536,16777216],bits:g,createMethod:R},{name:\\\"sha3\\\",padding:[6,1536,393216,100663296],bits:g,createMethod:R},{name:\\\"shake\\\",padding:[31,7936,2031616,520093696],bits:m,createMethod:function(t,e){var r=b(t,e,\\\"hex\\\");return r.create=function(r){return new B(t,e,r)},r.update=function(t,e){return r.create(e).update(t)},S(r,b,t,e)}},{name:\\\"cshake\\\",padding:h,bits:m,createMethod:function(t,e){var r=v[t],n=A(t,0,\\\"hex\\\");return n.create=function(n,i,o){return i||o?new B(t,e,n).bytepad([i,o],r):x[\\\"shake\\\"+t].create(n)},n.update=function(t,e,r,i){return n.create(e,r,i).update(t)},S(n,A,t,e)}},{name:\\\"kmac\\\",padding:h,bits:m,createMethod:function(t,e){var r=v[t],n=E(t,0,\\\"hex\\\");return n.create=function(n,i,o){return new T(t,e,i).bytepad([\\\"KMAC\\\",o],r).bytepad([n],r)},n.update=function(t,e,r,i){return n.create(t,r,i).update(e)},S(n,E,t,e)}}],x={},_=[],N=0;N<I.length;++N)for(var M=I[N],k=M.bits,O=0;O<k.length;++O){var C=M.name+\\\"_\\\"+k[O];if(_.push(C),x[C]=M.createMethod(k[O],M.padding),\\\"sha3\\\"!==M.name){var P=M.name+k[O];_.push(P),x[P]=x[C]}}function B(t,e,r){this.blocks=[],this.s=[],this.padding=e,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function T(t,e,r){B.call(this,t,e,r)}B.prototype.update=function(t){if(this.finalized)throw new Error(\\\"finalize already called\\\");var e,r=typeof t;if(\\\"string\\\"!==r){if(\\\"object\\\"!==r)throw new Error(i);if(null===t)throw new Error(i);if(l&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||l&&ArrayBuffer.isView(t)))throw new Error(i);e=!0}for(var n,o,s=this.blocks,a=this.byteCount,u=t.length,c=this.blockCount,f=0,h=this.s;f<u;){if(this.reset)for(this.reset=!1,s[0]=this.block,n=1;n<c+1;++n)s[n]=0;if(e)for(n=this.start;f<u&&n<a;++f)s[n>>2]|=t[f]<<d[3&n++];else for(n=this.start;f<u&&n<a;++f)(o=t.charCodeAt(f))<128?s[n>>2]|=o<<d[3&n++]:o<2048?(s[n>>2]|=(192|o>>6)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):o<55296||o>=57344?(s[n>>2]|=(224|o>>12)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):(o=65536+((1023&o)<<10|1023&t.charCodeAt(++f)),s[n>>2]|=(240|o>>18)<<d[3&n++],s[n>>2]|=(128|o>>12&63)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=s[c],n=0;n<c;++n)h[n]^=s[n];L(h),this.reset=!0}else this.start=n}return this},B.prototype.encode=function(t,e){var r=255&t,n=1,i=[r];for(r=255&(t>>=8);r>0;)i.unshift(r),r=255&(t>>=8),++n;return e?i.push(n):i.unshift(n),this.update(i),i.length},B.prototype.encodeString=function(t){var e,r=typeof t;if(\\\"string\\\"!==r){if(\\\"object\\\"!==r)throw new Error(i);if(null===t)throw new Error(i);if(l&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||l&&ArrayBuffer.isView(t)))throw new Error(i);e=!0}var n=0,o=t.length;if(e)n=o;else for(var s=0;s<t.length;++s){var a=t.charCodeAt(s);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&t.charCodeAt(++s)),n+=4)}return n+=this.encode(8*n),this.update(t),n},B.prototype.bytepad=function(t,e){for(var r=this.encode(e),n=0;n<t.length;++n)r+=this.encodeString(t[n]);var i=e-r%e,o=[];return o.length=i,this.update(o),this},B.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex,r=this.blockCount,n=this.s;if(t[e>>2]|=this.padding[3&e],this.lastByteIndex===this.byteCount)for(t[0]=t[r],e=1;e<r+1;++e)t[e]=0;for(t[r-1]|=2147483648,e=0;e<r;++e)n[e]^=t[e];L(n)}},B.prototype.toString=B.prototype.hex=function(){this.finalize();for(var t,e=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=\\\"\\\";s<n;){for(o=0;o<e&&s<n;++o,++s)t=r[o],a+=f[t>>4&15]+f[15&t]+f[t>>12&15]+f[t>>8&15]+f[t>>20&15]+f[t>>16&15]+f[t>>28&15]+f[t>>24&15];s%e==0&&(L(r),o=0)}return i&&(t=r[o],a+=f[t>>4&15]+f[15&t],i>1&&(a+=f[t>>12&15]+f[t>>8&15]),i>2&&(a+=f[t>>20&15]+f[t>>16&15])),a},B.prototype.arrayBuffer=function(){this.finalize();var t,e=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=this.outputBits>>3;t=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var u=new Uint32Array(t);s<n;){for(o=0;o<e&&s<n;++o,++s)u[s]=r[o];s%e==0&&L(r)}return i&&(u[o]=r[o],t=t.slice(0,a)),t},B.prototype.buffer=B.prototype.arrayBuffer,B.prototype.digest=B.prototype.array=function(){this.finalize();for(var t,e,r=this.blockCount,n=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,u=[];a<i;){for(s=0;s<r&&a<i;++s,++a)t=a<<2,e=n[s],u[t]=255&e,u[t+1]=e>>8&255,u[t+2]=e>>16&255,u[t+3]=e>>24&255;a%r==0&&L(n)}return o&&(t=a<<2,e=n[s],u[t]=255&e,o>1&&(u[t+1]=e>>8&255),o>2&&(u[t+2]=e>>16&255)),u},T.prototype=new B,T.prototype.finalize=function(){return this.encode(this.outputBits,!0),B.prototype.finalize.call(this)};var L=function(t){var e,r,n,i,o,s,a,u,c,l,f,h,d,g,m,y,v,w,b,A,E,S,R,I,x,_,N,M,k,O,C,P,B,T,L,U,j,F,D,$,q,G,H,z,J,K,V,W,X,Q,Y,Z,tt,et,rt,nt,it,ot,st,at,ut,ct,lt;for(n=0;n<48;n+=2)i=t[0]^t[10]^t[20]^t[30]^t[40],o=t[1]^t[11]^t[21]^t[31]^t[41],s=t[2]^t[12]^t[22]^t[32]^t[42],a=t[3]^t[13]^t[23]^t[33]^t[43],u=t[4]^t[14]^t[24]^t[34]^t[44],c=t[5]^t[15]^t[25]^t[35]^t[45],l=t[6]^t[16]^t[26]^t[36]^t[46],f=t[7]^t[17]^t[27]^t[37]^t[47],e=(h=t[8]^t[18]^t[28]^t[38]^t[48])^(s<<1|a>>>31),r=(d=t[9]^t[19]^t[29]^t[39]^t[49])^(a<<1|s>>>31),t[0]^=e,t[1]^=r,t[10]^=e,t[11]^=r,t[20]^=e,t[21]^=r,t[30]^=e,t[31]^=r,t[40]^=e,t[41]^=r,e=i^(u<<1|c>>>31),r=o^(c<<1|u>>>31),t[2]^=e,t[3]^=r,t[12]^=e,t[13]^=r,t[22]^=e,t[23]^=r,t[32]^=e,t[33]^=r,t[42]^=e,t[43]^=r,e=s^(l<<1|f>>>31),r=a^(f<<1|l>>>31),t[4]^=e,t[5]^=r,t[14]^=e,t[15]^=r,t[24]^=e,t[25]^=r,t[34]^=e,t[35]^=r,t[44]^=e,t[45]^=r,e=u^(h<<1|d>>>31),r=c^(d<<1|h>>>31),t[6]^=e,t[7]^=r,t[16]^=e,t[17]^=r,t[26]^=e,t[27]^=r,t[36]^=e,t[37]^=r,t[46]^=e,t[47]^=r,e=l^(i<<1|o>>>31),r=f^(o<<1|i>>>31),t[8]^=e,t[9]^=r,t[18]^=e,t[19]^=r,t[28]^=e,t[29]^=r,t[38]^=e,t[39]^=r,t[48]^=e,t[49]^=r,g=t[0],m=t[1],K=t[11]<<4|t[10]>>>28,V=t[10]<<4|t[11]>>>28,M=t[20]<<3|t[21]>>>29,k=t[21]<<3|t[20]>>>29,at=t[31]<<9|t[30]>>>23,ut=t[30]<<9|t[31]>>>23,G=t[40]<<18|t[41]>>>14,H=t[41]<<18|t[40]>>>14,T=t[2]<<1|t[3]>>>31,L=t[3]<<1|t[2]>>>31,y=t[13]<<12|t[12]>>>20,v=t[12]<<12|t[13]>>>20,W=t[22]<<10|t[23]>>>22,X=t[23]<<10|t[22]>>>22,O=t[33]<<13|t[32]>>>19,C=t[32]<<13|t[33]>>>19,ct=t[42]<<2|t[43]>>>30,lt=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,rt=t[4]<<30|t[5]>>>2,U=t[14]<<6|t[15]>>>26,j=t[15]<<6|t[14]>>>26,w=t[25]<<11|t[24]>>>21,b=t[24]<<11|t[25]>>>21,Q=t[34]<<15|t[35]>>>17,Y=t[35]<<15|t[34]>>>17,P=t[45]<<29|t[44]>>>3,B=t[44]<<29|t[45]>>>3,I=t[6]<<28|t[7]>>>4,x=t[7]<<28|t[6]>>>4,nt=t[17]<<23|t[16]>>>9,it=t[16]<<23|t[17]>>>9,F=t[26]<<25|t[27]>>>7,D=t[27]<<25|t[26]>>>7,A=t[36]<<21|t[37]>>>11,E=t[37]<<21|t[36]>>>11,Z=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,z=t[8]<<27|t[9]>>>5,J=t[9]<<27|t[8]>>>5,_=t[18]<<20|t[19]>>>12,N=t[19]<<20|t[18]>>>12,ot=t[29]<<7|t[28]>>>25,st=t[28]<<7|t[29]>>>25,$=t[38]<<8|t[39]>>>24,q=t[39]<<8|t[38]>>>24,S=t[48]<<14|t[49]>>>18,R=t[49]<<14|t[48]>>>18,t[0]=g^~y&w,t[1]=m^~v&b,t[10]=I^~_&M,t[11]=x^~N&k,t[20]=T^~U&F,t[21]=L^~j&D,t[30]=z^~K&W,t[31]=J^~V&X,t[40]=et^~nt&ot,t[41]=rt^~it&st,t[2]=y^~w&A,t[3]=v^~b&E,t[12]=_^~M&O,t[13]=N^~k&C,t[22]=U^~F&$,t[23]=j^~D&q,t[32]=K^~W&Q,t[33]=V^~X&Y,t[42]=nt^~ot&at,t[43]=it^~st&ut,t[4]=w^~A&S,t[5]=b^~E&R,t[14]=M^~O&P,t[15]=k^~C&B,t[24]=F^~$&G,t[25]=D^~q&H,t[34]=W^~Q&Z,t[35]=X^~Y&tt,t[44]=ot^~at&ct,t[45]=st^~ut&lt,t[6]=A^~S&g,t[7]=E^~R&m,t[16]=O^~P&I,t[17]=C^~B&x,t[26]=$^~G&T,t[27]=q^~H&L,t[36]=Q^~Z&z,t[37]=Y^~tt&J,t[46]=at^~ct&et,t[47]=ut^~lt&rt,t[8]=S^~g&y,t[9]=R^~m&v,t[18]=P^~I&_,t[19]=B^~x&N,t[28]=G^~T&U,t[29]=H^~L&j,t[38]=Z^~z&K,t[39]=tt^~J&V,t[48]=ct^~et&nt,t[49]=lt^~rt&it,t[0]^=p[n],t[1]^=p[n+1]};if(u)t.exports=x;else{for(N=0;N<_.length;++N)s[_[N]]=x[_[N]];c&&(void 0===(n=function(){return x}.call(e,r,e,t))||(t.exports=n))}}()},5978:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.JsonRpcRequestStruct=void 0;const n=r(2367),i=r(2150),o=r(4520);e.JsonRpcRequestStruct=(0,o.object)({jsonrpc:(0,i.literal)(\\\"2.0\\\"),id:(0,i.union)([(0,i.string)(),(0,i.number)(),(0,i.literal)(null)]),method:(0,i.string)(),params:(0,o.exactOptional)((0,i.union)([(0,i.array)(n.JsonStruct),(0,i.record)((0,i.string)(),n.JsonStruct)]))})},1236:function(t,e,r){\\\"use strict\\\";var n,i,o,s=this&&this.__classPrivateFieldSet||function(t,e,r,n,i){if(\\\"m\\\"===n)throw new TypeError(\\\"Private method is not writable\\\");if(\\\"a\\\"===n&&!i)throw new TypeError(\\\"Private accessor was defined without a setter\\\");if(\\\"function\\\"==typeof e?t!==e||!i:!e.has(t))throw new TypeError(\\\"Cannot write private member to an object whose class did not declare it\\\");return\\\"a\\\"===n?i.call(t,r):i?i.value=r:e.set(t,r),r},a=this&&this.__classPrivateFieldGet||function(t,e,r,n){if(\\\"a\\\"===r&&!n)throw new TypeError(\\\"Private accessor was defined without a getter\\\");if(\\\"function\\\"==typeof e?t!==e||!n:!e.has(t))throw new TypeError(\\\"Cannot read private member from an object whose class did not declare it\\\");return\\\"m\\\"===r?n:\\\"a\\\"===r?n.call(t):n?n.value:e.get(t)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.KeyringClient=void 0;const u=r(2150),c=r(2831),l=r(2582),f=r(1925),h=r(7003);e.KeyringClient=class{constructor(t){n.add(this),i.set(this,void 0),s(this,i,t,\\\"f\\\")}async listAccounts(){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.ListAccounts}),l.ListAccountsResponseStruct)}async getAccount(t){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.GetAccount,params:{id:t}}),l.GetAccountResponseStruct)}async createAccount(t={}){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.CreateAccount,params:{options:t}}),l.CreateAccountResponseStruct)}async filterAccountChains(t,e){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.FilterAccountChains,params:{id:t,chains:e}}),l.FilterAccountChainsResponseStruct)}async updateAccount(t){(0,u.assert)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.UpdateAccount,params:{account:t}}),l.UpdateAccountResponseStruct)}async deleteAccount(t){(0,u.assert)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.DeleteAccount,params:{id:t}}),l.DeleteAccountResponseStruct)}async exportAccount(t){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.ExportAccount,params:{id:t}}),l.ExportAccountResponseStruct)}async listRequests(){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.ListRequests}),l.ListRequestsResponseStruct)}async getRequest(t){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.GetRequest,params:{id:t}}),l.GetRequestResponseStruct)}async submitRequest(t){return(0,h.strictMask)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.SubmitRequest,params:t}),l.SubmitRequestResponseStruct)}async approveRequest(t,e={}){(0,u.assert)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.ApproveRequest,params:{id:t,data:e}}),l.ApproveRequestResponseStruct)}async rejectRequest(t){(0,u.assert)(await a(this,n,\\\"m\\\",o).call(this,{method:f.KeyringRpcMethod.RejectRequest,params:{id:t}}),l.RejectRequestResponseStruct)}},i=new WeakMap,n=new WeakSet,o=async function(t){return a(this,i,\\\"f\\\").send({jsonrpc:\\\"2.0\\\",id:(0,c.v4)(),...t})}},4071:function(t,e,r){\\\"use strict\\\";var n,i,o=this&&this.__classPrivateFieldSet||function(t,e,r,n,i){if(\\\"m\\\"===n)throw new TypeError(\\\"Private method is not writable\\\");if(\\\"a\\\"===n&&!i)throw new TypeError(\\\"Private accessor was defined without a setter\\\");if(\\\"function\\\"==typeof e?t!==e||!i:!e.has(t))throw new TypeError(\\\"Cannot write private member to an object whose class did not declare it\\\");return\\\"a\\\"===n?i.call(t,r):i?i.value=r:e.set(t,r),r},s=this&&this.__classPrivateFieldGet||function(t,e,r,n){if(\\\"a\\\"===r&&!n)throw new TypeError(\\\"Private accessor was defined without a getter\\\");if(\\\"function\\\"==typeof e?t!==e||!n:!e.has(t))throw new TypeError(\\\"Cannot read private member from an object whose class did not declare it\\\");return\\\"m\\\"===r?n:\\\"a\\\"===r?n.call(t):n?n.value:e.get(t)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.KeyringSnapRpcClient=e.SnapRpcSender=void 0;const a=r(1236);class u{constructor(t,e){n.set(this,void 0),i.set(this,void 0),o(this,n,t,\\\"f\\\"),o(this,i,e,\\\"f\\\")}async send(t){return s(this,i,\\\"f\\\").request({method:\\\"wallet_invokeKeyring\\\",params:{snapId:s(this,n,\\\"f\\\"),request:t}})}}e.SnapRpcSender=u,n=new WeakMap,i=new WeakMap;class c extends a.KeyringClient{constructor(t,e){super(new u(t,e))}}e.KeyringSnapRpcClient=c},8026:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.KeyringResponseStruct=e.KeyringAccountDataStruct=e.KeyringRequestStruct=e.KeyringAccountStruct=e.EthAccountType=e.EthMethod=void 0;const n=r(2367),i=r(2150),o=r(4520),s=r(7003);var a,u;!function(t){t.PersonalSign=\\\"personal_sign\\\",t.Sign=\\\"eth_sign\\\",t.SignTransaction=\\\"eth_signTransaction\\\",t.SignTypedDataV1=\\\"eth_signTypedData_v1\\\",t.SignTypedDataV3=\\\"eth_signTypedData_v3\\\",t.SignTypedDataV4=\\\"eth_signTypedData_v4\\\",t.PrepareUserOperation=\\\"eth_prepareUserOperation\\\",t.PatchUserOperation=\\\"eth_patchUserOperation\\\",t.SignUserOperation=\\\"eth_signUserOperation\\\"}(a=e.EthMethod||(e.EthMethod={})),function(t){t.Eoa=\\\"eip155:eoa\\\",t.Erc4337=\\\"eip155:erc4337\\\"}(u=e.EthAccountType||(e.EthAccountType={})),e.KeyringAccountStruct=(0,o.object)({id:s.UuidStruct,address:(0,i.string)(),options:(0,i.record)((0,i.string)(),n.JsonStruct),methods:(0,i.array)((0,i.enums)([`${a.PersonalSign}`,`${a.Sign}`,`${a.SignTransaction}`,`${a.SignTypedDataV1}`,`${a.SignTypedDataV3}`,`${a.SignTypedDataV4}`,`${a.PrepareUserOperation}`,`${a.PatchUserOperation}`,`${a.SignUserOperation}`])),type:(0,i.enums)([`${u.Eoa}`,`${u.Erc4337}`])}),e.KeyringRequestStruct=(0,o.object)({id:s.UuidStruct,scope:(0,i.string)(),account:s.UuidStruct,request:(0,o.object)({method:(0,i.string)(),params:(0,o.exactOptional)((0,i.union)([(0,i.array)(n.JsonStruct),(0,i.record)((0,i.string)(),n.JsonStruct)]))})}),e.KeyringAccountDataStruct=(0,i.record)((0,i.string)(),n.JsonStruct),e.KeyringResponseStruct=(0,i.union)([(0,o.object)({pending:(0,i.literal)(!0),redirect:(0,o.exactOptional)((0,o.object)({message:(0,o.exactOptional)((0,i.string)()),url:(0,o.exactOptional)((0,i.string)())}))}),(0,o.object)({pending:(0,i.literal)(!1),result:n.JsonStruct})])},322:function(t,e,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)\\\"default\\\"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),i(r(4943),e)},4943:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.EthUserOperationPatchStruct=e.EthBaseUserOperationStruct=e.EthBaseTransactionStruct=e.EthUserOperationStruct=void 0;const n=r(4520),i=r(6879);e.EthUserOperationStruct=(0,n.object)({sender:i.EthAddressStruct,nonce:i.EthUint256Struct,initCode:i.EthBytesStruct,callData:i.EthBytesStruct,callGasLimit:i.EthUint256Struct,verificationGasLimit:i.EthUint256Struct,preVerificationGas:i.EthUint256Struct,maxFeePerGas:i.EthUint256Struct,maxPriorityFeePerGas:i.EthUint256Struct,paymasterAndData:i.EthBytesStruct,signature:i.EthBytesStruct}),e.EthBaseTransactionStruct=(0,n.object)({to:i.EthAddressStruct,value:i.EthUint256Struct,data:i.EthBytesStruct}),e.EthBaseUserOperationStruct=(0,n.object)({nonce:i.EthUint256Struct,initCode:i.EthBytesStruct,callData:i.EthBytesStruct,gasLimits:(0,n.exactOptional)((0,n.object)({callGasLimit:i.EthUint256Struct,verificationGasLimit:i.EthUint256Struct,preVerificationGas:i.EthUint256Struct})),dummyPaymasterAndData:i.EthBytesStruct,dummySignature:i.EthBytesStruct,bundlerUrl:n.UrlStruct}),e.EthUserOperationPatchStruct=(0,n.object)({paymasterAndData:i.EthBytesStruct,callGasLimit:(0,n.exactOptional)(i.EthUint256Struct),verificationGasLimit:(0,n.exactOptional)(i.EthUint256Struct),preVerificationGas:(0,n.exactOptional)(i.EthUint256Struct)})},6034:function(t,e,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)\\\"default\\\"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),i(r(322),e),i(r(6879),e)},6879:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.EthUint256Struct=e.EthAddressStruct=e.EthBytesStruct=void 0;const n=r(4520);e.EthBytesStruct=(0,n.definePattern)(\\\"EthBytes\\\",/^0x[0-9a-f]*$/iu),e.EthAddressStruct=(0,n.definePattern)(\\\"EthAddress\\\",/^0x[0-9a-f]{40}$/iu),e.EthUint256Struct=(0,n.definePattern)(\\\"EthUint256\\\",/^0x([1-9a-f][0-9a-f]*|0)$/iu)},4433:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.KeyringEvent=void 0,function(t){t.AccountCreated=\\\"notify:accountCreated\\\",t.AccountUpdated=\\\"notify:accountUpdated\\\",t.AccountDeleted=\\\"notify:accountDeleted\\\",t.RequestApproved=\\\"notify:requestApproved\\\",t.RequestRejected=\\\"notify:requestRejected\\\"}(e.KeyringEvent||(e.KeyringEvent={}))},7962:function(t,e,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)\\\"default\\\"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),i(r(8026),e),i(r(6034),e),i(r(4433),e),i(r(7470),e),i(r(1236),e),i(r(4071),e),i(r(3060),e),i(r(5524),e),i(r(4520),e)},2582:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.RejectRequestResponseStruct=e.RejectRequestRequestStruct=e.ApproveRequestResponseStruct=e.ApproveRequestRequestStruct=e.SubmitRequestResponseStruct=e.SubmitRequestRequestStruct=e.GetRequestResponseStruct=e.GetRequestRequestStruct=e.ListRequestsResponseStruct=e.ListRequestsRequestStruct=e.ExportAccountResponseStruct=e.ExportAccountRequestStruct=e.DeleteAccountResponseStruct=e.DeleteAccountRequestStruct=e.UpdateAccountResponseStruct=e.UpdateAccountRequestStruct=e.FilterAccountChainsResponseStruct=e.FilterAccountChainsStruct=e.CreateAccountResponseStruct=e.CreateAccountRequestStruct=e.GetAccountResponseStruct=e.GetAccountRequestStruct=e.ListAccountsResponseStruct=e.ListAccountsRequestStruct=void 0;const n=r(2367),i=r(2150),o=r(8026),s=r(7003),a={jsonrpc:(0,i.literal)(\\\"2.0\\\"),id:(0,i.union)([(0,i.string)(),(0,i.number)(),(0,i.literal)(null)])};e.ListAccountsRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_listAccounts\\\")}),e.ListAccountsResponseStruct=(0,i.array)(o.KeyringAccountStruct),e.GetAccountRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_getAccount\\\"),params:(0,i.object)({id:s.UuidStruct})}),e.GetAccountResponseStruct=o.KeyringAccountStruct,e.CreateAccountRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_createAccount\\\"),params:(0,i.object)({options:(0,i.record)((0,i.string)(),n.JsonStruct)})}),e.CreateAccountResponseStruct=o.KeyringAccountStruct,e.FilterAccountChainsStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_filterAccountChains\\\"),params:(0,i.object)({id:s.UuidStruct,chains:(0,i.array)((0,i.string)())})}),e.FilterAccountChainsResponseStruct=(0,i.array)((0,i.string)()),e.UpdateAccountRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_updateAccount\\\"),params:(0,i.object)({account:o.KeyringAccountStruct})}),e.UpdateAccountResponseStruct=(0,i.literal)(null),e.DeleteAccountRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_deleteAccount\\\"),params:(0,i.object)({id:s.UuidStruct})}),e.DeleteAccountResponseStruct=(0,i.literal)(null),e.ExportAccountRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_exportAccount\\\"),params:(0,i.object)({id:s.UuidStruct})}),e.ExportAccountResponseStruct=o.KeyringAccountDataStruct,e.ListRequestsRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_listRequests\\\")}),e.ListRequestsResponseStruct=(0,i.array)(o.KeyringRequestStruct),e.GetRequestRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_getRequest\\\"),params:(0,i.object)({id:s.UuidStruct})}),e.GetRequestResponseStruct=o.KeyringRequestStruct,e.SubmitRequestRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_submitRequest\\\"),params:o.KeyringRequestStruct}),e.SubmitRequestResponseStruct=o.KeyringResponseStruct,e.ApproveRequestRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_approveRequest\\\"),params:(0,i.object)({id:s.UuidStruct,data:(0,i.record)((0,i.string)(),n.JsonStruct)})}),e.ApproveRequestResponseStruct=(0,i.literal)(null),e.RejectRequestRequestStruct=(0,i.object)({...a,method:(0,i.literal)(\\\"keyring_rejectRequest\\\"),params:(0,i.object)({id:s.UuidStruct})}),e.RejectRequestResponseStruct=(0,i.literal)(null)},6796:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},222:function(t,e,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)\\\"default\\\"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),i(r(6796),e)},3005:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.RequestRejectedEventStruct=e.RequestApprovedEventStruct=e.AccountDeletedEventStruct=e.AccountUpdatedEventStruct=e.AccountCreatedEventStruct=void 0;const n=r(2367),i=r(2150),o=r(8026),s=r(4433),a=r(7003);e.AccountCreatedEventStruct=(0,i.object)({method:(0,i.literal)(`${s.KeyringEvent.AccountCreated}`),params:(0,i.object)({account:o.KeyringAccountStruct})}),e.AccountUpdatedEventStruct=(0,i.object)({method:(0,i.literal)(`${s.KeyringEvent.AccountUpdated}`),params:(0,i.object)({account:o.KeyringAccountStruct})}),e.AccountDeletedEventStruct=(0,i.object)({method:(0,i.literal)(`${s.KeyringEvent.AccountDeleted}`),params:(0,i.object)({id:a.UuidStruct})}),e.RequestApprovedEventStruct=(0,i.object)({method:(0,i.literal)(`${s.KeyringEvent.RequestApproved}`),params:(0,i.object)({id:a.UuidStruct,result:n.JsonStruct})}),e.RequestRejectedEventStruct=(0,i.object)({method:(0,i.literal)(`${s.KeyringEvent.RequestRejected}`),params:(0,i.object)({id:a.UuidStruct})})},7470:function(t,e,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)\\\"default\\\"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),i(r(2582),e),i(r(222),e),i(r(3005),e),i(r(1925),e),i(r(3699),e)},1925:(t,e)=>{\\\"use strict\\\";var r;Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.isKeyringRpcMethod=e.KeyringRpcMethod=void 0,function(t){t.ListAccounts=\\\"keyring_listAccounts\\\",t.GetAccount=\\\"keyring_getAccount\\\",t.CreateAccount=\\\"keyring_createAccount\\\",t.FilterAccountChains=\\\"keyring_filterAccountChains\\\",t.UpdateAccount=\\\"keyring_updateAccount\\\",t.DeleteAccount=\\\"keyring_deleteAccount\\\",t.ExportAccount=\\\"keyring_exportAccount\\\",t.ListRequests=\\\"keyring_listRequests\\\",t.GetRequest=\\\"keyring_getRequest\\\",t.SubmitRequest=\\\"keyring_submitRequest\\\",t.ApproveRequest=\\\"keyring_approveRequest\\\",t.RejectRequest=\\\"keyring_rejectRequest\\\"}(r=e.KeyringRpcMethod||(e.KeyringRpcMethod={})),e.isKeyringRpcMethod=function(t){return Object.values(r).includes(t)}},3699:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.InternalAccountStruct=void 0;const n=r(2150),i=r(8026),o=r(4520);e.InternalAccountStruct=(0,o.object)({...i.KeyringAccountStruct.schema,metadata:(0,o.object)({name:(0,n.string)(),snap:(0,o.exactOptional)((0,o.object)({id:(0,n.string)(),enabled:(0,n.boolean)(),name:(0,n.string)()})),lastSelected:(0,o.exactOptional)((0,n.number)()),keyring:(0,o.object)({type:(0,n.string)()})})})},3060:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.handleKeyringRequest=e.MethodNotSupportedError=void 0;const n=r(2150),i=r(2582),o=r(1925),s=r(5978);class a extends Error{constructor(t){super(`Method not supported: ${t}`)}}e.MethodNotSupportedError=a,e.handleKeyringRequest=async function(t,e){switch((0,n.assert)(e,s.JsonRpcRequestStruct),e.method){case o.KeyringRpcMethod.ListAccounts:return(0,n.assert)(e,i.ListAccountsRequestStruct),t.listAccounts();case o.KeyringRpcMethod.GetAccount:return(0,n.assert)(e,i.GetAccountRequestStruct),t.getAccount(e.params.id);case o.KeyringRpcMethod.CreateAccount:return(0,n.assert)(e,i.CreateAccountRequestStruct),t.createAccount(e.params.options);case o.KeyringRpcMethod.FilterAccountChains:return(0,n.assert)(e,i.FilterAccountChainsStruct),t.filterAccountChains(e.params.id,e.params.chains);case o.KeyringRpcMethod.UpdateAccount:return(0,n.assert)(e,i.UpdateAccountRequestStruct),t.updateAccount(e.params.account);case o.KeyringRpcMethod.DeleteAccount:return(0,n.assert)(e,i.DeleteAccountRequestStruct),t.deleteAccount(e.params.id);case o.KeyringRpcMethod.ExportAccount:if(void 0===t.exportAccount)throw new a(e.method);return(0,n.assert)(e,i.ExportAccountRequestStruct),t.exportAccount(e.params.id);case o.KeyringRpcMethod.ListRequests:if(void 0===t.listRequests)throw new a(e.method);return(0,n.assert)(e,i.ListRequestsRequestStruct),t.listRequests();case o.KeyringRpcMethod.GetRequest:if(void 0===t.getRequest)throw new a(e.method);return(0,n.assert)(e,i.GetRequestRequestStruct),t.getRequest(e.params.id);case o.KeyringRpcMethod.SubmitRequest:return(0,n.assert)(e,i.SubmitRequestRequestStruct),t.submitRequest(e.params);case o.KeyringRpcMethod.ApproveRequest:if(void 0===t.approveRequest)throw new a(e.method);return(0,n.assert)(e,i.ApproveRequestRequestStruct),t.approveRequest(e.params.id,e.params.data);case o.KeyringRpcMethod.RejectRequest:if(void 0===t.rejectRequest)throw new a(e.method);return(0,n.assert)(e,i.RejectRequestRequestStruct),t.rejectRequest(e.params.id);default:throw new a(e.method)}}},5524:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.emitSnapKeyringEvent=void 0,e.emitSnapKeyringEvent=async function(t,e,r){await t.request({method:\\\"snap_manageAccounts\\\",params:{method:e,params:{...r}}})}},4520:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.UrlStruct=e.definePattern=e.exactOptional=e.object=void 0;const n=r(2150);function i(t){return t.path[t.path.length-1]in t.branch[t.branch.length-2]}e.object=function(t){return(0,n.object)(t)},e.exactOptional=function(t){return new n.Struct({...t,validator:(e,r)=>!i(r)||t.validator(e,r),refiner:(e,r)=>!i(r)||t.refiner(e,r)})},e.definePattern=function(t,e){return(0,n.define)(t,(t=>\\\"string\\\"==typeof t&&e.test(t)))},e.UrlStruct=(0,n.define)(\\\"Url\\\",(t=>{let e;try{e=new URL(t)}catch(t){return!1}return\\\"http:\\\"===e.protocol||\\\"https:\\\"===e.protocol}))},7003:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.strictMask=e.UuidStruct=void 0;const n=r(2150),i=r(4520);e.UuidStruct=(0,i.definePattern)(\\\"UuidV4\\\",/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/iu),e.strictMask=function(t,e,r){return(0,n.assert)(t,e,r),t}},7557:(t,e)=>{\\\"use strict\\\";function r(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`positive integer expected, not ${t}`)}function n(t){if(\\\"boolean\\\"!=typeof t)throw new Error(`boolean expected, not ${t}`)}function i(t){return t instanceof Uint8Array||null!=t&&\\\"object\\\"==typeof t&&\\\"Uint8Array\\\"===t.constructor.name}function o(t,...e){if(!i(t))throw new Error(\\\"Uint8Array expected\\\");if(e.length>0&&!e.includes(t.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${t.length}`)}function s(t){if(\\\"function\\\"!=typeof t||\\\"function\\\"!=typeof t.create)throw new Error(\\\"Hash should be wrapped by utils.wrapConstructor\\\");r(t.outputLen),r(t.blockLen)}function a(t,e=!0){if(t.destroyed)throw new Error(\\\"Hash instance has been destroyed\\\");if(e&&t.finished)throw new Error(\\\"Hash#digest() has already been called\\\")}function u(t,e){o(t);const r=e.outputLen;if(t.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.output=e.exists=e.hash=e.bytes=e.bool=e.number=e.isBytes=void 0,e.number=r,e.bool=n,e.isBytes=i,e.bytes=o,e.hash=s,e.exists=a,e.output=u;const c={number:r,bool:n,bytes:o,hash:s,exists:a,output:u};e.default=c},2318:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.add5L=e.add5H=e.add4H=e.add4L=e.add3H=e.add3L=e.add=e.rotlBL=e.rotlBH=e.rotlSL=e.rotlSH=e.rotr32L=e.rotr32H=e.rotrBL=e.rotrBH=e.rotrSL=e.rotrSH=e.shrSL=e.shrSH=e.toBig=e.split=e.fromBig=void 0;const r=BigInt(2**32-1),n=BigInt(32);function i(t,e=!1){return e?{h:Number(t&r),l:Number(t>>n&r)}:{h:0|Number(t>>n&r),l:0|Number(t&r)}}function o(t,e=!1){let r=new Uint32Array(t.length),n=new Uint32Array(t.length);for(let o=0;o<t.length;o++){const{h:s,l:a}=i(t[o],e);[r[o],n[o]]=[s,a]}return[r,n]}e.fromBig=i,e.split=o;const s=(t,e)=>BigInt(t>>>0)<<n|BigInt(e>>>0);e.toBig=s;const a=(t,e,r)=>t>>>r;e.shrSH=a;const u=(t,e,r)=>t<<32-r|e>>>r;e.shrSL=u;const c=(t,e,r)=>t>>>r|e<<32-r;e.rotrSH=c;const l=(t,e,r)=>t<<32-r|e>>>r;e.rotrSL=l;const f=(t,e,r)=>t<<64-r|e>>>r-32;e.rotrBH=f;const h=(t,e,r)=>t>>>r-32|e<<64-r;e.rotrBL=h;const d=(t,e)=>e;e.rotr32H=d;const p=(t,e)=>t;e.rotr32L=p;const g=(t,e,r)=>t<<r|e>>>32-r;e.rotlSH=g;const m=(t,e,r)=>e<<r|t>>>32-r;e.rotlSL=m;const y=(t,e,r)=>e<<r-32|t>>>64-r;e.rotlBH=y;const v=(t,e,r)=>t<<r-32|e>>>64-r;function w(t,e,r,n){const i=(e>>>0)+(n>>>0);return{h:t+r+(i/2**32|0)|0,l:0|i}}e.rotlBL=v,e.add=w;const b=(t,e,r)=>(t>>>0)+(e>>>0)+(r>>>0);e.add3L=b;const A=(t,e,r,n)=>e+r+n+(t/2**32|0)|0;e.add3H=A;const E=(t,e,r,n)=>(t>>>0)+(e>>>0)+(r>>>0)+(n>>>0);e.add4L=E;const S=(t,e,r,n,i)=>e+r+n+i+(t/2**32|0)|0;e.add4H=S;const R=(t,e,r,n,i)=>(t>>>0)+(e>>>0)+(r>>>0)+(n>>>0)+(i>>>0);e.add5L=R;const I=(t,e,r,n,i,o)=>e+r+n+i+o+(t/2**32|0)|0;e.add5H=I;const x={fromBig:i,split:o,toBig:s,shrSH:a,shrSL:u,rotrSH:c,rotrSL:l,rotrBH:f,rotrBL:h,rotr32H:d,rotr32L:p,rotlSH:g,rotlSL:m,rotlBH:y,rotlBL:v,add:w,add3L:b,add3H:A,add4L:E,add4H:S,add5H:I,add5L:R};e.default=x},5145:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.crypto=void 0,e.crypto=\\\"object\\\"==typeof globalThis&&\\\"crypto\\\"in globalThis?globalThis.crypto:void 0},2955:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.shake256=e.shake128=e.keccak_512=e.keccak_384=e.keccak_256=e.keccak_224=e.sha3_512=e.sha3_384=e.sha3_256=e.sha3_224=e.Keccak=e.keccakP=void 0;const n=r(7557),i=r(2318),o=r(9175),s=[],a=[],u=[],c=BigInt(0),l=BigInt(1),f=BigInt(2),h=BigInt(7),d=BigInt(256),p=BigInt(113);for(let t=0,e=l,r=1,n=0;t<24;t++){[r,n]=[n,(2*r+3*n)%5],s.push(2*(5*n+r)),a.push((t+1)*(t+2)/2%64);let i=c;for(let t=0;t<7;t++)e=(e<<l^(e>>h)*p)%d,e&f&&(i^=l<<(l<<BigInt(t))-l);u.push(i)}const[g,m]=(0,i.split)(u,!0),y=(t,e,r)=>r>32?(0,i.rotlBH)(t,e,r):(0,i.rotlSH)(t,e,r),v=(t,e,r)=>r>32?(0,i.rotlBL)(t,e,r):(0,i.rotlSL)(t,e,r);function w(t,e=24){const r=new Uint32Array(10);for(let n=24-e;n<24;n++){for(let e=0;e<10;e++)r[e]=t[e]^t[e+10]^t[e+20]^t[e+30]^t[e+40];for(let e=0;e<10;e+=2){const n=(e+8)%10,i=(e+2)%10,o=r[i],s=r[i+1],a=y(o,s,1)^r[n],u=v(o,s,1)^r[n+1];for(let r=0;r<50;r+=10)t[e+r]^=a,t[e+r+1]^=u}let e=t[2],i=t[3];for(let r=0;r<24;r++){const n=a[r],o=y(e,i,n),u=v(e,i,n),c=s[r];e=t[c],i=t[c+1],t[c]=o,t[c+1]=u}for(let e=0;e<50;e+=10){for(let n=0;n<10;n++)r[n]=t[e+n];for(let n=0;n<10;n++)t[e+n]^=~r[(n+2)%10]&r[(n+4)%10]}t[0]^=g[n],t[1]^=m[n]}r.fill(0)}e.keccakP=w;class b extends o.Hash{constructor(t,e,r,i=!1,s=24){if(super(),this.blockLen=t,this.suffix=e,this.outputLen=r,this.enableXOF=i,this.rounds=s,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,(0,n.number)(r),0>=this.blockLen||this.blockLen>=200)throw new Error(\\\"Sha3 supports only keccak-f1600 function\\\");this.state=new Uint8Array(200),this.state32=(0,o.u32)(this.state)}keccak(){o.isLE||(0,o.byteSwap32)(this.state32),w(this.state32,this.rounds),o.isLE||(0,o.byteSwap32)(this.state32),this.posOut=0,this.pos=0}update(t){(0,n.exists)(this);const{blockLen:e,state:r}=this,i=(t=(0,o.toBytes)(t)).length;for(let n=0;n<i;){const o=Math.min(e-this.pos,i-n);for(let e=0;e<o;e++)r[this.pos++]^=t[n++];this.pos===e&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:t,suffix:e,pos:r,blockLen:n}=this;t[r]^=e,128&e&&r===n-1&&this.keccak(),t[n-1]^=128,this.keccak()}writeInto(t){(0,n.exists)(this,!1),(0,n.bytes)(t),this.finish();const e=this.state,{blockLen:r}=this;for(let n=0,i=t.length;n<i;){this.posOut>=r&&this.keccak();const o=Math.min(r-this.posOut,i-n);t.set(e.subarray(this.posOut,this.posOut+o),n),this.posOut+=o,n+=o}return t}xofInto(t){if(!this.enableXOF)throw new Error(\\\"XOF is not possible for this instance\\\");return this.writeInto(t)}xof(t){return(0,n.number)(t),this.xofInto(new Uint8Array(t))}digestInto(t){if((0,n.output)(t,this),this.finished)throw new Error(\\\"digest() was already called\\\");return this.writeInto(t),this.destroy(),t}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(t){const{blockLen:e,suffix:r,outputLen:n,rounds:i,enableXOF:o}=this;return t||(t=new b(e,r,n,o,i)),t.state32.set(this.state32),t.pos=this.pos,t.posOut=this.posOut,t.finished=this.finished,t.rounds=i,t.suffix=r,t.outputLen=n,t.enableXOF=o,t.destroyed=this.destroyed,t}}e.Keccak=b;const A=(t,e,r)=>(0,o.wrapConstructor)((()=>new b(e,t,r)));e.sha3_224=A(6,144,28),e.sha3_256=A(6,136,32),e.sha3_384=A(6,104,48),e.sha3_512=A(6,72,64),e.keccak_224=A(1,144,28),e.keccak_256=A(1,136,32),e.keccak_384=A(1,104,48),e.keccak_512=A(1,72,64);const E=(t,e,r)=>(0,o.wrapXOFConstructorWithOpts)(((n={})=>new b(e,t,void 0===n.dkLen?r:n.dkLen,!0)));e.shake128=E(31,168,16),e.shake256=E(31,136,32)},9175:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.randomBytes=e.wrapXOFConstructorWithOpts=e.wrapConstructorWithOpts=e.wrapConstructor=e.checkOpts=e.Hash=e.concatBytes=e.toBytes=e.utf8ToBytes=e.asyncLoop=e.nextTick=e.hexToBytes=e.bytesToHex=e.byteSwap32=e.byteSwapIfBE=e.byteSwap=e.isLE=e.rotl=e.rotr=e.createView=e.u32=e.u8=e.isBytes=void 0;const n=r(5145),i=r(7557);e.isBytes=function(t){return t instanceof Uint8Array||null!=t&&\\\"object\\\"==typeof t&&\\\"Uint8Array\\\"===t.constructor.name};e.u8=t=>new Uint8Array(t.buffer,t.byteOffset,t.byteLength);e.u32=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4));e.createView=t=>new DataView(t.buffer,t.byteOffset,t.byteLength);e.rotr=(t,e)=>t<<32-e|t>>>e;e.rotl=(t,e)=>t<<e|t>>>32-e>>>0,e.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0];e.byteSwap=t=>t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255,e.byteSwapIfBE=e.isLE?t=>t:t=>(0,e.byteSwap)(t),e.byteSwap32=function(t){for(let r=0;r<t.length;r++)t[r]=(0,e.byteSwap)(t[r])};const o=Array.from({length:256},((t,e)=>e.toString(16).padStart(2,\\\"0\\\")));e.bytesToHex=function(t){(0,i.bytes)(t);let e=\\\"\\\";for(let r=0;r<t.length;r++)e+=o[t[r]];return e};const s={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function a(t){return t>=s._0&&t<=s._9?t-s._0:t>=s._A&&t<=s._F?t-(s._A-10):t>=s._a&&t<=s._f?t-(s._a-10):void 0}e.hexToBytes=function(t){if(\\\"string\\\"!=typeof t)throw new Error(\\\"hex string expected, got \\\"+typeof t);const e=t.length,r=e/2;if(e%2)throw new Error(\\\"padded hex string expected, got unpadded hex of length \\\"+e);const n=new Uint8Array(r);for(let e=0,i=0;e<r;e++,i+=2){const r=a(t.charCodeAt(i)),o=a(t.charCodeAt(i+1));if(void 0===r||void 0===o){const e=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character \\\"'+e+'\\\" at index '+i)}n[e]=16*r+o}return n};function u(t){if(\\\"string\\\"!=typeof t)throw new Error(\\\"utf8ToBytes expected string, got \\\"+typeof t);return new Uint8Array((new TextEncoder).encode(t))}function c(t){return\\\"string\\\"==typeof t&&(t=u(t)),(0,i.bytes)(t),t}e.nextTick=async()=>{},e.asyncLoop=async function(t,r,n){let i=Date.now();for(let o=0;o<t;o++){n(o);const t=Date.now()-i;t>=0&&t<r||(await(0,e.nextTick)(),i+=t)}},e.utf8ToBytes=u,e.toBytes=c,e.concatBytes=function(...t){let e=0;for(let r=0;r<t.length;r++){const n=t[r];(0,i.bytes)(n),e+=n.length}const r=new Uint8Array(e);for(let e=0,n=0;e<t.length;e++){const i=t[e];r.set(i,n),n+=i.length}return r};e.Hash=class{clone(){return this._cloneInto()}};const l={}.toString;e.checkOpts=function(t,e){if(void 0!==e&&\\\"[object Object]\\\"!==l.call(e))throw new Error(\\\"Options should be object or undefined\\\");return Object.assign(t,e)},e.wrapConstructor=function(t){const e=e=>t().update(c(e)).digest(),r=t();return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=()=>t(),e},e.wrapConstructorWithOpts=function(t){const e=(e,r)=>t(r).update(c(e)).digest(),r=t({});return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=e=>t(e),e},e.wrapXOFConstructorWithOpts=function(t){const e=(e,r)=>t(r).update(c(e)).digest(),r=t({});return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=e=>t(e),e},e.randomBytes=function(t=32){if(n.crypto&&\\\"function\\\"==typeof n.crypto.getRandomValues)return n.crypto.getRandomValues(new Uint8Array(t));throw new Error(\\\"crypto.getRandomValues must be defined\\\")}},3203:(t,e)=>{\\\"use strict\\\";function r(t){if(!Number.isSafeInteger(t))throw new Error(`Wrong integer: ${t}`)}function n(t){return t instanceof Uint8Array||null!=t&&\\\"object\\\"==typeof t&&\\\"Uint8Array\\\"===t.constructor.name}function i(...t){const e=t=>t,r=(t,e)=>r=>t(e(r));return{encode:t.map((t=>t.encode)).reduceRight(r,e),decode:t.map((t=>t.decode)).reduce(r,e)}}function o(t){return{encode:e=>{if(!Array.isArray(e)||e.length&&\\\"number\\\"!=typeof e[0])throw new Error(\\\"alphabet.encode input should be an array of numbers\\\");return e.map((e=>{if(r(e),e<0||e>=t.length)throw new Error(`Digit index outside alphabet: ${e} (alphabet: ${t.length})`);return t[e]}))},decode:e=>{if(!Array.isArray(e)||e.length&&\\\"string\\\"!=typeof e[0])throw new Error(\\\"alphabet.decode input should be array of strings\\\");return e.map((e=>{if(\\\"string\\\"!=typeof e)throw new Error(`alphabet.decode: not string element=${e}`);const r=t.indexOf(e);if(-1===r)throw new Error(`Unknown letter: \\\"${e}\\\". Allowed: ${t}`);return r}))}}}function s(t=\\\"\\\"){if(\\\"string\\\"!=typeof t)throw new Error(\\\"join separator should be string\\\");return{encode:e=>{if(!Array.isArray(e)||e.length&&\\\"string\\\"!=typeof e[0])throw new Error(\\\"join.encode input should be array of strings\\\");for(let t of e)if(\\\"string\\\"!=typeof t)throw new Error(`join.encode: non-string input=${t}`);return e.join(t)},decode:e=>{if(\\\"string\\\"!=typeof e)throw new Error(\\\"join.decode input should be string\\\");return e.split(t)}}}function a(t,e=\\\"=\\\"){if(r(t),\\\"string\\\"!=typeof e)throw new Error(\\\"padding chr should be string\\\");return{encode(r){if(!Array.isArray(r)||r.length&&\\\"string\\\"!=typeof r[0])throw new Error(\\\"padding.encode input should be array of strings\\\");for(let t of r)if(\\\"string\\\"!=typeof t)throw new Error(`padding.encode: non-string input=${t}`);for(;r.length*t%8;)r.push(e);return r},decode(r){if(!Array.isArray(r)||r.length&&\\\"string\\\"!=typeof r[0])throw new Error(\\\"padding.encode input should be array of strings\\\");for(let t of r)if(\\\"string\\\"!=typeof t)throw new Error(`padding.decode: non-string input=${t}`);let n=r.length;if(n*t%8)throw new Error(\\\"Invalid padding: string should have whole number of bytes\\\");for(;n>0&&r[n-1]===e;n--)if(!((n-1)*t%8))throw new Error(\\\"Invalid padding: string has too much padding\\\");return r.slice(0,n)}}}function u(t){if(\\\"function\\\"!=typeof t)throw new Error(\\\"normalize fn should be function\\\");return{encode:t=>t,decode:e=>t(e)}}function c(t,e,n){if(e<2)throw new Error(`convertRadix: wrong from=${e}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(t))throw new Error(\\\"convertRadix: data should be array\\\");if(!t.length)return[];let i=0;const o=[],s=Array.from(t);for(s.forEach((t=>{if(r(t),t<0||t>=e)throw new Error(`Wrong integer: ${t}`)}));;){let t=0,r=!0;for(let o=i;o<s.length;o++){const a=s[o],u=e*t+a;if(!Number.isSafeInteger(u)||e*t/e!==t||u-a!=e*t)throw new Error(\\\"convertRadix: carry overflow\\\");t=u%n;const c=Math.floor(u/n);if(s[o]=c,!Number.isSafeInteger(c)||c*n+t!==u)throw new Error(\\\"convertRadix: carry overflow\\\");r&&(c?r=!1:i=o)}if(o.push(t),r)break}for(let e=0;e<t.length-1&&0===t[e];e++)o.push(0);return o.reverse()}Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.bytes=e.stringToBytes=e.str=e.bytesToString=e.hex=e.utf8=e.bech32m=e.bech32=e.base58check=e.createBase58check=e.base58xmr=e.base58xrp=e.base58flickr=e.base58=e.base64urlnopad=e.base64url=e.base64nopad=e.base64=e.base32crockford=e.base32hexnopad=e.base32hex=e.base32nopad=e.base32=e.base16=e.utils=e.assertNumber=void 0,e.assertNumber=r;const l=(t,e)=>e?l(e,t%e):t,f=(t,e)=>t+(e-l(t,e));function h(t,e,n,i){if(!Array.isArray(t))throw new Error(\\\"convertRadix2: data should be array\\\");if(e<=0||e>32)throw new Error(`convertRadix2: wrong from=${e}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(f(e,n)>32)throw new Error(`convertRadix2: carry overflow from=${e} to=${n} carryBits=${f(e,n)}`);let o=0,s=0;const a=2**n-1,u=[];for(const i of t){if(r(i),i>=2**e)throw new Error(`convertRadix2: invalid data word=${i} from=${e}`);if(o=o<<e|i,s+e>32)throw new Error(`convertRadix2: carry overflow pos=${s} from=${e}`);for(s+=e;s>=n;s-=n)u.push((o>>s-n&a)>>>0);o&=2**s-1}if(o=o<<n-s&a,!i&&s>=e)throw new Error(\\\"Excess padding\\\");if(!i&&o)throw new Error(`Non-zero padding: ${o}`);return i&&s>0&&u.push(o>>>0),u}function d(t){return r(t),{encode:e=>{if(!n(e))throw new Error(\\\"radix.encode input should be Uint8Array\\\");return c(Array.from(e),256,t)},decode:e=>{if(!Array.isArray(e)||e.length&&\\\"number\\\"!=typeof e[0])throw new Error(\\\"radix.decode input should be array of numbers\\\");return Uint8Array.from(c(e,t,256))}}}function p(t,e=!1){if(r(t),t<=0||t>32)throw new Error(\\\"radix2: bits should be in (0..32]\\\");if(f(8,t)>32||f(t,8)>32)throw new Error(\\\"radix2: carry overflow\\\");return{encode:r=>{if(!n(r))throw new Error(\\\"radix2.encode input should be Uint8Array\\\");return h(Array.from(r),8,t,!e)},decode:r=>{if(!Array.isArray(r)||r.length&&\\\"number\\\"!=typeof r[0])throw new Error(\\\"radix2.decode input should be array of numbers\\\");return Uint8Array.from(h(r,t,8,e))}}}function g(t){if(\\\"function\\\"!=typeof t)throw new Error(\\\"unsafeWrapper fn should be function\\\");return function(...e){try{return t.apply(null,e)}catch(t){}}}function m(t,e){if(r(t),\\\"function\\\"!=typeof e)throw new Error(\\\"checksum fn should be function\\\");return{encode(r){if(!n(r))throw new Error(\\\"checksum.encode: input should be Uint8Array\\\");const i=e(r).slice(0,t),o=new Uint8Array(r.length+t);return o.set(r),o.set(i,r.length),o},decode(r){if(!n(r))throw new Error(\\\"checksum.decode: input should be Uint8Array\\\");const i=r.slice(0,-t),o=e(i).slice(0,t),s=r.slice(-t);for(let e=0;e<t;e++)if(o[e]!==s[e])throw new Error(\\\"Invalid checksum\\\");return i}}}e.utils={alphabet:o,chain:i,checksum:m,convertRadix:c,convertRadix2:h,radix:d,radix2:p,join:s,padding:a},e.base16=i(p(4),o(\\\"0123456789ABCDEF\\\"),s(\\\"\\\")),e.base32=i(p(5),o(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\\\"),a(5),s(\\\"\\\")),e.base32nopad=i(p(5),o(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\\\"),s(\\\"\\\")),e.base32hex=i(p(5),o(\\\"0123456789ABCDEFGHIJKLMNOPQRSTUV\\\"),a(5),s(\\\"\\\")),e.base32hexnopad=i(p(5),o(\\\"0123456789ABCDEFGHIJKLMNOPQRSTUV\\\"),s(\\\"\\\")),e.base32crockford=i(p(5),o(\\\"0123456789ABCDEFGHJKMNPQRSTVWXYZ\\\"),s(\\\"\\\"),u((t=>t.toUpperCase().replace(/O/g,\\\"0\\\").replace(/[IL]/g,\\\"1\\\")))),e.base64=i(p(6),o(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"),a(6),s(\\\"\\\")),e.base64nopad=i(p(6),o(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"),s(\\\"\\\")),e.base64url=i(p(6),o(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\\\"),a(6),s(\\\"\\\")),e.base64urlnopad=i(p(6),o(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\\\"),s(\\\"\\\"));const y=t=>i(d(58),o(t),s(\\\"\\\"));e.base58=y(\\\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\\\"),e.base58flickr=y(\\\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\\\"),e.base58xrp=y(\\\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\\\");const v=[0,2,3,5,6,7,9,10,11];e.base58xmr={encode(t){let r=\\\"\\\";for(let n=0;n<t.length;n+=8){const i=t.subarray(n,n+8);r+=e.base58.encode(i).padStart(v[i.length],\\\"1\\\")}return r},decode(t){let r=[];for(let n=0;n<t.length;n+=11){const i=t.slice(n,n+11),o=v.indexOf(i.length),s=e.base58.decode(i);for(let t=0;t<s.length-o;t++)if(0!==s[t])throw new Error(\\\"base58xmr: wrong padding\\\");r=r.concat(Array.from(s.slice(s.length-o)))}return Uint8Array.from(r)}};e.createBase58check=t=>i(m(4,(e=>t(t(e)))),e.base58),e.base58check=e.createBase58check;const w=i(o(\\\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\\\"),s(\\\"\\\")),b=[996825010,642813549,513874426,1027748829,705979059];function A(t){const e=t>>25;let r=(33554431&t)<<5;for(let t=0;t<b.length;t++)1==(e>>t&1)&&(r^=b[t]);return r}function E(t,e,r=1){const n=t.length;let i=1;for(let e=0;e<n;e++){const r=t.charCodeAt(e);if(r<33||r>126)throw new Error(`Invalid prefix (${t})`);i=A(i)^r>>5}i=A(i);for(let e=0;e<n;e++)i=A(i)^31&t.charCodeAt(e);for(let t of e)i=A(i)^t;for(let t=0;t<6;t++)i=A(i);return i^=r,w.encode(h([i%2**30],30,5,!1))}function S(t){const e=\\\"bech32\\\"===t?1:734539939,r=p(5),n=r.decode,i=r.encode,o=g(n);function s(t,r=90){if(\\\"string\\\"!=typeof t)throw new Error(\\\"bech32.decode input should be string, not \\\"+typeof t);if(t.length<8||!1!==r&&t.length>r)throw new TypeError(`Wrong string length: ${t.length} (${t}). Expected (8..${r})`);const n=t.toLowerCase();if(t!==n&&t!==t.toUpperCase())throw new Error(\\\"String must be lowercase or uppercase\\\");const i=n.lastIndexOf(\\\"1\\\");if(0===i||-1===i)throw new Error('Letter \\\"1\\\" must be present between prefix and data only');const o=n.slice(0,i),s=n.slice(i+1);if(s.length<6)throw new Error(\\\"Data must be at least 6 characters long\\\");const a=w.decode(s).slice(0,-6),u=E(o,a,e);if(!s.endsWith(u))throw new Error(`Invalid checksum in ${t}: expected \\\"${u}\\\"`);return{prefix:o,words:a}}return{encode:function(t,r,n=90){if(\\\"string\\\"!=typeof t)throw new Error(\\\"bech32.encode prefix should be string, not \\\"+typeof t);if(!Array.isArray(r)||r.length&&\\\"number\\\"!=typeof r[0])throw new Error(\\\"bech32.encode words should be array of numbers, not \\\"+typeof r);if(0===t.length)throw new TypeError(`Invalid prefix length ${t.length}`);const i=t.length+7+r.length;if(!1!==n&&i>n)throw new TypeError(`Length ${i} exceeds limit ${n}`);const o=t.toLowerCase(),s=E(o,r,e);return`${o}1${w.encode(r)}${s}`},decode:s,decodeToBytes:function(t){const{prefix:e,words:r}=s(t,!1);return{prefix:e,words:r,bytes:n(r)}},decodeUnsafe:g(s),fromWords:n,fromWordsUnsafe:o,toWords:i}}e.bech32=S(\\\"bech32\\\"),e.bech32m=S(\\\"bech32m\\\"),e.utf8={encode:t=>(new TextDecoder).decode(t),decode:t=>(new TextEncoder).encode(t)},e.hex=i(p(4),o(\\\"0123456789abcdef\\\"),s(\\\"\\\"),u((t=>{if(\\\"string\\\"!=typeof t||t.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof t} with length ${t.length}`);return t.toLowerCase()})));const R={utf8:e.utf8,hex:e.hex,base16:e.base16,base32:e.base32,base64:e.base64,base64url:e.base64url,base58:e.base58,base58xmr:e.base58xmr},I=\\\"Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr\\\";e.bytesToString=(t,e)=>{if(\\\"string\\\"!=typeof t||!R.hasOwnProperty(t))throw new TypeError(I);if(!n(e))throw new TypeError(\\\"bytesToString() expects Uint8Array\\\");return R[t].encode(e)},e.str=e.bytesToString;e.stringToBytes=(t,e)=>{if(!R.hasOwnProperty(t))throw new TypeError(I);if(\\\"string\\\"!=typeof e)throw new TypeError(\\\"stringToBytes() expects string\\\");return R[t].decode(e)},e.bytes=e.stringToBytes},7526:(t,e)=>{\\\"use strict\\\";e.byteLength=function(t){var e=a(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,o=a(t),s=o[0],u=o[1],c=new i(function(t,e,r){return 3*(e+r)/4-r}(0,s,u)),l=0,f=u>0?s-4:s;for(r=0;r<f;r+=4)e=n[t.charCodeAt(r)]<<18|n[t.charCodeAt(r+1)]<<12|n[t.charCodeAt(r+2)]<<6|n[t.charCodeAt(r+3)],c[l++]=e>>16&255,c[l++]=e>>8&255,c[l++]=255&e;2===u&&(e=n[t.charCodeAt(r)]<<2|n[t.charCodeAt(r+1)]>>4,c[l++]=255&e);1===u&&(e=n[t.charCodeAt(r)]<<10|n[t.charCodeAt(r+1)]<<4|n[t.charCodeAt(r+2)]>>2,c[l++]=e>>8&255,c[l++]=255&e);return c},e.fromByteArray=function(t){for(var e,n=t.length,i=n%3,o=[],s=16383,a=0,c=n-i;a<c;a+=s)o.push(u(t,a,a+s>c?c:a+s));1===i?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+\\\"==\\\")):2===i&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+\\\"=\\\"));return o.join(\\\"\\\")};for(var r=[],n=[],i=\\\"undefined\\\"!=typeof Uint8Array?Uint8Array:Array,o=\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\",s=0;s<64;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function a(t){var e=t.length;if(e%4>0)throw new Error(\\\"Invalid string. Length must be a multiple of 4\\\");var r=t.indexOf(\\\"=\\\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function u(t,e,n){for(var i,o,s=[],a=e;a<n;a+=3)i=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join(\\\"\\\")}n[\\\"-\\\".charCodeAt(0)]=62,n[\\\"_\\\".charCodeAt(0)]=63},9674:t=>{\\\"use strict\\\";for(var e=\\\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\\\",r={},n=0;n<32;n++){var i=e.charAt(n);if(void 0!==r[i])throw new TypeError(i+\\\" is ambiguous\\\");r[i]=n}function o(t){var e=t>>25;return(33554431&t)<<5^996825010&-(1&e)^642813549&-(e>>1&1)^513874426&-(e>>2&1)^1027748829&-(e>>3&1)^705979059&-(e>>4&1)}function s(t){for(var e=1,r=0;r<t.length;++r){var n=t.charCodeAt(r);if(n<33||n>126)return\\\"Invalid prefix (\\\"+t+\\\")\\\";e=o(e)^n>>5}for(e=o(e),r=0;r<t.length;++r){var i=t.charCodeAt(r);e=o(e)^31&i}return e}function a(t,e){if(e=e||90,t.length<8)return t+\\\" too short\\\";if(t.length>e)return\\\"Exceeds length limit\\\";var n=t.toLowerCase(),i=t.toUpperCase();if(t!==n&&t!==i)return\\\"Mixed-case string \\\"+t;var a=(t=n).lastIndexOf(\\\"1\\\");if(-1===a)return\\\"No separator character for \\\"+t;if(0===a)return\\\"Missing prefix for \\\"+t;var u=t.slice(0,a),c=t.slice(a+1);if(c.length<6)return\\\"Data too short\\\";var l=s(u);if(\\\"string\\\"==typeof l)return l;for(var f=[],h=0;h<c.length;++h){var d=c.charAt(h),p=r[d];if(void 0===p)return\\\"Unknown character \\\"+d;l=o(l)^p,h+6>=c.length||f.push(p)}return 1!==l?\\\"Invalid checksum for \\\"+t:{prefix:u,words:f}}function u(t,e,r,n){for(var i=0,o=0,s=(1<<r)-1,a=[],u=0;u<t.length;++u)for(i=i<<e|t[u],o+=e;o>=r;)o-=r,a.push(i>>o&s);if(n)o>0&&a.push(i<<r-o&s);else{if(o>=e)return\\\"Excess padding\\\";if(i<<r-o&s)return\\\"Non-zero padding\\\"}return a}t.exports={decodeUnsafe:function(){var t=a.apply(null,arguments);if(\\\"object\\\"==typeof t)return t},decode:function(t){var e=a.apply(null,arguments);if(\\\"object\\\"==typeof e)return e;throw new Error(e)},encode:function(t,r,n){if(n=n||90,t.length+7+r.length>n)throw new TypeError(\\\"Exceeds length limit\\\");var i=s(t=t.toLowerCase());if(\\\"string\\\"==typeof i)throw new Error(i);for(var a=t+\\\"1\\\",u=0;u<r.length;++u){var c=r[u];if(c>>5)throw new Error(\\\"Non 5-bit word\\\");i=o(i)^c,a+=e.charAt(c)}for(u=0;u<6;++u)i=o(i);for(i^=1,u=0;u<6;++u){a+=e.charAt(i>>5*(5-u)&31)}return a},toWordsUnsafe:function(t){var e=u(t,8,5,!0);if(Array.isArray(e))return e},toWords:function(t){var e=u(t,8,5,!0);if(Array.isArray(e))return e;throw new Error(e)},fromWordsUnsafe:function(t){var e=u(t,5,8,!1);if(Array.isArray(e))return e},fromWords:function(t){var e=u(t,5,8,!1);if(Array.isArray(e))return e;throw new Error(e)}}},9404:function(t,e,r){!function(t,e){\\\"use strict\\\";function n(t,e){if(!t)throw new Error(e||\\\"Assertion failed\\\")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function o(t,e,r){if(o.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&(\\\"le\\\"!==e&&\\\"be\\\"!==e||(r=e,e=10),this._init(t||0,e||10,r||\\\"be\\\"))}var s;\\\"object\\\"==typeof t?t.exports=o:e.BN=o,o.BN=o,o.wordSize=26;try{s=\\\"undefined\\\"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(7790).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=48&&r<=57?r-48:r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:void n(!1,\\\"Invalid character in \\\"+t)}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function c(t,e,r,i){for(var o=0,s=0,a=Math.min(t.length,r),u=e;u<a;u++){var c=t.charCodeAt(u)-48;o*=i,s=c>=49?c-49+10:c>=17?c-17+10:c,n(c>=0&&s<i,\\\"Invalid character\\\"),o+=s}return o}function l(t,e){t.words=e.words,t.length=e.length,t.negative=e.negative,t.red=e.red}if(o.isBN=function(t){return t instanceof o||null!==t&&\\\"object\\\"==typeof t&&t.constructor.wordSize===o.wordSize&&Array.isArray(t.words)},o.max=function(t,e){return t.cmp(e)>0?t:e},o.min=function(t,e){return t.cmp(e)<0?t:e},o.prototype._init=function(t,e,r){if(\\\"number\\\"==typeof t)return this._initNumber(t,e,r);if(\\\"object\\\"==typeof t)return this._initArray(t,e,r);\\\"hex\\\"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;\\\"-\\\"===(t=t.toString().replace(/\\\\s+/g,\\\"\\\"))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),\\\"le\\\"===r&&this._initArray(this.toArray(),e,r)))},o.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),\\\"le\\\"===r&&this._initArray(this.toArray(),e,r)},o.prototype._initArray=function(t,e,r){if(n(\\\"number\\\"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if(\\\"be\\\"===r)for(i=t.length-1,o=0;i>=0;i-=3)s=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if(\\\"le\\\"===r)for(i=0,o=0;i<t.length;i+=3)s=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this._strip()},o.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,o=0,s=0;if(\\\"be\\\"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;this._strip()},o.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var o=t.length-r,s=o%n,a=Math.min(o,o-s)+r,u=0,l=r;l<a;l+=n)u=c(t,l,l+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==s){var f=1;for(u=c(t,l,t.length,e),l=0;l<s;l++)f*=e;this.imuln(f),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this._strip()},o.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},o.prototype._move=function(t){l(t,this)},o.prototype.clone=function(){var t=new o(null);return this.copy(t),t},o.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},o.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},\\\"undefined\\\"!=typeof Symbol&&\\\"function\\\"==typeof Symbol.for)try{o.prototype[Symbol.for(\\\"nodejs.util.inspect.custom\\\")]=f}catch(t){o.prototype.inspect=f}else o.prototype.inspect=f;function f(){return(this.red?\\\"<BN-R: \\\":\\\"<BN: \\\")+this.toString(16)+\\\">\\\"}var h=[\\\"\\\",\\\"0\\\",\\\"00\\\",\\\"000\\\",\\\"0000\\\",\\\"00000\\\",\\\"000000\\\",\\\"0000000\\\",\\\"00000000\\\",\\\"000000000\\\",\\\"0000000000\\\",\\\"00000000000\\\",\\\"000000000000\\\",\\\"0000000000000\\\",\\\"00000000000000\\\",\\\"000000000000000\\\",\\\"0000000000000000\\\",\\\"00000000000000000\\\",\\\"000000000000000000\\\",\\\"0000000000000000000\\\",\\\"00000000000000000000\\\",\\\"000000000000000000000\\\",\\\"0000000000000000000000\\\",\\\"00000000000000000000000\\\",\\\"000000000000000000000000\\\",\\\"0000000000000000000000000\\\"],d=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];o.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||\\\"hex\\\"===t){r=\\\"\\\";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],u=(16777215&(a<<i|o)).toString(16);o=a>>>24-i&16777215,(i+=2)>=26&&(i-=26,s--),r=0!==o||s!==this.length-1?h[6-u.length]+u+r:u+r}for(0!==o&&(r=o.toString(16)+r);r.length%e!=0;)r=\\\"0\\\"+r;return 0!==this.negative&&(r=\\\"-\\\"+r),r}if(t===(0|t)&&t>=2&&t<=36){var c=d[t],l=p[t];r=\\\"\\\";var f=this.clone();for(f.negative=0;!f.isZero();){var g=f.modrn(l).toString(t);r=(f=f.idivn(l)).isZero()?g+r:h[c-g.length]+g+r}for(this.isZero()&&(r=\\\"0\\\"+r);r.length%e!=0;)r=\\\"0\\\"+r;return 0!==this.negative&&(r=\\\"-\\\"+r),r}n(!1,\\\"Base should be between 2 and 36\\\")},o.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,\\\"Number can only safely store up to 53 bits\\\"),0!==this.negative?-t:t},o.prototype.toJSON=function(){return this.toString(16,2)},s&&(o.prototype.toBuffer=function(t,e){return this.toArrayLike(s,t,e)}),o.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)};function g(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],o=0|e.words[0],s=i*o,a=67108863&s,u=s/67108864|0;r.words[0]=a;for(var c=1;c<n;c++){for(var l=u>>>26,f=67108863&u,h=Math.min(c,e.length-1),d=Math.max(0,c-t.length+1);d<=h;d++){var p=c-d|0;l+=(s=(i=0|t.words[p])*(o=0|e.words[d])+f)/67108864|0,f=67108863&s}r.words[c]=0|f,u=0|l}return 0!==u?r.words[c]=0|u:r.length--,r._strip()}o.prototype.toArrayLike=function(t,e,r){this._strip();var i=this.byteLength(),o=r||Math.max(1,i);n(i<=o,\\\"byte array longer than desired length\\\"),n(o>0,\\\"Requested array length <= 0\\\");var s=function(t,e){return t.allocUnsafe?t.allocUnsafe(e):new t(e)}(t,o);return this[\\\"_toArrayLike\\\"+(\\\"le\\\"===e?\\\"LE\\\":\\\"BE\\\")](s,i),s},o.prototype._toArrayLikeLE=function(t,e){for(var r=0,n=0,i=0,o=0;i<this.length;i++){var s=this.words[i]<<o|n;t[r++]=255&s,r<t.length&&(t[r++]=s>>8&255),r<t.length&&(t[r++]=s>>16&255),6===o?(r<t.length&&(t[r++]=s>>24&255),n=0,o=0):(n=s>>>24,o+=2)}if(r<t.length)for(t[r++]=n;r<t.length;)t[r++]=0},o.prototype._toArrayLikeBE=function(t,e){for(var r=t.length-1,n=0,i=0,o=0;i<this.length;i++){var s=this.words[i]<<o|n;t[r--]=255&s,r>=0&&(t[r--]=s>>8&255),r>=0&&(t[r--]=s>>16&255),6===o?(r>=0&&(t[r--]=s>>24&255),n=0,o=0):(n=s>>>24,o+=2)}if(r>=0)for(t[r--]=n;r>=0;)t[r--]=0},Math.clz32?o.prototype._countBits=function(t){return 32-Math.clz32(t)}:o.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},o.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 8191&e||(r+=13,e>>>=13),127&e||(r+=7,e>>>=7),15&e||(r+=4,e>>>=4),3&e||(r+=2,e>>>=2),1&e||r++,r},o.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},o.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this._strip()},o.prototype.ior=function(t){return n(!(this.negative|t.negative)),this.iuor(t)},o.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},o.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},o.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this._strip()},o.prototype.iand=function(t){return n(!(this.negative|t.negative)),this.iuand(t)},o.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},o.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},o.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this._strip()},o.prototype.ixor=function(t){return n(!(this.negative|t.negative)),this.iuxor(t)},o.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},o.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},o.prototype.inotn=function(t){n(\\\"number\\\"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this._strip()},o.prototype.notn=function(t){return this.clone().inotn(t)},o.prototype.setn=function(t,e){n(\\\"number\\\"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this._strip()},o.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,o=0;o<n.length;o++)e=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&e,i=e>>>26;for(;0!==i&&o<r.length;o++)e=(0|r.words[o])+i,this.words[o]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},o.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},o.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var o=0,s=0;s<n.length;s++)o=(e=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&e;for(;0!==o&&s<r.length;s++)o=(e=(0|r.words[s])+o)>>26,this.words[s]=67108863&e;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this._strip()},o.prototype.sub=function(t){return this.clone().isub(t)};var m=function(t,e,r){var n,i,o,s=t.words,a=e.words,u=r.words,c=0,l=0|s[0],f=8191&l,h=l>>>13,d=0|s[1],p=8191&d,g=d>>>13,m=0|s[2],y=8191&m,v=m>>>13,w=0|s[3],b=8191&w,A=w>>>13,E=0|s[4],S=8191&E,R=E>>>13,I=0|s[5],x=8191&I,_=I>>>13,N=0|s[6],M=8191&N,k=N>>>13,O=0|s[7],C=8191&O,P=O>>>13,B=0|s[8],T=8191&B,L=B>>>13,U=0|s[9],j=8191&U,F=U>>>13,D=0|a[0],$=8191&D,q=D>>>13,G=0|a[1],H=8191&G,z=G>>>13,J=0|a[2],K=8191&J,V=J>>>13,W=0|a[3],X=8191&W,Q=W>>>13,Y=0|a[4],Z=8191&Y,tt=Y>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],ot=8191&it,st=it>>>13,at=0|a[7],ut=8191&at,ct=at>>>13,lt=0|a[8],ft=8191&lt,ht=lt>>>13,dt=0|a[9],pt=8191&dt,gt=dt>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(c+(n=Math.imul(f,$))|0)+((8191&(i=(i=Math.imul(f,q))+Math.imul(h,$)|0))<<13)|0;c=((o=Math.imul(h,q))+(i>>>13)|0)+(mt>>>26)|0,mt&=67108863,n=Math.imul(p,$),i=(i=Math.imul(p,q))+Math.imul(g,$)|0,o=Math.imul(g,q);var yt=(c+(n=n+Math.imul(f,H)|0)|0)+((8191&(i=(i=i+Math.imul(f,z)|0)+Math.imul(h,H)|0))<<13)|0;c=((o=o+Math.imul(h,z)|0)+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(y,$),i=(i=Math.imul(y,q))+Math.imul(v,$)|0,o=Math.imul(v,q),n=n+Math.imul(p,H)|0,i=(i=i+Math.imul(p,z)|0)+Math.imul(g,H)|0,o=o+Math.imul(g,z)|0;var vt=(c+(n=n+Math.imul(f,K)|0)|0)+((8191&(i=(i=i+Math.imul(f,V)|0)+Math.imul(h,K)|0))<<13)|0;c=((o=o+Math.imul(h,V)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(b,$),i=(i=Math.imul(b,q))+Math.imul(A,$)|0,o=Math.imul(A,q),n=n+Math.imul(y,H)|0,i=(i=i+Math.imul(y,z)|0)+Math.imul(v,H)|0,o=o+Math.imul(v,z)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,V)|0)+Math.imul(g,K)|0,o=o+Math.imul(g,V)|0;var wt=(c+(n=n+Math.imul(f,X)|0)|0)+((8191&(i=(i=i+Math.imul(f,Q)|0)+Math.imul(h,X)|0))<<13)|0;c=((o=o+Math.imul(h,Q)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(S,$),i=(i=Math.imul(S,q))+Math.imul(R,$)|0,o=Math.imul(R,q),n=n+Math.imul(b,H)|0,i=(i=i+Math.imul(b,z)|0)+Math.imul(A,H)|0,o=o+Math.imul(A,z)|0,n=n+Math.imul(y,K)|0,i=(i=i+Math.imul(y,V)|0)+Math.imul(v,K)|0,o=o+Math.imul(v,V)|0,n=n+Math.imul(p,X)|0,i=(i=i+Math.imul(p,Q)|0)+Math.imul(g,X)|0,o=o+Math.imul(g,Q)|0;var bt=(c+(n=n+Math.imul(f,Z)|0)|0)+((8191&(i=(i=i+Math.imul(f,tt)|0)+Math.imul(h,Z)|0))<<13)|0;c=((o=o+Math.imul(h,tt)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,$),i=(i=Math.imul(x,q))+Math.imul(_,$)|0,o=Math.imul(_,q),n=n+Math.imul(S,H)|0,i=(i=i+Math.imul(S,z)|0)+Math.imul(R,H)|0,o=o+Math.imul(R,z)|0,n=n+Math.imul(b,K)|0,i=(i=i+Math.imul(b,V)|0)+Math.imul(A,K)|0,o=o+Math.imul(A,V)|0,n=n+Math.imul(y,X)|0,i=(i=i+Math.imul(y,Q)|0)+Math.imul(v,X)|0,o=o+Math.imul(v,Q)|0,n=n+Math.imul(p,Z)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(g,Z)|0,o=o+Math.imul(g,tt)|0;var At=(c+(n=n+Math.imul(f,rt)|0)|0)+((8191&(i=(i=i+Math.imul(f,nt)|0)+Math.imul(h,rt)|0))<<13)|0;c=((o=o+Math.imul(h,nt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(M,$),i=(i=Math.imul(M,q))+Math.imul(k,$)|0,o=Math.imul(k,q),n=n+Math.imul(x,H)|0,i=(i=i+Math.imul(x,z)|0)+Math.imul(_,H)|0,o=o+Math.imul(_,z)|0,n=n+Math.imul(S,K)|0,i=(i=i+Math.imul(S,V)|0)+Math.imul(R,K)|0,o=o+Math.imul(R,V)|0,n=n+Math.imul(b,X)|0,i=(i=i+Math.imul(b,Q)|0)+Math.imul(A,X)|0,o=o+Math.imul(A,Q)|0,n=n+Math.imul(y,Z)|0,i=(i=i+Math.imul(y,tt)|0)+Math.imul(v,Z)|0,o=o+Math.imul(v,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(g,rt)|0,o=o+Math.imul(g,nt)|0;var Et=(c+(n=n+Math.imul(f,ot)|0)|0)+((8191&(i=(i=i+Math.imul(f,st)|0)+Math.imul(h,ot)|0))<<13)|0;c=((o=o+Math.imul(h,st)|0)+(i>>>13)|0)+(Et>>>26)|0,Et&=67108863,n=Math.imul(C,$),i=(i=Math.imul(C,q))+Math.imul(P,$)|0,o=Math.imul(P,q),n=n+Math.imul(M,H)|0,i=(i=i+Math.imul(M,z)|0)+Math.imul(k,H)|0,o=o+Math.imul(k,z)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,V)|0)+Math.imul(_,K)|0,o=o+Math.imul(_,V)|0,n=n+Math.imul(S,X)|0,i=(i=i+Math.imul(S,Q)|0)+Math.imul(R,X)|0,o=o+Math.imul(R,Q)|0,n=n+Math.imul(b,Z)|0,i=(i=i+Math.imul(b,tt)|0)+Math.imul(A,Z)|0,o=o+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,i=(i=i+Math.imul(y,nt)|0)+Math.imul(v,rt)|0,o=o+Math.imul(v,nt)|0,n=n+Math.imul(p,ot)|0,i=(i=i+Math.imul(p,st)|0)+Math.imul(g,ot)|0,o=o+Math.imul(g,st)|0;var St=(c+(n=n+Math.imul(f,ut)|0)|0)+((8191&(i=(i=i+Math.imul(f,ct)|0)+Math.imul(h,ut)|0))<<13)|0;c=((o=o+Math.imul(h,ct)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(T,$),i=(i=Math.imul(T,q))+Math.imul(L,$)|0,o=Math.imul(L,q),n=n+Math.imul(C,H)|0,i=(i=i+Math.imul(C,z)|0)+Math.imul(P,H)|0,o=o+Math.imul(P,z)|0,n=n+Math.imul(M,K)|0,i=(i=i+Math.imul(M,V)|0)+Math.imul(k,K)|0,o=o+Math.imul(k,V)|0,n=n+Math.imul(x,X)|0,i=(i=i+Math.imul(x,Q)|0)+Math.imul(_,X)|0,o=o+Math.imul(_,Q)|0,n=n+Math.imul(S,Z)|0,i=(i=i+Math.imul(S,tt)|0)+Math.imul(R,Z)|0,o=o+Math.imul(R,tt)|0,n=n+Math.imul(b,rt)|0,i=(i=i+Math.imul(b,nt)|0)+Math.imul(A,rt)|0,o=o+Math.imul(A,nt)|0,n=n+Math.imul(y,ot)|0,i=(i=i+Math.imul(y,st)|0)+Math.imul(v,ot)|0,o=o+Math.imul(v,st)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ct)|0)+Math.imul(g,ut)|0,o=o+Math.imul(g,ct)|0;var Rt=(c+(n=n+Math.imul(f,ft)|0)|0)+((8191&(i=(i=i+Math.imul(f,ht)|0)+Math.imul(h,ft)|0))<<13)|0;c=((o=o+Math.imul(h,ht)|0)+(i>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,n=Math.imul(j,$),i=(i=Math.imul(j,q))+Math.imul(F,$)|0,o=Math.imul(F,q),n=n+Math.imul(T,H)|0,i=(i=i+Math.imul(T,z)|0)+Math.imul(L,H)|0,o=o+Math.imul(L,z)|0,n=n+Math.imul(C,K)|0,i=(i=i+Math.imul(C,V)|0)+Math.imul(P,K)|0,o=o+Math.imul(P,V)|0,n=n+Math.imul(M,X)|0,i=(i=i+Math.imul(M,Q)|0)+Math.imul(k,X)|0,o=o+Math.imul(k,Q)|0,n=n+Math.imul(x,Z)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(_,Z)|0,o=o+Math.imul(_,tt)|0,n=n+Math.imul(S,rt)|0,i=(i=i+Math.imul(S,nt)|0)+Math.imul(R,rt)|0,o=o+Math.imul(R,nt)|0,n=n+Math.imul(b,ot)|0,i=(i=i+Math.imul(b,st)|0)+Math.imul(A,ot)|0,o=o+Math.imul(A,st)|0,n=n+Math.imul(y,ut)|0,i=(i=i+Math.imul(y,ct)|0)+Math.imul(v,ut)|0,o=o+Math.imul(v,ct)|0,n=n+Math.imul(p,ft)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(g,ft)|0,o=o+Math.imul(g,ht)|0;var It=(c+(n=n+Math.imul(f,pt)|0)|0)+((8191&(i=(i=i+Math.imul(f,gt)|0)+Math.imul(h,pt)|0))<<13)|0;c=((o=o+Math.imul(h,gt)|0)+(i>>>13)|0)+(It>>>26)|0,It&=67108863,n=Math.imul(j,H),i=(i=Math.imul(j,z))+Math.imul(F,H)|0,o=Math.imul(F,z),n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,V)|0)+Math.imul(L,K)|0,o=o+Math.imul(L,V)|0,n=n+Math.imul(C,X)|0,i=(i=i+Math.imul(C,Q)|0)+Math.imul(P,X)|0,o=o+Math.imul(P,Q)|0,n=n+Math.imul(M,Z)|0,i=(i=i+Math.imul(M,tt)|0)+Math.imul(k,Z)|0,o=o+Math.imul(k,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(_,rt)|0,o=o+Math.imul(_,nt)|0,n=n+Math.imul(S,ot)|0,i=(i=i+Math.imul(S,st)|0)+Math.imul(R,ot)|0,o=o+Math.imul(R,st)|0,n=n+Math.imul(b,ut)|0,i=(i=i+Math.imul(b,ct)|0)+Math.imul(A,ut)|0,o=o+Math.imul(A,ct)|0,n=n+Math.imul(y,ft)|0,i=(i=i+Math.imul(y,ht)|0)+Math.imul(v,ft)|0,o=o+Math.imul(v,ht)|0;var xt=(c+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;c=((o=o+Math.imul(g,gt)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(j,K),i=(i=Math.imul(j,V))+Math.imul(F,K)|0,o=Math.imul(F,V),n=n+Math.imul(T,X)|0,i=(i=i+Math.imul(T,Q)|0)+Math.imul(L,X)|0,o=o+Math.imul(L,Q)|0,n=n+Math.imul(C,Z)|0,i=(i=i+Math.imul(C,tt)|0)+Math.imul(P,Z)|0,o=o+Math.imul(P,tt)|0,n=n+Math.imul(M,rt)|0,i=(i=i+Math.imul(M,nt)|0)+Math.imul(k,rt)|0,o=o+Math.imul(k,nt)|0,n=n+Math.imul(x,ot)|0,i=(i=i+Math.imul(x,st)|0)+Math.imul(_,ot)|0,o=o+Math.imul(_,st)|0,n=n+Math.imul(S,ut)|0,i=(i=i+Math.imul(S,ct)|0)+Math.imul(R,ut)|0,o=o+Math.imul(R,ct)|0,n=n+Math.imul(b,ft)|0,i=(i=i+Math.imul(b,ht)|0)+Math.imul(A,ft)|0,o=o+Math.imul(A,ht)|0;var _t=(c+(n=n+Math.imul(y,pt)|0)|0)+((8191&(i=(i=i+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;c=((o=o+Math.imul(v,gt)|0)+(i>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(j,X),i=(i=Math.imul(j,Q))+Math.imul(F,X)|0,o=Math.imul(F,Q),n=n+Math.imul(T,Z)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(L,Z)|0,o=o+Math.imul(L,tt)|0,n=n+Math.imul(C,rt)|0,i=(i=i+Math.imul(C,nt)|0)+Math.imul(P,rt)|0,o=o+Math.imul(P,nt)|0,n=n+Math.imul(M,ot)|0,i=(i=i+Math.imul(M,st)|0)+Math.imul(k,ot)|0,o=o+Math.imul(k,st)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ct)|0)+Math.imul(_,ut)|0,o=o+Math.imul(_,ct)|0,n=n+Math.imul(S,ft)|0,i=(i=i+Math.imul(S,ht)|0)+Math.imul(R,ft)|0,o=o+Math.imul(R,ht)|0;var Nt=(c+(n=n+Math.imul(b,pt)|0)|0)+((8191&(i=(i=i+Math.imul(b,gt)|0)+Math.imul(A,pt)|0))<<13)|0;c=((o=o+Math.imul(A,gt)|0)+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(j,Z),i=(i=Math.imul(j,tt))+Math.imul(F,Z)|0,o=Math.imul(F,tt),n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(L,rt)|0,o=o+Math.imul(L,nt)|0,n=n+Math.imul(C,ot)|0,i=(i=i+Math.imul(C,st)|0)+Math.imul(P,ot)|0,o=o+Math.imul(P,st)|0,n=n+Math.imul(M,ut)|0,i=(i=i+Math.imul(M,ct)|0)+Math.imul(k,ut)|0,o=o+Math.imul(k,ct)|0,n=n+Math.imul(x,ft)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(_,ft)|0,o=o+Math.imul(_,ht)|0;var Mt=(c+(n=n+Math.imul(S,pt)|0)|0)+((8191&(i=(i=i+Math.imul(S,gt)|0)+Math.imul(R,pt)|0))<<13)|0;c=((o=o+Math.imul(R,gt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(j,rt),i=(i=Math.imul(j,nt))+Math.imul(F,rt)|0,o=Math.imul(F,nt),n=n+Math.imul(T,ot)|0,i=(i=i+Math.imul(T,st)|0)+Math.imul(L,ot)|0,o=o+Math.imul(L,st)|0,n=n+Math.imul(C,ut)|0,i=(i=i+Math.imul(C,ct)|0)+Math.imul(P,ut)|0,o=o+Math.imul(P,ct)|0,n=n+Math.imul(M,ft)|0,i=(i=i+Math.imul(M,ht)|0)+Math.imul(k,ft)|0,o=o+Math.imul(k,ht)|0;var kt=(c+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,gt)|0)+Math.imul(_,pt)|0))<<13)|0;c=((o=o+Math.imul(_,gt)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(j,ot),i=(i=Math.imul(j,st))+Math.imul(F,ot)|0,o=Math.imul(F,st),n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ct)|0)+Math.imul(L,ut)|0,o=o+Math.imul(L,ct)|0,n=n+Math.imul(C,ft)|0,i=(i=i+Math.imul(C,ht)|0)+Math.imul(P,ft)|0,o=o+Math.imul(P,ht)|0;var Ot=(c+(n=n+Math.imul(M,pt)|0)|0)+((8191&(i=(i=i+Math.imul(M,gt)|0)+Math.imul(k,pt)|0))<<13)|0;c=((o=o+Math.imul(k,gt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(j,ut),i=(i=Math.imul(j,ct))+Math.imul(F,ut)|0,o=Math.imul(F,ct),n=n+Math.imul(T,ft)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(L,ft)|0,o=o+Math.imul(L,ht)|0;var Ct=(c+(n=n+Math.imul(C,pt)|0)|0)+((8191&(i=(i=i+Math.imul(C,gt)|0)+Math.imul(P,pt)|0))<<13)|0;c=((o=o+Math.imul(P,gt)|0)+(i>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,n=Math.imul(j,ft),i=(i=Math.imul(j,ht))+Math.imul(F,ft)|0,o=Math.imul(F,ht);var Pt=(c+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,gt)|0)+Math.imul(L,pt)|0))<<13)|0;c=((o=o+Math.imul(L,gt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863;var Bt=(c+(n=Math.imul(j,pt))|0)+((8191&(i=(i=Math.imul(j,gt))+Math.imul(F,pt)|0))<<13)|0;return c=((o=Math.imul(F,gt))+(i>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=wt,u[4]=bt,u[5]=At,u[6]=Et,u[7]=St,u[8]=Rt,u[9]=It,u[10]=xt,u[11]=_t,u[12]=Nt,u[13]=Mt,u[14]=kt,u[15]=Ot,u[16]=Ct,u[17]=Pt,u[18]=Bt,0!==c&&(u[19]=c,r.length++),r};function y(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,u=Math.min(o,e.length-1),c=Math.max(0,o-t.length+1);c<=u;c++){var l=o-c,f=(0|t.words[l])*(0|e.words[c]),h=67108863&f;a=67108863&(h=h+a|0),i+=(s=(s=s+(f/67108864|0)|0)+(h>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r._strip()}function v(t,e,r){return y(t,e,r)}function w(t,e){this.x=t,this.y=e}Math.imul||(m=g),o.prototype.mulTo=function(t,e){var r=this.length+t.length;return 10===this.length&&10===t.length?m(this,t,e):r<63?g(this,t,e):r<1024?y(this,t,e):v(this,t,e)},w.prototype.makeRBT=function(t){for(var e=new Array(t),r=o.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},w.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},w.prototype.permute=function(t,e,r,n,i,o){for(var s=0;s<o;s++)n[s]=e[t[s]],i[s]=r[t[s]]},w.prototype.transform=function(t,e,r,n,i,o){this.permute(o,t,e,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,u=Math.cos(2*Math.PI/a),c=Math.sin(2*Math.PI/a),l=0;l<i;l+=a)for(var f=u,h=c,d=0;d<s;d++){var p=r[l+d],g=n[l+d],m=r[l+d+s],y=n[l+d+s],v=f*m-h*y;y=f*y+h*m,m=v,r[l+d]=p+m,n[l+d]=g+y,r[l+d+s]=p-m,n[l+d+s]=g-y,d!==a&&(v=u*f-c*h,h=u*h+c*f,f=v)}},w.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},w.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},w.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},w.prototype.convert13b=function(t,e,r,i){for(var o=0,s=0;s<e;s++)o+=0|t[s],r[2*s]=8191&o,o>>>=13,r[2*s+1]=8191&o,o>>>=13;for(s=2*e;s<i;++s)r[s]=0;n(0===o),n(!(-8192&o))},w.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},w.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),u=new Array(n),c=new Array(n),l=new Array(n),f=new Array(n),h=r.words;h.length=n,this.convert13b(t.words,t.length,s,n),this.convert13b(e.words,e.length,c,n),this.transform(s,o,a,u,n,i),this.transform(c,o,l,f,n,i);for(var d=0;d<n;d++){var p=a[d]*l[d]-u[d]*f[d];u[d]=a[d]*f[d]+u[d]*l[d],a[d]=p}return this.conjugate(a,u,n),this.transform(a,u,h,o,n,i),this.conjugate(h,o,n),this.normalize13b(h,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r._strip()},o.prototype.mul=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},o.prototype.mulf=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),v(this,t,e)},o.prototype.imul=function(t){return this.clone().mulTo(t,this)},o.prototype.imuln=function(t){var e=t<0;e&&(t=-t),n(\\\"number\\\"==typeof t),n(t<67108864);for(var r=0,i=0;i<this.length;i++){var o=(0|this.words[i])*t,s=(67108863&o)+(67108863&r);r>>=26,r+=o/67108864|0,r+=s>>>26,this.words[i]=67108863&s}return 0!==r&&(this.words[i]=r,this.length++),e?this.ineg():this},o.prototype.muln=function(t){return this.clone().imuln(t)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=t.words[n]>>>i&1}return e}(t);if(0===e.length)return new o(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},o.prototype.iushln=function(t){n(\\\"number\\\"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var s=0;for(e=0;e<this.length;e++){var a=this.words[e]&o,u=(0|this.words[e])-a<<r;this.words[e]=u|s,s=a>>>26-r}s&&(this.words[e]=s,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this._strip()},o.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},o.prototype.iushrn=function(t,e,r){var i;n(\\\"number\\\"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var o=t%26,s=Math.min((t-o)/26,this.length),a=67108863^67108863>>>o<<o,u=r;if(i-=s,i=Math.max(0,i),u){for(var c=0;c<s;c++)u.words[c]=this.words[c];u.length=s}if(0===s);else if(this.length>s)for(this.length-=s,c=0;c<this.length;c++)this.words[c]=this.words[c+s];else this.words[0]=0,this.length=1;var l=0;for(c=this.length-1;c>=0&&(0!==l||c>=i);c--){var f=0|this.words[c];this.words[c]=l<<26-o|f>>>o,l=f&a}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},o.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},o.prototype.shln=function(t){return this.clone().ishln(t)},o.prototype.ushln=function(t){return this.clone().iushln(t)},o.prototype.shrn=function(t){return this.clone().ishrn(t)},o.prototype.ushrn=function(t){return this.clone().iushrn(t)},o.prototype.testn=function(t){n(\\\"number\\\"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},o.prototype.imaskn=function(t){n(\\\"number\\\"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,\\\"imaskn works only with positive numbers\\\"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this._strip()},o.prototype.maskn=function(t){return this.clone().imaskn(t)},o.prototype.iaddn=function(t){return n(\\\"number\\\"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<=t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},o.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},o.prototype.isubn=function(t){if(n(\\\"number\\\"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this._strip()},o.prototype.addn=function(t){return this.clone().iaddn(t)},o.prototype.subn=function(t){return this.clone().isubn(t)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(t,e,r){var i,o,s=t.length+r;this._expand(s);var a=0;for(i=0;i<t.length;i++){o=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((o-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&o}for(;i<this.length-r;i++)a=(o=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&o;if(0===a)return this._strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this._strip()},o.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,s=0|i.words[i.length-1];0!==(r=26-this._countBits(s))&&(i=i.ushln(r),n.iushln(r),s=0|i.words[i.length-1]);var a,u=n.length-i.length;if(\\\"mod\\\"!==e){(a=new o(null)).length=u+1,a.words=new Array(a.length);for(var c=0;c<a.length;c++)a.words[c]=0}var l=n.clone()._ishlnsubmul(i,1,u);0===l.negative&&(n=l,a&&(a.words[u]=1));for(var f=u-1;f>=0;f--){var h=67108864*(0|n.words[i.length+f])+(0|n.words[i.length+f-1]);for(h=Math.min(h/s|0,67108863),n._ishlnsubmul(i,h,f);0!==n.negative;)h--,n.negative=0,n._ishlnsubmul(i,1,f),n.isZero()||(n.negative^=1);a&&(a.words[f]=h)}return a&&a._strip(),n._strip(),\\\"div\\\"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},o.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),\\\"mod\\\"!==e&&(i=a.div.neg()),\\\"div\\\"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.iadd(t)),{div:i,mod:s}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),\\\"mod\\\"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):this.negative&t.negative?(a=this.neg().divmod(t.neg(),e),\\\"div\\\"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.isub(t)),{div:a.div,mod:s}):t.length>this.length||this.cmp(t)<0?{div:new o(0),mod:this}:1===t.length?\\\"div\\\"===e?{div:this.divn(t.words[0]),mod:null}:\\\"mod\\\"===e?{div:null,mod:new o(this.modrn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new o(this.modrn(t.words[0]))}:this._wordDiv(t,e);var i,s,a},o.prototype.div=function(t){return this.divmod(t,\\\"div\\\",!1).div},o.prototype.mod=function(t){return this.divmod(t,\\\"mod\\\",!1).mod},o.prototype.umod=function(t){return this.divmod(t,\\\"mod\\\",!0).mod},o.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},o.prototype.modrn=function(t){var e=t<0;e&&(t=-t),n(t<=67108863);for(var r=(1<<26)%t,i=0,o=this.length-1;o>=0;o--)i=(r*i+(0|this.words[o]))%t;return e?-i:i},o.prototype.modn=function(t){return this.modrn(t)},o.prototype.idivn=function(t){var e=t<0;e&&(t=-t),n(t<=67108863);for(var r=0,i=this.length-1;i>=0;i--){var o=(0|this.words[i])+67108864*r;this.words[i]=o/t|0,r=o%t}return this._strip(),e?this.ineg():this},o.prototype.divn=function(t){return this.clone().idivn(t)},o.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new o(1),s=new o(0),a=new o(0),u=new o(1),c=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++c;for(var l=r.clone(),f=e.clone();!e.isZero();){for(var h=0,d=1;!(e.words[0]&d)&&h<26;++h,d<<=1);if(h>0)for(e.iushrn(h);h-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(l),s.isub(f)),i.iushrn(1),s.iushrn(1);for(var p=0,g=1;!(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(l),u.isub(f)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),s.isub(u)):(r.isub(e),a.isub(i),u.isub(s))}return{a,b:u,gcd:r.iushln(c)}},o.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,s=new o(1),a=new o(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var c=0,l=1;!(e.words[0]&l)&&c<26;++c,l<<=1);if(c>0)for(e.iushrn(c);c-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);for(var f=0,h=1;!(r.words[0]&h)&&f<26;++f,h<<=1);if(f>0)for(r.iushrn(f);f-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),s.isub(a)):(r.isub(e),a.isub(s))}return(i=0===e.cmpn(1)?s:a).cmpn(0)<0&&i.iadd(t),i},o.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var o=e;e=r,r=o}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},o.prototype.invm=function(t){return this.egcd(t).a.umod(t)},o.prototype.isEven=function(){return!(1&this.words[0])},o.prototype.isOdd=function(){return!(1&~this.words[0])},o.prototype.andln=function(t){return this.words[0]&t},o.prototype.bincn=function(t){n(\\\"number\\\"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var o=i,s=r;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this._strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,\\\"Number is too big\\\");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},o.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},o.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},o.prototype.gtn=function(t){return 1===this.cmpn(t)},o.prototype.gt=function(t){return 1===this.cmp(t)},o.prototype.gten=function(t){return this.cmpn(t)>=0},o.prototype.gte=function(t){return this.cmp(t)>=0},o.prototype.ltn=function(t){return-1===this.cmpn(t)},o.prototype.lt=function(t){return-1===this.cmp(t)},o.prototype.lten=function(t){return this.cmpn(t)<=0},o.prototype.lte=function(t){return this.cmp(t)<=0},o.prototype.eqn=function(t){return 0===this.cmpn(t)},o.prototype.eq=function(t){return 0===this.cmp(t)},o.red=function(t){return new x(t)},o.prototype.toRed=function(t){return n(!this.red,\\\"Already a number in reduction context\\\"),n(0===this.negative,\\\"red works only with positives\\\"),t.convertTo(this)._forceRed(t)},o.prototype.fromRed=function(){return n(this.red,\\\"fromRed works only with numbers in reduction context\\\"),this.red.convertFrom(this)},o.prototype._forceRed=function(t){return this.red=t,this},o.prototype.forceRed=function(t){return n(!this.red,\\\"Already a number in reduction context\\\"),this._forceRed(t)},o.prototype.redAdd=function(t){return n(this.red,\\\"redAdd works only with red numbers\\\"),this.red.add(this,t)},o.prototype.redIAdd=function(t){return n(this.red,\\\"redIAdd works only with red numbers\\\"),this.red.iadd(this,t)},o.prototype.redSub=function(t){return n(this.red,\\\"redSub works only with red numbers\\\"),this.red.sub(this,t)},o.prototype.redISub=function(t){return n(this.red,\\\"redISub works only with red numbers\\\"),this.red.isub(this,t)},o.prototype.redShl=function(t){return n(this.red,\\\"redShl works only with red numbers\\\"),this.red.shl(this,t)},o.prototype.redMul=function(t){return n(this.red,\\\"redMul works only with red numbers\\\"),this.red._verify2(this,t),this.red.mul(this,t)},o.prototype.redIMul=function(t){return n(this.red,\\\"redMul works only with red numbers\\\"),this.red._verify2(this,t),this.red.imul(this,t)},o.prototype.redSqr=function(){return n(this.red,\\\"redSqr works only with red numbers\\\"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,\\\"redISqr works only with red numbers\\\"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,\\\"redSqrt works only with red numbers\\\"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,\\\"redInvm works only with red numbers\\\"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,\\\"redNeg works only with red numbers\\\"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(t){return n(this.red&&!t.red,\\\"redPow(normalNum)\\\"),this.red._verify1(this),this.red.pow(this,t)};var b={k256:null,p224:null,p192:null,p25519:null};function A(t,e){this.name=t,this.p=new o(e,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function E(){A.call(this,\\\"k256\\\",\\\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\\\")}function S(){A.call(this,\\\"p224\\\",\\\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\\\")}function R(){A.call(this,\\\"p192\\\",\\\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\\\")}function I(){A.call(this,\\\"25519\\\",\\\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\\\")}function x(t){if(\\\"string\\\"==typeof t){var e=o._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),\\\"modulus must be greater than 1\\\"),this.m=t,this.prime=null}function _(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}A.prototype._tmp=function(){var t=new o(null);return t.words=new Array(Math.ceil(this.n/13)),t},A.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},A.prototype.split=function(t,e){t.iushrn(this.n,0,e)},A.prototype.imulK=function(t){return t.imul(this.k)},i(E,A),E.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var o=t.words[9];for(e.words[e.length++]=o&r,i=10;i<t.length;i++){var s=0|t.words[i];t.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,t.words[i-10]=o,0===o&&t.length>10?t.length-=10:t.length-=9},E.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(S,A),i(R,A),i(I,A),I.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},o._prime=function(t){if(b[t])return b[t];var e;if(\\\"k256\\\"===t)e=new E;else if(\\\"p224\\\"===t)e=new S;else if(\\\"p192\\\"===t)e=new R;else{if(\\\"p25519\\\"!==t)throw new Error(\\\"Unknown prime \\\"+t);e=new I}return b[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,\\\"red works only with positives\\\"),n(t.red,\\\"red works only with red numbers\\\")},x.prototype._verify2=function(t,e){n(!(t.negative|e.negative),\\\"red works only with positives\\\"),n(t.red&&t.red===e.red,\\\"red works only with red numbers\\\")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):(l(t,t.umod(this.m)._forceRed(this)),t)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new o(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),s=0;!i.isZero()&&0===i.andln(1);)s++,i.iushrn(1);n(!i.isZero());var a=new o(1).toRed(this),u=a.redNeg(),c=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new o(2*l*l).toRed(this);0!==this.pow(l,c).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,i),h=this.pow(t,i.addn(1).iushrn(1)),d=this.pow(t,i),p=s;0!==d.cmp(a);){for(var g=d,m=0;0!==g.cmp(a);m++)g=g.redSqr();n(m<p);var y=this.pow(f,new o(1).iushln(p-m-1));h=h.redMul(y),f=y.redSqr(),d=d.redMul(f),p=m}return h},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new o(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],s=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var c=e.words[n],l=u-1;l>=0;l--){var f=c>>l&1;i!==r[0]&&(i=this.sqr(i)),0!==f||0!==s?(s<<=1,s|=f,(4===++a||0===n&&0===l)&&(i=this.mul(i,r[s]),a=0,s=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},o.mont=function(t){return new _(t)},i(_,x),_.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},_.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},_.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},_.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new o(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},_.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},8287:(t,e,r)=>{\\\"use strict\\\";const n=r(7526),i=r(251),o=\\\"function\\\"==typeof Symbol&&\\\"function\\\"==typeof Symbol.for?Symbol.for(\\\"nodejs.util.inspect.custom\\\"):null;e.hp=u,e.IS=50;const s=2147483647;function a(t){if(t>s)throw new RangeError('The value \\\"'+t+'\\\" is invalid for option \\\"size\\\"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,u.prototype),e}function u(t,e,r){if(\\\"number\\\"==typeof t){if(\\\"string\\\"==typeof e)throw new TypeError('The \\\"string\\\" argument must be of type string. Received type number');return f(t)}return c(t,e,r)}function c(t,e,r){if(\\\"string\\\"==typeof t)return function(t,e){\\\"string\\\"==typeof e&&\\\"\\\"!==e||(e=\\\"utf8\\\");if(!u.isEncoding(e))throw new TypeError(\\\"Unknown encoding: \\\"+e);const r=0|g(t,e);let n=a(r);const i=n.write(t,e);i!==r&&(n=n.slice(0,i));return n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(W(t,Uint8Array)){const e=new Uint8Array(t);return d(e.buffer,e.byteOffset,e.byteLength)}return h(t)}(t);if(null==t)throw new TypeError(\\\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \\\"+typeof t);if(W(t,ArrayBuffer)||t&&W(t.buffer,ArrayBuffer))return d(t,e,r);if(\\\"undefined\\\"!=typeof SharedArrayBuffer&&(W(t,SharedArrayBuffer)||t&&W(t.buffer,SharedArrayBuffer)))return d(t,e,r);if(\\\"number\\\"==typeof t)throw new TypeError('The \\\"value\\\" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return u.from(n,e,r);const i=function(t){if(u.isBuffer(t)){const e=0|p(t.length),r=a(e);return 0===r.length||t.copy(r,0,0,e),r}if(void 0!==t.length)return\\\"number\\\"!=typeof t.length||X(t.length)?a(0):h(t);if(\\\"Buffer\\\"===t.type&&Array.isArray(t.data))return h(t.data)}(t);if(i)return i;if(\\\"undefined\\\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\\\"function\\\"==typeof t[Symbol.toPrimitive])return u.from(t[Symbol.toPrimitive](\\\"string\\\"),e,r);throw new TypeError(\\\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \\\"+typeof t)}function l(t){if(\\\"number\\\"!=typeof t)throw new TypeError('\\\"size\\\" argument must be of type number');if(t<0)throw new RangeError('The value \\\"'+t+'\\\" is invalid for option \\\"size\\\"')}function f(t){return l(t),a(t<0?0:0|p(t))}function h(t){const e=t.length<0?0:0|p(t.length),r=a(e);for(let n=0;n<e;n+=1)r[n]=255&t[n];return r}function d(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('\\\"offset\\\" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('\\\"length\\\" is outside of buffer bounds');let n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,u.prototype),n}function p(t){if(t>=s)throw new RangeError(\\\"Attempt to allocate Buffer larger than maximum size: 0x\\\"+s.toString(16)+\\\" bytes\\\");return 0|t}function g(t,e){if(u.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||W(t,ArrayBuffer))return t.byteLength;if(\\\"string\\\"!=typeof t)throw new TypeError('The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(e){case\\\"ascii\\\":case\\\"latin1\\\":case\\\"binary\\\":return r;case\\\"utf8\\\":case\\\"utf-8\\\":return J(t).length;case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return 2*r;case\\\"hex\\\":return r>>>1;case\\\"base64\\\":return K(t).length;default:if(i)return n?-1:J(t).length;e=(\\\"\\\"+e).toLowerCase(),i=!0}}function m(t,e,r){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\\\"\\\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\\\"\\\";if((r>>>=0)<=(e>>>=0))return\\\"\\\";for(t||(t=\\\"utf8\\\");;)switch(t){case\\\"hex\\\":return k(this,e,r);case\\\"utf8\\\":case\\\"utf-8\\\":return x(this,e,r);case\\\"ascii\\\":return N(this,e,r);case\\\"latin1\\\":case\\\"binary\\\":return M(this,e,r);case\\\"base64\\\":return I(this,e,r);case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return O(this,e,r);default:if(n)throw new TypeError(\\\"Unknown encoding: \\\"+t);t=(t+\\\"\\\").toLowerCase(),n=!0}}function y(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function v(t,e,r,n,i){if(0===t.length)return-1;if(\\\"string\\\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),X(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\\\"string\\\"==typeof e&&(e=u.from(e,n)),u.isBuffer(e))return 0===e.length?-1:w(t,e,r,n,i);if(\\\"number\\\"==typeof e)return e&=255,\\\"function\\\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):w(t,[e],r,n,i);throw new TypeError(\\\"val must be string, number or Buffer\\\")}function w(t,e,r,n,i){let o,s=1,a=t.length,u=e.length;if(void 0!==n&&(\\\"ucs2\\\"===(n=String(n).toLowerCase())||\\\"ucs-2\\\"===n||\\\"utf16le\\\"===n||\\\"utf-16le\\\"===n)){if(t.length<2||e.length<2)return-1;s=2,a/=2,u/=2,r/=2}function c(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(i){let n=-1;for(o=r;o<a;o++)if(c(t,o)===c(e,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===u)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+u>a&&(r=a-u),o=r;o>=0;o--){let r=!0;for(let n=0;n<u;n++)if(c(t,o+n)!==c(e,n)){r=!1;break}if(r)return o}return-1}function b(t,e,r,n){r=Number(r)||0;const i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=e.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(e.substr(2*s,2),16);if(X(n))return s;t[r+s]=n}return s}function A(t,e,r,n){return V(J(e,t.length-r),t,r,n)}function E(t,e,r,n){return V(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function S(t,e,r,n){return V(K(e),t,r,n)}function R(t,e,r,n){return V(function(t,e){let r,n,i;const o=[];for(let s=0;s<t.length&&!((e-=2)<0);++s)r=t.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function I(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function x(t,e,r){r=Math.min(t.length,r);const n=[];let i=e;for(;i<r;){const e=t[i];let o=null,s=e>239?4:e>223?3:e>191?2:1;if(i+s<=r){let r,n,a,u;switch(s){case 1:e<128&&(o=e);break;case 2:r=t[i+1],128==(192&r)&&(u=(31&e)<<6|63&r,u>127&&(o=u));break;case 3:r=t[i+1],n=t[i+2],128==(192&r)&&128==(192&n)&&(u=(15&e)<<12|(63&r)<<6|63&n,u>2047&&(u<55296||u>57343)&&(o=u));break;case 4:r=t[i+1],n=t[i+2],a=t[i+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(u=(15&e)<<18|(63&r)<<12|(63&n)<<6|63&a,u>65535&&u<1114112&&(o=u))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(t){const e=t.length;if(e<=_)return String.fromCharCode.apply(String,t);let r=\\\"\\\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=_));return r}(n)}u.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),u.TYPED_ARRAY_SUPPORT||\\\"undefined\\\"==typeof console||\\\"function\\\"!=typeof console.error||console.error(\\\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\\\"),Object.defineProperty(u.prototype,\\\"parent\\\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,\\\"offset\\\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(t,e,r){return c(t,e,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(t,e,r){return function(t,e,r){return l(t),t<=0?a(t):void 0!==e?\\\"string\\\"==typeof r?a(t).fill(e,r):a(t).fill(e):a(t)}(t,e,r)},u.allocUnsafe=function(t){return f(t)},u.allocUnsafeSlow=function(t){return f(t)},u.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==u.prototype},u.compare=function(t,e){if(W(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),W(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError('The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case\\\"hex\\\":case\\\"utf8\\\":case\\\"utf-8\\\":case\\\"ascii\\\":case\\\"latin1\\\":case\\\"binary\\\":case\\\"base64\\\":case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return!0;default:return!1}},u.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\\\"list\\\" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const n=u.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(W(e,Uint8Array))i+e.length>n.length?(u.isBuffer(e)||(e=u.from(e)),e.copy(n,i)):Uint8Array.prototype.set.call(n,e,i);else{if(!u.isBuffer(e))throw new TypeError('\\\"list\\\" argument must be an Array of Buffers');e.copy(n,i)}i+=e.length}return n},u.byteLength=g,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError(\\\"Buffer size must be a multiple of 16-bits\\\");for(let e=0;e<t;e+=2)y(this,e,e+1);return this},u.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError(\\\"Buffer size must be a multiple of 32-bits\\\");for(let e=0;e<t;e+=4)y(this,e,e+3),y(this,e+1,e+2);return this},u.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError(\\\"Buffer size must be a multiple of 64-bits\\\");for(let e=0;e<t;e+=8)y(this,e,e+7),y(this,e+1,e+6),y(this,e+2,e+5),y(this,e+3,e+4);return this},u.prototype.toString=function(){const t=this.length;return 0===t?\\\"\\\":0===arguments.length?x(this,0,t):m.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError(\\\"Argument must be a Buffer\\\");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){let t=\\\"\\\";const r=e.IS;return t=this.toString(\\\"hex\\\",0,r).replace(/(.{2})/g,\\\"$1 \\\").trim(),this.length>r&&(t+=\\\" ... \\\"),\\\"<Buffer \\\"+t+\\\">\\\"},o&&(u.prototype[o]=u.prototype.inspect),u.prototype.compare=function(t,e,r,n,i){if(W(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(t))throw new TypeError('The \\\"target\\\" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError(\\\"out of range index\\\");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0);const a=Math.min(o,s),c=this.slice(n,i),l=t.slice(e,r);for(let t=0;t<a;++t)if(c[t]!==l[t]){o=c[t],s=l[t];break}return o<s?-1:s<o?1:0},u.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},u.prototype.indexOf=function(t,e,r){return v(this,t,e,r,!0)},u.prototype.lastIndexOf=function(t,e,r){return v(this,t,e,r,!1)},u.prototype.write=function(t,e,r,n){if(void 0===e)n=\\\"utf8\\\",r=this.length,e=0;else if(void 0===r&&\\\"string\\\"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error(\\\"Buffer.write(string, encoding, offset[, length]) is no longer supported\\\");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\\\"utf8\\\")):(n=r,r=void 0)}const i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError(\\\"Attempt to write outside buffer bounds\\\");n||(n=\\\"utf8\\\");let o=!1;for(;;)switch(n){case\\\"hex\\\":return b(this,t,e,r);case\\\"utf8\\\":case\\\"utf-8\\\":return A(this,t,e,r);case\\\"ascii\\\":case\\\"latin1\\\":case\\\"binary\\\":return E(this,t,e,r);case\\\"base64\\\":return S(this,t,e,r);case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return R(this,t,e,r);default:if(o)throw new TypeError(\\\"Unknown encoding: \\\"+n);n=(\\\"\\\"+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:\\\"Buffer\\\",data:Array.prototype.slice.call(this._arr||this,0)}};const _=4096;function N(t,e,r){let n=\\\"\\\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function M(t,e,r){let n=\\\"\\\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function k(t,e,r){const n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);let i=\\\"\\\";for(let n=e;n<r;++n)i+=Q[t[n]];return i}function O(t,e,r){const n=t.slice(e,r);let i=\\\"\\\";for(let t=0;t<n.length-1;t+=2)i+=String.fromCharCode(n[t]+256*n[t+1]);return i}function C(t,e,r){if(t%1!=0||t<0)throw new RangeError(\\\"offset is not uint\\\");if(t+e>r)throw new RangeError(\\\"Trying to access beyond buffer length\\\")}function P(t,e,r,n,i,o){if(!u.isBuffer(t))throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('\\\"value\\\" argument is out of bounds');if(r+n>t.length)throw new RangeError(\\\"Index out of range\\\")}function B(t,e,r,n,i){q(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,r}function T(t,e,r,n,i){q(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r+7]=o,o>>=8,t[r+6]=o,o>>=8,t[r+5]=o,o>>=8,t[r+4]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=s,s>>=8,t[r+2]=s,s>>=8,t[r+1]=s,s>>=8,t[r]=s,r+8}function L(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError(\\\"Index out of range\\\");if(r<0)throw new RangeError(\\\"Index out of range\\\")}function U(t,e,r,n,o){return e=+e,r>>>=0,o||L(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function j(t,e,r,n,o){return e=+e,r>>>=0,o||L(t,0,r,8),i.write(t,e,r,n,52,8),r+8}u.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||C(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||C(t,e,this.length);let n=this[t+--e],i=1;for(;e>0&&(i*=256);)n+=this[t+--e]*i;return n},u.prototype.readUint8=u.prototype.readUInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),this[t]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readBigUInt64LE=Y((function(t){G(t>>>=0,\\\"offset\\\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||H(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,i=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),u.prototype.readBigUInt64BE=Y((function(t){G(t>>>=0,\\\"offset\\\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||H(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],i=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),u.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||C(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*e)),n},u.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||C(t,e,this.length);let n=e,i=1,o=this[t+--n];for(;n>0&&(i*=256);)o+=this[t+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},u.prototype.readInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){t>>>=0,e||C(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(t,e){t>>>=0,e||C(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readBigInt64LE=Y((function(t){G(t>>>=0,\\\"offset\\\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||H(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),u.prototype.readBigInt64BE=Y((function(t){G(t>>>=0,\\\"offset\\\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||H(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),u.prototype.readFloatLE=function(t,e){return t>>>=0,e||C(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return t>>>=0,e||C(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return t>>>=0,e||C(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return t>>>=0,e||C(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){P(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){P(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,1,255,0),this[e]=255&t,e+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigUInt64LE=Y((function(t,e=0){return B(this,t,e,BigInt(0),BigInt(\\\"0xffffffffffffffff\\\"))})),u.prototype.writeBigUInt64BE=Y((function(t,e=0){return T(this,t,e,BigInt(0),BigInt(\\\"0xffffffffffffffff\\\"))})),u.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);P(this,t,e,r,n-1,-n)}let i=0,o=1,s=0;for(this[e]=255&t;++i<r&&(o*=256);)t<0&&0===s&&0!==this[e+i-1]&&(s=1),this[e+i]=(t/o|0)-s&255;return e+r},u.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);P(this,t,e,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[e+i]=255&t;--i>=0&&(o*=256);)t<0&&0===s&&0!==this[e+i+1]&&(s=1),this[e+i]=(t/o|0)-s&255;return e+r},u.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},u.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||P(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigInt64LE=Y((function(t,e=0){return B(this,t,e,-BigInt(\\\"0x8000000000000000\\\"),BigInt(\\\"0x7fffffffffffffff\\\"))})),u.prototype.writeBigInt64BE=Y((function(t,e=0){return T(this,t,e,-BigInt(\\\"0x8000000000000000\\\"),BigInt(\\\"0x7fffffffffffffff\\\"))})),u.prototype.writeFloatLE=function(t,e,r){return U(this,t,e,!0,r)},u.prototype.writeFloatBE=function(t,e,r){return U(this,t,e,!1,r)},u.prototype.writeDoubleLE=function(t,e,r){return j(this,t,e,!0,r)},u.prototype.writeDoubleBE=function(t,e,r){return j(this,t,e,!1,r)},u.prototype.copy=function(t,e,r,n){if(!u.isBuffer(t))throw new TypeError(\\\"argument should be a Buffer\\\");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\\\"targetStart out of bounds\\\");if(r<0||r>=this.length)throw new RangeError(\\\"Index out of range\\\");if(n<0)throw new RangeError(\\\"sourceEnd out of bounds\\\");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);const i=n-r;return this===t&&\\\"function\\\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),i},u.prototype.fill=function(t,e,r,n){if(\\\"string\\\"==typeof t){if(\\\"string\\\"==typeof e?(n=e,e=0,r=this.length):\\\"string\\\"==typeof r&&(n=r,r=this.length),void 0!==n&&\\\"string\\\"!=typeof n)throw new TypeError(\\\"encoding must be a string\\\");if(\\\"string\\\"==typeof n&&!u.isEncoding(n))throw new TypeError(\\\"Unknown encoding: \\\"+n);if(1===t.length){const e=t.charCodeAt(0);(\\\"utf8\\\"===n&&e<128||\\\"latin1\\\"===n)&&(t=e)}}else\\\"number\\\"==typeof t?t&=255:\\\"boolean\\\"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError(\\\"Out of range index\\\");if(r<=e)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),\\\"number\\\"==typeof t)for(i=e;i<r;++i)this[i]=t;else{const o=u.isBuffer(t)?t:u.from(t,n),s=o.length;if(0===s)throw new TypeError('The value \\\"'+t+'\\\" is invalid for argument \\\"value\\\"');for(i=0;i<r-e;++i)this[i+e]=o[i%s]}return this};const F={};function D(t,e,r){F[t]=class extends r{constructor(){super(),Object.defineProperty(this,\\\"message\\\",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,\\\"code\\\",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function $(t){let e=\\\"\\\",r=t.length;const n=\\\"-\\\"===t[0]?1:0;for(;r>=n+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function q(t,e,r,n,i,o){if(t>r||t<e){const n=\\\"bigint\\\"==typeof e?\\\"n\\\":\\\"\\\";let i;throw i=o>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${e}${n} and <= ${r}${n}`,new F.ERR_OUT_OF_RANGE(\\\"value\\\",i,t)}!function(t,e,r){G(e,\\\"offset\\\"),void 0!==t[e]&&void 0!==t[e+r]||H(e,t.length-(r+1))}(n,i,o)}function G(t,e){if(\\\"number\\\"!=typeof t)throw new F.ERR_INVALID_ARG_TYPE(e,\\\"number\\\",t)}function H(t,e,r){if(Math.floor(t)!==t)throw G(t,r),new F.ERR_OUT_OF_RANGE(r||\\\"offset\\\",\\\"an integer\\\",t);if(e<0)throw new F.ERR_BUFFER_OUT_OF_BOUNDS;throw new F.ERR_OUT_OF_RANGE(r||\\\"offset\\\",`>= ${r?1:0} and <= ${e}`,t)}D(\\\"ERR_BUFFER_OUT_OF_BOUNDS\\\",(function(t){return t?`${t} is outside of buffer bounds`:\\\"Attempt to access memory outside buffer bounds\\\"}),RangeError),D(\\\"ERR_INVALID_ARG_TYPE\\\",(function(t,e){return`The \\\"${t}\\\" argument must be of type number. Received type ${typeof e}`}),TypeError),D(\\\"ERR_OUT_OF_RANGE\\\",(function(t,e,r){let n=`The value of \\\"${t}\\\" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=$(String(r)):\\\"bigint\\\"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=$(i)),i+=\\\"n\\\"),n+=` It must be ${e}. Received ${i}`,n}),RangeError);const z=/[^+/0-9A-Za-z-_]/g;function J(t,e){let r;e=e||1/0;const n=t.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=t.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\\\"Invalid code point\\\");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function K(t){return n.toByteArray(function(t){if((t=(t=t.split(\\\"=\\\")[0]).trim().replace(z,\\\"\\\")).length<2)return\\\"\\\";for(;t.length%4!=0;)t+=\\\"=\\\";return t}(t))}function V(t,e,r,n){let i;for(i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function W(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function X(t){return t!=t}const Q=function(){const t=\\\"0123456789abcdef\\\",e=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)e[n+i]=t[r]+t[i]}return e}();function Y(t){return\\\"undefined\\\"==typeof BigInt?Z:t}function Z(){throw new Error(\\\"BigInt not supported\\\")}},8e3:t=>{var e=1e3,r=60*e,n=60*r,i=24*n,o=7*i,s=365.25*i;function a(t,e,r,n){var i=e>=1.5*r;return Math.round(t/r)+\\\" \\\"+n+(i?\\\"s\\\":\\\"\\\")}t.exports=function(t,u){u=u||{};var c=typeof t;if(\\\"string\\\"===c&&t.length>0)return function(t){if((t=String(t)).length>100)return;var a=/^(-?(?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(!a)return;var u=parseFloat(a[1]);switch((a[2]||\\\"ms\\\").toLowerCase()){case\\\"years\\\":case\\\"year\\\":case\\\"yrs\\\":case\\\"yr\\\":case\\\"y\\\":return u*s;case\\\"weeks\\\":case\\\"week\\\":case\\\"w\\\":return u*o;case\\\"days\\\":case\\\"day\\\":case\\\"d\\\":return u*i;case\\\"hours\\\":case\\\"hour\\\":case\\\"hrs\\\":case\\\"hr\\\":case\\\"h\\\":return u*n;case\\\"minutes\\\":case\\\"minute\\\":case\\\"mins\\\":case\\\"min\\\":case\\\"m\\\":return u*r;case\\\"seconds\\\":case\\\"second\\\":case\\\"secs\\\":case\\\"sec\\\":case\\\"s\\\":return u*e;case\\\"milliseconds\\\":case\\\"millisecond\\\":case\\\"msecs\\\":case\\\"msec\\\":case\\\"ms\\\":return u;default:return}}(t);if(\\\"number\\\"===c&&isFinite(t))return u.long?function(t){var o=Math.abs(t);if(o>=i)return a(t,o,i,\\\"day\\\");if(o>=n)return a(t,o,n,\\\"hour\\\");if(o>=r)return a(t,o,r,\\\"minute\\\");if(o>=e)return a(t,o,e,\\\"second\\\");return t+\\\" ms\\\"}(t):function(t){var o=Math.abs(t);if(o>=i)return Math.round(t/i)+\\\"d\\\";if(o>=n)return Math.round(t/n)+\\\"h\\\";if(o>=r)return Math.round(t/r)+\\\"m\\\";if(o>=e)return Math.round(t/e)+\\\"s\\\";return t+\\\"ms\\\"}(t);throw new Error(\\\"val is not a non-empty string or a valid number. val=\\\"+JSON.stringify(t))}},7833:(t,e,r)=>{e.formatArgs=function(e){if(e[0]=(this.useColors?\\\"%c\\\":\\\"\\\")+this.namespace+(this.useColors?\\\" %c\\\":\\\" \\\")+e[0]+(this.useColors?\\\"%c \\\":\\\" \\\")+\\\"+\\\"+t.exports.humanize(this.diff),!this.useColors)return;const r=\\\"color: \\\"+this.color;e.splice(1,0,r,\\\"color: inherit\\\");let n=0,i=0;e[0].replace(/%[a-zA-Z%]/g,(t=>{\\\"%%\\\"!==t&&(n++,\\\"%c\\\"===t&&(i=n))})),e.splice(i,0,r)},e.save=function(t){try{t?e.storage.setItem(\\\"debug\\\",t):e.storage.removeItem(\\\"debug\\\")}catch(t){}},e.load=function(){let t;try{t=e.storage.getItem(\\\"debug\\\")}catch(t){}!t&&\\\"undefined\\\"!=typeof process&&\\\"env\\\"in process&&(t=\\\"false\\\");return t},e.useColors=function(){if(\\\"undefined\\\"!=typeof window&&window.process&&(\\\"renderer\\\"===window.process.type||window.process.__nwjs))return!0;if(\\\"undefined\\\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\\\/(\\\\d+)/))return!1;let t;return\\\"undefined\\\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\\\"undefined\\\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\\\"undefined\\\"!=typeof navigator&&navigator.userAgent&&(t=navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/))&&parseInt(t[1],10)>=31||\\\"undefined\\\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\\\/(\\\\d+)/)},e.storage=function(){try{return localStorage}catch(t){}}(),e.destroy=(()=>{let t=!1;return()=>{t||(t=!0,console.warn(\\\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\\\"))}})(),e.colors=[\\\"#0000CC\\\",\\\"#0000FF\\\",\\\"#0033CC\\\",\\\"#0033FF\\\",\\\"#0066CC\\\",\\\"#0066FF\\\",\\\"#0099CC\\\",\\\"#0099FF\\\",\\\"#00CC00\\\",\\\"#00CC33\\\",\\\"#00CC66\\\",\\\"#00CC99\\\",\\\"#00CCCC\\\",\\\"#00CCFF\\\",\\\"#3300CC\\\",\\\"#3300FF\\\",\\\"#3333CC\\\",\\\"#3333FF\\\",\\\"#3366CC\\\",\\\"#3366FF\\\",\\\"#3399CC\\\",\\\"#3399FF\\\",\\\"#33CC00\\\",\\\"#33CC33\\\",\\\"#33CC66\\\",\\\"#33CC99\\\",\\\"#33CCCC\\\",\\\"#33CCFF\\\",\\\"#6600CC\\\",\\\"#6600FF\\\",\\\"#6633CC\\\",\\\"#6633FF\\\",\\\"#66CC00\\\",\\\"#66CC33\\\",\\\"#9900CC\\\",\\\"#9900FF\\\",\\\"#9933CC\\\",\\\"#9933FF\\\",\\\"#99CC00\\\",\\\"#99CC33\\\",\\\"#CC0000\\\",\\\"#CC0033\\\",\\\"#CC0066\\\",\\\"#CC0099\\\",\\\"#CC00CC\\\",\\\"#CC00FF\\\",\\\"#CC3300\\\",\\\"#CC3333\\\",\\\"#CC3366\\\",\\\"#CC3399\\\",\\\"#CC33CC\\\",\\\"#CC33FF\\\",\\\"#CC6600\\\",\\\"#CC6633\\\",\\\"#CC9900\\\",\\\"#CC9933\\\",\\\"#CCCC00\\\",\\\"#CCCC33\\\",\\\"#FF0000\\\",\\\"#FF0033\\\",\\\"#FF0066\\\",\\\"#FF0099\\\",\\\"#FF00CC\\\",\\\"#FF00FF\\\",\\\"#FF3300\\\",\\\"#FF3333\\\",\\\"#FF3366\\\",\\\"#FF3399\\\",\\\"#FF33CC\\\",\\\"#FF33FF\\\",\\\"#FF6600\\\",\\\"#FF6633\\\",\\\"#FF9900\\\",\\\"#FF9933\\\",\\\"#FFCC00\\\",\\\"#FFCC33\\\"],e.log=console.debug||console.log||(()=>{}),t.exports=r(736)(e);const{formatters:n}=t.exports;n.j=function(t){try{return JSON.stringify(t)}catch(t){return\\\"[UnexpectedJSONParseError]: \\\"+t.message}}},736:(t,e,r)=>{t.exports=function(t){function e(t){let r,i,o,s=null;function a(...t){if(!a.enabled)return;const n=a,i=Number(new Date),o=i-(r||i);n.diff=o,n.prev=r,n.curr=i,r=i,t[0]=e.coerce(t[0]),\\\"string\\\"!=typeof t[0]&&t.unshift(\\\"%O\\\");let s=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,((r,i)=>{if(\\\"%%\\\"===r)return\\\"%\\\";s++;const o=e.formatters[i];if(\\\"function\\\"==typeof o){const e=t[s];r=o.call(n,e),t.splice(s,1),s--}return r})),e.formatArgs.call(n,t);(n.log||e.log).apply(n,t)}return a.namespace=t,a.useColors=e.useColors(),a.color=e.selectColor(t),a.extend=n,a.destroy=e.destroy,Object.defineProperty(a,\\\"enabled\\\",{enumerable:!0,configurable:!1,get:()=>null!==s?s:(i!==e.namespaces&&(i=e.namespaces,o=e.enabled(t)),o),set:t=>{s=t}}),\\\"function\\\"==typeof e.init&&e.init(a),a}function n(t,r){const n=e(this.namespace+(void 0===r?\\\":\\\":r)+t);return n.log=this.log,n}function i(t){return t.toString().substring(2,t.toString().length-2).replace(/\\\\.\\\\*\\\\?$/,\\\"*\\\")}return e.debug=e,e.default=e,e.coerce=function(t){if(t instanceof Error)return t.stack||t.message;return t},e.disable=function(){const t=[...e.names.map(i),...e.skips.map(i).map((t=>\\\"-\\\"+t))].join(\\\",\\\");return e.enable(\\\"\\\"),t},e.enable=function(t){let r;e.save(t),e.namespaces=t,e.names=[],e.skips=[];const n=(\\\"string\\\"==typeof t?t:\\\"\\\").split(/[\\\\s,]+/),i=n.length;for(r=0;r<i;r++)n[r]&&(\\\"-\\\"===(t=n[r].replace(/\\\\*/g,\\\".*?\\\"))[0]?e.skips.push(new RegExp(\\\"^\\\"+t.slice(1)+\\\"$\\\")):e.names.push(new RegExp(\\\"^\\\"+t+\\\"$\\\")))},e.enabled=function(t){if(\\\"*\\\"===t[t.length-1])return!0;let r,n;for(r=0,n=e.skips.length;r<n;r++)if(e.skips[r].test(t))return!1;for(r=0,n=e.names.length;r<n;r++)if(e.names[r].test(t))return!0;return!1},e.humanize=r(8e3),e.destroy=function(){console.warn(\\\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\\\")},Object.keys(t).forEach((r=>{e[r]=t[r]})),e.names=[],e.skips=[],e.formatters={},e.selectColor=function(t){let r=0;for(let e=0;e<t.length;e++)r=(r<<5)-r+t.charCodeAt(e),r|=0;return e.colors[Math.abs(r)%e.colors.length]},e.enable(e.load()),e}},7007:t=>{\\\"use strict\\\";var e,r=\\\"object\\\"==typeof Reflect?Reflect:null,n=r&&\\\"function\\\"==typeof r.apply?r.apply:function(t,e,r){return Function.prototype.apply.call(t,e,r)};e=r&&\\\"function\\\"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var i=Number.isNaN||function(t){return t!=t};function o(){o.init.call(this)}t.exports=o,t.exports.once=function(t,e){return new Promise((function(r,n){function i(r){t.removeListener(e,o),n(r)}function o(){\\\"function\\\"==typeof t.removeListener&&t.removeListener(\\\"error\\\",i),r([].slice.call(arguments))}g(t,e,o,{once:!0}),\\\"error\\\"!==e&&function(t,e,r){\\\"function\\\"==typeof t.on&&g(t,\\\"error\\\",e,r)}(t,i,{once:!0})}))},o.EventEmitter=o,o.prototype._events=void 0,o.prototype._eventsCount=0,o.prototype._maxListeners=void 0;var s=10;function a(t){if(\\\"function\\\"!=typeof t)throw new TypeError('The \\\"listener\\\" argument must be of type Function. Received type '+typeof t)}function u(t){return void 0===t._maxListeners?o.defaultMaxListeners:t._maxListeners}function c(t,e,r,n){var i,o,s,c;if(a(r),void 0===(o=t._events)?(o=t._events=Object.create(null),t._eventsCount=0):(void 0!==o.newListener&&(t.emit(\\\"newListener\\\",e,r.listener?r.listener:r),o=t._events),s=o[e]),void 0===s)s=o[e]=r,++t._eventsCount;else if(\\\"function\\\"==typeof s?s=o[e]=n?[r,s]:[s,r]:n?s.unshift(r):s.push(r),(i=u(t))>0&&s.length>i&&!s.warned){s.warned=!0;var l=new Error(\\\"Possible EventEmitter memory leak detected. \\\"+s.length+\\\" \\\"+String(e)+\\\" listeners added. Use emitter.setMaxListeners() to increase limit\\\");l.name=\\\"MaxListenersExceededWarning\\\",l.emitter=t,l.type=e,l.count=s.length,c=l,console&&console.warn&&console.warn(c)}return t}function l(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function f(t,e,r){var n={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},i=l.bind(n);return i.listener=r,n.wrapFn=i,i}function h(t,e,r){var n=t._events;if(void 0===n)return[];var i=n[e];return void 0===i?[]:\\\"function\\\"==typeof i?r?[i.listener||i]:[i]:r?function(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}(i):p(i,i.length)}function d(t){var e=this._events;if(void 0!==e){var r=e[t];if(\\\"function\\\"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function p(t,e){for(var r=new Array(e),n=0;n<e;++n)r[n]=t[n];return r}function g(t,e,r,n){if(\\\"function\\\"==typeof t.on)n.once?t.once(e,r):t.on(e,r);else{if(\\\"function\\\"!=typeof t.addEventListener)throw new TypeError('The \\\"emitter\\\" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function i(o){n.once&&t.removeEventListener(e,i),r(o)}))}}Object.defineProperty(o,\\\"defaultMaxListeners\\\",{enumerable:!0,get:function(){return s},set:function(t){if(\\\"number\\\"!=typeof t||t<0||i(t))throw new RangeError('The value of \\\"defaultMaxListeners\\\" is out of range. It must be a non-negative number. Received '+t+\\\".\\\");s=t}}),o.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(t){if(\\\"number\\\"!=typeof t||t<0||i(t))throw new RangeError('The value of \\\"n\\\" is out of range. It must be a non-negative number. Received '+t+\\\".\\\");return this._maxListeners=t,this},o.prototype.getMaxListeners=function(){return u(this)},o.prototype.emit=function(t){for(var e=[],r=1;r<arguments.length;r++)e.push(arguments[r]);var i=\\\"error\\\"===t,o=this._events;if(void 0!==o)i=i&&void 0===o.error;else if(!i)return!1;if(i){var s;if(e.length>0&&(s=e[0]),s instanceof Error)throw s;var a=new Error(\\\"Unhandled error.\\\"+(s?\\\" (\\\"+s.message+\\\")\\\":\\\"\\\"));throw a.context=s,a}var u=o[t];if(void 0===u)return!1;if(\\\"function\\\"==typeof u)n(u,this,e);else{var c=u.length,l=p(u,c);for(r=0;r<c;++r)n(l[r],this,e)}return!0},o.prototype.addListener=function(t,e){return c(this,t,e,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(t,e){return c(this,t,e,!0)},o.prototype.once=function(t,e){return a(e),this.on(t,f(this,t,e)),this},o.prototype.prependOnceListener=function(t,e){return a(e),this.prependListener(t,f(this,t,e)),this},o.prototype.removeListener=function(t,e){var r,n,i,o,s;if(a(e),void 0===(n=this._events))return this;if(void 0===(r=n[t]))return this;if(r===e||r.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete n[t],n.removeListener&&this.emit(\\\"removeListener\\\",t,r.listener||e));else if(\\\"function\\\"!=typeof r){for(i=-1,o=r.length-1;o>=0;o--)if(r[o]===e||r[o].listener===e){s=r[o].listener,i=o;break}if(i<0)return this;0===i?r.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(r,i),1===r.length&&(n[t]=r[0]),void 0!==n.removeListener&&this.emit(\\\"removeListener\\\",t,s||e)}return this},o.prototype.off=o.prototype.removeListener,o.prototype.removeAllListeners=function(t){var e,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[t]),this;if(0===arguments.length){var i,o=Object.keys(r);for(n=0;n<o.length;++n)\\\"removeListener\\\"!==(i=o[n])&&this.removeAllListeners(i);return this.removeAllListeners(\\\"removeListener\\\"),this._events=Object.create(null),this._eventsCount=0,this}if(\\\"function\\\"==typeof(e=r[t]))this.removeListener(t,e);else if(void 0!==e)for(n=e.length-1;n>=0;n--)this.removeListener(t,e[n]);return this},o.prototype.listeners=function(t){return h(this,t,!0)},o.prototype.rawListeners=function(t){return h(this,t,!1)},o.listenerCount=function(t,e){return\\\"function\\\"==typeof t.listenerCount?t.listenerCount(e):d.call(t,e)},o.prototype.listenerCount=d,o.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]}},8463:t=>{t.exports=s,s.default=s,s.stable=l,s.stableStringify=l;var e=\\\"[...]\\\",r=\\\"[Circular]\\\",n=[],i=[];function o(){return{depthLimit:Number.MAX_SAFE_INTEGER,edgesLimit:Number.MAX_SAFE_INTEGER}}function s(t,e,r,s){var a;void 0===s&&(s=o()),u(t,\\\"\\\",0,[],void 0,0,s);try{a=0===i.length?JSON.stringify(t,e,r):JSON.stringify(t,h(e),r)}catch(t){return JSON.stringify(\\\"[unable to serialize, circular reference is too complex to analyze]\\\")}finally{for(;0!==n.length;){var c=n.pop();4===c.length?Object.defineProperty(c[0],c[1],c[3]):c[0][c[1]]=c[2]}}return a}function a(t,e,r,o){var s=Object.getOwnPropertyDescriptor(o,r);void 0!==s.get?s.configurable?(Object.defineProperty(o,r,{value:t}),n.push([o,r,e,s])):i.push([e,r,t]):(o[r]=t,n.push([o,r,e]))}function u(t,n,i,o,s,c,l){var f;if(c+=1,\\\"object\\\"==typeof t&&null!==t){for(f=0;f<o.length;f++)if(o[f]===t)return void a(r,t,n,s);if(void 0!==l.depthLimit&&c>l.depthLimit)return void a(e,t,n,s);if(void 0!==l.edgesLimit&&i+1>l.edgesLimit)return void a(e,t,n,s);if(o.push(t),Array.isArray(t))for(f=0;f<t.length;f++)u(t[f],f,f,o,t,c,l);else{var h=Object.keys(t);for(f=0;f<h.length;f++){var d=h[f];u(t[d],d,f,o,t,c,l)}}o.pop()}}function c(t,e){return t<e?-1:t>e?1:0}function l(t,e,r,s){void 0===s&&(s=o());var a,u=f(t,\\\"\\\",0,[],void 0,0,s)||t;try{a=0===i.length?JSON.stringify(u,e,r):JSON.stringify(u,h(e),r)}catch(t){return JSON.stringify(\\\"[unable to serialize, circular reference is too complex to analyze]\\\")}finally{for(;0!==n.length;){var c=n.pop();4===c.length?Object.defineProperty(c[0],c[1],c[3]):c[0][c[1]]=c[2]}}return a}function f(t,i,o,s,u,l,h){var d;if(l+=1,\\\"object\\\"==typeof t&&null!==t){for(d=0;d<s.length;d++)if(s[d]===t)return void a(r,t,i,u);try{if(\\\"function\\\"==typeof t.toJSON)return}catch(t){return}if(void 0!==h.depthLimit&&l>h.depthLimit)return void a(e,t,i,u);if(void 0!==h.edgesLimit&&o+1>h.edgesLimit)return void a(e,t,i,u);if(s.push(t),Array.isArray(t))for(d=0;d<t.length;d++)f(t[d],d,d,s,t,l,h);else{var p={},g=Object.keys(t).sort(c);for(d=0;d<g.length;d++){var m=g[d];f(t[m],m,d,s,t,l,h),p[m]=t[m]}if(void 0===u)return p;n.push([u,i,t]),u[i]=p}s.pop()}}function h(t){return t=void 0!==t?t:function(t,e){return e},function(e,r){if(i.length>0)for(var n=0;n<i.length;n++){var o=i[n];if(o[1]===e&&o[0]===r){r=o[2],i.splice(n,1);break}}return t.call(this,e,r)}}},7952:(t,e,r)=>{var n=e;n.utils=r(7426),n.common=r(6166),n.sha=r(6229),n.ripemd=r(6784),n.hmac=r(8948),n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160},6166:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(3349);function o(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian=\\\"big\\\",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}e.BlockHash=o,o.prototype.update=function(t,e){if(t=n.toArray(t,e),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var r=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-r,t.length),0===this.pending.length&&(this.pending=null),t=n.join32(t,0,t.length-r,this.endian);for(var i=0;i<t.length;i+=this._delta32)this._update(t,i,i+this._delta32)}return this},o.prototype.digest=function(t){return this.update(this._pad()),i(null===this.pending),this._digest(t)},o.prototype._pad=function(){var t=this.pendingTotal,e=this._delta8,r=e-(t+this.padLength)%e,n=new Array(r+this.padLength);n[0]=128;for(var i=1;i<r;i++)n[i]=0;if(t<<=3,\\\"big\\\"===this.endian){for(var o=8;o<this.padLength;o++)n[i++]=0;n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=t>>>24&255,n[i++]=t>>>16&255,n[i++]=t>>>8&255,n[i++]=255&t}else for(n[i++]=255&t,n[i++]=t>>>8&255,n[i++]=t>>>16&255,n[i++]=t>>>24&255,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,o=8;o<this.padLength;o++)n[i++]=0;return n}},8948:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(3349);function o(t,e,r){if(!(this instanceof o))return new o(t,e,r);this.Hash=t,this.blockSize=t.blockSize/8,this.outSize=t.outSize/8,this.inner=null,this.outer=null,this._init(n.toArray(e,r))}t.exports=o,o.prototype._init=function(t){t.length>this.blockSize&&(t=(new this.Hash).update(t).digest()),i(t.length<=this.blockSize);for(var e=t.length;e<this.blockSize;e++)t.push(0);for(e=0;e<t.length;e++)t[e]^=54;for(this.inner=(new this.Hash).update(t),e=0;e<t.length;e++)t[e]^=106;this.outer=(new this.Hash).update(t)},o.prototype.update=function(t,e){return this.inner.update(t,e),this},o.prototype.digest=function(t){return this.outer.update(this.inner.digest()),this.outer.digest(t)}},6784:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(6166),o=n.rotl32,s=n.sum32,a=n.sum32_3,u=n.sum32_4,c=i.BlockHash;function l(){if(!(this instanceof l))return new l;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian=\\\"little\\\"}function f(t,e,r,n){return t<=15?e^r^n:t<=31?e&r|~e&n:t<=47?(e|~r)^n:t<=63?e&n|r&~n:e^(r|~n)}function h(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function d(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}n.inherits(l,c),e.ripemd160=l,l.blockSize=512,l.outSize=160,l.hmacStrength=192,l.padLength=64,l.prototype._update=function(t,e){for(var r=this.h[0],n=this.h[1],i=this.h[2],c=this.h[3],l=this.h[4],v=r,w=n,b=i,A=c,E=l,S=0;S<80;S++){var R=s(o(u(r,f(S,n,i,c),t[p[S]+e],h(S)),m[S]),l);r=l,l=c,c=o(i,10),i=n,n=R,R=s(o(u(v,f(79-S,w,b,A),t[g[S]+e],d(S)),y[S]),E),v=E,E=A,A=o(b,10),b=w,w=R}R=a(this.h[1],i,A),this.h[1]=a(this.h[2],c,E),this.h[2]=a(this.h[3],l,v),this.h[3]=a(this.h[4],r,w),this.h[4]=a(this.h[0],n,b),this.h[0]=R},l.prototype._digest=function(t){return\\\"hex\\\"===t?n.toHex32(this.h,\\\"little\\\"):n.split32(this.h,\\\"little\\\")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],g=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],m=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],y=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},6229:(t,e,r)=>{\\\"use strict\\\";e.sha1=r(3917),e.sha224=r(7714),e.sha256=r(2287),e.sha384=r(1911),e.sha512=r(7766)},3917:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(6166),o=r(6225),s=n.rotl32,a=n.sum32,u=n.sum32_5,c=o.ft_1,l=i.BlockHash,f=[1518500249,1859775393,2400959708,3395469782];function h(){if(!(this instanceof h))return new h;l.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}n.inherits(h,l),t.exports=h,h.blockSize=512,h.outSize=160,h.hmacStrength=80,h.padLength=64,h.prototype._update=function(t,e){for(var r=this.W,n=0;n<16;n++)r[n]=t[e+n];for(;n<r.length;n++)r[n]=s(r[n-3]^r[n-8]^r[n-14]^r[n-16],1);var i=this.h[0],o=this.h[1],l=this.h[2],h=this.h[3],d=this.h[4];for(n=0;n<r.length;n++){var p=~~(n/20),g=u(s(i,5),c(p,o,l,h),d,r[n],f[p]);d=h,h=l,l=s(o,30),o=i,i=g}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],o),this.h[2]=a(this.h[2],l),this.h[3]=a(this.h[3],h),this.h[4]=a(this.h[4],d)},h.prototype._digest=function(t){return\\\"hex\\\"===t?n.toHex32(this.h,\\\"big\\\"):n.split32(this.h,\\\"big\\\")}},7714:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(2287);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}n.inherits(o,i),t.exports=o,o.blockSize=512,o.outSize=224,o.hmacStrength=192,o.padLength=64,o.prototype._digest=function(t){return\\\"hex\\\"===t?n.toHex32(this.h.slice(0,7),\\\"big\\\"):n.split32(this.h.slice(0,7),\\\"big\\\")}},2287:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(6166),o=r(6225),s=r(3349),a=n.sum32,u=n.sum32_4,c=n.sum32_5,l=o.ch32,f=o.maj32,h=o.s0_256,d=o.s1_256,p=o.g0_256,g=o.g1_256,m=i.BlockHash,y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function v(){if(!(this instanceof v))return new v;m.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=y,this.W=new Array(64)}n.inherits(v,m),t.exports=v,v.blockSize=512,v.outSize=256,v.hmacStrength=192,v.padLength=64,v.prototype._update=function(t,e){for(var r=this.W,n=0;n<16;n++)r[n]=t[e+n];for(;n<r.length;n++)r[n]=u(g(r[n-2]),r[n-7],p(r[n-15]),r[n-16]);var i=this.h[0],o=this.h[1],m=this.h[2],y=this.h[3],v=this.h[4],w=this.h[5],b=this.h[6],A=this.h[7];for(s(this.k.length===r.length),n=0;n<r.length;n++){var E=c(A,d(v),l(v,w,b),this.k[n],r[n]),S=a(h(i),f(i,o,m));A=b,b=w,w=v,v=a(y,E),y=m,m=o,o=i,i=a(E,S)}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],o),this.h[2]=a(this.h[2],m),this.h[3]=a(this.h[3],y),this.h[4]=a(this.h[4],v),this.h[5]=a(this.h[5],w),this.h[6]=a(this.h[6],b),this.h[7]=a(this.h[7],A)},v.prototype._digest=function(t){return\\\"hex\\\"===t?n.toHex32(this.h,\\\"big\\\"):n.split32(this.h,\\\"big\\\")}},1911:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(7766);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}n.inherits(o,i),t.exports=o,o.blockSize=1024,o.outSize=384,o.hmacStrength=192,o.padLength=128,o.prototype._digest=function(t){return\\\"hex\\\"===t?n.toHex32(this.h.slice(0,12),\\\"big\\\"):n.split32(this.h.slice(0,12),\\\"big\\\")}},7766:(t,e,r)=>{\\\"use strict\\\";var n=r(7426),i=r(6166),o=r(3349),s=n.rotr64_hi,a=n.rotr64_lo,u=n.shr64_hi,c=n.shr64_lo,l=n.sum64,f=n.sum64_hi,h=n.sum64_lo,d=n.sum64_4_hi,p=n.sum64_4_lo,g=n.sum64_5_hi,m=n.sum64_5_lo,y=i.BlockHash,v=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function w(){if(!(this instanceof w))return new w;y.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=v,this.W=new Array(160)}function b(t,e,r,n,i){var o=t&r^~t&i;return o<0&&(o+=4294967296),o}function A(t,e,r,n,i,o){var s=e&n^~e&o;return s<0&&(s+=4294967296),s}function E(t,e,r,n,i){var o=t&r^t&i^r&i;return o<0&&(o+=4294967296),o}function S(t,e,r,n,i,o){var s=e&n^e&o^n&o;return s<0&&(s+=4294967296),s}function R(t,e){var r=s(t,e,28)^s(e,t,2)^s(e,t,7);return r<0&&(r+=4294967296),r}function I(t,e){var r=a(t,e,28)^a(e,t,2)^a(e,t,7);return r<0&&(r+=4294967296),r}function x(t,e){var r=s(t,e,14)^s(t,e,18)^s(e,t,9);return r<0&&(r+=4294967296),r}function _(t,e){var r=a(t,e,14)^a(t,e,18)^a(e,t,9);return r<0&&(r+=4294967296),r}function N(t,e){var r=s(t,e,1)^s(t,e,8)^u(t,e,7);return r<0&&(r+=4294967296),r}function M(t,e){var r=a(t,e,1)^a(t,e,8)^c(t,e,7);return r<0&&(r+=4294967296),r}function k(t,e){var r=s(t,e,19)^s(e,t,29)^u(t,e,6);return r<0&&(r+=4294967296),r}function O(t,e){var r=a(t,e,19)^a(e,t,29)^c(t,e,6);return r<0&&(r+=4294967296),r}n.inherits(w,y),t.exports=w,w.blockSize=1024,w.outSize=512,w.hmacStrength=192,w.padLength=128,w.prototype._prepareBlock=function(t,e){for(var r=this.W,n=0;n<32;n++)r[n]=t[e+n];for(;n<r.length;n+=2){var i=k(r[n-4],r[n-3]),o=O(r[n-4],r[n-3]),s=r[n-14],a=r[n-13],u=N(r[n-30],r[n-29]),c=M(r[n-30],r[n-29]),l=r[n-32],f=r[n-31];r[n]=d(i,o,s,a,u,c,l,f),r[n+1]=p(i,o,s,a,u,c,l,f)}},w.prototype._update=function(t,e){this._prepareBlock(t,e);var r=this.W,n=this.h[0],i=this.h[1],s=this.h[2],a=this.h[3],u=this.h[4],c=this.h[5],d=this.h[6],p=this.h[7],y=this.h[8],v=this.h[9],w=this.h[10],N=this.h[11],M=this.h[12],k=this.h[13],O=this.h[14],C=this.h[15];o(this.k.length===r.length);for(var P=0;P<r.length;P+=2){var B=O,T=C,L=x(y,v),U=_(y,v),j=b(y,v,w,N,M),F=A(y,v,w,N,M,k),D=this.k[P],$=this.k[P+1],q=r[P],G=r[P+1],H=g(B,T,L,U,j,F,D,$,q,G),z=m(B,T,L,U,j,F,D,$,q,G);B=R(n,i),T=I(n,i),L=E(n,i,s,a,u),U=S(n,i,s,a,u,c);var J=f(B,T,L,U),K=h(B,T,L,U);O=M,C=k,M=w,k=N,w=y,N=v,y=f(d,p,H,z),v=h(p,p,H,z),d=u,p=c,u=s,c=a,s=n,a=i,n=f(H,z,J,K),i=h(H,z,J,K)}l(this.h,0,n,i),l(this.h,2,s,a),l(this.h,4,u,c),l(this.h,6,d,p),l(this.h,8,y,v),l(this.h,10,w,N),l(this.h,12,M,k),l(this.h,14,O,C)},w.prototype._digest=function(t){return\\\"hex\\\"===t?n.toHex32(this.h,\\\"big\\\"):n.split32(this.h,\\\"big\\\")}},6225:(t,e,r)=>{\\\"use strict\\\";var n=r(7426).rotr32;function i(t,e,r){return t&e^~t&r}function o(t,e,r){return t&e^t&r^e&r}function s(t,e,r){return t^e^r}e.ft_1=function(t,e,r,n){return 0===t?i(e,r,n):1===t||3===t?s(e,r,n):2===t?o(e,r,n):void 0},e.ch32=i,e.maj32=o,e.p32=s,e.s0_256=function(t){return n(t,2)^n(t,13)^n(t,22)},e.s1_256=function(t){return n(t,6)^n(t,11)^n(t,25)},e.g0_256=function(t){return n(t,7)^n(t,18)^t>>>3},e.g1_256=function(t){return n(t,17)^n(t,19)^t>>>10}},7426:(t,e,r)=>{\\\"use strict\\\";var n=r(3349),i=r(6698);function o(t,e){return 55296==(64512&t.charCodeAt(e))&&(!(e<0||e+1>=t.length)&&56320==(64512&t.charCodeAt(e+1)))}function s(t){return(t>>>24|t>>>8&65280|t<<8&16711680|(255&t)<<24)>>>0}function a(t){return 1===t.length?\\\"0\\\"+t:t}function u(t){return 7===t.length?\\\"0\\\"+t:6===t.length?\\\"00\\\"+t:5===t.length?\\\"000\\\"+t:4===t.length?\\\"0000\\\"+t:3===t.length?\\\"00000\\\"+t:2===t.length?\\\"000000\\\"+t:1===t.length?\\\"0000000\\\"+t:t}e.inherits=i,e.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if(\\\"string\\\"==typeof t)if(e){if(\\\"hex\\\"===e)for((t=t.replace(/[^a-z0-9]+/gi,\\\"\\\")).length%2!=0&&(t=\\\"0\\\"+t),i=0;i<t.length;i+=2)r.push(parseInt(t[i]+t[i+1],16))}else for(var n=0,i=0;i<t.length;i++){var s=t.charCodeAt(i);s<128?r[n++]=s:s<2048?(r[n++]=s>>6|192,r[n++]=63&s|128):o(t,i)?(s=65536+((1023&s)<<10)+(1023&t.charCodeAt(++i)),r[n++]=s>>18|240,r[n++]=s>>12&63|128,r[n++]=s>>6&63|128,r[n++]=63&s|128):(r[n++]=s>>12|224,r[n++]=s>>6&63|128,r[n++]=63&s|128)}else for(i=0;i<t.length;i++)r[i]=0|t[i];return r},e.toHex=function(t){for(var e=\\\"\\\",r=0;r<t.length;r++)e+=a(t[r].toString(16));return e},e.htonl=s,e.toHex32=function(t,e){for(var r=\\\"\\\",n=0;n<t.length;n++){var i=t[n];\\\"little\\\"===e&&(i=s(i)),r+=u(i.toString(16))}return r},e.zero2=a,e.zero8=u,e.join32=function(t,e,r,i){var o=r-e;n(o%4==0);for(var s=new Array(o/4),a=0,u=e;a<s.length;a++,u+=4){var c;c=\\\"big\\\"===i?t[u]<<24|t[u+1]<<16|t[u+2]<<8|t[u+3]:t[u+3]<<24|t[u+2]<<16|t[u+1]<<8|t[u],s[a]=c>>>0}return s},e.split32=function(t,e){for(var r=new Array(4*t.length),n=0,i=0;n<t.length;n++,i+=4){var o=t[n];\\\"big\\\"===e?(r[i]=o>>>24,r[i+1]=o>>>16&255,r[i+2]=o>>>8&255,r[i+3]=255&o):(r[i+3]=o>>>24,r[i+2]=o>>>16&255,r[i+1]=o>>>8&255,r[i]=255&o)}return r},e.rotr32=function(t,e){return t>>>e|t<<32-e},e.rotl32=function(t,e){return t<<e|t>>>32-e},e.sum32=function(t,e){return t+e>>>0},e.sum32_3=function(t,e,r){return t+e+r>>>0},e.sum32_4=function(t,e,r,n){return t+e+r+n>>>0},e.sum32_5=function(t,e,r,n,i){return t+e+r+n+i>>>0},e.sum64=function(t,e,r,n){var i=t[e],o=n+t[e+1]>>>0,s=(o<n?1:0)+r+i;t[e]=s>>>0,t[e+1]=o},e.sum64_hi=function(t,e,r,n){return(e+n>>>0<e?1:0)+t+r>>>0},e.sum64_lo=function(t,e,r,n){return e+n>>>0},e.sum64_4_hi=function(t,e,r,n,i,o,s,a){var u=0,c=e;return u+=(c=c+n>>>0)<e?1:0,u+=(c=c+o>>>0)<o?1:0,t+r+i+s+(u+=(c=c+a>>>0)<a?1:0)>>>0},e.sum64_4_lo=function(t,e,r,n,i,o,s,a){return e+n+o+a>>>0},e.sum64_5_hi=function(t,e,r,n,i,o,s,a,u,c){var l=0,f=e;return l+=(f=f+n>>>0)<e?1:0,l+=(f=f+o>>>0)<o?1:0,l+=(f=f+a>>>0)<a?1:0,t+r+i+s+u+(l+=(f=f+c>>>0)<c?1:0)>>>0},e.sum64_5_lo=function(t,e,r,n,i,o,s,a,u,c){return e+n+o+a+c>>>0},e.rotr64_hi=function(t,e,r){return(e<<32-r|t>>>r)>>>0},e.rotr64_lo=function(t,e,r){return(t<<32-r|e>>>r)>>>0},e.shr64_hi=function(t,e,r){return t>>>r},e.shr64_lo=function(t,e,r){return(t<<32-r|e>>>r)>>>0}},251:(t,e)=>{e.read=function(t,e,r,n,i){var o,s,a=8*i-n-1,u=(1<<a)-1,c=u>>1,l=-7,f=r?i-1:0,h=r?-1:1,d=t[e+f];for(f+=h,o=d&(1<<-l)-1,d>>=-l,l+=a;l>0;o=256*o+t[e+f],f+=h,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=n;l>0;s=256*s+t[e+f],f+=h,l-=8);if(0===o)o=1-c;else{if(o===u)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,n),o-=c}return(d?-1:1)*s*Math.pow(2,o-n)},e.write=function(t,e,r,n,i,o){var s,a,u,c=8*o-i-1,l=(1<<c)-1,f=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,p=n?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=l):(s=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-s))<1&&(s--,u*=2),(e+=s+f>=1?h/u:h*Math.pow(2,1-f))*u>=2&&(s++,u/=2),s+f>=l?(a=0,s=l):s+f>=1?(a=(e*u-1)*Math.pow(2,i),s+=f):(a=e*Math.pow(2,f-1)*Math.pow(2,i),s=0));i>=8;t[r+d]=255&a,d+=p,a/=256,i-=8);for(s=s<<i|a,c+=i;c>0;t[r+d]=255&s,d+=p,s/=256,c-=8);t[r+d-p]|=128*g}},6698:t=>{\\\"function\\\"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}}},3349:t=>{function e(t,e){if(!t)throw new Error(e||\\\"Assertion failed\\\")}t.exports=e,e.equal=function(t,e,r){if(t!=e)throw new Error(r||\\\"Assertion failed: \\\"+t+\\\" != \\\"+e)}},1843:(t,e,r)=>{\\\"use strict\\\";const{ErrorWithCause:n}=r(5832),{findCauseByReference:i,getErrorCause:o,messageWithCauses:s,stackWithCauses:a}=r(4306);t.exports={ErrorWithCause:n,findCauseByReference:i,getErrorCause:o,stackWithCauses:a,messageWithCauses:s}},5832:t=>{\\\"use strict\\\";class e extends Error{constructor(t,{cause:r}={}){super(t),this.name=e.name,r&&(this.cause=r),this.message=t}}t.exports={ErrorWithCause:e}},4306:t=>{\\\"use strict\\\";const e=t=>{if(t&&\\\"object\\\"==typeof t&&\\\"cause\\\"in t){if(\\\"function\\\"==typeof t.cause){const e=t.cause();return e instanceof Error?e:void 0}return t.cause instanceof Error?t.cause:void 0}},r=(t,n)=>{if(!(t instanceof Error))return\\\"\\\";const i=t.stack||\\\"\\\";if(n.has(t))return i+\\\"\\\\ncauses have become circular...\\\";const o=e(t);return o?(n.add(t),i+\\\"\\\\ncaused by: \\\"+r(o,n)):i},n=(t,r,i)=>{if(!(t instanceof Error))return\\\"\\\";const o=i?\\\"\\\":t.message||\\\"\\\";if(r.has(t))return o+\\\": ...\\\";const s=e(t);if(s){r.add(t);const e=\\\"cause\\\"in t&&\\\"function\\\"==typeof t.cause;return o+(e?\\\"\\\":\\\": \\\")+n(s,r,e)}return o};t.exports={findCauseByReference:(t,r)=>{if(!t||!r)return;if(!(t instanceof Error))return;if(!(r.prototype instanceof Error)&&r!==Error)return;const n=new Set;let i=t;for(;i&&!n.has(i);){if(n.add(i),i instanceof r)return i;i=e(i)}},getErrorCause:e,stackWithCauses:t=>r(t,new Set),messageWithCauses:t=>n(t,new Set)}},3904:(t,e,r)=>{const n=Symbol(\\\"SemVer ANY\\\");class i{static get ANY(){return n}constructor(t,e){if(e=o(e),t instanceof i){if(t.loose===!!e.loose)return t;t=t.value}t=t.trim().split(/\\\\s+/).join(\\\" \\\"),c(\\\"comparator\\\",t,e),this.options=e,this.loose=!!e.loose,this.parse(t),this.semver===n?this.value=\\\"\\\":this.value=this.operator+this.semver.version,c(\\\"comp\\\",this)}parse(t){const e=this.options.loose?s[a.COMPARATORLOOSE]:s[a.COMPARATOR],r=t.match(e);if(!r)throw new TypeError(`Invalid comparator: ${t}`);this.operator=void 0!==r[1]?r[1]:\\\"\\\",\\\"=\\\"===this.operator&&(this.operator=\\\"\\\"),r[2]?this.semver=new l(r[2],this.options.loose):this.semver=n}toString(){return this.value}test(t){if(c(\\\"Comparator.test\\\",t,this.options.loose),this.semver===n||t===n)return!0;if(\\\"string\\\"==typeof t)try{t=new l(t,this.options)}catch(t){return!1}return u(t,this.operator,this.semver,this.options)}intersects(t,e){if(!(t instanceof i))throw new TypeError(\\\"a Comparator is required\\\");return\\\"\\\"===this.operator?\\\"\\\"===this.value||new f(t.value,e).test(this.value):\\\"\\\"===t.operator?\\\"\\\"===t.value||new f(this.value,e).test(t.semver):(!(e=o(e)).includePrerelease||\\\"<0.0.0-0\\\"!==this.value&&\\\"<0.0.0-0\\\"!==t.value)&&(!(!e.includePrerelease&&(this.value.startsWith(\\\"<0.0.0\\\")||t.value.startsWith(\\\"<0.0.0\\\")))&&(!(!this.operator.startsWith(\\\">\\\")||!t.operator.startsWith(\\\">\\\"))||(!(!this.operator.startsWith(\\\"<\\\")||!t.operator.startsWith(\\\"<\\\"))||(!(this.semver.version!==t.semver.version||!this.operator.includes(\\\"=\\\")||!t.operator.includes(\\\"=\\\"))||(!!(u(this.semver,\\\"<\\\",t.semver,e)&&this.operator.startsWith(\\\">\\\")&&t.operator.startsWith(\\\"<\\\"))||!!(u(this.semver,\\\">\\\",t.semver,e)&&this.operator.startsWith(\\\"<\\\")&&t.operator.startsWith(\\\">\\\")))))))}}t.exports=i;const o=r(8587),{safeRe:s,t:a}=r(9718),u=r(2111),c=r(7272),l=r(3908),f=r(8311)},8311:(t,e,r)=>{const n=/\\\\s+/g;class i{constructor(t,e){if(e=s(e),t instanceof i)return t.loose===!!e.loose&&t.includePrerelease===!!e.includePrerelease?t:new i(t.raw,e);if(t instanceof a)return this.raw=t.value,this.set=[[t]],this.formatted=void 0,this;if(this.options=e,this.loose=!!e.loose,this.includePrerelease=!!e.includePrerelease,this.raw=t.trim().replace(n,\\\" \\\"),this.set=this.raw.split(\\\"||\\\").map((t=>this.parseRange(t.trim()))).filter((t=>t.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const t=this.set[0];if(this.set=this.set.filter((t=>!y(t[0]))),0===this.set.length)this.set=[t];else if(this.set.length>1)for(const t of this.set)if(1===t.length&&v(t[0])){this.set=[t];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted=\\\"\\\";for(let t=0;t<this.set.length;t++){t>0&&(this.formatted+=\\\"||\\\");const e=this.set[t];for(let t=0;t<e.length;t++)t>0&&(this.formatted+=\\\" \\\"),this.formatted+=e[t].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(t){const e=((this.options.includePrerelease&&g)|(this.options.loose&&m))+\\\":\\\"+t,r=o.get(e);if(r)return r;const n=this.options.loose,i=n?l[f.HYPHENRANGELOOSE]:l[f.HYPHENRANGE];t=t.replace(i,k(this.options.includePrerelease)),u(\\\"hyphen replace\\\",t),t=t.replace(l[f.COMPARATORTRIM],h),u(\\\"comparator trim\\\",t),t=t.replace(l[f.TILDETRIM],d),u(\\\"tilde trim\\\",t),t=t.replace(l[f.CARETTRIM],p),u(\\\"caret trim\\\",t);let s=t.split(\\\" \\\").map((t=>b(t,this.options))).join(\\\" \\\").split(/\\\\s+/).map((t=>M(t,this.options)));n&&(s=s.filter((t=>(u(\\\"loose invalid filter\\\",t,this.options),!!t.match(l[f.COMPARATORLOOSE]))))),u(\\\"range list\\\",s);const c=new Map,v=s.map((t=>new a(t,this.options)));for(const t of v){if(y(t))return[t];c.set(t.value,t)}c.size>1&&c.has(\\\"\\\")&&c.delete(\\\"\\\");const w=[...c.values()];return o.set(e,w),w}intersects(t,e){if(!(t instanceof i))throw new TypeError(\\\"a Range is required\\\");return this.set.some((r=>w(r,e)&&t.set.some((t=>w(t,e)&&r.every((r=>t.every((t=>r.intersects(t,e)))))))))}test(t){if(!t)return!1;if(\\\"string\\\"==typeof t)try{t=new c(t,this.options)}catch(t){return!1}for(let e=0;e<this.set.length;e++)if(O(this.set[e],t,this.options))return!0;return!1}}t.exports=i;const o=new(r(8794)),s=r(8587),a=r(3904),u=r(7272),c=r(3908),{safeRe:l,t:f,comparatorTrimReplace:h,tildeTrimReplace:d,caretTrimReplace:p}=r(9718),{FLAG_INCLUDE_PRERELEASE:g,FLAG_LOOSE:m}=r(6874),y=t=>\\\"<0.0.0-0\\\"===t.value,v=t=>\\\"\\\"===t.value,w=(t,e)=>{let r=!0;const n=t.slice();let i=n.pop();for(;r&&n.length;)r=n.every((t=>i.intersects(t,e))),i=n.pop();return r},b=(t,e)=>(u(\\\"comp\\\",t,e),t=R(t,e),u(\\\"caret\\\",t),t=E(t,e),u(\\\"tildes\\\",t),t=x(t,e),u(\\\"xrange\\\",t),t=N(t,e),u(\\\"stars\\\",t),t),A=t=>!t||\\\"x\\\"===t.toLowerCase()||\\\"*\\\"===t,E=(t,e)=>t.trim().split(/\\\\s+/).map((t=>S(t,e))).join(\\\" \\\"),S=(t,e)=>{const r=e.loose?l[f.TILDELOOSE]:l[f.TILDE];return t.replace(r,((e,r,n,i,o)=>{let s;return u(\\\"tilde\\\",t,e,r,n,i,o),A(r)?s=\\\"\\\":A(n)?s=`>=${r}.0.0 <${+r+1}.0.0-0`:A(i)?s=`>=${r}.${n}.0 <${r}.${+n+1}.0-0`:o?(u(\\\"replaceTilde pr\\\",o),s=`>=${r}.${n}.${i}-${o} <${r}.${+n+1}.0-0`):s=`>=${r}.${n}.${i} <${r}.${+n+1}.0-0`,u(\\\"tilde return\\\",s),s}))},R=(t,e)=>t.trim().split(/\\\\s+/).map((t=>I(t,e))).join(\\\" \\\"),I=(t,e)=>{u(\\\"caret\\\",t,e);const r=e.loose?l[f.CARETLOOSE]:l[f.CARET],n=e.includePrerelease?\\\"-0\\\":\\\"\\\";return t.replace(r,((e,r,i,o,s)=>{let a;return u(\\\"caret\\\",t,e,r,i,o,s),A(r)?a=\\\"\\\":A(i)?a=`>=${r}.0.0${n} <${+r+1}.0.0-0`:A(o)?a=\\\"0\\\"===r?`>=${r}.${i}.0${n} <${r}.${+i+1}.0-0`:`>=${r}.${i}.0${n} <${+r+1}.0.0-0`:s?(u(\\\"replaceCaret pr\\\",s),a=\\\"0\\\"===r?\\\"0\\\"===i?`>=${r}.${i}.${o}-${s} <${r}.${i}.${+o+1}-0`:`>=${r}.${i}.${o}-${s} <${r}.${+i+1}.0-0`:`>=${r}.${i}.${o}-${s} <${+r+1}.0.0-0`):(u(\\\"no pr\\\"),a=\\\"0\\\"===r?\\\"0\\\"===i?`>=${r}.${i}.${o}${n} <${r}.${i}.${+o+1}-0`:`>=${r}.${i}.${o}${n} <${r}.${+i+1}.0-0`:`>=${r}.${i}.${o} <${+r+1}.0.0-0`),u(\\\"caret return\\\",a),a}))},x=(t,e)=>(u(\\\"replaceXRanges\\\",t,e),t.split(/\\\\s+/).map((t=>_(t,e))).join(\\\" \\\")),_=(t,e)=>{t=t.trim();const r=e.loose?l[f.XRANGELOOSE]:l[f.XRANGE];return t.replace(r,((r,n,i,o,s,a)=>{u(\\\"xRange\\\",t,r,n,i,o,s,a);const c=A(i),l=c||A(o),f=l||A(s),h=f;return\\\"=\\\"===n&&h&&(n=\\\"\\\"),a=e.includePrerelease?\\\"-0\\\":\\\"\\\",c?r=\\\">\\\"===n||\\\"<\\\"===n?\\\"<0.0.0-0\\\":\\\"*\\\":n&&h?(l&&(o=0),s=0,\\\">\\\"===n?(n=\\\">=\\\",l?(i=+i+1,o=0,s=0):(o=+o+1,s=0)):\\\"<=\\\"===n&&(n=\\\"<\\\",l?i=+i+1:o=+o+1),\\\"<\\\"===n&&(a=\\\"-0\\\"),r=`${n+i}.${o}.${s}${a}`):l?r=`>=${i}.0.0${a} <${+i+1}.0.0-0`:f&&(r=`>=${i}.${o}.0${a} <${i}.${+o+1}.0-0`),u(\\\"xRange return\\\",r),r}))},N=(t,e)=>(u(\\\"replaceStars\\\",t,e),t.trim().replace(l[f.STAR],\\\"\\\")),M=(t,e)=>(u(\\\"replaceGTE0\\\",t,e),t.trim().replace(l[e.includePrerelease?f.GTE0PRE:f.GTE0],\\\"\\\")),k=t=>(e,r,n,i,o,s,a,u,c,l,f,h)=>`${r=A(n)?\\\"\\\":A(i)?`>=${n}.0.0${t?\\\"-0\\\":\\\"\\\"}`:A(o)?`>=${n}.${i}.0${t?\\\"-0\\\":\\\"\\\"}`:s?`>=${r}`:`>=${r}${t?\\\"-0\\\":\\\"\\\"}`} ${u=A(c)?\\\"\\\":A(l)?`<${+c+1}.0.0-0`:A(f)?`<${c}.${+l+1}.0-0`:h?`<=${c}.${l}.${f}-${h}`:t?`<${c}.${l}.${+f+1}-0`:`<=${u}`}`.trim(),O=(t,e,r)=>{for(let r=0;r<t.length;r++)if(!t[r].test(e))return!1;if(e.prerelease.length&&!r.includePrerelease){for(let r=0;r<t.length;r++)if(u(t[r].semver),t[r].semver!==a.ANY&&t[r].semver.prerelease.length>0){const n=t[r].semver;if(n.major===e.major&&n.minor===e.minor&&n.patch===e.patch)return!0}return!1}return!0}},3908:(t,e,r)=>{const n=r(7272),{MAX_LENGTH:i,MAX_SAFE_INTEGER:o}=r(6874),{safeRe:s,t:a}=r(9718),u=r(8587),{compareIdentifiers:c}=r(1123);class l{constructor(t,e){if(e=u(e),t instanceof l){if(t.loose===!!e.loose&&t.includePrerelease===!!e.includePrerelease)return t;t=t.version}else if(\\\"string\\\"!=typeof t)throw new TypeError(`Invalid version. Must be a string. Got type \\\"${typeof t}\\\".`);if(t.length>i)throw new TypeError(`version is longer than ${i} characters`);n(\\\"SemVer\\\",t,e),this.options=e,this.loose=!!e.loose,this.includePrerelease=!!e.includePrerelease;const r=t.trim().match(e.loose?s[a.LOOSE]:s[a.FULL]);if(!r)throw new TypeError(`Invalid Version: ${t}`);if(this.raw=t,this.major=+r[1],this.minor=+r[2],this.patch=+r[3],this.major>o||this.major<0)throw new TypeError(\\\"Invalid major version\\\");if(this.minor>o||this.minor<0)throw new TypeError(\\\"Invalid minor version\\\");if(this.patch>o||this.patch<0)throw new TypeError(\\\"Invalid patch version\\\");r[4]?this.prerelease=r[4].split(\\\".\\\").map((t=>{if(/^[0-9]+$/.test(t)){const e=+t;if(e>=0&&e<o)return e}return t})):this.prerelease=[],this.build=r[5]?r[5].split(\\\".\\\"):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(\\\".\\\")}`),this.version}toString(){return this.version}compare(t){if(n(\\\"SemVer.compare\\\",this.version,this.options,t),!(t instanceof l)){if(\\\"string\\\"==typeof t&&t===this.version)return 0;t=new l(t,this.options)}return t.version===this.version?0:this.compareMain(t)||this.comparePre(t)}compareMain(t){return t instanceof l||(t=new l(t,this.options)),c(this.major,t.major)||c(this.minor,t.minor)||c(this.patch,t.patch)}comparePre(t){if(t instanceof l||(t=new l(t,this.options)),this.prerelease.length&&!t.prerelease.length)return-1;if(!this.prerelease.length&&t.prerelease.length)return 1;if(!this.prerelease.length&&!t.prerelease.length)return 0;let e=0;do{const r=this.prerelease[e],i=t.prerelease[e];if(n(\\\"prerelease compare\\\",e,r,i),void 0===r&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===r)return-1;if(r!==i)return c(r,i)}while(++e)}compareBuild(t){t instanceof l||(t=new l(t,this.options));let e=0;do{const r=this.build[e],i=t.build[e];if(n(\\\"build compare\\\",e,r,i),void 0===r&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===r)return-1;if(r!==i)return c(r,i)}while(++e)}inc(t,e,r){switch(t){case\\\"premajor\\\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\\\"pre\\\",e,r);break;case\\\"preminor\\\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\\\"pre\\\",e,r);break;case\\\"prepatch\\\":this.prerelease.length=0,this.inc(\\\"patch\\\",e,r),this.inc(\\\"pre\\\",e,r);break;case\\\"prerelease\\\":0===this.prerelease.length&&this.inc(\\\"patch\\\",e,r),this.inc(\\\"pre\\\",e,r);break;case\\\"major\\\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\\\"minor\\\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\\\"patch\\\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\\\"pre\\\":{const t=Number(r)?1:0;if(!e&&!1===r)throw new Error(\\\"invalid increment argument: identifier is empty\\\");if(0===this.prerelease.length)this.prerelease=[t];else{let n=this.prerelease.length;for(;--n>=0;)\\\"number\\\"==typeof this.prerelease[n]&&(this.prerelease[n]++,n=-2);if(-1===n){if(e===this.prerelease.join(\\\".\\\")&&!1===r)throw new Error(\\\"invalid increment argument: identifier already exists\\\");this.prerelease.push(t)}}if(e){let n=[e,t];!1===r&&(n=[e]),0===c(this.prerelease[0],e)?isNaN(this.prerelease[1])&&(this.prerelease=n):this.prerelease=n}break}default:throw new Error(`invalid increment argument: ${t}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(\\\".\\\")}`),this}}t.exports=l},7414:(t,e,r)=>{const n=r(144);t.exports=(t,e)=>{const r=n(t.trim().replace(/^[=v]+/,\\\"\\\"),e);return r?r.version:null}},2111:(t,e,r)=>{const n=r(4641),i=r(3999),o=r(5580),s=r(4089),a=r(7059),u=r(5200);t.exports=(t,e,r,c)=>{switch(e){case\\\"===\\\":return\\\"object\\\"==typeof t&&(t=t.version),\\\"object\\\"==typeof r&&(r=r.version),t===r;case\\\"!==\\\":return\\\"object\\\"==typeof t&&(t=t.version),\\\"object\\\"==typeof r&&(r=r.version),t!==r;case\\\"\\\":case\\\"=\\\":case\\\"==\\\":return n(t,r,c);case\\\"!=\\\":return i(t,r,c);case\\\">\\\":return o(t,r,c);case\\\">=\\\":return s(t,r,c);case\\\"<\\\":return a(t,r,c);case\\\"<=\\\":return u(t,r,c);default:throw new TypeError(`Invalid operator: ${e}`)}}},6170:(t,e,r)=>{const n=r(3908),i=r(144),{safeRe:o,t:s}=r(9718);t.exports=(t,e)=>{if(t instanceof n)return t;if(\\\"number\\\"==typeof t&&(t=String(t)),\\\"string\\\"!=typeof t)return null;let r=null;if((e=e||{}).rtl){const n=e.includePrerelease?o[s.COERCERTLFULL]:o[s.COERCERTL];let i;for(;(i=n.exec(t))&&(!r||r.index+r[0].length!==t.length);)r&&i.index+i[0].length===r.index+r[0].length||(r=i),n.lastIndex=i.index+i[1].length+i[2].length;n.lastIndex=-1}else r=t.match(e.includePrerelease?o[s.COERCEFULL]:o[s.COERCE]);if(null===r)return null;const a=r[2],u=r[3]||\\\"0\\\",c=r[4]||\\\"0\\\",l=e.includePrerelease&&r[5]?`-${r[5]}`:\\\"\\\",f=e.includePrerelease&&r[6]?`+${r[6]}`:\\\"\\\";return i(`${a}.${u}.${c}${l}${f}`,e)}},909:(t,e,r)=>{const n=r(3908);t.exports=(t,e,r)=>{const i=new n(t,r),o=new n(e,r);return i.compare(o)||i.compareBuild(o)}},1763:(t,e,r)=>{const n=r(560);t.exports=(t,e)=>n(t,e,!0)},560:(t,e,r)=>{const n=r(3908);t.exports=(t,e,r)=>new n(t,r).compare(new n(e,r))},1832:(t,e,r)=>{const n=r(144);t.exports=(t,e)=>{const r=n(t,null,!0),i=n(e,null,!0),o=r.compare(i);if(0===o)return null;const s=o>0,a=s?r:i,u=s?i:r,c=!!a.prerelease.length;if(!!u.prerelease.length&&!c)return u.patch||u.minor?a.patch?\\\"patch\\\":a.minor?\\\"minor\\\":\\\"major\\\":\\\"major\\\";const l=c?\\\"pre\\\":\\\"\\\";return r.major!==i.major?l+\\\"major\\\":r.minor!==i.minor?l+\\\"minor\\\":r.patch!==i.patch?l+\\\"patch\\\":\\\"prerelease\\\"}},4641:(t,e,r)=>{const n=r(560);t.exports=(t,e,r)=>0===n(t,e,r)},5580:(t,e,r)=>{const n=r(560);t.exports=(t,e,r)=>n(t,e,r)>0},4089:(t,e,r)=>{const n=r(560);t.exports=(t,e,r)=>n(t,e,r)>=0},3007:(t,e,r)=>{const n=r(3908);t.exports=(t,e,r,i,o)=>{\\\"string\\\"==typeof r&&(o=i,i=r,r=void 0);try{return new n(t instanceof n?t.version:t,r).inc(e,i,o).version}catch(t){return null}}},7059:(t,e,r)=>{const n=r(560);t.exports=(t,e,r)=>n(t,e,r)<0},5200:(t,e,r)=>{const n=r(560);t.exports=(t,e,r)=>n(t,e,r)<=0},2938:(t,e,r)=>{const n=r(3908);t.exports=(t,e)=>new n(t,e).major},6254:(t,e,r)=>{const n=r(3908);t.exports=(t,e)=>new n(t,e).minor},3999:(t,e,r)=>{const n=r(560);t.exports=(t,e,r)=>0!==n(t,e,r)},144:(t,e,r)=>{const n=r(3908);t.exports=(t,e,r=!1)=>{if(t instanceof n)return t;try{return new n(t,e)}catch(t){if(!r)return null;throw t}}},4493:(t,e,r)=>{const n=r(3908);t.exports=(t,e)=>new n(t,e).patch},1729:(t,e,r)=>{const n=r(144);t.exports=(t,e)=>{const r=n(t,e);return r&&r.prerelease.length?r.prerelease:null}},9970:(t,e,r)=>{const n=r(560);t.exports=(t,e,r)=>n(e,t,r)},4277:(t,e,r)=>{const n=r(909);t.exports=(t,e)=>t.sort(((t,r)=>n(r,t,e)))},7638:(t,e,r)=>{const n=r(8311);t.exports=(t,e,r)=>{try{e=new n(e,r)}catch(t){return!1}return e.test(t)}},3927:(t,e,r)=>{const n=r(909);t.exports=(t,e)=>t.sort(((t,r)=>n(t,r,e)))},6953:(t,e,r)=>{const n=r(144);t.exports=(t,e)=>{const r=n(t,e);return r?r.version:null}},9589:(t,e,r)=>{const n=r(9718),i=r(6874),o=r(3908),s=r(1123),a=r(144),u=r(6953),c=r(7414),l=r(3007),f=r(1832),h=r(2938),d=r(6254),p=r(4493),g=r(1729),m=r(560),y=r(9970),v=r(1763),w=r(909),b=r(3927),A=r(4277),E=r(5580),S=r(7059),R=r(4641),I=r(3999),x=r(4089),_=r(5200),N=r(2111),M=r(6170),k=r(3904),O=r(8311),C=r(7638),P=r(7631),B=r(9628),T=r(270),L=r(1261),U=r(3874),j=r(7075),F=r(5571),D=r(5342),$=r(6780),q=r(2525),G=r(5032);t.exports={parse:a,valid:u,clean:c,inc:l,diff:f,major:h,minor:d,patch:p,prerelease:g,compare:m,rcompare:y,compareLoose:v,compareBuild:w,sort:b,rsort:A,gt:E,lt:S,eq:R,neq:I,gte:x,lte:_,cmp:N,coerce:M,Comparator:k,Range:O,satisfies:C,toComparators:P,maxSatisfying:B,minSatisfying:T,minVersion:L,validRange:U,outside:j,gtr:F,ltr:D,intersects:$,simplifyRange:q,subset:G,SemVer:o,re:n.re,src:n.src,tokens:n.t,SEMVER_SPEC_VERSION:i.SEMVER_SPEC_VERSION,RELEASE_TYPES:i.RELEASE_TYPES,compareIdentifiers:s.compareIdentifiers,rcompareIdentifiers:s.rcompareIdentifiers}},6874:t=>{const e=Number.MAX_SAFE_INTEGER||9007199254740991;t.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER:e,RELEASE_TYPES:[\\\"major\\\",\\\"premajor\\\",\\\"minor\\\",\\\"preminor\\\",\\\"patch\\\",\\\"prepatch\\\",\\\"prerelease\\\"],SEMVER_SPEC_VERSION:\\\"2.0.0\\\",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},7272:t=>{const e=\\\"object\\\"==typeof process&&process.env&&/\\\\bsemver\\\\b/i.test(\\\"false\\\")?(...t)=>console.error(\\\"SEMVER\\\",...t):()=>{};t.exports=e},1123:t=>{const e=/^[0-9]+$/,r=(t,r)=>{const n=e.test(t),i=e.test(r);return n&&i&&(t=+t,r=+r),t===r?0:n&&!i?-1:i&&!n?1:t<r?-1:1};t.exports={compareIdentifiers:r,rcompareIdentifiers:(t,e)=>r(e,t)}},8794:t=>{t.exports=class{constructor(){this.max=1e3,this.map=new Map}get(t){const e=this.map.get(t);return void 0===e?void 0:(this.map.delete(t),this.map.set(t,e),e)}delete(t){return this.map.delete(t)}set(t,e){if(!this.delete(t)&&void 0!==e){if(this.map.size>=this.max){const t=this.map.keys().next().value;this.delete(t)}this.map.set(t,e)}return this}}},8587:t=>{const e=Object.freeze({loose:!0}),r=Object.freeze({});t.exports=t=>t?\\\"object\\\"!=typeof t?e:t:r},9718:(t,e,r)=>{const{MAX_SAFE_COMPONENT_LENGTH:n,MAX_SAFE_BUILD_LENGTH:i,MAX_LENGTH:o}=r(6874),s=r(7272),a=(e=t.exports={}).re=[],u=e.safeRe=[],c=e.src=[],l=e.t={};let f=0;const h=\\\"[a-zA-Z0-9-]\\\",d=[[\\\"\\\\\\\\s\\\",1],[\\\"\\\\\\\\d\\\",o],[h,i]],p=(t,e,r)=>{const n=(t=>{for(const[e,r]of d)t=t.split(`${e}*`).join(`${e}{0,${r}}`).split(`${e}+`).join(`${e}{1,${r}}`);return t})(e),i=f++;s(t,i,e),l[t]=i,c[i]=e,a[i]=new RegExp(e,r?\\\"g\\\":void 0),u[i]=new RegExp(n,r?\\\"g\\\":void 0)};p(\\\"NUMERICIDENTIFIER\\\",\\\"0|[1-9]\\\\\\\\d*\\\"),p(\\\"NUMERICIDENTIFIERLOOSE\\\",\\\"\\\\\\\\d+\\\"),p(\\\"NONNUMERICIDENTIFIER\\\",`\\\\\\\\d*[a-zA-Z-]${h}*`),p(\\\"MAINVERSION\\\",`(${c[l.NUMERICIDENTIFIER]})\\\\\\\\.(${c[l.NUMERICIDENTIFIER]})\\\\\\\\.(${c[l.NUMERICIDENTIFIER]})`),p(\\\"MAINVERSIONLOOSE\\\",`(${c[l.NUMERICIDENTIFIERLOOSE]})\\\\\\\\.(${c[l.NUMERICIDENTIFIERLOOSE]})\\\\\\\\.(${c[l.NUMERICIDENTIFIERLOOSE]})`),p(\\\"PRERELEASEIDENTIFIER\\\",`(?:${c[l.NUMERICIDENTIFIER]}|${c[l.NONNUMERICIDENTIFIER]})`),p(\\\"PRERELEASEIDENTIFIERLOOSE\\\",`(?:${c[l.NUMERICIDENTIFIERLOOSE]}|${c[l.NONNUMERICIDENTIFIER]})`),p(\\\"PRERELEASE\\\",`(?:-(${c[l.PRERELEASEIDENTIFIER]}(?:\\\\\\\\.${c[l.PRERELEASEIDENTIFIER]})*))`),p(\\\"PRERELEASELOOSE\\\",`(?:-?(${c[l.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\\\\\.${c[l.PRERELEASEIDENTIFIERLOOSE]})*))`),p(\\\"BUILDIDENTIFIER\\\",`${h}+`),p(\\\"BUILD\\\",`(?:\\\\\\\\+(${c[l.BUILDIDENTIFIER]}(?:\\\\\\\\.${c[l.BUILDIDENTIFIER]})*))`),p(\\\"FULLPLAIN\\\",`v?${c[l.MAINVERSION]}${c[l.PRERELEASE]}?${c[l.BUILD]}?`),p(\\\"FULL\\\",`^${c[l.FULLPLAIN]}$`),p(\\\"LOOSEPLAIN\\\",`[v=\\\\\\\\s]*${c[l.MAINVERSIONLOOSE]}${c[l.PRERELEASELOOSE]}?${c[l.BUILD]}?`),p(\\\"LOOSE\\\",`^${c[l.LOOSEPLAIN]}$`),p(\\\"GTLT\\\",\\\"((?:<|>)?=?)\\\"),p(\\\"XRANGEIDENTIFIERLOOSE\\\",`${c[l.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\\\\\*`),p(\\\"XRANGEIDENTIFIER\\\",`${c[l.NUMERICIDENTIFIER]}|x|X|\\\\\\\\*`),p(\\\"XRANGEPLAIN\\\",`[v=\\\\\\\\s]*(${c[l.XRANGEIDENTIFIER]})(?:\\\\\\\\.(${c[l.XRANGEIDENTIFIER]})(?:\\\\\\\\.(${c[l.XRANGEIDENTIFIER]})(?:${c[l.PRERELEASE]})?${c[l.BUILD]}?)?)?`),p(\\\"XRANGEPLAINLOOSE\\\",`[v=\\\\\\\\s]*(${c[l.XRANGEIDENTIFIERLOOSE]})(?:\\\\\\\\.(${c[l.XRANGEIDENTIFIERLOOSE]})(?:\\\\\\\\.(${c[l.XRANGEIDENTIFIERLOOSE]})(?:${c[l.PRERELEASELOOSE]})?${c[l.BUILD]}?)?)?`),p(\\\"XRANGE\\\",`^${c[l.GTLT]}\\\\\\\\s*${c[l.XRANGEPLAIN]}$`),p(\\\"XRANGELOOSE\\\",`^${c[l.GTLT]}\\\\\\\\s*${c[l.XRANGEPLAINLOOSE]}$`),p(\\\"COERCEPLAIN\\\",`(^|[^\\\\\\\\d])(\\\\\\\\d{1,${n}})(?:\\\\\\\\.(\\\\\\\\d{1,${n}}))?(?:\\\\\\\\.(\\\\\\\\d{1,${n}}))?`),p(\\\"COERCE\\\",`${c[l.COERCEPLAIN]}(?:$|[^\\\\\\\\d])`),p(\\\"COERCEFULL\\\",c[l.COERCEPLAIN]+`(?:${c[l.PRERELEASE]})?`+`(?:${c[l.BUILD]})?(?:$|[^\\\\\\\\d])`),p(\\\"COERCERTL\\\",c[l.COERCE],!0),p(\\\"COERCERTLFULL\\\",c[l.COERCEFULL],!0),p(\\\"LONETILDE\\\",\\\"(?:~>?)\\\"),p(\\\"TILDETRIM\\\",`(\\\\\\\\s*)${c[l.LONETILDE]}\\\\\\\\s+`,!0),e.tildeTrimReplace=\\\"$1~\\\",p(\\\"TILDE\\\",`^${c[l.LONETILDE]}${c[l.XRANGEPLAIN]}$`),p(\\\"TILDELOOSE\\\",`^${c[l.LONETILDE]}${c[l.XRANGEPLAINLOOSE]}$`),p(\\\"LONECARET\\\",\\\"(?:\\\\\\\\^)\\\"),p(\\\"CARETTRIM\\\",`(\\\\\\\\s*)${c[l.LONECARET]}\\\\\\\\s+`,!0),e.caretTrimReplace=\\\"$1^\\\",p(\\\"CARET\\\",`^${c[l.LONECARET]}${c[l.XRANGEPLAIN]}$`),p(\\\"CARETLOOSE\\\",`^${c[l.LONECARET]}${c[l.XRANGEPLAINLOOSE]}$`),p(\\\"COMPARATORLOOSE\\\",`^${c[l.GTLT]}\\\\\\\\s*(${c[l.LOOSEPLAIN]})$|^$`),p(\\\"COMPARATOR\\\",`^${c[l.GTLT]}\\\\\\\\s*(${c[l.FULLPLAIN]})$|^$`),p(\\\"COMPARATORTRIM\\\",`(\\\\\\\\s*)${c[l.GTLT]}\\\\\\\\s*(${c[l.LOOSEPLAIN]}|${c[l.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace=\\\"$1$2$3\\\",p(\\\"HYPHENRANGE\\\",`^\\\\\\\\s*(${c[l.XRANGEPLAIN]})\\\\\\\\s+-\\\\\\\\s+(${c[l.XRANGEPLAIN]})\\\\\\\\s*$`),p(\\\"HYPHENRANGELOOSE\\\",`^\\\\\\\\s*(${c[l.XRANGEPLAINLOOSE]})\\\\\\\\s+-\\\\\\\\s+(${c[l.XRANGEPLAINLOOSE]})\\\\\\\\s*$`),p(\\\"STAR\\\",\\\"(<|>)?=?\\\\\\\\s*\\\\\\\\*\\\"),p(\\\"GTE0\\\",\\\"^\\\\\\\\s*>=\\\\\\\\s*0\\\\\\\\.0\\\\\\\\.0\\\\\\\\s*$\\\"),p(\\\"GTE0PRE\\\",\\\"^\\\\\\\\s*>=\\\\\\\\s*0\\\\\\\\.0\\\\\\\\.0-0\\\\\\\\s*$\\\")},5571:(t,e,r)=>{const n=r(7075);t.exports=(t,e,r)=>n(t,e,\\\">\\\",r)},6780:(t,e,r)=>{const n=r(8311);t.exports=(t,e,r)=>(t=new n(t,r),e=new n(e,r),t.intersects(e,r))},5342:(t,e,r)=>{const n=r(7075);t.exports=(t,e,r)=>n(t,e,\\\"<\\\",r)},9628:(t,e,r)=>{const n=r(3908),i=r(8311);t.exports=(t,e,r)=>{let o=null,s=null,a=null;try{a=new i(e,r)}catch(t){return null}return t.forEach((t=>{a.test(t)&&(o&&-1!==s.compare(t)||(o=t,s=new n(o,r)))})),o}},270:(t,e,r)=>{const n=r(3908),i=r(8311);t.exports=(t,e,r)=>{let o=null,s=null,a=null;try{a=new i(e,r)}catch(t){return null}return t.forEach((t=>{a.test(t)&&(o&&1!==s.compare(t)||(o=t,s=new n(o,r)))})),o}},1261:(t,e,r)=>{const n=r(3908),i=r(8311),o=r(5580);t.exports=(t,e)=>{t=new i(t,e);let r=new n(\\\"0.0.0\\\");if(t.test(r))return r;if(r=new n(\\\"0.0.0-0\\\"),t.test(r))return r;r=null;for(let e=0;e<t.set.length;++e){const i=t.set[e];let s=null;i.forEach((t=>{const e=new n(t.semver.version);switch(t.operator){case\\\">\\\":0===e.prerelease.length?e.patch++:e.prerelease.push(0),e.raw=e.format();case\\\"\\\":case\\\">=\\\":s&&!o(e,s)||(s=e);break;case\\\"<\\\":case\\\"<=\\\":break;default:throw new Error(`Unexpected operation: ${t.operator}`)}})),!s||r&&!o(r,s)||(r=s)}return r&&t.test(r)?r:null}},7075:(t,e,r)=>{const n=r(3908),i=r(3904),{ANY:o}=i,s=r(8311),a=r(7638),u=r(5580),c=r(7059),l=r(5200),f=r(4089);t.exports=(t,e,r,h)=>{let d,p,g,m,y;switch(t=new n(t,h),e=new s(e,h),r){case\\\">\\\":d=u,p=l,g=c,m=\\\">\\\",y=\\\">=\\\";break;case\\\"<\\\":d=c,p=f,g=u,m=\\\"<\\\",y=\\\"<=\\\";break;default:throw new TypeError('Must provide a hilo val of \\\"<\\\" or \\\">\\\"')}if(a(t,e,h))return!1;for(let r=0;r<e.set.length;++r){const n=e.set[r];let s=null,a=null;if(n.forEach((t=>{t.semver===o&&(t=new i(\\\">=0.0.0\\\")),s=s||t,a=a||t,d(t.semver,s.semver,h)?s=t:g(t.semver,a.semver,h)&&(a=t)})),s.operator===m||s.operator===y)return!1;if((!a.operator||a.operator===m)&&p(t,a.semver))return!1;if(a.operator===y&&g(t,a.semver))return!1}return!0}},2525:(t,e,r)=>{const n=r(7638),i=r(560);t.exports=(t,e,r)=>{const o=[];let s=null,a=null;const u=t.sort(((t,e)=>i(t,e,r)));for(const t of u){n(t,e,r)?(a=t,s||(s=t)):(a&&o.push([s,a]),a=null,s=null)}s&&o.push([s,null]);const c=[];for(const[t,e]of o)t===e?c.push(t):e||t!==u[0]?e?t===u[0]?c.push(`<=${e}`):c.push(`${t} - ${e}`):c.push(`>=${t}`):c.push(\\\"*\\\");const l=c.join(\\\" || \\\"),f=\\\"string\\\"==typeof e.raw?e.raw:String(e);return l.length<f.length?l:e}},5032:(t,e,r)=>{const n=r(8311),i=r(3904),{ANY:o}=i,s=r(7638),a=r(560),u=[new i(\\\">=0.0.0-0\\\")],c=[new i(\\\">=0.0.0\\\")],l=(t,e,r)=>{if(t===e)return!0;if(1===t.length&&t[0].semver===o){if(1===e.length&&e[0].semver===o)return!0;t=r.includePrerelease?u:c}if(1===e.length&&e[0].semver===o){if(r.includePrerelease)return!0;e=c}const n=new Set;let i,l,d,p,g,m,y;for(const e of t)\\\">\\\"===e.operator||\\\">=\\\"===e.operator?i=f(i,e,r):\\\"<\\\"===e.operator||\\\"<=\\\"===e.operator?l=h(l,e,r):n.add(e.semver);if(n.size>1)return null;if(i&&l){if(d=a(i.semver,l.semver,r),d>0)return null;if(0===d&&(\\\">=\\\"!==i.operator||\\\"<=\\\"!==l.operator))return null}for(const t of n){if(i&&!s(t,String(i),r))return null;if(l&&!s(t,String(l),r))return null;for(const n of e)if(!s(t,String(n),r))return!1;return!0}let v=!(!l||r.includePrerelease||!l.semver.prerelease.length)&&l.semver,w=!(!i||r.includePrerelease||!i.semver.prerelease.length)&&i.semver;v&&1===v.prerelease.length&&\\\"<\\\"===l.operator&&0===v.prerelease[0]&&(v=!1);for(const t of e){if(y=y||\\\">\\\"===t.operator||\\\">=\\\"===t.operator,m=m||\\\"<\\\"===t.operator||\\\"<=\\\"===t.operator,i)if(w&&t.semver.prerelease&&t.semver.prerelease.length&&t.semver.major===w.major&&t.semver.minor===w.minor&&t.semver.patch===w.patch&&(w=!1),\\\">\\\"===t.operator||\\\">=\\\"===t.operator){if(p=f(i,t,r),p===t&&p!==i)return!1}else if(\\\">=\\\"===i.operator&&!s(i.semver,String(t),r))return!1;if(l)if(v&&t.semver.prerelease&&t.semver.prerelease.length&&t.semver.major===v.major&&t.semver.minor===v.minor&&t.semver.patch===v.patch&&(v=!1),\\\"<\\\"===t.operator||\\\"<=\\\"===t.operator){if(g=h(l,t,r),g===t&&g!==l)return!1}else if(\\\"<=\\\"===l.operator&&!s(l.semver,String(t),r))return!1;if(!t.operator&&(l||i)&&0!==d)return!1}return!(i&&m&&!l&&0!==d)&&(!(l&&y&&!i&&0!==d)&&(!w&&!v))},f=(t,e,r)=>{if(!t)return e;const n=a(t.semver,e.semver,r);return n>0?t:n<0||\\\">\\\"===e.operator&&\\\">=\\\"===t.operator?e:t},h=(t,e,r)=>{if(!t)return e;const n=a(t.semver,e.semver,r);return n<0?t:n>0||\\\"<\\\"===e.operator&&\\\"<=\\\"===t.operator?e:t};t.exports=(t,e,r={})=>{if(t===e)return!0;t=new n(t,r),e=new n(e,r);let i=!1;t:for(const n of t.set){for(const t of e.set){const e=l(n,t,r);if(i=i||null!==e,e)continue t}if(i)return!1}return!0}},7631:(t,e,r)=>{const n=r(8311);t.exports=(t,e)=>new n(t,e).set.map((t=>t.map((t=>t.value)).join(\\\" \\\").trim().split(\\\" \\\")))},3874:(t,e,r)=>{const n=r(8311);t.exports=(t,e)=>{try{return new n(t,e).range||\\\"*\\\"}catch(t){return null}}},2831:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),Object.defineProperty(e,\\\"NIL\\\",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(e,\\\"parse\\\",{enumerable:!0,get:function(){return f.default}}),Object.defineProperty(e,\\\"stringify\\\",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(e,\\\"v1\\\",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(e,\\\"v3\\\",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(e,\\\"v4\\\",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(e,\\\"v5\\\",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(e,\\\"validate\\\",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(e,\\\"version\\\",{enumerable:!0,get:function(){return u.default}});var n=h(r(3518)),i=h(r(4948)),o=h(r(5073)),s=h(r(7186)),a=h(r(4808)),u=h(r(7775)),c=h(r(7037)),l=h(r(9910)),f=h(r(6792));function h(t){return t&&t.__esModule?t:{default:t}}},2311:(t,e)=>{\\\"use strict\\\";function r(t){return 14+(t+64>>>9<<4)+1}function n(t,e){const r=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(r>>16)<<16|65535&r}function i(t,e,r,i,o,s){return n((a=n(n(e,t),n(i,s)))<<(u=o)|a>>>32-u,r);var a,u}function o(t,e,r,n,o,s,a){return i(e&r|~e&n,t,e,o,s,a)}function s(t,e,r,n,o,s,a){return i(e&n|r&~n,t,e,o,s,a)}function a(t,e,r,n,o,s,a){return i(e^r^n,t,e,o,s,a)}function u(t,e,r,n,o,s,a){return i(r^(e|~n),t,e,o,s,a)}Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var c=function(t){if(\\\"string\\\"==typeof t){const e=unescape(encodeURIComponent(t));t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t[r]=e.charCodeAt(r)}return function(t){const e=[],r=32*t.length,n=\\\"0123456789abcdef\\\";for(let i=0;i<r;i+=8){const r=t[i>>5]>>>i%32&255,o=parseInt(n.charAt(r>>>4&15)+n.charAt(15&r),16);e.push(o)}return e}(function(t,e){t[e>>5]|=128<<e%32,t[r(e)-1]=e;let i=1732584193,c=-271733879,l=-1732584194,f=271733878;for(let e=0;e<t.length;e+=16){const r=i,h=c,d=l,p=f;i=o(i,c,l,f,t[e],7,-680876936),f=o(f,i,c,l,t[e+1],12,-389564586),l=o(l,f,i,c,t[e+2],17,606105819),c=o(c,l,f,i,t[e+3],22,-1044525330),i=o(i,c,l,f,t[e+4],7,-176418897),f=o(f,i,c,l,t[e+5],12,1200080426),l=o(l,f,i,c,t[e+6],17,-1473231341),c=o(c,l,f,i,t[e+7],22,-45705983),i=o(i,c,l,f,t[e+8],7,1770035416),f=o(f,i,c,l,t[e+9],12,-1958414417),l=o(l,f,i,c,t[e+10],17,-42063),c=o(c,l,f,i,t[e+11],22,-1990404162),i=o(i,c,l,f,t[e+12],7,1804603682),f=o(f,i,c,l,t[e+13],12,-40341101),l=o(l,f,i,c,t[e+14],17,-1502002290),c=o(c,l,f,i,t[e+15],22,1236535329),i=s(i,c,l,f,t[e+1],5,-165796510),f=s(f,i,c,l,t[e+6],9,-1069501632),l=s(l,f,i,c,t[e+11],14,643717713),c=s(c,l,f,i,t[e],20,-373897302),i=s(i,c,l,f,t[e+5],5,-701558691),f=s(f,i,c,l,t[e+10],9,38016083),l=s(l,f,i,c,t[e+15],14,-660478335),c=s(c,l,f,i,t[e+4],20,-405537848),i=s(i,c,l,f,t[e+9],5,568446438),f=s(f,i,c,l,t[e+14],9,-1019803690),l=s(l,f,i,c,t[e+3],14,-187363961),c=s(c,l,f,i,t[e+8],20,1163531501),i=s(i,c,l,f,t[e+13],5,-1444681467),f=s(f,i,c,l,t[e+2],9,-51403784),l=s(l,f,i,c,t[e+7],14,1735328473),c=s(c,l,f,i,t[e+12],20,-1926607734),i=a(i,c,l,f,t[e+5],4,-378558),f=a(f,i,c,l,t[e+8],11,-2022574463),l=a(l,f,i,c,t[e+11],16,1839030562),c=a(c,l,f,i,t[e+14],23,-35309556),i=a(i,c,l,f,t[e+1],4,-1530992060),f=a(f,i,c,l,t[e+4],11,1272893353),l=a(l,f,i,c,t[e+7],16,-155497632),c=a(c,l,f,i,t[e+10],23,-1094730640),i=a(i,c,l,f,t[e+13],4,681279174),f=a(f,i,c,l,t[e],11,-358537222),l=a(l,f,i,c,t[e+3],16,-722521979),c=a(c,l,f,i,t[e+6],23,76029189),i=a(i,c,l,f,t[e+9],4,-640364487),f=a(f,i,c,l,t[e+12],11,-421815835),l=a(l,f,i,c,t[e+15],16,530742520),c=a(c,l,f,i,t[e+2],23,-995338651),i=u(i,c,l,f,t[e],6,-198630844),f=u(f,i,c,l,t[e+7],10,1126891415),l=u(l,f,i,c,t[e+14],15,-1416354905),c=u(c,l,f,i,t[e+5],21,-57434055),i=u(i,c,l,f,t[e+12],6,1700485571),f=u(f,i,c,l,t[e+3],10,-1894986606),l=u(l,f,i,c,t[e+10],15,-1051523),c=u(c,l,f,i,t[e+1],21,-2054922799),i=u(i,c,l,f,t[e+8],6,1873313359),f=u(f,i,c,l,t[e+15],10,-30611744),l=u(l,f,i,c,t[e+6],15,-1560198380),c=u(c,l,f,i,t[e+13],21,1309151649),i=u(i,c,l,f,t[e+4],6,-145523070),f=u(f,i,c,l,t[e+11],10,-1120210379),l=u(l,f,i,c,t[e+2],15,718787259),c=u(c,l,f,i,t[e+9],21,-343485551),i=n(i,r),c=n(c,h),l=n(l,d),f=n(f,p)}return[i,c,l,f]}(function(t){if(0===t.length)return[];const e=8*t.length,n=new Uint32Array(r(e));for(let r=0;r<e;r+=8)n[r>>5]|=(255&t[r/8])<<r%32;return n}(t),8*t.length))};e.default=c},6140:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var r={randomUUID:\\\"undefined\\\"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};e.default=r},4808:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;e.default=\\\"00000000-0000-0000-0000-000000000000\\\"},6792:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var n,i=(n=r(7037))&&n.__esModule?n:{default:n};var o=function(t){if(!(0,i.default)(t))throw TypeError(\\\"Invalid UUID\\\");let e;const r=new Uint8Array(16);return r[0]=(e=parseInt(t.slice(0,8),16))>>>24,r[1]=e>>>16&255,r[2]=e>>>8&255,r[3]=255&e,r[4]=(e=parseInt(t.slice(9,13),16))>>>8,r[5]=255&e,r[6]=(e=parseInt(t.slice(14,18),16))>>>8,r[7]=255&e,r[8]=(e=parseInt(t.slice(19,23),16))>>>8,r[9]=255&e,r[10]=(e=parseInt(t.slice(24,36),16))/1099511627776&255,r[11]=e/4294967296&255,r[12]=e>>>24&255,r[13]=e>>>16&255,r[14]=e>>>8&255,r[15]=255&e,r};e.default=o},7656:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;e.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},2858:(t,e)=>{\\\"use strict\\\";let r;Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=function(){if(!r&&(r=\\\"undefined\\\"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error(\\\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\\\");return r(n)};const n=new Uint8Array(16)},9042:(t,e)=>{\\\"use strict\\\";function r(t,e,r,n){switch(t){case 0:return e&r^~e&n;case 1:case 3:return e^r^n;case 2:return e&r^e&n^r&n}}function n(t,e){return t<<e|t>>>32-e}Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var i=function(t){const e=[1518500249,1859775393,2400959708,3395469782],i=[1732584193,4023233417,2562383102,271733878,3285377520];if(\\\"string\\\"==typeof t){const e=unescape(encodeURIComponent(t));t=[];for(let r=0;r<e.length;++r)t.push(e.charCodeAt(r))}else Array.isArray(t)||(t=Array.prototype.slice.call(t));t.push(128);const o=t.length/4+2,s=Math.ceil(o/16),a=new Array(s);for(let e=0;e<s;++e){const r=new Uint32Array(16);for(let n=0;n<16;++n)r[n]=t[64*e+4*n]<<24|t[64*e+4*n+1]<<16|t[64*e+4*n+2]<<8|t[64*e+4*n+3];a[e]=r}a[s-1][14]=8*(t.length-1)/Math.pow(2,32),a[s-1][14]=Math.floor(a[s-1][14]),a[s-1][15]=8*(t.length-1)&4294967295;for(let t=0;t<s;++t){const o=new Uint32Array(80);for(let e=0;e<16;++e)o[e]=a[t][e];for(let t=16;t<80;++t)o[t]=n(o[t-3]^o[t-8]^o[t-14]^o[t-16],1);let s=i[0],u=i[1],c=i[2],l=i[3],f=i[4];for(let t=0;t<80;++t){const i=Math.floor(t/20),a=n(s,5)+r(i,u,c,l)+f+e[i]+o[t]>>>0;f=l,l=c,c=n(u,30)>>>0,u=s,s=a}i[0]=i[0]+s>>>0,i[1]=i[1]+u>>>0,i[2]=i[2]+c>>>0,i[3]=i[3]+l>>>0,i[4]=i[4]+f>>>0}return[i[0]>>24&255,i[0]>>16&255,i[0]>>8&255,255&i[0],i[1]>>24&255,i[1]>>16&255,i[1]>>8&255,255&i[1],i[2]>>24&255,i[2]>>16&255,i[2]>>8&255,255&i[2],i[3]>>24&255,i[3]>>16&255,i[3]>>8&255,255&i[3],i[4]>>24&255,i[4]>>16&255,i[4]>>8&255,255&i[4]]};e.default=i},9910:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0,e.unsafeStringify=s;var n,i=(n=r(7037))&&n.__esModule?n:{default:n};const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function s(t,e=0){return o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+\\\"-\\\"+o[t[e+4]]+o[t[e+5]]+\\\"-\\\"+o[t[e+6]]+o[t[e+7]]+\\\"-\\\"+o[t[e+8]]+o[t[e+9]]+\\\"-\\\"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]}var a=function(t,e=0){const r=s(t,e);if(!(0,i.default)(r))throw TypeError(\\\"Stringified UUID is invalid\\\");return r};e.default=a},3518:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var n,i=(n=r(2858))&&n.__esModule?n:{default:n},o=r(9910);let s,a,u=0,c=0;var l=function(t,e,r){let n=e&&r||0;const l=e||new Array(16);let f=(t=t||{}).node||s,h=void 0!==t.clockseq?t.clockseq:a;if(null==f||null==h){const e=t.random||(t.rng||i.default)();null==f&&(f=s=[1|e[0],e[1],e[2],e[3],e[4],e[5]]),null==h&&(h=a=16383&(e[6]<<8|e[7]))}let d=void 0!==t.msecs?t.msecs:Date.now(),p=void 0!==t.nsecs?t.nsecs:c+1;const g=d-u+(p-c)/1e4;if(g<0&&void 0===t.clockseq&&(h=h+1&16383),(g<0||d>u)&&void 0===t.nsecs&&(p=0),p>=1e4)throw new Error(\\\"uuid.v1(): Can't create more than 10M uuids/sec\\\");u=d,c=p,a=h,d+=122192928e5;const m=(1e4*(268435455&d)+p)%4294967296;l[n++]=m>>>24&255,l[n++]=m>>>16&255,l[n++]=m>>>8&255,l[n++]=255&m;const y=d/4294967296*1e4&268435455;l[n++]=y>>>8&255,l[n++]=255&y,l[n++]=y>>>24&15|16,l[n++]=y>>>16&255,l[n++]=h>>>8|128,l[n++]=255&h;for(let t=0;t<6;++t)l[n+t]=f[t];return e||(0,o.unsafeStringify)(l)};e.default=l},4948:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var n=o(r(9025)),i=o(r(2311));function o(t){return t&&t.__esModule?t:{default:t}}var s=(0,n.default)(\\\"v3\\\",48,i.default);e.default=s},9025:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.URL=e.DNS=void 0,e.default=function(t,e,r){function n(t,n,s,a){var u;if(\\\"string\\\"==typeof t&&(t=function(t){t=unescape(encodeURIComponent(t));const e=[];for(let r=0;r<t.length;++r)e.push(t.charCodeAt(r));return e}(t)),\\\"string\\\"==typeof n&&(n=(0,o.default)(n)),16!==(null===(u=n)||void 0===u?void 0:u.length))throw TypeError(\\\"Namespace must be array-like (16 iterable integer values, 0-255)\\\");let c=new Uint8Array(16+t.length);if(c.set(n),c.set(t,n.length),c=r(c),c[6]=15&c[6]|e,c[8]=63&c[8]|128,s){a=a||0;for(let t=0;t<16;++t)s[a+t]=c[t];return s}return(0,i.unsafeStringify)(c)}try{n.name=t}catch(t){}return n.DNS=s,n.URL=a,n};var n,i=r(9910),o=(n=r(6792))&&n.__esModule?n:{default:n};const s=\\\"6ba7b810-9dad-11d1-80b4-00c04fd430c8\\\";e.DNS=s;const a=\\\"6ba7b811-9dad-11d1-80b4-00c04fd430c8\\\";e.URL=a},5073:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var n=s(r(6140)),i=s(r(2858)),o=r(9910);function s(t){return t&&t.__esModule?t:{default:t}}var a=function(t,e,r){if(n.default.randomUUID&&!e&&!t)return n.default.randomUUID();const s=(t=t||{}).random||(t.rng||i.default)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,e){r=r||0;for(let t=0;t<16;++t)e[r+t]=s[t];return e}return(0,o.unsafeStringify)(s)};e.default=a},7186:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var n=o(r(9025)),i=o(r(9042));function o(t){return t&&t.__esModule?t:{default:t}}var s=(0,n.default)(\\\"v5\\\",80,i.default);e.default=s},7037:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var n,i=(n=r(7656))&&n.__esModule?n:{default:n};var o=function(t){return\\\"string\\\"==typeof t&&i.default.test(t)};e.default=o},7775:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.default=void 0;var n,i=(n=r(7037))&&n.__esModule?n:{default:n};var o=function(t){if(!(0,i.default)(t))throw TypeError(\\\"Invalid UUID\\\");return parseInt(t.slice(14,15),16)};e.default=o},7790:()=>{},7754:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.StructError=void 0;class r extends TypeError{constructor(t,e){let r;const{message:n,explanation:i,...o}=t,{path:s}=t,a=0===s.length?n:`At path: ${s.join(\\\".\\\")} -- ${n}`;super(i??a),null!=i&&(this.cause=a),Object.assign(this,o),this.name=this.constructor.name,this.failures=()=>r??(r=[t,...e()])}}e.StructError=r},5620:function(t,e,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)\\\"default\\\"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),i(r(7754),e),i(r(9067),e),i(r(1704),e),i(r(401),e),i(r(7792),e),i(r(5991),e)},9067:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.validate=e.is=e.mask=e.create=e.assert=e.Struct=void 0;const n=r(7754),i=r(639);function o(t,e,r){const n=c(t,e,{message:r});if(n[0])throw n[0]}function s(t,e,r){const n=c(t,e,{coerce:!0,message:r});if(n[0])throw n[0];return n[1]}function a(t,e,r){const n=c(t,e,{coerce:!0,mask:!0,message:r});if(n[0])throw n[0];return n[1]}function u(t,e){return!c(t,e)[0]}function c(t,e,r={}){const o=(0,i.run)(t,e,r),s=(0,i.shiftIterator)(o);if(s[0]){return[new n.StructError(s[0],(function*(){for(const t of o)t[0]&&(yield t[0])})),void 0]}return[void 0,s[1]]}e.Struct=class{constructor(t){const{type:e,schema:r,validator:n,refiner:o,coercer:s=t=>t,entries:a=function*(){}}=t;this.type=e,this.schema=r,this.entries=a,this.coercer=s,this.validator=n?(t,e)=>{const r=n(t,e);return(0,i.toFailures)(r,e,this,t)}:()=>[],this.refiner=o?(t,e)=>{const r=o(t,e);return(0,i.toFailures)(r,e,this,t)}:()=>[]}assert(t,e){return o(t,this,e)}create(t,e){return s(t,this,e)}is(t){return u(t,this)}mask(t,e){return a(t,this,e)}validate(t,e={}){return c(t,this,e)}},e.assert=o,e.create=s,e.mask=a,e.is=u,e.validate=c},1704:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.trimmed=e.defaulted=e.coerce=void 0;const n=r(9067),i=r(639),o=r(7792);function s(t,e,r){return new n.Struct({...t,coercer:(i,o)=>(0,n.is)(i,e)?t.coercer(r(i,o),o):t.coercer(i,o)})}e.coerce=s,e.defaulted=function(t,e,r={}){return s(t,(0,o.unknown)(),(t=>{const n=\\\"function\\\"==typeof e?e():e;if(void 0===t)return n;if(!r.strict&&(0,i.isPlainObject)(t)&&(0,i.isPlainObject)(n)){const e={...t};let r=!1;for(const t in n)void 0===e[t]&&(e[t]=n[t],r=!0);if(r)return e}return t}))},e.trimmed=function(t){return s(t,(0,o.string)(),(t=>t.trim()))}},401:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.refine=e.size=e.pattern=e.nonempty=e.min=e.max=e.empty=void 0;const n=r(9067),i=r(639);function o(t){return t instanceof Map||t instanceof Set?t.size:t.length}function s(t,e,r){return new n.Struct({...t,*refiner(n,o){yield*t.refiner(n,o);const s=r(n,o),a=(0,i.toFailures)(s,o,t,n);for(const t of a)yield{...t,refinement:e}}})}e.empty=function(t){return s(t,\\\"empty\\\",(e=>{const r=o(e);return 0===r||`Expected an empty ${t.type} but received one with a size of \\\\`${r}\\\\``}))},e.max=function(t,e,r={}){const{exclusive:n}=r;return s(t,\\\"max\\\",(r=>n?r<e:r<=e||`Expected a ${t.type} less than ${n?\\\"\\\":\\\"or equal to \\\"}${e} but received \\\\`${r}\\\\``))},e.min=function(t,e,r={}){const{exclusive:n}=r;return s(t,\\\"min\\\",(r=>n?r>e:r>=e||`Expected a ${t.type} greater than ${n?\\\"\\\":\\\"or equal to \\\"}${e} but received \\\\`${r}\\\\``))},e.nonempty=function(t){return s(t,\\\"nonempty\\\",(e=>o(e)>0||`Expected a nonempty ${t.type} but received an empty one`))},e.pattern=function(t,e){return s(t,\\\"pattern\\\",(r=>e.test(r)||`Expected a ${t.type} matching \\\\`/${e.source}/\\\\` but received \\\"${r}\\\"`))},e.size=function(t,e,r=e){const n=`Expected a ${t.type}`,i=e===r?`of \\\\`${e}\\\\``:`between \\\\`${e}\\\\` and \\\\`${r}\\\\``;return s(t,\\\"size\\\",(t=>{if(\\\"number\\\"==typeof t||t instanceof Date)return e<=t&&t<=r||`${n} ${i} but received \\\\`${t}\\\\``;if(t instanceof Map||t instanceof Set){const{size:o}=t;return e<=o&&o<=r||`${n} with a size ${i} but received one with a size of \\\\`${o}\\\\``}const{length:o}=t;return e<=o&&o<=r||`${n} with a length ${i} but received one with a length of \\\\`${o}\\\\``}))},e.refine=s},7792:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.unknown=e.union=e.type=e.tuple=e.string=e.set=e.regexp=e.record=e.optional=e.object=e.number=e.nullable=e.never=e.map=e.literal=e.intersection=e.integer=e.instance=e.func=e.enums=e.date=e.boolean=e.bigint=e.array=e.any=void 0;const n=r(9067),i=r(639),o=r(5991);function s(){return(0,o.define)(\\\"never\\\",(()=>!1))}e.any=function(){return(0,o.define)(\\\"any\\\",(()=>!0))},e.array=function(t){return new n.Struct({type:\\\"array\\\",schema:t,*entries(e){if(t&&Array.isArray(e))for(const[r,n]of e.entries())yield[r,n,t]},coercer:t=>Array.isArray(t)?t.slice():t,validator:t=>Array.isArray(t)||`Expected an array value, but received: ${(0,i.print)(t)}`})},e.bigint=function(){return(0,o.define)(\\\"bigint\\\",(t=>\\\"bigint\\\"==typeof t))},e.boolean=function(){return(0,o.define)(\\\"boolean\\\",(t=>\\\"boolean\\\"==typeof t))},e.date=function(){return(0,o.define)(\\\"date\\\",(t=>t instanceof Date&&!isNaN(t.getTime())||`Expected a valid \\\\`Date\\\\` object, but received: ${(0,i.print)(t)}`))},e.enums=function(t){const e={},r=t.map((t=>(0,i.print)(t))).join();for(const r of t)e[r]=r;return new n.Struct({type:\\\"enums\\\",schema:e,validator:e=>t.includes(e)||`Expected one of \\\\`${r}\\\\`, but received: ${(0,i.print)(e)}`})},e.func=function(){return(0,o.define)(\\\"func\\\",(t=>\\\"function\\\"==typeof t||`Expected a function, but received: ${(0,i.print)(t)}`))},e.instance=function(t){return(0,o.define)(\\\"instance\\\",(e=>e instanceof t||`Expected a \\\\`${t.name}\\\\` instance, but received: ${(0,i.print)(e)}`))},e.integer=function(){return(0,o.define)(\\\"integer\\\",(t=>\\\"number\\\"==typeof t&&!isNaN(t)&&Number.isInteger(t)||`Expected an integer, but received: ${(0,i.print)(t)}`))},e.intersection=function(t){return new n.Struct({type:\\\"intersection\\\",schema:null,*entries(e,r){for(const{entries:n}of t)yield*n(e,r)},*validator(e,r){for(const{validator:n}of t)yield*n(e,r)},*refiner(e,r){for(const{refiner:n}of t)yield*n(e,r)}})},e.literal=function(t){const e=(0,i.print)(t),r=typeof t;return new n.Struct({type:\\\"literal\\\",schema:\\\"string\\\"===r||\\\"number\\\"===r||\\\"boolean\\\"===r?t:null,validator:r=>r===t||`Expected the literal \\\\`${e}\\\\`, but received: ${(0,i.print)(r)}`})},e.map=function(t,e){return new n.Struct({type:\\\"map\\\",schema:null,*entries(r){if(t&&e&&r instanceof Map)for(const[n,i]of r.entries())yield[n,n,t],yield[n,i,e]},coercer:t=>t instanceof Map?new Map(t):t,validator:t=>t instanceof Map||`Expected a \\\\`Map\\\\` object, but received: ${(0,i.print)(t)}`})},e.never=s,e.nullable=function(t){return new n.Struct({...t,validator:(e,r)=>null===e||t.validator(e,r),refiner:(e,r)=>null===e||t.refiner(e,r)})},e.number=function(){return(0,o.define)(\\\"number\\\",(t=>\\\"number\\\"==typeof t&&!isNaN(t)||`Expected a number, but received: ${(0,i.print)(t)}`))},e.object=function(t){const e=t?Object.keys(t):[],r=s();return new n.Struct({type:\\\"object\\\",schema:t??null,*entries(n){if(t&&(0,i.isObject)(n)){const i=new Set(Object.keys(n));for(const r of e)i.delete(r),yield[r,n[r],t[r]];for(const t of i)yield[t,n[t],r]}},validator:t=>(0,i.isObject)(t)||`Expected an object, but received: ${(0,i.print)(t)}`,coercer:t=>(0,i.isObject)(t)?{...t}:t})},e.optional=function(t){return new n.Struct({...t,validator:(e,r)=>void 0===e||t.validator(e,r),refiner:(e,r)=>void 0===e||t.refiner(e,r)})},e.record=function(t,e){return new n.Struct({type:\\\"record\\\",schema:null,*entries(r){if((0,i.isObject)(r))for(const n in r){const i=r[n];yield[n,n,t],yield[n,i,e]}},validator:t=>(0,i.isObject)(t)||`Expected an object, but received: ${(0,i.print)(t)}`})},e.regexp=function(){return(0,o.define)(\\\"regexp\\\",(t=>t instanceof RegExp))},e.set=function(t){return new n.Struct({type:\\\"set\\\",schema:null,*entries(e){if(t&&e instanceof Set)for(const r of e)yield[r,r,t]},coercer:t=>t instanceof Set?new Set(t):t,validator:t=>t instanceof Set||`Expected a \\\\`Set\\\\` object, but received: ${(0,i.print)(t)}`})},e.string=function(){return(0,o.define)(\\\"string\\\",(t=>\\\"string\\\"==typeof t||`Expected a string, but received: ${(0,i.print)(t)}`))},e.tuple=function(t){const e=s();return new n.Struct({type:\\\"tuple\\\",schema:null,*entries(r){if(Array.isArray(r)){const n=Math.max(t.length,r.length);for(let i=0;i<n;i++)yield[i,r[i],t[i]||e]}},validator:t=>Array.isArray(t)||`Expected an array, but received: ${(0,i.print)(t)}`})},e.type=function(t){const e=Object.keys(t);return new n.Struct({type:\\\"type\\\",schema:t,*entries(r){if((0,i.isObject)(r))for(const n of e)yield[n,r[n],t[n]]},validator:t=>(0,i.isObject)(t)||`Expected an object, but received: ${(0,i.print)(t)}`,coercer:t=>(0,i.isObject)(t)?{...t}:t})},e.union=function(t){const e=t.map((t=>t.type)).join(\\\" | \\\");return new n.Struct({type:\\\"union\\\",schema:null,coercer(e){for(const r of t){const[t,n]=r.validate(e,{coerce:!0});if(!t)return n}return e},validator(r,n){const o=[];for(const e of t){const[...t]=(0,i.run)(r,e,n),[s]=t;if(!s?.[0])return[];for(const[e]of t)e&&o.push(e)}return[`Expected the value to satisfy a union of \\\\`${e}\\\\`, but received: ${(0,i.print)(r)}`,...o]}})},e.unknown=function(){return(0,o.define)(\\\"unknown\\\",(()=>!0))}},5991:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.pick=e.partial=e.omit=e.lazy=e.dynamic=e.deprecated=e.define=e.assign=void 0;const n=r(9067),i=r(7792);e.assign=function(...t){const e=\\\"type\\\"===t[0]?.type,r=t.map((({schema:t})=>t)),n=Object.assign({},...r);return e?(0,i.type)(n):(0,i.object)(n)},e.define=function(t,e){return new n.Struct({type:t,schema:null,validator:e})},e.deprecated=function(t,e){return new n.Struct({...t,refiner:(e,r)=>void 0===e||t.refiner(e,r),validator:(r,n)=>void 0===r||(e(r,n),t.validator(r,n))})},e.dynamic=function(t){return new n.Struct({type:\\\"dynamic\\\",schema:null,*entries(e,r){const n=t(e,r);yield*n.entries(e,r)},validator:(e,r)=>t(e,r).validator(e,r),coercer:(e,r)=>t(e,r).coercer(e,r),refiner:(e,r)=>t(e,r).refiner(e,r)})},e.lazy=function(t){let e;return new n.Struct({type:\\\"lazy\\\",schema:null,*entries(r,n){e??(e=t()),yield*e.entries(r,n)},validator:(r,n)=>(e??(e=t()),e.validator(r,n)),coercer:(r,n)=>(e??(e=t()),e.coercer(r,n)),refiner:(r,n)=>(e??(e=t()),e.refiner(r,n))})},e.omit=function(t,e){const{schema:r}=t,n={...r};for(const t of e)delete n[t];return\\\"type\\\"===t.type?(0,i.type)(n):(0,i.object)(n)},e.partial=function(t){const e=t instanceof n.Struct,r=e?{...t.schema}:{...t};for(const t in r)r[t]=(0,i.optional)(r[t]);return e&&\\\"type\\\"===t.type?(0,i.type)(r):(0,i.object)(r)},e.pick=function(t,e){const{schema:r}=t,n={};for(const t of e)n[t]=r[t];return\\\"type\\\"===t.type?(0,i.type)(n):(0,i.object)(n)}},639:(t,e)=>{\\\"use strict\\\";function r(t){return\\\"object\\\"==typeof t&&null!==t}function n(t){return\\\"symbol\\\"==typeof t?t.toString():\\\"string\\\"==typeof t?JSON.stringify(t):`${t}`}function i(t,e,r,i){if(!0===t)return;!1===t?t={}:\\\"string\\\"==typeof t&&(t={message:t});const{path:o,branch:s}=e,{type:a}=r,{refinement:u,message:c=`Expected a value of type \\\\`${a}\\\\`${u?` with refinement \\\\`${u}\\\\``:\\\"\\\"}, but received: \\\\`${n(i)}\\\\``}=t;return{value:i,type:a,refinement:u,key:o[o.length-1],path:o,branch:s,...t,message:c}}Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.run=e.toFailures=e.toFailure=e.shiftIterator=e.print=e.isPlainObject=e.isObject=void 0,e.isObject=r,e.isPlainObject=function(t){if(\\\"[object Object]\\\"!==Object.prototype.toString.call(t))return!1;const e=Object.getPrototypeOf(t);return null===e||e===Object.prototype},e.print=n,e.shiftIterator=function(t){const{done:e,value:r}=t.next();return e?void 0:r},e.toFailure=i,e.toFailures=function*(t,e,n,o){(function(t){return r(t)&&\\\"function\\\"==typeof t[Symbol.iterator]})(t)||(t=[t]);for(const r of t){const t=i(r,e,n,o);t&&(yield t)}},e.run=function*t(e,n,i={}){const{path:o=[],branch:s=[e],coerce:a=!1,mask:u=!1}=i,c={path:o,branch:s};if(a&&(e=n.coercer(e,c),u&&\\\"type\\\"!==n.type&&r(n.schema)&&r(e)&&!Array.isArray(e)))for(const t in e)void 0===n.schema[t]&&delete e[t];let l=\\\"valid\\\";for(const t of n.validator(e,c))t.explanation=i.message,l=\\\"not_valid\\\",yield[t,void 0];for(let[f,h,d]of n.entries(e,c)){const n=t(h,d,{path:void 0===f?o:[...o,f],branch:void 0===f?s:[...s,h],coerce:a,mask:u,message:i.message});for(const t of n)t[0]?(l=null===t[0].refinement||void 0===t[0].refinement?\\\"not_valid\\\":\\\"not_refined\\\",yield[t[0],void 0]):a&&(h=t[1],void 0===f?e=h:e instanceof Map?e.set(f,h):e instanceof Set?e.add(h):r(e)&&(void 0!==h||f in e)&&(e[f]=h))}if(\\\"not_valid\\\"!==l)for(const t of n.refiner(e,c))t.explanation=i.message,l=\\\"not_refined\\\",yield[t,void 0];\\\"valid\\\"===l&&(yield[void 0,e])}},2011:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.assertExhaustive=e.assertStruct=e.assert=e.AssertionError=void 0;const n=r(5620),i=r(5940);function o(t,e){return r=t,Boolean(\\\"string\\\"==typeof r?.prototype?.constructor?.name)?new t({message:e}):t({message:e});var r}class s extends Error{constructor(t){super(t.message),this.code=\\\"ERR_ASSERTION\\\"}}e.AssertionError=s,e.assert=function(t,e=\\\"Assertion failed.\\\",r=s){if(!t){if(e instanceof Error)throw e;throw o(r,e)}},e.assertStruct=function(t,e,r=\\\"Assertion failed\\\",a=s){try{(0,n.assert)(t,e)}catch(t){throw o(a,`${r}: ${function(t){return(0,i.getErrorMessage)(t).replace(/\\\\.$/u,\\\"\\\")}(t)}.`)}},e.assertExhaustive=function(t){throw new Error(\\\"Invalid branch reached. Should be detected during compilation.\\\")}},472:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.base64=void 0;const n=r(5620),i=r(2011);e.base64=(t,e={})=>{const r=e.paddingRequired??!1,o=e.characterSet??\\\"base64\\\";let s,a;return\\\"base64\\\"===o?s=String.raw`[A-Za-z0-9+\\\\/]`:((0,i.assert)(\\\"base64url\\\"===o),s=String.raw`[-_A-Za-z0-9]`),a=r?new RegExp(`^(?:${s}{4})*(?:${s}{3}=|${s}{2}==)?$`,\\\"u\\\"):new RegExp(`^(?:${s}{4})*(?:${s}{2,3}|${s}{3}=|${s}{2}==)?$`,\\\"u\\\"),(0,n.pattern)(t,a)}},7862:(t,e,r)=>{\\\"use strict\\\";var n=r(8287).hp;Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createDataView=e.concatBytes=e.valueToBytes=e.base64ToBytes=e.stringToBytes=e.numberToBytes=e.signedBigIntToBytes=e.bigIntToBytes=e.hexToBytes=e.bytesToBase64=e.bytesToString=e.bytesToNumber=e.bytesToSignedBigInt=e.bytesToBigInt=e.bytesToHex=e.assertIsBytes=e.isBytes=void 0;const i=r(3203),o=r(2011),s=r(3976),a=48,u=58,c=87;const l=function(){const t=[];return()=>{if(0===t.length)for(let e=0;e<256;e++)t.push(e.toString(16).padStart(2,\\\"0\\\"));return t}}();function f(t){return t instanceof Uint8Array}function h(t){(0,o.assert)(f(t),\\\"Value must be a Uint8Array.\\\")}function d(t){if(h(t),0===t.length)return\\\"0x\\\";const e=l(),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=e[t[n]];return(0,s.add0x)(r.join(\\\"\\\"))}function p(t){h(t);const e=d(t);return BigInt(e)}function g(t){if(\\\"0x\\\"===t?.toLowerCase?.())return new Uint8Array;(0,s.assertIsHexString)(t);const e=(0,s.remove0x)(t).toLowerCase(),r=e.length%2==0?e:`0${e}`,n=new Uint8Array(r.length/2);for(let t=0;t<n.length;t++){const e=r.charCodeAt(2*t),i=r.charCodeAt(2*t+1),o=e-(e<u?a:c),s=i-(i<u?a:c);n[t]=16*o+s}return n}function m(t){(0,o.assert)(\\\"bigint\\\"==typeof t,\\\"Value must be a bigint.\\\"),(0,o.assert)(t>=BigInt(0),\\\"Value must be a non-negative bigint.\\\");return g(t.toString(16))}function y(t){(0,o.assert)(\\\"number\\\"==typeof t,\\\"Value must be a number.\\\"),(0,o.assert)(t>=0,\\\"Value must be a non-negative number.\\\"),(0,o.assert)(Number.isSafeInteger(t),\\\"Value is not a safe integer. Use `bigIntToBytes` instead.\\\");return g(t.toString(16))}function v(t){return(0,o.assert)(\\\"string\\\"==typeof t,\\\"Value must be a string.\\\"),(new TextEncoder).encode(t)}function w(t){if(\\\"bigint\\\"==typeof t)return m(t);if(\\\"number\\\"==typeof t)return y(t);if(\\\"string\\\"==typeof t)return t.startsWith(\\\"0x\\\")?g(t):v(t);if(f(t))return t;throw new TypeError(`Unsupported value type: \\\"${typeof t}\\\".`)}e.isBytes=f,e.assertIsBytes=h,e.bytesToHex=d,e.bytesToBigInt=p,e.bytesToSignedBigInt=function(t){h(t);let e=BigInt(0);for(const r of t)e=(e<<BigInt(8))+BigInt(r);return BigInt.asIntN(8*t.length,e)},e.bytesToNumber=function(t){h(t);const e=p(t);return(0,o.assert)(e<=BigInt(Number.MAX_SAFE_INTEGER),\\\"Number is not a safe integer. Use `bytesToBigInt` instead.\\\"),Number(e)},e.bytesToString=function(t){return h(t),(new TextDecoder).decode(t)},e.bytesToBase64=function(t){return h(t),i.base64.encode(t)},e.hexToBytes=g,e.bigIntToBytes=m,e.signedBigIntToBytes=function(t,e){(0,o.assert)(\\\"bigint\\\"==typeof t,\\\"Value must be a bigint.\\\"),(0,o.assert)(\\\"number\\\"==typeof e,\\\"Byte length must be a number.\\\"),(0,o.assert)(e>0,\\\"Byte length must be greater than 0.\\\"),(0,o.assert)(function(t,e){(0,o.assert)(e>0);const r=t>>BigInt(31);return!((~t&r)+(t&~r)>>BigInt(8*e-1))}(t,e),\\\"Byte length is too small to represent the given value.\\\");let r=t;const n=new Uint8Array(e);for(let t=0;t<n.length;t++)n[t]=Number(BigInt.asUintN(8,r)),r>>=BigInt(8);return n.reverse()},e.numberToBytes=y,e.stringToBytes=v,e.base64ToBytes=function(t){return(0,o.assert)(\\\"string\\\"==typeof t,\\\"Value must be a string.\\\"),i.base64.decode(t)},e.valueToBytes=w,e.concatBytes=function(t){const e=new Array(t.length);let r=0;for(let n=0;n<t.length;n++){const i=w(t[n]);e[n]=i,r+=i.length}const n=new Uint8Array(r);for(let t=0,r=0;t<e.length;t++)n.set(e[t],r),r+=e[t].length;return n},e.createDataView=function(t){if(void 0!==n&&t instanceof n){const e=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength);return new DataView(e)}return new DataView(t.buffer,t.byteOffset,t.byteLength)}},7690:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.toCaipChainId=e.parseCaipAccountId=e.parseCaipChainId=e.isCaipAccountAddress=e.isCaipAccountId=e.isCaipReference=e.isCaipNamespace=e.isCaipChainId=e.KnownCaipNamespace=e.CaipAccountAddressStruct=e.CaipAccountIdStruct=e.CaipReferenceStruct=e.CaipNamespaceStruct=e.CaipChainIdStruct=e.CAIP_ACCOUNT_ADDRESS_REGEX=e.CAIP_ACCOUNT_ID_REGEX=e.CAIP_REFERENCE_REGEX=e.CAIP_NAMESPACE_REGEX=e.CAIP_CHAIN_ID_REGEX=void 0;const n=r(5620);function i(t){return(0,n.is)(t,e.CaipNamespaceStruct)}function o(t){return(0,n.is)(t,e.CaipReferenceStruct)}e.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,e.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,e.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,e.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,e.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,e.CaipChainIdStruct=(0,n.pattern)((0,n.string)(),e.CAIP_CHAIN_ID_REGEX),e.CaipNamespaceStruct=(0,n.pattern)((0,n.string)(),e.CAIP_NAMESPACE_REGEX),e.CaipReferenceStruct=(0,n.pattern)((0,n.string)(),e.CAIP_REFERENCE_REGEX),e.CaipAccountIdStruct=(0,n.pattern)((0,n.string)(),e.CAIP_ACCOUNT_ID_REGEX),e.CaipAccountAddressStruct=(0,n.pattern)((0,n.string)(),e.CAIP_ACCOUNT_ADDRESS_REGEX),function(t){t.Eip155=\\\"eip155\\\"}(e.KnownCaipNamespace||(e.KnownCaipNamespace={})),e.isCaipChainId=function(t){return(0,n.is)(t,e.CaipChainIdStruct)},e.isCaipNamespace=i,e.isCaipReference=o,e.isCaipAccountId=function(t){return(0,n.is)(t,e.CaipAccountIdStruct)},e.isCaipAccountAddress=function(t){return(0,n.is)(t,e.CaipAccountAddressStruct)},e.parseCaipChainId=function(t){const r=e.CAIP_CHAIN_ID_REGEX.exec(t);if(!r?.groups)throw new Error(\\\"Invalid CAIP chain ID.\\\");return{namespace:r.groups.namespace,reference:r.groups.reference}},e.parseCaipAccountId=function(t){const r=e.CAIP_ACCOUNT_ID_REGEX.exec(t);if(!r?.groups)throw new Error(\\\"Invalid CAIP account ID.\\\");return{address:r.groups.accountAddress,chainId:r.groups.chainId,chain:{namespace:r.groups.namespace,reference:r.groups.reference}}},e.toCaipChainId=function(t,r){if(!i(t))throw new Error(`Invalid \\\"namespace\\\", must match: ${e.CAIP_NAMESPACE_REGEX.toString()}`);if(!o(r))throw new Error(`Invalid \\\"reference\\\", must match: ${e.CAIP_REFERENCE_REGEX.toString()}`);return`${t}:${r}`}},8860:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.ChecksumStruct=void 0;const n=r(5620),i=r(472);e.ChecksumStruct=(0,n.size)((0,i.base64)((0,n.string)(),{paddingRequired:!0}),44,44)},5211:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createHex=e.createBytes=e.createBigInt=e.createNumber=void 0;const n=r(5620),i=r(2011),o=r(7862),s=r(3976),a=(0,n.union)([(0,n.number)(),(0,n.bigint)(),(0,n.string)(),s.StrictHexStruct]),u=(0,n.coerce)((0,n.number)(),a,Number),c=(0,n.coerce)((0,n.bigint)(),a,BigInt),l=((0,n.union)([s.StrictHexStruct,(0,n.instance)(Uint8Array)]),(0,n.coerce)((0,n.instance)(Uint8Array),(0,n.union)([s.StrictHexStruct]),o.hexToBytes)),f=(0,n.coerce)(s.StrictHexStruct,(0,n.instance)(Uint8Array),o.bytesToHex);e.createNumber=function(t){try{const e=(0,n.create)(t,u);return(0,i.assert)(Number.isFinite(e),`Expected a number-like value, got \\\"${t}\\\".`),e}catch(e){if(e instanceof n.StructError)throw new Error(`Expected a number-like value, got \\\"${t}\\\".`);throw e}},e.createBigInt=function(t){try{return(0,n.create)(t,c)}catch(t){if(t instanceof n.StructError)throw new Error(`Expected a number-like value, got \\\"${String(t.value)}\\\".`);throw t}},e.createBytes=function(t){if(\\\"string\\\"==typeof t&&\\\"0x\\\"===t.toLowerCase())return new Uint8Array;try{return(0,n.create)(t,l)}catch(t){if(t instanceof n.StructError)throw new Error(`Expected a bytes-like value, got \\\"${String(t.value)}\\\".`);throw t}},e.createHex=function(t){if(t instanceof Uint8Array&&0===t.length||\\\"string\\\"==typeof t&&\\\"0x\\\"===t.toLowerCase())return\\\"0x\\\";try{return(0,n.create)(t,f)}catch(t){if(t instanceof n.StructError)throw new Error(`Expected a bytes-like value, got \\\"${String(t.value)}\\\".`);throw t}}},4180:function(t,e){\\\"use strict\\\";var r,n,i=this&&this.__classPrivateFieldGet||function(t,e,r,n){if(\\\"a\\\"===r&&!n)throw new TypeError(\\\"Private accessor was defined without a getter\\\");if(\\\"function\\\"==typeof e?t!==e||!n:!e.has(t))throw new TypeError(\\\"Cannot read private member from an object whose class did not declare it\\\");return\\\"m\\\"===r?n:\\\"a\\\"===r?n.call(t):n?n.value:e.get(t)},o=this&&this.__classPrivateFieldSet||function(t,e,r,n,i){if(\\\"m\\\"===n)throw new TypeError(\\\"Private method is not writable\\\");if(\\\"a\\\"===n&&!i)throw new TypeError(\\\"Private accessor was defined without a setter\\\");if(\\\"function\\\"==typeof e?t!==e||!i:!e.has(t))throw new TypeError(\\\"Cannot write private member to an object whose class did not declare it\\\");return\\\"a\\\"===n?i.call(t,r):i?i.value=r:e.set(t,r),r};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.FrozenSet=e.FrozenMap=void 0;class s{get size(){return i(this,r,\\\"f\\\").size}[(r=new WeakMap,Symbol.iterator)](){return i(this,r,\\\"f\\\")[Symbol.iterator]()}constructor(t){r.set(this,void 0),o(this,r,new Map(t),\\\"f\\\"),Object.freeze(this)}entries(){return i(this,r,\\\"f\\\").entries()}forEach(t,e){return i(this,r,\\\"f\\\").forEach(((r,n,i)=>t.call(e,r,n,this)))}get(t){return i(this,r,\\\"f\\\").get(t)}has(t){return i(this,r,\\\"f\\\").has(t)}keys(){return i(this,r,\\\"f\\\").keys()}values(){return i(this,r,\\\"f\\\").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map((([t,e])=>`${String(t)} => ${String(e)}`)).join(\\\", \\\")} `:\\\"\\\"}}`}}e.FrozenMap=s;class a{get size(){return i(this,n,\\\"f\\\").size}[(n=new WeakMap,Symbol.iterator)](){return i(this,n,\\\"f\\\")[Symbol.iterator]()}constructor(t){n.set(this,void 0),o(this,n,new Set(t),\\\"f\\\"),Object.freeze(this)}entries(){return i(this,n,\\\"f\\\").entries()}forEach(t,e){return i(this,n,\\\"f\\\").forEach(((r,n,i)=>t.call(e,r,n,this)))}has(t){return i(this,n,\\\"f\\\").has(t)}keys(){return i(this,n,\\\"f\\\").keys()}values(){return i(this,n,\\\"f\\\").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map((t=>String(t))).join(\\\", \\\")} `:\\\"\\\"}}`}}e.FrozenSet=a,Object.freeze(s),Object.freeze(s.prototype),Object.freeze(a),Object.freeze(a.prototype)},1630:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},5940:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.wrapError=e.getErrorMessage=e.isErrorWithStack=e.isErrorWithMessage=e.isErrorWithCode=void 0;const n=r(1843),i=r(3745);function o(t){return\\\"object\\\"==typeof t&&null!==t&&\\\"code\\\"in t}function s(t){return\\\"object\\\"==typeof t&&null!==t&&\\\"message\\\"in t}e.isErrorWithCode=o,e.isErrorWithMessage=s,e.isErrorWithStack=function(t){return\\\"object\\\"==typeof t&&null!==t&&\\\"stack\\\"in t},e.getErrorMessage=function(t){return s(t)&&\\\"string\\\"==typeof t.message?t.message:(0,i.isNullOrUndefined)(t)?\\\"\\\":String(t)},e.wrapError=function(t,e){if((r=t)instanceof Error||(0,i.isObject)(r)&&\\\"Error\\\"===r.constructor.name){let r;return r=2===Error.length?new Error(e,{cause:t}):new n.ErrorWithCause(e,{cause:t}),o(t)&&(r.code=t.code),r}var r;return e.length>0?new Error(`${String(t)}: ${e}`):new Error(String(t))}},3976:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.remove0x=e.add0x=e.isValidChecksumAddress=e.getChecksumAddress=e.isValidHexAddress=e.assertIsStrictHexString=e.assertIsHexString=e.isStrictHexString=e.isHexString=e.HexChecksumAddressStruct=e.HexAddressStruct=e.StrictHexStruct=e.HexStruct=void 0;const n=r(5620),i=r(2955),o=r(2011),s=r(7862);function a(t){return(0,n.is)(t,e.HexStruct)}function u(t){return(0,n.is)(t,e.StrictHexStruct)}function c(t){(0,o.assert)((0,n.is)(t,e.HexChecksumAddressStruct),\\\"Invalid hex address.\\\");const r=f(t.toLowerCase()),a=f((0,s.bytesToHex)((0,i.keccak_256)(r)));return`0x${r.split(\\\"\\\").map(((t,e)=>{const r=a[e];return(0,o.assert)((0,n.is)(r,(0,n.string)()),\\\"Hash shorter than address.\\\"),parseInt(r,16)>7?t.toUpperCase():t})).join(\\\"\\\")}`}function l(t){return!!(0,n.is)(t,e.HexChecksumAddressStruct)&&c(t)===t}function f(t){return t.startsWith(\\\"0x\\\")||t.startsWith(\\\"0X\\\")?t.substring(2):t}e.HexStruct=(0,n.pattern)((0,n.string)(),/^(?:0x)?[0-9a-f]+$/iu),e.StrictHexStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-f]+$/iu),e.HexAddressStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-f]{40}$/u),e.HexChecksumAddressStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-fA-F]{40}$/u),e.isHexString=a,e.isStrictHexString=u,e.assertIsHexString=function(t){(0,o.assert)(a(t),\\\"Value must be a hexadecimal string.\\\")},e.assertIsStrictHexString=function(t){(0,o.assert)(u(t),'Value must be a hexadecimal string, starting with \\\"0x\\\".')},e.isValidHexAddress=function(t){return(0,n.is)(t,e.HexAddressStruct)||l(t)},e.getChecksumAddress=c,e.isValidChecksumAddress=l,e.add0x=function(t){return t.startsWith(\\\"0x\\\")?t:t.startsWith(\\\"0X\\\")?`0x${t.substring(2)}`:`0x${t}`},e.remove0x=f},2367:function(t,e,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)\\\"default\\\"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),i(r(2011),e),i(r(472),e),i(r(7862),e),i(r(7690),e),i(r(8860),e),i(r(5211),e),i(r(4180),e),i(r(1630),e),i(r(5940),e),i(r(3976),e),i(r(87),e),i(r(4956),e),i(r(8912),e),i(r(3745),e),i(r(5770),e),i(r(3028),e),i(r(2812),e),i(r(2954),e),i(r(6871),e),i(r(9266),e)},87:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.getJsonRpcIdValidator=e.assertIsJsonRpcError=e.isJsonRpcError=e.assertIsJsonRpcFailure=e.isJsonRpcFailure=e.assertIsJsonRpcSuccess=e.isJsonRpcSuccess=e.assertIsJsonRpcResponse=e.isJsonRpcResponse=e.assertIsPendingJsonRpcResponse=e.isPendingJsonRpcResponse=e.JsonRpcResponseStruct=e.JsonRpcFailureStruct=e.JsonRpcSuccessStruct=e.PendingJsonRpcResponseStruct=e.assertIsJsonRpcRequest=e.isJsonRpcRequest=e.assertIsJsonRpcNotification=e.isJsonRpcNotification=e.JsonRpcNotificationStruct=e.JsonRpcRequestStruct=e.JsonRpcParamsStruct=e.JsonRpcErrorStruct=e.JsonRpcIdStruct=e.JsonRpcVersionStruct=e.jsonrpc2=e.getJsonSize=e.getSafeJson=e.isValidJson=e.JsonStruct=e.UnsafeJsonStruct=e.exactOptional=e.object=void 0;const n=r(5620),i=r(2011),o=r(3745);function s({path:t,branch:e}){const r=t[t.length-1];return(0,o.hasProperty)(e[e.length-2],r)}function a(t){return new n.Struct({...t,type:`optional ${t.type}`,validator:(e,r)=>!s(r)||t.validator(e,r),refiner:(e,r)=>!s(r)||t.refiner(e,r)})}e.object=t=>(0,n.object)(t),e.exactOptional=a;function u(t){return(0,n.create)(t,e.JsonStruct)}e.UnsafeJsonStruct=(0,n.union)([(0,n.literal)(null),(0,n.boolean)(),(0,n.define)(\\\"finite number\\\",(t=>(0,n.is)(t,(0,n.number)())&&Number.isFinite(t))),(0,n.string)(),(0,n.array)((0,n.lazy)((()=>e.UnsafeJsonStruct))),(0,n.record)((0,n.string)(),(0,n.lazy)((()=>e.UnsafeJsonStruct)))]),e.JsonStruct=(0,n.coerce)(e.UnsafeJsonStruct,(0,n.any)(),(t=>((0,i.assertStruct)(t,e.UnsafeJsonStruct),JSON.parse(JSON.stringify(t,((t,e)=>{if(\\\"__proto__\\\"!==t&&\\\"constructor\\\"!==t)return e})))))),e.isValidJson=function(t){try{return u(t),!0}catch{return!1}},e.getSafeJson=u,e.getJsonSize=function(t){(0,i.assertStruct)(t,e.JsonStruct,\\\"Invalid JSON value\\\");const r=JSON.stringify(t);return(new TextEncoder).encode(r).byteLength},e.jsonrpc2=\\\"2.0\\\",e.JsonRpcVersionStruct=(0,n.literal)(e.jsonrpc2),e.JsonRpcIdStruct=(0,n.nullable)((0,n.union)([(0,n.number)(),(0,n.string)()])),e.JsonRpcErrorStruct=(0,e.object)({code:(0,n.integer)(),message:(0,n.string)(),data:a(e.JsonStruct),stack:a((0,n.string)())}),e.JsonRpcParamsStruct=(0,n.union)([(0,n.record)((0,n.string)(),e.JsonStruct),(0,n.array)(e.JsonStruct)]),e.JsonRpcRequestStruct=(0,e.object)({id:e.JsonRpcIdStruct,jsonrpc:e.JsonRpcVersionStruct,method:(0,n.string)(),params:a(e.JsonRpcParamsStruct)}),e.JsonRpcNotificationStruct=(0,e.object)({jsonrpc:e.JsonRpcVersionStruct,method:(0,n.string)(),params:a(e.JsonRpcParamsStruct)}),e.isJsonRpcNotification=function(t){return(0,n.is)(t,e.JsonRpcNotificationStruct)},e.assertIsJsonRpcNotification=function(t,r){(0,i.assertStruct)(t,e.JsonRpcNotificationStruct,\\\"Invalid JSON-RPC notification\\\",r)},e.isJsonRpcRequest=function(t){return(0,n.is)(t,e.JsonRpcRequestStruct)},e.assertIsJsonRpcRequest=function(t,r){(0,i.assertStruct)(t,e.JsonRpcRequestStruct,\\\"Invalid JSON-RPC request\\\",r)},e.PendingJsonRpcResponseStruct=(0,n.object)({id:e.JsonRpcIdStruct,jsonrpc:e.JsonRpcVersionStruct,result:(0,n.optional)((0,n.unknown)()),error:(0,n.optional)(e.JsonRpcErrorStruct)}),e.JsonRpcSuccessStruct=(0,e.object)({id:e.JsonRpcIdStruct,jsonrpc:e.JsonRpcVersionStruct,result:e.JsonStruct}),e.JsonRpcFailureStruct=(0,e.object)({id:e.JsonRpcIdStruct,jsonrpc:e.JsonRpcVersionStruct,error:e.JsonRpcErrorStruct}),e.JsonRpcResponseStruct=(0,n.union)([e.JsonRpcSuccessStruct,e.JsonRpcFailureStruct]),e.isPendingJsonRpcResponse=function(t){return(0,n.is)(t,e.PendingJsonRpcResponseStruct)},e.assertIsPendingJsonRpcResponse=function(t,r){(0,i.assertStruct)(t,e.PendingJsonRpcResponseStruct,\\\"Invalid pending JSON-RPC response\\\",r)},e.isJsonRpcResponse=function(t){return(0,n.is)(t,e.JsonRpcResponseStruct)},e.assertIsJsonRpcResponse=function(t,r){(0,i.assertStruct)(t,e.JsonRpcResponseStruct,\\\"Invalid JSON-RPC response\\\",r)},e.isJsonRpcSuccess=function(t){return(0,n.is)(t,e.JsonRpcSuccessStruct)},e.assertIsJsonRpcSuccess=function(t,r){(0,i.assertStruct)(t,e.JsonRpcSuccessStruct,\\\"Invalid JSON-RPC success response\\\",r)},e.isJsonRpcFailure=function(t){return(0,n.is)(t,e.JsonRpcFailureStruct)},e.assertIsJsonRpcFailure=function(t,r){(0,i.assertStruct)(t,e.JsonRpcFailureStruct,\\\"Invalid JSON-RPC failure response\\\",r)},e.isJsonRpcError=function(t){return(0,n.is)(t,e.JsonRpcErrorStruct)},e.assertIsJsonRpcError=function(t,r){(0,i.assertStruct)(t,e.JsonRpcErrorStruct,\\\"Invalid JSON-RPC error\\\",r)},e.getJsonRpcIdValidator=function(t){const{permitEmptyString:e,permitFractions:r,permitNull:n}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...t};return t=>Boolean(\\\"number\\\"==typeof t&&(r||Number.isInteger(t))||\\\"string\\\"==typeof t&&(e||t.length>0)||n&&null===t)}},4956:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},8912:function(t,e,r){\\\"use strict\\\";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createModuleLogger=e.createProjectLogger=void 0;const i=(0,n(r(7833)).default)(\\\"metamask\\\");e.createProjectLogger=function(t){return i.extend(t)},e.createModuleLogger=function(t,e){return t.extend(e)}},3745:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.calculateNumberSize=e.calculateStringSize=e.isASCII=e.isPlainObject=e.ESCAPE_CHARACTERS_REGEXP=e.JsonSize=e.getKnownPropertyNames=e.hasProperty=e.isObject=e.isNullOrUndefined=e.isNonEmptyArray=void 0,e.isNonEmptyArray=function(t){return Array.isArray(t)&&t.length>0},e.isNullOrUndefined=function(t){return null==t},e.isObject=function(t){return Boolean(t)&&\\\"object\\\"==typeof t&&!Array.isArray(t)};function r(t){return t.charCodeAt(0)<=127}e.hasProperty=(t,e)=>Object.hasOwnProperty.call(t,e),e.getKnownPropertyNames=function(t){return Object.getOwnPropertyNames(t)},function(t){t[t.Null=4]=\\\"Null\\\",t[t.Comma=1]=\\\"Comma\\\",t[t.Wrapper=1]=\\\"Wrapper\\\",t[t.True=4]=\\\"True\\\",t[t.False=5]=\\\"False\\\",t[t.Quote=1]=\\\"Quote\\\",t[t.Colon=1]=\\\"Colon\\\",t[t.Date=24]=\\\"Date\\\"}(e.JsonSize||(e.JsonSize={})),e.ESCAPE_CHARACTERS_REGEXP=/\\\"|\\\\\\\\|\\\\n|\\\\r|\\\\t/gu,e.isPlainObject=function(t){if(\\\"object\\\"!=typeof t||null===t)return!1;try{let e=t;for(;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e}catch(t){return!1}},e.isASCII=r,e.calculateStringSize=function(t){return t.split(\\\"\\\").reduce(((t,e)=>r(e)?t+1:t+2),0)+(t.match(e.ESCAPE_CHARACTERS_REGEXP)??[]).length},e.calculateNumberSize=function(t){return t.toString().length}},5770:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.hexToBigInt=e.hexToNumber=e.bigIntToHex=e.numberToHex=void 0;const n=r(2011),i=r(3976);e.numberToHex=t=>((0,n.assert)(\\\"number\\\"==typeof t,\\\"Value must be a number.\\\"),(0,n.assert)(t>=0,\\\"Value must be a non-negative number.\\\"),(0,n.assert)(Number.isSafeInteger(t),\\\"Value is not a safe integer. Use `bigIntToHex` instead.\\\"),(0,i.add0x)(t.toString(16)));e.bigIntToHex=t=>((0,n.assert)(\\\"bigint\\\"==typeof t,\\\"Value must be a bigint.\\\"),(0,n.assert)(t>=0,\\\"Value must be a non-negative bigint.\\\"),(0,i.add0x)(t.toString(16)));e.hexToNumber=t=>{(0,i.assertIsHexString)(t);const e=parseInt(t,16);return(0,n.assert)(Number.isSafeInteger(e),\\\"Value is not a safe integer. Use `hexToBigInt` instead.\\\"),e};e.hexToBigInt=t=>((0,i.assertIsHexString)(t),BigInt((0,i.add0x)(t)))},3028:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},2812:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createDeferredPromise=void 0,e.createDeferredPromise=function({suppressUnhandledRejection:t=!1}={}){let e,r;const n=new Promise(((t,n)=>{e=t,r=n}));return t&&n.catch((t=>{})),{promise:n,resolve:e,reject:r}}},2954:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.timeSince=e.inMilliseconds=e.Duration=void 0,function(t){t[t.Millisecond=1]=\\\"Millisecond\\\",t[t.Second=1e3]=\\\"Second\\\",t[t.Minute=6e4]=\\\"Minute\\\",t[t.Hour=36e5]=\\\"Hour\\\",t[t.Day=864e5]=\\\"Day\\\",t[t.Week=6048e5]=\\\"Week\\\",t[t.Year=31536e6]=\\\"Year\\\"}(e.Duration||(e.Duration={}));const r=(t,e)=>{if(!(t=>Number.isInteger(t)&&t>=0)(t))throw new Error(`\\\"${e}\\\" must be a non-negative integer. Received: \\\"${t}\\\".`)};e.inMilliseconds=function(t,e){return r(t,\\\"count\\\"),t*e},e.timeSince=function(t){return r(t,\\\"timestamp\\\"),Date.now()-t}},6871:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},9266:(t,e,r)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.satisfiesVersionRange=e.gtRange=e.gtVersion=e.assertIsSemVerRange=e.assertIsSemVerVersion=e.isValidSemVerRange=e.isValidSemVerVersion=e.VersionRangeStruct=e.VersionStruct=void 0;const n=r(5620),i=r(9589),o=r(2011);e.VersionStruct=(0,n.refine)((0,n.string)(),\\\"Version\\\",(t=>null!==(0,i.valid)(t)||`Expected SemVer version, got \\\"${t}\\\"`)),e.VersionRangeStruct=(0,n.refine)((0,n.string)(),\\\"Version range\\\",(t=>null!==(0,i.validRange)(t)||`Expected SemVer range, got \\\"${t}\\\"`)),e.isValidSemVerVersion=function(t){return(0,n.is)(t,e.VersionStruct)},e.isValidSemVerRange=function(t){return(0,n.is)(t,e.VersionRangeStruct)},e.assertIsSemVerVersion=function(t){(0,o.assertStruct)(t,e.VersionStruct)},e.assertIsSemVerRange=function(t){(0,o.assertStruct)(t,e.VersionRangeStruct)},e.gtVersion=function(t,e){return(0,i.gt)(t,e)},e.gtRange=function(t,e){return(0,i.gtr)(t,e)},e.satisfiesVersionRange=function(t,e){return(0,i.satisfies)(t,e,{includePrerelease:!0})}},2150:(t,e,r)=>{\\\"use strict\\\";r.r(e),r.d(e,{Struct:()=>l,StructError:()=>n,any:()=>I,array:()=>x,assert:()=>f,assign:()=>m,bigint:()=>_,boolean:()=>N,coerce:()=>X,create:()=>h,date:()=>M,defaulted:()=>Q,define:()=>y,deprecated:()=>v,dynamic:()=>w,empty:()=>Z,enums:()=>k,func:()=>O,instance:()=>C,integer:()=>P,intersection:()=>B,is:()=>p,lazy:()=>b,literal:()=>T,map:()=>L,mask:()=>d,max:()=>et,min:()=>rt,never:()=>U,nonempty:()=>nt,nullable:()=>j,number:()=>F,object:()=>D,omit:()=>A,optional:()=>$,partial:()=>E,pattern:()=>it,pick:()=>S,record:()=>q,refine:()=>st,regexp:()=>G,set:()=>H,size:()=>ot,string:()=>z,struct:()=>R,trimmed:()=>Y,tuple:()=>J,type:()=>K,union:()=>V,unknown:()=>W,validate:()=>g});class n extends TypeError{constructor(t,e){let r;const{message:n,explanation:i,...o}=t,{path:s}=t,a=0===s.length?n:`At path: ${s.join(\\\".\\\")} -- ${n}`;super(i??a),null!=i&&(this.cause=a),Object.assign(this,o),this.name=this.constructor.name,this.failures=()=>r??(r=[t,...e()])}}function i(t){return\\\"object\\\"==typeof t&&null!=t}function o(t){if(\\\"[object Object]\\\"!==Object.prototype.toString.call(t))return!1;const e=Object.getPrototypeOf(t);return null===e||e===Object.prototype}function s(t){return\\\"symbol\\\"==typeof t?t.toString():\\\"string\\\"==typeof t?JSON.stringify(t):`${t}`}function a(t,e,r,n){if(!0===t)return;!1===t?t={}:\\\"string\\\"==typeof t&&(t={message:t});const{path:i,branch:o}=e,{type:a}=r,{refinement:u,message:c=`Expected a value of type \\\\`${a}\\\\`${u?` with refinement \\\\`${u}\\\\``:\\\"\\\"}, but received: \\\\`${s(n)}\\\\``}=t;return{value:n,type:a,refinement:u,key:i[i.length-1],path:i,branch:o,...t,message:c}}function*u(t,e,r,n){var o;i(o=t)&&\\\"function\\\"==typeof o[Symbol.iterator]||(t=[t]);for(const i of t){const t=a(i,e,r,n);t&&(yield t)}}function*c(t,e,r={}){const{path:n=[],branch:o=[t],coerce:s=!1,mask:a=!1}=r,u={path:n,branch:o};if(s&&(t=e.coercer(t,u),a&&\\\"type\\\"!==e.type&&i(e.schema)&&i(t)&&!Array.isArray(t)))for(const r in t)void 0===e.schema[r]&&delete t[r];let l=\\\"valid\\\";for(const n of e.validator(t,u))n.explanation=r.message,l=\\\"not_valid\\\",yield[n,void 0];for(let[f,h,d]of e.entries(t,u)){const e=c(h,d,{path:void 0===f?n:[...n,f],branch:void 0===f?o:[...o,h],coerce:s,mask:a,message:r.message});for(const r of e)r[0]?(l=null!=r[0].refinement?\\\"not_refined\\\":\\\"not_valid\\\",yield[r[0],void 0]):s&&(h=r[1],void 0===f?t=h:t instanceof Map?t.set(f,h):t instanceof Set?t.add(h):i(t)&&(void 0!==h||f in t)&&(t[f]=h))}if(\\\"not_valid\\\"!==l)for(const n of e.refiner(t,u))n.explanation=r.message,l=\\\"not_refined\\\",yield[n,void 0];\\\"valid\\\"===l&&(yield[void 0,t])}class l{constructor(t){const{type:e,schema:r,validator:n,refiner:i,coercer:o=t=>t,entries:s=function*(){}}=t;this.type=e,this.schema=r,this.entries=s,this.coercer=o,this.validator=n?(t,e)=>u(n(t,e),e,this,t):()=>[],this.refiner=i?(t,e)=>u(i(t,e),e,this,t):()=>[]}assert(t,e){return f(t,this,e)}create(t,e){return h(t,this,e)}is(t){return p(t,this)}mask(t,e){return d(t,this,e)}validate(t,e={}){return g(t,this,e)}}function f(t,e,r){const n=g(t,e,{message:r});if(n[0])throw n[0]}function h(t,e,r){const n=g(t,e,{coerce:!0,message:r});if(n[0])throw n[0];return n[1]}function d(t,e,r){const n=g(t,e,{coerce:!0,mask:!0,message:r});if(n[0])throw n[0];return n[1]}function p(t,e){return!g(t,e)[0]}function g(t,e,r={}){const i=c(t,e,r),o=function(t){const{done:e,value:r}=t.next();return e?void 0:r}(i);if(o[0]){return[new n(o[0],(function*(){for(const t of i)t[0]&&(yield t[0])})),void 0]}return[void 0,o[1]]}function m(...t){const e=\\\"type\\\"===t[0].type,r=t.map((t=>t.schema)),n=Object.assign({},...r);return e?K(n):D(n)}function y(t,e){return new l({type:t,schema:null,validator:e})}function v(t,e){return new l({...t,refiner:(e,r)=>void 0===e||t.refiner(e,r),validator:(r,n)=>void 0===r||(e(r,n),t.validator(r,n))})}function w(t){return new l({type:\\\"dynamic\\\",schema:null,*entries(e,r){const n=t(e,r);yield*n.entries(e,r)},validator:(e,r)=>t(e,r).validator(e,r),coercer:(e,r)=>t(e,r).coercer(e,r),refiner:(e,r)=>t(e,r).refiner(e,r)})}function b(t){let e;return new l({type:\\\"lazy\\\",schema:null,*entries(r,n){e??(e=t()),yield*e.entries(r,n)},validator:(r,n)=>(e??(e=t()),e.validator(r,n)),coercer:(r,n)=>(e??(e=t()),e.coercer(r,n)),refiner:(r,n)=>(e??(e=t()),e.refiner(r,n))})}function A(t,e){const{schema:r}=t,n={...r};for(const t of e)delete n[t];return\\\"type\\\"===t.type?K(n):D(n)}function E(t){const e=t instanceof l,r=e?{...t.schema}:{...t};for(const t in r)r[t]=$(r[t]);return e&&\\\"type\\\"===t.type?K(r):D(r)}function S(t,e){const{schema:r}=t,n={};for(const t of e)n[t]=r[t];return\\\"type\\\"===t.type?K(n):D(n)}function R(t,e){return console.warn(\\\"superstruct@0.11 - The `struct` helper has been renamed to `define`.\\\"),y(t,e)}function I(){return y(\\\"any\\\",(()=>!0))}function x(t){return new l({type:\\\"array\\\",schema:t,*entries(e){if(t&&Array.isArray(e))for(const[r,n]of e.entries())yield[r,n,t]},coercer:t=>Array.isArray(t)?t.slice():t,validator:t=>Array.isArray(t)||`Expected an array value, but received: ${s(t)}`})}function _(){return y(\\\"bigint\\\",(t=>\\\"bigint\\\"==typeof t))}function N(){return y(\\\"boolean\\\",(t=>\\\"boolean\\\"==typeof t))}function M(){return y(\\\"date\\\",(t=>t instanceof Date&&!isNaN(t.getTime())||`Expected a valid \\\\`Date\\\\` object, but received: ${s(t)}`))}function k(t){const e={},r=t.map((t=>s(t))).join();for(const r of t)e[r]=r;return new l({type:\\\"enums\\\",schema:e,validator:e=>t.includes(e)||`Expected one of \\\\`${r}\\\\`, but received: ${s(e)}`})}function O(){return y(\\\"func\\\",(t=>\\\"function\\\"==typeof t||`Expected a function, but received: ${s(t)}`))}function C(t){return y(\\\"instance\\\",(e=>e instanceof t||`Expected a \\\\`${t.name}\\\\` instance, but received: ${s(e)}`))}function P(){return y(\\\"integer\\\",(t=>\\\"number\\\"==typeof t&&!isNaN(t)&&Number.isInteger(t)||`Expected an integer, but received: ${s(t)}`))}function B(t){return new l({type:\\\"intersection\\\",schema:null,*entries(e,r){for(const n of t)yield*n.entries(e,r)},*validator(e,r){for(const n of t)yield*n.validator(e,r)},*refiner(e,r){for(const n of t)yield*n.refiner(e,r)}})}function T(t){const e=s(t),r=typeof t;return new l({type:\\\"literal\\\",schema:\\\"string\\\"===r||\\\"number\\\"===r||\\\"boolean\\\"===r?t:null,validator:r=>r===t||`Expected the literal \\\\`${e}\\\\`, but received: ${s(r)}`})}function L(t,e){return new l({type:\\\"map\\\",schema:null,*entries(r){if(t&&e&&r instanceof Map)for(const[n,i]of r.entries())yield[n,n,t],yield[n,i,e]},coercer:t=>t instanceof Map?new Map(t):t,validator:t=>t instanceof Map||`Expected a \\\\`Map\\\\` object, but received: ${s(t)}`})}function U(){return y(\\\"never\\\",(()=>!1))}function j(t){return new l({...t,validator:(e,r)=>null===e||t.validator(e,r),refiner:(e,r)=>null===e||t.refiner(e,r)})}function F(){return y(\\\"number\\\",(t=>\\\"number\\\"==typeof t&&!isNaN(t)||`Expected a number, but received: ${s(t)}`))}function D(t){const e=t?Object.keys(t):[],r=U();return new l({type:\\\"object\\\",schema:t||null,*entries(n){if(t&&i(n)){const i=new Set(Object.keys(n));for(const r of e)i.delete(r),yield[r,n[r],t[r]];for(const t of i)yield[t,n[t],r]}},validator:t=>i(t)||`Expected an object, but received: ${s(t)}`,coercer:t=>i(t)?{...t}:t})}function $(t){return new l({...t,validator:(e,r)=>void 0===e||t.validator(e,r),refiner:(e,r)=>void 0===e||t.refiner(e,r)})}function q(t,e){return new l({type:\\\"record\\\",schema:null,*entries(r){if(i(r))for(const n in r){const i=r[n];yield[n,n,t],yield[n,i,e]}},validator:t=>i(t)||`Expected an object, but received: ${s(t)}`})}function G(){return y(\\\"regexp\\\",(t=>t instanceof RegExp))}function H(t){return new l({type:\\\"set\\\",schema:null,*entries(e){if(t&&e instanceof Set)for(const r of e)yield[r,r,t]},coercer:t=>t instanceof Set?new Set(t):t,validator:t=>t instanceof Set||`Expected a \\\\`Set\\\\` object, but received: ${s(t)}`})}function z(){return y(\\\"string\\\",(t=>\\\"string\\\"==typeof t||`Expected a string, but received: ${s(t)}`))}function J(t){const e=U();return new l({type:\\\"tuple\\\",schema:null,*entries(r){if(Array.isArray(r)){const n=Math.max(t.length,r.length);for(let i=0;i<n;i++)yield[i,r[i],t[i]||e]}},validator:t=>Array.isArray(t)||`Expected an array, but received: ${s(t)}`})}function K(t){const e=Object.keys(t);return new l({type:\\\"type\\\",schema:t,*entries(r){if(i(r))for(const n of e)yield[n,r[n],t[n]]},validator:t=>i(t)||`Expected an object, but received: ${s(t)}`,coercer:t=>i(t)?{...t}:t})}function V(t){const e=t.map((t=>t.type)).join(\\\" | \\\");return new l({type:\\\"union\\\",schema:null,coercer(e){for(const r of t){const[t,n]=r.validate(e,{coerce:!0});if(!t)return n}return e},validator(r,n){const i=[];for(const e of t){const[...t]=c(r,e,n),[o]=t;if(!o[0])return[];for(const[e]of t)e&&i.push(e)}return[`Expected the value to satisfy a union of \\\\`${e}\\\\`, but received: ${s(r)}`,...i]}})}function W(){return y(\\\"unknown\\\",(()=>!0))}function X(t,e,r){return new l({...t,coercer:(n,i)=>p(n,e)?t.coercer(r(n,i),i):t.coercer(n,i)})}function Q(t,e,r={}){return X(t,W(),(t=>{const n=\\\"function\\\"==typeof e?e():e;if(void 0===t)return n;if(!r.strict&&o(t)&&o(n)){const e={...t};let r=!1;for(const t in n)void 0===e[t]&&(e[t]=n[t],r=!0);if(r)return e}return t}))}function Y(t){return X(t,z(),(t=>t.trim()))}function Z(t){return st(t,\\\"empty\\\",(e=>{const r=tt(e);return 0===r||`Expected an empty ${t.type} but received one with a size of \\\\`${r}\\\\``}))}function tt(t){return t instanceof Map||t instanceof Set?t.size:t.length}function et(t,e,r={}){const{exclusive:n}=r;return st(t,\\\"max\\\",(r=>n?r<e:r<=e||`Expected a ${t.type} less than ${n?\\\"\\\":\\\"or equal to \\\"}${e} but received \\\\`${r}\\\\``))}function rt(t,e,r={}){const{exclusive:n}=r;return st(t,\\\"min\\\",(r=>n?r>e:r>=e||`Expected a ${t.type} greater than ${n?\\\"\\\":\\\"or equal to \\\"}${e} but received \\\\`${r}\\\\``))}function nt(t){return st(t,\\\"nonempty\\\",(e=>tt(e)>0||`Expected a nonempty ${t.type} but received an empty one`))}function it(t,e){return st(t,\\\"pattern\\\",(r=>e.test(r)||`Expected a ${t.type} matching \\\\`/${e.source}/\\\\` but received \\\"${r}\\\"`))}function ot(t,e,r=e){const n=`Expected a ${t.type}`,i=e===r?`of \\\\`${e}\\\\``:`between \\\\`${e}\\\\` and \\\\`${r}\\\\``;return st(t,\\\"size\\\",(t=>{if(\\\"number\\\"==typeof t||t instanceof Date)return e<=t&&t<=r||`${n} ${i} but received \\\\`${t}\\\\``;if(t instanceof Map||t instanceof Set){const{size:o}=t;return e<=o&&o<=r||`${n} with a size ${i} but received one with a size of \\\\`${o}\\\\``}{const{length:o}=t;return e<=o&&o<=r||`${n} with a length ${i} but received one with a length of \\\\`${o}\\\\``}}))}function st(t,e,r){return new l({...t,*refiner(n,i){yield*t.refiner(n,i);const o=u(r(n,i),i,t,n);for(const t of o)yield{...t,refinement:e}}})}}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={id:n,loaded:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}r.amdO={},r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(t){if(\\\"object\\\"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},r.nmd=t=>(t.paths=[],t.children||(t.children=[]),t);var n={};(()=>{\\\"use strict\\\";r.r(n),r.d(n,{getKeyring:()=>qf,onHomePage:()=>Hf,onKeyringRequest:()=>Gf,onUserInput:()=>zf});var t={};r.r(t),r.d(t,{DO:()=>xn,OG:()=>Fn,My:()=>Nn,Ph:()=>Pn,lX:()=>Bn,Id:()=>jn,fg:()=>qn,qj:()=>Un,aT:()=>Cn,aY:()=>In,lq:()=>Tn,z:()=>Ln,Q5:()=>Hn});var e=r(7962);function i(t){return Boolean(t)&&\\\"object\\\"==typeof t&&!Array.isArray(t)}const o=(t,e)=>Object.hasOwnProperty.call(t,e);var s;!function(t){t[t.Null=4]=\\\"Null\\\",t[t.Comma=1]=\\\"Comma\\\",t[t.Wrapper=1]=\\\"Wrapper\\\",t[t.True=4]=\\\"True\\\",t[t.False=5]=\\\"False\\\",t[t.Quote=1]=\\\"Quote\\\",t[t.Colon=1]=\\\"Colon\\\",t[t.Date=24]=\\\"Date\\\"}(s=s||(s={}));function a(t){if(\\\"object\\\"!=typeof t||null===t)return!1;try{let e=t;for(;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e}catch(t){return!1}}class u extends TypeError{constructor(t,e){let r;const{message:n,explanation:i,...o}=t,{path:s}=t,a=0===s.length?n:`At path: ${s.join(\\\".\\\")} -- ${n}`;super(i??a),null!=i&&(this.cause=a),Object.assign(this,o),this.name=this.constructor.name,this.failures=()=>r??(r=[t,...e()])}}function c(t){return\\\"object\\\"==typeof t&&null!==t}function l(t){return\\\"symbol\\\"==typeof t?t.toString():\\\"string\\\"==typeof t?JSON.stringify(t):`${t}`}function f(t,e,r,n){if(!0===t)return;!1===t?t={}:\\\"string\\\"==typeof t&&(t={message:t});const{path:i,branch:o}=e,{type:s}=r,{refinement:a,message:u=`Expected a value of type \\\\`${s}\\\\`${a?` with refinement \\\\`${a}\\\\``:\\\"\\\"}, but received: \\\\`${l(n)}\\\\``}=t;return{value:n,type:s,refinement:a,key:i[i.length-1],path:i,branch:o,...t,message:u}}function*h(t,e,r,n){(function(t){return c(t)&&\\\"function\\\"==typeof t[Symbol.iterator]})(t)||(t=[t]);for(const i of t){const t=f(i,e,r,n);t&&(yield t)}}function*d(t,e,r={}){const{path:n=[],branch:i=[t],coerce:o=!1,mask:s=!1}=r,a={path:n,branch:i};if(o&&(t=e.coercer(t,a),s&&\\\"type\\\"!==e.type&&c(e.schema)&&c(t)&&!Array.isArray(t)))for(const r in t)void 0===e.schema[r]&&delete t[r];let u=\\\"valid\\\";for(const n of e.validator(t,a))n.explanation=r.message,u=\\\"not_valid\\\",yield[n,void 0];for(let[l,f,h]of e.entries(t,a)){const e=d(f,h,{path:void 0===l?n:[...n,l],branch:void 0===l?i:[...i,f],coerce:o,mask:s,message:r.message});for(const r of e)r[0]?(u=null===r[0].refinement||void 0===r[0].refinement?\\\"not_valid\\\":\\\"not_refined\\\",yield[r[0],void 0]):o&&(f=r[1],void 0===l?t=f:t instanceof Map?t.set(l,f):t instanceof Set?t.add(f):c(t)&&(void 0!==f||l in t)&&(t[l]=f))}if(\\\"not_valid\\\"!==u)for(const n of e.refiner(t,a))n.explanation=r.message,u=\\\"not_refined\\\",yield[n,void 0];\\\"valid\\\"===u&&(yield[void 0,t])}class p{constructor(t){const{type:e,schema:r,validator:n,refiner:i,coercer:o=t=>t,entries:s=function*(){}}=t;this.type=e,this.schema=r,this.entries=s,this.coercer=o,this.validator=n?(t,e)=>h(n(t,e),e,this,t):()=>[],this.refiner=i?(t,e)=>h(i(t,e),e,this,t):()=>[]}assert(t,e){return g(t,this,e)}create(t,e){return m(t,this,e)}is(t){return y(t,this)}mask(t,e){return function(t,e,r){const n=v(t,e,{coerce:!0,mask:!0,message:r});if(n[0])throw n[0];return n[1]}(t,this,e)}validate(t,e={}){return v(t,this,e)}}function g(t,e,r){const n=v(t,e,{message:r});if(n[0])throw n[0]}function m(t,e,r){const n=v(t,e,{coerce:!0,message:r});if(n[0])throw n[0];return n[1]}function y(t,e){return!v(t,e)[0]}function v(t,e,r={}){const n=d(t,e,r),i=function(t){const{done:e,value:r}=t.next();return e?void 0:r}(n);if(i[0]){return[new u(i[0],(function*(){for(const t of n)t[0]&&(yield t[0])})),void 0]}return[void 0,i[1]]}function w(...t){const e=\\\"type\\\"===t[0]?.type,r=t.map((({schema:t})=>t)),n=Object.assign({},...r);return e?function(t){const e=Object.keys(t);return new p({type:\\\"type\\\",schema:t,*entries(r){if(c(r))for(const n of e)yield[n,r[n],t[n]]},validator:t=>c(t)||`Expected an object, but received: ${l(t)}`,coercer:t=>c(t)?{...t}:t})}(n):k(n)}function b(t,e){return new p({type:t,schema:null,validator:e})}function A(t){let e;return new p({type:\\\"lazy\\\",schema:null,*entries(r,n){e??(e=t()),yield*e.entries(r,n)},validator:(r,n)=>(e??(e=t()),e.validator(r,n)),coercer:(r,n)=>(e??(e=t()),e.coercer(r,n)),refiner:(r,n)=>(e??(e=t()),e.refiner(r,n))})}function E(){return b(\\\"any\\\",(()=>!0))}function S(t){return new p({type:\\\"array\\\",schema:t,*entries(e){if(t&&Array.isArray(e))for(const[r,n]of e.entries())yield[r,n,t]},coercer:t=>Array.isArray(t)?t.slice():t,validator:t=>Array.isArray(t)||`Expected an array value, but received: ${l(t)}`})}function R(){return b(\\\"boolean\\\",(t=>\\\"boolean\\\"==typeof t))}function I(){return b(\\\"integer\\\",(t=>\\\"number\\\"==typeof t&&!isNaN(t)&&Number.isInteger(t)||`Expected an integer, but received: ${l(t)}`))}function x(t){const e=l(t),r=typeof t;return new p({type:\\\"literal\\\",schema:\\\"string\\\"===r||\\\"number\\\"===r||\\\"boolean\\\"===r?t:null,validator:r=>r===t||`Expected the literal \\\\`${e}\\\\`, but received: ${l(r)}`})}function _(){return b(\\\"never\\\",(()=>!1))}function N(t){return new p({...t,validator:(e,r)=>null===e||t.validator(e,r),refiner:(e,r)=>null===e||t.refiner(e,r)})}function M(){return b(\\\"number\\\",(t=>\\\"number\\\"==typeof t&&!isNaN(t)||`Expected a number, but received: ${l(t)}`))}function k(t){const e=t?Object.keys(t):[],r=_();return new p({type:\\\"object\\\",schema:t??null,*entries(n){if(t&&c(n)){const i=new Set(Object.keys(n));for(const r of e)i.delete(r),yield[r,n[r],t[r]];for(const t of i)yield[t,n[t],r]}},validator:t=>c(t)||`Expected an object, but received: ${l(t)}`,coercer:t=>c(t)?{...t}:t})}function O(t){return new p({...t,validator:(e,r)=>void 0===e||t.validator(e,r),refiner:(e,r)=>void 0===e||t.refiner(e,r)})}function C(t,e){return new p({type:\\\"record\\\",schema:null,*entries(r){if(c(r))for(const n in r){const i=r[n];yield[n,n,t],yield[n,i,e]}},validator:t=>c(t)||`Expected an object, but received: ${l(t)}`})}function P(){return b(\\\"string\\\",(t=>\\\"string\\\"==typeof t||`Expected a string, but received: ${l(t)}`))}function B(t){const e=_();return new p({type:\\\"tuple\\\",schema:null,*entries(r){if(Array.isArray(r)){const n=Math.max(t.length,r.length);for(let i=0;i<n;i++)yield[i,r[i],t[i]||e]}},validator:t=>Array.isArray(t)||`Expected an array, but received: ${l(t)}`})}function T(t){const e=t.map((t=>t.type)).join(\\\" | \\\");return new p({type:\\\"union\\\",schema:null,coercer(e){for(const r of t){const[t,n]=r.validate(e,{coerce:!0});if(!t)return n}return e},validator(r,n){const i=[];for(const e of t){const[...t]=d(r,e,n),[o]=t;if(!o?.[0])return[];for(const[e]of t)e&&i.push(e)}return[`Expected the value to satisfy a union of \\\\`${e}\\\\`, but received: ${l(r)}`,...i]}})}function L(){return b(\\\"unknown\\\",(()=>!0))}function U(t,e,r){return new p({...t,coercer:(n,i)=>y(n,e)?t.coercer(r(n,i),i):t.coercer(n,i)})}Error;function j(t){return function(t){return function(t){return\\\"object\\\"==typeof t&&null!==t&&\\\"message\\\"in t}(t)&&\\\"string\\\"==typeof t.message?t.message:null==t?\\\"\\\":String(t)}(t).replace(/\\\\.$/u,\\\"\\\")}function F(t,e){return r=t,Boolean(\\\"string\\\"==typeof r?.prototype?.constructor?.name)?new t({message:e}):t({message:e});var r}class D extends Error{constructor(t){super(t.message),this.code=\\\"ERR_ASSERTION\\\"}}function $(t,e,r=\\\"Assertion failed\\\",n=D){try{g(t,e)}catch(t){throw F(n,`${r}: ${j(t)}.`)}}const q=t=>k(t);function G({path:t,branch:e}){const r=t[t.length-1];return o(e[e.length-2],r)}function H(t){return new p({...t,type:`optional ${t.type}`,validator:(e,r)=>!G(r)||t.validator(e,r),refiner:(e,r)=>!G(r)||t.refiner(e,r)})}const z=T([x(null),R(),b(\\\"finite number\\\",(t=>y(t,M())&&Number.isFinite(t))),P(),S(A((()=>z))),C(P(),A((()=>z)))]),J=U(z,E(),(t=>($(t,z),JSON.parse(JSON.stringify(t,((t,e)=>{if(\\\"__proto__\\\"!==t&&\\\"constructor\\\"!==t)return e}))))));function K(t){try{return function(t){m(t,J)}(t),!0}catch{return!1}}const V=x(\\\"2.0\\\"),W=N(T([M(),P()])),X=q({code:I(),message:P(),data:H(J),stack:H(P())}),Q=T([C(P(),J),S(J)]);q({id:W,jsonrpc:V,method:P(),params:H(Q)}),q({jsonrpc:V,method:P(),params:H(Q)});k({id:W,jsonrpc:V,result:O(L()),error:O(X)});const Y=q({id:W,jsonrpc:V,result:J}),Z=q({id:W,jsonrpc:V,error:X});T([Y,Z]);function tt(t,e){return et(t,\\\"pattern\\\",(r=>e.test(r)||`Expected a ${t.type} matching \\\\`/${e.source}/\\\\` but received \\\"${r}\\\"`))}function et(t,e,r){return new p({...t,*refiner(n,i){yield*t.refiner(n,i);const o=h(r(n,i),i,t,n);for(const t of o)yield{...t,refinement:e}}})}var rt={invalidInput:-32e3,resourceNotFound:-32001,resourceUnavailable:-32002,transactionRejected:-32003,methodNotSupported:-32004,limitExceeded:-32005,parse:-32700,invalidRequest:-32600,methodNotFound:-32601,invalidParams:-32602,internal:-32603},nt={userRejectedRequest:4001,unauthorized:4100,unsupportedMethod:4200,disconnected:4900,chainDisconnected:4901},it={\\\"-32700\\\":{standard:\\\"JSON RPC 2.0\\\",message:\\\"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.\\\"},\\\"-32600\\\":{standard:\\\"JSON RPC 2.0\\\",message:\\\"The JSON sent is not a valid Request object.\\\"},\\\"-32601\\\":{standard:\\\"JSON RPC 2.0\\\",message:\\\"The method does not exist / is not available.\\\"},\\\"-32602\\\":{standard:\\\"JSON RPC 2.0\\\",message:\\\"Invalid method parameter(s).\\\"},\\\"-32603\\\":{standard:\\\"JSON RPC 2.0\\\",message:\\\"Internal JSON-RPC error.\\\"},\\\"-32000\\\":{standard:\\\"EIP-1474\\\",message:\\\"Invalid input.\\\"},\\\"-32001\\\":{standard:\\\"EIP-1474\\\",message:\\\"Resource not found.\\\"},\\\"-32002\\\":{standard:\\\"EIP-1474\\\",message:\\\"Resource unavailable.\\\"},\\\"-32003\\\":{standard:\\\"EIP-1474\\\",message:\\\"Transaction rejected.\\\"},\\\"-32004\\\":{standard:\\\"EIP-1474\\\",message:\\\"Method not supported.\\\"},\\\"-32005\\\":{standard:\\\"EIP-1474\\\",message:\\\"Request limit exceeded.\\\"},4001:{standard:\\\"EIP-1193\\\",message:\\\"User rejected the request.\\\"},4100:{standard:\\\"EIP-1193\\\",message:\\\"The requested account and/or method has not been authorized by the user.\\\"},4200:{standard:\\\"EIP-1193\\\",message:\\\"The requested method is not supported by this Ethereum provider.\\\"},4900:{standard:\\\"EIP-1193\\\",message:\\\"The provider is disconnected from all chains.\\\"},4901:{standard:\\\"EIP-1193\\\",message:\\\"The provider is disconnected from the specified chain.\\\"}};function ot(t){return Boolean(t)&&\\\"object\\\"==typeof t&&!Array.isArray(t)}const st=(t,e)=>Object.hasOwnProperty.call(t,e);var at;!function(t){t[t.Null=4]=\\\"Null\\\",t[t.Comma=1]=\\\"Comma\\\",t[t.Wrapper=1]=\\\"Wrapper\\\",t[t.True=4]=\\\"True\\\",t[t.False=5]=\\\"False\\\",t[t.Quote=1]=\\\"Quote\\\",t[t.Colon=1]=\\\"Colon\\\",t[t.Date=24]=\\\"Date\\\"}(at=at||(at={}));function ut(t){return function(t){return function(t){return\\\"object\\\"==typeof t&&null!==t&&\\\"message\\\"in t}(t)&&\\\"string\\\"==typeof t.message?t.message:null==t?\\\"\\\":String(t)}(t).replace(/\\\\.$/u,\\\"\\\")}function ct(t,e){return r=t,Boolean(\\\"string\\\"==typeof r?.prototype?.constructor?.name)?new t({message:e}):t({message:e});var r}class lt extends Error{constructor(t){super(t.message),this.code=\\\"ERR_ASSERTION\\\"}}const ft=t=>k(t);function ht({path:t,branch:e}){const r=t[t.length-1];return st(e[e.length-2],r)}function dt(t){return new p({...t,type:`optional ${t.type}`,validator:(e,r)=>!ht(r)||t.validator(e,r),refiner:(e,r)=>!ht(r)||t.refiner(e,r)})}const pt=T([x(null),R(),b(\\\"finite number\\\",(t=>y(t,M())&&Number.isFinite(t))),P(),S(A((()=>pt))),C(P(),A((()=>pt)))]),gt=U(pt,E(),(t=>(function(t,e,r=\\\"Assertion failed\\\",n=lt){try{g(t,e)}catch(t){throw ct(n,`${r}: ${ut(t)}.`)}}(t,pt),JSON.parse(JSON.stringify(t,((t,e)=>{if(\\\"__proto__\\\"!==t&&\\\"constructor\\\"!==t)return e}))))));function mt(t){try{return function(t){m(t,gt)}(t),!0}catch{return!1}}const yt=x(\\\"2.0\\\"),vt=N(T([M(),P()])),wt=ft({code:I(),message:P(),data:dt(gt),stack:dt(P())}),bt=T([C(P(),gt),S(gt)]);ft({id:vt,jsonrpc:yt,method:P(),params:dt(bt)}),ft({jsonrpc:yt,method:P(),params:dt(bt)});k({id:vt,jsonrpc:yt,result:O(L()),error:O(wt)});const At=ft({id:vt,jsonrpc:yt,result:gt}),Et=ft({id:vt,jsonrpc:yt,error:wt});T([At,Et]);var St=rt.internal,Rt=\\\"Unspecified error message. This is a bug, please report it.\\\",It=(xt(St),\\\"Unspecified server error.\\\");function xt(t,e=Rt){if(function(t){return Number.isInteger(t)}(t)){const e=t.toString();if(st(it,e))return it[e].message;if(function(t){return t>=-32099&&t<=-32e3}(t))return It}return e}function _t(t){return Array.isArray(t)?t.map((t=>mt(t)?t:ot(t)?Nt(t):null)):ot(t)?Nt(t):mt(t)?t:null}function Nt(t){return Object.getOwnPropertyNames(t).reduce(((e,r)=>{const n=t[r];return mt(n)&&(e[r]=n),e}),{})}var Mt=r(8463),kt=class extends Error{constructor(t,e,r){var n=(...t)=>{super(...t)};if(!Number.isInteger(t))throw new Error('\\\"code\\\" must be an integer.');if(!e||\\\"string\\\"!=typeof e)throw new Error('\\\"message\\\" must be a non-empty string.');!function(t){return ot(t)&&st(t,\\\"cause\\\")&&ot(t.cause)}(r)?n(e):(n(e,{cause:r.cause}),st(this,\\\"cause\\\")||Object.assign(this,{cause:r.cause})),void 0!==r&&(this.data=r),this.code=t}serialize(){const t={code:this.code,message:this.message};return void 0!==this.data&&(t.data=this.data,function(t){if(\\\"object\\\"!=typeof t||null===t)return!1;try{let e=t;for(;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e}catch(t){return!1}}(this.data)&&(t.data.cause=_t(this.data.cause))),this.stack&&(t.stack=this.stack),t}toString(){return Mt(this.serialize(),Ct,2)}},Ot=class extends kt{constructor(t,e,r){if(!function(t){return Number.isInteger(t)&&t>=1e3&&t<=4999}(t))throw new Error('\\\"code\\\" must be an integer such that: 1000 <= code <= 4999');super(t,e,r)}};function Ct(t,e){if(\\\"[Circular]\\\"!==e)return e}var Pt=t=>Wt(rt.parse,t),Bt=t=>Wt(rt.invalidRequest,t),Tt=t=>Wt(rt.invalidParams,t),Lt=t=>Wt(rt.methodNotFound,t),Ut=t=>Wt(rt.internal,t),jt=t=>Wt(rt.invalidInput,t),Ft=t=>Wt(rt.resourceNotFound,t),Dt=t=>Wt(rt.resourceUnavailable,t),$t=t=>Wt(rt.transactionRejected,t),qt=t=>Wt(rt.methodNotSupported,t),Gt=t=>Wt(rt.limitExceeded,t),Ht=t=>Xt(nt.userRejectedRequest,t),zt=t=>Xt(nt.unauthorized,t),Jt=t=>Xt(nt.unsupportedMethod,t),Kt=t=>Xt(nt.disconnected,t),Vt=t=>Xt(nt.chainDisconnected,t);function Wt(t,e){const[r,n]=Qt(e);return new kt(t,r??xt(t),n)}function Xt(t,e){const[r,n]=Qt(e);return new Ot(t,r??xt(t),n)}function Qt(t){if(t){if(\\\"string\\\"==typeof t)return[t];if(\\\"object\\\"==typeof t&&!Array.isArray(t)){const{message:e,data:r}=t;if(e&&\\\"string\\\"!=typeof e)throw new Error(\\\"Must specify string message.\\\");return[e??void 0,r]}}return[]}tt(P(),/^(?:0x)?[0-9a-f]+$/iu),tt(P(),/^0x[0-9a-f]+$/iu),tt(P(),/^0x[0-9a-f]{40}$/u);const Yt=tt(P(),/^0x[0-9a-fA-F]{40}$/u);var Zt,te,ee,re,ne=(t,e,r)=>{if(!e.has(t))throw TypeError(\\\"Cannot \\\"+r)},ie=(t,e,r)=>(ne(t,e,\\\"read from private field\\\"),r?r.call(t):e.get(t)),oe=(t,e,r)=>{if(e.has(t))throw TypeError(\\\"Cannot add the same private member more than once\\\");e instanceof WeakSet?e.add(t):e.set(t,r)},se=(t,e,r,n)=>(ne(t,e,\\\"write to private field\\\"),n?n.call(t,r):e.set(t,r),r),ae=class extends Error{constructor(t,e={}){const r=function(t){if(i(t)&&o(t,\\\"message\\\")&&\\\"string\\\"==typeof t.message)return t.message;return String(t)}(t);super(r),oe(this,Zt,void 0),oe(this,te,void 0),oe(this,ee,void 0),oe(this,re,void 0),se(this,te,r),se(this,Zt,function(t){if(i(t)&&o(t,\\\"code\\\")&&\\\"number\\\"==typeof t.code&&Number.isInteger(t.code))return t.code;return-32603}(t));const n={...fe(t),...e};Object.keys(n).length>0&&se(this,ee,n),se(this,re,super.stack)}get name(){return\\\"SnapError\\\"}get code(){return ie(this,Zt)}get message(){return ie(this,te)}get data(){return ie(this,ee)}get stack(){return ie(this,re)}toJSON(){return{code:ce,message:le,data:{cause:{code:this.code,message:this.message,stack:this.stack,...this.data?{data:this.data}:{}}}}}serialize(){return this.toJSON()}};function ue(t){return class extends ae{constructor(e,r){if(\\\"object\\\"==typeof e){const r=t();return void super({code:r.code,message:r.message,data:e})}const n=t(e);super({code:n.code,message:n.message,data:r})}}}Zt=new WeakMap,te=new WeakMap,ee=new WeakMap,re=new WeakMap;var ce=-31002,le=\\\"Snap Error\\\";function fe(t){return i(t)&&o(t,\\\"data\\\")&&\\\"object\\\"==typeof t.data&&null!==t.data&&K(t.data)&&!Array.isArray(t.data)?t.data:{}}function he(t){return b(JSON.stringify(t),x(t).validator)}function de(t){return he(t)}function pe(t){return new p({type:\\\"union\\\",schema:t,*entries(e,r){if(!a(e)||!o(e,\\\"type\\\"))return;const{type:n}=e,i=t.find((({schema:t})=>y(n,t.type)));if(i)for(const t of i.entries(e,r))yield t},validator(e,r){const n=t.map((({schema:t})=>t.type.type));if(!a(e)||!o(e,\\\"type\\\")||\\\"string\\\"!=typeof e.type)return`Expected type to be one of: ${n.join(\\\", \\\")}, but received: undefined`;const{type:i}=e,s=t.find((({schema:t})=>y(i,t.type)));return s?s.validator(e,r):`Expected type to be one of: ${n.join(\\\", \\\")}, but received: \\\"${i}\\\"`}})}function ge(t){return function([t,...e]){const r=T([t,...e]);return new p({...r,schema:[t,...e]})}(t)}function me(){return et(P(),\\\"SVG\\\",(t=>!!t.includes(\\\"<svg\\\")||\\\"Value is not a valid SVG.\\\"))}ue(Ut),ue(jt),ue(Tt),ue(Bt),ue(Gt),ue(Lt),ue(qt),ue(Pt),ue(Ft),ue(Dt),ue($t),ue(Vt),ue(Kt),ue(zt),ue(Jt),ue(Ht);function ye(t,e,r=[]){return(...n)=>{if(1===n.length&&a(n[0])){const r={...n[0],type:t};return $(r,e,`Invalid ${t} component`),r}const i=r.reduce(((t,e,r)=>void 0!==n[r]?{...t,[e]:n[r]}:t),{type:t});return $(i,e,`Invalid ${t} component`),i}}var ve,we,be,Ae,Ee,Se=((ve=Se||{}).Copyable=\\\"copyable\\\",ve.Divider=\\\"divider\\\",ve.Heading=\\\"heading\\\",ve.Panel=\\\"panel\\\",ve.Spinner=\\\"spinner\\\",ve.Text=\\\"text\\\",ve.Image=\\\"image\\\",ve.Row=\\\"row\\\",ve.Address=\\\"address\\\",ve.Button=\\\"button\\\",ve.Input=\\\"input\\\",ve.Form=\\\"form\\\",ve),Re=k({type:P()}),Ie=w(Re,k({value:L()})),xe=w(Ie,k({type:x(\\\"address\\\"),value:Yt})),_e=(ye(\\\"address\\\",xe,[\\\"value\\\"]),w(Ie,k({type:x(\\\"copyable\\\"),value:P(),sensitive:O(R())}))),Ne=(ye(\\\"copyable\\\",_e,[\\\"value\\\",\\\"sensitive\\\"]),w(Re,k({type:x(\\\"divider\\\")}))),Me=(ye(\\\"divider\\\",Ne),w(Ie,k({type:x(\\\"heading\\\"),value:P()}))),ke=(ye(\\\"heading\\\",Me,[\\\"value\\\"]),w(Re,k({type:x(\\\"image\\\"),value:me()}))),Oe=(ye(\\\"image\\\",ke,[\\\"value\\\"]),(we=Oe||{}).Primary=\\\"primary\\\",we.Secondary=\\\"secondary\\\",we),Ce=((be=Ce||{}).Button=\\\"button\\\",be.Submit=\\\"submit\\\",be),Pe=w(Ie,k({type:x(\\\"button\\\"),value:P(),variant:O(T([de(\\\"primary\\\"),de(\\\"secondary\\\")])),buttonType:O(T([de(\\\"button\\\"),de(\\\"submit\\\")])),name:O(P())})),Be=(ye(\\\"button\\\",Pe,[\\\"value\\\",\\\"buttonType\\\",\\\"name\\\",\\\"variant\\\"]),(Ae=Be||{}).Text=\\\"text\\\",Ae.Number=\\\"number\\\",Ae.Password=\\\"password\\\",Ae),Te=w(Ie,k({type:x(\\\"input\\\"),value:O(P()),name:P(),inputType:O(T([de(\\\"text\\\"),de(\\\"password\\\"),de(\\\"number\\\")])),placeholder:O(P()),label:O(P()),error:O(P())})),Le=(ye(\\\"input\\\",Te,[\\\"name\\\",\\\"inputType\\\",\\\"placeholder\\\",\\\"value\\\",\\\"label\\\"]),T([Te,Pe])),Ue=w(Re,k({type:x(\\\"form\\\"),children:S(Le),name:P()})),je=(ye(\\\"form\\\",Ue,[\\\"name\\\",\\\"children\\\"]),w(Ie,k({type:x(\\\"text\\\"),value:P(),markdown:O(R())}))),Fe=(ye(\\\"text\\\",je,[\\\"value\\\",\\\"markdown\\\"]),(Ee=Fe||{}).Default=\\\"default\\\",Ee.Critical=\\\"critical\\\",Ee.Warning=\\\"warning\\\",Ee),De=T([ke,je,xe]),$e=w(Ie,k({type:x(\\\"row\\\"),variant:O(T([de(\\\"default\\\"),de(\\\"critical\\\"),de(\\\"warning\\\")])),label:P(),value:De})),qe=(ye(\\\"row\\\",$e,[\\\"label\\\",\\\"value\\\",\\\"variant\\\"]),w(Re,k({type:x(\\\"spinner\\\")}))),Ge=(ye(\\\"spinner\\\",qe),w(Re,k({children:S(A((()=>ze)))}))),He=w(Ge,k({type:x(\\\"panel\\\")})),ze=(ye(\\\"panel\\\",He,[\\\"children\\\"]),pe([_e,Ne,Me,ke,He,qe,je,$e,xe,Te,Ue,Pe]));var Je,Ke,Ve,We,Xe,Qe,Ye=((Je=Ye||{}).Critical=\\\"critical\\\",Je),Ze=((Ke=Ze||{}).ButtonClickEvent=\\\"ButtonClickEvent\\\",Ke.FormSubmitEvent=\\\"FormSubmitEvent\\\",Ke.InputChangeEvent=\\\"InputChangeEvent\\\",Ke.FileUploadEvent=\\\"FileUploadEvent\\\",Ke),tr=k({type:P(),name:O(P())}),er=w(tr,k({type:x(\\\"ButtonClickEvent\\\"),name:O(P())})),rr=k({name:P(),size:M(),contentType:P(),contents:P()}),nr=w(tr,k({type:x(\\\"FormSubmitEvent\\\"),value:C(P(),N(T([P(),rr,R()]))),name:P()})),ir=w(tr,k({type:x(\\\"InputChangeEvent\\\"),name:P(),value:T([P(),R()])})),or=(T([er,nr,ir,w(tr,k({type:x(\\\"FileUploadEvent\\\"),name:P(),file:N(rr)}))]),(Ve=or||{}).Alert=\\\"alert\\\",Ve.Confirmation=\\\"confirmation\\\",Ve.Prompt=\\\"prompt\\\",Ve),sr=((We=sr||{}).Base64=\\\"base64\\\",We.Hex=\\\"hex\\\",We.Utf8=\\\"utf8\\\",We),ar=((Xe=ar||{}).ClearState=\\\"clear\\\",Xe.GetState=\\\"get\\\",Xe.UpdateState=\\\"update\\\",Xe),ur=((Qe=ur||{}).InApp=\\\"inApp\\\",Qe.Native=\\\"native\\\",Qe),cr=ge([P(),M()]),lr=fr([P()]);k({type:P(),props:C(P(),J),key:N(cr)});function fr(t){return function(t){const e=ge([t,S(A((()=>e)))]);return e}(N(ge([...t,R()])))}function hr(t,e={}){return k({type:he(t),props:k(e),key:N(cr)})}var dr=hr(\\\"Button\\\",{children:lr,name:O(P()),type:O(ge([he(\\\"button\\\"),he(\\\"submit\\\")])),variant:O(ge([he(\\\"primary\\\"),he(\\\"destructive\\\")])),disabled:O(R())}),pr=hr(\\\"Checkbox\\\",{name:P(),checked:O(R()),label:O(P()),variant:O(ge([he(\\\"default\\\"),he(\\\"toggle\\\")]))}),gr=hr(\\\"Input\\\",{name:P(),type:O(ge([he(\\\"text\\\"),he(\\\"password\\\"),he(\\\"number\\\")])),value:O(P()),placeholder:O(P())}),mr=hr(\\\"Option\\\",{value:P(),children:P()}),yr=hr(\\\"Dropdown\\\",{name:P(),value:O(P()),children:fr([mr])}),vr=hr(\\\"Radio\\\",{value:P(),children:P()}),wr=hr(\\\"RadioGroup\\\",{name:P(),value:O(P()),children:fr([vr])}),br=hr(\\\"FileInput\\\",{name:P(),accept:ge([O(S(P()))]),compact:O(R())}),Ar=[gr,dr],Er=[gr,yr,wr,br,pr],Sr=(ge([...Er,...Ar]),ge([B(Ar),...Er])),Rr=hr(\\\"Field\\\",{label:O(P()),error:O(P()),children:Sr}),Ir=hr(\\\"Form\\\",{children:fr([Rr,A((()=>Jr))]),name:P()}),xr=hr(\\\"Bold\\\",{children:fr([P(),A((()=>_r))])}),_r=hr(\\\"Italic\\\",{children:fr([P(),A((()=>xr))])}),Nr=ge([xr,_r]),Mr=hr(\\\"Address\\\",{address:Yt}),kr=hr(\\\"Box\\\",{children:fr([A((()=>Jr))]),direction:O(ge([he(\\\"horizontal\\\"),he(\\\"vertical\\\")])),alignment:O(ge([he(\\\"start\\\"),he(\\\"center\\\"),he(\\\"end\\\"),he(\\\"space-between\\\"),he(\\\"space-around\\\")]))}),Or=hr(\\\"Footer\\\",{children:ge([B([dr,dr]),dr])}),Cr=hr(\\\"Container\\\",{children:ge([B([kr,Or]),kr])}),Pr=hr(\\\"Copyable\\\",{value:P(),sensitive:O(R())}),Br=hr(\\\"Divider\\\"),Tr=hr(\\\"Value\\\",{value:P(),extra:P()}),Lr=hr(\\\"Card\\\",{image:O(P()),title:P(),description:O(P()),value:P(),extra:O(P())}),Ur=hr(\\\"Heading\\\",{children:lr}),jr=hr(\\\"Image\\\",{src:me(),alt:O(P())}),Fr=hr(\\\"Link\\\",{href:P(),children:fr([Nr,P()])}),Dr=hr(\\\"Text\\\",{children:fr([P(),xr,_r,Fr]),alignment:O(ge([he(\\\"start\\\"),he(\\\"center\\\"),he(\\\"end\\\")]))}),$r=ge([Dr,xr,_r,Fr,jr,R()]),qr=ge([Dr,xr,_r,Fr,P()]),Gr=hr(\\\"Tooltip\\\",{children:N($r),content:qr}),Hr=hr(\\\"Row\\\",{label:P(),children:ge([Mr,jr,Dr,Tr]),variant:O(ge([he(\\\"default\\\"),he(\\\"warning\\\"),he(\\\"critical\\\")])),tooltip:O(P())}),zr=hr(\\\"Spinner\\\"),Jr=pe([Mr,xr,kr,dr,Pr,Br,yr,wr,br,Ir,Ur,gr,jr,_r,Fr,Hr,zr,Dr,Gr,pr,Lr]),Kr=ge([Jr,Cr]),Vr=(pe([dr,gr,br,Rr,Ir,xr,_r,Mr,kr,Pr,Br,Ur,jr,Fr,Hr,zr,Dr,yr,mr,wr,vr,Tr,Gr,pr,Or,Cr,Lr]),T([rr,P(),R()])),Wr=C(P(),N(Vr));C(P(),T([Wr,N(Vr)])),T([ze,Kr]),C(P(),J);function Xr(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`positive integer expected, not ${t}`)}function Qr(t,...e){if(!((r=t)instanceof Uint8Array||null!=r&&\\\"object\\\"==typeof r&&\\\"Uint8Array\\\"===r.constructor.name))throw new Error(\\\"Uint8Array expected\\\");var r;if(e.length>0&&!e.includes(t.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${t.length}`)}function Yr(t){if(\\\"function\\\"!=typeof t||\\\"function\\\"!=typeof t.create)throw new Error(\\\"Hash should be wrapped by utils.wrapConstructor\\\");Xr(t.outputLen),Xr(t.blockLen)}function Zr(t,e=!0){if(t.destroyed)throw new Error(\\\"Hash instance has been destroyed\\\");if(e&&t.finished)throw new Error(\\\"Hash#digest() has already been called\\\")}function tn(t,e){Qr(t);const r=e.outputLen;if(t.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}const en={number:Xr,bool:function(t){if(\\\"boolean\\\"!=typeof t)throw new Error(`boolean expected, not ${t}`)},bytes:Qr,hash:Yr,exists:Zr,output:tn},rn=\\\"object\\\"==typeof globalThis&&\\\"crypto\\\"in globalThis?globalThis.crypto:void 0;const nn=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),on=(t,e)=>t<<32-e|t>>>e,sn=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],an=t=>t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255;function un(t){for(let e=0;e<t.length;e++)t[e]=an(t[e])}Array.from({length:256},((t,e)=>e.toString(16).padStart(2,\\\"0\\\")));function cn(t){if(\\\"string\\\"!=typeof t)throw new Error(\\\"utf8ToBytes expected string, got \\\"+typeof t);return new Uint8Array((new TextEncoder).encode(t))}function ln(t){return\\\"string\\\"==typeof t&&(t=cn(t)),Qr(t),t}class fn{clone(){return this._cloneInto()}}function hn(t){const e=e=>t().update(ln(e)).digest(),r=t();return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=()=>t(),e}function dn(t=32){if(rn&&\\\"function\\\"==typeof rn.getRandomValues)return rn.getRandomValues(new Uint8Array(t));throw new Error(\\\"crypto.getRandomValues must be defined\\\")}const pn=(t,e,r)=>t&e^t&r^e&r;class gn extends fn{constructor(t,e,r,n){super(),this.blockLen=t,this.outputLen=e,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=nn(this.buffer)}update(t){Zr(this);const{view:e,buffer:r,blockLen:n}=this,i=(t=ln(t)).length;for(let o=0;o<i;){const s=Math.min(n-this.pos,i-o);if(s!==n)r.set(t.subarray(o,o+s),this.pos),this.pos+=s,o+=s,this.pos===n&&(this.process(e,0),this.pos=0);else{const e=nn(t);for(;n<=i-o;o+=n)this.process(e,o)}}return this.length+=t.length,this.roundClean(),this}digestInto(t){Zr(this),tn(t,this),this.finished=!0;const{buffer:e,view:r,blockLen:n,isLE:i}=this;let{pos:o}=this;e[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>n-o&&(this.process(r,0),o=0);for(let t=o;t<n;t++)e[t]=0;!function(t,e,r,n){if(\\\"function\\\"==typeof t.setBigUint64)return t.setBigUint64(e,r,n);const i=BigInt(32),o=BigInt(4294967295),s=Number(r>>i&o),a=Number(r&o),u=n?4:0,c=n?0:4;t.setUint32(e+u,s,n),t.setUint32(e+c,a,n)}(r,n-8,BigInt(8*this.length),i),this.process(r,0);const s=nn(t),a=this.outputLen;if(a%4)throw new Error(\\\"_sha2: outputLen should be aligned to 32bit\\\");const u=a/4,c=this.get();if(u>c.length)throw new Error(\\\"_sha2: outputLen bigger than state\\\");for(let t=0;t<u;t++)s.setUint32(4*t,c[t],i)}digest(){const{buffer:t,outputLen:e}=this;this.digestInto(t);const r=t.slice(0,e);return this.destroy(),r}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:e,buffer:r,length:n,finished:i,destroyed:o,pos:s}=this;return t.length=n,t.pos=s,t.finished=i,t.destroyed=o,n%e&&t.buffer.set(r),t}}const mn=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),yn=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),vn=new Uint32Array(64);class wn extends gn{constructor(){super(64,32,8,!1),this.A=0|yn[0],this.B=0|yn[1],this.C=0|yn[2],this.D=0|yn[3],this.E=0|yn[4],this.F=0|yn[5],this.G=0|yn[6],this.H=0|yn[7]}get(){const{A:t,B:e,C:r,D:n,E:i,F:o,G:s,H:a}=this;return[t,e,r,n,i,o,s,a]}set(t,e,r,n,i,o,s,a){this.A=0|t,this.B=0|e,this.C=0|r,this.D=0|n,this.E=0|i,this.F=0|o,this.G=0|s,this.H=0|a}process(t,e){for(let r=0;r<16;r++,e+=4)vn[r]=t.getUint32(e,!1);for(let t=16;t<64;t++){const e=vn[t-15],r=vn[t-2],n=on(e,7)^on(e,18)^e>>>3,i=on(r,17)^on(r,19)^r>>>10;vn[t]=i+vn[t-7]+n+vn[t-16]|0}let{A:r,B:n,C:i,D:o,E:s,F:a,G:u,H:c}=this;for(let t=0;t<64;t++){const e=c+(on(s,6)^on(s,11)^on(s,25))+((l=s)&a^~l&u)+mn[t]+vn[t]|0,f=(on(r,2)^on(r,13)^on(r,22))+pn(r,n,i)|0;c=u,u=a,a=s,s=o+e|0,o=i,i=n,n=r,r=e+f|0}var l;r=r+this.A|0,n=n+this.B|0,i=i+this.C|0,o=o+this.D|0,s=s+this.E|0,a=a+this.F|0,u=u+this.G|0,c=c+this.H|0,this.set(r,n,i,o,s,a,u,c)}roundClean(){vn.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const bn=hn((()=>new wn));class An extends fn{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,Yr(t);const r=ln(e);if(this.iHash=t.create(),\\\"function\\\"!=typeof this.iHash.update)throw new Error(\\\"Expected instance of class which extends utils.Hash\\\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const n=this.blockLen,i=new Uint8Array(n);i.set(r.length>n?t.create().update(r).digest():r);for(let t=0;t<i.length;t++)i[t]^=54;this.iHash.update(i),this.oHash=t.create();for(let t=0;t<i.length;t++)i[t]^=106;this.oHash.update(i),i.fill(0)}update(t){return Zr(this),this.iHash.update(t),this}digestInto(t){Zr(this),Qr(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:e,iHash:r,finished:n,destroyed:i,blockLen:o,outputLen:s}=this;return t.finished=n,t.destroyed=i,t.blockLen=o,t.outputLen=s,t.oHash=e._cloneInto(t.oHash),t.iHash=r._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const En=(t,e,r)=>new An(t,e).update(r).digest();En.create=(t,e)=>new An(t,e);const Sn=BigInt(1),Rn=BigInt(2);function In(t){return t instanceof Uint8Array||null!=t&&\\\"object\\\"==typeof t&&\\\"Uint8Array\\\"===t.constructor.name}function xn(t){if(!In(t))throw new Error(\\\"Uint8Array expected\\\")}const _n=Array.from({length:256},((t,e)=>e.toString(16).padStart(2,\\\"0\\\")));function Nn(t){xn(t);let e=\\\"\\\";for(let r=0;r<t.length;r++)e+=_n[t[r]];return e}function Mn(t){if(\\\"string\\\"!=typeof t)throw new Error(\\\"hex string expected, got \\\"+typeof t);return BigInt(\\\"\\\"===t?\\\"0\\\":`0x${t}`)}const kn={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function On(t){return t>=kn._0&&t<=kn._9?t-kn._0:t>=kn._A&&t<=kn._F?t-(kn._A-10):t>=kn._a&&t<=kn._f?t-(kn._a-10):void 0}function Cn(t){if(\\\"string\\\"!=typeof t)throw new Error(\\\"hex string expected, got \\\"+typeof t);const e=t.length,r=e/2;if(e%2)throw new Error(\\\"padded hex string expected, got unpadded hex of length \\\"+e);const n=new Uint8Array(r);for(let e=0,i=0;e<r;e++,i+=2){const r=On(t.charCodeAt(i)),o=On(t.charCodeAt(i+1));if(void 0===r||void 0===o){const e=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character \\\"'+e+'\\\" at index '+i)}n[e]=16*r+o}return n}function Pn(t){return Mn(Nn(t))}function Bn(t){return xn(t),Mn(Nn(Uint8Array.from(t).reverse()))}function Tn(t,e){return Cn(t.toString(16).padStart(2*e,\\\"0\\\"))}function Ln(t,e){return Tn(t,e).reverse()}function Un(t,e,r){let n;if(\\\"string\\\"==typeof e)try{n=Cn(e)}catch(r){throw new Error(`${t} must be valid hex string, got \\\"${e}\\\". Cause: ${r}`)}else{if(!In(e))throw new Error(`${t} must be hex string or Uint8Array`);n=Uint8Array.from(e)}const i=n.length;if(\\\"number\\\"==typeof r&&i!==r)throw new Error(`${t} expected ${r} bytes, got ${i}`);return n}function jn(...t){let e=0;for(let r=0;r<t.length;r++){const n=t[r];xn(n),e+=n.length}const r=new Uint8Array(e);for(let e=0,n=0;e<t.length;e++){const i=t[e];r.set(i,n),n+=i.length}return r}const Fn=t=>(Rn<<BigInt(t-1))-Sn,Dn=t=>new Uint8Array(t),$n=t=>Uint8Array.from(t);function qn(t,e,r){if(\\\"number\\\"!=typeof t||t<2)throw new Error(\\\"hashLen must be a number\\\");if(\\\"number\\\"!=typeof e||e<2)throw new Error(\\\"qByteLen must be a number\\\");if(\\\"function\\\"!=typeof r)throw new Error(\\\"hmacFn must be a function\\\");let n=Dn(t),i=Dn(t),o=0;const s=()=>{n.fill(1),i.fill(0),o=0},a=(...t)=>r(i,n,...t),u=(t=Dn())=>{i=a($n([0]),t),n=a(),0!==t.length&&(i=a($n([1]),t),n=a())},c=()=>{if(o++>=1e3)throw new Error(\\\"drbg: tried 1000 values\\\");let t=0;const r=[];for(;t<e;){n=a();const e=n.slice();r.push(e),t+=n.length}return jn(...r)};return(t,e)=>{let r;for(s(),u(t);!(r=e(c()));)u();return s(),r}}const Gn={bigint:t=>\\\"bigint\\\"==typeof t,function:t=>\\\"function\\\"==typeof t,boolean:t=>\\\"boolean\\\"==typeof t,string:t=>\\\"string\\\"==typeof t,stringOrUint8Array:t=>\\\"string\\\"==typeof t||In(t),isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>\\\"function\\\"==typeof t&&Number.isSafeInteger(t.outputLen)};function Hn(t,e,r={}){const n=(e,r,n)=>{const i=Gn[r];if(\\\"function\\\"!=typeof i)throw new Error(`Invalid validator \\\"${r}\\\", expected function`);const o=t[e];if(!(n&&void 0===o||i(o,t)))throw new Error(`Invalid param ${String(e)}=${o} (${typeof o}), expected ${r}`)};for(const[t,r]of Object.entries(e))n(t,r,!1);for(const[t,e]of Object.entries(r))n(t,e,!0);return t}const zn=BigInt(0),Jn=BigInt(1),Kn=BigInt(2),Vn=BigInt(3),Wn=BigInt(4),Xn=BigInt(5),Qn=BigInt(8);BigInt(9),BigInt(16);function Yn(t,e){const r=t%e;return r>=zn?r:e+r}function Zn(t,e,r){if(r<=zn||e<zn)throw new Error(\\\"Expected power/modulo > 0\\\");if(r===Jn)return zn;let n=Jn;for(;e>zn;)e&Jn&&(n=n*t%r),t=t*t%r,e>>=Jn;return n}function ti(t,e,r){let n=t;for(;e-- >zn;)n*=n,n%=r;return n}function ei(t,e){if(t===zn||e<=zn)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=Yn(t,e),n=e,i=zn,o=Jn,s=Jn,a=zn;for(;r!==zn;){const t=n/r,e=n%r,u=i-s*t,c=o-a*t;n=r,r=e,i=s,o=a,s=u,a=c}if(n!==Jn)throw new Error(\\\"invert: does not exist\\\");return Yn(i,e)}function ri(t){if(t%Wn===Vn){const e=(t+Jn)/Wn;return function(t,r){const n=t.pow(r,e);if(!t.eql(t.sqr(n),r))throw new Error(\\\"Cannot find square root\\\");return n}}if(t%Qn===Xn){const e=(t-Xn)/Qn;return function(t,r){const n=t.mul(r,Kn),i=t.pow(n,e),o=t.mul(r,i),s=t.mul(t.mul(o,Kn),i),a=t.mul(o,t.sub(s,t.ONE));if(!t.eql(t.sqr(a),r))throw new Error(\\\"Cannot find square root\\\");return a}}return function(t){const e=(t-Jn)/Kn;let r,n,i;for(r=t-Jn,n=0;r%Kn===zn;r/=Kn,n++);for(i=Kn;i<t&&Zn(i,e,t)!==t-Jn;i++);if(1===n){const e=(t+Jn)/Wn;return function(t,r){const n=t.pow(r,e);if(!t.eql(t.sqr(n),r))throw new Error(\\\"Cannot find square root\\\");return n}}const o=(r+Jn)/Kn;return function(t,s){if(t.pow(s,e)===t.neg(t.ONE))throw new Error(\\\"Cannot find square root\\\");let a=n,u=t.pow(t.mul(t.ONE,i),r),c=t.pow(s,o),l=t.pow(s,r);for(;!t.eql(l,t.ONE);){if(t.eql(l,t.ZERO))return t.ZERO;let e=1;for(let r=t.sqr(l);e<a&&!t.eql(r,t.ONE);e++)r=t.sqr(r);const r=t.pow(u,Jn<<BigInt(a-e-1));u=t.sqr(r),c=t.mul(c,r),l=t.mul(l,u),a=e}return c}}(t)}const ni=[\\\"create\\\",\\\"isValid\\\",\\\"is0\\\",\\\"neg\\\",\\\"inv\\\",\\\"sqrt\\\",\\\"sqr\\\",\\\"eql\\\",\\\"add\\\",\\\"sub\\\",\\\"mul\\\",\\\"pow\\\",\\\"div\\\",\\\"addN\\\",\\\"subN\\\",\\\"mulN\\\",\\\"sqrN\\\"];function ii(t,e){const r=void 0!==e?e:t.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}function oi(t){if(\\\"bigint\\\"!=typeof t)throw new Error(\\\"field order must be bigint\\\");const e=t.toString(2).length;return Math.ceil(e/8)}function si(t){const e=oi(t);return e+Math.ceil(e/2)}const ai=BigInt(0),ui=BigInt(1);function ci(t){return function(t){const e=ni.reduce(((t,e)=>(t[e]=\\\"function\\\",t)),{ORDER:\\\"bigint\\\",MASK:\\\"bigint\\\",BYTES:\\\"isSafeInteger\\\",BITS:\\\"isSafeInteger\\\"});Hn(t,e)}(t.Fp),Hn(t,{n:\\\"bigint\\\",h:\\\"bigint\\\",Gx:\\\"field\\\",Gy:\\\"field\\\"},{nBitLength:\\\"isSafeInteger\\\",nByteLength:\\\"isSafeInteger\\\"}),Object.freeze({...ii(t.n,t.nBitLength),...t,p:t.Fp.ORDER})}const{Ph:li,aT:fi}=t,hi={Err:class extends Error{constructor(t=\\\"\\\"){super(t)}},_parseInt(t){const{Err:e}=hi;if(t.length<2||2!==t[0])throw new e(\\\"Invalid signature integer tag\\\");const r=t[1],n=t.subarray(2,r+2);if(!r||n.length!==r)throw new e(\\\"Invalid signature integer: wrong length\\\");if(128&n[0])throw new e(\\\"Invalid signature integer: negative\\\");if(0===n[0]&&!(128&n[1]))throw new e(\\\"Invalid signature integer: unnecessary leading zero\\\");return{d:li(n),l:t.subarray(r+2)}},toSig(t){const{Err:e}=hi,r=\\\"string\\\"==typeof t?fi(t):t;xn(r);let n=r.length;if(n<2||48!=r[0])throw new e(\\\"Invalid signature tag\\\");if(r[1]!==n-2)throw new e(\\\"Invalid signature: incorrect length\\\");const{d:i,l:o}=hi._parseInt(r.subarray(2)),{d:s,l:a}=hi._parseInt(o);if(a.length)throw new e(\\\"Invalid signature: left bytes after parsing\\\");return{r:i,s}},hexFromSig(t){const e=t=>8&Number.parseInt(t[0],16)?\\\"00\\\"+t:t,r=t=>{const e=t.toString(16);return 1&e.length?`0${e}`:e},n=e(r(t.s)),i=e(r(t.r)),o=n.length/2,s=i.length/2,a=r(o),u=r(s);return`30${r(s+o+4)}02${u}${i}02${a}${n}`}},di=BigInt(0),pi=BigInt(1),gi=(BigInt(2),BigInt(3));BigInt(4);function mi(t){const e=function(t){const e=ci(t);Hn(e,{a:\\\"field\\\",b:\\\"field\\\"},{allowedPrivateKeyLengths:\\\"array\\\",wrapPrivateKey:\\\"boolean\\\",isTorsionFree:\\\"function\\\",clearCofactor:\\\"function\\\",allowInfinityPoint:\\\"boolean\\\",fromBytes:\\\"function\\\",toBytes:\\\"function\\\"});const{endo:r,Fp:n,a:i}=e;if(r){if(!n.eql(i,n.ZERO))throw new Error(\\\"Endomorphism can only be defined for Koblitz curves that have a=0\\\");if(\\\"object\\\"!=typeof r||\\\"bigint\\\"!=typeof r.beta||\\\"function\\\"!=typeof r.splitScalar)throw new Error(\\\"Expected endomorphism with beta: bigint and splitScalar: function\\\")}return Object.freeze({...e})}(t),{Fp:r}=e,n=e.toBytes||((t,e,n)=>{const i=e.toAffine();return jn(Uint8Array.from([4]),r.toBytes(i.x),r.toBytes(i.y))}),i=e.fromBytes||(t=>{const e=t.subarray(1);return{x:r.fromBytes(e.subarray(0,r.BYTES)),y:r.fromBytes(e.subarray(r.BYTES,2*r.BYTES))}});function o(t){const{a:n,b:i}=e,o=r.sqr(t),s=r.mul(o,t);return r.add(r.add(s,r.mul(t,n)),i)}if(!r.eql(r.sqr(e.Gy),o(e.Gx)))throw new Error(\\\"bad generator point: equation left != right\\\");function s(t){return\\\"bigint\\\"==typeof t&&di<t&&t<e.n}function a(t){if(!s(t))throw new Error(\\\"Expected valid bigint: 0 < bigint < curve.n\\\")}function u(t){const{allowedPrivateKeyLengths:r,nByteLength:n,wrapPrivateKey:i,n:o}=e;if(r&&\\\"bigint\\\"!=typeof t){if(In(t)&&(t=Nn(t)),\\\"string\\\"!=typeof t||!r.includes(t.length))throw new Error(\\\"Invalid key\\\");t=t.padStart(2*n,\\\"0\\\")}let s;try{s=\\\"bigint\\\"==typeof t?t:Pn(Un(\\\"private key\\\",t,n))}catch(e){throw new Error(`private key must be ${n} bytes, hex or bigint, not ${typeof t}`)}return i&&(s=Yn(s,o)),a(s),s}const c=new Map;function l(t){if(!(t instanceof f))throw new Error(\\\"ProjectivePoint expected\\\")}class f{constructor(t,e,n){if(this.px=t,this.py=e,this.pz=n,null==t||!r.isValid(t))throw new Error(\\\"x required\\\");if(null==e||!r.isValid(e))throw new Error(\\\"y required\\\");if(null==n||!r.isValid(n))throw new Error(\\\"z required\\\")}static fromAffine(t){const{x:e,y:n}=t||{};if(!t||!r.isValid(e)||!r.isValid(n))throw new Error(\\\"invalid affine point\\\");if(t instanceof f)throw new Error(\\\"projective point not allowed\\\");const i=t=>r.eql(t,r.ZERO);return i(e)&&i(n)?f.ZERO:new f(e,n,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(t){const e=r.invertBatch(t.map((t=>t.pz)));return t.map(((t,r)=>t.toAffine(e[r]))).map(f.fromAffine)}static fromHex(t){const e=f.fromAffine(i(Un(\\\"pointHex\\\",t)));return e.assertValidity(),e}static fromPrivateKey(t){return f.BASE.multiply(u(t))}_setWindowSize(t){this._WINDOW_SIZE=t,c.delete(this)}assertValidity(){if(this.is0()){if(e.allowInfinityPoint&&!r.is0(this.py))return;throw new Error(\\\"bad point: ZERO\\\")}const{x:t,y:n}=this.toAffine();if(!r.isValid(t)||!r.isValid(n))throw new Error(\\\"bad point: x or y not FE\\\");const i=r.sqr(n),s=o(t);if(!r.eql(i,s))throw new Error(\\\"bad point: equation left != right\\\");if(!this.isTorsionFree())throw new Error(\\\"bad point: not in prime-order subgroup\\\")}hasEvenY(){const{y:t}=this.toAffine();if(r.isOdd)return!r.isOdd(t);throw new Error(\\\"Field doesn't support isOdd\\\")}equals(t){l(t);const{px:e,py:n,pz:i}=this,{px:o,py:s,pz:a}=t,u=r.eql(r.mul(e,a),r.mul(o,i)),c=r.eql(r.mul(n,a),r.mul(s,i));return u&&c}negate(){return new f(this.px,r.neg(this.py),this.pz)}double(){const{a:t,b:n}=e,i=r.mul(n,gi),{px:o,py:s,pz:a}=this;let u=r.ZERO,c=r.ZERO,l=r.ZERO,h=r.mul(o,o),d=r.mul(s,s),p=r.mul(a,a),g=r.mul(o,s);return g=r.add(g,g),l=r.mul(o,a),l=r.add(l,l),u=r.mul(t,l),c=r.mul(i,p),c=r.add(u,c),u=r.sub(d,c),c=r.add(d,c),c=r.mul(u,c),u=r.mul(g,u),l=r.mul(i,l),p=r.mul(t,p),g=r.sub(h,p),g=r.mul(t,g),g=r.add(g,l),l=r.add(h,h),h=r.add(l,h),h=r.add(h,p),h=r.mul(h,g),c=r.add(c,h),p=r.mul(s,a),p=r.add(p,p),h=r.mul(p,g),u=r.sub(u,h),l=r.mul(p,d),l=r.add(l,l),l=r.add(l,l),new f(u,c,l)}add(t){l(t);const{px:n,py:i,pz:o}=this,{px:s,py:a,pz:u}=t;let c=r.ZERO,h=r.ZERO,d=r.ZERO;const p=e.a,g=r.mul(e.b,gi);let m=r.mul(n,s),y=r.mul(i,a),v=r.mul(o,u),w=r.add(n,i),b=r.add(s,a);w=r.mul(w,b),b=r.add(m,y),w=r.sub(w,b),b=r.add(n,o);let A=r.add(s,u);return b=r.mul(b,A),A=r.add(m,v),b=r.sub(b,A),A=r.add(i,o),c=r.add(a,u),A=r.mul(A,c),c=r.add(y,v),A=r.sub(A,c),d=r.mul(p,b),c=r.mul(g,v),d=r.add(c,d),c=r.sub(y,d),d=r.add(y,d),h=r.mul(c,d),y=r.add(m,m),y=r.add(y,m),v=r.mul(p,v),b=r.mul(g,b),y=r.add(y,v),v=r.sub(m,v),v=r.mul(p,v),b=r.add(b,v),m=r.mul(y,b),h=r.add(h,m),m=r.mul(A,b),c=r.mul(w,c),c=r.sub(c,m),m=r.mul(w,y),d=r.mul(A,d),d=r.add(d,m),new f(c,h,d)}subtract(t){return this.add(t.negate())}is0(){return this.equals(f.ZERO)}wNAF(t){return d.wNAFCached(this,c,t,(t=>{const e=r.invertBatch(t.map((t=>t.pz)));return t.map(((t,r)=>t.toAffine(e[r]))).map(f.fromAffine)}))}multiplyUnsafe(t){const n=f.ZERO;if(t===di)return n;if(a(t),t===pi)return this;const{endo:i}=e;if(!i)return d.unsafeLadder(this,t);let{k1neg:o,k1:s,k2neg:u,k2:c}=i.splitScalar(t),l=n,h=n,p=this;for(;s>di||c>di;)s&pi&&(l=l.add(p)),c&pi&&(h=h.add(p)),p=p.double(),s>>=pi,c>>=pi;return o&&(l=l.negate()),u&&(h=h.negate()),h=new f(r.mul(h.px,i.beta),h.py,h.pz),l.add(h)}multiply(t){a(t);let n,i,o=t;const{endo:s}=e;if(s){const{k1neg:t,k1:e,k2neg:a,k2:u}=s.splitScalar(o);let{p:c,f:l}=this.wNAF(e),{p:h,f:p}=this.wNAF(u);c=d.constTimeNegate(t,c),h=d.constTimeNegate(a,h),h=new f(r.mul(h.px,s.beta),h.py,h.pz),n=c.add(h),i=l.add(p)}else{const{p:t,f:e}=this.wNAF(o);n=t,i=e}return f.normalizeZ([n,i])[0]}multiplyAndAddUnsafe(t,e,r){const n=f.BASE,i=(t,e)=>e!==di&&e!==pi&&t.equals(n)?t.multiply(e):t.multiplyUnsafe(e),o=i(this,e).add(i(t,r));return o.is0()?void 0:o}toAffine(t){const{px:e,py:n,pz:i}=this,o=this.is0();null==t&&(t=o?r.ONE:r.inv(i));const s=r.mul(e,t),a=r.mul(n,t),u=r.mul(i,t);if(o)return{x:r.ZERO,y:r.ZERO};if(!r.eql(u,r.ONE))throw new Error(\\\"invZ was invalid\\\");return{x:s,y:a}}isTorsionFree(){const{h:t,isTorsionFree:r}=e;if(t===pi)return!0;if(r)return r(f,this);throw new Error(\\\"isTorsionFree() has not been declared for the elliptic curve\\\")}clearCofactor(){const{h:t,clearCofactor:r}=e;return t===pi?this:r?r(f,this):this.multiplyUnsafe(e.h)}toRawBytes(t=!0){return this.assertValidity(),n(f,this,t)}toHex(t=!0){return Nn(this.toRawBytes(t))}}f.BASE=new f(e.Gx,e.Gy,r.ONE),f.ZERO=new f(r.ZERO,r.ONE,r.ZERO);const h=e.nBitLength,d=function(t,e){const r=(t,e)=>{const r=e.negate();return t?r:e},n=t=>({windows:Math.ceil(e/t)+1,windowSize:2**(t-1)});return{constTimeNegate:r,unsafeLadder(e,r){let n=t.ZERO,i=e;for(;r>ai;)r&ui&&(n=n.add(i)),i=i.double(),r>>=ui;return n},precomputeWindow(t,e){const{windows:r,windowSize:i}=n(e),o=[];let s=t,a=s;for(let t=0;t<r;t++){a=s,o.push(a);for(let t=1;t<i;t++)a=a.add(s),o.push(a);s=a.double()}return o},wNAF(e,i,o){const{windows:s,windowSize:a}=n(e);let u=t.ZERO,c=t.BASE;const l=BigInt(2**e-1),f=2**e,h=BigInt(e);for(let t=0;t<s;t++){const e=t*a;let n=Number(o&l);o>>=h,n>a&&(n-=f,o+=ui);const s=e,d=e+Math.abs(n)-1,p=t%2!=0,g=n<0;0===n?c=c.add(r(p,i[s])):u=u.add(r(g,i[d]))}return{p:u,f:c}},wNAFCached(t,e,r,n){const i=t._WINDOW_SIZE||1;let o=e.get(t);return o||(o=this.precomputeWindow(t,i),1!==i&&e.set(t,n(o))),this.wNAF(i,o,r)}}}(f,e.endo?Math.ceil(h/2):h);return{CURVE:e,ProjectivePoint:f,normPrivateKeyToScalar:u,weierstrassEquation:o,isWithinCurveOrder:s}}function yi(t){const e=function(t){const e=ci(t);return Hn(e,{hash:\\\"hash\\\",hmac:\\\"function\\\",randomBytes:\\\"function\\\"},{bits2int:\\\"function\\\",bits2int_modN:\\\"function\\\",lowS:\\\"boolean\\\"}),Object.freeze({lowS:!0,...e})}(t),{Fp:r,n}=e,i=r.BYTES+1,o=2*r.BYTES+1;function s(t){return Yn(t,n)}function a(t){return ei(t,n)}const{ProjectivePoint:u,normPrivateKeyToScalar:c,weierstrassEquation:l,isWithinCurveOrder:f}=mi({...e,toBytes(t,e,n){const i=e.toAffine(),o=r.toBytes(i.x),s=jn;return n?s(Uint8Array.from([e.hasEvenY()?2:3]),o):s(Uint8Array.from([4]),o,r.toBytes(i.y))},fromBytes(t){const e=t.length,n=t[0],s=t.subarray(1);if(e!==i||2!==n&&3!==n){if(e===o&&4===n){return{x:r.fromBytes(s.subarray(0,r.BYTES)),y:r.fromBytes(s.subarray(r.BYTES,2*r.BYTES))}}throw new Error(`Point of length ${e} was invalid. Expected ${i} compressed bytes or ${o} uncompressed bytes`)}{const t=Pn(s);if(!(di<(a=t)&&a<r.ORDER))throw new Error(\\\"Point is not on curve\\\");const e=l(t);let i;try{i=r.sqrt(e)}catch(t){const e=t instanceof Error?\\\": \\\"+t.message:\\\"\\\";throw new Error(\\\"Point is not on curve\\\"+e)}return!(1&~n)!==((i&pi)===pi)&&(i=r.neg(i)),{x:t,y:i}}var a}}),h=t=>Nn(Tn(t,e.nByteLength));function d(t){return t>n>>pi}const p=(t,e,r)=>Pn(t.slice(e,r));class g{constructor(t,e,r){this.r=t,this.s=e,this.recovery=r,this.assertValidity()}static fromCompact(t){const r=e.nByteLength;return t=Un(\\\"compactSignature\\\",t,2*r),new g(p(t,0,r),p(t,r,2*r))}static fromDER(t){const{r:e,s:r}=hi.toSig(Un(\\\"DER\\\",t));return new g(e,r)}assertValidity(){if(!f(this.r))throw new Error(\\\"r must be 0 < r < CURVE.n\\\");if(!f(this.s))throw new Error(\\\"s must be 0 < s < CURVE.n\\\")}addRecoveryBit(t){return new g(this.r,this.s,t)}recoverPublicKey(t){const{r:n,s:i,recovery:o}=this,c=w(Un(\\\"msgHash\\\",t));if(null==o||![0,1,2,3].includes(o))throw new Error(\\\"recovery id invalid\\\");const l=2===o||3===o?n+e.n:n;if(l>=r.ORDER)throw new Error(\\\"recovery id 2 or 3 invalid\\\");const f=1&o?\\\"03\\\":\\\"02\\\",d=u.fromHex(f+h(l)),p=a(l),g=s(-c*p),m=s(i*p),y=u.BASE.multiplyAndAddUnsafe(d,g,m);if(!y)throw new Error(\\\"point at infinify\\\");return y.assertValidity(),y}hasHighS(){return d(this.s)}normalizeS(){return this.hasHighS()?new g(this.r,s(-this.s),this.recovery):this}toDERRawBytes(){return Cn(this.toDERHex())}toDERHex(){return hi.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return Cn(this.toCompactHex())}toCompactHex(){return h(this.r)+h(this.s)}}const m={isValidPrivateKey(t){try{return c(t),!0}catch(t){return!1}},normPrivateKeyToScalar:c,randomPrivateKey:()=>{const t=si(e.n);return function(t,e,r=!1){const n=t.length,i=oi(e),o=si(e);if(n<16||n<o||n>1024)throw new Error(`expected ${o}-1024 bytes of input, got ${n}`);const s=Yn(r?Pn(t):Bn(t),e-Jn)+Jn;return r?Ln(s,i):Tn(s,i)}(e.randomBytes(t),e.n)},precompute:(t=8,e=u.BASE)=>(e._setWindowSize(t),e.multiply(BigInt(3)),e)};function y(t){const e=In(t),r=\\\"string\\\"==typeof t,n=(e||r)&&t.length;return e?n===i||n===o:r?n===2*i||n===2*o:t instanceof u}const v=e.bits2int||function(t){const r=Pn(t),n=8*t.length-e.nBitLength;return n>0?r>>BigInt(n):r},w=e.bits2int_modN||function(t){return s(v(t))},b=Fn(e.nBitLength);function A(t){if(\\\"bigint\\\"!=typeof t)throw new Error(\\\"bigint expected\\\");if(!(di<=t&&t<b))throw new Error(`bigint expected < 2^${e.nBitLength}`);return Tn(t,e.nByteLength)}function E(t,n,i=S){if([\\\"recovered\\\",\\\"canonical\\\"].some((t=>t in i)))throw new Error(\\\"sign() legacy options not supported\\\");const{hash:o,randomBytes:l}=e;let{lowS:h,prehash:p,extraEntropy:m}=i;null==h&&(h=!0),t=Un(\\\"msgHash\\\",t),p&&(t=Un(\\\"prehashed msgHash\\\",o(t)));const y=w(t),b=c(n),E=[A(b),A(y)];if(null!=m&&!1!==m){const t=!0===m?l(r.BYTES):m;E.push(Un(\\\"extraEntropy\\\",t))}const R=jn(...E),I=y;return{seed:R,k2sig:function(t){const e=v(t);if(!f(e))return;const r=a(e),n=u.BASE.multiply(e).toAffine(),i=s(n.x);if(i===di)return;const o=s(r*s(I+i*b));if(o===di)return;let c=(n.x===i?0:2)|Number(n.y&pi),l=o;return h&&d(o)&&(l=function(t){return d(t)?s(-t):t}(o),c^=1),new g(i,l,c)}}}const S={lowS:e.lowS,prehash:!1},R={lowS:e.lowS,prehash:!1};return u.BASE._setWindowSize(8),{CURVE:e,getPublicKey:function(t,e=!0){return u.fromPrivateKey(t).toRawBytes(e)},getSharedSecret:function(t,e,r=!0){if(y(t))throw new Error(\\\"first arg must be private key\\\");if(!y(e))throw new Error(\\\"second arg must be public key\\\");return u.fromHex(e).multiply(c(t)).toRawBytes(r)},sign:function(t,r,n=S){const{seed:i,k2sig:o}=E(t,r,n),s=e;return qn(s.hash.outputLen,s.nByteLength,s.hmac)(i,o)},verify:function(t,r,n,i=R){const o=t;if(r=Un(\\\"msgHash\\\",r),n=Un(\\\"publicKey\\\",n),\\\"strict\\\"in i)throw new Error(\\\"options.strict was renamed to lowS\\\");const{lowS:c,prehash:l}=i;let f,h;try{if(\\\"string\\\"==typeof o||In(o))try{f=g.fromDER(o)}catch(t){if(!(t instanceof hi.Err))throw t;f=g.fromCompact(o)}else{if(\\\"object\\\"!=typeof o||\\\"bigint\\\"!=typeof o.r||\\\"bigint\\\"!=typeof o.s)throw new Error(\\\"PARSE\\\");{const{r:t,s:e}=o;f=new g(t,e)}}h=u.fromHex(n)}catch(t){if(\\\"PARSE\\\"===t.message)throw new Error(\\\"signature must be Signature instance, Uint8Array or hex string\\\");return!1}if(c&&f.hasHighS())return!1;l&&(r=e.hash(r));const{r:d,s:p}=f,m=w(r),y=a(p),v=s(m*y),b=s(d*y),A=u.BASE.multiplyAndAddUnsafe(h,v,b)?.toAffine();return!!A&&s(A.x)===d},ProjectivePoint:u,Signature:g,utils:m}}function vi(t){return{hash:t,hmac:(e,...r)=>En(t,e,function(...t){let e=0;for(let r=0;r<t.length;r++){const n=t[r];Qr(n),e+=n.length}const r=new Uint8Array(e);for(let e=0,n=0;e<t.length;e++){const i=t[e];r.set(i,n),n+=i.length}return r}(...r)),randomBytes:dn}}const wi=BigInt(\\\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\\\"),bi=BigInt(\\\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\\\"),Ai=BigInt(1),Ei=BigInt(2),Si=(t,e)=>(t+e/Ei)/e;function Ri(t){const e=wi,r=BigInt(3),n=BigInt(6),i=BigInt(11),o=BigInt(22),s=BigInt(23),a=BigInt(44),u=BigInt(88),c=t*t*t%e,l=c*c*t%e,f=ti(l,r,e)*l%e,h=ti(f,r,e)*l%e,d=ti(h,Ei,e)*c%e,p=ti(d,i,e)*d%e,g=ti(p,o,e)*p%e,m=ti(g,a,e)*g%e,y=ti(m,u,e)*m%e,v=ti(y,a,e)*g%e,w=ti(v,r,e)*l%e,b=ti(w,s,e)*p%e,A=ti(b,n,e)*c%e,E=ti(A,Ei,e);if(!Ii.eql(Ii.sqr(E),t))throw new Error(\\\"Cannot find square root\\\");return E}const Ii=function(t,e,r=!1,n={}){if(t<=zn)throw new Error(`Expected Field ORDER > 0, got ${t}`);const{nBitLength:i,nByteLength:o}=ii(t,e);if(o>2048)throw new Error(\\\"Field lengths over 2048 bytes are not supported\\\");const s=ri(t),a=Object.freeze({ORDER:t,BITS:i,BYTES:o,MASK:Fn(i),ZERO:zn,ONE:Jn,create:e=>Yn(e,t),isValid:e=>{if(\\\"bigint\\\"!=typeof e)throw new Error(\\\"Invalid field element: expected bigint, got \\\"+typeof e);return zn<=e&&e<t},is0:t=>t===zn,isOdd:t=>(t&Jn)===Jn,neg:e=>Yn(-e,t),eql:(t,e)=>t===e,sqr:e=>Yn(e*e,t),add:(e,r)=>Yn(e+r,t),sub:(e,r)=>Yn(e-r,t),mul:(e,r)=>Yn(e*r,t),pow:(t,e)=>function(t,e,r){if(r<zn)throw new Error(\\\"Expected power > 0\\\");if(r===zn)return t.ONE;if(r===Jn)return e;let n=t.ONE,i=e;for(;r>zn;)r&Jn&&(n=t.mul(n,i)),i=t.sqr(i),r>>=Jn;return n}(a,t,e),div:(e,r)=>Yn(e*ei(r,t),t),sqrN:t=>t*t,addN:(t,e)=>t+e,subN:(t,e)=>t-e,mulN:(t,e)=>t*e,inv:e=>ei(e,t),sqrt:n.sqrt||(t=>s(a,t)),invertBatch:t=>function(t,e){const r=new Array(e.length),n=e.reduce(((e,n,i)=>t.is0(n)?e:(r[i]=e,t.mul(e,n))),t.ONE),i=t.inv(n);return e.reduceRight(((e,n,i)=>t.is0(n)?e:(r[i]=t.mul(e,r[i]),t.mul(e,n))),i),r}(a,t),cmov:(t,e,r)=>r?e:t,toBytes:t=>r?Ln(t,o):Tn(t,o),fromBytes:t=>{if(t.length!==o)throw new Error(`Fp.fromBytes: expected ${o}, got ${t.length}`);return r?Bn(t):Pn(t)}});return Object.freeze(a)}(wi,void 0,void 0,{sqrt:Ri}),xi=function(t,e){const r=e=>yi({...t,...vi(e)});return Object.freeze({...r(e),create:r})}({a:BigInt(0),b:BigInt(7),Fp:Ii,n:bi,Gx:BigInt(\\\"55066263022277343669578718895168534326250603453777594175500187360389116729240\\\"),Gy:BigInt(\\\"32670510020758816978083085130507043184471273380659243275938904335757337482424\\\"),h:BigInt(1),lowS:!0,endo:{beta:BigInt(\\\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\\\"),splitScalar:t=>{const e=bi,r=BigInt(\\\"0x3086d221a7d46bcde86c90e49284eb15\\\"),n=-Ai*BigInt(\\\"0xe4437ed6010e88286f547fa90abfe4c3\\\"),i=BigInt(\\\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\\\"),o=r,s=BigInt(\\\"0x100000000000000000000000000000000\\\"),a=Si(o*t,e),u=Si(-n*t,e);let c=Yn(t-a*r-u*i,e),l=Yn(-a*n-u*o,e);const f=c>s,h=l>s;if(f&&(c=e-c),h&&(l=e-l),c>s||l>s)throw new Error(\\\"splitScalar: Endomorphism failed, k=\\\"+t);return{k1neg:f,k1:c,k2neg:h,k2:l}}}},bn);BigInt(0);xi.ProjectivePoint;en.bool,en.bytes;function _i(t){return e=>(en.bytes(e),t(e))}(()=>{const t=\\\"object\\\"==typeof globalThis&&\\\"crypto\\\"in globalThis?globalThis.crypto:void 0,e=\\\"undefined\\\"!=typeof module&&\\\"function\\\"==typeof module.require&&module.require.bind(module);e&&!t&&e(\\\"crypto\\\")})();const Ni=t=>{if(\\\"string\\\"!=typeof t)throw new Error(\\\"[stripHexPrefix] input must be type 'string', received \\\"+typeof t);return function(t){if(\\\"string\\\"!=typeof t)throw new Error(\\\"[isHexPrefixed] input must be type 'string', received type \\\"+typeof t);return\\\"0\\\"===t[0]&&\\\"x\\\"===t[1]}(t)?t.slice(2):t};function Mi(t){let e=t;if(\\\"string\\\"!=typeof e)throw new Error(\\\"[padToEven] value must be type 'string', received \\\"+typeof e);return e.length%2&&(e=`0${e}`),e}function ki(t,e){return!(\\\"string\\\"!=typeof t||!t.match(/^0x[0-9A-Fa-f]*$/))&&!(void 0!==e&&e>0&&t.length!==2+2*e)}const Oi=BigInt(0),Ci={},Pi={};for(let t=0;t<16;t++){const e=t,r=16*t,n=t.toString(16).toLowerCase();Pi[n]=e,Pi[n.toUpperCase()]=e,Ci[n]=r,Ci[n.toUpperCase()]=r}function Bi(t){const e=t.length,r=new Uint8Array(e/2);for(let n=0;n<e;n+=2)r[n/2]=Ci[t[n]]+Pi[t[n+1]];return r}const Ti=Array.from({length:256},((t,e)=>e.toString(16).padStart(2,\\\"0\\\"))),Li=t=>{let e=\\\"0x\\\";if(void 0===t||0===t.length)return e;for(const r of t)e+=Ti[r];return e},Ui=[];for(let t=0;t<=65535;t++)Ui[t]=BigInt(t);const ji=(t,e=!1)=>{e&&t.reverse();const r=Li(t);return\\\"0x\\\"===r?Oi:4===r.length?Ui[t[0]]:6===r.length?Ui[256*t[0]+t[1]]:BigInt(r)},Fi=t=>{if(\\\"string\\\"!=typeof t)throw new Error(`hex argument type ${typeof t} must be of type string`);if(!/^0x[0-9a-fA-F]*$/.test(t))throw new Error(`Input must be a 0x-prefixed hexadecimal string, got ${t}`);return(t=t.slice(2)).length%2!=0&&(t=Mi(t)),Bi(t)},Di=t=>{const e=(t=>{if(!Number.isSafeInteger(t)||t<0)throw new Error(`Received an invalid integer type: ${t}`);return`0x${t.toString(16)}`})(t);return Fi(e)},$i=t=>{if(null==t)return new Uint8Array;if(Array.isArray(t)||t instanceof Uint8Array)return Uint8Array.from(t);if(\\\"string\\\"==typeof t){if(!ki(t))throw new Error(`Cannot convert string to Uint8Array. toBytes only supports 0x-prefixed hex strings and this string was given: ${t}`);return Fi(t)}if(\\\"number\\\"==typeof t)return Di(t);if(\\\"bigint\\\"==typeof t){if(t<Oi)throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${t}`);let e=t.toString(16);return e.length%2&&(e=\\\"0\\\"+e),(t=>{if(\\\"0x\\\"===t.slice(0,2))throw new Error(\\\"hex string is prefixed with 0x, should be unprefixed\\\");return Bi(Mi(t))})(e)}if(void 0!==t.toBytes)return t.toBytes();throw new Error(\\\"invalid type\\\")};BigInt(\\\"0xffffffffffffffff\\\"),BigInt(\\\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\\"),BigInt(\\\"115792089237316195423570985008687907853269984665640564039457584007913129639935\\\"),xi.CURVE.n,xi.CURVE.n,BigInt(2),BigInt(\\\"0x10000000000000000000000000000000000000000000000000000000000000000\\\"),Fi(\\\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\\\"),Fi(\\\"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\\\"),Fi(\\\"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\\\"),Uint8Array.from([128]),BigInt(-1),BigInt(0),BigInt(1),BigInt(2),BigInt(3),BigInt(7),BigInt(8),BigInt(27),BigInt(28),BigInt(31),BigInt(32),BigInt(64),BigInt(128),BigInt(255),BigInt(256),BigInt(96),BigInt(100),BigInt(160),BigInt(224),BigInt(7922816251426434e13),BigInt(1461501637330903e33),BigInt(2695994666715064e52),BigInt(1e9);Array.from({length:256},((t,e)=>e.toString(16).padStart(2,\\\"0\\\")));const qi=BigInt(2**32-1),Gi=BigInt(32);function Hi(t,e=!1){return e?{h:Number(t&qi),l:Number(t>>Gi&qi)}:{h:0|Number(t>>Gi&qi),l:0|Number(t&qi)}}function zi(t,e=!1){let r=new Uint32Array(t.length),n=new Uint32Array(t.length);for(let i=0;i<t.length;i++){const{h:o,l:s}=Hi(t[i],e);[r[i],n[i]]=[o,s]}return[r,n]}const Ji=(t,e,r)=>t<<r|e>>>32-r,Ki=(t,e,r)=>e<<r|t>>>32-r,Vi=(t,e,r)=>e<<r-32|t>>>64-r,Wi=(t,e,r)=>t<<r-32|e>>>64-r;const Xi=[],Qi=[],Yi=[],Zi=BigInt(0),to=BigInt(1),eo=BigInt(2),ro=BigInt(7),no=BigInt(256),io=BigInt(113);for(let t=0,e=to,r=1,n=0;t<24;t++){[r,n]=[n,(2*r+3*n)%5],Xi.push(2*(5*n+r)),Qi.push((t+1)*(t+2)/2%64);let i=Zi;for(let t=0;t<7;t++)e=(e<<to^(e>>ro)*io)%no,e&eo&&(i^=to<<(to<<BigInt(t))-to);Yi.push(i)}const[oo,so]=zi(Yi,!0),ao=(t,e,r)=>r>32?Vi(t,e,r):Ji(t,e,r),uo=(t,e,r)=>r>32?Wi(t,e,r):Ki(t,e,r);class co extends fn{constructor(t,e,r,n=!1,i=24){if(super(),this.blockLen=t,this.suffix=e,this.outputLen=r,this.enableXOF=n,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,Xr(r),0>=this.blockLen||this.blockLen>=200)throw new Error(\\\"Sha3 supports only keccak-f1600 function\\\");var o;this.state=new Uint8Array(200),this.state32=(o=this.state,new Uint32Array(o.buffer,o.byteOffset,Math.floor(o.byteLength/4)))}keccak(){sn||un(this.state32),function(t,e=24){const r=new Uint32Array(10);for(let n=24-e;n<24;n++){for(let e=0;e<10;e++)r[e]=t[e]^t[e+10]^t[e+20]^t[e+30]^t[e+40];for(let e=0;e<10;e+=2){const n=(e+8)%10,i=(e+2)%10,o=r[i],s=r[i+1],a=ao(o,s,1)^r[n],u=uo(o,s,1)^r[n+1];for(let r=0;r<50;r+=10)t[e+r]^=a,t[e+r+1]^=u}let e=t[2],i=t[3];for(let r=0;r<24;r++){const n=Qi[r],o=ao(e,i,n),s=uo(e,i,n),a=Xi[r];e=t[a],i=t[a+1],t[a]=o,t[a+1]=s}for(let e=0;e<50;e+=10){for(let n=0;n<10;n++)r[n]=t[e+n];for(let n=0;n<10;n++)t[e+n]^=~r[(n+2)%10]&r[(n+4)%10]}t[0]^=oo[n],t[1]^=so[n]}r.fill(0)}(this.state32,this.rounds),sn||un(this.state32),this.posOut=0,this.pos=0}update(t){Zr(this);const{blockLen:e,state:r}=this,n=(t=ln(t)).length;for(let i=0;i<n;){const o=Math.min(e-this.pos,n-i);for(let e=0;e<o;e++)r[this.pos++]^=t[i++];this.pos===e&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:t,suffix:e,pos:r,blockLen:n}=this;t[r]^=e,128&e&&r===n-1&&this.keccak(),t[n-1]^=128,this.keccak()}writeInto(t){Zr(this,!1),Qr(t),this.finish();const e=this.state,{blockLen:r}=this;for(let n=0,i=t.length;n<i;){this.posOut>=r&&this.keccak();const o=Math.min(r-this.posOut,i-n);t.set(e.subarray(this.posOut,this.posOut+o),n),this.posOut+=o,n+=o}return t}xofInto(t){if(!this.enableXOF)throw new Error(\\\"XOF is not possible for this instance\\\");return this.writeInto(t)}xof(t){return Xr(t),this.xofInto(new Uint8Array(t))}digestInto(t){if(tn(t,this),this.finished)throw new Error(\\\"digest() was already called\\\");return this.writeInto(t),this.destroy(),t}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(t){const{blockLen:e,suffix:r,outputLen:n,rounds:i,enableXOF:o}=this;return t||(t=new co(e,r,n,o,i)),t.state32.set(this.state32),t.pos=this.pos,t.posOut=this.posOut,t.finished=this.finished,t.rounds=i,t.suffix=r,t.outputLen=n,t.enableXOF=o,t.destroyed=this.destroyed,t}}const lo=(t,e,r)=>hn((()=>new co(e,t,r))),fo=lo(1,144,28),ho=lo(1,136,32),po=lo(1,104,48),go=lo(1,72,64),mo=(_i(fo),(()=>{const t=_i(ho);return t.create=ho.create,t})());_i(po),_i(go);const yo=function(t){try{!function(t){if(\\\"string\\\"!=typeof t)throw new Error(`This method only supports strings but input was: ${t}`)}(t)}catch(t){return!1}return/^0x[0-9a-fA-F]{40}$/.test(t)},vo=function(t,e){!function(t){if(!ki(t))throw new Error(`This method only supports 0x-prefixed hex strings but input was: ${t}`)}(t);const r=Ni(t).toLowerCase();let n=\\\"\\\";if(void 0!==e){n=ji($i(e)).toString()+\\\"0x\\\"}const i=cn(n+r),o=Li(mo(i)).slice(2);let s=\\\"0x\\\";for(let t=0;t<r.length;t++)parseInt(o[t],16)>=8?s+=r[t].toUpperCase():s+=r[t];return s};new Uint8Array(0);var wo,bo,Ao;!function(t){t.String=\\\"string\\\",t.Bytes=\\\"view\\\",t.Number=\\\"number\\\"}(wo||(wo={})),function(t){t.String=\\\"string\\\",t.Bytes=\\\"view\\\",t.JSON=\\\"json\\\"}(bo||(bo={})),function(t){t[t.Number=0]=\\\"Number\\\",t[t.BigInt=1]=\\\"BigInt\\\",t[t.Uint8Array=2]=\\\"Uint8Array\\\",t[t.PrefixedHexString=3]=\\\"PrefixedHexString\\\"}(Ao||(Ao={}));r(7007);_i(bn);var Eo=r(4433);function So(t,e){return r=t,Boolean(\\\"string\\\"==typeof r?.prototype?.constructor?.name)?new t({message:e}):t({message:e});var r}class Ro extends Error{constructor(t){super(t.message),this.code=\\\"ERR_ASSERTION\\\"}}function Io(t,e=\\\"Assertion failed.\\\",r=Ro){if(!t){if(e instanceof Error)throw e;throw So(r,e)}}r(8287).hp;const xo=function(){const t=[];return()=>{if(0===t.length)for(let e=0;e<256;e++)t.push(e.toString(16).padStart(2,\\\"0\\\"));return t}}();function _o(t){return t instanceof Uint8Array}function No(t){Io(_o(t),\\\"Value must be a Uint8Array.\\\")}function Mo(t){if(No(t),0===t.length)return\\\"0x\\\";const e=xo(),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=e[t[n]];return Po(r.join(\\\"\\\"))}tt(P(),/^(?:0x)?[0-9a-f]+$/iu),tt(P(),/^0x[0-9a-f]+$/iu);const ko=tt(P(),/^0x[0-9a-f]{40}$/u),Oo=tt(P(),/^0x[0-9a-fA-F]{40}$/u);function Co(t){return y(t,ko)||function(t){if(!y(t,Oo))return!1;return function(t){Io(y(t,Oo),\\\"Invalid hex address.\\\");const e=Bo(t.toLowerCase()),r=Bo(Mo(ho(e)));return`0x${e.split(\\\"\\\").map(((t,e)=>{const n=r[e];return Io(y(n,P()),\\\"Hash shorter than address.\\\"),parseInt(n,16)>7?t.toUpperCase():t})).join(\\\"\\\")}`}(t)===t}(t)}function Po(t){return t.startsWith(\\\"0x\\\")?t:t.startsWith(\\\"0X\\\")?`0x${t.substring(2)}`:`0x${t}`}function Bo(t){return t.startsWith(\\\"0x\\\")||t.startsWith(\\\"0X\\\")?t.substring(2):t}const To={randomUUID:\\\"undefined\\\"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let Lo;const Uo=new Uint8Array(16);function jo(){if(!Lo&&(Lo=\\\"undefined\\\"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Lo))throw new Error(\\\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\\\");return Lo(Uo)}const Fo=[];for(let t=0;t<256;++t)Fo.push((t+256).toString(16).slice(1));function Do(t,e=0){return Fo[t[e+0]]+Fo[t[e+1]]+Fo[t[e+2]]+Fo[t[e+3]]+\\\"-\\\"+Fo[t[e+4]]+Fo[t[e+5]]+\\\"-\\\"+Fo[t[e+6]]+Fo[t[e+7]]+\\\"-\\\"+Fo[t[e+8]]+Fo[t[e+9]]+\\\"-\\\"+Fo[t[e+10]]+Fo[t[e+11]]+Fo[t[e+12]]+Fo[t[e+13]]+Fo[t[e+14]]+Fo[t[e+15]]}const $o=function(t,e,r){if(To.randomUUID&&!e&&!t)return To.randomUUID();const n=(t=t||{}).random||(t.rng||jo)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,e){r=r||0;for(let t=0;t<16;++t)e[r+t]=n[t];return e}return Do(n)},qo={wallets:{}};function Go(t){throw new Error(t)}var Ho;!function(t){t[t.DEBUG=0]=\\\"DEBUG\\\",t[t.INFO=1]=\\\"INFO\\\",t[t.WARN=2]=\\\"WARN\\\",t[t.ERROR=3]=\\\"ERROR\\\"}(Ho||(Ho={}));const zo={threshold:Ho.WARN,handlers:{[Ho.DEBUG]:console.debug,[Ho.INFO]:console.info,[Ho.WARN]:console.warn,[Ho.ERROR]:console.error}};const Jo=new class{#t;constructor(t={}){this.#t={...zo,...t}}setLevel(t){this.#t.threshold=t}debug(t,...e){this.#e(Ho.DEBUG,t,...e)}info(t,...e){this.#e(Ho.INFO,t,...e)}warn(t,...e){this.#e(Ho.WARN,t,...e)}error(t,...e){this.#e(Ho.ERROR,t,...e)}#e(t=Ho.DEBUG,e,...r){const{threshold:n,handlers:i}=this.#t;t>=n&&i[t](e,...r)}};class Ko{#r;constructor(t){this.#r=t}async listAccounts(){return Object.values(this.#r.wallets).map((t=>t.account))}async getAccount(t){var e;return(null===(e=this.#r.wallets[t])||void 0===e?void 0:e.account)??Go(`Account '${t}' not found`)}async createAccount(t){var r;if(!(null===(r=t)||void 0===r?void 0:r.address))throw new Error(\\\"Account creation options must include an address\\\");if(!Co(t.address)&&!yo(t.address))throw new Error(`Invalid address '${t.address}' provided`);const n=vo(t.address);if(!function(t,e){return!e.find((e=>e.account.address===t))}(n,Object.values(this.#r.wallets)))throw new Error(`Account address already in use: ${n}`);try{const r={id:$o(),options:{},address:n,methods:[],type:e.EthAccountType.Eoa},i={account:r};return t.accountNameSuggestion&&(i.accountNameSuggestion=t.accountNameSuggestion),await this.#n(Eo.KeyringEvent.AccountCreated,{...i}),this.#r.wallets[r.id]={account:r,privateKey:\\\"\\\"},await this.#i(),r}catch(t){throw new Error(`Unknown snap error: ${t.message}`)}}async filterAccountChains(t,e){return e.filter((t=>function(t){return t.startsWith(\\\"eip155:\\\")}(t)))}async updateAccount(t){const e=this.#r.wallets[t.id]??Go(`Account '${t.id}' not found`),r={...e.account,...t,address:e.account.address,methods:e.account.methods,type:e.account.type,options:e.account.options};try{await this.#n(Eo.KeyringEvent.AccountUpdated,{account:r}),e.account=r,await this.#i()}catch(t){throw new Error(`Unknown snap error: ${t.message}`)}}async deleteAccount(t){if(!this.#r.wallets[t])throw new Error(`Account '${t}' not found`);try{await this.#n(Eo.KeyringEvent.AccountDeleted,{id:t}),delete this.#r.wallets[t],await this.#i()}catch(t){throw new Error(`Unknown snap error: ${t.message}`)}}async submitRequest(t){Go(`Signing is not supported for this watch-only account snap.\\\\nRequest: ${JSON.stringify(t,null,2)}`)}async#i(){await async function(t){await snap.request({method:\\\"snap_manageState\\\",params:{operation:\\\"update\\\",newState:t}})}(this.#r)}async#n(t,r){await(0,e.emitSnapKeyringEvent)(snap,t,r)}}const Vo=new Map([[\\\"metamask\\\",[e.KeyringRpcMethod.ListAccounts,e.KeyringRpcMethod.GetAccount,e.KeyringRpcMethod.FilterAccountChains,e.KeyringRpcMethod.DeleteAccount,e.KeyringRpcMethod.ListRequests,e.KeyringRpcMethod.GetRequest,e.KeyringRpcMethod.SubmitRequest,e.KeyringRpcMethod.ApproveRequest,e.KeyringRpcMethod.RejectRequest]],[\\\"http://localhost:8000\\\",[e.KeyringRpcMethod.ListAccounts,e.KeyringRpcMethod.GetAccount,e.KeyringRpcMethod.CreateAccount,e.KeyringRpcMethod.FilterAccountChains,e.KeyringRpcMethod.UpdateAccount,e.KeyringRpcMethod.DeleteAccount,e.KeyringRpcMethod.ExportAccount,e.KeyringRpcMethod.ListRequests,e.KeyringRpcMethod.GetRequest,e.KeyringRpcMethod.SubmitRequest,e.KeyringRpcMethod.ApproveRequest,e.KeyringRpcMethod.RejectRequest]],[\\\"https://snaps.metamask.io\\\",[e.KeyringRpcMethod.ListAccounts,e.KeyringRpcMethod.GetAccount,e.KeyringRpcMethod.CreateAccount,e.KeyringRpcMethod.FilterAccountChains,e.KeyringRpcMethod.UpdateAccount,e.KeyringRpcMethod.DeleteAccount,e.KeyringRpcMethod.ExportAccount,e.KeyringRpcMethod.ListRequests,e.KeyringRpcMethod.GetRequest,e.KeyringRpcMethod.ApproveRequest,e.KeyringRpcMethod.RejectRequest]]]);function Wo(t,e,r){if(\\\"string\\\"==typeof t)throw new Error(`An HTML element (\\\"${String(t)}\\\") was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.`);if(!t)throw new Error(\\\"A JSX fragment was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.\\\");return t({...e,key:r})}function Xo(t,e,r){return Wo(t,e,r)}function Qo(t){return Object.fromEntries(Object.entries(t).filter((([,t])=>void 0!==t)))}function Yo(t){return e=>{const{key:r=null,...n}=e;return{type:t,props:Qo(n),key:r}}}var Zo=Yo(\\\"Button\\\"),ts=(Yo(\\\"Checkbox\\\"),Yo(\\\"Dropdown\\\"),Yo(\\\"Option\\\"),Yo(\\\"Radio\\\"),Yo(\\\"RadioGroup\\\"),Yo(\\\"Field\\\")),es=(Yo(\\\"FileInput\\\"),Yo(\\\"Form\\\")),rs=Yo(\\\"Input\\\"),ns=(Yo(\\\"Bold\\\"),Yo(\\\"Italic\\\"),Yo(\\\"Address\\\"),Yo(\\\"Box\\\")),is=(Yo(\\\"Card\\\"),Yo(\\\"Copyable\\\"),Yo(\\\"Divider\\\"),Yo(\\\"Value\\\"),Yo(\\\"Heading\\\")),os=(Yo(\\\"Image\\\"),Yo(\\\"Link\\\"),Yo(\\\"Row\\\")),ss=(Yo(\\\"Spinner\\\"),Yo(\\\"Text\\\"));Yo(\\\"Tooltip\\\"),Yo(\\\"Footer\\\"),Yo(\\\"Container\\\");function as(t){return b(JSON.stringify(t),x(t).validator)}function us(t){return new p({type:\\\"union\\\",schema:t,*entries(e,r){if(!a(e)||!o(e,\\\"type\\\"))return;const{type:n}=e,i=t.find((({schema:t})=>y(n,t.type)));if(i)for(const t of i.entries(e,r))yield t},validator(e,r){const n=t.map((({schema:t})=>t.type.type));if(!a(e)||!o(e,\\\"type\\\")||\\\"string\\\"!=typeof e.type)return`Expected type to be one of: ${n.join(\\\", \\\")}, but received: undefined`;const{type:i}=e,s=t.find((({schema:t})=>y(i,t.type)));return s?s.validator(e,r):`Expected type to be one of: ${n.join(\\\", \\\")}, but received: \\\"${i}\\\"`}})}function cs(t){return function([t,...e]){const r=T([t,...e]);return new p({...r,schema:[t,...e]})}(t)}var ls=cs([P(),M()]),fs=hs([P()]);k({type:P(),props:C(P(),J),key:N(ls)});function hs(t){return function(t){const e=cs([t,S(A((()=>e)))]);return e}(N(cs([...t,R()])))}function ds(t,e={}){return k({type:as(t),props:k(e),key:N(ls)})}var ps=ds(\\\"Button\\\",{children:fs,name:O(P()),type:O(cs([as(\\\"button\\\"),as(\\\"submit\\\")])),variant:O(cs([as(\\\"primary\\\"),as(\\\"destructive\\\")])),disabled:O(R())}),gs=ds(\\\"Checkbox\\\",{name:P(),checked:O(R()),label:O(P()),variant:O(cs([as(\\\"default\\\"),as(\\\"toggle\\\")]))}),ms=ds(\\\"Input\\\",{name:P(),type:O(cs([as(\\\"text\\\"),as(\\\"password\\\"),as(\\\"number\\\")])),value:O(P()),placeholder:O(P())}),ys=ds(\\\"Option\\\",{value:P(),children:P()}),vs=ds(\\\"Dropdown\\\",{name:P(),value:O(P()),children:hs([ys])}),ws=ds(\\\"Radio\\\",{value:P(),children:P()}),bs=ds(\\\"RadioGroup\\\",{name:P(),value:O(P()),children:hs([ws])}),As=ds(\\\"FileInput\\\",{name:P(),accept:cs([O(S(P()))]),compact:O(R())}),Es=[ms,ps],Ss=[ms,vs,bs,As,gs],Rs=(cs([...Ss,...Es]),cs([B(Es),...Ss])),Is=ds(\\\"Field\\\",{label:O(P()),error:O(P()),children:Rs}),xs=ds(\\\"Form\\\",{children:hs([Is,A((()=>Ks))]),name:P()}),_s=ds(\\\"Bold\\\",{children:hs([P(),A((()=>Ns))])}),Ns=ds(\\\"Italic\\\",{children:hs([P(),A((()=>_s))])}),Ms=cs([_s,Ns]),ks=ds(\\\"Address\\\",{address:Yt}),Os=ds(\\\"Box\\\",{children:hs([A((()=>Ks))]),direction:O(cs([as(\\\"horizontal\\\"),as(\\\"vertical\\\")])),alignment:O(cs([as(\\\"start\\\"),as(\\\"center\\\"),as(\\\"end\\\"),as(\\\"space-between\\\"),as(\\\"space-around\\\")]))}),Cs=ds(\\\"Footer\\\",{children:cs([B([ps,ps]),ps])}),Ps=ds(\\\"Container\\\",{children:cs([B([Os,Cs]),Os])}),Bs=ds(\\\"Copyable\\\",{value:P(),sensitive:O(R())}),Ts=ds(\\\"Divider\\\"),Ls=ds(\\\"Value\\\",{value:P(),extra:P()}),Us=ds(\\\"Card\\\",{image:O(P()),title:P(),description:O(P()),value:P(),extra:O(P())}),js=ds(\\\"Heading\\\",{children:fs}),Fs=ds(\\\"Image\\\",{src:et(P(),\\\"SVG\\\",(t=>!!t.includes(\\\"<svg\\\")||\\\"Value is not a valid SVG.\\\")),alt:O(P())}),Ds=ds(\\\"Link\\\",{href:P(),children:hs([Ms,P()])}),$s=ds(\\\"Text\\\",{children:hs([P(),_s,Ns,Ds]),alignment:O(cs([as(\\\"start\\\"),as(\\\"center\\\"),as(\\\"end\\\")]))}),qs=cs([$s,_s,Ns,Ds,Fs,R()]),Gs=cs([$s,_s,Ns,Ds,P()]),Hs=ds(\\\"Tooltip\\\",{children:N(qs),content:Gs}),zs=ds(\\\"Row\\\",{label:P(),children:cs([ks,Fs,$s,Ls]),variant:O(cs([as(\\\"default\\\"),as(\\\"warning\\\"),as(\\\"critical\\\")])),tooltip:O(P())}),Js=ds(\\\"Spinner\\\"),Ks=us([ks,_s,Os,ps,Bs,Ts,vs,bs,As,xs,js,ms,Fs,Ns,Ds,zs,Js,$s,Hs,gs,Us]);cs([Ks,Ps]),us([ps,ms,As,Is,xs,_s,Ns,ks,Os,Bs,Ts,js,Fs,Ds,zs,Js,$s,vs,ys,bs,ws,Ls,Hs,gs,Cs,Ps,Us]);var Vs;!function(t){t.AddressForm=\\\"address-form\\\",t.AddressInput=\\\"address-input\\\",t.SubmitButton=\\\"submit\\\"}(Vs||(Vs={}));const Ws=({onMainnet:t})=>Xo(ns,{children:[Wo(is,{children:\\\"Watch any Ethereum account 👀\\\"}),Wo(ss,{children:t?\\\"Enter any public address or ENS name to add an account to watch within MetaMask.\\\":\\\"Enter any public address to add an account to watch within MetaMask.\\\"}),Wo(ss,{children:\\\"The watched accounts will be listed alongside the rest of your accounts in a safe, watch-only mode. Remember, you can look but you can’t sign or transact.\\\"}),Xo(es,{name:Vs.AddressForm,children:[Wo(ts,{label:\\\"Ethereum address\\\",children:Wo(rs,{name:Vs.AddressInput,type:\\\"text\\\",placeholder:t?\\\"Enter a public address or ENS name\\\":\\\"Enter a public address\\\"})}),Wo(ns,{direction:\\\"horizontal\\\",alignment:\\\"space-around\\\",children:Wo(Zo,{name:Vs.SubmitButton,type:Ce.Submit,variant:\\\"primary\\\",children:\\\"Watch account\\\"})})]})]}),Xs=({message:t})=>Wo(os,{label:\\\"Error\\\",variant:Fe.Critical,children:Wo(ss,{children:t})});function Qs(t){return Wo(Xs,{message:t})}let Ys=!1,Zs=!1;const ta={debug:1,default:2,info:2,warning:3,error:4,off:5};let ea=ta.default,ra=null;const na=function(){try{const t=[];if([\\\"NFD\\\",\\\"NFC\\\",\\\"NFKD\\\",\\\"NFKC\\\"].forEach((e=>{try{if(\\\"test\\\"!==\\\"test\\\".normalize(e))throw new Error(\\\"bad normalize\\\")}catch(r){t.push(e)}})),t.length)throw new Error(\\\"missing \\\"+t.join(\\\", \\\"));if(String.fromCharCode(233).normalize(\\\"NFD\\\")!==String.fromCharCode(101,769))throw new Error(\\\"broken implementation\\\")}catch(t){return t.message}return null}();var ia,oa;!function(t){t.DEBUG=\\\"DEBUG\\\",t.INFO=\\\"INFO\\\",t.WARNING=\\\"WARNING\\\",t.ERROR=\\\"ERROR\\\",t.OFF=\\\"OFF\\\"}(ia||(ia={})),function(t){t.UNKNOWN_ERROR=\\\"UNKNOWN_ERROR\\\",t.NOT_IMPLEMENTED=\\\"NOT_IMPLEMENTED\\\",t.UNSUPPORTED_OPERATION=\\\"UNSUPPORTED_OPERATION\\\",t.NETWORK_ERROR=\\\"NETWORK_ERROR\\\",t.SERVER_ERROR=\\\"SERVER_ERROR\\\",t.TIMEOUT=\\\"TIMEOUT\\\",t.BUFFER_OVERRUN=\\\"BUFFER_OVERRUN\\\",t.NUMERIC_FAULT=\\\"NUMERIC_FAULT\\\",t.MISSING_NEW=\\\"MISSING_NEW\\\",t.INVALID_ARGUMENT=\\\"INVALID_ARGUMENT\\\",t.MISSING_ARGUMENT=\\\"MISSING_ARGUMENT\\\",t.UNEXPECTED_ARGUMENT=\\\"UNEXPECTED_ARGUMENT\\\",t.CALL_EXCEPTION=\\\"CALL_EXCEPTION\\\",t.INSUFFICIENT_FUNDS=\\\"INSUFFICIENT_FUNDS\\\",t.NONCE_EXPIRED=\\\"NONCE_EXPIRED\\\",t.REPLACEMENT_UNDERPRICED=\\\"REPLACEMENT_UNDERPRICED\\\",t.UNPREDICTABLE_GAS_LIMIT=\\\"UNPREDICTABLE_GAS_LIMIT\\\",t.TRANSACTION_REPLACED=\\\"TRANSACTION_REPLACED\\\",t.ACTION_REJECTED=\\\"ACTION_REJECTED\\\"}(oa||(oa={}));const sa=\\\"0123456789abcdef\\\";class aa{constructor(t){Object.defineProperty(this,\\\"version\\\",{enumerable:!0,value:t,writable:!1})}_log(t,e){const r=t.toLowerCase();null==ta[r]&&this.throwArgumentError(\\\"invalid log level name\\\",\\\"logLevel\\\",t),ea>ta[r]||console.log.apply(console,e)}debug(...t){this._log(aa.levels.DEBUG,t)}info(...t){this._log(aa.levels.INFO,t)}warn(...t){this._log(aa.levels.WARNING,t)}makeError(t,e,r){if(Zs)return this.makeError(\\\"censored error\\\",e,{});e||(e=aa.errors.UNKNOWN_ERROR),r||(r={});const n=[];Object.keys(r).forEach((t=>{const e=r[t];try{if(e instanceof Uint8Array){let r=\\\"\\\";for(let t=0;t<e.length;t++)r+=sa[e[t]>>4],r+=sa[15&e[t]];n.push(t+\\\"=Uint8Array(0x\\\"+r+\\\")\\\")}else n.push(t+\\\"=\\\"+JSON.stringify(e))}catch(e){n.push(t+\\\"=\\\"+JSON.stringify(r[t].toString()))}})),n.push(`code=${e}`),n.push(`version=${this.version}`);const i=t;let o=\\\"\\\";switch(e){case oa.NUMERIC_FAULT:{o=\\\"NUMERIC_FAULT\\\";const e=t;switch(e){case\\\"overflow\\\":case\\\"underflow\\\":case\\\"division-by-zero\\\":o+=\\\"-\\\"+e;break;case\\\"negative-power\\\":case\\\"negative-width\\\":o+=\\\"-unsupported\\\";break;case\\\"unbound-bitwise-result\\\":o+=\\\"-unbound-result\\\"}break}case oa.CALL_EXCEPTION:case oa.INSUFFICIENT_FUNDS:case oa.MISSING_NEW:case oa.NONCE_EXPIRED:case oa.REPLACEMENT_UNDERPRICED:case oa.TRANSACTION_REPLACED:case oa.UNPREDICTABLE_GAS_LIMIT:o=e}o&&(t+=\\\" [ See: https://links.ethers.org/v5-errors-\\\"+o+\\\" ]\\\"),n.length&&(t+=\\\" (\\\"+n.join(\\\", \\\")+\\\")\\\");const s=new Error(t);return s.reason=i,s.code=e,Object.keys(r).forEach((function(t){s[t]=r[t]})),s}throwError(t,e,r){throw this.makeError(t,e,r)}throwArgumentError(t,e,r){return this.throwError(t,aa.errors.INVALID_ARGUMENT,{argument:e,value:r})}assert(t,e,r,n){t||this.throwError(e,r,n)}assertArgument(t,e,r,n){t||this.throwArgumentError(e,r,n)}checkNormalize(t){null==t&&(t=\\\"platform missing String.prototype.normalize\\\"),na&&this.throwError(\\\"platform missing String.prototype.normalize\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"String.prototype.normalize\\\",form:na})}checkSafeUint53(t,e){\\\"number\\\"==typeof t&&(null==e&&(e=\\\"value not safe\\\"),(t<0||t>=9007199254740991)&&this.throwError(e,aa.errors.NUMERIC_FAULT,{operation:\\\"checkSafeInteger\\\",fault:\\\"out-of-safe-range\\\",value:t}),t%1&&this.throwError(e,aa.errors.NUMERIC_FAULT,{operation:\\\"checkSafeInteger\\\",fault:\\\"non-integer\\\",value:t}))}checkArgumentCount(t,e,r){r=r?\\\": \\\"+r:\\\"\\\",t<e&&this.throwError(\\\"missing argument\\\"+r,aa.errors.MISSING_ARGUMENT,{count:t,expectedCount:e}),t>e&&this.throwError(\\\"too many arguments\\\"+r,aa.errors.UNEXPECTED_ARGUMENT,{count:t,expectedCount:e})}checkNew(t,e){t!==Object&&null!=t||this.throwError(\\\"missing new\\\",aa.errors.MISSING_NEW,{name:e.name})}checkAbstract(t,e){t===e?this.throwError(\\\"cannot instantiate abstract class \\\"+JSON.stringify(e.name)+\\\" directly; use a sub-class\\\",aa.errors.UNSUPPORTED_OPERATION,{name:t.name,operation:\\\"new\\\"}):t!==Object&&null!=t||this.throwError(\\\"missing new\\\",aa.errors.MISSING_NEW,{name:e.name})}static globalLogger(){return ra||(ra=new aa(\\\"logger/5.7.0\\\")),ra}static setCensorship(t,e){if(!t&&e&&this.globalLogger().throwError(\\\"cannot permanently disable censorship\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"setCensorship\\\"}),Ys){if(!t)return;this.globalLogger().throwError(\\\"error censorship permanent\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"setCensorship\\\"})}Zs=!!t,Ys=!!e}static setLogLevel(t){const e=ta[t.toLowerCase()];null!=e?ea=e:aa.globalLogger().warn(\\\"invalid log level - \\\"+t)}static from(t){return new aa(t)}}aa.errors=oa,aa.levels=ia;var ua=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const ca=new aa(\\\"properties/5.7.0\\\");function la(t,e,r){Object.defineProperty(t,e,{enumerable:!0,value:r,writable:!1})}function fa(t,e){for(let r=0;r<32;r++){if(t[e])return t[e];if(!t.prototype||\\\"object\\\"!=typeof t.prototype)break;t=Object.getPrototypeOf(t.prototype).constructor}return null}function ha(t){return ua(this,void 0,void 0,(function*(){const e=Object.keys(t).map((e=>{const r=t[e];return Promise.resolve(r).then((t=>({key:e,value:t})))}));return(yield Promise.all(e)).reduce(((t,e)=>(t[e.key]=e.value,t)),{})}))}function da(t){const e={};for(const r in t)e[r]=t[r];return e}const pa={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function ga(t){if(null==t||pa[typeof t])return!0;if(Array.isArray(t)||\\\"object\\\"==typeof t){if(!Object.isFrozen(t))return!1;const e=Object.keys(t);for(let r=0;r<e.length;r++){let n=null;try{n=t[e[r]]}catch(t){continue}if(!ga(n))return!1}return!0}return ca.throwArgumentError(\\\"Cannot deepCopy \\\"+typeof t,\\\"object\\\",t)}function ma(t){if(ga(t))return t;if(Array.isArray(t))return Object.freeze(t.map((t=>ya(t))));if(\\\"object\\\"==typeof t){const e={};for(const r in t){const n=t[r];void 0!==n&&la(e,r,ya(n))}return e}return ca.throwArgumentError(\\\"Cannot deepCopy \\\"+typeof t,\\\"object\\\",t)}function ya(t){return ma(t)}class va{constructor(t){for(const e in t)this[e]=ya(t[e])}}const wa=\\\"providers/5.7.2\\\";var ba=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Aa=new aa(\\\"abstract-signer/5.7.0\\\"),Ea=[\\\"accessList\\\",\\\"ccipReadEnabled\\\",\\\"chainId\\\",\\\"customData\\\",\\\"data\\\",\\\"from\\\",\\\"gasLimit\\\",\\\"gasPrice\\\",\\\"maxFeePerGas\\\",\\\"maxPriorityFeePerGas\\\",\\\"nonce\\\",\\\"to\\\",\\\"type\\\",\\\"value\\\"],Sa=[aa.errors.INSUFFICIENT_FUNDS,aa.errors.NONCE_EXPIRED,aa.errors.REPLACEMENT_UNDERPRICED];class Ra{constructor(){Aa.checkAbstract(new.target,Ra),la(this,\\\"_isSigner\\\",!0)}getBalance(t){return ba(this,void 0,void 0,(function*(){return this._checkProvider(\\\"getBalance\\\"),yield this.provider.getBalance(this.getAddress(),t)}))}getTransactionCount(t){return ba(this,void 0,void 0,(function*(){return this._checkProvider(\\\"getTransactionCount\\\"),yield this.provider.getTransactionCount(this.getAddress(),t)}))}estimateGas(t){return ba(this,void 0,void 0,(function*(){this._checkProvider(\\\"estimateGas\\\");const e=yield ha(this.checkTransaction(t));return yield this.provider.estimateGas(e)}))}call(t,e){return ba(this,void 0,void 0,(function*(){this._checkProvider(\\\"call\\\");const r=yield ha(this.checkTransaction(t));return yield this.provider.call(r,e)}))}sendTransaction(t){return ba(this,void 0,void 0,(function*(){this._checkProvider(\\\"sendTransaction\\\");const e=yield this.populateTransaction(t),r=yield this.signTransaction(e);return yield this.provider.sendTransaction(r)}))}getChainId(){return ba(this,void 0,void 0,(function*(){this._checkProvider(\\\"getChainId\\\");return(yield this.provider.getNetwork()).chainId}))}getGasPrice(){return ba(this,void 0,void 0,(function*(){return this._checkProvider(\\\"getGasPrice\\\"),yield this.provider.getGasPrice()}))}getFeeData(){return ba(this,void 0,void 0,(function*(){return this._checkProvider(\\\"getFeeData\\\"),yield this.provider.getFeeData()}))}resolveName(t){return ba(this,void 0,void 0,(function*(){return this._checkProvider(\\\"resolveName\\\"),yield this.provider.resolveName(t)}))}checkTransaction(t){for(const e in t)-1===Ea.indexOf(e)&&Aa.throwArgumentError(\\\"invalid transaction key: \\\"+e,\\\"transaction\\\",t);const e=da(t);return null==e.from?e.from=this.getAddress():e.from=Promise.all([Promise.resolve(e.from),this.getAddress()]).then((e=>(e[0].toLowerCase()!==e[1].toLowerCase()&&Aa.throwArgumentError(\\\"from address mismatch\\\",\\\"transaction\\\",t),e[0]))),e}populateTransaction(t){return ba(this,void 0,void 0,(function*(){const e=yield ha(this.checkTransaction(t));null!=e.to&&(e.to=Promise.resolve(e.to).then((t=>ba(this,void 0,void 0,(function*(){if(null==t)return null;const e=yield this.resolveName(t);return null==e&&Aa.throwArgumentError(\\\"provided ENS name resolves to null\\\",\\\"tx.to\\\",t),e})))),e.to.catch((t=>{})));const r=null!=e.maxFeePerGas||null!=e.maxPriorityFeePerGas;if(null==e.gasPrice||2!==e.type&&!r?0!==e.type&&1!==e.type||!r||Aa.throwArgumentError(\\\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\\\",\\\"transaction\\\",t):Aa.throwArgumentError(\\\"eip-1559 transaction do not support gasPrice\\\",\\\"transaction\\\",t),2!==e.type&&null!=e.type||null==e.maxFeePerGas||null==e.maxPriorityFeePerGas)if(0===e.type||1===e.type)null==e.gasPrice&&(e.gasPrice=this.getGasPrice());else{const t=yield this.getFeeData();if(null==e.type)if(null!=t.maxFeePerGas&&null!=t.maxPriorityFeePerGas)if(e.type=2,null!=e.gasPrice){const t=e.gasPrice;delete e.gasPrice,e.maxFeePerGas=t,e.maxPriorityFeePerGas=t}else null==e.maxFeePerGas&&(e.maxFeePerGas=t.maxFeePerGas),null==e.maxPriorityFeePerGas&&(e.maxPriorityFeePerGas=t.maxPriorityFeePerGas);else null!=t.gasPrice?(r&&Aa.throwError(\\\"network does not support EIP-1559\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"populateTransaction\\\"}),null==e.gasPrice&&(e.gasPrice=t.gasPrice),e.type=0):Aa.throwError(\\\"failed to get consistent fee data\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"signer.getFeeData\\\"});else 2===e.type&&(null==e.maxFeePerGas&&(e.maxFeePerGas=t.maxFeePerGas),null==e.maxPriorityFeePerGas&&(e.maxPriorityFeePerGas=t.maxPriorityFeePerGas))}else e.type=2;return null==e.nonce&&(e.nonce=this.getTransactionCount(\\\"pending\\\")),null==e.gasLimit&&(e.gasLimit=this.estimateGas(e).catch((t=>{if(Sa.indexOf(t.code)>=0)throw t;return Aa.throwError(\\\"cannot estimate gas; transaction may fail or may require manual gas limit\\\",aa.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,tx:e})}))),null==e.chainId?e.chainId=this.getChainId():e.chainId=Promise.all([Promise.resolve(e.chainId),this.getChainId()]).then((e=>(0!==e[1]&&e[0]!==e[1]&&Aa.throwArgumentError(\\\"chainId address mismatch\\\",\\\"transaction\\\",t),e[0]))),yield ha(e)}))}_checkProvider(t){this.provider||Aa.throwError(\\\"missing provider\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:t||\\\"_checkProvider\\\"})}static isSigner(t){return!(!t||!t._isSigner)}}var Ia=r(9404),xa=r.n(Ia);const _a=new aa(\\\"bytes/5.7.0\\\");function Na(t){return!!t.toHexString}function Ma(t){return t.slice||(t.slice=function(){const e=Array.prototype.slice.call(arguments);return Ma(new Uint8Array(Array.prototype.slice.apply(t,e)))}),t}function ka(t){return La(t)&&!(t.length%2)||Ca(t)}function Oa(t){return\\\"number\\\"==typeof t&&t==t&&t%1==0}function Ca(t){if(null==t)return!1;if(t.constructor===Uint8Array)return!0;if(\\\"string\\\"==typeof t)return!1;if(!Oa(t.length)||t.length<0)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(!Oa(r)||r<0||r>=256)return!1}return!0}function Pa(t,e){if(e||(e={}),\\\"number\\\"==typeof t){_a.checkSafeUint53(t,\\\"invalid arrayify value\\\");const e=[];for(;t;)e.unshift(255&t),t=parseInt(String(t/256));return 0===e.length&&e.push(0),Ma(new Uint8Array(e))}if(e.allowMissingPrefix&&\\\"string\\\"==typeof t&&\\\"0x\\\"!==t.substring(0,2)&&(t=\\\"0x\\\"+t),Na(t)&&(t=t.toHexString()),La(t)){let r=t.substring(2);r.length%2&&(\\\"left\\\"===e.hexPad?r=\\\"0\\\"+r:\\\"right\\\"===e.hexPad?r+=\\\"0\\\":_a.throwArgumentError(\\\"hex data is odd-length\\\",\\\"value\\\",t));const n=[];for(let t=0;t<r.length;t+=2)n.push(parseInt(r.substring(t,t+2),16));return Ma(new Uint8Array(n))}return Ca(t)?Ma(new Uint8Array(t)):_a.throwArgumentError(\\\"invalid arrayify value\\\",\\\"value\\\",t)}function Ba(t){const e=t.map((t=>Pa(t))),r=e.reduce(((t,e)=>t+e.length),0),n=new Uint8Array(r);return e.reduce(((t,e)=>(n.set(e,t),t+e.length)),0),Ma(n)}function Ta(t){let e=Pa(t);if(0===e.length)return e;let r=0;for(;r<e.length&&0===e[r];)r++;return r&&(e=e.slice(r)),e}function La(t,e){return!(\\\"string\\\"!=typeof t||!t.match(/^0x[0-9A-Fa-f]*$/))&&(!e||t.length===2+2*e)}const Ua=\\\"0123456789abcdef\\\";function ja(t,e){if(e||(e={}),\\\"number\\\"==typeof t){_a.checkSafeUint53(t,\\\"invalid hexlify value\\\");let e=\\\"\\\";for(;t;)e=Ua[15&t]+e,t=Math.floor(t/16);return e.length?(e.length%2&&(e=\\\"0\\\"+e),\\\"0x\\\"+e):\\\"0x00\\\"}if(\\\"bigint\\\"==typeof t)return(t=t.toString(16)).length%2?\\\"0x0\\\"+t:\\\"0x\\\"+t;if(e.allowMissingPrefix&&\\\"string\\\"==typeof t&&\\\"0x\\\"!==t.substring(0,2)&&(t=\\\"0x\\\"+t),Na(t))return t.toHexString();if(La(t))return t.length%2&&(\\\"left\\\"===e.hexPad?t=\\\"0x0\\\"+t.substring(2):\\\"right\\\"===e.hexPad?t+=\\\"0\\\":_a.throwArgumentError(\\\"hex data is odd-length\\\",\\\"value\\\",t)),t.toLowerCase();if(Ca(t)){let e=\\\"0x\\\";for(let r=0;r<t.length;r++){let n=t[r];e+=Ua[(240&n)>>4]+Ua[15&n]}return e}return _a.throwArgumentError(\\\"invalid hexlify value\\\",\\\"value\\\",t)}function Fa(t){if(\\\"string\\\"!=typeof t)t=ja(t);else if(!La(t)||t.length%2)return null;return(t.length-2)/2}function Da(t,e,r){return\\\"string\\\"!=typeof t?t=ja(t):(!La(t)||t.length%2)&&_a.throwArgumentError(\\\"invalid hexData\\\",\\\"value\\\",t),e=2+2*e,null!=r?\\\"0x\\\"+t.substring(e,2+2*r):\\\"0x\\\"+t.substring(e)}function $a(t){let e=\\\"0x\\\";return t.forEach((t=>{e+=ja(t).substring(2)})),e}function qa(t){const e=function(t){\\\"string\\\"!=typeof t&&(t=ja(t));La(t)||_a.throwArgumentError(\\\"invalid hex string\\\",\\\"value\\\",t);t=t.substring(2);let e=0;for(;e<t.length&&\\\"0\\\"===t[e];)e++;return\\\"0x\\\"+t.substring(e)}(ja(t,{hexPad:\\\"left\\\"}));return\\\"0x\\\"===e?\\\"0x0\\\":e}function Ga(t,e){for(\\\"string\\\"!=typeof t?t=ja(t):La(t)||_a.throwArgumentError(\\\"invalid hex string\\\",\\\"value\\\",t),t.length>2*e+2&&_a.throwArgumentError(\\\"value out of range\\\",\\\"value\\\",arguments[1]);t.length<2*e+2;)t=\\\"0x0\\\"+t.substring(2);return t}function Ha(t){const e={r:\\\"0x\\\",s:\\\"0x\\\",_vs:\\\"0x\\\",recoveryParam:0,v:0,yParityAndS:\\\"0x\\\",compact:\\\"0x\\\"};if(ka(t)){let r=Pa(t);64===r.length?(e.v=27+(r[32]>>7),r[32]&=127,e.r=ja(r.slice(0,32)),e.s=ja(r.slice(32,64))):65===r.length?(e.r=ja(r.slice(0,32)),e.s=ja(r.slice(32,64)),e.v=r[64]):_a.throwArgumentError(\\\"invalid signature string\\\",\\\"signature\\\",t),e.v<27&&(0===e.v||1===e.v?e.v+=27:_a.throwArgumentError(\\\"signature invalid v byte\\\",\\\"signature\\\",t)),e.recoveryParam=1-e.v%2,e.recoveryParam&&(r[32]|=128),e._vs=ja(r.slice(32,64))}else{if(e.r=t.r,e.s=t.s,e.v=t.v,e.recoveryParam=t.recoveryParam,e._vs=t._vs,null!=e._vs){const r=function(t,e){(t=Pa(t)).length>e&&_a.throwArgumentError(\\\"value out of range\\\",\\\"value\\\",arguments[0]);const r=new Uint8Array(e);return r.set(t,e-t.length),Ma(r)}(Pa(e._vs),32);e._vs=ja(r);const n=r[0]>=128?1:0;null==e.recoveryParam?e.recoveryParam=n:e.recoveryParam!==n&&_a.throwArgumentError(\\\"signature recoveryParam mismatch _vs\\\",\\\"signature\\\",t),r[0]&=127;const i=ja(r);null==e.s?e.s=i:e.s!==i&&_a.throwArgumentError(\\\"signature v mismatch _vs\\\",\\\"signature\\\",t)}if(null==e.recoveryParam)null==e.v?_a.throwArgumentError(\\\"signature missing v and recoveryParam\\\",\\\"signature\\\",t):0===e.v||1===e.v?e.recoveryParam=e.v:e.recoveryParam=1-e.v%2;else if(null==e.v)e.v=27+e.recoveryParam;else{const r=0===e.v||1===e.v?e.v:1-e.v%2;e.recoveryParam!==r&&_a.throwArgumentError(\\\"signature recoveryParam mismatch v\\\",\\\"signature\\\",t)}null!=e.r&&La(e.r)?e.r=Ga(e.r,32):_a.throwArgumentError(\\\"signature missing or invalid r\\\",\\\"signature\\\",t),null!=e.s&&La(e.s)?e.s=Ga(e.s,32):_a.throwArgumentError(\\\"signature missing or invalid s\\\",\\\"signature\\\",t);const r=Pa(e.s);r[0]>=128&&_a.throwArgumentError(\\\"signature s out of range\\\",\\\"signature\\\",t),e.recoveryParam&&(r[0]|=128);const n=ja(r);e._vs&&(La(e._vs)||_a.throwArgumentError(\\\"signature invalid _vs\\\",\\\"signature\\\",t),e._vs=Ga(e._vs,32)),null==e._vs?e._vs=n:e._vs!==n&&_a.throwArgumentError(\\\"signature _vs mismatch v and s\\\",\\\"signature\\\",t)}return e.yParityAndS=e._vs,e.compact=e.r+e.yParityAndS.substring(2),e}var za=xa().BN;const Ja=new aa(\\\"bignumber/5.7.0\\\"),Ka={},Va=9007199254740991;let Wa=!1;class Xa{constructor(t,e){t!==Ka&&Ja.throwError(\\\"cannot call constructor directly; use BigNumber.from\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"new (BigNumber)\\\"}),this._hex=e,this._isBigNumber=!0,Object.freeze(this)}fromTwos(t){return Ya(Za(this).fromTwos(t))}toTwos(t){return Ya(Za(this).toTwos(t))}abs(){return\\\"-\\\"===this._hex[0]?Xa.from(this._hex.substring(1)):this}add(t){return Ya(Za(this).add(Za(t)))}sub(t){return Ya(Za(this).sub(Za(t)))}div(t){return Xa.from(t).isZero()&&tu(\\\"division-by-zero\\\",\\\"div\\\"),Ya(Za(this).div(Za(t)))}mul(t){return Ya(Za(this).mul(Za(t)))}mod(t){const e=Za(t);return e.isNeg()&&tu(\\\"division-by-zero\\\",\\\"mod\\\"),Ya(Za(this).umod(e))}pow(t){const e=Za(t);return e.isNeg()&&tu(\\\"negative-power\\\",\\\"pow\\\"),Ya(Za(this).pow(e))}and(t){const e=Za(t);return(this.isNegative()||e.isNeg())&&tu(\\\"unbound-bitwise-result\\\",\\\"and\\\"),Ya(Za(this).and(e))}or(t){const e=Za(t);return(this.isNegative()||e.isNeg())&&tu(\\\"unbound-bitwise-result\\\",\\\"or\\\"),Ya(Za(this).or(e))}xor(t){const e=Za(t);return(this.isNegative()||e.isNeg())&&tu(\\\"unbound-bitwise-result\\\",\\\"xor\\\"),Ya(Za(this).xor(e))}mask(t){return(this.isNegative()||t<0)&&tu(\\\"negative-width\\\",\\\"mask\\\"),Ya(Za(this).maskn(t))}shl(t){return(this.isNegative()||t<0)&&tu(\\\"negative-width\\\",\\\"shl\\\"),Ya(Za(this).shln(t))}shr(t){return(this.isNegative()||t<0)&&tu(\\\"negative-width\\\",\\\"shr\\\"),Ya(Za(this).shrn(t))}eq(t){return Za(this).eq(Za(t))}lt(t){return Za(this).lt(Za(t))}lte(t){return Za(this).lte(Za(t))}gt(t){return Za(this).gt(Za(t))}gte(t){return Za(this).gte(Za(t))}isNegative(){return\\\"-\\\"===this._hex[0]}isZero(){return Za(this).isZero()}toNumber(){try{return Za(this).toNumber()}catch(t){tu(\\\"overflow\\\",\\\"toNumber\\\",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(t){}return Ja.throwError(\\\"this platform does not support BigInt\\\",aa.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(10===arguments[0]?Wa||(Wa=!0,Ja.warn(\\\"BigNumber.toString does not accept any parameters; base-10 is assumed\\\")):16===arguments[0]?Ja.throwError(\\\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\\\",aa.errors.UNEXPECTED_ARGUMENT,{}):Ja.throwError(\\\"BigNumber.toString does not accept parameters\\\",aa.errors.UNEXPECTED_ARGUMENT,{})),Za(this).toString(10)}toHexString(){return this._hex}toJSON(t){return{type:\\\"BigNumber\\\",hex:this.toHexString()}}static from(t){if(t instanceof Xa)return t;if(\\\"string\\\"==typeof t)return t.match(/^-?0x[0-9a-f]+$/i)?new Xa(Ka,Qa(t)):t.match(/^-?[0-9]+$/)?new Xa(Ka,Qa(new za(t))):Ja.throwArgumentError(\\\"invalid BigNumber string\\\",\\\"value\\\",t);if(\\\"number\\\"==typeof t)return t%1&&tu(\\\"underflow\\\",\\\"BigNumber.from\\\",t),(t>=Va||t<=-Va)&&tu(\\\"overflow\\\",\\\"BigNumber.from\\\",t),Xa.from(String(t));const e=t;if(\\\"bigint\\\"==typeof e)return Xa.from(e.toString());if(Ca(e))return Xa.from(ja(e));if(e)if(e.toHexString){const t=e.toHexString();if(\\\"string\\\"==typeof t)return Xa.from(t)}else{let t=e._hex;if(null==t&&\\\"BigNumber\\\"===e.type&&(t=e.hex),\\\"string\\\"==typeof t&&(La(t)||\\\"-\\\"===t[0]&&La(t.substring(1))))return Xa.from(t)}return Ja.throwArgumentError(\\\"invalid BigNumber value\\\",\\\"value\\\",t)}static isBigNumber(t){return!(!t||!t._isBigNumber)}}function Qa(t){if(\\\"string\\\"!=typeof t)return Qa(t.toString(16));if(\\\"-\\\"===t[0])return\\\"-\\\"===(t=t.substring(1))[0]&&Ja.throwArgumentError(\\\"invalid hex\\\",\\\"value\\\",t),\\\"0x00\\\"===(t=Qa(t))?t:\\\"-\\\"+t;if(\\\"0x\\\"!==t.substring(0,2)&&(t=\\\"0x\\\"+t),\\\"0x\\\"===t)return\\\"0x00\\\";for(t.length%2&&(t=\\\"0x0\\\"+t.substring(2));t.length>4&&\\\"0x00\\\"===t.substring(0,4);)t=\\\"0x\\\"+t.substring(4);return t}function Ya(t){return Xa.from(Qa(t))}function Za(t){const e=Xa.from(t).toHexString();return\\\"-\\\"===e[0]?new za(\\\"-\\\"+e.substring(3),16):new za(e.substring(2),16)}function tu(t,e,r){const n={fault:t,operation:e};return null!=r&&(n.value=r),Ja.throwError(t,aa.errors.NUMERIC_FAULT,n)}var eu=r(9034),ru=r.n(eu);function nu(t){return\\\"0x\\\"+ru().keccak_256(Pa(t))}const iu=new aa(\\\"rlp/5.7.0\\\");function ou(t){const e=[];for(;t;)e.unshift(255&t),t>>=8;return e}function su(t,e,r){let n=0;for(let i=0;i<r;i++)n=256*n+t[e+i];return n}function au(t){if(Array.isArray(t)){let e=[];if(t.forEach((function(t){e=e.concat(au(t))})),e.length<=55)return e.unshift(192+e.length),e;const r=ou(e.length);return r.unshift(247+r.length),r.concat(e)}ka(t)||iu.throwArgumentError(\\\"RLP object must be BytesLike\\\",\\\"object\\\",t);const e=Array.prototype.slice.call(Pa(t));if(1===e.length&&e[0]<=127)return e;if(e.length<=55)return e.unshift(128+e.length),e;const r=ou(e.length);return r.unshift(183+r.length),r.concat(e)}function uu(t){return ja(au(t))}function cu(t,e,r,n){const i=[];for(;r<e+1+n;){const o=lu(t,r);i.push(o.result),(r+=o.consumed)>e+1+n&&iu.throwError(\\\"child data too short\\\",aa.errors.BUFFER_OVERRUN,{})}return{consumed:1+n,result:i}}function lu(t,e){if(0===t.length&&iu.throwError(\\\"data too short\\\",aa.errors.BUFFER_OVERRUN,{}),t[e]>=248){const r=t[e]-247;e+1+r>t.length&&iu.throwError(\\\"data short segment too short\\\",aa.errors.BUFFER_OVERRUN,{});const n=su(t,e+1,r);return e+1+r+n>t.length&&iu.throwError(\\\"data long segment too short\\\",aa.errors.BUFFER_OVERRUN,{}),cu(t,e,e+1+r,r+n)}if(t[e]>=192){const r=t[e]-192;return e+1+r>t.length&&iu.throwError(\\\"data array too short\\\",aa.errors.BUFFER_OVERRUN,{}),cu(t,e,e+1,r)}if(t[e]>=184){const r=t[e]-183;e+1+r>t.length&&iu.throwError(\\\"data array too short\\\",aa.errors.BUFFER_OVERRUN,{});const n=su(t,e+1,r);e+1+r+n>t.length&&iu.throwError(\\\"data array too short\\\",aa.errors.BUFFER_OVERRUN,{});return{consumed:1+r+n,result:ja(t.slice(e+1+r,e+1+r+n))}}if(t[e]>=128){const r=t[e]-128;e+1+r>t.length&&iu.throwError(\\\"data too short\\\",aa.errors.BUFFER_OVERRUN,{});return{consumed:1+r,result:ja(t.slice(e+1,e+1+r))}}return{consumed:1,result:ja(t[e])}}function fu(t){const e=Pa(t),r=lu(e,0);return r.consumed!==e.length&&iu.throwArgumentError(\\\"invalid rlp data\\\",\\\"data\\\",t),r.result}const hu=new aa(\\\"address/5.7.0\\\");function du(t){La(t,20)||hu.throwArgumentError(\\\"invalid address\\\",\\\"address\\\",t);const e=(t=t.toLowerCase()).substring(2).split(\\\"\\\"),r=new Uint8Array(40);for(let t=0;t<40;t++)r[t]=e[t].charCodeAt(0);const n=Pa(nu(r));for(let t=0;t<40;t+=2)n[t>>1]>>4>=8&&(e[t]=e[t].toUpperCase()),(15&n[t>>1])>=8&&(e[t+1]=e[t+1].toUpperCase());return\\\"0x\\\"+e.join(\\\"\\\")}const pu={};for(let t=0;t<10;t++)pu[String(t)]=String(t);for(let t=0;t<26;t++)pu[String.fromCharCode(65+t)]=String(10+t);const gu=Math.floor((mu=9007199254740991,Math.log10?Math.log10(mu):Math.log(mu)/Math.LN10));var mu;function yu(t){let e=(t=(t=t.toUpperCase()).substring(4)+t.substring(0,2)+\\\"00\\\").split(\\\"\\\").map((t=>pu[t])).join(\\\"\\\");for(;e.length>=gu;){let t=e.substring(0,gu);e=parseInt(t,10)%97+e.substring(t.length)}let r=String(98-parseInt(e,10)%97);for(;r.length<2;)r=\\\"0\\\"+r;return r}function vu(t){let e=null;if(\\\"string\\\"!=typeof t&&hu.throwArgumentError(\\\"invalid address\\\",\\\"address\\\",t),t.match(/^(0x)?[0-9a-fA-F]{40}$/))\\\"0x\\\"!==t.substring(0,2)&&(t=\\\"0x\\\"+t),e=du(t),t.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&e!==t&&hu.throwArgumentError(\\\"bad address checksum\\\",\\\"address\\\",t);else if(t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(t.substring(2,4)!==yu(t)&&hu.throwArgumentError(\\\"bad icap checksum\\\",\\\"address\\\",t),r=t.substring(4),e=new za(r,36).toString(16);e.length<40;)e=\\\"0\\\"+e;e=du(\\\"0x\\\"+e)}else hu.throwArgumentError(\\\"invalid address\\\",\\\"address\\\",t);var r;return e}const wu=\\\"hash/5.7.0\\\",bu=new aa(\\\"strings/5.7.0\\\");var Au,Eu;function Su(t,e,r,n,i){if(t===Eu.BAD_PREFIX||t===Eu.UNEXPECTED_CONTINUE){let t=0;for(let n=e+1;n<r.length&&r[n]>>6==2;n++)t++;return t}return t===Eu.OVERRUN?r.length-e-1:0}!function(t){t.current=\\\"\\\",t.NFC=\\\"NFC\\\",t.NFD=\\\"NFD\\\",t.NFKC=\\\"NFKC\\\",t.NFKD=\\\"NFKD\\\"}(Au||(Au={})),function(t){t.UNEXPECTED_CONTINUE=\\\"unexpected continuation byte\\\",t.BAD_PREFIX=\\\"bad codepoint prefix\\\",t.OVERRUN=\\\"string overrun\\\",t.MISSING_CONTINUE=\\\"missing continuation byte\\\",t.OUT_OF_RANGE=\\\"out of UTF-8 range\\\",t.UTF16_SURROGATE=\\\"UTF-16 surrogate\\\",t.OVERLONG=\\\"overlong representation\\\"}(Eu||(Eu={}));const Ru=Object.freeze({error:function(t,e,r,n,i){return bu.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`,\\\"bytes\\\",r)},ignore:Su,replace:function(t,e,r,n,i){return t===Eu.OVERLONG?(n.push(i),0):(n.push(65533),Su(t,e,r))}});function Iu(t,e){null==e&&(e=Ru.error),t=Pa(t);const r=[];let n=0;for(;n<t.length;){const i=t[n++];if(!(i>>7)){r.push(i);continue}let o=null,s=null;if(192==(224&i))o=1,s=127;else if(224==(240&i))o=2,s=2047;else{if(240!=(248&i)){n+=e(128==(192&i)?Eu.UNEXPECTED_CONTINUE:Eu.BAD_PREFIX,n-1,t,r);continue}o=3,s=65535}if(n-1+o>=t.length){n+=e(Eu.OVERRUN,n-1,t,r);continue}let a=i&(1<<8-o-1)-1;for(let i=0;i<o;i++){let i=t[n];if(128!=(192&i)){n+=e(Eu.MISSING_CONTINUE,n,t,r),a=null;break}a=a<<6|63&i,n++}null!==a&&(a>1114111?n+=e(Eu.OUT_OF_RANGE,n-1-o,t,r,a):a>=55296&&a<=57343?n+=e(Eu.UTF16_SURROGATE,n-1-o,t,r,a):a<=s?n+=e(Eu.OVERLONG,n-1-o,t,r,a):r.push(a))}return r}function xu(t,e=Au.current){e!=Au.current&&(bu.checkNormalize(),t=t.normalize(e));let r=[];for(let e=0;e<t.length;e++){const n=t.charCodeAt(e);if(n<128)r.push(n);else if(n<2048)r.push(n>>6|192),r.push(63&n|128);else if(55296==(64512&n)){e++;const i=t.charCodeAt(e);if(e>=t.length||56320!=(64512&i))throw new Error(\\\"invalid utf-8 string\\\");const o=65536+((1023&n)<<10)+(1023&i);r.push(o>>18|240),r.push(o>>12&63|128),r.push(o>>6&63|128),r.push(63&o|128)}else r.push(n>>12|224),r.push(n>>6&63|128),r.push(63&n|128)}return Pa(r)}function _u(t,e){return Iu(t,e).map((t=>t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(55296+(t>>10&1023),56320+(1023&t))))).join(\\\"\\\")}function Nu(t){return nu(xu(t))}var Mu=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const ku=new aa(wu),Ou=new Uint8Array(32);Ou.fill(0);const Cu=Xa.from(-1),Pu=Xa.from(0),Bu=Xa.from(1),Tu=Xa.from(\\\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\\");const Lu=Ga(Bu.toHexString(),32),Uu=Ga(Pu.toHexString(),32),ju={name:\\\"string\\\",version:\\\"string\\\",chainId:\\\"uint256\\\",verifyingContract:\\\"address\\\",salt:\\\"bytes32\\\"},Fu=[\\\"name\\\",\\\"version\\\",\\\"chainId\\\",\\\"verifyingContract\\\",\\\"salt\\\"];function Du(t){return function(e){return\\\"string\\\"!=typeof e&&ku.throwArgumentError(`invalid domain value for ${JSON.stringify(t)}`,`domain.${t}`,e),e}}const $u={name:Du(\\\"name\\\"),version:Du(\\\"version\\\"),chainId:function(t){try{return Xa.from(t).toString()}catch(t){}return ku.throwArgumentError('invalid domain value for \\\"chainId\\\"',\\\"domain.chainId\\\",t)},verifyingContract:function(t){try{return vu(t).toLowerCase()}catch(t){}return ku.throwArgumentError('invalid domain value \\\"verifyingContract\\\"',\\\"domain.verifyingContract\\\",t)},salt:function(t){try{const e=Pa(t);if(32!==e.length)throw new Error(\\\"bad length\\\");return ja(e)}catch(t){}return ku.throwArgumentError('invalid domain value \\\"salt\\\"',\\\"domain.salt\\\",t)}};function qu(t){{const e=t.match(/^(u?)int(\\\\d*)$/);if(e){const r=\\\"\\\"===e[1],n=parseInt(e[2]||\\\"256\\\");(n%8!=0||n>256||e[2]&&e[2]!==String(n))&&ku.throwArgumentError(\\\"invalid numeric width\\\",\\\"type\\\",t);const i=Tu.mask(r?n-1:n),o=r?i.add(Bu).mul(Cu):Pu;return function(e){const r=Xa.from(e);return(r.lt(o)||r.gt(i))&&ku.throwArgumentError(`value out-of-bounds for ${t}`,\\\"value\\\",e),Ga(r.toTwos(256).toHexString(),32)}}}{const e=t.match(/^bytes(\\\\d+)$/);if(e){const r=parseInt(e[1]);return(0===r||r>32||e[1]!==String(r))&&ku.throwArgumentError(\\\"invalid bytes width\\\",\\\"type\\\",t),function(e){return Pa(e).length!==r&&ku.throwArgumentError(`invalid length for ${t}`,\\\"value\\\",e),function(t){const e=Pa(t),r=e.length%32;return r?$a([e,Ou.slice(r)]):ja(e)}(e)}}}switch(t){case\\\"address\\\":return function(t){return Ga(vu(t),32)};case\\\"bool\\\":return function(t){return t?Lu:Uu};case\\\"bytes\\\":return function(t){return nu(t)};case\\\"string\\\":return function(t){return Nu(t)}}return null}function Gu(t,e){return`${t}(${e.map((({name:t,type:e})=>e+\\\" \\\"+t)).join(\\\",\\\")})`}class Hu{constructor(t){la(this,\\\"types\\\",Object.freeze(ya(t))),la(this,\\\"_encoderCache\\\",{}),la(this,\\\"_types\\\",{});const e={},r={},n={};Object.keys(t).forEach((t=>{e[t]={},r[t]=[],n[t]={}}));for(const n in t){const i={};t[n].forEach((o=>{i[o.name]&&ku.throwArgumentError(`duplicate variable name ${JSON.stringify(o.name)} in ${JSON.stringify(n)}`,\\\"types\\\",t),i[o.name]=!0;const s=o.type.match(/^([^\\\\x5b]*)(\\\\x5b|$)/)[1];s===n&&ku.throwArgumentError(`circular type reference to ${JSON.stringify(s)}`,\\\"types\\\",t);qu(s)||(r[s]||ku.throwArgumentError(`unknown type ${JSON.stringify(s)}`,\\\"types\\\",t),r[s].push(n),e[n][s]=!0)}))}const i=Object.keys(r).filter((t=>0===r[t].length));0===i.length?ku.throwArgumentError(\\\"missing primary type\\\",\\\"types\\\",t):i.length>1&&ku.throwArgumentError(`ambiguous primary types or unused types: ${i.map((t=>JSON.stringify(t))).join(\\\", \\\")}`,\\\"types\\\",t),la(this,\\\"primaryType\\\",i[0]),function i(o,s){s[o]&&ku.throwArgumentError(`circular type reference to ${JSON.stringify(o)}`,\\\"types\\\",t),s[o]=!0,Object.keys(e[o]).forEach((t=>{r[t]&&(i(t,s),Object.keys(s).forEach((e=>{n[e][t]=!0})))})),delete s[o]}(this.primaryType,{});for(const e in n){const r=Object.keys(n[e]);r.sort(),this._types[e]=Gu(e,t[e])+r.map((e=>Gu(e,t[e]))).join(\\\"\\\")}}getEncoder(t){let e=this._encoderCache[t];return e||(e=this._encoderCache[t]=this._getEncoder(t)),e}_getEncoder(t){{const e=qu(t);if(e)return e}const e=t.match(/^(.*)(\\\\x5b(\\\\d*)\\\\x5d)$/);if(e){const t=e[1],r=this.getEncoder(t),n=parseInt(e[3]);return e=>{n>=0&&e.length!==n&&ku.throwArgumentError(\\\"array length mismatch; expected length ${ arrayLength }\\\",\\\"value\\\",e);let i=e.map(r);return this._types[t]&&(i=i.map(nu)),nu($a(i))}}const r=this.types[t];if(r){const e=Nu(this._types[t]);return t=>{const n=r.map((({name:e,type:r})=>{const n=this.getEncoder(r)(t[e]);return this._types[r]?nu(n):n}));return n.unshift(e),$a(n)}}return ku.throwArgumentError(`unknown type: ${t}`,\\\"type\\\",t)}encodeType(t){const e=this._types[t];return e||ku.throwArgumentError(`unknown type: ${JSON.stringify(t)}`,\\\"name\\\",t),e}encodeData(t,e){return this.getEncoder(t)(e)}hashStruct(t,e){return nu(this.encodeData(t,e))}encode(t){return this.encodeData(this.primaryType,t)}hash(t){return this.hashStruct(this.primaryType,t)}_visit(t,e,r){if(qu(t))return r(t,e);const n=t.match(/^(.*)(\\\\x5b(\\\\d*)\\\\x5d)$/);if(n){const t=n[1],i=parseInt(n[3]);return i>=0&&e.length!==i&&ku.throwArgumentError(\\\"array length mismatch; expected length ${ arrayLength }\\\",\\\"value\\\",e),e.map((e=>this._visit(t,e,r)))}const i=this.types[t];return i?i.reduce(((t,{name:n,type:i})=>(t[n]=this._visit(i,e[n],r),t)),{}):ku.throwArgumentError(`unknown type: ${t}`,\\\"type\\\",t)}visit(t,e){return this._visit(this.primaryType,t,e)}static from(t){return new Hu(t)}static getPrimaryType(t){return Hu.from(t).primaryType}static hashStruct(t,e,r){return Hu.from(e).hashStruct(t,r)}static hashDomain(t){const e=[];for(const r in t){const n=ju[r];n||ku.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`,\\\"domain\\\",t),e.push({name:r,type:n})}return e.sort(((t,e)=>Fu.indexOf(t.name)-Fu.indexOf(e.name))),Hu.hashStruct(\\\"EIP712Domain\\\",{EIP712Domain:e},t)}static encode(t,e,r){return $a([\\\"0x1901\\\",Hu.hashDomain(t),Hu.from(e).hash(r)])}static hash(t,e,r){return nu(Hu.encode(t,e,r))}static resolveNames(t,e,r,n){return Mu(this,void 0,void 0,(function*(){t=da(t);const i={};t.verifyingContract&&!La(t.verifyingContract,20)&&(i[t.verifyingContract]=\\\"0x\\\");const o=Hu.from(e);o.visit(r,((t,e)=>(\\\"address\\\"!==t||La(e,20)||(i[e]=\\\"0x\\\"),e)));for(const t in i)i[t]=yield n(t);return t.verifyingContract&&i[t.verifyingContract]&&(t.verifyingContract=i[t.verifyingContract]),r=o.visit(r,((t,e)=>\\\"address\\\"===t&&i[e]?i[e]:e)),{domain:t,value:r}}))}static getPayload(t,e,r){Hu.hashDomain(t);const n={},i=[];Fu.forEach((e=>{const r=t[e];null!=r&&(n[e]=$u[e](r),i.push({name:e,type:ju[e]}))}));const o=Hu.from(e),s=da(e);return s.EIP712Domain?ku.throwArgumentError(\\\"types must not contain EIP712Domain type\\\",\\\"types.EIP712Domain\\\",e):s.EIP712Domain=i,o.encode(r),{types:s,domain:n,primaryType:o.primaryType,message:o.visit(r,((t,e)=>{if(t.match(/^bytes(\\\\d*)/))return ja(Pa(e));if(t.match(/^u?int/))return Xa.from(e).toString();switch(t){case\\\"address\\\":return e.toLowerCase();case\\\"bool\\\":return!!e;case\\\"string\\\":return\\\"string\\\"!=typeof e&&ku.throwArgumentError(\\\"invalid string\\\",\\\"value\\\",e),e}return ku.throwArgumentError(\\\"unsupported type\\\",\\\"type\\\",t)}))}}}const zu=Xa.from(0);var Ju=r(7952),Ku=r.n(Ju);\\\"undefined\\\"!=typeof globalThis?globalThis:\\\"undefined\\\"!=typeof window?window:void 0!==r.g?r.g:\\\"undefined\\\"!=typeof self&&self;function Vu(t,e,r){return r={path:e,exports:{},require:function(t,e){return function(){throw new Error(\\\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\\\")}(null==e&&r.path)}},t(r,r.exports),r.exports}var Wu=Xu;function Xu(t,e){if(!t)throw new Error(e||\\\"Assertion failed\\\")}Xu.equal=function(t,e,r){if(t!=e)throw new Error(r||\\\"Assertion failed: \\\"+t+\\\" != \\\"+e)};var Qu=Vu((function(t,e){var r=e;function n(t){return 1===t.length?\\\"0\\\"+t:t}function i(t){for(var e=\\\"\\\",r=0;r<t.length;r++)e+=n(t[r].toString(16));return e}r.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if(\\\"string\\\"!=typeof t){for(var n=0;n<t.length;n++)r[n]=0|t[n];return r}if(\\\"hex\\\"===e){(t=t.replace(/[^a-z0-9]+/gi,\\\"\\\")).length%2!=0&&(t=\\\"0\\\"+t);for(n=0;n<t.length;n+=2)r.push(parseInt(t[n]+t[n+1],16))}else for(n=0;n<t.length;n++){var i=t.charCodeAt(n),o=i>>8,s=255&i;o?r.push(o,s):r.push(s)}return r},r.zero2=n,r.toHex=i,r.encode=function(t,e){return\\\"hex\\\"===e?i(t):t}})),Yu=Vu((function(t,e){var r=e;r.assert=Wu,r.toArray=Qu.toArray,r.zero2=Qu.zero2,r.toHex=Qu.toHex,r.encode=Qu.encode,r.getNAF=function(t,e,r){var n=new Array(Math.max(t.bitLength(),r)+1);n.fill(0);for(var i=1<<e+1,o=t.clone(),s=0;s<n.length;s++){var a,u=o.andln(i-1);o.isOdd()?(a=u>(i>>1)-1?(i>>1)-u:u,o.isubn(a)):a=0,n[s]=a,o.iushrn(1)}return n},r.getJSF=function(t,e){var r=[[],[]];t=t.clone(),e=e.clone();for(var n,i=0,o=0;t.cmpn(-i)>0||e.cmpn(-o)>0;){var s,a,u=t.andln(3)+i&3,c=e.andln(3)+o&3;3===u&&(u=-1),3===c&&(c=-1),s=1&u?3!==(n=t.andln(7)+i&7)&&5!==n||2!==c?u:-u:0,r[0].push(s),a=1&c?3!==(n=e.andln(7)+o&7)&&5!==n||2!==u?c:-c:0,r[1].push(a),2*i===s+1&&(i=1-i),2*o===a+1&&(o=1-o),t.iushrn(1),e.iushrn(1)}return r},r.cachedProperty=function(t,e,r){var n=\\\"_\\\"+e;t.prototype[e]=function(){return void 0!==this[n]?this[n]:this[n]=r.call(this)}},r.parseBytes=function(t){return\\\"string\\\"==typeof t?r.toArray(t,\\\"hex\\\"):t},r.intFromLE=function(t){return new(xa())(t,\\\"hex\\\",\\\"le\\\")}})),Zu=Yu.getNAF,tc=Yu.getJSF,ec=Yu.assert;function rc(t,e){this.type=t,this.p=new(xa())(e.p,16),this.red=e.prime?xa().red(e.prime):xa().mont(this.p),this.zero=new(xa())(0).toRed(this.red),this.one=new(xa())(1).toRed(this.red),this.two=new(xa())(2).toRed(this.red),this.n=e.n&&new(xa())(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var nc=rc;function ic(t,e){this.curve=t,this.type=e,this.precomputed=null}rc.prototype.point=function(){throw new Error(\\\"Not implemented\\\")},rc.prototype.validate=function(){throw new Error(\\\"Not implemented\\\")},rc.prototype._fixedNafMul=function(t,e){ec(t.precomputed);var r=t._getDoubles(),n=Zu(e,1,this._bitLength),i=(1<<r.step+1)-(r.step%2==0?2:1);i/=3;var o,s,a=[];for(o=0;o<n.length;o+=r.step){s=0;for(var u=o+r.step-1;u>=o;u--)s=(s<<1)+n[u];a.push(s)}for(var c=this.jpoint(null,null,null),l=this.jpoint(null,null,null),f=i;f>0;f--){for(o=0;o<a.length;o++)(s=a[o])===f?l=l.mixedAdd(r.points[o]):s===-f&&(l=l.mixedAdd(r.points[o].neg()));c=c.add(l)}return c.toP()},rc.prototype._wnafMul=function(t,e){var r=4,n=t._getNAFPoints(r);r=n.wnd;for(var i=n.points,o=Zu(e,r,this._bitLength),s=this.jpoint(null,null,null),a=o.length-1;a>=0;a--){for(var u=0;a>=0&&0===o[a];a--)u++;if(a>=0&&u++,s=s.dblp(u),a<0)break;var c=o[a];ec(0!==c),s=\\\"affine\\\"===t.type?c>0?s.mixedAdd(i[c-1>>1]):s.mixedAdd(i[-c-1>>1].neg()):c>0?s.add(i[c-1>>1]):s.add(i[-c-1>>1].neg())}return\\\"affine\\\"===t.type?s.toP():s},rc.prototype._wnafMulAdd=function(t,e,r,n,i){var o,s,a,u=this._wnafT1,c=this._wnafT2,l=this._wnafT3,f=0;for(o=0;o<n;o++){var h=(a=e[o])._getNAFPoints(t);u[o]=h.wnd,c[o]=h.points}for(o=n-1;o>=1;o-=2){var d=o-1,p=o;if(1===u[d]&&1===u[p]){var g=[e[d],null,null,e[p]];0===e[d].y.cmp(e[p].y)?(g[1]=e[d].add(e[p]),g[2]=e[d].toJ().mixedAdd(e[p].neg())):0===e[d].y.cmp(e[p].y.redNeg())?(g[1]=e[d].toJ().mixedAdd(e[p]),g[2]=e[d].add(e[p].neg())):(g[1]=e[d].toJ().mixedAdd(e[p]),g[2]=e[d].toJ().mixedAdd(e[p].neg()));var m=[-3,-1,-5,-7,0,7,5,1,3],y=tc(r[d],r[p]);for(f=Math.max(y[0].length,f),l[d]=new Array(f),l[p]=new Array(f),s=0;s<f;s++){var v=0|y[0][s],w=0|y[1][s];l[d][s]=m[3*(v+1)+(w+1)],l[p][s]=0,c[d]=g}}else l[d]=Zu(r[d],u[d],this._bitLength),l[p]=Zu(r[p],u[p],this._bitLength),f=Math.max(l[d].length,f),f=Math.max(l[p].length,f)}var b=this.jpoint(null,null,null),A=this._wnafT4;for(o=f;o>=0;o--){for(var E=0;o>=0;){var S=!0;for(s=0;s<n;s++)A[s]=0|l[s][o],0!==A[s]&&(S=!1);if(!S)break;E++,o--}if(o>=0&&E++,b=b.dblp(E),o<0)break;for(s=0;s<n;s++){var R=A[s];0!==R&&(R>0?a=c[s][R-1>>1]:R<0&&(a=c[s][-R-1>>1].neg()),b=\\\"affine\\\"===a.type?b.mixedAdd(a):b.add(a))}}for(o=0;o<n;o++)c[o]=null;return i?b:b.toP()},rc.BasePoint=ic,ic.prototype.eq=function(){throw new Error(\\\"Not implemented\\\")},ic.prototype.validate=function(){return this.curve.validate(this)},rc.prototype.decodePoint=function(t,e){t=Yu.toArray(t,e);var r=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*r)return 6===t[0]?ec(t[t.length-1]%2==0):7===t[0]&&ec(t[t.length-1]%2==1),this.point(t.slice(1,1+r),t.slice(1+r,1+2*r));if((2===t[0]||3===t[0])&&t.length-1===r)return this.pointFromX(t.slice(1,1+r),3===t[0]);throw new Error(\\\"Unknown point format\\\")},ic.prototype.encodeCompressed=function(t){return this.encode(t,!0)},ic.prototype._encode=function(t){var e=this.curve.p.byteLength(),r=this.getX().toArray(\\\"be\\\",e);return t?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray(\\\"be\\\",e))},ic.prototype.encode=function(t,e){return Yu.encode(this._encode(e),t)},ic.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},ic.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},ic.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],n=this,i=0;i<e;i+=t){for(var o=0;o<t;o++)n=n.dbl();r.push(n)}return{step:t,points:r}},ic.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],r=(1<<t)-1,n=1===r?null:this.dbl(),i=1;i<r;i++)e[i]=e[i-1].add(n);return{wnd:t,points:e}},ic.prototype._getBeta=function(){return null},ic.prototype.dblp=function(t){for(var e=this,r=0;r<t;r++)e=e.dbl();return e};var oc=Vu((function(t){\\\"function\\\"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}}})),sc=Yu.assert;function ac(t){nc.call(this,\\\"short\\\",t),this.a=new(xa())(t.a,16).toRed(this.red),this.b=new(xa())(t.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(t),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}oc(ac,nc);var uc=ac;function cc(t,e,r,n){nc.BasePoint.call(this,t,\\\"affine\\\"),null===e&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new(xa())(e,16),this.y=new(xa())(r,16),n&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function lc(t,e,r,n){nc.BasePoint.call(this,t,\\\"jacobian\\\"),null===e&&null===r&&null===n?(this.x=this.curve.one,this.y=this.curve.one,this.z=new(xa())(0)):(this.x=new(xa())(e,16),this.y=new(xa())(r,16),this.z=new(xa())(n,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}ac.prototype._getEndomorphism=function(t){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var e,r;if(t.beta)e=new(xa())(t.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);e=(e=n[0].cmp(n[1])<0?n[0]:n[1]).toRed(this.red)}if(t.lambda)r=new(xa())(t.lambda,16);else{var i=this._getEndoRoots(this.n);0===this.g.mul(i[0]).x.cmp(this.g.x.redMul(e))?r=i[0]:(r=i[1],sc(0===this.g.mul(r).x.cmp(this.g.x.redMul(e))))}return{beta:e,lambda:r,basis:t.basis?t.basis.map((function(t){return{a:new(xa())(t.a,16),b:new(xa())(t.b,16)}})):this._getEndoBasis(r)}}},ac.prototype._getEndoRoots=function(t){var e=t===this.p?this.red:xa().mont(t),r=new(xa())(2).toRed(e).redInvm(),n=r.redNeg(),i=new(xa())(3).toRed(e).redNeg().redSqrt().redMul(r);return[n.redAdd(i).fromRed(),n.redSub(i).fromRed()]},ac.prototype._getEndoBasis=function(t){for(var e,r,n,i,o,s,a,u,c,l=this.n.ushrn(Math.floor(this.n.bitLength()/2)),f=t,h=this.n.clone(),d=new(xa())(1),p=new(xa())(0),g=new(xa())(0),m=new(xa())(1),y=0;0!==f.cmpn(0);){var v=h.div(f);u=h.sub(v.mul(f)),c=g.sub(v.mul(d));var w=m.sub(v.mul(p));if(!n&&u.cmp(l)<0)e=a.neg(),r=d,n=u.neg(),i=c;else if(n&&2==++y)break;a=u,h=f,f=u,g=d,d=c,m=p,p=w}o=u.neg(),s=c;var b=n.sqr().add(i.sqr());return o.sqr().add(s.sqr()).cmp(b)>=0&&(o=e,s=r),n.negative&&(n=n.neg(),i=i.neg()),o.negative&&(o=o.neg(),s=s.neg()),[{a:n,b:i},{a:o,b:s}]},ac.prototype._endoSplit=function(t){var e=this.endo.basis,r=e[0],n=e[1],i=n.b.mul(t).divRound(this.n),o=r.b.neg().mul(t).divRound(this.n),s=i.mul(r.a),a=o.mul(n.a),u=i.mul(r.b),c=o.mul(n.b);return{k1:t.sub(s).sub(a),k2:u.add(c).neg()}},ac.prototype.pointFromX=function(t,e){(t=new(xa())(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error(\\\"invalid point\\\");var i=n.fromRed().isOdd();return(e&&!i||!e&&i)&&(n=n.redNeg()),this.point(t,n)},ac.prototype.validate=function(t){if(t.inf)return!0;var e=t.x,r=t.y,n=this.a.redMul(e),i=e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);return 0===r.redSqr().redISub(i).cmpn(0)},ac.prototype._endoWnafMulAdd=function(t,e,r){for(var n=this._endoWnafT1,i=this._endoWnafT2,o=0;o<t.length;o++){var s=this._endoSplit(e[o]),a=t[o],u=a._getBeta();s.k1.negative&&(s.k1.ineg(),a=a.neg(!0)),s.k2.negative&&(s.k2.ineg(),u=u.neg(!0)),n[2*o]=a,n[2*o+1]=u,i[2*o]=s.k1,i[2*o+1]=s.k2}for(var c=this._wnafMulAdd(1,n,i,2*o,r),l=0;l<2*o;l++)n[l]=null,i[l]=null;return c},oc(cc,nc.BasePoint),ac.prototype.point=function(t,e,r){return new cc(this,t,e,r)},ac.prototype.pointFromJSON=function(t,e){return cc.fromJSON(this,t,e)},cc.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var e=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var r=this.curve,n=function(t){return r.point(t.x.redMul(r.endo.beta),t.y)};t.beta=e,e.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(n)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(n)}}}return e}},cc.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},cc.fromJSON=function(t,e,r){\\\"string\\\"==typeof e&&(e=JSON.parse(e));var n=t.point(e[0],e[1],r);if(!e[2])return n;function i(e){return t.point(e[0],e[1],r)}var o=e[2];return n.precomputed={beta:null,doubles:o.doubles&&{step:o.doubles.step,points:[n].concat(o.doubles.points.map(i))},naf:o.naf&&{wnd:o.naf.wnd,points:[n].concat(o.naf.points.map(i))}},n},cc.prototype.inspect=function(){return this.isInfinity()?\\\"<EC Point Infinity>\\\":\\\"<EC Point x: \\\"+this.x.fromRed().toString(16,2)+\\\" y: \\\"+this.y.fromRed().toString(16,2)+\\\">\\\"},cc.prototype.isInfinity=function(){return this.inf},cc.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(0===this.x.cmp(t.x))return this.curve.point(null,null);var e=this.y.redSub(t.y);0!==e.cmpn(0)&&(e=e.redMul(this.x.redSub(t.x).redInvm()));var r=e.redSqr().redISub(this.x).redISub(t.x),n=e.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,n)},cc.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(0===t.cmpn(0))return this.curve.point(null,null);var e=this.curve.a,r=this.x.redSqr(),n=t.redInvm(),i=r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),o=i.redSqr().redISub(this.x.redAdd(this.x)),s=i.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,s)},cc.prototype.getX=function(){return this.x.fromRed()},cc.prototype.getY=function(){return this.y.fromRed()},cc.prototype.mul=function(t){return t=new(xa())(t,16),this.isInfinity()?this:this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},cc.prototype.mulAdd=function(t,e,r){var n=[this,e],i=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i):this.curve._wnafMulAdd(1,n,i,2)},cc.prototype.jmulAdd=function(t,e,r){var n=[this,e],i=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i,!0):this.curve._wnafMulAdd(1,n,i,2,!0)},cc.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||0===this.x.cmp(t.x)&&0===this.y.cmp(t.y))},cc.prototype.neg=function(t){if(this.inf)return this;var e=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var r=this.precomputed,n=function(t){return t.neg()};e.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(n)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(n)}}}return e},cc.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},oc(lc,nc.BasePoint),ac.prototype.jpoint=function(t,e,r){return new lc(this,t,e,r)},lc.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),e=t.redSqr(),r=this.x.redMul(e),n=this.y.redMul(e).redMul(t);return this.curve.point(r,n)},lc.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},lc.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.z.redSqr(),r=this.z.redSqr(),n=this.x.redMul(e),i=t.x.redMul(r),o=this.y.redMul(e.redMul(t.z)),s=t.y.redMul(r.redMul(this.z)),a=n.redSub(i),u=o.redSub(s);if(0===a.cmpn(0))return 0!==u.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=a.redSqr(),l=c.redMul(a),f=n.redMul(c),h=u.redSqr().redIAdd(l).redISub(f).redISub(f),d=u.redMul(f.redISub(h)).redISub(o.redMul(l)),p=this.z.redMul(t.z).redMul(a);return this.curve.jpoint(h,d,p)},lc.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var e=this.z.redSqr(),r=this.x,n=t.x.redMul(e),i=this.y,o=t.y.redMul(e).redMul(this.z),s=r.redSub(n),a=i.redSub(o);if(0===s.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=s.redSqr(),c=u.redMul(s),l=r.redMul(u),f=a.redSqr().redIAdd(c).redISub(l).redISub(l),h=a.redMul(l.redISub(f)).redISub(i.redMul(c)),d=this.z.redMul(s);return this.curve.jpoint(f,h,d)},lc.prototype.dblp=function(t){if(0===t)return this;if(this.isInfinity())return this;if(!t)return this.dbl();var e;if(this.curve.zeroA||this.curve.threeA){var r=this;for(e=0;e<t;e++)r=r.dbl();return r}var n=this.curve.a,i=this.curve.tinv,o=this.x,s=this.y,a=this.z,u=a.redSqr().redSqr(),c=s.redAdd(s);for(e=0;e<t;e++){var l=o.redSqr(),f=c.redSqr(),h=f.redSqr(),d=l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),p=o.redMul(f),g=d.redSqr().redISub(p.redAdd(p)),m=p.redISub(g),y=d.redMul(m);y=y.redIAdd(y).redISub(h);var v=c.redMul(a);e+1<t&&(u=u.redMul(h)),o=g,a=v,c=y}return this.curve.jpoint(o,c.redMul(i),a)},lc.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},lc.prototype._zeroDbl=function(){var t,e,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n),u=a.redSqr().redISub(s).redISub(s),c=o.redIAdd(o);c=(c=c.redIAdd(c)).redIAdd(c),t=u,e=a.redMul(s.redISub(u)).redISub(c),r=this.y.redAdd(this.y)}else{var l=this.x.redSqr(),f=this.y.redSqr(),h=f.redSqr(),d=this.x.redAdd(f).redSqr().redISub(l).redISub(h);d=d.redIAdd(d);var p=l.redAdd(l).redIAdd(l),g=p.redSqr(),m=h.redIAdd(h);m=(m=m.redIAdd(m)).redIAdd(m),t=g.redISub(d).redISub(d),e=p.redMul(d.redISub(t)).redISub(m),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(t,e,r)},lc.prototype._threeDbl=function(){var t,e,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),u=a.redSqr().redISub(s).redISub(s);t=u;var c=o.redIAdd(o);c=(c=c.redIAdd(c)).redIAdd(c),e=a.redMul(s.redISub(u)).redISub(c),r=this.y.redAdd(this.y)}else{var l=this.z.redSqr(),f=this.y.redSqr(),h=this.x.redMul(f),d=this.x.redSub(l).redMul(this.x.redAdd(l));d=d.redAdd(d).redIAdd(d);var p=h.redIAdd(h),g=(p=p.redIAdd(p)).redAdd(p);t=d.redSqr().redISub(g),r=this.y.redAdd(this.z).redSqr().redISub(f).redISub(l);var m=f.redSqr();m=(m=(m=m.redIAdd(m)).redIAdd(m)).redIAdd(m),e=d.redMul(p.redISub(t)).redISub(m)}return this.curve.jpoint(t,e,r)},lc.prototype._dbl=function(){var t=this.curve.a,e=this.x,r=this.y,n=this.z,i=n.redSqr().redSqr(),o=e.redSqr(),s=r.redSqr(),a=o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),u=e.redAdd(e),c=(u=u.redIAdd(u)).redMul(s),l=a.redSqr().redISub(c.redAdd(c)),f=c.redISub(l),h=s.redSqr();h=(h=(h=h.redIAdd(h)).redIAdd(h)).redIAdd(h);var d=a.redMul(f).redISub(h),p=r.redAdd(r).redMul(n);return this.curve.jpoint(l,d,p)},lc.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),e=this.y.redSqr(),r=this.z.redSqr(),n=e.redSqr(),i=t.redAdd(t).redIAdd(t),o=i.redSqr(),s=this.x.redAdd(e).redSqr().redISub(t).redISub(n),a=(s=(s=(s=s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr(),u=n.redIAdd(n);u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var c=i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u),l=e.redMul(c);l=(l=l.redIAdd(l)).redIAdd(l);var f=this.x.redMul(a).redISub(l);f=(f=f.redIAdd(f)).redIAdd(f);var h=this.y.redMul(c.redMul(u.redISub(c)).redISub(s.redMul(a)));h=(h=(h=h.redIAdd(h)).redIAdd(h)).redIAdd(h);var d=this.z.redAdd(s).redSqr().redISub(r).redISub(a);return this.curve.jpoint(f,h,d)},lc.prototype.mul=function(t,e){return t=new(xa())(t,e),this.curve._wnafMul(this,t)},lc.prototype.eq=function(t){if(\\\"affine\\\"===t.type)return this.eq(t.toJ());if(this===t)return!0;var e=this.z.redSqr(),r=t.z.redSqr();if(0!==this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0))return!1;var n=e.redMul(this.z),i=r.redMul(t.z);return 0===this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)},lc.prototype.eqXToP=function(t){var e=this.z.redSqr(),r=t.toRed(this.curve.red).redMul(e);if(0===this.x.cmp(r))return!0;for(var n=t.clone(),i=this.curve.redN.redMul(e);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(i),0===this.x.cmp(r))return!0}},lc.prototype.inspect=function(){return this.isInfinity()?\\\"<EC JPoint Infinity>\\\":\\\"<EC JPoint x: \\\"+this.x.toString(16,2)+\\\" y: \\\"+this.y.toString(16,2)+\\\" z: \\\"+this.z.toString(16,2)+\\\">\\\"},lc.prototype.isInfinity=function(){return 0===this.z.cmpn(0)};var fc=Vu((function(t,e){var r=e;r.base=nc,r.short=uc,r.mont=null,r.edwards=null})),hc=Vu((function(t,e){var r,n=e,i=Yu.assert;function o(t){\\\"short\\\"===t.type?this.curve=new fc.short(t):\\\"edwards\\\"===t.type?this.curve=new fc.edwards(t):this.curve=new fc.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,i(this.g.validate(),\\\"Invalid curve\\\"),i(this.g.mul(this.n).isInfinity(),\\\"Invalid curve, G*N != O\\\")}function s(t,e){Object.defineProperty(n,t,{configurable:!0,enumerable:!0,get:function(){var r=new o(e);return Object.defineProperty(n,t,{configurable:!0,enumerable:!0,value:r}),r}})}n.PresetCurve=o,s(\\\"p192\\\",{type:\\\"short\\\",prime:\\\"p192\\\",p:\\\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\\\",a:\\\"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\\\",b:\\\"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\\\",n:\\\"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\\\",hash:Ku().sha256,gRed:!1,g:[\\\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\\\",\\\"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\\\"]}),s(\\\"p224\\\",{type:\\\"short\\\",prime:\\\"p224\\\",p:\\\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\\\",a:\\\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\\\",b:\\\"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\\\",n:\\\"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\\\",hash:Ku().sha256,gRed:!1,g:[\\\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\\\",\\\"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\\\"]}),s(\\\"p256\\\",{type:\\\"short\\\",prime:null,p:\\\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\\\",a:\\\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\\\",b:\\\"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\\\",n:\\\"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\\\",hash:Ku().sha256,gRed:!1,g:[\\\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\\\",\\\"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\\\"]}),s(\\\"p384\\\",{type:\\\"short\\\",prime:null,p:\\\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\\\",a:\\\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\\\",b:\\\"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\\\",n:\\\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\\\",hash:Ku().sha384,gRed:!1,g:[\\\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\\\",\\\"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\\\"]}),s(\\\"p521\\\",{type:\\\"short\\\",prime:null,p:\\\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\\\",a:\\\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\\\",b:\\\"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\\\",n:\\\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\\\",hash:Ku().sha512,gRed:!1,g:[\\\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\\\",\\\"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\\\"]}),s(\\\"curve25519\\\",{type:\\\"mont\\\",prime:\\\"p25519\\\",p:\\\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\\\",a:\\\"76d06\\\",b:\\\"1\\\",n:\\\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\\\",hash:Ku().sha256,gRed:!1,g:[\\\"9\\\"]}),s(\\\"ed25519\\\",{type:\\\"edwards\\\",prime:\\\"p25519\\\",p:\\\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\\\",a:\\\"-1\\\",c:\\\"1\\\",d:\\\"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\\\",n:\\\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\\\",hash:Ku().sha256,gRed:!1,g:[\\\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\\\",\\\"6666666666666666666666666666666666666666666666666666666666666658\\\"]});try{r=null.crash()}catch(t){r=void 0}s(\\\"secp256k1\\\",{type:\\\"short\\\",prime:\\\"k256\\\",p:\\\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\\\",a:\\\"0\\\",b:\\\"7\\\",n:\\\"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\\\",h:\\\"1\\\",hash:Ku().sha256,beta:\\\"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\\\",lambda:\\\"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\\\",basis:[{a:\\\"3086d221a7d46bcde86c90e49284eb15\\\",b:\\\"-e4437ed6010e88286f547fa90abfe4c3\\\"},{a:\\\"114ca50f7a8e2f3f657c1108d9d44cfd8\\\",b:\\\"3086d221a7d46bcde86c90e49284eb15\\\"}],gRed:!1,g:[\\\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\\\",\\\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\\\",r]})}));function dc(t){if(!(this instanceof dc))return new dc(t);this.hash=t.hash,this.predResist=!!t.predResist,this.outLen=this.hash.outSize,this.minEntropy=t.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=Qu.toArray(t.entropy,t.entropyEnc||\\\"hex\\\"),r=Qu.toArray(t.nonce,t.nonceEnc||\\\"hex\\\"),n=Qu.toArray(t.pers,t.persEnc||\\\"hex\\\");Wu(e.length>=this.minEntropy/8,\\\"Not enough entropy. Minimum is: \\\"+this.minEntropy+\\\" bits\\\"),this._init(e,r,n)}var pc=dc;dc.prototype._init=function(t,e,r){var n=t.concat(e).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},dc.prototype._hmac=function(){return new(Ku().hmac)(this.hash,this.K)},dc.prototype._update=function(t){var e=this._hmac().update(this.V).update([0]);t&&(e=e.update(t)),this.K=e.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},dc.prototype.reseed=function(t,e,r,n){\\\"string\\\"!=typeof e&&(n=r,r=e,e=null),t=Qu.toArray(t,e),r=Qu.toArray(r,n),Wu(t.length>=this.minEntropy/8,\\\"Not enough entropy. Minimum is: \\\"+this.minEntropy+\\\" bits\\\"),this._update(t.concat(r||[])),this._reseed=1},dc.prototype.generate=function(t,e,r,n){if(this._reseed>this.reseedInterval)throw new Error(\\\"Reseed is required\\\");\\\"string\\\"!=typeof e&&(n=r,r=e,e=null),r&&(r=Qu.toArray(r,n||\\\"hex\\\"),this._update(r));for(var i=[];i.length<t;)this.V=this._hmac().update(this.V).digest(),i=i.concat(this.V);var o=i.slice(0,t);return this._update(r),this._reseed++,Qu.encode(o,e)};var gc=Yu.assert;function mc(t,e){this.ec=t,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}var yc=mc;mc.fromPublic=function(t,e,r){return e instanceof mc?e:new mc(t,{pub:e,pubEnc:r})},mc.fromPrivate=function(t,e,r){return e instanceof mc?e:new mc(t,{priv:e,privEnc:r})},mc.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:\\\"Invalid public key\\\"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:\\\"Public key * N != O\\\"}:{result:!1,reason:\\\"Public key is not a point\\\"}},mc.prototype.getPublic=function(t,e){return\\\"string\\\"==typeof t&&(e=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),e?this.pub.encode(e,t):this.pub},mc.prototype.getPrivate=function(t){return\\\"hex\\\"===t?this.priv.toString(16,2):this.priv},mc.prototype._importPrivate=function(t,e){this.priv=new(xa())(t,e||16),this.priv=this.priv.umod(this.ec.curve.n)},mc.prototype._importPublic=function(t,e){if(t.x||t.y)return\\\"mont\\\"===this.ec.curve.type?gc(t.x,\\\"Need x coordinate\\\"):\\\"short\\\"!==this.ec.curve.type&&\\\"edwards\\\"!==this.ec.curve.type||gc(t.x&&t.y,\\\"Need both x and y coordinate\\\"),void(this.pub=this.ec.curve.point(t.x,t.y));this.pub=this.ec.curve.decodePoint(t,e)},mc.prototype.derive=function(t){return t.validate()||gc(t.validate(),\\\"public point not validated\\\"),t.mul(this.priv).getX()},mc.prototype.sign=function(t,e,r){return this.ec.sign(t,this,e,r)},mc.prototype.verify=function(t,e){return this.ec.verify(t,e,this)},mc.prototype.inspect=function(){return\\\"<Key priv: \\\"+(this.priv&&this.priv.toString(16,2))+\\\" pub: \\\"+(this.pub&&this.pub.inspect())+\\\" >\\\"};var vc=Yu.assert;function wc(t,e){if(t instanceof wc)return t;this._importDER(t,e)||(vc(t.r&&t.s,\\\"Signature without r or s\\\"),this.r=new(xa())(t.r,16),this.s=new(xa())(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}var bc=wc;function Ac(){this.place=0}function Ec(t,e){var r=t[e.place++];if(!(128&r))return r;var n=15&r;if(0===n||n>4)return!1;for(var i=0,o=0,s=e.place;o<n;o++,s++)i<<=8,i|=t[s],i>>>=0;return!(i<=127)&&(e.place=s,i)}function Sc(t){for(var e=0,r=t.length-1;!t[e]&&!(128&t[e+1])&&e<r;)e++;return 0===e?t:t.slice(e)}function Rc(t,e){if(e<128)t.push(e);else{var r=1+(Math.log(e)/Math.LN2>>>3);for(t.push(128|r);--r;)t.push(e>>>(r<<3)&255);t.push(e)}}wc.prototype._importDER=function(t,e){t=Yu.toArray(t,e);var r=new Ac;if(48!==t[r.place++])return!1;var n=Ec(t,r);if(!1===n)return!1;if(n+r.place!==t.length)return!1;if(2!==t[r.place++])return!1;var i=Ec(t,r);if(!1===i)return!1;var o=t.slice(r.place,i+r.place);if(r.place+=i,2!==t[r.place++])return!1;var s=Ec(t,r);if(!1===s)return!1;if(t.length!==s+r.place)return!1;var a=t.slice(r.place,s+r.place);if(0===o[0]){if(!(128&o[1]))return!1;o=o.slice(1)}if(0===a[0]){if(!(128&a[1]))return!1;a=a.slice(1)}return this.r=new(xa())(o),this.s=new(xa())(a),this.recoveryParam=null,!0},wc.prototype.toDER=function(t){var e=this.r.toArray(),r=this.s.toArray();for(128&e[0]&&(e=[0].concat(e)),128&r[0]&&(r=[0].concat(r)),e=Sc(e),r=Sc(r);!(r[0]||128&r[1]);)r=r.slice(1);var n=[2];Rc(n,e.length),(n=n.concat(e)).push(2),Rc(n,r.length);var i=n.concat(r),o=[48];return Rc(o,i.length),o=o.concat(i),Yu.encode(o,t)};var Ic=function(){throw new Error(\\\"unsupported\\\")},xc=Yu.assert;function _c(t){if(!(this instanceof _c))return new _c(t);\\\"string\\\"==typeof t&&(xc(Object.prototype.hasOwnProperty.call(hc,t),\\\"Unknown curve \\\"+t),t=hc[t]),t instanceof hc.PresetCurve&&(t={curve:t}),this.curve=t.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=t.curve.g,this.g.precompute(t.curve.n.bitLength()+1),this.hash=t.hash||t.curve.hash}var Nc=_c;_c.prototype.keyPair=function(t){return new yc(this,t)},_c.prototype.keyFromPrivate=function(t,e){return yc.fromPrivate(this,t,e)},_c.prototype.keyFromPublic=function(t,e){return yc.fromPublic(this,t,e)},_c.prototype.genKeyPair=function(t){t||(t={});for(var e=new pc({hash:this.hash,pers:t.pers,persEnc:t.persEnc||\\\"utf8\\\",entropy:t.entropy||Ic(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||\\\"utf8\\\",nonce:this.n.toArray()}),r=this.n.byteLength(),n=this.n.sub(new(xa())(2));;){var i=new(xa())(e.generate(r));if(!(i.cmp(n)>0))return i.iaddn(1),this.keyFromPrivate(i)}},_c.prototype._truncateToN=function(t,e){var r=8*t.byteLength()-this.n.bitLength();return r>0&&(t=t.ushrn(r)),!e&&t.cmp(this.n)>=0?t.sub(this.n):t},_c.prototype.sign=function(t,e,r,n){\\\"object\\\"==typeof r&&(n=r,r=null),n||(n={}),e=this.keyFromPrivate(e,r),t=this._truncateToN(new(xa())(t,16));for(var i=this.n.byteLength(),o=e.getPrivate().toArray(\\\"be\\\",i),s=t.toArray(\\\"be\\\",i),a=new pc({hash:this.hash,entropy:o,nonce:s,pers:n.pers,persEnc:n.persEnc||\\\"utf8\\\"}),u=this.n.sub(new(xa())(1)),c=0;;c++){var l=n.k?n.k(c):new(xa())(a.generate(this.n.byteLength()));if(!((l=this._truncateToN(l,!0)).cmpn(1)<=0||l.cmp(u)>=0)){var f=this.g.mul(l);if(!f.isInfinity()){var h=f.getX(),d=h.umod(this.n);if(0!==d.cmpn(0)){var p=l.invm(this.n).mul(d.mul(e.getPrivate()).iadd(t));if(0!==(p=p.umod(this.n)).cmpn(0)){var g=(f.getY().isOdd()?1:0)|(0!==h.cmp(d)?2:0);return n.canonical&&p.cmp(this.nh)>0&&(p=this.n.sub(p),g^=1),new bc({r:d,s:p,recoveryParam:g})}}}}}},_c.prototype.verify=function(t,e,r,n){t=this._truncateToN(new(xa())(t,16)),r=this.keyFromPublic(r,n);var i=(e=new bc(e,\\\"hex\\\")).r,o=e.s;if(i.cmpn(1)<0||i.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var s,a=o.invm(this.n),u=a.mul(t).umod(this.n),c=a.mul(i).umod(this.n);return this.curve._maxwellTrick?!(s=this.g.jmulAdd(u,r.getPublic(),c)).isInfinity()&&s.eqXToP(i):!(s=this.g.mulAdd(u,r.getPublic(),c)).isInfinity()&&0===s.getX().umod(this.n).cmp(i)},_c.prototype.recoverPubKey=function(t,e,r,n){xc((3&r)===r,\\\"The recovery param is more than two bits\\\"),e=new bc(e,n);var i=this.n,o=new(xa())(t),s=e.r,a=e.s,u=1&r,c=r>>1;if(s.cmp(this.curve.p.umod(this.curve.n))>=0&&c)throw new Error(\\\"Unable to find sencond key candinate\\\");s=c?this.curve.pointFromX(s.add(this.curve.n),u):this.curve.pointFromX(s,u);var l=e.r.invm(i),f=i.sub(o).mul(l).umod(i),h=a.mul(l).umod(i);return this.g.mulAdd(f,s,h)},_c.prototype.getKeyRecoveryParam=function(t,e,r,n){if(null!==(e=new bc(e,n)).recoveryParam)return e.recoveryParam;for(var i=0;i<4;i++){var o;try{o=this.recoverPubKey(t,e,i)}catch(t){continue}if(o.eq(r))return i}throw new Error(\\\"Unable to find valid recovery factor\\\")};var Mc=Vu((function(t,e){var r=e;r.version=\\\"6.5.4\\\",r.utils=Yu,r.rand=function(){throw new Error(\\\"unsupported\\\")},r.curve=fc,r.curves=hc,r.ec=Nc,r.eddsa=null})).ec;const kc=new aa(\\\"signing-key/5.7.0\\\");let Oc=null;function Cc(){return Oc||(Oc=new Mc(\\\"secp256k1\\\")),Oc}class Pc{constructor(t){la(this,\\\"curve\\\",\\\"secp256k1\\\"),la(this,\\\"privateKey\\\",ja(t)),32!==Fa(this.privateKey)&&kc.throwArgumentError(\\\"invalid private key\\\",\\\"privateKey\\\",\\\"[[ REDACTED ]]\\\");const e=Cc().keyFromPrivate(Pa(this.privateKey));la(this,\\\"publicKey\\\",\\\"0x\\\"+e.getPublic(!1,\\\"hex\\\")),la(this,\\\"compressedPublicKey\\\",\\\"0x\\\"+e.getPublic(!0,\\\"hex\\\")),la(this,\\\"_isSigningKey\\\",!0)}_addPoint(t){const e=Cc().keyFromPublic(Pa(this.publicKey)),r=Cc().keyFromPublic(Pa(t));return\\\"0x\\\"+e.pub.add(r.pub).encodeCompressed(\\\"hex\\\")}signDigest(t){const e=Cc().keyFromPrivate(Pa(this.privateKey)),r=Pa(t);32!==r.length&&kc.throwArgumentError(\\\"bad digest length\\\",\\\"digest\\\",t);const n=e.sign(r,{canonical:!0});return Ha({recoveryParam:n.recoveryParam,r:Ga(\\\"0x\\\"+n.r.toString(16),32),s:Ga(\\\"0x\\\"+n.s.toString(16),32)})}computeSharedSecret(t){const e=Cc().keyFromPrivate(Pa(this.privateKey)),r=Cc().keyFromPublic(Pa(Bc(t)));return Ga(\\\"0x\\\"+e.derive(r.getPublic()).toString(16),32)}static isSigningKey(t){return!(!t||!t._isSigningKey)}}function Bc(t,e){const r=Pa(t);if(32===r.length){const t=new Pc(r);return e?\\\"0x\\\"+Cc().keyFromPrivate(r).getPublic(!0,\\\"hex\\\"):t.publicKey}return 33===r.length?e?ja(r):\\\"0x\\\"+Cc().keyFromPublic(r).getPublic(!1,\\\"hex\\\"):65===r.length?e?\\\"0x\\\"+Cc().keyFromPublic(r).getPublic(!0,\\\"hex\\\"):ja(r):kc.throwArgumentError(\\\"invalid public or private key\\\",\\\"key\\\",\\\"[REDACTED]\\\")}const Tc=new aa(\\\"transactions/5.7.0\\\");var Lc;function Uc(t){return\\\"0x\\\"===t?null:vu(t)}function jc(t){return\\\"0x\\\"===t?zu:Xa.from(t)}!function(t){t[t.legacy=0]=\\\"legacy\\\",t[t.eip2930=1]=\\\"eip2930\\\",t[t.eip1559=2]=\\\"eip1559\\\"}(Lc||(Lc={}));function Fc(t,e){return function(t){return vu(Da(nu(Da(Bc(t),1)),12))}(function(t,e){const r=Ha(e),n={r:Pa(r.r),s:Pa(r.s)};return\\\"0x\\\"+Cc().recoverPubKey(Pa(t),n,r.recoveryParam).encode(\\\"hex\\\",!1)}(Pa(t),e))}function Dc(t,e){const r=Ta(Xa.from(t).toHexString());return r.length>32&&Tc.throwArgumentError(\\\"invalid length for \\\"+e,\\\"transaction:\\\"+e,t),r}function $c(t,e){return{address:vu(t),storageKeys:(e||[]).map(((e,r)=>(32!==Fa(e)&&Tc.throwArgumentError(\\\"invalid access list storageKey\\\",`accessList[${t}:${r}]`,e),e.toLowerCase())))}}function qc(t){if(Array.isArray(t))return t.map(((t,e)=>Array.isArray(t)?(t.length>2&&Tc.throwArgumentError(\\\"access list expected to be [ address, storageKeys[] ]\\\",`value[${e}]`,t),$c(t[0],t[1])):$c(t.address,t.storageKeys)));const e=Object.keys(t).map((e=>{const r=t[e].reduce(((t,e)=>(t[e]=!0,t)),{});return $c(e,Object.keys(r).sort())}));return e.sort(((t,e)=>t.address.localeCompare(e.address))),e}function Gc(t){return qc(t).map((t=>[t.address,t.storageKeys]))}function Hc(t,e){if(null!=t.gasPrice){const e=Xa.from(t.gasPrice),r=Xa.from(t.maxFeePerGas||0);e.eq(r)||Tc.throwArgumentError(\\\"mismatch EIP-1559 gasPrice != maxFeePerGas\\\",\\\"tx\\\",{gasPrice:e,maxFeePerGas:r})}const r=[Dc(t.chainId||0,\\\"chainId\\\"),Dc(t.nonce||0,\\\"nonce\\\"),Dc(t.maxPriorityFeePerGas||0,\\\"maxPriorityFeePerGas\\\"),Dc(t.maxFeePerGas||0,\\\"maxFeePerGas\\\"),Dc(t.gasLimit||0,\\\"gasLimit\\\"),null!=t.to?vu(t.to):\\\"0x\\\",Dc(t.value||0,\\\"value\\\"),t.data||\\\"0x\\\",Gc(t.accessList||[])];if(e){const t=Ha(e);r.push(Dc(t.recoveryParam,\\\"recoveryParam\\\")),r.push(Ta(t.r)),r.push(Ta(t.s))}return $a([\\\"0x02\\\",uu(r)])}function zc(t,e){const r=[Dc(t.chainId||0,\\\"chainId\\\"),Dc(t.nonce||0,\\\"nonce\\\"),Dc(t.gasPrice||0,\\\"gasPrice\\\"),Dc(t.gasLimit||0,\\\"gasLimit\\\"),null!=t.to?vu(t.to):\\\"0x\\\",Dc(t.value||0,\\\"value\\\"),t.data||\\\"0x\\\",Gc(t.accessList||[])];if(e){const t=Ha(e);r.push(Dc(t.recoveryParam,\\\"recoveryParam\\\")),r.push(Ta(t.r)),r.push(Ta(t.s))}return $a([\\\"0x01\\\",uu(r)])}function Jc(t,e,r){try{const r=jc(e[0]).toNumber();if(0!==r&&1!==r)throw new Error(\\\"bad recid\\\");t.v=r}catch(t){Tc.throwArgumentError(\\\"invalid v for transaction type: 1\\\",\\\"v\\\",e[0])}t.r=Ga(e[1],32),t.s=Ga(e[2],32);try{const e=nu(r(t));t.from=Fc(e,{r:t.r,s:t.s,recoveryParam:t.v})}catch(t){}}function Kc(t){const e=Pa(t);if(e[0]>127)return function(t){const e=fu(t);9!==e.length&&6!==e.length&&Tc.throwArgumentError(\\\"invalid raw transaction\\\",\\\"rawTransaction\\\",t);const r={nonce:jc(e[0]).toNumber(),gasPrice:jc(e[1]),gasLimit:jc(e[2]),to:Uc(e[3]),value:jc(e[4]),data:e[5],chainId:0};if(6===e.length)return r;try{r.v=Xa.from(e[6]).toNumber()}catch(t){return r}if(r.r=Ga(e[7],32),r.s=Ga(e[8],32),Xa.from(r.r).isZero()&&Xa.from(r.s).isZero())r.chainId=r.v,r.v=0;else{r.chainId=Math.floor((r.v-35)/2),r.chainId<0&&(r.chainId=0);let n=r.v-27;const i=e.slice(0,6);0!==r.chainId&&(i.push(ja(r.chainId)),i.push(\\\"0x\\\"),i.push(\\\"0x\\\"),n-=2*r.chainId+8);const o=nu(uu(i));try{r.from=Fc(o,{r:ja(r.r),s:ja(r.s),recoveryParam:n})}catch(t){}r.hash=nu(t)}return r.type=null,r}(e);switch(e[0]){case 1:return function(t){const e=fu(t.slice(1));8!==e.length&&11!==e.length&&Tc.throwArgumentError(\\\"invalid component count for transaction type: 1\\\",\\\"payload\\\",ja(t));const r={type:1,chainId:jc(e[0]).toNumber(),nonce:jc(e[1]).toNumber(),gasPrice:jc(e[2]),gasLimit:jc(e[3]),to:Uc(e[4]),value:jc(e[5]),data:e[6],accessList:qc(e[7])};return 8===e.length||(r.hash=nu(t),Jc(r,e.slice(8),zc)),r}(e);case 2:return function(t){const e=fu(t.slice(1));9!==e.length&&12!==e.length&&Tc.throwArgumentError(\\\"invalid component count for transaction type: 2\\\",\\\"payload\\\",ja(t));const r=jc(e[2]),n=jc(e[3]),i={type:2,chainId:jc(e[0]).toNumber(),nonce:jc(e[1]).toNumber(),maxPriorityFeePerGas:r,maxFeePerGas:n,gasPrice:null,gasLimit:jc(e[4]),to:Uc(e[5]),value:jc(e[6]),data:e[7],accessList:qc(e[8])};return 9===e.length||(i.hash=nu(t),Jc(i,e.slice(9),Hc)),i}(e)}return Tc.throwError(`unsupported transaction type: ${e[0]}`,aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"parseTransaction\\\",transactionType:e[0]})}function Vc(t){t=atob(t);const e=[];for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));return Pa(e)}function Wc(t){t=Pa(t);let e=\\\"\\\";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return btoa(e)}var Xc=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};function Qc(t,e){return Xc(this,void 0,void 0,(function*(){null==e&&(e={});const r={method:e.method||\\\"GET\\\",headers:e.headers||{},body:e.body||void 0};if(!0!==e.skipFetchSetup&&(r.mode=\\\"cors\\\",r.cache=\\\"no-cache\\\",r.credentials=\\\"same-origin\\\",r.redirect=\\\"follow\\\",r.referrer=\\\"client\\\"),null!=e.fetchOptions){const t=e.fetchOptions;t.mode&&(r.mode=t.mode),t.cache&&(r.cache=t.cache),t.credentials&&(r.credentials=t.credentials),t.redirect&&(r.redirect=t.redirect),t.referrer&&(r.referrer=t.referrer)}const n=yield fetch(t,r),i=yield n.arrayBuffer(),o={};return n.headers.forEach?n.headers.forEach(((t,e)=>{o[e.toLowerCase()]=t})):n.headers.keys().forEach((t=>{o[t.toLowerCase()]=n.headers.get(t)})),{headers:o,statusCode:n.status,statusMessage:n.statusText,body:Pa(new Uint8Array(i))}}))}var Yc=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Zc=new aa(\\\"web/5.7.1\\\");function tl(t){return new Promise((e=>{setTimeout(e,t)}))}function el(t,e){if(null==t)return null;if(\\\"string\\\"==typeof t)return t;if(ka(t)){if(e&&(\\\"text\\\"===e.split(\\\"/\\\")[0]||\\\"application/json\\\"===e.split(\\\";\\\")[0].trim()))try{return _u(t)}catch(t){}return ja(t)}return t}function rl(t,e,r){let n=null;if(null!=e){n=xu(e);const r=\\\"string\\\"==typeof t?{url:t}:da(t);if(r.headers){0!==Object.keys(r.headers).filter((t=>\\\"content-type\\\"===t.toLowerCase())).length||(r.headers=da(r.headers),r.headers[\\\"content-type\\\"]=\\\"application/json\\\")}else r.headers={\\\"content-type\\\":\\\"application/json\\\"};t=r}return function(t,e,r){const n=\\\"object\\\"==typeof t&&null!=t.throttleLimit?t.throttleLimit:12;Zc.assertArgument(n>0&&n%1==0,\\\"invalid connection throttle limit\\\",\\\"connection.throttleLimit\\\",n);const i=\\\"object\\\"==typeof t?t.throttleCallback:null,o=\\\"object\\\"==typeof t&&\\\"number\\\"==typeof t.throttleSlotInterval?t.throttleSlotInterval:100;Zc.assertArgument(o>0&&o%1==0,\\\"invalid connection throttle slot interval\\\",\\\"connection.throttleSlotInterval\\\",o);const s=\\\"object\\\"==typeof t&&!!t.errorPassThrough,a={};let u=null;const c={method:\\\"GET\\\"};let l=!1,f=12e4;if(\\\"string\\\"==typeof t)u=t;else if(\\\"object\\\"==typeof t){if(null!=t&&null!=t.url||Zc.throwArgumentError(\\\"missing URL\\\",\\\"connection.url\\\",t),u=t.url,\\\"number\\\"==typeof t.timeout&&t.timeout>0&&(f=t.timeout),t.headers)for(const e in t.headers)a[e.toLowerCase()]={key:e,value:String(t.headers[e])},[\\\"if-none-match\\\",\\\"if-modified-since\\\"].indexOf(e.toLowerCase())>=0&&(l=!0);if(c.allowGzip=!!t.allowGzip,null!=t.user&&null!=t.password){\\\"https:\\\"!==u.substring(0,6)&&!0!==t.allowInsecureAuthentication&&Zc.throwError(\\\"basic authentication requires a secure https url\\\",aa.errors.INVALID_ARGUMENT,{argument:\\\"url\\\",url:u,user:t.user,password:\\\"[REDACTED]\\\"});const e=t.user+\\\":\\\"+t.password;a.authorization={key:\\\"Authorization\\\",value:\\\"Basic \\\"+Wc(xu(e))}}null!=t.skipFetchSetup&&(c.skipFetchSetup=!!t.skipFetchSetup),null!=t.fetchOptions&&(c.fetchOptions=da(t.fetchOptions))}const h=new RegExp(\\\"^data:([^;:]*)?(;base64)?,(.*)$\\\",\\\"i\\\"),d=u?u.match(h):null;if(d)try{const t={statusCode:200,statusMessage:\\\"OK\\\",headers:{\\\"content-type\\\":d[1]||\\\"text/plain\\\"},body:d[2]?Vc(d[3]):(p=d[3],xu(p.replace(/%([0-9a-f][0-9a-f])/gi,((t,e)=>String.fromCharCode(parseInt(e,16))))))};let e=t.body;return r&&(e=r(t.body,t)),Promise.resolve(e)}catch(t){Zc.throwError(\\\"processing response error\\\",aa.errors.SERVER_ERROR,{body:el(d[1],d[2]),error:t,requestBody:null,requestMethod:\\\"GET\\\",url:u})}var p;e&&(c.method=\\\"POST\\\",c.body=e,null==a[\\\"content-type\\\"]&&(a[\\\"content-type\\\"]={key:\\\"Content-Type\\\",value:\\\"application/octet-stream\\\"}),null==a[\\\"content-length\\\"]&&(a[\\\"content-length\\\"]={key:\\\"Content-Length\\\",value:String(e.length)}));const g={};Object.keys(a).forEach((t=>{const e=a[t];g[e.key]=e.value})),c.headers=g;const m=function(){let t=null;return{promise:new Promise((function(e,r){f&&(t=setTimeout((()=>{null!=t&&(t=null,r(Zc.makeError(\\\"timeout\\\",aa.errors.TIMEOUT,{requestBody:el(c.body,g[\\\"content-type\\\"]),requestMethod:c.method,timeout:f,url:u})))}),f))})),cancel:function(){null!=t&&(clearTimeout(t),t=null)}}}(),y=function(){return Yc(this,void 0,void 0,(function*(){for(let t=0;t<n;t++){let e=null;try{if(e=yield Qc(u,c),t<n)if(301===e.statusCode||302===e.statusCode){const t=e.headers.location||\\\"\\\";if(\\\"GET\\\"===c.method&&t.match(/^https:/)){u=e.headers.location;continue}}else if(429===e.statusCode){let r=!0;if(i&&(r=yield i(t,u)),r){let r=0;const n=e.headers[\\\"retry-after\\\"];r=\\\"string\\\"==typeof n&&n.match(/^[1-9][0-9]*$/)?1e3*parseInt(n):o*parseInt(String(Math.random()*Math.pow(2,t))),yield tl(r);continue}}}catch(t){e=t.response,null==e&&(m.cancel(),Zc.throwError(\\\"missing response\\\",aa.errors.SERVER_ERROR,{requestBody:el(c.body,g[\\\"content-type\\\"]),requestMethod:c.method,serverError:t,url:u}))}let a=e.body;if(l&&304===e.statusCode?a=null:!s&&(e.statusCode<200||e.statusCode>=300)&&(m.cancel(),Zc.throwError(\\\"bad response\\\",aa.errors.SERVER_ERROR,{status:e.statusCode,headers:e.headers,body:el(a,e.headers?e.headers[\\\"content-type\\\"]:null),requestBody:el(c.body,g[\\\"content-type\\\"]),requestMethod:c.method,url:u})),r)try{const t=yield r(a,e);return m.cancel(),t}catch(r){if(r.throttleRetry&&t<n){let e=!0;if(i&&(e=yield i(t,u)),e){const e=o*parseInt(String(Math.random()*Math.pow(2,t)));yield tl(e);continue}}m.cancel(),Zc.throwError(\\\"processing response error\\\",aa.errors.SERVER_ERROR,{body:el(a,e.headers?e.headers[\\\"content-type\\\"]:null),error:r,requestBody:el(c.body,g[\\\"content-type\\\"]),requestMethod:c.method,url:u})}return m.cancel(),a}return Zc.throwError(\\\"failed response\\\",aa.errors.SERVER_ERROR,{requestBody:el(c.body,g[\\\"content-type\\\"]),requestMethod:c.method,url:u})}))}();return Promise.race([m.promise,y])}(t,n,((t,e)=>{let n=null;if(null!=t)try{n=JSON.parse(_u(t))}catch(e){Zc.throwError(\\\"invalid JSON\\\",aa.errors.SERVER_ERROR,{body:t,error:e})}return r&&(n=r(n,e)),n}))}function nl(t,e){return e||(e={}),null==(e=da(e)).floor&&(e.floor=0),null==e.ceiling&&(e.ceiling=1e4),null==e.interval&&(e.interval=250),new Promise((function(r,n){let i=null,o=!1;const s=()=>!o&&(o=!0,i&&clearTimeout(i),!0);e.timeout&&(i=setTimeout((()=>{s()&&n(new Error(\\\"timeout\\\"))}),e.timeout));const a=e.retryLimit;let u=0;!function i(){return t().then((function(t){if(void 0!==t)s()&&r(t);else if(e.oncePoll)e.oncePoll.once(\\\"poll\\\",i);else if(e.onceBlock)e.onceBlock.once(\\\"block\\\",i);else if(!o){if(u++,u>a)return void(s()&&n(new Error(\\\"retry limit reached\\\")));let t=e.interval*parseInt(String(Math.random()*Math.pow(2,u)));t<e.floor&&(t=e.floor),t>e.ceiling&&(t=e.ceiling),setTimeout(i,t)}return null}),(function(t){s()&&n(t)}))}()}))}var il=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const ol=new aa(\\\"abstract-provider/5.7.0\\\");class sl extends va{static isForkEvent(t){return!(!t||!t._isForkEvent)}}class al{constructor(){ol.checkAbstract(new.target,al),la(this,\\\"_isProvider\\\",!0)}getFeeData(){return il(this,void 0,void 0,(function*(){const{block:t,gasPrice:e}=yield ha({block:this.getBlock(\\\"latest\\\"),gasPrice:this.getGasPrice().catch((t=>null))});let r=null,n=null,i=null;return t&&t.baseFeePerGas&&(r=t.baseFeePerGas,i=Xa.from(\\\"1500000000\\\"),n=t.baseFeePerGas.mul(2).add(i)),{lastBaseFeePerGas:r,maxFeePerGas:n,maxPriorityFeePerGas:i,gasPrice:e}}))}addListener(t,e){return this.on(t,e)}removeListener(t,e){return this.off(t,e)}static isProvider(t){return!(!t||!t._isProvider)}}class ul{constructor(t){la(this,\\\"alphabet\\\",t),la(this,\\\"base\\\",t.length),la(this,\\\"_alphabetMap\\\",{}),la(this,\\\"_leader\\\",t.charAt(0));for(let e=0;e<t.length;e++)this._alphabetMap[t.charAt(e)]=e}encode(t){let e=Pa(t);if(0===e.length)return\\\"\\\";let r=[0];for(let t=0;t<e.length;++t){let n=e[t];for(let t=0;t<r.length;++t)n+=r[t]<<8,r[t]=n%this.base,n=n/this.base|0;for(;n>0;)r.push(n%this.base),n=n/this.base|0}let n=\\\"\\\";for(let t=0;0===e[t]&&t<e.length-1;++t)n+=this._leader;for(let t=r.length-1;t>=0;--t)n+=this.alphabet[r[t]];return n}decode(t){if(\\\"string\\\"!=typeof t)throw new TypeError(\\\"Expected String\\\");let e=[];if(0===t.length)return new Uint8Array(e);e.push(0);for(let r=0;r<t.length;r++){let n=this._alphabetMap[t[r]];if(void 0===n)throw new Error(\\\"Non-base\\\"+this.base+\\\" character\\\");let i=n;for(let t=0;t<e.length;++t)i+=e[t]*this.base,e[t]=255&i,i>>=8;for(;i>0;)e.push(255&i),i>>=8}for(let r=0;t[r]===this._leader&&r<t.length-1;++r)e.push(0);return Pa(new Uint8Array(e.reverse()))}}new ul(\\\"abcdefghijklmnopqrstuvwxyz234567\\\");const cl=new ul(\\\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\\\");function ll(t,e){null==e&&(e=1);const r=[],n=r.forEach,i=function(t,e){n.call(t,(function(t){e>0&&Array.isArray(t)?i(t,e-1):r.push(t)}))};return i(t,e),r}function fl(t){return function(t){let e=0;return()=>t[e++]}(function(t){let e=0;function r(){return t[e++]<<8|t[e++]}let n=r(),i=1,o=[0,1];for(let t=1;t<n;t++)o.push(i+=r());let s=r(),a=e;e+=s;let u=0,c=0;function l(){return 0==u&&(c=c<<8|t[e++],u=8),c>>--u&1}const f=Math.pow(2,31),h=f>>>1,d=h>>1,p=f-1;let g=0;for(let t=0;t<31;t++)g=g<<1|l();let m=[],y=0,v=f;for(;;){let t=Math.floor(((g-y+1)*i-1)/v),e=0,r=n;for(;r-e>1;){let n=e+r>>>1;t<o[n]?r=n:e=n}if(0==e)break;m.push(e);let s=y+Math.floor(v*o[e]/i),a=y+Math.floor(v*o[e+1]/i)-1;for(;!((s^a)&h);)g=g<<1&p|l(),s=s<<1&p,a=a<<1&p|1;for(;s&~a&d;)g=g&h|g<<1&p>>>1|l(),s=s<<1^h,a=(a^h)<<1|h|1;y=s,v=1+a-s}let w=n-4;return m.map((e=>{switch(e-w){case 3:return w+65792+(t[a++]<<16|t[a++]<<8|t[a++]);case 2:return w+256+(t[a++]<<8|t[a++]);case 1:return w+t[a++];default:return e-1}}))}(t))}function hl(t){return 1&t?~t>>1:t>>1}function dl(t,e){let r=Array(t);for(let n=0,i=-1;n<t;n++)r[n]=i+=1+e();return r}function pl(t,e){let r=Array(t);for(let n=0,i=0;n<t;n++)r[n]=i+=hl(e());return r}function gl(t,e){let r=dl(t(),t),n=t(),i=dl(n,t),o=function(t,e){let r=Array(t);for(let n=0;n<t;n++)r[n]=1+e();return r}(n,t);for(let t=0;t<n;t++)for(let e=0;e<o[t];e++)r.push(i[t]+e);return e?r.map((t=>e[t])):r}function ml(t,e,r){let n=Array(t).fill(void 0).map((()=>[]));for(let i=0;i<e;i++)pl(t,r).forEach(((t,e)=>n[e].push(t)));return n}function yl(t,e){let r=1+e(),n=e(),i=function(t){let e=[];for(;;){let r=t();if(0==r)break;e.push(r)}return e}(e);return ll(ml(i.length,1+t,e).map(((t,e)=>{const o=t[0],s=t.slice(1);return Array(i[e]).fill(void 0).map(((t,e)=>{let i=e*n;return[o+e*r,s.map((t=>t+i))]}))})))}function vl(t,e){return ml(1+e(),1+t,e).map((t=>[t[0],t.slice(1)]))}const wl=fl(Vc(\\\"\\\")),bl=new Set(gl(wl)),Al=new Set(gl(wl)),El=function(t){let e=[];for(;;){let r=t();if(0==r)break;e.push(yl(r,t))}for(;;){let r=t()-1;if(r<0)break;e.push(vl(r,t))}return function(t){const e={};for(let r=0;r<t.length;r++){const n=t[r];e[n[0]]=n[1]}return e}(ll(e))}(wl),Sl=function(t){let e=gl(t).sort(((t,e)=>t-e));return function r(){let n=[];for(;;){let i=gl(t,e);if(0==i.length)break;n.push({set:new Set(i),node:r()})}n.sort(((t,e)=>e.set.size-t.set.size));let i=t(),o=i%3;i=i/3|0;let s=!!(1&i);return i>>=1,{branches:n,valid:o,fe0f:s,save:1==i,check:2==i}}()}(wl),Rl=45,Il=95;function xl(t){return function(t,e=Au.current){return Iu(xu(t,e))}(t)}function _l(t){return t.filter((t=>65039!=t))}function Nl(t){for(let e of t.split(\\\".\\\")){let t=xl(e);try{for(let e=t.lastIndexOf(Il)-1;e>=0;e--)if(t[e]!==Il)throw new Error(\\\"underscore only allowed at start\\\");if(t.length>=4&&t.every((t=>t<128))&&t[2]===Rl&&t[3]===Rl)throw new Error(\\\"invalid label extension\\\")}catch(t){throw new Error(`Invalid label \\\"${e}\\\": ${t.message}`)}}return t}function Ml(t){return Nl(function(t,e){let r=xl(t).reverse(),n=[];for(;r.length;){let t=kl(r);if(t){n.push(...e(t));continue}let i=r.pop();if(bl.has(i)){n.push(i);continue}if(Al.has(i))continue;let o=El[i];if(!o)throw new Error(`Disallowed codepoint: 0x${i.toString(16).toUpperCase()}`);n.push(...o)}return Nl((i=String.fromCodePoint(...n),i.normalize(\\\"NFC\\\")));var i}(t,_l))}function kl(t,e){var r;let n,i,o=Sl,s=[],a=t.length;for(e&&(e.length=0);a;){let u=t[--a];if(o=null===(r=o.branches.find((t=>t.set.has(u))))||void 0===r?void 0:r.node,!o)break;if(o.save)i=u;else if(o.check&&u===i)break;s.push(u),o.fe0f&&(s.push(65039),a>0&&65039==t[a-1]&&a--),o.valid&&(n=s.slice(),2==o.valid&&n.splice(1,1),e&&e.push(...t.slice(a).reverse()),t.length=a)}return n}const Ol=new aa(wu),Cl=new Uint8Array(32);function Pl(t){if(0===t.length)throw new Error(\\\"invalid ENS name; empty component\\\");return t}function Bl(t){const e=xu(Ml(t)),r=[];if(0===t.length)return r;let n=0;for(let t=0;t<e.length;t++){46===e[t]&&(r.push(Pl(e.slice(n,t))),n=t+1)}if(n>=e.length)throw new Error(\\\"invalid ENS name; empty component\\\");return r.push(Pl(e.slice(n))),r}function Tl(t){\\\"string\\\"!=typeof t&&Ol.throwArgumentError(\\\"invalid ENS name; not a string\\\",\\\"name\\\",t);let e=Cl;const r=Bl(t);for(;r.length;)e=nu(Ba([e,nu(r.pop())]));return ja(e)}Cl.fill(0);const Ll=new aa(\\\"networks/5.7.1\\\");function Ul(t){const e=function(e,r){null==r&&(r={});const n=[];if(e.InfuraProvider&&\\\"-\\\"!==r.infura)try{n.push(new e.InfuraProvider(t,r.infura))}catch(t){}if(e.EtherscanProvider&&\\\"-\\\"!==r.etherscan)try{n.push(new e.EtherscanProvider(t,r.etherscan))}catch(t){}if(e.AlchemyProvider&&\\\"-\\\"!==r.alchemy)try{n.push(new e.AlchemyProvider(t,r.alchemy))}catch(t){}if(e.PocketProvider&&\\\"-\\\"!==r.pocket){const i=[\\\"goerli\\\",\\\"ropsten\\\",\\\"rinkeby\\\",\\\"sepolia\\\"];try{const o=new e.PocketProvider(t,r.pocket);o.network&&-1===i.indexOf(o.network.name)&&n.push(o)}catch(t){}}if(e.CloudflareProvider&&\\\"-\\\"!==r.cloudflare)try{n.push(new e.CloudflareProvider(t))}catch(t){}if(e.AnkrProvider&&\\\"-\\\"!==r.ankr)try{const i=[\\\"ropsten\\\"],o=new e.AnkrProvider(t,r.ankr);o.network&&-1===i.indexOf(o.network.name)&&n.push(o)}catch(t){}if(0===n.length)return null;if(e.FallbackProvider){let i=1;return null!=r.quorum?i=r.quorum:\\\"homestead\\\"===t&&(i=2),new e.FallbackProvider(n,i)}return n[0]};return e.renetwork=function(t){return Ul(t)},e}function jl(t,e){const r=function(r,n){return r.JsonRpcProvider?new r.JsonRpcProvider(t,e):null};return r.renetwork=function(e){return jl(t,e)},r}const Fl={chainId:1,ensAddress:\\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",name:\\\"homestead\\\",_defaultProvider:Ul(\\\"homestead\\\")},Dl={chainId:3,ensAddress:\\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",name:\\\"ropsten\\\",_defaultProvider:Ul(\\\"ropsten\\\")},$l={chainId:63,name:\\\"classicMordor\\\",_defaultProvider:jl(\\\"https://www.ethercluster.com/mordor\\\",\\\"classicMordor\\\")},ql={unspecified:{chainId:0,name:\\\"unspecified\\\"},homestead:Fl,mainnet:Fl,morden:{chainId:2,name:\\\"morden\\\"},ropsten:Dl,testnet:Dl,rinkeby:{chainId:4,ensAddress:\\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",name:\\\"rinkeby\\\",_defaultProvider:Ul(\\\"rinkeby\\\")},kovan:{chainId:42,name:\\\"kovan\\\",_defaultProvider:Ul(\\\"kovan\\\")},goerli:{chainId:5,ensAddress:\\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",name:\\\"goerli\\\",_defaultProvider:Ul(\\\"goerli\\\")},kintsugi:{chainId:1337702,name:\\\"kintsugi\\\"},sepolia:{chainId:11155111,name:\\\"sepolia\\\",_defaultProvider:Ul(\\\"sepolia\\\")},classic:{chainId:61,name:\\\"classic\\\",_defaultProvider:jl(\\\"https://www.ethercluster.com/etc\\\",\\\"classic\\\")},classicMorden:{chainId:62,name:\\\"classicMorden\\\"},classicMordor:$l,classicTestnet:$l,classicKotti:{chainId:6,name:\\\"classicKotti\\\",_defaultProvider:jl(\\\"https://www.ethercluster.com/kotti\\\",\\\"classicKotti\\\")},xdai:{chainId:100,name:\\\"xdai\\\"},matic:{chainId:137,name:\\\"matic\\\",_defaultProvider:Ul(\\\"matic\\\")},maticmum:{chainId:80001,name:\\\"maticmum\\\"},optimism:{chainId:10,name:\\\"optimism\\\",_defaultProvider:Ul(\\\"optimism\\\")},\\\"optimism-kovan\\\":{chainId:69,name:\\\"optimism-kovan\\\"},\\\"optimism-goerli\\\":{chainId:420,name:\\\"optimism-goerli\\\"},arbitrum:{chainId:42161,name:\\\"arbitrum\\\"},\\\"arbitrum-rinkeby\\\":{chainId:421611,name:\\\"arbitrum-rinkeby\\\"},\\\"arbitrum-goerli\\\":{chainId:421613,name:\\\"arbitrum-goerli\\\"},bnb:{chainId:56,name:\\\"bnb\\\"},bnbt:{chainId:97,name:\\\"bnbt\\\"}};new aa(\\\"sha2/5.7.0\\\");function Gl(t){return\\\"0x\\\"+Ku().sha256().update(Pa(t)).digest(\\\"hex\\\")}var Hl=r(9674),zl=r.n(Hl);const Jl=new aa(wa);class Kl{constructor(){this.formats=this.getDefaultFormats()}getDefaultFormats(){const t={},e=this.address.bind(this),r=this.bigNumber.bind(this),n=this.blockTag.bind(this),i=this.data.bind(this),o=this.hash.bind(this),s=this.hex.bind(this),a=this.number.bind(this),u=this.type.bind(this);return t.transaction={hash:o,type:u,accessList:Kl.allowNull(this.accessList.bind(this),null),blockHash:Kl.allowNull(o,null),blockNumber:Kl.allowNull(a,null),transactionIndex:Kl.allowNull(a,null),confirmations:Kl.allowNull(a,null),from:e,gasPrice:Kl.allowNull(r),maxPriorityFeePerGas:Kl.allowNull(r),maxFeePerGas:Kl.allowNull(r),gasLimit:r,to:Kl.allowNull(e,null),value:r,nonce:a,data:i,r:Kl.allowNull(this.uint256),s:Kl.allowNull(this.uint256),v:Kl.allowNull(a),creates:Kl.allowNull(e,null),raw:Kl.allowNull(i)},t.transactionRequest={from:Kl.allowNull(e),nonce:Kl.allowNull(a),gasLimit:Kl.allowNull(r),gasPrice:Kl.allowNull(r),maxPriorityFeePerGas:Kl.allowNull(r),maxFeePerGas:Kl.allowNull(r),to:Kl.allowNull(e),value:Kl.allowNull(r),data:Kl.allowNull((t=>this.data(t,!0))),type:Kl.allowNull(a),accessList:Kl.allowNull(this.accessList.bind(this),null)},t.receiptLog={transactionIndex:a,blockNumber:a,transactionHash:o,address:e,topics:Kl.arrayOf(o),data:i,logIndex:a,blockHash:o},t.receipt={to:Kl.allowNull(this.address,null),from:Kl.allowNull(this.address,null),contractAddress:Kl.allowNull(e,null),transactionIndex:a,root:Kl.allowNull(s),gasUsed:r,logsBloom:Kl.allowNull(i),blockHash:o,transactionHash:o,logs:Kl.arrayOf(this.receiptLog.bind(this)),blockNumber:a,confirmations:Kl.allowNull(a,null),cumulativeGasUsed:r,effectiveGasPrice:Kl.allowNull(r),status:Kl.allowNull(a),type:u},t.block={hash:Kl.allowNull(o),parentHash:o,number:a,timestamp:a,nonce:Kl.allowNull(s),difficulty:this.difficulty.bind(this),gasLimit:r,gasUsed:r,miner:Kl.allowNull(e),extraData:i,transactions:Kl.allowNull(Kl.arrayOf(o)),baseFeePerGas:Kl.allowNull(r)},t.blockWithTransactions=da(t.block),t.blockWithTransactions.transactions=Kl.allowNull(Kl.arrayOf(this.transactionResponse.bind(this))),t.filter={fromBlock:Kl.allowNull(n,void 0),toBlock:Kl.allowNull(n,void 0),blockHash:Kl.allowNull(o,void 0),address:Kl.allowNull(e,void 0),topics:Kl.allowNull(this.topics.bind(this),void 0)},t.filterLog={blockNumber:Kl.allowNull(a),blockHash:Kl.allowNull(o),transactionIndex:a,removed:Kl.allowNull(this.boolean.bind(this)),address:e,data:Kl.allowFalsish(i,\\\"0x\\\"),topics:Kl.arrayOf(o),transactionHash:o,logIndex:a},t}accessList(t){return qc(t||[])}number(t){return\\\"0x\\\"===t?0:Xa.from(t).toNumber()}type(t){return\\\"0x\\\"===t||null==t?0:Xa.from(t).toNumber()}bigNumber(t){return Xa.from(t)}boolean(t){if(\\\"boolean\\\"==typeof t)return t;if(\\\"string\\\"==typeof t){if(\\\"true\\\"===(t=t.toLowerCase()))return!0;if(\\\"false\\\"===t)return!1}throw new Error(\\\"invalid boolean - \\\"+t)}hex(t,e){return\\\"string\\\"==typeof t&&(e||\\\"0x\\\"===t.substring(0,2)||(t=\\\"0x\\\"+t),La(t))?t.toLowerCase():Jl.throwArgumentError(\\\"invalid hash\\\",\\\"value\\\",t)}data(t,e){const r=this.hex(t,e);if(r.length%2!=0)throw new Error(\\\"invalid data; odd-length - \\\"+t);return r}address(t){return vu(t)}callAddress(t){if(!La(t,32))return null;const e=vu(Da(t,12));return\\\"0x0000000000000000000000000000000000000000\\\"===e?null:e}contractAddress(t){return function(t){let e=null;try{e=vu(t.from)}catch(e){hu.throwArgumentError(\\\"missing from address\\\",\\\"transaction\\\",t)}return vu(Da(nu(uu([e,Ta(Pa(Xa.from(t.nonce).toHexString()))])),12))}(t)}blockTag(t){if(null==t)return\\\"latest\\\";if(\\\"earliest\\\"===t)return\\\"0x0\\\";switch(t){case\\\"earliest\\\":return\\\"0x0\\\";case\\\"latest\\\":case\\\"pending\\\":case\\\"safe\\\":case\\\"finalized\\\":return t}if(\\\"number\\\"==typeof t||La(t))return qa(t);throw new Error(\\\"invalid blockTag\\\")}hash(t,e){const r=this.hex(t,e);return 32!==Fa(r)?Jl.throwArgumentError(\\\"invalid hash\\\",\\\"value\\\",t):r}difficulty(t){if(null==t)return null;const e=Xa.from(t);try{return e.toNumber()}catch(t){}return null}uint256(t){if(!La(t))throw new Error(\\\"invalid uint256\\\");return Ga(t,32)}_block(t,e){null!=t.author&&null==t.miner&&(t.miner=t.author);const r=null!=t._difficulty?t._difficulty:t.difficulty,n=Kl.check(e,t);return n._difficulty=null==r?null:Xa.from(r),n}block(t){return this._block(t,this.formats.block)}blockWithTransactions(t){return this._block(t,this.formats.blockWithTransactions)}transactionRequest(t){return Kl.check(this.formats.transactionRequest,t)}transactionResponse(t){null!=t.gas&&null==t.gasLimit&&(t.gasLimit=t.gas),t.to&&Xa.from(t.to).isZero()&&(t.to=\\\"0x0000000000000000000000000000000000000000\\\"),null!=t.input&&null==t.data&&(t.data=t.input),null==t.to&&null==t.creates&&(t.creates=this.contractAddress(t)),1!==t.type&&2!==t.type||null!=t.accessList||(t.accessList=[]);const e=Kl.check(this.formats.transaction,t);if(null!=t.chainId){let r=t.chainId;La(r)&&(r=Xa.from(r).toNumber()),e.chainId=r}else{let r=t.networkId;null==r&&null==e.v&&(r=t.chainId),La(r)&&(r=Xa.from(r).toNumber()),\\\"number\\\"!=typeof r&&null!=e.v&&(r=(e.v-35)/2,r<0&&(r=0),r=parseInt(r)),\\\"number\\\"!=typeof r&&(r=0),e.chainId=r}return e.blockHash&&\\\"x\\\"===e.blockHash.replace(/0/g,\\\"\\\")&&(e.blockHash=null),e}transaction(t){return Kc(t)}receiptLog(t){return Kl.check(this.formats.receiptLog,t)}receipt(t){const e=Kl.check(this.formats.receipt,t);if(null!=e.root)if(e.root.length<=4){const t=Xa.from(e.root).toNumber();0===t||1===t?(null!=e.status&&e.status!==t&&Jl.throwArgumentError(\\\"alt-root-status/status mismatch\\\",\\\"value\\\",{root:e.root,status:e.status}),e.status=t,delete e.root):Jl.throwArgumentError(\\\"invalid alt-root-status\\\",\\\"value.root\\\",e.root)}else 66!==e.root.length&&Jl.throwArgumentError(\\\"invalid root hash\\\",\\\"value.root\\\",e.root);return null!=e.status&&(e.byzantium=!0),e}topics(t){return Array.isArray(t)?t.map((t=>this.topics(t))):null!=t?this.hash(t,!0):null}filter(t){return Kl.check(this.formats.filter,t)}filterLog(t){return Kl.check(this.formats.filterLog,t)}static check(t,e){const r={};for(const n in t)try{const i=t[n](e[n]);void 0!==i&&(r[n]=i)}catch(t){throw t.checkKey=n,t.checkValue=e[n],t}return r}static allowNull(t,e){return function(r){return null==r?e:t(r)}}static allowFalsish(t,e){return function(r){return r?t(r):e}}static arrayOf(t){return function(e){if(!Array.isArray(e))throw new Error(\\\"not an array\\\");const r=[];return e.forEach((function(e){r.push(t(e))})),r}}}var Vl=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Wl=new aa(wa);function Xl(t){return null==t?\\\"null\\\":(32!==Fa(t)&&Wl.throwArgumentError(\\\"invalid topic\\\",\\\"topic\\\",t),t.toLowerCase())}function Ql(t){for(t=t.slice();t.length>0&&null==t[t.length-1];)t.pop();return t.map((t=>{if(Array.isArray(t)){const e={};t.forEach((t=>{e[Xl(t)]=!0}));const r=Object.keys(e);return r.sort(),r.join(\\\"|\\\")}return Xl(t)})).join(\\\"&\\\")}function Yl(t){if(\\\"string\\\"==typeof t){if(32===Fa(t=t.toLowerCase()))return\\\"tx:\\\"+t;if(-1===t.indexOf(\\\":\\\"))return t}else{if(Array.isArray(t))return\\\"filter:*:\\\"+Ql(t);if(sl.isForkEvent(t))throw Wl.warn(\\\"not implemented\\\"),new Error(\\\"not implemented\\\");if(t&&\\\"object\\\"==typeof t)return\\\"filter:\\\"+(t.address||\\\"*\\\")+\\\":\\\"+Ql(t.topics||[])}throw new Error(\\\"invalid event - \\\"+t)}function Zl(){return(new Date).getTime()}function tf(t){return new Promise((e=>{setTimeout(e,t)}))}const ef=[\\\"block\\\",\\\"network\\\",\\\"pending\\\",\\\"poll\\\"];class rf{constructor(t,e,r){la(this,\\\"tag\\\",t),la(this,\\\"listener\\\",e),la(this,\\\"once\\\",r),this._lastBlockNumber=-2,this._inflight=!1}get event(){switch(this.type){case\\\"tx\\\":return this.hash;case\\\"filter\\\":return this.filter}return this.tag}get type(){return this.tag.split(\\\":\\\")[0]}get hash(){const t=this.tag.split(\\\":\\\");return\\\"tx\\\"!==t[0]?null:t[1]}get filter(){const t=this.tag.split(\\\":\\\");if(\\\"filter\\\"!==t[0])return null;const e=t[1],r=\\\"\\\"===(n=t[2])?[]:n.split(/&/g).map((t=>{if(\\\"\\\"===t)return[];const e=t.split(\\\"|\\\").map((t=>\\\"null\\\"===t?null:t));return 1===e.length?e[0]:e}));var n;const i={};return r.length>0&&(i.topics=r),e&&\\\"*\\\"!==e&&(i.address=e),i}pollable(){return this.tag.indexOf(\\\":\\\")>=0||ef.indexOf(this.tag)>=0}}const nf={0:{symbol:\\\"btc\\\",p2pkh:0,p2sh:5,prefix:\\\"bc\\\"},2:{symbol:\\\"ltc\\\",p2pkh:48,p2sh:50,prefix:\\\"ltc\\\"},3:{symbol:\\\"doge\\\",p2pkh:30,p2sh:22},60:{symbol:\\\"eth\\\",ilk:\\\"eth\\\"},61:{symbol:\\\"etc\\\",ilk:\\\"eth\\\"},700:{symbol:\\\"xdai\\\",ilk:\\\"eth\\\"}};function of(t){return Ga(Xa.from(t).toHexString(),32)}function sf(t){return cl.encode(Ba([t,Da(Gl(Gl(t)),0,4)]))}const af=new RegExp(\\\"^(ipfs)://(.*)$\\\",\\\"i\\\"),uf=[new RegExp(\\\"^(https)://(.*)$\\\",\\\"i\\\"),new RegExp(\\\"^(data):(.*)$\\\",\\\"i\\\"),af,new RegExp(\\\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\\\",\\\"i\\\")];function cf(t,e){try{return _u(lf(t,e))}catch(t){}return null}function lf(t,e){if(\\\"0x\\\"===t)return null;const r=Xa.from(Da(t,e,e+32)).toNumber(),n=Xa.from(Da(t,r,r+32)).toNumber();return Da(t,r+32,r+32+n)}function ff(t){return t.match(/^ipfs:\\\\/\\\\/ipfs\\\\//i)?t=t.substring(12):t.match(/^ipfs:\\\\/\\\\//i)?t=t.substring(7):Wl.throwArgumentError(\\\"unsupported IPFS format\\\",\\\"link\\\",t),`https://gateway.ipfs.io/ipfs/${t}`}function hf(t){const e=Pa(t);if(e.length>32)throw new Error(\\\"internal; should not happen\\\");const r=new Uint8Array(32);return r.set(e,32-e.length),r}function df(t){if(t.length%32==0)return t;const e=new Uint8Array(32*Math.ceil(t.length/32));return e.set(t),e}function pf(t){const e=[];let r=0;for(let n=0;n<t.length;n++)e.push(null),r+=32;for(let n=0;n<t.length;n++){const i=Pa(t[n]);e[n]=hf(r),e.push(hf(i.length)),e.push(df(i)),r+=32+32*Math.ceil(i.length/32)}return $a(e)}class gf{constructor(t,e,r,n){la(this,\\\"provider\\\",t),la(this,\\\"name\\\",r),la(this,\\\"address\\\",t.formatter.address(e)),la(this,\\\"_resolvedAddress\\\",n)}supportsWildcard(){return this._supportsEip2544||(this._supportsEip2544=this.provider.call({to:this.address,data:\\\"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\\\"}).then((t=>Xa.from(t).eq(1))).catch((t=>{if(t.code===aa.errors.CALL_EXCEPTION)return!1;throw this._supportsEip2544=null,t}))),this._supportsEip2544}_fetch(t,e){return Vl(this,void 0,void 0,(function*(){const r={to:this.address,ccipReadEnabled:!0,data:$a([t,Tl(this.name),e||\\\"0x\\\"])};let n=!1;var i;(yield this.supportsWildcard())&&(n=!0,r.data=$a([\\\"0x9061b923\\\",pf([(i=this.name,ja(Ba(Bl(i).map((t=>{if(t.length>63)throw new Error(\\\"invalid DNS encoded entry; length exceeds 63 bytes\\\");const e=new Uint8Array(t.length+1);return e.set(t,1),e[0]=e.length-1,e}))))+\\\"00\\\"),r.data])]));try{let t=yield this.provider.call(r);return Pa(t).length%32==4&&Wl.throwError(\\\"resolver threw error\\\",aa.errors.CALL_EXCEPTION,{transaction:r,data:t}),n&&(t=lf(t,0)),t}catch(t){if(t.code===aa.errors.CALL_EXCEPTION)return null;throw t}}))}_fetchBytes(t,e){return Vl(this,void 0,void 0,(function*(){const r=yield this._fetch(t,e);return null!=r?lf(r,0):null}))}_getAddress(t,e){const r=nf[String(t)];if(null==r&&Wl.throwError(`unsupported coin type: ${t}`,aa.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${t})`}),\\\"eth\\\"===r.ilk)return this.provider.formatter.address(e);const n=Pa(e);if(null!=r.p2pkh){const t=e.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(t){const e=parseInt(t[1],16);if(t[2].length===2*e&&e>=1&&e<=75)return sf(Ba([[r.p2pkh],\\\"0x\\\"+t[2]]))}}if(null!=r.p2sh){const t=e.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(t){const e=parseInt(t[1],16);if(t[2].length===2*e&&e>=1&&e<=75)return sf(Ba([[r.p2sh],\\\"0x\\\"+t[2]]))}}if(null!=r.prefix){const t=n[1];let e=n[0];if(0===e?20!==t&&32!==t&&(e=-1):e=-1,e>=0&&n.length===2+t&&t>=1&&t<=75){const t=zl().toWords(n.slice(2));return t.unshift(e),zl().encode(r.prefix,t)}}return null}getAddress(t){return Vl(this,void 0,void 0,(function*(){if(null==t&&(t=60),60===t)try{const t=yield this._fetch(\\\"0x3b3b57de\\\");return\\\"0x\\\"===t||\\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\"===t?null:this.provider.formatter.callAddress(t)}catch(t){if(t.code===aa.errors.CALL_EXCEPTION)return null;throw t}const e=yield this._fetchBytes(\\\"0xf1cb7e06\\\",of(t));if(null==e||\\\"0x\\\"===e)return null;const r=this._getAddress(t,e);return null==r&&Wl.throwError(\\\"invalid or unsupported coin data\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${t})`,coinType:t,data:e}),r}))}getAvatar(){return Vl(this,void 0,void 0,(function*(){const t=[{type:\\\"name\\\",content:this.name}];try{const e=yield this.getText(\\\"avatar\\\");if(null==e)return null;for(let r=0;r<uf.length;r++){const n=e.match(uf[r]);if(null==n)continue;const i=n[1].toLowerCase();switch(i){case\\\"https\\\":return t.push({type:\\\"url\\\",content:e}),{linkage:t,url:e};case\\\"data\\\":return t.push({type:\\\"data\\\",content:e}),{linkage:t,url:e};case\\\"ipfs\\\":return t.push({type:\\\"ipfs\\\",content:e}),{linkage:t,url:ff(e)};case\\\"erc721\\\":case\\\"erc1155\\\":{const r=\\\"erc721\\\"===i?\\\"0xc87b56dd\\\":\\\"0x0e89341c\\\";t.push({type:i,content:e});const o=this._resolvedAddress||(yield this.getAddress()),s=(n[2]||\\\"\\\").split(\\\"/\\\");if(2!==s.length)return null;const a=yield this.provider.formatter.address(s[0]),u=Ga(Xa.from(s[1]).toHexString(),32);if(\\\"erc721\\\"===i){const e=this.provider.formatter.callAddress(yield this.provider.call({to:a,data:$a([\\\"0x6352211e\\\",u])}));if(o!==e)return null;t.push({type:\\\"owner\\\",content:e})}else if(\\\"erc1155\\\"===i){const e=Xa.from(yield this.provider.call({to:a,data:$a([\\\"0x00fdd58e\\\",Ga(o,32),u])}));if(e.isZero())return null;t.push({type:\\\"balance\\\",content:e.toString()})}const c={to:this.provider.formatter.address(s[0]),data:$a([r,u])};let l=cf(yield this.provider.call(c),0);if(null==l)return null;t.push({type:\\\"metadata-url-base\\\",content:l}),\\\"erc1155\\\"===i&&(l=l.replace(\\\"{id}\\\",u.substring(2)),t.push({type:\\\"metadata-url-expanded\\\",content:l})),l.match(/^ipfs:/i)&&(l=ff(l)),t.push({type:\\\"metadata-url\\\",content:l});const f=yield rl(l);if(!f)return null;t.push({type:\\\"metadata\\\",content:JSON.stringify(f)});let h=f.image;if(\\\"string\\\"!=typeof h)return null;if(h.match(/^(https:\\\\/\\\\/|data:)/i));else{if(null==h.match(af))return null;t.push({type:\\\"url-ipfs\\\",content:h}),h=ff(h)}return t.push({type:\\\"url\\\",content:h}),{linkage:t,url:h}}}}}catch(t){}return null}))}getContentHash(){return Vl(this,void 0,void 0,(function*(){const t=yield this._fetchBytes(\\\"0xbc1c58d1\\\");if(null==t||\\\"0x\\\"===t)return null;const e=t.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(e){const t=parseInt(e[3],16);if(e[4].length===2*t)return\\\"ipfs://\\\"+cl.encode(\\\"0x\\\"+e[1])}const r=t.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(r){const t=parseInt(r[3],16);if(r[4].length===2*t)return\\\"ipns://\\\"+cl.encode(\\\"0x\\\"+r[1])}const n=t.match(/^0xe40101fa011b20([0-9a-f]*)$/);if(n&&64===n[1].length)return\\\"bzz://\\\"+n[1];const i=t.match(/^0x90b2c605([0-9a-f]*)$/);if(i&&68===i[1].length){const t={\\\"=\\\":\\\"\\\",\\\"+\\\":\\\"-\\\",\\\"/\\\":\\\"_\\\"};return\\\"sia://\\\"+Wc(\\\"0x\\\"+i[1]).replace(/[=+\\\\/]/g,(e=>t[e]))}return Wl.throwError(\\\"invalid or unsupported content hash data\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"getContentHash()\\\",data:t})}))}getText(t){return Vl(this,void 0,void 0,(function*(){let e=xu(t);e=Ba([of(64),of(e.length),e]),e.length%32!=0&&(e=Ba([e,Ga(\\\"0x\\\",32-t.length%32)]));const r=yield this._fetchBytes(\\\"0x59d1d43c\\\",ja(e));return null==r||\\\"0x\\\"===r?null:_u(r)}))}}let mf=null,yf=1;class vf extends al{constructor(t){if(super(),this._events=[],this._emitted={block:-2},this.disableCcipRead=!1,this.formatter=new.target.getFormatter(),la(this,\\\"anyNetwork\\\",\\\"any\\\"===t),this.anyNetwork&&(t=this.detectNetwork()),t instanceof Promise)this._networkPromise=t,t.catch((t=>{})),this._ready().catch((t=>{}));else{const e=fa(new.target,\\\"getNetwork\\\")(t);e?(la(this,\\\"_network\\\",e),this.emit(\\\"network\\\",e,null)):Wl.throwArgumentError(\\\"invalid network\\\",\\\"network\\\",t)}this._maxInternalBlockNumber=-1024,this._lastBlockNumber=-2,this._maxFilterBlockRange=10,this._pollingInterval=4e3,this._fastQueryDate=0}_ready(){return Vl(this,void 0,void 0,(function*(){if(null==this._network){let t=null;if(this._networkPromise)try{t=yield this._networkPromise}catch(t){}null==t&&(t=yield this.detectNetwork()),t||Wl.throwError(\\\"no network detected\\\",aa.errors.UNKNOWN_ERROR,{}),null==this._network&&(this.anyNetwork?this._network=t:la(this,\\\"_network\\\",t),this.emit(\\\"network\\\",t,null))}return this._network}))}get ready(){return nl((()=>this._ready().then((t=>t),(t=>{if(t.code!==aa.errors.NETWORK_ERROR||\\\"noNetwork\\\"!==t.event)throw t}))))}static getFormatter(){return null==mf&&(mf=new Kl),mf}static getNetwork(t){return function(t){if(null==t)return null;if(\\\"number\\\"==typeof t){for(const e in ql){const r=ql[e];if(r.chainId===t)return{name:r.name,chainId:r.chainId,ensAddress:r.ensAddress||null,_defaultProvider:r._defaultProvider||null}}return{chainId:t,name:\\\"unknown\\\"}}if(\\\"string\\\"==typeof t){const e=ql[t];return null==e?null:{name:e.name,chainId:e.chainId,ensAddress:e.ensAddress,_defaultProvider:e._defaultProvider||null}}const e=ql[t.name];if(!e)return\\\"number\\\"!=typeof t.chainId&&Ll.throwArgumentError(\\\"invalid network chainId\\\",\\\"network\\\",t),t;0!==t.chainId&&t.chainId!==e.chainId&&Ll.throwArgumentError(\\\"network chainId mismatch\\\",\\\"network\\\",t);let r=t._defaultProvider||null;var n;return null==r&&e._defaultProvider&&(r=(n=e._defaultProvider)&&\\\"function\\\"==typeof n.renetwork?e._defaultProvider.renetwork(t):e._defaultProvider),{name:t.name,chainId:e.chainId,ensAddress:t.ensAddress||e.ensAddress||null,_defaultProvider:r}}(null==t?\\\"homestead\\\":t)}ccipReadFetch(t,e,r){return Vl(this,void 0,void 0,(function*(){if(this.disableCcipRead||0===r.length)return null;const n=t.to.toLowerCase(),i=e.toLowerCase(),o=[];for(let t=0;t<r.length;t++){const e=r[t],s=e.replace(\\\"{sender}\\\",n).replace(\\\"{data}\\\",i),a=e.indexOf(\\\"{data}\\\")>=0?null:JSON.stringify({data:i,sender:n}),u=yield rl({url:s,errorPassThrough:!0},a,((t,e)=>(t.status=e.statusCode,t)));if(u.data)return u.data;const c=u.message||\\\"unknown error\\\";if(u.status>=400&&u.status<500)return Wl.throwError(`response not found during CCIP fetch: ${c}`,aa.errors.SERVER_ERROR,{url:e,errorMessage:c});o.push(c)}return Wl.throwError(`error encountered during CCIP fetch: ${o.map((t=>JSON.stringify(t))).join(\\\", \\\")}`,aa.errors.SERVER_ERROR,{urls:r,errorMessages:o})}))}_getInternalBlockNumber(t){return Vl(this,void 0,void 0,(function*(){if(yield this._ready(),t>0)for(;this._internalBlockNumber;){const e=this._internalBlockNumber;try{const r=yield e;if(Zl()-r.respTime<=t)return r.blockNumber;break}catch(t){if(this._internalBlockNumber===e)break}}const e=Zl(),r=ha({blockNumber:this.perform(\\\"getBlockNumber\\\",{}),networkError:this.getNetwork().then((t=>null),(t=>t))}).then((({blockNumber:t,networkError:n})=>{if(n)throw this._internalBlockNumber===r&&(this._internalBlockNumber=null),n;const i=Zl();return(t=Xa.from(t).toNumber())<this._maxInternalBlockNumber&&(t=this._maxInternalBlockNumber),this._maxInternalBlockNumber=t,this._setFastBlockNumber(t),{blockNumber:t,reqTime:e,respTime:i}}));return this._internalBlockNumber=r,r.catch((t=>{this._internalBlockNumber===r&&(this._internalBlockNumber=null)})),(yield r).blockNumber}))}poll(){return Vl(this,void 0,void 0,(function*(){const t=yf++,e=[];let r=null;try{r=yield this._getInternalBlockNumber(100+this.pollingInterval/2)}catch(t){return void this.emit(\\\"error\\\",t)}if(this._setFastBlockNumber(r),this.emit(\\\"poll\\\",t,r),r!==this._lastBlockNumber){if(-2===this._emitted.block&&(this._emitted.block=r-1),Math.abs(this._emitted.block-r)>1e3)Wl.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r})`),this.emit(\\\"error\\\",Wl.makeError(\\\"network block skew detected\\\",aa.errors.NETWORK_ERROR,{blockNumber:r,event:\\\"blockSkew\\\",previousBlockNumber:this._emitted.block})),this.emit(\\\"block\\\",r);else for(let t=this._emitted.block+1;t<=r;t++)this.emit(\\\"block\\\",t);this._emitted.block!==r&&(this._emitted.block=r,Object.keys(this._emitted).forEach((t=>{if(\\\"block\\\"===t)return;const e=this._emitted[t];\\\"pending\\\"!==e&&r-e>12&&delete this._emitted[t]}))),-2===this._lastBlockNumber&&(this._lastBlockNumber=r-1),this._events.forEach((t=>{switch(t.type){case\\\"tx\\\":{const r=t.hash;let n=this.getTransactionReceipt(r).then((t=>t&&null!=t.blockNumber?(this._emitted[\\\"t:\\\"+r]=t.blockNumber,this.emit(r,t),null):null)).catch((t=>{this.emit(\\\"error\\\",t)}));e.push(n);break}case\\\"filter\\\":if(!t._inflight){t._inflight=!0,-2===t._lastBlockNumber&&(t._lastBlockNumber=r-1);const n=t.filter;n.fromBlock=t._lastBlockNumber+1,n.toBlock=r;const i=n.toBlock-this._maxFilterBlockRange;i>n.fromBlock&&(n.fromBlock=i),n.fromBlock<0&&(n.fromBlock=0);const o=this.getLogs(n).then((e=>{t._inflight=!1,0!==e.length&&e.forEach((e=>{e.blockNumber>t._lastBlockNumber&&(t._lastBlockNumber=e.blockNumber),this._emitted[\\\"b:\\\"+e.blockHash]=e.blockNumber,this._emitted[\\\"t:\\\"+e.transactionHash]=e.blockNumber,this.emit(n,e)}))})).catch((e=>{this.emit(\\\"error\\\",e),t._inflight=!1}));e.push(o)}}})),this._lastBlockNumber=r,Promise.all(e).then((()=>{this.emit(\\\"didPoll\\\",t)})).catch((t=>{this.emit(\\\"error\\\",t)}))}else this.emit(\\\"didPoll\\\",t)}))}resetEventsBlock(t){this._lastBlockNumber=t-1,this.polling&&this.poll()}get network(){return this._network}detectNetwork(){return Vl(this,void 0,void 0,(function*(){return Wl.throwError(\\\"provider does not support network detection\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"provider.detectNetwork\\\"})}))}getNetwork(){return Vl(this,void 0,void 0,(function*(){const t=yield this._ready(),e=yield this.detectNetwork();if(t.chainId!==e.chainId){if(this.anyNetwork)return this._network=e,this._lastBlockNumber=-2,this._fastBlockNumber=null,this._fastBlockNumberPromise=null,this._fastQueryDate=0,this._emitted.block=-2,this._maxInternalBlockNumber=-1024,this._internalBlockNumber=null,this.emit(\\\"network\\\",e,t),yield tf(0),this._network;const r=Wl.makeError(\\\"underlying network changed\\\",aa.errors.NETWORK_ERROR,{event:\\\"changed\\\",network:t,detectedNetwork:e});throw this.emit(\\\"error\\\",r),r}return t}))}get blockNumber(){return this._getInternalBlockNumber(100+this.pollingInterval/2).then((t=>{this._setFastBlockNumber(t)}),(t=>{})),null!=this._fastBlockNumber?this._fastBlockNumber:-1}get polling(){return null!=this._poller}set polling(t){t&&!this._poller?(this._poller=setInterval((()=>{this.poll()}),this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout((()=>{this.poll(),this._bootstrapPoll=setTimeout((()=>{this._poller||this.poll(),this._bootstrapPoll=null}),this.pollingInterval)}),0))):!t&&this._poller&&(clearInterval(this._poller),this._poller=null)}get pollingInterval(){return this._pollingInterval}set pollingInterval(t){if(\\\"number\\\"!=typeof t||t<=0||parseInt(String(t))!=t)throw new Error(\\\"invalid polling interval\\\");this._pollingInterval=t,this._poller&&(clearInterval(this._poller),this._poller=setInterval((()=>{this.poll()}),this._pollingInterval))}_getFastBlockNumber(){const t=Zl();return t-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=t,this._fastBlockNumberPromise=this.getBlockNumber().then((t=>((null==this._fastBlockNumber||t>this._fastBlockNumber)&&(this._fastBlockNumber=t),this._fastBlockNumber)))),this._fastBlockNumberPromise}_setFastBlockNumber(t){null!=this._fastBlockNumber&&t<this._fastBlockNumber||(this._fastQueryDate=Zl(),(null==this._fastBlockNumber||t>this._fastBlockNumber)&&(this._fastBlockNumber=t,this._fastBlockNumberPromise=Promise.resolve(t)))}waitForTransaction(t,e,r){return Vl(this,void 0,void 0,(function*(){return this._waitForTransaction(t,null==e?1:e,r||0,null)}))}_waitForTransaction(t,e,r,n){return Vl(this,void 0,void 0,(function*(){const i=yield this.getTransactionReceipt(t);return(i?i.confirmations:0)>=e?i:new Promise(((i,o)=>{const s=[];let a=!1;const u=function(){return!!a||(a=!0,s.forEach((t=>{t()})),!1)},c=t=>{t.confirmations<e||u()||i(t)};if(this.on(t,c),s.push((()=>{this.removeListener(t,c)})),n){let r=n.startBlock,i=null;const c=s=>Vl(this,void 0,void 0,(function*(){a||(yield tf(1e3),this.getTransactionCount(n.from).then((l=>Vl(this,void 0,void 0,(function*(){if(!a){if(l<=n.nonce)r=s;else{{const e=yield this.getTransaction(t);if(e&&null!=e.blockNumber)return}for(null==i&&(i=r-3,i<n.startBlock&&(i=n.startBlock));i<=s;){if(a)return;const r=yield this.getBlockWithTransactions(i);for(let i=0;i<r.transactions.length;i++){const s=r.transactions[i];if(s.hash===t)return;if(s.from===n.from&&s.nonce===n.nonce){if(a)return;const r=yield this.waitForTransaction(s.hash,e);if(u())return;let i=\\\"replaced\\\";return s.data===n.data&&s.to===n.to&&s.value.eq(n.value)?i=\\\"repriced\\\":\\\"0x\\\"===s.data&&s.from===s.to&&s.value.isZero()&&(i=\\\"cancelled\\\"),void o(Wl.makeError(\\\"transaction was replaced\\\",aa.errors.TRANSACTION_REPLACED,{cancelled:\\\"replaced\\\"===i||\\\"cancelled\\\"===i,reason:i,replacement:this._wrapTransaction(s),hash:t,receipt:r}))}}i++}}a||this.once(\\\"block\\\",c)}}))),(t=>{a||this.once(\\\"block\\\",c)})))}));if(a)return;this.once(\\\"block\\\",c),s.push((()=>{this.removeListener(\\\"block\\\",c)}))}if(\\\"number\\\"==typeof r&&r>0){const t=setTimeout((()=>{u()||o(Wl.makeError(\\\"timeout exceeded\\\",aa.errors.TIMEOUT,{timeout:r}))}),r);t.unref&&t.unref(),s.push((()=>{clearTimeout(t)}))}}))}))}getBlockNumber(){return Vl(this,void 0,void 0,(function*(){return this._getInternalBlockNumber(0)}))}getGasPrice(){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield this.perform(\\\"getGasPrice\\\",{});try{return Xa.from(t)}catch(e){return Wl.throwError(\\\"bad result from backend\\\",aa.errors.SERVER_ERROR,{method:\\\"getGasPrice\\\",result:t,error:e})}}))}getBalance(t,e){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield ha({address:this._getAddress(t),blockTag:this._getBlockTag(e)}),n=yield this.perform(\\\"getBalance\\\",r);try{return Xa.from(n)}catch(t){return Wl.throwError(\\\"bad result from backend\\\",aa.errors.SERVER_ERROR,{method:\\\"getBalance\\\",params:r,result:n,error:t})}}))}getTransactionCount(t,e){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield ha({address:this._getAddress(t),blockTag:this._getBlockTag(e)}),n=yield this.perform(\\\"getTransactionCount\\\",r);try{return Xa.from(n).toNumber()}catch(t){return Wl.throwError(\\\"bad result from backend\\\",aa.errors.SERVER_ERROR,{method:\\\"getTransactionCount\\\",params:r,result:n,error:t})}}))}getCode(t,e){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield ha({address:this._getAddress(t),blockTag:this._getBlockTag(e)}),n=yield this.perform(\\\"getCode\\\",r);try{return ja(n)}catch(t){return Wl.throwError(\\\"bad result from backend\\\",aa.errors.SERVER_ERROR,{method:\\\"getCode\\\",params:r,result:n,error:t})}}))}getStorageAt(t,e,r){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const n=yield ha({address:this._getAddress(t),blockTag:this._getBlockTag(r),position:Promise.resolve(e).then((t=>qa(t)))}),i=yield this.perform(\\\"getStorageAt\\\",n);try{return ja(i)}catch(t){return Wl.throwError(\\\"bad result from backend\\\",aa.errors.SERVER_ERROR,{method:\\\"getStorageAt\\\",params:n,result:i,error:t})}}))}_wrapTransaction(t,e,r){if(null!=e&&32!==Fa(e))throw new Error(\\\"invalid response - sendTransaction\\\");const n=t;return null!=e&&t.hash!==e&&Wl.throwError(\\\"Transaction hash mismatch from Provider.sendTransaction.\\\",aa.errors.UNKNOWN_ERROR,{expectedHash:t.hash,returnedHash:e}),n.wait=(e,n)=>Vl(this,void 0,void 0,(function*(){let i;null==e&&(e=1),null==n&&(n=0),0!==e&&null!=r&&(i={data:t.data,from:t.from,nonce:t.nonce,to:t.to,value:t.value,startBlock:r});const o=yield this._waitForTransaction(t.hash,e,n,i);return null==o&&0===e?null:(this._emitted[\\\"t:\\\"+t.hash]=o.blockNumber,0===o.status&&Wl.throwError(\\\"transaction failed\\\",aa.errors.CALL_EXCEPTION,{transactionHash:t.hash,transaction:t,receipt:o}),o)})),n}sendTransaction(t){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield Promise.resolve(t).then((t=>ja(t))),r=this.formatter.transaction(t);null==r.confirmations&&(r.confirmations=0);const n=yield this._getInternalBlockNumber(100+2*this.pollingInterval);try{const t=yield this.perform(\\\"sendTransaction\\\",{signedTransaction:e});return this._wrapTransaction(r,t,n)}catch(t){throw t.transaction=r,t.transactionHash=r.hash,t}}))}_getTransactionRequest(t){return Vl(this,void 0,void 0,(function*(){const e=yield t,r={};return[\\\"from\\\",\\\"to\\\"].forEach((t=>{null!=e[t]&&(r[t]=Promise.resolve(e[t]).then((t=>t?this._getAddress(t):null)))})),[\\\"gasLimit\\\",\\\"gasPrice\\\",\\\"maxFeePerGas\\\",\\\"maxPriorityFeePerGas\\\",\\\"value\\\"].forEach((t=>{null!=e[t]&&(r[t]=Promise.resolve(e[t]).then((t=>t?Xa.from(t):null)))})),[\\\"type\\\"].forEach((t=>{null!=e[t]&&(r[t]=Promise.resolve(e[t]).then((t=>null!=t?t:null)))})),e.accessList&&(r.accessList=this.formatter.accessList(e.accessList)),[\\\"data\\\"].forEach((t=>{null!=e[t]&&(r[t]=Promise.resolve(e[t]).then((t=>t?ja(t):null)))})),this.formatter.transactionRequest(yield ha(r))}))}_getFilter(t){return Vl(this,void 0,void 0,(function*(){t=yield t;const e={};return null!=t.address&&(e.address=this._getAddress(t.address)),[\\\"blockHash\\\",\\\"topics\\\"].forEach((r=>{null!=t[r]&&(e[r]=t[r])})),[\\\"fromBlock\\\",\\\"toBlock\\\"].forEach((r=>{null!=t[r]&&(e[r]=this._getBlockTag(t[r]))})),this.formatter.filter(yield ha(e))}))}_call(t,e,r){return Vl(this,void 0,void 0,(function*(){r>=10&&Wl.throwError(\\\"CCIP read exceeded maximum redirections\\\",aa.errors.SERVER_ERROR,{redirects:r,transaction:t});const n=t.to,i=yield this.perform(\\\"call\\\",{transaction:t,blockTag:e});if(r>=0&&\\\"latest\\\"===e&&null!=n&&\\\"0x556f1830\\\"===i.substring(0,10)&&Fa(i)%32==4)try{const o=Da(i,4),s=Da(o,0,32);Xa.from(s).eq(n)||Wl.throwError(\\\"CCIP Read sender did not match\\\",aa.errors.CALL_EXCEPTION,{name:\\\"OffchainLookup\\\",signature:\\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",transaction:t,data:i});const a=[],u=Xa.from(Da(o,32,64)).toNumber(),c=Xa.from(Da(o,u,u+32)).toNumber(),l=Da(o,u+32);for(let e=0;e<c;e++){const r=cf(l,32*e);null==r&&Wl.throwError(\\\"CCIP Read contained corrupt URL string\\\",aa.errors.CALL_EXCEPTION,{name:\\\"OffchainLookup\\\",signature:\\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",transaction:t,data:i}),a.push(r)}const f=lf(o,64);Xa.from(Da(o,100,128)).isZero()||Wl.throwError(\\\"CCIP Read callback selector included junk\\\",aa.errors.CALL_EXCEPTION,{name:\\\"OffchainLookup\\\",signature:\\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",transaction:t,data:i});const h=Da(o,96,100),d=lf(o,128),p=yield this.ccipReadFetch(t,f,a);null==p&&Wl.throwError(\\\"CCIP Read disabled or provided no URLs\\\",aa.errors.CALL_EXCEPTION,{name:\\\"OffchainLookup\\\",signature:\\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",transaction:t,data:i});const g={to:n,data:$a([h,pf([p,d])])};return this._call(g,e,r+1)}catch(t){if(t.code===aa.errors.SERVER_ERROR)throw t}try{return ja(i)}catch(r){return Wl.throwError(\\\"bad result from backend\\\",aa.errors.SERVER_ERROR,{method:\\\"call\\\",params:{transaction:t,blockTag:e},result:i,error:r})}}))}call(t,e){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield ha({transaction:this._getTransactionRequest(t),blockTag:this._getBlockTag(e),ccipReadEnabled:Promise.resolve(t.ccipReadEnabled)});return this._call(r.transaction,r.blockTag,r.ccipReadEnabled?0:-1)}))}estimateGas(t){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield ha({transaction:this._getTransactionRequest(t)}),r=yield this.perform(\\\"estimateGas\\\",e);try{return Xa.from(r)}catch(t){return Wl.throwError(\\\"bad result from backend\\\",aa.errors.SERVER_ERROR,{method:\\\"estimateGas\\\",params:e,result:r,error:t})}}))}_getAddress(t){return Vl(this,void 0,void 0,(function*(){\\\"string\\\"!=typeof(t=yield t)&&Wl.throwArgumentError(\\\"invalid address or ENS name\\\",\\\"name\\\",t);const e=yield this.resolveName(t);return null==e&&Wl.throwError(\\\"ENS name not configured\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(t)})`}),e}))}_getBlock(t,e){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork(),t=yield t;let r=-128;const n={includeTransactions:!!e};if(La(t,32))n.blockHash=t;else try{n.blockTag=yield this._getBlockTag(t),La(n.blockTag)&&(r=parseInt(n.blockTag.substring(2),16))}catch(e){Wl.throwArgumentError(\\\"invalid block hash or block tag\\\",\\\"blockHashOrBlockTag\\\",t)}return nl((()=>Vl(this,void 0,void 0,(function*(){const t=yield this.perform(\\\"getBlock\\\",n);if(null==t)return null!=n.blockHash&&null==this._emitted[\\\"b:\\\"+n.blockHash]||null!=n.blockTag&&r>this._emitted.block?null:void 0;if(e){let e=null;for(let r=0;r<t.transactions.length;r++){const n=t.transactions[r];if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){null==e&&(e=yield this._getInternalBlockNumber(100+2*this.pollingInterval));let t=e-n.blockNumber+1;t<=0&&(t=1),n.confirmations=t}}const r=this.formatter.blockWithTransactions(t);return r.transactions=r.transactions.map((t=>this._wrapTransaction(t))),r}return this.formatter.block(t)}))),{oncePoll:this})}))}getBlock(t){return this._getBlock(t,!1)}getBlockWithTransactions(t){return this._getBlock(t,!0)}getTransaction(t){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork(),t=yield t;const e={transactionHash:this.formatter.hash(t,!0)};return nl((()=>Vl(this,void 0,void 0,(function*(){const r=yield this.perform(\\\"getTransaction\\\",e);if(null==r)return null==this._emitted[\\\"t:\\\"+t]?null:void 0;const n=this.formatter.transactionResponse(r);if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){let t=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-n.blockNumber+1;t<=0&&(t=1),n.confirmations=t}return this._wrapTransaction(n)}))),{oncePoll:this})}))}getTransactionReceipt(t){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork(),t=yield t;const e={transactionHash:this.formatter.hash(t,!0)};return nl((()=>Vl(this,void 0,void 0,(function*(){const r=yield this.perform(\\\"getTransactionReceipt\\\",e);if(null==r)return null==this._emitted[\\\"t:\\\"+t]?null:void 0;if(null==r.blockHash)return;const n=this.formatter.receipt(r);if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){let t=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-n.blockNumber+1;t<=0&&(t=1),n.confirmations=t}return n}))),{oncePoll:this})}))}getLogs(t){return Vl(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield ha({filter:this._getFilter(t)}),r=yield this.perform(\\\"getLogs\\\",e);return r.forEach((t=>{null==t.removed&&(t.removed=!1)})),Kl.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)}))}getEtherPrice(){return Vl(this,void 0,void 0,(function*(){return yield this.getNetwork(),this.perform(\\\"getEtherPrice\\\",{})}))}_getBlockTag(t){return Vl(this,void 0,void 0,(function*(){if(\\\"number\\\"==typeof(t=yield t)&&t<0){t%1&&Wl.throwArgumentError(\\\"invalid BlockTag\\\",\\\"blockTag\\\",t);let e=yield this._getInternalBlockNumber(100+2*this.pollingInterval);return e+=t,e<0&&(e=0),this.formatter.blockTag(e)}return this.formatter.blockTag(t)}))}getResolver(t){return Vl(this,void 0,void 0,(function*(){let e=t;for(;;){if(\\\"\\\"===e||\\\".\\\"===e)return null;if(\\\"eth\\\"!==t&&\\\"eth\\\"===e)return null;const r=yield this._getResolver(e,\\\"getResolver\\\");if(null!=r){const n=new gf(this,r,t);return e===t||(yield n.supportsWildcard())?n:null}e=e.split(\\\".\\\").slice(1).join(\\\".\\\")}}))}_getResolver(t,e){return Vl(this,void 0,void 0,(function*(){null==e&&(e=\\\"ENS\\\");const r=yield this.getNetwork();r.ensAddress||Wl.throwError(\\\"network does not support ENS\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:e,network:r.name});try{const e=yield this.call({to:r.ensAddress,data:\\\"0x0178b8bf\\\"+Tl(t).substring(2)});return this.formatter.callAddress(e)}catch(t){}return null}))}resolveName(t){return Vl(this,void 0,void 0,(function*(){t=yield t;try{return Promise.resolve(this.formatter.address(t))}catch(e){if(La(t))throw e}\\\"string\\\"!=typeof t&&Wl.throwArgumentError(\\\"invalid ENS name\\\",\\\"name\\\",t);const e=yield this.getResolver(t);return e?yield e.getAddress():null}))}lookupAddress(t){return Vl(this,void 0,void 0,(function*(){t=yield t;const e=(t=this.formatter.address(t)).substring(2).toLowerCase()+\\\".addr.reverse\\\",r=yield this._getResolver(e,\\\"lookupAddress\\\");if(null==r)return null;const n=cf(yield this.call({to:r,data:\\\"0x691f3431\\\"+Tl(e).substring(2)}),0);return(yield this.resolveName(n))!=t?null:n}))}getAvatar(t){return Vl(this,void 0,void 0,(function*(){let e=null;if(La(t)){const r=this.formatter.address(t).substring(2).toLowerCase()+\\\".addr.reverse\\\",n=yield this._getResolver(r,\\\"getAvatar\\\");if(!n)return null;e=new gf(this,n,r);try{const t=yield e.getAvatar();if(t)return t.url}catch(t){if(t.code!==aa.errors.CALL_EXCEPTION)throw t}try{const t=cf(yield this.call({to:n,data:\\\"0x691f3431\\\"+Tl(r).substring(2)}),0);e=yield this.getResolver(t)}catch(t){if(t.code!==aa.errors.CALL_EXCEPTION)throw t;return null}}else if(e=yield this.getResolver(t),!e)return null;const r=yield e.getAvatar();return null==r?null:r.url}))}perform(t,e){return Wl.throwError(t+\\\" not implemented\\\",aa.errors.NOT_IMPLEMENTED,{operation:t})}_startEvent(t){this.polling=this._events.filter((t=>t.pollable())).length>0}_stopEvent(t){this.polling=this._events.filter((t=>t.pollable())).length>0}_addEventListener(t,e,r){const n=new rf(Yl(t),e,r);return this._events.push(n),this._startEvent(n),this}on(t,e){return this._addEventListener(t,e,!1)}once(t,e){return this._addEventListener(t,e,!0)}emit(t,...e){let r=!1,n=[],i=Yl(t);return this._events=this._events.filter((t=>t.tag!==i||(setTimeout((()=>{t.listener.apply(this,e)}),0),r=!0,!t.once||(n.push(t),!1)))),n.forEach((t=>{this._stopEvent(t)})),r}listenerCount(t){if(!t)return this._events.length;let e=Yl(t);return this._events.filter((t=>t.tag===e)).length}listeners(t){if(null==t)return this._events.map((t=>t.listener));let e=Yl(t);return this._events.filter((t=>t.tag===e)).map((t=>t.listener))}off(t,e){if(null==e)return this.removeAllListeners(t);const r=[];let n=!1,i=Yl(t);return this._events=this._events.filter((t=>t.tag!==i||t.listener!=e||(!!n||(n=!0,r.push(t),!1)))),r.forEach((t=>{this._stopEvent(t)})),this}removeAllListeners(t){let e=[];if(null==t)e=this._events,this._events=[];else{const r=Yl(t);this._events=this._events.filter((t=>t.tag!==r||(e.push(t),!1)))}return e.forEach((t=>{this._stopEvent(t)})),this}}var wf=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const bf=new aa(wa),Af=[\\\"call\\\",\\\"estimateGas\\\"];function Ef(t,e){if(null==t)return null;if(\\\"string\\\"==typeof t.message&&t.message.match(\\\"reverted\\\")){const r=La(t.data)?t.data:null;if(!e||r)return{message:t.message,data:r}}if(\\\"object\\\"==typeof t){for(const r in t){const n=Ef(t[r],e);if(n)return n}return null}if(\\\"string\\\"==typeof t)try{return Ef(JSON.parse(t),e)}catch(t){}return null}function Sf(t,e,r){const n=r.transaction||r.signedTransaction;if(\\\"call\\\"===t){const t=Ef(e,!0);if(t)return t.data;bf.throwError(\\\"missing revert data in call exception; Transaction reverted without a reason string\\\",aa.errors.CALL_EXCEPTION,{data:\\\"0x\\\",transaction:n,error:e})}if(\\\"estimateGas\\\"===t){let r=Ef(e.body,!1);null==r&&(r=Ef(e,!1)),r&&bf.throwError(\\\"cannot estimate gas; transaction may fail or may require manual gas limit\\\",aa.errors.UNPREDICTABLE_GAS_LIMIT,{reason:r.message,method:t,transaction:n,error:e})}let i=e.message;throw e.code===aa.errors.SERVER_ERROR&&e.error&&\\\"string\\\"==typeof e.error.message?i=e.error.message:\\\"string\\\"==typeof e.body?i=e.body:\\\"string\\\"==typeof e.responseText&&(i=e.responseText),i=(i||\\\"\\\").toLowerCase(),i.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)&&bf.throwError(\\\"insufficient funds for intrinsic transaction cost\\\",aa.errors.INSUFFICIENT_FUNDS,{error:e,method:t,transaction:n}),i.match(/nonce (is )?too low/i)&&bf.throwError(\\\"nonce has already been used\\\",aa.errors.NONCE_EXPIRED,{error:e,method:t,transaction:n}),i.match(/replacement transaction underpriced|transaction gas price.*too low/i)&&bf.throwError(\\\"replacement fee too low\\\",aa.errors.REPLACEMENT_UNDERPRICED,{error:e,method:t,transaction:n}),i.match(/only replay-protected/i)&&bf.throwError(\\\"legacy pre-eip-155 transactions not supported\\\",aa.errors.UNSUPPORTED_OPERATION,{error:e,method:t,transaction:n}),Af.indexOf(t)>=0&&i.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)&&bf.throwError(\\\"cannot estimate gas; transaction may fail or may require manual gas limit\\\",aa.errors.UNPREDICTABLE_GAS_LIMIT,{error:e,method:t,transaction:n}),e}function Rf(t){return new Promise((function(e){setTimeout(e,t)}))}function If(t){if(t.error){const e=new Error(t.error.message);throw e.code=t.error.code,e.data=t.error.data,e}return t.result}function xf(t){return t?t.toLowerCase():t}const _f={};class Nf extends Ra{constructor(t,e,r){if(super(),t!==_f)throw new Error(\\\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\\\");la(this,\\\"provider\\\",e),null==r&&(r=0),\\\"string\\\"==typeof r?(la(this,\\\"_address\\\",this.provider.formatter.address(r)),la(this,\\\"_index\\\",null)):\\\"number\\\"==typeof r?(la(this,\\\"_index\\\",r),la(this,\\\"_address\\\",null)):bf.throwArgumentError(\\\"invalid address or index\\\",\\\"addressOrIndex\\\",r)}connect(t){return bf.throwError(\\\"cannot alter JSON-RPC Signer connection\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"connect\\\"})}connectUnchecked(){return new Mf(_f,this.provider,this._address||this._index)}getAddress(){return this._address?Promise.resolve(this._address):this.provider.send(\\\"eth_accounts\\\",[]).then((t=>(t.length<=this._index&&bf.throwError(\\\"unknown account #\\\"+this._index,aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"getAddress\\\"}),this.provider.formatter.address(t[this._index]))))}sendUncheckedTransaction(t){t=da(t);const e=this.getAddress().then((t=>(t&&(t=t.toLowerCase()),t)));if(null==t.gasLimit){const r=da(t);r.from=e,t.gasLimit=this.provider.estimateGas(r)}return null!=t.to&&(t.to=Promise.resolve(t.to).then((t=>wf(this,void 0,void 0,(function*(){if(null==t)return null;const e=yield this.provider.resolveName(t);return null==e&&bf.throwArgumentError(\\\"provided ENS name resolves to null\\\",\\\"tx.to\\\",t),e}))))),ha({tx:ha(t),sender:e}).then((({tx:e,sender:r})=>{null!=e.from?e.from.toLowerCase()!==r&&bf.throwArgumentError(\\\"from address mismatch\\\",\\\"transaction\\\",t):e.from=r;const n=this.provider.constructor.hexlifyTransaction(e,{from:!0});return this.provider.send(\\\"eth_sendTransaction\\\",[n]).then((t=>t),(t=>(\\\"string\\\"==typeof t.message&&t.message.match(/user denied/i)&&bf.throwError(\\\"user rejected transaction\\\",aa.errors.ACTION_REJECTED,{action:\\\"sendTransaction\\\",transaction:e}),Sf(\\\"sendTransaction\\\",t,n))))}))}signTransaction(t){return bf.throwError(\\\"signing transactions is unsupported\\\",aa.errors.UNSUPPORTED_OPERATION,{operation:\\\"signTransaction\\\"})}sendTransaction(t){return wf(this,void 0,void 0,(function*(){const e=yield this.provider._getInternalBlockNumber(100+2*this.provider.pollingInterval),r=yield this.sendUncheckedTransaction(t);try{return yield nl((()=>wf(this,void 0,void 0,(function*(){const t=yield this.provider.getTransaction(r);if(null!==t)return this.provider._wrapTransaction(t,r,e)}))),{oncePoll:this.provider})}catch(t){throw t.transactionHash=r,t}}))}signMessage(t){return wf(this,void 0,void 0,(function*(){const e=\\\"string\\\"==typeof t?xu(t):t,r=yield this.getAddress();try{return yield this.provider.send(\\\"personal_sign\\\",[ja(e),r.toLowerCase()])}catch(e){throw\\\"string\\\"==typeof e.message&&e.message.match(/user denied/i)&&bf.throwError(\\\"user rejected signing\\\",aa.errors.ACTION_REJECTED,{action:\\\"signMessage\\\",from:r,messageData:t}),e}}))}_legacySignMessage(t){return wf(this,void 0,void 0,(function*(){const e=\\\"string\\\"==typeof t?xu(t):t,r=yield this.getAddress();try{return yield this.provider.send(\\\"eth_sign\\\",[r.toLowerCase(),ja(e)])}catch(e){throw\\\"string\\\"==typeof e.message&&e.message.match(/user denied/i)&&bf.throwError(\\\"user rejected signing\\\",aa.errors.ACTION_REJECTED,{action:\\\"_legacySignMessage\\\",from:r,messageData:t}),e}}))}_signTypedData(t,e,r){return wf(this,void 0,void 0,(function*(){const n=yield Hu.resolveNames(t,e,r,(t=>this.provider.resolveName(t))),i=yield this.getAddress();try{return yield this.provider.send(\\\"eth_signTypedData_v4\\\",[i.toLowerCase(),JSON.stringify(Hu.getPayload(n.domain,e,n.value))])}catch(t){throw\\\"string\\\"==typeof t.message&&t.message.match(/user denied/i)&&bf.throwError(\\\"user rejected signing\\\",aa.errors.ACTION_REJECTED,{action:\\\"_signTypedData\\\",from:i,messageData:{domain:n.domain,types:e,value:n.value}}),t}}))}unlock(t){return wf(this,void 0,void 0,(function*(){const e=this.provider,r=yield this.getAddress();return e.send(\\\"personal_unlockAccount\\\",[r.toLowerCase(),t,null])}))}}class Mf extends Nf{sendTransaction(t){return this.sendUncheckedTransaction(t).then((t=>({hash:t,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:e=>this.provider.waitForTransaction(t,e)})))}}const kf={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0};class Of extends vf{constructor(t,e){let r=e;null==r&&(r=new Promise(((t,e)=>{setTimeout((()=>{this.detectNetwork().then((e=>{t(e)}),(t=>{e(t)}))}),0)}))),super(r),t||(t=fa(this.constructor,\\\"defaultUrl\\\")()),la(this,\\\"connection\\\",\\\"string\\\"==typeof t?Object.freeze({url:t}):Object.freeze(da(t))),this._nextId=42}get _cache(){return null==this._eventLoopCache&&(this._eventLoopCache={}),this._eventLoopCache}static defaultUrl(){return\\\"http://localhost:8545\\\"}detectNetwork(){return this._cache.detectNetwork||(this._cache.detectNetwork=this._uncachedDetectNetwork(),setTimeout((()=>{this._cache.detectNetwork=null}),0)),this._cache.detectNetwork}_uncachedDetectNetwork(){return wf(this,void 0,void 0,(function*(){yield Rf(0);let t=null;try{t=yield this.send(\\\"eth_chainId\\\",[])}catch(e){try{t=yield this.send(\\\"net_version\\\",[])}catch(t){}}if(null!=t){const e=fa(this.constructor,\\\"getNetwork\\\");try{return e(Xa.from(t).toNumber())}catch(e){return bf.throwError(\\\"could not detect network\\\",aa.errors.NETWORK_ERROR,{chainId:t,event:\\\"invalidNetwork\\\",serverError:e})}}return bf.throwError(\\\"could not detect network\\\",aa.errors.NETWORK_ERROR,{event:\\\"noNetwork\\\"})}))}getSigner(t){return new Nf(_f,this,t)}getUncheckedSigner(t){return this.getSigner(t).connectUnchecked()}listAccounts(){return this.send(\\\"eth_accounts\\\",[]).then((t=>t.map((t=>this.formatter.address(t)))))}send(t,e){const r={method:t,params:e,id:this._nextId++,jsonrpc:\\\"2.0\\\"};this.emit(\\\"debug\\\",{action:\\\"request\\\",request:ya(r),provider:this});const n=[\\\"eth_chainId\\\",\\\"eth_blockNumber\\\"].indexOf(t)>=0;if(n&&this._cache[t])return this._cache[t];const i=rl(this.connection,JSON.stringify(r),If).then((t=>(this.emit(\\\"debug\\\",{action:\\\"response\\\",request:r,response:t,provider:this}),t)),(t=>{throw this.emit(\\\"debug\\\",{action:\\\"response\\\",error:t,request:r,provider:this}),t}));return n&&(this._cache[t]=i,setTimeout((()=>{this._cache[t]=null}),0)),i}prepareRequest(t,e){switch(t){case\\\"getBlockNumber\\\":return[\\\"eth_blockNumber\\\",[]];case\\\"getGasPrice\\\":return[\\\"eth_gasPrice\\\",[]];case\\\"getBalance\\\":return[\\\"eth_getBalance\\\",[xf(e.address),e.blockTag]];case\\\"getTransactionCount\\\":return[\\\"eth_getTransactionCount\\\",[xf(e.address),e.blockTag]];case\\\"getCode\\\":return[\\\"eth_getCode\\\",[xf(e.address),e.blockTag]];case\\\"getStorageAt\\\":return[\\\"eth_getStorageAt\\\",[xf(e.address),Ga(e.position,32),e.blockTag]];case\\\"sendTransaction\\\":return[\\\"eth_sendRawTransaction\\\",[e.signedTransaction]];case\\\"getBlock\\\":return e.blockTag?[\\\"eth_getBlockByNumber\\\",[e.blockTag,!!e.includeTransactions]]:e.blockHash?[\\\"eth_getBlockByHash\\\",[e.blockHash,!!e.includeTransactions]]:null;case\\\"getTransaction\\\":return[\\\"eth_getTransactionByHash\\\",[e.transactionHash]];case\\\"getTransactionReceipt\\\":return[\\\"eth_getTransactionReceipt\\\",[e.transactionHash]];case\\\"call\\\":return[\\\"eth_call\\\",[fa(this.constructor,\\\"hexlifyTransaction\\\")(e.transaction,{from:!0}),e.blockTag]];case\\\"estimateGas\\\":return[\\\"eth_estimateGas\\\",[fa(this.constructor,\\\"hexlifyTransaction\\\")(e.transaction,{from:!0})]];case\\\"getLogs\\\":return e.filter&&null!=e.filter.address&&(e.filter.address=xf(e.filter.address)),[\\\"eth_getLogs\\\",[e.filter]]}return null}perform(t,e){return wf(this,void 0,void 0,(function*(){if(\\\"call\\\"===t||\\\"estimateGas\\\"===t){const t=e.transaction;if(t&&null!=t.type&&Xa.from(t.type).isZero()&&null==t.maxFeePerGas&&null==t.maxPriorityFeePerGas){const r=yield this.getFeeData();null==r.maxFeePerGas&&null==r.maxPriorityFeePerGas&&((e=da(e)).transaction=da(t),delete e.transaction.type)}}const r=this.prepareRequest(t,e);null==r&&bf.throwError(t+\\\" not implemented\\\",aa.errors.NOT_IMPLEMENTED,{operation:t});try{return yield this.send(r[0],r[1])}catch(r){return Sf(t,r,e)}}))}_startEvent(t){\\\"pending\\\"===t.tag&&this._startPending(),super._startEvent(t)}_startPending(){if(null!=this._pendingFilter)return;const t=this,e=this.send(\\\"eth_newPendingTransactionFilter\\\",[]);this._pendingFilter=e,e.then((function(r){return function n(){t.send(\\\"eth_getFilterChanges\\\",[r]).then((function(r){if(t._pendingFilter!=e)return null;let n=Promise.resolve();return r.forEach((function(e){t._emitted[\\\"t:\\\"+e.toLowerCase()]=\\\"pending\\\",n=n.then((function(){return t.getTransaction(e).then((function(e){return t.emit(\\\"pending\\\",e),null}))}))})),n.then((function(){return Rf(1e3)}))})).then((function(){if(t._pendingFilter==e)return setTimeout((function(){n()}),0),null;t.send(\\\"eth_uninstallFilter\\\",[r])})).catch((t=>{}))}(),r})).catch((t=>{}))}_stopEvent(t){\\\"pending\\\"===t.tag&&0===this.listenerCount(\\\"pending\\\")&&(this._pendingFilter=null),super._stopEvent(t)}static hexlifyTransaction(t,e){const r=da(kf);if(e)for(const t in e)e[t]&&(r[t]=!0);!function(t,e){t&&\\\"object\\\"==typeof t||ca.throwArgumentError(\\\"invalid object\\\",\\\"object\\\",t),Object.keys(t).forEach((r=>{e[r]||ca.throwArgumentError(\\\"invalid object key - \\\"+r,\\\"transaction:\\\"+r,t)}))}(t,r);const n={};return[\\\"chainId\\\",\\\"gasLimit\\\",\\\"gasPrice\\\",\\\"type\\\",\\\"maxFeePerGas\\\",\\\"maxPriorityFeePerGas\\\",\\\"nonce\\\",\\\"value\\\"].forEach((function(e){if(null==t[e])return;const r=qa(Xa.from(t[e]));\\\"gasLimit\\\"===e&&(e=\\\"gas\\\"),n[e]=r})),[\\\"from\\\",\\\"to\\\",\\\"data\\\"].forEach((function(e){null!=t[e]&&(n[e]=ja(t[e]))})),t.accessList&&(n.accessList=qc(t.accessList)),n}}const Cf=new aa(wa);let Pf=1;function Bf(t,e){const r=\\\"Web3LegacyFetcher\\\";return function(t,n){const i={method:t,params:n,id:Pf++,jsonrpc:\\\"2.0\\\"};return new Promise(((t,n)=>{this.emit(\\\"debug\\\",{action:\\\"request\\\",fetcher:r,request:ya(i),provider:this}),e(i,((e,o)=>{if(e)return this.emit(\\\"debug\\\",{action:\\\"response\\\",fetcher:r,error:e,request:i,provider:this}),n(e);if(this.emit(\\\"debug\\\",{action:\\\"response\\\",fetcher:r,request:i,response:o,provider:this}),o.error){const t=new Error(o.error.message);return t.code=o.error.code,t.data=o.error.data,n(t)}t(o.result)}))}))}}class Tf extends Of{constructor(t,e){null==t&&Cf.throwArgumentError(\\\"missing provider\\\",\\\"provider\\\",t);let r=null,n=null,i=null;\\\"function\\\"==typeof t?(r=\\\"unknown:\\\",n=t):(r=t.host||t.path||\\\"\\\",!r&&t.isMetaMask&&(r=\\\"metamask\\\"),i=t,t.request?(\\\"\\\"===r&&(r=\\\"eip-1193:\\\"),n=function(t){return function(e,r){null==r&&(r=[]);const n={method:e,params:r};return this.emit(\\\"debug\\\",{action:\\\"request\\\",fetcher:\\\"Eip1193Fetcher\\\",request:ya(n),provider:this}),t.request(n).then((t=>(this.emit(\\\"debug\\\",{action:\\\"response\\\",fetcher:\\\"Eip1193Fetcher\\\",request:n,response:t,provider:this}),t)),(t=>{throw this.emit(\\\"debug\\\",{action:\\\"response\\\",fetcher:\\\"Eip1193Fetcher\\\",request:n,error:t,provider:this}),t}))}}(t)):t.sendAsync?n=Bf(0,t.sendAsync.bind(t)):t.send?n=Bf(0,t.send.bind(t)):Cf.throwArgumentError(\\\"unsupported provider\\\",\\\"provider\\\",t),r||(r=\\\"unknown:\\\")),super(r,e),la(this,\\\"jsonRpcFetchFunc\\\",n),la(this,\\\"provider\\\",i)}send(t,e){return this.jsonRpcFetchFunc(t,e)}}async function Lf(){const t=new Tf(ethereum);return 1===Number((await t.getNetwork()).chainId)}const Uf=async()=>{const t=await qf();return(await t.listAccounts()).length+1};async function jf(t){if(t.startsWith(\\\"0x\\\")){if(Co(t)||yo(t)){if(await async function(t){try{const e=new Tf(ethereum),r=await e.getCode(t);return\\\"0x\\\"!==r&&\\\"0x0\\\"!==r}catch(t){return Jo.error(`Error checking address code: ${t.message}`),!1}}(t))return{message:\\\"Smart contract addresses are not supported yet\\\"};const e=await(async t=>{try{const e=new Tf(ethereum);return await e.lookupAddress(t)}catch(e){return Jo.error(`Failed to lookup ENS name for '${t}': `,e),null}})(t);return e?{message:`**${e}**`,address:t,accountNameSuggestion:e}:{message:\\\"Valid address\\\",address:t,accountNameSuggestion:`Watched Account ${await Uf()}`}}return{message:\\\"Invalid address\\\"}}if(t.endsWith(\\\".eth\\\")){if(await Lf()){const e=await(async t=>{try{const e=new Tf(ethereum);return await e.resolveName(t)}catch(e){return Jo.error(`Failed to resolve ENS name '${t}': `,e),null}})(t);return e?{message:Ff(e),address:e,accountNameSuggestion:t}:{message:\\\"Invalid ENS name\\\"}}return{message:\\\"ENS is only supported on Ethereum mainnet\\\"}}return{message:\\\"Invalid input\\\"}}function Ff(t){if(!Co(t)||!yo(t))return\\\"Invalid address\\\";const e=Bo(t).match(/.{1,4}/gu);return e&&10===e.length?(e[0]=`**${Po(e[0])}**`,e[e.length-1]=`**${e[e.length-1]}**`,`${e.join(\\\" \\\")}`):\\\"Invalid address\\\"}async function Df(t,e){await snap.request({method:\\\"snap_updateInterface\\\",params:{id:t,ui:Qs(e)}})}let $f;async function qf(){if(!$f){const t=await async function(){const t=await snap.request({method:\\\"snap_manageState\\\",params:{operation:\\\"get\\\"}});return{...qo,...t}}();$f||($f=new Ko(t))}return $f}const Gf=async({origin:t,request:r})=>{if(!function(t,e){var r;return(null===(r=Vo.get(t))||void 0===r?void 0:r.includes(e))??!1}(t,r.method))throw new Error(`Origin'${t}' is not allowed to call '${r.method}'`);return(0,e.handleKeyringRequest)(await qf(),r)},Hf=async()=>({id:await async function(){return await snap.request({method:\\\"snap_createInterface\\\",params:{ui:(t=await Lf(),Wo(Ws,{onMainnet:t}))}});var t}()}),zf=async({id:t,event:e})=>{if(e.type===Ze.FormSubmitEvent&&e.name===Vs.AddressForm){var r;const n=null===(r=e.value[Vs.AddressInput])||void 0===r?void 0:r.toString();if(!n){const e=await Lf()?\\\"Address or ENS is required\\\":\\\"Address is required\\\";return void await Df(t,e)}const i=await jf(n);if(i.address){const{accountNameSuggestion:e}=i;try{const t={address:i.address};e&&(t.accountNameSuggestion=e),await(await qf()).createAccount({...t})}catch(e){await Df(t,e.message)}}else await Df(t,i.message)}}})();var i=exports;for(var o in n)i[o]=n[o];n.__esModule&&Object.defineProperty(i,\\\"__esModule\\\",{value:!0})})();\"}],\"removable\":false,\"hidden\":true}","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/errors.ts\nvar ApprovalRequestNotFoundError = class extends Error {\n  constructor(id) {\n    super(`Approval request with id '${id}' not found.`);\n  }\n};\nvar ApprovalRequestNoResultSupportError = class extends Error {\n  constructor(id) {\n    super(\n      `Approval acceptance requested result but request with id '${id}' does not support it.`\n    );\n  }\n};\nvar NoApprovalFlowsError = class extends Error {\n  constructor() {\n    super(`No approval flows found.`);\n  }\n};\nvar EndInvalidFlowError = class extends Error {\n  constructor(id, flowIds) {\n    super(\n      `Attempted to end flow with id '${id}' which does not match current flow with id '${flowIds.slice(-1)[0]}'. All Flows: ${flowIds.join(\", \")}`\n    );\n  }\n};\nvar MissingApprovalFlowError = class extends Error {\n  constructor(id) {\n    super(`No approval flows found with id '${id}'.`);\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod; exports.ApprovalRequestNotFoundError = ApprovalRequestNotFoundError; exports.ApprovalRequestNoResultSupportError = ApprovalRequestNoResultSupportError; exports.NoApprovalFlowsError = NoApprovalFlowsError; exports.EndInvalidFlowError = EndInvalidFlowError; exports.MissingApprovalFlowError = MissingApprovalFlowError;\n//# sourceMappingURL=chunk-LKCXZAKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\n\n\n\n\n\nvar _chunkLKCXZAKDjs = require('./chunk-LKCXZAKD.js');\n\n// src/ApprovalController.ts\n\n\nvar _basecontroller = require('@metamask/base-controller');\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _nanoid = require('nanoid');\nvar ORIGIN_METAMASK = \"metamask\";\nvar APPROVAL_TYPE_RESULT_ERROR = \"result_error\";\nvar APPROVAL_TYPE_RESULT_SUCCESS = \"result_success\";\nvar controllerName = \"ApprovalController\";\nvar stateMetadata = {\n  pendingApprovals: { persist: false, anonymous: true },\n  pendingApprovalCount: { persist: false, anonymous: false },\n  approvalFlows: { persist: false, anonymous: false }\n};\nvar getAlreadyPendingMessage = (origin, type) => `Request of type '${type}' already pending for origin ${origin}. Please wait.`;\nvar getDefaultState = () => {\n  return {\n    pendingApprovals: {},\n    pendingApprovalCount: 0,\n    approvalFlows: []\n  };\n};\nvar _approvals, _origins, _showApprovalRequest, _typesExcludedFromRateLimiting, _add, add_fn, _validateAddParams, validateAddParams_fn, _addPendingApprovalOrigin, addPendingApprovalOrigin_fn, _addToStore, addToStore_fn, _delete, delete_fn, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn, _result, result_fn;\nvar ApprovalController = class extends _basecontroller.BaseController {\n  /**\n   * Construct an Approval controller.\n   *\n   * @param options - The controller options.\n   * @param options.showApprovalRequest - Function for opening the UI such that\n   * the request can be displayed to the user.\n   * @param options.messenger - The restricted controller messenger for the Approval controller.\n   * @param options.state - The initial controller state.\n   * @param options.typesExcludedFromRateLimiting - Array of approval types which allow multiple pending approval requests from the same origin.\n   */\n  constructor({\n    messenger,\n    showApprovalRequest,\n    state = {},\n    typesExcludedFromRateLimiting = []\n  }) {\n    super({\n      name: controllerName,\n      metadata: stateMetadata,\n      messenger,\n      state: { ...getDefaultState(), ...state }\n    });\n    /**\n     * Implementation of add operation.\n     *\n     * @param origin - The origin of the approval request.\n     * @param type - The type associated with the approval request.\n     * @param id - The id of the approval request.\n     * @param requestData - The request data associated with the approval request.\n     * @param requestState - The request state associated with the approval request.\n     * @param expectsResult - Whether the approval request expects a result object to be returned.\n     * @returns The approval promise.\n     */\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _add);\n    /**\n     * Validates parameters to the add method.\n     *\n     * @param id - The id of the approval request.\n     * @param origin - The origin of the approval request.\n     * @param type - The type associated with the approval request.\n     * @param requestData - The request data associated with the approval request.\n     * @param requestState - The request state associated with the approval request.\n     */\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _validateAddParams);\n    /**\n     * Adds an entry to _origins.\n     * Performs no validation.\n     *\n     * @param origin - The origin of the approval request.\n     * @param type - The type associated with the approval request.\n     */\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _addPendingApprovalOrigin);\n    /**\n     * Adds an entry to the store.\n     * Performs no validation.\n     *\n     * @param id - The id of the approval request.\n     * @param origin - The origin of the approval request.\n     * @param type - The type associated with the approval request.\n     * @param requestData - The request data associated with the approval request.\n     * @param requestState - The request state associated with the approval request.\n     * @param expectsResult - Whether the request expects a result object to be returned.\n     */\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _addToStore);\n    /**\n     * Deletes the approval with the given id. The approval promise must be\n     * resolved or reject before this method is called.\n     * Deletion is an internal operation because approval state is solely\n     * managed by this controller.\n     *\n     * @param id - The id of the approval request to be deleted.\n     */\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _delete);\n    /**\n     * Gets the approval callbacks for the given id, deletes the entry, and then\n     * returns the callbacks for promise resolution.\n     * Throws an error if no approval is found for the given id.\n     *\n     * @param id - The id of the approval request.\n     * @returns The promise callbacks associated with the approval request.\n     */\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _deleteApprovalAndGetCallbacks);\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _result);\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _approvals, void 0);\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _origins, void 0);\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _showApprovalRequest, void 0);\n    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _typesExcludedFromRateLimiting, void 0);\n    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _approvals, /* @__PURE__ */ new Map());\n    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _origins, /* @__PURE__ */ new Map());\n    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _showApprovalRequest, showApprovalRequest);\n    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _typesExcludedFromRateLimiting, typesExcludedFromRateLimiting);\n    this.registerMessageHandlers();\n  }\n  /**\n   * Constructor helper for registering this controller's messaging system\n   * actions.\n   */\n  registerMessageHandlers() {\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:clearRequests`,\n      this.clear.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:addRequest`,\n      (opts, shouldShowRequest) => {\n        if (shouldShowRequest) {\n          return this.addAndShowApprovalRequest(opts);\n        }\n        return this.add(opts);\n      }\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasRequest`,\n      this.has.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:acceptRequest`,\n      this.accept.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:rejectRequest`,\n      this.reject.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:updateRequestState`,\n      this.updateRequestState.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:startFlow`,\n      this.startFlow.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:endFlow`,\n      this.endFlow.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:setFlowLoadingText`,\n      this.setFlowLoadingText.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:showSuccess`,\n      this.success.bind(this)\n    );\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:showError`,\n      this.error.bind(this)\n    );\n  }\n  addAndShowApprovalRequest(opts) {\n    const promise = _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _add, add_fn).call(this, opts.origin, opts.type, opts.id, opts.requestData, opts.requestState, opts.expectsResult);\n    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _showApprovalRequest).call(this);\n    return promise;\n  }\n  add(opts) {\n    return _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _add, add_fn).call(this, opts.origin, opts.type, opts.id, opts.requestData, opts.requestState, opts.expectsResult);\n  }\n  /**\n   * Gets the info for the approval request with the given id.\n   *\n   * @param id - The id of the approval request.\n   * @returns The approval request data associated with the id.\n   */\n  get(id) {\n    return this.state.pendingApprovals[id];\n  }\n  /**\n   * Gets the number of pending approvals, by origin and/or type.\n   *\n   * If only `origin` is specified, all approvals for that origin will be\n   * counted, regardless of type.\n   * If only `type` is specified, all approvals for that type will be counted,\n   * regardless of origin.\n   * If both `origin` and `type` are specified, 0 or 1 will be returned.\n   *\n   * @param opts - The approval count options.\n   * @param opts.origin - An approval origin.\n   * @param opts.type - The type of the approval request.\n   * @returns The current approval request count for the given origin and/or\n   * type.\n   */\n  getApprovalCount(opts = {}) {\n    if (!opts.origin && !opts.type) {\n      throw new Error(\"Must specify origin, type, or both.\");\n    }\n    const { origin, type: _type } = opts;\n    if (origin && _type) {\n      return _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin)?.get(_type) || 0;\n    }\n    if (origin) {\n      return Array.from(\n        (_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin) || /* @__PURE__ */ new Map()).values()\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      ).reduce((total, value) => total + value, 0);\n    }\n    let count = 0;\n    for (const approval of Object.values(this.state.pendingApprovals)) {\n      if (approval.type === _type) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n  /**\n   * Get the total count of all pending approval requests for all origins.\n   *\n   * @returns The total pending approval request count.\n   */\n  getTotalApprovalCount() {\n    return this.state.pendingApprovalCount;\n  }\n  /**\n   * Checks if there's a pending approval request per the given parameters.\n   * At least one parameter must be specified. An error will be thrown if the\n   * parameters are invalid.\n   *\n   * If `id` is specified, all other parameters will be ignored.\n   * If `id` is not specified, the method will check for requests that match\n   * all of the specified parameters.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The ID to check for.\n   * @param opts.origin - The origin to check for.\n   * @param opts.type - The type to check for.\n   * @returns `true` if a matching approval is found, and `false` otherwise.\n   */\n  has(opts = {}) {\n    const { id, origin, type: _type } = opts;\n    if (id) {\n      if (typeof id !== \"string\") {\n        throw new Error(\"May not specify non-string id.\");\n      }\n      return _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).has(id);\n    }\n    if (_type && typeof _type !== \"string\") {\n      throw new Error(\"May not specify non-string type.\");\n    }\n    if (origin) {\n      if (typeof origin !== \"string\") {\n        throw new Error(\"May not specify non-string origin.\");\n      }\n      if (_type) {\n        return Boolean(_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin)?.get(_type));\n      }\n      return _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).has(origin);\n    }\n    if (_type) {\n      for (const approval of Object.values(this.state.pendingApprovals)) {\n        if (approval.type === _type) {\n          return true;\n        }\n      }\n      return false;\n    }\n    throw new Error(\n      \"Must specify a valid combination of id, origin, and type.\"\n    );\n  }\n  /**\n   * Resolves the promise of the approval with the given id, and deletes the\n   * approval. Throws an error if no such approval exists.\n   *\n   * @param id - The id of the approval request.\n   * @param value - The value to resolve the approval promise with.\n   * @param options - Options bag.\n   * @returns A promise that either resolves once a result is provided by\n   * the creator of the approval request, or immediately if `options.waitForResult`\n   * is `false` or `undefined`.\n   */\n  accept(id, value, options) {\n    const approval = this.get(id);\n    const requestPromise = _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn).call(this, id);\n    return new Promise((resolve, reject) => {\n      const resultCallbacks = {\n        success: (acceptValue) => resolve({ value: acceptValue }),\n        error: reject\n      };\n      if (options?.waitForResult && !approval.expectsResult) {\n        reject(new (0, _chunkLKCXZAKDjs.ApprovalRequestNoResultSupportError)(id));\n        return;\n      }\n      const resultValue = options?.waitForResult ? resultCallbacks : void 0;\n      const resolveValue = approval.expectsResult ? { value, resultCallbacks: resultValue } : value;\n      requestPromise.resolve(resolveValue);\n      if (!options?.waitForResult) {\n        resolve({ value: void 0 });\n      }\n    });\n  }\n  /**\n   * Rejects the promise of the approval with the given id, and deletes the\n   * approval. Throws an error if no such approval exists.\n   *\n   * @param id - The id of the approval request.\n   * @param error - The error to reject the approval promise with.\n   */\n  reject(id, error) {\n    _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn).call(this, id).reject(error);\n  }\n  /**\n   * Rejects and deletes all approval requests.\n   *\n   * @param rejectionError - The JsonRpcError to reject the approval\n   * requests with.\n   */\n  clear(rejectionError) {\n    for (const id of _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).keys()) {\n      this.reject(id, rejectionError);\n    }\n    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).clear();\n    this.update((draftState) => {\n      draftState.pendingApprovals = {};\n      draftState.pendingApprovalCount = 0;\n    });\n  }\n  /**\n   * Updates the request state of the approval with the given id.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request.\n   * @param opts.requestState - Additional data associated with the request\n   */\n  updateRequestState(opts) {\n    if (!this.state.pendingApprovals[opts.id]) {\n      throw new (0, _chunkLKCXZAKDjs.ApprovalRequestNotFoundError)(opts.id);\n    }\n    this.update((draftState) => {\n      draftState.pendingApprovals[opts.id].requestState = opts.requestState;\n    });\n  }\n  /**\n   * Starts a new approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval flow.\n   * @param opts.loadingText - The loading text that will be associated to the approval flow.\n   * @param opts.show - A flag to determine whether the approval should show to the user.\n   * @returns The object containing the approval flow id.\n   */\n  startFlow(opts = {}) {\n    const id = opts.id ?? _nanoid.nanoid.call(void 0, );\n    const loadingText = opts.loadingText ?? null;\n    this.update((draftState) => {\n      draftState.approvalFlows.push({ id, loadingText });\n    });\n    if (opts.show !== false) {\n      _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _showApprovalRequest).call(this);\n    }\n    return { id, loadingText };\n  }\n  /**\n   * Ends the current approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval flow that will be finished.\n   */\n  endFlow({ id }) {\n    if (!this.state.approvalFlows.length) {\n      throw new (0, _chunkLKCXZAKDjs.NoApprovalFlowsError)();\n    }\n    const currentFlow = this.state.approvalFlows.slice(-1)[0];\n    if (id !== currentFlow.id) {\n      throw new (0, _chunkLKCXZAKDjs.EndInvalidFlowError)(\n        id,\n        this.state.approvalFlows.map((flow) => flow.id)\n      );\n    }\n    this.update((draftState) => {\n      draftState.approvalFlows.pop();\n    });\n  }\n  /**\n   * Sets the loading text for the approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The approval flow loading text that will be displayed.\n   * @param opts.loadingText - The loading text that will be associated to the approval flow.\n   */\n  setFlowLoadingText({ id, loadingText }) {\n    const flowIndex = this.state.approvalFlows.findIndex(\n      (flow) => flow.id === id\n    );\n    if (flowIndex === -1) {\n      throw new (0, _chunkLKCXZAKDjs.MissingApprovalFlowError)(id);\n    }\n    this.update((draftState) => {\n      draftState.approvalFlows[flowIndex].loadingText = loadingText;\n    });\n  }\n  /**\n   * Show a success page.\n   *\n   * @param opts - Options bag.\n   * @param opts.message - The message text or components to display in the page.\n   * @param opts.header - The text or components to display in the header of the page.\n   * @param opts.flowToEnd - The ID of the approval flow to end once the success page is approved.\n   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.\n   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.\n   * @returns Empty object to support future additions.\n   */\n  async success(opts = {}) {\n    await _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _result, result_fn).call(this, APPROVAL_TYPE_RESULT_SUCCESS, opts, {\n      message: opts.message,\n      header: opts.header,\n      title: opts.title,\n      icon: opts.icon\n    });\n    return {};\n  }\n  /**\n   * Show an error page.\n   *\n   * @param opts - Options bag.\n   * @param opts.message - The message text or components to display in the page.\n   * @param opts.header - The text or components to display in the header of the page.\n   * @param opts.flowToEnd - The ID of the approval flow to end once the error page is approved.\n   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.\n   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.\n   * @returns Empty object to support future additions.\n   */\n  async error(opts = {}) {\n    await _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _result, result_fn).call(this, APPROVAL_TYPE_RESULT_ERROR, opts, {\n      error: opts.error,\n      header: opts.header,\n      title: opts.title,\n      icon: opts.icon\n    });\n    return {};\n  }\n};\n_approvals = new WeakMap();\n_origins = new WeakMap();\n_showApprovalRequest = new WeakMap();\n_typesExcludedFromRateLimiting = new WeakMap();\n_add = new WeakSet();\nadd_fn = function(origin, type, id = _nanoid.nanoid.call(void 0, ), requestData, requestState, expectsResult) {\n  _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _validateAddParams, validateAddParams_fn).call(this, id, origin, type, requestData, requestState);\n  if (!_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _typesExcludedFromRateLimiting).includes(type) && this.has({ origin, type })) {\n    throw _rpcerrors.rpcErrors.resourceUnavailable(\n      getAlreadyPendingMessage(origin, type)\n    );\n  }\n  return new Promise((resolve, reject) => {\n    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).set(id, { resolve, reject });\n    _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _addPendingApprovalOrigin, addPendingApprovalOrigin_fn).call(this, origin, type);\n    _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _addToStore, addToStore_fn).call(this, id, origin, type, requestData, requestState, expectsResult);\n  });\n};\n_validateAddParams = new WeakSet();\nvalidateAddParams_fn = function(id, origin, type, requestData, requestState) {\n  let errorMessage = null;\n  if (!id || typeof id !== \"string\") {\n    errorMessage = \"Must specify non-empty string id.\";\n  } else if (_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).has(id)) {\n    errorMessage = `Approval request with id '${id}' already exists.`;\n  } else if (!origin || typeof origin !== \"string\") {\n    errorMessage = \"Must specify non-empty string origin.\";\n  } else if (!type || typeof type !== \"string\") {\n    errorMessage = \"Must specify non-empty string type.\";\n  } else if (requestData && (typeof requestData !== \"object\" || Array.isArray(requestData))) {\n    errorMessage = \"Request data must be a plain object if specified.\";\n  } else if (requestState && (typeof requestState !== \"object\" || Array.isArray(requestState))) {\n    errorMessage = \"Request state must be a plain object if specified.\";\n  }\n  if (errorMessage) {\n    throw _rpcerrors.rpcErrors.internal(errorMessage);\n  }\n};\n_addPendingApprovalOrigin = new WeakSet();\naddPendingApprovalOrigin_fn = function(origin, type) {\n  let originMap = _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin);\n  if (!originMap) {\n    originMap = /* @__PURE__ */ new Map();\n    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).set(origin, originMap);\n  }\n  const currentValue = originMap.get(type) || 0;\n  originMap.set(type, currentValue + 1);\n};\n_addToStore = new WeakSet();\naddToStore_fn = function(id, origin, type, requestData, requestState, expectsResult) {\n  const approval = {\n    id,\n    origin,\n    type,\n    time: Date.now(),\n    requestData: requestData || null,\n    requestState: requestState || null,\n    expectsResult: expectsResult || false\n  };\n  this.update((draftState) => {\n    draftState.pendingApprovals[id] = approval;\n    draftState.pendingApprovalCount = Object.keys(\n      draftState.pendingApprovals\n    ).length;\n  });\n};\n_delete = new WeakSet();\ndelete_fn = function(id) {\n  _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).delete(id);\n  const { origin, type } = this.state.pendingApprovals[id];\n  const originMap = _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin);\n  const originTotalCount = this.getApprovalCount({ origin });\n  const originTypeCount = originMap.get(type);\n  if (originTotalCount === 1) {\n    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).delete(origin);\n  } else {\n    originMap.set(type, originTypeCount - 1);\n  }\n  this.update((draftState) => {\n    delete draftState.pendingApprovals[id];\n    draftState.pendingApprovalCount = Object.keys(\n      draftState.pendingApprovals\n    ).length;\n  });\n};\n_deleteApprovalAndGetCallbacks = new WeakSet();\ndeleteApprovalAndGetCallbacks_fn = function(id) {\n  const callbacks = _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).get(id);\n  if (!callbacks) {\n    throw new (0, _chunkLKCXZAKDjs.ApprovalRequestNotFoundError)(id);\n  }\n  _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _delete, delete_fn).call(this, id);\n  return callbacks;\n};\n_result = new WeakSet();\nresult_fn = async function(type, opts, requestData) {\n  try {\n    await this.addAndShowApprovalRequest({\n      origin: ORIGIN_METAMASK,\n      type,\n      requestData\n    });\n  } catch (error) {\n    console.info(\"Failed to display result page\", error);\n  } finally {\n    if (opts.flowToEnd) {\n      try {\n        this.endFlow({ id: opts.flowToEnd });\n      } catch (error) {\n        console.info(\"Failed to end flow\", { id: opts.flowToEnd, error });\n      }\n    }\n  }\n};\nvar ApprovalController_default = ApprovalController;\n\n\n\n\n\n\n\nexports.ORIGIN_METAMASK = ORIGIN_METAMASK; exports.APPROVAL_TYPE_RESULT_ERROR = APPROVAL_TYPE_RESULT_ERROR; exports.APPROVAL_TYPE_RESULT_SUCCESS = APPROVAL_TYPE_RESULT_SUCCESS; exports.ApprovalController = ApprovalController; exports.ApprovalController_default = ApprovalController_default;\n//# sourceMappingURL=chunk-PMXPCCKS.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkPMXPCCKSjs = require('./chunk-PMXPCCKS.js');\n\n\n\n\n\n\nvar _chunkLKCXZAKDjs = require('./chunk-LKCXZAKD.js');\n\n\n\n\n\n\n\n\n\n\nexports.APPROVAL_TYPE_RESULT_ERROR = _chunkPMXPCCKSjs.APPROVAL_TYPE_RESULT_ERROR; exports.APPROVAL_TYPE_RESULT_SUCCESS = _chunkPMXPCCKSjs.APPROVAL_TYPE_RESULT_SUCCESS; exports.ApprovalController = _chunkPMXPCCKSjs.ApprovalController; exports.ApprovalRequestNoResultSupportError = _chunkLKCXZAKDjs.ApprovalRequestNoResultSupportError; exports.ApprovalRequestNotFoundError = _chunkLKCXZAKDjs.ApprovalRequestNotFoundError; exports.EndInvalidFlowError = _chunkLKCXZAKDjs.EndInvalidFlowError; exports.MissingApprovalFlowError = _chunkLKCXZAKDjs.MissingApprovalFlowError; exports.NoApprovalFlowsError = _chunkLKCXZAKDjs.NoApprovalFlowsError; exports.ORIGIN_METAMASK = _chunkPMXPCCKSjs.ORIGIN_METAMASK;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/BaseControllerV1.ts\nvar BaseControllerV1 = class {\n  /**\n   * Creates a BaseControllerV1 instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config = {}, state = {}) {\n    /**\n     * Default options used to configure this controller\n     */\n    this.defaultConfig = {};\n    /**\n     * Default state set on this controller\n     */\n    this.defaultState = {};\n    /**\n     * Determines if listeners are notified of state changes\n     */\n    this.disabled = false;\n    /**\n     * Name of this controller used during composition\n     */\n    this.name = \"BaseController\";\n    this.internalConfig = this.defaultConfig;\n    this.internalState = this.defaultState;\n    this.internalListeners = [];\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns This controller instance.\n   */\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n  /**\n   * Retrieves current controller configuration options.\n   *\n   * @returns The current configuration.\n   */\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration.\n   *\n   * @param config - New configuration options.\n   * @param overwrite - Overwrite config instead of merging.\n   * @param fullUpdate - Boolean that defines if the update is partial or not.\n   */\n  configure(config, overwrite = false, fullUpdate = true) {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n      for (const key of Object.keys(this.internalConfig)) {\n        const value = this.internalConfig[key];\n        if (value !== void 0) {\n          this[key] = value;\n        }\n      }\n    } else {\n      for (const key of Object.keys(config)) {\n        if (this.internalConfig[key] !== void 0) {\n          const value = config[key];\n          this.internalConfig[key] = value;\n          this[key] = value;\n        }\n      }\n    }\n  }\n  /**\n   * Notifies all subscribed listeners of current state.\n   */\n  notify() {\n    if (this.disabled) {\n      return;\n    }\n    this.internalListeners.forEach((listener) => {\n      listener(this.internalState);\n    });\n  }\n  /**\n   * Adds new listener to be notified of state changes.\n   *\n   * @param listener - The callback triggered when state changes.\n   */\n  subscribe(listener) {\n    this.internalListeners.push(listener);\n  }\n  /**\n   * Removes existing listener from receiving state changes.\n   *\n   * @param listener - The callback to remove.\n   * @returns `true` if a listener is found and unsubscribed.\n   */\n  unsubscribe(listener) {\n    const index = this.internalListeners.findIndex((cb) => listener === cb);\n    index > -1 && this.internalListeners.splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Updates controller state.\n   *\n   * @param state - The new state.\n   * @param overwrite - Overwrite state instead of merging.\n   */\n  update(state, overwrite = false) {\n    this.internalState = overwrite ? Object.assign({}, state) : Object.assign({}, this.internalState, state);\n    this.notify();\n  }\n};\nvar BaseControllerV1_default = BaseControllerV1;\n\n\n\n\nexports.BaseControllerV1 = BaseControllerV1; exports.BaseControllerV1_default = BaseControllerV1_default;\n//# sourceMappingURL=chunk-FTHCJ6HY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/ControllerMessenger.ts\nvar _actions, _events, _initialEventPayloadGetters, _eventPayloadCache;\nvar ControllerMessenger = class {\n  constructor() {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _actions, /* @__PURE__ */ new Map());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _events, /* @__PURE__ */ new Map());\n    /**\n     * A map of functions for getting the initial event payload.\n     *\n     * Used only for events that represent state changes.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _initialEventPayloadGetters, /* @__PURE__ */ new Map());\n    /**\n     * A cache of selector return values for their respective handlers.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _eventPayloadCache, /* @__PURE__ */ new Map());\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw when a handler has been registered for this action type already.\n   * @template ActionType - A type union of Action type strings.\n   */\n  registerActionHandler(actionType, handler) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).has(actionType)) {\n      throw new Error(\n        `A handler for ${actionType} has already been registered`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).set(actionType, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @template ActionType - A type union of Action type strings.\n   */\n  unregisterActionHandler(actionType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).delete(actionType);\n  }\n  /**\n   * Unregister all action handlers.\n   *\n   * This prevents all actions from being called.\n   */\n  clearActions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).clear();\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    const handler = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).get(actionType);\n    if (!handler) {\n      throw new Error(`A handler for ${actionType} has not been registered`);\n    }\n    return handler(...params);\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).set(eventType, getPayload);\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * Note that this method should never throw directly. Any errors from\n   * subscribers are captured and re-thrown in a timeout handler.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @template EventType - A type union of Event type strings.\n   */\n  publish(eventType, ...payload) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (subscribers) {\n      for (const [handler, selector] of subscribers.entries()) {\n        try {\n          if (selector) {\n            const previousValue = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).get(handler);\n            const newValue = selector(...payload);\n            if (newValue !== previousValue) {\n              _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, newValue);\n              handler(newValue, previousValue);\n            }\n          } else {\n            handler(...payload);\n          }\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n      }\n    }\n  }\n  subscribe(eventType, handler, selector) {\n    let subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Map();\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).set(eventType, subscribers);\n    }\n    subscribers.set(handler, selector);\n    if (selector) {\n      const getPayload = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).get(eventType);\n      if (getPayload) {\n        const initialValue = selector(...getPayload());\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, initialValue);\n      }\n    }\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw when the given event handler is not registered for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  unsubscribe(eventType, handler) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers || !subscribers.has(handler)) {\n      throw new Error(`Subscription not found for event: ${eventType}`);\n    }\n    const selector = subscribers.get(handler);\n    if (selector) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).delete(handler);\n    }\n    subscribers.delete(handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  clearEventSubscriptions(eventType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).delete(eventType);\n  }\n  /**\n   * Clear all subscriptions.\n   *\n   * This will remove all subscribed handlers for all events.\n   */\n  clearSubscriptions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).clear();\n  }\n  /**\n   * Get a restricted controller messenger\n   *\n   * Returns a wrapper around the controller messenger instance that restricts access to actions\n   * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n   * to the listed events. The \"name\" provided grants ownership of any actions and events under\n   * that namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - Controller messenger options.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n   * module that this messenger has been created for. The authority to publish events and register\n   * actions under this namespace is granted to this restricted messenger instance.\n   * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n   * This must not include internal actions that are in the messenger's namespace.\n   * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n   * This must not include internal events that are in the messenger's namespace.\n   * @returns The restricted controller messenger.\n   */\n  getRestricted({\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    return new (0, _chunkUJFCPTF3js.RestrictedControllerMessenger)({\n      controllerMessenger: this,\n      name,\n      allowedActions,\n      allowedEvents\n    });\n  }\n};\n_actions = new WeakMap();\n_events = new WeakMap();\n_initialEventPayloadGetters = new WeakMap();\n_eventPayloadCache = new WeakMap();\n\n\n\nexports.ControllerMessenger = ControllerMessenger;\n//# sourceMappingURL=chunk-G42723LG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/BaseControllerV2.ts\nvar _immer = require('immer');\n_immer.enablePatches.call(void 0, );\nvar _internalState;\nvar BaseController = class {\n  /**\n   * Creates a BaseController instance.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Controller messaging system.\n   * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n   * parts should be persisted.\n   * @param options.name - The name of the controller, used as a namespace for events and actions.\n   * @param options.state - Initial controller state.\n   */\n  constructor({\n    messenger,\n    metadata,\n    name,\n    state\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _internalState, void 0);\n    this.messagingSystem = messenger;\n    this.name = name;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, _immer.freeze.call(void 0, state, true));\n    this.metadata = metadata;\n    this.messagingSystem.registerActionHandler(\n      `${name}:getState`,\n      () => this.state\n    );\n    this.messagingSystem.registerInitialEventPayload({\n      eventType: `${name}:stateChange`,\n      getPayload: () => [this.state, []]\n    });\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState);\n  }\n  set state(_) {\n    throw new Error(\n      `Controller state cannot be directly mutated; use 'update' method instead.`\n    );\n  }\n  /**\n   * Updates controller state. Accepts a callback that is passed a draft copy\n   * of the controller state. If a value is returned, it is set as the new\n   * state. Otherwise, any changes made within that callback to the draft are\n   * applied to the controller state.\n   *\n   * @param callback - Callback for updating state, passed a draft state\n   * object. Return a new state object or mutate the draft to update state.\n   * @returns An object that has the next state, patches applied in the update and inverse patches to\n   * rollback the update.\n   */\n  update(callback) {\n    const [nextState, patches, inversePatches] = _immer.produceWithPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), callback);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n    return { nextState, patches, inversePatches };\n  }\n  /**\n   * Applies immer patches to the current state. The patches come from the\n   * update function itself and can either be normal or inverse patches.\n   *\n   * @param patches - An array of immer patches that are to be applied to make\n   * or undo changes.\n   */\n  applyPatches(patches) {\n    const nextState = _immer.applyPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), patches);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n  }\n  /**\n   * Prepares the controller for garbage collection. This should be extended\n   * by any subclasses to clean up any additional connections or events.\n   *\n   * The only cleanup performed here is to remove listeners. While technically\n   * this is not required to ensure this instance is garbage collected, it at\n   * least ensures this instance won't be responsible for preventing the\n   * listeners from being garbage collected.\n   */\n  destroy() {\n    this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n  }\n};\n_internalState = new WeakMap();\nfunction getAnonymizedState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"anonymous\");\n}\nfunction getPersistentState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"persist\");\n}\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n  return Object.keys(state).reduce((derivedState, key) => {\n    try {\n      const stateMetadata = metadata[key];\n      if (!stateMetadata) {\n        throw new Error(`No metadata found for '${String(key)}'`);\n      }\n      const propertyMetadata = stateMetadata[metadataProperty];\n      const stateProperty = state[key];\n      if (typeof propertyMetadata === \"function\") {\n        derivedState[key] = propertyMetadata(stateProperty);\n      } else if (propertyMetadata) {\n        derivedState[key] = stateProperty;\n      }\n      return derivedState;\n    } catch (error) {\n      setTimeout(() => {\n        throw error;\n      });\n      return derivedState;\n    }\n  }, {});\n}\n\n\n\n\n\nexports.BaseController = BaseController; exports.getAnonymizedState = getAnonymizedState; exports.getPersistentState = getPersistentState;\n//# sourceMappingURL=chunk-IURK6TKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RestrictedControllerMessenger.ts\nvar _controllerMessenger, _controllerName, _allowedActions, _allowedEvents, _isAllowedEvent, isAllowedEvent_fn, _isAllowedAction, isAllowedAction_fn, _isInCurrentNamespace, isInCurrentNamespace_fn;\nvar RestrictedControllerMessenger = class {\n  /**\n   * Constructs a restricted controller messenger\n   *\n   * The provided allowlists grant the ability to call the listed actions and subscribe to the\n   * listed events. The \"name\" provided grants ownership of any actions and events under that\n   * namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - The controller options.\n   * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   */\n  constructor({\n    controllerMessenger,\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    /**\n     * Determine whether the given event type is allowed. Event types are\n     * allowed if they are in the current namespace or on the list of\n     * allowed events.\n     *\n     * @param eventType - The event type to check.\n     * @returns Whether the event type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedEvent);\n    /**\n     * Determine whether the given action type is allowed. Action types\n     * are allowed if they are in the current namespace or on the list of\n     * allowed actions.\n     *\n     * @param actionType - The action type to check.\n     * @returns Whether the action type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedAction);\n    /**\n     * Determine whether the given name is within the current namespace.\n     *\n     * @param name - The name to check\n     * @returns Whether the name is within the current namespace\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInCurrentNamespace);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerMessenger, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerName, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedActions, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedEvents, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerMessenger, controllerMessenger);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerName, name);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedActions, allowedActions);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedEvents, allowedEvents);\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * The action type this handler is registered under *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw if an action handler that is not in the current namespace is being registered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  registerActionHandler(action, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed registering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerActionHandler(action, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * The action type being unregistered *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unique identifier for this action.\n   * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  unregisterActionHandler(action) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed unregistering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unregisterActionHandler(action);\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * The action type being called must be on the action allowlist.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of allowed Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedAction, isAllowedAction_fn).call(this, actionType)) {\n      throw new Error(`Action missing from allow list: ${actionType}`);\n    }\n    const response = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).call(\n      actionType,\n      ...params\n    );\n    return response;\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * The event type *must* be in the current namespace\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerInitialEventPayload({\n      eventType,\n      getPayload\n    });\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * The event type being published *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @throws Will throw if an event that is not in the current namespace is being published.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  publish(event, ...payload) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).publish(event, ...payload);\n  }\n  subscribe(event, handler, selector) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    if (selector) {\n      return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler, selector);\n    }\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler);\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * The event type being unsubscribed to must be on the event allowlist.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw if the given event is not an allowed event for this controller messenger.\n   * @template EventType - A type union of allowed Event type strings.\n   */\n  unsubscribe(event, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unsubscribe(event, handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * The event type being cleared *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  clearEventSubscriptions(event) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed clearing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).clearEventSubscriptions(event);\n  }\n};\n_controllerMessenger = new WeakMap();\n_controllerName = new WeakMap();\n_allowedActions = new WeakMap();\n_allowedEvents = new WeakMap();\n_isAllowedEvent = new WeakSet();\nisAllowedEvent_fn = function(eventType) {\n  const allowedEvents = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedEvents);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType) || allowedEvents !== null && allowedEvents.includes(eventType);\n};\n_isAllowedAction = new WeakSet();\nisAllowedAction_fn = function(actionType) {\n  const allowedActions = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedActions);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, actionType) || allowedActions !== null && allowedActions.includes(actionType);\n};\n_isInCurrentNamespace = new WeakSet();\nisInCurrentNamespace_fn = function(name) {\n  return name.startsWith(`${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:`);\n};\n\n\n\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n//# sourceMappingURL=chunk-UJFCPTF3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFTHCJ6HYjs = require('./chunk-FTHCJ6HY.js');\n\n\n\n\nvar _chunkIURK6TKDjs = require('./chunk-IURK6TKD.js');\n\n\nvar _chunkG42723LGjs = require('./chunk-G42723LG.js');\n\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\nexports.BaseController = _chunkIURK6TKDjs.BaseController; exports.BaseControllerV1 = _chunkFTHCJ6HYjs.BaseControllerV1; exports.ControllerMessenger = _chunkG42723LGjs.ControllerMessenger; exports.RestrictedControllerMessenger = _chunkUJFCPTF3js.RestrictedControllerMessenger; exports.getAnonymizedState = _chunkIURK6TKDjs.getAnonymizedState; exports.getPersistentState = _chunkIURK6TKDjs.getPersistentState;\n//# sourceMappingURL=index.js.map","let { urlAlphabet } = require('./url-alphabet/index.cjs')\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nmodule.exports = { urlAlphabet }\n","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/NftController.ts\nvar _address = require('@ethersproject/address');\n\n\nvar _basecontroller = require('@metamask/base-controller');\n\n\n\n\n\n\n\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _utils = require('@metamask/utils');\nvar _asyncmutex = require('async-mutex');\nvar _bnjs = require('bn.js'); var _bnjs2 = _interopRequireDefault(_bnjs);\nvar _uuid = require('uuid');\nvar nftControllerMetadata = {\n  allNftContracts: { persist: true, anonymous: false },\n  allNfts: { persist: true, anonymous: false },\n  ignoredNfts: { persist: true, anonymous: false }\n};\nvar ALL_NFTS_STATE_KEY = \"allNfts\";\nvar ALL_NFTS_CONTRACTS_STATE_KEY = \"allNftContracts\";\nvar controllerName = \"NftController\";\nvar getDefaultNftControllerState = () => ({\n  allNftContracts: {},\n  allNfts: {},\n  ignoredNfts: []\n});\nvar _mutex, _selectedAccountId, _chainId, _ipfsGateway, _openSeaEnabled, _useIpfsSubdomains, _isIpfsGatewayEnabled, _onNftAdded, _onNetworkControllerNetworkDidChange, onNetworkControllerNetworkDidChange_fn, _onPreferencesControllerStateChange, onPreferencesControllerStateChange_fn, _onSelectedAccountChange, onSelectedAccountChange_fn, _updateNestedNftState, updateNestedNftState_fn, _getNftCollectionApi, getNftCollectionApi_fn, _getNftInformationFromApi, getNftInformationFromApi_fn, _getNftInformationFromTokenURI, getNftInformationFromTokenURI_fn, _getNftURIAndStandard, getNftURIAndStandard_fn, _getNftInformation, getNftInformation_fn, _getNftContractInformationFromContract, getNftContractInformationFromContract_fn, _getNftContractInformation, getNftContractInformation_fn, _addIndividualNft, addIndividualNft_fn, _addNftContract, addNftContract_fn, _removeAndIgnoreIndividualNft, removeAndIgnoreIndividualNft_fn, _removeIndividualNft, removeIndividualNft_fn, _removeNftContract, removeNftContract_fn, _validateWatchNft, validateWatchNft_fn, _getCorrectChainId, getCorrectChainId_fn, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn, _updateNftUpdateForAccount, updateNftUpdateForAccount_fn;\nvar NftController = class extends _basecontroller.BaseController {\n  /**\n   * Creates an NftController instance.\n   *\n   * @param options - The controller options.\n   * @param options.chainId - The chain ID of the current network.\n   * @param options.ipfsGateway - The configured IPFS gateway.\n   * @param options.openSeaEnabled - Controls whether the OpenSea API is used.\n   * @param options.useIpfsSubdomains - Controls whether IPFS subdomains are used.\n   * @param options.isIpfsGatewayEnabled - Controls whether IPFS is enabled or not.\n   * @param options.onNftAdded - Callback that is called when an NFT is added. Currently used pass data\n   * for tracking the NFT added event.\n   * @param options.messenger - The controller messenger.\n   * @param options.state - Initial state to set on this controller.\n   */\n  constructor({\n    chainId: initialChainId,\n    ipfsGateway = _controllerutils.IPFS_DEFAULT_GATEWAY_URL,\n    openSeaEnabled = false,\n    useIpfsSubdomains = true,\n    isIpfsGatewayEnabled = true,\n    onNftAdded,\n    messenger,\n    state = {}\n  }) {\n    super({\n      name: controllerName,\n      metadata: nftControllerMetadata,\n      messenger,\n      state: {\n        ...getDefaultNftControllerState(),\n        ...state\n      }\n    });\n    /**\n     * Handles the network change on the network controller.\n     * @param networkState - The new state of the preference controller.\n     * @param networkState.selectedNetworkClientId - The current selected network client id.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onNetworkControllerNetworkDidChange);\n    /**\n     * Handles the state change of the preference controller.\n     * @param preferencesState - The new state of the preference controller.\n     * @param preferencesState.ipfsGateway - The configured IPFS gateway.\n     * @param preferencesState.openSeaEnabled - Controls whether the OpenSea API is used.\n     * @param preferencesState.isIpfsGatewayEnabled - Controls whether IPFS is enabled or not.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onPreferencesControllerStateChange);\n    /**\n     * Handles the selected account change on the accounts controller.\n     * @param internalAccount - The new selected account.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onSelectedAccountChange);\n    /**\n     * Helper method to update nested state for allNfts and allNftContracts.\n     *\n     * @param newCollection - the modified piece of state to update in the controller's store\n     * @param baseStateKey - The root key in the store to update.\n     * @param passedConfig - An object containing the selectedAddress and chainId that are passed through the auto-detection flow.\n     * @param passedConfig.userAddress - the address passed through the NFT detection flow to ensure assets are stored to the correct account\n     * @param passedConfig.chainId - the chainId passed through the NFT detection flow to ensure assets are stored to the correct account\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateNestedNftState);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftCollectionApi);\n    /**\n     * Request individual NFT information from NFT API.\n     *\n     * @param contractAddress - Hex address of the NFT contract.\n     * @param tokenId - The NFT identifier.\n     * @returns Promise resolving to the current NFT name and image.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftInformationFromApi);\n    /**\n     * Request individual NFT information from contracts that follows Metadata Interface.\n     *\n     * @param contractAddress - Hex address of the NFT contract.\n     * @param tokenId - The NFT identifier.\n     * @param networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n     * @returns Promise resolving to the current NFT name and image.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftInformationFromTokenURI);\n    /**\n     * Retrieve NFT uri with  metadata. TODO Update method to use IPFS.\n     *\n     * @param contractAddress - NFT contract address.\n     * @param tokenId - NFT token id.\n     * @param networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n     * @returns Promise resolving NFT uri and token standard.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftURIAndStandard);\n    /**\n     * Request individual NFT information (name, image url and description).\n     *\n     * @param contractAddress - Hex address of the NFT contract.\n     * @param tokenId - The NFT identifier.\n     * @param networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n     * @returns Promise resolving to the current NFT name and image.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftInformation);\n    /**\n     * Request NFT contract information from the contract itself.\n     *\n     * @param contractAddress - Hex address of the NFT contract.\n     * @param networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n     * @returns Promise resolving to the current NFT name and image.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftContractInformationFromContract);\n    /**\n     * Request NFT contract information from Blockchain and aggregate with received data from NFTMetadata.\n     *\n     * @param contractAddress - Hex address of the NFT contract.\n     * @param nftMetadataFromApi - Received NFT information to be aggregated with blockchain contract information.\n     * @param networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n     * @returns Promise resolving to the NFT contract name, image and description.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftContractInformation);\n    /**\n     * Adds an individual NFT to the stored NFT list.\n     *\n     * @param tokenAddress - Hex address of the NFT contract.\n     * @param tokenId - The NFT identifier.\n     * @param nftMetadata - NFT optional information (name, image and description).\n     * @param nftContract - An object containing contract data of the NFT being added.\n     * @param chainId - The chainId of the network where the NFT is being added.\n     * @param userAddress - The address of the account where the NFT is being added.\n     * @param source - Whether the NFT was detected, added manually or suggested by a dapp.\n     * @returns A promise resolving to `undefined`.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _addIndividualNft);\n    /**\n     * Adds an NFT contract to the stored NFT contracts list.\n     *\n     * @param options - options.\n     * @param options.tokenAddress - Hex address of the NFT contract.\n     * @param options.userAddress - The address of the account where the NFT is being added.\n     * @param options.nftMetadata - The retrieved NFTMetadata from API.\n     * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n     * @param options.source - Whether the NFT was detected, added manually or suggested by a dapp.\n     * @returns Promise resolving to the current NFT contracts list.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _addNftContract);\n    /**\n     * Removes an individual NFT from the stored token list and saves it in ignored NFTs list.\n     *\n     * @param address - Hex address of the NFT contract.\n     * @param tokenId - Token identifier of the NFT.\n     * @param options - options.\n     * @param options.chainId - The chainId of the network where the NFT is being removed.\n     * @param options.userAddress - The address of the account where the NFT is being removed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _removeAndIgnoreIndividualNft);\n    /**\n     * Removes an individual NFT from the stored token list.\n     *\n     * @param address - Hex address of the NFT contract.\n     * @param tokenId - Token identifier of the NFT.\n     * @param options - options.\n     * @param options.chainId - The chainId of the network where the NFT is being removed.\n     * @param options.userAddress - The address of the account where the NFT is being removed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _removeIndividualNft);\n    /**\n     * Removes an NFT contract to the stored NFT contracts list.\n     *\n     * @param address - Hex address of the NFT contract.\n     * @param options - options.\n     * @param options.chainId - The chainId of the network where the NFT is being removed.\n     * @param options.userAddress - The address of the account where the NFT is being removed.\n     * @returns Promise resolving to the current NFT contracts list.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _removeNftContract);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _validateWatchNft);\n    // temporary method to get the correct chainId until we remove chainId from the config & the chainId arg from the detection logic\n    // Just a helper method to prefer the networkClient chainId first then the chainId argument and then finally the config chainId\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getCorrectChainId);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getAddressOrSelectedAddress);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateNftUpdateForAccount);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _mutex, new (0, _asyncmutex.Mutex)());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _selectedAccountId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _chainId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _ipfsGateway, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _openSeaEnabled, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _useIpfsSubdomains, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isIpfsGatewayEnabled, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onNftAdded, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, this.messagingSystem.call(\n      \"AccountsController:getSelectedAccount\"\n    ).id);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, initialChainId);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _ipfsGateway, ipfsGateway);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _openSeaEnabled, openSeaEnabled);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _useIpfsSubdomains, useIpfsSubdomains);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isIpfsGatewayEnabled, isIpfsGatewayEnabled);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _onNftAdded, onNftAdded);\n    this.messagingSystem.subscribe(\n      \"PreferencesController:stateChange\",\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onPreferencesControllerStateChange, onPreferencesControllerStateChange_fn).bind(this)\n    );\n    this.messagingSystem.subscribe(\n      \"NetworkController:networkDidChange\",\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onNetworkControllerNetworkDidChange, onNetworkControllerNetworkDidChange_fn).bind(this)\n    );\n    this.messagingSystem.subscribe(\n      \"AccountsController:selectedEvmAccountChange\",\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onSelectedAccountChange, onSelectedAccountChange_fn).bind(this)\n    );\n  }\n  getNftApi() {\n    return `${_controllerutils.NFT_API_BASE_URL}/tokens`;\n  }\n  /**\n   * Adds a new suggestedAsset to state. Parameters will be validated according to\n   * asset type being watched. A `<suggestedNftMeta.id>:pending` hub event will be emitted once added.\n   *\n   * @param asset - The asset to be watched. For now ERC721 and ERC1155 tokens are accepted.\n   * @param asset.address - The address of the asset contract.\n   * @param asset.tokenId - The ID of the asset.\n   * @param type - The asset type.\n   * @param origin - Domain origin to register the asset from.\n   * @param options - Options bag.\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @param options.userAddress - The address of the account where the NFT is being added.\n   * @returns Object containing a Promise resolving to the suggestedAsset address if accepted.\n   */\n  async watchNft(asset, type, origin, {\n    networkClientId,\n    userAddress\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    if (!addressToSearch) {\n      return;\n    }\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _validateWatchNft, validateWatchNft_fn).call(this, asset, type, addressToSearch);\n    const nftMetadata = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftInformation, getNftInformation_fn).call(this, asset.address, asset.tokenId, networkClientId);\n    if (nftMetadata.standard && nftMetadata.standard !== type) {\n      throw _rpcerrors.rpcErrors.invalidInput(\n        `Suggested NFT of type ${nftMetadata.standard} does not match received type ${type}`\n      );\n    }\n    const suggestedNftMeta = {\n      asset: { ...asset, ...nftMetadata },\n      type,\n      id: _uuid.v4.call(void 0, ),\n      time: Date.now(),\n      interactingAddress: addressToSearch,\n      origin\n    };\n    await this._requestApproval(suggestedNftMeta);\n    const { address, tokenId } = asset;\n    const { name, standard, description, image } = nftMetadata;\n    await this.addNft(address, tokenId, {\n      nftMetadata: {\n        name: name ?? null,\n        description: description ?? null,\n        image: image ?? null,\n        standard: standard ?? null\n      },\n      userAddress,\n      source: \"dapp\" /* Dapp */,\n      networkClientId\n    });\n  }\n  /**\n   * Sets an OpenSea API key to retrieve NFT information.\n   *\n   * @param openSeaApiKey - OpenSea API key.\n   */\n  setApiKey(openSeaApiKey) {\n    this.openSeaApiKey = openSeaApiKey;\n  }\n  /**\n   * Checks the ownership of a ERC-721 or ERC-1155 NFT for a given address.\n   *\n   * @param ownerAddress - User public address.\n   * @param nftAddress - NFT contract address.\n   * @param tokenId - NFT token ID.\n   * @param options - Options bag.\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @returns Promise resolving the NFT ownership.\n   */\n  async isNftOwner(ownerAddress, nftAddress, tokenId, {\n    networkClientId\n  } = {}) {\n    try {\n      const owner = await this.messagingSystem.call(\n        \"AssetsContractController:getERC721OwnerOf\",\n        nftAddress,\n        tokenId,\n        networkClientId\n      );\n      return ownerAddress.toLowerCase() === owner.toLowerCase();\n    } catch {\n    }\n    try {\n      const balance = await this.messagingSystem.call(\n        \"AssetsContractController:getERC1155BalanceOf\",\n        ownerAddress,\n        nftAddress,\n        tokenId,\n        networkClientId\n      );\n      return !balance.isZero();\n    } catch {\n    }\n    throw new Error(\n      `Unable to verify ownership. Possibly because the standard is not supported or the user's currently selected network does not match the chain of the asset in question.`\n    );\n  }\n  /**\n   * Verifies currently selected address owns entered NFT address/tokenId combo and\n   * adds the NFT and respective NFT contract to the stored NFT and NFT contracts lists.\n   *\n   * @param address - Hex address of the NFT contract.\n   * @param tokenId - The NFT identifier.\n   * @param options - an object of arguments\n   * @param options.userAddress - The address of the current user.\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @param options.source - Whether the NFT was detected, added manually or suggested by a dapp.\n   */\n  async addNftVerifyOwnership(address, tokenId, {\n    userAddress,\n    networkClientId,\n    source\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    if (!await this.isNftOwner(addressToSearch, address, tokenId, {\n      networkClientId\n    })) {\n      throw new Error(\"This NFT is not owned by the user\");\n    }\n    await this.addNft(address, tokenId, {\n      networkClientId,\n      userAddress: addressToSearch,\n      source\n    });\n  }\n  /**\n   * Adds an NFT and respective NFT contract to the stored NFT and NFT contracts lists.\n   *\n   * @param tokenAddress - Hex address of the NFT contract.\n   * @param tokenId - The NFT identifier.\n   * @param options - an object of arguments\n   * @param options.nftMetadata - NFT optional metadata.\n   * @param options.userAddress - The address of the current user.\n   * @param options.source - Whether the NFT was detected, added manually or suggested by a dapp.\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @returns Promise resolving to the current NFT list.\n   */\n  async addNft(tokenAddress, tokenId, {\n    nftMetadata,\n    userAddress,\n    source = \"custom\" /* Custom */,\n    networkClientId\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    if (!addressToSearch) {\n      return;\n    }\n    const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, tokenAddress);\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, { networkClientId });\n    nftMetadata = nftMetadata || await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftInformation, getNftInformation_fn).call(this, checksumHexAddress, tokenId, networkClientId);\n    const newNftContracts = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _addNftContract, addNftContract_fn).call(this, {\n      tokenAddress: checksumHexAddress,\n      userAddress: addressToSearch,\n      networkClientId,\n      source,\n      nftMetadata\n    });\n    const nftContract = newNftContracts.find(\n      (contract) => contract.address.toLowerCase() === checksumHexAddress.toLowerCase()\n    );\n    if (nftContract) {\n      await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _addIndividualNft, addIndividualNft_fn).call(this, checksumHexAddress, tokenId, nftMetadata, nftContract, chainId, addressToSearch, source);\n    }\n  }\n  /**\n   * Refetches NFT metadata and updates the state\n   *\n   * @param options - Options for refetching NFT metadata\n   * @param options.nfts - nfts to update metadata for.\n   * @param options.userAddress - The current user address\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   */\n  async updateNftMetadata({\n    nfts,\n    userAddress,\n    networkClientId\n  }) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n    try {\n      const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, { networkClientId });\n      const nftsWithChecksumAdr = nfts.map((nft) => {\n        return {\n          ...nft,\n          address: _controllerutils.toChecksumHexAddress.call(void 0, nft.address)\n        };\n      });\n      const nftMetadataResults = await Promise.all(\n        nftsWithChecksumAdr.map(async (nft) => {\n          const resMetadata = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftInformation, getNftInformation_fn).call(this, nft.address, nft.tokenId, networkClientId);\n          return {\n            nft,\n            newMetadata: resMetadata\n          };\n        })\n      );\n      const nftsWithDifferentMetadata = [];\n      const { allNfts } = this.state;\n      const stateNfts = allNfts[addressToSearch]?.[chainId] || [];\n      nftMetadataResults.forEach((singleNft) => {\n        const existingEntry = stateNfts.find(\n          (nft) => nft.address.toLowerCase() === singleNft.nft.address.toLowerCase() && nft.tokenId === singleNft.nft.tokenId\n        );\n        if (existingEntry) {\n          const differentMetadata = _chunkMZI3SDQNjs.compareNftMetadata.call(void 0, \n            singleNft.newMetadata,\n            existingEntry\n          );\n          if (differentMetadata) {\n            nftsWithDifferentMetadata.push(singleNft);\n          }\n        }\n      });\n      if (nftsWithDifferentMetadata.length !== 0) {\n        nftsWithDifferentMetadata.forEach(\n          (elm) => this.updateNft(elm.nft, elm.newMetadata, addressToSearch, chainId)\n        );\n      }\n    } finally {\n      releaseLock();\n    }\n  }\n  /**\n   * Removes an NFT from the stored token list.\n   *\n   * @param address - Hex address of the NFT contract.\n   * @param tokenId - Token identifier of the NFT.\n   * @param options - an object of arguments\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @param options.userAddress - The address of the account where the NFT is being removed.\n   */\n  removeNft(address, tokenId, {\n    networkClientId,\n    userAddress\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, { networkClientId });\n    const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _removeIndividualNft, removeIndividualNft_fn).call(this, checksumHexAddress, tokenId, {\n      chainId,\n      userAddress: addressToSearch\n    });\n    const { allNfts } = this.state;\n    const nfts = allNfts[addressToSearch]?.[chainId] || [];\n    const remainingNft = nfts.find(\n      (nft) => nft.address.toLowerCase() === checksumHexAddress.toLowerCase()\n    );\n    if (!remainingNft) {\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _removeNftContract, removeNftContract_fn).call(this, checksumHexAddress, {\n        chainId,\n        userAddress: addressToSearch\n      });\n    }\n  }\n  /**\n   * Removes an NFT from the stored token list and saves it in ignored NFTs list.\n   *\n   * @param address - Hex address of the NFT contract.\n   * @param tokenId - Token identifier of the NFT.\n   * @param options - an object of arguments\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @param options.userAddress - The address of the account where the NFT is being removed.\n   */\n  removeAndIgnoreNft(address, tokenId, {\n    networkClientId,\n    userAddress\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, { networkClientId });\n    const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _removeAndIgnoreIndividualNft, removeAndIgnoreIndividualNft_fn).call(this, checksumHexAddress, tokenId, {\n      chainId,\n      userAddress: addressToSearch\n    });\n    const { allNfts } = this.state;\n    const nfts = allNfts[addressToSearch]?.[chainId] || [];\n    const remainingNft = nfts.find(\n      (nft) => nft.address.toLowerCase() === checksumHexAddress.toLowerCase()\n    );\n    if (!remainingNft) {\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _removeNftContract, removeNftContract_fn).call(this, checksumHexAddress, {\n        chainId,\n        userAddress: addressToSearch\n      });\n    }\n  }\n  /**\n   * Removes all NFTs from the ignored list.\n   */\n  clearIgnoredNfts() {\n    this.update((state) => {\n      state.ignoredNfts = [];\n    });\n  }\n  /**\n   * Checks whether input NFT is still owned by the user\n   * And updates the isCurrentlyOwned value on the NFT object accordingly.\n   *\n   * @param nft - The NFT object to check and update.\n   * @param batch - A boolean indicating whether this method is being called as part of a batch or single update.\n   * @param accountParams - The userAddress and chainId to check ownership against\n   * @param accountParams.userAddress - the address passed through the confirmed transaction flow to ensure assets are stored to the correct account\n   * @param accountParams.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @returns the NFT with the updated isCurrentlyOwned value\n   */\n  async checkAndUpdateSingleNftOwnershipStatus(nft, batch, {\n    userAddress,\n    networkClientId\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, { networkClientId });\n    const { address, tokenId } = nft;\n    let isOwned = nft.isCurrentlyOwned;\n    try {\n      isOwned = await this.isNftOwner(addressToSearch, address, tokenId, {\n        networkClientId\n      });\n    } catch {\n    }\n    const updatedNft = {\n      ...nft,\n      isCurrentlyOwned: isOwned\n    };\n    if (batch) {\n      return updatedNft;\n    }\n    const { allNfts } = this.state;\n    const nfts = [...allNfts[addressToSearch]?.[chainId] || []];\n    const indexToUpdate = nfts.findIndex(\n      (item) => item.tokenId === tokenId && item.address.toLowerCase() === address.toLowerCase()\n    );\n    if (indexToUpdate !== -1) {\n      nfts[indexToUpdate] = updatedNft;\n      this.update((state) => {\n        state.allNfts[addressToSearch] = Object.assign(\n          {},\n          state.allNfts[addressToSearch],\n          {\n            [chainId]: nfts\n          }\n        );\n      });\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, nfts, ALL_NFTS_STATE_KEY, {\n        userAddress: addressToSearch,\n        chainId\n      });\n    }\n    return updatedNft;\n  }\n  /**\n   * Checks whether NFTs associated with current selectedAddress/chainId combination are still owned by the user\n   * And updates the isCurrentlyOwned value on each accordingly.\n   * @param options - an object of arguments\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @param options.userAddress - The address of the account where the NFT ownership status is checked/updated.\n   */\n  async checkAndUpdateAllNftsOwnershipStatus({\n    networkClientId,\n    userAddress\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, { networkClientId });\n    const { allNfts } = this.state;\n    const nfts = allNfts[addressToSearch]?.[chainId] || [];\n    const updatedNfts = await Promise.all(\n      nfts.map(async (nft) => {\n        return await this.checkAndUpdateSingleNftOwnershipStatus(nft, true, {\n          networkClientId,\n          userAddress\n        }) ?? nft;\n      })\n    );\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, updatedNfts, ALL_NFTS_STATE_KEY, {\n      userAddress: addressToSearch,\n      chainId\n    });\n  }\n  /**\n   * Update NFT favorite status.\n   *\n   * @param address - Hex address of the NFT contract.\n   * @param tokenId - Hex address of the NFT contract.\n   * @param favorite - NFT new favorite status.\n   * @param options - an object of arguments\n   * @param options.networkClientId - The networkClientId that can be used to identify the network client to use for this request.\n   * @param options.userAddress - The address of the account where the NFT is being removed.\n   */\n  updateNftFavoriteStatus(address, tokenId, favorite, {\n    networkClientId,\n    userAddress\n  } = {}) {\n    const addressToSearch = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, userAddress);\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, { networkClientId });\n    const { allNfts } = this.state;\n    const nfts = [...allNfts[addressToSearch]?.[chainId] || []];\n    const index = nfts.findIndex(\n      (nft) => nft.address === address && nft.tokenId === tokenId\n    );\n    if (index === -1) {\n      return;\n    }\n    const updatedNft = {\n      ...nfts[index],\n      favorite\n    };\n    nfts[index] = updatedNft;\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, nfts, ALL_NFTS_STATE_KEY, {\n      chainId,\n      userAddress: addressToSearch\n    });\n  }\n  /**\n   * Returns an NFT by the address and token id.\n   *\n   * @param address - Hex address of the NFT contract.\n   * @param tokenId - Number that represents the id of the token.\n   * @param selectedAddress - Hex address of the user account.\n   * @param chainId - Id of the current network.\n   * @returns Object containing the NFT and its position in the array\n   */\n  findNftByAddressAndTokenId(address, tokenId, selectedAddress, chainId) {\n    const { allNfts } = this.state;\n    const nfts = allNfts[selectedAddress]?.[chainId] || [];\n    const index = nfts.findIndex(\n      (nft) => nft.address.toLowerCase() === address.toLowerCase() && nft.tokenId === tokenId\n    );\n    if (index === -1) {\n      return null;\n    }\n    return { nft: nfts[index], index };\n  }\n  /**\n   * Update NFT data.\n   *\n   * @param nft - NFT object to find the right NFT to updates.\n   * @param updates - NFT partial object to update properties of the NFT.\n   * @param selectedAddress - Hex address of the user account.\n   * @param chainId - Id of the current network.\n   */\n  updateNft(nft, updates, selectedAddress, chainId) {\n    const { allNfts } = this.state;\n    const nfts = allNfts[selectedAddress]?.[chainId] || [];\n    const nftInfo = this.findNftByAddressAndTokenId(\n      nft.address,\n      nft.tokenId,\n      selectedAddress,\n      chainId\n    );\n    if (!nftInfo) {\n      return;\n    }\n    const updatedNft = {\n      ...nft,\n      ...updates\n    };\n    const newNfts = [\n      ...nfts.slice(0, nftInfo.index),\n      updatedNft,\n      ...nfts.slice(nftInfo.index + 1)\n    ];\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, newNfts, ALL_NFTS_STATE_KEY, {\n      chainId,\n      userAddress: selectedAddress\n    });\n  }\n  /**\n   * Resets the transaction status of an NFT.\n   *\n   * @param transactionId - NFT transaction id.\n   * @param selectedAddress - Hex address of the user account.\n   * @param chainId - Id of the current network.\n   * @returns a boolean indicating if the reset was well succeeded or not\n   */\n  resetNftTransactionStatusByTransactionId(transactionId, selectedAddress, chainId) {\n    const { allNfts } = this.state;\n    const nfts = allNfts[selectedAddress]?.[chainId] || [];\n    const index = nfts.findIndex(\n      (nft) => nft.transactionId === transactionId\n    );\n    if (index === -1) {\n      return false;\n    }\n    const updatedNft = {\n      ...nfts[index],\n      transactionId: void 0\n    };\n    const newNfts = [\n      ...nfts.slice(0, index),\n      updatedNft,\n      ...nfts.slice(index + 1)\n    ];\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, newNfts, ALL_NFTS_STATE_KEY, {\n      chainId,\n      userAddress: selectedAddress\n    });\n    return true;\n  }\n  /**\n   * Fetches NFT Collection Metadata from the NFT API.\n   *\n   * @param contractAddresses - The contract addresses of the NFTs.\n   * @param chainId - The chain ID of the network where the NFT is located.\n   * @returns NFT collections metadata.\n   */\n  async getNFTContractInfo(contractAddresses, chainId) {\n    const url = new URL(_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftCollectionApi, getNftCollectionApi_fn).call(this));\n    url.searchParams.append(\"chainId\", chainId);\n    for (const address of contractAddresses) {\n      url.searchParams.append(\"contract\", address);\n    }\n    return await _controllerutils.handleFetch.call(void 0, url, {\n      headers: {\n        Version: _controllerutils.NFT_API_VERSION\n      }\n    });\n  }\n  async _requestApproval(suggestedNftMeta) {\n    return this.messagingSystem.call(\n      \"ApprovalController:addRequest\",\n      {\n        id: suggestedNftMeta.id,\n        origin: suggestedNftMeta.origin,\n        type: _controllerutils.ApprovalType.WatchAsset,\n        requestData: {\n          id: suggestedNftMeta.id,\n          interactingAddress: suggestedNftMeta.interactingAddress,\n          asset: {\n            address: suggestedNftMeta.asset.address,\n            tokenId: suggestedNftMeta.asset.tokenId,\n            name: suggestedNftMeta.asset.name,\n            description: suggestedNftMeta.asset.description,\n            image: suggestedNftMeta.asset.image,\n            standard: suggestedNftMeta.asset.standard\n          }\n        }\n      },\n      true\n    );\n  }\n};\n_mutex = new WeakMap();\n_selectedAccountId = new WeakMap();\n_chainId = new WeakMap();\n_ipfsGateway = new WeakMap();\n_openSeaEnabled = new WeakMap();\n_useIpfsSubdomains = new WeakMap();\n_isIpfsGatewayEnabled = new WeakMap();\n_onNftAdded = new WeakMap();\n_onNetworkControllerNetworkDidChange = new WeakSet();\nonNetworkControllerNetworkDidChange_fn = function({\n  selectedNetworkClientId\n}) {\n  const {\n    configuration: { chainId }\n  } = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  );\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, chainId);\n};\n_onPreferencesControllerStateChange = new WeakSet();\nonPreferencesControllerStateChange_fn = async function({\n  ipfsGateway,\n  openSeaEnabled,\n  isIpfsGatewayEnabled\n}) {\n  const selectedAccount = this.messagingSystem.call(\n    \"AccountsController:getSelectedAccount\"\n  );\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, selectedAccount.id);\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _ipfsGateway, ipfsGateway);\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _openSeaEnabled, openSeaEnabled);\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isIpfsGatewayEnabled, isIpfsGatewayEnabled);\n  const needsUpdateNftMetadata = isIpfsGatewayEnabled && ipfsGateway !== \"\" || openSeaEnabled;\n  if (needsUpdateNftMetadata && selectedAccount) {\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNftUpdateForAccount, updateNftUpdateForAccount_fn).call(this, selectedAccount);\n  }\n};\n_onSelectedAccountChange = new WeakSet();\nonSelectedAccountChange_fn = async function(internalAccount) {\n  const oldSelectedAccountId = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _selectedAccountId);\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, internalAccount.id);\n  const needsUpdateNftMetadata = (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isIpfsGatewayEnabled) && _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ipfsGateway) !== \"\" || _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _openSeaEnabled)) && oldSelectedAccountId !== internalAccount.id;\n  if (needsUpdateNftMetadata) {\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNftUpdateForAccount, updateNftUpdateForAccount_fn).call(this, internalAccount);\n  }\n};\n_updateNestedNftState = new WeakSet();\nupdateNestedNftState_fn = function(newCollection, baseStateKey, { userAddress, chainId }) {\n  if (!userAddress) {\n    return;\n  }\n  this.update((state) => {\n    const oldState = state[baseStateKey];\n    const addressState = oldState[userAddress] || {};\n    const newAddressState = {\n      ...addressState,\n      [chainId]: newCollection\n    };\n    state[baseStateKey] = {\n      ...oldState,\n      [userAddress]: newAddressState\n    };\n  });\n};\n_getNftCollectionApi = new WeakSet();\ngetNftCollectionApi_fn = function() {\n  return `${_controllerutils.NFT_API_BASE_URL}/collections`;\n};\n_getNftInformationFromApi = new WeakSet();\ngetNftInformationFromApi_fn = async function(contractAddress, tokenId) {\n  const urlParams = new URLSearchParams({\n    chainIds: \"1\",\n    tokens: `${contractAddress}:${tokenId}`,\n    includeTopBid: \"true\",\n    includeAttributes: \"true\",\n    includeLastSale: \"true\"\n  }).toString();\n  const nftInformation = await _controllerutils.fetchWithErrorHandling.call(void 0, {\n    url: `${this.getNftApi()}?${urlParams}`,\n    options: {\n      headers: {\n        Version: _controllerutils.NFT_API_VERSION\n      }\n    }\n  });\n  const getCollectionParams = new URLSearchParams({\n    chainId: \"1\",\n    id: `${nftInformation?.tokens[0]?.token?.collection?.id}`\n  }).toString();\n  const collectionInformation = await _controllerutils.fetchWithErrorHandling.call(void 0, {\n    url: `${_controllerutils.NFT_API_BASE_URL}/collections?${getCollectionParams}`,\n    options: {\n      headers: {\n        Version: _controllerutils.NFT_API_VERSION\n      }\n    }\n  });\n  if (!nftInformation?.tokens?.[0]?.token) {\n    return {\n      name: null,\n      description: null,\n      image: null,\n      standard: null\n    };\n  }\n  const {\n    image,\n    metadata: { imageOriginal } = {},\n    name,\n    description,\n    collection,\n    kind,\n    rarityRank,\n    rarity,\n    attributes,\n    lastSale,\n    imageSmall\n  } = nftInformation.tokens[0].token;\n  const nftMetadata = Object.assign(\n    {},\n    { name: name || null },\n    { description: description || null },\n    { image: image || null },\n    collection?.creator && { creator: collection.creator },\n    imageOriginal && { imageOriginal },\n    imageSmall && { imageThumbnail: imageSmall },\n    kind && { standard: kind.toUpperCase() },\n    lastSale && { lastSale },\n    attributes && { attributes },\n    nftInformation.tokens[0].market?.topBid && {\n      topBid: nftInformation.tokens[0].market?.topBid\n    },\n    rarityRank && { rarityRank },\n    rarity && { rarity },\n    (collection || collectionInformation) && {\n      collection: {\n        ...collection || {},\n        creator: collection?.creator || collectionInformation?.collections[0].creator,\n        openseaVerificationStatus: collectionInformation?.collections[0].openseaVerificationStatus,\n        contractDeployedAt: collectionInformation?.collections[0].contractDeployedAt,\n        ownerCount: collectionInformation?.collections[0].ownerCount,\n        topBid: collectionInformation?.collections[0].topBid\n      }\n    }\n  );\n  return nftMetadata;\n};\n_getNftInformationFromTokenURI = new WeakSet();\ngetNftInformationFromTokenURI_fn = async function(contractAddress, tokenId, networkClientId) {\n  const result = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftURIAndStandard, getNftURIAndStandard_fn).call(this, contractAddress, tokenId, networkClientId);\n  let tokenURI = result[0];\n  const standard = result[1];\n  const hasIpfsTokenURI = tokenURI.startsWith(\"ipfs://\");\n  if (hasIpfsTokenURI && !_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isIpfsGatewayEnabled)) {\n    return {\n      image: null,\n      name: null,\n      description: null,\n      standard: standard || null,\n      favorite: false,\n      tokenURI: tokenURI ?? null\n    };\n  }\n  const isDisplayNFTMediaToggleEnabled = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _openSeaEnabled);\n  if (!hasIpfsTokenURI && !isDisplayNFTMediaToggleEnabled) {\n    return {\n      image: null,\n      name: null,\n      description: null,\n      standard: standard || null,\n      favorite: false,\n      tokenURI: tokenURI ?? null\n    };\n  }\n  if (hasIpfsTokenURI) {\n    tokenURI = await _chunkMZI3SDQNjs.getFormattedIpfsUrl.call(void 0, \n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ipfsGateway),\n      tokenURI,\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _useIpfsSubdomains)\n    );\n  }\n  if (tokenURI.startsWith(\"data:image/\")) {\n    return {\n      image: tokenURI,\n      name: null,\n      description: null,\n      standard: standard || null,\n      favorite: false,\n      tokenURI: tokenURI ?? null\n    };\n  }\n  try {\n    const object = await _controllerutils.handleFetch.call(void 0, tokenURI);\n    const image = Object.prototype.hasOwnProperty.call(object, \"image\") ? \"image\" : (\n      /* istanbul ignore next */\n      \"image_url\"\n    );\n    return {\n      image: object[image],\n      name: object.name,\n      description: object.description,\n      standard,\n      favorite: false,\n      tokenURI: tokenURI ?? null\n    };\n  } catch {\n    return {\n      image: null,\n      name: null,\n      description: null,\n      standard: standard || null,\n      favorite: false,\n      tokenURI: tokenURI ?? null\n    };\n  }\n};\n_getNftURIAndStandard = new WeakSet();\ngetNftURIAndStandard_fn = async function(contractAddress, tokenId, networkClientId) {\n  try {\n    const uri = await this.messagingSystem.call(\n      \"AssetsContractController:getERC721TokenURI\",\n      contractAddress,\n      tokenId,\n      networkClientId\n    );\n    return [uri, _controllerutils.ERC721];\n  } catch {\n  }\n  try {\n    const tokenURI = await this.messagingSystem.call(\n      \"AssetsContractController:getERC1155TokenURI\",\n      contractAddress,\n      tokenId,\n      networkClientId\n    );\n    if (!tokenURI.includes(\"{id}\")) {\n      return [tokenURI, _controllerutils.ERC1155];\n    }\n    const hexTokenId = _utils.remove0x.call(void 0, _controllerutils.BNToHex.call(void 0, new (0, _bnjs2.default)(tokenId))).padStart(64, \"0\").toLowerCase();\n    return [tokenURI.replace(\"{id}\", hexTokenId), _controllerutils.ERC1155];\n  } catch {\n  }\n  return [\"\", \"\"];\n};\n_getNftInformation = new WeakSet();\ngetNftInformation_fn = async function(contractAddress, tokenId, networkClientId) {\n  const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, {\n    networkClientId\n  });\n  const [blockchainMetadata, nftApiMetadata] = await Promise.all([\n    _controllerutils.safelyExecute.call(void 0, \n      () => _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftInformationFromTokenURI, getNftInformationFromTokenURI_fn).call(this, contractAddress, tokenId, networkClientId)\n    ),\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _openSeaEnabled) && chainId === \"0x1\" ? _controllerutils.safelyExecute.call(void 0, \n      () => _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftInformationFromApi, getNftInformationFromApi_fn).call(this, contractAddress, tokenId)\n    ) : void 0\n  ]);\n  return {\n    ...nftApiMetadata,\n    name: blockchainMetadata?.name ?? nftApiMetadata?.name ?? null,\n    description: blockchainMetadata?.description ?? nftApiMetadata?.description ?? null,\n    image: nftApiMetadata?.image ?? blockchainMetadata?.image ?? null,\n    standard: blockchainMetadata?.standard ?? nftApiMetadata?.standard ?? null,\n    tokenURI: blockchainMetadata?.tokenURI ?? null\n  };\n};\n_getNftContractInformationFromContract = new WeakSet();\ngetNftContractInformationFromContract_fn = async function(contractAddress, networkClientId) {\n  const [name, symbol] = await Promise.all([\n    this.messagingSystem.call(\n      \"AssetsContractController:getERC721AssetName\",\n      contractAddress,\n      networkClientId\n    ),\n    this.messagingSystem.call(\n      \"AssetsContractController:getERC721AssetSymbol\",\n      contractAddress,\n      networkClientId\n    )\n  ]);\n  return {\n    collection: { name },\n    symbol,\n    address: contractAddress\n  };\n};\n_getNftContractInformation = new WeakSet();\ngetNftContractInformation_fn = async function(contractAddress, nftMetadataFromApi, networkClientId) {\n  const blockchainContractData = await _controllerutils.safelyExecute.call(void 0, \n    () => _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftContractInformationFromContract, getNftContractInformationFromContract_fn).call(this, contractAddress, networkClientId)\n  );\n  if (blockchainContractData || !Object.values(nftMetadataFromApi).every((value) => value === null)) {\n    return {\n      address: contractAddress,\n      ...blockchainContractData,\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      schema_name: nftMetadataFromApi?.standard ?? null,\n      collection: {\n        name: null,\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        image_url: nftMetadataFromApi?.collection?.image ?? nftMetadataFromApi?.collection?.imageUrl ?? null,\n        tokenCount: nftMetadataFromApi?.collection?.tokenCount ?? null,\n        ...nftMetadataFromApi?.collection,\n        ...blockchainContractData?.collection\n      }\n    };\n  }\n  return {\n    address: contractAddress,\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    asset_contract_type: null,\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    created_date: null,\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    schema_name: null,\n    symbol: null,\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    total_supply: null,\n    description: null,\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    external_link: null,\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    collection: { name: null, image_url: null }\n  };\n};\n_addIndividualNft = new WeakSet();\naddIndividualNft_fn = async function(tokenAddress, tokenId, nftMetadata, nftContract, chainId, userAddress, source) {\n  const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n  try {\n    const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, tokenAddress);\n    const { allNfts } = this.state;\n    const nfts = [...allNfts[userAddress]?.[chainId] ?? []];\n    const existingEntry = nfts.find(\n      (nft) => nft.address.toLowerCase() === checksumHexAddress.toLowerCase() && nft.tokenId === tokenId\n    );\n    if (existingEntry) {\n      const differentMetadata = _chunkMZI3SDQNjs.compareNftMetadata.call(void 0, \n        nftMetadata,\n        existingEntry\n      );\n      const hasNewFields = _chunkMZI3SDQNjs.hasNewCollectionFields.call(void 0, nftMetadata, existingEntry);\n      if (!differentMetadata && existingEntry.isCurrentlyOwned && !hasNewFields) {\n        return;\n      }\n      const indexToUpdate = nfts.findIndex(\n        (nft) => nft.address.toLowerCase() === checksumHexAddress.toLowerCase() && nft.tokenId === tokenId\n      );\n      if (indexToUpdate !== -1) {\n        nfts[indexToUpdate] = {\n          ...existingEntry,\n          ...nftMetadata\n        };\n      }\n    } else {\n      const newEntry = {\n        address: checksumHexAddress,\n        tokenId,\n        favorite: false,\n        isCurrentlyOwned: true,\n        ...nftMetadata\n      };\n      nfts.push(newEntry);\n    }\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, nfts, ALL_NFTS_STATE_KEY, {\n      chainId,\n      userAddress\n    });\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _onNftAdded)) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _onNftAdded).call(this, {\n        address: checksumHexAddress,\n        symbol: nftContract.symbol,\n        tokenId: tokenId.toString(),\n        standard: nftMetadata.standard,\n        source\n      });\n    }\n  } finally {\n    releaseLock();\n  }\n};\n_addNftContract = new WeakSet();\naddNftContract_fn = async function({\n  tokenAddress,\n  userAddress,\n  networkClientId,\n  source,\n  nftMetadata\n}) {\n  const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n  try {\n    const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, tokenAddress);\n    const { allNftContracts } = this.state;\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, {\n      networkClientId\n    });\n    const nftContracts = allNftContracts[userAddress]?.[chainId] || [];\n    const existingEntry = nftContracts.find(\n      (nftContract) => nftContract.address.toLowerCase() === checksumHexAddress.toLowerCase()\n    );\n    if (existingEntry) {\n      return nftContracts;\n    }\n    const contractInformation = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNftContractInformation, getNftContractInformation_fn).call(this, checksumHexAddress, nftMetadata, networkClientId);\n    const {\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      asset_contract_type,\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      created_date,\n      symbol,\n      description,\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      external_link,\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      schema_name,\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      collection: { name, image_url, tokenCount }\n    } = contractInformation;\n    if (source === \"detected\" /* Detected */ && \"address\" in contractInformation && typeof contractInformation.address === \"string\" && \"collection\" in contractInformation && contractInformation.collection.name === null && \"image_url\" in contractInformation.collection && contractInformation.collection.image_url === null && Object.entries(contractInformation).every(([key, value]) => {\n      return key === \"address\" || key === \"collection\" || !value;\n    })) {\n      return nftContracts;\n    }\n    const newEntry = Object.assign(\n      {},\n      { address: checksumHexAddress },\n      description && { description },\n      name && { name },\n      image_url && { logo: image_url },\n      symbol && { symbol },\n      tokenCount !== null && typeof tokenCount !== \"undefined\" && { totalSupply: tokenCount },\n      asset_contract_type && { assetContractType: asset_contract_type },\n      created_date && { createdDate: created_date },\n      schema_name && { schemaName: schema_name },\n      external_link && { externalLink: external_link }\n    );\n    const newNftContracts = [...nftContracts, newEntry];\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, newNftContracts, ALL_NFTS_CONTRACTS_STATE_KEY, {\n      chainId,\n      userAddress\n    });\n    return newNftContracts;\n  } finally {\n    releaseLock();\n  }\n};\n_removeAndIgnoreIndividualNft = new WeakSet();\nremoveAndIgnoreIndividualNft_fn = function(address, tokenId, {\n  chainId,\n  userAddress\n}) {\n  const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n  const { allNfts, ignoredNfts } = this.state;\n  const newIgnoredNfts = [...ignoredNfts];\n  const nfts = allNfts[userAddress]?.[chainId] || [];\n  const newNfts = nfts.filter((nft) => {\n    if (nft.address.toLowerCase() === checksumHexAddress.toLowerCase() && nft.tokenId === tokenId) {\n      const alreadyIgnored = newIgnoredNfts.find(\n        (c) => c.address === checksumHexAddress && c.tokenId === tokenId\n      );\n      !alreadyIgnored && newIgnoredNfts.push(nft);\n      return false;\n    }\n    return true;\n  });\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, newNfts, ALL_NFTS_STATE_KEY, {\n    userAddress,\n    chainId\n  });\n  this.update((state) => {\n    state.ignoredNfts = newIgnoredNfts;\n  });\n};\n_removeIndividualNft = new WeakSet();\nremoveIndividualNft_fn = function(address, tokenId, { chainId, userAddress }) {\n  const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n  const { allNfts } = this.state;\n  const nfts = allNfts[userAddress]?.[chainId] || [];\n  const newNfts = nfts.filter(\n    (nft) => !(nft.address.toLowerCase() === checksumHexAddress.toLowerCase() && nft.tokenId === tokenId)\n  );\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, newNfts, ALL_NFTS_STATE_KEY, {\n    userAddress,\n    chainId\n  });\n};\n_removeNftContract = new WeakSet();\nremoveNftContract_fn = function(address, { chainId, userAddress }) {\n  const checksumHexAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n  const { allNftContracts } = this.state;\n  const nftContracts = allNftContracts[userAddress]?.[chainId] || [];\n  const newNftContracts = nftContracts.filter(\n    (nftContract) => !(nftContract.address.toLowerCase() === checksumHexAddress.toLowerCase())\n  );\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateNestedNftState, updateNestedNftState_fn).call(this, newNftContracts, ALL_NFTS_CONTRACTS_STATE_KEY, {\n    chainId,\n    userAddress\n  });\n  return newNftContracts;\n};\n_validateWatchNft = new WeakSet();\nvalidateWatchNft_fn = async function(asset, type, userAddress, { networkClientId } = {}) {\n  const { address: contractAddress, tokenId } = asset;\n  if (!type) {\n    throw _rpcerrors.rpcErrors.invalidParams(\"Asset type is required\");\n  }\n  if (type !== _controllerutils.ERC721 && type !== _controllerutils.ERC1155) {\n    throw _rpcerrors.rpcErrors.invalidParams(\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `Non NFT asset type ${type} not supported by watchNft`\n    );\n  }\n  if (!contractAddress || !tokenId) {\n    throw _rpcerrors.rpcErrors.invalidParams(\"Both address and tokenId are required\");\n  }\n  if (!_address.isAddress.call(void 0, contractAddress)) {\n    throw _rpcerrors.rpcErrors.invalidParams(\"Invalid address\");\n  }\n  if (!/^\\d+$/u.test(tokenId)) {\n    throw _rpcerrors.rpcErrors.invalidParams(\"Invalid tokenId\");\n  }\n  try {\n    const isOwner = await this.isNftOwner(\n      userAddress,\n      contractAddress,\n      tokenId,\n      { networkClientId }\n    );\n    if (!isOwner) {\n      throw _rpcerrors.rpcErrors.invalidInput(\n        \"Suggested NFT is not owned by the selected account\"\n      );\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      throw _rpcerrors.rpcErrors.resourceUnavailable(error.message);\n    }\n    throw error;\n  }\n};\n_getCorrectChainId = new WeakSet();\ngetCorrectChainId_fn = function({\n  networkClientId\n}) {\n  if (networkClientId) {\n    const {\n      configuration: { chainId }\n    } = this.messagingSystem.call(\n      \"NetworkController:getNetworkClientById\",\n      networkClientId\n    );\n    return chainId;\n  }\n  return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId);\n};\n_getAddressOrSelectedAddress = new WeakSet();\ngetAddressOrSelectedAddress_fn = function(address) {\n  if (address) {\n    return address;\n  }\n  const selectedAccount = this.messagingSystem.call(\n    \"AccountsController:getAccount\",\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _selectedAccountId)\n  );\n  return selectedAccount?.address || \"\";\n};\n_updateNftUpdateForAccount = new WeakSet();\nupdateNftUpdateForAccount_fn = async function(account) {\n  const nfts = this.state.allNfts[account.address]?.[_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId)] ?? [];\n  const nftsToUpdate = nfts.filter(\n    (singleNft) => !singleNft.name && !singleNft.description && !singleNft.image\n  );\n  if (nftsToUpdate.length !== 0) {\n    await this.updateNftMetadata({\n      nfts: nftsToUpdate,\n      userAddress: account.address\n    });\n  }\n};\nvar NftController_default = NftController;\n\n\n\n\n\nexports.getDefaultNftControllerState = getDefaultNftControllerState; exports.NftController = NftController; exports.NftController_default = NftController_default;\n//# sourceMappingURL=chunk-2TZK6YZA.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/TokenDetectionController.ts\nvar _contractmetadata = require('@metamask/contract-metadata'); var _contractmetadata2 = _interopRequireDefault(_contractmetadata);\nvar _controllerutils = require('@metamask/controller-utils');\nvar _pollingcontroller = require('@metamask/polling-controller');\nvar DEFAULT_INTERVAL = 18e4;\nfunction isEqualCaseInsensitive(value1, value2) {\n  if (typeof value1 !== \"string\" || typeof value2 !== \"string\") {\n    return false;\n  }\n  return value1.toLowerCase() === value2.toLowerCase();\n}\nvar STATIC_MAINNET_TOKEN_LIST = Object.entries(\n  _contractmetadata2.default\n).reduce((acc, [base, contract]) => {\n  const { logo, erc20, erc721, ...tokenMetadata } = contract;\n  return {\n    ...acc,\n    [base.toLowerCase()]: {\n      ...tokenMetadata,\n      address: base.toLowerCase(),\n      iconUrl: `images/contract/${logo}`,\n      aggregators: []\n    }\n  };\n}, {});\nvar controllerName = \"TokenDetectionController\";\nvar _intervalId, _selectedAccountId, _networkClientId, _tokenList, _disabled, _isUnlocked, _isDetectionEnabledFromPreferences, _isDetectionEnabledForNetwork, _getBalancesInSingleCall, _trackMetaMetricsEvent, _registerEventListeners, registerEventListeners_fn, _stopPolling, stopPolling_fn, _startPolling, startPolling_fn, _getCorrectChainIdAndNetworkClientId, getCorrectChainIdAndNetworkClientId_fn, _restartTokenDetection, restartTokenDetection_fn, _getSlicesOfTokensToDetect, getSlicesOfTokensToDetect_fn, _addDetectedTokens, addDetectedTokens_fn, _getSelectedAccount, getSelectedAccount_fn, _getSelectedAddress, getSelectedAddress_fn;\nvar TokenDetectionController = class extends _pollingcontroller.StaticIntervalPollingController {\n  /**\n   * Creates a TokenDetectionController instance.\n   *\n   * @param options - The controller options.\n   * @param options.messenger - The controller messaging system.\n   * @param options.disabled - If set to true, all network requests are blocked.\n   * @param options.interval - Polling interval used to fetch new token rates\n   * @param options.getBalancesInSingleCall - Gets the balances of a list of tokens for the given address.\n   * @param options.trackMetaMetricsEvent - Sets options for MetaMetrics event tracking.\n   */\n  constructor({\n    interval = DEFAULT_INTERVAL,\n    disabled = true,\n    getBalancesInSingleCall,\n    trackMetaMetricsEvent,\n    messenger\n  }) {\n    super({\n      name: controllerName,\n      messenger,\n      state: {},\n      metadata: {}\n    });\n    /**\n     * Constructor helper for registering this controller's messaging system subscriptions to controller events.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _registerEventListeners);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _stopPolling);\n    /**\n     * Starts a new polling interval.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _startPolling);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getCorrectChainIdAndNetworkClientId);\n    /**\n     * Restart token detection polling period and call detectNewTokens\n     * in case of address change or user session initialization.\n     *\n     * @param options - Options for restart token detection.\n     * @param options.selectedAddress - the selectedAddress against which to detect for token balances\n     * @param options.networkClientId - The ID of the network client to use.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _restartTokenDetection);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getSlicesOfTokensToDetect);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _addDetectedTokens);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getSelectedAccount);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getSelectedAddress);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _intervalId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _selectedAccountId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _networkClientId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _tokenList, {});\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _disabled, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isUnlocked, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isDetectionEnabledFromPreferences, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isDetectionEnabledForNetwork, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getBalancesInSingleCall, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _trackMetaMetricsEvent, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, disabled);\n    this.setIntervalLength(interval);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAccount, getSelectedAccount_fn).call(this).id);\n    const { chainId, networkClientId } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainIdAndNetworkClientId, getCorrectChainIdAndNetworkClientId_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _networkClientId, networkClientId);\n    const { useTokenDetection: defaultUseTokenDetection } = this.messagingSystem.call(\"PreferencesController:getState\");\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isDetectionEnabledFromPreferences, defaultUseTokenDetection);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isDetectionEnabledForNetwork, _chunkMZI3SDQNjs.isTokenDetectionSupportedForNetwork.call(void 0, chainId));\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _getBalancesInSingleCall, getBalancesInSingleCall);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _trackMetaMetricsEvent, trackMetaMetricsEvent);\n    const { isUnlocked } = this.messagingSystem.call(\n      \"KeyringController:getState\"\n    );\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isUnlocked, isUnlocked);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _registerEventListeners, registerEventListeners_fn).call(this);\n  }\n  /**\n   * Allows controller to make active and passive polling requests\n   */\n  enable() {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, false);\n  }\n  /**\n   * Blocks controller from making network calls\n   */\n  disable() {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, true);\n  }\n  /**\n   * Internal isActive state\n   * @type {boolean}\n   */\n  get isActive() {\n    return !_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _disabled) && _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isUnlocked);\n  }\n  /**\n   * Start polling for detected tokens.\n   */\n  async start() {\n    this.enable();\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _startPolling, startPolling_fn).call(this);\n  }\n  /**\n   * Stop polling for detected tokens.\n   */\n  stop() {\n    this.disable();\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _stopPolling, stopPolling_fn).call(this);\n  }\n  async _executePoll(networkClientId, options) {\n    if (!this.isActive) {\n      return;\n    }\n    await this.detectTokens({\n      networkClientId,\n      selectedAddress: options.address\n    });\n  }\n  /**\n   * For each token in the token list provided by the TokenListController, checks the token's balance for the selected account address on the active network.\n   * On mainnet, if token detection is disabled in preferences, ERC20 token auto detection will be triggered for each contract address in the legacy token list from the @metamask/contract-metadata repo.\n   *\n   * @param options - Options for token detection.\n   * @param options.networkClientId - The ID of the network client to use.\n   * @param options.selectedAddress - the selectedAddress against which to detect for token balances.\n   */\n  async detectTokens({\n    networkClientId,\n    selectedAddress\n  } = {}) {\n    if (!this.isActive) {\n      return;\n    }\n    const addressAgainstWhichToDetect = selectedAddress ?? _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAddress, getSelectedAddress_fn).call(this);\n    const { chainId, networkClientId: selectedNetworkClientId } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainIdAndNetworkClientId, getCorrectChainIdAndNetworkClientId_fn).call(this, networkClientId);\n    const chainIdAgainstWhichToDetect = chainId;\n    const networkClientIdAgainstWhichToDetect = selectedNetworkClientId;\n    if (!_chunkMZI3SDQNjs.isTokenDetectionSupportedForNetwork.call(void 0, chainIdAgainstWhichToDetect)) {\n      return;\n    }\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isDetectionEnabledFromPreferences) && chainIdAgainstWhichToDetect !== _controllerutils.ChainId.mainnet) {\n      return;\n    }\n    const isTokenDetectionInactiveInMainnet = !_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isDetectionEnabledFromPreferences) && chainIdAgainstWhichToDetect === _controllerutils.ChainId.mainnet;\n    const { tokensChainsCache } = this.messagingSystem.call(\n      \"TokenListController:getState\"\n    );\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _tokenList, isTokenDetectionInactiveInMainnet ? STATIC_MAINNET_TOKEN_LIST : tokensChainsCache[chainIdAgainstWhichToDetect]?.data ?? {});\n    for (const tokensSlice of _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSlicesOfTokensToDetect, getSlicesOfTokensToDetect_fn).call(this, {\n      chainId: chainIdAgainstWhichToDetect,\n      selectedAddress: addressAgainstWhichToDetect\n    })) {\n      await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _addDetectedTokens, addDetectedTokens_fn).call(this, {\n        tokensSlice,\n        selectedAddress: addressAgainstWhichToDetect,\n        networkClientId: networkClientIdAgainstWhichToDetect,\n        chainId: chainIdAgainstWhichToDetect\n      });\n    }\n  }\n};\n_intervalId = new WeakMap();\n_selectedAccountId = new WeakMap();\n_networkClientId = new WeakMap();\n_tokenList = new WeakMap();\n_disabled = new WeakMap();\n_isUnlocked = new WeakMap();\n_isDetectionEnabledFromPreferences = new WeakMap();\n_isDetectionEnabledForNetwork = new WeakMap();\n_getBalancesInSingleCall = new WeakMap();\n_trackMetaMetricsEvent = new WeakMap();\n_registerEventListeners = new WeakSet();\nregisterEventListeners_fn = function() {\n  this.messagingSystem.subscribe(\"KeyringController:unlock\", async () => {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isUnlocked, true);\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _restartTokenDetection, restartTokenDetection_fn).call(this);\n  });\n  this.messagingSystem.subscribe(\"KeyringController:lock\", () => {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isUnlocked, false);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _stopPolling, stopPolling_fn).call(this);\n  });\n  this.messagingSystem.subscribe(\n    \"TokenListController:stateChange\",\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async ({ tokenList }) => {\n      const hasTokens = Object.keys(tokenList).length;\n      if (hasTokens) {\n        await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _restartTokenDetection, restartTokenDetection_fn).call(this);\n      }\n    }\n  );\n  this.messagingSystem.subscribe(\n    \"PreferencesController:stateChange\",\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async ({ useTokenDetection }) => {\n      const selectedAccount = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAccount, getSelectedAccount_fn).call(this);\n      const isDetectionChangedFromPreferences = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isDetectionEnabledFromPreferences) !== useTokenDetection;\n      _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isDetectionEnabledFromPreferences, useTokenDetection);\n      if (isDetectionChangedFromPreferences) {\n        await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _restartTokenDetection, restartTokenDetection_fn).call(this, {\n          selectedAddress: selectedAccount.address\n        });\n      }\n    }\n  );\n  this.messagingSystem.subscribe(\n    \"AccountsController:selectedEvmAccountChange\",\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async (selectedAccount) => {\n      const isSelectedAccountIdChanged = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _selectedAccountId) !== selectedAccount.id;\n      if (isSelectedAccountIdChanged) {\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, selectedAccount.id);\n        await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _restartTokenDetection, restartTokenDetection_fn).call(this, {\n          selectedAddress: selectedAccount.address\n        });\n      }\n    }\n  );\n  this.messagingSystem.subscribe(\n    \"NetworkController:networkDidChange\",\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async ({ selectedNetworkClientId }) => {\n      const isNetworkClientIdChanged = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _networkClientId) !== selectedNetworkClientId;\n      const { chainId: newChainId } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainIdAndNetworkClientId, getCorrectChainIdAndNetworkClientId_fn).call(this, selectedNetworkClientId);\n      _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _isDetectionEnabledForNetwork, _chunkMZI3SDQNjs.isTokenDetectionSupportedForNetwork.call(void 0, newChainId));\n      if (isNetworkClientIdChanged && _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _isDetectionEnabledForNetwork)) {\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _networkClientId, selectedNetworkClientId);\n        await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _restartTokenDetection, restartTokenDetection_fn).call(this, {\n          networkClientId: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _networkClientId)\n        });\n      }\n    }\n  );\n};\n_stopPolling = new WeakSet();\nstopPolling_fn = function() {\n  if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _intervalId)) {\n    clearInterval(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _intervalId));\n  }\n};\n_startPolling = new WeakSet();\nstartPolling_fn = async function() {\n  if (!this.isActive) {\n    return;\n  }\n  _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _stopPolling, stopPolling_fn).call(this);\n  await this.detectTokens();\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _intervalId, setInterval(async () => {\n    await this.detectTokens();\n  }, this.getIntervalLength()));\n};\n_getCorrectChainIdAndNetworkClientId = new WeakSet();\ngetCorrectChainIdAndNetworkClientId_fn = function(networkClientId) {\n  if (networkClientId) {\n    const networkConfiguration = this.messagingSystem.call(\n      \"NetworkController:getNetworkConfigurationByNetworkClientId\",\n      networkClientId\n    );\n    if (networkConfiguration) {\n      return {\n        chainId: networkConfiguration.chainId,\n        networkClientId\n      };\n    }\n  }\n  const { selectedNetworkClientId } = this.messagingSystem.call(\n    \"NetworkController:getState\"\n  );\n  const {\n    configuration: { chainId }\n  } = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  );\n  return {\n    chainId,\n    networkClientId: selectedNetworkClientId\n  };\n};\n_restartTokenDetection = new WeakSet();\nrestartTokenDetection_fn = async function({\n  selectedAddress,\n  networkClientId\n} = {}) {\n  await this.detectTokens({\n    networkClientId,\n    selectedAddress\n  });\n  this.setIntervalLength(DEFAULT_INTERVAL);\n};\n_getSlicesOfTokensToDetect = new WeakSet();\ngetSlicesOfTokensToDetect_fn = function({\n  chainId,\n  selectedAddress\n}) {\n  const { allTokens, allDetectedTokens, allIgnoredTokens } = this.messagingSystem.call(\"TokensController:getState\");\n  const [tokensAddresses, detectedTokensAddresses, ignoredTokensAddresses] = [\n    allTokens,\n    allDetectedTokens,\n    allIgnoredTokens\n  ].map(\n    (tokens) => (tokens[chainId]?.[selectedAddress] ?? []).map(\n      (value) => typeof value === \"string\" ? value : value.address\n    )\n  );\n  const tokensToDetect = [];\n  for (const tokenAddress of Object.keys(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokenList))) {\n    if ([\n      tokensAddresses,\n      detectedTokensAddresses,\n      ignoredTokensAddresses\n    ].every(\n      (addresses) => !addresses.find(\n        (address) => isEqualCaseInsensitive(address, tokenAddress)\n      )\n    )) {\n      tokensToDetect.push(tokenAddress);\n    }\n  }\n  const slicesOfTokensToDetect = [];\n  for (let i = 0, size = 1e3; i < tokensToDetect.length; i += size) {\n    slicesOfTokensToDetect.push(tokensToDetect.slice(i, i + size));\n  }\n  return slicesOfTokensToDetect;\n};\n_addDetectedTokens = new WeakSet();\naddDetectedTokens_fn = async function({\n  tokensSlice,\n  selectedAddress,\n  networkClientId,\n  chainId\n}) {\n  await _controllerutils.safelyExecute.call(void 0, async () => {\n    const balances = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _getBalancesInSingleCall).call(this, selectedAddress, tokensSlice, networkClientId);\n    const tokensWithBalance = [];\n    const eventTokensDetails = [];\n    for (const nonZeroTokenAddress of Object.keys(balances)) {\n      const { decimals, symbol, aggregators, iconUrl, name } = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokenList)[nonZeroTokenAddress];\n      eventTokensDetails.push(`${symbol} - ${nonZeroTokenAddress}`);\n      tokensWithBalance.push({\n        address: nonZeroTokenAddress,\n        decimals,\n        symbol,\n        aggregators,\n        image: iconUrl,\n        isERC721: false,\n        name\n      });\n    }\n    if (tokensWithBalance.length) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _trackMetaMetricsEvent).call(this, {\n        event: \"Token Detected\",\n        category: \"Wallet\",\n        properties: {\n          tokens: eventTokensDetails,\n          // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          token_standard: \"ERC20\",\n          // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          asset_type: \"TOKEN\"\n        }\n      });\n      await this.messagingSystem.call(\n        \"TokensController:addDetectedTokens\",\n        tokensWithBalance,\n        {\n          selectedAddress,\n          chainId\n        }\n      );\n    }\n  });\n};\n_getSelectedAccount = new WeakSet();\ngetSelectedAccount_fn = function() {\n  return this.messagingSystem.call(\"AccountsController:getSelectedAccount\");\n};\n_getSelectedAddress = new WeakSet();\ngetSelectedAddress_fn = function() {\n  const account = this.messagingSystem.call(\n    \"AccountsController:getAccount\",\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _selectedAccountId)\n  );\n  return account?.address || \"\";\n};\nvar TokenDetectionController_default = TokenDetectionController;\n\n\n\n\n\n\n\nexports.isEqualCaseInsensitive = isEqualCaseInsensitive; exports.STATIC_MAINNET_TOKEN_LIST = STATIC_MAINNET_TOKEN_LIST; exports.controllerName = controllerName; exports.TokenDetectionController = TokenDetectionController; exports.TokenDetectionController_default = TokenDetectionController_default;\n//# sourceMappingURL=chunk-3LPQTUGG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n// src/Standards/NftStandards/ERC1155/ERC1155Standard.ts\nvar _contracts = require('@ethersproject/contracts');\n\n\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _metamaskethabis = require('@metamask/metamask-eth-abis');\nvar ERC1155Standard = class {\n  constructor(provider) {\n    this.provider = provider;\n  }\n  /**\n   * Query if contract implements ERC1155 URI Metadata interface.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @returns Promise resolving to whether the contract implements ERC1155 URI Metadata interface.\n   */\n  async contractSupportsURIMetadataInterface(address) {\n    return this.contractSupportsInterface(\n      address,\n      _controllerutils.ERC1155_METADATA_URI_INTERFACE_ID\n    );\n  }\n  /**\n   * Query if contract implements ERC1155 Token Receiver interface.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @returns Promise resolving to whether the contract implements ERC1155 Token Receiver interface.\n   */\n  async contractSupportsTokenReceiverInterface(address) {\n    return this.contractSupportsInterface(\n      address,\n      _controllerutils.ERC1155_TOKEN_RECEIVER_INTERFACE_ID\n    );\n  }\n  /**\n   * Query if contract implements ERC1155 interface.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @returns Promise resolving to whether the contract implements the base ERC1155 interface.\n   */\n  async contractSupportsBase1155Interface(address) {\n    return this.contractSupportsInterface(address, _controllerutils.ERC1155_INTERFACE_ID);\n  }\n  /**\n   * Query for tokenURI for a given asset.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @param tokenId - ERC1155 asset identifier.\n   * @returns Promise resolving to the 'tokenURI'.\n   */\n  async getTokenURI(address, tokenId) {\n    const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC1155, this.provider);\n    return contract.uri(tokenId);\n  }\n  /**\n   * Query for balance of a given ERC1155 token.\n   *\n   * @param contractAddress - ERC1155 asset contract address.\n   * @param address - Wallet public address.\n   * @param tokenId - ERC1155 asset identifier.\n   * @returns Promise resolving to the 'balanceOf'.\n   */\n  async getBalanceOf(contractAddress, address, tokenId) {\n    const contract = new (0, _contracts.Contract)(contractAddress, _metamaskethabis.abiERC1155, this.provider);\n    const balance = await contract.balanceOf(address, tokenId);\n    return _chunkMZI3SDQNjs.ethersBigNumberToBN.call(void 0, balance);\n  }\n  /**\n   * Transfer single ERC1155 token.\n   * When minting/creating tokens, the from arg MUST be set to 0x0 (i.e. zero address).\n   * When burning/destroying tokens, the to arg MUST be set to 0x0 (i.e. zero address).\n   *\n   * @param operator - ERC1155 token address.\n   * @param from - ERC1155 token holder.\n   * @param to - ERC1155 token recipient.\n   * @param id - ERC1155 token id.\n   * @param value - Number of tokens to be sent.\n   * @returns Promise resolving to the 'transferSingle'.\n   */\n  async transferSingle(operator, from, to, id, value) {\n    const contract = new (0, _contracts.Contract)(operator, _metamaskethabis.abiERC1155, this.provider);\n    return new Promise((resolve, reject) => {\n      contract.transferSingle(\n        operator,\n        from,\n        to,\n        id,\n        value,\n        (error, result) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n          resolve(result);\n        }\n      );\n    });\n  }\n  /**\n   * Query for symbol for a given asset.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @returns Promise resolving to the 'symbol'.\n   */\n  async getAssetSymbol(address) {\n    const contract = new (0, _contracts.Contract)(\n      address,\n      // Contract ABI fragment containing only the symbol method to fetch the symbol of the contract.\n      [\n        {\n          inputs: [],\n          name: \"symbol\",\n          outputs: [{ name: \"_symbol\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n          payable: false\n        }\n      ],\n      this.provider\n    );\n    return contract.symbol();\n  }\n  /**\n   * Query for name for a given asset.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @returns Promise resolving to the 'name'.\n   */\n  async getAssetName(address) {\n    const contract = new (0, _contracts.Contract)(\n      address,\n      // Contract ABI fragment containing only the name method to fetch the name of the contract.\n      [\n        {\n          inputs: [],\n          name: \"name\",\n          outputs: [{ name: \"_name\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n          payable: false\n        }\n      ],\n      this.provider\n    );\n    return contract.name();\n  }\n  /**\n   * Query if a contract implements an interface.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @param interfaceId - Interface identifier.\n   * @returns Promise resolving to whether the contract implements `interfaceID`.\n   */\n  async contractSupportsInterface(address, interfaceId) {\n    const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC1155, this.provider);\n    return contract.supportsInterface(interfaceId);\n  }\n  /**\n   * Query if a contract implements an interface.\n   *\n   * @param address - Asset contract address.\n   * @param ipfsGateway - The user's preferred IPFS gateway.\n   * @param tokenId - tokenId of a given token in the contract.\n   * @returns Promise resolving an object containing the standard, tokenURI, symbol and name of the given contract/tokenId pair.\n   */\n  async getDetails(address, ipfsGateway, tokenId) {\n    const isERC1155 = await this.contractSupportsBase1155Interface(address);\n    if (!isERC1155) {\n      throw new Error(\"This isn't a valid ERC1155 contract\");\n    }\n    let image;\n    const [symbol, name, tokenURI] = await Promise.all([\n      _controllerutils.safelyExecute.call(void 0, () => this.getAssetSymbol(address)),\n      _controllerutils.safelyExecute.call(void 0, () => this.getAssetName(address)),\n      tokenId ? _controllerutils.safelyExecute.call(void 0, \n        () => this.getTokenURI(address, tokenId).then(\n          (uri) => uri.startsWith(\"ipfs://\") ? _chunkMZI3SDQNjs.getFormattedIpfsUrl.call(void 0, ipfsGateway, uri, true) : uri\n        )\n      ) : void 0\n    ]);\n    if (tokenURI) {\n      try {\n        const response = await _controllerutils.timeoutFetch.call(void 0, tokenURI);\n        const object = await response.json();\n        image = object?.image;\n        if (image?.startsWith(\"ipfs://\")) {\n          image = _chunkMZI3SDQNjs.getFormattedIpfsUrl.call(void 0, ipfsGateway, image, true);\n        }\n      } catch {\n      }\n    }\n    return {\n      standard: _controllerutils.ERC1155,\n      tokenURI,\n      image,\n      symbol,\n      name\n    };\n  }\n};\n\n\n\nexports.ERC1155Standard = ERC1155Standard;\n//# sourceMappingURL=chunk-5QLC2MHV.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _chunkJCR4H6YLjs = require('./chunk-JCR4H6YL.js');\n\n\nvar _chunk5QLC2MHVjs = require('./chunk-5QLC2MHV.js');\n\n\n\nvar _chunkK7A3EOIMjs = require('./chunk-K7A3EOIM.js');\n\n\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/TokensController.ts\nvar _contracts = require('@ethersproject/contracts');\nvar _providers = require('@ethersproject/providers');\nvar _basecontroller = require('@metamask/base-controller');\nvar _contractmetadata = require('@metamask/contract-metadata'); var _contractmetadata2 = _interopRequireDefault(_contractmetadata);\n\n\n\n\n\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _metamaskethabis = require('@metamask/metamask-eth-abis');\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _asyncmutex = require('async-mutex');\nvar _uuid = require('uuid');\nvar metadata = {\n  tokens: {\n    persist: true,\n    anonymous: false\n  },\n  ignoredTokens: {\n    persist: true,\n    anonymous: false\n  },\n  detectedTokens: {\n    persist: true,\n    anonymous: false\n  },\n  allTokens: {\n    persist: true,\n    anonymous: false\n  },\n  allIgnoredTokens: {\n    persist: true,\n    anonymous: false\n  },\n  allDetectedTokens: {\n    persist: true,\n    anonymous: false\n  }\n};\nvar controllerName = \"TokensController\";\nvar getDefaultTokensState = () => {\n  return {\n    tokens: [],\n    ignoredTokens: [],\n    detectedTokens: [],\n    allTokens: {},\n    allIgnoredTokens: {},\n    allDetectedTokens: {}\n  };\n};\nvar _mutex, _chainId, _selectedAccountId, _provider, _abortController, _onNetworkDidChange, onNetworkDidChange_fn, _onSelectedAccountChange, onSelectedAccountChange_fn, _fetchTokenMetadata, fetchTokenMetadata_fn, _updateTokensAttribute, updateTokensAttribute_fn, _detectIsERC721, detectIsERC721_fn, _getProvider, getProvider_fn, _createEthersContract, createEthersContract_fn, _generateRandomId, generateRandomId_fn, _getNewAllTokensState, getNewAllTokensState_fn, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn, _isInteractingWithWallet, isInteractingWithWallet_fn, _requestApproval, requestApproval_fn, _getSelectedAccount, getSelectedAccount_fn, _getSelectedAddress, getSelectedAddress_fn;\nvar TokensController = class extends _basecontroller.BaseController {\n  /**\n   * Tokens controller options\n   * @param options - Constructor options.\n   * @param options.chainId - The chain ID of the current network.\n   * @param options.provider - Network provider.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.messenger - The controller messenger.\n   */\n  constructor({\n    chainId: initialChainId,\n    provider,\n    state,\n    messenger\n  }) {\n    super({\n      name: controllerName,\n      metadata,\n      messenger,\n      state: {\n        ...getDefaultTokensState(),\n        ...state\n      }\n    });\n    /**\n     * Handles the event when the network changes.\n     *\n     * @param networkState - The changed network state.\n     * @param networkState.selectedNetworkClientId - The ID of the currently\n     * selected network client.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onNetworkDidChange);\n    /**\n     * Handles the selected account change in the accounts controller.\n     * @param selectedAccount - The new selected account\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onSelectedAccountChange);\n    /**\n     * Fetch metadata for a token.\n     *\n     * @param tokenAddress - The address of the token.\n     * @returns The token metadata.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _fetchTokenMetadata);\n    /**\n     * This is a function that updates the tokens name for the tokens name if it is not defined.\n     *\n     * @param tokenList - Represents the fetched token list from service API\n     * @param tokenAttribute - Represents the token attribute that we want to update on the token list\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateTokensAttribute);\n    /**\n     * Detects whether or not a token is ERC-721 compatible.\n     *\n     * @param tokenAddress - The token contract address.\n     * @param networkClientId - Optional network client ID to fetch contract info with.\n     * @returns A boolean indicating whether the token address passed in supports the EIP-721\n     * interface.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _detectIsERC721);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getProvider);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _createEthersContract);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _generateRandomId);\n    /**\n     * Takes a new tokens and ignoredTokens array for the current network/account combination\n     * and returns new allTokens and allIgnoredTokens state to update to.\n     *\n     * @param params - Object that holds token params.\n     * @param params.newTokens - The new tokens to set for the current network and selected account.\n     * @param params.newIgnoredTokens - The new ignored tokens to set for the current network and selected account.\n     * @param params.newDetectedTokens - The new detected tokens to set for the current network and selected account.\n     * @param params.interactingAddress - The account address to use to store the tokens.\n     * @param params.interactingChainId - The chainId to use to store the tokens.\n     * @returns The updated `allTokens` and `allIgnoredTokens` state.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNewAllTokensState);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getAddressOrSelectedAddress);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInteractingWithWallet);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _requestApproval);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getSelectedAccount);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getSelectedAddress);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _mutex, new (0, _asyncmutex.Mutex)());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _chainId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _selectedAccountId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _provider, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _abortController, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, initialChainId);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _provider, provider);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAccount, getSelectedAccount_fn).call(this).id);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _abortController, new AbortController());\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:addDetectedTokens`,\n      this.addDetectedTokens.bind(this)\n    );\n    this.messagingSystem.subscribe(\n      \"AccountsController:selectedEvmAccountChange\",\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onSelectedAccountChange, onSelectedAccountChange_fn).bind(this)\n    );\n    this.messagingSystem.subscribe(\n      \"NetworkController:networkDidChange\",\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onNetworkDidChange, onNetworkDidChange_fn).bind(this)\n    );\n    this.messagingSystem.subscribe(\n      \"TokenListController:stateChange\",\n      ({ tokenList }) => {\n        const { tokens } = this.state;\n        if (tokens.length && !tokens[0].name) {\n          _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateTokensAttribute, updateTokensAttribute_fn).call(this, tokenList, \"name\");\n        }\n      }\n    );\n  }\n  /**\n   * Adds a token to the stored token list.\n   *\n   * @param options - The method argument object.\n   * @param options.address - Hex address of the token contract.\n   * @param options.symbol - Symbol of the token.\n   * @param options.decimals - Number of decimals the token uses.\n   * @param options.name - Name of the token.\n   * @param options.image - Image of the token.\n   * @param options.interactingAddress - The address of the account to add a token to.\n   * @param options.networkClientId - Network Client ID.\n   * @returns Current token list.\n   */\n  async addToken({\n    address,\n    symbol,\n    decimals,\n    name,\n    image,\n    interactingAddress,\n    networkClientId\n  }) {\n    const chainId = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId);\n    const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n    const { allTokens, allIgnoredTokens, allDetectedTokens } = this.state;\n    let currentChainId = chainId;\n    if (networkClientId) {\n      currentChainId = this.messagingSystem.call(\n        \"NetworkController:getNetworkClientById\",\n        networkClientId\n      ).configuration.chainId;\n    }\n    const accountAddress = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, interactingAddress);\n    const isInteractingWithWalletAccount = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInteractingWithWallet, isInteractingWithWallet_fn).call(this, accountAddress);\n    try {\n      address = _controllerutils.toChecksumHexAddress.call(void 0, address);\n      const tokens = allTokens[currentChainId]?.[accountAddress] || [];\n      const ignoredTokens = allIgnoredTokens[currentChainId]?.[accountAddress] || [];\n      const detectedTokens = allDetectedTokens[currentChainId]?.[accountAddress] || [];\n      const newTokens = [...tokens];\n      const [isERC721, tokenMetadata] = await Promise.all([\n        _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _detectIsERC721, detectIsERC721_fn).call(this, address, networkClientId),\n        // TODO parameterize the token metadata fetch by networkClientId\n        _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _fetchTokenMetadata, fetchTokenMetadata_fn).call(this, address)\n      ]);\n      if (!networkClientId && currentChainId !== _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId)) {\n        throw new Error(\n          \"TokensController Error: Switched networks while adding token\"\n        );\n      }\n      const newEntry = {\n        address,\n        symbol,\n        decimals,\n        image: image || _chunkMZI3SDQNjs.formatIconUrlWithProxy.call(void 0, {\n          chainId: currentChainId,\n          tokenAddress: address\n        }),\n        isERC721,\n        aggregators: _chunkMZI3SDQNjs.formatAggregatorNames.call(void 0, tokenMetadata?.aggregators || []),\n        name\n      };\n      const previousIndex = newTokens.findIndex(\n        (token) => token.address.toLowerCase() === address.toLowerCase()\n      );\n      if (previousIndex !== -1) {\n        newTokens[previousIndex] = newEntry;\n      } else {\n        newTokens.push(newEntry);\n      }\n      const newIgnoredTokens = ignoredTokens.filter(\n        (tokenAddress) => tokenAddress.toLowerCase() !== address.toLowerCase()\n      );\n      const newDetectedTokens = detectedTokens.filter(\n        (token) => token.address.toLowerCase() !== address.toLowerCase()\n      );\n      const { newAllTokens, newAllIgnoredTokens, newAllDetectedTokens } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNewAllTokensState, getNewAllTokensState_fn).call(this, {\n        newTokens,\n        newIgnoredTokens,\n        newDetectedTokens,\n        interactingAddress: accountAddress,\n        interactingChainId: currentChainId\n      });\n      let newState = {\n        allTokens: newAllTokens,\n        allIgnoredTokens: newAllIgnoredTokens,\n        allDetectedTokens: newAllDetectedTokens\n      };\n      if (isInteractingWithWalletAccount) {\n        newState = {\n          ...newState,\n          tokens: newTokens,\n          ignoredTokens: newIgnoredTokens,\n          detectedTokens: newDetectedTokens\n        };\n      }\n      this.update((state) => {\n        Object.assign(state, newState);\n      });\n      return newTokens;\n    } finally {\n      releaseLock();\n    }\n  }\n  /**\n   * Add a batch of tokens.\n   *\n   * @param tokensToImport - Array of tokens to import.\n   * @param networkClientId - Optional network client ID used to determine interacting chain ID.\n   */\n  async addTokens(tokensToImport, networkClientId) {\n    const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n    const { tokens, detectedTokens, ignoredTokens } = this.state;\n    const importedTokensMap = {};\n    const newTokensMap = tokens.reduce((output, current) => {\n      output[current.address] = current;\n      return output;\n    }, {});\n    try {\n      tokensToImport.forEach((tokenToAdd) => {\n        const { address, symbol, decimals, image, aggregators, name } = tokenToAdd;\n        const checksumAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n        const formattedToken = {\n          address: checksumAddress,\n          symbol,\n          decimals,\n          image,\n          aggregators,\n          name\n        };\n        newTokensMap[address] = formattedToken;\n        importedTokensMap[address.toLowerCase()] = true;\n        return formattedToken;\n      });\n      const newTokens = Object.values(newTokensMap);\n      const newDetectedTokens = detectedTokens.filter(\n        (token) => !importedTokensMap[token.address.toLowerCase()]\n      );\n      const newIgnoredTokens = ignoredTokens.filter(\n        (tokenAddress) => !newTokensMap[tokenAddress.toLowerCase()]\n      );\n      let interactingChainId;\n      if (networkClientId) {\n        interactingChainId = this.messagingSystem.call(\n          \"NetworkController:getNetworkClientById\",\n          networkClientId\n        ).configuration.chainId;\n      }\n      const { newAllTokens, newAllDetectedTokens, newAllIgnoredTokens } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNewAllTokensState, getNewAllTokensState_fn).call(this, {\n        newTokens,\n        newDetectedTokens,\n        newIgnoredTokens,\n        interactingChainId\n      });\n      this.update((state) => {\n        state.tokens = newTokens;\n        state.allTokens = newAllTokens;\n        state.detectedTokens = newDetectedTokens;\n        state.allDetectedTokens = newAllDetectedTokens;\n        state.ignoredTokens = newIgnoredTokens;\n        state.allIgnoredTokens = newAllIgnoredTokens;\n      });\n    } finally {\n      releaseLock();\n    }\n  }\n  /**\n   * Ignore a batch of tokens.\n   *\n   * @param tokenAddressesToIgnore - Array of token addresses to ignore.\n   */\n  ignoreTokens(tokenAddressesToIgnore) {\n    const { ignoredTokens, detectedTokens, tokens } = this.state;\n    const ignoredTokensMap = {};\n    let newIgnoredTokens = [...ignoredTokens];\n    const checksummedTokenAddresses = tokenAddressesToIgnore.map((address) => {\n      const checksumAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n      ignoredTokensMap[address.toLowerCase()] = true;\n      return checksumAddress;\n    });\n    newIgnoredTokens = [...ignoredTokens, ...checksummedTokenAddresses];\n    const newDetectedTokens = detectedTokens.filter(\n      (token) => !ignoredTokensMap[token.address.toLowerCase()]\n    );\n    const newTokens = tokens.filter(\n      (token) => !ignoredTokensMap[token.address.toLowerCase()]\n    );\n    const { newAllIgnoredTokens, newAllDetectedTokens, newAllTokens } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNewAllTokensState, getNewAllTokensState_fn).call(this, {\n      newIgnoredTokens,\n      newDetectedTokens,\n      newTokens\n    });\n    this.update((state) => {\n      state.ignoredTokens = newIgnoredTokens;\n      state.tokens = newTokens;\n      state.detectedTokens = newDetectedTokens;\n      state.allIgnoredTokens = newAllIgnoredTokens;\n      state.allDetectedTokens = newAllDetectedTokens;\n      state.allTokens = newAllTokens;\n    });\n  }\n  /**\n   * Adds a batch of detected tokens to the stored token list.\n   *\n   * @param incomingDetectedTokens - Array of detected tokens to be added or updated.\n   * @param detectionDetails - An object containing the chain ID and address of the currently selected network on which the incomingDetectedTokens were detected.\n   * @param detectionDetails.selectedAddress - the account address on which the incomingDetectedTokens were detected.\n   * @param detectionDetails.chainId - the chainId on which the incomingDetectedTokens were detected.\n   */\n  async addDetectedTokens(incomingDetectedTokens, detectionDetails) {\n    const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n    const chainId = detectionDetails?.chainId ?? _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId);\n    const accountAddress = detectionDetails?.selectedAddress ?? _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAddress, getSelectedAddress_fn).call(this);\n    const { allTokens, allDetectedTokens, allIgnoredTokens } = this.state;\n    let newTokens = [...allTokens?.[chainId]?.[accountAddress] ?? []];\n    let newDetectedTokens = [\n      ...allDetectedTokens?.[chainId]?.[accountAddress] ?? []\n    ];\n    try {\n      incomingDetectedTokens.forEach((tokenToAdd) => {\n        const {\n          address,\n          symbol,\n          decimals,\n          image,\n          aggregators,\n          isERC721,\n          name\n        } = tokenToAdd;\n        const checksumAddress = _controllerutils.toChecksumHexAddress.call(void 0, address);\n        const newEntry = {\n          address: checksumAddress,\n          symbol,\n          decimals,\n          image,\n          isERC721,\n          aggregators,\n          name\n        };\n        const previousImportedIndex = newTokens.findIndex(\n          (token) => token.address.toLowerCase() === checksumAddress.toLowerCase()\n        );\n        if (previousImportedIndex !== -1) {\n          newTokens[previousImportedIndex] = newEntry;\n        } else {\n          const ignoredTokenIndex = allIgnoredTokens?.[chainId]?.[accountAddress]?.indexOf(address) ?? -1;\n          if (ignoredTokenIndex === -1) {\n            const previousDetectedIndex = newDetectedTokens.findIndex(\n              (token) => token.address.toLowerCase() === checksumAddress.toLowerCase()\n            );\n            if (previousDetectedIndex !== -1) {\n              newDetectedTokens[previousDetectedIndex] = newEntry;\n            } else {\n              newDetectedTokens.push(newEntry);\n            }\n          }\n        }\n      });\n      const { newAllTokens, newAllDetectedTokens } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getNewAllTokensState, getNewAllTokensState_fn).call(this, {\n        newTokens,\n        newDetectedTokens,\n        interactingAddress: accountAddress,\n        interactingChainId: chainId\n      });\n      const selectedAddress = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAddress, getSelectedAddress_fn).call(this);\n      newTokens = newAllTokens?.[_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId)]?.[selectedAddress] || [];\n      newDetectedTokens = newAllDetectedTokens?.[_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId)]?.[selectedAddress] || [];\n      this.update((state) => {\n        state.tokens = newTokens;\n        state.allTokens = newAllTokens;\n        state.detectedTokens = newDetectedTokens;\n        state.allDetectedTokens = newAllDetectedTokens;\n      });\n    } finally {\n      releaseLock();\n    }\n  }\n  /**\n   * Adds isERC721 field to token object. This is called when a user attempts to add tokens that\n   * were previously added which do not yet had isERC721 field.\n   *\n   * @param tokenAddress - The contract address of the token requiring the isERC721 field added.\n   * @returns The new token object with the added isERC721 field.\n   */\n  async updateTokenType(tokenAddress) {\n    const isERC721 = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _detectIsERC721, detectIsERC721_fn).call(this, tokenAddress);\n    const tokens = [...this.state.tokens];\n    const tokenIndex = tokens.findIndex((token) => {\n      return token.address.toLowerCase() === tokenAddress.toLowerCase();\n    });\n    const updatedToken = { ...tokens[tokenIndex], isERC721 };\n    tokens[tokenIndex] = updatedToken;\n    this.update((state) => {\n      state.tokens = tokens;\n    });\n    return updatedToken;\n  }\n  /**\n   * Adds a new suggestedAsset to the list of watched assets.\n   * Parameters will be validated according to the asset type being watched.\n   *\n   * @param options - The method options.\n   * @param options.asset - The asset to be watched. For now only ERC20 tokens are accepted.\n   * @param options.type - The asset type.\n   * @param options.interactingAddress - The address of the account that is requesting to watch the asset.\n   * @param options.networkClientId - Network Client ID.\n   * @returns A promise that resolves if the asset was watched successfully, and rejects otherwise.\n   */\n  async watchAsset({\n    asset,\n    type,\n    interactingAddress,\n    networkClientId\n  }) {\n    if (type !== _controllerutils.ERC20) {\n      throw new Error(`Asset of type ${type} not supported`);\n    }\n    if (!asset.address) {\n      throw _rpcerrors.rpcErrors.invalidParams(\"Address must be specified\");\n    }\n    if (!_controllerutils.isValidHexAddress.call(void 0, asset.address)) {\n      throw _rpcerrors.rpcErrors.invalidParams(`Invalid address \"${asset.address}\"`);\n    }\n    const selectedAddress = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, interactingAddress);\n    if (await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _detectIsERC721, detectIsERC721_fn).call(this, asset.address, networkClientId)) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Contract ${asset.address} must match type ${type}, but was detected as ${_controllerutils.ERC721}`\n      );\n    }\n    const provider = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getProvider, getProvider_fn).call(this, networkClientId);\n    const isErc1155 = await _controllerutils.safelyExecute.call(void 0, \n      () => new (0, _chunk5QLC2MHVjs.ERC1155Standard)(provider).contractSupportsBase1155Interface(\n        asset.address\n      )\n    );\n    if (isErc1155) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Contract ${asset.address} must match type ${type}, but was detected as ${_controllerutils.ERC1155}`\n      );\n    }\n    const erc20 = new (0, _chunkJCR4H6YLjs.ERC20Standard)(provider);\n    const [contractName, contractSymbol, contractDecimals] = await Promise.all([\n      _controllerutils.safelyExecute.call(void 0, () => erc20.getTokenName(asset.address)),\n      _controllerutils.safelyExecute.call(void 0, () => erc20.getTokenSymbol(asset.address)),\n      _controllerutils.safelyExecute.call(void 0, async () => erc20.getTokenDecimals(asset.address))\n    ]);\n    asset.name = contractName;\n    if (!asset.symbol && !contractSymbol) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        \"A symbol is required, but was not found in either the request or contract\"\n      );\n    }\n    if (contractSymbol !== void 0 && asset.symbol !== void 0 && asset.symbol.toUpperCase() !== contractSymbol.toUpperCase()) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `The symbol in the request (${asset.symbol}) does not match the symbol in the contract (${contractSymbol})`\n      );\n    }\n    asset.symbol = contractSymbol ?? asset.symbol;\n    if (typeof asset.symbol !== \"string\") {\n      throw _rpcerrors.rpcErrors.invalidParams(`Invalid symbol: not a string`);\n    }\n    if (asset.symbol.length > 11) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        `Invalid symbol \"${asset.symbol}\": longer than 11 characters`\n      );\n    }\n    if (asset.decimals === void 0 && contractDecimals === void 0) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        \"Decimals are required, but were not found in either the request or contract\"\n      );\n    }\n    if (contractDecimals !== void 0 && asset.decimals !== void 0 && String(asset.decimals) !== contractDecimals) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `The decimals in the request (${asset.decimals}) do not match the decimals in the contract (${contractDecimals})`\n      );\n    }\n    const decimalsStr = contractDecimals ?? asset.decimals;\n    const decimalsNum = parseInt(decimalsStr, 10);\n    if (!Number.isInteger(decimalsNum) || decimalsNum > 36 || decimalsNum < 0) {\n      throw _rpcerrors.rpcErrors.invalidParams(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Invalid decimals \"${decimalsStr}\": must be an integer 0 <= 36`\n      );\n    }\n    asset.decimals = decimalsNum;\n    const suggestedAssetMeta = {\n      asset,\n      id: _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _generateRandomId, generateRandomId_fn).call(this),\n      time: Date.now(),\n      type,\n      interactingAddress: selectedAddress\n    };\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _requestApproval, requestApproval_fn).call(this, suggestedAssetMeta);\n    const { address, symbol, decimals, name, image } = asset;\n    await this.addToken({\n      address,\n      symbol,\n      decimals,\n      name,\n      image,\n      interactingAddress: suggestedAssetMeta.interactingAddress,\n      networkClientId\n    });\n  }\n  /**\n   * Removes all tokens from the ignored list.\n   */\n  clearIgnoredTokens() {\n    this.update((state) => {\n      state.ignoredTokens = [];\n      state.allIgnoredTokens = {};\n    });\n  }\n};\n_mutex = new WeakMap();\n_chainId = new WeakMap();\n_selectedAccountId = new WeakMap();\n_provider = new WeakMap();\n_abortController = new WeakMap();\n_onNetworkDidChange = new WeakSet();\nonNetworkDidChange_fn = function({ selectedNetworkClientId }) {\n  const selectedNetworkClient = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  );\n  const { allTokens, allIgnoredTokens, allDetectedTokens } = this.state;\n  const { chainId } = selectedNetworkClient.configuration;\n  _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _abortController).abort();\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _abortController, new AbortController());\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, chainId);\n  const selectedAddress = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAddress, getSelectedAddress_fn).call(this);\n  this.update((state) => {\n    state.tokens = allTokens[chainId]?.[selectedAddress] || [];\n    state.ignoredTokens = allIgnoredTokens[chainId]?.[selectedAddress] || [];\n    state.detectedTokens = allDetectedTokens[chainId]?.[selectedAddress] || [];\n  });\n};\n_onSelectedAccountChange = new WeakSet();\nonSelectedAccountChange_fn = function(selectedAccount) {\n  const { allTokens, allIgnoredTokens, allDetectedTokens } = this.state;\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, selectedAccount.id);\n  this.update((state) => {\n    state.tokens = allTokens[_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId)]?.[selectedAccount.address] ?? [];\n    state.ignoredTokens = allIgnoredTokens[_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId)]?.[selectedAccount.address] ?? [];\n    state.detectedTokens = allDetectedTokens[_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId)]?.[selectedAccount.address] ?? [];\n  });\n};\n_fetchTokenMetadata = new WeakSet();\nfetchTokenMetadata_fn = async function(tokenAddress) {\n  try {\n    const token = await _chunkK7A3EOIMjs.fetchTokenMetadata.call(void 0, \n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId),\n      tokenAddress,\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _abortController).signal\n    );\n    return token;\n  } catch (error) {\n    if (error instanceof Error && error.message.includes(_chunkK7A3EOIMjs.TOKEN_METADATA_NO_SUPPORT_ERROR)) {\n      return void 0;\n    }\n    throw error;\n  }\n};\n_updateTokensAttribute = new WeakSet();\nupdateTokensAttribute_fn = function(tokenList, tokenAttribute) {\n  const { tokens } = this.state;\n  const newTokens = tokens.map((token) => {\n    const newToken = tokenList[token.address.toLowerCase()];\n    return !token[tokenAttribute] && newToken?.[tokenAttribute] ? { ...token, [tokenAttribute]: newToken[tokenAttribute] } : { ...token };\n  });\n  this.update((state) => {\n    state.tokens = newTokens;\n  });\n};\n_detectIsERC721 = new WeakSet();\ndetectIsERC721_fn = async function(tokenAddress, networkClientId) {\n  const checksumAddress = _controllerutils.toChecksumHexAddress.call(void 0, tokenAddress);\n  if (_contractmetadata2.default[checksumAddress]?.erc721 === true) {\n    return Promise.resolve(true);\n  } else if (_contractmetadata2.default[checksumAddress]?.erc20 === true) {\n    return Promise.resolve(false);\n  }\n  const tokenContract = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _createEthersContract, createEthersContract_fn).call(this, tokenAddress, _metamaskethabis.abiERC721, networkClientId);\n  try {\n    return await tokenContract.supportsInterface(_controllerutils.ERC721_INTERFACE_ID);\n  } catch (error) {\n    return false;\n  }\n};\n_getProvider = new WeakSet();\ngetProvider_fn = function(networkClientId) {\n  return new (0, _providers.Web3Provider)(\n    // @ts-expect-error TODO: remove this annotation once the `Eip1193Provider` class is released\n    networkClientId ? this.messagingSystem.call(\n      \"NetworkController:getNetworkClientById\",\n      networkClientId\n    ).provider : _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _provider)\n  );\n};\n_createEthersContract = new WeakSet();\ncreateEthersContract_fn = function(tokenAddress, abi, networkClientId) {\n  const web3provider = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getProvider, getProvider_fn).call(this, networkClientId);\n  const tokenContract = new (0, _contracts.Contract)(tokenAddress, abi, web3provider);\n  return tokenContract;\n};\n_generateRandomId = new WeakSet();\ngenerateRandomId_fn = function() {\n  return _uuid.v1.call(void 0, );\n};\n_getNewAllTokensState = new WeakSet();\ngetNewAllTokensState_fn = function(params) {\n  const {\n    newTokens,\n    newIgnoredTokens,\n    newDetectedTokens,\n    interactingAddress,\n    interactingChainId\n  } = params;\n  const { allTokens, allIgnoredTokens, allDetectedTokens } = this.state;\n  const userAddressToAddTokens = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getAddressOrSelectedAddress, getAddressOrSelectedAddress_fn).call(this, interactingAddress);\n  const chainIdToAddTokens = interactingChainId ?? _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId);\n  let newAllTokens = allTokens;\n  if (newTokens?.length || newTokens && allTokens && allTokens[chainIdToAddTokens] && allTokens[chainIdToAddTokens][userAddressToAddTokens]) {\n    const networkTokens = allTokens[chainIdToAddTokens];\n    const newNetworkTokens = {\n      ...networkTokens,\n      ...{ [userAddressToAddTokens]: newTokens }\n    };\n    newAllTokens = {\n      ...allTokens,\n      ...{ [chainIdToAddTokens]: newNetworkTokens }\n    };\n  }\n  let newAllIgnoredTokens = allIgnoredTokens;\n  if (newIgnoredTokens?.length || newIgnoredTokens && allIgnoredTokens && allIgnoredTokens[chainIdToAddTokens] && allIgnoredTokens[chainIdToAddTokens][userAddressToAddTokens]) {\n    const networkIgnoredTokens = allIgnoredTokens[chainIdToAddTokens];\n    const newIgnoredNetworkTokens = {\n      ...networkIgnoredTokens,\n      ...{ [userAddressToAddTokens]: newIgnoredTokens }\n    };\n    newAllIgnoredTokens = {\n      ...allIgnoredTokens,\n      ...{ [chainIdToAddTokens]: newIgnoredNetworkTokens }\n    };\n  }\n  let newAllDetectedTokens = allDetectedTokens;\n  if (newDetectedTokens?.length || newDetectedTokens && allDetectedTokens && allDetectedTokens[chainIdToAddTokens] && allDetectedTokens[chainIdToAddTokens][userAddressToAddTokens]) {\n    const networkDetectedTokens = allDetectedTokens[chainIdToAddTokens];\n    const newDetectedNetworkTokens = {\n      ...networkDetectedTokens,\n      ...{ [userAddressToAddTokens]: newDetectedTokens }\n    };\n    newAllDetectedTokens = {\n      ...allDetectedTokens,\n      ...{ [chainIdToAddTokens]: newDetectedNetworkTokens }\n    };\n  }\n  return { newAllTokens, newAllIgnoredTokens, newAllDetectedTokens };\n};\n_getAddressOrSelectedAddress = new WeakSet();\ngetAddressOrSelectedAddress_fn = function(address) {\n  if (address) {\n    return address;\n  }\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAddress, getSelectedAddress_fn).call(this);\n};\n_isInteractingWithWallet = new WeakSet();\nisInteractingWithWallet_fn = function(address) {\n  const selectedAddress = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAddress, getSelectedAddress_fn).call(this);\n  return selectedAddress === address;\n};\n_requestApproval = new WeakSet();\nrequestApproval_fn = async function(suggestedAssetMeta) {\n  return this.messagingSystem.call(\n    \"ApprovalController:addRequest\",\n    {\n      id: suggestedAssetMeta.id,\n      origin: _controllerutils.ORIGIN_METAMASK,\n      type: _controllerutils.ApprovalType.WatchAsset,\n      requestData: {\n        id: suggestedAssetMeta.id,\n        interactingAddress: suggestedAssetMeta.interactingAddress,\n        asset: {\n          address: suggestedAssetMeta.asset.address,\n          decimals: suggestedAssetMeta.asset.decimals,\n          symbol: suggestedAssetMeta.asset.symbol,\n          image: suggestedAssetMeta.asset.image || null\n        }\n      }\n    },\n    true\n  );\n};\n_getSelectedAccount = new WeakSet();\ngetSelectedAccount_fn = function() {\n  return this.messagingSystem.call(\"AccountsController:getSelectedAccount\");\n};\n_getSelectedAddress = new WeakSet();\ngetSelectedAddress_fn = function() {\n  const account = this.messagingSystem.call(\n    \"AccountsController:getAccount\",\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _selectedAccountId)\n  );\n  return account?.address || \"\";\n};\nvar TokensController_default = TokensController;\n\n\n\n\n\nexports.getDefaultTokensState = getDefaultTokensState; exports.TokensController = TokensController; exports.TokensController_default = TokensController_default;\n//# sourceMappingURL=chunk-ADJ3IFJH.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/NftDetectionController.ts\nvar _basecontroller = require('@metamask/base-controller');\n\n\n\n\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _utils = require('@metamask/utils');\nvar controllerName = \"NftDetectionController\";\nvar supportedNftDetectionNetworks = [\n  _controllerutils.ChainId.mainnet,\n  _controllerutils.ChainId[\"linea-mainnet\"]\n];\nvar BlockaidResultType = /* @__PURE__ */ ((BlockaidResultType2) => {\n  BlockaidResultType2[\"Benign\"] = \"Benign\";\n  BlockaidResultType2[\"Spam\"] = \"Spam\";\n  BlockaidResultType2[\"Warning\"] = \"Warning\";\n  BlockaidResultType2[\"Malicious\"] = \"Malicious\";\n  return BlockaidResultType2;\n})(BlockaidResultType || {});\nvar MAX_GET_COLLECTION_BATCH_SIZE = 20;\nvar _disabled, _addNft, _getNftState, _inProcessNftFetchingUpdates, _onPreferencesControllerStateChange, onPreferencesControllerStateChange_fn, _getOwnerNftApi, getOwnerNftApi_fn, _getOwnerNfts, getOwnerNfts_fn;\nvar NftDetectionController = class extends _basecontroller.BaseController {\n  /**\n   * The controller options\n   *\n   * @param options - The controller options.\n   * @param options.messenger - A reference to the messaging system.\n   * @param options.disabled - Represents previous value of useNftDetection. Used to detect changes of useNftDetection. Default value is true.\n   * @param options.addNft - Add an NFT.\n   * @param options.getNftState - Gets the current state of the Assets controller.\n   */\n  constructor({\n    messenger,\n    disabled = false,\n    addNft,\n    getNftState\n  }) {\n    super({\n      name: controllerName,\n      messenger,\n      metadata: {},\n      state: {}\n    });\n    /**\n     * Handles the state change of the preference controller.\n     * @param preferencesState - The new state of the preference controller.\n     * @param preferencesState.useNftDetection - Boolean indicating user preference on NFT detection.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onPreferencesControllerStateChange);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getOwnerNftApi);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getOwnerNfts);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _disabled, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _addNft, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getNftState, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _inProcessNftFetchingUpdates, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, disabled);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _inProcessNftFetchingUpdates, {});\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _getNftState, getNftState);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _addNft, addNft);\n    this.messagingSystem.subscribe(\n      \"PreferencesController:stateChange\",\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onPreferencesControllerStateChange, onPreferencesControllerStateChange_fn).bind(this)\n    );\n  }\n  /**\n   * Checks whether network is mainnet or not.\n   *\n   * @returns Whether current network is mainnet.\n   */\n  isMainnet() {\n    const { selectedNetworkClientId } = this.messagingSystem.call(\n      \"NetworkController:getState\"\n    );\n    const {\n      configuration: { chainId }\n    } = this.messagingSystem.call(\n      \"NetworkController:getNetworkClientById\",\n      selectedNetworkClientId\n    );\n    return chainId === _controllerutils.ChainId.mainnet;\n  }\n  isMainnetByNetworkClientId(networkClient) {\n    return networkClient.configuration.chainId === _controllerutils.ChainId.mainnet;\n  }\n  /**\n   * Triggers asset ERC721 token auto detection on mainnet. Any newly detected NFTs are\n   * added.\n   *\n   * @param options - Options bag.\n   * @param options.networkClientId - The network client ID to detect NFTs on.\n   * @param options.userAddress - The address to detect NFTs for.\n   */\n  async detectNfts(options) {\n    const userAddress = options?.userAddress ?? this.messagingSystem.call(\"AccountsController:getSelectedAccount\").address;\n    const { selectedNetworkClientId } = this.messagingSystem.call(\n      \"NetworkController:getState\"\n    );\n    const {\n      configuration: { chainId }\n    } = this.messagingSystem.call(\n      \"NetworkController:getNetworkClientById\",\n      selectedNetworkClientId\n    );\n    if (!supportedNftDetectionNetworks.includes(chainId) || _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _disabled)) {\n      return;\n    }\n    if (!userAddress) {\n      return;\n    }\n    const updateKey = `${chainId}:${userAddress}`;\n    if (updateKey in _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessNftFetchingUpdates)) {\n      await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessNftFetchingUpdates)[updateKey];\n      return;\n    }\n    const {\n      promise: inProgressUpdate,\n      resolve: updateSucceeded,\n      reject: updateFailed\n    } = _utils.createDeferredPromise.call(void 0, { suppressUnhandledRejection: true });\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessNftFetchingUpdates)[updateKey] = inProgressUpdate;\n    let next;\n    let apiNfts = [];\n    let resultNftApi;\n    try {\n      do {\n        resultNftApi = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getOwnerNfts, getOwnerNfts_fn).call(this, userAddress, chainId, next);\n        apiNfts = resultNftApi.tokens.filter(\n          (elm) => elm.token.isSpam === false && (elm.blockaidResult?.result_type ? elm.blockaidResult?.result_type === \"Benign\" /* Benign */ : true)\n        );\n        const collections = apiNfts.reduce((acc, currValue) => {\n          if (!acc.includes(currValue.token.contract) && currValue.token.contract === currValue?.token?.collection?.id) {\n            acc.push(currValue.token.contract);\n          }\n          return acc;\n        }, []);\n        if (collections.length !== 0) {\n          const collectionResponse = await _chunkMZI3SDQNjs.reduceInBatchesSerially.call(void 0, {\n            values: collections,\n            batchSize: MAX_GET_COLLECTION_BATCH_SIZE,\n            eachBatch: async (allResponses, batch) => {\n              const params = new URLSearchParams(\n                batch.map((s) => [\"contract\", s])\n              );\n              params.append(\"chainId\", \"1\");\n              const collectionResponseForBatch = await _controllerutils.fetchWithErrorHandling.call(void 0, \n                {\n                  url: `${_controllerutils.NFT_API_BASE_URL}/collections?${params.toString()}`,\n                  options: {\n                    headers: {\n                      Version: _controllerutils.NFT_API_VERSION\n                    }\n                  },\n                  timeout: _controllerutils.NFT_API_TIMEOUT\n                }\n              );\n              return {\n                ...allResponses,\n                ...collectionResponseForBatch\n              };\n            },\n            initialResult: {}\n          });\n          if (collectionResponse.collections?.length) {\n            apiNfts.forEach((singleNFT) => {\n              const found = collectionResponse.collections.find(\n                (elm) => elm.id?.toLowerCase() === singleNFT.token.contract.toLowerCase()\n              );\n              if (found) {\n                singleNFT.token = {\n                  ...singleNFT.token,\n                  collection: {\n                    ...singleNFT.token.collection ?? {},\n                    creator: found?.creator,\n                    openseaVerificationStatus: found?.openseaVerificationStatus,\n                    contractDeployedAt: found.contractDeployedAt,\n                    ownerCount: found.ownerCount,\n                    topBid: found.topBid\n                  }\n                };\n              }\n            });\n          }\n        }\n        const addNftPromises = apiNfts.map(async (nft) => {\n          const {\n            tokenId,\n            contract,\n            kind,\n            image: imageUrl,\n            imageSmall: imageThumbnailUrl,\n            metadata: { imageOriginal: imageOriginalUrl } = {},\n            name,\n            description,\n            attributes,\n            topBid,\n            lastSale,\n            rarityRank,\n            rarityScore,\n            collection\n          } = nft.token;\n          let ignored;\n          const { ignoredNfts } = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _getNftState).call(this);\n          if (ignoredNfts.length) {\n            ignored = ignoredNfts.find((c) => {\n              return c.address === _controllerutils.toChecksumHexAddress.call(void 0, contract) && c.tokenId === tokenId;\n            });\n          }\n          if (!ignored) {\n            const nftMetadata = Object.assign(\n              {},\n              { name },\n              description && { description },\n              imageUrl && { image: imageUrl },\n              imageThumbnailUrl && { imageThumbnail: imageThumbnailUrl },\n              imageOriginalUrl && { imageOriginal: imageOriginalUrl },\n              kind && { standard: kind.toUpperCase() },\n              lastSale && { lastSale },\n              attributes && { attributes },\n              topBid && { topBid },\n              rarityRank && { rarityRank },\n              rarityScore && { rarityScore },\n              collection && { collection }\n            );\n            await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _addNft).call(this, contract, tokenId, {\n              nftMetadata,\n              userAddress,\n              source: \"detected\" /* Detected */,\n              networkClientId: options?.networkClientId\n            });\n          }\n        });\n        await Promise.all(addNftPromises);\n      } while (next = resultNftApi.continuation);\n      updateSucceeded();\n    } catch (error) {\n      updateFailed(error);\n      throw error;\n    } finally {\n      delete _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessNftFetchingUpdates)[updateKey];\n    }\n  }\n};\n_disabled = new WeakMap();\n_addNft = new WeakMap();\n_getNftState = new WeakMap();\n_inProcessNftFetchingUpdates = new WeakMap();\n_onPreferencesControllerStateChange = new WeakSet();\nonPreferencesControllerStateChange_fn = function({ useNftDetection }) {\n  if (!useNftDetection !== _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _disabled)) {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, !useNftDetection);\n  }\n};\n_getOwnerNftApi = new WeakSet();\ngetOwnerNftApi_fn = function({\n  chainId,\n  address,\n  next\n}) {\n  return `${_controllerutils.NFT_API_BASE_URL}/users/${address}/tokens?chainIds=${chainId}&limit=50&includeTopBid=true&continuation=${next ?? \"\"}`;\n};\n_getOwnerNfts = new WeakSet();\ngetOwnerNfts_fn = async function(address, chainId, cursor) {\n  const convertedChainId = _controllerutils.convertHexToDecimal.call(void 0, chainId).toString();\n  const url = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getOwnerNftApi, getOwnerNftApi_fn).call(this, {\n    chainId: convertedChainId,\n    address,\n    next: cursor\n  });\n  const nftApiResponse = await _controllerutils.handleFetch.call(void 0, url, {\n    headers: {\n      Version: _controllerutils.NFT_API_VERSION\n    }\n  });\n  return nftApiResponse;\n};\nvar NftDetectionController_default = NftDetectionController;\n\n\n\n\n\n\nexports.BlockaidResultType = BlockaidResultType; exports.MAX_GET_COLLECTION_BATCH_SIZE = MAX_GET_COLLECTION_BATCH_SIZE; exports.NftDetectionController = NftDetectionController; exports.NftDetectionController_default = NftDetectionController_default;\n//# sourceMappingURL=chunk-BBCZM5P4.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkZG5MS2TOjs = require('./chunk-ZG5MS2TO.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RatesController/RatesController.ts\nvar _basecontroller = require('@metamask/base-controller');\nvar _asyncmutex = require('async-mutex');\nvar name = \"RatesController\";\nvar Cryptocurrency = /* @__PURE__ */ ((Cryptocurrency2) => {\n  Cryptocurrency2[\"Btc\"] = \"btc\";\n  return Cryptocurrency2;\n})(Cryptocurrency || {});\nvar DEFAULT_INTERVAL = 18e4;\nvar metadata = {\n  fiatCurrency: { persist: true, anonymous: true },\n  rates: { persist: true, anonymous: true },\n  cryptocurrencies: { persist: true, anonymous: true }\n};\nvar defaultState = {\n  fiatCurrency: \"usd\",\n  rates: {\n    [\"btc\" /* Btc */]: {\n      conversionDate: 0,\n      conversionRate: \"0\"\n    }\n  },\n  cryptocurrencies: [\"btc\" /* Btc */]\n};\nvar _mutex, _fetchMultiExchangeRate, _includeUsdRate, _intervalLength, _intervalId, _withLock, withLock_fn, _executePoll, executePoll_fn, _updateRates, updateRates_fn;\nvar RatesController = class extends _basecontroller.BaseController {\n  /**\n   * Creates a RatesController instance.\n   *\n   * @param options - Constructor options.\n   * @param options.includeUsdRate - Keep track of the USD rate in addition to the current currency rate.\n   * @param options.interval - The polling interval, in milliseconds.\n   * @param options.messenger - A reference to the messaging system.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.fetchMultiExchangeRate - Fetches the exchange rate from an external API. This option is primarily meant for use in unit tests.\n   */\n  constructor({\n    interval = DEFAULT_INTERVAL,\n    messenger,\n    state,\n    includeUsdRate,\n    fetchMultiExchangeRate: fetchMultiExchangeRate2 = _chunkZG5MS2TOjs.fetchMultiExchangeRate\n  }) {\n    super({\n      name,\n      metadata,\n      messenger,\n      state: { ...defaultState, ...state }\n    });\n    /**\n     * Executes a function `callback` within a mutex lock to ensure that only one instance of `callback` runs at a time across all invocations of `#withLock`.\n     * This method is useful for synchronizing access to a resource or section of code that should not be executed concurrently.\n     *\n     * @template R - The return type of the function `callback`.\n     * @param callback - A callback to execute once the lock is acquired. This callback can be synchronous or asynchronous.\n     * @returns A promise that resolves to the result of the function `callback`. The promise is fulfilled once `callback` has completed execution.\n     * @example\n     * async function criticalLogic() {\n     *   // Critical logic code goes here.\n     * }\n     *\n     * // Execute criticalLogic within a lock.\n     * const result = await this.#withLock(criticalLogic);\n     */\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _withLock);\n    /**\n     * Executes the polling operation to update rates.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _executePoll);\n    /**\n     * Updates the rates by fetching new data.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _updateRates);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _mutex, new (0, _asyncmutex.Mutex)());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _fetchMultiExchangeRate, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _includeUsdRate, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _intervalLength, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _intervalId, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _includeUsdRate, includeUsdRate);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _fetchMultiExchangeRate, fetchMultiExchangeRate2);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _intervalLength, interval);\n  }\n  /**\n   * Starts the polling process.\n   */\n  async start() {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _intervalId)) {\n      return;\n    }\n    this.messagingSystem.publish(`${name}:pollingStarted`);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _intervalId, setInterval(() => {\n      _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _executePoll, executePoll_fn).call(this).catch(console.error);\n    }, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _intervalLength)));\n  }\n  /**\n   * Stops the polling process.\n   */\n  async stop() {\n    if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _intervalId)) {\n      return;\n    }\n    clearInterval(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _intervalId));\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _intervalId, void 0);\n    this.messagingSystem.publish(`${name}:pollingStopped`);\n  }\n  /**\n   * Returns the current list of cryptocurrency.\n   * @returns The cryptocurrency list.\n   */\n  getCryptocurrencyList() {\n    const { cryptocurrencies } = this.state;\n    return cryptocurrencies;\n  }\n  /**\n   * Sets the list of supported cryptocurrencies.\n   * @param list - The list of supported cryptocurrencies.\n   */\n  async setCryptocurrencyList(list) {\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _withLock, withLock_fn).call(this, () => {\n      this.update(() => {\n        return {\n          ...this.state,\n          fromCurrencies: list\n        };\n      });\n    });\n  }\n  /**\n   * Sets the internal fiat currency and update rates accordingly.\n   * @param fiatCurrency - The fiat currency.\n   */\n  async setFiatCurrency(fiatCurrency) {\n    if (fiatCurrency === \"\") {\n      throw new Error(\"The currency can not be an empty string\");\n    }\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _withLock, withLock_fn).call(this, () => {\n      this.update(() => {\n        return {\n          ...defaultState,\n          fiatCurrency\n        };\n      });\n    });\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateRates, updateRates_fn).call(this);\n  }\n};\n_mutex = new WeakMap();\n_fetchMultiExchangeRate = new WeakMap();\n_includeUsdRate = new WeakMap();\n_intervalLength = new WeakMap();\n_intervalId = new WeakMap();\n_withLock = new WeakSet();\nwithLock_fn = async function(callback) {\n  const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _mutex).acquire();\n  try {\n    return callback();\n  } finally {\n    releaseLock();\n  }\n};\n_executePoll = new WeakSet();\nexecutePoll_fn = async function() {\n  await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _updateRates, updateRates_fn).call(this);\n};\n_updateRates = new WeakSet();\nupdateRates_fn = async function() {\n  await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _withLock, withLock_fn).call(this, async () => {\n    const { fiatCurrency, cryptocurrencies } = this.state;\n    const response = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _fetchMultiExchangeRate).call(this, fiatCurrency, cryptocurrencies, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _includeUsdRate));\n    const updatedRates = {};\n    for (const [cryptocurrency, values] of Object.entries(response)) {\n      updatedRates[cryptocurrency] = {\n        conversionDate: Date.now(),\n        conversionRate: values[fiatCurrency],\n        ..._chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _includeUsdRate) && { usdConversionRate: values.usd }\n      };\n    }\n    this.update(() => {\n      return {\n        ...this.state,\n        rates: updatedRates\n      };\n    });\n  });\n};\n\n\n\n\n\nexports.name = name; exports.Cryptocurrency = Cryptocurrency; exports.RatesController = RatesController;\n//# sourceMappingURL=chunk-F6L3DFOZ.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _chunkISK2VSBBjs = require('./chunk-ISK2VSBB.js');\n\n\nvar _chunkJCR4H6YLjs = require('./chunk-JCR4H6YL.js');\n\n\nvar _chunk5QLC2MHVjs = require('./chunk-5QLC2MHV.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/AssetsContractController.ts\nvar _contracts = require('@ethersproject/contracts');\nvar _providers = require('@ethersproject/providers');\nvar _controllerutils = require('@metamask/controller-utils');\nvar _utils = require('@metamask/utils');\nvar _singlecallbalancecheckerabi = require('single-call-balance-checker-abi'); var _singlecallbalancecheckerabi2 = _interopRequireDefault(_singlecallbalancecheckerabi);\nvar SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID = {\n  [\"0x1\" /* mainnet */]: \"0xb1f8e55c7f64d203c1400b9d8555d050f94adf39\",\n  [\"0x38\" /* bsc */]: \"0x2352c63A83f9Fd126af8676146721Fa00924d7e4\",\n  [\"0x89\" /* polygon */]: \"0x2352c63A83f9Fd126af8676146721Fa00924d7e4\",\n  [\"0xa86a\" /* avax */]: \"0xD023D153a0DFa485130ECFdE2FAA7e612EF94818\",\n  [\"0x4e454152\" /* aurora */]: \"0x1286415D333855237f89Df27D388127181448538\",\n  [\"0xe704\" /* linea_goerli */]: \"0x10dAd7Ca3921471f616db788D9300DC97Db01783\",\n  [\"0xe708\" /* linea_mainnet */]: \"0xF62e6a41561b3650a69Bb03199C735e3E3328c0D\",\n  [\"0xa4b1\" /* arbitrum */]: \"0x151E24A486D7258dd7C33Fb67E4bB01919B7B32c\",\n  [\"0xa\" /* optimism */]: \"0xB1c568e9C3E6bdaf755A60c7418C269eb11524FC\",\n  [\"0x2105\" /* base */]: \"0x6AA75276052D96696134252587894ef5FFA520af\",\n  [\"0x144\" /* zksync */]: \"0x458fEd3144680a5b8bcfaa0F9594aa19B4Ea2D34\",\n  [\"0x19\" /* cronos */]: \"0x768ca200f0fc702ac9ea502498c18f5eff176378\",\n  [\"0xa4ec\" /* celo */]: \"0x6aa75276052d96696134252587894ef5ffa520af\",\n  [\"0x64\" /* gnosis */]: \"0x6aa75276052d96696134252587894ef5ffa520af\",\n  [\"0xfa\" /* fantom */]: \"0x6aa75276052d96696134252587894ef5ffa520af\",\n  [\"0x44d\" /* polygon_zkevm */]: \"0x6aa75276052d96696134252587894ef5ffa520af\",\n  [\"0x504\" /* moonbeam */]: \"0x6aa75276052d96696134252587894ef5ffa520af\",\n  [\"0x505\" /* moonriver */]: \"0x6aa75276052d96696134252587894ef5ffa520af\"\n};\nvar MISSING_PROVIDER_ERROR = \"AssetsContractController failed to set the provider correctly. A provider must be set for this method to be available\";\nvar name = \"AssetsContractController\";\nvar _provider, _ipfsGateway, _chainId, _registerActionHandlers, registerActionHandlers_fn, _registerEventSubscriptions, registerEventSubscriptions_fn, _getCorrectProvider, getCorrectProvider_fn, _getCorrectChainId, getCorrectChainId_fn;\nvar AssetsContractController = class {\n  /**\n   * Creates a AssetsContractController instance.\n   *\n   * @param options - The controller options.\n   * @param options.messenger - The controller messenger.\n   * @param options.chainId - The chain ID of the current network.\n   */\n  constructor({\n    messenger,\n    chainId: initialChainId\n  }) {\n    // TODO: Expand into base-controller utility function that batch registers action handlers.\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _registerActionHandlers);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _registerEventSubscriptions);\n    /**\n     * Get the relevant provider instance.\n     *\n     * @param networkClientId - Network Client ID.\n     * @returns Web3Provider instance.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getCorrectProvider);\n    /**\n     * Get the relevant chain ID.\n     *\n     * @param networkClientId - Network Client ID used to get the provider.\n     * @returns Hex chain ID.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getCorrectChainId);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _provider, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _ipfsGateway, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _chainId, void 0);\n    this.messagingSystem = messenger;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _provider, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _ipfsGateway, _controllerutils.IPFS_DEFAULT_GATEWAY_URL);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, initialChainId);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _registerActionHandlers, registerActionHandlers_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _registerEventSubscriptions, registerEventSubscriptions_fn).call(this);\n  }\n  /**\n   * Sets a new provider.\n   *\n   * @param provider - Provider used to create a new underlying Web3 instance\n   */\n  setProvider(provider) {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _provider, provider);\n  }\n  get ipfsGateway() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ipfsGateway);\n  }\n  get chainId() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId);\n  }\n  /**\n   * Get a ERC20Standard instance using the relevant provider instance.\n   *\n   * @param networkClientId - Network Client ID used to get the provider.\n   * @returns ERC20Standard instance.\n   */\n  getERC20Standard(networkClientId) {\n    const provider = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectProvider, getCorrectProvider_fn).call(this, networkClientId);\n    return new (0, _chunkJCR4H6YLjs.ERC20Standard)(provider);\n  }\n  /**\n   * Get a ERC721Standard instance using the relevant provider instance.\n   *\n   * @param networkClientId - Network Client ID used to get the provider.\n   * @returns ERC721Standard instance.\n   */\n  getERC721Standard(networkClientId) {\n    const provider = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectProvider, getCorrectProvider_fn).call(this, networkClientId);\n    return new (0, _chunkISK2VSBBjs.ERC721Standard)(provider);\n  }\n  /**\n   * Get a ERC1155Standard instance using the relevant provider instance.\n   *\n   * @param networkClientId - Network Client ID used to get the provider.\n   * @returns ERC1155Standard instance.\n   */\n  getERC1155Standard(networkClientId) {\n    const provider = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectProvider, getCorrectProvider_fn).call(this, networkClientId);\n    return new (0, _chunk5QLC2MHVjs.ERC1155Standard)(provider);\n  }\n  /**\n   * Get balance or count for current account on specific asset contract.\n   *\n   * @param address - Asset ERC20 contract address.\n   * @param selectedAddress - Current account public address.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to BN object containing balance for current account on specific asset contract.\n   */\n  async getERC20BalanceOf(address, selectedAddress, networkClientId) {\n    const erc20Standard = this.getERC20Standard(networkClientId);\n    return erc20Standard.getBalanceOf(address, selectedAddress);\n  }\n  /**\n   * Query for the decimals for a given ERC20 asset.\n   *\n   * @param address - ERC20 asset contract address.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'decimals'.\n   */\n  async getERC20TokenDecimals(address, networkClientId) {\n    const erc20Standard = this.getERC20Standard(networkClientId);\n    return erc20Standard.getTokenDecimals(address);\n  }\n  /**\n   * Query for the name for a given ERC20 asset.\n   *\n   * @param address - ERC20 asset contract address.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'decimals'.\n   */\n  async getERC20TokenName(address, networkClientId) {\n    const erc20Standard = this.getERC20Standard(networkClientId);\n    return erc20Standard.getTokenName(address);\n  }\n  /**\n   * Enumerate assets assigned to an owner.\n   *\n   * @param address - ERC721 asset contract address.\n   * @param selectedAddress - Current account public address.\n   * @param index - An NFT counter less than `balanceOf(selectedAddress)`.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to token identifier for the 'index'th asset assigned to 'selectedAddress'.\n   */\n  async getERC721NftTokenId(address, selectedAddress, index, networkClientId) {\n    const erc721Standard = this.getERC721Standard(networkClientId);\n    return erc721Standard.getNftTokenId(address, selectedAddress, index);\n  }\n  /**\n   * Enumerate assets assigned to an owner.\n   *\n   * @param tokenAddress - ERC721 asset contract address.\n   * @param userAddress - Current account public address.\n   * @param tokenId - ERC721 asset identifier.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to an object containing the token standard and a set of details which depend on which standard the token supports.\n   */\n  async getTokenStandardAndDetails(tokenAddress, userAddress, tokenId, networkClientId) {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectProvider, getCorrectProvider_fn).call(this, networkClientId);\n    try {\n      const erc721Standard = this.getERC721Standard(networkClientId);\n      return {\n        ...await erc721Standard.getDetails(\n          tokenAddress,\n          _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ipfsGateway),\n          tokenId\n        )\n      };\n    } catch {\n    }\n    try {\n      const erc1155Standard = this.getERC1155Standard(networkClientId);\n      return {\n        ...await erc1155Standard.getDetails(\n          tokenAddress,\n          _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ipfsGateway),\n          tokenId\n        )\n      };\n    } catch {\n    }\n    try {\n      const erc20Standard = this.getERC20Standard(networkClientId);\n      return {\n        ...await erc20Standard.getDetails(tokenAddress, userAddress)\n      };\n    } catch {\n    }\n    throw new Error(\"Unable to determine contract standard\");\n  }\n  /**\n   * Query for tokenURI for a given ERC721 asset.\n   *\n   * @param address - ERC721 asset contract address.\n   * @param tokenId - ERC721 asset identifier.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'tokenURI'.\n   */\n  async getERC721TokenURI(address, tokenId, networkClientId) {\n    const erc721Standard = this.getERC721Standard(networkClientId);\n    return erc721Standard.getTokenURI(address, tokenId);\n  }\n  /**\n   * Query for name for a given asset.\n   *\n   * @param address - ERC721 or ERC20 asset contract address.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'name'.\n   */\n  async getERC721AssetName(address, networkClientId) {\n    const erc721Standard = this.getERC721Standard(networkClientId);\n    return erc721Standard.getAssetName(address);\n  }\n  /**\n   * Query for symbol for a given asset.\n   *\n   * @param address - ERC721 or ERC20 asset contract address.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'symbol'.\n   */\n  async getERC721AssetSymbol(address, networkClientId) {\n    const erc721Standard = this.getERC721Standard(networkClientId);\n    return erc721Standard.getAssetSymbol(address);\n  }\n  /**\n   * Query for owner for a given ERC721 asset.\n   *\n   * @param address - ERC721 asset contract address.\n   * @param tokenId - ERC721 asset identifier.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the owner address.\n   */\n  async getERC721OwnerOf(address, tokenId, networkClientId) {\n    const erc721Standard = this.getERC721Standard(networkClientId);\n    return erc721Standard.getOwnerOf(address, tokenId);\n  }\n  /**\n   * Query for tokenURI for a given asset.\n   *\n   * @param address - ERC1155 asset contract address.\n   * @param tokenId - ERC1155 asset identifier.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'tokenURI'.\n   */\n  async getERC1155TokenURI(address, tokenId, networkClientId) {\n    const erc1155Standard = this.getERC1155Standard(networkClientId);\n    return erc1155Standard.getTokenURI(address, tokenId);\n  }\n  /**\n   * Query for balance of a given ERC 1155 token.\n   *\n   * @param userAddress - Wallet public address.\n   * @param nftAddress - ERC1155 asset contract address.\n   * @param nftId - ERC1155 asset identifier.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'balanceOf'.\n   */\n  async getERC1155BalanceOf(userAddress, nftAddress, nftId, networkClientId) {\n    const erc1155Standard = this.getERC1155Standard(networkClientId);\n    return erc1155Standard.getBalanceOf(nftAddress, userAddress, nftId);\n  }\n  /**\n   * Transfer single ERC1155 token.\n   *\n   * @param nftAddress - ERC1155 token address.\n   * @param senderAddress - ERC1155 token sender.\n   * @param recipientAddress - ERC1155 token recipient.\n   * @param nftId - ERC1155 token id.\n   * @param qty - Quantity of tokens to be sent.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns Promise resolving to the 'transferSingle' ERC1155 token.\n   */\n  async transferSingleERC1155(nftAddress, senderAddress, recipientAddress, nftId, qty, networkClientId) {\n    const erc1155Standard = this.getERC1155Standard(networkClientId);\n    return erc1155Standard.transferSingle(\n      nftAddress,\n      senderAddress,\n      recipientAddress,\n      nftId,\n      qty\n    );\n  }\n  /**\n   * Get the token balance for a list of token addresses in a single call. Only non-zero balances\n   * are returned.\n   *\n   * @param selectedAddress - The address to check token balances for.\n   * @param tokensToDetect - The token addresses to detect balances for.\n   * @param networkClientId - Network Client ID to fetch the provider with.\n   * @returns The list of non-zero token balances.\n   */\n  async getBalancesInSingleCall(selectedAddress, tokensToDetect, networkClientId) {\n    const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, networkClientId);\n    const provider = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectProvider, getCorrectProvider_fn).call(this, networkClientId);\n    if (!((id) => id in SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID)(chainId)) {\n      return {};\n    }\n    const contractAddress = SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID[chainId];\n    const contract = new (0, _contracts.Contract)(\n      contractAddress,\n      _singlecallbalancecheckerabi2.default,\n      provider\n    );\n    const result = await contract.balances([selectedAddress], tokensToDetect);\n    const nonZeroBalances = {};\n    if (result.length > 0) {\n      tokensToDetect.forEach((tokenAddress, index) => {\n        const balance = result[index];\n        if (String(balance) !== \"0\") {\n          nonZeroBalances[tokenAddress] = balance;\n        }\n      });\n    }\n    return nonZeroBalances;\n  }\n};\n_provider = new WeakMap();\n_ipfsGateway = new WeakMap();\n_chainId = new WeakMap();\n_registerActionHandlers = new WeakSet();\nregisterActionHandlers_fn = function() {\n  const methodsExcludedFromMessenger = [\n    \"constructor\",\n    \"messagingSystem\",\n    \"setProvider\",\n    \"provider\",\n    \"ipfsGateway\",\n    \"chainId\"\n  ];\n  _utils.getKnownPropertyNames.call(void 0, Object.getPrototypeOf(this)).forEach(\n    (method) => {\n      if (((key) => !methodsExcludedFromMessenger.find((e) => e === key) && typeof this[key] === \"function\")(method)) {\n        this.messagingSystem.registerActionHandler(\n          `${name}:${method}`,\n          // TODO: Write a generic for-loop implementation that iterates over an input union type in tandem with the input array.\n          // @ts-expect-error Both assigned argument and assignee parameter are using the entire union type for `method` instead of the type for the current element\n          this[method].bind(this)\n        );\n      }\n    }\n  );\n};\n_registerEventSubscriptions = new WeakSet();\nregisterEventSubscriptions_fn = function() {\n  this.messagingSystem.subscribe(\n    `PreferencesController:stateChange`,\n    ({ ipfsGateway }) => {\n      _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _ipfsGateway, ipfsGateway);\n    }\n  );\n  this.messagingSystem.subscribe(\n    `NetworkController:networkDidChange`,\n    ({ selectedNetworkClientId }) => {\n      const chainId = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectChainId, getCorrectChainId_fn).call(this, selectedNetworkClientId);\n      if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId) !== chainId) {\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, chainId);\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _provider, _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectProvider, getCorrectProvider_fn).call(this));\n      }\n    }\n  );\n};\n_getCorrectProvider = new WeakSet();\ngetCorrectProvider_fn = function(networkClientId) {\n  const provider = networkClientId ? this.messagingSystem.call(\n    `NetworkController:getNetworkClientById`,\n    networkClientId\n  ).provider : this.messagingSystem.call(\"NetworkController:getSelectedNetworkClient\")?.provider ?? _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _provider);\n  if (provider === void 0) {\n    throw new Error(MISSING_PROVIDER_ERROR);\n  }\n  return new (0, _providers.Web3Provider)(provider);\n};\n_getCorrectChainId = new WeakSet();\ngetCorrectChainId_fn = function(networkClientId) {\n  if (networkClientId) {\n    const networkClientConfiguration = this.messagingSystem.call(\n      \"NetworkController:getNetworkConfigurationByNetworkClientId\",\n      networkClientId\n    );\n    if (networkClientConfiguration) {\n      return networkClientConfiguration.chainId;\n    }\n  }\n  const { selectedNetworkClientId } = this.messagingSystem.call(\n    \"NetworkController:getState\"\n  );\n  const networkClient = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  );\n  return networkClient.configuration?.chainId ?? _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId);\n};\nvar AssetsContractController_default = AssetsContractController;\n\n\n\n\n\n\nexports.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID = SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID; exports.MISSING_PROVIDER_ERROR = MISSING_PROVIDER_ERROR; exports.AssetsContractController = AssetsContractController; exports.AssetsContractController_default = AssetsContractController_default;\n//# sourceMappingURL=chunk-GHG3DOUK.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/AccountTrackerController.ts\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _ethquery = require('@metamask/eth-query'); var _ethquery2 = _interopRequireDefault(_ethquery);\nvar _pollingcontroller = require('@metamask/polling-controller');\nvar _utils = require('@metamask/utils');\nvar _asyncmutex = require('async-mutex');\nvar _lodash = require('lodash');\nvar controllerName = \"AccountTrackerController\";\nvar accountTrackerMetadata = {\n  accounts: {\n    persist: true,\n    anonymous: false\n  },\n  accountsByChainId: {\n    persist: true,\n    anonymous: false\n  }\n};\nvar _refreshMutex, _handle, _getCurrentChainId, getCurrentChainId_fn, _getCorrectNetworkClient, getCorrectNetworkClient_fn, _getBalanceFromChain, getBalanceFromChain_fn;\nvar AccountTrackerController = class extends _pollingcontroller.StaticIntervalPollingController {\n  /**\n   * Creates an AccountTracker instance.\n   *\n   * @param options - The controller options.\n   * @param options.interval - Polling interval used to fetch new account balances.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.messenger - The controller messaging system.\n   */\n  constructor({\n    interval = 1e4,\n    state,\n    messenger\n  }) {\n    const { selectedNetworkClientId } = messenger.call(\n      \"NetworkController:getState\"\n    );\n    const {\n      configuration: { chainId }\n    } = messenger.call(\n      \"NetworkController:getNetworkClientById\",\n      selectedNetworkClientId\n    );\n    super({\n      name: controllerName,\n      messenger,\n      state: {\n        accounts: {},\n        accountsByChainId: {\n          [chainId]: {}\n        },\n        ...state\n      },\n      metadata: accountTrackerMetadata\n    });\n    /**\n     * Gets the current chain ID.\n     * @returns The current chain ID.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getCurrentChainId);\n    /**\n     * Resolves a networkClientId to a network client config\n     * or globally selected network config if not provided\n     *\n     * @param networkClientId - Optional networkClientId to fetch a network client with\n     * @returns network client config\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getCorrectNetworkClient);\n    /**\n     * Fetches the balance of a given address from the blockchain.\n     *\n     * @param address - The account address to fetch the balance for.\n     * @param ethQuery - The EthQuery instance to query getBalnce with.\n     * @returns A promise that resolves to the balance in a hex string format.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getBalanceFromChain);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _refreshMutex, new (0, _asyncmutex.Mutex)());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _handle, void 0);\n    this.setIntervalLength(interval);\n    this.poll();\n    this.messagingSystem.subscribe(\n      \"AccountsController:selectedEvmAccountChange\",\n      // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      () => this.refresh()\n    );\n  }\n  syncAccounts(newChainId) {\n    const accounts = { ...this.state.accounts };\n    const accountsByChainId = _lodash.cloneDeep.call(void 0, this.state.accountsByChainId);\n    const existing = Object.keys(accounts);\n    if (!accountsByChainId[newChainId]) {\n      accountsByChainId[newChainId] = {};\n      existing.forEach((address) => {\n        accountsByChainId[newChainId][address] = { balance: \"0x0\" };\n      });\n    }\n    const addresses = Object.values(\n      this.messagingSystem.call(\"AccountsController:listAccounts\").map(\n        (internalAccount) => _controllerutils.toChecksumHexAddress.call(void 0, internalAccount.address)\n      )\n    );\n    const newAddresses = addresses.filter(\n      (address) => !existing.includes(address)\n    );\n    const oldAddresses = existing.filter(\n      (address) => !addresses.includes(address)\n    );\n    newAddresses.forEach((address) => {\n      accounts[address] = { balance: \"0x0\" };\n    });\n    Object.keys(accountsByChainId).forEach((chainId) => {\n      newAddresses.forEach((address) => {\n        accountsByChainId[chainId][address] = {\n          balance: \"0x0\"\n        };\n      });\n    });\n    oldAddresses.forEach((address) => {\n      delete accounts[address];\n    });\n    Object.keys(accountsByChainId).forEach((chainId) => {\n      oldAddresses.forEach((address) => {\n        delete accountsByChainId[chainId][address];\n      });\n    });\n    this.update((state) => {\n      state.accounts = accounts;\n      state.accountsByChainId = accountsByChainId;\n    });\n  }\n  /**\n   * Starts a new polling interval.\n   *\n   * @param interval - Polling interval trigger a 'refresh'.\n   */\n  async poll(interval) {\n    if (interval) {\n      this.setIntervalLength(interval);\n    }\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _handle)) {\n      clearTimeout(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _handle));\n    }\n    await this.refresh();\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _handle, setTimeout(() => {\n      this.poll(this.getIntervalLength());\n    }, this.getIntervalLength()));\n  }\n  /**\n   * Refreshes the balances of the accounts using the networkClientId\n   *\n   * @param networkClientId - The network client ID used to get balances.\n   */\n  async _executePoll(networkClientId) {\n    this.refresh(networkClientId);\n  }\n  /**\n   * Refreshes the balances of the accounts depending on the multi-account setting.\n   * If multi-account is disabled, only updates the selected account balance.\n   * If multi-account is enabled, updates balances for all accounts.\n   *\n   * @param networkClientId - Optional networkClientId to fetch a network client with\n   */\n  async refresh(networkClientId) {\n    const selectedAccount = this.messagingSystem.call(\n      \"AccountsController:getSelectedAccount\"\n    );\n    const releaseLock = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _refreshMutex).acquire();\n    try {\n      const { chainId, ethQuery } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectNetworkClient, getCorrectNetworkClient_fn).call(this, networkClientId);\n      this.syncAccounts(chainId);\n      const { accounts, accountsByChainId } = this.state;\n      const { isMultiAccountBalancesEnabled } = this.messagingSystem.call(\n        \"PreferencesController:getState\"\n      );\n      const accountsToUpdate = isMultiAccountBalancesEnabled ? Object.keys(accounts) : [_controllerutils.toChecksumHexAddress.call(void 0, selectedAccount.address)];\n      const accountsForChain = { ...accountsByChainId[chainId] };\n      for (const address of accountsToUpdate) {\n        const balance = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getBalanceFromChain, getBalanceFromChain_fn).call(this, address, ethQuery);\n        if (balance) {\n          accountsForChain[address] = {\n            balance\n          };\n        }\n      }\n      this.update((state) => {\n        if (chainId === _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCurrentChainId, getCurrentChainId_fn).call(this)) {\n          state.accounts = accountsForChain;\n        }\n        state.accountsByChainId[chainId] = accountsForChain;\n      });\n    } finally {\n      releaseLock();\n    }\n  }\n  /**\n   * Sync accounts balances with some additional addresses.\n   *\n   * @param addresses - the additional addresses, may be hardware wallet addresses.\n   * @param networkClientId - Optional networkClientId to fetch a network client with.\n   * @returns accounts - addresses with synced balance\n   */\n  async syncBalanceWithAddresses(addresses, networkClientId) {\n    const { ethQuery } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getCorrectNetworkClient, getCorrectNetworkClient_fn).call(this, networkClientId);\n    return await Promise.all(\n      addresses.map((address) => {\n        return _controllerutils.safelyExecuteWithTimeout.call(void 0, async () => {\n          _utils.assert.call(void 0, ethQuery, \"Provider not set.\");\n          const balance = await _controllerutils.query.call(void 0, ethQuery, \"getBalance\", [address]);\n          return [address, balance];\n        });\n      })\n    ).then((value) => {\n      return value.reduce((obj, item) => {\n        if (!item) {\n          return obj;\n        }\n        const [address, balance] = item;\n        return {\n          ...obj,\n          [address]: {\n            balance\n          }\n        };\n      }, {});\n    });\n  }\n};\n_refreshMutex = new WeakMap();\n_handle = new WeakMap();\n_getCurrentChainId = new WeakSet();\ngetCurrentChainId_fn = function() {\n  const { selectedNetworkClientId } = this.messagingSystem.call(\n    \"NetworkController:getState\"\n  );\n  const {\n    configuration: { chainId }\n  } = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  );\n  return chainId;\n};\n_getCorrectNetworkClient = new WeakSet();\ngetCorrectNetworkClient_fn = function(networkClientId) {\n  const selectedNetworkClientId = networkClientId ?? this.messagingSystem.call(\"NetworkController:getState\").selectedNetworkClientId;\n  const {\n    configuration: { chainId },\n    provider\n  } = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  );\n  return {\n    chainId,\n    ethQuery: new (0, _ethquery2.default)(provider)\n  };\n};\n_getBalanceFromChain = new WeakSet();\ngetBalanceFromChain_fn = async function(address, ethQuery) {\n  return await _controllerutils.safelyExecuteWithTimeout.call(void 0, async () => {\n    _utils.assert.call(void 0, ethQuery, \"Provider not set.\");\n    return await _controllerutils.query.call(void 0, ethQuery, \"getBalance\", [address]);\n  });\n};\nvar AccountTrackerController_default = AccountTrackerController;\n\n\n\n\nexports.AccountTrackerController = AccountTrackerController; exports.AccountTrackerController_default = AccountTrackerController_default;\n//# sourceMappingURL=chunk-HVOIBGYN.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n// src/Standards/NftStandards/ERC721/ERC721Standard.ts\nvar _contracts = require('@ethersproject/contracts');\n\n\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _metamaskethabis = require('@metamask/metamask-eth-abis');\nvar ERC721Standard = class {\n  constructor(provider) {\n    /**\n     * Query if contract implements ERC721Metadata interface.\n     *\n     * @param address - ERC721 asset contract address.\n     * @returns Promise resolving to whether the contract implements ERC721Metadata interface.\n     */\n    this.contractSupportsMetadataInterface = async (address) => {\n      return this.contractSupportsInterface(\n        address,\n        _controllerutils.ERC721_METADATA_INTERFACE_ID\n      );\n    };\n    /**\n     * Query if contract implements ERC721Enumerable interface.\n     *\n     * @param address - ERC721 asset contract address.\n     * @returns Promise resolving to whether the contract implements ERC721Enumerable interface.\n     */\n    this.contractSupportsEnumerableInterface = async (address) => {\n      return this.contractSupportsInterface(\n        address,\n        _controllerutils.ERC721_ENUMERABLE_INTERFACE_ID\n      );\n    };\n    /**\n     * Query if contract implements ERC721 interface.\n     *\n     * @param address - ERC721 asset contract address.\n     * @returns Promise resolving to whether the contract implements ERC721 interface.\n     */\n    this.contractSupportsBase721Interface = async (address) => {\n      return this.contractSupportsInterface(address, _controllerutils.ERC721_INTERFACE_ID);\n    };\n    /**\n     * Enumerate assets assigned to an owner.\n     *\n     * @param address - ERC721 asset contract address.\n     * @param selectedAddress - Current account public address.\n     * @param index - An NFT counter less than `balanceOf(selectedAddress)`.\n     * @returns Promise resolving to token identifier for the 'index'th asset assigned to 'selectedAddress'.\n     */\n    this.getNftTokenId = async (address, selectedAddress, index) => {\n      const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC721, this.provider);\n      return contract.tokenOfOwnerByIndex(selectedAddress, index);\n    };\n    /**\n     * Query for tokenURI for a given asset.\n     *\n     * @param address - ERC721 asset contract address.\n     * @param tokenId - ERC721 asset identifier.\n     * @returns Promise resolving to the 'tokenURI'.\n     */\n    this.getTokenURI = async (address, tokenId) => {\n      const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC721, this.provider);\n      const supportsMetadata = await this.contractSupportsMetadataInterface(\n        address\n      );\n      if (!supportsMetadata) {\n        console.error(\"Contract does not support ERC721 metadata interface.\");\n      }\n      return contract.tokenURI(tokenId);\n    };\n    /**\n     * Query for name for a given asset.\n     *\n     * @param address - ERC721 asset contract address.\n     * @returns Promise resolving to the 'name'.\n     */\n    this.getAssetName = async (address) => {\n      const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC721, this.provider);\n      return contract.name();\n    };\n    /**\n     * Query for symbol for a given asset.\n     *\n     * @param address - ERC721 asset contract address.\n     * @returns Promise resolving to the 'symbol'.\n     */\n    this.getAssetSymbol = async (address) => {\n      const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC721, this.provider);\n      return contract.symbol();\n    };\n    /**\n     * Query if a contract implements an interface.\n     *\n     * @param address - Asset contract address.\n     * @param interfaceId - Interface identifier.\n     * @returns Promise resolving to whether the contract implements `interfaceID`.\n     */\n    this.contractSupportsInterface = async (address, interfaceId) => {\n      const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC721, this.provider);\n      try {\n        return await contract.supportsInterface(interfaceId);\n      } catch (err) {\n        if (err instanceof Error && err.message.includes(\"call revert exception\")) {\n          return false;\n        }\n        throw err;\n      }\n    };\n    /**\n     * Query if a contract implements an interface.\n     *\n     * @param address - Asset contract address.\n     * @param ipfsGateway - The user's preferred IPFS gateway.\n     * @param tokenId - tokenId of a given token in the contract.\n     * @returns Promise resolving an object containing the standard, tokenURI, symbol and name of the given contract/tokenId pair.\n     */\n    this.getDetails = async (address, ipfsGateway, tokenId) => {\n      const isERC721 = await this.contractSupportsBase721Interface(address);\n      if (!isERC721) {\n        throw new Error(\"This isn't a valid ERC721 contract\");\n      }\n      const [symbol, name, tokenURI] = await Promise.all([\n        _controllerutils.safelyExecute.call(void 0, () => this.getAssetSymbol(address)),\n        _controllerutils.safelyExecute.call(void 0, () => this.getAssetName(address)),\n        tokenId ? _controllerutils.safelyExecute.call(void 0, \n          () => this.getTokenURI(address, tokenId).then(\n            (uri) => uri.startsWith(\"ipfs://\") ? _chunkMZI3SDQNjs.getFormattedIpfsUrl.call(void 0, ipfsGateway, uri, true) : uri\n          )\n        ) : void 0\n      ]);\n      let image;\n      if (tokenURI) {\n        try {\n          const response = await _controllerutils.timeoutFetch.call(void 0, tokenURI);\n          const object = await response.json();\n          image = object?.image;\n          if (image?.startsWith(\"ipfs://\")) {\n            image = _chunkMZI3SDQNjs.getFormattedIpfsUrl.call(void 0, ipfsGateway, image, true);\n          }\n        } catch {\n        }\n      }\n      return {\n        standard: _controllerutils.ERC721,\n        tokenURI,\n        symbol,\n        name,\n        image\n      };\n    };\n    this.provider = provider;\n  }\n  /**\n   * Query for owner for a given ERC721 asset.\n   *\n   * @param address - ERC721 asset contract address.\n   * @param tokenId - ERC721 asset identifier.\n   * @returns Promise resolving to the owner address.\n   */\n  async getOwnerOf(address, tokenId) {\n    const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC721, this.provider);\n    return contract.ownerOf(tokenId);\n  }\n};\n\n\n\nexports.ERC721Standard = ERC721Standard;\n//# sourceMappingURL=chunk-ISK2VSBB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n// src/Standards/ERC20Standard.ts\nvar _util = require('@ethereumjs/util');\nvar _contracts = require('@ethersproject/contracts');\nvar _abiutils = require('@metamask/abi-utils');\nvar _controllerutils = require('@metamask/controller-utils');\nvar _metamaskethabis = require('@metamask/metamask-eth-abis');\nvar _utils = require('@metamask/utils');\nvar ERC20Standard = class {\n  constructor(provider) {\n    this.provider = provider;\n  }\n  /**\n   * Get balance or count for current account on specific asset contract.\n   *\n   * @param address - Asset ERC20 contract address.\n   * @param selectedAddress - Current account public address.\n   * @returns Promise resolving to BN object containing balance for current account on specific asset contract.\n   */\n  async getBalanceOf(address, selectedAddress) {\n    const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC20, this.provider);\n    const balance = await contract.balanceOf(selectedAddress);\n    return _chunkMZI3SDQNjs.ethersBigNumberToBN.call(void 0, balance);\n  }\n  /**\n   * Query for the decimals for a given ERC20 asset.\n   *\n   * @param address - ERC20 asset contract string.\n   * @returns Promise resolving to the 'decimals'.\n   */\n  async getTokenDecimals(address) {\n    const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC20, this.provider);\n    try {\n      const decimals = await contract.decimals();\n      return decimals.toString();\n    } catch (err) {\n      if (err instanceof Error && err.message.includes(\"call revert exception\")) {\n        throw new Error(\"Failed to parse token decimals\");\n      }\n      throw err;\n    }\n  }\n  /**\n   * Query for the name for a given ERC20 asset.\n   *\n   * @param address - ERC20 asset contract string.\n   * @returns Promise resolving to the 'name'.\n   */\n  async getTokenName(address) {\n    const contract = new (0, _contracts.Contract)(address, _metamaskethabis.abiERC20, this.provider);\n    try {\n      const name = await contract.name();\n      return name.toString();\n    } catch (err) {\n      if (err instanceof Error && err.message.includes(\"call revert exception\")) {\n        throw new Error(\"Failed to parse token name\");\n      }\n      throw err;\n    }\n  }\n  /**\n   * Query for symbol for a given ERC20 asset.\n   *\n   * @param address - ERC20 asset contract address.\n   * @returns Promise resolving to the 'symbol'.\n   */\n  async getTokenSymbol(address) {\n    const payload = { to: address, data: \"0x95d89b41\" };\n    const result = await this.provider.call(payload);\n    _utils.assertIsStrictHexString.call(void 0, result);\n    try {\n      const decoded = _abiutils.decodeSingle.call(void 0, \"string\", result);\n      if (decoded?.length > 0) {\n        return decoded;\n      }\n    } catch {\n    }\n    try {\n      const utf8 = _util.toUtf8.call(void 0, result);\n      if (utf8.length > 0) {\n        return utf8;\n      }\n    } catch {\n    }\n    throw new Error(\"Failed to parse token symbol\");\n  }\n  /**\n   * Query if a contract implements an interface.\n   *\n   * @param address - Asset contract address.\n   * @param userAddress - The public address for the currently active user's account.\n   * @returns Promise resolving an object containing the standard, decimals, symbol and balance of the given contract/userAddress pair.\n   */\n  async getDetails(address, userAddress) {\n    const [decimals, symbol, balance] = await Promise.all([\n      this.getTokenDecimals(address),\n      this.getTokenSymbol(address),\n      userAddress ? this.getBalanceOf(address, userAddress) : void 0\n    ]);\n    return {\n      decimals,\n      symbol,\n      balance,\n      standard: _controllerutils.ERC20\n    };\n  }\n};\n\n\n\nexports.ERC20Standard = ERC20Standard;\n//# sourceMappingURL=chunk-JCR4H6YL.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n// src/token-service.ts\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar TOKEN_END_POINT_API = \"https://token.api.cx.metamask.io\";\nvar TOKEN_METADATA_NO_SUPPORT_ERROR = \"TokenService Error: Network does not support fetchTokenMetadata\";\nfunction getTokensURL(chainId) {\n  const occurrenceFloor = chainId === _controllerutils.ChainId[\"linea-mainnet\"] ? 1 : 3;\n  return `${TOKEN_END_POINT_API}/tokens/${_controllerutils.convertHexToDecimal.call(void 0, \n    chainId\n  )}?occurrenceFloor=${occurrenceFloor}&includeNativeAssets=false&includeDuplicateSymbolAssets=false&includeTokenFees=false&includeAssetType=false&includeERC20Permit=false&includeStorage=false`;\n}\nfunction getTokenMetadataURL(chainId, tokenAddress) {\n  return `${TOKEN_END_POINT_API}/token/${_controllerutils.convertHexToDecimal.call(void 0, \n    chainId\n  )}?address=${tokenAddress}`;\n}\nvar tenSecondsInMilliseconds = 1e4;\nvar defaultTimeout = tenSecondsInMilliseconds;\nasync function fetchTokenListByChainId(chainId, abortSignal, { timeout = defaultTimeout } = {}) {\n  const tokenURL = getTokensURL(chainId);\n  const response = await queryApi(tokenURL, abortSignal, timeout);\n  if (response) {\n    const result = await parseJsonResponse(response);\n    if (Array.isArray(result) && chainId === _controllerutils.ChainId[\"linea-mainnet\"]) {\n      return result.filter(\n        (elm) => elm.aggregators.includes(\"lineaTeam\") || elm.aggregators.length >= 3\n      );\n    }\n    return result;\n  }\n  return void 0;\n}\nasync function fetchTokenMetadata(chainId, tokenAddress, abortSignal, { timeout = defaultTimeout } = {}) {\n  if (!_chunkMZI3SDQNjs.isTokenListSupportedForNetwork.call(void 0, chainId)) {\n    throw new Error(TOKEN_METADATA_NO_SUPPORT_ERROR);\n  }\n  const tokenMetadataURL = getTokenMetadataURL(chainId, tokenAddress);\n  const response = await queryApi(tokenMetadataURL, abortSignal, timeout);\n  if (response) {\n    return parseJsonResponse(response);\n  }\n  return void 0;\n}\nasync function queryApi(apiURL, abortSignal, timeout) {\n  const fetchOptions = {\n    referrer: apiURL,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n    signal: abortSignal,\n    cache: \"default\"\n  };\n  fetchOptions.headers = new window.Headers();\n  fetchOptions.headers.set(\"Content-Type\", \"application/json\");\n  try {\n    return await _controllerutils.timeoutFetch.call(void 0, apiURL, fetchOptions, timeout);\n  } catch (error) {\n    if (error instanceof Error && error.name === \"AbortError\") {\n      console.log(\"Request is aborted\");\n    }\n  }\n  return void 0;\n}\nasync function parseJsonResponse(apiResponse) {\n  const responseObj = await apiResponse.json();\n  if (responseObj?.error) {\n    throw new Error(`TokenService Error: ${responseObj.error}`);\n  }\n  return responseObj;\n}\n\n\n\n\n\n\nexports.TOKEN_END_POINT_API = TOKEN_END_POINT_API; exports.TOKEN_METADATA_NO_SUPPORT_ERROR = TOKEN_METADATA_NO_SUPPORT_ERROR; exports.fetchTokenListByChainId = fetchTokenListByChainId; exports.fetchTokenMetadata = fetchTokenMetadata;\n//# sourceMappingURL=chunk-K7A3EOIM.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }// src/assetsUtil.ts\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _utils = require('@metamask/utils');\nvar _bnjs = require('bn.js'); var _bnjs2 = _interopRequireDefault(_bnjs);\nvar TOKEN_PRICES_BATCH_SIZE = 30;\nfunction compareNftMetadata(newNftMetadata, nft) {\n  const keys = [\n    \"image\",\n    \"backgroundColor\",\n    \"imagePreview\",\n    \"imageThumbnail\",\n    \"imageOriginal\",\n    \"animation\",\n    \"animationOriginal\",\n    \"externalLink\",\n    \"tokenURI\"\n  ];\n  const differentValues = keys.reduce((value, key) => {\n    if (newNftMetadata[key] && newNftMetadata[key] !== nft[key]) {\n      return value + 1;\n    }\n    return value;\n  }, 0);\n  return differentValues > 0;\n}\nfunction hasNewCollectionFields(newNftMetadata, nft) {\n  const keysNewNftMetadata = Object.keys(newNftMetadata.collection ?? {});\n  const keysExistingNft = new Set(Object.keys(nft.collection ?? {}));\n  return keysNewNftMetadata.some((key) => !keysExistingNft.has(key));\n}\nvar aggregatorNameByKey = {\n  aave: \"Aave\",\n  bancor: \"Bancor\",\n  cmc: \"CMC\",\n  cryptocom: \"Crypto.com\",\n  coinGecko: \"CoinGecko\",\n  oneInch: \"1inch\",\n  paraswap: \"Paraswap\",\n  pmm: \"PMM\",\n  zapper: \"Zapper\",\n  zerion: \"Zerion\",\n  zeroEx: \"0x\",\n  synthetix: \"Synthetix\",\n  yearn: \"Yearn\",\n  apeswap: \"ApeSwap\",\n  binanceDex: \"BinanceDex\",\n  pancakeTop100: \"PancakeTop100\",\n  pancakeExtended: \"PancakeExtended\",\n  balancer: \"Balancer\",\n  quickswap: \"QuickSwap\",\n  matcha: \"Matcha\",\n  pangolinDex: \"PangolinDex\",\n  pangolinDexStableCoin: \"PangolinDexStableCoin\",\n  pangolinDexAvaxBridge: \"PangolinDexAvaxBridge\",\n  traderJoe: \"TraderJoe\",\n  airswapLight: \"AirswapLight\",\n  kleros: \"Kleros\"\n};\nvar formatAggregatorNames = (aggregators) => {\n  return aggregators.map(\n    (key) => aggregatorNameByKey[key] || `${key[0].toUpperCase()}${key.substring(1, key.length)}`\n  );\n};\nvar formatIconUrlWithProxy = ({\n  chainId,\n  tokenAddress\n}) => {\n  const chainIdDecimal = _controllerutils.convertHexToDecimal.call(void 0, chainId).toString();\n  return `https://static.cx.metamask.io/api/v1/tokenIcons/${chainIdDecimal}/${tokenAddress.toLowerCase()}.png`;\n};\nvar SupportedTokenDetectionNetworks = /* @__PURE__ */ ((SupportedTokenDetectionNetworks2) => {\n  SupportedTokenDetectionNetworks2[\"mainnet\"] = \"0x1\";\n  SupportedTokenDetectionNetworks2[\"bsc\"] = \"0x38\";\n  SupportedTokenDetectionNetworks2[\"polygon\"] = \"0x89\";\n  SupportedTokenDetectionNetworks2[\"avax\"] = \"0xa86a\";\n  SupportedTokenDetectionNetworks2[\"aurora\"] = \"0x4e454152\";\n  SupportedTokenDetectionNetworks2[\"linea_goerli\"] = \"0xe704\";\n  SupportedTokenDetectionNetworks2[\"linea_mainnet\"] = \"0xe708\";\n  SupportedTokenDetectionNetworks2[\"arbitrum\"] = \"0xa4b1\";\n  SupportedTokenDetectionNetworks2[\"optimism\"] = \"0xa\";\n  SupportedTokenDetectionNetworks2[\"base\"] = \"0x2105\";\n  SupportedTokenDetectionNetworks2[\"zksync\"] = \"0x144\";\n  SupportedTokenDetectionNetworks2[\"cronos\"] = \"0x19\";\n  SupportedTokenDetectionNetworks2[\"celo\"] = \"0xa4ec\";\n  SupportedTokenDetectionNetworks2[\"gnosis\"] = \"0x64\";\n  SupportedTokenDetectionNetworks2[\"fantom\"] = \"0xfa\";\n  SupportedTokenDetectionNetworks2[\"polygon_zkevm\"] = \"0x44d\";\n  SupportedTokenDetectionNetworks2[\"moonbeam\"] = \"0x504\";\n  SupportedTokenDetectionNetworks2[\"moonriver\"] = \"0x505\";\n  return SupportedTokenDetectionNetworks2;\n})(SupportedTokenDetectionNetworks || {});\nfunction isTokenDetectionSupportedForNetwork(chainId) {\n  return Object.values(SupportedTokenDetectionNetworks).includes(chainId);\n}\nfunction isTokenListSupportedForNetwork(chainId) {\n  return isTokenDetectionSupportedForNetwork(chainId);\n}\nfunction removeIpfsProtocolPrefix(ipfsUrl) {\n  if (ipfsUrl.startsWith(\"ipfs://ipfs/\")) {\n    return ipfsUrl.replace(\"ipfs://ipfs/\", \"\");\n  } else if (ipfsUrl.startsWith(\"ipfs://\")) {\n    return ipfsUrl.replace(\"ipfs://\", \"\");\n  }\n  throw new Error(\"this method should not be used with non ipfs urls\");\n}\nasync function getIpfsCIDv1AndPath(ipfsUrl) {\n  const url = removeIpfsProtocolPrefix(ipfsUrl);\n  const index = url.indexOf(\"/\");\n  const cid = index !== -1 ? url.substring(0, index) : url;\n  const path = index !== -1 ? url.substring(index) : void 0;\n  const { CID } = await Promise.resolve().then(() => _interopRequireWildcard(require(\"multiformats\")));\n  return {\n    cid: CID.parse(cid).toV1().toString(),\n    path\n  };\n}\nasync function getFormattedIpfsUrl(ipfsGateway, ipfsUrl, subdomainSupported) {\n  const { host, protocol, origin } = new URL(addUrlProtocolPrefix(ipfsGateway));\n  if (subdomainSupported) {\n    const { cid, path } = await getIpfsCIDv1AndPath(ipfsUrl);\n    return `${protocol}//${cid}.ipfs.${host}${path ?? \"\"}`;\n  }\n  const cidAndPath = removeIpfsProtocolPrefix(ipfsUrl);\n  return `${origin}/ipfs/${cidAndPath}`;\n}\nfunction addUrlProtocolPrefix(urlString) {\n  if (!urlString.match(/(^http:\\/\\/)|(^https:\\/\\/)/u)) {\n    return `https://${urlString}`;\n  }\n  return urlString;\n}\nfunction ethersBigNumberToBN(bigNumber) {\n  return new (0, _bnjs2.default)(_utils.remove0x.call(void 0, bigNumber.toHexString()), \"hex\");\n}\nfunction divideIntoBatches(values, { batchSize }) {\n  const batches = [];\n  for (let i = 0; i < values.length; i += batchSize) {\n    batches.push(values.slice(i, i + batchSize));\n  }\n  return batches;\n}\nasync function reduceInBatchesSerially({\n  values,\n  batchSize,\n  eachBatch,\n  initialResult\n}) {\n  const batches = divideIntoBatches(values, { batchSize });\n  let workingResult = initialResult;\n  for (const [index, batch] of batches.entries()) {\n    workingResult = await eachBatch(workingResult, batch, index);\n  }\n  const finalResult = workingResult;\n  return finalResult;\n}\nasync function fetchTokenContractExchangeRates({\n  tokenPricesService,\n  nativeCurrency,\n  tokenAddresses,\n  chainId\n}) {\n  const isChainIdSupported = tokenPricesService.validateChainIdSupported(chainId);\n  const isCurrencySupported = tokenPricesService.validateCurrencySupported(nativeCurrency);\n  if (!isChainIdSupported || !isCurrencySupported) {\n    return {};\n  }\n  const tokenPricesByTokenAddress = await reduceInBatchesSerially({\n    values: [...tokenAddresses].sort(),\n    batchSize: TOKEN_PRICES_BATCH_SIZE,\n    eachBatch: async (allTokenPricesByTokenAddress, batch) => {\n      const tokenPricesByTokenAddressForBatch = await tokenPricesService.fetchTokenPrices({\n        tokenAddresses: batch,\n        chainId,\n        currency: nativeCurrency\n      });\n      return {\n        ...allTokenPricesByTokenAddress,\n        ...tokenPricesByTokenAddressForBatch\n      };\n    },\n    initialResult: {}\n  });\n  return Object.entries(tokenPricesByTokenAddress).reduce(\n    (obj, [tokenAddress, tokenPrice]) => {\n      return {\n        ...obj,\n        [_controllerutils.toChecksumHexAddress.call(void 0, tokenAddress)]: tokenPrice?.price\n      };\n    },\n    {}\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.TOKEN_PRICES_BATCH_SIZE = TOKEN_PRICES_BATCH_SIZE; exports.compareNftMetadata = compareNftMetadata; exports.hasNewCollectionFields = hasNewCollectionFields; exports.formatAggregatorNames = formatAggregatorNames; exports.formatIconUrlWithProxy = formatIconUrlWithProxy; exports.SupportedTokenDetectionNetworks = SupportedTokenDetectionNetworks; exports.isTokenDetectionSupportedForNetwork = isTokenDetectionSupportedForNetwork; exports.isTokenListSupportedForNetwork = isTokenListSupportedForNetwork; exports.removeIpfsProtocolPrefix = removeIpfsProtocolPrefix; exports.getIpfsCIDv1AndPath = getIpfsCIDv1AndPath; exports.getFormattedIpfsUrl = getFormattedIpfsUrl; exports.addUrlProtocolPrefix = addUrlProtocolPrefix; exports.ethersBigNumberToBN = ethersBigNumberToBN; exports.divideIntoBatches = divideIntoBatches; exports.reduceInBatchesSerially = reduceInBatchesSerially; exports.fetchTokenContractExchangeRates = fetchTokenContractExchangeRates;\n//# sourceMappingURL=chunk-MZI3SDQN.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/constants.ts\nvar Source = /* @__PURE__ */ ((Source2) => {\n  Source2[\"Custom\"] = \"custom\";\n  Source2[\"Dapp\"] = \"dapp\";\n  Source2[\"Detected\"] = \"detected\";\n  return Source2;\n})(Source || {});\n\n\n\nexports.Source = Source;\n//# sourceMappingURL=chunk-RGHTNZQ6.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkZG5MS2TOjs = require('./chunk-ZG5MS2TO.js');\n\n// src/CurrencyRateController.ts\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _pollingcontroller = require('@metamask/polling-controller');\nvar _asyncmutex = require('async-mutex');\nvar name = \"CurrencyRateController\";\nvar metadata = {\n  currentCurrency: { persist: true, anonymous: true },\n  currencyRates: { persist: true, anonymous: true }\n};\nvar defaultState = {\n  currentCurrency: \"usd\",\n  currencyRates: {\n    ETH: {\n      conversionDate: 0,\n      conversionRate: 0,\n      usdConversionRate: null\n    }\n  }\n};\nvar CurrencyRateController = class extends _pollingcontroller.StaticIntervalPollingController {\n  /**\n   * Creates a CurrencyRateController instance.\n   *\n   * @param options - Constructor options.\n   * @param options.includeUsdRate - Keep track of the USD rate in addition to the current currency rate.\n   * @param options.interval - The polling interval, in milliseconds.\n   * @param options.messenger - A reference to the messaging system.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.fetchExchangeRate - Fetches the exchange rate from an external API. This option is primarily meant for use in unit tests.\n   */\n  constructor({\n    includeUsdRate = false,\n    interval = 18e4,\n    messenger,\n    state,\n    fetchExchangeRate: fetchExchangeRate2 = _chunkZG5MS2TOjs.fetchExchangeRate\n  }) {\n    super({\n      name,\n      metadata,\n      messenger,\n      state: { ...defaultState, ...state }\n    });\n    this.mutex = new (0, _asyncmutex.Mutex)();\n    this.includeUsdRate = includeUsdRate;\n    this.setIntervalLength(interval);\n    this.fetchExchangeRate = fetchExchangeRate2;\n  }\n  /**\n   * Sets a currency to track.\n   *\n   * @param currentCurrency - ISO 4217 currency code.\n   */\n  async setCurrentCurrency(currentCurrency) {\n    const releaseLock = await this.mutex.acquire();\n    const nativeCurrencies = Object.keys(this.state.currencyRates);\n    try {\n      this.update(() => {\n        return {\n          ...defaultState,\n          currentCurrency\n        };\n      });\n    } finally {\n      releaseLock();\n    }\n    nativeCurrencies.forEach(this.updateExchangeRate.bind(this));\n  }\n  /**\n   * Updates the exchange rate for the current currency and native currency pair.\n   *\n   * @param nativeCurrency - The ticker symbol for the chain.\n   */\n  async updateExchangeRate(nativeCurrency) {\n    const releaseLock = await this.mutex.acquire();\n    const { currentCurrency, currencyRates } = this.state;\n    let conversionDate = null;\n    let conversionRate = null;\n    let usdConversionRate = null;\n    const nativeCurrencyForExchangeRate = Object.values(\n      _controllerutils.TESTNET_TICKER_SYMBOLS\n    ).includes(nativeCurrency) ? _controllerutils.FALL_BACK_VS_CURRENCY : nativeCurrency;\n    try {\n      if (currentCurrency && nativeCurrency && // if either currency is an empty string we can skip the comparison\n      // because it will result in an error from the api and ultimately\n      // a null conversionRate either way.\n      currentCurrency !== \"\" && nativeCurrency !== \"\") {\n        const fetchExchangeRateResponse = await this.fetchExchangeRate(\n          currentCurrency,\n          nativeCurrencyForExchangeRate,\n          this.includeUsdRate\n        );\n        conversionRate = fetchExchangeRateResponse.conversionRate;\n        usdConversionRate = fetchExchangeRateResponse.usdConversionRate;\n        conversionDate = Date.now() / 1e3;\n      }\n    } catch (error) {\n      if (!(error instanceof Error && error.message.includes(\"market does not exist for this coin pair\"))) {\n        throw error;\n      }\n    } finally {\n      try {\n        this.update(() => {\n          return {\n            currencyRates: {\n              ...currencyRates,\n              [nativeCurrency]: {\n                conversionDate,\n                conversionRate,\n                usdConversionRate\n              }\n            },\n            currentCurrency\n          };\n        });\n      } finally {\n        releaseLock();\n      }\n    }\n  }\n  /**\n   * Prepare to discard this controller.\n   *\n   * This stops any active polling.\n   */\n  destroy() {\n    super.destroy();\n    this.stopAllPolling();\n  }\n  /**\n   * Updates exchange rate for the current currency.\n   *\n   * @param networkClientId - The network client ID used to get a ticker value.\n   * @returns The controller state.\n   */\n  async _executePoll(networkClientId) {\n    const networkClient = this.messagingSystem.call(\n      \"NetworkController:getNetworkClientById\",\n      networkClientId\n    );\n    await this.updateExchangeRate(networkClient.configuration.ticker);\n  }\n};\nvar CurrencyRateController_default = CurrencyRateController;\n\n\n\n\nexports.CurrencyRateController = CurrencyRateController; exports.CurrencyRateController_default = CurrencyRateController_default;\n//# sourceMappingURL=chunk-T5ZX5BV7.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/token-prices-service/codefi-v2.ts\nvar _controllerutils = require('@metamask/controller-utils');\nvar _utils = require('@metamask/utils');\n\n\n\n\n\n\n\n\nvar _cockatiel = require('cockatiel');\nvar SUPPORTED_CURRENCIES = [\n  // Bitcoin\n  \"btc\",\n  // Ether\n  \"eth\",\n  // Litecoin\n  \"ltc\",\n  // Bitcoin Cash\n  \"bch\",\n  // Binance Coin\n  \"bnb\",\n  // EOS\n  \"eos\",\n  // XRP\n  \"xrp\",\n  // Lumens\n  \"xlm\",\n  // Chainlink\n  \"link\",\n  // Polkadot\n  \"dot\",\n  // Yearn.finance\n  \"yfi\",\n  // US Dollar\n  \"usd\",\n  // United Arab Emirates Dirham\n  \"aed\",\n  // Argentine Peso\n  \"ars\",\n  // Australian Dollar\n  \"aud\",\n  // Bangladeshi Taka\n  \"bdt\",\n  // Bahraini Dinar\n  \"bhd\",\n  // Bermudian Dollar\n  \"bmd\",\n  // Brazil Real\n  \"brl\",\n  // Canadian Dollar\n  \"cad\",\n  // Swiss Franc\n  \"chf\",\n  // Chilean Peso\n  \"clp\",\n  // Chinese Yuan\n  \"cny\",\n  // Czech Koruna\n  \"czk\",\n  // Danish Krone\n  \"dkk\",\n  // Euro\n  \"eur\",\n  // British Pound Sterling\n  \"gbp\",\n  // Hong Kong Dollar\n  \"hkd\",\n  // Hungarian Forint\n  \"huf\",\n  // Indonesian Rupiah\n  \"idr\",\n  // Israeli New Shekel\n  \"ils\",\n  // Indian Rupee\n  \"inr\",\n  // Japanese Yen\n  \"jpy\",\n  // South Korean Won\n  \"krw\",\n  // Kuwaiti Dinar\n  \"kwd\",\n  // Sri Lankan Rupee\n  \"lkr\",\n  // Burmese Kyat\n  \"mmk\",\n  // Mexican Peso\n  \"mxn\",\n  // Malaysian Ringgit\n  \"myr\",\n  // Nigerian Naira\n  \"ngn\",\n  // Norwegian Krone\n  \"nok\",\n  // New Zealand Dollar\n  \"nzd\",\n  // Philippine Peso\n  \"php\",\n  // Pakistani Rupee\n  \"pkr\",\n  // Polish Zloty\n  \"pln\",\n  // Russian Ruble\n  \"rub\",\n  // Saudi Riyal\n  \"sar\",\n  // Swedish Krona\n  \"sek\",\n  // Singapore Dollar\n  \"sgd\",\n  // Thai Baht\n  \"thb\",\n  // Turkish Lira\n  \"try\",\n  // New Taiwan Dollar\n  \"twd\",\n  // Ukrainian hryvnia\n  \"uah\",\n  // Venezuelan bolívar fuerte\n  \"vef\",\n  // Vietnamese đồng\n  \"vnd\",\n  // South African Rand\n  \"zar\",\n  // IMF Special Drawing Rights\n  \"xdr\",\n  // Silver - Troy Ounce\n  \"xag\",\n  // Gold - Troy Ounce\n  \"xau\",\n  // Bits\n  \"bits\",\n  // Satoshi\n  \"sats\"\n];\nvar ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nvar SUPPORTED_CHAIN_IDS = [\n  // Ethereum Mainnet\n  \"0x1\",\n  // OP Mainnet\n  \"0xa\",\n  // Cronos Mainnet\n  \"0x19\",\n  // BNB Smart Chain Mainnet\n  \"0x38\",\n  // Syscoin Mainnet\n  \"0x39\",\n  // OKXChain Mainnet\n  \"0x42\",\n  // Hoo Smart Chain\n  \"0x46\",\n  // Meter Mainnet\n  \"0x52\",\n  // TomoChain\n  \"0x58\",\n  // Gnosis\n  \"0x64\",\n  // Velas EVM Mainnet\n  \"0x6a\",\n  // Fuse Mainnet\n  \"0x7a\",\n  // Huobi ECO Chain Mainnet\n  \"0x80\",\n  // Polygon Mainnet\n  \"0x89\",\n  // Fantom Opera\n  \"0xfa\",\n  // Boba Network\n  \"0x120\",\n  // KCC Mainnet\n  \"0x141\",\n  // zkSync Era Mainnet\n  \"0x144\",\n  // Theta Mainnet\n  \"0x169\",\n  // Metis Andromeda Mainnet\n  \"0x440\",\n  // Moonbeam\n  \"0x504\",\n  // Moonriver\n  \"0x505\",\n  // Mantle\n  \"0x1388\",\n  // Base\n  \"0x2105\",\n  // Shiden\n  \"0x150\",\n  // Smart Bitcoin Cash\n  \"0x2710\",\n  // Arbitrum One\n  \"0xa4b1\",\n  // Celo Mainnet\n  \"0xa4ec\",\n  // Oasis Emerald\n  \"0xa516\",\n  // Avalanche C-Chain\n  \"0xa86a\",\n  // Polis Mainnet\n  \"0x518af\",\n  // Aurora Mainnet\n  \"0x4e454152\",\n  // Harmony Mainnet Shard 0\n  \"0x63564c40\",\n  // Linea Mainnet\n  \"0xe708\"\n];\nvar BASE_URL = \"https://price.api.cx.metamask.io/v2\";\nvar DEFAULT_TOKEN_PRICE_RETRIES = 3;\nvar DEFAULT_TOKEN_PRICE_MAX_CONSECUTIVE_FAILURES = (1 + DEFAULT_TOKEN_PRICE_RETRIES) * 3;\nvar DEFAULT_DEGRADED_THRESHOLD = 5e3;\nvar _tokenPricePolicy;\nvar CodefiTokenPricesServiceV2 = class {\n  /**\n   * Construct a Codefi Token Price Service.\n   *\n   * @param options - Constructor options\n   * @param options.degradedThreshold - The threshold between \"normal\" and \"degrated\" service,\n   * in milliseconds.\n   * @param options.retries - Number of retry attempts for each token price update.\n   * @param options.maximumConsecutiveFailures - The maximum number of consecutive failures\n   * allowed before breaking the circuit and pausing further updates.\n   * @param options.onBreak - An event handler for when the circuit breaks, useful for capturing\n   * metrics about network failures.\n   * @param options.onDegraded - An event handler for when the circuit remains closed, but requests\n   * are failing or resolving too slowly (i.e. resolving more slowly than the `degradedThreshold).\n   * @param options.circuitBreakDuration - The amount of time to wait when the circuit breaks\n   * from too many consecutive failures.\n   */\n  constructor({\n    degradedThreshold = DEFAULT_DEGRADED_THRESHOLD,\n    retries = DEFAULT_TOKEN_PRICE_RETRIES,\n    maximumConsecutiveFailures = DEFAULT_TOKEN_PRICE_MAX_CONSECUTIVE_FAILURES,\n    onBreak,\n    onDegraded,\n    circuitBreakDuration = 30 * 60 * 1e3\n  } = {}) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _tokenPricePolicy, void 0);\n    const retryPolicy = _cockatiel.retry.call(void 0, _cockatiel.handleAll, {\n      maxAttempts: retries,\n      backoff: new (0, _cockatiel.ExponentialBackoff)()\n    });\n    const circuitBreakerPolicy = _cockatiel.circuitBreaker.call(void 0, _cockatiel.handleAll, {\n      halfOpenAfter: circuitBreakDuration,\n      breaker: new (0, _cockatiel.ConsecutiveBreaker)(maximumConsecutiveFailures)\n    });\n    if (onBreak) {\n      circuitBreakerPolicy.onBreak(onBreak);\n    }\n    if (onDegraded) {\n      retryPolicy.onGiveUp(() => {\n        if (circuitBreakerPolicy.state === _cockatiel.CircuitState.Closed) {\n          onDegraded();\n        }\n      });\n      retryPolicy.onSuccess(({ duration }) => {\n        if (circuitBreakerPolicy.state === _cockatiel.CircuitState.Closed && duration > degradedThreshold) {\n          onDegraded();\n        }\n      });\n    }\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _tokenPricePolicy, _cockatiel.wrap.call(void 0, retryPolicy, circuitBreakerPolicy));\n  }\n  /**\n   * Retrieves prices in the given currency for the tokens identified by the\n   * given addresses which are expected to live on the given chain.\n   *\n   * @param args - The arguments to function.\n   * @param args.chainId - An EIP-155 chain ID.\n   * @param args.tokenAddresses - Addresses for tokens that live on the chain.\n   * @param args.currency - The desired currency of the token prices.\n   * @returns The prices for the requested tokens.\n   */\n  async fetchTokenPrices({\n    chainId,\n    tokenAddresses,\n    currency\n  }) {\n    const chainIdAsNumber = _utils.hexToNumber.call(void 0, chainId);\n    const url = new URL(`${BASE_URL}/chains/${chainIdAsNumber}/spot-prices`);\n    url.searchParams.append(\n      \"tokenAddresses\",\n      [ZERO_ADDRESS, ...tokenAddresses].join(\",\")\n    );\n    url.searchParams.append(\"vsCurrency\", currency);\n    url.searchParams.append(\"includeMarketData\", \"true\");\n    const addressCryptoDataMap = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokenPricePolicy).execute(\n      () => _controllerutils.handleFetch.call(void 0, url, { headers: { \"Cache-Control\": \"no-cache\" } })\n    );\n    return [ZERO_ADDRESS, ...tokenAddresses].reduce(\n      (obj, tokenAddress) => {\n        const lowercasedTokenAddress = tokenAddress.toLowerCase();\n        const marketData = addressCryptoDataMap[lowercasedTokenAddress];\n        if (!marketData) {\n          return obj;\n        }\n        const token = {\n          tokenAddress,\n          currency,\n          ...marketData\n        };\n        return {\n          ...obj,\n          [tokenAddress]: token\n        };\n      },\n      {}\n    );\n  }\n  /**\n   * Type guard for whether the API can return token prices for the given chain\n   * ID.\n   *\n   * @param chainId - The chain ID to check.\n   * @returns True if the API supports the chain ID, false otherwise.\n   */\n  validateChainIdSupported(chainId) {\n    const supportedChainIds = SUPPORTED_CHAIN_IDS;\n    return typeof chainId === \"string\" && supportedChainIds.includes(chainId);\n  }\n  /**\n   * Type guard for whether the API can return token prices in the given\n   * currency.\n   *\n   * @param currency - The currency to check. If a string, can be either\n   * lowercase or uppercase.\n   * @returns True if the API supports the currency, false otherwise.\n   */\n  validateCurrencySupported(currency) {\n    const supportedCurrencies = SUPPORTED_CURRENCIES;\n    return typeof currency === \"string\" && supportedCurrencies.includes(currency.toLowerCase());\n  }\n};\n_tokenPricePolicy = new WeakMap();\n\n\n\n\n\n\nexports.SUPPORTED_CURRENCIES = SUPPORTED_CURRENCIES; exports.ZERO_ADDRESS = ZERO_ADDRESS; exports.SUPPORTED_CHAIN_IDS = SUPPORTED_CHAIN_IDS; exports.CodefiTokenPricesServiceV2 = CodefiTokenPricesServiceV2;\n//# sourceMappingURL=chunk-V6DNVROD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkV6DNVRODjs = require('./chunk-V6DNVROD.js');\n\n\nvar _chunkZG5MS2TOjs = require('./chunk-ZG5MS2TO.js');\n\n\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/TokenRatesController.ts\n\n\n\n\n\nvar _controllerutils = require('@metamask/controller-utils');\nvar _pollingcontroller = require('@metamask/polling-controller');\nvar _utils = require('@metamask/utils');\nvar _lodash = require('lodash');\nvar DEFAULT_INTERVAL = 18e4;\nvar controllerName = \"TokenRatesController\";\nasync function getCurrencyConversionRate({\n  from,\n  to\n}) {\n  const includeUSDRate = false;\n  try {\n    const result = await _chunkZG5MS2TOjs.fetchExchangeRate.call(void 0, \n      to,\n      from,\n      includeUSDRate\n    );\n    return result.conversionRate;\n  } catch (error) {\n    if (error instanceof Error && error.message.includes(\"market does not exist for this coin pair\")) {\n      return null;\n    }\n    throw error;\n  }\n}\nvar tokenRatesControllerMetadata = {\n  marketData: { persist: true, anonymous: false }\n};\nvar getDefaultTokenRatesControllerState = () => {\n  return {\n    marketData: {}\n  };\n};\nvar _handle, _pollState, _tokenPricesService, _inProcessExchangeRateUpdates, _selectedAccountId, _disabled, _chainId, _ticker, _interval, _allTokens, _allDetectedTokens, _subscribeToTokensStateChange, subscribeToTokensStateChange_fn, _subscribeToNetworkStateChange, subscribeToNetworkStateChange_fn, _subscribeToAccountChange, subscribeToAccountChange_fn, _getTokenAddresses, getTokenAddresses_fn, _getSelectedAccount, getSelectedAccount_fn, _getChainIdAndTicker, getChainIdAndTicker_fn, _getTokensControllerState, getTokensControllerState_fn, _stopPoll, stopPoll_fn, _poll, poll_fn, _fetchAndMapExchangeRates, fetchAndMapExchangeRates_fn, _fetchAndMapExchangeRatesForSupportedNativeCurrency, fetchAndMapExchangeRatesForSupportedNativeCurrency_fn, _fetchAndMapExchangeRatesForUnsupportedNativeCurrency, fetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn;\nvar TokenRatesController = class extends _pollingcontroller.StaticIntervalPollingController {\n  /**\n   * Creates a TokenRatesController instance.\n   *\n   * @param options - The controller options.\n   * @param options.interval - The polling interval in ms\n   * @param options.disabled - Boolean to track if network requests are blocked\n   * @param options.tokenPricesService - An object in charge of retrieving token price\n   * @param options.messenger - The controller messenger instance for communication\n   * @param options.state - Initial state to set on this controller\n   */\n  constructor({\n    interval = DEFAULT_INTERVAL,\n    disabled = false,\n    tokenPricesService,\n    messenger,\n    state\n  }) {\n    super({\n      name: controllerName,\n      messenger,\n      state: { ...getDefaultTokenRatesControllerState(), ...state },\n      metadata: tokenRatesControllerMetadata\n    });\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _subscribeToTokensStateChange);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _subscribeToNetworkStateChange);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _subscribeToAccountChange);\n    /**\n     * Get the user's tokens for the given chain.\n     *\n     * @param chainId - The chain ID.\n     * @returns The list of tokens addresses for the current chain\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getTokenAddresses);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getSelectedAccount);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getChainIdAndTicker);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _getTokensControllerState);\n    /**\n     * Clear the active polling timer, if present.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _stopPoll);\n    /**\n     * Poll for exchange rate updates.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _poll);\n    /**\n     * Uses the token prices service to retrieve exchange rates for tokens in a\n     * particular currency.\n     *\n     * If the price API does not support the given chain ID, returns an empty\n     * object.\n     *\n     * If the price API does not support the given currency, retrieves exchange\n     * rates in a known currency instead, then converts those rates using the\n     * exchange rate between the known currency and desired currency.\n     *\n     * @param args - The arguments to this function.\n     * @param args.tokenAddresses - Addresses for tokens.\n     * @param args.chainId - The EIP-155 ID of the chain where the tokens live.\n     * @param args.nativeCurrency - The native currency in which to request\n     * exchange rates.\n     * @returns A map from token address to its exchange rate in the native\n     * currency, or an empty map if no exchange rates can be obtained for the\n     * chain ID.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _fetchAndMapExchangeRates);\n    /**\n     * Retrieves prices in the given currency for the given tokens on the given\n     * chain. Ensures that token addresses are checksum addresses.\n     *\n     * @param args - The arguments to this function.\n     * @param args.tokenAddresses - Addresses for tokens.\n     * @param args.chainId - The EIP-155 ID of the chain where the tokens live.\n     * @param args.nativeCurrency - The native currency in which to request\n     * prices.\n     * @returns A map of the token addresses (as checksums) to their prices in the\n     * native currency.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _fetchAndMapExchangeRatesForSupportedNativeCurrency);\n    /**\n     * If the price API does not support a given native currency, then we need to\n     * convert it to a fallback currency and feed that currency into the price\n     * API, then convert the prices to our desired native currency.\n     *\n     * @param args - The arguments to this function.\n     * @param args.tokenAddresses - Addresses for tokens.\n     * @param args.nativeCurrency - The native currency in which to request\n     * prices.\n     * @returns A map of the token addresses (as checksums) to their prices in the\n     * native currency.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _fetchAndMapExchangeRatesForUnsupportedNativeCurrency);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _handle, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _pollState, \"Inactive\" /* Inactive */);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _tokenPricesService, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _inProcessExchangeRateUpdates, {});\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _selectedAccountId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _disabled, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _chainId, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _ticker, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _interval, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allTokens, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allDetectedTokens, void 0);\n    this.setIntervalLength(interval);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _tokenPricesService, tokenPricesService);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, disabled);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _interval, interval);\n    const { chainId: currentChainId, ticker: currentTicker } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getChainIdAndTicker, getChainIdAndTicker_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, currentChainId);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _ticker, currentTicker);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getSelectedAccount, getSelectedAccount_fn).call(this).id);\n    const { allTokens, allDetectedTokens } = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getTokensControllerState, getTokensControllerState_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allTokens, allTokens);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allDetectedTokens, allDetectedTokens);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _subscribeToTokensStateChange, subscribeToTokensStateChange_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _subscribeToNetworkStateChange, subscribeToNetworkStateChange_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _subscribeToAccountChange, subscribeToAccountChange_fn).call(this);\n  }\n  /**\n   * Allows controller to make active and passive polling requests\n   */\n  enable() {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, false);\n  }\n  /**\n   * Blocks controller from making network calls\n   */\n  disable() {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, true);\n  }\n  /**\n   * Start (or restart) polling.\n   */\n  async start() {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _stopPoll, stopPoll_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _pollState, \"Active\" /* Active */);\n    await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _poll, poll_fn).call(this);\n  }\n  /**\n   * Stop polling.\n   */\n  stop() {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _stopPoll, stopPoll_fn).call(this);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _pollState, \"Inactive\" /* Inactive */);\n  }\n  /**\n   * Updates exchange rates for all tokens.\n   */\n  async updateExchangeRates() {\n    await this.updateExchangeRatesByChainId({\n      chainId: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId),\n      nativeCurrency: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ticker)\n    });\n  }\n  /**\n   * Updates exchange rates for all tokens.\n   *\n   * @param options - The options to fetch exchange rates.\n   * @param options.chainId - The chain ID.\n   * @param options.nativeCurrency - The ticker for the chain.\n   */\n  async updateExchangeRatesByChainId({\n    chainId,\n    nativeCurrency\n  }) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _disabled)) {\n      return;\n    }\n    const tokenAddresses = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getTokenAddresses, getTokenAddresses_fn).call(this, chainId);\n    const updateKey = `${chainId}:${nativeCurrency}`;\n    if (updateKey in _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessExchangeRateUpdates)) {\n      await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessExchangeRateUpdates)[updateKey];\n      return;\n    }\n    const {\n      promise: inProgressUpdate,\n      resolve: updateSucceeded,\n      reject: updateFailed\n    } = _utils.createDeferredPromise.call(void 0, { suppressUnhandledRejection: true });\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessExchangeRateUpdates)[updateKey] = inProgressUpdate;\n    try {\n      const contractInformations = await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _fetchAndMapExchangeRates, fetchAndMapExchangeRates_fn).call(this, {\n        tokenAddresses,\n        chainId,\n        nativeCurrency\n      });\n      const marketData = {\n        [chainId]: {\n          ...contractInformations ?? {}\n        }\n      };\n      this.update((state) => {\n        state.marketData = marketData;\n      });\n      updateSucceeded();\n    } catch (error) {\n      updateFailed(error);\n      throw error;\n    } finally {\n      delete _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _inProcessExchangeRateUpdates)[updateKey];\n    }\n  }\n  /**\n   * Updates token rates for the given networkClientId\n   *\n   * @param networkClientId - The network client ID used to get a ticker value.\n   * @returns The controller state.\n   */\n  async _executePoll(networkClientId) {\n    const networkClient = this.messagingSystem.call(\n      \"NetworkController:getNetworkClientById\",\n      networkClientId\n    );\n    await this.updateExchangeRatesByChainId({\n      chainId: networkClient.configuration.chainId,\n      nativeCurrency: networkClient.configuration.ticker\n    });\n  }\n};\n_handle = new WeakMap();\n_pollState = new WeakMap();\n_tokenPricesService = new WeakMap();\n_inProcessExchangeRateUpdates = new WeakMap();\n_selectedAccountId = new WeakMap();\n_disabled = new WeakMap();\n_chainId = new WeakMap();\n_ticker = new WeakMap();\n_interval = new WeakMap();\n_allTokens = new WeakMap();\n_allDetectedTokens = new WeakMap();\n_subscribeToTokensStateChange = new WeakSet();\nsubscribeToTokensStateChange_fn = function() {\n  this.messagingSystem.subscribe(\n    \"TokensController:stateChange\",\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async ({ allTokens, allDetectedTokens }) => {\n      const previousTokenAddresses = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getTokenAddresses, getTokenAddresses_fn).call(this, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId));\n      _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allTokens, allTokens);\n      _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allDetectedTokens, allDetectedTokens);\n      const newTokenAddresses = _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _getTokenAddresses, getTokenAddresses_fn).call(this, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId));\n      if (!_lodash.isEqual.call(void 0, previousTokenAddresses, newTokenAddresses) && _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _pollState) === \"Active\" /* Active */) {\n        await this.updateExchangeRates();\n      }\n    },\n    ({ allTokens, allDetectedTokens }) => {\n      return { allTokens, allDetectedTokens };\n    }\n  );\n};\n_subscribeToNetworkStateChange = new WeakSet();\nsubscribeToNetworkStateChange_fn = function() {\n  this.messagingSystem.subscribe(\n    \"NetworkController:stateChange\",\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async ({ selectedNetworkClientId }) => {\n      const {\n        configuration: { chainId, ticker }\n      } = this.messagingSystem.call(\n        \"NetworkController:getNetworkClientById\",\n        selectedNetworkClientId\n      );\n      if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId) !== chainId || _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _ticker) !== ticker) {\n        this.update((state) => {\n          state.marketData = {};\n        });\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _chainId, chainId);\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _ticker, ticker);\n        if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _pollState) === \"Active\" /* Active */) {\n          await this.updateExchangeRates();\n        }\n      }\n    }\n  );\n};\n_subscribeToAccountChange = new WeakSet();\nsubscribeToAccountChange_fn = function() {\n  this.messagingSystem.subscribe(\n    \"AccountsController:selectedEvmAccountChange\",\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    async (selectedAccount) => {\n      if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _selectedAccountId) !== selectedAccount.id) {\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _selectedAccountId, selectedAccount.id);\n        if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _pollState) === \"Active\" /* Active */) {\n          await this.updateExchangeRates();\n        }\n      }\n    }\n  );\n};\n_getTokenAddresses = new WeakSet();\ngetTokenAddresses_fn = function(chainId) {\n  const selectedAccount = this.messagingSystem.call(\n    \"AccountsController:getAccount\",\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _selectedAccountId)\n  );\n  const selectedAddress = selectedAccount?.address ?? \"\";\n  const tokens = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allTokens)[chainId]?.[selectedAddress] || [];\n  const detectedTokens = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allDetectedTokens)[chainId]?.[selectedAddress] || [];\n  return [\n    ...new Set(\n      [...tokens, ...detectedTokens].map(\n        (token) => _controllerutils.toHex.call(void 0, _controllerutils.toChecksumHexAddress.call(void 0, token.address))\n      )\n    )\n  ].sort();\n};\n_getSelectedAccount = new WeakSet();\ngetSelectedAccount_fn = function() {\n  const selectedAccount = this.messagingSystem.call(\n    \"AccountsController:getSelectedAccount\"\n  );\n  return selectedAccount;\n};\n_getChainIdAndTicker = new WeakSet();\ngetChainIdAndTicker_fn = function() {\n  const { selectedNetworkClientId } = this.messagingSystem.call(\n    \"NetworkController:getState\"\n  );\n  const networkClient = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    selectedNetworkClientId\n  );\n  return {\n    chainId: networkClient.configuration.chainId,\n    ticker: networkClient.configuration.ticker\n  };\n};\n_getTokensControllerState = new WeakSet();\ngetTokensControllerState_fn = function() {\n  const { allTokens, allDetectedTokens } = this.messagingSystem.call(\n    \"TokensController:getState\"\n  );\n  return {\n    allTokens,\n    allDetectedTokens\n  };\n};\n_stopPoll = new WeakSet();\nstopPoll_fn = function() {\n  if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _handle)) {\n    clearTimeout(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _handle));\n  }\n};\n_poll = new WeakSet();\npoll_fn = async function() {\n  await _controllerutils.safelyExecute.call(void 0, () => this.updateExchangeRates());\n  _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _handle, setTimeout(() => {\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _poll, poll_fn).call(this);\n  }, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _interval)));\n};\n_fetchAndMapExchangeRates = new WeakSet();\nfetchAndMapExchangeRates_fn = async function({\n  tokenAddresses,\n  chainId,\n  nativeCurrency\n}) {\n  if (!_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokenPricesService).validateChainIdSupported(chainId)) {\n    return tokenAddresses.reduce((obj, tokenAddress) => {\n      obj = {\n        ...obj,\n        [tokenAddress]: void 0\n      };\n      return obj;\n    }, {});\n  }\n  if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokenPricesService).validateCurrencySupported(nativeCurrency)) {\n    return await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _fetchAndMapExchangeRatesForSupportedNativeCurrency, fetchAndMapExchangeRatesForSupportedNativeCurrency_fn).call(this, {\n      tokenAddresses,\n      chainId,\n      nativeCurrency\n    });\n  }\n  return await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _fetchAndMapExchangeRatesForUnsupportedNativeCurrency, fetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn).call(this, {\n    tokenAddresses,\n    nativeCurrency\n  });\n};\n_fetchAndMapExchangeRatesForSupportedNativeCurrency = new WeakSet();\nfetchAndMapExchangeRatesForSupportedNativeCurrency_fn = async function({\n  tokenAddresses,\n  chainId,\n  nativeCurrency\n}) {\n  let contractNativeInformations;\n  const tokenPricesByTokenAddress = await _chunkMZI3SDQNjs.reduceInBatchesSerially.call(void 0, {\n    values: [...tokenAddresses].sort(),\n    batchSize: _chunkMZI3SDQNjs.TOKEN_PRICES_BATCH_SIZE,\n    eachBatch: async (allTokenPricesByTokenAddress, batch) => {\n      const tokenPricesByTokenAddressForBatch = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokenPricesService).fetchTokenPrices({\n        tokenAddresses: batch,\n        chainId,\n        currency: nativeCurrency\n      });\n      return {\n        ...allTokenPricesByTokenAddress,\n        ...tokenPricesByTokenAddressForBatch\n      };\n    },\n    initialResult: {}\n  });\n  contractNativeInformations = tokenPricesByTokenAddress;\n  if (tokenAddresses.length === 0) {\n    const contractNativeInformationsNative = await _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokenPricesService).fetchTokenPrices({\n      tokenAddresses: [],\n      chainId,\n      currency: nativeCurrency\n    });\n    contractNativeInformations = {\n      [_chunkV6DNVRODjs.ZERO_ADDRESS]: {\n        currency: nativeCurrency,\n        ...contractNativeInformationsNative[_chunkV6DNVRODjs.ZERO_ADDRESS]\n      }\n    };\n  }\n  return Object.entries(contractNativeInformations).reduce(\n    (obj, [tokenAddress, token]) => {\n      obj = {\n        ...obj,\n        [tokenAddress]: { ...token }\n      };\n      return obj;\n    },\n    {}\n  );\n};\n_fetchAndMapExchangeRatesForUnsupportedNativeCurrency = new WeakSet();\nfetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn = async function({\n  tokenAddresses,\n  nativeCurrency\n}) {\n  const [\n    contractExchangeInformations,\n    fallbackCurrencyToNativeCurrencyConversionRate\n  ] = await Promise.all([\n    _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _fetchAndMapExchangeRatesForSupportedNativeCurrency, fetchAndMapExchangeRatesForSupportedNativeCurrency_fn).call(this, {\n      tokenAddresses,\n      chainId: _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _chainId),\n      nativeCurrency: _controllerutils.FALL_BACK_VS_CURRENCY\n    }),\n    getCurrencyConversionRate({\n      from: _controllerutils.FALL_BACK_VS_CURRENCY,\n      to: nativeCurrency\n    })\n  ]);\n  if (fallbackCurrencyToNativeCurrencyConversionRate === null) {\n    return {};\n  }\n  const updatedContractExchangeRates = Object.entries(\n    contractExchangeInformations\n  ).reduce((acc, [tokenAddress, token]) => {\n    acc = {\n      ...acc,\n      [tokenAddress]: {\n        ...token,\n        price: token.price ? token.price * fallbackCurrencyToNativeCurrencyConversionRate : void 0\n      }\n    };\n    return acc;\n  }, {});\n  return updatedContractExchangeRates;\n};\nvar TokenRatesController_default = TokenRatesController;\n\n\n\n\n\n\nexports.controllerName = controllerName; exports.getDefaultTokenRatesControllerState = getDefaultTokenRatesControllerState; exports.TokenRatesController = TokenRatesController; exports.TokenRatesController_default = TokenRatesController_default;\n//# sourceMappingURL=chunk-X2HRAVDO.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/TokenBalancesController.ts\nvar _basecontroller = require('@metamask/base-controller');\nvar _controllerutils = require('@metamask/controller-utils');\nvar DEFAULT_INTERVAL = 18e4;\nvar controllerName = \"TokenBalancesController\";\nvar metadata = {\n  contractBalances: { persist: true, anonymous: false }\n};\nfunction getDefaultTokenBalancesState() {\n  return {\n    contractBalances: {}\n  };\n}\nvar _handle, _interval, _tokens, _disabled;\nvar TokenBalancesController = class extends _basecontroller.BaseController {\n  /**\n   * Construct a Token Balances Controller.\n   *\n   * @param options - The controller options.\n   * @param options.interval - Polling interval used to fetch new token balances.\n   * @param options.tokens - List of tokens to track balances for.\n   * @param options.disabled - If set to true, all tracked tokens contract balances updates are blocked.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.messenger - The controller restricted messenger.\n   */\n  constructor({\n    interval = DEFAULT_INTERVAL,\n    tokens = [],\n    disabled = false,\n    messenger,\n    state = {}\n  }) {\n    super({\n      name: controllerName,\n      metadata,\n      messenger,\n      state: {\n        ...getDefaultTokenBalancesState(),\n        ...state\n      }\n    });\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _handle, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _interval, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _tokens, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _disabled, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, disabled);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _interval, interval);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _tokens, tokens);\n    this.messagingSystem.subscribe(\n      \"TokensController:stateChange\",\n      ({ tokens: newTokens, detectedTokens }) => {\n        _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _tokens, [...newTokens, ...detectedTokens]);\n        this.updateBalances();\n      }\n    );\n    this.poll();\n  }\n  /**\n   * Allows controller to update tracked tokens contract balances.\n   */\n  enable() {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, false);\n  }\n  /**\n   * Blocks controller from updating tracked tokens contract balances.\n   */\n  disable() {\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _disabled, true);\n  }\n  /**\n   * Starts a new polling interval.\n   *\n   * @param interval - Polling interval used to fetch new token balances.\n   */\n  async poll(interval) {\n    if (interval) {\n      _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _interval, interval);\n    }\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _handle)) {\n      clearTimeout(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _handle));\n    }\n    await _controllerutils.safelyExecute.call(void 0, () => this.updateBalances());\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _handle, setTimeout(() => {\n      this.poll(_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _interval));\n    }, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _interval)));\n  }\n  /**\n   * Updates balances for all tokens.\n   */\n  async updateBalances() {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _disabled)) {\n      return;\n    }\n    const selectedInternalAccount = this.messagingSystem.call(\n      \"AccountsController:getSelectedAccount\"\n    );\n    const newContractBalances = {};\n    for (const token of _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _tokens)) {\n      const { address } = token;\n      try {\n        const balance = await this.messagingSystem.call(\n          \"AssetsContractController:getERC20BalanceOf\",\n          address,\n          selectedInternalAccount.address\n        );\n        newContractBalances[address] = _controllerutils.toHex.call(void 0, balance);\n        token.hasBalanceError = false;\n      } catch (error) {\n        newContractBalances[address] = _controllerutils.toHex.call(void 0, 0);\n        token.hasBalanceError = true;\n      }\n    }\n    this.update((state) => {\n      state.contractBalances = newContractBalances;\n    });\n  }\n};\n_handle = new WeakMap();\n_interval = new WeakMap();\n_tokens = new WeakMap();\n_disabled = new WeakMap();\nvar TokenBalancesController_default = TokenBalancesController;\n\n\n\n\n\nexports.getDefaultTokenBalancesState = getDefaultTokenBalancesState; exports.TokenBalancesController = TokenBalancesController; exports.TokenBalancesController_default = TokenBalancesController_default;\n//# sourceMappingURL=chunk-YGGUAMHV.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkK7A3EOIMjs = require('./chunk-K7A3EOIM.js');\n\n\n\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/TokenListController.ts\nvar _controllerutils = require('@metamask/controller-utils');\nvar _pollingcontroller = require('@metamask/polling-controller');\nvar _asyncmutex = require('async-mutex');\nvar DEFAULT_INTERVAL = 24 * 60 * 60 * 1e3;\nvar DEFAULT_THRESHOLD = 24 * 60 * 60 * 1e3;\nvar name = \"TokenListController\";\nvar metadata = {\n  tokenList: { persist: true, anonymous: true },\n  tokensChainsCache: { persist: true, anonymous: true },\n  preventPollingOnNetworkRestart: { persist: true, anonymous: true }\n};\nvar getDefaultTokenListState = () => {\n  return {\n    tokenList: {},\n    tokensChainsCache: {},\n    preventPollingOnNetworkRestart: false\n  };\n};\nvar _onNetworkControllerStateChange, onNetworkControllerStateChange_fn, _fetchFromCache, fetchFromCache_fn;\nvar TokenListController = class extends _pollingcontroller.StaticIntervalPollingController {\n  /**\n   * Creates a TokenListController instance.\n   *\n   * @param options - The controller options.\n   * @param options.chainId - The chain ID of the current network.\n   * @param options.onNetworkStateChange - A function for registering an event handler for network state changes.\n   * @param options.interval - The polling interval, in milliseconds.\n   * @param options.cacheRefreshThreshold - The token cache expiry time, in milliseconds.\n   * @param options.messenger - A restricted controller messenger.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.preventPollingOnNetworkRestart - Determines whether to prevent poilling on network restart in extension.\n   */\n  constructor({\n    chainId,\n    preventPollingOnNetworkRestart = false,\n    onNetworkStateChange,\n    interval = DEFAULT_INTERVAL,\n    cacheRefreshThreshold = DEFAULT_THRESHOLD,\n    messenger,\n    state\n  }) {\n    super({\n      name,\n      metadata,\n      messenger,\n      state: { ...getDefaultTokenListState(), ...state }\n    });\n    /**\n     * Updates state and restarts polling on changes to the network controller\n     * state.\n     *\n     * @param networkControllerState - The updated network controller state.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _onNetworkControllerStateChange);\n    /**\n     * Checks if the Cache timestamp is valid,\n     * if yes data in cache will be returned\n     * otherwise null will be returned.\n     * @param chainId - The chain ID of the network for which to fetch the cache.\n     * @returns The cached data, or `null` if the cache was expired.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _fetchFromCache);\n    this.mutex = new (0, _asyncmutex.Mutex)();\n    this.intervalDelay = interval;\n    this.cacheRefreshThreshold = cacheRefreshThreshold;\n    this.chainId = chainId;\n    this.updatePreventPollingOnNetworkRestart(preventPollingOnNetworkRestart);\n    this.abortController = new AbortController();\n    if (onNetworkStateChange) {\n      onNetworkStateChange(async (networkControllerState) => {\n        await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onNetworkControllerStateChange, onNetworkControllerStateChange_fn).call(this, networkControllerState);\n      });\n    } else {\n      this.messagingSystem.subscribe(\n        \"NetworkController:stateChange\",\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        async (networkControllerState) => {\n          await _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _onNetworkControllerStateChange, onNetworkControllerStateChange_fn).call(this, networkControllerState);\n        }\n      );\n    }\n  }\n  /**\n   * Start polling for the token list.\n   */\n  async start() {\n    if (!_chunkMZI3SDQNjs.isTokenListSupportedForNetwork.call(void 0, this.chainId)) {\n      return;\n    }\n    await this.startPolling();\n  }\n  /**\n   * Restart polling for the token list.\n   */\n  async restart() {\n    this.stopPolling();\n    await this.startPolling();\n  }\n  /**\n   * Stop polling for the token list.\n   */\n  stop() {\n    this.stopPolling();\n  }\n  /**\n   * Prepare to discard this controller.\n   *\n   * This stops any active polling.\n   */\n  destroy() {\n    super.destroy();\n    this.stopPolling();\n  }\n  stopPolling() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n  /**\n   * Starts a new polling interval.\n   */\n  async startPolling() {\n    await _controllerutils.safelyExecute.call(void 0, () => this.fetchTokenList());\n    this.intervalId = setInterval(async () => {\n      await _controllerutils.safelyExecute.call(void 0, () => this.fetchTokenList());\n    }, this.intervalDelay);\n  }\n  /**\n   * Fetching token list from the Token Service API.\n   *\n   * @private\n   * @param networkClientId - The ID of the network client triggering the fetch.\n   * @returns A promise that resolves when this operation completes.\n   */\n  async _executePoll(networkClientId) {\n    return this.fetchTokenList(networkClientId);\n  }\n  /**\n   * Fetching token list from the Token Service API.\n   *\n   * @param networkClientId - The ID of the network client triggering the fetch.\n   */\n  async fetchTokenList(networkClientId) {\n    const releaseLock = await this.mutex.acquire();\n    let networkClient;\n    if (networkClientId) {\n      networkClient = this.messagingSystem.call(\n        \"NetworkController:getNetworkClientById\",\n        networkClientId\n      );\n    }\n    const chainId = networkClient?.configuration.chainId ?? this.chainId;\n    try {\n      const { tokensChainsCache } = this.state;\n      let tokenList = {};\n      const cachedTokens = await _controllerutils.safelyExecute.call(void 0, \n        () => _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _fetchFromCache, fetchFromCache_fn).call(this, chainId)\n      );\n      if (cachedTokens) {\n        tokenList = { ...cachedTokens };\n      } else {\n        const tokensFromAPI = await _controllerutils.safelyExecute.call(void 0, \n          () => _chunkK7A3EOIMjs.fetchTokenListByChainId.call(void 0, \n            chainId,\n            this.abortController.signal\n          )\n        );\n        if (!tokensFromAPI) {\n          tokenList = { ...tokensChainsCache[chainId]?.data || {} };\n          this.update(() => {\n            return {\n              ...this.state,\n              tokenList,\n              tokensChainsCache\n            };\n          });\n          return;\n        }\n        for (const token of tokensFromAPI) {\n          const formattedToken = {\n            ...token,\n            aggregators: _chunkMZI3SDQNjs.formatAggregatorNames.call(void 0, token.aggregators),\n            iconUrl: _chunkMZI3SDQNjs.formatIconUrlWithProxy.call(void 0, {\n              chainId,\n              tokenAddress: token.address\n            })\n          };\n          tokenList[token.address] = formattedToken;\n        }\n      }\n      const updatedTokensChainsCache = {\n        ...tokensChainsCache,\n        [chainId]: {\n          timestamp: Date.now(),\n          data: tokenList\n        }\n      };\n      this.update(() => {\n        return {\n          ...this.state,\n          tokenList,\n          tokensChainsCache: updatedTokensChainsCache\n        };\n      });\n    } finally {\n      releaseLock();\n    }\n  }\n  /**\n   * Clearing tokenList and tokensChainsCache explicitly.\n   */\n  clearingTokenListData() {\n    this.update(() => {\n      return {\n        ...this.state,\n        tokenList: {},\n        tokensChainsCache: {}\n      };\n    });\n  }\n  /**\n   * Updates preventPollingOnNetworkRestart from extension.\n   *\n   * @param shouldPreventPolling - Determine whether to prevent polling on network change\n   */\n  updatePreventPollingOnNetworkRestart(shouldPreventPolling) {\n    this.update(() => {\n      return {\n        ...this.state,\n        preventPollingOnNetworkRestart: shouldPreventPolling\n      };\n    });\n  }\n};\n_onNetworkControllerStateChange = new WeakSet();\nonNetworkControllerStateChange_fn = async function(networkControllerState) {\n  const selectedNetworkClient = this.messagingSystem.call(\n    \"NetworkController:getNetworkClientById\",\n    networkControllerState.selectedNetworkClientId\n  );\n  const { chainId } = selectedNetworkClient.configuration;\n  if (this.chainId !== chainId) {\n    this.abortController.abort();\n    this.abortController = new AbortController();\n    this.chainId = chainId;\n    if (this.state.preventPollingOnNetworkRestart) {\n      this.clearingTokenListData();\n    } else {\n      this.update(() => {\n        return {\n          ...this.state,\n          tokenList: this.state.tokensChainsCache[this.chainId]?.data || {}\n        };\n      });\n      await this.restart();\n    }\n  }\n};\n_fetchFromCache = new WeakSet();\nfetchFromCache_fn = async function(chainId) {\n  const { tokensChainsCache } = this.state;\n  const dataCache = tokensChainsCache[chainId];\n  const now = Date.now();\n  if (dataCache?.data && now - dataCache?.timestamp < this.cacheRefreshThreshold) {\n    return dataCache.data;\n  }\n  return null;\n};\nvar TokenListController_default = TokenListController;\n\n\n\n\n\nexports.getDefaultTokenListState = getDefaultTokenListState; exports.TokenListController = TokenListController; exports.TokenListController_default = TokenListController_default;\n//# sourceMappingURL=chunk-ZAR4BIOC.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/crypto-compare-service/crypto-compare.ts\nvar _controllerutils = require('@metamask/controller-utils');\nvar nativeSymbolOverrides = /* @__PURE__ */ new Map([[\"MNT\", \"MANTLE\"]]);\nvar CRYPTO_COMPARE_DOMAIN = \"https://min-api.cryptocompare.com\";\nfunction getPricingURL(currentCurrency, nativeCurrency, includeUSDRate) {\n  nativeCurrency = nativeCurrency.toUpperCase();\n  const fsym = nativeSymbolOverrides.get(nativeCurrency) ?? nativeCurrency;\n  return `${CRYPTO_COMPARE_DOMAIN}/data/price?fsym=${fsym}&tsyms=${currentCurrency.toUpperCase()}${includeUSDRate && currentCurrency.toUpperCase() !== \"USD\" ? \",USD\" : \"\"}`;\n}\nfunction getMultiPricingURL(fsyms, tsyms, includeUSDRate = false) {\n  const updatedTsyms = includeUSDRate && !tsyms.includes(\"USD\") ? `${tsyms},USD` : tsyms;\n  const params = new URLSearchParams();\n  params.append(\"fsyms\", fsyms);\n  params.append(\"tsyms\", updatedTsyms);\n  const url = new URL(`${CRYPTO_COMPARE_DOMAIN}/data/pricemulti`);\n  url.search = params.toString();\n  return url.toString();\n}\nfunction handleErrorResponse(json) {\n  if (json.Response === \"Error\") {\n    throw new Error(json.Message);\n  }\n}\nasync function fetchExchangeRate(currency, nativeCurrency, includeUSDRate) {\n  const json = await _controllerutils.handleFetch.call(void 0, \n    getPricingURL(currency, nativeCurrency, includeUSDRate)\n  );\n  handleErrorResponse(json);\n  const conversionRate = Number(json[currency.toUpperCase()]);\n  const usdConversionRate = Number(json.USD);\n  if (!Number.isFinite(conversionRate)) {\n    throw new Error(\n      `Invalid response for ${currency.toUpperCase()}: ${// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      json[currency.toUpperCase()]}`\n    );\n  }\n  if (includeUSDRate && !Number.isFinite(usdConversionRate)) {\n    throw new Error(`Invalid response for usdConversionRate: ${json.USD}`);\n  }\n  return {\n    conversionRate,\n    usdConversionRate\n  };\n}\nasync function fetchMultiExchangeRate(fiatCurrency, cryptocurrencies, includeUSDRate) {\n  const url = getMultiPricingURL(\n    Object.values(cryptocurrencies).join(\",\"),\n    fiatCurrency,\n    includeUSDRate\n  );\n  const response = await _controllerutils.handleFetch.call(void 0, url);\n  handleErrorResponse(response);\n  const rates = {};\n  for (const [cryptocurrency, values] of Object.entries(response)) {\n    rates[cryptocurrency.toLowerCase()] = {\n      [fiatCurrency.toLowerCase()]: values[fiatCurrency.toUpperCase()],\n      ...includeUSDRate && { usd: values.USD }\n    };\n  }\n  return rates;\n}\n\n\n\n\nexports.fetchExchangeRate = fetchExchangeRate; exports.fetchMultiExchangeRate = fetchMultiExchangeRate;\n//# sourceMappingURL=chunk-ZG5MS2TO.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});require('./chunk-OBUR4TXH.js');\n\n\n\nvar _chunkX2HRAVDOjs = require('./chunk-X2HRAVDO.js');\n\n\n\nvar _chunkV6DNVRODjs = require('./chunk-V6DNVROD.js');\n\n\nvar _chunkADJ3IFJHjs = require('./chunk-ADJ3IFJH.js');\nrequire('./chunk-XC3SOOGC.js');\n\n\n\nvar _chunkF6L3DFOZjs = require('./chunk-F6L3DFOZ.js');\n\n\nvar _chunkHVOIBGYNjs = require('./chunk-HVOIBGYN.js');\n\n\n\nvar _chunkGHG3DOUKjs = require('./chunk-GHG3DOUK.js');\nrequire('./chunk-ISK2VSBB.js');\nrequire('./chunk-JCR4H6YL.js');\nrequire('./chunk-5QLC2MHV.js');\n\n\nvar _chunkT5ZX5BV7js = require('./chunk-T5ZX5BV7.js');\nrequire('./chunk-7K6PSEAA.js');\nrequire('./chunk-ZG5MS2TO.js');\n\n\n\nvar _chunk2TZK6YZAjs = require('./chunk-2TZK6YZA.js');\n\n\nvar _chunkBBCZM5P4js = require('./chunk-BBCZM5P4.js');\nrequire('./chunk-RGHTNZQ6.js');\n\n\nvar _chunkYGGUAMHVjs = require('./chunk-YGGUAMHV.js');\n\n\nvar _chunk3LPQTUGGjs = require('./chunk-3LPQTUGG.js');\n\n\nvar _chunkZAR4BIOCjs = require('./chunk-ZAR4BIOC.js');\nrequire('./chunk-K7A3EOIM.js');\n\n\n\n\n\nvar _chunkMZI3SDQNjs = require('./chunk-MZI3SDQN.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.AccountTrackerController = _chunkHVOIBGYNjs.AccountTrackerController; exports.AssetsContractController = _chunkGHG3DOUKjs.AssetsContractController; exports.CodefiTokenPricesServiceV2 = _chunkV6DNVRODjs.CodefiTokenPricesServiceV2; exports.Cryptocurrency = _chunkF6L3DFOZjs.Cryptocurrency; exports.CurrencyRateController = _chunkT5ZX5BV7js.CurrencyRateController; exports.NftController = _chunk2TZK6YZAjs.NftController; exports.NftDetectionController = _chunkBBCZM5P4js.NftDetectionController; exports.RatesController = _chunkF6L3DFOZjs.RatesController; exports.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID = _chunkGHG3DOUKjs.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID; exports.SUPPORTED_CHAIN_IDS = _chunkV6DNVRODjs.SUPPORTED_CHAIN_IDS; exports.TokenBalancesController = _chunkYGGUAMHVjs.TokenBalancesController; exports.TokenDetectionController = _chunk3LPQTUGGjs.TokenDetectionController; exports.TokenListController = _chunkZAR4BIOCjs.TokenListController; exports.TokenRatesController = _chunkX2HRAVDOjs.TokenRatesController; exports.TokensController = _chunkADJ3IFJHjs.TokensController; exports.fetchTokenContractExchangeRates = _chunkMZI3SDQNjs.fetchTokenContractExchangeRates; exports.formatIconUrlWithProxy = _chunkMZI3SDQNjs.formatIconUrlWithProxy; exports.getDefaultNftControllerState = _chunk2TZK6YZAjs.getDefaultNftControllerState; exports.getDefaultTokenRatesControllerState = _chunkX2HRAVDOjs.getDefaultTokenRatesControllerState; exports.getFormattedIpfsUrl = _chunkMZI3SDQNjs.getFormattedIpfsUrl; exports.isTokenDetectionSupportedForNetwork = _chunkMZI3SDQNjs.isTokenDetectionSupportedForNetwork;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/BaseControllerV1.ts\nvar BaseControllerV1 = class {\n  /**\n   * Creates a BaseControllerV1 instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config = {}, state = {}) {\n    /**\n     * Default options used to configure this controller\n     */\n    this.defaultConfig = {};\n    /**\n     * Default state set on this controller\n     */\n    this.defaultState = {};\n    /**\n     * Determines if listeners are notified of state changes\n     */\n    this.disabled = false;\n    /**\n     * Name of this controller used during composition\n     */\n    this.name = \"BaseController\";\n    this.internalConfig = this.defaultConfig;\n    this.internalState = this.defaultState;\n    this.internalListeners = [];\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns This controller instance.\n   */\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n  /**\n   * Retrieves current controller configuration options.\n   *\n   * @returns The current configuration.\n   */\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration.\n   *\n   * @param config - New configuration options.\n   * @param overwrite - Overwrite config instead of merging.\n   * @param fullUpdate - Boolean that defines if the update is partial or not.\n   */\n  configure(config, overwrite = false, fullUpdate = true) {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n      for (const key of Object.keys(this.internalConfig)) {\n        const value = this.internalConfig[key];\n        if (value !== void 0) {\n          this[key] = value;\n        }\n      }\n    } else {\n      for (const key of Object.keys(config)) {\n        if (this.internalConfig[key] !== void 0) {\n          const value = config[key];\n          this.internalConfig[key] = value;\n          this[key] = value;\n        }\n      }\n    }\n  }\n  /**\n   * Notifies all subscribed listeners of current state.\n   */\n  notify() {\n    if (this.disabled) {\n      return;\n    }\n    this.internalListeners.forEach((listener) => {\n      listener(this.internalState);\n    });\n  }\n  /**\n   * Adds new listener to be notified of state changes.\n   *\n   * @param listener - The callback triggered when state changes.\n   */\n  subscribe(listener) {\n    this.internalListeners.push(listener);\n  }\n  /**\n   * Removes existing listener from receiving state changes.\n   *\n   * @param listener - The callback to remove.\n   * @returns `true` if a listener is found and unsubscribed.\n   */\n  unsubscribe(listener) {\n    const index = this.internalListeners.findIndex((cb) => listener === cb);\n    index > -1 && this.internalListeners.splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Updates controller state.\n   *\n   * @param state - The new state.\n   * @param overwrite - Overwrite state instead of merging.\n   */\n  update(state, overwrite = false) {\n    this.internalState = overwrite ? Object.assign({}, state) : Object.assign({}, this.internalState, state);\n    this.notify();\n  }\n};\nvar BaseControllerV1_default = BaseControllerV1;\n\n\n\n\nexports.BaseControllerV1 = BaseControllerV1; exports.BaseControllerV1_default = BaseControllerV1_default;\n//# sourceMappingURL=chunk-FTHCJ6HY.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/ControllerMessenger.ts\nvar _actions, _events, _initialEventPayloadGetters, _eventPayloadCache;\nvar ControllerMessenger = class {\n  constructor() {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _actions, /* @__PURE__ */ new Map());\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _events, /* @__PURE__ */ new Map());\n    /**\n     * A map of functions for getting the initial event payload.\n     *\n     * Used only for events that represent state changes.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _initialEventPayloadGetters, /* @__PURE__ */ new Map());\n    /**\n     * A cache of selector return values for their respective handlers.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _eventPayloadCache, /* @__PURE__ */ new Map());\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw when a handler has been registered for this action type already.\n   * @template ActionType - A type union of Action type strings.\n   */\n  registerActionHandler(actionType, handler) {\n    if (_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).has(actionType)) {\n      throw new Error(\n        `A handler for ${actionType} has already been registered`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).set(actionType, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @template ActionType - A type union of Action type strings.\n   */\n  unregisterActionHandler(actionType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).delete(actionType);\n  }\n  /**\n   * Unregister all action handlers.\n   *\n   * This prevents all actions from being called.\n   */\n  clearActions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).clear();\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    const handler = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _actions).get(actionType);\n    if (!handler) {\n      throw new Error(`A handler for ${actionType} has not been registered`);\n    }\n    return handler(...params);\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).set(eventType, getPayload);\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * Note that this method should never throw directly. Any errors from\n   * subscribers are captured and re-thrown in a timeout handler.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @template EventType - A type union of Event type strings.\n   */\n  publish(eventType, ...payload) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (subscribers) {\n      for (const [handler, selector] of subscribers.entries()) {\n        try {\n          if (selector) {\n            const previousValue = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).get(handler);\n            const newValue = selector(...payload);\n            if (newValue !== previousValue) {\n              _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, newValue);\n              handler(newValue, previousValue);\n            }\n          } else {\n            handler(...payload);\n          }\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n      }\n    }\n  }\n  subscribe(eventType, handler, selector) {\n    let subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers) {\n      subscribers = /* @__PURE__ */ new Map();\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).set(eventType, subscribers);\n    }\n    subscribers.set(handler, selector);\n    if (selector) {\n      const getPayload = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _initialEventPayloadGetters).get(eventType);\n      if (getPayload) {\n        const initialValue = selector(...getPayload());\n        _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).set(handler, initialValue);\n      }\n    }\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw when the given event handler is not registered for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  unsubscribe(eventType, handler) {\n    const subscribers = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).get(eventType);\n    if (!subscribers || !subscribers.has(handler)) {\n      throw new Error(`Subscription not found for event: ${eventType}`);\n    }\n    const selector = subscribers.get(handler);\n    if (selector) {\n      _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _eventPayloadCache).delete(handler);\n    }\n    subscribers.delete(handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * @param eventType - The event type. This is a unique identifier for this event.\n   * @template EventType - A type union of Event type strings.\n   */\n  clearEventSubscriptions(eventType) {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).delete(eventType);\n  }\n  /**\n   * Clear all subscriptions.\n   *\n   * This will remove all subscribed handlers for all events.\n   */\n  clearSubscriptions() {\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _events).clear();\n  }\n  /**\n   * Get a restricted controller messenger\n   *\n   * Returns a wrapper around the controller messenger instance that restricts access to actions\n   * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n   * to the listed events. The \"name\" provided grants ownership of any actions and events under\n   * that namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - Controller messenger options.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n   * module that this messenger has been created for. The authority to publish events and register\n   * actions under this namespace is granted to this restricted messenger instance.\n   * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n   * This must not include internal actions that are in the messenger's namespace.\n   * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n   * This must not include internal events that are in the messenger's namespace.\n   * @returns The restricted controller messenger.\n   */\n  getRestricted({\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    return new (0, _chunkUJFCPTF3js.RestrictedControllerMessenger)({\n      controllerMessenger: this,\n      name,\n      allowedActions,\n      allowedEvents\n    });\n  }\n};\n_actions = new WeakMap();\n_events = new WeakMap();\n_initialEventPayloadGetters = new WeakMap();\n_eventPayloadCache = new WeakMap();\n\n\n\nexports.ControllerMessenger = ControllerMessenger;\n//# sourceMappingURL=chunk-G42723LG.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/BaseControllerV2.ts\nvar _immer = require('immer');\n_immer.enablePatches.call(void 0, );\nvar _internalState;\nvar BaseController = class {\n  /**\n   * Creates a BaseController instance.\n   *\n   * @param options - Controller options.\n   * @param options.messenger - Controller messaging system.\n   * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n   * parts should be persisted.\n   * @param options.name - The name of the controller, used as a namespace for events and actions.\n   * @param options.state - Initial controller state.\n   */\n  constructor({\n    messenger,\n    metadata,\n    name,\n    state\n  }) {\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _internalState, void 0);\n    this.messagingSystem = messenger;\n    this.name = name;\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, _immer.freeze.call(void 0, state, true));\n    this.metadata = metadata;\n    this.messagingSystem.registerActionHandler(\n      `${name}:getState`,\n      () => this.state\n    );\n    this.messagingSystem.registerInitialEventPayload({\n      eventType: `${name}:stateChange`,\n      getPayload: () => [this.state, []]\n    });\n  }\n  /**\n   * Retrieves current controller state.\n   *\n   * @returns The current state.\n   */\n  get state() {\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState);\n  }\n  set state(_) {\n    throw new Error(\n      `Controller state cannot be directly mutated; use 'update' method instead.`\n    );\n  }\n  /**\n   * Updates controller state. Accepts a callback that is passed a draft copy\n   * of the controller state. If a value is returned, it is set as the new\n   * state. Otherwise, any changes made within that callback to the draft are\n   * applied to the controller state.\n   *\n   * @param callback - Callback for updating state, passed a draft state\n   * object. Return a new state object or mutate the draft to update state.\n   * @returns An object that has the next state, patches applied in the update and inverse patches to\n   * rollback the update.\n   */\n  update(callback) {\n    const [nextState, patches, inversePatches] = _immer.produceWithPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), callback);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n    return { nextState, patches, inversePatches };\n  }\n  /**\n   * Applies immer patches to the current state. The patches come from the\n   * update function itself and can either be normal or inverse patches.\n   *\n   * @param patches - An array of immer patches that are to be applied to make\n   * or undo changes.\n   */\n  applyPatches(patches) {\n    const nextState = _immer.applyPatches.call(void 0, _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _internalState), patches);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _internalState, nextState);\n    this.messagingSystem.publish(\n      `${this.name}:stateChange`,\n      nextState,\n      patches\n    );\n  }\n  /**\n   * Prepares the controller for garbage collection. This should be extended\n   * by any subclasses to clean up any additional connections or events.\n   *\n   * The only cleanup performed here is to remove listeners. While technically\n   * this is not required to ensure this instance is garbage collected, it at\n   * least ensures this instance won't be responsible for preventing the\n   * listeners from being garbage collected.\n   */\n  destroy() {\n    this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n  }\n};\n_internalState = new WeakMap();\nfunction getAnonymizedState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"anonymous\");\n}\nfunction getPersistentState(state, metadata) {\n  return deriveStateFromMetadata(state, metadata, \"persist\");\n}\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n  return Object.keys(state).reduce((derivedState, key) => {\n    try {\n      const stateMetadata = metadata[key];\n      if (!stateMetadata) {\n        throw new Error(`No metadata found for '${String(key)}'`);\n      }\n      const propertyMetadata = stateMetadata[metadataProperty];\n      const stateProperty = state[key];\n      if (typeof propertyMetadata === \"function\") {\n        derivedState[key] = propertyMetadata(stateProperty);\n      } else if (propertyMetadata) {\n        derivedState[key] = stateProperty;\n      }\n      return derivedState;\n    } catch (error) {\n      setTimeout(() => {\n        throw error;\n      });\n      return derivedState;\n    }\n  }, {});\n}\n\n\n\n\n\nexports.BaseController = BaseController; exports.getAnonymizedState = getAnonymizedState; exports.getPersistentState = getPersistentState;\n//# sourceMappingURL=chunk-IURK6TKD.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkZ4BLTVTBjs = require('./chunk-Z4BLTVTB.js');\n\n// src/RestrictedControllerMessenger.ts\nvar _controllerMessenger, _controllerName, _allowedActions, _allowedEvents, _isAllowedEvent, isAllowedEvent_fn, _isAllowedAction, isAllowedAction_fn, _isInCurrentNamespace, isInCurrentNamespace_fn;\nvar RestrictedControllerMessenger = class {\n  /**\n   * Constructs a restricted controller messenger\n   *\n   * The provided allowlists grant the ability to call the listed actions and subscribe to the\n   * listed events. The \"name\" provided grants ownership of any actions and events under that\n   * namespace. Ownership allows registering actions and publishing events, as well as\n   * unregistering actions and clearing event subscriptions.\n   *\n   * @param options - The controller options.\n   * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n   * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n   * controller name). This grants \"ownership\" of actions and events under this namespace to the\n   * restricted controller messenger returned.\n   * @param options.allowedActions - The list of actions that this restricted controller messenger\n   * should be alowed to call.\n   * @param options.allowedEvents - The list of events that this restricted controller messenger\n   * should be allowed to subscribe to.\n   */\n  constructor({\n    controllerMessenger,\n    name,\n    allowedActions,\n    allowedEvents\n  }) {\n    /**\n     * Determine whether the given event type is allowed. Event types are\n     * allowed if they are in the current namespace or on the list of\n     * allowed events.\n     *\n     * @param eventType - The event type to check.\n     * @returns Whether the event type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedEvent);\n    /**\n     * Determine whether the given action type is allowed. Action types\n     * are allowed if they are in the current namespace or on the list of\n     * allowed actions.\n     *\n     * @param actionType - The action type to check.\n     * @returns Whether the action type is allowed.\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isAllowedAction);\n    /**\n     * Determine whether the given name is within the current namespace.\n     *\n     * @param name - The name to check\n     * @returns Whether the name is within the current namespace\n     */\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _isInCurrentNamespace);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerMessenger, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _controllerName, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedActions, void 0);\n    _chunkZ4BLTVTBjs.__privateAdd.call(void 0, this, _allowedEvents, void 0);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerMessenger, controllerMessenger);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _controllerName, name);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedActions, allowedActions);\n    _chunkZ4BLTVTBjs.__privateSet.call(void 0, this, _allowedEvents, allowedEvents);\n  }\n  /**\n   * Register an action handler.\n   *\n   * This will make the registered function available to call via the `call` method.\n   *\n   * The action type this handler is registered under *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unqiue identifier for this action.\n   * @param handler - The action handler. This function gets called when the `call` method is\n   * invoked with the given action type.\n   * @throws Will throw if an action handler that is not in the current namespace is being registered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  registerActionHandler(action, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed registering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerActionHandler(action, handler);\n  }\n  /**\n   * Unregister an action handler.\n   *\n   * This will prevent this action from being called.\n   *\n   * The action type being unregistered *must* be in the current namespace.\n   *\n   * @param action - The action type. This is a unique identifier for this action.\n   * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n   * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n   */\n  unregisterActionHandler(action) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, action)) {\n      throw new Error(\n        `Only allowed unregistering action handlers prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unregisterActionHandler(action);\n  }\n  /**\n   * Call an action.\n   *\n   * This function will call the action handler corresponding to the given action type, passing\n   * along any parameters given.\n   *\n   * The action type being called must be on the action allowlist.\n   *\n   * @param actionType - The action type. This is a unqiue identifier for this action.\n   * @param params - The action parameters. These must match the type of the parameters of the\n   * registered action handler.\n   * @throws Will throw when no handler has been registered for the given type.\n   * @template ActionType - A type union of allowed Action type strings.\n   * @returns The action return value.\n   */\n  call(actionType, ...params) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedAction, isAllowedAction_fn).call(this, actionType)) {\n      throw new Error(`Action missing from allow list: ${actionType}`);\n    }\n    const response = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).call(\n      actionType,\n      ...params\n    );\n    return response;\n  }\n  /**\n   * Register a function for getting the initial payload for an event.\n   *\n   * This is used for events that represent a state change, where the payload is the state.\n   * Registering a function for getting the payload allows event selectors to have a point of\n   * comparison the first time state changes.\n   *\n   * The event type *must* be in the current namespace\n   *\n   * @param args - The arguments to this function\n   * @param args.eventType - The event type to register a payload for.\n   * @param args.getPayload - A function for retrieving the event payload.\n   */\n  registerInitialEventPayload({\n    eventType,\n    getPayload\n  }) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).registerInitialEventPayload({\n      eventType,\n      getPayload\n    });\n  }\n  /**\n   * Publish an event.\n   *\n   * Publishes the given payload to all subscribers of the given event type.\n   *\n   * The event type being published *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param payload - The event payload. The type of the parameters for each event handler must\n   * match the type of this payload.\n   * @throws Will throw if an event that is not in the current namespace is being published.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  publish(event, ...payload) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed publishing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).publish(event, ...payload);\n  }\n  subscribe(event, handler, selector) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    if (selector) {\n      return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler, selector);\n    }\n    return _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).subscribe(event, handler);\n  }\n  /**\n   * Unsubscribe from an event.\n   *\n   * Unregisters the given function as an event handler for the given event.\n   *\n   * The event type being unsubscribed to must be on the event allowlist.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @param handler - The event handler to unregister.\n   * @throws Will throw if the given event is not an allowed event for this controller messenger.\n   * @template EventType - A type union of allowed Event type strings.\n   */\n  unsubscribe(event, handler) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isAllowedEvent, isAllowedEvent_fn).call(this, event)) {\n      throw new Error(`Event missing from allow list: ${event}`);\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).unsubscribe(event, handler);\n  }\n  /**\n   * Clear subscriptions for a specific event.\n   *\n   * This will remove all subscribed handlers for this event.\n   *\n   * The event type being cleared *must* be in the current namespace.\n   *\n   * @param event - The event type. This is a unique identifier for this event.\n   * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n   * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n   */\n  clearEventSubscriptions(event) {\n    if (!_chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, event)) {\n      throw new Error(\n        `Only allowed clearing events prefixed by '${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:'`\n      );\n    }\n    _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerMessenger).clearEventSubscriptions(event);\n  }\n};\n_controllerMessenger = new WeakMap();\n_controllerName = new WeakMap();\n_allowedActions = new WeakMap();\n_allowedEvents = new WeakMap();\n_isAllowedEvent = new WeakSet();\nisAllowedEvent_fn = function(eventType) {\n  const allowedEvents = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedEvents);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, eventType) || allowedEvents !== null && allowedEvents.includes(eventType);\n};\n_isAllowedAction = new WeakSet();\nisAllowedAction_fn = function(actionType) {\n  const allowedActions = _chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _allowedActions);\n  return _chunkZ4BLTVTBjs.__privateMethod.call(void 0, this, _isInCurrentNamespace, isInCurrentNamespace_fn).call(this, actionType) || allowedActions !== null && allowedActions.includes(actionType);\n};\n_isInCurrentNamespace = new WeakSet();\nisInCurrentNamespace_fn = function(name) {\n  return name.startsWith(`${_chunkZ4BLTVTBjs.__privateGet.call(void 0, this, _controllerName)}:`);\n};\n\n\n\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n//# sourceMappingURL=chunk-UJFCPTF3.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n//# sourceMappingURL=chunk-Z4BLTVTB.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkFTHCJ6HYjs = require('./chunk-FTHCJ6HY.js');\n\n\n\n\nvar _chunkIURK6TKDjs = require('./chunk-IURK6TKD.js');\n\n\nvar _chunkG42723LGjs = require('./chunk-G42723LG.js');\n\n\nvar _chunkUJFCPTF3js = require('./chunk-UJFCPTF3.js');\nrequire('./chunk-Z4BLTVTB.js');\n\n\n\n\n\n\n\nexports.BaseController = _chunkIURK6TKDjs.BaseController; exports.BaseControllerV1 = _chunkFTHCJ6HYjs.BaseControllerV1; exports.ControllerMessenger = _chunkG42723LGjs.ControllerMessenger; exports.RestrictedControllerMessenger = _chunkUJFCPTF3js.RestrictedControllerMessenger; exports.getAnonymizedState = _chunkIURK6TKDjs.getAnonymizedState; exports.getPersistentState = _chunkIURK6TKDjs.getPersistentState;\n//# sourceMappingURL=index.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/AbstractPollingController.ts\nvar _fastjsonstablestringify = require('fast-json-stable-stringify'); var _fastjsonstablestringify2 = _interopRequireDefault(_fastjsonstablestringify);\nvar _uuid = require('uuid');\nvar getKey = (networkClientId, options) => `${networkClientId}:${_fastjsonstablestringify2.default.call(void 0, options)}`;\nfunction AbstractPollingControllerBaseMixin(Base) {\n  var _pollingTokenSets, _callbacks;\n  class AbstractPollingControllerBase extends Base {\n    constructor() {\n      super(...arguments);\n      __privateAdd(this, _pollingTokenSets, /* @__PURE__ */ new Map());\n      __privateAdd(this, _callbacks, /* @__PURE__ */ new Map());\n    }\n    startPollingByNetworkClientId(networkClientId, options = {}) {\n      const pollToken = _uuid.v4.call(void 0, );\n      const key = getKey(networkClientId, options);\n      const pollingTokenSet = __privateGet(this, _pollingTokenSets).get(key) ?? /* @__PURE__ */ new Set();\n      pollingTokenSet.add(pollToken);\n      __privateGet(this, _pollingTokenSets).set(key, pollingTokenSet);\n      if (pollingTokenSet.size === 1) {\n        this._startPollingByNetworkClientId(networkClientId, options);\n      }\n      return pollToken;\n    }\n    stopAllPolling() {\n      __privateGet(this, _pollingTokenSets).forEach((tokenSet, _key) => {\n        tokenSet.forEach((token) => {\n          this.stopPollingByPollingToken(token);\n        });\n      });\n    }\n    stopPollingByPollingToken(pollingToken) {\n      if (!pollingToken) {\n        throw new Error(\"pollingToken required\");\n      }\n      let keyToDelete = null;\n      for (const [key, tokenSet] of __privateGet(this, _pollingTokenSets)) {\n        if (tokenSet.delete(pollingToken)) {\n          if (tokenSet.size === 0) {\n            keyToDelete = key;\n          }\n          break;\n        }\n      }\n      if (keyToDelete) {\n        this._stopPollingByPollingTokenSetId(keyToDelete);\n        __privateGet(this, _pollingTokenSets).delete(keyToDelete);\n        const callbacks = __privateGet(this, _callbacks).get(keyToDelete);\n        if (callbacks) {\n          for (const callback of callbacks) {\n            callback(keyToDelete);\n          }\n          callbacks.clear();\n        }\n      }\n    }\n    onPollingCompleteByNetworkClientId(networkClientId, callback, options = {}) {\n      const key = getKey(networkClientId, options);\n      const callbacks = __privateGet(this, _callbacks).get(key) ?? /* @__PURE__ */ new Set();\n      callbacks.add(callback);\n      __privateGet(this, _callbacks).set(key, callbacks);\n    }\n  }\n  _pollingTokenSets = new WeakMap();\n  _callbacks = new WeakMap();\n  return AbstractPollingControllerBase;\n}\n\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.getKey = getKey; exports.AbstractPollingControllerBaseMixin = AbstractPollingControllerBaseMixin;\n//# sourceMappingURL=chunk-JCXUPRTT.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\nvar _chunkJCXUPRTTjs = require('./chunk-JCXUPRTT.js');\n\n// src/BlockTrackerPollingController.ts\nvar _basecontroller = require('@metamask/base-controller');\nfunction BlockTrackerPollingControllerMixin(Base) {\n  var _activeListeners;\n  class BlockTrackerPollingController2 extends _chunkJCXUPRTTjs.AbstractPollingControllerBaseMixin.call(void 0, \n    Base\n  ) {\n    constructor() {\n      super(...arguments);\n      _chunkJCXUPRTTjs.__privateAdd.call(void 0, this, _activeListeners, {});\n    }\n    _startPollingByNetworkClientId(networkClientId, options) {\n      const key = _chunkJCXUPRTTjs.getKey.call(void 0, networkClientId, options);\n      if (_chunkJCXUPRTTjs.__privateGet.call(void 0, this, _activeListeners)[key]) {\n        return;\n      }\n      const networkClient = this._getNetworkClientById(networkClientId);\n      if (networkClient) {\n        const updateOnNewBlock = this._executePoll.bind(\n          this,\n          networkClientId,\n          options\n        );\n        networkClient.blockTracker.addListener(\"latest\", updateOnNewBlock);\n        _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _activeListeners)[key] = updateOnNewBlock;\n      } else {\n        throw new Error(\n          // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `Unable to retrieve blockTracker for networkClientId ${networkClientId}`\n        );\n      }\n    }\n    _stopPollingByPollingTokenSetId(key) {\n      const [networkClientId] = key.split(\":\");\n      const networkClient = this._getNetworkClientById(\n        networkClientId\n      );\n      if (networkClient && _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _activeListeners)[key]) {\n        const listener = _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _activeListeners)[key];\n        if (listener) {\n          networkClient.blockTracker.removeListener(\"latest\", listener);\n          delete _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _activeListeners)[key];\n        }\n      }\n    }\n  }\n  _activeListeners = new WeakMap();\n  return BlockTrackerPollingController2;\n}\nvar Empty = class {\n};\nvar BlockTrackerPollingControllerOnly = BlockTrackerPollingControllerMixin(Empty);\nvar BlockTrackerPollingController = BlockTrackerPollingControllerMixin(_basecontroller.BaseController);\nvar BlockTrackerPollingControllerV1 = BlockTrackerPollingControllerMixin(_basecontroller.BaseControllerV1);\n\n\n\n\n\nexports.BlockTrackerPollingControllerOnly = BlockTrackerPollingControllerOnly; exports.BlockTrackerPollingController = BlockTrackerPollingController; exports.BlockTrackerPollingControllerV1 = BlockTrackerPollingControllerV1;\n//# sourceMappingURL=chunk-JVLLYBTK.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\n\n\nvar _chunkJCXUPRTTjs = require('./chunk-JCXUPRTT.js');\n\n// src/StaticIntervalPollingController.ts\nvar _basecontroller = require('@metamask/base-controller');\nfunction StaticIntervalPollingControllerMixin(Base) {\n  var _intervalIds, _intervalLength;\n  class StaticIntervalPollingController2 extends _chunkJCXUPRTTjs.AbstractPollingControllerBaseMixin.call(void 0, Base) {\n    constructor() {\n      super(...arguments);\n      _chunkJCXUPRTTjs.__privateAdd.call(void 0, this, _intervalIds, {});\n      _chunkJCXUPRTTjs.__privateAdd.call(void 0, this, _intervalLength, 1e3);\n    }\n    setIntervalLength(intervalLength) {\n      _chunkJCXUPRTTjs.__privateSet.call(void 0, this, _intervalLength, intervalLength);\n    }\n    getIntervalLength() {\n      return _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalLength);\n    }\n    _startPollingByNetworkClientId(networkClientId, options) {\n      if (!_chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalLength)) {\n        throw new Error(\"intervalLength must be defined and greater than 0\");\n      }\n      const key = _chunkJCXUPRTTjs.getKey.call(void 0, networkClientId, options);\n      const existingInterval = _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalIds)[key];\n      this._stopPollingByPollingTokenSetId(key);\n      const intervalId = _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalIds)[key] = setTimeout(\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        async () => {\n          try {\n            await this._executePoll(networkClientId, options);\n          } catch (error) {\n            console.error(error);\n          }\n          if (intervalId === _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalIds)[key]) {\n            this._startPollingByNetworkClientId(networkClientId, options);\n          }\n        },\n        existingInterval ? _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalLength) : 0\n      );\n    }\n    _stopPollingByPollingTokenSetId(key) {\n      const intervalId = _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalIds)[key];\n      if (intervalId) {\n        clearTimeout(intervalId);\n        delete _chunkJCXUPRTTjs.__privateGet.call(void 0, this, _intervalIds)[key];\n      }\n    }\n  }\n  _intervalIds = new WeakMap();\n  _intervalLength = new WeakMap();\n  return StaticIntervalPollingController2;\n}\nvar Empty = class {\n};\nvar StaticIntervalPollingControllerOnly = StaticIntervalPollingControllerMixin(Empty);\nvar StaticIntervalPollingController = StaticIntervalPollingControllerMixin(_basecontroller.BaseController);\nvar StaticIntervalPollingControllerV1 = StaticIntervalPollingControllerMixin(_basecontroller.BaseControllerV1);\n\n\n\n\n\nexports.StaticIntervalPollingControllerOnly = StaticIntervalPollingControllerOnly; exports.StaticIntervalPollingController = StaticIntervalPollingController; exports.StaticIntervalPollingControllerV1 = StaticIntervalPollingControllerV1;\n//# sourceMappingURL=chunk-RD6EX3RW.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\n\nvar _chunkJVLLYBTKjs = require('./chunk-JVLLYBTK.js');\n\n\n\n\nvar _chunkRD6EX3RWjs = require('./chunk-RD6EX3RW.js');\nrequire('./chunk-JCXUPRTT.js');\n\n\n\n\n\n\n\nexports.BlockTrackerPollingController = _chunkJVLLYBTKjs.BlockTrackerPollingController; exports.BlockTrackerPollingControllerOnly = _chunkJVLLYBTKjs.BlockTrackerPollingControllerOnly; exports.BlockTrackerPollingControllerV1 = _chunkJVLLYBTKjs.BlockTrackerPollingControllerV1; exports.StaticIntervalPollingController = _chunkRD6EX3RWjs.StaticIntervalPollingController; exports.StaticIntervalPollingControllerOnly = _chunkRD6EX3RWjs.StaticIntervalPollingControllerOnly; exports.StaticIntervalPollingControllerV1 = _chunkRD6EX3RWjs.StaticIntervalPollingControllerV1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseControllerV1 = exports.isBaseControllerV1 = void 0;\n/**\n * Determines if the given controller is an instance of `BaseControllerV1`\n *\n * @param controller - Controller instance to check\n * @returns True if the controller is an instance of `BaseControllerV1`\n */\nfunction isBaseControllerV1(controller) {\n    return ('name' in controller &&\n        typeof controller.name === 'string' &&\n        'config' in controller &&\n        typeof controller.config === 'object' &&\n        'defaultConfig' in controller &&\n        typeof controller.defaultConfig === 'object' &&\n        'state' in controller &&\n        typeof controller.state === 'object' &&\n        'defaultState' in controller &&\n        typeof controller.defaultState === 'object' &&\n        'disabled' in controller &&\n        typeof controller.disabled === 'boolean' &&\n        'subscribe' in controller &&\n        typeof controller.subscribe === 'function');\n}\nexports.isBaseControllerV1 = isBaseControllerV1;\n/**\n * @deprecated This class has been renamed to BaseControllerV1 and is no longer recommended for use for controllers. Please use BaseController (formerly BaseControllerV2) instead.\n *\n * Controller class that provides configuration, state management, and subscriptions.\n *\n * The core purpose of every controller is to maintain an internal data object\n * called \"state\". Each controller is responsible for its own state, and all global wallet state\n * is tracked in a controller as state.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass BaseControllerV1 {\n    /**\n     * Creates a BaseControllerV1 instance. Both initial state and initial\n     * configuration options are merged with defaults upon initialization.\n     *\n     * @param config - Initial options used to configure this controller.\n     * @param state - Initial state to set on this controller.\n     */\n    constructor(config = {}, state = {}) {\n        /**\n         * Default options used to configure this controller\n         */\n        this.defaultConfig = {};\n        /**\n         * Default state set on this controller\n         */\n        this.defaultState = {};\n        /**\n         * Determines if listeners are notified of state changes\n         */\n        this.disabled = false;\n        /**\n         * Name of this controller used during composition\n         */\n        this.name = 'BaseController';\n        this.internalConfig = this.defaultConfig;\n        this.internalState = this.defaultState;\n        this.internalListeners = [];\n        this.initialState = state;\n        this.initialConfig = config;\n    }\n    /**\n     * Enables the controller. This sets each config option as a member\n     * variable on this instance and triggers any defined setters. This\n     * also sets initial state and triggers any listeners.\n     *\n     * @returns This controller instance.\n     */\n    initialize() {\n        this.internalState = this.defaultState;\n        this.internalConfig = this.defaultConfig;\n        this.configure(this.initialConfig);\n        this.update(this.initialState);\n        return this;\n    }\n    /**\n     * Retrieves current controller configuration options.\n     *\n     * @returns The current configuration.\n     */\n    get config() {\n        return this.internalConfig;\n    }\n    /**\n     * Retrieves current controller state.\n     *\n     * @returns The current state.\n     */\n    get state() {\n        return this.internalState;\n    }\n    /**\n     * Updates controller configuration.\n     *\n     * @param config - New configuration options.\n     * @param overwrite - Overwrite config instead of merging.\n     * @param fullUpdate - Boolean that defines if the update is partial or not.\n     */\n    configure(config, overwrite = false, fullUpdate = true) {\n        if (fullUpdate) {\n            this.internalConfig = overwrite\n                ? config\n                : Object.assign(this.internalConfig, config);\n            for (const key of Object.keys(this.internalConfig)) {\n                const value = this.internalConfig[key];\n                if (value !== undefined) {\n                    this[key] = value;\n                }\n            }\n        }\n        else {\n            for (const key of Object.keys(config)) {\n                /* istanbul ignore else */\n                if (this.internalConfig[key] !== undefined) {\n                    const value = config[key];\n                    this.internalConfig[key] = value;\n                    this[key] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Notifies all subscribed listeners of current state.\n     */\n    notify() {\n        if (this.disabled) {\n            return;\n        }\n        this.internalListeners.forEach((listener) => {\n            listener(this.internalState);\n        });\n    }\n    /**\n     * Adds new listener to be notified of state changes.\n     *\n     * @param listener - The callback triggered when state changes.\n     */\n    subscribe(listener) {\n        this.internalListeners.push(listener);\n    }\n    /**\n     * Removes existing listener from receiving state changes.\n     *\n     * @param listener - The callback to remove.\n     * @returns `true` if a listener is found and unsubscribed.\n     */\n    unsubscribe(listener) {\n        const index = this.internalListeners.findIndex((cb) => listener === cb);\n        index > -1 && this.internalListeners.splice(index, 1);\n        return index > -1;\n    }\n    /**\n     * Updates controller state.\n     *\n     * @param state - The new state.\n     * @param overwrite - Overwrite state instead of merging.\n     */\n    update(state, overwrite = false) {\n        this.internalState = overwrite\n            ? Object.assign({}, state)\n            : Object.assign({}, this.internalState, state);\n        this.notify();\n    }\n}\nexports.BaseControllerV1 = BaseControllerV1;\nexports.default = BaseControllerV1;\n//# sourceMappingURL=BaseControllerV1.cjs.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseController_internalState;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPersistentState = exports.getAnonymizedState = exports.BaseController = exports.isBaseController = void 0;\nconst immer_1 = require(\"immer\");\n(0, immer_1.enablePatches)();\n/**\n * Determines if the given controller is an instance of `BaseController`\n *\n * @param controller - Controller instance to check\n * @returns True if the controller is an instance of `BaseController`\n */\nfunction isBaseController(controller) {\n    return ('name' in controller &&\n        typeof controller.name === 'string' &&\n        'state' in controller &&\n        typeof controller.state === 'object' &&\n        'metadata' in controller &&\n        typeof controller.metadata === 'object');\n}\nexports.isBaseController = isBaseController;\n/**\n * Controller class that provides state management, subscriptions, and state metadata\n */\nclass BaseController {\n    /**\n     * Creates a BaseController instance.\n     *\n     * @param options - Controller options.\n     * @param options.messenger - Controller messaging system.\n     * @param options.metadata - ControllerState metadata, describing how to \"anonymize\" the state, and which\n     * parts should be persisted.\n     * @param options.name - The name of the controller, used as a namespace for events and actions.\n     * @param options.state - Initial controller state.\n     */\n    constructor({ messenger, metadata, name, state, }) {\n        _BaseController_internalState.set(this, void 0);\n        this.messagingSystem = messenger;\n        this.name = name;\n        // Here we use `freeze` from Immer to enforce that the state is deeply\n        // immutable. Note that this is a runtime check, not a compile-time check.\n        // That is, unlike `Object.freeze`, this does not narrow the type\n        // recursively to `Readonly`. The equivalent in Immer is `Immutable`, but\n        // `Immutable` does not handle recursive types such as our `Json` type.\n        __classPrivateFieldSet(this, _BaseController_internalState, (0, immer_1.freeze)(state, true), \"f\");\n        this.metadata = metadata;\n        this.messagingSystem.registerActionHandler(`${name}:getState`, () => this.state);\n        this.messagingSystem.registerInitialEventPayload({\n            eventType: `${name}:stateChange`,\n            getPayload: () => [this.state, []],\n        });\n    }\n    /**\n     * Retrieves current controller state.\n     *\n     * @returns The current state.\n     */\n    get state() {\n        return __classPrivateFieldGet(this, _BaseController_internalState, \"f\");\n    }\n    set state(_) {\n        throw new Error(`Controller state cannot be directly mutated; use 'update' method instead.`);\n    }\n    /**\n     * Updates controller state. Accepts a callback that is passed a draft copy\n     * of the controller state. If a value is returned, it is set as the new\n     * state. Otherwise, any changes made within that callback to the draft are\n     * applied to the controller state.\n     *\n     * @param callback - Callback for updating state, passed a draft state\n     * object. Return a new state object or mutate the draft to update state.\n     * @returns An object that has the next state, patches applied in the update and inverse patches to\n     * rollback the update.\n     */\n    update(callback) {\n        // We run into ts2589, \"infinite type depth\", if we don't cast\n        // produceWithPatches here.\n        const [nextState, patches, inversePatches] = immer_1.produceWithPatches(__classPrivateFieldGet(this, _BaseController_internalState, \"f\"), callback);\n        __classPrivateFieldSet(this, _BaseController_internalState, nextState, \"f\");\n        this.messagingSystem.publish(`${this.name}:stateChange`, nextState, patches);\n        return { nextState, patches, inversePatches };\n    }\n    /**\n     * Applies immer patches to the current state. The patches come from the\n     * update function itself and can either be normal or inverse patches.\n     *\n     * @param patches - An array of immer patches that are to be applied to make\n     * or undo changes.\n     */\n    applyPatches(patches) {\n        const nextState = (0, immer_1.applyPatches)(__classPrivateFieldGet(this, _BaseController_internalState, \"f\"), patches);\n        __classPrivateFieldSet(this, _BaseController_internalState, nextState, \"f\");\n        this.messagingSystem.publish(`${this.name}:stateChange`, nextState, patches);\n    }\n    /**\n     * Prepares the controller for garbage collection. This should be extended\n     * by any subclasses to clean up any additional connections or events.\n     *\n     * The only cleanup performed here is to remove listeners. While technically\n     * this is not required to ensure this instance is garbage collected, it at\n     * least ensures this instance won't be responsible for preventing the\n     * listeners from being garbage collected.\n     */\n    destroy() {\n        this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`);\n    }\n}\nexports.BaseController = BaseController;\n_BaseController_internalState = new WeakMap();\n/**\n * Returns an anonymized representation of the controller state.\n *\n * By \"anonymized\" we mean that it should not contain any information that could be personally\n * identifiable.\n *\n * @param state - The controller state.\n * @param metadata - The controller state metadata, which describes how to derive the\n * anonymized state.\n * @returns The anonymized controller state.\n */\nfunction getAnonymizedState(state, metadata) {\n    return deriveStateFromMetadata(state, metadata, 'anonymous');\n}\nexports.getAnonymizedState = getAnonymizedState;\n/**\n * Returns the subset of state that should be persisted.\n *\n * @param state - The controller state.\n * @param metadata - The controller state metadata, which describes which pieces of state should be persisted.\n * @returns The subset of controller state that should be persisted.\n */\nfunction getPersistentState(state, metadata) {\n    return deriveStateFromMetadata(state, metadata, 'persist');\n}\nexports.getPersistentState = getPersistentState;\n/**\n * Use the metadata to derive state according to the given metadata property.\n *\n * @param state - The full controller state.\n * @param metadata - The controller metadata.\n * @param metadataProperty - The metadata property to use to derive state.\n * @returns The metadata-derived controller state.\n */\nfunction deriveStateFromMetadata(state, metadata, metadataProperty) {\n    return Object.keys(state).reduce((derivedState, key) => {\n        try {\n            const stateMetadata = metadata[key];\n            if (!stateMetadata) {\n                throw new Error(`No metadata found for '${String(key)}'`);\n            }\n            const propertyMetadata = stateMetadata[metadataProperty];\n            const stateProperty = state[key];\n            if (typeof propertyMetadata === 'function') {\n                derivedState[key] = propertyMetadata(stateProperty);\n            }\n            else if (propertyMetadata) {\n                derivedState[key] = stateProperty;\n            }\n            return derivedState;\n        }\n        catch (error) {\n            // Throw error after timeout so that it is captured as a console error\n            // (and by Sentry) without interrupting state-related operations\n            setTimeout(() => {\n                throw error;\n            });\n            return derivedState;\n        }\n    }, {});\n}\n//# sourceMappingURL=BaseControllerV2.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ControllerMessenger_actions, _ControllerMessenger_events, _ControllerMessenger_initialEventPayloadGetters, _ControllerMessenger_eventPayloadCache;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ControllerMessenger = void 0;\nconst RestrictedControllerMessenger_1 = require(\"./RestrictedControllerMessenger.cjs\");\n/**\n * A messaging system for controllers.\n *\n * The controller messenger allows registering functions as 'actions' that can be called elsewhere,\n * and it allows publishing and subscribing to events. Both actions and events are identified by\n * unique strings.\n *\n * @template Action - A type union of all Action types.\n * @template Event - A type union of all Event types.\n */\nclass ControllerMessenger {\n    constructor() {\n        _ControllerMessenger_actions.set(this, new Map());\n        _ControllerMessenger_events.set(this, new Map());\n        /**\n         * A map of functions for getting the initial event payload.\n         *\n         * Used only for events that represent state changes.\n         */\n        _ControllerMessenger_initialEventPayloadGetters.set(this, new Map());\n        /**\n         * A cache of selector return values for their respective handlers.\n         */\n        _ControllerMessenger_eventPayloadCache.set(this, new Map());\n    }\n    /**\n     * Register an action handler.\n     *\n     * This will make the registered function available to call via the `call` method.\n     *\n     * @param actionType - The action type. This is a unqiue identifier for this action.\n     * @param handler - The action handler. This function gets called when the `call` method is\n     * invoked with the given action type.\n     * @throws Will throw when a handler has been registered for this action type already.\n     * @template ActionType - A type union of Action type strings.\n     */\n    registerActionHandler(actionType, handler) {\n        if (__classPrivateFieldGet(this, _ControllerMessenger_actions, \"f\").has(actionType)) {\n            throw new Error(`A handler for ${actionType} has already been registered`);\n        }\n        __classPrivateFieldGet(this, _ControllerMessenger_actions, \"f\").set(actionType, handler);\n    }\n    /**\n     * Unregister an action handler.\n     *\n     * This will prevent this action from being called.\n     *\n     * @param actionType - The action type. This is a unqiue identifier for this action.\n     * @template ActionType - A type union of Action type strings.\n     */\n    unregisterActionHandler(actionType) {\n        __classPrivateFieldGet(this, _ControllerMessenger_actions, \"f\").delete(actionType);\n    }\n    /**\n     * Unregister all action handlers.\n     *\n     * This prevents all actions from being called.\n     */\n    clearActions() {\n        __classPrivateFieldGet(this, _ControllerMessenger_actions, \"f\").clear();\n    }\n    /**\n     * Call an action.\n     *\n     * This function will call the action handler corresponding to the given action type, passing\n     * along any parameters given.\n     *\n     * @param actionType - The action type. This is a unqiue identifier for this action.\n     * @param params - The action parameters. These must match the type of the parameters of the\n     * registered action handler.\n     * @throws Will throw when no handler has been registered for the given type.\n     * @template ActionType - A type union of Action type strings.\n     * @returns The action return value.\n     */\n    call(actionType, ...params) {\n        const handler = __classPrivateFieldGet(this, _ControllerMessenger_actions, \"f\").get(actionType);\n        if (!handler) {\n            throw new Error(`A handler for ${actionType} has not been registered`);\n        }\n        return handler(...params);\n    }\n    /**\n     * Register a function for getting the initial payload for an event.\n     *\n     * This is used for events that represent a state change, where the payload is the state.\n     * Registering a function for getting the payload allows event selectors to have a point of\n     * comparison the first time state changes.\n     *\n     * @param args - The arguments to this function\n     * @param args.eventType - The event type to register a payload for.\n     * @param args.getPayload - A function for retrieving the event payload.\n     */\n    registerInitialEventPayload({ eventType, getPayload, }) {\n        __classPrivateFieldGet(this, _ControllerMessenger_initialEventPayloadGetters, \"f\").set(eventType, getPayload);\n    }\n    /**\n     * Publish an event.\n     *\n     * Publishes the given payload to all subscribers of the given event type.\n     *\n     * Note that this method should never throw directly. Any errors from\n     * subscribers are captured and re-thrown in a timeout handler.\n     *\n     * @param eventType - The event type. This is a unique identifier for this event.\n     * @param payload - The event payload. The type of the parameters for each event handler must\n     * match the type of this payload.\n     * @template EventType - A type union of Event type strings.\n     */\n    publish(eventType, ...payload) {\n        const subscribers = __classPrivateFieldGet(this, _ControllerMessenger_events, \"f\").get(eventType);\n        if (subscribers) {\n            for (const [handler, selector] of subscribers.entries()) {\n                try {\n                    if (selector) {\n                        const previousValue = __classPrivateFieldGet(this, _ControllerMessenger_eventPayloadCache, \"f\").get(handler);\n                        const newValue = selector(...payload);\n                        if (newValue !== previousValue) {\n                            __classPrivateFieldGet(this, _ControllerMessenger_eventPayloadCache, \"f\").set(handler, newValue);\n                            handler(newValue, previousValue);\n                        }\n                    }\n                    else {\n                        handler(...payload);\n                    }\n                }\n                catch (error) {\n                    // Throw error after timeout so that it is capured as a console error\n                    // (and by Sentry) without interrupting the event publishing.\n                    setTimeout(() => {\n                        throw error;\n                    });\n                }\n            }\n        }\n    }\n    subscribe(eventType, handler, selector) {\n        let subscribers = __classPrivateFieldGet(this, _ControllerMessenger_events, \"f\").get(eventType);\n        if (!subscribers) {\n            subscribers = new Map();\n            __classPrivateFieldGet(this, _ControllerMessenger_events, \"f\").set(eventType, subscribers);\n        }\n        subscribers.set(handler, selector);\n        if (selector) {\n            const getPayload = __classPrivateFieldGet(this, _ControllerMessenger_initialEventPayloadGetters, \"f\").get(eventType);\n            if (getPayload) {\n                const initialValue = selector(...getPayload());\n                __classPrivateFieldGet(this, _ControllerMessenger_eventPayloadCache, \"f\").set(handler, initialValue);\n            }\n        }\n    }\n    /**\n     * Unsubscribe from an event.\n     *\n     * Unregisters the given function as an event handler for the given event.\n     *\n     * @param eventType - The event type. This is a unique identifier for this event.\n     * @param handler - The event handler to unregister.\n     * @throws Will throw when the given event handler is not registered for this event.\n     * @template EventType - A type union of Event type strings.\n     */\n    unsubscribe(eventType, handler) {\n        const subscribers = __classPrivateFieldGet(this, _ControllerMessenger_events, \"f\").get(eventType);\n        if (!subscribers || !subscribers.has(handler)) {\n            throw new Error(`Subscription not found for event: ${eventType}`);\n        }\n        const selector = subscribers.get(handler);\n        if (selector) {\n            __classPrivateFieldGet(this, _ControllerMessenger_eventPayloadCache, \"f\").delete(handler);\n        }\n        subscribers.delete(handler);\n    }\n    /**\n     * Clear subscriptions for a specific event.\n     *\n     * This will remove all subscribed handlers for this event.\n     *\n     * @param eventType - The event type. This is a unique identifier for this event.\n     * @template EventType - A type union of Event type strings.\n     */\n    clearEventSubscriptions(eventType) {\n        __classPrivateFieldGet(this, _ControllerMessenger_events, \"f\").delete(eventType);\n    }\n    /**\n     * Clear all subscriptions.\n     *\n     * This will remove all subscribed handlers for all events.\n     */\n    clearSubscriptions() {\n        __classPrivateFieldGet(this, _ControllerMessenger_events, \"f\").clear();\n    }\n    /**\n     * Get a restricted controller messenger\n     *\n     * Returns a wrapper around the controller messenger instance that restricts access to actions\n     * and events. The provided allowlists grant the ability to call the listed actions and subscribe\n     * to the listed events. The \"name\" provided grants ownership of any actions and events under\n     * that namespace. Ownership allows registering actions and publishing events, as well as\n     * unregistering actions and clearing event subscriptions.\n     *\n     * @param options - Controller messenger options.\n     * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n     * controller name). This grants \"ownership\" of actions and events under this namespace to the\n     * restricted controller messenger returned.\n     * @param options.allowedActions - The list of actions that this restricted controller messenger\n     * should be alowed to call.\n     * @param options.allowedEvents - The list of events that this restricted controller messenger\n     * should be allowed to subscribe to.\n     * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n     * module that this messenger has been created for. The authority to publish events and register\n     * actions under this namespace is granted to this restricted messenger instance.\n     * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n     * This must not include internal actions that are in the messenger's namespace.\n     * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n     * This must not include internal events that are in the messenger's namespace.\n     * @returns The restricted controller messenger.\n     */\n    getRestricted({ name, allowedActions, allowedEvents, }) {\n        return new RestrictedControllerMessenger_1.RestrictedControllerMessenger({\n            controllerMessenger: this,\n            name,\n            allowedActions,\n            allowedEvents,\n        });\n    }\n}\nexports.ControllerMessenger = ControllerMessenger;\n_ControllerMessenger_actions = new WeakMap(), _ControllerMessenger_events = new WeakMap(), _ControllerMessenger_initialEventPayloadGetters = new WeakMap(), _ControllerMessenger_eventPayloadCache = new WeakMap();\n//# sourceMappingURL=ControllerMessenger.cjs.map","import ObjectMultiplex from '@metamask/object-multiplex';\nimport { pipeline } from 'readable-stream';\n\nimport { EXTENSION_MESSAGES } from '../../../shared/constants/app';\n\n/**\n * Sets up stream multiplexing for the given stream\n *\n * @param {any} connectionStream - the stream to mux\n * @returns {stream.Stream} the multiplexed stream\n */\nexport function setupMultiplex(connectionStream) {\n  const mux = new ObjectMultiplex();\n  /**\n   * We are using this streams to send keep alive message between backend/ui without setting up a multiplexer\n   * We need to tell the multiplexer to ignore them, else we get the \" orphaned data for stream \" warnings\n   * https://github.com/MetaMask/object-multiplex/blob/280385401de84f57ef57054d92cfeb8361ef2680/src/ObjectMultiplex.ts#L63\n   */\n  mux.ignoreStream(EXTENSION_MESSAGES.CONNECTION_READY);\n  pipeline(connectionStream, mux, connectionStream, (err) => {\n    // For context and todos related to the error message match, see https://github.com/MetaMask/metamask-extension/issues/26337\n    if (err && !err.message?.match('Premature close')) {\n      console.error(err);\n    }\n  });\n  return mux;\n}\n\n/**\n * Checks if a stream is writable and usable\n *\n * @param {stream.Stream} stream - the stream to check\n * @returns {boolean} if the stream can be written to\n */\nexport function isStreamWritable(stream) {\n  /**\n   * Roughly:\n   *   stream.writable:\n   *     readable-stream-3 (confusingly: not mentioned in docs for streamsv2 and not consistently implemented there, despite v3 docs mentioning it as older)\n   *     readable-stream-4/NodeStream (here it's mentioned as introduced much later)\n   *   stream.destroyed:\n   *     readable-stream-4/NodeStream (docs mention it as introduced in v2 despite being absent from both implementation and docs of v2 and v3)\n   *   stream._writableState.ended:\n   *     Present in all implementations, seems like the most reasonable fallback for legacy.\n   *\n   * The only accurate references seem to be sources for Node.js and readable-stream. Intended compatibility must be ensured by tests.\n   */\n\n  return Boolean(\n    stream.writable && !stream.destroyed && !stream._writableState?.ended,\n  );\n}\n","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RestrictedControllerMessenger_instances, _RestrictedControllerMessenger_controllerMessenger, _RestrictedControllerMessenger_controllerName, _RestrictedControllerMessenger_allowedActions, _RestrictedControllerMessenger_allowedEvents, _RestrictedControllerMessenger_isAllowedEvent, _RestrictedControllerMessenger_isAllowedAction, _RestrictedControllerMessenger_isInCurrentNamespace;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestrictedControllerMessenger = void 0;\n/**\n * A restricted controller messenger.\n *\n * This acts as a wrapper around the controller messenger instance that restricts access to actions\n * and events.\n *\n * @template Namespace - The namespace for this messenger. Typically this is the name of the controller or\n * module that this messenger has been created for. The authority to publish events and register\n * actions under this namespace is granted to this restricted messenger instance.\n * @template Action - A type union of all Action types.\n * @template Event - A type union of all Event types.\n * @template AllowedAction - A type union of the 'type' string for any allowed actions.\n * This must not include internal actions that are in the messenger's namespace.\n * @template AllowedEvent - A type union of the 'type' string for any allowed events.\n * This must not include internal events that are in the messenger's namespace.\n */\nclass RestrictedControllerMessenger {\n    /**\n     * Constructs a restricted controller messenger\n     *\n     * The provided allowlists grant the ability to call the listed actions and subscribe to the\n     * listed events. The \"name\" provided grants ownership of any actions and events under that\n     * namespace. Ownership allows registering actions and publishing events, as well as\n     * unregistering actions and clearing event subscriptions.\n     *\n     * @param options - The controller options.\n     * @param options.controllerMessenger - The controller messenger instance that is being wrapped.\n     * @param options.name - The name of the thing this messenger will be handed to (e.g. the\n     * controller name). This grants \"ownership\" of actions and events under this namespace to the\n     * restricted controller messenger returned.\n     * @param options.allowedActions - The list of actions that this restricted controller messenger\n     * should be alowed to call.\n     * @param options.allowedEvents - The list of events that this restricted controller messenger\n     * should be allowed to subscribe to.\n     */\n    constructor({ controllerMessenger, name, allowedActions, allowedEvents, }) {\n        _RestrictedControllerMessenger_instances.add(this);\n        _RestrictedControllerMessenger_controllerMessenger.set(this, void 0);\n        _RestrictedControllerMessenger_controllerName.set(this, void 0);\n        _RestrictedControllerMessenger_allowedActions.set(this, void 0);\n        _RestrictedControllerMessenger_allowedEvents.set(this, void 0);\n        __classPrivateFieldSet(this, _RestrictedControllerMessenger_controllerMessenger, controllerMessenger, \"f\");\n        __classPrivateFieldSet(this, _RestrictedControllerMessenger_controllerName, name, \"f\");\n        __classPrivateFieldSet(this, _RestrictedControllerMessenger_allowedActions, allowedActions, \"f\");\n        __classPrivateFieldSet(this, _RestrictedControllerMessenger_allowedEvents, allowedEvents, \"f\");\n    }\n    /**\n     * Register an action handler.\n     *\n     * This will make the registered function available to call via the `call` method.\n     *\n     * The action type this handler is registered under *must* be in the current namespace.\n     *\n     * @param action - The action type. This is a unqiue identifier for this action.\n     * @param handler - The action handler. This function gets called when the `call` method is\n     * invoked with the given action type.\n     * @throws Will throw if an action handler that is not in the current namespace is being registered.\n     * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n     */\n    registerActionHandler(action, handler) {\n        /* istanbul ignore if */ // Branch unreachable with valid types\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isInCurrentNamespace).call(this, action)) {\n            throw new Error(`Only allowed registering action handlers prefixed by '${__classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerName, \"f\")}:'`);\n        }\n        __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").registerActionHandler(action, handler);\n    }\n    /**\n     * Unregister an action handler.\n     *\n     * This will prevent this action from being called.\n     *\n     * The action type being unregistered *must* be in the current namespace.\n     *\n     * @param action - The action type. This is a unique identifier for this action.\n     * @throws Will throw if an action handler that is not in the current namespace is being unregistered.\n     * @template ActionType - A type union of Action type strings that are namespaced by Namespace.\n     */\n    unregisterActionHandler(action) {\n        /* istanbul ignore if */ // Branch unreachable with valid types\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isInCurrentNamespace).call(this, action)) {\n            throw new Error(`Only allowed unregistering action handlers prefixed by '${__classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerName, \"f\")}:'`);\n        }\n        __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").unregisterActionHandler(action);\n    }\n    /**\n     * Call an action.\n     *\n     * This function will call the action handler corresponding to the given action type, passing\n     * along any parameters given.\n     *\n     * The action type being called must be on the action allowlist.\n     *\n     * @param actionType - The action type. This is a unqiue identifier for this action.\n     * @param params - The action parameters. These must match the type of the parameters of the\n     * registered action handler.\n     * @throws Will throw when no handler has been registered for the given type.\n     * @template ActionType - A type union of allowed Action type strings.\n     * @returns The action return value.\n     */\n    call(actionType, ...params) {\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isAllowedAction).call(this, actionType)) {\n            throw new Error(`Action missing from allow list: ${actionType}`);\n        }\n        const response = __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").call(actionType, ...params);\n        return response;\n    }\n    /**\n     * Register a function for getting the initial payload for an event.\n     *\n     * This is used for events that represent a state change, where the payload is the state.\n     * Registering a function for getting the payload allows event selectors to have a point of\n     * comparison the first time state changes.\n     *\n     * The event type *must* be in the current namespace\n     *\n     * @param args - The arguments to this function\n     * @param args.eventType - The event type to register a payload for.\n     * @param args.getPayload - A function for retrieving the event payload.\n     */\n    registerInitialEventPayload({ eventType, getPayload, }) {\n        /* istanbul ignore if */ // Branch unreachable with valid types\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isInCurrentNamespace).call(this, eventType)) {\n            throw new Error(`Only allowed publishing events prefixed by '${__classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerName, \"f\")}:'`);\n        }\n        __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").registerInitialEventPayload({\n            eventType,\n            getPayload,\n        });\n    }\n    /**\n     * Publish an event.\n     *\n     * Publishes the given payload to all subscribers of the given event type.\n     *\n     * The event type being published *must* be in the current namespace.\n     *\n     * @param event - The event type. This is a unique identifier for this event.\n     * @param payload - The event payload. The type of the parameters for each event handler must\n     * match the type of this payload.\n     * @throws Will throw if an event that is not in the current namespace is being published.\n     * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n     */\n    publish(event, ...payload) {\n        /* istanbul ignore if */ // Branch unreachable with valid types\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isInCurrentNamespace).call(this, event)) {\n            throw new Error(`Only allowed publishing events prefixed by '${__classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerName, \"f\")}:'`);\n        }\n        __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").publish(event, ...payload);\n    }\n    subscribe(event, handler, selector) {\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isAllowedEvent).call(this, event)) {\n            throw new Error(`Event missing from allow list: ${event}`);\n        }\n        if (selector) {\n            return __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").subscribe(event, handler, selector);\n        }\n        return __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").subscribe(event, handler);\n    }\n    /**\n     * Unsubscribe from an event.\n     *\n     * Unregisters the given function as an event handler for the given event.\n     *\n     * The event type being unsubscribed to must be on the event allowlist.\n     *\n     * @param event - The event type. This is a unique identifier for this event.\n     * @param handler - The event handler to unregister.\n     * @throws Will throw if the given event is not an allowed event for this controller messenger.\n     * @template EventType - A type union of allowed Event type strings.\n     */\n    unsubscribe(event, handler) {\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isAllowedEvent).call(this, event)) {\n            throw new Error(`Event missing from allow list: ${event}`);\n        }\n        __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").unsubscribe(event, handler);\n    }\n    /**\n     * Clear subscriptions for a specific event.\n     *\n     * This will remove all subscribed handlers for this event.\n     *\n     * The event type being cleared *must* be in the current namespace.\n     *\n     * @param event - The event type. This is a unique identifier for this event.\n     * @throws Will throw if a subscription for an event that is not in the current namespace is being cleared.\n     * @template EventType - A type union of Event type strings that are namespaced by Namespace.\n     */\n    clearEventSubscriptions(event) {\n        if (!__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isInCurrentNamespace).call(this, event)) {\n            throw new Error(`Only allowed clearing events prefixed by '${__classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerName, \"f\")}:'`);\n        }\n        __classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerMessenger, \"f\").clearEventSubscriptions(event);\n    }\n}\nexports.RestrictedControllerMessenger = RestrictedControllerMessenger;\n_RestrictedControllerMessenger_controllerMessenger = new WeakMap(), _RestrictedControllerMessenger_controllerName = new WeakMap(), _RestrictedControllerMessenger_allowedActions = new WeakMap(), _RestrictedControllerMessenger_allowedEvents = new WeakMap(), _RestrictedControllerMessenger_instances = new WeakSet(), _RestrictedControllerMessenger_isAllowedEvent = function _RestrictedControllerMessenger_isAllowedEvent(eventType) {\n    // Safely upcast to allow runtime check\n    const allowedEvents = __classPrivateFieldGet(this, _RestrictedControllerMessenger_allowedEvents, \"f\");\n    return (__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isInCurrentNamespace).call(this, eventType) ||\n        (allowedEvents !== null && allowedEvents.includes(eventType)));\n}, _RestrictedControllerMessenger_isAllowedAction = function _RestrictedControllerMessenger_isAllowedAction(actionType) {\n    // Safely upcast to allow runtime check\n    const allowedActions = __classPrivateFieldGet(this, _RestrictedControllerMessenger_allowedActions, \"f\");\n    return (__classPrivateFieldGet(this, _RestrictedControllerMessenger_instances, \"m\", _RestrictedControllerMessenger_isInCurrentNamespace).call(this, actionType) ||\n        (allowedActions !== null && allowedActions.includes(actionType)));\n}, _RestrictedControllerMessenger_isInCurrentNamespace = function _RestrictedControllerMessenger_isInCurrentNamespace(name) {\n    return name.startsWith(`${__classPrivateFieldGet(this, _RestrictedControllerMessenger_controllerName, \"f\")}:`);\n};\n//# sourceMappingURL=RestrictedControllerMessenger.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestrictedControllerMessenger = exports.ControllerMessenger = exports.isBaseController = exports.getPersistentState = exports.getAnonymizedState = exports.BaseController = exports.isBaseControllerV1 = exports.BaseControllerV1 = void 0;\nvar BaseControllerV1_1 = require(\"./BaseControllerV1.cjs\");\nObject.defineProperty(exports, \"BaseControllerV1\", { enumerable: true, get: function () { return BaseControllerV1_1.BaseControllerV1; } });\nObject.defineProperty(exports, \"isBaseControllerV1\", { enumerable: true, get: function () { return BaseControllerV1_1.isBaseControllerV1; } });\nvar BaseControllerV2_1 = require(\"./BaseControllerV2.cjs\");\nObject.defineProperty(exports, \"BaseController\", { enumerable: true, get: function () { return BaseControllerV2_1.BaseController; } });\nObject.defineProperty(exports, \"getAnonymizedState\", { enumerable: true, get: function () { return BaseControllerV2_1.getAnonymizedState; } });\nObject.defineProperty(exports, \"getPersistentState\", { enumerable: true, get: function () { return BaseControllerV2_1.getPersistentState; } });\nObject.defineProperty(exports, \"isBaseController\", { enumerable: true, get: function () { return BaseControllerV2_1.isBaseController; } });\nvar ControllerMessenger_1 = require(\"./ControllerMessenger.cjs\");\nObject.defineProperty(exports, \"ControllerMessenger\", { enumerable: true, get: function () { return ControllerMessenger_1.ControllerMessenger; } });\nvar RestrictedControllerMessenger_1 = require(\"./RestrictedControllerMessenger.cjs\");\nObject.defineProperty(exports, \"RestrictedControllerMessenger\", { enumerable: true, get: function () { return RestrictedControllerMessenger_1.RestrictedControllerMessenger; } });\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isVaultUpdated = exports.updateVaultWithDetail = exports.updateVault = exports.generateSalt = exports.serializeBufferForStorage = exports.serializeBufferFromStorage = exports.keyFromPassword = exports.exportKey = exports.importKey = exports.decryptWithKey = exports.decryptWithDetail = exports.decrypt = exports.encryptWithKey = exports.encryptWithDetail = exports.encrypt = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst EXPORT_FORMAT = 'jwk';\nconst DERIVED_KEY_FORMAT = 'AES-GCM';\nconst STRING_ENCODING = 'utf-8';\nconst OLD_DERIVATION_PARAMS = {\n    algorithm: 'PBKDF2',\n    params: {\n        iterations: 10000,\n    },\n};\nconst DEFAULT_DERIVATION_PARAMS = {\n    algorithm: 'PBKDF2',\n    params: {\n        iterations: 900000,\n    },\n};\n/**\n * Encrypts a data object that can be any serializable value using\n * a provided password.\n *\n * @param password - The password to use for encryption.\n * @param dataObj - The data to encrypt.\n * @param key - The CryptoKey to encrypt with.\n * @param salt - The salt to use to encrypt.\n * @param keyDerivationOptions - The options to use for key derivation.\n * @returns The encrypted vault.\n */\nasync function encrypt(password, dataObj, key, salt = generateSalt(), keyDerivationOptions = DEFAULT_DERIVATION_PARAMS) {\n    const cryptoKey = key || (await keyFromPassword(password, salt, false, keyDerivationOptions));\n    const payload = await encryptWithKey(cryptoKey, dataObj);\n    payload.salt = salt;\n    return JSON.stringify(payload);\n}\nexports.encrypt = encrypt;\n/**\n * Encrypts a data object that can be any serializable value using\n * a provided password.\n *\n * @param password - A password to use for encryption.\n * @param dataObj - The data to encrypt.\n * @param salt - The salt used to encrypt.\n * @param keyDerivationOptions - The options to use for key derivation.\n * @returns The vault and exported key string.\n */\nasync function encryptWithDetail(password, dataObj, salt = generateSalt(), keyDerivationOptions = DEFAULT_DERIVATION_PARAMS) {\n    const key = await keyFromPassword(password, salt, true, keyDerivationOptions);\n    const exportedKeyString = await exportKey(key);\n    const vault = await encrypt(password, dataObj, key, salt);\n    return {\n        vault,\n        exportedKeyString,\n    };\n}\nexports.encryptWithDetail = encryptWithDetail;\n/**\n * Encrypts the provided serializable javascript object using the\n * provided CryptoKey and returns an object containing the cypher text and\n * the initialization vector used.\n *\n * @param encryptionKey - The CryptoKey to encrypt with.\n * @param dataObj - A serializable JavaScript object to encrypt.\n * @returns The encrypted data.\n */\nasync function encryptWithKey(encryptionKey, dataObj) {\n    const data = JSON.stringify(dataObj);\n    const dataBuffer = Buffer.from(data, STRING_ENCODING);\n    const vector = global.crypto.getRandomValues(new Uint8Array(16));\n    const key = unwrapKey(encryptionKey);\n    const buf = await global.crypto.subtle.encrypt({\n        name: DERIVED_KEY_FORMAT,\n        iv: vector,\n    }, key, dataBuffer);\n    const buffer = new Uint8Array(buf);\n    const vectorStr = Buffer.from(vector).toString('base64');\n    const vaultStr = Buffer.from(buffer).toString('base64');\n    const encryptionResult = {\n        data: vaultStr,\n        iv: vectorStr,\n    };\n    if (isEncryptionKey(encryptionKey)) {\n        encryptionResult.keyMetadata = encryptionKey.derivationOptions;\n    }\n    return encryptionResult;\n}\nexports.encryptWithKey = encryptWithKey;\n/**\n * Given a password and a cypher text, decrypts the text and returns\n * the resulting value.\n *\n * @param password - The password to decrypt with.\n * @param text - The cypher text to decrypt.\n * @param encryptionKey - The key to decrypt with.\n * @returns The decrypted data.\n */\nasync function decrypt(password, text, encryptionKey) {\n    const payload = JSON.parse(text);\n    const { salt, keyMetadata } = payload;\n    const cryptoKey = unwrapKey(encryptionKey ||\n        (await keyFromPassword(password, salt, false, keyMetadata)));\n    const result = await decryptWithKey(cryptoKey, payload);\n    return result;\n}\nexports.decrypt = decrypt;\n/**\n * Given a password and a cypher text, decrypts the text and returns\n * the resulting value, keyString, and salt.\n *\n * @param password - The password to decrypt with.\n * @param text - The encrypted vault to decrypt.\n * @returns The decrypted vault along with the salt and exported key.\n */\nasync function decryptWithDetail(password, text) {\n    const payload = JSON.parse(text);\n    const { salt, keyMetadata } = payload;\n    const key = await keyFromPassword(password, salt, true, keyMetadata);\n    const exportedKeyString = await exportKey(key);\n    const vault = await decrypt(password, text, key);\n    return {\n        exportedKeyString,\n        vault,\n        salt,\n    };\n}\nexports.decryptWithDetail = decryptWithDetail;\n/**\n * Given a CryptoKey and an EncryptionResult object containing the initialization\n * vector (iv) and data to decrypt, return the resulting decrypted value.\n *\n * @param encryptionKey - The CryptoKey to decrypt with.\n * @param payload - The payload to decrypt, returned from an encryption method.\n * @returns The decrypted data.\n */\nasync function decryptWithKey(encryptionKey, payload) {\n    const encryptedData = Buffer.from(payload.data, 'base64');\n    const vector = Buffer.from(payload.iv, 'base64');\n    const key = unwrapKey(encryptionKey);\n    let decryptedObj;\n    try {\n        const result = await crypto.subtle.decrypt({ name: DERIVED_KEY_FORMAT, iv: vector }, key, encryptedData);\n        const decryptedData = new Uint8Array(result);\n        const decryptedStr = Buffer.from(decryptedData).toString(STRING_ENCODING);\n        decryptedObj = JSON.parse(decryptedStr);\n    }\n    catch (e) {\n        throw new Error('Incorrect password');\n    }\n    return decryptedObj;\n}\nexports.decryptWithKey = decryptWithKey;\n/**\n * Receives an exported CryptoKey string and creates a key.\n *\n * This function supports both JsonWebKey's and exported EncryptionKey's.\n * It will return a CryptoKey for the former, and an EncryptionKey for the latter.\n *\n * @param keyString - The key string to import.\n * @returns An EncryptionKey or a CryptoKey.\n */\nasync function importKey(keyString) {\n    const exportedEncryptionKey = JSON.parse(keyString);\n    if (isExportedEncryptionKey(exportedEncryptionKey)) {\n        return {\n            key: await window.crypto.subtle.importKey(EXPORT_FORMAT, exportedEncryptionKey.key, DERIVED_KEY_FORMAT, true, ['encrypt', 'decrypt']),\n            derivationOptions: exportedEncryptionKey.derivationOptions,\n        };\n    }\n    return await window.crypto.subtle.importKey(EXPORT_FORMAT, exportedEncryptionKey, DERIVED_KEY_FORMAT, true, ['encrypt', 'decrypt']);\n}\nexports.importKey = importKey;\n/**\n * Exports a key string from a CryptoKey or from an\n * EncryptionKey instance.\n *\n * @param encryptionKey - The CryptoKey or EncryptionKey to export.\n * @returns A key string.\n */\nasync function exportKey(encryptionKey) {\n    if (isEncryptionKey(encryptionKey)) {\n        return JSON.stringify({\n            key: await window.crypto.subtle.exportKey(EXPORT_FORMAT, encryptionKey.key),\n            derivationOptions: encryptionKey.derivationOptions,\n        });\n    }\n    return JSON.stringify(await window.crypto.subtle.exportKey(EXPORT_FORMAT, encryptionKey));\n}\nexports.exportKey = exportKey;\n// The overloads are already documented.\n// eslint-disable-next-line jsdoc/require-jsdoc\nasync function keyFromPassword(password, salt, exportable = false, opts = OLD_DERIVATION_PARAMS) {\n    const passBuffer = Buffer.from(password, STRING_ENCODING);\n    const saltBuffer = Buffer.from(salt, 'base64');\n    const key = await global.crypto.subtle.importKey('raw', passBuffer, { name: 'PBKDF2' }, false, ['deriveBits', 'deriveKey']);\n    const derivedKey = await global.crypto.subtle.deriveKey({\n        name: 'PBKDF2',\n        salt: saltBuffer,\n        iterations: opts.params.iterations,\n        hash: 'SHA-256',\n    }, key, { name: DERIVED_KEY_FORMAT, length: 256 }, exportable, ['encrypt', 'decrypt']);\n    return opts\n        ? {\n            key: derivedKey,\n            derivationOptions: opts,\n        }\n        : derivedKey;\n}\nexports.keyFromPassword = keyFromPassword;\n/**\n * Converts a hex string into a buffer.\n *\n * @param str - Hex encoded string.\n * @returns The string ecoded as a byte array.\n */\nfunction serializeBufferFromStorage(str) {\n    const stripStr = str.slice(0, 2) === '0x' ? str.slice(2) : str;\n    const buf = new Uint8Array(stripStr.length / 2);\n    for (let i = 0; i < stripStr.length; i += 2) {\n        const seg = stripStr.substr(i, 2);\n        buf[i / 2] = parseInt(seg, 16);\n    }\n    return buf;\n}\nexports.serializeBufferFromStorage = serializeBufferFromStorage;\n/**\n * Converts a buffer into a hex string ready for storage.\n *\n * @param buffer - Buffer to serialize.\n * @returns A hex encoded string.\n */\nfunction serializeBufferForStorage(buffer) {\n    let result = '0x';\n    buffer.forEach((value) => {\n        result += unprefixedHex(value);\n    });\n    return result;\n}\nexports.serializeBufferForStorage = serializeBufferForStorage;\n/**\n * Converts a number into hex value, and ensures proper leading 0\n * for single characters strings.\n *\n * @param num - The number to convert to string.\n * @returns An unprefixed hex string.\n */\nfunction unprefixedHex(num) {\n    let hex = num.toString(16);\n    while (hex.length < 2) {\n        hex = `0${hex}`;\n    }\n    return hex;\n}\n/**\n * Generates a random string for use as a salt in CryptoKey generation.\n *\n * @param byteCount - The number of bytes to generate.\n * @returns A randomly generated string.\n */\nfunction generateSalt(byteCount = 32) {\n    const view = new Uint8Array(byteCount);\n    global.crypto.getRandomValues(view);\n    // Uint8Array is a fixed length array and thus does not have methods like pop, etc\n    // so TypeScript complains about casting it to an array. Array.from() works here for\n    // getting the proper type, but it results in a functional difference. In order to\n    // cast, you have to first cast view to unknown then cast the unknown value to number[]\n    // TypeScript ftw: double opt in to write potentially type-mismatched code.\n    const b64encoded = btoa(String.fromCharCode.apply(null, view));\n    return b64encoded;\n}\nexports.generateSalt = generateSalt;\n/**\n * Updates the provided vault, re-encrypting\n * data with a safer algorithm if one is available.\n *\n * If the provided vault is already using the latest available encryption method,\n * it is returned as is.\n *\n * @param vault - The vault to update.\n * @param password - The password to use for encryption.\n * @param targetDerivationParams - The options to use for key derivation.\n * @returns A promise resolving to the updated vault.\n */\nasync function updateVault(vault, password, targetDerivationParams = DEFAULT_DERIVATION_PARAMS) {\n    if (isVaultUpdated(vault, targetDerivationParams)) {\n        return vault;\n    }\n    return encrypt(password, await decrypt(password, vault), undefined, undefined, targetDerivationParams);\n}\nexports.updateVault = updateVault;\n/**\n * Updates the provided vault and exported key, re-encrypting\n * data with a safer algorithm if one is available.\n *\n * If the provided vault is already using the latest available encryption method,\n * it is returned as is.\n *\n * @param encryptionResult - The encrypted data to update.\n * @param password - The password to use for encryption.\n * @param targetDerivationParams - The options to use for key derivation.\n * @returns A promise resolving to the updated encrypted data and exported key.\n */\nasync function updateVaultWithDetail(encryptionResult, password, targetDerivationParams = DEFAULT_DERIVATION_PARAMS) {\n    if (isVaultUpdated(encryptionResult.vault, targetDerivationParams)) {\n        return encryptionResult;\n    }\n    return encryptWithDetail(password, await decrypt(password, encryptionResult.vault), undefined, targetDerivationParams);\n}\nexports.updateVaultWithDetail = updateVaultWithDetail;\n/**\n * Checks if the provided key is an `EncryptionKey`.\n *\n * @param encryptionKey - The object to check.\n * @returns Whether or not the key is an `EncryptionKey`.\n */\nfunction isEncryptionKey(encryptionKey) {\n    return ((0, utils_1.isPlainObject)(encryptionKey) &&\n        (0, utils_1.hasProperty)(encryptionKey, 'key') &&\n        (0, utils_1.hasProperty)(encryptionKey, 'derivationOptions') &&\n        encryptionKey.key instanceof CryptoKey &&\n        isKeyDerivationOptions(encryptionKey.derivationOptions));\n}\n/**\n * Checks if the provided object is a `KeyDerivationOptions`.\n *\n * @param derivationOptions - The object to check.\n * @returns Whether or not the object is a `KeyDerivationOptions`.\n */\nfunction isKeyDerivationOptions(derivationOptions) {\n    return ((0, utils_1.isPlainObject)(derivationOptions) &&\n        (0, utils_1.hasProperty)(derivationOptions, 'algorithm') &&\n        (0, utils_1.hasProperty)(derivationOptions, 'params'));\n}\n/**\n * Checks if the provided key is an `ExportedEncryptionKey`.\n *\n * @param exportedKey - The object to check.\n * @returns Whether or not the object is an `ExportedEncryptionKey`.\n */\nfunction isExportedEncryptionKey(exportedKey) {\n    return ((0, utils_1.isPlainObject)(exportedKey) &&\n        (0, utils_1.hasProperty)(exportedKey, 'key') &&\n        (0, utils_1.hasProperty)(exportedKey, 'derivationOptions') &&\n        isKeyDerivationOptions(exportedKey.derivationOptions));\n}\n/**\n * Returns the `CryptoKey` from the provided encryption key.\n * If the provided key is a `CryptoKey`, it is returned as is.\n *\n * @param encryptionKey - The key to unwrap.\n * @returns The `CryptoKey` from the provided encryption key.\n */\nfunction unwrapKey(encryptionKey) {\n    return isEncryptionKey(encryptionKey) ? encryptionKey.key : encryptionKey;\n}\n/**\n * Checks if the provided vault is an updated encryption format.\n *\n * @param vault - The vault to check.\n * @param targetDerivationParams - The options to use for key derivation.\n * @returns Whether or not the vault is an updated encryption format.\n */\nfunction isVaultUpdated(vault, targetDerivationParams = DEFAULT_DERIVATION_PARAMS) {\n    const { keyMetadata } = JSON.parse(vault);\n    return (isKeyDerivationOptions(keyMetadata) &&\n        keyMetadata.algorithm === targetDerivationParams.algorithm &&\n        keyMetadata.params.iterations === targetDerivationParams.params.iterations);\n}\nexports.isVaultUpdated = isVaultUpdated;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","module.exports={\n  \"0x12652C6d93FDB6F4f37d48A8687783C782BB0d10\": {\n    \"name\": \"Entangle\",\n    \"logo\": \"NGL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NGL\",\n    \"decimals\": 18\n  },\n  \"0xB50721BCf8d664c30412Cfbc6cf7a15145234ad1\": {\n    \"name\": \"Arbitrum\",\n    \"logo\": \"Arb.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ARB\",\n    \"decimals\": 18\n  },\n  \"0x4D0528598F916Fd1D8dc80e5f54a8fEEDcFd4b18\": {\n    \"name\": \"Atoshi\",\n    \"logo\": \"ATOS.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ATOS\",\n    \"decimals\": 18\n  },\n  \"0x57B946008913B82E4dF85f501cbAeD910e58D26C\": {\n    \"name\": \"POND\",\n    \"logo\": \"POND.svg\",\n    \"erc20\": true,\n    \"symbol\": \"POND\",\n    \"decimals\": 18\n  },\n  \"0x5eed99d066a8CaF10f3E4327c1b3D8b673485eED\": {\n    \"name\": \"SEED\",\n    \"logo\": \"SEED.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SEED\",\n    \"decimals\": 18\n  },\n  \"0x487d62468282Bd04ddf976631C23128A425555EE\": {\n    \"name\": \"UPCX\",\n    \"logo\": \"UPC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"UPC\",\n    \"decimals\": 5\n  },\n  \"0xd3210F246Ae54C5a45A7b4A83315bf718F591bfc\": {\n    \"name\": \"ArkiTech\",\n    \"logo\": \"ARKI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ARKI\",\n    \"decimals\": 9\n  },\n  \"0x7d51888C5ABb7CDfa9cdd6A50673c7F8afAccD7F\": {\n    \"name\": \"DuckDAO Token\",\n    \"logo\": \"duckdao.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DD\",\n    \"decimals\": 18\n  },\n  \"0x49642110B712C1FD7261Bc074105E9E44676c68F\": {\n    \"name\": \"DinoLFG\",\n    \"logo\": \"DINO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DINO\",\n    \"decimals\": 18\n  },\n  \"0xB8BAa0e4287890a5F79863aB62b7F175ceCbD433\": {\n    \"name\": \"Swerve DAO Token\",\n    \"logo\": \"swrv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SWRV\",\n    \"decimals\": 18\n  },\n  \"0x8b79656FC38a04044E495e22fAD747126ca305C4\": {\n    \"name\": \"AgaveCoin\",\n    \"logo\": \"agvc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AGVC\",\n    \"decimals\": 18\n  },\n  \"0x967da4048cD07aB37855c090aAF366e4ce1b9F48\": {\n    \"name\": \"Ocean Token\",\n    \"logo\": \"ocean.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OCEAN\",\n    \"decimals\": 18\n  },\n  \"0x83e6f1E41cdd28eAcEB20Cb649155049Fac3D5Aa\": {\n    \"name\": \"PolkastarterToken\",\n    \"logo\": \"pols.svg\",\n    \"erc20\": true,\n    \"symbol\": \"POLS\",\n    \"decimals\": 18\n  },\n  \"0x08d967bb0134F2d07f7cfb6E246680c53927DD30\": {\n    \"name\": \"MATH Token\",\n    \"logo\": \"math.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MATH\",\n    \"decimals\": 18\n  },\n  \"0xccC8cb5229B0ac8069C51fd58367Fd1e622aFD97\": {\n    \"name\": \"Gods Unchained\",\n    \"logo\": \"gods.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GODS\",\n    \"decimals\": 18\n  },\n  \"0xF57e7e7C23978C3cAEC3C3548E3D615c346e79fF\": {\n    \"name\": \"Immutable X\",\n    \"logo\": \"imx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"IMX\",\n    \"decimals\": 18\n  },\n  \"0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f\": {\n    \"name\": \"Gho Token\",\n    \"logo\": \"GHO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GHO\",\n    \"decimals\": 18\n  },\n  \"0x536381a8628dBcC8C70aC9A30A7258442eAb4c92\": {\n    \"name\": \"Pantos Token \",\n    \"logo\": \"pan.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PAN\",\n    \"decimals\": 8\n  },\n  \"0x011E128Ec62840186F4A07E85E3ACe28858c5606\": {\n    \"name\": \"Valeria\",\n    \"logo\": \"val.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VAL\",\n    \"decimals\": 18\n  },\n  \"0x6c3ea9036406852006290770BEdFcAbA0e23A0e8\": {\n    \"name\": \"PayPal USD\",\n    \"logo\": \"pyusd.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PYUSD\",\n    \"decimals\": 6\n  },\n  \"0x8b385Ca3592A5EFc34E0C9fE663de56897F1751F\": {\n    \"name\": \"INFibit\",\n    \"logo\": \"INFibit.svg\",\n    \"erc20\": true,\n    \"symbol\": \"IBIT\",\n    \"decimals\": 18\n  },\n  \"0x9bf1D7D63dD7a4ce167CF4866388226EEefa702E\": {\n    \"name\": \"Ben Coin\",\n    \"logo\": \"BEN.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BEN\",\n    \"decimals\": 18\n  },\n  \"0xC7a2572fA8FDB0f7E81d6D3c4e3CCF78FB0DC374\": {\n    \"name\": \"Bens Finale\",\n    \"logo\": \"BensFinale.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FINALE\",\n    \"decimals\": 18\n  },\n  \"0x99cFB8cBA9c821B4a343c6a1Fc630465C9708DF5\": {\n    \"name\": \"Pepe Inu\",\n    \"logo\": \"PepeInu.svg\",\n    \"erc20\": true,\n    \"symbol\": \"$PEPEINU\",\n    \"decimals\": 18\n  },\n  \"0xCEBA2a8F6Ec221AEB5f3a7bcd15Cbc7e6a387bfb\": {\n    \"name\": \"Peter Pan\",\n    \"logo\": \"PeterPan.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PAN\",\n    \"decimals\": 18\n  },\n  \"0x467719aD09025FcC6cF6F8311755809d45a5E5f3\": {\n    \"name\": \"Axelar\",\n    \"logo\": \"axelar.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AXL\",\n    \"decimals\": 6\n  },\n  \"0x665F77fbA5975ab40Ce61c90F28007fb5b09D7B1\": {\n    \"name\": \"Genieswap\",\n    \"logo\": \"Genieswap.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GENIE\",\n    \"decimals\": 18\n  },\n  \"0x09E6d500D14D13e0528d2c0fff24E5ffF68237B4\": {\n    \"name\": \"Dohrnii\",\n    \"logo\": \"dhn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DHN\",\n    \"decimals\": 18\n  },\n  \"0xaE0585a259A3BCAB258D6EE02FB583f7B33C2a12\": {\n    \"name\": \"TempleCoin\",\n    \"logo\": \"tem.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TEM\",\n    \"decimals\": 18\n  },\n  \"0xaeDf386B755465871fF874E3E37Af5976E247064\": {\n    \"name\": \"Fasttoken\",\n    \"logo\": \"ftn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FTN\",\n    \"decimals\": 18\n  },\n  \"0x7BEF710a5759d197EC0Bf621c3Df802C2D60D848\": {\n    \"name\": \"SHOPX\",\n    \"logo\": \"SHOPX.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SHOPX\",\n    \"decimals\": 18\n  },\n  \"0xBa3335588D9403515223F109EdC4eB7269a9Ab5D\": {\n    \"name\": \"Gearbox\",\n    \"logo\": \"gear.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GEAR\",\n    \"decimals\": 18\n  },\n  \"0x9B6B9d2468E165a02FEf69E61B6D3D6CBC0Ac409\": {\n    \"name\": \"OASISLIFE\",\n    \"logo\": \"OFE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OFE\",\n    \"decimals\": 18\n  },\n  \"0xdf0162A6B3e9fDf0302c1e949739DeeaFafd8F89\": {\n    \"name\": \"METAOASIS\",\n    \"logo\": \"MOA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MOA\",\n    \"decimals\": 18\n  },\n  \"0xe4dae00bc1c46ea2F44ae71B1BEb8b171C15d812\": {\n    \"name\": \"PREMA\",\n    \"logo\": \"PREMA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PRMX\",\n    \"decimals\": 18\n  },\n  \"0x1416946162B1C2c871A73B07E932D2fB6C932069\": {\n    \"name\": \"Energi\",\n    \"logo\": \"energi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NRG\",\n    \"decimals\": 18\n  },\n\n  \"0x0d88eD6E74bbFD96B831231638b66C05571e824F\": {\n    \"name\": \"Aventus\",\n    \"logo\": \"aventus.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AVT\",\n    \"decimals\": 18\n  },\n  \"0x4FC15c91a9c4A9efB404174464687E8e128730C2\": {\n    \"name\": \"STAT\",\n    \"logo\": \"STAT.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"STAT\",\n    \"decimals\": 18\n  },\n  \"0x4ad7a056191F4c9519fAcd6D75FA94CA26003aCE\": {\n    \"name\": \"GoldPesa Option\",\n    \"logo\": \"GPO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GPO\",\n    \"decimals\": 18\n  },\n  \"0x767FE9EDC9E0dF98E07454847909b5E959D7ca0E\": {\n    \"name\": \"Illuvium\",\n    \"logo\": \"illuvium.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"ILV\",\n    \"decimals\": 18\n  },\n  \"0x85F17Cf997934a597031b2E18a9aB6ebD4B9f6a4\": {\n    \"name\": \"NEAR\",\n    \"logo\": \"NEAR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NEAR\",\n    \"decimals\": 24\n  },\n  \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\": {\n    \"name\": \"SushiSwap\",\n    \"logo\": \"sushi.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"SUSHI\",\n    \"decimals\": 18\n  },\n  \"0x881Ba05de1E78f549cC63a8f6Cabb1d4AD32250D\": {\n    \"name\": \"00\",\n    \"logo\": \"00.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"00\",\n    \"decimals\": 18\n  },\n  \"0xC211477cb4098aC22a98432781f5f26a1E07a4d4\": {\n    \"name\": \"CULTURED\",\n    \"logo\": \"CULTURED.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"CULTURED\",\n    \"decimals\": 18\n  },\n  \"0x86f2A193b116d1f9C53Ed26d97F77cDC8BcF4c2b\": {\n    \"name\": \"EHTAGA\",\n    \"logo\": \"EHTAGA.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"EHTAGA\",\n    \"decimals\": 18\n  },\n  \"0x54b79A15b2e2c55c736A66bb0A978fb840407aC8\": {\n    \"name\": \"FEVER\",\n    \"logo\": \"FEVER.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"FEVER\",\n    \"decimals\": 18\n  },\n  \"0x677c9fE4396D3D13A0F9013a8118eAE386C843A5\": {\n    \"name\": \"IAM\",\n    \"logo\": \"IAM.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"IAM\",\n    \"decimals\": 18\n  },\n  \"0xf63c65E855020E4B74f0Ad842D9537dA0E6162eC\": {\n    \"name\": \"ISH\",\n    \"logo\": \"ISH.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"ISH\",\n    \"decimals\": 18\n  },\n  \"0xc105fA46510F32c0444CCdB4e51065da95caA1B4\": {\n    \"name\": \"LITA\",\n    \"logo\": \"LITA.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"LITA\",\n    \"decimals\": 18\n  },\n  \"0x5401F949cDfa3E5aF32538167c0314230769209C\": {\n    \"name\": \"MAHCOIN\",\n    \"logo\": \"MAHCOIN.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"MAHCOIN\",\n    \"decimals\": 18\n  },\n  \"0x711D2C47aFf84B96AD0F36983b1c41Be2C509e18\": {\n    \"name\": \"NIKITA\",\n    \"logo\": \"NIKITA.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"NIKITA\",\n    \"decimals\": 18\n  },\n  \"0x3C44aEc33993b6830e5C2a705ea879b9C9ba0f7c\": {\n    \"name\": \"NYELA\",\n    \"logo\": \"NYELA.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"NYELA\",\n    \"decimals\": 18\n  },\n  \"0xfa9096c99e687ea8E0064C23DAaCFE87cc99E4Ba\": {\n    \"name\": \"RON\",\n    \"logo\": \"RON.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"RON\",\n    \"decimals\": 18\n  },\n  \"0x287a7C95aD00bBDd48599Ad2919567fD09281f07\": {\n    \"name\": \"STEELO\",\n    \"logo\": \"STEELO.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"STEELO\",\n    \"decimals\": 18\n  },\n  \"0x2Ec3275f7aCe4044e499823F511cd58250be8E3d\": {\n    \"name\": \"Privilege\",\n    \"logo\": \"prvg.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PRVG\",\n    \"decimals\": 8\n  },\n  \"0x65BB569FAaDD324a00883FdE4c46346cc96D5c0A\": {\n    \"name\": \"Provide\",\n    \"logo\": \"prvd.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PRVD\",\n    \"decimals\": 8\n  },\n  \"0xB4272071eCAdd69d933AdcD19cA99fe80664fc08\": {\n    \"name\": \"CryptoFranc\",\n    \"logo\": \"XCHF.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XCHF\",\n    \"decimals\": 18\n  },\n  \"0x5aFE3855358E112B5647B952709E6165e1c1eEEe\": {\n    \"name\": \"Safe Token\",\n    \"logo\": \"safe-green-token.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SAFE\",\n    \"decimals\": 18\n  },\n  \"0x9C8fF314C9Bc7F6e59A9d9225Fb22946427eDC03\": {\n    \"name\": \"Nouns\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"NOUN\",\n    \"decimals\": 0,\n    \"logo\": \"nouns.svg\"\n  },\n  \"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\": {\n    \"name\": \"BoredApeYachtClub\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"BAYC\",\n    \"decimals\": 0,\n    \"logo\": \"bayc.svg\"\n  },\n  \"0x08D7C0242953446436F34b4C78Fe9da38c73668d\": {\n    \"name\": \"PROOF Collective\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"PROOF\",\n    \"decimals\": 0,\n    \"logo\": \"proof.svg\"\n  },\n  \"0x23581767a106ae21c074b2276D25e5C3e136a68b\": {\n    \"name\": \"Moonbirds\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"MOONBIRD\",\n    \"decimals\": 0,\n    \"logo\": \"moonbirds.svg\"\n  },\n  \"0x60E4d786628Fea6478F785A6d7e704777c86a7c6\": {\n    \"name\": \"MutantApeYachtClub\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"MAYC\",\n    \"decimals\": 0,\n    \"logo\": \"mayc.svg\"\n  },\n  \"0x49cF6f5d44E70224e2E23fDcdd2C053F30aDA28B\": {\n    \"name\": \"CloneX\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"CloneX\",\n    \"decimals\": 0,\n    \"logo\": \"clonex.svg\"\n  },\n  \"0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e\": {\n    \"name\": \"Doodles\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"DOODLE\",\n    \"decimals\": 0,\n    \"logo\": \"doodles.svg\"\n  },\n  \"0xED5AF388653567Af2F388E6224dC7C4b3241C544\": {\n    \"name\": \"Azuki\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"AZUKI\",\n    \"decimals\": 0,\n    \"logo\": \"azuki.svg\"\n  },\n  \"0xa3AEe8BcE55BEeA1951EF834b99f3Ac60d1ABeeB\": {\n    \"name\": \"VeeFriends\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"VFT\",\n    \"decimals\": 0,\n    \"logo\": \"veefriends.svg\"\n  },\n  \"0x34d85c9CDeB23FA97cb08333b511ac86E1C4E258\": {\n    \"name\": \"Otherdeed\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"OTHR\",\n    \"decimals\": 0,\n    \"logo\": \"otherdeed.svg\"\n  },\n  \"0xBBc2AE13b23d715c30720F079fcd9B4a74093505\": {\n    \"name\": \"Ethernity Chain Token\",\n    \"logo\": \"ERN.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ERN\",\n    \"decimals\": 18\n  },\n  \"0x243cACb4D5fF6814AD668C3e225246efA886AD5a\": {\n    \"name\": \"Shina Inu\",\n    \"logo\": \"shina.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SHI\",\n    \"decimals\": 18\n  },\n  \"0xD057B63f5E69CF1B929b356b579Cba08D7688048\": {\n    \"name\": \"CoW Protocol Virtual Token\",\n    \"logo\": \"vCOW.svg\",\n    \"erc20\": true,\n    \"symbol\": \"vCOW\",\n    \"decimals\": 18\n  },\n  \"0xDEf1CA1fb7FBcDC777520aa7f396b4E015F497aB\": {\n    \"name\": \"CoW Protocol Token\",\n    \"logo\": \"COW.svg\",\n    \"erc20\": true,\n    \"symbol\": \"COW\",\n    \"decimals\": 18\n  },\n  \"0xEd04915c23f00A313a544955524EB7DBD823143d\": {\n    \"name\": \"Alchemy Pay\",\n    \"logo\": \"ACH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ACH\",\n    \"decimals\": 8\n  },\n  \"0xeDF6568618A00C6F0908Bf7758A16F76B6E04aF9\": {\n    \"name\": \"Arianee\",\n    \"logo\": \"aria20.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ARIA20\",\n    \"decimals\": 18\n  },\n  \"0x88D8DA2A8D0fA5b1f4E38030AC486aDE0AFA2798\": {\n    \"name\": \"Terrapass Coin\",\n    \"logo\": \"tpsc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TPSC\",\n    \"decimals\": 18\n  },\n  \"0x4730fB1463A6F1F44AEB45F6c5c422427f37F4D0\": {\n    \"name\": \"The 4th Pillar Token\",\n    \"logo\": \"four.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FOUR\",\n    \"decimals\": 18\n  },\n  \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\": {\n    \"name\": \"Idle DAO Token\",\n    \"logo\": \"idle.svg\",\n    \"erc20\": true,\n    \"symbol\": \"IDLE\",\n    \"decimals\": 18\n  },\n  \"0x6BeA7CFEF803D1e3d5f7C0103f7ded065644e197\": {\n    \"name\": \"Gamma\",\n    \"logo\": \"Gamma.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GAMMA\",\n    \"decimals\": 18\n  },\n  \"0x26805021988F1a45dC708B5FB75Fc75F21747D8c\": {\n    \"name\": \"xGamma\",\n    \"logo\": \"xGamma.svg\",\n    \"erc20\": true,\n    \"symbol\": \"xGAMMA\",\n    \"decimals\": 18\n  },\n  \"0xc7D9c108D4E1dD1484D3e2568d7f74bfD763d356\": {\n    \"name\": \"SORA Synthetic USD\",\n    \"logo\": \"sora-xstusd.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XSTUSD\",\n    \"decimals\": 18\n  },\n  \"0x519C1001D550C0a1DaE7d1fC220f7d14c2A521BB\": {\n    \"name\": \"Polkaswap\",\n    \"logo\": \"sora-pswap.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PSWAP\",\n    \"decimals\": 18\n  },\n  \"0x40FD72257597aA14C7231A7B1aaa29Fce868F677\": {\n    \"name\": \"SORA\",\n    \"logo\": \"sora-xor.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XOR\",\n    \"decimals\": 18\n  },\n  \"0x909E34d3f6124C324ac83DccA84b74398a6fa173\": {\n    \"name\": \"$ZKP Token\",\n    \"logo\": \"ZKP.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"$ZKP\",\n    \"decimals\": 18\n  },\n  \"0xe88f8313e61A97cEc1871EE37fBbe2a8bf3ed1E4\": {\n    \"name\": \"SORA Validator\",\n    \"logo\": \"sora-val.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VAL\",\n    \"decimals\": 18\n  },\n  \"0x7A58c0Be72BE218B41C608b7Fe7C5bB630736C71\": {\n    \"name\": \"ConstitutionDAO\",\n    \"logo\": \"PEOPLE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PEOPLE\",\n    \"decimals\": 18\n  },\n  \"0x32E6C34Cd57087aBBD59B5A4AECC4cB495924356\": {\n    \"name\": \"BitBase\",\n    \"logo\": \"BTBS.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BTBS\",\n    \"decimals\": 18\n  },\n  \"0x3fa400483487A489EC9b1dB29C4129063EEC4654\": {\n    \"name\": \"Cryptokek.com\",\n    \"logo\": \"cryptokek.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KEK\",\n    \"decimals\": 18\n  },\n  \"0xEd3D4e446A96dC3b181B64B75c3c70dA41dC3CBe\": {\n    \"name\": \"Vodra\",\n    \"logo\": \"Vodra.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VDR\",\n    \"decimals\": 18\n  },\n  \"0xb753428af26E81097e7fD17f40c88aaA3E04902c\": {\n    \"name\": \"Spice\",\n    \"logo\": \"sfi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SFI\",\n    \"decimals\": 18\n  },\n  \"0xd084944d3c05CD115C09d072B9F44bA3E0E45921\": {\n    \"name\": \"Manifold Finance\",\n    \"logo\": \"Manifold.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FOLD\",\n    \"decimals\": 18\n  },\n  \"0x9a0242b7a33DAcbe40eDb927834F96eB39f8fBCB\": {\n    \"name\": \"BABB\",\n    \"logo\": \"bax.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BAX\",\n    \"decimals\": 18\n  },\n  \"0x4Cf89ca06ad997bC732Dc876ed2A7F26a9E7f361\": {\n    \"name\": \"Mysterium\",\n    \"logo\": \"MYST.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MYST\",\n    \"decimals\": 18\n  },\n  \"0x697eF32B4a3F5a4C39dE1cB7563f24CA7BfC5947\": {\n    \"name\": \"Insula Token\",\n    \"logo\": \"Insula.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ISLA\",\n    \"decimals\": 18\n  },\n  \"0x62Dc4817588d53a056cBbD18231d91ffCcd34b2A\": {\n    \"name\": \"DeHive\",\n    \"logo\": \"dehive.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"DHV\",\n    \"decimals\": 18\n  },\n  \"0x8400D94A5cb0fa0D041a3788e395285d61c9ee5e\": {\n    \"name\": \"Unibright\",\n    \"logo\": \"ubt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"UBT\",\n    \"decimals\": 8\n  },\n  \"0xfAd45E47083e4607302aa43c65fB3106F1cd7607\": {\n    \"name\": \"Hoge Finance\",\n    \"logo\": \"HogeFinanceLogo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HOGE\",\n    \"decimals\": 9\n  },\n  \"0xBB0E17EF65F82Ab018d8EDd776e8DD940327B28b\": {\n    \"name\": \"Axie Infinity Shard\",\n    \"logo\": \"AXS.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AXS\",\n    \"decimals\": 18\n  },\n  \"0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25\": {\n    \"name\": \"Smooth Love Potion\",\n    \"logo\": \"SLP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SLP\",\n    \"decimals\": 0\n  },\n  \"0x10633216E7E8281e33c86F02Bf8e565a635D9770\": {\n    \"name\": \"Dvision Network\",\n    \"logo\": \"dvision.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DVI\",\n    \"decimals\": 18\n  },\n  \"0x898BAD2774EB97cF6b94605677F43b41871410B1\": {\n    \"name\": \"vEth2\",\n    \"logo\": \"vEth2.svg\",\n    \"erc20\": true,\n    \"symbol\": \"vEth2\",\n    \"decimals\": 18\n  },\n  \"0x321C2fE4446C7c963dc41Dd58879AF648838f98D\": {\n    \"name\": \"Cryptex Finance\",\n    \"logo\": \"ctx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CTX\",\n    \"decimals\": 18\n  },\n  \"0x16c52CeeCE2ed57dAd87319D91B5e3637d50aFa4\": {\n    \"name\": \"TCAP Token\",\n    \"logo\": \"tcap.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TCAP\",\n    \"decimals\": 18\n  },\n  \"0xE94B97b6b43639E238c851A7e693F50033EfD75C\": {\n    \"name\": \"Rainbow Token\",\n    \"logo\": \"halodao-rnbw.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RNBW\",\n    \"decimals\": 18\n  },\n  \"0x47BE779De87de6580d0548cde80710a93c502405\": {\n    \"name\": \"Rainbow Pool\",\n    \"logo\": \"halodao-xrnbw.svg\",\n    \"erc20\": true,\n    \"symbol\": \"xRNBW\",\n    \"decimals\": 18\n  },\n  \"0xe7aE6D0C56CACaf007b7e4d312f9af686a9E9a04\": {\n    \"name\": \"Vabble\",\n    \"logo\": \"VAB.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VAB\",\n    \"decimals\": 18\n  },\n  \"0x853d955aCEf822Db058eb8505911ED77F175b99e\": {\n    \"name\": \"Frax\",\n    \"logo\": \"frax.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FRAX\",\n    \"decimals\": 18\n  },\n  \"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0\": {\n    \"name\": \"Frax Share\",\n    \"logo\": \"fxs.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FXS\",\n    \"decimals\": 18\n  },\n  \"0x84810bcF08744d5862B8181f12d17bfd57d3b078\": {\n    \"name\": \"SharedStake\",\n    \"logo\": \"sharedstake.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SGT\",\n    \"decimals\": 18\n  },\n  \"0x75387e1287Dd85482aB66102DA9f6577E027f609\": {\n    \"name\": \"MindsyncAI\",\n    \"logo\": \"MAI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MAI\",\n    \"decimals\": 18\n  },\n  \"0x196f4727526eA7FB1e17b2071B3d8eAA38486988\": {\n    \"name\": \"Reserve\",\n    \"logo\": \"rsv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RSV\",\n    \"decimals\": 18\n  },\n  \"0x320623b8E4fF03373931769A31Fc52A4E78B5d70\": {\n    \"name\": \"Reserve Rights\",\n    \"logo\": \"rsr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RSR\",\n    \"decimals\": 18\n  },\n  \"0x1cF4592ebfFd730c7dc92c1bdFFDfc3B9EfCf29a\": {\n    \"name\": \"WAVES\",\n    \"logo\": \"waves.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WAVES\",\n    \"decimals\": 18\n  },\n  \"0x252739487C1fa66eaeaE7CED41d6358aB2a6bCa9\": {\n    \"name\": \"ArCoin\",\n    \"logo\": \"ArCoin.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RCOIN\",\n    \"decimals\": 8\n  },\n  \"0x18aAA7115705e8be94bfFEBDE57Af9BFc265B998\": {\n    \"name\": \"Audius\",\n    \"logo\": \"audius.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AUDIO\",\n    \"decimals\": 18\n  },\n  \"0x8E3BCC334657560253B83f08331d85267316e08a\": {\n    \"name\": \"Rubic\",\n    \"logo\": \"brbc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BRBC\",\n    \"decimals\": 18\n  },\n  \"0xca1207647Ff814039530D7d35df0e1Dd2e91Fa84\": {\n    \"name\": \"dHEDGE DAO Token\",\n    \"logo\": \"DHT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DHT\",\n    \"decimals\": 18\n  },\n  \"0x6243d8CEA23066d098a15582d81a598b4e8391F4\": {\n    \"name\": \"Reflexer Ungovernance Token\",\n    \"logo\": \"flx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FLX\",\n    \"decimals\": 18\n  },\n  \"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919\": {\n    \"name\": \"Rai Reflex Index\",\n    \"logo\": \"rai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RAI\",\n    \"decimals\": 18\n  },\n  \"0xF25c91C87e0B1fd9B4064Af0F427157AaB0193A7\": {\n    \"name\": \"BASIC Token\",\n    \"logo\": \"basic.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BASIC\",\n    \"decimals\": 18\n  },\n  \"0x53C8395465A84955c95159814461466053DedEDE\": {\n    \"name\": \"DeGate Token\",\n    \"logo\": \"DG.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DG\",\n    \"decimals\": 18\n  },\n  \"0xBCf9dBf8B14eD096B2BA08b7269356197fDd1b5D\": {\n    \"name\": \"Avaluse\",\n    \"logo\": \"avaluse.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AVAL\",\n    \"decimals\": 18\n  },\n  \"0x6E765D26388A17A6e86c49A8E41DF3F58aBcd337\": {\n    \"name\": \"Kangal\",\n    \"logo\": \"kangal.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KANGAL\",\n    \"decimals\": 18\n  },\n  \"0x9AF4f26941677C706cfEcf6D3379FF01bB85D5Ab\": {\n    \"name\": \"DomRaiderToken\",\n    \"logo\": \"drt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DRT\",\n    \"decimals\": 8\n  },\n  \"0x06B179e292f080871825beD5D722162fD96B4c95\": {\n    \"name\": \"10x.gg\",\n    \"logo\": \"xgg.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XGG\",\n    \"decimals\": 18\n  },\n  \"0xF29992D7b589A0A6bD2de7Be29a97A6EB73EaF85\": {\n    \"name\": \"DMScript\",\n    \"logo\": \"dmst.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DMST\",\n    \"decimals\": 18\n  },\n  \"0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5\": {\n    \"name\": \"Olympus\",\n    \"logo\": \"OHM.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OHM\",\n    \"decimals\": 9\n  },\n  \"0x0ab87046fBb341D058F17CBC4c1133F25a20a52f\": {\n    \"name\": \"Governance OHM\",\n    \"logo\": \"gOHM.svg\",\n    \"erc20\": true,\n    \"symbol\": \"gOHM\",\n    \"decimals\": 18\n  },\n  \"0xDd1Ad9A21Ce722C151A836373baBe42c868cE9a4\": {\n    \"name\": \"Universal Basic Income\",\n    \"logo\": \"ubi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"UBI\",\n    \"decimals\": 18\n  },\n  \"0xf293d23BF2CDc05411Ca0edDD588eb1977e8dcd4\": {\n    \"name\": \"Sylo\",\n    \"logo\": \"SYLO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SYLO\",\n    \"decimals\": 18\n  },\n  \"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84\": {\n    \"name\": \"Liquid staked Ether 2.0\",\n    \"logo\": \"stETH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"stETH\",\n    \"decimals\": 18\n  },\n  \"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0\": {\n    \"name\": \"Wrapped liquid staked Ether 2.0\",\n    \"logo\": \"wstETH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"wstETH\",\n    \"decimals\": 18\n  },\n  \"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32\": {\n    \"name\": \"Lido DAO Token\",\n    \"logo\": \"LDO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LDO\",\n    \"decimals\": 18\n  },\n  \"0xbd31EA8212119f94A611FA969881CBa3EA06Fa3d\": {\n    \"name\": \"LUNA Token\",\n    \"logo\": \"Luna.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LUNA\",\n    \"decimals\": 6\n  },\n  \"0xa693B19d2931d498c5B318dF961919BB4aee87a5\": {\n    \"name\": \"UST Token\",\n    \"logo\": \"UST.svg\",\n    \"erc20\": true,\n    \"symbol\": \"UST\",\n    \"decimals\": 6\n  },\n\n  \"0xd2877702675e6cEb975b4A1dFf9fb7BAF4C91ea9\": {\n    \"name\": \"LUNA Token - Shuttle\",\n    \"logo\": \"lunc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LUNC\",\n    \"decimals\": 18\n  },\n  \"0xa47c8bf37f92aBed4A126BDA807A7b7498661acD\": {\n    \"name\": \"UST Token - Shuttle\",\n    \"logo\": \"ustc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USTC\",\n    \"decimals\": 18\n  },\n  \"0xcAAfF72A8CbBfc5Cf343BA4e26f65a257065bFF1\": {\n    \"name\": \"KRT Token - Shuttle\",\n    \"logo\": \"KRT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KRT-S\",\n    \"decimals\": 18\n  },\n  \"0x676Ad1b33ae6423c6618C1AEcf53BAa29cf39EE5\": {\n    \"name\": \"SDT Token - Shuttle\",\n    \"logo\": \"SDT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SDT-S\",\n    \"decimals\": 18\n  },\n  \"0x156B36ec68FdBF84a925230BA96cb1Ca4c4bdE45\": {\n    \"name\": \"MNT Token - Shuttle\",\n    \"logo\": \"MNT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MNT-S\",\n    \"decimals\": 18\n  },\n  \"0x09a3EcAFa817268f77BE1283176B946C4ff2E608\": {\n    \"name\": \"MIR Token - Shuttle\",\n    \"logo\": \"MIR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MIR-S\",\n    \"decimals\": 18\n  },\n  \"0xd36932143F6eBDEDD872D5Fb0651f4B72Fd15a84\": {\n    \"name\": \"Mirror AAPL Token - Shuttle\",\n    \"logo\": \"mAAPL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mAAPL-S\",\n    \"decimals\": 18\n  },\n  \"0x59A921Db27Dd6d4d974745B7FfC5c33932653442\": {\n    \"name\": \"Mirror GOOGL Token - Shuttle\",\n    \"logo\": \"mGOOGL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mGOGL-S\",\n    \"decimals\": 18\n  },\n  \"0x21cA39943E91d704678F5D00b6616650F066fD63\": {\n    \"name\": \"Mirror TSLA Token - Shuttle\",\n    \"logo\": \"mTSLA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mTSLA-S\",\n    \"decimals\": 18\n  },\n  \"0xC8d674114bac90148d11D3C1d33C61835a0F9DCD\": {\n    \"name\": \"Mirror NFLX Token - Shuttle\",\n    \"logo\": \"mNFLX.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mNFLX-S\",\n    \"decimals\": 18\n  },\n  \"0x13B02c8dE71680e71F0820c996E4bE43c2F57d15\": {\n    \"name\": \"Mirror QQQ Token - Shuttle\",\n    \"logo\": \"mQQQ.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mQQQ-S\",\n    \"decimals\": 18\n  },\n  \"0xEdb0414627E6f1e3F082DE65cD4F9C693D78CCA9\": {\n    \"name\": \"Mirror TWTR Token - Shuttle\",\n    \"logo\": \"mTWTR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mTWTR-S\",\n    \"decimals\": 18\n  },\n  \"0x41BbEDd7286dAab5910a1f15d12CBda839852BD7\": {\n    \"name\": \"Mirror MSFT Token - Shuttle\",\n    \"logo\": \"mMSFT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mMSFT-S\",\n    \"decimals\": 18\n  },\n  \"0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7\": {\n    \"name\": \"Mirror AMZN Token - Shuttle\",\n    \"logo\": \"mAMZN.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mAMZN-S\",\n    \"decimals\": 18\n  },\n  \"0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72\": {\n    \"name\": \"Mirror BABA Token - Shuttle\",\n    \"logo\": \"mBABA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mBABA-S\",\n    \"decimals\": 18\n  },\n  \"0x1d350417d9787E000cc1b95d70E9536DcD91F373\": {\n    \"name\": \"Mirror IAU Token - Shuttle\",\n    \"logo\": \"mIAU.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mIAU-S\",\n    \"decimals\": 18\n  },\n  \"0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676\": {\n    \"name\": \"Mirror SLV Token - Shuttle\",\n    \"logo\": \"mSLV.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mSLV-S\",\n    \"decimals\": 18\n  },\n  \"0x31c63146a635EB7465e5853020b39713AC356991\": {\n    \"name\": \"Mirror USO Token - Shuttle\",\n    \"logo\": \"mUSO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mUSO-S\",\n    \"decimals\": 18\n  },\n  \"0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86\": {\n    \"name\": \"Mirror VIXY Token - Shuttle\",\n    \"logo\": \"mVIXY.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mVIXY-S\",\n    \"decimals\": 18\n  },\n  \"0x21BfBDa47A0B4B5b1248c767Ee49F7caA9B23697\": {\n    \"name\": \"OVR\",\n    \"logo\": \"OVR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OVR\",\n    \"decimals\": 18\n  },\n  \"0x4691937a7508860F876c9c0a2a617E7d9E945D4B\": {\n    \"name\": \"Wootrade Network\",\n    \"logo\": \"wootrade.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WOO\",\n    \"decimals\": 18\n  },\n  \"0xaf9f549774ecEDbD0966C52f250aCc548D3F36E5\": {\n    \"name\": \"RFUEL\",\n    \"logo\": \"RFUEL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RFUEL\",\n    \"decimals\": 18\n  },\n  \"0x7420B4b9a0110cdC71fB720908340C03F9Bc03EC\": {\n    \"name\": \"JasmyCoin\",\n    \"logo\": \"JASMY.svg\",\n    \"erc20\": true,\n    \"symbol\": \"JASMY\",\n    \"decimals\": 18\n  },\n  \"0x947AEb02304391f8fbE5B25D7D98D649b57b1788\": {\n    \"name\": \"Mandala Exchange Token\",\n    \"logo\": \"mandala.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MDX\",\n    \"decimals\": 18\n  },\n  \"0xCdeee767beD58c5325f68500115d4B722b3724EE\": {\n    \"name\": \"Carbon\",\n    \"logo\": \"CRBN.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CRBN\",\n    \"decimals\": 18\n  },\n  \"0xA4EED63db85311E22dF4473f87CcfC3DaDCFA3E3\": {\n    \"name\": \"Rubic\",\n    \"logo\": \"Rubic.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RBC\",\n    \"decimals\": 18\n  },\n  \"0x3A880652F47bFaa771908C07Dd8673A787dAEd3A\": {\n    \"name\": \"DerivaDAO\",\n    \"logo\": \"DDX.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DDX\",\n    \"decimals\": 18\n  },\n  \"0xbC396689893D065F41bc2C6EcbeE5e0085233447\": {\n    \"name\": \"Perpetual\",\n    \"logo\": \"PERP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PERP\",\n    \"decimals\": 18\n  },\n  \"0xeca82185adCE47f39c684352B0439f030f860318\": {\n    \"name\": \"Perlin\",\n    \"logo\": \"PERL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PERL\",\n    \"decimals\": 18\n  },\n  \"0xA1AFFfE3F4D611d252010E3EAf6f4D77088b0cd7\": {\n    \"name\": \"Reflect Finance\",\n    \"logo\": \"RFI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RFI\",\n    \"decimals\": 9\n  },\n  \"0xC0bA369c8Db6eB3924965e5c4FD0b4C1B91e305F\": {\n    \"name\": \"DLP Duck Token\",\n    \"logo\": \"dlpducktoken.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DUCK\",\n    \"decimals\": 18\n  },\n  \"0xFbEEa1C75E4c4465CB2FCCc9c6d6afe984558E20\": {\n    \"name\": \"DuckDaoDime\",\n    \"logo\": \"ddim.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DDIM\",\n    \"decimals\": 18\n  },\n  \"0x745407c86DF8DB893011912d3aB28e68B62E49B0\": {\n    \"name\": \"MahaDAO\",\n    \"logo\": \"MAHA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MAHA\",\n    \"decimals\": 18\n  },\n  \"0x8CC0F052fff7eaD7f2EdCCcaC895502E884a8a71\": {\n    \"name\": \"ARTH Valuecoin\",\n    \"logo\": \"ARTH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ARTH\",\n    \"decimals\": 18\n  },\n  \"0x3231Cb76718CDeF2155FC47b5286d82e6eDA273f\": {\n    \"name\": \"Monerium EUR\",\n    \"logo\": \"EURe.svg\",\n    \"erc20\": true,\n    \"symbol\": \"EURe\",\n    \"decimals\": 18\n  },\n  \"0x7ba92741Bf2A568abC6f1D3413c58c6e0244F8fD\": {\n    \"name\": \"Monerium GBP\",\n    \"logo\": \"GBPe.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GBPe\",\n    \"decimals\": 18\n  },\n  \"0xBc5142e0CC5eB16b47c63B0f033d4c2480853a52\": {\n    \"name\": \"Monerium USD\",\n    \"logo\": \"USDe.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDe\",\n    \"decimals\": 18\n  },\n  \"0xC642549743A93674cf38D6431f75d6443F88E3E2\": {\n    \"name\": \"Monerium ISK\",\n    \"logo\": \"ISKe.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ISKe\",\n    \"decimals\": 18\n  },\n  \"0x66a0f676479Cee1d7373f3DC2e2952778BfF5bd6\": {\n    \"name\": \"WISE Token\",\n    \"logo\": \"wise.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WISE\",\n    \"decimals\": 18\n  },\n  \"0x72F020f8f3E8fd9382705723Cd26380f8D0c66Bb\": {\n    \"name\": \"PlotX\",\n    \"logo\": \"plotx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PLOT\",\n    \"decimals\": 18\n  },\n  \"0x44197A4c44D6A059297cAf6be4F7e172BD56Caaf\": {\n    \"name\": \"ELTCOIN\",\n    \"logo\": \"ELTCOIN.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ELT\",\n    \"decimals\": 8\n  },\n  \"0x6781a0F84c7E9e846DCb84A9a5bd49333067b104\": {\n    \"name\": \"ZAP TOKEN\",\n    \"logo\": \"zapicon.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ZAP\",\n    \"decimals\": 18\n  },\n  \"0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7\": {\n    \"name\": \"SKALE\",\n    \"logo\": \"skl.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SKL\",\n    \"decimals\": 18\n  },\n  \"0x674C6Ad92Fd080e4004b2312b45f796a192D27a0\": {\n    \"name\": \"Neutrino USD\",\n    \"logo\": \"usdn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDN\",\n    \"decimals\": 18\n  },\n  \"0xE5CAeF4Af8780E59Df925470b050Fb23C43CA68C\": {\n    \"name\": \"Ferrum Network Token\",\n    \"logo\": \"frm.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FRM\",\n    \"decimals\": 6\n  },\n  \"0x998FFE1E43fAcffb941dc337dD0468d52bA5b48A\": {\n    \"name\": \"Rupiah Token\",\n    \"logo\": \"idrt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"IDRT\",\n    \"decimals\": 2\n  },\n  \"0x4E15361FD6b4BB609Fa63C81A2be19d873717870\": {\n    \"name\": \"Fantom\",\n    \"logo\": \"ftm.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FTM\",\n    \"decimals\": 18\n  },\n  \"0x557B933a7C2c45672B610F8954A3deB39a51A8Ca\": {\n    \"name\": \"REVV\",\n    \"logo\": \"revv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"REVV\",\n    \"decimals\": 18\n  },\n  \"0xFFC97d72E13E01096502Cb8Eb52dEe56f74DAD7B\": {\n    \"name\": \"Aave AAVE\",\n    \"logo\": \"aAAVE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aAAVE\",\n    \"decimals\": 18\n  },\n  \"0x05Ec93c0365baAeAbF7AefFb0972ea7ECdD39CF1\": {\n    \"name\": \"Aave BAT\",\n    \"logo\": \"aBAT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aBAT\",\n    \"decimals\": 18\n  },\n  \"0xA361718326c15715591c299427c62086F69923D9\": {\n    \"name\": \"Aave BUSD\",\n    \"logo\": \"aBUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aBUSD\",\n    \"decimals\": 18\n  },\n  \"0x028171bCA77440897B824Ca71D1c56caC55b68A3\": {\n    \"name\": \"Aave DAI\",\n    \"logo\": \"aDAI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aDAI\",\n    \"decimals\": 18\n  },\n  \"0xaC6Df26a590F08dcC95D5a4705ae8abbc88509Ef\": {\n    \"name\": \"Aave ENJ\",\n    \"logo\": \"aENJ.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aENJ\",\n    \"decimals\": 18\n  },\n  \"0xD37EE7e4f452C6638c96536e68090De8cBcdb583\": {\n    \"name\": \"Aave GUSD\",\n    \"logo\": \"aGUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aGUSD\",\n    \"decimals\": 2\n  },\n  \"0x39C6b3e42d6A679d7D776778Fe880BC9487C2EDA\": {\n    \"name\": \"Aave KNC\",\n    \"logo\": \"aKNC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aKNC\",\n    \"decimals\": 18\n  },\n  \"0xa06bC25B5805d5F8d82847D191Cb4Af5A3e873E0\": {\n    \"name\": \"Aave LINK\",\n    \"logo\": \"aLINK.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aLINK\",\n    \"decimals\": 18\n  },\n  \"0xa685a61171bb30d4072B338c80Cb7b2c865c873E\": {\n    \"name\": \"Aave MANA\",\n    \"logo\": \"aMANA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aMANA\",\n    \"decimals\": 18\n  },\n  \"0xc713e5E149D5D0715DcD1c156a020976e7E56B88\": {\n    \"name\": \"Aave MKR\",\n    \"logo\": \"aMKR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aMKR\",\n    \"decimals\": 18\n  },\n  \"0xCC12AbE4ff81c9378D670De1b57F8e0Dd228D77a\": {\n    \"name\": \"Aave REN\",\n    \"logo\": \"aREN.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aREN\",\n    \"decimals\": 18\n  },\n  \"0x35f6B052C598d933D69A4EEC4D04c73A191fE6c2\": {\n    \"name\": \"Aave SNX\",\n    \"logo\": \"aSNX.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aSNX\",\n    \"decimals\": 18\n  },\n  \"0x6C5024Cd4F8A59110119C56f8933403A539555EB\": {\n    \"name\": \"Aave SUSD\",\n    \"logo\": \"aSUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aSUSD\",\n    \"decimals\": 18\n  },\n  \"0x101cc05f4A51C0319f570d5E146a8C625198e636\": {\n    \"name\": \"Aave TUSD\",\n    \"logo\": \"aTUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aTUSD\",\n    \"decimals\": 18\n  },\n  \"0xB9D7CB55f463405CDfBe4E90a6D2Df01C2B92BF1\": {\n    \"name\": \"Aave UNI\",\n    \"logo\": \"aUNI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aUNI\",\n    \"decimals\": 18\n  },\n  \"0xBcca60bB61934080951369a648Fb03DF4F96263C\": {\n    \"name\": \"Aave USDC\",\n    \"logo\": \"aUSDC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aUSDC\",\n    \"decimals\": 6\n  },\n  \"0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811\": {\n    \"name\": \"Aave USDT\",\n    \"logo\": \"aUSDT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aUSDT\",\n    \"decimals\": 6\n  },\n  \"0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656\": {\n    \"name\": \"Aave WBTC\",\n    \"logo\": \"aWBTC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aWBTC\",\n    \"decimals\": 8\n  },\n  \"0x030bA81f1c18d280636F32af80b9AAd02Cf0854e\": {\n    \"name\": \"Aave WETH\",\n    \"logo\": \"aWETH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aWETH\",\n    \"decimals\": 18\n  },\n  \"0x5165d24277cD063F5ac44Efd447B27025e888f37\": {\n    \"name\": \"Aave YFI\",\n    \"logo\": \"aYFI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aYFI\",\n    \"decimals\": 18\n  },\n  \"0xdef1fac7Bf08f173D286BbBDcBeeADe695129840\": {\n    \"name\": \"Defi Factory Token\",\n    \"logo\": \"DEFT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DEFT\",\n    \"decimals\": 18\n  },\n  \"0xDf7FF54aAcAcbFf42dfe29DD6144A69b629f8C9e\": {\n    \"name\": \"Aave ZRX\",\n    \"logo\": \"aZRX.svg\",\n    \"erc20\": true,\n    \"symbol\": \"aZRX\",\n    \"decimals\": 18\n  },\n  \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\": {\n    \"name\": \"Aave\",\n    \"logo\": \"AAVE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AAVE\",\n    \"decimals\": 18\n  },\n  \"0x44e2deC86B9F0e0266E9AA66e10323A2bd69CF9A\": {\n    \"name\": \"Attrace\",\n    \"logo\": \"attr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ATTR\",\n    \"decimals\": 18\n  },\n  \"0x1Da87b114f35E1DC91F72bF57fc07A768Ad40Bb0\": {\n    \"name\": \"Equalizer\",\n    \"logo\": \"EQZ.svg\",\n    \"erc20\": true,\n    \"symbol\": \"EQZ\",\n    \"decimals\": 18\n  },\n  \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\": {\n    \"name\": \"Staked Aave\",\n    \"logo\": \"stkAAVE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"stAAVE\",\n    \"decimals\": 18\n  },\n  \"0xba9d4199faB4f26eFE3551D490E3821486f135Ba\": {\n    \"name\": \"SwissBorg\",\n    \"logo\": \"chsb.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CHSB\",\n    \"decimals\": 8\n  },\n  \"0x7DD9c5Cba05E151C895FDe1CF355C9A1D5DA6429\": {\n    \"name\": \"Golem Network Token\",\n    \"logo\": \"glm.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GLM\",\n    \"decimals\": 18\n  },\n  \"0x7240aC91f01233BaAf8b064248E80feaA5912BA3\": {\n    \"name\": \"OctoFi\",\n    \"logo\": \"octo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OCTO\",\n    \"decimals\": 18\n  },\n  \"0xff56Cc6b1E6dEd347aA0B7676C85AB0B3D08B0FA\": {\n    \"name\": \"Orbs\",\n    \"logo\": \"orbs.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ORBS\",\n    \"decimals\": 18\n  },\n  \"0x63f88A2298a5c4AEE3c216Aa6D926B184a4b2437\": {\n    \"name\": \"GAME Credits\",\n    \"logo\": \"GAMECreditsLogo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GAME\",\n    \"decimals\": 18\n  },\n  \"0x5150956E082C748Ca837a5dFa0a7C10CA4697f9c\": {\n    \"name\": \"Zeedex\",\n    \"logo\": \"zdex.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ZDEX\",\n    \"decimals\": 18\n  },\n  \"0x84cA8bc7997272c7CfB4D0Cd3D55cd942B3c9419\": {\n    \"name\": \"DIAdata\",\n    \"logo\": \"dia.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DIA\",\n    \"decimals\": 18\n  },\n  \"0xb78B3320493a4EFaa1028130C5Ba26f0B6085Ef8\": {\n    \"name\": \"Dracula\",\n    \"logo\": \"dracula.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DRC\",\n    \"decimals\": 18\n  },\n  \"0xF433089366899D83a9f26A773D59ec7eCF30355e\": {\n    \"name\": \"Metal\",\n    \"logo\": \"mtl.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MTL\",\n    \"decimals\": 8\n  },\n  \"0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC\": {\n    \"name\": \"KEEP\",\n    \"logo\": \"keep.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KEEP\",\n    \"decimals\": 18\n  },\n  \"0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa\": {\n    \"name\": \"tBTC\",\n    \"logo\": \"tbtc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TBTC\",\n    \"decimals\": 18\n  },\n  \"0xD7EFB00d12C2c13131FD319336Fdf952525dA2af\": {\n    \"name\": \"Proton\",\n    \"logo\": \"proton.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XPR\",\n    \"decimals\": 4\n  },\n  \"0x178c820f862B14f316509ec36b13123DA19A6054\": {\n    \"name\": \"Energy Web Token Bridged\",\n    \"logo\": \"ewtb.svg\",\n    \"erc20\": true,\n    \"symbol\": \"EWTB\",\n    \"decimals\": 18\n  },\n  \"0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39\": {\n    \"name\": \"HEX\",\n    \"logo\": \"hex.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HEX\",\n    \"decimals\": 8\n  },\n  \"0xFca59Cd816aB1eaD66534D82bc21E7515cE441CF\": {\n    \"name\": \"Rarible\",\n    \"logo\": \"rari.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RARI\",\n    \"decimals\": 18\n  },\n  \"0x7865af71cf0b288b4E7F654f4F7851EB46a2B7F8\": {\n    \"name\": \"Sentivate\",\n    \"logo\": \"sentivate.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SNTVT\",\n    \"decimals\": 18\n  },\n  \"0xa3d58c4E56fedCae3a7c43A725aeE9A71F0ece4e\": {\n    \"name\": \"Metronome\",\n    \"logo\": \"metronome.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MET\",\n    \"decimals\": 18\n  },\n  \"0x49d716DFe60b37379010A75329ae09428f17118d\": {\n    \"name\": \"PoolTogether Dai\",\n    \"logo\": \"pldai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PLDAI\",\n    \"decimals\": 18\n  },\n  \"0xfE6892654CBB05eB73d28DCc1Ff938f59666Fe9f\": {\n    \"name\": \"PoolTogether Sai\",\n    \"logo\": \"plsai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PLSAI\",\n    \"decimals\": 18\n  },\n  \"0x5732046A883704404F284Ce41FfADd5b007FD668\": {\n    \"name\": \"Bluzelle Token\",\n    \"logo\": \"Bluzelle.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BLZ\",\n    \"decimals\": 18\n  },\n  \"0xBD87447F48ad729C5c4b8bcb503e1395F62e8B98\": {\n    \"name\": \"PoolTogether USDC\",\n    \"logo\": \"plusdc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PLUSDC\",\n    \"decimals\": 6\n  },\n  \"0x69A95185ee2a045CDC4bCd1b1Df10710395e4e23\": {\n    \"name\": \"$Poolz Finance\",\n    \"logo\": \"Poolz.svg\",\n    \"erc20\": true,\n    \"symbol\": \"POOLZ\",\n    \"decimals\": 18\n  },\n  \"0x0adA190c81b814548ddC2F6AdC4a689ce7C1FE73\": {\n    \"name\": \"yAxis\",\n    \"logo\": \"yaxis.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YAXIS\",\n    \"decimals\": 18\n  },\n  \"0xb1dC9124c395c1e97773ab855d66E879f053A289\": {\n    \"name\": \"yAxis\",\n    \"logo\": \"yaxis.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YAX\",\n    \"decimals\": 18\n  },\n  \"0xeF31Cb88048416E301Fee1eA13e7664b887BA7e8\": {\n    \"name\": \"Staked yAxis\",\n    \"logo\": \"yaxis.svg\",\n    \"erc20\": true,\n    \"symbol\": \"sYAX\",\n    \"decimals\": 18\n  },\n  \"0x28cb7e841ee97947a86B06fA4090C8451f64c0be\": {\n    \"name\": \"YF Link\",\n    \"logo\": \"YFL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YFL\",\n    \"decimals\": 18\n  },\n  \"0x75D1aA733920b14fC74c9F6e6faB7ac1EcE8482E\": {\n    \"name\": \"YFLink Staking Share\",\n    \"logo\": \"YFL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"yYFL\",\n    \"decimals\": 18\n  },\n  \"0x7b760D06E401f85545F3B50c44bf5B05308b7b62\": {\n    \"name\": \"YFLink USD\",\n    \"logo\": \"YFLUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YFLUSD\",\n    \"decimals\": 18\n  },\n  \"0x8282df223AC402d04B2097d16f758Af4F70e7Db0\": {\n    \"name\": \"YFLink Synthetic\",\n    \"logo\": \"sYFL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"sYFL\",\n    \"decimals\": 18\n  },\n  \"0x008377EB0C62cE8e0BA3D7Bb4A5638591f21588E\": {\n    \"name\": \"YFLink Bond\",\n    \"logo\": \"bYFL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"bYFL\",\n    \"decimals\": 18\n  },\n  \"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e\": {\n    \"name\": \"yearn.finance\",\n    \"logo\": \"yfi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YFI\",\n    \"decimals\": 18\n  },\n  \"0x261b45D85cCFeAbb11F022eBa346ee8D1cd488c0\": {\n    \"name\": \"rDAI\",\n    \"logo\": \"rdai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"rDAI\",\n    \"decimals\": 18\n  },\n  \"0xea8b224eDD3e342DEb514C4176c2E72Bcce6fFF9\": {\n    \"name\": \"rSAI\",\n    \"logo\": \"rsai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"rSAI\",\n    \"decimals\": 18\n  },\n  \"0x12B19D3e2ccc14Da04FAe33e63652ce469b3F2FD\": {\n    \"name\": \"GridPlus\",\n    \"logo\": \"GridPlus.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GRID\",\n    \"decimals\": 12\n  },\n  \"0xDb05EA0877A2622883941b939f0bb11d1ac7c400\": {\n    \"name\": \"Opacity\",\n    \"logo\": \"opct.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OPCT\",\n    \"decimals\": 18\n  },\n  \"0x4575f41308EC1483f3d399aa9a2826d74Da13Deb\": {\n    \"name\": \"Orchid\",\n    \"logo\": \"OXT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OXT\",\n    \"decimals\": 18\n  },\n  \"0x4CC19356f2D37338b9802aa8E8fc58B0373296E7\": {\n    \"name\": \"Selfkey\",\n    \"logo\": \"KEY.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KEY\",\n    \"decimals\": 18\n  },\n  \"0x92A5B04D0ED5D94D7a193d1d334D3D16996f4E13\": {\n    \"name\": \"Eristica\",\n    \"logo\": \"Eristica.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ERT\",\n    \"decimals\": 18\n  },\n  \"0xdAC17F958D2ee523a2206206994597C13D831ec7\": {\n    \"name\": \"Tether USD\",\n    \"logo\": \"usdt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDT\",\n    \"decimals\": 6\n  },\n  \"0x06AF07097C9Eeb7fD685c692751D5C66dB49c215\": {\n    \"name\": \"Chai\",\n    \"logo\": \"CHAI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CHAI\",\n    \"decimals\": 18\n  },\n  \"0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828\": {\n    \"name\": \"UMA\",\n    \"logo\": \"uma.svg\",\n    \"erc20\": true,\n    \"symbol\": \"UMA\",\n    \"decimals\": 18\n  },\n  \"0x5f778ec4B31a506c1Dfd8b06F131E9B451a61D39\": {\n    \"name\": \"UPX Token\",\n    \"logo\": \"UPX.svg\",\n    \"erc20\": true,\n    \"symbol\": \"UPX\",\n    \"decimals\": 18\n  },\n  \"0xb1CD6e4153B2a390Cf00A6556b0fC1458C4A5533\": {\n    \"name\": \"ETHBNT Liquidity Pool\",\n    \"logo\": \"ETHBNT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ETHBNT\",\n    \"decimals\": 18\n  },\n  \"0xf0Ee6b27b759C9893Ce4f094b49ad28fd15A23e4\": {\n    \"name\": \"Enigma\",\n    \"logo\": \"enigma.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ENG\",\n    \"decimals\": 8\n  },\n  \"0xaaAEBE6Fe48E54f431b0C390CfaF0b017d09D42d\": {\n    \"name\": \"Celsius\",\n    \"logo\": \"celsius.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CEL\",\n    \"decimals\": 4\n  },\n  \"0xb683D83a532e2Cb7DFa5275eED3698436371cc9f\": {\n    \"name\": \"BTU\",\n    \"logo\": \"BTU.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BTU\",\n    \"decimals\": 18\n  },\n  \"0x746DdA2ea243400D5a63e0700F190aB79f06489e\": {\n    \"name\": \"BOSAGORA\",\n    \"logo\": \"BOA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BOA\",\n    \"decimals\": 7\n  },\n  \"0x5D858bcd53E085920620549214a8b27CE2f04670\": {\n    \"name\": \"POP Network Token\",\n    \"logo\": \"POP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"POP\",\n    \"decimals\": 18\n  },\n  \"0x048Fe49BE32adfC9ED68C37D32B5ec9Df17b3603\": {\n    \"name\": \"Skrumble Network V2\",\n    \"logo\": \"skm.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SKM\",\n    \"decimals\": 18\n  },\n  \"0x16EA01aCB4b0Bca2000ee5473348B6937ee6f72F\": {\n    \"name\": \"Enecuum\",\n    \"logo\": \"ENQ-logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ENQ\",\n    \"decimals\": 10\n  },\n  \"0xE5B826Ca2Ca02F09c1725e9bd98d9a8874C30532\": {\n    \"name\": \"ZEON Network\",\n    \"logo\": \"ZEON_logo.png\",\n    \"erc20\": true,\n    \"symbol\": \"ZEON\",\n    \"decimals\": 18\n  },\n  \"0x13cb85823f78Cff38f0B0E90D3e975b8CB3AAd64\": {\n    \"name\": \"REMIIT REMI Token\",\n    \"logo\": \"remi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"REMI\",\n    \"decimals\": 18\n  },\n  \"0x93a7174dafd31d13400cD9fa01f4e5B5BAa00D39\": {\n    \"name\": \"Shaka\",\n    \"logo\": \"hak.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HAK\",\n    \"decimals\": 18\n  },\n  \"0x6fB3e0A217407EFFf7Ca062D46c26E5d60a14d69\": {\n    \"name\": \"IoTeX\",\n    \"logo\": \"iotex.svg\",\n    \"erc20\": true,\n    \"symbol\": \"IOTX\",\n    \"decimals\": 18\n  },\n  \"0xE5a3229CCb22b6484594973A03a3851dCd948756\": {\n    \"name\": \"RAE Token\",\n    \"logo\": \"rae.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RAE\",\n    \"decimals\": 18\n  },\n  \"0x4470BB87d77b963A013DB939BE332f927f2b992e\": {\n    \"name\": \"AdEx Legacy Token\",\n    \"logo\": \"adex.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ADXL\",\n    \"decimals\": 4\n  },\n  \"0xADE00C28244d5CE17D72E40330B1c318cD12B7c3\": {\n    \"name\": \"AdEx Token\",\n    \"logo\": \"adex.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ADX\",\n    \"decimals\": 18\n  },\n  \"0xDc5864eDe28BD4405aa04d93E05A0531797D9D59\": {\n    \"name\": \"Falcon\",\n    \"logo\": \"fnt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FNT\",\n    \"decimals\": 6\n  },\n  \"0x1966d718A565566e8E202792658D7b5Ff4ECe469\": {\n    \"name\": \"nDEX\",\n    \"logo\": \"nDEX.png\",\n    \"erc20\": true,\n    \"symbol\": \"NDX\",\n    \"decimals\": 18\n  },\n  \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\": {\n    \"name\": \"Wrapped BTC\",\n    \"logo\": \"wbtc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WBTC\",\n    \"decimals\": 8\n  },\n  \"0x150b0b96933B75Ce27af8b92441F8fB683bF9739\": {\n    \"name\": \"Dragonereum Gold\",\n    \"logo\": \"gold.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GOLD\",\n    \"decimals\": 18\n  },\n  \"0x82f4dED9Cec9B5750FBFf5C2185AEe35AfC16587\": {\n    \"name\": \"DreamTeam Token\",\n    \"logo\": \"dream.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DREAM\",\n    \"decimals\": 6\n  },\n  \"0x5d60d8d7eF6d37E16EBABc324de3bE57f135e0BC\": {\n    \"name\": \"MyBit\",\n    \"logo\": \"MYB.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MYB\",\n    \"decimals\": 18\n  },\n  \"0x01FA555c97D7958Fa6f771f3BbD5CCD508f81e22\": {\n    \"name\": \"Civil Token\",\n    \"logo\": \"CVL_token.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CVL\",\n    \"decimals\": 18\n  },\n  \"0x5adc961D6AC3f7062D2eA45FEFB8D8167d44b190\": {\n    \"name\": \"Dether\",\n    \"logo\": \"dether.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DTH\",\n    \"decimals\": 18\n  },\n  \"0x3F17Dd476faF0a4855572F0B6ed5115D9bBA22AD\": {\n    \"name\": \"Wibson\",\n    \"logo\": \"wibson-logo.png\",\n    \"erc20\": true,\n    \"symbol\": \"WIB\",\n    \"decimals\": 9\n  },\n  \"0xDF347911910b6c9A4286bA8E2EE5ea4a39eB2134\": {\n    \"name\": \"Bob's Repair\",\n    \"logo\": \"bobsrepair.png\",\n    \"erc20\": true,\n    \"symbol\": \"BOB\",\n    \"decimals\": 18\n  },\n  \"0x3505F494c3f0fed0B594E01Fa41Dd3967645ca39\": {\n    \"name\": \"SWARM\",\n    \"logo\": \"swarm.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SWM\",\n    \"decimals\": 18\n  },\n  \"0x6863bE0e7CF7ce860A574760e9020D519a8bDC47\": {\n    \"name\": \"On.Live\",\n    \"logo\": \"onlive.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ONL\",\n    \"decimals\": 18\n  },\n  \"0xea5f88E54d982Cbb0c441cde4E79bC305e5b43Bc\": {\n    \"name\": \"Pareto\",\n    \"logo\": \"ParetoLogo.png\",\n    \"erc20\": true,\n    \"symbol\": \"PARETO\",\n    \"decimals\": 18\n  },\n  \"0x2e91E3e54C5788e9FdD6A181497FDcEa1De1bcc1\": {\n    \"name\": \"Hercules\",\n    \"logo\": \"herc.png\",\n    \"erc20\": true,\n    \"symbol\": \"HERC\",\n    \"decimals\": 18\n  },\n  \"0x4946Fcea7C692606e8908002e55A582af44AC121\": {\n    \"name\": \"FOAM\",\n    \"logo\": \"FOAM.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FOAM\",\n    \"decimals\": 18\n  },\n  \"0x4D807509aECe24C0fa5A102b6a3B059Ec6E14392\": {\n    \"name\": \"Menlo One\",\n    \"logo\": \"Menlo_One.png\",\n    \"erc20\": true,\n    \"symbol\": \"ONE\",\n    \"decimals\": 18\n  },\n  \"0x27054b13b1B798B345b591a4d22e6562d47eA75a\": {\n    \"name\": \"AirSwap Token\",\n    \"logo\": \"AirSwapLogo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AST\",\n    \"decimals\": 4\n  },\n  \"0x8D5682941cE456900b12d47ac06a88b47C764CE1\": {\n    \"name\": \"RightMesh Token\",\n    \"logo\": \"Rmesh.png\",\n    \"erc20\": true,\n    \"symbol\": \"RMESH\",\n    \"decimals\": 18\n  },\n  \"0xDDe12a12A6f67156e0DA672be05c374e1B0a3e57\": {\n    \"name\": \"JOYSO\",\n    \"logo\": \"JOY.png\",\n    \"erc20\": true,\n    \"symbol\": \"JOY\",\n    \"decimals\": 6\n  },\n  \"0x0D262e5dC4A06a0F1c90cE79C7a60C09DfC884E4\": {\n    \"name\": \"JET8 Token\",\n    \"logo\": \"J8T.svg\",\n    \"erc20\": true,\n    \"symbol\": \"J8T\",\n    \"decimals\": 8\n  },\n  \"0x4a220E6096B25EADb88358cb44068A3248254675\": {\n    \"name\": \"Quant Network\",\n    \"logo\": \"quant-network.svg\",\n    \"erc20\": true,\n    \"symbol\": \"QNT\",\n    \"decimals\": 18\n  },\n  \"0xBC86727E770de68B1060C91f6BB6945c73e10388\": {\n    \"name\": \"Ink Protocol\",\n    \"logo\": \"ink_protocol.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XNK\",\n    \"decimals\": 18\n  },\n  \"0xa95592DCFfA3C080B4B40E459c5f5692F67DB7F8\": {\n    \"name\": \"ELY Token\",\n    \"logo\": \"ely.png\",\n    \"erc20\": true,\n    \"symbol\": \"ELY\",\n    \"decimals\": 18\n  },\n  \"0x9E46A38F5DaaBe8683E10793b06749EEF7D733d1\": {\n    \"name\": \"PolySwarm Nectar\",\n    \"logo\": \"polyswarm_nectar.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NCT\",\n    \"decimals\": 18\n  },\n  \"0xe1A178B681BD05964d3e3Ed33AE731577d9d96dD\": {\n    \"name\": \"BOX Token\",\n    \"logo\": \"box_token.png\",\n    \"erc20\": true,\n    \"symbol\": \"BOX\",\n    \"decimals\": 18\n  },\n  \"0x543Ff227F64Aa17eA132Bf9886cAb5DB55DCAddf\": {\n    \"name\": \"DAOstack\",\n    \"logo\": \"gen.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GEN\",\n    \"decimals\": 18\n  },\n  \"0x6aEDbF8dFF31437220dF351950Ba2a3362168d1b\": {\n    \"name\": \"Dragonglass\",\n    \"logo\": \"dragonglass.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DGS\",\n    \"decimals\": 8\n  },\n  \"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07\": {\n    \"name\": \"OmiseGO\",\n    \"logo\": \"omg.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OMG\",\n    \"decimals\": 18\n  },\n  \"0x99ea4dB9EE77ACD40B119BD1dC4E33e1C070b80d\": {\n    \"name\": \"Quantstamp\",\n    \"logo\": \"qsp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"QSP\",\n    \"decimals\": 18\n  },\n  \"0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC\": {\n    \"name\": \"Storj\",\n    \"logo\": \"storj.svg\",\n    \"erc20\": true,\n    \"symbol\": \"STORJ\",\n    \"decimals\": 8\n  },\n  \"0xD8E3FB3b08eBA982F2754988d70D57eDc0055ae6\": {\n    \"name\": \"Zoracles\",\n    \"logo\": \"zora.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ZORA\",\n    \"decimals\": 9\n  },\n  \"0xF938424F7210f31dF2Aee3011291b658f872e91e\": {\n    \"name\": \"VISOR\",\n    \"logo\": \"VISR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VISR\",\n    \"decimals\": 18\n  },\n  \"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942\": {\n    \"name\": \"Decentraland\",\n    \"logo\": \"mana.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MANA\",\n    \"decimals\": 18\n  },\n  \"0x0F513fFb4926ff82D7F60A05069047AcA295C413\": {\n    \"name\": \"CrowdstartCoin\",\n    \"logo\": \"XSC_Logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XSC\",\n    \"decimals\": 18\n  },\n  \"0x5BC7e5f0Ab8b2E10D2D0a3F21739FCe62459aeF3\": {\n    \"name\": \"Hut34 Entropy Token\",\n    \"logo\": \"ENTRP.png\",\n    \"symbol\": \"ENTRP\",\n    \"erc20\": true,\n    \"decimals\": 18\n  },\n  \"0x946112efaB61C3636CBD52DE2E1392D7A75A6f01\": {\n    \"name\": \"HYDRO TOKEN\",\n    \"logo\": \"hydro.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HYDRO\",\n    \"decimals\": 18\n  },\n  \"0x2604FA406Be957E542BEb89E6754fCdE6815e83f\": {\n    \"name\": \"Playkey Token\",\n    \"logo\": \"playkey.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PKT\",\n    \"decimals\": 18\n  },\n  \"0xE41d2489571d322189246DaFA5ebDe1F4699F498\": {\n    \"name\": \"0x\",\n    \"logo\": \"zrx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ZRX\",\n    \"decimals\": 18\n  },\n  \"0x957c30aB0426e0C93CD8241E2c60392d08c6aC8e\": {\n    \"name\": \"Modum Token\",\n    \"logo\": \"modum.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MOD\",\n    \"decimals\": 0\n  },\n  \"0x1a7a8BD9106F2B8D977E08582DC7d24c723ab0DB\": {\n    \"name\": \"AppCoins\",\n    \"logo\": \"appc.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"APPC\"\n  },\n  \"0xdB25f211AB05b1c97D595516F45794528a807ad8\": {\n    \"name\": \"STASIS EURS Token\",\n    \"logo\": \"stasis-eurs.svg\",\n    \"erc20\": true,\n    \"decimals\": 2,\n    \"symbol\": \"EURS\"\n  },\n  \"0xCA0e7269600d353F70b14Ad118A49575455C0f2f\": {\n    \"name\": \"AMLT\",\n    \"logo\": \"amlt.png\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"AMLT\"\n  },\n  \"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F\": {\n    \"name\": \"Synthetix Network Token\",\n    \"logo\": \"synthetix.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"SNX\"\n  },\n  \"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51\": {\n    \"name\": \"Synth sUSD\",\n    \"logo\": \"synthetix_susd.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"SUSD\"\n  },\n  \"0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb\": {\n    \"name\": \"Synth sETH\",\n    \"logo\": \"synthetix_seth.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"SETH\"\n  },\n  \"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6\": {\n    \"name\": \"Synth sBTC\",\n    \"logo\": \"synthetix_sbtc.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"SBTC\"\n  },\n  \"0x0DB8D8b76BC361bAcbB72E2C491E06085A97Ab31\": {\n    \"name\": \"IQeon\",\n    \"logo\": \"iqeon.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"IQN\"\n  },\n  \"0x000C100050E98C91f9114fa5Dd75CE6869Bf4F53\": {\n    \"name\": \"CRYPTO10 Hedged\",\n    \"logo\": \"c10.svg\",\n    \"erc20\": true,\n    \"symbol\": \"C10\",\n    \"decimals\": 18\n  },\n  \"0x26E75307Fc0C021472fEb8F727839531F112f317\": {\n    \"name\": \"Crypto20\",\n    \"logo\": \"c20.svg\",\n    \"erc20\": true,\n    \"symbol\": \"C20\",\n    \"decimals\": 18\n  },\n  \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\": {\n    \"name\": \"Crypto Kitties\",\n    \"logo\": \"ck.svg\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"CK\",\n    \"decimals\": 0\n  },\n  \"0xE477292f1B3268687A29376116B0ED27A9c76170\": {\n    \"name\": \"Herocoin\",\n    \"logo\": \"herocoin_logo.png\",\n    \"erc20\": true,\n    \"symbol\": \"PLAY\",\n    \"decimals\": 18\n  },\n  \"0x4F4f0Db4de903B88f2B1a2847971E231D54F8fd3\": {\n    \"name\": \"Geens Platform Token\",\n    \"logo\": \"gee-icon.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GEE\",\n    \"decimals\": 8\n  },\n  \"0xec67005c4E498Ec7f55E092bd1d35cbC47C91892\": {\n    \"name\": \"Enzyme Finance\",\n    \"logo\": \"mln.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MLN\",\n    \"decimals\": 18\n  },\n  \"0xba2184520A1cC49a6159c57e61E1844E085615B6\": {\n    \"name\": \"HelloGold Token\",\n    \"logo\": \"hgt.png\",\n    \"erc20\": true,\n    \"symbol\": \"HGT\",\n    \"decimals\": 8\n  },\n  \"0xba358B6f5b4c0215650444B8C30D870B55050D2D\": {\n    \"name\": \"Hub Token\",\n    \"logo\": \"hub.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HUB\",\n    \"decimals\": 18\n  },\n  \"0x8727c112C712c4a03371AC87a74dD6aB104Af768\": {\n    \"name\": \"Jetcoin Institute Token\",\n    \"logo\": \"JETCOIN28.png\",\n    \"erc20\": true,\n    \"symbol\": \"JET\",\n    \"decimals\": 18\n  },\n  \"0xf8e386EDa857484f5a12e4B5DAa9984E06E73705\": {\n    \"name\": \"Indorse Token\",\n    \"logo\": \"indorseLogo.jpg\",\n    \"erc20\": true,\n    \"symbol\": \"IND\",\n    \"decimals\": 18\n  },\n  \"0xA54ddC7B3CcE7FC8b1E3Fa0256D0DB80D2c10970\": {\n    \"name\": \"NEVERDIE Coin\",\n    \"logo\": \"ndc.png\",\n    \"erc20\": true,\n    \"symbol\": \"NDC\",\n    \"decimals\": 18\n  },\n  \"0x1c4481750daa5Ff521A2a7490d9981eD46465Dbd\": {\n    \"name\": \"BlockMason Credit Protocol Token\",\n    \"logo\": \"bcpt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BCPT\",\n    \"decimals\": 18\n  },\n  \"0x20F7A3DdF244dc9299975b4Da1C39F8D5D75f05A\": {\n    \"name\": \"Sapien Network Token\",\n    \"logo\": \"spn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SPN\",\n    \"decimals\": 6\n  },\n  \"0xA4e8C3Ec456107eA67d3075bF9e3DF3A75823DB0\": {\n    \"name\": \"Loom Token\",\n    \"logo\": \"loom.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LOOM\",\n    \"decimals\": 18\n  },\n  \"0x42476F744292107e34519F9c357927074Ea3F75D\": {\n    \"name\": \"Loom\",\n    \"logo\": \"loom.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LOOM\",\n    \"decimals\": 18\n  },\n  \"0x4F9254C83EB525f9FCf346490bbb3ed28a81C667\": {\n    \"name\": \"Celer Network Token\",\n    \"logo\": \"CELR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CELR\",\n    \"decimals\": 18\n  },\n  \"0x71D01dB8d6a2fBEa7f8d434599C237980C234e4C\": {\n    \"name\": \"Gladius\",\n    \"logo\": \"gladius.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GLA\",\n    \"decimals\": 8\n  },\n  \"0xdd974D5C2e2928deA5F71b9825b8b646686BD200\": {\n    \"name\": \"Kyber Network Crystal\",\n    \"logo\": \"kyber.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KNC\",\n    \"decimals\": 18\n  },\n  \"0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C\": {\n    \"name\": \"Bancor Network Token\",\n    \"logo\": \"bnt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BNT\",\n    \"decimals\": 18\n  },\n  \"0xfa05A73FfE78ef8f1a739473e462c54bae6567D9\": {\n    \"name\": \"Lunyr Token\",\n    \"logo\": \"lun.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LUN\",\n    \"decimals\": 18\n  },\n  \"0xC741f06082AA47F93729070aD0dD95E223Bda091\": {\n    \"name\": \"LEDU Token\",\n    \"logo\": \"edu.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LEDU\",\n    \"decimals\": 8\n  },\n  \"0x5c543e7AE0A1104f78406C340E9C64FD9fCE5170\": {\n    \"name\": \"vSlice\",\n    \"logo\": \"vslice.png\",\n    \"erc20\": true,\n    \"symbol\": \"VSL\",\n    \"decimals\": 18\n  },\n  \"0x1f41E42D0a9e3c0Dd3BA15B527342783B43200A9\": {\n    \"name\": \"Blockchain Capital\",\n    \"logo\": \"bcap.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BCAP\",\n    \"decimals\": 0\n  },\n  \"0x6531f133e6DeeBe7F2dcE5A0441aA7ef330B4e53\": {\n    \"name\": \"Chronobank TIME\",\n    \"logo\": \"chronobank.png\",\n    \"erc20\": true,\n    \"symbol\": \"TIME\",\n    \"decimals\": 8\n  },\n  \"0xaAAf91D9b90dF800Df4F55c205fd6989c977E73a\": {\n    \"name\": \"Monolith TKN\",\n    \"logo\": \"tkn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TKN\",\n    \"decimals\": 8\n  },\n  \"0x08711D3B02C8758F2FB3ab4e80228418a7F8e39c\": {\n    \"name\": \"Edgeless\",\n    \"logo\": \"edg.svg\",\n    \"erc20\": true,\n    \"symbol\": \"EDG\",\n    \"decimals\": 0\n  },\n  \"0xf7B098298f7C69Fc14610bf71d5e02c60792894C\": {\n    \"name\": \"Guppy\",\n    \"logo\": \"guppy.png\",\n    \"erc20\": true,\n    \"symbol\": \"GUP\",\n    \"decimals\": 3\n  },\n  \"0x4DF812F6064def1e5e029f1ca858777CC98D2D81\": {\n    \"name\": \"Xaurum\",\n    \"logo\": \"xaurum_logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XAUR\",\n    \"decimals\": 8\n  },\n  \"0xB9e7F8568e08d5659f5D29C4997173d84CdF2607\": {\n    \"name\": \"Swarm City Token\",\n    \"logo\": \"swt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SWT\",\n    \"decimals\": 18\n  },\n  \"0xCb94be6f13A1182E4A4B6140cb7bf2025d28e41B\": {\n    \"name\": \"Trustcoin\",\n    \"logo\": \"trst.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TRST\",\n    \"decimals\": 6\n  },\n  \"0xCB56b52316041A62B6b5D0583DcE4A8AE7a3C629\": {\n    \"name\": \"Cigarettes\",\n    \"logo\": \"cig.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CIG\",\n    \"decimals\": 18\n  },\n  \"0x960b236A07cf122663c4303350609A66A7B288C0\": {\n    \"name\": \"Aragon Network Token v1\",\n    \"logo\": \"antv1.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ANTv1\",\n    \"decimals\": 18\n  },\n  \"0x667088b212ce3d06a1b553a7221E1fD19000d9aF\": {\n    \"name\": \"WINGS\",\n    \"logo\": \"wings_logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WINGS\",\n    \"decimals\": 18\n  },\n  \"0x16484d73Ac08d2355F466d448D2b79D2039F6EBB\": {\n    \"name\": \"FortKnoxster\",\n    \"logo\": \"FortKnoxster.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FKX\",\n    \"decimals\": 18\n  },\n  \"0xAf30D2a7E90d7DC361c8C4585e9BB7D2F6f15bc7\": {\n    \"name\": \"FirstBlood Token\",\n    \"logo\": \"1st.svg\",\n    \"erc20\": true,\n    \"symbol\": \"1ST\",\n    \"decimals\": 18\n  },\n  \"0x607F4C5BB672230e8672085532f7e901544a7375\": {\n    \"name\": \"iExec RLC Token\",\n    \"logo\": \"rlc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RLC\",\n    \"decimals\": 9\n  },\n  \"0xaeC2E87E0A235266D9C5ADc9DEb4b2E29b54D009\": {\n    \"name\": \"SingularDTV\",\n    \"logo\": \"singulardtv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SNGLS\",\n    \"decimals\": 0\n  },\n  \"0x888666CA69E0f178DED6D75b5726Cee99A87D698\": {\n    \"name\": \"ICONOMI\",\n    \"logo\": \"iconomi.png\",\n    \"erc20\": true,\n    \"symbol\": \"ICN\",\n    \"decimals\": 18\n  },\n  \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\": {\n    \"name\": \"Maker\",\n    \"logo\": \"mkr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MKR\",\n    \"decimals\": 18\n  },\n  \"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359\": {\n    \"name\": \"Sai Stablecoin v1.0\",\n    \"logo\": \"sai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SAI\",\n    \"decimals\": 18\n  },\n  \"0x6B175474E89094C44Da98b954EedeAC495271d0F\": {\n    \"name\": \"Dai Stablecoin\",\n    \"logo\": \"dai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DAI\",\n    \"decimals\": 18\n  },\n  \"0xC477D038d5420C6A9e0b031712f61c5120090de9\": {\n    \"name\": \"Boson Token\",\n    \"logo\": \"boson.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BOSON\",\n    \"decimals\": 18\n  },\n  \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\": {\n    \"name\": \"Ampleforth\",\n    \"logo\": \"ampl.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AMPL\",\n    \"decimals\": 9\n  },\n  \"0x4b9278b94a1112cAD404048903b8d343a810B07e\": {\n    \"name\": \"Hifi Finance\",\n    \"logo\": \"hifi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HIFI\",\n    \"decimals\": 18\n  },\n  \"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\": {\n    \"name\": \"Basic Attention Token\",\n    \"logo\": \"bat.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BAT\",\n    \"decimals\": 18\n  },\n  \"0x4D8fc1453a0F359e99c9675954e656D80d996FbF\": {\n    \"name\": \"BEE Token\",\n    \"logo\": \"bee_token.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BEE\",\n    \"decimals\": 18\n  },\n  \"0x6810e776880C02933D47DB1b9fc05908e5386b96\": {\n    \"name\": \"Gnosis Token\",\n    \"logo\": \"gnosis.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GNO\",\n    \"decimals\": 18\n  },\n  \"0x514910771AF9Ca656af840dff83E8264EcF986CA\": {\n    \"name\": \"Chainlink Token\",\n    \"logo\": \"chainlink.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LINK\",\n    \"decimals\": 18\n  },\n  \"0xD8912C10681D8B21Fd3742244f44658dBA12264E\": {\n    \"name\": \"Pluton\",\n    \"logo\": \"plutus-god.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PLU\",\n    \"decimals\": 18\n  },\n  \"0x1985365e9f78359a9B6AD760e32412f4a445E862\": {\n    \"name\": \"Reputation Old\",\n    \"logo\": \"rep.svg\",\n    \"erc20\": true,\n    \"symbol\": \"REP\",\n    \"decimals\": 18\n  },\n  \"0x221657776846890989a759BA2973e427DfF5C9bB\": {\n    \"name\": \"Reputation\",\n    \"logo\": \"repv2.svg\",\n    \"erc20\": true,\n    \"symbol\": \"REPv2\",\n    \"decimals\": 18\n  },\n  \"0xd0929d411954c47438dc1d871dd6081F5C5e149c\": {\n    \"name\": \"Refereum\",\n    \"logo\": \"rfr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RFR\",\n    \"decimals\": 4\n  },\n  \"0xb0866289e870D2efc282406cF4123Df6E5BcB652\": {\n    \"name\": \"NoFakeCoin\",\n    \"logo\": \"nfticon.png\",\n    \"erc20\": true,\n    \"symbol\": \"NFC\",\n    \"decimals\": 18\n  },\n  \"0x2C4e8f2D746113d0696cE89B35F0d8bF88E0AEcA\": {\n    \"name\": \"Open Simple Token\",\n    \"logo\": \"OST.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OST\",\n    \"decimals\": 18\n  },\n  \"0x408e41876cCCDC0F92210600ef50372656052a38\": {\n    \"name\": \"Republic Token\",\n    \"logo\": \"ren.svg\",\n    \"erc20\": true,\n    \"symbol\": \"REN\",\n    \"decimals\": 18\n  },\n  \"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D\": {\n    \"name\": \"renBTC\",\n    \"logo\": \"renBTC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"renBTC\",\n    \"decimals\": 8\n  },\n  \"0x1C5db575E2Ff833E46a2E9864C22F4B22E0B37C2\": {\n    \"name\": \"renZEC\",\n    \"logo\": \"renZEC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"renZEC\",\n    \"decimals\": 8\n  },\n  \"0x459086F2376525BdCebA5bDDA135e4E9d3FeF5bf\": {\n    \"name\": \"renBCH\",\n    \"logo\": \"renBCH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"renBCH\",\n    \"decimals\": 8\n  },\n  \"0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5\": {\n    \"name\": \"renFIL\",\n    \"logo\": \"renFIL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"renFIL\",\n    \"decimals\": 18\n  },\n  \"0xa74476443119A942dE498590Fe1f2454d7D4aC0d\": {\n    \"name\": \"Golem Network Token\",\n    \"logo\": \"golem.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GNT\",\n    \"decimals\": 18\n  },\n  \"0x6888a16eA9792c15A4DCF2f6C623D055c8eDe792\": {\n    \"name\": \"Spectiv Signal Token\",\n    \"logo\": \"spectiv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SIG\",\n    \"decimals\": 18\n  },\n  \"0x9a642d6b3368ddc662CA244bAdf32cDA716005BC\": {\n    \"name\": \"Qtum\",\n    \"logo\": \"qtum.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"QTUM\"\n  },\n  \"0x1234567461d3f8Db7496581774Bd869C83D51c93\": {\n    \"name\": \"BitClave\",\n    \"logo\": \"bitclave.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"CAT\"\n  },\n  \"0x7d4b8Cce0591C9044a22ee543533b72E976E36C3\": {\n    \"name\": \"Change\",\n    \"logo\": \"change.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"CAG\"\n  },\n  \"0x1d462414fe14cf489c7A21CaC78509f4bF8CD7c0\": {\n    \"name\": \"CanYaCoin\",\n    \"logo\": \"CanYa.svg\",\n    \"erc20\": true,\n    \"decimals\": 6,\n    \"symbol\": \"CAN\"\n  },\n  \"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72\": {\n    \"name\": \"Ethereum Name Service\",\n    \"logo\": \"ens.svg\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"ENS\"\n  },\n  \"0x3d1BA9be9f66B8ee101911bC36D3fB562eaC2244\": {\n    \"name\": \"Rivetz\",\n    \"logo\": \"rivetz.png\",\n    \"erc20\": true,\n    \"decimals\": 18,\n    \"symbol\": \"RVT\"\n  },\n  \"0x056017c55aE7AE32d12AeF7C679dF83A85ca75Ff\": {\n    \"name\": \"Project Wyvern Token\",\n    \"logo\": \"wyvern-logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WYV\",\n    \"decimals\": 18\n  },\n  \"0xfec0cF7fE078a500abf15F1284958F22049c2C7e\": {\n    \"name\": \"Maecenas ART Token\",\n    \"logo\": \"art.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ART\",\n    \"decimals\": 18\n  },\n  \"0x05f4a42e251f2d52b8ed15E9FEdAacFcEF1FAD27\": {\n    \"name\": \"Zilliqa\",\n    \"logo\": \"zilliqa.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ZIL\",\n    \"decimals\": 12\n  },\n  \"0x986EE2B944c42D017F52Af21c4c69B84DBeA35d8\": {\n    \"name\": \"BitMartToken\",\n    \"logo\": \"bitmart.png\",\n    \"erc20\": true,\n    \"symbol\": \"BMX\",\n    \"decimals\": 18\n  },\n  \"0xF03f8D65BaFA598611C3495124093c56e8F638f0\": {\n    \"name\": \"Viewly\",\n    \"logo\": \"viewly.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VIEW\",\n    \"decimals\": 18\n  },\n  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\": {\n    \"name\": \"Wrapped Ether\",\n    \"logo\": \"weth.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WETH\",\n    \"decimals\": 18\n  },\n  \"0xba5BDe662c17e2aDFF1075610382B9B691296350\": {\n    \"name\": \"SuperRare Token\",\n    \"logo\": \"rare.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RARE\",\n    \"decimals\": 18\n  },\n  \"0x6C8c6b02E7b2BE14d4fA6022Dfd6d75921D90E4E\": {\n    \"name\": \"Compound Basic Attention Token\",\n    \"logo\": \"ctoken-bat.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cBAT\",\n    \"decimals\": 8\n  },\n  \"0x70e36f6BF80a52b3B46b3aF8e106CC0ed743E8e4\": {\n    \"name\": \"Compound Collateral\",\n    \"logo\": \"ctoken-comp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cCOMP\",\n    \"decimals\": 8\n  },\n  \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\": {\n    \"name\": \"Compound Dai\",\n    \"logo\": \"ctoken-dai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cDAI\",\n    \"decimals\": 8\n  },\n  \"0xF5DCe57282A584D2746FaF1593d3121Fcac444dC\": {\n    \"name\": \"Compound Sai (Legacy Dai)\",\n    \"logo\": \"ctoken-sai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cSAI\",\n    \"decimals\": 8\n  },\n  \"0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5\": {\n    \"name\": \"Compound Ether\",\n    \"logo\": \"ctoken-eth.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cETH\",\n    \"decimals\": 8\n  },\n  \"0x158079Ee67Fce2f58472A96584A73C7Ab9AC95c1\": {\n    \"name\": \"Compound Augur\",\n    \"logo\": \"ctoken-rep.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cREP\",\n    \"decimals\": 8\n  },\n  \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\": {\n    \"name\": \"Compound USD Coin\",\n    \"logo\": \"ctoken-usdc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cUSDC\",\n    \"decimals\": 8\n  },\n  \"0xf650C3d88D12dB855b8bf7D11Be6C55A4e07dCC9\": {\n    \"name\": \"Compound Tether\",\n    \"logo\": \"ctoken-usdt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cUSDT\",\n    \"decimals\": 8\n  },\n  \"0xC11b1268C1A384e55C48c2391d8d480264A3A7F4\": {\n    \"name\": \"Compound Wrapped BTC\",\n    \"logo\": \"ctoken-wbtc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cWBTC\",\n    \"decimals\": 8\n  },\n  \"0xB3319f5D18Bc0D84dD1b4825Dcde5d5f7266d407\": {\n    \"name\": \"Compound 0x\",\n    \"logo\": \"ctoken-zrx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"cZRX\",\n    \"decimals\": 8\n  },\n  \"0xc00e94Cb662C3520282E6f5717214004A7f26888\": {\n    \"name\": \"Compound\",\n    \"logo\": \"comp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"COMP\",\n    \"decimals\": 18\n  },\n  \"0xFFE02ee4C69eDf1b340fCaD64fbd6b37a7b9e265\": {\n    \"name\": \"NANJCOIN\",\n    \"logo\": \"nanjcoin.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NANJ\",\n    \"decimals\": 8\n  },\n  \"0xB6eD7644C69416d67B522e20bC294A9a9B405B31\": {\n    \"name\": \"0xBitcoin Token\",\n    \"logo\": \"0xbitcoin.svg\",\n    \"erc20\": true,\n    \"symbol\": \"0xBTC\",\n    \"decimals\": 8\n  },\n  \"0x744d70FDBE2Ba4CF95131626614a1763DF805B9E\": {\n    \"name\": \"Status Network Token\",\n    \"logo\": \"snt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SNT\",\n    \"decimals\": 18\n  },\n  \"0x42d6622deCe394b54999Fbd73D108123806f6a18\": {\n    \"name\": \"SPANK\",\n    \"logo\": \"spank.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SPANK\",\n    \"decimals\": 18\n  },\n  \"0x6B01c3170ae1EFEBEe1a3159172CB3F7A5ECf9E5\": {\n    \"name\": \"BOOTY\",\n    \"logo\": \"booty.png\",\n    \"erc20\": true,\n    \"symbol\": \"BOOTY\",\n    \"decimals\": 18\n  },\n  \"0x4a6058666cf1057eaC3CD3A5a614620547559fc9\": {\n    \"name\": \"Brickblock\",\n    \"logo\": \"Brickblock.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BBK\",\n    \"decimals\": 18\n  },\n  \"0x80fB784B7eD66730e8b1DBd9820aFD29931aab03\": {\n    \"name\": \"ETHLend Token\",\n    \"logo\": \"lend.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LEND\",\n    \"decimals\": 18\n  },\n  \"0x48FF53777F747cFB694101222a944dE070c15D36\": {\n    \"name\": \"Ether Kingdoms Token\",\n    \"logo\": \"IMP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"IMP\",\n    \"decimals\": 7\n  },\n  \"0x02F61Fd266DA6E8B102D4121f5CE7b992640CF98\": {\n    \"name\": \"LikeCoin\",\n    \"logo\": \"like.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LIKE\",\n    \"decimals\": 18\n  },\n  \"0xB8c77482e45F1F44dE1745F52C74426C631bDD52\": {\n    \"name\": \"Binance Coin\",\n    \"logo\": \"bnb.png\",\n    \"erc20\": true,\n    \"symbol\": \"BNB\",\n    \"decimals\": 18\n  },\n  \"0xD850942eF8811f2A866692A623011bDE52a462C1\": {\n    \"name\": \"VeChain\",\n    \"logo\": \"ven.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VEN\",\n    \"decimals\": 18\n  },\n  \"0x91Af0fBB28ABA7E31403Cb457106Ce79397FD4E6\": {\n    \"name\": \"Aergo\",\n    \"logo\": \"Aergo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AERGO\",\n    \"decimals\": 18\n  },\n  \"0x5CA9a71B1d01849C0a95490Cc00559717fCF0D1d\": {\n    \"name\": \"Aeternity\",\n    \"logo\": \"aeternity.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AE\",\n    \"decimals\": 18\n  },\n  \"0xd4fa1460F537bb9085d22C7bcCB5DD450Ef28e3a\": {\n    \"name\": \"Populous\",\n    \"logo\": \"ppt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PPT\",\n    \"decimals\": 8\n  },\n  \"0xFA1a856Cfa3409CFa145Fa4e20Eb270dF3EB21ab\": {\n    \"name\": \"IOST\",\n    \"logo\": \"iost.png\",\n    \"erc20\": true,\n    \"symbol\": \"IOST\",\n    \"decimals\": 18\n  },\n  \"0x039B5649A59967e3e936D7471f9c3700100Ee1ab\": {\n    \"name\": \"Kucoin Shares\",\n    \"logo\": \"kucoin.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KCS\",\n    \"decimals\": 6\n  },\n  \"0x3893b9422Cd5D70a81eDeFfe3d5A1c6A978310BB\": {\n    \"name\": \"Mithril\",\n    \"logo\": \"mith.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MITH\",\n    \"decimals\": 18\n  },\n  \"0xb7cB1C96dB6B22b0D3d9536E0108d062BD488F74\": {\n    \"name\": \"Walton Token\",\n    \"logo\": \"wtc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WTC\",\n    \"decimals\": 18\n  },\n  \"0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671\": {\n    \"name\": \"Numeraire\",\n    \"logo\": \"nmr.png\",\n    \"erc20\": true,\n    \"symbol\": \"NMR\",\n    \"decimals\": 18\n  },\n  \"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd\": {\n    \"name\": \"Gemini Dollar\",\n    \"logo\": \"gusd.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GUSD\",\n    \"decimals\": 2\n  },\n  \"0xA4Bdb11dc0a2bEC88d24A3aa1E6Bb17201112eBe\": {\n    \"name\": \"StableUSD\",\n    \"logo\": \"usds.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDS\",\n    \"decimals\": 6\n  },\n  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\": {\n    \"name\": \"USDC\",\n    \"logo\": \"usdc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDC\",\n    \"decimals\": 6\n  },\n  \"0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c\": {\n    \"name\": \"EURC\",\n    \"logo\": \"eurc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"EURC\",\n    \"decimals\": 6\n  },\n  \"0x93ED3FBe21207Ec2E8f2d3c3de6e058Cb73Bc04d\": {\n    \"name\": \"Pinakion Token\",\n    \"logo\": \"pinakion.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PNK\",\n    \"decimals\": 18\n  },\n  \"0x419D0d8BdD9aF5e606Ae2232ed285Aff190E711b\": {\n    \"name\": \"FunFair\",\n    \"logo\": \"fun.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FUN\",\n    \"decimals\": 8\n  },\n  \"0xcA2796F9F61dc7b238Aab043971e49c6164DF375\": {\n    \"name\": \"YGGDRASH YEED Token\",\n    \"logo\": \"yggdrash.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YEED\",\n    \"decimals\": 18\n  },\n  \"0x03e3f0c25965f13DbbC58246738C183E27b26a56\": {\n    \"name\": \"Disciplina Token\",\n    \"logo\": \"disciplina.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DSCP\",\n    \"decimals\": 18\n  },\n  \"0xE814aeE960a85208C3dB542C53E7D4a6C8D5f60F\": {\n    \"name\": \"Chronologic DAY Token\",\n    \"logo\": \"DAY.png\",\n    \"erc20\": true,\n    \"symbol\": \"DAY\",\n    \"decimals\": 18\n  },\n  \"0x7E43581b19ab509BCF9397a2eFd1ab10233f27dE\": {\n    \"name\": \"PLATINUM\",\n    \"logo\": \"plat.png\",\n    \"erc20\": true,\n    \"symbol\": \"PLAT\",\n    \"decimals\": 18\n  },\n  \"0x8E870D67F660D95d5be530380D0eC0bd388289E1\": {\n    \"name\": \"Pax Dollar\",\n    \"logo\": \"usdp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDP\",\n    \"decimals\": 18\n  },\n  \"0x45804880De22913dAFE09f4980848ECE6EcbAf78\": {\n    \"name\": \"PAX Gold\",\n    \"logo\": \"paxg.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PAXG\",\n    \"decimals\": 18\n  },\n  \"0x0000000000085d4780B73119b644AE5ecd22b376\": {\n    \"name\": \"TrueUSD\",\n    \"logo\": \"TUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TUSD\",\n    \"decimals\": 18\n  },\n  \"0x00000000441378008EA67F4284A57932B1c000a5\": {\n    \"name\": \"TrueGBP\",\n    \"logo\": \"TGBP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TGBP\",\n    \"decimals\": 18\n  },\n  \"0x00006100F7090010005F1bd7aE6122c3C2CF0090\": {\n    \"name\": \"TrueAUD\",\n    \"logo\": \"TAUD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TAUD\",\n    \"decimals\": 18\n  },\n  \"0x00000100F2A2bd000715001920eB70D229700085\": {\n    \"name\": \"TrueCAD\",\n    \"logo\": \"TCAD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TCAD\",\n    \"decimals\": 18\n  },\n  \"0x0000852600CEB001E08e00bC008be620d60031F2\": {\n    \"name\": \"TrueHKD\",\n    \"logo\": \"THKD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"THKD\",\n    \"decimals\": 18\n  },\n  \"0x4Fabb145d64652a948d72533023f6E7A623C7C53\": {\n    \"name\": \"Binance USD\",\n    \"logo\": \"busd.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BUSD\",\n    \"decimals\": 18\n  },\n  \"0x23Ccc43365D9dD3882eab88F43d515208f832430\": {\n    \"name\": \"MidasProtocol\",\n    \"logo\": \"MAS.png\",\n    \"erc20\": true,\n    \"symbol\": \"MAS\",\n    \"decimals\": 18\n  },\n  \"0xC16b542ff490e01fcc0DC58a60e1EFdc3e357cA6\": {\n    \"name\": \"ICE ROCK MINING\",\n    \"logo\": \"rock2.png\",\n    \"erc20\": true,\n    \"symbol\": \"ROCK2\",\n    \"decimals\": 0\n  },\n  \"0x6758B7d441a9739b98552B373703d8d3d14f9e62\": {\n    \"name\": \"POA20 Token\",\n    \"logo\": \"POA20.png\",\n    \"erc20\": true,\n    \"symbol\": \"POA20\",\n    \"decimals\": 18\n  },\n  \"0x3DB6Ba6ab6F95efed1a6E794caD492fAAabF294D\": {\n    \"name\": \"LTO Network Token (old)\",\n    \"logo\": \"LTO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LTOOLD\",\n    \"decimals\": 8\n  },\n  \"0xd01409314aCb3b245CEa9500eCE3F6Fd4d70ea30\": {\n    \"name\": \"LTO Network Token\",\n    \"logo\": \"LTO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LTO\",\n    \"decimals\": 8\n  },\n  \"0xfeF4185594457050cC9c23980d301908FE057Bb1\": {\n    \"name\": \"VIDT Datalink\",\n    \"logo\": \"VIDT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VIDT-OLD\",\n    \"decimals\": 18\n  },\n  \"0x3BE7bF1A5F23BD8336787D0289B70602f1940875\": {\n    \"name\": \"VIDT DAO\",\n    \"logo\": \"VIDT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VIDT\",\n    \"decimals\": 18\n  },\n  \"0x7064aAb39A0Fcf7221c3396719D0917a65E35515\": {\n    \"name\": \"Cpollo\",\n    \"logo\": \"Cpollo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CPLO\",\n    \"decimals\": 18\n  },\n  \"0xd8446236FA95b9b5f9fd0f8E7Df1a944823c683d\": {\n    \"name\": \"NEEO\",\n    \"logo\": \"neeo.png\",\n    \"erc20\": true,\n    \"symbol\": \"NEEO\",\n    \"decimals\": 18\n  },\n  \"0xA823E6722006afe99E91c30FF5295052fe6b8E32\": {\n    \"name\": \"Neumark\",\n    \"logo\": \"neu.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NEU\",\n    \"decimals\": 18\n  },\n  \"0x8f693ca8D21b157107184d29D398A8D082b38b76\": {\n    \"name\": \"Streamr\",\n    \"logo\": \"streamr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DATA\",\n    \"decimals\": 18\n  },\n  \"0x0Cf0Ee63788A0849fE5297F3407f701E122cC023\": {\n    \"name\": \"Streamr (old)\",\n    \"logo\": \"streamr_old.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XDATA\",\n    \"decimals\": 18\n  },\n  \"0xA0b73E1Ff0B80914AB6fe0444E65848C4C34450b\": {\n    \"name\": \"Cronos\",\n    \"logo\": \"cro.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CRO\",\n    \"decimals\": 8\n  },\n  \"0xF70a642bD387F94380fFb90451C2c81d4Eb82CBc\": {\n    \"name\": \"STAR\",\n    \"logo\": \"starbase.png\",\n    \"erc20\": true,\n    \"symbol\": \"STAR\",\n    \"decimals\": 18\n  },\n  \"0x7C5A0CE9267ED19B22F8cae653F198e3E8daf098\": {\n    \"name\": \"Santiment\",\n    \"logo\": \"santiment.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SAN\",\n    \"decimals\": 18\n  },\n  \"0x58b6A8A3302369DAEc383334672404Ee733aB239\": {\n    \"name\": \"Livepeer\",\n    \"logo\": \"lpt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LPT\",\n    \"decimals\": 18\n  },\n  \"0x6fe56C0bcdD471359019FcBC48863d6c3e9d4F41\": {\n    \"name\": \"Props\",\n    \"logo\": \"props.png\",\n    \"erc20\": true,\n    \"symbol\": \"PROPS\",\n    \"decimals\": 18\n  },\n  \"0x6c6EE5e31d828De241282B9606C8e98Ea48526E2\": {\n    \"name\": \"HoloToken\",\n    \"logo\": \"hot.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HOT\",\n    \"decimals\": 18\n  },\n  \"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c\": {\n    \"name\": \"Enjin Coin\",\n    \"logo\": \"enj.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ENJ\",\n    \"decimals\": 18\n  },\n  \"0xbf2179859fc6D5BEE9Bf9158632Dc51678a4100e\": {\n    \"name\": \"AELF\",\n    \"logo\": \"elf.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ELF\",\n    \"decimals\": 18\n  },\n  \"0x39Bb259F66E1C59d5ABEF88375979b4D20D98022\": {\n    \"name\": \"WAX Token\",\n    \"logo\": \"wax.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WAX\",\n    \"decimals\": 8\n  },\n  \"0x595832F8FC6BF59c85C527fEC3740A1b7a361269\": {\n    \"name\": \"PowerLedger\",\n    \"logo\": \"powr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"POWR\",\n    \"decimals\": 6\n  },\n  \"0x28dee01D53FED0Edf5f6E310BF8Ef9311513Ae40\": {\n    \"name\": \"BlitzPredict\",\n    \"logo\": \"blitzpredict.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XBP\",\n    \"decimals\": 18\n  },\n  \"0x33349B282065b0284d756F0577FB39c158F935e6\": {\n    \"name\": \"Maple Finance\",\n    \"logo\": \"maple-finance.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"MPL\",\n    \"decimals\": 18\n  },\n  \"0xFBeef911Dc5821886e1dda71586d90eD28174B7d\": {\n    \"name\": \"KnownOrigin\",\n    \"logo\": \"knownorigin.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KODA\",\n    \"decimals\": 0\n  },\n  \"0x8207c1FfC5B6804F6024322CcF34F29c3541Ae26\": {\n    \"name\": \"Origin Protocol\",\n    \"logo\": \"ogn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OGN\",\n    \"decimals\": 18\n  },\n  \"0x2A8e1E676Ec238d8A992307B495b45B3fEAa5e86\": {\n    \"name\": \"Origin Dollar\",\n    \"logo\": \"ousd.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OUSD\",\n    \"decimals\": 18\n  },\n  \"0x856c4Efb76C1D1AE02e20CEB03A2A6a08b0b8dC3\": {\n    \"name\": \"Origin Ether\",\n    \"logo\": \"oeth.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OETH\",\n    \"decimals\": 18\n  },\n  \"0x9c354503C38481a7A7a51629142963F98eCC12D0\": {\n    \"name\": \"Origin DeFi Governance\",\n    \"logo\": \"ogv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OGV\",\n    \"decimals\": 18\n  },\n  \"0x0C4576Ca1c365868E162554AF8e385dc3e7C66D9\": {\n    \"name\": \"Vote Escrowed Origin DeFi Governance\",\n    \"logo\": \"veogv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"veOGV\",\n    \"decimals\": 18\n  },\n  \"0x8f8221aFbB33998d8584A2B05749bA73c37a938a\": {\n    \"name\": \"Request\",\n    \"logo\": \"request.svg\",\n    \"erc20\": true,\n    \"symbol\": \"REQ\",\n    \"decimals\": 18\n  },\n  \"0x2aEa4Add166EBf38b63d09a75dE1a7b94Aa24163\": {\n    \"name\": \"Kudos\",\n    \"logo\": \"kudos.svg\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"KDO\",\n    \"decimals\": 0\n  },\n  \"0x14C926F2290044B647e1Bf2072e67B495eff1905\": {\n    \"name\": \"Bethereum\",\n    \"logo\": \"bether.jpg\",\n    \"erc20\": true,\n    \"symbol\": \"BETHER\",\n    \"decimals\": 18\n  },\n  \"0x9AAb071B4129B083B01cB5A0Cb513Ce7ecA26fa5\": {\n    \"name\": \"Hunt Token\",\n    \"logo\": \"hunt.png\",\n    \"erc20\": true,\n    \"symbol\": \"HUNT\",\n    \"decimals\": 18\n  },\n  \"0xFEF3884b603C33EF8eD4183346E093A173C94da6\": {\n    \"name\": \"Metamorph\",\n    \"logo\": \"metamorph.svg\",\n    \"erc20\": true,\n    \"symbol\": \"METM\",\n    \"decimals\": 18\n  },\n  \"0x0AbdAce70D3790235af448C88547603b945604ea\": {\n    \"name\": \"district0x\",\n    \"logo\": \"district0x.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DNT\",\n    \"decimals\": 18\n  },\n  \"0xB26631c6dda06aD89B93C71400D25692de89c068\": {\n    \"name\": \"Minds\",\n    \"logo\": \"minds.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MINDS\",\n    \"decimals\": 18\n  },\n  \"0xBb1f24C0c1554b9990222f036b0AaD6Ee4CAec29\": {\n    \"name\": \"CryptoSoul\",\n    \"logo\": \"SOUL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SOUL\",\n    \"decimals\": 18\n  },\n  \"0xFF0E5e014cf97e0615cb50F6f39Da6388E2FaE6E\": {\n    \"name\": \"Origo\",\n    \"logo\": \"origo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OGO\",\n    \"decimals\": 18\n  },\n  \"0x0cB8D0B37C7487b11d57F1f33dEfA2B1d3cFccfE\": {\n    \"name\": \"DANKToken\",\n    \"logo\": \"dank-logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DANK\",\n    \"decimals\": 18\n  },\n  \"0x3a4f40631a4f906c2BaD353Ed06De7A5D3fCb430\": {\n    \"name\": \"PlayDapp Token\",\n    \"logo\": \"playdapp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PLA\",\n    \"decimals\": 18\n  },\n  \"0xE9e3F9cfc1A64DFca53614a0182CFAD56c10624F\": {\n    \"name\": \"Su Squares\",\n    \"logo\": \"Su-Squares.svg\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"SU\",\n    \"decimals\": 0\n  },\n  \"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\": {\n    \"name\": \"ROOK\",\n    \"logo\": \"Rook.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ROOK\",\n    \"decimals\": 18\n  },\n  \"0xa62cc35625B0C8dc1fAEA39d33625Bb4C15bD71C\": {\n    \"name\": \"StormX\",\n    \"logo\": \"stormx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"STMX\",\n    \"decimals\": 18\n  },\n  \"0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0\": {\n    \"name\": \"Matic Network Token\",\n    \"logo\": \"matic.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MATIC\",\n    \"decimals\": 18\n  },\n  \"0x9992eC3cF6A55b00978cdDF2b27BC6882d88D1eC\": {\n    \"name\": \"Polymath\",\n    \"logo\": \"poly.svg\",\n    \"erc20\": true,\n    \"symbol\": \"POLY\",\n    \"decimals\": 18\n  },\n  \"0x0a50C93c762fDD6E56D86215C24AaAD43aB629aa\": {\n    \"name\": \"LGO Token\",\n    \"logo\": \"lgo.png\",\n    \"erc20\": true,\n    \"symbol\": \"LGO\",\n    \"decimals\": 8\n  },\n  \"0xc8Cac7672f4669685817cF332a33Eb249F085475\": {\n    \"name\": \"LivenCoin\",\n    \"logo\": \"LVN.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LVN\",\n    \"decimals\": 18\n  },\n  \"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD\": {\n    \"name\": \"Loopring\",\n    \"logo\": \"LRC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LRC\",\n    \"decimals\": 18\n  },\n  \"0x255Aa6DF07540Cb5d3d297f0D0D4D84cb52bc8e6\": {\n    \"name\": \"Raiden Network Token\",\n    \"logo\": \"raiden.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RDN\",\n    \"decimals\": 18\n  },\n  \"0x66fD97a78d8854fEc445cd1C80a07896B0b4851f\": {\n    \"name\": \"Lunch Money\",\n    \"logo\": \"LMY.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LMY\",\n    \"decimals\": 18\n  },\n  \"0x679131F591B4f369acB8cd8c51E68596806c3916\": {\n    \"name\": \"Trustlines Network Token\",\n    \"logo\": \"TLN128.png\",\n    \"erc20\": true,\n    \"symbol\": \"TLN\",\n    \"decimals\": 18\n  },\n  \"0xdcD85914b8aE28c1E62f1C488E1D968D5aaFfE2b\": {\n    \"name\": \"TOP Network Token\",\n    \"logo\": \"TOP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TOP\",\n    \"decimals\": 18\n  },\n  \"0xaea46A60368A7bD060eec7DF8CBa43b7EF41Ad85\": {\n    \"name\": \"Fetch\",\n    \"logo\": \"fetch.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FET\",\n    \"decimals\": 18\n  },\n  \"0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14\": {\n    \"name\": \"Mettalex\",\n    \"logo\": \"mettalex.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MTLX\",\n    \"decimals\": 18\n  },\n  \"0xf21661D0D1d76d3ECb8e1B9F1c923DBfffAe4097\": {\n    \"name\": \"Realio Network\",\n    \"logo\": \"rio.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RIO\",\n    \"decimals\": 18\n  },\n  \"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984\": {\n    \"name\": \"Uniswap\",\n    \"logo\": \"uni.svg\",\n    \"erc20\": true,\n    \"symbol\": \"UNI\",\n    \"decimals\": 18\n  },\n  \"0x2e6539edc3b76f1E21B71d214527FAbA875F70F3\": {\n    \"name\": \"Yearn Finance Dot\",\n    \"logo\": \"YFDOT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YFDOT\",\n    \"decimals\": 18\n  },\n  \"0x9F284E1337A815fe77D2Ff4aE46544645B20c5ff\": {\n    \"name\": \"Darwinia Commitment Token\",\n    \"logo\": \"kton.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KTON\",\n    \"decimals\": 18\n  },\n  \"0xE48972fCd82a274411c01834e2f031D4377Fa2c0\": {\n    \"name\": \"TwoKeyEconomy\",\n    \"logo\": \"2key.svg\",\n    \"erc20\": true,\n    \"symbol\": \"2KEY\",\n    \"decimals\": 18\n  },\n  \"0x970B9bB2C0444F5E81e9d0eFb84C8ccdcdcAf84d\": {\n    \"name\": \"Fuse Token\",\n    \"logo\": \"fuse.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FUSE\",\n    \"decimals\": 18\n  },\n  \"0x0Ae055097C6d159879521C384F1D2123D1f195e6\": {\n    \"name\": \"STAKE Token\",\n    \"logo\": \"stake.svg\",\n    \"erc20\": true,\n    \"symbol\": \"STAKE\",\n    \"decimals\": 18\n  },\n  \"0x5dc60C4D5e75D22588FA17fFEB90A63E535efCE0\": {\n    \"name\": \"dKargo\",\n    \"logo\": \"DKA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DKA\",\n    \"decimals\": 18\n  },\n  \"0x9469D013805bFfB7D3DEBe5E7839237e535ec483\": {\n    \"name\": \"Darwinia Network Native Token\",\n    \"logo\": \"ring.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RING\",\n    \"decimals\": 18\n  },\n  \"0xA31B1767e09f842ECFd4bc471Fe44F830E3891AA\": {\n    \"name\": \"ROOBEE\",\n    \"logo\": \"ROOBEE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ROOBEE\",\n    \"decimals\": 18\n  },\n  \"0xC7e43A1c8E118aA2965F5EAbe0e718D83DB7A63C\": {\n    \"name\": \"ZCore Token\",\n    \"logo\": \"zcrt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ZCRT\",\n    \"decimals\": 18\n  },\n  \"0x08d32b0da63e2C3bcF8019c9c5d849d7a9d791e6\": {\n    \"name\": \"Dentacoin Token\",\n    \"logo\": \"dcn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DCN\",\n    \"decimals\": 0\n  },\n  \"0xe2f2a5C287993345a840Db3B0845fbC70f5935a5\": {\n    \"name\": \"mStable USD\",\n    \"logo\": \"mUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"mUSD\",\n    \"decimals\": 18\n  },\n  \"0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2\": {\n    \"name\": \"Meta\",\n    \"logo\": \"MTA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MTA\",\n    \"decimals\": 18\n  },\n  \"0xe3818504c1B32bF1557b16C238B2E01Fd3149C17\": {\n    \"name\": \"Pillar\",\n    \"logo\": \"plr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PLR\",\n    \"decimals\": 18\n  },\n  \"0xba100000625a3754423978a60c9317c58a424e3D\": {\n    \"name\": \"Balancer (BAL)\",\n    \"logo\": \"balancer.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BAL\",\n    \"decimals\": 18\n  },\n  \"0x8a854288a5976036A725879164Ca3e91d30c6A1B\": {\n    \"name\": \"Guaranteed Entrance Token\",\n    \"logo\": \"get-logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GET\",\n    \"decimals\": 18\n  },\n  \"0x2781246fe707bB15CeE3e5ea354e2154a2877B16\": {\n    \"name\": \"Elysia\",\n    \"logo\": \"el.svg\",\n    \"erc20\": true,\n    \"symbol\": \"EL\",\n    \"decimals\": 18\n  },\n  \"0x4dA34f8264CB33A5c9F17081B9EF5Ff6091116f4\": {\n    \"name\": \"Elyfi\",\n    \"logo\": \"elyfi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ELFI\",\n    \"decimals\": 18\n  },\n  \"0xc12d099be31567add4e4e4d0D45691C3F58f5663\": {\n    \"name\": \"Auctus\",\n    \"logo\": \"auc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AUC\",\n    \"decimals\": 18\n  },\n  \"0xdF574c24545E5FfEcb9a659c229253D4111d87e1\": {\n    \"name\": \"HUSD\",\n    \"logo\": \"HUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"HUSD\",\n    \"decimals\": 8\n  },\n  \"0x2ecB13A8c458c379c4d9a7259e202De03c8F3D19\": {\n    \"name\": \"Block-Chain.com Token\",\n    \"logo\": \"block-chain.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BC\",\n    \"decimals\": 18\n  },\n  \"0x38e4adB44ef08F22F5B5b76A8f0c2d0dCbE7DcA1\": {\n    \"name\": \"Concentrated Voting Power\",\n    \"logo\": \"PowerPool.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CVP\",\n    \"decimals\": 18\n  },\n  \"0xa117000000f279D81A1D3cc75430fAA017FA5A2e\": {\n    \"name\": \"Aragon Network Token\",\n    \"logo\": \"antv2.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ANT\",\n    \"decimals\": 18\n  },\n  \"0xDecade1c6Bf2cD9fb89aFad73e4a519C867adcF5\": {\n    \"name\": \"Experty Wisdom Token\",\n    \"logo\": \"wisdom-token.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WIS\",\n    \"decimals\": 18\n  },\n  \"0x7D85e23014F84E6E21d5663aCD8751bEF3562352\": {\n    \"name\": \"Axion Old\",\n    \"logo\": \"obsolete.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AXNv1\",\n    \"decimals\": 18\n  },\n  \"0x358AA737e033F34df7c54306960a38d09AaBd523\": {\n    \"name\": \"Ares Token\",\n    \"logo\": \"ares.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ARES\",\n    \"decimals\": 18\n  },\n  \"0xB62132e35a6c13ee1EE0f84dC5d40bad8d815206\": {\n    \"name\": \"NEXO\",\n    \"logo\": \"NEXO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NEXO\",\n    \"decimals\": 18\n  },\n  \"0x4612021C75809160Be60DB21fBc9D6adD0B32deF\": {\n    \"name\": \"BCP Coin\",\n    \"logo\": \"BCP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BCP\",\n    \"decimals\": 18\n  },\n  \"0xE9E73E1aE76D17A16cC53E3e87a9a7dA78834d37\": {\n    \"name\": \"Camp\",\n    \"logo\": \"Camp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CAMP\",\n    \"decimals\": 18\n  },\n  \"0xdacD69347dE42baBfAEcD09dC88958378780FB62\": {\n    \"name\": \"Atari Token\",\n    \"logo\": \"atrilast.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ATRI\",\n    \"decimals\": 0\n  },\n  \"0x71F85B2E46976bD21302B64329868fd15eb0D127\": {\n    \"name\": \"Axion\",\n    \"logo\": \"axion.svg\",\n    \"erc20\": true,\n    \"symbol\": \"AXN\",\n    \"decimals\": 18\n  },\n  \"0xc944E90C64B2c07662A292be6244BDf05Cda44a7\": {\n    \"name\": \"Graph Token\",\n    \"logo\": \"graphToken.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GRT\",\n    \"decimals\": 18\n  },\n  \"0xFE3E6a25e6b192A42a44ecDDCd13796471735ACf\": {\n    \"name\": \"Reef Finance\",\n    \"logo\": \"reef.svg\",\n    \"erc20\": true,\n    \"symbol\": \"REEF\",\n    \"decimals\": 18\n  },\n  \"0x43Dfc4159D86F3A37A5A4B3D4580b888ad7d4DDd\": {\n    \"name\": \"DODO bird\",\n    \"logo\": \"DODO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DODO\",\n    \"decimals\": 18\n  },\n  \"0x4a615bB7166210CCe20E6642a6f8Fb5d4D044496\": {\n    \"name\": \"NAOS Finance\",\n    \"logo\": \"naos.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NAOS\",\n    \"decimals\": 18\n  },\n  \"0x111111111117dC0aa78b770fA6A738034120C302\": {\n    \"name\": \"1INCH Token\",\n    \"logo\": \"1inch.svg\",\n    \"erc20\": true,\n    \"symbol\": \"1INCH\",\n    \"decimals\": 18\n  },\n  \"0x27702a26126e0B3702af63Ee09aC4d1A084EF628\": {\n    \"name\": \"Aleph.im Token\",\n    \"logo\": \"aleph.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ALEPH\",\n    \"decimals\": 18\n  },\n  \"0x32a7C02e79c4ea1008dD6564b35F131428673c41\": {\n    \"name\": \"CRUST\",\n    \"logo\": \"crust.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CRU\",\n    \"decimals\": 18\n  },\n  \"0x3472A5A71965499acd81997a54BBA8D852C6E53d\": {\n    \"name\": \"BADGER\",\n    \"logo\": \"badger.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BADGER\",\n    \"decimals\": 18\n  },\n  \"0x65Def5029A0e7591e46B38742bFEdd1Fb7b24436\": {\n    \"name\": \"Kanpeki\",\n    \"logo\": \"kanpeki-green.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KAE\",\n    \"decimals\": 18\n  },\n  \"0xF94b5C5651c888d928439aB6514B93944eEE6F48\": {\n    \"name\": \"Yield App\",\n    \"logo\": \"yield-app.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YLD\",\n    \"decimals\": 18\n  },\n  \"0xDcB01cc464238396E213a6fDd933E36796eAfF9f\": {\n    \"name\": \"Yield\",\n    \"logo\": \"yield-logo.svg\",\n    \"erc20\": true,\n    \"symbol\": \"YLD\",\n    \"decimals\": 18\n  },\n  \"0x968F6f898a6Df937fC1859b323aC2F14643e3fED\": {\n    \"name\": \"Newscrypto\",\n    \"logo\": \"NWC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NWC\",\n    \"decimals\": 18\n  },\n  \"0xeb269732ab75A6fD61Ea60b06fE994cD32a83549\": {\n    \"name\": \"dForce USDx\",\n    \"logo\": \"USDx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDx\",\n    \"decimals\": 18\n  },\n  \"0x6e0daDE58D2d89eBBe7aFc384e3E4f15b70b14D8\": {\n    \"name\": \"QuiverX\",\n    \"logo\": \"quiverx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"QRX\",\n    \"decimals\": 18\n  },\n  \"0x0beAD9a1bcc1b84D06E3f2df67E3549Fd55aB054\": {\n    \"name\": \"EURxb\",\n    \"logo\": \"eurxb.svg\",\n    \"erc20\": true,\n    \"symbol\": \"EURxb\",\n    \"decimals\": 18\n  },\n  \"0x9F9c8ec3534c3cE16F928381372BfbFBFb9F4D24\": {\n    \"name\": \"GraphLinq\",\n    \"logo\": \"glq.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GLQ\",\n    \"decimals\": 18\n  },\n  \"0xEB58343b36C7528F23CAAe63a150240241310049\": {\n    \"name\": \"NBU\",\n    \"logo\": \"NBU.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NBU\",\n    \"decimals\": 18\n  },\n  \"0x16ECCfDbb4eE1A85A33f3A9B21175Cd7Ae753dB4\": {\n    \"name\": \"Route\",\n    \"logo\": \"route.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ROUTE\",\n    \"decimals\": 18\n  },\n  \"0x75739d5944534115d7C54ee8C73F186D793BAE02\": {\n    \"name\": \"Collective\",\n    \"logo\": \"CO2.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CO2\",\n    \"decimals\": 18\n  },\n  \"0x35bD01FC9d6D5D81CA9E055Db88Dc49aa2c699A8\": {\n    \"name\": \"FWB Pro\",\n    \"logo\": \"FWB.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FWB\",\n    \"decimals\": 18\n  },\n  \"0x9B99CcA871Be05119B2012fd4474731dd653FEBe\": {\n    \"name\": \"Antimatter\",\n    \"logo\": \"antimatter.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MATTER\",\n    \"decimals\": 18\n  },\n  \"0x6De037ef9aD2725EB40118Bb1702EBb27e4Aeb24\": {\n    \"name\": \"Render Token\",\n    \"logo\": \"RNDR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RNDR\",\n    \"decimals\": 18\n  },\n  \"0xDf49C9f599A0A9049D97CFF34D0C30E468987389\": {\n    \"name\": \"SaTT\",\n    \"logo\": \"SaTT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SATT\",\n    \"decimals\": 18\n  },\n  \"0x431ad2ff6a9C365805eBaD47Ee021148d6f7DBe0\": {\n    \"name\": \"dForce\",\n    \"logo\": \"DF.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DF\",\n    \"decimals\": 18\n  },\n  \"0x6e1A19F235bE7ED8E3369eF73b196C07257494DE\": {\n    \"name\": \"Wrapped Filecoin\",\n    \"logo\": \"WFIL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WFIL\",\n    \"decimals\": 18\n  },\n  \"0xE452E6Ea2dDeB012e20dB73bf5d3863A3Ac8d77a\": {\n    \"name\": \"Wrapped Celo\",\n    \"logo\": \"WCELO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"wCELO\",\n    \"decimals\": 18\n  },\n  \"0x4A64515E5E1d1073e83f30cB97BEd20400b66E10\": {\n    \"name\": \"Wrapped ZEC\",\n    \"logo\": \"WZEC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WZEC\",\n    \"decimals\": 18\n  },\n  \"0xA3865E64121537b5b59B5e239Db4aCBe6F36aa74\": {\n    \"name\": \"Wrapped Tezos\",\n    \"logo\": \"WXTZ.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WXTZ\",\n    \"decimals\": 18\n  },\n  \"0x53c4871322Bb47e7A24136fce291a6dcC832a294\": {\n    \"name\": \"Wrapped Litecoin\",\n    \"logo\": \"WLTC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WLTC\",\n    \"decimals\": 18\n  },\n  \"0xad3E3Fc59dff318BecEaAb7D00EB4F68b1EcF195\": {\n    \"name\": \"Wrapped Celo USD\",\n    \"logo\": \"WCUSD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"wCUSD\",\n    \"decimals\": 18\n  },\n  \"0x85D7bdfc9c3426b33A684241eEEE70385Bc42820\": {\n    \"name\": \"Wrapped Kadena\",\n    \"logo\": \"WKDA.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WKDA\",\n    \"decimals\": 18\n  },\n  \"0x39fBBABf11738317a448031930706cd3e612e1B9\": {\n    \"name\": \"Wrapped XRP\",\n    \"logo\": \"WXRP.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WXRP\",\n    \"decimals\": 18\n  },\n  \"0xBBC7f7A6AADAc103769C66CBC69AB720f7F9Eae3\": {\n    \"name\": \"INX Token\",\n    \"logo\": \"INX.svg\",\n    \"erc20\": true,\n    \"symbol\": \"INX\",\n    \"decimals\": 18\n  },\n  \"0x1b40183EFB4Dd766f11bDa7A7c3AD8982e998421\": {\n    \"name\": \"Vesper\",\n    \"logo\": \"vsp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"VSP\",\n    \"decimals\": 18\n  },\n  \"0x544c42fBB96B39B21DF61cf322b5EDC285EE7429\": {\n    \"name\": \"InsurAce\",\n    \"logo\": \"INSUR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"INSUR\",\n    \"decimals\": 18\n  },\n  \"0xcC665390b03c5D324D8fAF81C15eCee29A73bCB4\": {\n    \"name\": \"ChainSwap.com Governance Token\",\n    \"logo\": \"chainswap.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ASAP\",\n    \"decimals\": 18\n  },\n  \"0x182F4c4C97cd1c24E1Df8FC4c053E5C47bf53Bef\": {\n    \"name\": \"keyTango Token\",\n    \"logo\": \"keyTango.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TANGO\",\n    \"decimals\": 18\n  },\n  \"0x0275E1001e293C46CFe158B3702AADe0B99f88a5\": {\n    \"name\": \"Oiler\",\n    \"logo\": \"oiler.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OIL\",\n    \"decimals\": 18\n  },\n  \"0xDe30da39c46104798bB5aA3fe8B9e0e1F348163F\": {\n    \"name\": \"Gitcoin\",\n    \"logo\": \"gtc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GTC\",\n    \"decimals\": 18\n  },\n  \"0x1796ae0b0fa4862485106a0de9b654eFE301D0b2\": {\n    \"name\": \"Polychain Monsters\",\n    \"logo\": \"PMON.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PMON\",\n    \"decimals\": 18\n  },\n  \"0x8eEF5a82E6Aa222a60F009ac18c24EE12dBf4b41\": {\n    \"name\": \"Tixl\",\n    \"logo\": \"TXL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TXL\",\n    \"decimals\": 18\n  },\n  \"0x5218E472cFCFE0b64A064F055B43b4cdC9EfD3A6\": {\n    \"name\": \"unFederalReserve Token\",\n    \"logo\": \"eRSDL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"eRSDL\",\n    \"decimals\": 18\n  },\n  \"0xE4cC5A22B39fFB0A56d67F94f9300db20D786a5F\": {\n    \"name\": \"unFederal eRSDL\",\n    \"logo\": \"uneRSDL.svg\",\n    \"erc20\": true,\n    \"symbol\": \"uneRSDL\",\n    \"decimals\": 8\n  },\n  \"0x2dbA05B51eF5A7DE3E7c3327201CA2F8a25C2414\": {\n    \"name\": \"unFederal DAI\",\n    \"logo\": \"unDAI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unDAI\",\n    \"decimals\": 8\n  },\n  \"0xFaCecE87e14B50eafc85C44C01702F5f485CA460\": {\n    \"name\": \"unFederal ETH\",\n    \"logo\": \"unETH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unETH\",\n    \"decimals\": 8\n  },\n  \"0x6b576972de33BebDe3A703BfF52a091e79f8c87A\": {\n    \"name\": \"unFederal USDC\",\n    \"logo\": \"unUSDC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unUSDC\",\n    \"decimals\": 8\n  },\n  \"0x6e2aA5bB90ac37D9006685AFc651ef067E1c7b44\": {\n    \"name\": \"unFederal USDT\",\n    \"logo\": \"unUSDT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unUSDT\",\n    \"decimals\": 8\n  },\n  \"0x5D446FC8DBd10EBAcfE9A427aB5402586af98cD4\": {\n    \"name\": \"unFederal WBTC\",\n    \"logo\": \"unWBTC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unWBTC\",\n    \"decimals\": 8\n  },\n  \"0xD837eCa6C91c67D98461A411BA2f00bdA9960a9D\": {\n    \"name\": \"unFederal AAVE\",\n    \"logo\": \"unAAVE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unAAVE\",\n    \"decimals\": 8\n  },\n  \"0x9e29Ce9cD25F4141dF6BB85b27Ef6933a16A5824\": {\n    \"name\": \"unFederal YFI\",\n    \"logo\": \"unYFI.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unYFI\",\n    \"decimals\": 8\n  },\n  \"0x031002d15B0D0Cd7c9129d6F644446368deaE391\": {\n    \"name\": \"unFederal LINK\",\n    \"logo\": \"unLINK.svg\",\n    \"erc20\": true,\n    \"symbol\": \"unLINK\",\n    \"decimals\": 8\n  },\n  \"0xB8E2e2101eD11e9138803cd3e06e16dd19910647\": {\n    \"name\": \"ArdCoin\",\n    \"logo\": \"ardcoin.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ARDX\",\n    \"decimals\": 2\n  },\n  \"0x6D0F5149c502faf215C89ab306ec3E50b15e2892\": {\n    \"name\": \"Portion Token\",\n    \"logo\": \"PRT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PRT\",\n    \"decimals\": 18\n  },\n  \"0xcc7ab8d78dBA187dC95bF3bB86e65E0C26d0041f\": {\n    \"name\": \"3SPACE ART\",\n    \"logo\": \"3SPACE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PACE\",\n    \"decimals\": 18\n  },\n  \"0x3845badAde8e6dFF049820680d1F14bD3903a5d0\": {\n    \"name\": \"SAND\",\n    \"logo\": \"SAND.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SAND\",\n    \"decimals\": 18\n  },\n  \"0xcc7ab8d78dBA187dC95bF3bB86e65E0C26d0041f\": {\n    \"name\": \"Spacelens\",\n    \"logo\": \"SPACE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SPACE\",\n    \"decimals\": 18\n  },\n  \"0x50f5474724e0Ee42D9a4e711ccFB275809Fd6d4a\": {\n    \"name\": \"Sandbox's LANDs\",\n    \"logo\": \"SAND.svg\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"LAND\",\n    \"decimals\": 0\n  },\n  \"0x362bc847A3a9637d3af6624EeC853618a43ed7D2\": {\n    \"name\": \"PARSIQ\",\n    \"logo\": \"parsiq.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PRQ\",\n    \"decimals\": 18\n  },\n  \"0x21381e026Ad6d8266244f2A583b35F9E4413FA2a\": {\n    \"name\": \"Formation Finance\",\n    \"logo\": \"form.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FORM\",\n    \"decimals\": 18\n  },\n  \"0x2ba592F78dB6436527729929AAf6c908497cB200\": {\n    \"name\": \"Cream\",\n    \"logo\": \"cream.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CREAM\",\n    \"decimals\": 18\n  },\n  \"0x46576e20EC5F25586A6Fa2E0d6B6058354B72E72\": {\n    \"name\": \"Cryptomind\",\n    \"logo\": \"CR.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"CR\",\n    \"decimals\": 8\n  },\n  \"0x5ab21Ec0bfa0B29545230395e3Adaca7d552C948\": {\n    \"name\": \"PUNKS Comic\",\n    \"logo\": \"punks-comic.svg\",\n    \"erc20\": false,\n    \"erc721\": true,\n    \"symbol\": \"COMIC\",\n    \"decimals\": 0\n  },\n  \"0x9C2dc0c3CC2BADdE84B0025Cf4df1c5aF288D835\": {\n    \"name\": \"Coreto\",\n    \"logo\": \"coreto.svg\",\n    \"erc20\": true,\n    \"symbol\": \"COR\",\n    \"decimals\": 18\n  },\n  \"0x0De05F6447ab4D22c8827449EE4bA2D5C288379B\": {\n    \"name\": \"OOKI\",\n    \"logo\": \"ooki.svg\",\n    \"erc20\": true,\n    \"symbol\": \"OOKI\",\n    \"decimals\": 18\n  },\n  \"0x6B4c7A5e3f0B99FCD83e9c089BDDD6c7FCe5c611\": {\n    \"name\": \"Million\",\n    \"logo\": \"million.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MM\",\n    \"decimals\": 18\n  },\n  \"0x56d811088235F11C8920698a204A5010a788f4b3\": {\n    \"name\": \"bZx Protocol Token (BZRX)\",\n    \"logo\": \"ic_token_bzrx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BZRX\",\n    \"decimals\": 18\n  },\n  \"0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F\": {\n    \"name\": \"bZx Vesting Token (vBZRX)\",\n    \"logo\": \"ic_token_vbzrx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"vBZRX\",\n    \"decimals\": 18\n  },\n  \"0x3085154623F51b00Dedfc6Ceeb5197277A66B17B\": {\n    \"name\": \"NIFTY\",\n    \"logo\": \"nfty.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NFTY\",\n    \"decimals\": 18\n  },\n  \"0xB983E01458529665007fF7E0CDdeCDB74B967Eb6\": {\n    \"name\": \"Fulcrum ETH iToken (iETH)\",\n    \"logo\": \"ic_token_ieth.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iETH\",\n    \"decimals\": 18\n  },\n  \"0x32E4c68B3A4a813b710595AebA7f6B7604Ab9c15\": {\n    \"name\": \"Fulcrum USDC iToken (iUSDC)\",\n    \"logo\": \"ic_token_iusdc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iUSDC\",\n    \"decimals\": 6\n  },\n  \"0x2ffa85f655752fB2aCB210287c60b9ef335f5b6E\": {\n    \"name\": \"Fulcrum WBTC iToken (iWBTC)\",\n    \"logo\": \"ic_token_ibtc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iWBTC\",\n    \"decimals\": 8\n  },\n  \"0x687642347a9282Be8FD809d8309910A3f984Ac5a\": {\n    \"name\": \"Fulcrum KNC iToken (iKNC)\",\n    \"logo\": \"ic_token_iknc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iKNC\",\n    \"decimals\": 18\n  },\n  \"0x463538705E7d22aA7f03Ebf8ab09B067e1001B54\": {\n    \"name\": \"Fulcrum LINK iToken (iLINK)\",\n    \"logo\": \"ic_token_ilink.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iLINK\",\n    \"decimals\": 18\n  },\n  \"0x6b093998D36f2C7F0cc359441FBB24CC629D5FF0\": {\n    \"name\": \"Fulcrum DAI iToken (iDAI)\",\n    \"logo\": \"ic_token_idai.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iDAI\",\n    \"decimals\": 18\n  },\n  \"0x7e9997a38A439b2be7ed9c9C4628391d3e055D48\": {\n    \"name\": \"Fulcrum USDT iToken (iUSDT)\",\n    \"logo\": \"ic_token_iusdt.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iUSDT\",\n    \"decimals\": 6\n  },\n  \"0x9189c499727f88F8eCC7dC4EEA22c828E6AaC015\": {\n    \"name\": \"Fulcrum MKR iToken (iMKR)\",\n    \"logo\": \"ic_token_imkr.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iMKR\",\n    \"decimals\": 18\n  },\n  \"0x18240BD9C07fA6156Ce3F3f61921cC82b2619157\": {\n    \"name\": \"Fulcrum BZRX iToken (iBZRX)\",\n    \"logo\": \"ic_token_ibzrx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iBZRX\",\n    \"decimals\": 18\n  },\n  \"0x7F3Fe9D492A9a60aEBb06d82cBa23c6F32CAd10b\": {\n    \"name\": \"Fulcrum YFI iToken (iYFI)\",\n    \"logo\": \"ic_token_iyfi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iYFI\",\n    \"decimals\": 18\n  },\n  \"0x0a625FceC657053Fe2D9FFFdeb1DBb4e412Cf8A8\": {\n    \"name\": \"Fulcrum UNI iToken (iUNI)\",\n    \"logo\": \"ic_token_iuni.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iUNI\",\n    \"decimals\": 18\n  },\n  \"0x0cae8d91E0b1b7Bd00D906E990C3625b2c220db1\": {\n    \"name\": \"Fulcrum AAVE iToken (iAAVE)\",\n    \"logo\": \"ic_token_iaave.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iAAVE\",\n    \"decimals\": 18\n  },\n  \"0x3dA0e01472Dee3746b4D324a65D7EdFaECa9Aa4f\": {\n    \"name\": \"Fulcrum LRC iToken (iLRC)\",\n    \"logo\": \"ic_token_ilrc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iLRC\",\n    \"decimals\": 18\n  },\n  \"0x6d29903BC2c4318b59B35d97Ab98ab9eC08Ed70D\": {\n    \"name\": \"Fulcrum COMP iToken (iCOMP)\",\n    \"logo\": \"ic_token_icomp.svg\",\n    \"erc20\": true,\n    \"symbol\": \"iCOMP\",\n    \"decimals\": 18\n  },\n  \"0x08c32b0726C5684024ea6e141C50aDe9690bBdcc\": {\n    \"name\": \"Stratos Token\",\n    \"logo\": \"stos.svg\",\n    \"erc20\": true,\n    \"symbol\": \"STOS\",\n    \"decimals\": 18\n  },\n  \"0xe28b3B32B6c345A34Ff64674606124Dd5Aceca30\": {\n    \"name\": \"Injective\",\n    \"logo\": \"inj.svg\",\n    \"erc20\": true,\n    \"symbol\": \"INJ\",\n    \"decimals\": 18\n  },\n  \"0xe516D78d784C77D479977BE58905B3f2b1111126\": {\n    \"name\": \"Bitspawn\",\n    \"logo\": \"spwn.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SPWN\",\n    \"decimals\": 18\n  },\n  \"0xB16e967ff83DE3F1e9FCeAfbc2C28c1c5c56eF91\": {\n    \"name\": \"Polkadog\",\n    \"logo\": \"polkadog.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PDOG\",\n    \"decimals\": 18\n  },\n  \"0x07c52c2537D84e532a9F15d32E152C8B94D2b232\": {\n    \"name\": \"ZkTube\",\n    \"logo\": \"ZKT.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ZKT\",\n    \"decimals\": 18\n  },\n  \"0xF4d861575ecC9493420A3f5a14F85B13f0b50EB3\": {\n    \"name\": \"Fractal Protocol\",\n    \"logo\": \"fractal.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FCL\",\n    \"decimals\": 18\n  },\n  \"0x3af33bEF05C2dCb3C7288b77fe1C8d2AeBA4d789\": {\n    \"name\": \"Kromatika\",\n    \"logo\": \"krom.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KROM\",\n    \"decimals\": 18\n  },\n  \"0xA130E3a33a4d84b04c3918c4E5762223Ae252F80\": {\n    \"name\": \"Swash Token\",\n    \"logo\": \"swash.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SWASH\",\n    \"decimals\": 18\n  },\n  \"0xea7Cc765eBC94C4805e3BFf28D7E4aE48D06468A\": {\n    \"name\": \"NearPad Token\",\n    \"logo\": \"nearpad.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PAD\",\n    \"decimals\": 18\n  },\n  \"0x87C22615435998D69ACA34889D03155B694a94fc\": {\n    \"name\": \"DiemLibre\",\n    \"logo\": \"DLB.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DLB\",\n    \"decimals\": 18\n  },\n  \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\": {\n    \"name\": \"ApeCoin\",\n    \"logo\": \"APE.svg\",\n    \"erc20\": true,\n    \"symbol\": \"APE\",\n    \"decimals\": 18\n  },\n  \"0xCd1fAFf6e578Fa5cAC469d2418C95671bA1a62Fe\": {\n    \"name\": \"Torum Token\",\n    \"logo\": \"torum.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XTM\",\n    \"decimals\": 18\n  },\n  \"0xcf0C122c6b73ff809C693DB761e7BaeBe62b6a2E\": {\n    \"name\": \"FLOKI\",\n    \"logo\": \"floki.svg\",\n    \"erc20\": true,\n    \"symbol\": \"FLOKI\",\n    \"decimals\": 9\n  },\n  \"0xe831F96A7a1DcE1aa2EB760b1e296c6A74CaA9d5\": {\n    \"name\": \"Nexum Coin\",\n    \"logo\": \"nexum.svg\",\n    \"erc20\": true,\n    \"symbol\": \"Nexm\",\n    \"decimals\": 8\n  },\n  \"0x6710c63432A2De02954fc0f851db07146a6c0312\": {\n    \"name\": \"MFG\",\n    \"logo\": \"mfg.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MFG\",\n    \"decimals\": 18\n  },\n  \"0xae78736Cd615f374D3085123A210448E74Fc6393\": {\n    \"name\": \"Rocket Pool ETH\",\n    \"logo\": \"rETH.svg\",\n    \"erc20\": true,\n    \"symbol\": \"rETH\",\n    \"decimals\": 18\n  },\n  \"0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6\": {\n    \"name\": \"Decentralized USD\",\n    \"logo\": \"USDD.svg\",\n    \"erc20\": true,\n    \"symbol\": \"USDD\",\n    \"decimals\": 18\n  },\n  \"0xD33526068D116cE69F19A9ee46F0bd304F21A51f\": {\n    \"name\": \"Rocket Pool\",\n    \"logo\": \"rpl.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RPL\",\n    \"decimals\": 18\n  },\n  \"0x9d38F670D15C14716BE1F109a4F453E966A2B6D4\": {\n    \"name\": \"Quid Ika\",\n    \"logo\": \"QuidIka.svg\",\n    \"erc20\": true,\n    \"symbol\": \"QUID\",\n    \"decimals\": 9\n  },\n  \"0xD3c625F54dec647DB8780dBBe0E880eF21BA4329\": {\n    \"name\": \"HollaEx Token\",\n    \"logo\": \"xht.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XHT\",\n    \"decimals\": 18\n  },\n  \"0x01e0E2e61f554eCAaeC0cC933E739Ad90f24a86d\": {\n    \"name\": \"GTON\",\n    \"logo\": \"gton.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GTON\",\n    \"decimals\": 18\n  },\n  \"0xeFF66B4A84C8a6b69b99EB1C5e39aF8fc35d13db\": {\n    \"name\": \"sGTON\",\n    \"logo\": \"sgton.svg\",\n    \"erc20\": true,\n    \"symbol\": \"sGTON\",\n    \"decimals\": 18\n  },\n  \"0x7659CE147D0e714454073a5dd7003544234b6Aa0\": {\n    \"name\": \"XCAD Token\",\n    \"logo\": \"xcad.svg\",\n    \"erc20\": true,\n    \"symbol\": \"XCAD\",\n    \"decimals\": 18\n  },\n  \"0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0\": {\n    \"name\": \"Tellor Tributes\",\n    \"logo\": \"TRB.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TRB\",\n    \"decimals\": 18\n  },\n  \"0x8d96B4ab6C741a4C8679AE323a100d74f085BA8F\": {\n    \"name\": \"Bazaars\",\n    \"logo\": \"BZR.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BZR\",\n    \"decimals\": 18\n  },\n  \"0x9ee91F9f426fA633d227f7a9b000E28b9dfd8599\": {\n    \"name\": \"Liquid staked MATIC\",\n    \"logo\": \"stMATIC.svg\",\n    \"erc20\": true,\n    \"symbol\": \"stMATIC\",\n    \"decimals\": 18\n  },\n  \"0x0d02755a5700414B26FF040e1dE35D337DF56218\": {\n    \"name\": \"Bend Token\",\n    \"logo\": \"BendDAO.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BEND\",\n    \"decimals\": 18\n  },\n  \"0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5\": {\n    \"name\": \"BitDAO\",\n    \"logo\": \"BitDAO.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"BIT\",\n    \"decimals\": 18\n  },\n  \"0xb8919522331C59f5C16bDfAA6A121a6E03A91F62\": {\n    \"name\": \"Home\",\n    \"logo\": \"home.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"HOME\",\n    \"decimals\": 6\n  },\n  \"0xa54d2EBfD977ad836203c85F18db2F0a0cF88854\": {\n    \"name\": \"Bacon\",\n    \"logo\": \"bacon.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"BACON\",\n    \"decimals\": 18\n  },\n  \"0x249cA82617eC3DfB2589c4c17ab7EC9765350a18\": {\n    \"name\": \"Verse\",\n    \"logo\": \"VERSE.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"VERSE\",\n    \"decimals\": 18\n  },\n  \"0x317eb4ad9cfaC6232f0046831322E895507bcBeb\": {\n    \"name\": \"Tidex Token\",\n    \"logo\": \"tidex.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TDX\",\n    \"decimals\": 18\n  },\n  \"0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE\": {\n    \"name\": \"SHIBA INU\",\n    \"logo\": \"shib.svg\",\n    \"erc20\": true,\n    \"symbol\": \"SHIB\",\n    \"decimals\": 18\n  },\n  \"0x3506424F91fD33084466F402d5D97f05F8e3b4AF\": {\n    \"name\": \"chiliZ\",\n    \"logo\": \"chz.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CHZ\",\n    \"decimals\": 18\n  },\n  \"0x15D4c048F83bd7e37d49eA4C83a07267Ec4203dA\": {\n    \"name\": \"Gala\",\n    \"logo\": \"gala.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GALA\",\n    \"decimals\": 8\n  },\n  \"0x69af81e73A73B40adF4f3d4223Cd9b1ECE623074\": {\n    \"name\": \"Mask Network\",\n    \"logo\": \"mask.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MASK\",\n    \"decimals\": 18\n  },\n  \"0xD533a949740bb3306d119CC777fa900bA034cd52\": {\n    \"name\": \"Curve DAO Token\",\n    \"logo\": \"crv.svg\",\n    \"erc20\": true,\n    \"symbol\": \"CRV\",\n    \"decimals\": 18\n  },\n  \"0x92D6C1e31e14520e676a687F0a93788B716BEff5\": {\n    \"name\": \"dYdX\",\n    \"logo\": \"dydx.svg\",\n    \"erc20\": true,\n    \"symbol\": \"DYDX\",\n    \"decimals\": 18\n  },\n  \"0x60bE1e1fE41c1370ADaF5d8e66f07Cf1C2Df2268\": {\n    \"name\": \"Perion Credits\",\n    \"logo\": \"perc.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PERC\",\n    \"decimals\": 18\n  },\n  \"0x8971f9fd7196e5cEE2C1032B50F656855af7Dd26\": {\n    \"name\": \"Lambda\",\n    \"logo\": \"LAMB.svg\",\n    \"erc20\": true,\n    \"symbol\": \"LAMB\",\n    \"decimals\": 18\n  },\n  \"0x65514b352d1d4a17DE97f95C7faB177C625Bd6ff\": {\n    \"name\": \"KIBBLE Token\",\n    \"logo\": \"kibble.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"KBLE\",\n    \"decimals\": 18\n  },\n  \"0xd9Fcd98c322942075A5C3860693e9f4f03AAE07b\": {\n    \"name\": \"Euler\",\n    \"logo\": \"eul.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"EUL\",\n    \"decimals\": 18\n  },\n  \"0x777fD20c983d6658c1D50b3958B3A1733d1cd1E1\": {\n    \"name\": \"PUBLISH\",\n    \"logo\": \"publish.svg\",\n    \"erc20\": true,\n    \"symbol\": \"NEWS\",\n    \"decimals\": 9\n  },\n  \"0x19062190B1925b5b6689D7073fDfC8c2976EF8Cb\": {\n    \"name\": \"Swarm\",\n    \"logo\": \"ethswarm.svg\",\n    \"erc20\": true,\n    \"symbol\": \"BZZ\",\n    \"decimals\": 16\n  },\n  \"0x6aA030a9710CAD6E719A4EC0a85260Eb3F4F86c1\": {\n    \"name\": \"Real World Asset\",\n    \"logo\": \"rwa.svg\",\n    \"erc20\": true,\n    \"symbol\": \"RWA\",\n    \"decimals\": 18\n  },\n  \"0xde16Ce60804a881e9F8c4eBB3824646EDecd478D\": {\n    \"name\": \"MagicCraft\",\n    \"logo\": \"magiccraft.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MCRT\",\n    \"decimals\": 9\n  },\n  \"0x7163436b8EfFfB469F6BB81cc908b1661d4795e6\": {\n    \"name\": \"Esco coin\",\n    \"logo\": \"escocoin.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ESCO\",\n    \"decimals\": 18\n  },\n  \"0x9625cE7753ace1fa1865A47aAe2c5C2Ce4418569\": {\n    \"name\": \"KAP Games\",\n    \"logo\": \"kap-games.svg\",\n    \"erc20\": true,\n    \"symbol\": \"KAP\",\n    \"decimals\": 18\n  },\n  \"0x4FbB350052Bca5417566f188eB2EBCE5b19BC964\": {\n    \"name\": \"Rigo\",\n    \"logo\": \"grg.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GRG\",\n    \"decimals\": 18\n  },\n  \"0xD8E163967FED76806Df0097B704bA721B9b37656\": {\n    \"name\": \"Cope\",\n    \"logo\": \"cope.svg\",\n    \"erc20\": true,\n    \"symbol\": \"COPE\",\n    \"decimals\": 18\n  },\n  \"0xdfbc9050F5B01DF53512DCC39B4f2B2BBaCD517A\": {\n    \"name\": \"Jobchain\",\n    \"logo\": \"job.svg\",\n    \"erc20\": true,\n    \"symbol\": \"JOB\",\n    \"decimals\": 8\n  },\n  \"0x083D41d6DD21EE938f0c055CA4fb12268DF0EfaC\": {\n    \"name\": \"GogolCoin\",\n    \"logo\": \"gol.svg\",\n    \"erc20\": true,\n    \"symbol\": \"GOL\",\n    \"decimals\": 4\n  },\n  \"0x9B4a69dE6CA0deFDD02c0c4ce6Cb84de5202944E\": {\n    \"name\": \"PROOF Platform\",\n    \"erc20\": true,\n    \"symbol\": \"PROOF\",\n    \"decimals\": 9,\n    \"logo\": \"proof-platform.svg\"\n  },\n  \"0x4507cEf57C46789eF8d1a19EA45f4216bae2B528\": {\n    \"name\": \"TokenFi\",\n    \"logo\": \"tokenfi.svg\",\n    \"erc20\": true,\n    \"symbol\": \"TOKEN\",\n    \"decimals\": 9\n  },\n  \"0x8B39B70E39Aa811b69365398e0aACe9bee238AEb\": {\n    \"name\": \"PolkaFoundry\",\n    \"logo\": \"pkf.svg\",\n    \"erc20\": true,\n    \"symbol\": \"PKF\",\n    \"decimals\": 18\n  },\n  \"0x2c95D751DA37A5C1d9c5a7Fd465c1d50F3d96160\": {\n    \"name\": \"WASSIE\",\n    \"logo\": \"wassie.svg\",\n    \"erc20\": true,\n    \"symbol\": \"WASSIE\",\n    \"decimals\": 18\n  },\n  \"0x06325440D014e39736583c165C2963BA99fAf14E\": {\n    \"name\": \"Curve.fi\",\n    \"logo\": \"steCRV.png\",\n    \"erc20\": true,\n    \"symbol\": \"steCRV\",\n    \"decimals\": 18\n  },\n  \"0x4E241A9EC66832a16bceaeB9156E524487f061D7\": {\n    \"name\": \"ETF Rocks\",\n    \"logo\": \"etf.svg\",\n    \"erc20\": true,\n    \"symbol\": \"ETF\",\n    \"decimals\": 18\n  },\n  \"0xA849EaaE994fb86Afa73382e9Bd88c2B6b18Dc71\": {\n    \"name\": \"Mass Vehicle Ledger\",\n    \"logo\": \"mvl.svg\",\n    \"erc20\": true,\n    \"symbol\": \"MVL\",\n    \"decimals\": 18\n  },\n  \"0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa\": {\n    \"name\": \"Mantle Staked Ether\",\n    \"logo\": \"mETH.svg\",\n    \"erc20\": true,\n    \"erc721\": false,\n    \"symbol\": \"mETH\",\n    \"decimals\": 18\n  }\n}\n","module.exports = require('./contract-map.json')\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CHAIN_ID_TO_ETHERS_NETWORK_NAME_MAP = exports.ApprovalType = exports.ORIGIN_METAMASK = exports.NFT_API_TIMEOUT = exports.NFT_API_VERSION = exports.NFT_API_BASE_URL = exports.OPENSEA_PROXY_URL = exports.BUILT_IN_NETWORKS = exports.TESTNET_TICKER_SYMBOLS = exports.ASSET_TYPES = exports.GWEI = exports.ERC1155_TOKEN_RECEIVER_INTERFACE_ID = exports.ERC1155_METADATA_URI_INTERFACE_ID = exports.ERC1155_INTERFACE_ID = exports.ERC721_ENUMERABLE_INTERFACE_ID = exports.ERC721_METADATA_INTERFACE_ID = exports.ERC721_INTERFACE_ID = exports.ERC20 = exports.ERC1155 = exports.ERC721 = exports.MAX_SAFE_CHAIN_ID = exports.GANACHE_CHAIN_ID = exports.IPFS_DEFAULT_GATEWAY_URL = exports.FALL_BACK_VS_CURRENCY = exports.RPC = void 0;\nconst types_1 = require(\"./types.cjs\");\nexports.RPC = 'rpc';\nexports.FALL_BACK_VS_CURRENCY = 'ETH';\nexports.IPFS_DEFAULT_GATEWAY_URL = 'https://cloudflare-ipfs.com/ipfs/';\n// NETWORKS ID\n// `toHex` not invoked to avoid cyclic dependency\nexports.GANACHE_CHAIN_ID = '0x539'; // toHex(1337)\n/**\n * The largest possible chain ID we can handle.\n * Explanation: https://gist.github.com/rekmarks/a47bd5f2525936c4b8eee31a16345553\n */\nexports.MAX_SAFE_CHAIN_ID = 4503599627370476;\n// TOKEN STANDARDS\nexports.ERC721 = 'ERC721';\nexports.ERC1155 = 'ERC1155';\nexports.ERC20 = 'ERC20';\n// TOKEN INTERFACE IDS\nexports.ERC721_INTERFACE_ID = '0x80ac58cd';\nexports.ERC721_METADATA_INTERFACE_ID = '0x5b5e139f';\nexports.ERC721_ENUMERABLE_INTERFACE_ID = '0x780e9d63';\nexports.ERC1155_INTERFACE_ID = '0xd9b67a26';\nexports.ERC1155_METADATA_URI_INTERFACE_ID = '0x0e89341c';\nexports.ERC1155_TOKEN_RECEIVER_INTERFACE_ID = '0x4e2312e0';\n// UNITS\nexports.GWEI = 'gwei';\n// ASSET TYPES\nexports.ASSET_TYPES = {\n    NATIVE: 'NATIVE',\n    TOKEN: 'TOKEN',\n    NFT: 'NFT',\n    UNKNOWN: 'UNKNOWN',\n};\n// TICKER SYMBOLS\nexports.TESTNET_TICKER_SYMBOLS = {\n    GOERLI: 'GoerliETH',\n    SEPOLIA: 'SepoliaETH',\n    LINEA_GOERLI: 'LineaETH',\n    LINEA_SEPOLIA: 'LineaETH',\n};\n/**\n * Map of all build-in Infura networks to their network, ticker and chain IDs.\n */\nexports.BUILT_IN_NETWORKS = {\n    [types_1.NetworkType.goerli]: {\n        chainId: types_1.ChainId.goerli,\n        ticker: types_1.NetworksTicker.goerli,\n        rpcPrefs: {\n            blockExplorerUrl: `https://${types_1.NetworkType.goerli}.etherscan.io`,\n        },\n    },\n    [types_1.NetworkType.sepolia]: {\n        chainId: types_1.ChainId.sepolia,\n        ticker: types_1.NetworksTicker.sepolia,\n        rpcPrefs: {\n            blockExplorerUrl: `https://${types_1.NetworkType.sepolia}.etherscan.io`,\n        },\n    },\n    [types_1.NetworkType.mainnet]: {\n        chainId: types_1.ChainId.mainnet,\n        ticker: types_1.NetworksTicker.mainnet,\n        rpcPrefs: {\n            blockExplorerUrl: 'https://etherscan.io',\n        },\n    },\n    [types_1.NetworkType['linea-goerli']]: {\n        chainId: types_1.ChainId['linea-goerli'],\n        ticker: types_1.NetworksTicker['linea-goerli'],\n        rpcPrefs: {\n            blockExplorerUrl: 'https://goerli.lineascan.build',\n        },\n    },\n    [types_1.NetworkType['linea-sepolia']]: {\n        chainId: types_1.ChainId['linea-sepolia'],\n        ticker: types_1.NetworksTicker['linea-sepolia'],\n        rpcPrefs: {\n            blockExplorerUrl: 'https://sepolia.lineascan.build',\n        },\n    },\n    [types_1.NetworkType['linea-mainnet']]: {\n        chainId: types_1.ChainId['linea-mainnet'],\n        ticker: types_1.NetworksTicker['linea-mainnet'],\n        rpcPrefs: {\n            blockExplorerUrl: 'https://lineascan.build',\n        },\n    },\n    [types_1.NetworkType.rpc]: {\n        chainId: undefined,\n        blockExplorerUrl: undefined,\n        ticker: undefined,\n        rpcPrefs: undefined,\n    },\n};\n// APIs\nexports.OPENSEA_PROXY_URL = 'https://proxy.api.cx.metamask.io/opensea/v1/api/v2';\nexports.NFT_API_BASE_URL = 'https://nft.api.cx.metamask.io';\nexports.NFT_API_VERSION = '1';\nexports.NFT_API_TIMEOUT = 15000;\n// Default origin for controllers\nexports.ORIGIN_METAMASK = 'metamask';\n/**\n * Approval request types for various operations.\n * These types are used by different controllers to create and manage\n * approval requests consistently.\n */\nvar ApprovalType;\n(function (ApprovalType) {\n    ApprovalType[\"AddEthereumChain\"] = \"wallet_addEthereumChain\";\n    ApprovalType[\"ConnectAccounts\"] = \"connect_accounts\";\n    ApprovalType[\"EthDecrypt\"] = \"eth_decrypt\";\n    ApprovalType[\"EthGetEncryptionPublicKey\"] = \"eth_getEncryptionPublicKey\";\n    ApprovalType[\"EthSignTypedData\"] = \"eth_signTypedData\";\n    ApprovalType[\"PersonalSign\"] = \"personal_sign\";\n    ApprovalType[\"ResultError\"] = \"result_error\";\n    ApprovalType[\"ResultSuccess\"] = \"result_success\";\n    ApprovalType[\"SnapDialogAlert\"] = \"snap_dialog:alert\";\n    ApprovalType[\"SnapDialogConfirmation\"] = \"snap_dialog:confirmation\";\n    ApprovalType[\"SnapDialogPrompt\"] = \"snap_dialog:prompt\";\n    ApprovalType[\"SnapDialogDefault\"] = \"snap_dialog\";\n    ApprovalType[\"SwitchEthereumChain\"] = \"wallet_switchEthereumChain\";\n    ApprovalType[\"Transaction\"] = \"transaction\";\n    ApprovalType[\"Unlock\"] = \"unlock\";\n    ApprovalType[\"WalletConnect\"] = \"wallet_connect\";\n    ApprovalType[\"WalletRequestPermissions\"] = \"wallet_requestPermissions\";\n    ApprovalType[\"WatchAsset\"] = \"wallet_watchAsset\";\n})(ApprovalType || (exports.ApprovalType = ApprovalType = {}));\nexports.CHAIN_ID_TO_ETHERS_NETWORK_NAME_MAP = {\n    [types_1.ChainId.goerli]: types_1.BuiltInNetworkName.Goerli,\n    [types_1.ChainId.sepolia]: types_1.BuiltInNetworkName.Sepolia,\n    [types_1.ChainId.mainnet]: types_1.BuiltInNetworkName.Mainnet,\n    [types_1.ChainId['linea-goerli']]: types_1.BuiltInNetworkName.LineaGoerli,\n    [types_1.ChainId['linea-sepolia']]: types_1.BuiltInNetworkName.LineaSepolia,\n    [types_1.ChainId['linea-mainnet']]: types_1.BuiltInNetworkName.LineaMainnet,\n    [types_1.ChainId.aurora]: types_1.BuiltInNetworkName.Aurora,\n};\n//# sourceMappingURL=constants.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.weiHexToGweiDec = exports.toHex = exports.toChecksumHexAddress = exports.timeoutFetch = exports.successfulFetch = exports.safelyExecuteWithTimeout = exports.safelyExecute = exports.query = exports.normalizeEnsName = exports.isValidHexAddress = exports.isValidJson = exports.isSmartContractCode = exports.isSafeDynamicKey = exports.isSafeChainId = exports.isPlainObject = exports.isNonEmptyArray = exports.hexToText = exports.hexToBN = exports.handleFetch = exports.gweiDecToWEIBN = exports.getBuyURL = exports.fromHex = exports.fractionBN = exports.fetchWithErrorHandling = exports.convertHexToDecimal = exports.BNToHex = void 0;\n__exportStar(require(\"./constants.cjs\"), exports);\nvar util_1 = require(\"./util.cjs\");\nObject.defineProperty(exports, \"BNToHex\", { enumerable: true, get: function () { return util_1.BNToHex; } });\nObject.defineProperty(exports, \"convertHexToDecimal\", { enumerable: true, get: function () { return util_1.convertHexToDecimal; } });\nObject.defineProperty(exports, \"fetchWithErrorHandling\", { enumerable: true, get: function () { return util_1.fetchWithErrorHandling; } });\nObject.defineProperty(exports, \"fractionBN\", { enumerable: true, get: function () { return util_1.fractionBN; } });\nObject.defineProperty(exports, \"fromHex\", { enumerable: true, get: function () { return util_1.fromHex; } });\nObject.defineProperty(exports, \"getBuyURL\", { enumerable: true, get: function () { return util_1.getBuyURL; } });\nObject.defineProperty(exports, \"gweiDecToWEIBN\", { enumerable: true, get: function () { return util_1.gweiDecToWEIBN; } });\nObject.defineProperty(exports, \"handleFetch\", { enumerable: true, get: function () { return util_1.handleFetch; } });\nObject.defineProperty(exports, \"hexToBN\", { enumerable: true, get: function () { return util_1.hexToBN; } });\nObject.defineProperty(exports, \"hexToText\", { enumerable: true, get: function () { return util_1.hexToText; } });\nObject.defineProperty(exports, \"isNonEmptyArray\", { enumerable: true, get: function () { return util_1.isNonEmptyArray; } });\nObject.defineProperty(exports, \"isPlainObject\", { enumerable: true, get: function () { return util_1.isPlainObject; } });\nObject.defineProperty(exports, \"isSafeChainId\", { enumerable: true, get: function () { return util_1.isSafeChainId; } });\nObject.defineProperty(exports, \"isSafeDynamicKey\", { enumerable: true, get: function () { return util_1.isSafeDynamicKey; } });\nObject.defineProperty(exports, \"isSmartContractCode\", { enumerable: true, get: function () { return util_1.isSmartContractCode; } });\nObject.defineProperty(exports, \"isValidJson\", { enumerable: true, get: function () { return util_1.isValidJson; } });\nObject.defineProperty(exports, \"isValidHexAddress\", { enumerable: true, get: function () { return util_1.isValidHexAddress; } });\nObject.defineProperty(exports, \"normalizeEnsName\", { enumerable: true, get: function () { return util_1.normalizeEnsName; } });\nObject.defineProperty(exports, \"query\", { enumerable: true, get: function () { return util_1.query; } });\nObject.defineProperty(exports, \"safelyExecute\", { enumerable: true, get: function () { return util_1.safelyExecute; } });\nObject.defineProperty(exports, \"safelyExecuteWithTimeout\", { enumerable: true, get: function () { return util_1.safelyExecuteWithTimeout; } });\nObject.defineProperty(exports, \"successfulFetch\", { enumerable: true, get: function () { return util_1.successfulFetch; } });\nObject.defineProperty(exports, \"timeoutFetch\", { enumerable: true, get: function () { return util_1.timeoutFetch; } });\nObject.defineProperty(exports, \"toChecksumHexAddress\", { enumerable: true, get: function () { return util_1.toChecksumHexAddress; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return util_1.toHex; } });\nObject.defineProperty(exports, \"weiHexToGweiDec\", { enumerable: true, get: function () { return util_1.weiHexToGweiDec; } });\n__exportStar(require(\"./types.cjs\"), exports);\n__exportStar(require(\"./siwe.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.projectLogger = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nObject.defineProperty(exports, \"createModuleLogger\", { enumerable: true, get: function () { return utils_1.createModuleLogger; } });\nexports.projectLogger = (0, utils_1.createProjectLogger)('controller-utils');\n//# sourceMappingURL=logger.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectSIWE = exports.isValidSIWEOrigin = exports.parseDomainParts = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst siwe_parser_1 = require(\"@spruceid/siwe-parser\");\nconst logger_1 = require(\"./logger.cjs\");\nconst log = (0, logger_1.createModuleLogger)(logger_1.projectLogger, 'detect-siwe');\n/**\n * This function strips the hex prefix from a string if it has one.\n * If the input is not a string, return it unmodified.\n *\n * @param str - The string to check\n * @returns The string without the hex prefix\n */\nfunction safeStripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return (0, utils_1.remove0x)(str);\n}\n/**\n * This function converts a hex string to text if it's not a 32 byte hex string.\n *\n * @param hex - The hex string to convert to text\n * @returns The text representation of the hex string\n */\nfunction msgHexToText(hex) {\n    try {\n        const stripped = safeStripHexPrefix(hex);\n        const buff = Buffer.from(stripped, 'hex');\n        return buff.length === 32 ? hex : buff.toString('utf8');\n    }\n    catch (e) {\n        log(e);\n        return hex;\n    }\n}\nconst DEFAULT_PORTS_BY_PROTOCOL = {\n    'http:': '80',\n    'https:': '443',\n};\n/**\n * Parses parts from RFC 3986 authority from EIP-4361 `domain` field.\n *\n * @param domain - input string\n * @param originProtocol - implied protocol from origin\n * @returns parsed parts\n */\nconst parseDomainParts = (domain, originProtocol) => {\n    if (domain.match(/^[^/:]*:\\/\\//u)) {\n        return new URL(domain);\n    }\n    return new URL(`${originProtocol}//${domain}`);\n};\nexports.parseDomainParts = parseDomainParts;\n/**\n * Validates origin of a Sign-In With Ethereum (SIWE)(EIP-4361) request.\n * As per spec:\n * hostname must match.\n * port and username must match iff specified.\n * Protocol binding and full same-origin are currently not performed.\n *\n * @param req - Signature request\n * @returns true if origin matches domain; false otherwise\n */\nconst isValidSIWEOrigin = (req) => {\n    try {\n        const { origin, siwe } = req;\n        // origin = scheme://[user[:password]@]domain[:port]\n        // origin is supplied by environment and must match domain claim in message\n        if (!origin || !siwe?.parsedMessage?.domain) {\n            return false;\n        }\n        const originParts = new URL(origin);\n        const domainParts = (0, exports.parseDomainParts)(siwe.parsedMessage.domain, originParts.protocol);\n        if (domainParts.hostname.localeCompare(originParts.hostname, undefined, {\n            sensitivity: 'accent',\n        }) !== 0) {\n            return false;\n        }\n        if (domainParts.port !== '' && domainParts.port !== originParts.port) {\n            // If origin port is not specified, protocol default is implied\n            return (originParts.port === '' &&\n                domainParts.port === DEFAULT_PORTS_BY_PROTOCOL[originParts.protocol]);\n        }\n        if (domainParts.username !== '' &&\n            domainParts.username !== originParts.username) {\n            return false;\n        }\n        return true;\n    }\n    catch (e) {\n        log(e);\n        return false;\n    }\n};\nexports.isValidSIWEOrigin = isValidSIWEOrigin;\n/**\n * This function intercepts a sign message, detects if it's a\n * Sign-In With Ethereum (SIWE)(EIP-4361) message, and returns an object with\n * relevant SIWE data.\n *\n * {@see {@link https://eips.ethereum.org/EIPS/eip-4361}}\n *\n * @param msgParams - The params of the message to sign\n * @param msgParams.data - The data of the message to sign\n * @returns An object with the relevant SIWE data\n */\nconst detectSIWE = (msgParams) => {\n    try {\n        const { data } = msgParams;\n        const message = msgHexToText(data);\n        const parsedMessage = new siwe_parser_1.ParsedMessage(message);\n        return {\n            isSIWEMessage: true,\n            parsedMessage,\n        };\n    }\n    catch (error) {\n        // ignore error, it's not a valid SIWE message\n        return {\n            isSIWEMessage: false,\n            parsedMessage: null,\n        };\n    }\n};\nexports.detectSIWE = detectSIWE;\n//# sourceMappingURL=siwe.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkNickname = exports.BlockExplorerUrl = exports.NetworksTicker = exports.ChainId = exports.BuiltInNetworkName = exports.isInfuraNetworkType = exports.isNetworkType = exports.NetworkType = exports.InfuraNetworkType = void 0;\n/**\n * The names of built-in Infura networks\n */\nexports.InfuraNetworkType = {\n    mainnet: 'mainnet',\n    goerli: 'goerli',\n    sepolia: 'sepolia',\n    'linea-goerli': 'linea-goerli',\n    'linea-sepolia': 'linea-sepolia',\n    'linea-mainnet': 'linea-mainnet',\n};\n/**\n * The \"network type\"; either the name of a built-in network, or \"rpc\" for custom networks.\n */\nexports.NetworkType = {\n    ...exports.InfuraNetworkType,\n    rpc: 'rpc',\n};\n/**\n * A helper to determine whether a given input is NetworkType.\n *\n * @param val - the value to check whether it is NetworkType or not.\n * @returns boolean indicating whether or not the argument is NetworkType.\n */\nfunction isNetworkType(val) {\n    return Object.values(exports.NetworkType).includes(val);\n}\nexports.isNetworkType = isNetworkType;\n/**\n * A type guard to determine whether the input is an InfuraNetworkType.\n *\n * @param value - The value to check.\n * @returns True if the given value is within the InfuraNetworkType enum,\n * false otherwise.\n */\nfunction isInfuraNetworkType(value) {\n    const infuraNetworkTypes = Object.keys(exports.InfuraNetworkType);\n    return infuraNetworkTypes.includes(value);\n}\nexports.isInfuraNetworkType = isInfuraNetworkType;\n/**\n * Names of networks built into the wallet.\n *\n * This includes both Infura and non-Infura networks.\n */\nvar BuiltInNetworkName;\n(function (BuiltInNetworkName) {\n    BuiltInNetworkName[\"Mainnet\"] = \"mainnet\";\n    BuiltInNetworkName[\"Goerli\"] = \"goerli\";\n    BuiltInNetworkName[\"Sepolia\"] = \"sepolia\";\n    BuiltInNetworkName[\"LineaGoerli\"] = \"linea-goerli\";\n    BuiltInNetworkName[\"LineaSepolia\"] = \"linea-sepolia\";\n    BuiltInNetworkName[\"LineaMainnet\"] = \"linea-mainnet\";\n    BuiltInNetworkName[\"Aurora\"] = \"aurora\";\n})(BuiltInNetworkName || (exports.BuiltInNetworkName = BuiltInNetworkName = {}));\n/**\n * Decimal string chain IDs of built-in networks, by name.\n *\n * `toHex` not invoked to avoid cyclic dependency\n */\nexports.ChainId = {\n    [BuiltInNetworkName.Mainnet]: '0x1',\n    [BuiltInNetworkName.Goerli]: '0x5',\n    [BuiltInNetworkName.Sepolia]: '0xaa36a7',\n    [BuiltInNetworkName.Aurora]: '0x4e454152',\n    [BuiltInNetworkName.LineaGoerli]: '0xe704',\n    [BuiltInNetworkName.LineaSepolia]: '0xe705',\n    [BuiltInNetworkName.LineaMainnet]: '0xe708', // toHex(59144)\n};\nvar NetworksTicker;\n(function (NetworksTicker) {\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    NetworksTicker[\"mainnet\"] = \"ETH\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    NetworksTicker[\"goerli\"] = \"GoerliETH\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    NetworksTicker[\"sepolia\"] = \"SepoliaETH\";\n    NetworksTicker[\"linea-goerli\"] = \"LineaETH\";\n    NetworksTicker[\"linea-sepolia\"] = \"LineaETH\";\n    NetworksTicker[\"linea-mainnet\"] = \"ETH\";\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    NetworksTicker[\"rpc\"] = \"\";\n})(NetworksTicker || (exports.NetworksTicker = NetworksTicker = {}));\nexports.BlockExplorerUrl = {\n    [BuiltInNetworkName.Mainnet]: 'https://etherscan.io',\n    [BuiltInNetworkName.Goerli]: 'https://goerli.etherscan.io',\n    [BuiltInNetworkName.Sepolia]: 'https://sepolia.etherscan.io',\n    [BuiltInNetworkName.LineaGoerli]: 'https://goerli.lineascan.build',\n    [BuiltInNetworkName.LineaSepolia]: 'https://sepolia.lineascan.build',\n    [BuiltInNetworkName.LineaMainnet]: 'https://lineascan.build',\n};\nexports.NetworkNickname = {\n    [BuiltInNetworkName.Mainnet]: 'Mainnet',\n    [BuiltInNetworkName.Goerli]: 'Goerli',\n    [BuiltInNetworkName.Sepolia]: 'Sepolia',\n    [BuiltInNetworkName.LineaGoerli]: 'Linea Goerli',\n    [BuiltInNetworkName.LineaSepolia]: 'Linea Sepolia',\n    [BuiltInNetworkName.LineaMainnet]: 'Linea Mainnet',\n};\n//# sourceMappingURL=types.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidJson = exports.isNonEmptyArray = exports.isPlainObject = exports.convertHexToDecimal = exports.query = exports.normalizeEnsName = exports.timeoutFetch = exports.fetchWithErrorHandling = exports.handleFetch = exports.successfulFetch = exports.isSmartContractCode = exports.isValidHexAddress = exports.toChecksumHexAddress = exports.safelyExecuteWithTimeout = exports.safelyExecute = exports.toHex = exports.fromHex = exports.hexToText = exports.hexToBN = exports.getBuyURL = exports.weiHexToGweiDec = exports.gweiDecToWEIBN = exports.fractionBN = exports.BNToHex = exports.isSafeChainId = exports.isSafeDynamicKey = exports.PROTOTYPE_POLLUTION_BLOCKLIST = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst ethjs_unit_1 = require(\"@metamask/ethjs-unit\");\nconst utils_1 = require(\"@metamask/utils\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_ens_namehash_1 = __importDefault(require(\"eth-ens-namehash\"));\nconst fast_deep_equal_1 = __importDefault(require(\"fast-deep-equal\"));\nconst constants_1 = require(\"./constants.cjs\");\nconst TIMEOUT_ERROR = new Error('timeout');\nexports.PROTOTYPE_POLLUTION_BLOCKLIST = [\n    '__proto__',\n    'constructor',\n    'prototype',\n];\n/**\n * Checks whether a dynamic property key could be used in\n * a [prototype pollution attack](https://portswigger.net/web-security/prototype-pollution).\n *\n * @param key - The dynamic key to validate.\n * @returns Whether the given dynamic key is safe to use.\n */\nfunction isSafeDynamicKey(key) {\n    return (typeof key === 'string' &&\n        !exports.PROTOTYPE_POLLUTION_BLOCKLIST.some((blockedKey) => key === blockedKey));\n}\nexports.isSafeDynamicKey = isSafeDynamicKey;\n/**\n * Checks whether the given number primitive chain ID is safe.\n * Because some cryptographic libraries we use expect the chain ID to be a\n * number primitive, it must not exceed a certain size.\n *\n * @param chainId - The chain ID to check for safety.\n * @returns Whether the given chain ID is safe.\n */\nfunction isSafeChainId(chainId) {\n    if (!(0, utils_1.isHexString)(chainId)) {\n        return false;\n    }\n    const decimalChainId = Number.parseInt(chainId, (0, utils_1.isStrictHexString)(chainId) ? 16 : 10);\n    return (Number.isSafeInteger(decimalChainId) &&\n        decimalChainId > 0 &&\n        decimalChainId <= constants_1.MAX_SAFE_CHAIN_ID);\n}\nexports.isSafeChainId = isSafeChainId;\n/**\n * Converts a BN object to a hex string with a '0x' prefix.\n *\n * @param inputBn - BN instance to convert to a hex string.\n * @returns A '0x'-prefixed hex string.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction BNToHex(inputBn) {\n    return (0, utils_1.add0x)(inputBn.toString(16));\n}\nexports.BNToHex = BNToHex;\n/**\n * Used to multiply a BN by a fraction.\n *\n * @param targetBN - Number to multiply by a fraction.\n * @param numerator - Numerator of the fraction multiplier.\n * @param denominator - Denominator of the fraction multiplier.\n * @returns Product of the multiplication.\n */\nfunction fractionBN(targetBN, numerator, denominator) {\n    const numBN = new bn_js_1.default(numerator);\n    const denomBN = new bn_js_1.default(denominator);\n    return targetBN.mul(numBN).div(denomBN);\n}\nexports.fractionBN = fractionBN;\n/**\n * Used to convert a base-10 number from GWEI to WEI. Can handle numbers with decimal parts.\n *\n * @param n - The base 10 number to convert to WEI.\n * @returns The number in WEI, as a BN.\n */\nfunction gweiDecToWEIBN(n) {\n    if (Number.isNaN(n)) {\n        return new bn_js_1.default(0);\n    }\n    const parts = n.toString().split('.');\n    const wholePart = parts[0] || '0';\n    let decimalPart = parts[1] || '';\n    if (!decimalPart) {\n        return (0, ethjs_unit_1.toWei)(wholePart, 'gwei');\n    }\n    if (decimalPart.length <= 9) {\n        return (0, ethjs_unit_1.toWei)(`${wholePart}.${decimalPart}`, 'gwei');\n    }\n    const decimalPartToRemove = decimalPart.slice(9);\n    const decimalRoundingDigit = decimalPartToRemove[0];\n    decimalPart = decimalPart.slice(0, 9);\n    let wei = (0, ethjs_unit_1.toWei)(`${wholePart}.${decimalPart}`, 'gwei');\n    if (Number(decimalRoundingDigit) >= 5) {\n        wei = wei.add(new bn_js_1.default(1));\n    }\n    return wei;\n}\nexports.gweiDecToWEIBN = gweiDecToWEIBN;\n/**\n * Used to convert values from wei hex format to dec gwei format.\n *\n * @param hex - The value in hex wei.\n * @returns The value in dec gwei as string.\n */\nfunction weiHexToGweiDec(hex) {\n    const hexWei = new bn_js_1.default((0, utils_1.remove0x)(hex), 16);\n    return (0, ethjs_unit_1.fromWei)(hexWei, 'gwei');\n}\nexports.weiHexToGweiDec = weiHexToGweiDec;\n/**\n * Return a URL that can be used to obtain ETH for a given network.\n *\n * @param networkCode - Network code of desired network.\n * @param address - Address to deposit obtained ETH.\n * @param amount - How much ETH is desired.\n * @returns URL to buy ETH based on network.\n */\nfunction getBuyURL(networkCode = '1', address, amount = 5) {\n    switch (networkCode) {\n        case '1':\n            // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            return `https://buy.coinbase.com/?code=9ec56d01-7e81-5017-930c-513daa27bb6a&amount=${amount}&address=${address}&crypto_currency=ETH`;\n        case '5':\n            return 'https://goerli-faucet.slock.it/';\n        case '11155111':\n            return 'https://sepoliafaucet.net/';\n        default:\n            return undefined;\n    }\n}\nexports.getBuyURL = getBuyURL;\n/**\n * Converts a hex string to a BN object.\n *\n * @param inputHex - Number represented as a hex string.\n * @returns A BN instance.\n */\nfunction hexToBN(inputHex) {\n    return inputHex ? new bn_js_1.default((0, utils_1.remove0x)(inputHex), 16) : new bn_js_1.default(0);\n}\nexports.hexToBN = hexToBN;\n/**\n * A helper function that converts hex data to human readable string.\n *\n * @param hex - The hex string to convert to string.\n * @returns A human readable string conversion.\n */\nfunction hexToText(hex) {\n    try {\n        const stripped = (0, utils_1.remove0x)(hex);\n        const buff = Buffer.from(stripped, 'hex');\n        return buff.toString('utf8');\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        return hex;\n    }\n}\nexports.hexToText = hexToText;\n/**\n * Parses a hex string and converts it into a number that can be operated on in a bignum-safe,\n * base-10 way.\n *\n * @param value - A base-16 number encoded as a string.\n * @returns The number as a BN object in base-16 mode.\n */\nfunction fromHex(value) {\n    if (bn_js_1.default.isBN(value)) {\n        return value;\n    }\n    return new bn_js_1.default(hexToBN(value).toString(10));\n}\nexports.fromHex = fromHex;\n/**\n * Converts an integer to a hexadecimal representation.\n *\n * @param value - An integer, an integer encoded as a base-10 string, or a BN.\n * @returns The integer encoded as a hex string.\n */\nfunction toHex(value) {\n    if (typeof value === 'string' && (0, utils_1.isStrictHexString)(value)) {\n        return value;\n    }\n    const hexString = bn_js_1.default.isBN(value) || typeof value === 'bigint'\n        ? value.toString(16)\n        : new bn_js_1.default(value.toString(), 10).toString(16);\n    return `0x${hexString}`;\n}\nexports.toHex = toHex;\n/**\n * Execute and return an asynchronous operation without throwing errors.\n *\n * @param operation - Function returning a Promise.\n * @param logError - Determines if the error should be logged.\n * @template Result - Type of the result of the async operation\n * @returns Promise resolving to the result of the async operation.\n */\nasync function safelyExecute(operation, logError = false) {\n    try {\n        return await operation();\n    }\n    catch (error) {\n        /* istanbul ignore next */\n        if (logError) {\n            console.error(error);\n        }\n        return undefined;\n    }\n}\nexports.safelyExecute = safelyExecute;\n/**\n * Execute and return an asynchronous operation with a timeout.\n *\n * @param operation - Function returning a Promise.\n * @param logError - Determines if the error should be logged.\n * @param timeout - Timeout to fail the operation.\n * @template Result - Type of the result of the async operation\n * @returns Promise resolving to the result of the async operation.\n */\nasync function safelyExecuteWithTimeout(operation, logError = false, timeout = 500) {\n    try {\n        return await Promise.race([\n            operation(),\n            new Promise((_, reject) => setTimeout(() => {\n                reject(TIMEOUT_ERROR);\n            }, timeout)),\n        ]);\n    }\n    catch (error) {\n        /* istanbul ignore next */\n        if (logError) {\n            console.error(error);\n        }\n        return undefined;\n    }\n}\nexports.safelyExecuteWithTimeout = safelyExecuteWithTimeout;\n// Tools only see JSDocs for overloads and ignore them for the implementation.\n// eslint-disable-next-line jsdoc/require-jsdoc\nfunction toChecksumHexAddress(address) {\n    if (typeof address !== 'string') {\n        // Mimic behavior of `addHexPrefix` from `ethereumjs-util` (which this\n        // function was previously using) for backward compatibility.\n        return address;\n    }\n    const hexPrefixed = (0, utils_1.add0x)(address);\n    if (!(0, utils_1.isHexString)(hexPrefixed)) {\n        // Version 5.1 of ethereumjs-util would have returned '0xY' for input 'y'\n        // but we shouldn't waste effort trying to change case on a clearly invalid\n        // string. Instead just return the hex prefixed original string which most\n        // closely mimics the original behavior.\n        return hexPrefixed;\n    }\n    return (0, util_1.toChecksumAddress)(hexPrefixed);\n}\nexports.toChecksumHexAddress = toChecksumHexAddress;\n/**\n * Validates that the input is a hex address. This utility method is a thin\n * wrapper around @metamask/utils.isValidHexAddress, with the exception that it\n * by default will return true for hex strings that are otherwise valid\n * hex addresses, but are not prefixed with `0x`.\n *\n * @param possibleAddress - Input parameter to check against.\n * @param options - The validation options.\n * @param options.allowNonPrefixed - If true will allow addresses without `0x` prefix.`\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress, { allowNonPrefixed = true } = {}) {\n    const addressToCheck = allowNonPrefixed\n        ? (0, utils_1.add0x)(possibleAddress)\n        : possibleAddress;\n    if (!(0, utils_1.isStrictHexString)(addressToCheck)) {\n        return false;\n    }\n    return (0, util_1.isValidAddress)(addressToCheck);\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Returns whether the given code corresponds to a smart contract.\n *\n * @param code - The potential smart contract code.\n * @returns Whether the code was smart contract code or not.\n */\nfunction isSmartContractCode(code) {\n    /* istanbul ignore if */\n    if (!code) {\n        return false;\n    }\n    // Geth will return '0x', and ganache-core v2.2.1 will return '0x0'\n    const smartContractCode = code !== '0x' && code !== '0x0';\n    return smartContractCode;\n}\nexports.isSmartContractCode = isSmartContractCode;\n/**\n * Execute fetch and verify that the response was successful.\n *\n * @param request - Request information.\n * @param options - Fetch options.\n * @returns The fetch response.\n */\nasync function successfulFetch(request, options) {\n    const response = await fetch(request, options);\n    if (!response.ok) {\n        throw new Error(`Fetch failed with status '${response.status}' for request '${String(request)}'`);\n    }\n    return response;\n}\nexports.successfulFetch = successfulFetch;\n/**\n * Execute fetch and return object response.\n *\n * @param request - The request information.\n * @param options - The fetch options.\n * @returns The fetch response JSON data.\n */\nasync function handleFetch(request, options) {\n    const response = await successfulFetch(request, options);\n    const object = await response.json();\n    return object;\n}\nexports.handleFetch = handleFetch;\n/**\n * Execute fetch and return object response, log if known error thrown, otherwise rethrow error.\n *\n * @param request - the request options object\n * @param request.url - The request url to query.\n * @param request.options - The fetch options.\n * @param request.timeout - Timeout to fail request\n * @param request.errorCodesToCatch - array of error codes for errors we want to catch in a particular context\n * @returns The fetch response JSON data or undefined (if error occurs).\n */\nasync function fetchWithErrorHandling({ url, options, timeout, errorCodesToCatch, }) {\n    let result;\n    try {\n        if (timeout) {\n            result = Promise.race([\n                await handleFetch(url, options),\n                new Promise((_, reject) => setTimeout(() => {\n                    reject(TIMEOUT_ERROR);\n                }, timeout)),\n            ]);\n        }\n        else {\n            result = await handleFetch(url, options);\n        }\n    }\n    catch (e) {\n        logOrRethrowError(e, errorCodesToCatch);\n    }\n    return result;\n}\nexports.fetchWithErrorHandling = fetchWithErrorHandling;\n/**\n * Fetch that fails after timeout.\n *\n * @param url - Url to fetch.\n * @param options - Options to send with the request.\n * @param timeout - Timeout to fail request.\n * @returns Promise resolving the request.\n */\nasync function timeoutFetch(url, options, timeout = 500) {\n    return Promise.race([\n        successfulFetch(url, options),\n        new Promise((_, reject) => setTimeout(() => {\n            reject(TIMEOUT_ERROR);\n        }, timeout)),\n    ]);\n}\nexports.timeoutFetch = timeoutFetch;\n/**\n * Normalizes the given ENS name.\n *\n * @param ensName - The ENS name.\n * @returns The normalized ENS name string.\n */\nfunction normalizeEnsName(ensName) {\n    // `.` refers to the registry root contract\n    if (ensName === '.') {\n        return ensName;\n    }\n    if (ensName && typeof ensName === 'string') {\n        try {\n            const normalized = eth_ens_namehash_1.default.normalize(ensName.trim());\n            // this regex is only sufficient with the above call to ensNamehash.normalize\n            // TODO: change 7 in regex to 3 when shorter ENS domains are live\n            if (normalized.match(/^(([\\w\\d-]+)\\.)*[\\w\\d-]{7,}\\.(eth|test)$/u)) {\n                return normalized;\n            }\n        }\n        catch (_) {\n            // do nothing\n        }\n    }\n    return null;\n}\nexports.normalizeEnsName = normalizeEnsName;\n/**\n * Wrapper method to handle EthQuery requests.\n *\n * @param ethQuery - EthQuery object initialized with a provider.\n * @param method - Method to request.\n * @param args - Arguments to send.\n * @returns Promise resolving the request.\n */\nfunction query(ethQuery, method, \n// TODO: Replace `any` with type\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nargs = []) {\n    return new Promise((resolve, reject) => {\n        const cb = (error, result) => {\n            if (error) {\n                reject(error);\n                return;\n            }\n            resolve(result);\n        };\n        // Using `in` rather than `hasProperty` so that we look up the prototype\n        // chain for the method.\n        if (method in ethQuery && typeof ethQuery[method] === 'function') {\n            ethQuery[method](...args, cb);\n        }\n        else {\n            ethQuery.sendAsync({ method, params: args }, cb);\n        }\n    });\n}\nexports.query = query;\n/**\n * Converts valid hex strings to decimal numbers, and handles unexpected arg types.\n *\n * @param value - a string that is either a hexadecimal with `0x` prefix or a decimal string.\n * @returns a decimal number.\n */\nconst convertHexToDecimal = (value = '0x0') => {\n    if ((0, utils_1.isStrictHexString)(value)) {\n        return parseInt(value, 16);\n    }\n    return Number(value) ? Number(value) : 0;\n};\nexports.convertHexToDecimal = convertHexToDecimal;\n/**\n * Determines whether a value is a \"plain\" object.\n *\n * @param value - A value to check\n * @returns True if the passed value is a plain object\n */\nfunction isPlainObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Type guard for {@link NonEmptyArray}.\n *\n * @template T - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\n// TODO: Either fix this lint violation or explain why it's necessary to ignore.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for {@link Json}.\n *\n * @param value - The value to check.\n * @returns Whether the value is valid JSON.\n */\nfunction isValidJson(value) {\n    try {\n        return (0, fast_deep_equal_1.default)(value, JSON.parse(JSON.stringify(value)));\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Utility method to log if error is a common fetch error and otherwise rethrow it.\n *\n * @param error - Caught error that we should either rethrow or log to console\n * @param codesToCatch - array of error codes for errors we want to catch and log in a particular context\n */\nfunction logOrRethrowError(error, codesToCatch = []) {\n    if (!error) {\n        return;\n    }\n    if (error instanceof Error) {\n        const includesErrorCodeToCatch = codesToCatch.some((code) => error.message.includes(`Fetch failed with status '${code}'`));\n        if (includesErrorCodeToCatch ||\n            error.message.includes('Failed to fetch') ||\n            error === TIMEOUT_ERROR) {\n            console.error(error);\n        }\n        else {\n            throw error;\n        }\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-throw-literal\n        throw error;\n    }\n}\n//# sourceMappingURL=util.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=BlockTracker.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PollingBlockTracker = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst json_rpc_random_id_1 = __importDefault(require(\"json-rpc-random-id\"));\nconst pify_1 = __importDefault(require(\"pify\"));\nconst logging_utils_1 = require(\"./logging-utils\");\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'polling-block-tracker');\nconst createRandomId = (0, json_rpc_random_id_1.default)();\nconst sec = 1000;\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue;\nconst blockTrackerEvents = ['sync', 'latest'];\nclass PollingBlockTracker extends safe_event_emitter_1.default {\n    constructor(opts = {}) {\n        // parse + validate args\n        if (!opts.provider) {\n            throw new Error('PollingBlockTracker - no provider specified.');\n        }\n        super();\n        // config\n        this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n        this._usePastBlocks = opts.usePastBlocks || false;\n        // state\n        this._currentBlock = null;\n        this._isRunning = false;\n        // bind functions for internal use\n        this._onNewListener = this._onNewListener.bind(this);\n        this._onRemoveListener = this._onRemoveListener.bind(this);\n        this._resetCurrentBlock = this._resetCurrentBlock.bind(this);\n        // listen for handler changes\n        this._setupInternalEvents();\n        // config\n        this._provider = opts.provider;\n        this._pollingInterval = opts.pollingInterval || 20 * sec;\n        this._retryTimeout = opts.retryTimeout || this._pollingInterval / 10;\n        this._keepEventLoopActive =\n            opts.keepEventLoopActive === undefined ? true : opts.keepEventLoopActive;\n        this._setSkipCacheFlag = opts.setSkipCacheFlag || false;\n    }\n    async destroy() {\n        this._cancelBlockResetTimeout();\n        this._maybeEnd();\n        super.removeAllListeners();\n    }\n    isRunning() {\n        return this._isRunning;\n    }\n    getCurrentBlock() {\n        return this._currentBlock;\n    }\n    async getLatestBlock() {\n        // return if available\n        if (this._currentBlock) {\n            return this._currentBlock;\n        }\n        // wait for a new latest block\n        const latestBlock = await new Promise((resolve) => this.once('latest', resolve));\n        // return newly set current block\n        return latestBlock;\n    }\n    // dont allow module consumer to remove our internal event listeners\n    removeAllListeners(eventName) {\n        // perform default behavior, preserve fn arity\n        if (eventName) {\n            super.removeAllListeners(eventName);\n        }\n        else {\n            super.removeAllListeners();\n        }\n        // re-add internal events\n        this._setupInternalEvents();\n        // trigger stop check just in case\n        this._onRemoveListener();\n        return this;\n    }\n    _setupInternalEvents() {\n        // first remove listeners for idempotence\n        this.removeListener('newListener', this._onNewListener);\n        this.removeListener('removeListener', this._onRemoveListener);\n        // then add them\n        this.on('newListener', this._onNewListener);\n        this.on('removeListener', this._onRemoveListener);\n    }\n    _onNewListener(eventName) {\n        // `newListener` is called *before* the listener is added\n        if (blockTrackerEvents.includes(eventName)) {\n            // TODO: Handle dangling promise\n            this._maybeStart();\n        }\n    }\n    _onRemoveListener() {\n        // `removeListener` is called *after* the listener is removed\n        if (this._getBlockTrackerEventCount() > 0) {\n            return;\n        }\n        this._maybeEnd();\n    }\n    _maybeStart() {\n        if (this._isRunning) {\n            return;\n        }\n        this._isRunning = true;\n        // cancel setting latest block to stale\n        this._cancelBlockResetTimeout();\n        this._start();\n        this.emit('_started');\n    }\n    _maybeEnd() {\n        if (!this._isRunning) {\n            return;\n        }\n        this._isRunning = false;\n        this._setupBlockResetTimeout();\n        this._end();\n        this.emit('_ended');\n    }\n    _getBlockTrackerEventCount() {\n        return blockTrackerEvents\n            .map((eventName) => this.listenerCount(eventName))\n            .reduce(calculateSum);\n    }\n    _shouldUseNewBlock(newBlock) {\n        const currentBlock = this._currentBlock;\n        if (!currentBlock) {\n            return true;\n        }\n        const newBlockInt = hexToInt(newBlock);\n        const currentBlockInt = hexToInt(currentBlock);\n        return ((this._usePastBlocks && newBlockInt < currentBlockInt) ||\n            newBlockInt > currentBlockInt);\n    }\n    _newPotentialLatest(newBlock) {\n        if (!this._shouldUseNewBlock(newBlock)) {\n            return;\n        }\n        this._setCurrentBlock(newBlock);\n    }\n    _setCurrentBlock(newBlock) {\n        const oldBlock = this._currentBlock;\n        this._currentBlock = newBlock;\n        this.emit('latest', newBlock);\n        this.emit('sync', { oldBlock, newBlock });\n    }\n    _setupBlockResetTimeout() {\n        // clear any existing timeout\n        this._cancelBlockResetTimeout();\n        // clear latest block when stale\n        this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration);\n        // nodejs - dont hold process open\n        if (this._blockResetTimeout.unref) {\n            this._blockResetTimeout.unref();\n        }\n    }\n    _cancelBlockResetTimeout() {\n        if (this._blockResetTimeout) {\n            clearTimeout(this._blockResetTimeout);\n        }\n    }\n    _resetCurrentBlock() {\n        this._currentBlock = null;\n    }\n    // trigger block polling\n    async checkForLatestBlock() {\n        await this._updateLatestBlock();\n        return await this.getLatestBlock();\n    }\n    _start() {\n        // Intentionally not awaited as this starts the polling via a timeout chain.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this._updateAndQueue();\n    }\n    _end() {\n        this._clearPollingTimeout();\n    }\n    async _updateLatestBlock() {\n        // fetch + set latest block\n        const latestBlock = await this._fetchLatestBlock();\n        this._newPotentialLatest(latestBlock);\n    }\n    async _fetchLatestBlock() {\n        const req = {\n            jsonrpc: '2.0',\n            id: createRandomId(),\n            method: 'eth_blockNumber',\n            params: [],\n        };\n        if (this._setSkipCacheFlag) {\n            req.skipCache = true;\n        }\n        log('Making request', req);\n        const res = await (0, pify_1.default)((cb) => this._provider.sendAsync(req, cb))();\n        log('Got response', res);\n        if (res.error) {\n            throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error.message}`);\n        }\n        return res.result;\n    }\n    /**\n     * The core polling function that runs after each interval.\n     * Updates the latest block and then queues the next update.\n     */\n    async _updateAndQueue() {\n        var _a;\n        let interval = this._pollingInterval;\n        try {\n            await this._updateLatestBlock();\n        }\n        catch (err) {\n            const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${(_a = err.stack) !== null && _a !== void 0 ? _a : err}`);\n            try {\n                this.emit('error', newErr);\n            }\n            catch (emitErr) {\n                console.error(newErr);\n            }\n            interval = this._retryTimeout;\n        }\n        if (!this._isRunning) {\n            return;\n        }\n        this._clearPollingTimeout();\n        const timeoutRef = setTimeout(() => {\n            // Intentionally not awaited as this just continues the polling loop.\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this._updateAndQueue();\n        }, interval);\n        if (timeoutRef.unref && !this._keepEventLoopActive) {\n            timeoutRef.unref();\n        }\n        this._pollingTimeout = timeoutRef;\n        this.emit('_waitingForNextIteration');\n    }\n    _clearPollingTimeout() {\n        if (this._pollingTimeout) {\n            clearTimeout(this._pollingTimeout);\n            this._pollingTimeout = undefined;\n        }\n    }\n}\nexports.PollingBlockTracker = PollingBlockTracker;\n/**\n * Converts a number represented as a string in hexadecimal format into a native\n * number.\n *\n * @param hexInt - The hex string.\n * @returns The number.\n */\nfunction hexToInt(hexInt) {\n    return Number.parseInt(hexInt, 16);\n}\n//# sourceMappingURL=PollingBlockTracker.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscribeBlockTracker = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst json_rpc_random_id_1 = __importDefault(require(\"json-rpc-random-id\"));\nconst createRandomId = (0, json_rpc_random_id_1.default)();\nconst sec = 1000;\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue;\nconst blockTrackerEvents = ['sync', 'latest'];\nclass SubscribeBlockTracker extends safe_event_emitter_1.default {\n    constructor(opts = {}) {\n        // parse + validate args\n        if (!opts.provider) {\n            throw new Error('SubscribeBlockTracker - no provider specified.');\n        }\n        super();\n        // config\n        this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n        this._usePastBlocks = opts.usePastBlocks || false;\n        // state\n        this._currentBlock = null;\n        this._isRunning = false;\n        // bind functions for internal use\n        this._onNewListener = this._onNewListener.bind(this);\n        this._onRemoveListener = this._onRemoveListener.bind(this);\n        this._resetCurrentBlock = this._resetCurrentBlock.bind(this);\n        // listen for handler changes\n        this._setupInternalEvents();\n        // config\n        this._provider = opts.provider;\n        this._subscriptionId = null;\n    }\n    async destroy() {\n        this._cancelBlockResetTimeout();\n        await this._maybeEnd();\n        super.removeAllListeners();\n    }\n    isRunning() {\n        return this._isRunning;\n    }\n    getCurrentBlock() {\n        return this._currentBlock;\n    }\n    async getLatestBlock() {\n        // return if available\n        if (this._currentBlock) {\n            return this._currentBlock;\n        }\n        // wait for a new latest block\n        const latestBlock = await new Promise((resolve) => this.once('latest', resolve));\n        // return newly set current block\n        return latestBlock;\n    }\n    // dont allow module consumer to remove our internal event listeners\n    removeAllListeners(eventName) {\n        // perform default behavior, preserve fn arity\n        if (eventName) {\n            super.removeAllListeners(eventName);\n        }\n        else {\n            super.removeAllListeners();\n        }\n        // re-add internal events\n        this._setupInternalEvents();\n        // trigger stop check just in case\n        this._onRemoveListener();\n        return this;\n    }\n    _setupInternalEvents() {\n        // first remove listeners for idempotence\n        this.removeListener('newListener', this._onNewListener);\n        this.removeListener('removeListener', this._onRemoveListener);\n        // then add them\n        this.on('newListener', this._onNewListener);\n        this.on('removeListener', this._onRemoveListener);\n    }\n    _onNewListener(eventName) {\n        // `newListener` is called *before* the listener is added\n        if (blockTrackerEvents.includes(eventName)) {\n            // TODO: Handle dangling promise\n            this._maybeStart();\n        }\n    }\n    _onRemoveListener() {\n        // `removeListener` is called *after* the listener is removed\n        if (this._getBlockTrackerEventCount() > 0) {\n            return;\n        }\n        this._maybeEnd();\n    }\n    async _maybeStart() {\n        if (this._isRunning) {\n            return;\n        }\n        this._isRunning = true;\n        // cancel setting latest block to stale\n        this._cancelBlockResetTimeout();\n        await this._start();\n        this.emit('_started');\n    }\n    async _maybeEnd() {\n        if (!this._isRunning) {\n            return;\n        }\n        this._isRunning = false;\n        this._setupBlockResetTimeout();\n        await this._end();\n        this.emit('_ended');\n    }\n    _getBlockTrackerEventCount() {\n        return blockTrackerEvents\n            .map((eventName) => this.listenerCount(eventName))\n            .reduce(calculateSum);\n    }\n    _shouldUseNewBlock(newBlock) {\n        const currentBlock = this._currentBlock;\n        if (!currentBlock) {\n            return true;\n        }\n        const newBlockInt = hexToInt(newBlock);\n        const currentBlockInt = hexToInt(currentBlock);\n        return ((this._usePastBlocks && newBlockInt < currentBlockInt) ||\n            newBlockInt > currentBlockInt);\n    }\n    _newPotentialLatest(newBlock) {\n        if (!this._shouldUseNewBlock(newBlock)) {\n            return;\n        }\n        this._setCurrentBlock(newBlock);\n    }\n    _setCurrentBlock(newBlock) {\n        const oldBlock = this._currentBlock;\n        this._currentBlock = newBlock;\n        this.emit('latest', newBlock);\n        this.emit('sync', { oldBlock, newBlock });\n    }\n    _setupBlockResetTimeout() {\n        // clear any existing timeout\n        this._cancelBlockResetTimeout();\n        // clear latest block when stale\n        this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration);\n        // nodejs - dont hold process open\n        if (this._blockResetTimeout.unref) {\n            this._blockResetTimeout.unref();\n        }\n    }\n    _cancelBlockResetTimeout() {\n        if (this._blockResetTimeout) {\n            clearTimeout(this._blockResetTimeout);\n        }\n    }\n    _resetCurrentBlock() {\n        this._currentBlock = null;\n    }\n    async checkForLatestBlock() {\n        return await this.getLatestBlock();\n    }\n    async _start() {\n        if (this._subscriptionId === undefined || this._subscriptionId === null) {\n            try {\n                const blockNumber = (await this._call('eth_blockNumber'));\n                this._subscriptionId = (await this._call('eth_subscribe', 'newHeads'));\n                this._provider.on('data', this._handleSubData.bind(this));\n                this._newPotentialLatest(blockNumber);\n            }\n            catch (e) {\n                this.emit('error', e);\n            }\n        }\n    }\n    async _end() {\n        if (this._subscriptionId !== null && this._subscriptionId !== undefined) {\n            try {\n                await this._call('eth_unsubscribe', this._subscriptionId);\n                this._subscriptionId = null;\n            }\n            catch (e) {\n                this.emit('error', e);\n            }\n        }\n    }\n    async _call(method, ...params) {\n        return new Promise((resolve, reject) => {\n            this._provider.sendAsync({\n                id: createRandomId(),\n                method,\n                params,\n                jsonrpc: '2.0',\n            }, (err, res) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(res.result);\n                }\n            });\n        });\n    }\n    _handleSubData(_, response) {\n        var _a;\n        if (response.method === 'eth_subscription' &&\n            ((_a = response.params) === null || _a === void 0 ? void 0 : _a.subscription) === this._subscriptionId) {\n            this._newPotentialLatest(response.params.result.number);\n        }\n    }\n}\nexports.SubscribeBlockTracker = SubscribeBlockTracker;\n/**\n * Converts a number represented as a string in hexadecimal format into a native\n * number.\n *\n * @param hexInt - The hex string.\n * @returns The number.\n */\nfunction hexToInt(hexInt) {\n    return Number.parseInt(hexInt, 16);\n}\n//# sourceMappingURL=SubscribeBlockTracker.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./PollingBlockTracker\"), exports);\n__exportStar(require(\"./SubscribeBlockTracker\"), exports);\n__exportStar(require(\"./BlockTracker\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.projectLogger = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nObject.defineProperty(exports, \"createModuleLogger\", { enumerable: true, get: function () { return utils_1.createModuleLogger; } });\nexports.projectLogger = (0, utils_1.createProjectLogger)('eth-block-tracker');\n//# sourceMappingURL=logging-utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","const { HDKey } = require('ethereum-cryptography/hdkey');\nconst { keccak256 } = require('ethereum-cryptography/keccak');\nconst { bytesToHex } = require('ethereum-cryptography/utils');\nconst {\n  privateToPublic,\n  publicToAddress,\n  ecsign,\n  arrToBufArr,\n  bufferToHex,\n} = require('@ethereumjs/util');\nconst bip39 = require('@metamask/scure-bip39');\nconst { wordlist } = require('@metamask/scure-bip39/dist/wordlists/english');\nconst {\n  concatSig,\n  decrypt,\n  getEncryptionPublicKey,\n  normalize,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n} = require('@metamask/eth-sig-util');\nconst { assertIsHexString, remove0x } = require('@metamask/utils');\n\n// Options:\nconst hdPathString = `m/44'/60'/0'/0`;\nconst type = 'HD Key Tree';\n\nclass HdKeyring {\n  /* PUBLIC METHODS */\n  constructor(opts = {}) {\n    this.type = type;\n    this._wallets = [];\n    this.deserialize(opts);\n  }\n\n  generateRandomMnemonic() {\n    this._initFromMnemonic(bip39.generateMnemonic(wordlist));\n  }\n\n  _uint8ArrayToString(mnemonic) {\n    const recoveredIndices = Array.from(\n      new Uint16Array(new Uint8Array(mnemonic).buffer),\n    );\n    return recoveredIndices.map((i) => wordlist[i]).join(' ');\n  }\n\n  _stringToUint8Array(mnemonic) {\n    const indices = mnemonic.split(' ').map((word) => wordlist.indexOf(word));\n    return new Uint8Array(new Uint16Array(indices).buffer);\n  }\n\n  _mnemonicToUint8Array(mnemonic) {\n    let mnemonicData = mnemonic;\n    // when encrypted/decrypted, buffers get cast into js object with a property type set to buffer\n    if (mnemonic && mnemonic.type && mnemonic.type === 'Buffer') {\n      mnemonicData = mnemonic.data;\n    }\n\n    if (\n      // this block is for backwards compatibility with vaults that were previously stored as buffers, number arrays or plain text strings\n      typeof mnemonicData === 'string' ||\n      Buffer.isBuffer(mnemonicData) ||\n      Array.isArray(mnemonicData)\n    ) {\n      let mnemonicAsString = mnemonicData;\n      if (Array.isArray(mnemonicData)) {\n        mnemonicAsString = Buffer.from(mnemonicData).toString();\n      } else if (Buffer.isBuffer(mnemonicData)) {\n        mnemonicAsString = mnemonicData.toString();\n      }\n      return this._stringToUint8Array(mnemonicAsString);\n    } else if (\n      mnemonicData instanceof Object &&\n      !(mnemonicData instanceof Uint8Array)\n    ) {\n      // when encrypted/decrypted the Uint8Array becomes a js object we need to cast back to a Uint8Array\n      return Uint8Array.from(Object.values(mnemonicData));\n    }\n    return mnemonicData;\n  }\n\n  serialize() {\n    const mnemonicAsString = this._uint8ArrayToString(this.mnemonic);\n    const uint8ArrayMnemonic = new TextEncoder('utf-8').encode(\n      mnemonicAsString,\n    );\n\n    return Promise.resolve({\n      mnemonic: Array.from(uint8ArrayMnemonic),\n      numberOfAccounts: this._wallets.length,\n      hdPath: this.hdPath,\n    });\n  }\n\n  deserialize(opts = {}) {\n    if (opts.numberOfAccounts && !opts.mnemonic) {\n      throw new Error(\n        'Eth-Hd-Keyring: Deserialize method cannot be called with an opts value for numberOfAccounts and no menmonic',\n      );\n    }\n\n    if (this.root) {\n      throw new Error(\n        'Eth-Hd-Keyring: Secret recovery phrase already provided',\n      );\n    }\n    this.opts = opts;\n    this._wallets = [];\n    this.mnemonic = null;\n    this.root = null;\n    this.hdPath = opts.hdPath || hdPathString;\n\n    if (opts.mnemonic) {\n      this._initFromMnemonic(opts.mnemonic);\n    }\n\n    if (opts.numberOfAccounts) {\n      return this.addAccounts(opts.numberOfAccounts);\n    }\n\n    return Promise.resolve([]);\n  }\n\n  addAccounts(numberOfAccounts = 1) {\n    if (!this.root) {\n      throw new Error('Eth-Hd-Keyring: No secret recovery phrase provided');\n    }\n\n    const oldLen = this._wallets.length;\n    const newWallets = [];\n    for (let i = oldLen; i < numberOfAccounts + oldLen; i++) {\n      const wallet = this.root.deriveChild(i);\n      newWallets.push(wallet);\n      this._wallets.push(wallet);\n    }\n    const hexWallets = newWallets.map((w) => {\n      return this._addressfromPublicKey(w.publicKey);\n    });\n    return Promise.resolve(hexWallets);\n  }\n\n  getAccounts() {\n    return this._wallets.map((w) => this._addressfromPublicKey(w.publicKey));\n  }\n\n  /* BASE KEYRING METHODS */\n\n  // returns an address specific to an app\n  async getAppKeyAddress(address, origin) {\n    if (!origin || typeof origin !== 'string') {\n      throw new Error(`'origin' must be a non-empty string`);\n    }\n    const wallet = this._getWalletForAccount(address, {\n      withAppKeyOrigin: origin,\n    });\n    const appKeyAddress = normalize(\n      publicToAddress(wallet.publicKey).toString('hex'),\n    );\n\n    return appKeyAddress;\n  }\n\n  // exportAccount should return a hex-encoded private key:\n  async exportAccount(address, opts = {}) {\n    const wallet = this._getWalletForAccount(address, opts);\n    return bytesToHex(wallet.privateKey);\n  }\n\n  // tx is an instance of the ethereumjs-transaction class.\n  async signTransaction(address, tx, opts = {}) {\n    const privKey = this._getPrivateKeyFor(address, opts);\n    const signedTx = tx.sign(privKey);\n    // Newer versions of Ethereumjs-tx are immutable and return a new tx object\n    return signedTx === undefined ? tx : signedTx;\n  }\n\n  // For eth_sign, we need to sign arbitrary data:\n  async signMessage(address, data, opts = {}) {\n    assertIsHexString(data);\n    const message = remove0x(data);\n    const privKey = this._getPrivateKeyFor(address, opts);\n    const msgSig = ecsign(Buffer.from(message, 'hex'), privKey);\n    const rawMsgSig = concatSig(msgSig.v, msgSig.r, msgSig.s);\n    return rawMsgSig;\n  }\n\n  // For personal_sign, we need to prefix the message:\n  async signPersonalMessage(address, msgHex, opts = {}) {\n    const privKey = this._getPrivateKeyFor(address, opts);\n    const privateKey = Buffer.from(privKey, 'hex');\n    const sig = personalSign({ privateKey, data: msgHex });\n    return sig;\n  }\n\n  // For eth_decryptMessage:\n  async decryptMessage(withAccount, encryptedData) {\n    const wallet = this._getWalletForAccount(withAccount);\n    const { privateKey: privateKeyAsUint8Array } = wallet;\n    const privateKeyAsHex = Buffer.from(privateKeyAsUint8Array).toString('hex');\n    const sig = decrypt({ privateKey: privateKeyAsHex, encryptedData });\n    return sig;\n  }\n\n  // personal_signTypedData, signs data along with the schema\n  async signTypedData(\n    withAccount,\n    typedData,\n    opts = { version: SignTypedDataVersion.V1 },\n  ) {\n    // Treat invalid versions as \"V1\"\n    const version = Object.keys(SignTypedDataVersion).includes(opts.version)\n      ? opts.version\n      : SignTypedDataVersion.V1;\n\n    const privateKey = this._getPrivateKeyFor(withAccount, opts);\n    return signTypedData({ privateKey, data: typedData, version });\n  }\n\n  removeAccount(account) {\n    const address = normalize(account);\n    if (\n      !this._wallets\n        .map(({ publicKey }) => this._addressfromPublicKey(publicKey))\n        .includes(address)\n    ) {\n      throw new Error(`Address ${address} not found in this keyring`);\n    }\n\n    this._wallets = this._wallets.filter(\n      ({ publicKey }) => this._addressfromPublicKey(publicKey) !== address,\n    );\n  }\n\n  // get public key for nacl\n  async getEncryptionPublicKey(withAccount, opts = {}) {\n    const privKey = this._getPrivateKeyFor(withAccount, opts);\n    const publicKey = getEncryptionPublicKey(privKey);\n    return publicKey;\n  }\n\n  _getPrivateKeyFor(address, opts = {}) {\n    if (!address) {\n      throw new Error('Must specify address.');\n    }\n    const wallet = this._getWalletForAccount(address, opts);\n    return wallet.privateKey;\n  }\n\n  _getWalletForAccount(account, opts = {}) {\n    const address = normalize(account);\n    let wallet = this._wallets.find(({ publicKey }) => {\n      return this._addressfromPublicKey(publicKey) === address;\n    });\n    if (!wallet) {\n      throw new Error('HD Keyring - Unable to find matching address.');\n    }\n\n    if (opts.withAppKeyOrigin) {\n      const { privateKey } = wallet;\n      const appKeyOriginBuffer = Buffer.from(opts.withAppKeyOrigin, 'utf8');\n      const appKeyBuffer = Buffer.concat([privateKey, appKeyOriginBuffer]);\n      const appKeyPrivateKey = arrToBufArr(keccak256(appKeyBuffer, 256));\n      const appKeyPublicKey = privateToPublic(appKeyPrivateKey);\n      wallet = { privateKey: appKeyPrivateKey, publicKey: appKeyPublicKey };\n    }\n\n    return wallet;\n  }\n\n  /* PRIVATE / UTILITY METHODS */\n\n  /**\n   * Sets appropriate properties for the keyring based on the given\n   * BIP39-compliant mnemonic.\n   *\n   * @param {string|Array<number>|Buffer} mnemonic - A seed phrase represented\n   * as a string, an array of UTF-8 bytes, or a Buffer. Mnemonic input\n   * passed as type buffer or array of UTF-8 bytes must be NFKD normalized.\n   */\n  _initFromMnemonic(mnemonic) {\n    if (this.root) {\n      throw new Error(\n        'Eth-Hd-Keyring: Secret recovery phrase already provided',\n      );\n    }\n\n    this.mnemonic = this._mnemonicToUint8Array(mnemonic);\n\n    // validate before initializing\n    const isValid = bip39.validateMnemonic(this.mnemonic, wordlist);\n    if (!isValid) {\n      throw new Error(\n        'Eth-Hd-Keyring: Invalid secret recovery phrase provided',\n      );\n    }\n\n    // eslint-disable-next-line node/no-sync\n    const seed = bip39.mnemonicToSeedSync(this.mnemonic, wordlist);\n    this.hdWallet = HDKey.fromMasterSeed(seed);\n    this.root = this.hdWallet.derive(this.hdPath);\n  }\n\n  // small helper function to convert publicKey in Uint8Array form to a publicAddress as a hex\n  _addressfromPublicKey(publicKey) {\n    return bufferToHex(\n      publicToAddress(Buffer.from(publicKey), true),\n    ).toLowerCase();\n  }\n}\n\nHdKeyring.type = type;\nmodule.exports = HdKeyring;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","import urlLib from 'url';\nimport { AccessList } from '@ethereumjs/tx';\nimport BN from 'bn.js';\nimport { memoize } from 'lodash';\nimport {\n  TransactionEnvelopeType,\n  TransactionMeta,\n} from '@metamask/transaction-controller';\nimport {\n  ENVIRONMENT_TYPE_BACKGROUND,\n  ENVIRONMENT_TYPE_FULLSCREEN,\n  ENVIRONMENT_TYPE_NOTIFICATION,\n  ENVIRONMENT_TYPE_POPUP,\n  PLATFORM_BRAVE,\n  PLATFORM_CHROME,\n  PLATFORM_EDGE,\n  PLATFORM_FIREFOX,\n  PLATFORM_OPERA,\n} from '../../../shared/constants/app';\nimport { CHAIN_IDS, TEST_CHAINS } from '../../../shared/constants/network';\nimport { stripHexPrefix } from '../../../shared/modules/hexstring-utils';\nimport { getMethodDataAsync } from '../../../shared/lib/four-byte';\n\n/**\n * @see {@link getEnvironmentType}\n */\nconst getEnvironmentTypeMemo = memoize((url) => {\n  const parsedUrl = new URL(url);\n  if (parsedUrl.pathname === '/popup.html') {\n    return ENVIRONMENT_TYPE_POPUP;\n  } else if (['/home.html'].includes(parsedUrl.pathname)) {\n    return ENVIRONMENT_TYPE_FULLSCREEN;\n  } else if (parsedUrl.pathname === '/notification.html') {\n    return ENVIRONMENT_TYPE_NOTIFICATION;\n  }\n  return ENVIRONMENT_TYPE_BACKGROUND;\n});\n\n/**\n * Returns the window type for the application\n *\n * - `popup` refers to the extension opened through the browser app icon (in top right corner in chrome and firefox)\n * - `fullscreen` refers to the main browser window\n * - `notification` refers to the popup that appears in its own window when taking action outside of metamask\n * - `background` refers to the background page\n *\n * NOTE: This should only be called on internal URLs.\n *\n * @param [url] - the URL of the window\n * @returns the environment ENUM\n */\nconst getEnvironmentType = (url = window.location.href) =>\n  getEnvironmentTypeMemo(url);\n\n/**\n * Returns the platform (browser) where the extension is running.\n *\n * @returns the platform ENUM\n */\nconst getPlatform = () => {\n  const { navigator } = window;\n  const { userAgent } = navigator;\n\n  if (userAgent.includes('Firefox')) {\n    return PLATFORM_FIREFOX;\n  } else if ('brave' in navigator) {\n    return PLATFORM_BRAVE;\n  } else if (userAgent.includes('Edg/')) {\n    return PLATFORM_EDGE;\n  } else if (userAgent.includes('OPR')) {\n    return PLATFORM_OPERA;\n  }\n  return PLATFORM_CHROME;\n};\n\n/**\n * Converts a hex string to a BN object\n *\n * @param inputHex - A number represented as a hex string\n * @returns A BN object\n */\nfunction hexToBn(inputHex: string) {\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\n/**\n * Used to multiply a BN by a fraction\n *\n * @param targetBN - The number to multiply by a fraction\n * @param numerator - The numerator of the fraction multiplier\n * @param denominator - The denominator of the fraction multiplier\n * @returns The product of the multiplication\n */\nfunction BnMultiplyByFraction(\n  targetBN: BN,\n  numerator: number,\n  denominator: number,\n) {\n  const numBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numBN).div(denomBN);\n}\n\n/**\n * Prefixes a hex string with '0x' or '-0x' and returns it. Idempotent.\n *\n * @param str - The string to prefix.\n * @returns The prefixed string.\n */\nconst addHexPrefix = (str: string) => {\n  if (typeof str !== 'string' || str.match(/^-?0x/u)) {\n    return str;\n  }\n\n  if (str.match(/^-?0X/u)) {\n    return str.replace('0X', '0x');\n  }\n\n  if (str.startsWith('-')) {\n    return str.replace('-', '-0x');\n  }\n\n  return `0x${str}`;\n};\n\nfunction getChainType(chainId: string) {\n  if (chainId === CHAIN_IDS.MAINNET) {\n    return 'mainnet';\n  } else if ((TEST_CHAINS as string[]).includes(chainId)) {\n    return 'testnet';\n  }\n  return 'custom';\n}\n\n/**\n * Checks if the alarmname exists in the list\n *\n * @param alarmList\n * @param alarmName\n * @returns\n */\nfunction checkAlarmExists(alarmList: { name: string }[], alarmName: string) {\n  return alarmList.some((alarm) => alarm.name === alarmName);\n}\n\nexport {\n  BnMultiplyByFraction,\n  addHexPrefix,\n  checkAlarmExists,\n  getChainType,\n  getEnvironmentType,\n  getPlatform,\n  hexToBn,\n};\n\n// Taken from https://stackoverflow.com/a/1349426/3696652\nconst characters =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nexport const generateRandomId = () => {\n  let result = '';\n  const charactersLength = characters.length;\n  for (let i = 0; i < 20; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const isValidDate = (d: Date | number) => {\n  return d instanceof Date;\n};\n\n/**\n * A deferred Promise.\n *\n * A deferred Promise is one that can be resolved or rejected independently of\n * the Promise construction.\n *\n * @typedef {object} DeferredPromise\n * @property {Promise} promise - The Promise that has been deferred.\n * @property {() => void} resolve - A function that resolves the Promise.\n * @property {() => void} reject - A function that rejects the Promise.\n */\n\ntype DeferredPromise = {\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  promise: Promise<any>;\n  resolve?: () => void;\n  reject?: () => void;\n};\n\n/**\n * Create a defered Promise.\n *\n * @returns A deferred Promise.\n */\nexport function deferredPromise(): DeferredPromise {\n  let resolve: DeferredPromise['resolve'];\n  let reject: DeferredPromise['reject'];\n  const promise = new Promise<void>(\n    (innerResolve: () => void, innerReject: () => void) => {\n      resolve = innerResolve;\n      reject = innerReject;\n    },\n  );\n  return { promise, resolve, reject };\n}\n\n/**\n * Returns a function with arity 1 that caches the argument that the function\n * is called with and invokes the comparator with both the cached, previous,\n * value and the current value. If specified, the initialValue will be passed\n * in as the previous value on the first invocation of the returned method.\n *\n * @template A - The type of the compared value.\n * @param comparator - A method to compare\n * the previous and next values.\n * @param [initialValue] - The initial value to supply to prevValue\n * on first call of the method.\n */\nexport function previousValueComparator<A>(\n  comparator: (previous: A, next: A) => boolean,\n  initialValue: A,\n) {\n  let first = true;\n  let cache: A;\n  return (value: A) => {\n    try {\n      if (first) {\n        first = false;\n        return comparator(initialValue ?? value, value);\n      }\n      return comparator(cache, value);\n    } finally {\n      cache = value;\n    }\n  };\n}\n\nexport function addUrlProtocolPrefix(urlString: string) {\n  let trimmed = urlString.trim();\n\n  if (trimmed.length && !urlLib.parse(trimmed).protocol) {\n    trimmed = `https://${trimmed}`;\n  }\n\n  if (getValidUrl(trimmed) !== null) {\n    return trimmed;\n  }\n\n  return null;\n}\n\nexport function getValidUrl(urlString: string): URL | null {\n  try {\n    const url = new URL(urlString);\n\n    if (url.hostname.length === 0 || url.pathname.length === 0) {\n      return null;\n    }\n\n    if (url.hostname !== decodeURIComponent(url.hostname)) {\n      return null; // will happen if there's a %, a space, or other invalid character in the hostname\n    }\n\n    return url;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport function isWebUrl(urlString: string): boolean {\n  const url = getValidUrl(urlString);\n\n  return (\n    url !== null && (url.protocol === 'https:' || url.protocol === 'http:')\n  );\n}\n\n/**\n * Determines whether to emit a MetaMetrics event for a given metaMetricsId.\n * Relies on the last 4 characters of the metametricsId. Assumes the IDs are evenly distributed.\n * If metaMetricsIds are distributed evenly, this should be a 1% sample rate\n *\n * @param metaMetricsId - The metametricsId to use for the event.\n * @returns Whether to emit the event or not.\n */\nexport function shouldEmitDappViewedEvent(metaMetricsId: string): boolean {\n  if (metaMetricsId === null) {\n    return false;\n  }\n\n  const lastFourCharacters = metaMetricsId.slice(-4);\n  const lastFourCharactersAsNumber = parseInt(lastFourCharacters, 16);\n\n  return lastFourCharactersAsNumber % 100 === 0;\n}\n\ntype FormattedTransactionMeta = {\n  blockHash: string | null;\n  blockNumber: string | null;\n  from: string;\n  to?: string;\n  hash?: string;\n  nonce: string;\n  input: string;\n  v?: string;\n  r?: string;\n  s?: string;\n  value: string;\n  gas?: string;\n  gasPrice?: string;\n  maxFeePerGas?: string;\n  maxPriorityFeePerGas?: string;\n  type: TransactionEnvelopeType;\n  accessList: AccessList | null;\n  transactionIndex: string | null;\n};\n\nexport function formatTxMetaForRpcResult(\n  txMeta: TransactionMeta,\n): FormattedTransactionMeta {\n  const { r, s, v, hash, txReceipt, txParams } = txMeta;\n  const {\n    to,\n    data,\n    nonce,\n    gas,\n    from,\n    value,\n    gasPrice,\n    accessList,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n  } = txParams;\n\n  const formattedTxMeta: FormattedTransactionMeta = {\n    v,\n    r,\n    s,\n    to,\n    gas,\n    from,\n    hash,\n    nonce: `${nonce}`,\n    input: data || '0x',\n    value: value || '0x0',\n    accessList: accessList || null,\n    blockHash: txReceipt?.blockHash || null,\n    blockNumber: txReceipt?.blockNumber || null,\n    transactionIndex: txReceipt?.transactionIndex || null,\n    type:\n      maxFeePerGas && maxPriorityFeePerGas\n        ? TransactionEnvelopeType.feeMarket\n        : TransactionEnvelopeType.legacy,\n  };\n\n  if (maxFeePerGas && maxPriorityFeePerGas) {\n    formattedTxMeta.gasPrice = maxFeePerGas;\n    formattedTxMeta.maxFeePerGas = maxFeePerGas;\n    formattedTxMeta.maxPriorityFeePerGas = maxPriorityFeePerGas;\n  } else {\n    formattedTxMeta.gasPrice = gasPrice;\n  }\n\n  return formattedTxMeta;\n}\n\nexport const isValidAmount = (amount: number | null | undefined): boolean =>\n  amount !== null && amount !== undefined && !Number.isNaN(amount);\n\nexport function formatValue(\n  value: number | null | undefined,\n  includeParentheses: boolean,\n): string {\n  if (!isValidAmount(value)) {\n    return '';\n  }\n\n  const numericValue = value as number;\n  const sign = numericValue >= 0 ? '+' : '';\n  const formattedNumber = `${sign}${numericValue.toFixed(2)}%`;\n\n  return includeParentheses ? `(${formattedNumber})` : formattedNumber;\n}\n\ntype MethodData = {\n  name: string;\n  params: { type: string }[];\n};\n\nexport const getMethodDataName = async (\n  knownMethodData: Record<string, MethodData>,\n  use4ByteResolution: boolean,\n  prefixedData: string,\n  addKnownMethodData: (fourBytePrefix: string, methodData: MethodData) => void,\n  provider: object,\n) => {\n  if (!prefixedData || !use4ByteResolution) {\n    return null;\n  }\n  const fourBytePrefix = prefixedData.slice(0, 10);\n\n  if (knownMethodData?.[fourBytePrefix]) {\n    return knownMethodData?.[fourBytePrefix];\n  }\n\n  const methodData = await getMethodDataAsync(\n    fourBytePrefix,\n    use4ByteResolution,\n    provider,\n  );\n\n  if (addKnownMethodData) {\n    addKnownMethodData(fourBytePrefix, methodData as MethodData);\n  }\n\n  return methodData;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createInfuraMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\n// eslint-disable-next-line @typescript-eslint/no-shadow\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst fetch_config_from_req_1 = require(\"./fetch-config-from-req\");\nconst logging_utils_1 = require(\"./logging-utils\");\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'create-infura-middleware');\nconst RETRIABLE_ERRORS = [\n    // ignore server overload errors\n    'Gateway timeout',\n    'ETIMEDOUT',\n    'ECONNRESET',\n    // ignore server sent html error pages\n    // or truncated json responses\n    'SyntaxError',\n];\n/**\n * Builds [`@metamask/json-rpc-engine`](https://github.com/MetaMask/@metamask/json-rpc-engine)-compatible middleware designed\n * for interfacing with Infura's JSON-RPC endpoints.\n * @param opts - The options.\n * @param opts.network - A network that Infura supports; plugs into\n * `https://${network}.infura.io` (default: 'mainnet').\n * @param opts.maxAttempts - The number of times a request to Infura should be\n * retried in the case of failure (default: 5).\n * @param opts.source - A descriptor for the entity making the request; tracked\n * by Infura for analytics purposes.\n * @param opts.projectId - The Infura project id.\n * @param opts.headers - Extra headers that will be used to make the request.\n * @returns The `@metamask/json-rpc-engine`-compatible middleware.\n */\nfunction createInfuraMiddleware({ network = 'mainnet', maxAttempts = 5, source, projectId, headers = {}, }) {\n    // validate options\n    if (!projectId || typeof projectId !== 'string') {\n        throw new Error(`Invalid value for 'projectId': \"${projectId}\"`);\n    }\n    if (!headers || typeof headers !== 'object') {\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        throw new Error(`Invalid value for 'headers': \"${headers}\"`);\n    }\n    if (!maxAttempts) {\n        throw new Error(`Invalid value for 'maxAttempts': \"${maxAttempts}\" (${typeof maxAttempts})`);\n    }\n    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, res) => {\n        // retry MAX_ATTEMPTS times, if error matches filter\n        for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n            try {\n                // attempt request\n                log('Attempting request to Infura. network = %o, projectId = %s, headers = %o, req = %o', network, projectId, headers, req);\n                await performFetch(network, projectId, headers, req, res, source);\n                // request was successful\n                break;\n            }\n            catch (err) {\n                // an error was caught while performing the request\n                // if not retriable, resolve with the encountered error\n                if (!isRetriableError(err)) {\n                    // abort with error\n                    log('Non-retriable request error encountered. req = %o, res = %o, error = %o', req, res, err);\n                    throw err;\n                }\n                // if no more attempts remaining, throw an error\n                const remainingAttempts = maxAttempts - attempt;\n                if (!remainingAttempts) {\n                    log('Retriable request error encountered, but exceeded max attempts. req = %o, res = %o, error = %o', req, res, err);\n                    const errMsg = `InfuraProvider - cannot complete request. All retries exhausted.\\nOriginal Error:\\n${err.toString()}\\n\\n`;\n                    const retriesExhaustedErr = new Error(errMsg);\n                    throw retriesExhaustedErr;\n                }\n                // otherwise, ignore error and retry again after timeout\n                log('Retriable request error encountered. req = %o, res = %o, error = %o', req, res, err);\n                log('Waiting 1 second to try again...');\n                await timeout(1000);\n            }\n        }\n        // request was handled correctly, end\n    });\n}\nexports.createInfuraMiddleware = createInfuraMiddleware;\n/**\n * Makes a request to Infura, updating the given response object if the response\n * has a \"successful\" status code or throwing an error otherwise.\n * @param network - A network that Infura supports; plugs into\n * `https://${network}.infura.io`.\n * @param projectId - The Infura project id.\n * @param extraHeaders - Extra headers that will be used to make the request.\n * @param req - The original request object obtained via the middleware stack.\n * @param res - The original response object obtained via the middleware stack.\n * @param source - A descriptor for the entity making the request;\n * tracked by Infura for analytics purposes.\n * @throws an error with a detailed message if the HTTP status code is anywhere\n * outside 2xx, and especially if it is 405, 429, 503, or 504.\n */\nasync function performFetch(network, projectId, extraHeaders, req, res, source) {\n    const { fetchUrl, fetchParams } = (0, fetch_config_from_req_1.fetchConfigFromReq)({\n        network,\n        projectId,\n        extraHeaders,\n        req,\n        source,\n    });\n    const response = await (0, node_fetch_1.default)(fetchUrl, fetchParams);\n    const rawData = await response.text();\n    // handle errors\n    if (!response.ok) {\n        switch (response.status) {\n            case 405:\n                throw rpc_errors_1.rpcErrors.methodNotFound();\n            case 429:\n                throw createRatelimitError();\n            case 503:\n            case 504:\n                throw createTimeoutError();\n            default:\n                throw createInternalError(rawData);\n        }\n    }\n    // special case for now\n    if (req.method === 'eth_getBlockByNumber' && rawData === 'Not Found') {\n        // TODO Would this be more correct?\n        // delete res.result;\n        res.result = null;\n        return;\n    }\n    // parse JSON\n    const data = JSON.parse(rawData);\n    // finally return result\n    res.result = data.result;\n    res.error = data.error;\n}\n/**\n * Builds a JSON-RPC 2.0 internal error object describing a rate-limiting\n * error.\n * @returns The error object.\n */\nfunction createRatelimitError() {\n    const msg = `Request is being rate limited.`;\n    return createInternalError(msg);\n}\n/**\n * Builds a JSON-RPC 2.0 internal error object describing a timeout error.\n * @returns The error object.\n */\nfunction createTimeoutError() {\n    let msg = `Gateway timeout. The request took too long to process. `;\n    msg += `This can happen when querying logs over too wide a block range.`;\n    return createInternalError(msg);\n}\n/**\n * Builds a JSON-RPC 2.0 internal error object.\n * @param msg - The message.\n * @returns The error object.\n */\nfunction createInternalError(msg) {\n    return rpc_errors_1.rpcErrors.internal(msg);\n}\n/**\n * Upon making a request, we may get an error that is temporary and\n * intermittent. In these cases we can attempt the request again with the\n * assumption that the error is unlikely to occur again. Here we determine if we\n * have received such an error.\n * @param err - The error object.\n * @returns Whether the request that produced the error can be retried.\n */\nfunction isRetriableError(err) {\n    const errMessage = err.toString();\n    return RETRIABLE_ERRORS.some((phrase) => errMessage.includes(phrase));\n}\n/**\n * A utility function that promisifies `setTimeout`.\n * @param length - The number of milliseconds to wait.\n * @returns A promise that resolves after the given time has elapsed.\n */\nasync function timeout(length) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, length);\n    });\n}\n//# sourceMappingURL=create-infura-middleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProvider = void 0;\nconst eth_json_rpc_provider_1 = require(\"@metamask/eth-json-rpc-provider\");\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst create_infura_middleware_1 = require(\"./create-infura-middleware\");\n/**\n * Creates a provider (as defined in\n * [`eth-json-rpc-provider`](https://github.com/MetaMask/eth-json-rpc-provider)\n * which is preloaded with middleware specialized for interfacing with Infura\n * JSON-RPC endpoints.\n * @param opts - Options to {@link createInfuraMiddleware}.\n * @returns The provider as returned by `providerFromEngine` (a part of\n * [`eth-json-rpc-provider`](https://github.com/MetaMask/eth-json-rpc-provider)).\n */\nfunction createProvider(opts) {\n    const engine = new json_rpc_engine_1.JsonRpcEngine();\n    engine.push((0, create_infura_middleware_1.createInfuraMiddleware)(opts));\n    return (0, eth_json_rpc_provider_1.providerFromEngine)(engine);\n}\nexports.createProvider = createProvider;\n//# sourceMappingURL=create-provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchConfigFromReq = void 0;\n/**\n * Determines the arguments to feed into `fetch` in order to make a request to\n * Infura.\n * @param options - The options.\n * @param options.network - A network that Infura supports; plugs into\n * `https://${network}.infura.io`.\n * @param options.projectId - The Infura project id.\n * @param options.extraHeaders - Extra headers that will be used to make the\n * request.\n * @param options.req - The original request object obtained via the\n * middleware stack.\n * @param options.source - A descriptor for the entity making the request;\n * tracked by Infura for analytics purposes.\n * @returns An object containing the URL and a bag of options, both of which\n * will be passed to `fetch`.\n */\nfunction fetchConfigFromReq({ network, projectId, extraHeaders = {}, req, source, }) {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const requestOrigin = req.origin || 'internal';\n    const headers = Object.assign({}, extraHeaders, {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    });\n    if (source) {\n        headers['Infura-Source'] = `${source}/${requestOrigin}`;\n    }\n    return {\n        fetchUrl: `https://${network}.infura.io/v3/${projectId}`,\n        fetchParams: {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(normalizeReq(req)),\n        },\n    };\n}\nexports.fetchConfigFromReq = fetchConfigFromReq;\n/**\n * Strips out extra keys from a request object that could be rejected by strict\n * nodes like parity.\n * @param req - The original request object obtained via the middleware stack.\n * @returns An object that describes a JSON-RPC request.\n */\nfunction normalizeReq(req) {\n    return {\n        id: req.id,\n        jsonrpc: req.jsonrpc,\n        method: req.method,\n        params: req.params,\n    };\n}\n//# sourceMappingURL=fetch-config-from-req.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./create-infura-middleware\"), exports);\n__exportStar(require(\"./fetch-config-from-req\"), exports);\n__exportStar(require(\"./create-provider\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.projectLogger = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nObject.defineProperty(exports, \"createModuleLogger\", { enumerable: true, get: function () { return utils_1.createModuleLogger; } });\nexports.projectLogger = (0, utils_1.createProjectLogger)('eth-json-rpc-infura');\n//# sourceMappingURL=logging-utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeEventEmitterProvider = void 0;\n__exportStar(require(\"./provider-from-engine\"), exports);\n__exportStar(require(\"./provider-from-middleware\"), exports);\nvar safe_event_emitter_provider_1 = require(\"./safe-event-emitter-provider\");\nObject.defineProperty(exports, \"SafeEventEmitterProvider\", { enumerable: true, get: function () { return safe_event_emitter_provider_1.SafeEventEmitterProvider; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerFromEngine = void 0;\nconst safe_event_emitter_provider_1 = require(\"./safe-event-emitter-provider\");\n/**\n * Construct an Ethereum provider from the given JSON-RPC engine.\n *\n * @param engine - The JSON-RPC engine to construct a provider from.\n * @returns An Ethereum provider.\n */\nfunction providerFromEngine(engine) {\n    return new safe_event_emitter_provider_1.SafeEventEmitterProvider({ engine });\n}\nexports.providerFromEngine = providerFromEngine;\n//# sourceMappingURL=provider-from-engine.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerFromMiddleware = void 0;\nconst json_rpc_engine_1 = require(\"@metamask/json-rpc-engine\");\nconst provider_from_engine_1 = require(\"./provider-from-engine\");\n/**\n * Construct an Ethereum provider from the given middleware.\n *\n * @param middleware - The middleware to construct a provider from.\n * @returns An Ethereum provider.\n */\nfunction providerFromMiddleware(middleware) {\n    const engine = new json_rpc_engine_1.JsonRpcEngine();\n    engine.push(middleware);\n    const provider = (0, provider_from_engine_1.providerFromEngine)(engine);\n    return provider;\n}\nexports.providerFromMiddleware = providerFromMiddleware;\n//# sourceMappingURL=provider-from-middleware.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _SafeEventEmitterProvider_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeEventEmitterProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\n/**\n * An Ethereum provider.\n *\n * This provider loosely follows conventions that pre-date EIP-1193.\n * It is not compliant with any Ethereum provider standard.\n */\nclass SafeEventEmitterProvider extends safe_event_emitter_1.default {\n    /**\n     * Construct a SafeEventEmitterProvider from a JSON-RPC engine.\n     *\n     * @param options - Options.\n     * @param options.engine - The JSON-RPC engine used to process requests.\n     */\n    constructor({ engine }) {\n        super();\n        _SafeEventEmitterProvider_engine.set(this, void 0);\n        /**\n         * Send a provider request asynchronously.\n         *\n         * @param req - The request to send.\n         * @param callback - A function that is called upon the success or failure of the request.\n         */\n        this.sendAsync = (req, \n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        callback) => {\n            __classPrivateFieldGet(this, _SafeEventEmitterProvider_engine, \"f\").handle(req, callback);\n        };\n        /**\n         * Send a provider request asynchronously.\n         *\n         * This method serves the same purpose as `sendAsync`. It only exists for\n         * legacy reasons.\n         *\n         * @deprecated Use `sendAsync` instead.\n         * @param req - The request to send.\n         * @param callback - A function that is called upon the success or failure of the request.\n         */\n        this.send = (req, \n        // TODO: Replace `any` with type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        callback) => {\n            if (typeof callback !== 'function') {\n                throw new Error('Must provide callback to \"send\" method.');\n            }\n            __classPrivateFieldGet(this, _SafeEventEmitterProvider_engine, \"f\").handle(req, callback);\n        };\n        __classPrivateFieldSet(this, _SafeEventEmitterProvider_engine, engine, \"f\");\n        if (engine.on) {\n            engine.on('notification', (message) => {\n                this.emit('data', null, message);\n            });\n        }\n    }\n}\nexports.SafeEventEmitterProvider = SafeEventEmitterProvider;\n_SafeEventEmitterProvider_engine = new WeakMap();\n//# sourceMappingURL=safe-event-emitter-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _JsonRpcEngine_instances, _a, _JsonRpcEngine_isDestroyed, _JsonRpcEngine_middleware, _JsonRpcEngine_notificationHandler, _JsonRpcEngine_assertIsNotDestroyed, _JsonRpcEngine_handleBatch, _JsonRpcEngine_handle, _JsonRpcEngine_processRequest, _JsonRpcEngine_runAllMiddleware, _JsonRpcEngine_runMiddleware, _JsonRpcEngine_runReturnHandlers, _JsonRpcEngine_checkForCompletion;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcEngine = void 0;\nconst rpc_errors_1 = require(\"@metamask/rpc-errors\");\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst utils_1 = require(\"@metamask/utils\");\nconst DESTROYED_ERROR_MESSAGE = 'This engine is destroyed and can no longer be used.';\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nclass JsonRpcEngine extends safe_event_emitter_1.default {\n    /**\n     * Constructs a {@link JsonRpcEngine} instance.\n     *\n     * @param options - Options bag.\n     * @param options.notificationHandler - A function for handling JSON-RPC\n     * notifications. A JSON-RPC notification is defined as a JSON-RPC request\n     * without an `id` property. If this option is _not_ provided, notifications\n     * will be treated the same as requests. If this option _is_ provided,\n     * notifications will be passed to the handler function without touching\n     * the engine's middleware stack. This function should not throw or reject.\n     */\n    constructor({ notificationHandler } = {}) {\n        super();\n        _JsonRpcEngine_instances.add(this);\n        /**\n         * Indicating whether this engine is destroyed or not.\n         */\n        _JsonRpcEngine_isDestroyed.set(this, false);\n        _JsonRpcEngine_middleware.set(this, void 0);\n        _JsonRpcEngine_notificationHandler.set(this, void 0);\n        __classPrivateFieldSet(this, _JsonRpcEngine_middleware, [], \"f\");\n        __classPrivateFieldSet(this, _JsonRpcEngine_notificationHandler, notificationHandler, \"f\");\n    }\n    /**\n     * Calls the `destroy()` function of any middleware with that property, clears\n     * the middleware array, and marks this engine as destroyed. A destroyed\n     * engine cannot be used.\n     */\n    destroy() {\n        __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\").forEach((middleware) => {\n            if (\n            // `in` walks the prototype chain, which is probably the desired\n            // behavior here.\n            'destroy' in middleware &&\n                typeof middleware.destroy === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                middleware.destroy();\n            }\n        });\n        __classPrivateFieldSet(this, _JsonRpcEngine_middleware, [], \"f\");\n        __classPrivateFieldSet(this, _JsonRpcEngine_isDestroyed, true, \"f\");\n    }\n    /**\n     * Add a middleware function to the engine's middleware stack.\n     *\n     * @param middleware - The middleware function to add.\n     */\n    push(middleware) {\n        __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_assertIsNotDestroyed).call(this);\n        __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\").push(middleware);\n    }\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    handle(req, callback) {\n        __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_assertIsNotDestroyed).call(this);\n        if (callback && typeof callback !== 'function') {\n            throw new Error('\"callback\" must be a function if provided.');\n        }\n        if (Array.isArray(req)) {\n            if (callback) {\n                return __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handleBatch).call(this, req, callback);\n            }\n            return __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handleBatch).call(this, req);\n        }\n        if (callback) {\n            return __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handle).call(this, req, callback);\n        }\n        return this._promiseHandle(req);\n    }\n    /**\n     * Returns this engine as a middleware function that can be pushed to other\n     * engines.\n     *\n     * @returns This engine as a middleware function.\n     */\n    asMiddleware() {\n        __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_assertIsNotDestroyed).call(this);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        return (req, res, next, end) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const [middlewareError, isComplete, returnHandlers] = yield __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_runAllMiddleware).call(JsonRpcEngine, req, res, __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\"));\n                if (isComplete) {\n                    yield __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_runReturnHandlers).call(JsonRpcEngine, returnHandlers);\n                    return end(middlewareError);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-misused-promises\n                return next((handlerCallback) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        yield __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_runReturnHandlers).call(JsonRpcEngine, returnHandlers);\n                        // TODO: Replace `any` with type\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    }\n                    catch (error) {\n                        return handlerCallback(error);\n                    }\n                    return handlerCallback();\n                }));\n                // TODO: Replace `any` with type\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                return end(error);\n            }\n        });\n    }\n    /**\n     * A promise-wrapped _handle.\n     *\n     * @param request - The JSON-RPC request.\n     * @returns The JSON-RPC response.\n     */\n    // This function is used in tests, so we cannot easily change it to use the\n    // hash syntax.\n    // eslint-disable-next-line no-restricted-syntax\n    _promiseHandle(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                __classPrivateFieldGet(this, _JsonRpcEngine_instances, \"m\", _JsonRpcEngine_handle).call(this, request, (error, res) => {\n                    // For notifications, the response will be `undefined`, and any caught\n                    // errors are unexpected and should be surfaced to the caller.\n                    if (error && res === undefined) {\n                        reject(error);\n                    }\n                    else {\n                        // Excepting notifications, there will always be a response, and it will\n                        // always have any error that is caught and propagated.\n                        resolve(res);\n                    }\n                }).catch(reject);\n            });\n        });\n    }\n}\nexports.JsonRpcEngine = JsonRpcEngine;\n_a = JsonRpcEngine, _JsonRpcEngine_isDestroyed = new WeakMap(), _JsonRpcEngine_middleware = new WeakMap(), _JsonRpcEngine_notificationHandler = new WeakMap(), _JsonRpcEngine_instances = new WeakSet(), _JsonRpcEngine_assertIsNotDestroyed = function _JsonRpcEngine_assertIsNotDestroyed() {\n    if (__classPrivateFieldGet(this, _JsonRpcEngine_isDestroyed, \"f\")) {\n        throw new Error(DESTROYED_ERROR_MESSAGE);\n    }\n}, _JsonRpcEngine_handleBatch = function _JsonRpcEngine_handleBatch(requests, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // The order here is important\n        try {\n            // If the batch is an empty array, the response array must contain a single object\n            if (requests.length === 0) {\n                const response = [\n                    {\n                        id: null,\n                        jsonrpc: '2.0',\n                        error: new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.invalidRequest, 'Request batch must contain plain objects. Received an empty array'),\n                    },\n                ];\n                if (callback) {\n                    return callback(null, response);\n                }\n                return response;\n            }\n            // 2. Wait for all requests to finish, or throw on some kind of fatal\n            // error\n            const responses = (yield Promise.all(\n            // 1. Begin executing each request in the order received\n            requests.map(this._promiseHandle.bind(this)))).filter(\n            // Filter out any notification responses.\n            (response) => response !== undefined);\n            // 3. Return batch response\n            if (callback) {\n                return callback(null, responses);\n            }\n            return responses;\n        }\n        catch (error) {\n            if (callback) {\n                return callback(error);\n            }\n            throw error;\n        }\n    });\n}, _JsonRpcEngine_handle = function _JsonRpcEngine_handle(callerReq, callback) {\n    var _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!callerReq ||\n            Array.isArray(callerReq) ||\n            typeof callerReq !== 'object') {\n            const error = new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.invalidRequest, `Requests must be plain objects. Received: ${typeof callerReq}`, { request: callerReq });\n            return callback(error, { id: null, jsonrpc: '2.0', error });\n        }\n        if (typeof callerReq.method !== 'string') {\n            const error = new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.invalidRequest, `Must specify a string method. Received: ${typeof callerReq.method}`, { request: callerReq });\n            if (__classPrivateFieldGet(this, _JsonRpcEngine_notificationHandler, \"f\") && !(0, utils_1.isJsonRpcRequest)(callerReq)) {\n                // Do not reply to notifications, even if they are malformed.\n                return callback(null);\n            }\n            return callback(error, {\n                // Typecast: This could be a notification, but we want to access the\n                // `id` even if it doesn't exist.\n                id: (_b = callerReq.id) !== null && _b !== void 0 ? _b : null,\n                jsonrpc: '2.0',\n                error,\n            });\n        }\n        // Handle notifications.\n        // We can't use isJsonRpcNotification here because that narrows callerReq to\n        // \"never\" after the if clause for unknown reasons.\n        if (__classPrivateFieldGet(this, _JsonRpcEngine_notificationHandler, \"f\") && !(0, utils_1.isJsonRpcRequest)(callerReq)) {\n            try {\n                yield __classPrivateFieldGet(this, _JsonRpcEngine_notificationHandler, \"f\").call(this, callerReq);\n            }\n            catch (error) {\n                return callback(error);\n            }\n            return callback(null);\n        }\n        let error = null;\n        // Handle requests.\n        // Typecast: Permit missing id's for backwards compatibility.\n        const req = Object.assign({}, callerReq);\n        const res = {\n            id: req.id,\n            jsonrpc: req.jsonrpc,\n        };\n        try {\n            yield __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_processRequest).call(JsonRpcEngine, req, res, __classPrivateFieldGet(this, _JsonRpcEngine_middleware, \"f\"));\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (_error) {\n            // A request handler error, a re-thrown middleware error, or something\n            // unexpected.\n            error = _error;\n        }\n        if (error) {\n            // Ensure no result is present on an errored response\n            delete res.result;\n            if (!res.error) {\n                res.error = (0, rpc_errors_1.serializeError)(error);\n            }\n        }\n        return callback(error, res);\n    });\n}, _JsonRpcEngine_processRequest = function _JsonRpcEngine_processRequest(req, res, middlewares) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [error, isComplete, returnHandlers] = yield __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_runAllMiddleware).call(JsonRpcEngine, req, res, middlewares);\n        // Throw if \"end\" was not called, or if the response has neither a result\n        // nor an error.\n        __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_checkForCompletion).call(JsonRpcEngine, req, res, isComplete);\n        // The return handlers should run even if an error was encountered during\n        // middleware processing.\n        yield __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_runReturnHandlers).call(JsonRpcEngine, returnHandlers);\n        // Now we re-throw the middleware processing error, if any, to catch it\n        // further up the call chain.\n        if (error) {\n            // eslint-disable-next-line @typescript-eslint/no-throw-literal\n            throw error;\n        }\n    });\n}, _JsonRpcEngine_runAllMiddleware = function _JsonRpcEngine_runAllMiddleware(req, res, middlewares) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const returnHandlers = [];\n        let error = null;\n        let isComplete = false;\n        // Go down stack of middleware, call and collect optional returnHandlers\n        for (const middleware of middlewares) {\n            [error, isComplete] = yield __classPrivateFieldGet(JsonRpcEngine, _a, \"m\", _JsonRpcEngine_runMiddleware).call(JsonRpcEngine, req, res, middleware, returnHandlers);\n            if (isComplete) {\n                break;\n            }\n        }\n        return [error, isComplete, returnHandlers.reverse()];\n    });\n}, _JsonRpcEngine_runMiddleware = function _JsonRpcEngine_runMiddleware(request, response, middleware, returnHandlers) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => {\n            const end = (error) => {\n                const parsedError = error || response.error;\n                if (parsedError) {\n                    response.error = (0, rpc_errors_1.serializeError)(parsedError);\n                }\n                // True indicates that the request should end\n                resolve([parsedError, true]);\n            };\n            const next = (returnHandler) => {\n                if (response.error) {\n                    end(response.error);\n                }\n                else {\n                    if (returnHandler) {\n                        if (typeof returnHandler !== 'function') {\n                            end(new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: \"next\" return handlers must be functions. ` +\n                                `Received \"${typeof returnHandler}\" for request:\\n${jsonify(request)}`, { request: request }));\n                        }\n                        returnHandlers.push(returnHandler);\n                    }\n                    // False indicates that the request should not end\n                    resolve([null, false]);\n                }\n            };\n            try {\n                middleware(request, response, next, end);\n                // TODO: Replace `any` with type\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                end(error);\n            }\n        });\n    });\n}, _JsonRpcEngine_runReturnHandlers = function _JsonRpcEngine_runReturnHandlers(handlers) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const handler of handlers) {\n            yield new Promise((resolve, reject) => {\n                handler((error) => (error ? reject(error) : resolve()));\n            });\n        }\n    });\n}, _JsonRpcEngine_checkForCompletion = function _JsonRpcEngine_checkForCompletion(request, response, isComplete) {\n    if (!(0, utils_1.hasProperty)(response, 'result') && !(0, utils_1.hasProperty)(response, 'error')) {\n        throw new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: Response has no error or result for request:\\n${jsonify(request)}`, { request: request });\n    }\n    if (!isComplete) {\n        throw new rpc_errors_1.JsonRpcError(rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: Nothing ended request:\\n${jsonify(request)}`, { request: request });\n    }\n};\n/**\n * JSON-stringifies a request object.\n *\n * @param request - The request object to JSON-stringify.\n * @returns The JSON-stringified request object.\n */\nfunction jsonify(request) {\n    return JSON.stringify(request, null, 2);\n}\n//# sourceMappingURL=JsonRpcEngine.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAsyncMiddleware = void 0;\n/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n *\n * @param asyncMiddleware - The asynchronous middleware function to wrap.\n * @returns The wrapped asynchronous middleware function, ready to be consumed\n * by JsonRpcEngine.\n */\nfunction createAsyncMiddleware(asyncMiddleware) {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    return (request, response, next, end) => __awaiter(this, void 0, void 0, function* () {\n        // nextPromise is the key to the implementation\n        // it is resolved by the return handler passed to the\n        // \"next\" function\n        let resolveNextPromise;\n        const nextPromise = new Promise((resolve) => {\n            resolveNextPromise = resolve;\n        });\n        let returnHandlerCallback = null;\n        let nextWasCalled = false;\n        // This will be called by the consumer's async middleware.\n        const asyncNext = () => __awaiter(this, void 0, void 0, function* () {\n            nextWasCalled = true;\n            // We pass a return handler to next(). When it is called by the engine,\n            // the consumer's async middleware will resume executing.\n            next((runReturnHandlersCallback) => {\n                // This callback comes from JsonRpcEngine._runReturnHandlers\n                returnHandlerCallback = runReturnHandlersCallback;\n                resolveNextPromise();\n            });\n            return nextPromise;\n        });\n        try {\n            yield asyncMiddleware(request, response, asyncNext);\n            if (nextWasCalled) {\n                yield nextPromise; // we must wait until the return handler is called\n                returnHandlerCallback(null);\n            }\n            else {\n                end(null);\n            }\n            // TODO: Replace `any` with type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            if (returnHandlerCallback) {\n                returnHandlerCallback(error);\n            }\n            else {\n                end(error);\n            }\n        }\n    });\n}\nexports.createAsyncMiddleware = createAsyncMiddleware;\n//# sourceMappingURL=createAsyncMiddleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createScaffoldMiddleware = void 0;\n/**\n * Creates a middleware function from an object of RPC method handler functions,\n * keyed to particular method names. If a method corresponding to a key of this\n * object is requested, this middleware will pass it to the corresponding\n * handler and return the result.\n *\n * @param handlers - The RPC method handler functions.\n * @returns The scaffold middleware function.\n */\nfunction createScaffoldMiddleware(handlers) {\n    return (req, res, next, end) => {\n        const handler = handlers[req.method];\n        // if no handler, return\n        if (handler === undefined) {\n            return next();\n        }\n        // if handler is fn, call as middleware\n        if (typeof handler === 'function') {\n            return handler(req, res, next, end);\n        }\n        // if handler is some other value, use as result\n        res.result = handler;\n        return end();\n    };\n}\nexports.createScaffoldMiddleware = createScaffoldMiddleware;\n//# sourceMappingURL=createScaffoldMiddleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUniqueId = void 0;\n// uint32 (two's complement) max\n// more conservative than Number.MAX_SAFE_INTEGER\nconst MAX = 4294967295;\nlet idCounter = Math.floor(Math.random() * MAX);\n/**\n * Gets an ID that is guaranteed to be unique so long as no more than\n * 4_294_967_295 (uint32 max) IDs are created, or the IDs are rapidly turned\n * over.\n *\n * @returns The unique ID.\n */\nfunction getUniqueId() {\n    idCounter = (idCounter + 1) % MAX;\n    return idCounter;\n}\nexports.getUniqueId = getUniqueId;\n//# sourceMappingURL=getUniqueId.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createIdRemapMiddleware = void 0;\nconst getUniqueId_1 = require(\"./getUniqueId\");\n/**\n * Returns a middleware function that overwrites the `id` property of each\n * request with an ID that is guaranteed to be unique, and restores the original\n * ID in a return handler.\n *\n * If used, should be the first middleware in the stack.\n *\n * @returns The ID remap middleware function.\n */\nfunction createIdRemapMiddleware() {\n    return (request, response, next, _end) => {\n        const originalId = request.id;\n        const newId = (0, getUniqueId_1.getUniqueId)();\n        request.id = newId;\n        response.id = newId;\n        next((done) => {\n            request.id = originalId;\n            response.id = originalId;\n            done();\n        });\n    };\n}\nexports.createIdRemapMiddleware = createIdRemapMiddleware;\n//# sourceMappingURL=idRemapMiddleware.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./createAsyncMiddleware\"), exports);\n__exportStar(require(\"./createScaffoldMiddleware\"), exports);\n__exportStar(require(\"./getUniqueId\"), exports);\n__exportStar(require(\"./idRemapMiddleware\"), exports);\n__exportStar(require(\"./JsonRpcEngine\"), exports);\n__exportStar(require(\"./mergeMiddleware\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeMiddleware = void 0;\nconst JsonRpcEngine_1 = require(\"./JsonRpcEngine\");\n/**\n * Takes a stack of middleware and joins them into a single middleware function.\n *\n * @param middlewareStack - The middleware stack to merge.\n * @returns The merged middleware function.\n */\nfunction mergeMiddleware(middlewareStack) {\n    const engine = new JsonRpcEngine_1.JsonRpcEngine();\n    middlewareStack.forEach((middleware) => engine.push(middleware));\n    return engine.asMiddleware();\n}\nexports.mergeMiddleware = mergeMiddleware;\n//# sourceMappingURL=mergeMiddleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.any)(), (value) => {\n    (0, assert_1.assertStruct)(value, exports.UnsafeJsonStruct);\n    return JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n            return undefined;\n        }\n        return propValue;\n    }));\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/safe-event-emitter-provider.ts\nvar _rpcerrors = require('@metamask/rpc-errors');\nvar _safeeventemitter = require('@metamask/safe-event-emitter'); var _safeeventemitter2 = _interopRequireDefault(_safeeventemitter);\nvar _uuid = require('uuid');\nfunction convertEip1193RequestToJsonRpcRequest(eip1193Request) {\n  const { id = _uuid.v4.call(void 0, ), jsonrpc = \"2.0\", method, params } = eip1193Request;\n  return params ? {\n    id,\n    jsonrpc,\n    method,\n    params\n  } : {\n    id,\n    jsonrpc,\n    method\n  };\n}\nvar _engine;\nvar SafeEventEmitterProvider = class extends _safeeventemitter2.default {\n  /**\n   * Construct a SafeEventEmitterProvider from a JSON-RPC engine.\n   *\n   * @param options - Options.\n   * @param options.engine - The JSON-RPC engine used to process requests.\n   */\n  constructor({ engine }) {\n    super();\n    __privateAdd(this, _engine, void 0);\n    /**\n     * Send a provider request asynchronously.\n     *\n     * This method serves the same purpose as `request`. It only exists for\n     * legacy reasons.\n     *\n     * @param eip1193Request - The request to send.\n     * @param callback - A function that is called upon the success or failure of the request.\n     * @deprecated Please use `request` instead.\n     */\n    this.sendAsync = (eip1193Request, callback) => {\n      const jsonRpcRequest = convertEip1193RequestToJsonRpcRequest(eip1193Request);\n      __privateGet(this, _engine).handle(jsonRpcRequest, callback);\n    };\n    /**\n     * Send a provider request asynchronously.\n     *\n     * This method serves the same purpose as `request`. It only exists for\n     * legacy reasons.\n     *\n     * @param eip1193Request - The request to send.\n     * @param callback - A function that is called upon the success or failure of the request.\n     * @deprecated Please use `request` instead.\n     */\n    this.send = (eip1193Request, callback) => {\n      if (typeof callback !== \"function\") {\n        throw new Error('Must provide callback to \"send\" method.');\n      }\n      const jsonRpcRequest = convertEip1193RequestToJsonRpcRequest(eip1193Request);\n      __privateGet(this, _engine).handle(jsonRpcRequest, callback);\n    };\n    __privateSet(this, _engine, engine);\n    if (engine.on) {\n      engine.on(\"notification\", (message) => {\n        this.emit(\"data\", null, message);\n      });\n    }\n  }\n  /**\n   * Send a provider request asynchronously.\n   *\n   * @param eip1193Request - The request to send.\n   * @returns The JSON-RPC response.\n   */\n  async request(eip1193Request) {\n    const jsonRpcRequest = convertEip1193RequestToJsonRpcRequest(eip1193Request);\n    const response = await __privateGet(this, _engine).handle(jsonRpcRequest);\n    if (\"result\" in response) {\n      return response.result;\n    }\n    const error = new (0, _rpcerrors.JsonRpcError)(\n      response.error.code,\n      response.error.message,\n      response.error.data\n    );\n    if (\"stack\" in response.error) {\n      error.stack = response.error.stack;\n    }\n    throw error;\n  }\n};\n_engine = new WeakMap();\n\n\n\n\nexports.convertEip1193RequestToJsonRpcRequest = convertEip1193RequestToJsonRpcRequest; exports.SafeEventEmitterProvider = SafeEventEmitterProvider;\n//# sourceMappingURL=chunk-IQRHEFHI.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkVYK4XMOLjs = require('./chunk-VYK4XMOL.js');\n\n// src/provider-from-middleware.ts\nvar _jsonrpcengine = require('@metamask/json-rpc-engine');\nfunction providerFromMiddleware(middleware) {\n  const engine = new (0, _jsonrpcengine.JsonRpcEngine)();\n  engine.push(middleware);\n  const provider = _chunkVYK4XMOLjs.providerFromEngine.call(void 0, engine);\n  return provider;\n}\n\n\n\nexports.providerFromMiddleware = providerFromMiddleware;\n//# sourceMappingURL=chunk-V2OUBCY7.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkIQRHEFHIjs = require('./chunk-IQRHEFHI.js');\n\n// src/provider-from-engine.ts\nfunction providerFromEngine(engine) {\n  return new (0, _chunkIQRHEFHIjs.SafeEventEmitterProvider)({ engine });\n}\n\n\n\nexports.providerFromEngine = providerFromEngine;\n//# sourceMappingURL=chunk-VYK4XMOL.js.map","\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunkV2OUBCY7js = require('./chunk-V2OUBCY7.js');\n\n\nvar _chunkVYK4XMOLjs = require('./chunk-VYK4XMOL.js');\n\n\nvar _chunkIQRHEFHIjs = require('./chunk-IQRHEFHI.js');\n\n\n\n\nexports.SafeEventEmitterProvider = _chunkIQRHEFHIjs.SafeEventEmitterProvider; exports.providerFromEngine = _chunkVYK4XMOLjs.providerFromEngine; exports.providerFromMiddleware = _chunkV2OUBCY7js.providerFromMiddleware;\n//# sourceMappingURL=index.js.map","const createRandomId = require('json-rpc-random-id')();\nconst extend = require('xtend');\n\nmodule.exports = EthQuery;\n\n/**\n * Wrapping an Ethereum provider object, EthQuery provides some conveniences\n * around making requests to an RPC endpoint:\n *\n * - Each of the RPC methods in the Ethereum spec may be requested not only\n *   via `sendAsync`, but also via its own instance method, whose API is suited\n *   for the RPC method.\n * - When requesting an RPC method, `id` and `jsonrpc` do not need to be\n *   specified and are filled in with reasonable defaults.\n * - The mechanics of `sendAsync` (or any of the RPC-method-specific instance\n *   methods) are simplified such that its callback will be called with an error\n *   argument not only if the callback on the provider's `sendAsync` method was\n *   called with an argument, but also if the `response` object has an `error`\n *   property.\n *\n * @param {any} provider - The provider object.\n */\nfunction EthQuery(provider) {\n  const self = this;\n  self.currentProvider = provider;\n}\n\n//\n// base queries\n//\n\n// default block\nEthQuery.prototype.getBalance = generateFnWithDefaultBlockFor(\n  2,\n  'eth_getBalance',\n);\nEthQuery.prototype.getCode = generateFnWithDefaultBlockFor(2, 'eth_getCode');\nEthQuery.prototype.getTransactionCount = generateFnWithDefaultBlockFor(\n  2,\n  'eth_getTransactionCount',\n);\nEthQuery.prototype.getStorageAt = generateFnWithDefaultBlockFor(\n  3,\n  'eth_getStorageAt',\n);\nEthQuery.prototype.call = generateFnWithDefaultBlockFor(2, 'eth_call');\n// standard\nEthQuery.prototype.protocolVersion = generateFnFor('eth_protocolVersion');\nEthQuery.prototype.syncing = generateFnFor('eth_syncing');\nEthQuery.prototype.coinbase = generateFnFor('eth_coinbase');\nEthQuery.prototype.mining = generateFnFor('eth_mining');\nEthQuery.prototype.hashrate = generateFnFor('eth_hashrate');\nEthQuery.prototype.gasPrice = generateFnFor('eth_gasPrice');\nEthQuery.prototype.accounts = generateFnFor('eth_accounts');\nEthQuery.prototype.blockNumber = generateFnFor('eth_blockNumber');\nEthQuery.prototype.getBlockTransactionCountByHash = generateFnFor(\n  'eth_getBlockTransactionCountByHash',\n);\nEthQuery.prototype.getBlockTransactionCountByNumber = generateFnFor(\n  'eth_getBlockTransactionCountByNumber',\n);\nEthQuery.prototype.getUncleCountByBlockHash = generateFnFor(\n  'eth_getUncleCountByBlockHash',\n);\nEthQuery.prototype.getUncleCountByBlockNumber = generateFnFor(\n  'eth_getUncleCountByBlockNumber',\n);\nEthQuery.prototype.sign = generateFnFor('eth_sign');\nEthQuery.prototype.sendTransaction = generateFnFor('eth_sendTransaction');\nEthQuery.prototype.sendRawTransaction = generateFnFor('eth_sendRawTransaction');\nEthQuery.prototype.estimateGas = generateFnFor('eth_estimateGas');\nEthQuery.prototype.getBlockByHash = generateFnFor('eth_getBlockByHash');\nEthQuery.prototype.getBlockByNumber = generateFnFor('eth_getBlockByNumber');\nEthQuery.prototype.getTransactionByHash = generateFnFor(\n  'eth_getTransactionByHash',\n);\nEthQuery.prototype.getTransactionByBlockHashAndIndex = generateFnFor(\n  'eth_getTransactionByBlockHashAndIndex',\n);\nEthQuery.prototype.getTransactionByBlockNumberAndIndex = generateFnFor(\n  'eth_getTransactionByBlockNumberAndIndex',\n);\nEthQuery.prototype.getTransactionReceipt = generateFnFor(\n  'eth_getTransactionReceipt',\n);\nEthQuery.prototype.getUncleByBlockHashAndIndex = generateFnFor(\n  'eth_getUncleByBlockHashAndIndex',\n);\nEthQuery.prototype.getUncleByBlockNumberAndIndex = generateFnFor(\n  'eth_getUncleByBlockNumberAndIndex',\n);\nEthQuery.prototype.getCompilers = generateFnFor('eth_getCompilers');\nEthQuery.prototype.compileLLL = generateFnFor('eth_compileLLL');\nEthQuery.prototype.compileSolidity = generateFnFor('eth_compileSolidity');\nEthQuery.prototype.compileSerpent = generateFnFor('eth_compileSerpent');\nEthQuery.prototype.newFilter = generateFnFor('eth_newFilter');\nEthQuery.prototype.newBlockFilter = generateFnFor('eth_newBlockFilter');\nEthQuery.prototype.newPendingTransactionFilter = generateFnFor(\n  'eth_newPendingTransactionFilter',\n);\nEthQuery.prototype.uninstallFilter = generateFnFor('eth_uninstallFilter');\nEthQuery.prototype.getFilterChanges = generateFnFor('eth_getFilterChanges');\nEthQuery.prototype.getFilterLogs = generateFnFor('eth_getFilterLogs');\nEthQuery.prototype.getLogs = generateFnFor('eth_getLogs');\nEthQuery.prototype.getWork = generateFnFor('eth_getWork');\nEthQuery.prototype.submitWork = generateFnFor('eth_submitWork');\nEthQuery.prototype.submitHashrate = generateFnFor('eth_submitHashrate');\n\n// network level\n\nEthQuery.prototype.sendAsync = function (opts, callback) {\n  const self = this;\n  self.currentProvider.sendAsync(\n    createPayload(opts),\n    function (error, response) {\n      let improvedError = error;\n      if (!error && response.error) {\n        improvedError = new Error(\n          `EthQuery - RPC Error - ${response.error.message}`,\n        );\n      }\n      if (improvedError) {\n        return callback(improvedError);\n      }\n      return callback(null, response.result);\n    },\n  );\n};\n\n// util\n\n/**\n * Generates an instance method designed to call an RPC method that takes no\n * parameters. This instance method uses `sendAsync` internally to make the\n * request to the network.\n *\n * @param {any} methodName - The RPC method.\n * @returns {any} The method.\n */\nfunction generateFnFor(methodName) {\n  return function (...args) {\n    const self = this;\n    const callback = args.pop();\n    self.sendAsync(\n      {\n        method: methodName,\n        params: args,\n      },\n      callback,\n    );\n  };\n}\n\n/**\n * Generates an instance method designed to call an RPC methods that takes one\n * or more parameters. This instance method uses `sendAsync` internally to make\n * the request to the network.\n *\n * @param {any} argCount - The number of parameters that the RPC method is\n * expected to take.\n * @param {any} methodName - The RPC method.\n * @returns {any} The method.\n */\nfunction generateFnWithDefaultBlockFor(argCount, methodName) {\n  return function (...args) {\n    const self = this;\n    const callback = args.pop();\n    // set optional default block param\n    if (args.length < argCount) {\n      args.push('latest');\n    }\n    self.sendAsync(\n      {\n        method: methodName,\n        params: args,\n      },\n      callback,\n    );\n  };\n}\n\n/**\n * Builds a complete request payload object from a partial version.\n *\n * @param {any} data - The partial request object.\n * @returns {any} The complete request object.\n */\nfunction createPayload(data) {\n  return extend(\n    {\n      // defaults\n      id: createRandomId(),\n      jsonrpc: '2.0',\n      params: [],\n      // user-specified\n    },\n    data,\n  );\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = void 0;\nconst base_1 = require(\"@scure/base\");\nconst nacl = __importStar(require(\"tweetnacl\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encrypt({ publicKey, data, version, }) {\n    if ((0, utils_1.isNullish)(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(version)) {\n        throw new Error('Missing version parameter');\n    }\n    switch (version) {\n        case 'x25519-xsalsa20-poly1305': {\n            if (typeof data !== 'string') {\n                throw new Error('Message data must be given as a string');\n            }\n            // generate ephemeral keypair\n            const ephemeralKeyPair = nacl.box.keyPair();\n            // assemble encryption parameters - from string to UInt8\n            let pubKeyUInt8Array;\n            try {\n                pubKeyUInt8Array = base_1.base64.decode(publicKey);\n            }\n            catch (err) {\n                throw new Error('Bad public key');\n            }\n            const msgParamsUInt8Array = base_1.utf8.decode(data);\n            const nonce = nacl.randomBytes(nacl.box.nonceLength);\n            // encrypt\n            const encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey);\n            // handle encrypted data\n            const output = {\n                version: 'x25519-xsalsa20-poly1305',\n                nonce: base_1.base64.encode(nonce),\n                ephemPublicKey: base_1.base64.encode(ephemeralKeyPair.publicKey),\n                ciphertext: base_1.base64.encode(encryptedMessage),\n            };\n            // return encrypted msg data\n            return output;\n        }\n        default:\n            throw new Error('Encryption type/version not supported');\n    }\n}\nexports.encrypt = encrypt;\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encryptSafely({ publicKey, data, version, }) {\n    if ((0, utils_1.isNullish)(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(version)) {\n        throw new Error('Missing version parameter');\n    }\n    const DEFAULT_PADDING_LENGTH = 2 ** 11;\n    const NACL_EXTRA_BYTES = 16;\n    if (typeof data === 'object' && data && 'toJSON' in data) {\n        // remove toJSON attack vector\n        // TODO, check all possible children\n        throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n    }\n    // add padding\n    const dataWithPadding = {\n        data,\n        padding: '',\n    };\n    // calculate padding\n    const dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n    const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n    let padLength = 0;\n    // Only pad if necessary\n    if (modVal > 0) {\n        padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n    }\n    dataWithPadding.padding = '0'.repeat(padLength);\n    const paddedMessage = JSON.stringify(dataWithPadding);\n    return encrypt({ publicKey, data: paddedMessage, version });\n}\nexports.encryptSafely = encryptSafely;\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decrypt({ encryptedData, privateKey, }) {\n    if ((0, utils_1.isNullish)(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    switch (encryptedData.version) {\n        case 'x25519-xsalsa20-poly1305': {\n            const receiverPrivateKeyUint8Array = Buffer.from(privateKey, 'hex');\n            const receiverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(receiverPrivateKeyUint8Array).secretKey;\n            // assemble decryption parameters\n            const nonce = base_1.base64.decode(encryptedData.nonce);\n            const ciphertext = base_1.base64.decode(encryptedData.ciphertext);\n            const ephemPublicKey = base_1.base64.decode(encryptedData.ephemPublicKey);\n            // decrypt\n            const decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, receiverEncryptionPrivateKey);\n            // return decrypted msg data\n            try {\n                if (!decryptedMessage) {\n                    throw new Error();\n                }\n                const output = base_1.utf8.encode(decryptedMessage);\n                // TODO: This is probably extraneous but was kept to minimize changes during refactor\n                if (!output) {\n                    throw new Error();\n                }\n                return output;\n            }\n            catch (err) {\n                if (err && typeof err.message === 'string' && err.message.length) {\n                    throw new Error(`Decryption failed: ${err.message}`);\n                }\n                throw new Error(`Decryption failed.`);\n            }\n        }\n        default:\n            throw new Error('Encryption type/version not supported.');\n    }\n}\nexports.decrypt = decrypt;\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decryptSafely({ encryptedData, privateKey, }) {\n    if ((0, utils_1.isNullish)(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n    return dataWithPadding.data;\n}\nexports.decryptSafely = decryptSafely;\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nfunction getEncryptionPublicKey(privateKey) {\n    const privateKeyUint8Array = Buffer.from(privateKey, 'hex');\n    const encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n    return base_1.base64.encode(encryptionPublicKey);\n}\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n//# sourceMappingURL=encryption.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = exports.concatSig = void 0;\n__exportStar(require(\"./personal-sign\"), exports);\n__exportStar(require(\"./sign-typed-data\"), exports);\n__exportStar(require(\"./encryption\"), exports);\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"concatSig\", { enumerable: true, get: function () { return utils_1.concatSig; } });\nObject.defineProperty(exports, \"normalize\", { enumerable: true, get: function () { return utils_1.normalize; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"./utils\");\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction personalSign({ privateKey, data, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const message = (0, utils_1.legacyToBuffer)(data);\n    const msgHash = (0, util_1.hashPersonalMessage)(message);\n    const sig = (0, util_1.ecsign)(msgHash, privateKey);\n    const serialized = (0, utils_1.concatSig)((0, util_1.toBuffer)(sig.v), sig.r, sig.s);\n    return serialized;\n}\nexports.personalSign = personalSign;\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nfunction recoverPersonalSignature({ data, signature, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    const sender = (0, util_1.publicToAddress)(publicKey);\n    const senderHex = (0, util_1.bufferToHex)(sender);\n    return senderHex;\n}\nexports.recoverPersonalSignature = recoverPersonalSignature;\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nfunction extractPublicKey({ data, signature, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    return `0x${publicKey.toString('hex')}`;\n}\nexports.extractPublicKey = extractPublicKey;\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message, signature) {\n    const messageHash = (0, util_1.hashPersonalMessage)((0, utils_1.legacyToBuffer)(message));\n    return (0, utils_1.recoverPublicKey)(messageHash, signature);\n}\n//# sourceMappingURL=personal-sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverTypedSignature = exports.signTypedData = exports.typedSignatureHash = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = exports.SignTypedDataVersion = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst abi_utils_1 = require(\"@metamask/abi-utils\");\nconst parsers_1 = require(\"@metamask/abi-utils/dist/parsers\");\nconst utils_1 = require(\"@metamask/abi-utils/dist/utils\");\nconst utils_2 = require(\"@metamask/utils\");\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst utils_3 = require(\"./utils\");\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nvar SignTypedDataVersion;\n(function (SignTypedDataVersion) {\n    SignTypedDataVersion[\"V1\"] = \"V1\";\n    SignTypedDataVersion[\"V3\"] = \"V3\";\n    SignTypedDataVersion[\"V4\"] = \"V4\";\n})(SignTypedDataVersion = exports.SignTypedDataVersion || (exports.SignTypedDataVersion = {}));\nexports.TYPED_MESSAGE_SCHEMA = {\n    type: 'object',\n    properties: {\n        types: {\n            type: 'object',\n            additionalProperties: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        name: { type: 'string' },\n                        type: { type: 'string' },\n                    },\n                    required: ['name', 'type'],\n                },\n            },\n        },\n        primaryType: { type: 'string' },\n        domain: { type: 'object' },\n        message: { type: 'object' },\n    },\n    required: ['types', 'primaryType', 'domain', 'message'],\n};\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(version, allowedVersions) {\n    if (!Object.keys(SignTypedDataVersion).includes(version)) {\n        throw new Error(`Invalid version: '${version}'`);\n    }\n    else if (allowedVersions && !allowedVersions.includes(version)) {\n        throw new Error(`SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(', ')}`);\n    }\n}\n/**\n * Parse a string, number, or bigint value into a `Uint8Array`.\n *\n * @param type - The type of the value.\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseNumber(type, value) {\n    (0, utils_2.assert)(value !== null, `Unable to encode value: Invalid number. Expected a valid number value, but received \"${value}\".`);\n    const bigIntValue = BigInt(value);\n    const length = (0, parsers_1.getLength)(type);\n    const maxValue = BigInt(2) ** BigInt(length) - BigInt(1);\n    // Note that this is not accurate, since the actual maximum value for unsigned\n    // integers is `2 ^ (length - 1) - 1`, but this is required for backwards\n    // compatibility with the old implementation.\n    (0, utils_2.assert)(bigIntValue >= -maxValue && bigIntValue <= maxValue, `Unable to encode value: Number \"${value}\" is out of range for type \"${type}\".`);\n    return bigIntValue;\n}\n/**\n * Parse an address string to a `Uint8Array`. The behaviour of this is quite\n * strange, in that it does not parse the address as hexadecimal string, nor as\n * UTF-8. It does some weird stuff with the string and char codes, and then\n * returns the result as a `Uint8Array`.\n *\n * This is based on the old `ethereumjs-abi` implementation, which essentially\n * calls `new BN(address, 10)` on the address string, the equivalent of calling\n * `parseInt(address, 10)` in JavaScript. This is not a valid way to parse an\n * address and would result in `NaN` in plain JavaScript, but it is the\n * behaviour of the old implementation, and so we must preserve it for backwards\n * compatibility.\n *\n * @param address - The address to parse.\n * @returns The parsed address.\n */\nfunction reallyStrangeAddressToBytes(address) {\n    let addressValue = BigInt(0);\n    for (let i = 0; i < address.length; i++) {\n        const character = BigInt(address.charCodeAt(i) - 48);\n        addressValue *= BigInt(10);\n        // 'a'\n        if (character >= 49) {\n            addressValue += character - BigInt(49) + BigInt(0xa);\n            // 'A'\n        }\n        else if (character >= 17) {\n            addressValue += character - BigInt(17) + BigInt(0xa);\n            // '0' - '9'\n        }\n        else {\n            addressValue += character;\n        }\n    }\n    return (0, utils_1.padStart)((0, utils_2.bigIntToBytes)(addressValue), 20);\n}\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(types, name, type, \n// TODO: constrain type on `value`\nvalue, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    if (types[type] !== undefined) {\n        return [\n            'bytes32',\n            // TODO: return Buffer, remove string from return type\n            version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n                ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n                : (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(encodeData(type, value, types, version))),\n        ];\n    }\n    // `function` is supported in `@metamask/abi-utils`, but not allowed by\n    // EIP-712, so we throw an error here.\n    if (type === 'function') {\n        throw new Error('Unsupported or invalid type: \"function\"');\n    }\n    if (value === undefined) {\n        throw new Error(`missing value for field ${name} of type ${type}`);\n    }\n    if (type === 'address') {\n        if (typeof value === 'number') {\n            return ['address', (0, utils_1.padStart)((0, utils_2.numberToBytes)(value), 20)];\n        }\n        else if ((0, utils_2.isStrictHexString)(value)) {\n            return ['address', (0, utils_2.add0x)(value)];\n        }\n        else if (typeof value === 'string') {\n            return ['address', reallyStrangeAddressToBytes(value).subarray(0, 20)];\n        }\n    }\n    if (type === 'bool') {\n        return ['bool', Boolean(value)];\n    }\n    if (type === 'bytes') {\n        if (typeof value === 'number') {\n            value = (0, utils_2.numberToBytes)(value);\n        }\n        else if ((0, utils_2.isStrictHexString)(value) || value === '0x') {\n            value = (0, utils_2.hexToBytes)(value);\n        }\n        else if (typeof value === 'string') {\n            value = (0, utils_2.stringToBytes)(value);\n        }\n        return ['bytes32', (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(value))];\n    }\n    if (type.startsWith('bytes') && type !== 'bytes' && !type.includes('[')) {\n        if (typeof value === 'number') {\n            if (value < 0) {\n                return ['bytes32', new Uint8Array(32)];\n            }\n            return ['bytes32', (0, utils_2.bigIntToBytes)(BigInt(value))];\n        }\n        else if ((0, utils_2.isStrictHexString)(value)) {\n            return ['bytes32', (0, utils_2.hexToBytes)(value)];\n        }\n        return ['bytes32', value];\n    }\n    if (type.startsWith('int') && !type.includes('[')) {\n        const bigIntValue = parseNumber(type, value);\n        if (bigIntValue >= BigInt(0)) {\n            return ['uint256', bigIntValue];\n        }\n        return ['int256', bigIntValue];\n    }\n    if (type === 'string') {\n        if (typeof value === 'number') {\n            value = (0, utils_2.numberToBytes)(value);\n        }\n        else {\n            value = (0, utils_2.stringToBytes)(value !== null && value !== void 0 ? value : '');\n        }\n        return ['bytes32', (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(value))];\n    }\n    if (type.endsWith(']')) {\n        if (version === SignTypedDataVersion.V3) {\n            throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n        }\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField(types, name, parsedType, item, version));\n        return [\n            'bytes32',\n            (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, abi_utils_1.encode)(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v)))),\n        ];\n    }\n    return [type, value];\n}\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const encodedTypes = ['bytes32'];\n    const encodedValues = [\n        hashType(primaryType, types),\n    ];\n    for (const field of types[primaryType]) {\n        if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n            continue;\n        }\n        const [type, value] = encodeField(types, field.name, field.type, data[field.name], version);\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return (0, util_1.arrToBufArr)((0, abi_utils_1.encode)(encodedTypes, encodedValues));\n}\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(primaryType, types) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies(primaryType, types);\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        const children = types[type];\n        if (!children) {\n            throw new Error(`No type definition specified: ${type}`);\n        }\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(primaryType, types, results = new Set()) {\n    if (typeof primaryType !== 'string') {\n        throw new Error(`Invalid findTypeDependencies input ${JSON.stringify(primaryType)}`);\n    }\n    const match = primaryType.match(/^\\w*/u);\n    [primaryType] = match;\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies(field.type, types, results);\n    }\n    return results;\n}\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const encoded = encodeData(primaryType, data, types, version);\n    const hashed = (0, keccak_1.keccak256)(encoded);\n    const buf = (0, util_1.arrToBufArr)(hashed);\n    return buf;\n}\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(primaryType, types) {\n    const encodedHashType = (0, utils_2.stringToBytes)(encodeType(primaryType, types));\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(encodedHashType));\n}\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData(data) {\n    const sanitizedData = {};\n    for (const key in exports.TYPED_MESSAGE_SCHEMA.properties) {\n        if (data[key]) {\n            sanitizedData[key] = data[key];\n        }\n    }\n    if ('types' in sanitizedData) {\n        // TODO: Fix types\n        sanitizedData.types = Object.assign({ EIP712Domain: [] }, sanitizedData.types);\n    }\n    return sanitizedData;\n}\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash(typedData, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const sanitizedData = sanitizeData(typedData);\n    const { domain } = sanitizedData;\n    const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n    return hashStruct('EIP712Domain', domain, domainType, version);\n}\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash(typedData, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const sanitizedData = sanitizeData(typedData);\n    const parts = [(0, utils_2.hexToBytes)('1901')];\n    parts.push(eip712DomainHash(typedData, version));\n    if (sanitizedData.primaryType !== 'EIP712Domain') {\n        parts.push(hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, version));\n    }\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, utils_2.concatBytes)(parts)));\n}\n/**\n * A collection of utility functions used for signing typed data.\n */\nexports.TypedDataUtils = {\n    encodeData,\n    encodeType,\n    findTypeDependencies,\n    hashStruct,\n    hashType,\n    sanitizeData,\n    eip712Hash,\n    eip712DomainHash,\n};\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nfunction typedSignatureHash(typedData) {\n    const hashBuffer = _typedSignatureHash(typedData);\n    return (0, utils_2.bytesToHex)(hashBuffer);\n}\nexports.typedSignatureHash = typedSignatureHash;\n/**\n * Normalize a value, so that `@metamask/abi-utils` can handle it. This\n * matches the behaviour of the `ethereumjs-abi` library.\n *\n * @param type - The type of the value to normalize.\n * @param value - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalizeValue(type, value) {\n    if ((0, parsers_1.isArrayType)(type) && Array.isArray(value)) {\n        const [innerType] = (0, parsers_1.getArrayType)(type);\n        return value.map((item) => normalizeValue(innerType, item));\n    }\n    if (type === 'address') {\n        if (typeof value === 'number') {\n            return (0, utils_1.padStart)((0, utils_2.numberToBytes)(value), 20);\n        }\n        if ((0, utils_2.isStrictHexString)(value)) {\n            return (0, utils_1.padStart)((0, utils_2.hexToBytes)(value).subarray(0, 20), 20);\n        }\n        if (value instanceof Uint8Array) {\n            return (0, utils_1.padStart)(value.subarray(0, 20), 20);\n        }\n    }\n    if (type === 'bool') {\n        return Boolean(value);\n    }\n    if (type.startsWith('bytes') && type !== 'bytes') {\n        const length = (0, parsers_1.getByteLength)(type);\n        if (typeof value === 'number') {\n            if (value < 0) {\n                // `solidityPack(['bytesN'], [-1])` returns `0x00..00`.\n                return new Uint8Array();\n            }\n            return (0, utils_2.numberToBytes)(value).subarray(0, length);\n        }\n        if ((0, utils_2.isStrictHexString)(value)) {\n            return (0, utils_2.hexToBytes)(value).subarray(0, length);\n        }\n        if (value instanceof Uint8Array) {\n            return value.subarray(0, length);\n        }\n    }\n    if (type.startsWith('uint')) {\n        if (typeof value === 'number') {\n            return Math.abs(value);\n        }\n    }\n    if (type.startsWith('int')) {\n        if (typeof value === 'number') {\n            const length = (0, parsers_1.getLength)(type);\n            return BigInt.asIntN(length, BigInt(value));\n        }\n    }\n    return value;\n}\n/**\n * For some reason `ethereumjs-abi` treats `address` and `address[]` differently\n * so we need to normalize `address[]` differently.\n *\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeAddresses(values) {\n    return values.map((value) => {\n        if (typeof value === 'number') {\n            return (0, utils_1.padStart)((0, utils_2.numberToBytes)(value), 32);\n        }\n        if ((0, utils_2.isStrictHexString)(value)) {\n            return (0, utils_1.padStart)((0, utils_2.hexToBytes)(value).subarray(0, 32), 32);\n        }\n        if (value instanceof Uint8Array) {\n            return (0, utils_1.padStart)(value.subarray(0, 32), 32);\n        }\n        return value;\n    });\n}\n/**\n * For some reason `ethereumjs-abi` treats `intN` and `intN[]` differently\n * so we need to normalize `intN[]` differently.\n *\n * @param type - The type of the value to normalize.\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeIntegers(type, values) {\n    return values.map((value) => {\n        if (typeof value === 'string' ||\n            typeof value === 'number' ||\n            typeof value === 'bigint') {\n            const bigIntValue = parseNumber(type, value);\n            if (bigIntValue >= BigInt(0)) {\n                return (0, utils_1.padStart)((0, utils_2.bigIntToBytes)(bigIntValue), 32);\n            }\n            const length = (0, parsers_1.getLength)(type);\n            const asIntN = BigInt.asIntN(length, bigIntValue);\n            return (0, utils_2.signedBigIntToBytes)(asIntN, 32);\n        }\n        return value;\n    });\n}\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData) {\n    const error = new Error('Expect argument to be non-empty array');\n    if (typeof typedData !== 'object' ||\n        !('length' in typedData) ||\n        !typedData.length) {\n        throw error;\n    }\n    const normalizedData = typedData.map(({ name, type, value }) => {\n        // Handle an edge case with `address[]` types.\n        if (type === 'address[]') {\n            return {\n                name,\n                type: 'bytes32[]',\n                value: normalizeAddresses(value),\n            };\n        }\n        // Handle an edge case with `intN[]` types.\n        if (type.startsWith('int') && (0, parsers_1.isArrayType)(type)) {\n            const [innerType, length] = (0, parsers_1.getArrayType)(type);\n            return {\n                name,\n                type: `bytes32[${length !== null && length !== void 0 ? length : ''}]`,\n                value: normalizeIntegers(innerType, value),\n            };\n        }\n        return {\n            name,\n            type,\n            value: normalizeValue(type, value),\n        };\n    });\n    const data = normalizedData.map((e) => {\n        if (e.type !== 'bytes') {\n            return e.value;\n        }\n        return (0, utils_3.legacyToBuffer)(e.value);\n    });\n    const types = normalizedData.map((e) => {\n        if (e.type === 'function') {\n            throw new Error('Unsupported or invalid type: \"function\"');\n        }\n        return e.type;\n    });\n    const schema = typedData.map((e) => {\n        if (!e.name) {\n            throw error;\n        }\n        return `${e.type} ${e.name}`;\n    });\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, abi_utils_1.encodePacked)(['bytes32', 'bytes32'], [\n        (0, keccak_1.keccak256)((0, abi_utils_1.encodePacked)(['string[]'], [schema], true)),\n        (0, keccak_1.keccak256)((0, abi_utils_1.encodePacked)(types, data, true)),\n    ])));\n}\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction signTypedData({ privateKey, data, version, }) {\n    validateVersion(version);\n    if ((0, utils_3.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_3.isNullish)(privateKey)) {\n        throw new Error('Missing private key parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const sig = (0, util_1.ecsign)(messageHash, privateKey);\n    return (0, utils_3.concatSig)((0, util_1.arrToBufArr)((0, utils_2.bigIntToBytes)(sig.v)), sig.r, sig.s);\n}\nexports.signTypedData = signTypedData;\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nfunction recoverTypedSignature({ data, signature, version, }) {\n    validateVersion(version);\n    if ((0, utils_3.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_3.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const publicKey = (0, utils_3.recoverPublicKey)(messageHash, signature);\n    const sender = (0, util_1.publicToAddress)(publicKey);\n    return (0, utils_2.bytesToHex)(sender);\n}\nexports.recoverTypedSignature = recoverTypedSignature;\n//# sourceMappingURL=sign-typed-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = exports.recoverPublicKey = exports.concatSig = exports.legacyToBuffer = exports.isNullish = exports.padWithZeroes = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nfunction padWithZeroes(hexString, targetLength) {\n    if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n        throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n    }\n    if (targetLength < 0) {\n        throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n    }\n    return String.prototype.padStart.call(hexString, targetLength, '0');\n}\nexports.padWithZeroes = padWithZeroes;\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nfunction isNullish(value) {\n    return value === null || value === undefined;\n}\nexports.isNullish = isNullish;\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nfunction legacyToBuffer(value) {\n    return typeof value === 'string' && !(0, util_1.isHexString)(value)\n        ? Buffer.from(value)\n        : (0, util_1.toBuffer)(value);\n}\nexports.legacyToBuffer = legacyToBuffer;\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nfunction concatSig(v, r, s) {\n    const rSig = (0, util_1.fromSigned)(r);\n    const sSig = (0, util_1.fromSigned)(s);\n    const vSig = (0, util_1.bufferToInt)(v);\n    const rStr = padWithZeroes((0, util_1.toUnsigned)(rSig).toString('hex'), 64);\n    const sStr = padWithZeroes((0, util_1.toUnsigned)(sSig).toString('hex'), 64);\n    const vStr = (0, utils_1.remove0x)((0, utils_1.numberToHex)(vSig));\n    return (0, utils_1.add0x)(rStr.concat(sStr, vStr));\n}\nexports.concatSig = concatSig;\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nfunction recoverPublicKey(messageHash, signature) {\n    const sigParams = (0, util_1.fromRpcSig)(signature);\n    return (0, util_1.ecrecover)(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\nexports.recoverPublicKey = recoverPublicKey;\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalize(input) {\n    if (isNullish(input)) {\n        return undefined;\n    }\n    if (typeof input === 'number') {\n        if (input < 0) {\n            return '0x';\n        }\n        const buffer = (0, utils_1.numberToBytes)(input);\n        input = (0, utils_1.bytesToHex)(buffer);\n    }\n    if (typeof input !== 'string') {\n        let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n        msg += ` received ${typeof input}: ${input}`;\n        throw new Error(msg);\n    }\n    return (0, utils_1.add0x)(input.toLowerCase());\n}\nexports.normalize = normalize;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar simple_keyring_1 = require(\"./simple-keyring\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return __importDefault(simple_keyring_1).default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _SimpleKeyring_instances, _SimpleKeyring_wallets, _SimpleKeyring_getPrivateKeyFor, _SimpleKeyring_getWalletForAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"@ethereumjs/util\");\nconst eth_sig_util_1 = require(\"@metamask/eth-sig-util\");\nconst utils_1 = require(\"@metamask/utils\");\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst randombytes_1 = __importDefault(require(\"randombytes\"));\nconst TYPE = 'Simple Key Pair';\nclass SimpleKeyring {\n    constructor(privateKeys = []) {\n        _SimpleKeyring_instances.add(this);\n        _SimpleKeyring_wallets.set(this, void 0);\n        this.type = TYPE;\n        __classPrivateFieldSet(this, _SimpleKeyring_wallets, [], \"f\");\n        /* istanbul ignore next: It's not possible to write a unit test for this, because a constructor isn't allowed\n         * to be async. Jest can't await the constructor, and when the error gets thrown, Jest can't catch it. */\n        this.deserialize(privateKeys).catch((error) => {\n            throw new Error(`Problem deserializing SimpleKeyring ${error.message}`);\n        });\n    }\n    async serialize() {\n        return __classPrivateFieldGet(this, _SimpleKeyring_wallets, \"f\").map((a) => a.privateKey.toString('hex'));\n    }\n    async deserialize(privateKeys = []) {\n        __classPrivateFieldSet(this, _SimpleKeyring_wallets, privateKeys.map((hexPrivateKey) => {\n            const strippedHexPrivateKey = (0, util_1.stripHexPrefix)(hexPrivateKey);\n            const privateKey = Buffer.from(strippedHexPrivateKey, 'hex');\n            const publicKey = (0, util_1.privateToPublic)(privateKey);\n            return { privateKey, publicKey };\n        }), \"f\");\n    }\n    async addAccounts(numAccounts = 1) {\n        const newWallets = [];\n        for (let i = 0; i < numAccounts; i++) {\n            const privateKey = generateKey();\n            const publicKey = (0, util_1.privateToPublic)(privateKey);\n            newWallets.push({ privateKey, publicKey });\n        }\n        __classPrivateFieldSet(this, _SimpleKeyring_wallets, __classPrivateFieldGet(this, _SimpleKeyring_wallets, \"f\").concat(newWallets), \"f\");\n        const hexWallets = newWallets.map(({ publicKey }) => (0, utils_1.add0x)((0, util_1.bufferToHex)((0, util_1.publicToAddress)(publicKey))));\n        return hexWallets;\n    }\n    async getAccounts() {\n        return __classPrivateFieldGet(this, _SimpleKeyring_wallets, \"f\").map(({ publicKey }) => (0, utils_1.add0x)((0, util_1.bufferToHex)((0, util_1.publicToAddress)(publicKey))));\n    }\n    async signTransaction(address, transaction, opts = {}) {\n        const privKey = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getPrivateKeyFor).call(this, address, opts);\n        const signedTx = transaction.sign(privKey);\n        // Newer versions of Ethereumjs-tx are immutable and return a new tx object\n        return signedTx === undefined ? transaction : signedTx;\n    }\n    // For eth_sign, we need to sign arbitrary data:\n    async signMessage(address, data, opts = { withAppKeyOrigin: '', validateMessage: true }) {\n        const message = (0, util_1.stripHexPrefix)(data);\n        if (opts.validateMessage &&\n            (message.length === 0 || !message.match(/^[a-fA-F0-9]*$/u))) {\n            throw new Error('Cannot sign invalid message');\n        }\n        const privKey = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getPrivateKeyFor).call(this, address, opts);\n        const msgSig = (0, util_1.ecsign)(Buffer.from(message, 'hex'), privKey);\n        const rawMsgSig = (0, eth_sig_util_1.concatSig)((0, util_1.toBuffer)(msgSig.v), msgSig.r, msgSig.s);\n        return rawMsgSig;\n    }\n    // For personal_sign, we need to prefix the message:\n    async signPersonalMessage(address, msgHex, opts = { withAppKeyOrigin: '' }) {\n        const privKey = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getPrivateKeyFor).call(this, address, opts);\n        return (0, eth_sig_util_1.personalSign)({ privateKey: privKey, data: msgHex });\n    }\n    // For eth_decryptMessage:\n    async decryptMessage(withAccount, encryptedData) {\n        const wallet = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getWalletForAccount).call(this, withAccount);\n        const privateKey = wallet.privateKey.toString('hex');\n        return (0, eth_sig_util_1.decrypt)({ privateKey, encryptedData });\n    }\n    // personal_signTypedData, signs data along with the schema\n    async signTypedData(address, typedData, opts = { version: eth_sig_util_1.SignTypedDataVersion.V1 }) {\n        // Treat invalid versions as \"V1\"\n        let version = eth_sig_util_1.SignTypedDataVersion.V1;\n        if (opts.version && isSignTypedDataVersion(opts.version)) {\n            version = eth_sig_util_1.SignTypedDataVersion[opts.version];\n        }\n        const privateKey = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getPrivateKeyFor).call(this, address, opts);\n        return (0, eth_sig_util_1.signTypedData)({ privateKey, data: typedData, version });\n    }\n    // get public key for nacl\n    async getEncryptionPublicKey(withAccount, opts) {\n        const privKey = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getPrivateKeyFor).call(this, withAccount, opts);\n        const publicKey = (0, eth_sig_util_1.getEncryptionPublicKey)(privKey.toString('hex'));\n        return publicKey;\n    }\n    // returns an address specific to an app\n    async getAppKeyAddress(address, origin) {\n        if (!origin || typeof origin !== 'string') {\n            throw new Error(`'origin' must be a non-empty string`);\n        }\n        const wallet = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getWalletForAccount).call(this, address, {\n            withAppKeyOrigin: origin,\n        });\n        const appKeyAddress = (0, utils_1.add0x)((0, util_1.bufferToHex)((0, util_1.publicToAddress)(wallet.publicKey)));\n        return appKeyAddress;\n    }\n    // exportAccount should return a hex-encoded private key:\n    async exportAccount(address, opts = { withAppKeyOrigin: '' }) {\n        const wallet = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getWalletForAccount).call(this, address, opts);\n        return wallet.privateKey.toString('hex');\n    }\n    removeAccount(address) {\n        if (!__classPrivateFieldGet(this, _SimpleKeyring_wallets, \"f\")\n            .map(({ publicKey }) => (0, util_1.bufferToHex)((0, util_1.publicToAddress)(publicKey)).toLowerCase())\n            .includes(address.toLowerCase())) {\n            throw new Error(`Address ${address} not found in this keyring`);\n        }\n        __classPrivateFieldSet(this, _SimpleKeyring_wallets, __classPrivateFieldGet(this, _SimpleKeyring_wallets, \"f\").filter(({ publicKey }) => (0, util_1.bufferToHex)((0, util_1.publicToAddress)(publicKey)).toLowerCase() !==\n            address.toLowerCase()), \"f\");\n    }\n}\nexports.default = SimpleKeyring;\n_SimpleKeyring_wallets = new WeakMap(), _SimpleKeyring_instances = new WeakSet(), _SimpleKeyring_getPrivateKeyFor = function _SimpleKeyring_getPrivateKeyFor(address, opts = { withAppKeyOrigin: '' }) {\n    if (!address) {\n        throw new Error('Must specify address.');\n    }\n    const wallet = __classPrivateFieldGet(this, _SimpleKeyring_instances, \"m\", _SimpleKeyring_getWalletForAccount).call(this, address, opts);\n    return wallet.privateKey;\n}, _SimpleKeyring_getWalletForAccount = function _SimpleKeyring_getWalletForAccount(account, opts = {}) {\n    const address = (0, eth_sig_util_1.normalize)(account);\n    let wallet = __classPrivateFieldGet(this, _SimpleKeyring_wallets, \"f\").find(({ publicKey }) => (0, util_1.bufferToHex)((0, util_1.publicToAddress)(publicKey)) === address);\n    if (!wallet) {\n        throw new Error('Simple Keyring - Unable to find matching address.');\n    }\n    if (opts.withAppKeyOrigin) {\n        const { privateKey } = wallet;\n        const appKeyOriginBuffer = Buffer.from(opts.withAppKeyOrigin, 'utf8');\n        const appKeyBuffer = Buffer.concat([privateKey, appKeyOriginBuffer]);\n        const appKeyPrivateKey = (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(appKeyBuffer));\n        const appKeyPublicKey = (0, util_1.privateToPublic)(appKeyPrivateKey);\n        wallet = { privateKey: appKeyPrivateKey, publicKey: appKeyPublicKey };\n    }\n    return wallet;\n};\nSimpleKeyring.type = TYPE;\n/**\n * Generate and validate a new random key of 32 bytes.\n *\n * @returns Buffer The generated key.\n */\nfunction generateKey() {\n    const privateKey = (0, randombytes_1.default)(32);\n    if (!(0, util_1.isValidPrivate)(privateKey)) {\n        throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n    }\n    return privateKey;\n}\n/**\n * Type predicate type guard to check if a string is in the enum SignTypedDataVersion.\n *\n * @param version - The string to check.\n * @returns Whether it's in the enum.\n */\n// TODO: Put this in @metamask/eth-sig-util\nfunction isSignTypedDataVersion(version) {\n    return version in eth_sig_util_1.SignTypedDataVersion;\n}\n//# sourceMappingURL=simple-keyring.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map"]}