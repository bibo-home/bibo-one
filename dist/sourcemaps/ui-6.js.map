{"version":3,"sources":["ui/components/ui/page-container/page-container-header/page-container-header.component.js","ui/components/ui/page-container/page-container.component.js","ui/components/ui/popover/index.js","ui/components/ui/popover/popover.component.js","ui/components/ui/pulse-loader/index.js","ui/components/ui/pulse-loader/pulse-loader.js","ui/components/ui/qr-code-view/index.js","ui/components/ui/qr-code-view/qr-code-view.tsx","ui/components/ui/sender-to-recipient/index.js","ui/components/ui/sender-to-recipient/sender-to-recipient.component.js","ui/components/ui/sender-to-recipient/sender-to-recipient.constants.js","ui/components/ui/show-hide-toggle/index.js","ui/components/ui/show-hide-toggle/show-hide-toggle.js","ui/components/ui/site-origin/index.js","ui/components/ui/site-origin/site-origin.js","ui/components/ui/spinner/index.js","ui/components/ui/spinner/spinner.component.js","ui/components/ui/tabs/index.js","ui/components/ui/tabs/snaps/dropdown-tab/dropdown-tab.js","ui/components/ui/tabs/snaps/dropdown-tab/index.js","ui/components/ui/tabs/tab/index.js","ui/components/ui/tabs/tab/tab.component.js","ui/components/ui/tabs/tabs.component.js","ui/components/ui/text-field/index.js","ui/components/ui/text-field/text-field.component.js","ui/components/ui/textarea/textarea.constants.js","ui/components/ui/textarea/textarea.js","ui/components/ui/toggle-button/index.js","ui/components/ui/toggle-button/toggle-button.component.js","ui/components/ui/token-balance/index.js","ui/components/ui/token-balance/token-balance.js","ui/components/ui/tooltip/index.js","ui/components/ui/tooltip/tooltip.js","ui/components/ui/truncated-definition-list/index.js","ui/components/ui/truncated-definition-list/truncated-definition-list.js","ui/components/ui/typography/index.js","ui/components/ui/typography/typography.js","ui/components/ui/unit-input/index.js","ui/components/ui/unit-input/unit-input.component.js","ui/components/ui/update-nickname-popover/update-nickname-popover.js","ui/components/ui/url-icon/index.js","ui/components/ui/url-icon/url-icon.js","ui/constants/index.js","ui/contexts/currencyRate.js","ui/contexts/gasFee.js","ui/contexts/metamask-notifications/index.tsx","ui/contexts/metamask-notifications/metamask-notifications.tsx","ui/contexts/metametrics.js","ui/contexts/snaps/index.ts","ui/contexts/snaps/snap-interface.tsx","ui/contexts/snaps/utils.ts","ui/contexts/transaction-modal.js","ui/ducks/alerts/index.js","ui/ducks/alerts/invalid-custom-network.js","ui/ducks/bridge/actions.ts","ui/ducks/bridge/bridge.ts","ui/ducks/confirm-alerts/confirm-alerts.ts","ui/ducks/history/history.js","ui/ducks/index.js","ui/ducks/ramps/constants.ts","ui/ducks/ramps/index.ts","ui/ducks/ramps/ramps.ts","ui/helpers/constants/available-conversions.json","ui/helpers/constants/connected-sites.js","ui/helpers/constants/gas.js","ui/helpers/constants/metamask-notifications/metamask-notifications.ts","ui/helpers/constants/settings.js","ui/helpers/constants/snaps/delineator.ts","ui/helpers/constants/snaps/index.js","ui/helpers/constants/snaps/insights.ts","ui/helpers/higher-order-components/authenticated/authenticated.component.js","ui/helpers/higher-order-components/authenticated/authenticated.container.js","ui/helpers/higher-order-components/authenticated/index.js","ui/helpers/higher-order-components/feature-toggled-route.js","ui/helpers/higher-order-components/initialized/index.js","ui/helpers/higher-order-components/initialized/initialized.component.js","ui/helpers/higher-order-components/initialized/initialized.container.js","ui/helpers/higher-order-components/with-modal-props/index.js","ui/helpers/higher-order-components/with-modal-props/with-modal-props.js","ui/helpers/ramps/rampApi/rampAPI.ts","ui/helpers/utils/accounts.js","ui/helpers/utils/common.util.js","ui/helpers/utils/export-utils.js","ui/helpers/utils/gas.js","ui/helpers/utils/hardware.js","ui/helpers/utils/is-mobile-view.js","ui/helpers/utils/multichain/blockExplorer.ts","ui/helpers/utils/nfts.js","ui/helpers/utils/notification.util.ts","ui/helpers/utils/permission.js","ui/helpers/utils/permissions.ts","ui/helpers/utils/portfolio.js","ui/helpers/utils/settings-search.js","ui/helpers/utils/snaps.js","ui/helpers/utils/webcam-utils.js","ui/helpers/utils/window.ts","ui/hooks/bridge/useBridging.ts","ui/hooks/metamask-notifications/useCounter.tsx","ui/hooks/metamask-notifications/useCreateSession.ts","ui/hooks/metamask-notifications/useMetametrics.ts","ui/hooks/metamask-notifications/useNotifications.ts","ui/hooks/metamask-notifications/useProfileSyncing.ts","ui/hooks/metamask-notifications/useSwitchNotifications.ts","ui/hooks/ramps/useRamps/useRamps.ts","ui/hooks/snaps/useInsightSnaps.js","ui/hooks/snaps/useIsOverflowing.js","ui/hooks/snaps/useSafeWebsite.ts","ui/hooks/useAccountTotalFiatBalance.js","ui/hooks/useAddressDetails.js","ui/hooks/useAlerts.ts","ui/hooks/useAsyncResult.ts","ui/hooks/useCopyToClipboard.js","ui/hooks/useCurrencyDisplay.js","ui/hooks/useCurrencyRatePolling.ts","ui/hooks/useCurrentAsset.js","ui/hooks/useDisplayName.ts","ui/hooks/useEqualityCheck.js","ui/hooks/useEthFiatAmount.js","ui/hooks/useFiatFormatter.ts","ui/hooks/useFirstPartyContractName.ts","ui/hooks/useGasFeeEstimates.js","ui/hooks/useGetAssetImageUrl.ts","ui/hooks/useIsOriginalNativeTokenSymbol.js","ui/hooks/useIsOriginalTokenSymbol.js","ui/hooks/useModalProps.ts","ui/hooks/useMultichainAccountTotalFiatBalance.ts","ui/hooks/useMultichainSelector.ts","ui/hooks/useName.ts","ui/hooks/useNftsCollections.js","ui/hooks/useOriginMetadata.js","ui/hooks/usePetnamesEnabled.ts","ui/hooks/usePolling.ts","ui/hooks/usePrevious.ts","ui/hooks/useScrollRequired.js","ui/hooks/useSegmentContext.js","ui/hooks/useShouldAnimateGasEstimations.js","ui/hooks/useShouldShowSpeedUp.js","ui/hooks/useSwappedTokenValue.js","ui/hooks/useTheme.ts","ui/hooks/useTimeout.js","ui/hooks/useTokenData.js","ui/hooks/useTokenDisplayValue.js","ui/hooks/useTokenFiatAmount.js","ui/hooks/useTokenTracker.js","ui/hooks/useTokensToSearch.js","ui/hooks/useTransactionDisplayData.js","ui/hooks/useTransactionInsights.js","ui/hooks/useUserPreferencedCurrency.js","ui/index.js","ui/pages/asset/asset.tsx","ui/pages/asset/components/asset-options.js","ui/pages/asset/components/asset-page.tsx","ui/pages/asset/components/asset-price.tsx","ui/pages/asset/components/chart/asset-chart.tsx","ui/pages/asset/components/chart/chart-tooltip.tsx","ui/pages/asset/components/chart/crosshair-plugin.ts","ui/pages/asset/components/native-asset.tsx","ui/pages/asset/components/token-asset.tsx","ui/pages/asset/components/token-buttons.tsx","ui/pages/asset/index.js","ui/pages/asset/useHistoricalPrices.ts","ui/pages/asset/util.ts","ui/pages/bridge/index.tsx","ui/pages/bridge/prepare/prepare-bridge-page.tsx","ui/pages/confirm-add-suggested-nft/confirm-add-suggested-nft.js","ui/pages/confirm-add-suggested-nft/index.js","ui/pages/confirm-add-suggested-token/confirm-add-suggested-token.js","ui/pages/confirm-add-suggested-token/index.js","ui/pages/confirm-decrypt-message/confirm-decrypt-message.component.js","ui/pages/confirm-decrypt-message/confirm-decrypt-message.container.js","ui/pages/confirm-decrypt-message/index.js","ui/pages/confirm-encryption-public-key/confirm-encryption-public-key.component.js","ui/pages/confirm-encryption-public-key/confirm-encryption-public-key.container.js","ui/pages/confirm-encryption-public-key/index.js","ui/pages/confirmations/components/advanced-gas-controls/advanced-gas-controls.component.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-defaults/advanced-gas-fee-defaults.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-defaults/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-gas-limit/advanced-gas-fee-gas-limit.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-gas-limit/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-input-subtext/advanced-gas-fee-input-subtext.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-input-subtext/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-inputs/advanced-gas-fee-inputs.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-inputs/base-fee-input/base-fee-input.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-inputs/base-fee-input/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-inputs/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-inputs/priority-fee-input/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-inputs/priority-fee-input/priority-fee-input.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-popover.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-save/advanced-gas-fee-save.js","ui/pages/confirmations/components/advanced-gas-fee-popover/advanced-gas-fee-save/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/context/advancedGasFeePopover.js","ui/pages/confirmations/components/advanced-gas-fee-popover/context/index.js","ui/pages/confirmations/components/advanced-gas-fee-popover/index.js","ui/pages/confirmations/components/approve-content-card/approve-content-card.js","ui/pages/confirmations/components/confirm-gas-display/confirm-gas-display.js"],"names":["obj","key","value","_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_classnames","_button","WeakMap","PageContainerHeader","Component","renderTabs","tabs","this","props","createElement","className","renderCloseAction","hideClose","onClose","headerCloseText","type","onClick","renderHeaderRow","showBackButton","onBackButtonClick","backButtonStyles","backButtonString","style","render","title","subtitle","Boolean","exports","string","func","bool","object","node","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","_pageContainerHeader","_pageContainerFooter","_defineProperty","PageContainer","PureComponent","constructor","args","super","activeTabIndex","defaultActiveTabIndex","handleTabClick","setState","tabsComponent","numberOfTabs","Children","count","children","map","child","tabIndex","cloneElement","index","isActive","state","renderActiveTabContent","filter","renderContent","contentComponent","onCancel","cancelText","onSubmit","submitText","disabled","hideCancel","isRequired","number","_popover","_reactDom","_useI18nContext","_box","_designSystem","_componentLibrary","_extends","assign","bind","target","arguments","length","source","apply","defaultHeaderProps","padding","display","flexDirection","FLEX_DIRECTION","COLUMN","backgroundColor","BackgroundColor","backgroundDefault","borderRadius","defaultContentProps","justifyContent","JustifyContent","flexStart","alignItems","AlignItems","stretch","defaultFooterProps","spaceBetween","Popover","footer","footerClassName","onBack","onScroll","contentClassName","showArrow","CustomBackground","popoverRef","showScrollDown","onScrollDownButtonClick","centerTitle","wrapTitle","headerProps","contentProps","footerProps","useI18nContext","showHeader","Header","DISPLAY","FLEX","center","marginBottom","ButtonIcon","iconName","IconName","ArrowLeft","ariaLabel","color","Color","iconDefault","size","Size","SM","Text","textAlign","TextAlign","Center","Start","ellipsis","variant","TextVariant","headingSm","as","width","BLOCK_SIZES","FULL","Close","bodySm","ref","borderColor","BorderColor","borderDefault","bottom","Icon","name","ArrowDown","IconColor","primaryDefault","IconSize","Md","propTypes","shape","current","instanceOf","window","Element","PopoverPortal","document","getElementById","componentDidMount","rootNode","appendChild","instanceNode","componentWillUnmount","removeChild","createPortal","_pulseLoader","_qrCodeView","_qrcodeGenerator","_reactRedux","_ethereumjsUtil","_address","_metametrics","_time","_metametrics2","_useCopyToClipboard","QrCodeView","Qr","warning","accountName","trackEvent","useContext","MetaMetricsContext","copied","handleCopy","useCopyToClipboard","MINUTE","message","data","checksummedAddress","normalizeSafeAddress","address","isHexPrefixed","qrImage","addData","make","header","addressStart","substring","addressMiddle","addressEnd","Array","isArray","msg","bodyXs","TextColor","warningDefault","Box","dangerouslySetInnerHTML","__html","createTableTag","src","alt","bodyLgMedium","bodyMd","textMuted","Display","Flex","gap","category","MetaMetricsEventCategory","Accounts","event","MetaMetricsEventName","PublicAddressCopied","properties","location","CopySuccess","Copy","Sm","oneOfType","arrayOf","connect","buyView","appState","_senderToRecipient","_copyToClipboard","_nameController","_tooltip","_identicon","_util","_accountMismatchWarning","_hexstringUtils","_name","_copy","_nicknamePopovers","_usePetnamesEnabled","variantHash","DEFAULT_VARIANT","CARDS_VARIANT","FLAT_VARIANT","SenderAddress","addressOnly","checksummedSenderAddress","senderName","onSenderClick","senderAddress","warnUserOnAccountMismatch","addressCopied","setAddressCopied","useState","tooltipHtml","shortenAddress","COPY_OPTIONS","toChecksumHexAddress","diameter","position","html","wrapperClassName","containerClassName","onHidden","RecipientWithAddress","checksummedRecipientAddress","onRecipientClick","recipientNickname","recipientEns","recipientName","recipientMetadataName","recipientIsOwnedAccount","showNicknamePopovers","setShowNicknamePopovers","petnamesEnabled","usePetnamesEnabled","displayName","Fragment","NameType","ETHEREUM_ADDRESS","Arrow","ArrowRight","SenderToRecipient","recipientAddress","oneOf","defaultProps","_showHideToggle","_iconEye","_iconEyeSlash","ShowHideToggle","id","shown","onChange","ariaLabelHidden","ariaLabelShown","dataTestId","checked","htmlFor","_siteOrigin","_chip","_iconWithFallback","SiteOrigin","siteOrigin","iconSrc","chip","leftIcon","rightIcon","borderMuted","label","maxContent","icon","dir","_spinner","Spinner","height","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","background","transform","x","y","rx","ry","fill","attributeName","values","dur","begin","repeatCount","_tabs","_tab","_dropdown","DropdownTab","activeClassName","options","selectedOption","_options$find","isOpen","setIsOpen","dropdownRef","useRef","selectOption","useCallback","option","selectedOptionName","find","useEffect","handleClickOutside","contains","addEventListener","removeEventListener","preventDefault","FlexDirection","Row","flexWrap","FlexWrap","NoWrap","BlockSize","Full","cursor","overflow","pointerEvents","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","exact","_dropdownTab","Tab","buttonClassName","tabKey","BLOCK","inherit","_actions","Tabs","defaultActiveTabKey","onTabClick","tabsClassName","subHeader","_getValidChildren","toArray","dispatch","useDispatch","setActiveTabIndex","Math","max","findIndex","c","idx","detectNfts","validChildren","Error","_textField","_styles","_TextField","inputLabelBase","transition","join","styles","materialLabel","materialFocused","materialUnderline","borderBottom","materialError","materialWhitePaddedRoot","materialWhitePaddedInput","materialWhitePaddedFocused","materialWhitePaddedUnderline","formLabel","formLabelFocused","inputFocused","inputRoot","marginTop","border","largeInputLabel","inputLabel","inputMultiline","themeToInputProps","material","classes","startAdornment","endAdornment","min","autoComplete","InputLabelProps","root","focused","error","InputProps","underline","inputProps","bordered","largeLabel","shrink","TextField","theme","onPaste","textFieldProps","helperText","element","withStyles","RESIZE","NONE","BOTH","HORIZONTAL","VERTICAL","INITIAL","INHERIT","_textarea","TextArea","resize","scrollable","boxProps","textAreaClassnames","borderStyle","BorderStyle","solid","boxClassName","required","_toggleButton","_reactToggleButton","_designTokens","_useTheme","trackStyle","offTrackStyle","thumbStyle","boxShadow","alignSelf","colorsLight","activeThumb","base","lightTheme","colors","primary","inverse","inactiveThumb","active","hover","defaultHover","inactive","muted","colorsDark","darkTheme","ToggleButton","onToggle","offLabel","onLabel","modifier","useTheme","onKeyDown","activeLabel","inactiveLabel","thumbAnimateRange","passThroughInputProps","_tokenBalance","_currencyDisplay","_useTokenTracker","_useTokenFiatAmount","_useIsOriginalTokenSymbol","TokenBalance","token","showFiat","restProps","tokensWithBalances","useTokenTracker","tokens","symbol","formattedFiat","useTokenFiatAmount","fiatValue","useIsOriginalTokenSymbol","FontWeight","Medium","displayValue","suffix","decimals","_reactTippy","Tooltip","arrow","interactive","distance","trigger","offset","open","wrapperStyle","tag","hideOnClick","any","_truncatedDefinitionList","_lodash","_definitionList","TruncatedDefinitionList","dictionary","tooltips","warnings","prefaceKeys","isPopoverOpen","setIsPopoverOpen","renderDefinitionList","isFullList","MD","pick","renderButton","margin","paddingBottom","LG","paddingTop","_typography","H6","H7","H8","H9","TypographyVariant","ValidColors","textDefault","textAlternative","overlayInverse","primaryInverse","errorDefault","errorInverse","successDefault","successInverse","sepoliaInverse","warningInverse","infoDefault","infoInverse","goerli","sepolia","goerliInverse","lineaGoerli","lineaGoerliInverse","lineaSepolia","lineaSepoliaInverse","lineaMainnet","lineaMainnetInverse","ValidTags","Typography","paragraph","fontStyle","align","overflowWrap","marginRight","marginLeft","testId","strongTagFontWeight","Tag","FONT_WEIGHT","BOLD","computedClassName","includes","FONT_STYLE","OVERFLOW_WRAP","MultipleSizesAndAuto","_unitInput","DECIMAL_INPUT_REGEX","UnitInput","isOverflowing","activeElement","tagName","unitInput","focus","onBlur","scrollTo","userInput","replace","keyPressRegex","test","getIsOverflowing","componentDidUpdate","prevProps","prevPropsValue","propsValue","stateValue","isFocusOnInput","handleFocus","getInputWidth","valueString","match","offsetWidth","scrollWidth","placeholder","hideSuffix","actionComponent","isDisabled","handleChange","handleInputBlur","onFocus","handleInputFocus","onKeyPress","handleOnKeyPress","step","autoFocus","RegExp","_i18n","_selectors","UpdateNicknamePopover","nickname","memo","onAdd","_tokenList$address$to","I18nContext","nicknameInput","setNicknameInput","memoInput","setMemoInput","closePopover","tokenList","useSelector","getTokenList","image","toLowerCase","iconUrl","fullWidth","multiline","rows","_urlIcon","UrlIcon","url","fallbackClassName","ETH_DEFAULT_DECIMALS","_useCurrencyRatePolling","CurrencyRateProvider","GasFeeContext","_useGasFeeInputs","createContext","GasFeeContextProvider","defaultEstimateToUse","transaction","minimumGasLimit","editGasMode","gasFeeDetails","useGasFeeInputs","Provider","_metamaskNotifications","_useNotifications","_useProfileSyncing","_profileSyncing","_metamask","MetamaskNotificationsContext","useMetamaskNotificationsContext","context","MetamaskNotificationsProvider","isProfileSyncingEnabled","selectIsProfileSyncingEnabled","isNotificationsEnabled","selectIsMetamaskNotificationsEnabled","basicFunctionality","getUseExternalServices","isUnlocked","getIsUnlocked","listNotifications","notificationsData","isLoading","useListNotifications","shouldFetchNotifications","useMemo","useAccountSyncingEffect","_reactRouterDom","_browser","_routes","_useSegmentContext","captureException","PATHS_TO_CHECK","keys","PATH_NAME_MAP","MetaMetricsProvider","_context$page2","useLocation","useSegmentContext","addContextPropsIntoEventProperties","payload","fields","contextPropsIntoEventProperties","_context$page","MetaMetricsContextProp","PageTitle","page","trackMetaMetricsEvent","environmentType","getEnvironmentType","previousMatch","matchPath","pathname","path","strict","params","trackMetaMetricsPage","omit","referrer","isOptInPath","startsWith","captureMessage","extra","currentPath","LegacyMetaMetricsProvider","getChildContext","_snapInterface","forEach","SnapInterfaceContext","_snapsSdk","_snapsUtils","_utils","THROTTLED_EVENTS","UserInputEventType","ButtonClickEvent","FormSubmitEvent","SnapInterfaceContextProvider","interfaceId","snapId","initialState","internalState","rawSnapRequestFunction","handleSnapRequest","origin","handler","request","jsonrpc","method","then","forceUpdateMetamaskState","snapRequestDebounced","debounce","snapRequestThrottled","throttle","updateStateDebounced","updateInterfaceState","handleEvent","flush","fn","handleInputChangeDebounced","InputChangeEvent","uploadFile","file","FileUploadEvent","getValue","form","_initialState$form","handleInputChange","mergeValue","handleFileChange","arrayBuffer","Uint8Array","uint8Array","encodeBase64","base64","fileObject","contentType","contents","TransactionModalContext","TransactionModalContextProvider","openModals","setOpenModals","closeModal","modalNames","modals","modal","indexOf","splice","closeAllModals","currentModal","openModal","modalName","push","openModalCount","_unconnectedAccount","_invalidCustomNetwork","_enums","_toolkit","_alerts","AlertTypes","invalidCustomNetwork","ALERT_STATE","CLOSED","networkName","slice","createSlice","reducers","openAlert","action","OPEN","dismissAlert","actions","reducer","getAlertState","getNetworkName","alertIsOpen","_types","_backgroundConnection","_swaps","_bridge","swapsSlice","setToChain","bridgeSlice","setBridgeFeatureFlags","async","bridgeAction","BridgeBackgroundAction","SET_FEATURE_FLAGS","submitRequestToBackground","toChain","ownerId","INIT_STATE","alerts","confirmed","alertKey","isConfirmed","mostRecentOverviewPage","DEFAULT_ROUTE","pageChanged","ASSET_ROUTE","getMostRecentOverviewPage","_redux","_locale","_send","_domains","_app","_confirmTransaction","_gas","_alerts2","_history","_ramps","_confirmAlerts","combineReducers","unconnectedAccount","activeTab","s","metamask","DNS","history","send","confirmAlerts","confirmTransaction","swaps","ramps","bridge","gas","localeMessages","defaultBuyableChains","chainId","chainName","shortName","nativeTokenSupported","_reselect","_rampAPI","_conversion","_multichain","_networks","_constants","fetchBuyableChains","createAsyncThunk","_","getState","isFetched","buyableChains","getNetworks","rampsSlice","setBuyableChains","every","network","extraReducers","builder","addCase","fulfilled","networks","rejected","getBuyableChains","_state$ramps","getIsBitcoinBuyable","createSelector","some","MultichainNetworks","BITCOIN","getIsNativeTokenBuyable","getCurrentChainId","getMultichainIsBitcoin","currentChainId","isBtcBuyable","isBtc","hexToDecimal","module","code","STATUS_CONNECTED","STATUS_CONNECTED_TO_ANOTHER_ACCOUNT","STATUS_NOT_CONNECTED","STATUS_CONNECTED_TO_SNAP","GAS_FORM_ERRORS","GAS_LIMIT_OUT_OF_BOUNDS","MAX_PRIORITY_FEE_TOO_LOW","MAX_FEE_TOO_LOW","MAX_PRIORITY_FEE_BELOW_MINIMUM","MAX_PRIORITY_FEE_HIGH_WARNING","MAX_FEE_HIGH_WARNING","MAX_FEE_IMBALANCE","GAS_PRICE_TOO_LOW","PRIORITY_LEVEL_ICON_MAP","low","medium","high","dappSuggested","dappSuggestedHigh","swapSuggested","custom","_network","SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS","CHAIN_IDS","MAINNET","OPTIMISM","BSC","POLYGON","ARBITRUM","AVALANCHE","LINEA_MAINNET","SETTINGS_CONSTANTS","tabMessage","sectionMessage","descriptionMessage","route","GENERAL_ROUTE","Setting","ADVANCED_ROUTE","CONTACT_LIST_ROUTE","Book","SECURITY_ROUTE","ALERTS_ROUTE","Notification","NETWORKS_ROUTE","ABOUT_US_ROUTE","Info","EXPERIMENTAL_ROUTE","featureFlag","DEVELOPER_OPTIONS_ROUTE","CodeCircle","DelineatorType","getDelineatorTitle","Insights","Description","Warning","_delineator","_insights","InsightWarningLanguage","confirming","noun","imperative","signing","Authenticated","completedOnboarding","Route","Redirect","to","ONBOARDING_ROUTE","UNLOCK_ROUTE","_authenticated","FeatureToggledRoute","flag","redirectRoute","_initialized","Initialized","_withModalProps","mapStateToProps","mapDispatchToProps","modalProps","modalState","hideModal","fetchWithTimeout","RampAPI","URL","searchParams","response","toString","json","account","_account$metadata$sna","_keyring","KeyringType","hdKeyTree","imported","_translate","qr","_hardwareWallets","HardwareKeyringNames","trezor","ledger","lattice","snap","_account$metadata$sna2","metadata","accounts","newAccountName","defaultAccountName","isDuplicateAccountName","item","isEmptyAccountName","localizedWordForAccount","isReservedAccountName","isValidAccountName","errorMessage","InvisibleCharacter","GOERLI_DISPLAY_NAME","LINEA_GOERLI_DISPLAY_NAME","LINEA_SEPOLIA_DISPLAY_NAME","SEPOLIA_DISPLAY_NAME","str","toUpperCase","filename","ExtensionForContentType","showSaveFilePicker","Blob","blob","fileExtension","handle","suggestedName","types","description","accept","createWritable","write","close","saveFileUsingFilePicker","b64","Buffer","from","elem","href","download","body","click","saveFileUsingDataUri","ExportableContentType","JSON","TXT","EditGasModes","cancel","speedUp","feeOrFeeRange","precision","precisionOrPrecisions","isNullish","range","precisions","times","constant","uniq","zip","fee","roundToDecimalPlacesRemovingExtraZeroes","estimate","GasRecommendations","_bignumber","_Numeric","TEN_PERCENT_NUMERIC","Numeric","addTenPercentAndRound","hexStringValue","round","toPrefixedHexString","gasEstimateGreaterThanGasUsedPlusTenPercent","gasUsed","gasFeeEstimates","_gasFeeEstimates$esti","maxFeePerGas","maxFeePerGasInTransaction","hexWEIToDecGWEI","maxFeePerGasFromEstimate","suggestedMaxFeePerGas","bnGreaterThan","keyringType","matchMedia","matches","_etherscanLink","getMultichainBlockExplorerUrl","_network$network","rpcPrefs","blockExplorerUrl","getMultichainAccountUrl","namespace","parseCaipChainId","_network$network2","KnownCaipNamespace","Eip155","getAccountLink","multichainExplorerUrl","getNftImageAlt","tokenId","isoDateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","currentDate","isSameDay","isYesterday","RelativeTimeFormat","numeric","isSameYear","nativeCurrencyName","NETWORK_TO_NAME_MAP","split","nativeCurrencySymbol","CHAIN_ID_TO_CURRENCY_SYMBOL_MAP","nativeCurrencyLogo","CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP","blockExplorerConfig","nativeCurrencyAddress","_providers","_transactionsControllerUtils","dateToCheck","getFullYear","getMonth","getDate","yesterday","setDate","defaultFormatOptions","decimalPlaces","getLeadingZeroCount","num","_fractionalPart$match","BigNumber","formatAmount","numericAmount","opts","leadingZeros","isDecimal","NumberFormat","notation","compactDisplay","maximumFractionDigits","ellipse","shouldEllipse","formattedValue","minimumFractionDigits","getRandomKey","text","random","createTextItems","texts","items","highlighted","getAmount","amount","calcTokenAmount","parseFloat","toNumber","getUsdAmount","usd","amountInEther","getRpcUrlByChainId","rpc","FEATURED_RPCS","rpcItem","rpcEndpoints","MAINNET_RPC_URL","GOERLI","GOERLI_RPC_URL","SEPOLIA","SEPOLIA_RPC_URL","LINEA_GOERLI","LINEA_GOERLI_RPC_URL","LINEA_SEPOLIA","LINEA_SEPOLIA_RPC_URL","LINEA_MAINNET_RPC_URL","LOCALHOST","LOCALHOST_RPC_URL","hasNetworkFeeFields","notification","getNetworkNameByChainId","getNetworkFees","decimalToHex","chain_id","connection","headers","provider","JsonRpcProvider","receipt","block","Promise","all","getTransactionReceipt","tx_hash","getTransaction","getBlock","block_number","calculateUsdAmount","network_fee","native_token_price_in_usd","transactionFeeInEth","hexWEIToDecETH","mul","effectiveGasPrice","_hex","transactionFeeInUsd","gasLimit","baseFee","baseFeePerGas","priorityFee","sub","isIpfsURL","permissions","getSubjectName","subjectName","entries","reduce","permissionName","permissionValue","concat","getPermissionDescription","sort","left","right","weight","_deepFreezeStrict","_snapsRpcMethods","_controllerUtils","_permissions","_permissions2","UNKNOWN_PERMISSION","RIGHT_INFO_ICON","iconMuted","getSnapNameComponent","snapName","PERMISSION_DESCRIPTIONS","RestrictedMethods","eth_accounts","Eye","PermissionWeight","PermissionNames","permittedChains","Wifi","snap_dialog","Messages","snap_notify","snap_getBip32PublicKey","caveats","curve","_path$join","baseDescription","SecuritySearch","warningMessageSubject","getSnapDerivationPathName","friendlyName","snap_getBip32Entropy","_path$join2","Key","snap_getBip44Entropy","coinType","getSlip44ProtocolName","snap_getEntropy","SecurityKey","snap_manageState","AddSquare","snap_getLocale","Global","snap_getPreferences","Customize","wallet_snap","snaps","Flash","EndowmentPermissions","endowment_networkAccess","DocumentCode","endowment_webassembly","Speedometer","endowment_transactionInsight","result","isNonEmptyArray","SnapCaveatType","TransactionOrigin","Explore","Clock","endowment_cronjob","Ethereum","endowment_ethereumProvider","Hierarchy","endowment_rpc","dapps","allowedOrigins","getRpcCaveatOrigins","results","originsMessage","lineBreak","lastOrigin","endowment_lifecycleHooks","Home","endowment_pageHome","snap_manageAccounts","UserCircleAdd","endowment_keyring","Search","endowment_nameLookup","endowment_signatureInsight","caveat","SignatureOrigin","ConnectionPermission","connection_permission","connectionName","getURLHost","Question","unknown_permission","_keyringApi","containsEthPermissionsAndNonEvmAccount","restrictedEthMethods","RestrictedEthMethods","containsEthPermissions","permission","containsNonEvmAccount","isEvmAccountType","endpoint","metamaskEntry","metaMetricsId","metricsEnabled","marketingEnabled","accountAddress","tab","append","getFilteredSettingsRoutes","settingsRefs","settingsSearchJsonFiltered","settingsRefsIndex","routeObject","hash","settingsRef","scrollIntoView","behavior","historySettingsUrl","searchElem","searchRegex","querySelectorAll","menuTabElement","querySelector","menuSectionElement","colorText","_settings","settingsRoutes","getSettingsRoutes","process","env","menuElement","regex","elemText","innerHTML","checkStatus","isPopup","ENVIRONMENT_TYPE_POPUP","isFirefoxOrBrave","getPlatform","PLATFORM_FIREFOX","PLATFORM_BRAVE","webcams","navigator","mediaDevices","enumerateDevices","device","kind","hasWebcam","hasWebcamPermissions","webcam","environmentReady","openWindow","_hardware","_portfolio","useHistory","getMetaMetricsId","isMetaMetricsEnabled","getParticipateInMetaMetrics","isMarketingEnabled","getDataCollectionForMarketing","keyring","getCurrentKeyring","usingHardwareWallet","isHardwareKeyring","isBridgeSupported","getIsBridgeEnabled","isBridgeChain","getIsBridgeChain","openBridgeExperience","portfolioUrlSuffix","BridgeLinkClicked","Navigation","token_symbol","setSwapsFromToken","global","platform","openExtensionInBrowser","PREPARE_SWAP_ROUTE","CROSS_CHAIN_SWAP_ROUTE","portfolioUrl","getPortfolioUrl","openTab","readSnapNotificationsCount","useSnapNotificationdCount","featureAnnouncementsReadCount","useFeatureAnnouncementCount","onChainMetamaskNotificationsReadCount","useWalletNotificationCount","notificationsReadCount","unreadSnapNotificationsCount","featureAnnouncementsUnreadCount","onChainMetamaskNotificationsUnreadCount","notificationsUnreadCount","getUnreadNotificationsCount","getReadNotificationsCount","isFeatureAnnouncementsEnabled","selectIsFeatureAnnouncementsEnabled","getFeatureAnnouncementsUnreadCount","getFeatureAnnouncementsReadCount","isMetamaskNotificationsEnabled","getOnChainMetamaskNotificationsUnreadCount","getOnChainMetamaskNotificationsReadCount","isSignedIn","_authentication","selectIsSignedIn","isParticipateInMetaMetrics","selectParticipateInMetaMetrics","createSession","performSignIn","disableProfileSyncing","stringify","_loglevel","loading","setLoading","setError","disableMetametrics","showLoadingIndication","performSignOut","setParticipateInMetaMetrics","hideLoadingIndication","isUserSignedIn","enableMetametrics","createNotifications","createOnChainTriggers","disableNotifications","disableMetamaskNotifications","enableNotifications","enableMetamaskNotifications","setNotificationsData","fetchAndUpdateMetamaskNotifications","markNotificationAsRead","markMetamaskNotificationsAsRead","notifications","enableProfileSyncing","setIsProfileSyncingEnabled","useAccountSyncing","shouldDispatchAccountSyncing","dispatchAccountSyncing","syncInternalAccountsWithUserStorage","accountsBeingUpdated","getIsUpdatingMetamaskNotificationsAccount","fetchAccountSettings","getAccountSettings","checkAccountsPresence","useRefetchAccountSettings","setData","jsonAccounts","update","addresses","memoAccounts","parse","initialLoading","setIsLoading","switchAccountNotifications","updateOnChainTriggersByAccount","deleteOnChainTriggersByAccount","setFeatureAnnouncementsEnabled","RampsMetaMaskEntry","BuySellButton","getBuyURI","_chainId","URLSearchParams","openBuyCryptoInPdapp","buyUrl","insight","getSnapInsights","severity","SeverityLevel","Critical","contentRef","setIsOverflowing","offsetHeight","scrollHeight","useSafeWebsite","website","safeWebsite","setSafeWebsite","getPhishingResult","performPhishingCheck","_confirmTx","_tokenUtil","_stringUtils","useAccountTotalFiatBalance","shouldHideZeroBalanceTokens","_detectedTokens$curre","conversionRate","getConversionRate","currentCurrency","getCurrentCurrency","contractExchangeRates","getTokenExchangeRates","shallowEqual","cachedBalances","getMetaMaskCachedBalances","balance","nativeFiat","getValueFromWeiHex","toCurrency","numberOfDecimals","detectedTokens","getAllTokens","allTokenList","allTokenListValues","primaryTokenImage","getNativeCurrencyImage","nativeCurrency","getNativeCurrency","includeFailedTokens","hideZeroBalanceTokens","tokenFiatBalances","contractExchangeTokenKey","isEqualCaseInsensitive","tokenExchangeRate","getTokenFiatAmount","orderedTokenList","fiatBalance","array1","array2","token2","matchingToken","token1","balanceError","findMatchingTokens","b","totalFiatBalance","sumDecimals","formatCurrency","totalWeiBalance","getWeiHexFromDecimalValue","fromCurrency","invertConversionRate","toAddress","_tokenList$toAddress$","addressBook","getAddressBook","getInternalAccounts","toAccount","addressBookEntryObject","entry","toName","isTrusted","selectAlerts","confirmedAlertKeys","selectConfirmedAlertKeys","generalAlerts","selectGeneralAlerts","fieldAlerts","selectFieldAlerts","getFieldAlerts","field","alert","setAlertConfirmed","isAlertConfirmed","unconfirmedDangerAlerts","Severity","Danger","hasAlerts","dangerAlerts","hasUnconfirmedDangerAlerts","hasDangerAlerts","asyncFn","deps","useAsyncResult","dependencies","setResult","pending","cancelled","catch","delay","DEFAULT_DELAY","setCopied","startTimeout","_useTimeout","useTimeout","inputValue","prefix","denomination","currency","isEvm","_useMultichainSelector","useMultichainSelector","getMultichainIsEvm","getMultichainCurrentCurrency","getMultichainNativeCurrency","getMultichainConversionRate","isUserPreferredCurrency","isNativeCurrency","ethDisplayValue","_common","EtherDenomination","WEI","toDenomination","ETH","DEFAULT_PRECISION","toBase","MIN_AMOUNT_DISPLAY","formatEthCurrencyDisplay","formatBtcCurrencyDisplay","hideLabel","currencyTickerSymbol","TEST_NETWORK_TICKER_MAP","MIN_AMOUNT","_usePolling","networkClientId","useCurrencyRateCheck","getUseCurrencyRateCheck","getCompletedOnboarding","selectedNetworkClientId","getSelectedNetworkClientId","startPollingByNetworkClientId","currencyRateStartPollingByNetworkClientId","stopPollingByPollingToken","currencyRateStopPollingByPollingToken","enabled","_match$params","useRouteMatch","tokenAddress","asset","knownTokens","getTokens","SWAPS_CHAINID_DEFAULT_TOKEN_MAP","ETH_SWAPS_TOKEN_OBJECT","preferContractSymbol","useDisplayNames","_nft","_useName","_useFirstPartyContractName","requests","nameRequests","nameEntries","useNames","firstPartyContractNames","useFirstPartyContractNames","contractInfo","getRemoteTokens","watchedNftNames","getNftContractsByAddressOnCurrentChain","_watchedNftNames$valu","nameEntry","firstPartyContractName","singleContractInfo","watchedNftName","contractDisplayName","hasPetname","equalityFn","isEqual","computedValue","setComputedValue","useLayoutEffect","ethAmount","overrides","hideCurrencySymbol","userPrefersShownFiat","getShouldShowFiat","decEthToConvertedCurrency","useFiatFormatter","locale","getIntlLocale","fiatCurrency","fiatAmount","shorten","formatter","parts","formatToParts","currencySymbol","numberString","part","shortenedNumberString","shortenString","truncatedCharLimit","truncatedStartChars","truncatedEndChars","skipCharacterInEnd","formattedNumber","variation","_firstPartyContracts","normalizedValue","FIRST_PARTY_CONTRACT_NAMES","_FIRST_PARTY_CONTRACT","_networkClientId","setChainId","gasEstimateType","getGasEstimateTypeByChainId","getGasFeeEstimatesByChainId","_isEqual","isGasEstimatesLoading","getIsGasEstimatesLoadingByChainId","isNetworkBusy","getIsNetworkBusyByChainId","isMounted","getNetworkConfigurationByNetworkClientId","networkConfig","gasFeeStartPollingByNetworkClientId","gasFeeStopPollingByPollingToken","ipfsGateway","imageUrl","setImageUrl","assetImageUrl","getAssetImageURL","getAssetImgUrl","ticker","rpcUrl","isOriginalNativeSymbol","setIsOriginalNativeSymbol","useSafeChainsListValidation","useSafeChainsListValidationSelector","providerConfig","getMultichainCurrentNetwork","networkId","_matchedChain$nativeC","urlString","getValidUrl","hostname","isLocalhost","mappedCurrencySymbol","mappedAsNetworkCollision","CHAIN_ID_TO_CURRENCY_SYMBOL_MAP_NETWORK_COLLISION","matchedChain","_fetchWithCache","cacheOptions","cacheRefreshTime","DAY","functionName","parseInt","err","getNativeTokenSymbol","tokenSymbol","_tokens$address$toLow","_trueSymbol","trueSymbol","getTokenSymbol","getTokenSymbolForToken","_state$appState$modal","_assets","_useAccountTotalFiatBalance","EMPTY_VALUES","useMultichainAccountTotalFiatBalance","_balances$account$id","getMultichainNetwork","nativeCurrencyImage","getMultichainCurrencyImage","balances","getMultichainBalances","MULTICHAIN_NATIVE_CURRENCY_TO_CAIP19","nativeTokenValues","totalBalance","selector","getSelectedInternalAccount","names","getNames","_names$type","normalizeValue","typeVariationKey","getVariationKey","variationKey","variationsToNameEntries","variationEntry","fallbackEntry","FALLBACK_VARIATION","sourceId","proposedNames","previouslyOwnedText","unknownCollectionText","collections","setCollections","previouslyOwnedCollection","setPreviouslyOwnedCollection","collectionName","nfts","getNfts","nftsLoading","setNftsLoading","selectedAddress","nftContracts","getNftContracts","prevNfts","_usePrevious","usePrevious","prevChainId","prevSelectedAddress","newCollections","newPreviouslyOwnedCollections","nft","isCurrentlyOwned","collectionContract","collectionImage","logo","getCollections","targetSubjectMetadata","getTargetSubjectMetadata","minimumOriginMetadata","host","subjectType","_permissionController","SubjectType","Unknown","getPetnamesEnabled","useStore","usePollingOptions","pollTokenRef","cleanupRef","cleanup","_cleanupRef$current","pollToken","_usePollingOptions$ca","callback","useScrollRequired","offsetPxFromBottom","_ref$current","_ref$current3","prevOffsetHeight","hasScrolledToBottomState","setHasScrolledToBottom","isScrollableState","setIsScrollable","isScrolledToBottomState","setIsScrolledToBottom","isScrollable","clientHeight","isScrolledToBottom","scrollTop","_ref$current2","hasScrolledToBottom","scrollToBottom","top","confirmTransactionOrigin","txDataSelector","_useGasFeeEstimates","useGasFeeEstimates","isGasLoadingAnimationActive","getGasLoadingAnimationIsShowing","lastGasEstimates","gasEstimatesChanged","gasJustLoaded","showLoadingAnimation","toggleGasLoadingAnimation","timer","setTimeout","clearTimeout","transactionGroup","isEarliestNonce","transactions","hasRetried","earliestTransaction","submittedTime","speedUpEnabled","setSpeedUpEnabled","now","timeoutId","SECOND","currentAsset","primaryTransaction","initialTransaction","txParams","isViewingReceivedTokenFromSwap","_transactionController","TransactionType","swap","destinationTokenSymbol","isSwapsDefaultTokenAddress","isSwapsDefaultTokenSymbol","swapTokenValue","getSwapsTokensReceivedFromTxMeta","swapAndSend","isNegative","sign","_swapTokenFiatAmount","_swapAndSendTokenFiatAmount","sourceTokenAddress","sourceTokenSymbol","swapTokenFiatAmount","settingTheme","getTheme","setTheme","_preferences","ThemeType","os","documentElement","getAttribute","validThemes","console","warn","light","cb","immediate","saveCb","setTimeoutId","transactionData","isTokenTransaction","_transaction","parseStandardTokenTransactionData","tokenData","_useTokenData","useTokenData","tokenValue","_metamaskControllerUtils","getTokenValueParam","shouldCalculateTokenValue","tokenAmount","confirmationExchangeRates","getConfirmationExchangeRates","mergedRates","exchangeRate","getProviderConfig","userAddress","setTokensWithBalances","tokenTracker","memoizedTokens","_useEqualityCheck","useEqualityCheck","updateBalances","tokenWithBalances","matchingTokensWithIsERC721Flag","additionalTokenData","isERC721","showError","teardownTracker","stop","removeAllListeners","buildTracker","usersAddress","_ethTokenTracker","ethereumProvider","pollingInterval","balanceDecimals","on","usersTokens","topTokens","shuffledTokensList","tokenBucketPriority","_swaps3","TokenBucketPriority","owned","tokenConversionRates","defaultSwapsToken","getSwapsDefaultToken","memoizedTopTokens","memoizedUsersToken","defaultToken","getRenderableTokenData","memoizedDefaultToken","swapsTokens","getSwapsTokens","tokensToSearch","memoizedTokensToSearch","usersTokensAddressMap","acc","tokensToSearchBuckets","others","uniqBy","renderableDataToken","_swaps2","rawFiat","secondRawFiat","gt","_assetsControllers","_tokenList$address$to2","contractExchangeRate","chainIdForTokenIcons","usedIconUrl","CURRENCY_SYMBOLS","BNB","MATIC","ZKSYNC_ERA","BASE","formatIconUrlWithProxy","primaryLabel","secondaryLabel","rightPrimaryLabel","rightSecondaryLabel","identiconAddress","_primaryTransaction$t","_initialTransaction$t3","_initialTransaction$t4","_primaryTransaction$t2","_token","_token2","_initialTransaction$m","_token3","_useCurrentAsset","useCurrentAsset","knownNfts","getDetectedTokensInCurrentNetwork","methodData","_initialTransaction$t","getKnownMethodData","displayedStatusKey","_transactions","getStatusKey","isPending","_transactions2","PENDING_STATUS_HASH","isSubmitted","TransactionStatus","submitted","mounted","primaryValue","formatDateWithYearContext","time","subtitleContainsOrigin","isTokenCategory","TOKEN_CATEGORY_HASH","currentAssetDetails","setCurrentAssetDetails","_initialTransaction$t2","assetDetails","getAssetDetails","getAndSetAssetDetails","transactionDataTokenId","getTokenIdParam","tokenDisplayValue","_useTokenDisplayValue","useTokenDisplayValue","tokenFiatAmount","stripHttpSchemes","msgParams","primarySuffix","primaryDisplayValue","secondaryDisplayValue","_useSwappedTokenValue","useSwappedTokenValue","signatureTypes","TransactionGroupCategory","signatureRequest","isSenderTokenRecipient","swapAndSendRecipient","swapApproval","approval","tokenMethodApprove","_token4","tokenMethodSetApprovalForAll","_token5","tokenMethodIncreaseAllowance","_token6","contractInteraction","interaction","transactionTypeTitle","getTransactionTypeTitle","camelCaseToCapitalize","deployContract","incoming","receive","tokenMethodTransferFrom","tokenMethodTransfer","_token7","getTokenAddressParam","tokenMethodSafeTransferFrom","simpleSend","captureSingleException","primaryCurrencyPreferences","_useUserPreferencedCurrency","useUserPreferencedCurrency","_common2","PRIMARY","secondaryCurrencyPreferences","SECONDARY","primaryCurrency","_useCurrencyDisplay","useCurrencyDisplay","secondaryCurrency","personalSign","signTypedData","ethDecrypt","ethGetEncryptionPublicKey","_snapInsight","_useInsightSnaps","txData","_insightSnaps$","insightSnaps","getInsightSnaps","insightSnapIds","getInsightSnapIds","snapsMetadata","getSnapsMetadata","snapsNameGetter","getSnapName","selectedInsightSnapId","setSelectedInsightSnapId","useInsightSnaps","deleteInterface","transactionType","selectedSnap","insightComponent","SnapInsight","dropdownOptions","selectedSnapData","selectedAccount","useNativeCurrencyAsPrimaryCurrency","getPreferences","getMultichainShouldShowFiat","fiatReturn","fiatNumberOfDecimals","nativeReturn","ethNumberOfDecimals","showNativeOverride","showFiatOverride","backgroundConnection","traceContext","metamaskState","_trace","trace","TraceName","GetState","parentContext","promisify","store","SetupStore","setupInitialStore","updateCurrentLocale","setFeatureFlag","InitialActions","networkIdToSwitchTo","getNetworkToAutomaticallySwitchTo","automaticallySwitchNetwork","getOriginOfCurrentTab","getSwitchedNetworkDetails","clearSwitchedNetworkDetails","getUseRequestQueue","_util2","thisPopupId","setCurrentExtensionPopupId","runInitialActions","FirstRender","_pages","container","startApp","startPatches","stateHooks","getCleanAppState","clone","version","getVersion","browser","userAgent","completeTxList","getTransactions","filterToCurrentNetwork","getSentryAppState","reduxState","_object","maskObject","_sentryState","SENTRY_UI_STATE","getLogs","logs","timestamp","setupStateHooks","_webextensionPolyfill","_switchDirection","_errorUtils","_store","_txHelper","reduxStore","setLevel","METAMASK_DEBUG","updateBackgroundConnection","setBackgroundConnection","onNotification","updateMetamaskState","featureFlags","currentLocaleMessages","enLocaleMessages","setupLocale","currentLocale","textDirection","draftInitialState","en","_getSelectedInternalA","permittedAccountsForCurrentTab","getPermittedAccountsForCurrentTab","unconnectedAccountAlertShownOrigins","getUnconnectedAccountAlertShown","unconnectedAccountAlertIsEnabled","getUnconnectedAccountAlertEnabledness","setUnconnectedAccountAlertShown","unapprovedTxs","getUnapprovedTransactions","unapprovedTxsAll","unapprovedPersonalMsgs","unapprovedDecryptMsgs","unapprovedEncryptionPublicKeyMsgs","unapprovedTypedMessages","showConfTxPage","logStateString","runtime","getPlatformInfo","stateString","logState","toClipboard","log","_nftDetails","_nativeAsset","_tokenAsset","useParams","content","el","scroll","_menu","AssetOptions","onRemove","onClickBlockExplorer","onViewTokenDetails","isNativeAsset","assetOptionsOpen","setAssetOptionsOpen","blockExplorerLinkText","getBlockExplorerLinkText","MoreVertical","ButtonIconSize","Menu","anchorElement","onHide","MenuItem","Export","firstPart","secondPart","Trash","_tokenCell","_transactionList","_coinButtons","_assetChart","_tokenButtons","renderRow","leftColumn","rightColumn","bodyMdMedium","optionsButton","_asset$aggregators","_asset$aggregators2","allMarketData","getTokensMarketData","isBuyableChain","isSwapsChain","getIsSwapsChain","isSigningEnabled","methods","EthMethod","SignTransaction","SignUserOperation","AssetType","marketData","currentPrice","price","paddingLeft","paddingRight","iconAlternative","native","trackingLocation","Column","headingMd","TokenListItem","secondary","fiat","tokenImage","isOriginalTokenSymbol","AddressCopyButton","aggregators","marketCap","totalVolume","circulatingSupply","allTimeHigh","allTimeLow","localizeLargeNumber","getPricePrecision","hideTokenTransactions","chartUp","d","strokeLinecap","strokeLinejoin","chartDown","AssetPrice","forwardRef","setPrice","useImperativeHandle","comparePrice","priceDelta","headingLg","BorderRadius","backgroundAlternative","transparent","opacity","loadingOpacity","InlineBlock","abs","toFixed","getShortDateFormatter","_chart","_reactChartjs","_useHistoricalPrices","_assetPrice","_chartTooltip","_crosshairPlugin","Chart","register","LinearScale","PointElement","LineElement","Filler","Decimation","CrosshairPlugin","initialChartOptions","normalized","parsing","aspectRatio","layout","autoPadding","animation","duration","chart","gradient","ctx","createLinearGradient","addColorStop","elements","line","borderWidth","point","pointStyle","plugins","decimation","algorithm","samples","threshold","_prices$","timeRange","setTimeRange","chartRef","priceRef","prices","edges","useHistoricalPrices","xMin","xMax","yMin","yMax","brandColor","blue400","blue500","scales","flexEnd","Line","datasets","updateMode","onMouseMove","_chartRef$current","nativeEvent","offsetX","clientWidth","_priceRef$current","onMouseOut","_priceRef$current2","visibility","ButtonBase","bodySmMedium","ButtonBaseSize","xAxisPercent","direction","TextDirection","LeftToRight","RightToLeft","afterEvent","crosshairX","draw","afterDraw","xAxis","yAxis","getPixelForValue","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","PI","fillStyle","_useIsOriginalNativeTokenSymbol","_assetOptions","_assetPage","getSelectedAccountCachedBalance","getRpcPrefsForCurrentProvider","accountLink","useIsOriginalNativeTokenSymbol","balanceDisplay","fiatDisplay","link_type","block_explorer_domain","getURLHostName","walletAddress","tokenTrackerLink","getTokenTrackerLink","showModal","_useRamps","_useBridging","_errorKeys","_iconButton","spaceEvenly","PlusMinus","NavBuyButtonClicked","tooltipRender","NavSendButtonClicked","MetaMetricsSwapsEventSource","TokenView","excludeMetaMetricsId","startNewDraftTransaction","details","SEND_ROUTE","INVALID_ASSET_TYPE","Arrow2UpRight","SwapHorizontal","_global$platform$open","_global$platform","NavSwapButtonClicked","Swaps","BUILD_QUOTE_ROUTE","Bridge","_asset","chainSupported","chainSupportsPricing","fetchOptions","resp","_resp$prices","p","language","getShortDateFormatterV2","SUPPORTED_CHAIN_IDS","_featureToggledRoute","_prepareBridgePage","isBridgeEnabled","redirectToDefaultRoute","stayOnHomePage","clearSwapsState","resetBackgroundSwapsState","OneTwelfth","onKeyUp","Arrow2Left","Lg","Switch","SWAPS_MAINTENANCE_ROUTE","PrepareBridgePage","_prepareSwapPage","getSelectedAccount","ethBalance","selectedAccountAddress","shuffle","_ethRpcErrors","_pageContainer","_nftDefaultImage","_networkAccountBalanceHeader","_useOriginMetadata","_suggestedNfts$","suggestedNfts","getSuggestedNfts","requestData","getIpfsGateway","networkIdentifier","getNetworkIdentifier","selectedAccountBalance","getAddressBookEntryOrAccountName","suggestedNftsWithImages","setSuggestedNftsWithImages","primaryNumberOfDecimals","primaryCurrencyValue","originMetadata","useOriginMetadata","handleAddNftsClick","resolvePendingApproval","NftAdded","Wallet","sensitiveProperties","token_contract_address","token_id","token_standard","standard","asset_type","NFT","MetaMetricsTokenEventSource","Dapp","handleCancelNftClick","rejectPendingApproval","serializeError","ethErrors","userRejectedRequest","link","suggestedNftWithImages","imgUrl","addImageUrlToSuggestedNFTs","accountBalance","ButtonLink","BUTTON_SIZES","found","elm","nftImageURL","blockExplorerLink","stopPropagation","PageContainerFooter","_confirmAddSuggestedNft","_zendeskUrl","suggestedTokens","getSuggestedTokens","knownTokenBannerAlert","duplicate","dupe","hasDuplicateAddress","BannerAlert","Button","ButtonVariant","Link","externalLink","ButtonLinkSize","Inherit","TOKEN_SAFETY_PRACTICES","reusedTokenNameBannerAlert","hasDuplicateSymbolAndDiffAddress","handleAddTokensClick","TokenAdded","token_decimal_precision","unlisted","TokenStandard","ERC20","handleCancelTokenClick","_confirmAddSuggestedToken","_accountListItem","ConfirmDecryptMessage","copyToClipboardPressed","hasCopied","rawMessage","legacy_event","fromAccount","nativeCurrencyBalance","requesterAddress","renderAccount","renderRequestIcon","renderBalance","decryptMessageInline","subjectMetadata","notice","hasDecrypted","hasError","renderAccountInfo","charAt","rawSig","copyMessage","onMouseDown","onMouseUp","cancelDecryptMessage","clearConfirmTransaction","decryptMessage","renderHeader","renderBody","renderFooter","_confirmDecryptMessage","compose","withRouter","_txData$msgParams","unconfirmedTransactions","unconfirmedTransactionsListSelector","cloneDeep","getTargetAccountWithSendEtherInfo","requester","conversionRateSelector","goHome","msgData","metamaskId","decryptMsg","cancelDecryptMsg","decryptMsgInline","ConfirmEncryptionPublicKey","cancelEncryptionPublicKey","encryptionPublicKey","_confirmEncryptionPublicKey","encryptionPublicKeyMsg","cancelEncryptionPublicKeyMsg","_formField","AdvancedGasControls","onManualChange","setGasLimit","gasPrice","setGasPrice","gasErrors","titleText","getGasFormErrorText","tooltipText","allowDecimals","titleUnit","_useTransactionEventFragment","_gasFee","_context","maxBaseFee","maxBaseFeeNumber","maxPriorityFeePerGas","maxPriorityFeePerGasNumber","useAdvancedGasFeePopoverContext","advancedGasFeeValues","getAdvancedGasFeeValues","updateTransactionEventFragment","useTransactionEventFragment","useGasFeeContext","isDefaultSettingsSelected","setDefaultSettingsSelected","Checkbox","isChecked","setAdvancedGasFee","gasFeePreferences","advanced_gas_defaults_updated_maxbasefee","advanced_gas_defaults_updated_priorityfee","capitalize","_advancedGasFeeDefaults","setGasLimitInContext","setErrorValue","gasLimitInTransaction","minimumGasLimitDec","originalGasEstimate","originalGasEstimateDec","maxGasLimit","setMaxGasLimit","MAX_GAS_LIMIT_DEC","isEditing","setEditing","gasLimitError","setGasLimitError","updateGasLimit","IGNORE_GAS_LIMIT_CHAIN_IDS","minGasLimit","bnLessThan","validateGasLimit","_advancedGasFeeGasLimit","_loadingHeartbeat","AdvancedGasFeeInputSubtext","latest","historical","trend","trendInfo","determineTrendInfo","formatGasFeeOrFeeRange","_advancedGasFeeInputSubtext","_baseFeeInput","_priorityFeeInput","estimateUsed","setMaxFeePerGas","setMaxBaseFee","estimatedBaseFee","historicalBaseFeeRange","baseFeeTrend","baseFeeError","setBaseFeeError","defaultBaseFee","PriorityLevels","setBaseFee","baseFeeInPrimaryCurrency","decGWEIToHexWEI","updateBaseFee","baseFeeValue","greaterThan","lessThan","HIGH_FEE_WARNING_MULTIPLIER","validateBaseFee","detailText","_advancedGasFeeInputs","setMaxPriorityFeePerGas","latestPriorityFeeRange","historicalPriorityFeeRange","priorityFeeTrend","priorityFeeError","setPriorityFeeError","defaultPriorityFee","setPriorityFee","priorityFeeInPrimaryCurrency","priorityFeeValue","suggestedMaxPriorityFeePerGas","validatePriorityFee","_transactionModal","_advancedGasFeeSave","useTransactionModalContext","AdvancedGasFeePopoverContextProvider","updateTransaction","hasErrors","gas_edit_type","AdvancedGasFeePopoverContext","errors","setErrors","_advancedGasFeePopover","_confirmGasDisplay","ApproveContentCard","showEdit","showAdvanceGasFeeOptions","onEditClick","noBorder","supportsEIP1559","renderTransactionDetailsContent","renderDataContent","ethTransactionTotal","fiatTransactionTotal","isSetApproveForAll","isApprovalOrRejection","userAcknowledgedGasMissing","renderSimulationFailureWarning","capitalizedFnName","bodySmBold","OneSixth","ConfirmGasDisplay","Right","Bold","Normal","_gasDetailsItem","_confirmLegacyGasDisplay","draftTransaction","getCurrentDraftTransaction","isLegacyTxn","TransactionEnvelopeType","legacy","isLegacyTransaction","checkNetworkAndAccountSupports1559","ConfirmLegacyGasDisplay"],"mappings":"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","file":"../metamask/ui-6.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Button from '../../button';\n\nexport default class PageContainerHeader extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    onClose: PropTypes.func,\n    showBackButton: PropTypes.bool,\n    onBackButtonClick: PropTypes.func,\n    backButtonStyles: PropTypes.object,\n    backButtonString: PropTypes.string,\n    tabs: PropTypes.node,\n    headerCloseText: PropTypes.string,\n    className: PropTypes.string,\n    hideClose: PropTypes.bool,\n  };\n\n  renderTabs() {\n    const { tabs } = this.props;\n\n    return tabs ? <ul className=\"page-container__tabs\">{tabs}</ul> : null;\n  }\n\n  renderCloseAction() {\n    const { hideClose, onClose, headerCloseText } = this.props;\n\n    if (hideClose) {\n      return null;\n    }\n\n    if (headerCloseText) {\n      return (\n        onClose && (\n          <Button\n            type=\"link\"\n            className=\"page-container__header-close-text\"\n            onClick={() => onClose()}\n          >\n            {headerCloseText}\n          </Button>\n        )\n      );\n    }\n\n    return (\n      onClose && (\n        <button\n          className=\"page-container__header-close\"\n          onClick={() => onClose()}\n          aria-label=\"close\"\n        />\n      )\n    );\n  }\n\n  renderHeaderRow() {\n    const {\n      showBackButton,\n      onBackButtonClick,\n      backButtonStyles,\n      backButtonString,\n    } = this.props;\n\n    return (\n      showBackButton && (\n        <div className=\"page-container__header-row\">\n          <span\n            className=\"page-container__back-button\"\n            onClick={onBackButtonClick}\n            style={backButtonStyles}\n          >\n            {backButtonString || 'Back'}\n          </span>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const { title, subtitle, tabs, className, hideClose } = this.props;\n\n    return (\n      <div\n        className={classnames('page-container__header', className, {\n          'page-container__header--no-padding-bottom': Boolean(tabs),\n        })}\n        data-testid=\"page-container__header\"\n      >\n        {this.renderHeaderRow()}\n\n        {title && (\n          <div\n            className={classnames('page-container__title', {\n              'page-container__title--no-margin-right': hideClose,\n            })}\n          >\n            {title}\n          </div>\n        )}\n        {subtitle ? (\n          <div className=\"page-container__subtitle\">{subtitle}</div>\n        ) : null}\n\n        {this.renderCloseAction()}\n\n        {this.renderTabs()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PageContainerHeader from './page-container-header';\nimport PageContainerFooter from './page-container-footer';\n\nexport default class PageContainer extends PureComponent {\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  static propTypes = {\n    // PageContainerHeader props\n    backButtonString: PropTypes.string,\n    backButtonStyles: PropTypes.object,\n    headerCloseText: PropTypes.string,\n    onBackButtonClick: PropTypes.func,\n    onClose: PropTypes.func,\n    showBackButton: PropTypes.bool,\n    subtitle: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    // Tabs-related props\n    defaultActiveTabIndex: PropTypes.number,\n    tabsComponent: PropTypes.node,\n    // Content props\n    contentComponent: PropTypes.node,\n    // PageContainerFooter props\n    cancelText: PropTypes.string,\n    disabled: PropTypes.bool,\n    hideCancel: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    submitText: PropTypes.string,\n  };\n\n  state = {\n    activeTabIndex: this.props.defaultActiveTabIndex || 0,\n  };\n\n  handleTabClick(activeTabIndex) {\n    this.setState({ activeTabIndex });\n  }\n\n  renderTabs() {\n    const { tabsComponent } = this.props;\n\n    if (!tabsComponent) {\n      return null;\n    }\n\n    const numberOfTabs = React.Children.count(tabsComponent.props.children);\n\n    return React.Children.map(\n      tabsComponent.props.children,\n      (child, tabIndex) => {\n        return (\n          child &&\n          React.cloneElement(child, {\n            onClick: (index) => this.handleTabClick(index),\n            tabIndex,\n            isActive:\n              numberOfTabs > 1 && tabIndex === this.state.activeTabIndex,\n            key: tabIndex,\n            className: 'page-container__tab',\n          })\n        );\n      },\n    );\n  }\n\n  renderActiveTabContent() {\n    const { tabsComponent } = this.props;\n    let { children } = tabsComponent.props;\n    children = children.filter(Boolean);\n    const { activeTabIndex } = this.state;\n\n    return (children[activeTabIndex] || children[0]).props.children;\n  }\n\n  renderContent() {\n    const { contentComponent, tabsComponent } = this.props;\n\n    if (contentComponent) {\n      return contentComponent;\n    } else if (tabsComponent) {\n      return this.renderActiveTabContent();\n    }\n    return null;\n  }\n\n  render() {\n    const {\n      title,\n      subtitle,\n      onClose,\n      showBackButton,\n      onBackButtonClick,\n      backButtonStyles,\n      backButtonString,\n      onCancel,\n      cancelText,\n      onSubmit,\n      submitText,\n      disabled,\n      headerCloseText,\n      hideCancel,\n    } = this.props;\n    return (\n      <div className=\"page-container\">\n        <PageContainerHeader\n          title={title}\n          subtitle={subtitle}\n          onClose={onClose}\n          showBackButton={showBackButton}\n          onBackButtonClick={onBackButtonClick}\n          backButtonStyles={backButtonStyles}\n          backButtonString={backButtonString}\n          tabs={this.renderTabs()}\n          headerCloseText={headerCloseText}\n        />\n        <div className=\"page-container__bottom\">\n          <div className=\"page-container__content\">{this.renderContent()}</div>\n          <PageContainerFooter\n            onCancel={onCancel}\n            cancelText={cancelText}\n            hideCancel={hideCancel}\n            onSubmit={onSubmit}\n            submitText={submitText}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","export { default } from './popover.component';\n","import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport Box from '../box';\nimport {\n  AlignItems,\n  BackgroundColor,\n  FLEX_DIRECTION,\n  JustifyContent,\n  Color,\n  DISPLAY,\n  TextVariant,\n  Size,\n  BorderColor,\n  IconColor,\n  TextAlign,\n  BLOCK_SIZES,\n} from '../../../helpers/constants/design-system';\n\nimport {\n  ButtonIcon,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n} from '../../component-library';\n\nconst defaultHeaderProps = {\n  padding: [6, 4, 4],\n  display: 'flex',\n  flexDirection: FLEX_DIRECTION.COLUMN,\n  backgroundColor: BackgroundColor.backgroundDefault,\n  borderRadius: 'xl',\n};\n\nconst defaultContentProps = {\n  display: 'flex',\n  flexDirection: FLEX_DIRECTION.COLUMN,\n  justifyContent: JustifyContent.flexStart,\n  alignItems: AlignItems.stretch,\n  borderRadius: 'xl',\n};\n\nconst defaultFooterProps = {\n  display: 'flex',\n  justifyContent: JustifyContent.spaceBetween,\n  padding: [4, 6, 6],\n};\n\n/**\n * @deprecated The `<Popover>` component has been deprecated in favor of the new `<Modal>` component from the component-library.\n * Please update your code to use the new `<Modal>` component instead, which can be found at ui/components/component-library/modal/modal.tsx.\n * You can find documentation for the new Modal component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-modal--docs}\n * If you would like to help with the replacement of the old Modal component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/19555}\n */\n\nconst Popover = ({\n  title,\n  subtitle = '',\n  children,\n  footer,\n  footerClassName,\n  onBack,\n  onClose,\n  onScroll,\n  className,\n  contentClassName,\n  showArrow,\n  CustomBackground,\n  popoverRef,\n  showScrollDown,\n  onScrollDownButtonClick,\n  centerTitle,\n  wrapTitle,\n  headerProps = defaultHeaderProps,\n  contentProps = defaultContentProps,\n  footerProps = defaultFooterProps,\n}) => {\n  const t = useI18nContext();\n  const showHeader = title || onBack || subtitle || onClose;\n  const Header = () => (\n    <Box\n      {...{ ...defaultHeaderProps, ...headerProps }}\n      className=\"popover-header\"\n    >\n      <Box\n        display={DISPLAY.FLEX}\n        alignItems={AlignItems.center}\n        justifyContent={centerTitle ? null : JustifyContent.spaceBetween}\n        className={classnames('popover-header__title', {\n          'popover-header__title--center': centerTitle,\n        })}\n        marginBottom={2}\n      >\n        {onBack ? (\n          <ButtonIcon\n            iconName={IconName.ArrowLeft}\n            ariaLabel={t('back')}\n            onClick={onBack}\n            color={Color.iconDefault}\n            size={Size.SM}\n          />\n        ) : null}\n        <Text\n          textAlign={centerTitle ? TextAlign.Center : TextAlign.Start}\n          className={wrapTitle ? 'popover-header__title-wrap' : null}\n          ellipsis\n          variant={TextVariant.headingSm}\n          as=\"h2\"\n          width={BLOCK_SIZES.FULL}\n        >\n          {title}\n        </Text>\n        {onClose ? (\n          <ButtonIcon\n            iconName={IconName.Close}\n            ariaLabel={t('close')}\n            data-testid=\"popover-close\"\n            onClick={onClose}\n            size={Size.SM}\n          />\n        ) : null}\n      </Box>\n      {subtitle ? <Text variant={TextVariant.bodySm}>{subtitle}</Text> : null}\n    </Box>\n  );\n\n  return (\n    <div className=\"popover-container\">\n      {CustomBackground ? (\n        <CustomBackground onClose={onClose} />\n      ) : (\n        <div className=\"popover-bg\" onClick={onClose} />\n      )}\n      <section\n        className={classnames('popover-wrap', className)}\n        ref={popoverRef}\n      >\n        {showArrow ? <div className=\"popover-arrow\" /> : null}\n        {showHeader && <Header />}\n        {children ? (\n          <Box\n            className={classnames('popover-content', contentClassName)}\n            onScroll={onScroll}\n            {...{ ...defaultContentProps, ...contentProps }}\n          >\n            {children}\n          </Box>\n        ) : null}\n        {showScrollDown ? (\n          <Box\n            display={DISPLAY.FLEX}\n            alignItems={AlignItems.center}\n            justifyContent={JustifyContent.center}\n            borderColor={BorderColor.borderDefault}\n            backgroundColor={BackgroundColor.backgroundDefault}\n            color={Color.iconDefault}\n            onClick={onScrollDownButtonClick}\n            className=\"popover-scroll-button\"\n            style={{ bottom: footer ? '140px' : '12px' }}\n            data-testid=\"popover-scroll-button\"\n          >\n            <Icon\n              name={IconName.ArrowDown}\n              color={IconColor.primaryDefault}\n              size={IconSize.Md}\n              aria-label={t('scrollDown')}\n            />\n          </Box>\n        ) : null}\n        {footer ? (\n          <Box\n            className={classnames('popover-footer', footerClassName)}\n            {...{ ...defaultFooterProps, ...footerProps }}\n          >\n            {footer}\n          </Box>\n        ) : null}\n      </section>\n    </div>\n  );\n};\n\nPopover.propTypes = {\n  /**\n   * Avoid wrapping title\n   */\n  wrapTitle: PropTypes.bool,\n  /**\n   * Show title of the popover\n   */\n  title: PropTypes.node,\n  /**\n   * Show subtitle label on popover\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Show children content could be react child or text\n   */\n  children: PropTypes.node,\n  /**\n   * Show footer content could be react child or text\n   */\n  footer: PropTypes.node,\n  /**\n   * Add custom CSS class for footer\n   */\n  footerClassName: PropTypes.string,\n  /**\n   * onBack handler\n   */\n  onBack: PropTypes.func,\n  /**\n   * onClose handler\n   */\n  onClose: PropTypes.func,\n  /**\n   * onScroll handler\n   */\n  onScroll: PropTypes.func,\n  CustomBackground: PropTypes.func,\n  /**\n   * Add custom CSS class for content\n   */\n  contentClassName: PropTypes.string,\n  /**\n   * Add custom CSS class\n   */\n  className: PropTypes.string,\n  /**\n   * Check if component would show arror\n   */\n  showArrow: PropTypes.bool,\n  /**\n   * The ref of the popover-wrap element\n   */\n  popoverRef: PropTypes.shape({\n    current: PropTypes.instanceOf(window.Element),\n  }),\n  /**\n   * Show title of the popover\n   */\n  showScrollDown: PropTypes.bool,\n  /**\n   * ScrollDown handler\n   */\n  onScrollDownButtonClick: PropTypes.func,\n  /**\n   * Check if use centered title\n   */\n  centerTitle: PropTypes.bool,\n  /**\n   * Box props for the header\n   */\n  headerProps: PropTypes.shape({ ...Box.propTypes }),\n  /**\n   * Box props for the content\n   */\n  contentProps: PropTypes.shape({ ...Box.propTypes }),\n  /**\n   * Box props for the footer\n   */\n  footerProps: PropTypes.shape({ ...Box.propTypes }),\n};\n\n/**\n * @deprecated The `<Popover>` component has been deprecated in favor of the new `<Modal>` component from the component-library.\n * Please update your code to use the new `<Modal>` component instead, which can be found at ui/components/component-library/modal/modal.tsx.\n * You can find documentation for the new Modal component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-modal--docs}\n * If you would like to help with the replacement of the old Modal component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/19555}\n */\nexport default class PopoverPortal extends PureComponent {\n  static propTypes = Popover.propTypes;\n\n  rootNode = document.getElementById('popover-content');\n\n  instanceNode = document.createElement('div');\n\n  componentDidMount() {\n    if (!this.rootNode) {\n      return;\n    }\n\n    this.rootNode.appendChild(this.instanceNode);\n  }\n\n  componentWillUnmount() {\n    if (!this.rootNode) {\n      return;\n    }\n\n    this.rootNode.removeChild(this.instanceNode);\n  }\n\n  render() {\n    const children = <Popover {...this.props} />;\n    return this.rootNode\n      ? ReactDOM.createPortal(children, this.instanceNode)\n      : children;\n  }\n}\n","export { default } from './pulse-loader';\n","import React from 'react';\n\nexport default function PulseLoader() {\n  return (\n    <div className=\"pulse-loader\" data-testid=\"pulse-loader\">\n      <div className=\"pulse-loader__loading-dot-one\" />\n      <div className=\"pulse-loader__loading-dot-two\" />\n      <div className=\"pulse-loader__loading-dot-three\" />\n    </div>\n  );\n}\n","export { default } from './qr-code-view';\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport qrCode from 'qrcode-generator';\nimport { connect } from 'react-redux';\nimport { isHexPrefixed } from 'ethereumjs-util';\nimport { normalizeSafeAddress } from '../../../../app/scripts/lib/multichain/address';\nimport { Box, Icon, IconName, IconSize, Text } from '../../component-library';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport type { CombinedBackgroundAndReduxState } from '../../../store/store';\nimport {\n  AlignItems,\n  Display,\n  IconColor,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { MINUTE } from '../../../../shared/constants/time';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport { useCopyToClipboard } from '../../../hooks/useCopyToClipboard';\n\nfunction mapStateToProps(state: CombinedBackgroundAndReduxState) {\n  const { buyView, warning } = state.appState;\n  return {\n    buyView,\n    warning,\n  };\n}\nconst PREFIX_LEN = 6;\nconst SUFFIX_LEN = 5;\n\nfunction QrCodeView({\n  Qr,\n  warning,\n  accountName,\n}: {\n  Qr: { message: string; data: string };\n  warning: null | string;\n  accountName?: string;\n}) {\n  const trackEvent = useContext(MetaMetricsContext);\n  const [copied, handleCopy] = useCopyToClipboard(MINUTE);\n  const t = useI18nContext();\n  const { message, data } = Qr;\n  const checksummedAddress = normalizeSafeAddress(data);\n  const address = `${\n    isHexPrefixed(data) ? 'ethereum:' : ''\n  }${checksummedAddress}`;\n  const qrImage = qrCode(4, 'M');\n  qrImage.addData(address);\n  qrImage.make();\n  const header = message ? (\n    <div className=\"qr-code__header\">{message}</div>\n  ) : null;\n\n  const addressStart = data.substring(0, PREFIX_LEN);\n  const addressMiddle: string = data.substring(\n    PREFIX_LEN,\n    data.length - SUFFIX_LEN,\n  );\n  const addressEnd: string = data.substring(data.length - SUFFIX_LEN);\n\n  return (\n    <div className=\"qr-code\">\n      {Array.isArray(message) ? (\n        <div className=\"qr-code__message-container\">\n          {message.map((msg, index) => (\n            <Text\n              key={index}\n              variant={TextVariant.bodyXs}\n              color={TextColor.warningDefault}\n            >\n              {msg}\n            </Text>\n          ))}\n        </div>\n      ) : (\n        header\n      )}\n      {warning ? <span className=\"qr-code__error\">{warning}</span> : null}\n      <Box className=\"qr-code__wrapper\" marginBottom={4}>\n        <Box\n          data-testid=\"qr-code-image\"\n          className=\"qr-code__image\"\n          dangerouslySetInnerHTML={{\n            __html: qrImage.createTableTag(5, 16),\n          }}\n        />\n        <Box className=\"qr-code__logo\">\n          <img src=\"images/logo/metamask-fox.svg\" alt=\"Logo\" />\n        </Box>\n      </Box>\n      {accountName ? (\n        <Text\n          variant={TextVariant.bodyLgMedium}\n          textAlign={TextAlign.Center}\n          marginBottom={4}\n        >\n          {accountName}\n        </Text>\n      ) : null}\n      <Text\n        variant={TextVariant.bodyMd}\n        className=\"qr-code__address-segments\"\n        marginBottom={4}\n      >\n        {addressStart}\n        <Text\n          variant={TextVariant.bodyMd}\n          color={TextColor.textMuted}\n          className=\"qr-code__address-inner-segment\"\n        >\n          {addressMiddle}\n        </Text>\n        {addressEnd}\n      </Text>\n      <Box\n        display={Display.Flex}\n        marginBottom={4}\n        gap={2}\n        alignItems={AlignItems.center}\n        color={TextColor.primaryDefault}\n        className=\"qr-code__copy-button\"\n        data-testid=\"address-copy-button-text\"\n        onClick={() => {\n          handleCopy(checksummedAddress);\n          trackEvent({\n            category: MetaMetricsEventCategory.Accounts,\n            event: MetaMetricsEventName.PublicAddressCopied,\n            properties: {\n              location: 'Account Details Modal',\n            },\n          });\n        }}\n      >\n        <Icon\n          name={copied ? IconName.CopySuccess : IconName.Copy}\n          size={IconSize.Sm}\n          color={IconColor.primaryDefault}\n        />\n        {t('copyAddressShort')}\n      </Box>\n    </div>\n  );\n}\n\nQrCodeView.propTypes = {\n  warning: PropTypes.node,\n  Qr: PropTypes.shape({\n    message: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n    data: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(QrCodeView);\n","export { default } from './sender-to-recipient.component';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { NameType } from '@metamask/name-controller';\nimport Tooltip from '../tooltip';\nimport Identicon from '../identicon';\nimport { shortenAddress } from '../../../helpers/utils/util';\nimport AccountMismatchWarning from '../account-mismatch-warning/account-mismatch-warning.component';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { toChecksumHexAddress } from '../../../../shared/modules/hexstring-utils';\nimport Name from '../../app/name/name';\nimport { COPY_OPTIONS } from '../../../../shared/constants/copy';\nimport NicknamePopovers from '../../app/modals/nickname-popovers';\nimport { Icon, IconName } from '../../component-library';\nimport { usePetnamesEnabled } from '../../../hooks/usePetnamesEnabled';\nimport {\n  DEFAULT_VARIANT,\n  CARDS_VARIANT,\n  FLAT_VARIANT,\n} from './sender-to-recipient.constants';\n\nconst variantHash = {\n  [DEFAULT_VARIANT]: 'sender-to-recipient--default',\n  [CARDS_VARIANT]: 'sender-to-recipient--cards',\n  [FLAT_VARIANT]: 'sender-to-recipient--flat',\n};\n\nfunction SenderAddress({\n  addressOnly,\n  checksummedSenderAddress,\n  senderName,\n  onSenderClick,\n  senderAddress,\n  warnUserOnAccountMismatch,\n}) {\n  const t = useI18nContext();\n  const [addressCopied, setAddressCopied] = useState(false);\n  let tooltipHtml = <p>{t('copiedExclamation')}</p>;\n  if (!addressCopied) {\n    tooltipHtml = addressOnly ? (\n      <p>{t('copyAddress')}</p>\n    ) : (\n      <p>\n        {shortenAddress(checksummedSenderAddress)}\n        <br />\n        {t('copyAddress')}\n      </p>\n    );\n  }\n  return (\n    <div\n      className={classnames(\n        'sender-to-recipient__party sender-to-recipient__party--sender',\n      )}\n      onClick={() => {\n        setAddressCopied(true);\n        copyToClipboard(checksummedSenderAddress, COPY_OPTIONS);\n        if (onSenderClick) {\n          onSenderClick();\n        }\n      }}\n    >\n      <div className=\"sender-to-recipient__sender-icon\">\n        <Identicon\n          address={toChecksumHexAddress(senderAddress)}\n          diameter={24}\n        />\n      </div>\n      <Tooltip\n        position=\"bottom\"\n        html={tooltipHtml}\n        wrapperClassName=\"sender-to-recipient__tooltip-wrapper\"\n        containerClassName=\"sender-to-recipient__tooltip-container\"\n        onHidden={() => setAddressCopied(false)}\n      >\n        <div className=\"sender-to-recipient__name\">\n          {addressOnly ? (\n            <span>\n              {`${senderName || shortenAddress(checksummedSenderAddress)}`}\n            </span>\n          ) : (\n            senderName\n          )}\n        </div>\n      </Tooltip>\n      {warnUserOnAccountMismatch && (\n        <AccountMismatchWarning address={senderAddress} />\n      )}\n    </div>\n  );\n}\n\nSenderAddress.propTypes = {\n  senderName: PropTypes.string,\n  checksummedSenderAddress: PropTypes.string,\n  addressOnly: PropTypes.bool,\n  senderAddress: PropTypes.string,\n  onSenderClick: PropTypes.func,\n  warnUserOnAccountMismatch: PropTypes.bool,\n};\n\nexport function RecipientWithAddress({\n  checksummedRecipientAddress,\n  onRecipientClick,\n  addressOnly,\n  recipientNickname,\n  recipientEns,\n  recipientName,\n  recipientMetadataName,\n  recipientIsOwnedAccount,\n}) {\n  const t = useI18nContext();\n  const [showNicknamePopovers, setShowNicknamePopovers] = useState(false);\n  const [addressCopied, setAddressCopied] = useState(false);\n  const petnamesEnabled = usePetnamesEnabled();\n\n  let tooltipHtml = <p>{t('copiedExclamation')}</p>;\n  if (!addressCopied) {\n    tooltipHtml = addressOnly ? (\n      <p>{t('copyAddress')}</p>\n    ) : (\n      <p>\n        {shortenAddress(checksummedRecipientAddress)}\n        <br />\n        {t('copyAddress')}\n      </p>\n    );\n  }\n\n  const displayName =\n    (recipientName ||\n      recipientNickname ||\n      recipientMetadataName ||\n      recipientEns ||\n      shortenAddress(checksummedRecipientAddress)) ??\n    (!addressOnly && t('newContract'));\n\n  return (\n    <>\n      <div\n        className=\"sender-to-recipient__party sender-to-recipient__party--recipient sender-to-recipient__party--recipient-with-address\"\n        onClick={() => {\n          if (recipientIsOwnedAccount) {\n            setAddressCopied(true);\n            copyToClipboard(checksummedRecipientAddress, COPY_OPTIONS);\n          } else {\n            setShowNicknamePopovers(true);\n            if (onRecipientClick) {\n              onRecipientClick();\n            }\n          }\n        }}\n      >\n        {!petnamesEnabled && (\n          <div className=\"sender-to-recipient__sender-icon\">\n            <Identicon address={checksummedRecipientAddress} diameter={24} />\n          </div>\n        )}\n        <Tooltip\n          position=\"bottom\"\n          disabled={!recipientName}\n          html={tooltipHtml}\n          wrapperClassName=\"sender-to-recipient__tooltip-wrapper\"\n          containerClassName=\"sender-to-recipient__tooltip-container\"\n          onHidden={() => setAddressCopied(false)}\n        >\n          {petnamesEnabled ? (\n            <Name\n              value={checksummedRecipientAddress}\n              type={NameType.ETHEREUM_ADDRESS}\n            />\n          ) : (\n            <div\n              className=\"sender-to-recipient__name\"\n              data-testid=\"sender-to-recipient__name\"\n            >\n              {displayName}\n            </div>\n          )}\n        </Tooltip>\n      </div>\n      {showNicknamePopovers && !petnamesEnabled ? (\n        <NicknamePopovers\n          onClose={() => setShowNicknamePopovers(false)}\n          address={checksummedRecipientAddress}\n        />\n      ) : null}\n    </>\n  );\n}\n\nRecipientWithAddress.propTypes = {\n  checksummedRecipientAddress: PropTypes.string,\n  recipientName: PropTypes.string,\n  recipientMetadataName: PropTypes.string,\n  recipientEns: PropTypes.string,\n  recipientNickname: PropTypes.string,\n  addressOnly: PropTypes.bool,\n  onRecipientClick: PropTypes.func,\n  recipientIsOwnedAccount: PropTypes.bool,\n};\n\nfunction Arrow({ variant }) {\n  return variant === DEFAULT_VARIANT ? (\n    <div className=\"sender-to-recipient__arrow-container\">\n      <div className=\"sender-to-recipient__arrow-circle\">\n        <i className=\"fa fa-arrow-right sender-to-recipient__arrow-circle__icon\" />\n      </div>\n    </div>\n  ) : (\n    <div className=\"sender-to-recipient__arrow-container\">\n      <Icon name={IconName.ArrowRight} />\n    </div>\n  );\n}\n\nArrow.propTypes = {\n  variant: PropTypes.oneOf([DEFAULT_VARIANT, CARDS_VARIANT, FLAT_VARIANT]),\n};\n\nexport default function SenderToRecipient({\n  senderAddress,\n  addressOnly,\n  senderName,\n  recipientNickname,\n  recipientName,\n  recipientMetadataName,\n  recipientEns,\n  onRecipientClick,\n  onSenderClick,\n  recipientAddress,\n  variant,\n  warnUserOnAccountMismatch,\n  recipientIsOwnedAccount,\n}) {\n  const t = useI18nContext();\n  const checksummedSenderAddress = toChecksumHexAddress(senderAddress);\n  const checksummedRecipientAddress = toChecksumHexAddress(recipientAddress);\n\n  return (\n    <div\n      className={classnames('sender-to-recipient', variantHash[variant])}\n      data-testid=\"sender-to-recipient\"\n    >\n      <SenderAddress\n        checksummedSenderAddress={checksummedSenderAddress}\n        addressOnly={addressOnly}\n        senderName={senderName}\n        onSenderClick={onSenderClick}\n        senderAddress={senderAddress}\n        warnUserOnAccountMismatch={warnUserOnAccountMismatch}\n      />\n      <Arrow variant={variant} />\n      {recipientAddress ? (\n        <RecipientWithAddress\n          checksummedRecipientAddress={checksummedRecipientAddress}\n          onRecipientClick={onRecipientClick}\n          addressOnly={addressOnly}\n          recipientNickname={recipientNickname}\n          recipientEns={recipientEns}\n          recipientName={recipientName}\n          recipientMetadataName={recipientMetadataName}\n          recipientIsOwnedAccount={recipientIsOwnedAccount}\n        />\n      ) : (\n        <div className=\"sender-to-recipient__party sender-to-recipient__party--recipient\">\n          <i className=\"fa fa-file-text-o\" />\n          <div className=\"sender-to-recipient__name\">{t('newContract')}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nSenderToRecipient.defaultProps = {\n  variant: DEFAULT_VARIANT,\n  warnUserOnAccountMismatch: true,\n};\n\nSenderToRecipient.propTypes = {\n  senderName: PropTypes.string,\n  senderAddress: PropTypes.string,\n  recipientName: PropTypes.string,\n  recipientMetadataName: PropTypes.string,\n  recipientEns: PropTypes.string,\n  recipientAddress: PropTypes.string,\n  recipientNickname: PropTypes.string,\n  variant: PropTypes.oneOf([DEFAULT_VARIANT, CARDS_VARIANT, FLAT_VARIANT]),\n  addressOnly: PropTypes.bool,\n  onRecipientClick: PropTypes.func,\n  onSenderClick: PropTypes.func,\n  warnUserOnAccountMismatch: PropTypes.bool,\n  recipientIsOwnedAccount: PropTypes.bool,\n};\n","// Component design variants\nexport const DEFAULT_VARIANT = 'DEFAULT_VARIANT';\nexport const CARDS_VARIANT = 'CARDS_VARIANT';\nexport const FLAT_VARIANT = 'FLAT_VARIANT';\n","export { default } from './show-hide-toggle';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport IconEye from '../icon/icon-eye';\nimport IconEyeSlash from '../icon/icon-eye-slash';\n\nconst ShowHideToggle = ({\n  id,\n  shown,\n  onChange,\n  ariaLabelHidden,\n  ariaLabelShown,\n  className,\n  'data-testid': dataTestId,\n  disabled,\n  title,\n}) => {\n  return (\n    <div className={classnames('show-hide-toggle', className)}>\n      <input\n        className=\"show-hide-toggle__input\"\n        id={id}\n        type=\"checkbox\"\n        checked={shown}\n        onChange={onChange}\n        data-testid={dataTestId}\n        disabled={disabled}\n      />\n      <label htmlFor={id} className=\"show-hide-toggle__label\" title={title}>\n        {shown ? (\n          <IconEye\n            ariaLabel={ariaLabelShown}\n            className=\"show-hide-toggle__icon\"\n          />\n        ) : (\n          <IconEyeSlash\n            ariaLabel={ariaLabelHidden}\n            className=\"show-hide-toggle__icon\"\n          />\n        )}\n      </label>\n    </div>\n  );\n};\n\nShowHideToggle.propTypes = {\n  /**\n   * The id of the ShowHideToggle for htmlFor\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * If the ShowHideToggle is in the \"shown\" state or not\n   */\n  shown: PropTypes.bool.isRequired,\n  /**\n   * The onChange handler of the ShowHideToggle\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * The aria-label of the icon representing the \"hidden\" state\n   */\n  ariaLabelHidden: PropTypes.string.isRequired,\n  /**\n   * The aria-label of the icon representing the \"shown\" state\n   */\n  ariaLabelShown: PropTypes.string.isRequired,\n  /**\n   * An additional className to give the ShowHideToggle\n   */\n  className: PropTypes.string,\n  /**\n   * The data test id of the input\n   */\n  'data-testid': PropTypes.string,\n  /**\n   * Whether the input is disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The title for the toggle. This is shown in a tooltip on hover.\n   */\n  title: PropTypes.string,\n};\n\nexport default ShowHideToggle;\n","export { default } from './site-origin';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Chip from '../chip';\nimport IconWithFallback from '../icon-with-fallback';\nimport { BorderColor } from '../../../helpers/constants/design-system';\n\n/**\n * @deprecated The `<SiteOrigin />` component has been deprecated in favor of the new `<TagUrl>` component from the component-library.\n * Please update your code to use the new `<TagUrl>` component instead, which can be found at ui/components/component-library/tag-url/tag-url.js.\n * You can find documentation for the new `TagUrl` component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-tagurl--docs}\n * If you would like to help with the replacement of the old `SiteOrigin` component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20489}\n */\n\nexport default function SiteOrigin({\n  siteOrigin,\n  iconSrc,\n  iconName,\n  chip,\n  className,\n  title,\n  leftIcon,\n  rightIcon,\n}) {\n  return (\n    <div className={classnames('site-origin', className)} title={title}>\n      {chip ? (\n        <Chip\n          borderColor={BorderColor.borderMuted}\n          label={siteOrigin}\n          maxContent={false}\n          leftIcon={\n            leftIcon || (\n              <IconWithFallback icon={iconSrc} name={iconName} size={24} />\n            )\n          }\n          rightIcon={rightIcon}\n        />\n      ) : (\n        <bdi dir=\"ltr\">{siteOrigin}</bdi>\n      )}\n    </div>\n  );\n}\n\nSiteOrigin.propTypes = {\n  /**\n   * The origin of the site generally the URL\n   */\n  siteOrigin: PropTypes.string.isRequired,\n  /**\n   * Icon name is used for the fallback icon and will display the first letter of the string\n   * when iconSrc errors or is not provided.\n   */\n  iconName: PropTypes.string,\n  /**\n   * The image src of the icon\n   */\n  iconSrc: PropTypes.string,\n  /**\n   * Additional className added to the root html element\n   */\n  className: PropTypes.string,\n  /**\n   * title specifies extra information and is added to a title attribute added to the root html element\n   * It is most often shown as a tooltip text when the mouse moves over the element.\n   */\n  title: PropTypes.string,\n  /**\n   * Whether the SiteOrigin is displayed as a chip or plain text.\n   * if false iconSrc and iconName props will not be used.\n   */\n  chip: PropTypes.bool,\n  /**\n   * The icon to display on the left side of the chip. If not provided, the iconSrc and iconName will be used.\n   */\n  leftIcon: PropTypes.node,\n  /**\n   * The icon to display on the right side of the chip.\n   */\n  rightIcon: PropTypes.node,\n};\n","import Spinner from './spinner.component';\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Spinner = ({ className = '', color = 'var(--color-icon-muted)' }) => {\n  return (\n    <div className={`spinner ${className}`}>\n      <svg\n        className=\"lds-spinner\"\n        width=\"100%\"\n        height=\"100%\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"xMidYMid\"\n        style={{ background: 'none' }}\n      >\n        <g transform=\"rotate(0 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.9166666666666666s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(30 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.8333333333333334s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(60 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.75s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(90 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.6666666666666666s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(120 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.5833333333333334s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(150 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.5s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(180 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.4166666666666667s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(210 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.3333333333333333s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(240 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.25s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(270 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.16666666666666666s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(300 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"-0.08333333333333333s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n        <g transform=\"rotate(330 50 50)\">\n          <rect x={45} y={0} rx={0} ry={0} width={10} height={30} fill={color}>\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              dur=\"1s\"\n              begin=\"0s\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nSpinner.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Spinner;\n","import Tabs from './tabs.component';\nimport Tab from './tab';\n\nexport { Tabs, Tab };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {\n  BlockSize,\n  FlexDirection,\n  FlexWrap,\n} from '../../../../../helpers/constants/design-system';\nimport { Box } from '../../../../component-library';\nimport Dropdown from '../../../dropdown';\n\nexport const DropdownTab = ({\n  activeClassName,\n  className,\n  'data-testid': dataTestId,\n  isActive,\n  onClick,\n  onChange,\n  tabIndex,\n  options,\n  selectedOption,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dropdownRef = useRef(null);\n\n  const selectOption = useCallback(\n    (option) => {\n      onChange(option);\n    },\n    [onChange],\n  );\n\n  const onTabClick = (event) => {\n    event.preventDefault();\n    onClick(tabIndex);\n  };\n\n  const selectedOptionName = options.find(\n    (option) => option.value === selectedOption,\n  )?.name;\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target) &&\n        isOpen\n      ) {\n        setIsOpen(false);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, isOpen]);\n\n  return (\n    <Box\n      as=\"li\"\n      className={classnames(\n        'tab',\n        className,\n        'transaction-insight-dropdown-wrapper',\n        {\n          'tab--active': isActive,\n          [activeClassName]: activeClassName && isActive,\n        },\n      )}\n      data-testid={dataTestId}\n      onClick={onTabClick}\n      dataTestId={dataTestId}\n      flexDirection={FlexDirection.Row}\n      flexWrap={FlexWrap.NoWrap}\n      height={BlockSize.Full}\n      style={{\n        cursor: 'pointer',\n        position: 'relative',\n        overflow: 'visible',\n      }}\n      title={selectedOptionName}\n    >\n      <Dropdown\n        className=\"transaction-insight-dropdown\"\n        onChange={(option) => selectOption(option)}\n        options={options}\n        selectedOption={selectedOption}\n        title=\"Transaction Insights\"\n        style={{\n          pointerEvents: isActive ? 'auto' : 'none',\n          fontFamily: 'var(--typography-s-body-md-font-family)',\n          fontWeight: 'var(--typography-s-body-md-font-weight)',\n          fontSize: 'var(--typography-s-body-md-font-size)',\n          lineHeight: 'var(--typography-s-body-md-line-height)',\n          letterSpacing: 'var(--typography-s-body-md-letter-spacing)',\n        }}\n      />\n    </Box>\n  );\n};\n\nDropdownTab.propTypes = {\n  activeClassName: PropTypes.string,\n  className: PropTypes.string,\n  'data-testid': PropTypes.string,\n  isActive: PropTypes.bool, // required, but added using React.cloneElement\n  options: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string,\n      value: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  selectedOption: PropTypes.string,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number, // required, but added using React.cloneElement\n};\n\nDropdownTab.defaultProps = {\n  activeClassName: undefined,\n  className: undefined,\n  onChange: undefined,\n  onClick: undefined,\n  selectedOption: undefined,\n};\n","import { DropdownTab } from './dropdown-tab';\n\nexport default DropdownTab;\n","import Tab from './tab.component';\n\nexport default Tab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {\n  BLOCK_SIZES,\n  DISPLAY,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport Box from '../../box';\nimport { Text } from '../../../component-library';\n\nconst Tab = (props) => {\n  const {\n    buttonClassName,\n    activeClassName,\n    className,\n    'data-testid': dataTestId,\n    isActive,\n    name,\n    onClick,\n    tabIndex,\n    tabKey,\n    // Declared, but we are not rendering it explictly (it's mainly to make JSX\n    // happy when being used in .tsx)\n    // eslint-disable-next-line no-unused-vars\n    children,\n  } = props;\n\n  return (\n    <Box\n      as=\"li\"\n      className={classnames('tab', className, {\n        'tab--active': isActive,\n        [activeClassName]: activeClassName && isActive,\n      })}\n      data-testid={dataTestId}\n      onClick={(event) => {\n        event.preventDefault();\n        onClick(tabIndex);\n      }}\n      key={tabKey}\n    >\n      <Text\n        as=\"button\"\n        padding={2}\n        textAlign={TextAlign.Center}\n        display={DISPLAY.BLOCK}\n        width={BLOCK_SIZES.FULL}\n        className={buttonClassName}\n        variant={TextVariant.bodyMd}\n        color={TextColor.inherit}\n      >\n        {name}\n      </Text>\n    </Box>\n  );\n};\n\nTab.propTypes = {\n  activeClassName: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  className: PropTypes.string,\n  'data-testid': PropTypes.string,\n  isActive: PropTypes.bool, // required, but added using React.cloneElement\n  name: PropTypes.node.isRequired,\n  tabKey: PropTypes.string.isRequired, // for Tabs selection purpose\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number, // required, but added using React.cloneElement\n  children: PropTypes.node, // required, but we are not rendering it explictly\n};\n\nTab.defaultProps = {\n  activeClassName: undefined,\n  buttonClassName: undefined,\n  className: undefined,\n  onClick: undefined,\n  'data-testid': undefined,\n};\n\nexport default Tab;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport Box from '../box';\nimport {\n  BackgroundColor,\n  DISPLAY,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\nimport { detectNfts } from '../../../store/actions';\n\nconst Tabs = ({\n  defaultActiveTabKey,\n  onTabClick,\n  children,\n  tabsClassName,\n  subHeader,\n}) => {\n  // This ignores any 'null' child elements that are a result of a conditional\n  // based on a feature flag setting.\n  const _getValidChildren = () => {\n    return React.Children.toArray(children).filter(Boolean);\n  };\n  const dispatch = useDispatch();\n\n  /**\n   * Returns the index of the child with the given key\n   *\n   * @param {string} tabKey - the name to search for\n   * @returns {number} the index of the child with the given name\n   * @private\n   */\n  const _findChildByKey = (tabKey) => {\n    return _getValidChildren().findIndex((c) => c?.props.tabKey === tabKey);\n  };\n\n  const [activeTabIndex, setActiveTabIndex] = useState(() =>\n    Math.max(_findChildByKey(defaultActiveTabKey), 0),\n  );\n\n  const handleTabClick = (tabIndex, tabKey) => {\n    if (tabIndex !== activeTabIndex) {\n      setActiveTabIndex(tabIndex);\n      onTabClick?.(tabKey);\n    }\n\n    if (tabKey === 'nfts') {\n      dispatch(detectNfts());\n    }\n  };\n\n  const renderTabs = () => {\n    const numberOfTabs = React.Children.count(_getValidChildren());\n\n    return React.Children.map(_getValidChildren(), (child, index) => {\n      const tabKey = child?.props.tabKey;\n      return (\n        child &&\n        React.cloneElement(child, {\n          onClick: (idx) => handleTabClick(idx, tabKey),\n          tabIndex: index,\n          isActive: numberOfTabs > 1 && index === activeTabIndex,\n        })\n      );\n    });\n  };\n  const renderActiveTabContent = () => {\n    const validChildren = _getValidChildren();\n\n    if (\n      (Array.isArray(validChildren) && !validChildren[activeTabIndex]) ||\n      (!Array.isArray(validChildren) && activeTabIndex !== 0)\n    ) {\n      throw new Error(`Tab at index '${activeTabIndex}' does not exist`);\n    }\n\n    return validChildren[activeTabIndex]\n      ? validChildren[activeTabIndex].props.children\n      : validChildren.props.children;\n  };\n\n  return (\n    <Box className=\"tabs\">\n      <Box\n        as=\"ul\"\n        display={DISPLAY.FLEX}\n        justifyContent={JustifyContent.flexStart}\n        backgroundColor={BackgroundColor.backgroundDefault}\n        className={classnames('tabs__list', tabsClassName)}\n        gap={1}\n      >\n        {renderTabs()}\n      </Box>\n      {subHeader}\n      <Box className=\"tabs__content\">{renderActiveTabContent()}</Box>\n    </Box>\n  );\n};\n\nexport default Tabs;\nTabs.propTypes = {\n  defaultActiveTabKey: PropTypes.string,\n  onTabClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  tabsClassName: PropTypes.string,\n  subHeader: PropTypes.node,\n};\n","import TextField from './text-field.component';\n\nexport default TextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MaterialTextField from '@material-ui/core/TextField';\n\n/**\n * @deprecated The `<TextField />` component has been deprecated in favor of the new `<TextField>` component from the component-library.\n * Please update your code to use the new `<TextField>` component instead, which can be found at ui/components/component-library/text-field/text-field.js.\n * You can find documentation for the new `TextField` component in the MetaMask Storybook:\n * {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-textfield--docs}\n * If you would like to help with the replacement of the old `TextField` component, please submit a pull request against this GitHub issue:\n * {@link https://github.com/MetaMask/metamask-extension/issues/20483}\n */\n\nconst inputLabelBase = {\n  transform: 'none',\n  transition: 'none',\n  position: 'initial',\n  color: 'var(--color-text-default)',\n};\n\nconst fontFamily = [\n  '\"Euclid Circular B\"',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n].join(', ');\n\nconst styles = {\n  materialLabel: {\n    '&$materialFocused': {\n      color: 'var(--color-text-alternative)',\n    },\n    '&$materialError': {\n      color: 'var(--color-text-alternative)',\n    },\n    fontWeight: '400',\n    color: 'var(--color-text-alternative)',\n  },\n  materialFocused: {},\n  materialUnderline: {\n    '&:before': {\n      borderBottom: '1px solid var(--color-text-default) !important', // Visible bottom border\n    },\n    '&:after': {\n      borderBottom: `2px solid var(--color-primary-default)`, // Animated bottom border\n    },\n  },\n  materialError: {},\n  materialWhitePaddedRoot: {\n    color: 'var(--color-text-alternative)',\n  },\n  materialWhitePaddedInput: {\n    padding: '8px',\n\n    '&::placeholder': {\n      color: 'var(--color-text-alternative)',\n    },\n  },\n  materialWhitePaddedFocused: {\n    color: 'var(--color-background-default)',\n  },\n  materialWhitePaddedUnderline: {\n    '&:after': {\n      borderBottom: '2px solid var(--color-background-default)', // @TODO: Replace with border-muted ?\n    },\n  },\n  // Non-material styles\n  formLabel: {\n    fontFamily,\n    '&$formLabelFocused': {\n      color: 'var(--color-text-alternative)',\n    },\n    '&$materialError': {\n      color: 'var(--color-text-alternative)',\n    },\n  },\n  formLabelFocused: {},\n  inputFocused: {},\n  inputRoot: {\n    fontFamily,\n    'label + &': {\n      marginTop: '9px',\n    },\n    backgroundColor: 'var(--color-background-default)',\n    border: '1px solid var(--color-border-default)',\n    color: 'var(--color-text-default)',\n    height: '48px',\n    borderRadius: '6px',\n    padding: '0 16px',\n    display: 'flex',\n    alignItems: 'center',\n    '&$inputFocused': {\n      border: '1px solid var(--color-primary-default)',\n    },\n  },\n  largeInputLabel: {\n    ...inputLabelBase,\n    fontSize: '1rem',\n  },\n  inputLabel: {\n    ...inputLabelBase,\n    fontSize: '.75rem',\n  },\n  inputMultiline: {\n    lineHeight: 'initial !important',\n  },\n};\n\nconst getMaterialThemeInputProps = ({\n  dir,\n  classes: { materialLabel, materialFocused, materialError, materialUnderline },\n  startAdornment,\n  endAdornment,\n  min,\n  max,\n  autoComplete,\n}) => ({\n  InputLabelProps: {\n    classes: {\n      root: materialLabel,\n      focused: materialFocused,\n      error: materialError,\n    },\n  },\n  InputProps: {\n    startAdornment,\n    endAdornment,\n    classes: {\n      underline: materialUnderline,\n    },\n    inputProps: {\n      dir,\n      min,\n      max,\n      autoComplete,\n    },\n  },\n});\n\nconst getMaterialWhitePaddedThemeInputProps = ({\n  dir,\n  classes: {\n    materialWhitePaddedRoot,\n    materialWhitePaddedFocused,\n    materialWhitePaddedInput,\n    materialWhitePaddedUnderline,\n  },\n  startAdornment,\n  endAdornment,\n  min,\n  max,\n  autoComplete,\n}) => ({\n  InputProps: {\n    startAdornment,\n    endAdornment,\n    classes: {\n      root: materialWhitePaddedRoot,\n      focused: materialWhitePaddedFocused,\n      input: materialWhitePaddedInput,\n      underline: materialWhitePaddedUnderline,\n    },\n    inputProps: {\n      dir,\n      min,\n      max,\n      autoComplete,\n    },\n  },\n});\n\nconst getBorderedThemeInputProps = ({\n  dir,\n  classes: {\n    formLabel,\n    formLabelFocused,\n    materialError,\n    largeInputLabel,\n    inputLabel,\n    inputRoot,\n    input,\n    inputFocused,\n  },\n  largeLabel,\n  startAdornment,\n  endAdornment,\n  min,\n  max,\n  autoComplete,\n}) => ({\n  InputLabelProps: {\n    shrink: true,\n    className: largeLabel ? largeInputLabel : inputLabel,\n    classes: {\n      root: formLabel,\n      focused: formLabelFocused,\n      error: materialError,\n    },\n  },\n  InputProps: {\n    startAdornment,\n    endAdornment,\n    classes: {\n      root: inputRoot,\n      input,\n      focused: inputFocused,\n    },\n    inputProps: {\n      dir,\n      min,\n      max,\n      autoComplete,\n    },\n  },\n});\n\nconst themeToInputProps = {\n  material: getMaterialThemeInputProps,\n  bordered: getBorderedThemeInputProps,\n  'material-white-padded': getMaterialWhitePaddedThemeInputProps,\n};\n\nconst TextField = ({\n  'data-testid': dataTestId,\n  error,\n  classes,\n  theme,\n  startAdornment,\n  endAdornment,\n  largeLabel,\n  dir,\n  min,\n  max,\n  autoComplete,\n  onPaste,\n  ...textFieldProps\n}) => {\n  const inputProps = themeToInputProps[theme]({\n    classes,\n    startAdornment,\n    endAdornment,\n    largeLabel,\n    dir,\n    min,\n    max,\n    autoComplete,\n  });\n\n  if (onPaste || dataTestId) {\n    if (!inputProps.InputProps) {\n      inputProps.InputProps = {};\n    }\n    if (!inputProps.InputProps.inputProps) {\n      inputProps.InputProps.inputProps = {};\n    }\n    inputProps.InputProps.inputProps.onPaste = onPaste;\n    inputProps.InputProps.inputProps['data-testid'] = dataTestId;\n  }\n\n  return (\n    <MaterialTextField\n      error={Boolean(error)}\n      helperText={error}\n      {...inputProps}\n      {...textFieldProps}\n    />\n  );\n};\n\nTextField.defaultProps = {\n  error: null,\n  dir: 'auto',\n  theme: 'bordered',\n};\n\nTextField.propTypes = {\n  /**\n   * A test ID that gets set on the input element\n   */\n  'data-testid': PropTypes.string,\n  /**\n   * Show error message\n   */\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /**\n   * Add custom CSS class\n   */\n  classes: PropTypes.object,\n  dir: PropTypes.string,\n  /**\n   * Give theme to the text field\n   */\n  theme: PropTypes.oneOf(['bordered', 'material', 'material-white-padded']),\n  startAdornment: PropTypes.element,\n  endAdornment: PropTypes.element,\n  /**\n   * Show large label\n   */\n  largeLabel: PropTypes.bool,\n  /**\n   * Define min number input\n   */\n  min: PropTypes.number,\n  /**\n   * Define max number input\n   */\n  max: PropTypes.number,\n  /**\n   * Show auto complete text\n   */\n  autoComplete: PropTypes.string,\n  onPaste: PropTypes.func,\n};\n\nexport default withStyles(styles)(TextField);\n","export const RESIZE = {\n  NONE: 'none',\n  BOTH: 'both',\n  HORIZONTAL: 'horizontal',\n  VERTICAL: 'vertical',\n  INITIAL: 'initial',\n  INHERIT: 'inherit',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classnames from 'classnames';\n\nimport {\n  BorderStyle,\n  BlockSize,\n  Size,\n  BorderColor,\n  BackgroundColor,\n} from '../../../helpers/constants/design-system';\nimport Box from '../box';\nimport { RESIZE } from './textarea.constants';\n\n/**\n * @deprecated `<TextArea />` has been deprecated in favor of the `<Textarea />`\n * component in ./ui/components/component-library/textarea/textarea.tsx.\n * See storybook documentation for BannerAlert here:\n * {@see {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-textarea--default-story#textarea}}\n *\n * Help to replace `<TextArea />` with `<Textarea />` by submitting a PR\n */\n\nconst TextArea = ({\n  className,\n  value,\n  onChange,\n  resize = RESIZE.BOTH,\n  scrollable = false,\n  height,\n  boxProps,\n  ...props\n}) => {\n  const textAreaClassnames = classnames(\n    'textarea',\n    className,\n    `textarea--resize-${resize}`,\n    {\n      'textarea--scrollable': scrollable,\n      'textarea--not-scrollable': !scrollable,\n    },\n  );\n  return (\n    <Box\n      backgroundColor={BackgroundColor.backgroundDefault}\n      borderColor={BorderColor.borderDefault}\n      borderRadius={Size.SM}\n      borderStyle={BorderStyle.solid}\n      padding={4}\n      width={BlockSize.Full}\n      {...boxProps}\n    >\n      {(boxClassName) => (\n        <textarea\n          required\n          style={{ height }}\n          className={classnames(boxClassName, textAreaClassnames)}\n          {...{ value, onChange, ...props }}\n        />\n      )}\n    </Box>\n  );\n};\n\nTextArea.propTypes = {\n  /**\n   * The height of the Textarea component. Accepts any number, px or % value\n   */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Optional additional className to add to the Textarea component\n   */\n  className: PropTypes.string,\n  /**\n   * Value is the text of the TextArea component\n   */\n  value: PropTypes.string,\n  /**\n   * The onChange function of the textarea\n   */\n  onChange: PropTypes.func,\n  /**\n   * Resize is the resize capability of the textarea accepts all valid css values\n   * Defaults to \"both\"\n   */\n  resize: PropTypes.oneOf(Object.values(RESIZE)),\n  /**\n   * Whether the Textarea should be scrollable. Applies overflow-y: scroll to the textarea\n   * Defaults to false\n   */\n  scrollable: PropTypes.bool,\n  /**\n   * The Textarea component accepts all Box component props inside the boxProps object\n   */\n  boxProps: PropTypes.shape({\n    ...Box.propTypes,\n  }),\n};\n\nexport default TextArea;\n","import ToggleButton from './toggle-button.component';\n\nexport default ToggleButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactToggleButton from 'react-toggle-button';\nimport classnames from 'classnames';\nimport { lightTheme, darkTheme } from '@metamask/design-tokens';\nimport { useTheme } from '../../../hooks/useTheme';\n\nconst trackStyle = {\n  width: '40px',\n  height: '24px',\n  padding: '0px',\n  borderRadius: '26px',\n  border: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst offTrackStyle = {\n  ...trackStyle,\n  border: 'none',\n};\n\nconst thumbStyle = {\n  width: '18px',\n  height: '18px',\n  display: 'flex',\n  boxShadow: 'var(--shadow-size-xs) var(--color-shadow-default)',\n  alignSelf: 'center',\n  borderRadius: '50%',\n  position: 'relative',\n};\n\nconst colorsLight = {\n  activeThumb: {\n    base: lightTheme.colors.primary.inverse,\n  },\n  inactiveThumb: {\n    base: lightTheme.colors.primary.inverse,\n  },\n  active: {\n    base: lightTheme.colors.primary.default,\n    hover: lightTheme.colors.primary.defaultHover,\n  },\n  inactive: {\n    base: lightTheme.colors.icon.muted,\n    hover: lightTheme.colors.icon.muted,\n  },\n};\n\nconst colorsDark = {\n  activeThumb: {\n    base: lightTheme.colors.primary.inverse,\n  },\n  inactiveThumb: {\n    base: lightTheme.colors.primary.inverse,\n  },\n  active: {\n    base: darkTheme.colors.primary.default,\n    hover: darkTheme.colors.primary.defaultHover,\n  },\n  inactive: {\n    base: darkTheme.colors.icon.muted,\n    hover: darkTheme.colors.icon.muted,\n  },\n};\n\nconst ToggleButton = (props) => {\n  const {\n    value,\n    onToggle,\n    offLabel,\n    onLabel,\n    disabled,\n    className,\n    dataTestId,\n  } = props;\n\n  const modifier = value ? 'on' : 'off';\n\n  const theme = useTheme();\n\n  return (\n    <label\n      tabIndex=\"0\"\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') {\n          onToggle(value);\n        }\n      }}\n      className={classnames(\n        'toggle-button',\n        `toggle-button--${modifier}`,\n        {\n          'toggle-button--disabled': disabled,\n        },\n        className,\n      )}\n    >\n      <ReactToggleButton\n        value={value}\n        onToggle={disabled ? undefined : onToggle}\n        activeLabel=\"\"\n        inactiveLabel=\"\"\n        trackStyle={value ? trackStyle : offTrackStyle}\n        thumbStyle={thumbStyle}\n        thumbAnimateRange={[3, 18]}\n        colors={theme === 'light' ? colorsLight : colorsDark}\n        passThroughInputProps={{\n          'data-testid': dataTestId,\n        }}\n      />\n      <div className=\"toggle-button__status\">\n        <span className=\"toggle-button__label-off\">{offLabel}</span>\n        <span className=\"toggle-button__label-on\">{onLabel}</span>\n      </div>\n    </label>\n  );\n};\n\nToggleButton.propTypes = {\n  /**\n   * ToggleButton value\n   */\n  value: PropTypes.bool,\n  /**\n   * The onChange handler of the ToggleButton\n   */\n  onToggle: PropTypes.func,\n  /**\n   * Label text when toggle is off\n   */\n  offLabel: PropTypes.string,\n  /**\n   * Label text when toggle is on\n   */\n  onLabel: PropTypes.string,\n  /**\n   * Disables ToggleButton if true. Set to false as default\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Additional className to add to the ToggleButton\n   */\n  className: PropTypes.string,\n  /**\n   * A test id for the toggle button\n   */\n  dataTestId: PropTypes.string,\n};\n\nexport default ToggleButton;\n","export { default } from './token-balance';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CurrencyDisplay from '../currency-display';\nimport { useTokenTracker } from '../../../hooks/useTokenTracker';\nimport { useTokenFiatAmount } from '../../../hooks/useTokenFiatAmount';\nimport { useIsOriginalTokenSymbol } from '../../../hooks/useIsOriginalTokenSymbol';\nimport { Text } from '../../component-library';\nimport {\n  FontWeight,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\n\nexport default function TokenBalance({\n  className,\n  token,\n  showFiat,\n  ...restProps\n}) {\n  const { tokensWithBalances } = useTokenTracker({ tokens: [token] });\n  const { string, symbol, address } = tokensWithBalances[0] || {};\n  const formattedFiat = useTokenFiatAmount(address, string, symbol);\n  const isOriginalTokenSymbol = useIsOriginalTokenSymbol(address, symbol);\n  const fiatValue = isOriginalTokenSymbol ? formattedFiat : null;\n  if (showFiat) {\n    return (\n      <Text fontWeight={FontWeight.Medium} variant={TextVariant.bodyMd}>\n        {fiatValue}\n      </Text>\n    );\n  }\n  return (\n    <CurrencyDisplay\n      className={className}\n      displayValue={string || ''}\n      suffix={symbol || ''}\n      {...restProps}\n    />\n  );\n}\n\nTokenBalance.propTypes = {\n  className: PropTypes.string,\n  token: PropTypes.shape({\n    address: PropTypes.string.isRequired,\n    decimals: PropTypes.number,\n    symbol: PropTypes.string,\n  }).isRequired,\n  showFiat: PropTypes.bool,\n};\n\nTokenBalance.defaultProps = {\n  className: undefined,\n};\n","export { default } from './tooltip';\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Tooltip as ReactTippy } from 'react-tippy';\n\nexport default class Tooltip extends PureComponent {\n  static defaultProps = {\n    arrow: true,\n    children: null,\n    containerClassName: '',\n    html: null,\n    interactive: undefined,\n    onHidden: null,\n    distance: 0,\n    position: 'left',\n    offset: 0,\n    open: undefined,\n    size: 'small',\n    title: null,\n    trigger: 'mouseenter focus',\n    wrapperClassName: undefined,\n    theme: '',\n    tag: 'div',\n    wrapperStyle: {},\n  };\n\n  static propTypes = {\n    arrow: PropTypes.bool,\n    children: PropTypes.node,\n    containerClassName: PropTypes.string,\n    disabled: PropTypes.bool,\n    html: PropTypes.node,\n    distance: PropTypes.number,\n    interactive: PropTypes.bool,\n    offset: PropTypes.number,\n    onHidden: PropTypes.func,\n    open: PropTypes.bool,\n    position: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n    size: PropTypes.oneOf(['small', 'regular', 'big']),\n    title: PropTypes.string,\n    trigger: PropTypes.any,\n    wrapperClassName: PropTypes.string,\n    style: PropTypes.object,\n    wrapperStyle: PropTypes.object,\n    theme: PropTypes.string,\n    tabIndex: PropTypes.number,\n    tag: PropTypes.string,\n  };\n\n  render() {\n    const {\n      arrow,\n      children,\n      containerClassName,\n      disabled,\n      position,\n      html,\n      interactive,\n      size,\n      distance,\n      title,\n      trigger,\n      onHidden,\n      offset,\n      open,\n      wrapperClassName,\n      style,\n      wrapperStyle,\n      theme,\n      tabIndex,\n      tag,\n    } = this.props;\n\n    if (!title && !html) {\n      return <div className={wrapperClassName}>{children}</div>;\n    }\n\n    return React.createElement(\n      tag,\n      { className: wrapperClassName, style: wrapperStyle },\n      <ReactTippy\n        arrow={arrow}\n        className={containerClassName}\n        disabled={disabled}\n        hideOnClick={false}\n        distance={distance}\n        html={html}\n        interactive={interactive}\n        onHidden={onHidden}\n        position={position}\n        size={size}\n        offset={offset}\n        style={style}\n        title={disabled ? '' : title}\n        trigger={trigger}\n        open={open}\n        theme={`tippy-tooltip--mm-custom ${theme}`} // Required for correct theming\n        tabIndex={tabIndex || 0}\n        tag={tag}\n      >\n        {children}\n      </ReactTippy>,\n    );\n  }\n}\n","export { default } from './truncated-definition-list';\n","import { pick } from 'lodash';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BorderColor, Size } from '../../../helpers/constants/design-system';\nimport Box from '../box';\nimport Button from '../button';\nimport DefinitionList from '../definition-list/definition-list';\nimport Popover from '../popover';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\n\nexport default function TruncatedDefinitionList({\n  dictionary,\n  tooltips,\n  warnings,\n  prefaceKeys,\n  title,\n}) {\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const t = useI18nContext();\n\n  const renderDefinitionList = (isFullList) => (\n    <DefinitionList\n      gap={Size.MD}\n      tooltips={tooltips}\n      warnings={warnings}\n      dictionary={isFullList ? dictionary : pick(dictionary, prefaceKeys)}\n    />\n  );\n\n  const renderButton = () => (\n    <Button\n      className=\"truncated-definition-list__view-more\"\n      type=\"link\"\n      onClick={() => setIsPopoverOpen(true)}\n    >\n      {t(process.env.CHAIN_PERMISSIONS ? 'seeDetails' : 'viewAllDetails')}\n    </Button>\n  );\n\n  const renderPopover = () =>\n    isPopoverOpen && (\n      <Popover\n        title={title}\n        open={isPopoverOpen}\n        onClose={() => setIsPopoverOpen(false)}\n        footer={\n          <Button\n            type=\"primary\"\n            style={{ width: '50%' }}\n            onClick={() => setIsPopoverOpen(false)}\n          >\n            {t('close')}\n          </Button>\n        }\n      >\n        <Box padding={6} paddingTop={0}>\n          {renderDefinitionList(true)}\n        </Box>\n      </Popover>\n    );\n\n  const renderContent = () => {\n    if (process.env.CHAIN_PERMISSIONS) {\n      return isPopoverOpen ? (\n        renderDefinitionList(true)\n      ) : (\n        <>\n          {renderDefinitionList(false)}\n          {renderButton()}\n        </>\n      );\n    }\n    return (\n      <>\n        {renderDefinitionList(false)}\n        {renderButton()}\n        {renderPopover()}\n      </>\n    );\n  };\n\n  return (\n    <Box\n      margin={6}\n      padding={4}\n      paddingBottom={3}\n      borderRadius={Size.LG}\n      borderColor={BorderColor.borderMuted}\n    >\n      {renderContent()}\n    </Box>\n  );\n}\n\nTruncatedDefinitionList.propTypes = {\n  dictionary: DefinitionList.propTypes.dictionary,\n  tooltips: DefinitionList.propTypes.dictionary,\n  warnings: DefinitionList.propTypes.dictionary,\n  title: PropTypes.string,\n  prefaceKeys: PropTypes.arrayOf(PropTypes.string),\n};\n","export { default } from './typography';\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  Color,\n  FONT_WEIGHT,\n  FONT_STYLE,\n  TextAlign,\n  TypographyVariant,\n  OVERFLOW_WRAP,\n} from '../../../helpers/constants/design-system';\nimport Box, { MultipleSizesAndAuto } from '../box';\n\nconst { H6, H7, H8, H9 } = TypographyVariant;\n\nexport const ValidColors = [\n  Color.textDefault,\n  Color.textAlternative,\n  Color.textMuted,\n  Color.overlayInverse,\n  Color.primaryDefault,\n  Color.primaryInverse,\n  Color.errorDefault,\n  Color.errorInverse,\n  Color.successDefault,\n  Color.successInverse,\n  Color.sepoliaInverse,\n  Color.warningDefault,\n  Color.warningInverse,\n  Color.infoDefault,\n  Color.infoInverse,\n  Color.goerli,\n  Color.sepolia,\n  Color.goerliInverse,\n  Color.sepoliaInverse,\n  Color.lineaGoerli,\n  Color.lineaGoerliInverse,\n  Color.lineaSepolia,\n  Color.lineaSepoliaInverse,\n  Color.lineaMainnet,\n  Color.lineaMainnetInverse,\n];\n\nexport const ValidTags = [\n  'dd',\n  'div',\n  'dt',\n  'em',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'li',\n  'p',\n  'span',\n  'strong',\n  'ul',\n  'label',\n];\n\n/**\n * @deprecated `<Typography />` has been deprecated in favor of the `<Text />` component in ./ui/components/component-library/text/text.js\n *\n * See storybook documentation for Text here https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-text--default-story#text\n *\n * Help to replace `Typography` with `Text` by submitting PRs against https://github.com/MetaMask/metamask-extension/issues/17670\n */\n\nexport default function Typography({\n  variant = TypographyVariant.paragraph,\n  color = Color.textDefault,\n  fontWeight = 'normal',\n  fontStyle = 'normal',\n  align,\n  overflowWrap,\n  title,\n  as,\n  margin,\n  marginTop = 1,\n  marginRight,\n  marginBottom = 1,\n  marginLeft,\n  boxProps = {},\n  className,\n  testId,\n  children,\n}) {\n  let Tag = as ?? variant;\n  let strongTagFontWeight;\n\n  if (Tag === 'strong') {\n    strongTagFontWeight = FONT_WEIGHT.BOLD;\n  }\n\n  const computedClassName = classnames(\n    'typography',\n    className,\n    `typography--${variant}`,\n    `typography--weight-${strongTagFontWeight || fontWeight}`,\n    `typography--style-${fontStyle}`,\n    {\n      [`typography--align-${align}`]: Boolean(align),\n      [`typography--color-${color}`]: Boolean(color),\n      [`typography--overflowwrap-${overflowWrap}`]: Boolean(overflowWrap),\n    },\n  );\n\n  if (Tag === TypographyVariant.paragraph) {\n    Tag = 'p';\n  } else if ([H7, H8, H9].includes(Tag)) {\n    Tag = H6;\n  }\n\n  return (\n    <Box\n      {...{\n        margin,\n        marginTop,\n        marginRight,\n        marginBottom,\n        marginLeft,\n        ...boxProps,\n      }}\n    >\n      {(boxClassName) => (\n        <Tag\n          className={classnames(boxClassName, computedClassName)}\n          title={title}\n          data-testid={testId}\n        >\n          {children}\n        </Tag>\n      )}\n    </Box>\n  );\n}\n\nTypography.propTypes = {\n  /**\n   * The variation of font sizes of the Typography component\n   */\n  variant: PropTypes.oneOf(Object.values(TypographyVariant)),\n  /**\n   * The color of the Typography component Should use the COLOR object from\n   * ./ui/helpers/constants/design-system.js\n   */\n  color: PropTypes.oneOf(ValidColors),\n  /**\n   * The font-weight of the Typography component. Should use the FONT_WEIGHT object from\n   * ./ui/helpers/constants/design-system.js\n   */\n  fontWeight: PropTypes.oneOf(Object.values(FONT_WEIGHT)),\n  /**\n   * The font-style of the Typography component. Should use the FONT_STYLE object from\n   * ./ui/helpers/constants/design-system.js\n   */\n  fontStyle: PropTypes.oneOf(Object.values(FONT_STYLE)),\n  /**\n   * The text-align of the Typography component. Should use the TextAlign enum from\n   * ./ui/helpers/constants/design-system.js\n   */\n  align: PropTypes.oneOf(Object.values(TextAlign)),\n  /**\n   * The overflow-wrap of the Typography component. Should use the OVERFLOW_WRAP object from\n   * ./ui/helpers/constants/design-system.js\n   */\n  overflowWrap: PropTypes.oneOf(Object.values(OVERFLOW_WRAP)),\n  /**\n   * Changes the root html element of the Typography component.\n   */\n  as: PropTypes.oneOf(ValidTags),\n  /**\n   * Adds margin to the Typography component should use valid size\n   */\n  margin: MultipleSizesAndAuto,\n  marginTop: MultipleSizesAndAuto,\n  marginBottom: MultipleSizesAndAuto,\n  marginRight: MultipleSizesAndAuto,\n  marginLeft: MultipleSizesAndAuto,\n  /**\n   * Used to pass any valid Box component props such as margin or padding\n   * to the Typography component\n   */\n  boxProps: PropTypes.shape({\n    ...Box.propTypes,\n  }),\n  /**\n   * Additional className to assign the Typography component\n   */\n  className: PropTypes.string,\n  /**\n   * Title attribute to include on the element. Will show as tooltip on hover.\n   */\n  title: PropTypes.string,\n  /**\n   * Data test ID for the Tag component\n   */\n  testId: PropTypes.string,\n  /**\n   * The text content of the Typography component\n   */\n  children: PropTypes.node.isRequired,\n};\n","export { default } from './unit-input.component';\n","import React, { PureComponent } from 'react';\nimport { Tooltip } from 'react-tippy';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst INPUT_HORIZONTAL_PADDING = 4;\n\nfunction removeLeadingZeroes(str) {\n  return str.replace(/^0*(?=\\d)/u, '');\n}\n\n// accounts for comma input\nconst DECIMAL_INPUT_REGEX = /^\\d*(\\.|,)?\\d*$/u;\n\n/**\n * Component that attaches a suffix or unit of measurement trailing user input, ex. 'ETH'. Also\n * allows rendering a child component underneath the input to, for example, display conversions of\n * the shown suffix.\n */\nexport default class UnitInput extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    dataTestId: PropTypes.string,\n    children: PropTypes.node,\n    actionComponent: PropTypes.node,\n    error: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    placeholder: PropTypes.string,\n    suffix: PropTypes.string,\n    hideSuffix: PropTypes.bool,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    keyPressRegex: PropTypes.instanceOf(RegExp),\n    isDisabled: PropTypes.bool,\n    isFocusOnInput: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    value: '',\n    placeholder: '0',\n    keyPressRegex: DECIMAL_INPUT_REGEX,\n  };\n\n  state = {\n    value: this.props.value,\n    isOverflowing: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { value: prevPropsValue } = prevProps;\n    const { value: propsValue } = this.props;\n    const { value: stateValue } = this.state;\n\n    if (\n      prevPropsValue !== propsValue &&\n      Number(propsValue) !== Number(stateValue)\n    ) {\n      this.setState({ ...this.state, value: propsValue });\n    }\n  }\n\n  handleFocus = () => {\n    if (!['INPUT', 'TEXTAREA'].includes(document.activeElement.tagName)) {\n      this.unitInput.focus();\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.isFocusOnInput) {\n      document.addEventListener('keypress', this.handleFocus);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.handleFocus);\n  }\n\n  handleInputFocus = ({ target: { value } }) => {\n    if (value === '0') {\n      this.setState({\n        ...this.state,\n        isOverflowing: false,\n        value: '',\n      });\n    }\n  };\n\n  handleInputBlur = ({ target: { value } }) => {\n    if (value === '') {\n      this.setState({\n        ...this.state,\n        isOverflowing: false,\n        value: '0',\n      });\n    }\n\n    this.props.onBlur && this.props.onBlur(value);\n    this.unitInput.scrollTo && this.unitInput.scrollTo(0, 0);\n  };\n\n  handleChange = (event) => {\n    const { value: userInput } = event.target;\n    let value = userInput;\n\n    if (userInput.length && userInput.length > 1) {\n      value = removeLeadingZeroes(userInput);\n    }\n\n    if (!this.props.keyPressRegex.test(value)) {\n      event.preventDefault();\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      isOverflowing: this.getIsOverflowing(),\n      value,\n    });\n\n    this.props.onChange(value);\n  };\n\n  handleOnKeyPress = (e) => {\n    const isNumericInput = DECIMAL_INPUT_REGEX.test(e.key);\n    if (!isNumericInput) {\n      e.preventDefault();\n    }\n  };\n\n  // imperatively updates the overflow when the input is changed upstreamed\n  updateIsOverflowing = () => {\n    this.setState({\n      ...this.state,\n      isOverflowing: this.getIsOverflowing(),\n    });\n  };\n\n  getInputWidth(value) {\n    const valueString = String(value);\n    const valueLength = valueString.length || 1;\n    const decimalPointDeficit = valueString.match(/\\./u) ? -0.5 : 0;\n    return `${valueLength + decimalPointDeficit + 0.5}ch`;\n  }\n\n  getIsOverflowing() {\n    let isOverflowing = false;\n\n    if (this.unitInput) {\n      const { offsetWidth, scrollWidth } = this.unitInput;\n\n      // overflowing when scrollable width exceeds padding\n      isOverflowing = scrollWidth - offsetWidth > INPUT_HORIZONTAL_PADDING;\n    }\n\n    return isOverflowing;\n  }\n\n  render() {\n    const {\n      className,\n      error,\n      placeholder,\n      hideSuffix,\n      suffix,\n      actionComponent,\n      children,\n      dataTestId,\n      isDisabled,\n    } = this.props;\n    const { value, isOverflowing } = this.state;\n\n    return (\n      <div\n        className={classnames(\n          'unit-input',\n          { 'unit-input--error': error },\n          className,\n        )}\n        onClick={this.handleFocus}\n      >\n        <div className=\"unit-input__inputs\">\n          <Tooltip\n            title={value}\n            disabled={!isOverflowing || !value}\n            arrow\n            hideOnClick={false}\n            className=\"unit-input__input-container\"\n            // explicitly inherit display since Tooltip will default to block\n            style={{ display: 'inherit' }}\n          >\n            <input\n              disabled={isDisabled}\n              data-testid={dataTestId}\n              type=\"number\"\n              dir=\"ltr\"\n              className={classnames('unit-input__input')}\n              value={value}\n              placeholder={placeholder}\n              onChange={this.handleChange}\n              onBlur={this.handleInputBlur}\n              onFocus={this.handleInputFocus}\n              onKeyPress={this.handleOnKeyPress}\n              min={0}\n              step=\"any\"\n              style={{ width: this.getInputWidth(value) }}\n              ref={(ref) => {\n                this.unitInput = ref;\n              }}\n              autoFocus\n            />\n            {suffix && !hideSuffix ? (\n              <div className=\"unit-input__suffix\">{suffix}</div>\n            ) : null}\n          </Tooltip>\n          {children}\n        </div>\n        {actionComponent}\n      </div>\n    );\n  }\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Popover from '../popover';\nimport Button from '../button';\nimport TextField from '../text-field';\n\nimport { I18nContext } from '../../../contexts/i18n';\n\nimport Identicon from '../identicon';\nimport { getTokenList } from '../../../selectors';\n\nexport default function UpdateNicknamePopover({\n  address,\n  nickname = '',\n  memo = '',\n  onAdd,\n  onClose,\n}) {\n  const t = useContext(I18nContext);\n\n  const [nicknameInput, setNicknameInput] = useState(\n    nickname === null ? '' : nickname,\n  );\n  const [memoInput, setMemoInput] = useState(memo === null ? '' : memo);\n\n  const handleNicknameChange = (event) => {\n    setNicknameInput(event.target.value);\n  };\n\n  const handleMemoChange = (event) => {\n    setMemoInput(event.target.value);\n  };\n\n  const closePopover = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const onCancel = () => {\n    onClose();\n  };\n\n  const onSubmit = () => {\n    onAdd(address, nicknameInput, memoInput);\n    onClose();\n  };\n\n  const tokenList = useSelector(getTokenList);\n\n  return (\n    <Popover\n      title={nickname ? t('editAddressNickname') : t('addANickname')}\n      onClose={closePopover}\n      className=\"update-nickname__wrapper\"\n      footer={\n        <>\n          <Button\n            className=\"update-nickname__cancel\"\n            type=\"secondary\"\n            onClick={onCancel}\n          >\n            {t('cancel')}\n          </Button>\n          <Button\n            className=\"update-nickname__save\"\n            type=\"primary\"\n            onClick={onSubmit}\n            disabled={!nicknameInput}\n          >\n            {t('save')}\n          </Button>\n        </>\n      }\n    >\n      <div className=\"update-nickname__content\">\n        <Identicon\n          className=\"update-nickname__content__indenticon\"\n          address={address}\n          diameter={36}\n          image={tokenList[address.toLowerCase()]?.iconUrl}\n        />\n        <label className=\"update-nickname__content__label--capitalized\">\n          {t('address')}\n        </label>\n        <div className=\"update-nickname__content__address\">{address}</div>\n        <div className=\"update-nickname__content__nickname-label\">\n          {t('nickname')}\n        </div>\n        <TextField\n          className=\"update-nickname__content__text-field\"\n          value={nicknameInput}\n          onChange={handleNicknameChange}\n          placeholder={t('addANickname')}\n          fullWidth\n        />\n        <div className=\"update-nickname__content__label--capitalized\">\n          {t('memo')}\n        </div>\n        <TextField\n          type=\"text\"\n          id=\"memo\"\n          value={memoInput}\n          onChange={handleMemoChange}\n          placeholder={t('addMemo')}\n          fullWidth\n          margin=\"dense\"\n          multiline\n          rows={3}\n          classes={{\n            inputMultiline: 'update-nickname__content__text-area',\n            inputRoot: 'update-nickname__content__text-area-wrapper',\n          }}\n        />\n      </div>\n    </Popover>\n  );\n}\n\nUpdateNicknamePopover.propTypes = {\n  nickname: PropTypes.string,\n  address: PropTypes.string,\n  memo: PropTypes.string,\n  onAdd: PropTypes.func,\n  onClose: PropTypes.func,\n};\n","export { default } from './url-icon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport IconWithFallback from '../icon-with-fallback';\n\n/**\n * @deprecated `<UrlIcon />` has been deprecated in favor of one of the avatar components `<AvatarNetwork />`, `<AvatarToken/>` or `<AvatarFavicon/>`\n * component in ./ui/components/component-library/avatar-token/\n * See storybook documentation for BannerAlert here:\n * {@see {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-avatartoken--docs}}\n *\n * Help to replace `UrlIcon` with `AvatarToken` by submitting a PR\n */\n\nexport default function UrlIcon({ url, className, name, fallbackClassName }) {\n  return (\n    <IconWithFallback\n      className={classnames('url-icon', className)}\n      icon={url}\n      name={name}\n      fallbackClassName={classnames('url-icon__fallback', fallbackClassName)}\n    />\n  );\n}\n\nUrlIcon.propTypes = {\n  url: PropTypes.string,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  fallbackClassName: PropTypes.string,\n};\n","export const ETH_DEFAULT_DECIMALS = 8;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useCurrencyRatePolling from '../hooks/useCurrencyRatePolling';\n\nexport const CurrencyRateProvider = ({ children }) => {\n  useCurrencyRatePolling();\n\n  return <>{children}</>;\n};\n\nCurrencyRateProvider.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useGasFeeInputs } from '../pages/confirmations/hooks/useGasFeeInputs';\n\nexport const GasFeeContext = createContext({});\n\nexport const GasFeeContextProvider = ({\n  children,\n  defaultEstimateToUse,\n  transaction,\n  minimumGasLimit,\n  editGasMode,\n}) => {\n  const gasFeeDetails = useGasFeeInputs(\n    defaultEstimateToUse,\n    transaction,\n    minimumGasLimit,\n    editGasMode,\n  );\n  return (\n    <GasFeeContext.Provider value={gasFeeDetails}>\n      {children}\n    </GasFeeContext.Provider>\n  );\n};\n\nexport function useGasFeeContext() {\n  return useContext(GasFeeContext);\n}\n\nGasFeeContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  defaultEstimateToUse: PropTypes.string,\n  transaction: PropTypes.object,\n  minimumGasLimit: PropTypes.string,\n  editGasMode: PropTypes.string,\n};\n","export { MetamaskNotificationsProvider } from './metamask-notifications';\n","import React, { createContext, useContext, useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport type { NotificationServicesController } from '@metamask/notification-services-controller';\nimport { useListNotifications } from '../../hooks/metamask-notifications/useNotifications';\nimport { useAccountSyncingEffect } from '../../hooks/metamask-notifications/useProfileSyncing';\nimport { selectIsProfileSyncingEnabled } from '../../selectors/metamask-notifications/profile-syncing';\nimport { selectIsMetamaskNotificationsEnabled } from '../../selectors/metamask-notifications/metamask-notifications';\nimport { getUseExternalServices } from '../../selectors';\nimport { getIsUnlocked } from '../../ducks/metamask/metamask';\n\ntype Notification = NotificationServicesController.Types.INotification;\n\ntype MetamaskNotificationsContextType = {\n  listNotifications: () => void;\n  notificationsData?: Notification[];\n  isLoading: boolean;\n  error?: unknown;\n};\n\nconst MetamaskNotificationsContext = createContext<\n  MetamaskNotificationsContextType | undefined\n>(undefined);\n\nexport const useMetamaskNotificationsContext = () => {\n  const context = useContext(MetamaskNotificationsContext);\n  if (!context) {\n    throw new Error(\n      'useNotificationsContext must be used within a MetamaskNotificationsProvider',\n    );\n  }\n  return context;\n};\n\nexport const MetamaskNotificationsProvider: React.FC = ({ children }) => {\n  const isProfileSyncingEnabled = useSelector(selectIsProfileSyncingEnabled);\n  const isNotificationsEnabled = useSelector(\n    selectIsMetamaskNotificationsEnabled,\n  );\n  const basicFunctionality = useSelector(getUseExternalServices);\n  const isUnlocked = useSelector(getIsUnlocked);\n  const { listNotifications, notificationsData, isLoading, error } =\n    useListNotifications();\n\n  const shouldFetchNotifications = useMemo(\n    () => isProfileSyncingEnabled && isNotificationsEnabled,\n    [isProfileSyncingEnabled, isNotificationsEnabled],\n  );\n\n  useAccountSyncingEffect();\n\n  useEffect(() => {\n    if (basicFunctionality && shouldFetchNotifications && isUnlocked) {\n      listNotifications();\n    }\n  }, [\n    shouldFetchNotifications,\n    listNotifications,\n    basicFunctionality,\n    isUnlocked,\n  ]);\n\n  return (\n    <MetamaskNotificationsContext.Provider\n      value={{ listNotifications, notificationsData, isLoading, error }}\n    >\n      {children}\n    </MetamaskNotificationsContext.Provider>\n  );\n};\n","/**\n * This file is intended to be renamed to metametrics.js once the conversion is complete.\n * MetaMetrics is our own brand, and should remain aptly named regardless of the underlying\n * metrics system. This file implements Segment analytics tracking.\n */\nimport React, {\n  Component,\n  createContext,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { captureException, captureMessage } from '@sentry/browser';\n\nimport { omit } from 'lodash';\nimport { getEnvironmentType } from '../../app/scripts/lib/util';\nimport { PATH_NAME_MAP } from '../helpers/constants/routes';\nimport { MetaMetricsContextProp } from '../../shared/constants/metametrics';\nimport { useSegmentContext } from '../hooks/useSegmentContext';\n\nimport { trackMetaMetricsEvent, trackMetaMetricsPage } from '../store/actions';\n\n// type imports\n/**\n * @typedef {import('../../shared/constants/metametrics').MetaMetricsEventPayload} MetaMetricsEventPayload\n * @typedef {import('../../shared/constants/metametrics').MetaMetricsEventOptions} MetaMetricsEventOptions\n * @typedef {import('../../shared/constants/metametrics').MetaMetricsPageObject} MetaMetricsPageObject\n * @typedef {import('../../shared/constants/metametrics').MetaMetricsReferrerObject} MetaMetricsReferrerObject\n */\n\n// types\n/**\n * @typedef {Omit<MetaMetricsEventPayload, 'environmentType' | 'page' | 'referrer'>} UIMetricsEventPayload\n */\n/**\n * @typedef {(\n *  payload: UIMetricsEventPayload,\n *  options?: MetaMetricsEventOptions\n * ) => Promise<void>} UITrackEventMethod\n */\n\n/**\n * @type {React.Context<UITrackEventMethod>}\n */\nexport const MetaMetricsContext = createContext(() => {\n  captureException(\n    Error(\n      `MetaMetrics context function was called from a react node that is not a descendant of a MetaMetrics context provider`,\n    ),\n  );\n});\n\nconst PATHS_TO_CHECK = Object.keys(PATH_NAME_MAP);\n\nexport function MetaMetricsProvider({ children }) {\n  const location = useLocation();\n  const context = useSegmentContext();\n\n  // Sometimes we want to track context properties inside the event's \"properties\" object.\n  const addContextPropsIntoEventProperties = useCallback(\n    (payload, options) => {\n      const fields = options?.contextPropsIntoEventProperties;\n      if (!fields || fields.length === 0) {\n        return;\n      }\n      if (!payload.properties) {\n        payload.properties = {};\n      }\n      if (fields.includes(MetaMetricsContextProp.PageTitle)) {\n        payload.properties[MetaMetricsContextProp.PageTitle] =\n          context.page?.title;\n      }\n    },\n    [context.page?.title],\n  );\n\n  /**\n   * @type {UITrackEventMethod}\n   */\n  const trackEvent = useCallback(\n    (payload, options) => {\n      addContextPropsIntoEventProperties(payload, options);\n      trackMetaMetricsEvent(\n        {\n          ...payload,\n          environmentType: getEnvironmentType(),\n          ...context,\n        },\n        options,\n      );\n    },\n    [addContextPropsIntoEventProperties, context],\n  );\n\n  // Used to prevent double tracking page calls\n  const previousMatch = useRef();\n\n  /**\n   * Anytime the location changes, track a page change with segment.\n   * Previously we would manually track changes to history and keep a\n   * reference to the previous url, but with page tracking we can see\n   * which page the user is on and their navigation path.\n   */\n  useEffect(() => {\n    const environmentType = getEnvironmentType();\n    const match = matchPath(location.pathname, {\n      path: PATHS_TO_CHECK,\n      exact: true,\n      strict: true,\n    });\n    // Start by checking for a missing match route. If this falls through to\n    // the else if, then we know we have a matched route for tracking.\n    if (!match) {\n      captureMessage(`Segment page tracking found unmatched route`, {\n        extra: {\n          previousMatch,\n          currentPath: location.pathname,\n        },\n      });\n    } else if (\n      previousMatch.current !== match.path &&\n      !(\n        environmentType === 'notification' &&\n        match.path === '/' &&\n        previousMatch.current === undefined\n      )\n    ) {\n      // When a notification window is open by a Dapp we do not want to track\n      // the initial home route load that can sometimes happen. To handle\n      // this we keep track of the previousMatch, and we skip the event track\n      // in the event that we are dealing with the initial load of the\n      // homepage\n      const { path, params } = match;\n      const name = PATH_NAME_MAP[path];\n      trackMetaMetricsPage(\n        {\n          name,\n          // We do not want to send addresses or accounts in any events\n          // Some routes include these as params.\n          params: omit(params, ['account', 'address']),\n          environmentType,\n          page: context.page,\n          referrer: context.referrer,\n        },\n        {\n          isOptInPath: location.pathname.startsWith('/initialize'),\n        },\n      );\n    }\n    previousMatch.current = match?.path;\n  }, [location, context]);\n\n  return (\n    <MetaMetricsContext.Provider value={trackEvent}>\n      {children}\n    </MetaMetricsContext.Provider>\n  );\n}\n\nMetaMetricsProvider.propTypes = { children: PropTypes.node };\n\nexport class LegacyMetaMetricsProvider extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    children: undefined,\n  };\n\n  static contextType = MetaMetricsContext;\n\n  static childContextTypes = {\n    // This has to be different than the type name for the old metametrics file\n    // using the same name would result in whichever was lower in the tree to be\n    // used.\n    trackEvent: PropTypes.func,\n  };\n\n  getChildContext() {\n    return {\n      trackEvent: this.context,\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n","export * from './snap-interface';\n","import {\n  File as FileObject,\n  FormState,\n  InterfaceState,\n  State,\n  UserInputEventType,\n} from '@metamask/snaps-sdk';\nimport { encodeBase64 } from '@metamask/snaps-utils';\nimport { Json } from '@metamask/utils';\nimport { debounce, throttle } from 'lodash';\nimport React, {\n  FunctionComponent,\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  handleSnapRequest,\n  updateInterfaceState,\n  forceUpdateMetamaskState,\n} from '../../store/actions';\nimport { mergeValue } from './utils';\n\nexport type HandleEvent = <Type extends State>(args: {\n  event: UserInputEventType;\n  name?: string;\n  value?: Type;\n  flush?: boolean;\n}) => void;\n\nexport type HandleInputChange = <Type extends State>(\n  name: string,\n  value: Type | null,\n  form?: string,\n) => void;\n\nexport type GetValue = (name: string, form?: string) => State | undefined;\n\nexport type HandleFileChange = (\n  name: string,\n  file: File | null,\n  form?: string,\n) => void;\n\nexport type SnapInterfaceContextType = {\n  handleEvent: HandleEvent;\n  getValue: GetValue;\n  handleInputChange: HandleInputChange;\n  handleFileChange: HandleFileChange;\n  snapId: string;\n};\n\nexport const SnapInterfaceContext =\n  createContext<SnapInterfaceContextType | null>(null);\n\nexport type SnapInterfaceContextProviderProps = {\n  interfaceId: string;\n  snapId: string;\n  initialState: InterfaceState;\n  context: Json;\n};\n\n// We want button clicks to be instant and therefore use throttling\n// to protect the Snap\n// Any event not in this array will be debounced instead of throttled\nconst THROTTLED_EVENTS = [\n  UserInputEventType.ButtonClickEvent,\n  UserInputEventType.FormSubmitEvent,\n];\n\n/**\n * The Snap interface context provider that handles all the interface state operations.\n *\n * @param params - The context provider params.\n * @param params.children - The childrens to wrap with the context provider.\n * @param params.interfaceId - The interface ID to use.\n * @param params.snapId - The Snap ID that requested the interface.\n * @param params.initialState - The initial state of the interface.\n * @param params.context - The context blob of the interface.\n * @returns The context provider.\n */\nexport const SnapInterfaceContextProvider: FunctionComponent<\n  SnapInterfaceContextProviderProps\n> = ({ children, interfaceId, snapId, initialState, context }) => {\n  const dispatch = useDispatch();\n\n  // We keep an internal copy of the state to speed up the state update in the\n  // UI. It's kept in a ref to avoid useless re-rendering of the entire tree of\n  // components.\n  const internalState = useRef<InterfaceState>(initialState ?? {});\n\n  // Since the internal state is kept in a reference, it won't update when the\n  // interface is updated. We have to manually update it.\n  useEffect(() => {\n    internalState.current = initialState;\n  }, [initialState]);\n\n  const rawSnapRequestFunction = (\n    event: UserInputEventType,\n    name?: string,\n    value?: unknown,\n  ) => {\n    handleSnapRequest<Parameters<HandleEvent>[0]>({\n      snapId,\n      origin: '',\n      handler: 'onUserInput',\n      request: {\n        jsonrpc: '2.0',\n        method: ' ',\n        params: {\n          event: {\n            type: event,\n            // TODO: Allow null in the types and simplify this\n            ...(name !== undefined && name !== null ? { name } : {}),\n            ...(value !== undefined && value !== null ? { value } : {}),\n          },\n          id: interfaceId,\n          context,\n        },\n      },\n    }).then(() => forceUpdateMetamaskState(dispatch));\n  };\n\n  // The submission of user input events is debounced or throttled to avoid\n  // crashing the snap if there's too many events sent at the same time.\n  const snapRequestDebounced = debounce(rawSnapRequestFunction, 200);\n  const snapRequestThrottled = throttle(rawSnapRequestFunction, 200);\n\n  // The update of the state is debounced to avoid crashes due to too many\n  // updates in a short amount of time.\n  const updateStateDebounced = debounce(\n    (state) => dispatch(updateInterfaceState(interfaceId, state)),\n    200,\n  );\n\n  /**\n   * Handle the submission of an user input event to the Snap.\n   *\n   * @param options - An options bag.\n   * @param options.event - The event type.\n   * @param options.name - The name of the component emitting the event.\n   * @param options.value - The value of the component emitting the event.\n   * @param options.flush - Optional flag to indicate whether the debounce\n   * should be flushed.\n   */\n  const handleEvent: HandleEvent = ({\n    event,\n    name,\n    value = name ? internalState.current[name] : undefined,\n    flush = false,\n  }) => {\n    // We always flush the debounced request for updating the state.\n    updateStateDebounced.flush();\n\n    const fn = THROTTLED_EVENTS.includes(event)\n      ? snapRequestThrottled\n      : snapRequestDebounced;\n\n    fn(event, name, value);\n\n    // Certain events have their own debounce or throttling logic\n    // and therefore may want to flush\n    if (flush) {\n      fn.flush();\n    }\n  };\n\n  const handleInputChangeDebounced = debounce(\n    (name, value) =>\n      handleEvent({\n        event: UserInputEventType.InputChangeEvent,\n        name,\n        value,\n        flush: true,\n      }),\n    300,\n  );\n\n  /**\n   * Handle the value change of an input.\n   *\n   * @param name - The name of the input.\n   * @param value - The new value.\n   * @param form - The name of the form containing the input.\n   * Optional if the input is not contained in a form.\n   */\n  const handleInputChange: HandleInputChange = (name, value, form) => {\n    const state = mergeValue(internalState.current, name, value, form);\n\n    internalState.current = state;\n    updateStateDebounced(state);\n    handleInputChangeDebounced(name, value);\n  };\n\n  const uploadFile = (name: string, file: FileObject | null) => {\n    handleSnapRequest<Parameters<HandleEvent>[0]>({\n      snapId,\n      origin: '',\n      handler: 'onUserInput',\n      request: {\n        jsonrpc: '2.0',\n        method: ' ',\n        params: {\n          event: {\n            type: UserInputEventType.FileUploadEvent,\n            ...(name === undefined ? {} : { name }),\n            ...(file === undefined ? {} : { file }),\n          },\n          id: interfaceId,\n          context,\n        },\n      },\n    }).then(() => forceUpdateMetamaskState(dispatch));\n  };\n\n  /**\n   * Handle the file change of an input.\n   *\n   * @param name - The name of the input.\n   * @param file - The file to upload.\n   * @param form - The name of the form containing the input.\n   */\n  const handleFileChange: HandleFileChange = (name, file, form) => {\n    if (file) {\n      file\n        .arrayBuffer()\n        .then((arrayBuffer) => new Uint8Array(arrayBuffer))\n        .then((uint8Array) => encodeBase64(uint8Array))\n        .then((base64) => {\n          const fileObject: FileObject = {\n            name: file.name,\n            size: file.size,\n            contentType: file.type,\n            contents: base64 as string,\n          };\n\n          const state = mergeValue(\n            internalState.current,\n            name,\n            fileObject,\n            form,\n          );\n\n          internalState.current = state;\n          updateStateDebounced(state);\n          updateStateDebounced.flush();\n          uploadFile(name, fileObject);\n        });\n\n      return;\n    }\n\n    const state = mergeValue(internalState.current, name, null, form);\n\n    internalState.current = state;\n    updateStateDebounced(state);\n    updateStateDebounced.flush();\n    uploadFile(name, null);\n  };\n\n  /**\n   * Get the value of an input from the interface state.\n   *\n   * @param name - The name of the input.\n   * @param form - The name of the form containing the input.\n   * Optional if the input is not contained in a form.\n   * @returns The value of the input or undefinded if the input has no value.\n   */\n  const getValue: GetValue = (name, form) => {\n    const value = form\n      ? (initialState[form] as FormState)?.[name]\n      : (initialState as FormState)?.[name];\n\n    if (value) {\n      return value;\n    }\n\n    return undefined;\n  };\n\n  return (\n    <SnapInterfaceContext.Provider\n      value={{\n        handleEvent,\n        getValue,\n        handleInputChange,\n        handleFileChange,\n        snapId,\n      }}\n    >\n      {children}\n    </SnapInterfaceContext.Provider>\n  );\n};\n\n/**\n * The utility hook to consume the Snap inteface context.\n *\n * @returns The snap interface context.\n */\nexport function useSnapInterfaceContext() {\n  return useContext(SnapInterfaceContext) as SnapInterfaceContextType;\n}\n","import { FormState, InterfaceState, State } from '@metamask/snaps-sdk';\n\n/**\n * Merge a new input value in the interface state.\n *\n * @param state - The current interface state.\n * @param name - The input name.\n * @param value - The input value.\n * @param form - The name of the form containing the input.\n * Optional if the input is not contained in a form.\n * @returns The interface state with the new value merged in.\n */\nexport const mergeValue = <Type extends State>(\n  state: InterfaceState,\n  name: string,\n  value: Type | null,\n  form?: string,\n): InterfaceState => {\n  if (form) {\n    return {\n      ...state,\n      [form]: {\n        ...(state[form] as FormState),\n        [name]: value,\n      },\n    };\n  }\n  return { ...state, [name]: value };\n};\n","import React, { createContext, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TransactionModalContext = createContext({});\n\nexport const TransactionModalContextProvider = ({ children }) => {\n  const [openModals, setOpenModals] = useState([]);\n\n  const closeModal = (modalNames) => {\n    if (openModals < 0) {\n      return;\n    }\n    const modals = [...openModals];\n    modalNames.forEach((modal) => {\n      const index = openModals.indexOf(modal);\n      modals.splice(index, 1);\n    });\n    setOpenModals(modals);\n  };\n\n  const closeAllModals = () => {\n    setOpenModals([]);\n  };\n\n  const openModal = (modalName) => {\n    if (openModals.includes(modalName)) {\n      return;\n    }\n    const modals = [...openModals];\n    modals.push(modalName);\n    setOpenModals(modals);\n  };\n\n  return (\n    <TransactionModalContext.Provider\n      value={{\n        closeModal,\n        closeAllModals,\n        currentModal: openModals[openModals.length - 1],\n        openModal,\n        openModalCount: openModals.length,\n      }}\n    >\n      {children}\n    </TransactionModalContext.Provider>\n  );\n};\n\n/**\n * @returns {{openModal: (modalName: string) => void}}\n */\nexport function useTransactionModalContext() {\n  return useContext(TransactionModalContext);\n}\n\nTransactionModalContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export { default as unconnectedAccount } from './unconnected-account';\nexport { default as invalidCustomNetwork } from './invalid-custom-network';\n\nexport { ALERT_STATE } from './enums';\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { AlertTypes } from '../../../shared/constants/alerts';\nimport { ALERT_STATE } from './enums';\n\n// Constants\n\nconst name = AlertTypes.invalidCustomNetwork;\n\nconst initialState = {\n  state: ALERT_STATE.CLOSED,\n  networkName: '',\n};\n\n// Slice (reducer plus auto-generated actions and action creators)\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    openAlert: (state, action) => {\n      state.state = ALERT_STATE.OPEN;\n      state.networkName = action.payload;\n    },\n    dismissAlert: (state) => {\n      state.state = ALERT_STATE.CLOSED;\n      state.networkName = '';\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\n\nexport default reducer;\n\n// Selectors\n\nexport const getAlertState = (state) => state[name].state;\n\nexport const getNetworkName = (state) => state[name].networkName;\n\nexport const alertIsOpen = (state) => state[name].state !== ALERT_STATE.CLOSED;\n\n// Actions / action-creators\n\nconst { openAlert, dismissAlert } = actions;\n\nexport { openAlert, dismissAlert };\n","import { BridgeBackgroundAction } from '../../../app/scripts/controllers/bridge/types';\nimport { forceUpdateMetamaskState } from '../../store/actions';\nimport { submitRequestToBackground } from '../../store/background-connection';\nimport { MetaMaskReduxDispatch } from '../../store/store';\nimport { swapsSlice } from '../swaps/swaps';\nimport { bridgeSlice } from './bridge';\n\n// eslint-disable-next-line no-empty-pattern\nconst {} = swapsSlice.actions;\n\nexport const { setToChain } = bridgeSlice.actions;\n\nconst callBridgeControllerMethod = <T>(\n  bridgeAction: BridgeBackgroundAction,\n  args?: T[],\n) => {\n  return async (dispatch: MetaMaskReduxDispatch) => {\n    await submitRequestToBackground(bridgeAction, args);\n    await forceUpdateMetamaskState(dispatch);\n  };\n};\n\n// User actions\n\n// Background actions\nexport const setBridgeFeatureFlags = () => {\n  return async (dispatch: MetaMaskReduxDispatch) => {\n    return dispatch(\n      callBridgeControllerMethod(BridgeBackgroundAction.SET_FEATURE_FLAGS),\n    );\n  };\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { swapsSlice } from '../swaps/swaps';\nimport { RPCDefinition } from '../../../shared/constants/network';\n\n// Only states that are not in swaps slice\nexport type BridgeState = {\n  toChain: RPCDefinition | null;\n};\n\nconst initialState: BridgeState = {\n  toChain: null,\n};\n\nconst bridgeSlice = createSlice({\n  name: 'bridge',\n  initialState: { ...initialState },\n  reducers: {\n    ...swapsSlice.reducer,\n    setToChain: (state, action) => {\n      state.toChain = action.payload;\n    },\n  },\n});\n\nexport { bridgeSlice };\nexport default bridgeSlice.reducer;\n","import { SecurityProvider } from '../../../shared/constants/security-provider';\nimport { Severity } from '../../helpers/constants/design-system';\n\nexport type AlertSeverity = Severity.Danger | Severity.Warning | Severity.Info;\n\n/**\n * A confirmable alert to be displayed in the UI.\n */\nexport type Alert = {\n  /**\n   * Alternate actions the user can take, specific to the alert.\n   */\n  actions?: { key: string; label: string }[];\n\n  /**\n   * Additional details about the alert.\n   */\n  alertDetails?: string[];\n\n  /**\n   * The field associated with the alert.\n   */\n  field?: string;\n\n  /**\n   * The unique key of the alert.\n   */\n  key: string;\n\n  /**\n   * Whether the alert is a blocker and un-acknowledgeable, preventing the user\n   * from proceeding and relying on actions to proceed. The default is `false`.\n   */\n  isBlocking?: boolean;\n\n  /**\n   * The message is a summary of the alert details.\n   */\n  message: string;\n\n  /**\n   * The security provider associated with the alert.\n   */\n  provider?: SecurityProvider;\n\n  /**\n   * The reason for the alert.\n   */\n  reason?: string;\n\n  /**\n   * The severity of the alert.\n   */\n  severity: AlertSeverity;\n\n  /**\n   * URL to report issue.\n   */\n  reportUrl?: string;\n};\n\n/**\n * Represents the state of confirm alerts in the application.\n */\nexport type ConfirmAlertsState = {\n  /**\n   * The current alerts, grouped by the ID of an abstract owner. For example, a confirmation ID.\n   */\n  alerts: { [ownerId: string]: Alert[] };\n\n  /**\n   * The acknowledgement status of the alerts, grouped first by alert key, then owner ID.\n   * and the alert key is the nested key.\n   */\n  confirmed: { [ownerId: string]: { [alertKey: string]: boolean } };\n};\n\ntype UpdateAlertsAction = {\n  type: 'UPDATE_ALERTS';\n  ownerId: string;\n  alerts: Alert[];\n};\n\ntype SetAlertConfirmedAction = {\n  type: 'SET_ALERT_CONFIRMED';\n  ownerId: string;\n  alertKey: string;\n  isConfirmed: boolean;\n};\n\ntype ClearAlertsAction = {\n  type: 'CLEAR_ALERTS';\n  ownerId: string;\n};\n\ntype Action = UpdateAlertsAction | SetAlertConfirmedAction | ClearAlertsAction;\n\nconst INIT_STATE: ConfirmAlertsState = {\n  alerts: {},\n  confirmed: {},\n};\n\nexport default function confirmAlertsReducer(\n  // eslint-disable-next-line @typescript-eslint/default-param-last\n  state: ConfirmAlertsState = INIT_STATE,\n  action: Action,\n) {\n  switch (action.type) {\n    case 'UPDATE_ALERTS':\n      return {\n        ...state,\n        alerts: {\n          ...state.alerts,\n          [action.ownerId]: action.alerts,\n        },\n      };\n\n    case 'SET_ALERT_CONFIRMED':\n      return {\n        ...state,\n        confirmed: {\n          ...state.confirmed,\n          [action.ownerId]: {\n            ...state.confirmed[action.ownerId],\n            [action.alertKey]: action.isConfirmed,\n          },\n        },\n      };\n\n    case 'CLEAR_ALERTS':\n      return {\n        ...state,\n        alerts: {\n          ...state.alerts,\n          [action.ownerId]: [],\n        },\n        confirmed: {\n          ...state.confirmed,\n          [action.ownerId]: {},\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function updateAlerts(\n  ownerId: string,\n  alerts: Alert[],\n): UpdateAlertsAction {\n  return {\n    type: 'UPDATE_ALERTS',\n    alerts,\n    ownerId,\n  };\n}\n\nexport function setAlertConfirmed(\n  ownerId: string,\n  alertKey: string,\n  isConfirmed: boolean,\n): SetAlertConfirmedAction {\n  return {\n    type: 'SET_ALERT_CONFIRMED',\n    ownerId,\n    alertKey,\n    isConfirmed,\n  };\n}\n\nexport function clearAlerts(ownerId: string): ClearAlertsAction {\n  return {\n    type: 'CLEAR_ALERTS',\n    ownerId,\n  };\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { ASSET_ROUTE, DEFAULT_ROUTE } from '../../helpers/constants/routes';\n\n// Constants\n\nconst initialState = {\n  mostRecentOverviewPage: DEFAULT_ROUTE,\n};\n\nconst name = 'history';\n\n// Slice (reducer plus auto-generated actions and action creators)\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    pageChanged: (state, action) => {\n      const path = action.payload;\n      if (path === DEFAULT_ROUTE || path.startsWith(ASSET_ROUTE)) {\n        state.mostRecentOverviewPage = path;\n      }\n    },\n  },\n});\n\nconst { actions, reducer } = slice;\n\nexport default reducer;\n\n// Selectors\n\nexport const getMostRecentOverviewPage = (state) =>\n  state[name].mostRecentOverviewPage;\n\n// Actions / action-creators\n\nexport const { pageChanged } = actions;\n","import { combineReducers } from 'redux';\nimport { AlertTypes } from '../../shared/constants/alerts';\nimport metamaskReducer from './metamask/metamask';\nimport localeMessagesReducer from './locale/locale';\nimport sendReducer from './send/send';\nimport domainReducer from './domains';\nimport appStateReducer from './app/app';\nimport confirmTransactionReducer from './confirm-transaction/confirm-transaction.duck';\nimport gasReducer from './gas/gas.duck';\nimport { invalidCustomNetwork, unconnectedAccount } from './alerts';\nimport swapsReducer from './swaps/swaps';\nimport bridgeReducer from './bridge/bridge';\nimport historyReducer from './history/history';\nimport rampsReducer from './ramps/ramps';\nimport confirmAlertsReducer from './confirm-alerts/confirm-alerts';\n\nexport default combineReducers({\n  [AlertTypes.invalidCustomNetwork]: invalidCustomNetwork,\n  [AlertTypes.unconnectedAccount]: unconnectedAccount,\n  activeTab: (s) => (s === undefined ? null : s),\n  metamask: metamaskReducer,\n  appState: appStateReducer,\n  DNS: domainReducer,\n  history: historyReducer,\n  send: sendReducer,\n  confirmAlerts: confirmAlertsReducer,\n  confirmTransaction: confirmTransactionReducer,\n  swaps: swapsReducer,\n  ramps: rampsReducer,\n  bridge: bridgeReducer,\n  gas: gasReducer,\n  localeMessages: localeMessagesReducer,\n});\n","import { AggregatorNetwork } from './types';\n\nexport const defaultBuyableChains: AggregatorNetwork[] = [\n  {\n    active: true,\n    chainId: 1,\n    chainName: 'Ethereum Mainnet',\n    shortName: 'Ethereum',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 10,\n    chainName: 'Optimism Mainnet',\n    shortName: 'Optimism',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 25,\n    chainName: 'Cronos Mainnet',\n    shortName: 'Cronos',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 56,\n    chainName: 'BNB Chain Mainnet',\n    shortName: 'BNB Chain',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 100,\n    chainName: 'Gnosis Mainnet',\n    shortName: 'Gnosis',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 137,\n    chainName: 'Polygon Mainnet',\n    shortName: 'Polygon',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 250,\n    chainName: 'Fantom Mainnet',\n    shortName: 'Fantom',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 324,\n    chainName: 'zkSync Era Mainnet',\n    shortName: 'zkSync Era',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 1101,\n    chainName: 'Polygon zkEVM',\n    shortName: 'Polygon zkEVM',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 1284,\n    chainName: 'Moonbeam Mainnet',\n    shortName: 'Moonbeam',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 1285,\n    chainName: 'Moonriver Mainnet',\n    shortName: 'Moonriver',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 8453,\n    chainName: 'Base Mainnet',\n    shortName: 'Base',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 42161,\n    chainName: 'Arbitrum Mainnet',\n    shortName: 'Arbitrum',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 42220,\n    chainName: 'Celo Mainnet',\n    shortName: 'Celo',\n    nativeTokenSupported: false,\n  },\n  {\n    active: true,\n    chainId: 43114,\n    chainName: 'Avalanche C-Chain Mainnet',\n    shortName: 'Avalanche C-Chain',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 59144,\n    chainName: 'Linea',\n    shortName: 'Linea',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 1313161554,\n    chainName: 'Aurora Mainnet',\n    shortName: 'Aurora',\n    nativeTokenSupported: false,\n  },\n  {\n    active: true,\n    chainId: 1666600000,\n    chainName: 'Harmony Mainnet (Shard 0)',\n    shortName: 'Harmony (Shard 0)',\n    nativeTokenSupported: true,\n  },\n  {\n    active: true,\n    chainId: 11297108109,\n    chainName: 'Palm Mainnet',\n    shortName: 'Palm',\n    nativeTokenSupported: false,\n  },\n];\n","export * from './ramps';\n","import { createSelector } from 'reselect';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getCurrentChainId, getUseExternalServices } from '../../selectors';\nimport RampAPI from '../../helpers/ramps/rampApi/rampAPI';\nimport { hexToDecimal } from '../../../shared/modules/conversion.utils';\nimport { getMultichainIsBitcoin } from '../../selectors/multichain';\nimport { MultichainNetworks } from '../../../shared/constants/multichain/networks';\nimport { defaultBuyableChains } from './constants';\nimport { AggregatorNetwork } from './types';\n\nexport const fetchBuyableChains = createAsyncThunk(\n  'ramps/fetchBuyableChains',\n  async (_, { getState }) => {\n    const state = getState();\n    // @ts-expect-error: TS doesn't know about the root state interface yet\n    const { isFetched } = state.ramps;\n    const allowExternalRequests = getUseExternalServices(state);\n    if (!allowExternalRequests) {\n      return defaultBuyableChains;\n    }\n    if (!isFetched) {\n      return await RampAPI.getNetworks();\n    }\n    // @ts-expect-error: TS doesn't know about the root state interface yet\n    return state.ramps.buyableChains;\n  },\n);\n\nconst rampsSlice = createSlice({\n  name: 'ramps',\n  initialState: {\n    buyableChains: defaultBuyableChains,\n    isFetched: false,\n  },\n  reducers: {\n    setBuyableChains: (state, action) => {\n      if (\n        Array.isArray(action.payload) &&\n        action.payload.length > 0 &&\n        action.payload.every((network) => network?.chainId)\n      ) {\n        state.buyableChains = action.payload;\n        state.isFetched = true;\n      } else {\n        state.buyableChains = defaultBuyableChains;\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchBuyableChains.fulfilled, (state, action) => {\n        const networks = action.payload;\n        if (networks && networks.length > 0) {\n          state.buyableChains = networks;\n        } else {\n          state.buyableChains = defaultBuyableChains;\n        }\n        state.isFetched = true;\n      })\n      .addCase(fetchBuyableChains.rejected, (state) => {\n        state.buyableChains = defaultBuyableChains;\n        state.isFetched = true;\n      });\n  },\n});\n\nconst { reducer } = rampsSlice;\n\n// Can be typed to RootState if/when the interface is defined\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getBuyableChains = (state: any) =>\n  state.ramps?.buyableChains ?? defaultBuyableChains;\n\nexport const getIsBitcoinBuyable = createSelector(\n  [getBuyableChains],\n  (buyableChains) =>\n    buyableChains\n      .filter(Boolean)\n      .some(\n        (network: AggregatorNetwork) =>\n          network.chainId === MultichainNetworks.BITCOIN && network.active,\n      ),\n);\n\nexport const getIsNativeTokenBuyable = createSelector(\n  [\n    getCurrentChainId,\n    getBuyableChains,\n    getIsBitcoinBuyable,\n    getMultichainIsBitcoin,\n  ],\n  (currentChainId, buyableChains, isBtcBuyable, isBtc) => {\n    try {\n      return buyableChains\n        .filter(Boolean)\n        .some((network: AggregatorNetwork) => {\n          if (isBtc) {\n            return isBtcBuyable;\n          }\n          return String(network.chainId) === hexToDecimal(currentChainId);\n        });\n    } catch (e) {\n      return false;\n    }\n  },\n);\n\nexport default reducer;\n","module.exports=[\n  {\n    \"code\": \"aud\",\n    \"name\": \"Australian Dollar\"\n  },\n  {\n    \"code\": \"hkd\",\n    \"name\": \"Hong Kong Dollar\"\n  },\n  {\n    \"code\": \"sgd\",\n    \"name\": \"Singapore Dollar\"\n  },\n  {\n    \"code\": \"idr\",\n    \"name\": \"Indonesian Rupiah\"\n  },\n  {\n    \"code\": \"inr\",\n    \"name\": \"Indian Rupee\"\n  },\n  {\n    \"code\": \"nzd\",\n    \"name\": \"New Zealand Dollar\"\n  },\n  {\n    \"code\": \"php\",\n    \"name\": \"Philippine Peso\"\n  },\n  {\n    \"code\": \"adt\",\n    \"name\": \"adToken\"\n  },\n  {\n    \"code\": \"adx\",\n    \"name\": \"AdEx\"\n  },\n  {\n    \"code\": \"ant\",\n    \"name\": \"Aragon\"\n  },\n  {\n    \"code\": \"bat\",\n    \"name\": \"Basic Attention Token\"\n  },\n  {\n    \"code\": \"bnt\",\n    \"name\": \"Bancor\"\n  },\n  {\n    \"code\": \"btc\",\n    \"name\": \"Bitcoin\"\n  },\n  {\n    \"code\": \"cad\",\n    \"name\": \"Canadian Dollar\"\n  },\n  {\n    \"code\": \"crb\",\n    \"name\": \"CreditBit\"\n  },\n  {\n    \"code\": \"cvc\",\n    \"name\": \"Civic\"\n  },\n  {\n    \"code\": \"dash\",\n    \"name\": \"Dash\"\n  },\n  {\n    \"code\": \"dgd\",\n    \"name\": \"DigixDAO\"\n  },\n  {\n    \"code\": \"etc\",\n    \"name\": \"Ethereum Classic\"\n  },\n  {\n    \"code\": \"eur\",\n    \"name\": \"Euro\"\n  },\n  {\n    \"code\": \"fun\",\n    \"name\": \"FunFair\"\n  },\n  {\n    \"code\": \"gbp\",\n    \"name\": \"Pound Sterling\"\n  },\n  {\n    \"code\": \"gno\",\n    \"name\": \"Gnosis\"\n  },\n  {\n    \"code\": \"gnt\",\n    \"name\": \"Golem\"\n  },\n  {\n    \"code\": \"hmq\",\n    \"name\": \"Humaniq\"\n  },\n  {\n    \"code\": \"jpy\",\n    \"name\": \"Japanese Yen\"\n  },\n  {\n    \"code\": \"lsk\",\n    \"name\": \"Lisk\"\n  },\n  {\n    \"code\": \"ltc\",\n    \"name\": \"Litecoin\"\n  },\n  {\n    \"code\": \"lun\",\n    \"name\": \"Lunyr\"\n  },\n  {\n    \"code\": \"mco\",\n    \"name\": \"Monaco\"\n  },\n  {\n    \"code\": \"mtl\",\n    \"name\": \"Metal\"\n  },\n  {\n    \"code\": \"myst\",\n    \"name\": \"Mysterium\"\n  },\n  {\n    \"code\": \"nmr\",\n    \"name\": \"Numeraire\"\n  },\n  {\n    \"code\": \"omg\",\n    \"name\": \"OmiseGO\"\n  },\n  {\n    \"code\": \"pay\",\n    \"name\": \"TenX\"\n  },\n  {\n    \"code\": \"ptoy\",\n    \"name\": \"Patientory\"\n  },\n  {\n    \"code\": \"qrl\",\n    \"name\": \"Quantum-Resistant Ledger\"\n  },\n  {\n    \"code\": \"qtum\",\n    \"name\": \"Qtum\"\n  },\n  {\n    \"code\": \"rep\",\n    \"name\": \"Augur\"\n  },\n  {\n    \"code\": \"rlc\",\n    \"name\": \"iEx.ec\"\n  },\n  {\n    \"code\": \"rub\",\n    \"name\": \"Russian Ruble\"\n  },\n  {\n    \"code\": \"sc\",\n    \"name\": \"Siacoin\"\n  },\n  {\n    \"code\": \"sngls\",\n    \"name\": \"SingularDTV\"\n  },\n  {\n    \"code\": \"snt\",\n    \"name\": \"Status\"\n  },\n  {\n    \"code\": \"steem\",\n    \"name\": \"Steem\"\n  },\n  {\n    \"code\": \"storj\",\n    \"name\": \"Storj\"\n  },\n  {\n    \"code\": \"time\",\n    \"name\": \"ChronoBank\"\n  },\n  {\n    \"code\": \"tkn\",\n    \"name\": \"TokenCard\"\n  },\n  {\n    \"code\": \"uah\",\n    \"name\": \"Ukrainian Hryvnia\"\n  },\n  {\n    \"code\": \"usd\",\n    \"name\": \"United States Dollar\"\n  },\n  {\n    \"code\": \"wings\",\n    \"name\": \"Wings\"\n  },\n  {\n    \"code\": \"xem\",\n    \"name\": \"NEM\"\n  },\n  {\n    \"code\": \"xlm\",\n    \"name\": \"Stellar Lumen\"\n  },\n  {\n    \"code\": \"xmr\",\n    \"name\": \"Monero\"\n  },\n  {\n    \"code\": \"xrp\",\n    \"name\": \"Ripple\"\n  },\n  {\n    \"code\": \"zec\",\n    \"name\": \"Zcash\"\n  },\n  {\n    \"code\": \"dai\",\n    \"name\": \"DAI\"\n  },\n  {\n    \"code\": \"sek\",\n    \"name\": \"Swedish Krona\"\n  }\n]\n","export const STATUS_CONNECTED = 'STATUS_CONNECTED';\nexport const STATUS_CONNECTED_TO_ANOTHER_ACCOUNT =\n  'STATUS_CONNECTED_TO_ANOTHER_ACCOUNT';\nexport const STATUS_NOT_CONNECTED = 'STATUS_NOT_CONNECTED';\nexport const STATUS_CONNECTED_TO_SNAP = 'STATUS_CONNECTED_TO_SNAP';\n","export const GAS_FORM_ERRORS = {\n  GAS_LIMIT_OUT_OF_BOUNDS: 'editGasLimitOutOfBounds',\n  MAX_PRIORITY_FEE_TOO_LOW: 'editGasMaxPriorityFeeLow',\n  MAX_FEE_TOO_LOW: 'editGasMaxFeeLow',\n  MAX_PRIORITY_FEE_BELOW_MINIMUM: 'editGasMaxPriorityFeeBelowMinimum',\n  MAX_PRIORITY_FEE_HIGH_WARNING: 'editGasMaxPriorityFeeHigh',\n  MAX_FEE_HIGH_WARNING: 'editGasMaxFeeHigh',\n  MAX_FEE_IMBALANCE: 'editGasMaxFeeImbalance',\n  GAS_PRICE_TOO_LOW: 'editGasPriceTooLow',\n};\n\nexport function getGasFormErrorText(type, t, { minimumGasLimit } = {}) {\n  switch (type) {\n    case GAS_FORM_ERRORS.GAS_LIMIT_OUT_OF_BOUNDS:\n      return t('editGasLimitOutOfBounds', [minimumGasLimit]);\n    case GAS_FORM_ERRORS.MAX_PRIORITY_FEE_TOO_LOW:\n      return t('editGasMaxPriorityFeeLow');\n    case GAS_FORM_ERRORS.MAX_FEE_TOO_LOW:\n      return t('editGasMaxFeeLow');\n    case GAS_FORM_ERRORS.MAX_PRIORITY_FEE_BELOW_MINIMUM:\n      return t('editGasMaxPriorityFeeBelowMinimum');\n    case GAS_FORM_ERRORS.MAX_PRIORITY_FEE_HIGH_WARNING:\n      return t('editGasMaxPriorityFeeHigh');\n    case GAS_FORM_ERRORS.MAX_FEE_HIGH_WARNING:\n      return t('editGasMaxFeeHigh');\n    case GAS_FORM_ERRORS.MAX_FEE_IMBALANCE:\n      return t('editGasMaxFeePriorityImbalance');\n    case GAS_FORM_ERRORS.GAS_PRICE_TOO_LOW:\n      return t('editGasPriceTooLow');\n    default:\n      return '';\n  }\n}\n\nexport const PRIORITY_LEVEL_ICON_MAP = {\n  low: '🐢',\n  medium: '🦊',\n  high: '🦍',\n  dappSuggested: '🌐',\n  dappSuggestedHigh: '🌐',\n  swapSuggested: '🔄',\n  custom: '⚙️',\n};\n","import { CHAIN_IDS } from '../../../../shared/constants/network';\n\n/**\n * Configuration for a block explorer.\n *\n * @property {string} url - The URL of the block explorer.\n * @property {string} name - The name of the block explorer.\n */\nexport type BlockExplorerConfig = {\n  url: string;\n  name: string;\n};\n\n/**\n * Map of all supported block explorers for notifications.\n */\nexport const SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS = {\n  // ETHEREUM\n  [CHAIN_IDS.MAINNET]: {\n    url: 'https://etherscan.io',\n    name: 'Etherscan',\n  },\n  // OPTIMISM\n  [CHAIN_IDS.OPTIMISM]: {\n    url: 'https://optimistic.etherscan.io',\n    name: 'Optimistic Etherscan',\n  },\n  // BSC\n  [CHAIN_IDS.BSC]: {\n    url: 'https://bscscan.com',\n    name: 'BscScan',\n  },\n  // POLYGON\n  [CHAIN_IDS.POLYGON]: {\n    url: 'https://polygonscan.com',\n    name: 'PolygonScan',\n  },\n  // ARBITRUM\n  [CHAIN_IDS.ARBITRUM]: {\n    url: 'https://arbiscan.io',\n    name: 'Arbiscan',\n  },\n  // AVALANCHE\n  [CHAIN_IDS.AVALANCHE]: {\n    url: 'https://snowtrace.io',\n    name: 'Snowtrace',\n  },\n  // LINEA\n  [CHAIN_IDS.LINEA_MAINNET]: {\n    url: 'https://lineascan.build',\n    name: 'LineaScan',\n  },\n} as const;\n","/* eslint-disable @metamask/design-tokens/color-no-hex*/\nimport { IconName } from '../../components/component-library';\nimport {\n  ALERTS_ROUTE,\n  ADVANCED_ROUTE,\n  SECURITY_ROUTE,\n  GENERAL_ROUTE,\n  ABOUT_US_ROUTE,\n  NETWORKS_ROUTE,\n  CONTACT_LIST_ROUTE,\n  EXPERIMENTAL_ROUTE,\n  DEVELOPER_OPTIONS_ROUTE,\n} from './routes';\n\n/**\n * @typedef SettingRouteConfig\n * # @param {Function} tabMessage\n * # @param {Function} sectionMessage\n * # @param {Function} descriptionMessage\n * # @param {string} route tab route with appended arbitrary, unique anchor tag / hash route\n * # @param {string} iconName\n * # @param {string} featureFlag ENV variable name. If the ENV value exists, the route will be searchable; else, route will not be searchable.\n */\n\n/** @type {SettingRouteConfig[]} */\n// When editing this array, double-check the order of the settingsRefs in the setting's respective component.\nconst SETTINGS_CONSTANTS = [\n  {\n    tabMessage: (t) => t('general'),\n    sectionMessage: (t) => t('currencyConversion'),\n    descriptionMessage: (t) => t('currencyConversion'),\n    route: `${GENERAL_ROUTE}#currency-conversion`,\n    iconName: IconName.Setting,\n  },\n  {\n    tabMessage: (t) => t('general'),\n    sectionMessage: (t) => t('primaryCurrencySetting'),\n    descriptionMessage: (t) => t('primaryCurrencySettingDescription'),\n    route: `${GENERAL_ROUTE}#primary-currency`,\n    iconName: IconName.Setting,\n  },\n  {\n    tabMessage: (t) => t('general'),\n    sectionMessage: (t) => t('currentLanguage'),\n    descriptionMessage: (t) => t('currentLanguage'),\n    route: `${GENERAL_ROUTE}#current-language`,\n    iconName: IconName.Setting,\n  },\n  {\n    tabMessage: (t) => t('general'),\n    sectionMessage: (t) => t('theme'),\n    descriptionMessage: (t) => t('themeDescription'),\n    route: `${GENERAL_ROUTE}#theme`,\n    icon: 'fa fa-flask',\n  },\n  {\n    tabMessage: (t) => t('general'),\n    sectionMessage: (t) => t('accountIdenticon'),\n    descriptionMessage: (t) => t('accountIdenticon'),\n    route: `${GENERAL_ROUTE}#account-identicon`,\n    iconName: IconName.Setting,\n  },\n  {\n    tabMessage: (t) => t('general'),\n    sectionMessage: (t) => t('hideZeroBalanceTokens'),\n    descriptionMessage: (t) => t('hideZeroBalanceTokens'),\n    route: `${GENERAL_ROUTE}#zero-balancetokens`,\n    iconName: IconName.Setting,\n  },\n  // advanced settingsRefs[0]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('stateLogs'),\n    descriptionMessage: (t) => t('stateLogsDescription'),\n    route: `${ADVANCED_ROUTE}#state-logs`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[1]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('clearActivity'),\n    descriptionMessage: (t) => t('clearActivityDescription'),\n    route: `${ADVANCED_ROUTE}#clear-activity`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[2]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('smartTransactions'),\n    descriptionMessage: (t) => t('stxOptInDescription'),\n    route: `${ADVANCED_ROUTE}#smart-transactions`,\n    icon: 'fas fa-upload',\n  },\n  // advanced settingsRefs[3]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('showHexData'),\n    descriptionMessage: (t) => t('showHexDataDescription'),\n    route: `${ADVANCED_ROUTE}#show-hexdata`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[4]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('showFiatConversionInTestnets'),\n    descriptionMessage: (t) => t('showFiatConversionInTestnetsDescription'),\n    route: `${ADVANCED_ROUTE}#conversion-testnetworks`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[5]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('showTestnetNetworks'),\n    descriptionMessage: (t) => t('showTestnetNetworksDescription'),\n    route: `${ADVANCED_ROUTE}#show-testnets`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[6]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('nonceField'),\n    descriptionMessage: (t) => t('nonceFieldDesc'),\n    route: `${ADVANCED_ROUTE}#customize-nonce`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[7]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('autoLockTimeLimit'),\n    descriptionMessage: (t) => t('autoLockTimeLimitDescription'),\n    route: `${ADVANCED_ROUTE}#autolock-timer`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[8]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('showExtensionInFullSizeView'),\n    descriptionMessage: (t) => t('showExtensionInFullSizeViewDescription'),\n    route: `${ADVANCED_ROUTE}#extension-full-size-view`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[9]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('dismissReminderField'),\n    descriptionMessage: (t) => t('dismissReminderDescriptionField'),\n    route: `${ADVANCED_ROUTE}#dismiss-secretrecovery`,\n    icon: 'fas fa-sliders-h',\n  },\n  // advanced settingsRefs[10]\n  {\n    tabMessage: (t) => t('advanced'),\n    sectionMessage: (t) => t('exportYourData'),\n    descriptionMessage: (t) => t('exportYourDataDescription'),\n    route: `${ADVANCED_ROUTE}#export-data`,\n    icon: 'fas fa-download',\n  },\n  {\n    tabMessage: (t) => t('contacts'),\n    sectionMessage: (t) => t('contacts'),\n    descriptionMessage: (t) => t('contacts'),\n    route: CONTACT_LIST_ROUTE,\n    iconName: IconName.Book,\n  },\n  // securityAndPrivacy settingsRefs[0]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('basicConfigurationLabel'),\n    descriptionMessage: (t) => t('basicConfigurationDescription'),\n    route: `${SECURITY_ROUTE}#basic-functionality-toggle`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[1]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('revealSeedWords'),\n    descriptionMessage: (t) => t('revealSeedWords'),\n    route: `${SECURITY_ROUTE}#reveal-secretrecovery`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[2]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('showIncomingTransactions'),\n    descriptionMessage: (t) => t('showIncomingTransactionsDescription'),\n    route: `${SECURITY_ROUTE}#incoming-transaction`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[3]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('usePhishingDetection'),\n    descriptionMessage: (t) => t('usePhishingDetectionDescription'),\n    route: `${SECURITY_ROUTE}#phishing-detection`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[4]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('use4ByteResolution'),\n    descriptionMessage: (t) => t('use4ByteResolutionDescription'),\n    route: `${SECURITY_ROUTE}#decode-smart-contracts`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[5]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('participateInMetaMetrics'),\n    descriptionMessage: (t) => t('participateInMetaMetricsDescription'),\n    route: `${SECURITY_ROUTE}#metametrics`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[6]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('networkProvider'),\n    descriptionMessage: (t) =>\n      `${t('chooseYourNetwork')} ${t('chooseYourNetworkDescription')}`,\n    route: `${SECURITY_ROUTE}#network-provider`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[7]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('ipfsGateway'),\n    descriptionMessage: (t) => t('ipfsGatewayDescription'),\n    route: `${SECURITY_ROUTE}#add-custom-ipfs-gateway`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[8]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('autoDetectTokens'),\n    descriptionMessage: (t) => t('autoDetectTokensDescription'),\n    route: `${SECURITY_ROUTE}#auto-detect-tokens`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[9]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('useMultiAccountBalanceChecker'),\n    descriptionMessage: (t) =>\n      t('useMultiAccountBalanceCheckerSettingDescription'),\n    route: `${SECURITY_ROUTE}#batch-account-balance-requests`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[10]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('currencyRateCheckToggle'),\n    descriptionMessage: (t) => t('currencyRateCheckToggleDescription'),\n    route: `${SECURITY_ROUTE}#price-checker`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[11]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('ensDomainsSettingTitle'),\n    descriptionMessage: (t) => t('ensDomainsSettingDescriptionIntroduction'),\n    route: `${SECURITY_ROUTE}#ens-domains`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[12]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('displayNftMedia'),\n    descriptionMessage: (t) => t('displayNftMediaDescription'),\n    route: `${SECURITY_ROUTE}#display-nft-media`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[13]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('useNftDetection'),\n    descriptionMessage: (t) => t('useNftDetectionDescriptionText'),\n    route: `${SECURITY_ROUTE}#autodetect-nfts`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[14]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('useSafeChainsListValidation'),\n    descriptionMessage: (t) => t('useSafeChainsListValidationDescription'),\n    route: `${SECURITY_ROUTE}#network-details-check`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[15]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('externalNameSourcesSetting'),\n    descriptionMessage: (t) => t('externalNameSourcesSettingDescription'),\n    route: `${SECURITY_ROUTE}#proposed-nicknames`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[16]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('securityAlerts'),\n    descriptionMessage: (t) => t('securityAlertsDescription'),\n    route: `${SECURITY_ROUTE}#security-alerts`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[17]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('blockaid'),\n    descriptionMessage: (t) => t('blockaidMessage'),\n    route: `${SECURITY_ROUTE}#security-alerts-blockaid`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[18]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('simulationsSettingSubHeader'),\n    descriptionMessage: (t) => t('simulationsSettingDescription'),\n    route: `${SECURITY_ROUTE}#transaction-simulations`,\n    icon: 'fa fa-lock',\n  },\n  // securityAndPrivacy settingsRefs[19]\n  {\n    tabMessage: (t) => t('securityAndPrivacy'),\n    sectionMessage: (t) => t('dataCollectionForMarketing'),\n    descriptionMessage: (t) => t('dataCollectionForMarketingDescription'),\n    route: `${SECURITY_ROUTE}#dataCollectionForMarketing`,\n    icon: 'fa fa-lock',\n  },\n  {\n    tabMessage: (t) => t('alerts'),\n    sectionMessage: (t) => t('alertSettingsUnconnectedAccount'),\n    descriptionMessage: (t) => t('alertSettingsUnconnectedAccount'),\n    route: `${ALERTS_ROUTE}#unconnected-account`,\n    iconName: IconName.Notification,\n  },\n  {\n    tabMessage: (t) => t('alerts'),\n    sectionMessage: (t) => t('alertSettingsWeb3ShimUsage'),\n    descriptionMessage: (t) => t('alertSettingsWeb3ShimUsage'),\n    route: `${ALERTS_ROUTE}#web3-shimusage`,\n    icon: 'fa fa-bell',\n  },\n  {\n    tabMessage: (t) => t('networks'),\n    sectionMessage: (t) => t('mainnet'),\n    descriptionMessage: (t) => t('mainnet'),\n    route: `${NETWORKS_ROUTE}#networks-mainnet`,\n    icon: 'fa fa-plug',\n  },\n  {\n    tabMessage: (t) => t('networks'),\n    sectionMessage: (t) => t('lineaMainnet'),\n    descriptionMessage: (t) => t('lineaMainnet'),\n    route: `${NETWORKS_ROUTE}#networks-linea-mainnet`,\n    icon: 'fa fa-plug',\n  },\n  {\n    tabMessage: (t) => t('networks'),\n    sectionMessage: (t) => t('goerli'),\n    descriptionMessage: (t) => t('goerli'),\n    route: `${NETWORKS_ROUTE}#networks-goerli`,\n    icon: 'fa fa-plug',\n  },\n  {\n    tabMessage: (t) => t('networks'),\n    sectionMessage: (t) => t('sepolia'),\n    descriptionMessage: (t) => t('sepolia'),\n    route: `${NETWORKS_ROUTE}#networks-sepolia`,\n    icon: 'fa fa-plug',\n  },\n  {\n    tabMessage: (t) => t('networks'),\n    sectionMessage: (t) => t('lineaGoerli'),\n    descriptionMessage: (t) => t('lineaGoerli'),\n    route: `${NETWORKS_ROUTE}#networks-linea-goerli`,\n    icon: 'fa fa-plug',\n  },\n  {\n    tabMessage: (t) => t('networks'),\n    sectionMessage: (t) => t('lineaSepolia'),\n    descriptionMessage: (t) => t('lineaSepolia'),\n    route: `${NETWORKS_ROUTE}#networks-linea-sepolia`,\n    icon: 'fa fa-plug',\n  },\n  {\n    tabMessage: (t) => t('networks'),\n    sectionMessage: (t) => t('localhost'),\n    descriptionMessage: (t) => t('localhost'),\n    route: `${NETWORKS_ROUTE}#networks-localhost`,\n    icon: 'fa fa-plug',\n  },\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('metamaskVersion'),\n    descriptionMessage: (t) => t('builtAroundTheWorld'),\n    route: `${ABOUT_US_ROUTE}#version`,\n    iconName: IconName.Info,\n  },\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('links'),\n    descriptionMessage: (t) => t('links'),\n    route: `${ABOUT_US_ROUTE}#links`,\n    iconName: IconName.Info,\n  },\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('privacyMsg'),\n    descriptionMessage: (t) => t('privacyMsg'),\n    route: `${ABOUT_US_ROUTE}#privacy-policy`,\n    iconName: IconName.Info,\n  },\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('terms'),\n    descriptionMessage: (t) => t('terms'),\n    route: `${ABOUT_US_ROUTE}#terms`,\n    iconName: IconName.Info,\n  },\n\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('attributions'),\n    descriptionMessage: (t) => t('attributions'),\n    route: `${ABOUT_US_ROUTE}#attributions`,\n    iconName: IconName.Info,\n  },\n\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('supportCenter'),\n    descriptionMessage: (t) => t('supportCenter'),\n    route: `${ABOUT_US_ROUTE}#supportcenter`,\n    iconName: IconName.Info,\n  },\n\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('visitWebSite'),\n    descriptionMessage: (t) => t('visitWebSite'),\n    route: `${ABOUT_US_ROUTE}#visitwebsite`,\n    iconName: IconName.Info,\n  },\n\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('contactUs'),\n    descriptionMessage: (t) => t('contactUs'),\n    route: `${ABOUT_US_ROUTE}#contactus`,\n    iconName: IconName.Info,\n  },\n  {\n    tabMessage: (t) => t('about'),\n    sectionMessage: (t) => t('betaTerms'),\n    descriptionMessage: (t) => t('betaTerms'),\n    route: `${ABOUT_US_ROUTE}#beta-terms`,\n    iconName: IconName.Info,\n  },\n  // experimental settingsRefs[0]\n  {\n    tabMessage: (t) => t('experimental'),\n    sectionMessage: (t) => t('petnamesEnabledToggle'),\n    descriptionMessage: (t) => t('petnamesEnabledToggleDescription'),\n    route: `${EXPERIMENTAL_ROUTE}#nicknames`,\n    icon: 'fas fa-flask',\n  },\n  // experimental settingsRefs[1]\n  {\n    tabMessage: (t) => t('experimental'),\n    sectionMessage: (t) => t('notificationsFeatureToggle'),\n    descriptionMessage: (t) => t('notificationsFeatureToggleDescription'),\n    route: `${EXPERIMENTAL_ROUTE}#notifications`,\n    icon: 'fas fa-flask',\n  },\n  // experimental settingsRefs[2]\n  {\n    tabMessage: (t) => t('experimental'),\n    sectionMessage: (t) => t('redesignedConfirmationsEnabledToggle'),\n    descriptionMessage: (t) => t('redesignedConfirmationsToggleDescription'),\n    route: `${EXPERIMENTAL_ROUTE}#redesigned-confirmations`,\n    icon: 'fas fa-flask',\n  },\n  // experimental settingsRefs[3]\n  {\n    tabMessage: (t) => t('experimental'),\n    sectionMessage: (t) => t('redesignedTransactionsEnabledToggle'),\n    descriptionMessage: (t) => t('redesignedTransactionsToggleDescription'),\n    route: `${EXPERIMENTAL_ROUTE}#redesigned-transactions`,\n    icon: 'fas fa-flask',\n  },\n  ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n  // since this route is only included with keyring-snaps feature flag, this needs to be the last settingsRef for the experimental tab\n  // experimental settingsRefs[4]\n  {\n    tabMessage: (t) => t('experimental'),\n    sectionMessage: (t) => t('snaps'),\n    descriptionMessage: (t) => t('addSnapAccountToggle'),\n    route: `${EXPERIMENTAL_ROUTE}#snaps`,\n    icon: 'fas fa-flask',\n  },\n  ///: END:ONLY_INCLUDE_IF\n  // developerOptions settingsRefs[0]\n  {\n    featureFlag: 'ENABLE_SETTINGS_PAGE_DEV_OPTIONS',\n    tabMessage: (t) => t('developerOptions'),\n    sectionMessage: 'Reset States',\n    descriptionMessage: 'Reset States',\n    route: `${DEVELOPER_OPTIONS_ROUTE}#reset-states`,\n    icon: IconName.CodeCircle,\n  },\n  // developerOptions settingsRefs[1]\n  {\n    featureFlag: 'ENABLE_SETTINGS_PAGE_DEV_OPTIONS',\n    tabMessage: (t) => t('developerOptions'),\n    sectionMessage: 'Announcements',\n    descriptionMessage:\n      \"Resets isShown boolean to false for all announcements. Announcements are the notifications shown in the What's New popup modal.\",\n    route: `${DEVELOPER_OPTIONS_ROUTE}#reset-states-announcements`,\n    icon: IconName.CodeCircle,\n  },\n  // developerOptions settingsRefs[2]\n  {\n    featureFlag: 'ENABLE_SETTINGS_PAGE_DEV_OPTIONS',\n    tabMessage: (t) => t('developerOptions'),\n    sectionMessage: 'Service Worker Keep Alive',\n    descriptionMessage:\n      'Resets various states related to onboarding and redirects to the \"Secure Your Wallet\" onboarding page.',\n    route: `${DEVELOPER_OPTIONS_ROUTE}#reset-states-onboarding`,\n    icon: IconName.CodeCircle,\n  },\n  // developerOptions settingsRefs[3]\n  {\n    featureFlag: 'ENABLE_SETTINGS_PAGE_DEV_OPTIONS',\n    tabMessage: (t) => t('developerOptions'),\n    sectionMessage: 'Service Worker Keep Alive',\n    descriptionMessage:\n      'Results in a timestamp being continuously saved to session.storage',\n    route: `${DEVELOPER_OPTIONS_ROUTE}#service-worker-keep-alive`,\n    icon: IconName.CodeCircle,\n  },\n];\n\nexport default SETTINGS_CONSTANTS;\n","export enum DelineatorType {\n  Content = 'content',\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Error = 'error',\n  Insights = 'insights',\n  Description = 'description',\n  Warning = 'warning',\n}\n\nexport const getDelineatorTitle = (type: DelineatorType) => {\n  switch (type) {\n    case DelineatorType.Error:\n      return 'errorWithSnap';\n    case DelineatorType.Insights:\n      return 'insightsFromSnap';\n    case DelineatorType.Description:\n      return 'descriptionFromSnap';\n    case DelineatorType.Warning:\n      return 'warningFromSnap';\n    default:\n      return 'contentFromSnap';\n  }\n};\n","export * from './delineator';\nexport * from './insights';\n","type InsightLanguageMapper = {\n  [action: string]: {\n    noun: string;\n    imperative: string;\n  };\n};\n\n/**\n * Mapping of actions to the language needed to be used in\n * the translations for the insight warnings modal.\n */\nexport const InsightWarningLanguage: InsightLanguageMapper = {\n  confirming: {\n    noun: 'transaction',\n    imperative: 'confirm',\n  },\n  signing: {\n    noun: 'signature',\n    imperative: 'sign',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { UNLOCK_ROUTE, ONBOARDING_ROUTE } from '../../constants/routes';\n\nexport default function Authenticated(props) {\n  const { isUnlocked, completedOnboarding } = props;\n  switch (true) {\n    case isUnlocked && completedOnboarding:\n      return <Route {...props} />;\n    case !completedOnboarding:\n      return <Redirect to={{ pathname: ONBOARDING_ROUTE }} />;\n    default:\n      return <Redirect to={{ pathname: UNLOCK_ROUTE }} />;\n  }\n}\n\nAuthenticated.propTypes = {\n  isUnlocked: PropTypes.bool,\n  completedOnboarding: PropTypes.bool,\n};\n","import { connect } from 'react-redux';\nimport Authenticated from './authenticated.component';\n\nconst mapStateToProps = (state) => {\n  const {\n    metamask: { isUnlocked, completedOnboarding },\n  } = state;\n\n  return {\n    isUnlocked,\n    completedOnboarding,\n  };\n};\n\nexport default connect(mapStateToProps)(Authenticated);\n","export { default } from './authenticated.container';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport default function FeatureToggledRoute({ flag, redirectRoute, ...props }) {\n  if (flag) {\n    return <Route {...props} />;\n  }\n  return <Redirect to={{ pathname: redirectRoute }} />;\n}\n\nFeatureToggledRoute.propTypes = {\n  flag: PropTypes.bool.isRequired,\n  redirectRoute: PropTypes.string.isRequired,\n};\n","export { default } from './initialized.container';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { ONBOARDING_ROUTE } from '../../constants/routes';\n\nexport default function Initialized(props) {\n  return props.completedOnboarding ? (\n    <Route {...props} />\n  ) : (\n    <Redirect to={{ pathname: ONBOARDING_ROUTE }} />\n  );\n}\n\nInitialized.propTypes = {\n  completedOnboarding: PropTypes.bool,\n};\n","import { connect } from 'react-redux';\nimport Initialized from './initialized.component';\n\nconst mapStateToProps = (state) => {\n  const {\n    metamask: { completedOnboarding },\n  } = state;\n\n  return {\n    completedOnboarding,\n  };\n};\n\nexport default connect(mapStateToProps)(Initialized);\n","export { default } from './with-modal-props';\n","import { connect } from 'react-redux';\nimport { hideModal } from '../../../store/actions';\n\nconst mapStateToProps = (state) => {\n  const { appState } = state;\n  const { props: modalProps } = appState.modal.modalState;\n\n  return {\n    ...modalProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    hideModal: () => dispatch(hideModal()),\n  };\n};\n\nexport default function withModalProps(Component) {\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import getFetchWithTimeout from '../../../../shared/modules/fetch-with-timeout';\nimport { AggregatorNetwork } from '../../../ducks/ramps/types';\n\nconst fetchWithTimeout = getFetchWithTimeout();\n\nconst isProdEnv = process.env.NODE_ENV === 'production';\nconst PROD_RAMP_API_BASE_URL = 'https://on-ramp-content.api.cx.metamask.io';\nconst UAT_RAMP_API_BASE_URL = 'https://on-ramp-content.uat-api.cx.metamask.io';\n\nconst rampApiBaseUrl =\n  process.env.METAMASK_RAMP_API_CONTENT_BASE_URL ||\n  (isProdEnv ? PROD_RAMP_API_BASE_URL : UAT_RAMP_API_BASE_URL);\n\nconst RampAPI = {\n  async getNetworks(): Promise<AggregatorNetwork[]> {\n    const url = new URL('/regions/networks', rampApiBaseUrl);\n    url.searchParams.set('context', 'extension');\n    const response = await fetchWithTimeout(url.toString());\n    const { networks } = await response.json();\n    return networks;\n  },\n};\n\nexport default RampAPI;\n","import { InvisibleCharacter } from '../../components/component-library';\nimport {\n  GOERLI_DISPLAY_NAME,\n  LINEA_GOERLI_DISPLAY_NAME,\n  LINEA_SEPOLIA_DISPLAY_NAME,\n  SEPOLIA_DISPLAY_NAME,\n} from '../../../shared/constants/network';\nimport { BackgroundColor } from '../constants/design-system';\nimport { KeyringType } from '../../../shared/constants/keyring';\nimport { HardwareKeyringNames } from '../../../shared/constants/hardware-wallets';\nimport { t } from '../../../app/scripts/translate';\n\nexport function getAccountNameErrorMessage(\n  accounts,\n  context,\n  newAccountName,\n  defaultAccountName,\n) {\n  const isDuplicateAccountName = accounts.some(\n    (item) => item.metadata.name.toLowerCase() === newAccountName.toLowerCase(),\n  );\n\n  const isEmptyAccountName = newAccountName === '';\n\n  const localizedWordForAccount = context\n    .t('newAccountNumberName')\n    .replace(' $1', '');\n\n  // Match strings starting with ${localizedWordForAccount} and then any numeral, case insensitive\n  // Trim spaces before and after\n  const reservedRegEx = new RegExp(\n    `^\\\\s*${localizedWordForAccount} \\\\d+\\\\s*$`,\n    'iu',\n  );\n  const isReservedAccountName = reservedRegEx.test(newAccountName);\n\n  const isValidAccountName =\n    newAccountName.toLowerCase() === defaultAccountName.toLowerCase() || // What is written in the text\n    // field is the same as the\n    // placeholder\n    (!isDuplicateAccountName && !isReservedAccountName && !isEmptyAccountName);\n\n  let errorMessage;\n  if (isValidAccountName) {\n    errorMessage = InvisibleCharacter; // Using an invisible character, so the spacing stays\n    // constant\n  } else if (isDuplicateAccountName) {\n    errorMessage = context.t('accountNameDuplicate');\n  } else if (isReservedAccountName) {\n    errorMessage = context.t('accountNameReserved');\n  } else if (isEmptyAccountName) {\n    errorMessage = context.t('required');\n  }\n\n  return { isValidAccountName, errorMessage };\n}\n\nexport function getAvatarNetworkColor(name) {\n  switch (name) {\n    case GOERLI_DISPLAY_NAME:\n      return BackgroundColor.goerli;\n    case LINEA_GOERLI_DISPLAY_NAME:\n      return BackgroundColor.lineaGoerli;\n    case LINEA_SEPOLIA_DISPLAY_NAME:\n      return BackgroundColor.lineaSepolia;\n    case SEPOLIA_DISPLAY_NAME:\n      return BackgroundColor.sepolia;\n    default:\n      return undefined;\n  }\n}\n\nexport function getAccountLabel(type, account) {\n  if (!account) {\n    return null;\n  }\n  switch (type) {\n    case KeyringType.hdKeyTree:\n      return null;\n    case KeyringType.imported:\n      return t('imported');\n    case KeyringType.qr:\n      return HardwareKeyringNames.qr;\n    case KeyringType.trezor:\n      return HardwareKeyringNames.trezor;\n    case KeyringType.ledger:\n      return HardwareKeyringNames.ledger;\n    case KeyringType.lattice:\n      return HardwareKeyringNames.lattice;\n    ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n    case KeyringType.snap:\n      if (account.metadata.snap?.name) {\n        return `${account.metadata.snap?.name} (${t('beta')})`;\n      }\n      return `${t('snaps')} (${t('beta')})`;\n    ///: END:ONLY_INCLUDE_IF\n    default:\n      return null;\n  }\n}\n","export function camelCaseToCapitalize(str = '') {\n  return str.replace(/([A-Z])/gu, ' $1').replace(/^./u, (s) => s.toUpperCase());\n}\n","/**\n * @enum { string }\n */\nexport const ExportableContentType = {\n  JSON: 'application/json',\n  TXT: 'text/plain',\n};\n\n/**\n * @enum { string }\n */\nconst ExtensionForContentType = {\n  [ExportableContentType.JSON]: '.json',\n  [ExportableContentType.TXT]: '.txt',\n};\n\n/**\n * Export data as a file.\n *\n * @param {string} filename - The name of the file to export.\n * @param {string} data - The data to export.\n * @param {ExportableContentType} contentType - The content type of the file to export.\n */\nexport async function exportAsFile(filename, data, contentType) {\n  if (!ExtensionForContentType[contentType]) {\n    throw new Error(`Unsupported file type: ${contentType}`);\n  }\n\n  if (supportsShowSaveFilePicker()) {\n    // Preferred method for downloads\n    await saveFileUsingFilePicker(filename, data, contentType);\n  } else {\n    saveFileUsingDataUri(filename, data, contentType);\n  }\n}\n/**\n * Notes if the browser supports the File System Access API.\n *\n * @returns {boolean}\n */\nfunction supportsShowSaveFilePicker() {\n  return (\n    typeof window !== 'undefined' &&\n    typeof window.showSaveFilePicker !== 'undefined' &&\n    typeof window.Blob !== 'undefined'\n  );\n}\n\n/**\n * Saves a file using the File System Access API.\n *\n * @param {string} filename - The name of the file to export.\n * @param {string} data - The data to export.\n * @param {ExportableContentType} contentType - The content type of the file to export.\n * @returns {Promise<void>}\n */\nasync function saveFileUsingFilePicker(filename, data, contentType) {\n  const blob = new window.Blob([data], { contentType });\n  const fileExtension = ExtensionForContentType[contentType];\n\n  const handle = await window.showSaveFilePicker({\n    suggestedName: filename,\n    types: [\n      {\n        description: filename,\n        accept: {\n          [contentType]: [fileExtension],\n        },\n      },\n    ],\n  });\n\n  const writable = await handle.createWritable();\n  await writable.write(blob);\n  await writable.close();\n}\n\n/**\n * Saves a file using a data URI.\n * This is a fallback for browsers that do not support the File System Access API.\n * This method is less preferred because it requires the entire file to be encoded in a data URI.\n *\n * @param {string} filename - The name of the file to export.\n * @param {string} data - The data to export.\n * @param {ExportableContentType} contentType - The content type of the file to export.\n */\nfunction saveFileUsingDataUri(filename, data, contentType) {\n  const b64 = Buffer.from(data, 'utf8').toString('base64');\n  const elem = document.createElement('a');\n  elem.href = `data:${contentType};Base64,${b64}`;\n  elem.download = filename;\n  document.body.appendChild(elem);\n  elem.click();\n  document.body.removeChild(elem);\n}\n","import { constant, times, uniq, zip } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport {\n  GasRecommendations,\n  EditGasModes,\n} from '../../../shared/constants/gas';\nimport { hexWEIToDecGWEI } from '../../../shared/modules/conversion.utils';\nimport { Numeric } from '../../../shared/modules/Numeric';\nimport {\n  bnGreaterThan,\n  isNullish,\n  roundToDecimalPlacesRemovingExtraZeroes,\n} from './util';\n\nconst TEN_PERCENT_NUMERIC = new Numeric(1.1, 10);\n\nexport const gasEstimateGreaterThanGasUsedPlusTenPercent = (\n  gasUsed,\n  gasFeeEstimates,\n  estimate,\n) => {\n  let { maxFeePerGas: maxFeePerGasInTransaction } = gasUsed;\n  maxFeePerGasInTransaction = new BigNumber(\n    hexWEIToDecGWEI(addTenPercentAndRound(maxFeePerGasInTransaction)),\n  );\n\n  const maxFeePerGasFromEstimate =\n    gasFeeEstimates?.[estimate]?.suggestedMaxFeePerGas;\n  return bnGreaterThan(maxFeePerGasFromEstimate, maxFeePerGasInTransaction);\n};\n\n/**\n * Simple helper to save on duplication to multiply the supplied wei hex string\n * by 1.10 to get bare minimum new gas fee.\n *\n * @param {string | undefined} hexStringValue - hex value in wei to be incremented\n * @returns {string | undefined} hex value in WEI 10% higher than the param.\n */\nexport function addTenPercentAndRound(hexStringValue) {\n  if (hexStringValue === undefined) {\n    return undefined;\n  }\n  return new Numeric(hexStringValue, 16)\n    .times(TEN_PERCENT_NUMERIC)\n    .round(0)\n    .toPrefixedHexString();\n}\n\nexport function isMetamaskSuggestedGasEstimate(estimate) {\n  return [\n    GasRecommendations.high,\n    GasRecommendations.medium,\n    GasRecommendations.low,\n  ].includes(estimate);\n}\n\n/**\n * Formats a singular gas fee or a range of gas fees by rounding them to the\n * given precisions and then arranging them as a string.\n *\n * @param {string | [string, string] | null | undefined} feeOrFeeRange - The fee\n * in GWEI or range of fees in GWEI.\n * @param {object} options - The options.\n * @param {number | [number, number]} options.precision - The precision(s) to\n * use when formatting the fee(s).\n * @returns A string which represents the formatted version of the fee or fee\n * range.\n */\nexport function formatGasFeeOrFeeRange(\n  feeOrFeeRange,\n  { precision: precisionOrPrecisions = 2 } = {},\n) {\n  if (\n    isNullish(feeOrFeeRange) ||\n    (Array.isArray(feeOrFeeRange) && feeOrFeeRange.length === 0)\n  ) {\n    return null;\n  }\n\n  const range = Array.isArray(feeOrFeeRange)\n    ? feeOrFeeRange.slice(0, 2)\n    : [feeOrFeeRange];\n  const precisions = Array.isArray(precisionOrPrecisions)\n    ? precisionOrPrecisions.slice(0, 2)\n    : times(range.length, constant(precisionOrPrecisions));\n  const formattedRange = uniq(\n    zip(range, precisions).map(([fee, precision]) => {\n      return precision === undefined\n        ? fee\n        : roundToDecimalPlacesRemovingExtraZeroes(fee, precision);\n    }),\n  ).join(' - ');\n\n  return `${formattedRange} GWEI`;\n}\n\n/**\n * Helper method for determining whether an edit gas mode is either a speed up or cancel transaction\n *\n * @param {string | undefined} editGasMode - One of 'speed-up', 'cancel', 'modify-in-place', or 'swaps'\n * @returns boolean\n */\nexport function editGasModeIsSpeedUpOrCancel(editGasMode) {\n  return (\n    editGasMode === EditGasModes.cancel || editGasMode === EditGasModes.speedUp\n  );\n}\n","export function isHardwareKeyring(keyringType = '') {\n  return keyringType.includes('Hardware');\n}\n","// Checks if viewport at invoke time fits mobile dimensions\n// isMobileView :: () => Bool\nconst isMobileView = () =>\n  window.matchMedia('screen and (max-width: 575px)').matches;\n\nexport default isMobileView;\n","import { getAccountLink } from '@metamask/etherscan-link';\nimport { KnownCaipNamespace, parseCaipChainId } from '@metamask/utils';\nimport { MultichainNetwork } from '../../../selectors/multichain';\nimport { normalizeSafeAddress } from '../../../../app/scripts/lib/multichain/address';\n\nexport const getMultichainBlockExplorerUrl = (\n  network: MultichainNetwork,\n): string => {\n  return network.network?.rpcPrefs?.blockExplorerUrl ?? '';\n};\n\nexport const getMultichainAccountUrl = (\n  address: string,\n  network: MultichainNetwork,\n): string => {\n  const { namespace } = parseCaipChainId(network.chainId);\n  if (namespace === KnownCaipNamespace.Eip155) {\n    return getAccountLink(\n      normalizeSafeAddress(address),\n      network.network.chainId,\n      network.network?.rpcPrefs,\n    );\n  }\n\n  const multichainExplorerUrl = getMultichainBlockExplorerUrl(network);\n  return multichainExplorerUrl ? `${multichainExplorerUrl}/${address}` : '';\n};\n","export const getNftImageAlt = ({ name, tokenId, description }) => {\n  return description ?? `${name} ${tokenId}`;\n};\n","import { BigNumber } from 'bignumber.js';\nimport { JsonRpcProvider } from '@ethersproject/providers';\nimport type { NotificationServicesController } from '@metamask/notification-services-controller';\nimport { TextVariant } from '../constants/design-system';\nimport {\n  CHAIN_IDS,\n  CHAIN_ID_TO_CURRENCY_SYMBOL_MAP,\n  CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP,\n  NETWORK_TO_NAME_MAP,\n  FEATURED_RPCS,\n  MAINNET_RPC_URL,\n  GOERLI_RPC_URL,\n  SEPOLIA_RPC_URL,\n  LINEA_GOERLI_RPC_URL,\n  LINEA_SEPOLIA_RPC_URL,\n  LINEA_MAINNET_RPC_URL,\n  LOCALHOST_RPC_URL,\n} from '../../../shared/constants/network';\nimport { SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS } from '../constants/metamask-notifications/metamask-notifications';\nimport { calcTokenAmount } from '../../../shared/lib/transactions-controller-utils';\nimport type { BlockExplorerConfig } from '../constants/metamask-notifications/metamask-notifications';\nimport {\n  hexWEIToDecGWEI,\n  hexWEIToDecETH,\n  decimalToHex,\n} from '../../../shared/modules/conversion.utils';\n\ntype OnChainRawNotification =\n  NotificationServicesController.Types.OnChainRawNotification;\ntype OnChainRawNotificationsWithNetworkFields =\n  NotificationServicesController.Types.OnChainRawNotificationsWithNetworkFields;\n\n/**\n * Type guard to ensure a key is present in an object.\n *\n * @param object - The object to check.\n * @param key - The key to check for.\n * @returns True if the key is present, false otherwise.\n */\nfunction isKey<T extends object>(object: T, key: PropertyKey): key is keyof T {\n  return key in object;\n}\n\n/**\n * Checks if 2 date objects are on the same day\n *\n * @param currentDate\n * @param dateToCheck\n * @returns boolean if dates are same day.\n */\nconst isSameDay = (currentDate: Date, dateToCheck: Date) =>\n  currentDate.getFullYear() === dateToCheck.getFullYear() &&\n  currentDate.getMonth() === dateToCheck.getMonth() &&\n  currentDate.getDate() === dateToCheck.getDate();\n\n/**\n * Checks if a date is \"yesterday\" from the current date\n *\n * @param currentDate\n * @param dateToCheck\n * @returns boolean if dates were \"yesterday\"\n */\nconst isYesterday = (currentDate: Date, dateToCheck: Date) => {\n  const yesterday = new Date(currentDate);\n  yesterday.setDate(currentDate.getDate() - 1);\n  return isSameDay(yesterday, dateToCheck);\n};\n\n/**\n * Checks if 2 date objects are in the same year.\n *\n * @param currentDate\n * @param dateToCheck\n * @returns boolean if dates were in same year\n */\nconst isSameYear = (currentDate: Date, dateToCheck: Date) =>\n  currentDate.getFullYear() === dateToCheck.getFullYear();\n\n/**\n * Formats a given date into different formats based on how much time has elapsed since that date.\n *\n * @param date - The date to be formatted.\n * @returns The formatted date.\n */\nexport function formatMenuItemDate(date: Date) {\n  const currentDate = new Date();\n\n  // E.g. 12:21\n  if (isSameDay(currentDate, date)) {\n    return new Intl.DateTimeFormat('en', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false,\n    }).format(date);\n  }\n\n  // E.g. Yesterday\n  if (isYesterday(currentDate, date)) {\n    return new Intl.RelativeTimeFormat('en', { numeric: 'auto' }).format(\n      -1,\n      'day',\n    );\n  }\n\n  // E.g. 21 Oct\n  if (isSameYear(currentDate, date)) {\n    return new Intl.DateTimeFormat('en', {\n      month: 'short',\n      day: 'numeric',\n    }).format(date);\n  }\n\n  // E.g. 21 Oct 2022\n  return new Intl.DateTimeFormat('en', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  }).format(date);\n}\n\ntype FormatOptions = {\n  decimalPlaces?: number;\n  shouldEllipse?: boolean;\n};\nconst defaultFormatOptions = {\n  decimalPlaces: 4,\n};\n\n/**\n * Calculates the number of leading zeros in the fractional part of a number.\n *\n * This function converts a number or a string representation of a number into\n * its decimal form and then counts the number of leading zeros present in the\n * fractional part of the number. This is useful for determining the precision\n * of very small numbers.\n *\n * @param num - The number to analyze, which can be in the form\n * of a number or a string.\n * @returns The count of leading zeros in the fractional part of the number.\n */\nexport const getLeadingZeroCount = (num: number | string) => {\n  const numToString = new BigNumber(num, 10).toString(10);\n  const fractionalPart = numToString.split('.')[1] ?? '';\n  return fractionalPart.match(/^0*/u)?.[0]?.length || 0;\n};\n\n/**\n * This formats a number using Intl\n * It abbreviates large numbers (using K, M, B, T)\n * And abbreviates small numbers in 2 ways:\n * - Will format to the given number of decimal places\n * - Will format up to 4 decimal places\n * - Will ellipse the number if longer than given decimal places\n *\n * @param numericAmount\n * @param opts\n * @returns\n */\nexport const formatAmount = (numericAmount: number, opts?: FormatOptions) => {\n  // create options with defaults\n  const options = { ...defaultFormatOptions, ...opts };\n\n  const leadingZeros = getLeadingZeroCount(numericAmount);\n  const isDecimal =\n    numericAmount.toString().includes('.') ||\n    leadingZeros > 0 ||\n    numericAmount.toString().includes('e-');\n  const isLargeNumber = numericAmount > 999;\n\n  const handleShouldEllipse = (decimalPlaces: number) =>\n    Boolean(options?.shouldEllipse) && leadingZeros >= decimalPlaces;\n\n  if (isLargeNumber) {\n    return Intl.NumberFormat('en-US', {\n      notation: 'compact',\n      compactDisplay: 'short',\n      maximumFractionDigits: 2,\n    }).format(numericAmount);\n  }\n\n  if (isDecimal) {\n    const ellipse = handleShouldEllipse(options.decimalPlaces);\n    const formattedValue = Intl.NumberFormat('en-US', {\n      minimumFractionDigits: ellipse ? options.decimalPlaces : undefined,\n      maximumFractionDigits: options.decimalPlaces,\n    }).format(numericAmount);\n\n    return ellipse ? `${formattedValue}...` : formattedValue;\n  }\n\n  // Default to showing the raw amount\n  return numericAmount.toString();\n};\n\n/**\n * Generates a unique key based on the provided text, index, and a random string.\n *\n * @param text - The text to be included in the key.\n * @param index - The index to be included in the key.\n * @returns The generated unique key.\n */\nexport const getRandomKey = (text: string, index: number) => {\n  const key = `${text\n    .replace(/\\s+/gu, '_')\n    .replace(/[^\\w-]/gu, '')}-${index}-${Math.random()\n    .toString(36)\n    .substring(2, 15)}`;\n\n  return key;\n};\n\n/**\n * Creates an array of text items with highlighting applied to every second item.\n *\n * This function takes an array of strings and a variant type, and returns an object containing\n * the array of items where each item is an object with the text and a boolean indicating if it\n * should be highlighted. Highlighting is applied to every second item in the array.\n *\n * @param texts - An array of strings to be transformed into text items.\n * @param variant - The variant type that applies a specific styling or type classification.\n * @returns An object containing the array of text items and the variant.\n */\nexport const createTextItems = (texts: string[], variant: TextVariant) => {\n  const items = texts.map((text, index) => ({\n    text,\n    highlighted: index % 2 === 1,\n  }));\n  return {\n    items,\n    variant,\n  };\n};\n\n/**\n * Converts a token amount from its smallest unit based on its decimals to a human-readable format,\n * applying formatting options such as decimal places and ellipsis for overflow.\n *\n * @param amount - The token amount in its smallest unit as a string.\n * @param decimals - The number of decimals the token uses.\n * @param options - Optional formatting options to specify the number of decimal places and whether to use ellipsis.\n * @returns The formatted token amount as a string. If the input is invalid, returns an empty string.\n */\nexport const getAmount = (\n  amount: string,\n  decimals: string,\n  options?: FormatOptions,\n) => {\n  if (!amount || !decimals) {\n    return '';\n  }\n\n  const numericAmount = calcTokenAmount(\n    amount,\n    parseFloat(decimals),\n  ).toNumber();\n\n  return formatAmount(numericAmount, options);\n};\n\n/**\n * Converts a token amount and its USD conversion rate to a formatted USD string.\n *\n * This function first converts the token amount from its smallest unit based on the provided decimals\n * to a human-readable format. It then multiplies this amount by the USD conversion rate to get the\n * equivalent amount in USD, and formats this USD amount into a readable string.\n *\n * @param amount - The token amount in its smallest unit as a string.\n * @param decimals - The number of decimals the token uses.\n * @param usd - The current USD conversion rate for the token.\n * @returns The formatted USD amount as a string. If any input is invalid, returns an empty string.\n */\nexport const getUsdAmount = (amount: string, decimals: string, usd: string) => {\n  if (!amount || !decimals || !usd) {\n    return '';\n  }\n\n  const amountInEther = calcTokenAmount(\n    amount,\n    parseFloat(decimals),\n  ).toNumber();\n  const numericAmount = parseFloat(`${amountInEther}`) * parseFloat(usd);\n\n  return formatAmount(numericAmount);\n};\n\n/**\n * Retrieves the network name associated with a given chain ID.\n *\n * This function looks up the chain ID in a predefined map (`NETWORK_TO_NAME_MAP`)\n * to find the corresponding network name. If the chain ID is not found, it returns undefined.\n *\n * @param chainId - The chain ID for which the network name is required.\n * @returns The name of the network as a string, or undefined if the chain ID is not recognized.\n */\nexport const getNetworkNameByChainId = (\n  chainId: string,\n): string | undefined => {\n  return NETWORK_TO_NAME_MAP[chainId as keyof typeof NETWORK_TO_NAME_MAP];\n};\n\n/**\n * Retrieves detailed information about a network based on its chain ID.\n * This includes the native currency's name, symbol, logo, a default address, and optionally a block explorer URL.\n *\n * @param chainId - The chain ID of the network for which details are required.\n * @returns An object containing details about the network:\n * - nativeCurrencyName: The name of the native currency.\n * - nativeCurrencySymbol: The symbol of the native currency.\n * - nativeCurrencyLogo: The logo URL of the native currency.\n * - nativeCurrencyAddress: A default address, typically the zero address.\n * - nativeBlockExplorerUrl: The URL of the block explorer associated with the network, if available.\n */\nexport function getNetworkDetailsByChainId(chainId?: keyof typeof CHAIN_IDS): {\n  nativeCurrencyName: string;\n  nativeCurrencySymbol: string;\n  nativeCurrencyLogo: string;\n  nativeCurrencyAddress: string;\n  blockExplorerConfig?: BlockExplorerConfig;\n} {\n  const fullNativeCurrencyName =\n    NETWORK_TO_NAME_MAP[chainId as keyof typeof NETWORK_TO_NAME_MAP] ?? '';\n  const nativeCurrencyName = fullNativeCurrencyName.split(' ')[0] ?? '';\n  const nativeCurrencySymbol =\n    CHAIN_ID_TO_CURRENCY_SYMBOL_MAP[\n      chainId as keyof typeof CHAIN_ID_TO_CURRENCY_SYMBOL_MAP\n    ];\n  const nativeCurrencyLogo =\n    CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP[\n      chainId as keyof typeof CHAIN_ID_TO_NETWORK_IMAGE_URL_MAP\n    ];\n  const nativeCurrencyAddress = '0x0000000000000000000000000000000000000000';\n  const blockExplorerConfig =\n    chainId && isKey(SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS, chainId)\n      ? SUPPORTED_NOTIFICATION_BLOCK_EXPLORERS[chainId]\n      : undefined;\n  return {\n    nativeCurrencyName,\n    nativeCurrencySymbol,\n    nativeCurrencyLogo,\n    nativeCurrencyAddress,\n    blockExplorerConfig,\n  };\n}\n\n/**\n * Formats an ISO date string into a more readable format.\n *\n * @param isoDateString - The ISO date string to format.\n * @returns The formatted date string.\n */\nexport function formatIsoDateString(isoDateString: string) {\n  const date = new Date(isoDateString);\n\n  const options = {\n    year: 'numeric' as const,\n    month: 'short' as const,\n    day: 'numeric' as const,\n    hour: 'numeric' as const,\n    minute: 'numeric' as const,\n    hour12: true,\n  };\n\n  const formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);\n\n  return formattedDate;\n}\n\nexport type HexChainId = (typeof CHAIN_IDS)[keyof typeof CHAIN_IDS];\n\n/**\n * Retrieves the RPC URL associated with a given chain ID.\n *\n * This function searches through the FEATURED_RPCS array to find a matching RPC configuration\n * for the provided chain ID. It returns the RPC URL if a match is found, otherwise undefined.\n *\n * @param chainId - The chain ID for which the RPC URL is required.\n * @returns The RPC URL associated with the given chain ID, or undefined if no match is found.\n */\nexport function getRpcUrlByChainId(chainId: HexChainId): string {\n  const rpc = FEATURED_RPCS.find((rpcItem) => rpcItem.chainId === chainId);\n\n  // If rpc is found, return its URL. Otherwise, return a default URL based on the chainId.\n  if (rpc) {\n    return rpc.rpcEndpoints[0].url;\n  }\n  // Fallback RPC URLs based on the chainId\n  switch (chainId) {\n    case CHAIN_IDS.MAINNET:\n      return MAINNET_RPC_URL;\n    case CHAIN_IDS.GOERLI:\n      return GOERLI_RPC_URL;\n    case CHAIN_IDS.SEPOLIA:\n      return SEPOLIA_RPC_URL;\n    case CHAIN_IDS.LINEA_GOERLI:\n      return LINEA_GOERLI_RPC_URL;\n    case CHAIN_IDS.LINEA_SEPOLIA:\n      return LINEA_SEPOLIA_RPC_URL;\n    case CHAIN_IDS.LINEA_MAINNET:\n      return LINEA_MAINNET_RPC_URL;\n    case CHAIN_IDS.LOCALHOST:\n      return LOCALHOST_RPC_URL;\n    default:\n      // Default to MAINNET if no match is found\n      return MAINNET_RPC_URL;\n  }\n}\n\nexport function hasNetworkFeeFields(\n  notification: OnChainRawNotification,\n): notification is OnChainRawNotificationsWithNetworkFields {\n  return 'network_fee' in notification.data;\n}\n\nexport const getNetworkFees = async (notification: OnChainRawNotification) => {\n  if (!hasNetworkFeeFields(notification)) {\n    throw new Error('Invalid notification type');\n  }\n\n  const chainId = decimalToHex(notification.chain_id);\n  const rpcUrl = getRpcUrlByChainId(`0x${chainId}` as HexChainId);\n  const connection = {\n    url: rpcUrl,\n    headers: {\n      'Infura-Source': 'metamask/metamask',\n    },\n  };\n  const provider = new JsonRpcProvider(connection);\n\n  if (!provider) {\n    throw new Error(`No provider found for chainId ${chainId}`);\n  }\n\n  try {\n    const [receipt, transaction, block] = await Promise.all([\n      provider.getTransactionReceipt(notification.tx_hash),\n      provider.getTransaction(notification.tx_hash),\n      provider.getBlock(notification.block_number),\n    ]);\n\n    const calculateUsdAmount = (value: string, decimalPlaces?: number) =>\n      formatAmount(\n        parseFloat(value) *\n          parseFloat(notification.data.network_fee.native_token_price_in_usd),\n        {\n          decimalPlaces: decimalPlaces || 4,\n        },\n      );\n\n    const transactionFeeInEth = hexWEIToDecETH(\n      receipt.gasUsed.mul(receipt.effectiveGasPrice)._hex,\n    );\n    const transactionFeeInUsd = calculateUsdAmount(transactionFeeInEth);\n\n    const gasLimit = transaction.gasLimit.toNumber();\n    const gasUsed = receipt.gasUsed.toNumber();\n\n    const baseFee = block.baseFeePerGas\n      ? hexWEIToDecGWEI(block.baseFeePerGas._hex)\n      : null;\n    const priorityFee = block.baseFeePerGas\n      ? hexWEIToDecGWEI(receipt.effectiveGasPrice.sub(block.baseFeePerGas)._hex)\n      : null;\n\n    const maxFeePerGas = transaction.maxFeePerGas\n      ? hexWEIToDecGWEI(transaction.maxFeePerGas._hex)\n      : null;\n\n    return {\n      transactionFeeInEth,\n      transactionFeeInUsd,\n      gasLimit,\n      gasUsed,\n      baseFee,\n      priorityFee,\n      maxFeePerGas,\n    };\n  } catch (error) {\n    throw new Error(\n      `Error fetching network fees for chainId ${chainId}: ${error}`,\n    );\n  }\n};\n\n/**\n * Checks if a given URL is an IPFS URL.\n *\n * @param url - The URL to check.\n * @returns True if the URL is an IPFS URL, false otherwise.\n */\nexport const isIpfsURL = (url: string): boolean => {\n  return url.startsWith('ipfs://');\n};\n","import deepFreeze from 'deep-freeze-strict';\nimport React from 'react';\n\nimport { getRpcCaveatOrigins } from '@metamask/snaps-rpc-methods';\nimport {\n  SnapCaveatType,\n  getSlip44ProtocolName,\n  getSnapDerivationPathName,\n} from '@metamask/snaps-utils';\nimport { isNonEmptyArray } from '@metamask/controller-utils';\nimport {\n  RestrictedMethods,\n  EndowmentPermissions,\n  ConnectionPermission,\n  PermissionWeight,\n} from '../../../shared/constants/permissions';\nimport {\n  Icon,\n  Text,\n  IconName,\n  IconSize,\n} from '../../components/component-library';\nimport {\n  FontWeight,\n  IconColor,\n  TextColor,\n  TextVariant,\n} from '../constants/design-system';\nimport { PermissionNames } from '../../../app/scripts/controllers/permissions';\nimport { getURLHost } from './util';\n\nconst UNKNOWN_PERMISSION = Symbol('unknown');\n\nconst RIGHT_INFO_ICON = (\n  <Icon name={IconName.Info} size={IconSize.Sm} color={IconColor.iconMuted} />\n);\n\nfunction getSnapNameComponent(snapName) {\n  return (\n    <Text\n      fontWeight={FontWeight.Medium}\n      variant={TextVariant.inherit}\n      color={TextColor.inherit}\n    >\n      {snapName}\n    </Text>\n  );\n}\n\nexport const PERMISSION_DESCRIPTIONS = deepFreeze({\n  [RestrictedMethods.eth_accounts]: ({ t }) => ({\n    label: t('permission_ethereumAccounts'),\n    leftIcon: IconName.Eye,\n    weight: PermissionWeight.eth_accounts,\n  }),\n  [PermissionNames.permittedChains]: ({ t }) => ({\n    label: t('permission_walletSwitchEthereumChain'),\n    leftIcon: IconName.Wifi,\n    weight: PermissionWeight.permittedChains,\n  }),\n  [RestrictedMethods.snap_dialog]: ({ t, subjectName }) => ({\n    label: t('permission_dialog'),\n    description: t('permission_dialogDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Messages,\n    weight: PermissionWeight.snap_dialog,\n  }),\n  [RestrictedMethods.snap_notify]: ({ t, subjectName }) => ({\n    label: t('permission_notifications'),\n    description: t('permission_notificationsDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Notification,\n    weight: PermissionWeight.snap_notify,\n  }),\n  [RestrictedMethods.snap_getBip32PublicKey]: ({\n    t,\n    permissionValue,\n    subjectName,\n  }) =>\n    permissionValue.caveats[0].value.map(({ path, curve }, i) => {\n      const baseDescription = {\n        leftIcon: IconName.SecuritySearch,\n        weight: PermissionWeight.snap_getBip32PublicKey,\n        id: `public-key-access-bip32-${path\n          .join('-')\n          ?.replace(/'/gu, 'h')}-${curve}-${i}`,\n        warningMessageSubject:\n          getSnapDerivationPathName(path, curve) ??\n          `${t('unknownNetworkForKeyEntropy')}  ${path.join('/')} (${curve})`,\n      };\n\n      const friendlyName = getSnapDerivationPathName(path, curve);\n      if (friendlyName) {\n        return {\n          ...baseDescription,\n          label: t('permission_viewNamedBip32PublicKeys', [\n            <Text\n              color={TextColor.inherit}\n              variant={TextVariant.inherit}\n              fontWeight={FontWeight.Medium}\n              key={path.join('/')}\n            >\n              {friendlyName}\n            </Text>,\n          ]),\n          description: t('permission_viewBip32PublicKeysDescription', [\n            <Text\n              color={TextColor.inherit}\n              variant={TextVariant.inherit}\n              fontWeight={FontWeight.Medium}\n              key={`description-${path.join('/')}`}\n            >\n              {friendlyName}\n            </Text>,\n            getSnapNameComponent(subjectName),\n          ]),\n        };\n      }\n\n      return {\n        ...baseDescription,\n        label: t('permission_viewBip32PublicKeys', [\n          <Text\n            color={TextColor.inherit}\n            variant={TextVariant.inherit}\n            fontWeight={FontWeight.Medium}\n            key={path.join('/')}\n          >\n            {`${t('unknownNetworkForKeyEntropy')} `} {path.join('/')}\n          </Text>,\n          curve,\n        ]),\n        description: t('permission_viewBip32PublicKeysDescription', [\n          <Text\n            color={TextColor.inherit}\n            variant={TextVariant.inherit}\n            fontWeight={FontWeight.Medium}\n            key={`description-${path.join('/')}`}\n          >\n            {path.join('/')}\n          </Text>,\n          getSnapNameComponent(subjectName),\n        ]),\n      };\n    }),\n  [RestrictedMethods.snap_getBip32Entropy]: ({\n    t,\n    permissionValue,\n    subjectName,\n  }) =>\n    permissionValue.caveats[0].value.map(({ path, curve }, i) => {\n      const baseDescription = {\n        leftIcon: IconName.Key,\n        weight: PermissionWeight.snap_getBip32Entropy,\n        id: `key-access-bip32-${path\n          .join('-')\n          ?.replace(/'/gu, 'h')}-${curve}-${i}`,\n        warningMessageSubject:\n          getSnapDerivationPathName(path, curve) ??\n          `${t('unknownNetworkForKeyEntropy')} ${path.join('/')} (${curve})`,\n      };\n\n      const friendlyName = getSnapDerivationPathName(path, curve);\n      if (friendlyName) {\n        return {\n          ...baseDescription,\n          label: t('permission_manageBip32Keys', [\n            <Text\n              color={TextColor.inherit}\n              variant={TextVariant.inherit}\n              fontWeight={FontWeight.Medium}\n              key={path.join('/')}\n            >\n              {friendlyName}\n            </Text>,\n          ]),\n          description: t('permission_manageBip44AndBip32KeysDescription', [\n            getSnapNameComponent(subjectName),\n          ]),\n        };\n      }\n\n      return {\n        ...baseDescription,\n        label: t('permission_manageBip32Keys', [\n          <Text\n            color={TextColor.inherit}\n            variant={TextVariant.inherit}\n            fontWeight={FontWeight.Medium}\n            key={path.join('/')}\n          >\n            {`${t('unknownNetworkForKeyEntropy')} ${path.join('/')} (${curve})`}\n          </Text>,\n        ]),\n        description: t('permission_manageBip44AndBip32KeysDescription', [\n          getSnapNameComponent(subjectName),\n        ]),\n      };\n    }),\n  [RestrictedMethods.snap_getBip44Entropy]: ({\n    t,\n    permissionValue,\n    subjectName,\n  }) =>\n    permissionValue.caveats[0].value.map(({ coinType }, i) => ({\n      label: t('permission_manageBip44Keys', [\n        <Text\n          color={TextColor.inherit}\n          variant={TextVariant.inherit}\n          fontWeight={FontWeight.Medium}\n          key={`coin-type-${coinType}`}\n        >\n          {getSlip44ProtocolName(coinType) ??\n            `${t('unknownNetworkForKeyEntropy')} m/44'/${coinType}'`}\n        </Text>,\n      ]),\n      description: t('permission_manageBip44AndBip32KeysDescription', [\n        getSnapNameComponent(subjectName),\n      ]),\n      leftIcon: IconName.Key,\n      weight: PermissionWeight.snap_getBip44Entropy,\n      id: `key-access-bip44-${coinType}-${i}`,\n      warningMessageSubject:\n        getSlip44ProtocolName(coinType) ??\n        `${t('unknownNetworkForKeyEntropy')} m/44'/${coinType}'`,\n    })),\n  [RestrictedMethods.snap_getEntropy]: ({ t, subjectName }) => ({\n    label: t('permission_getEntropy', [getSnapNameComponent(subjectName)]),\n    description: t('permission_getEntropyDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.SecurityKey,\n    weight: PermissionWeight.snap_getEntropy,\n  }),\n\n  [RestrictedMethods.snap_manageState]: ({ t, subjectName }) => ({\n    label: t('permission_manageState'),\n    description: t('permission_manageStateDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.AddSquare,\n    weight: PermissionWeight.snap_manageState,\n  }),\n  [RestrictedMethods.snap_getLocale]: ({ t, subjectName }) => ({\n    label: t('permission_getLocale'),\n    description: t('permission_getLocaleDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Global,\n    weight: PermissionWeight.snap_getLocale,\n  }),\n  [RestrictedMethods.snap_getPreferences]: ({ t, subjectName }) => ({\n    label: t('permission_getPreferences'),\n    description: t('permission_getPreferencesDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Customize,\n    weight: 4,\n  }),\n  [RestrictedMethods.wallet_snap]: ({ t, permissionValue, getSubjectName }) => {\n    const snaps = permissionValue.caveats[0].value;\n    const baseDescription = {\n      leftIcon: IconName.Flash,\n      rightIcon: RIGHT_INFO_ICON,\n      weight: PermissionWeight.wallet_snap,\n    };\n\n    return Object.keys(snaps).map((snapId) => {\n      const snapName = getSubjectName(snapId);\n      if (snapName) {\n        return {\n          ...baseDescription,\n          label: t('permission_accessNamedSnap', [\n            <Text\n              color={TextColor.inherit}\n              variant={TextVariant.inherit}\n              fontWeight={FontWeight.Medium}\n              key={snapId}\n            >\n              {snapName}\n            </Text>,\n          ]),\n          description: t('permission_accessSnapDescription', [snapName]),\n        };\n      }\n\n      return {\n        ...baseDescription,\n        label: t('permission_accessSnap', [snapId]),\n        description: t('permission_accessSnapDescription', [snapId]),\n      };\n    });\n  },\n  [EndowmentPermissions['endowment:network-access']]: ({ t, subjectName }) => ({\n    label: t('permission_accessNetwork'),\n    description: t('permission_accessNetworkDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Wifi,\n    weight: PermissionWeight.endowment_networkAccess,\n  }),\n  [EndowmentPermissions['endowment:webassembly']]: ({ t, subjectName }) => ({\n    label: t('permission_webAssembly'),\n    description: t('permission_webAssemblyDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.DocumentCode,\n    rightIcon: null,\n    weight: PermissionWeight.endowment_webassembly,\n  }),\n  [EndowmentPermissions['endowment:transaction-insight']]: ({\n    t,\n    permissionValue,\n    subjectName,\n  }) => {\n    const baseDescription = {\n      leftIcon: IconName.Speedometer,\n      weight: PermissionWeight.endowment_transactionInsight,\n    };\n\n    const result = [\n      {\n        ...baseDescription,\n        label: t('permission_transactionInsight'),\n        description: t('permission_transactionInsightDescription', [\n          getSnapNameComponent(subjectName),\n        ]),\n      },\n    ];\n\n    if (\n      isNonEmptyArray(permissionValue.caveats) &&\n      permissionValue.caveats[0].type === SnapCaveatType.TransactionOrigin &&\n      permissionValue.caveats[0].value\n    ) {\n      result.push({\n        ...baseDescription,\n        label: t('permission_transactionInsightOrigin'),\n        description: t('permission_transactionInsightOriginDescription', [\n          getSnapNameComponent(subjectName),\n        ]),\n        leftIcon: IconName.Explore,\n      });\n    }\n\n    return result;\n  },\n  [EndowmentPermissions['endowment:cronjob']]: ({ t, subjectName }) => ({\n    label: t('permission_cronjob'),\n    description: t('permission_cronjobDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Clock,\n    weight: PermissionWeight.endowment_cronjob,\n  }),\n  [EndowmentPermissions['endowment:ethereum-provider']]: ({\n    t,\n    subjectName,\n  }) => ({\n    label: t('permission_ethereumProvider'),\n    description: t('permission_ethereumProviderDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Ethereum,\n    weight: PermissionWeight.endowment_ethereumProvider,\n    id: 'ethereum-provider-access',\n    message: t('ethereumProviderAccess', [getSnapNameComponent(subjectName)]),\n  }),\n  [EndowmentPermissions['endowment:rpc']]: ({\n    t,\n    permissionValue,\n    subjectName,\n  }) => {\n    const baseDescription = {\n      leftIcon: IconName.Hierarchy,\n      weight: PermissionWeight.endowment_rpc,\n    };\n\n    const { snaps, dapps, allowedOrigins } =\n      getRpcCaveatOrigins(permissionValue);\n    const results = [];\n    if (snaps) {\n      results.push({\n        ...baseDescription,\n        label: t('permission_rpc', [\n          t('otherSnaps'),\n          getSnapNameComponent(subjectName),\n        ]),\n        description: t('permission_rpcDescription', [\n          t('otherSnaps'),\n          getSnapNameComponent(subjectName),\n        ]),\n      });\n    }\n\n    if (dapps) {\n      results.push({\n        ...baseDescription,\n        label: t('permission_rpc', [\n          t('websites'),\n          getSnapNameComponent(subjectName),\n        ]),\n        description: t('permission_rpcDescription', [\n          t('websites'),\n          getSnapNameComponent(subjectName),\n        ]),\n      });\n    }\n\n    if (allowedOrigins?.length > 0) {\n      let originsMessage;\n\n      if (allowedOrigins.length === 1) {\n        originsMessage = (\n          <Text\n            color={TextColor.inherit}\n            variant={TextVariant.inherit}\n            fontWeight={FontWeight.Medium}\n            style={{ lineBreak: 'anywhere' }}\n          >\n            {allowedOrigins[0]}\n          </Text>\n        );\n      } else {\n        const lastOrigin = allowedOrigins.slice(-1);\n\n        const originList = allowedOrigins.slice(0, -1).map((origin) => (\n          <>\n            <Text\n              color={TextColor.inherit}\n              variant={TextVariant.inherit}\n              fontWeight={FontWeight.Medium}\n              style={{ lineBreak: 'anywhere' }}\n            >\n              {origin}\n            </Text>\n            {', '}\n          </>\n        ));\n\n        originsMessage = t('permission_rpcDescriptionOriginList', [\n          originList,\n          <Text\n            color={TextColor.inherit}\n            variant={TextVariant.inherit}\n            fontWeight={FontWeight.Medium}\n            key=\"2\"\n            style={{ lineBreak: 'anywhere' }}\n          >\n            {lastOrigin}\n          </Text>,\n        ]);\n      }\n      results.push({\n        ...baseDescription,\n        label: t('permission_rpc', [\n          originsMessage,\n          getSnapNameComponent(subjectName),\n        ]),\n        description: t('permission_rpcDescription', [\n          originsMessage,\n          getSnapNameComponent(subjectName),\n        ]),\n      });\n    }\n\n    return results;\n  },\n  [EndowmentPermissions['endowment:lifecycle-hooks']]: ({\n    t,\n    subjectName,\n  }) => ({\n    label: t('permission_lifecycleHooks'),\n    description: t('permission_lifecycleHooksDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Hierarchy,\n    weight: PermissionWeight.endowment_lifecycleHooks,\n  }),\n  [EndowmentPermissions['endowment:page-home']]: ({ t, subjectName }) => ({\n    label: t('permission_homePage'),\n    description: t('permission_homePageDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.Home,\n    weight: PermissionWeight.endowment_pageHome,\n  }),\n  ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n  [RestrictedMethods.snap_manageAccounts]: ({ t, subjectName }) => ({\n    label: t('permission_manageAccounts'),\n    description: t('permission_manageAccountsDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.UserCircleAdd,\n    rightIcon: null,\n    weight: PermissionWeight.snap_manageAccounts,\n  }),\n  [EndowmentPermissions['endowment:keyring']]: ({ t, subjectName }) => ({\n    label: t('permission_keyring'),\n    description: t('permission_keyringDescription', [\n      getSnapNameComponent(subjectName),\n    ]),\n    leftIcon: IconName.UserCircleAdd,\n    rightIcon: null,\n    weight: PermissionWeight.endowment_keyring,\n  }),\n  ///: END:ONLY_INCLUDE_IF\n  [EndowmentPermissions['endowment:name-lookup']]: ({ t }) => ({\n    label: t('permission_nameLookup'),\n    description: t('permission_nameLookupDescription'),\n    leftIcon: IconName.Search,\n    weight: PermissionWeight.endowment_nameLookup,\n  }),\n  [EndowmentPermissions['endowment:signature-insight']]: ({\n    t,\n    permissionValue,\n    subjectName,\n  }) => {\n    const baseDescription = {\n      leftIcon: IconName.Warning,\n      weight: PermissionWeight.endowment_signatureInsight,\n    };\n\n    const result = [\n      {\n        ...baseDescription,\n        label: t('permission_signatureInsight'),\n        description: t('permission_signatureInsightDescription', [\n          getSnapNameComponent(subjectName),\n        ]),\n      },\n    ];\n\n    if (\n      isNonEmptyArray(permissionValue.caveats) &&\n      permissionValue.caveats.find((caveat) => {\n        return caveat.type === SnapCaveatType.SignatureOrigin && caveat.value;\n      })\n    ) {\n      result.push({\n        ...baseDescription,\n        label: t('permission_signatureInsightOrigin'),\n        description: t('permission_signatureInsightOriginDescription', [\n          getSnapNameComponent(subjectName),\n        ]),\n        leftIcon: IconName.Explore,\n      });\n    }\n\n    return result;\n  },\n  // connection_permission is pseudo permission used only for\n  // displaying pre-approved connections alongside other permissions\n  [ConnectionPermission.connection_permission]: ({\n    t,\n    permissionValue,\n    subjectName,\n  }) => {\n    return Object.keys(permissionValue).map((connection) => {\n      let connectionName = getURLHost(connection);\n      // In case the connection is a Snap\n      if (!connectionName) {\n        connectionName = connection.replace('npm:', '');\n      }\n\n      return {\n        label: t('snapConnectTo', [\n          <Text\n            key=\"connectToMain\"\n            fontWeight={FontWeight.Medium}\n            variant={TextVariant.inherit}\n            color={TextColor.inherit}\n            style={{ lineBreak: 'anywhere' }}\n          >\n            {connectionName}\n          </Text>,\n        ]),\n        description: t('snapConnectionPermissionDescription', [\n          getSnapNameComponent(subjectName),\n          <Text\n            key=\"connectToDescription\"\n            fontWeight={FontWeight.Medium}\n            variant={TextVariant.inherit}\n            color={TextColor.inherit}\n          >\n            {connectionName}\n          </Text>,\n        ]),\n        leftIcon: undefined, // Icon for connections is handled by PermissionCell\n        connection,\n        connectionName,\n        subjectName,\n        weight: PermissionWeight.connection_permission,\n      };\n    });\n  },\n  [UNKNOWN_PERMISSION]: ({ t, permissionName }) => ({\n    label: t('permission_unknown', [permissionName ?? 'undefined']),\n    leftIcon: IconName.Question,\n    rightIcon: null,\n    weight: PermissionWeight.unknown_permission,\n  }),\n});\n\n/**\n * @typedef {object} PermissionLabelObject\n * @property {string} label - The text label.\n * @property {string} [description] - An optional description, shown when the\n * `rightIcon` is hovered.\n * @property {string} leftIcon - The left icon.\n * @property {string} rightIcon - The right icon.\n * @property {number} weight - The weight of the permission.\n * @property {string} permissionName - The name of the permission.\n * @property {string} permissionValue - The raw value of the permission.\n */\n\n/**\n * @typedef {object} PermissionDescriptionParamsObject\n * @property {Function} t - The translation function.\n * @property {string} permissionName - The name of the permission.\n * @property {object} permissionValue - The permission object.\n * @property {string} subjectName - The name of the subject.\n * @property {Function} getSubjectName - The function used to get the subject name.\n */\n\n/**\n * @param {PermissionDescriptionParamsObject} params - The permission description params object.\n * @returns {PermissionLabelObject[]}\n */\nexport const getPermissionDescription = ({\n  t,\n  permissionName,\n  permissionValue,\n  subjectName,\n  getSubjectName,\n}) => {\n  let value = PERMISSION_DESCRIPTIONS[UNKNOWN_PERMISSION];\n\n  if (Object.hasOwnProperty.call(PERMISSION_DESCRIPTIONS, permissionName)) {\n    value = PERMISSION_DESCRIPTIONS[permissionName];\n  }\n\n  const result = value({\n    t,\n    permissionName,\n    permissionValue,\n    subjectName,\n    getSubjectName,\n  });\n  if (!Array.isArray(result)) {\n    return [{ ...result, permissionName, permissionValue }];\n  }\n\n  return result.map((item) => ({\n    ...item,\n    permissionName,\n    permissionValue,\n  }));\n};\n\n/**\n * @typedef {object} WeightedPermissionDescriptionParamsObject\n * @property {Function} t - The translation function.\n * @property {string} permissions - The permissions object.\n * @property {Function} [getSubjectName] - The function to get a subject name.\n * @property {string} [subjectName] - The name of the subject.\n */\n\n/**\n * Get the weighted permissions from a permissions object. The weight is used to\n * sort the permissions in the UI.\n *\n * @param {WeightedPermissionDescriptionParamsObject} parms - The weighted permissions params object.\n * @returns {PermissionLabelObject[]}\n */\nexport function getWeightedPermissions({\n  t,\n  permissions,\n  getSubjectName,\n  subjectName,\n}) {\n  return Object.entries(permissions)\n    .reduce(\n      (target, [permissionName, permissionValue]) =>\n        target.concat(\n          getPermissionDescription({\n            t,\n            permissionName,\n            permissionValue,\n            subjectName,\n            getSubjectName,\n          }),\n        ),\n      [],\n    )\n    .sort((left, right) => left.weight - right.weight);\n}\n","import { InternalAccount, isEvmAccountType } from '@metamask/keyring-api';\nimport { RestrictedEthMethods } from '../../../shared/constants/permissions';\n\nexport const containsEthPermissionsAndNonEvmAccount = (\n  accounts: InternalAccount[],\n  permissions: { [key: string]: string },\n) => {\n  const restrictedEthMethods = Object.keys(RestrictedEthMethods);\n  const containsEthPermissions = Object.keys(permissions).some((permission) =>\n    restrictedEthMethods.includes(permission),\n  );\n  const containsNonEvmAccount = accounts.some(\n    (account) => !isEvmAccountType(account.type),\n  );\n\n  return containsEthPermissions && containsNonEvmAccount;\n};\n","export function getPortfolioUrl(\n  endpoint = '',\n  metamaskEntry = '',\n  metaMetricsId = '',\n  metricsEnabled = false,\n  marketingEnabled = false,\n  accountAddress,\n  tab,\n) {\n  const baseUrl = process.env.PORTFOLIO_URL || '';\n  const url = new URL(endpoint, baseUrl);\n\n  url.searchParams.append('metamaskEntry', metamaskEntry);\n  url.searchParams.append('metametricsId', metaMetricsId);\n\n  // Append privacy preferences for metrics + marketing on user navigation to Portfolio\n  url.searchParams.append('metricsEnabled', String(metricsEnabled));\n  url.searchParams.append('marketingEnabled', String(marketingEnabled));\n\n  if (accountAddress) {\n    url.searchParams.append('accountAddress', accountAddress);\n  }\n\n  if (tab) {\n    url.searchParams.append('tab', tab);\n  }\n\n  return url.href;\n}\n","/* eslint-disable require-unicode-regexp */\nimport SETTINGS_CONSTANTS from '../constants/settings';\n\nlet settingsRoutes;\n\n/** @returns {SettingRouteConfig[]} */\nexport function getSettingsRoutes() {\n  if (settingsRoutes) {\n    return settingsRoutes;\n  }\n  settingsRoutes = SETTINGS_CONSTANTS.filter((routeObject) =>\n    routeObject.featureFlag ? process.env[routeObject.featureFlag] : true,\n  );\n  return settingsRoutes;\n}\n\n/**\n * @param {Function} t - context.t function\n * @param {string} tabMessage\n * @returns {SettingRouteConfig[]}\n */\nfunction getFilteredSettingsRoutes(t, tabMessage) {\n  return getSettingsRoutes().filter((routeObject) => {\n    return routeObject.tabMessage(t) === tabMessage;\n  });\n}\n\n/**\n * @param {Function} t - context.t function\n * @param {string} tabMessage\n * @returns {number}\n */\nexport function getNumberOfSettingRoutesInTab(t, tabMessage) {\n  return getFilteredSettingsRoutes(t, tabMessage).length;\n}\n\nexport function handleSettingsRefs(t, tabMessage, settingsRefs) {\n  const settingsSearchJsonFiltered = getFilteredSettingsRoutes(t, tabMessage);\n  const settingsRefsIndex = settingsSearchJsonFiltered.findIndex(\n    (routeObject) =>\n      routeObject.route.substring(1) === window.location.hash.substring(1),\n  );\n  if (settingsRefsIndex === -1) {\n    return;\n  }\n\n  const settingsRef =\n    settingsSearchJsonFiltered.length === 1\n      ? settingsRefs\n      : settingsRefs[settingsRefsIndex];\n\n  if (settingsRef?.current) {\n    settingsRef.current.scrollIntoView({\n      behavior: 'smooth',\n    });\n    settingsRef.current.focus();\n    const historySettingsUrl = window.location.hash.split('#')[1];\n    window.location.hash = historySettingsUrl;\n  }\n}\n\nfunction colorText(menuElement, regex) {\n  if (menuElement !== null) {\n    let elemText = menuElement.innerHTML;\n    elemText = elemText.replace('&amp;', '&');\n    elemText = elemText.replace(\n      /(<span class=\"settings-page__header__search__list__item__highlight\">|<\\/span>)/gim,\n      '',\n    );\n    menuElement.innerHTML = elemText.replace(\n      regex,\n      '<span class=\"settings-page__header__search__list__item__highlight\">$&</span>',\n    );\n  }\n}\n\nexport function highlightSearchedText() {\n  const searchElem = document.getElementById('search-settings');\n  const searchRegex = new RegExp(searchElem.value, 'gi');\n  const results = document.querySelectorAll(\n    '.settings-page__header__search__list__item',\n  );\n\n  [...results].forEach((element) => {\n    const menuTabElement = element.querySelector(\n      '.settings-page__header__search__list__item__tab',\n    );\n    const menuSectionElement = element.querySelector(\n      '.settings-page__header__search__list__item__section',\n    );\n\n    colorText(menuTabElement, searchRegex);\n    colorText(menuSectionElement, searchRegex);\n  });\n}\n","/**\n * Check if the given value is a valid snap ID.\n *\n * NOTE: This function is a duplicate oF a yet to be released version in @metamask/snaps-utils.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a valid snap ID, and `false` otherwise.\n */\nexport function isSnapId(value) {\n  return (\n    (typeof value === 'string' || value instanceof String) &&\n    (value.startsWith('local:') || value.startsWith('npm:'))\n  );\n}\n","'use strict';\n\nimport {\n  ENVIRONMENT_TYPE_POPUP,\n  PLATFORM_BRAVE,\n  PLATFORM_FIREFOX,\n} from '../../../shared/constants/app';\nimport { getEnvironmentType, getPlatform } from '../../../app/scripts/lib/util';\n\nclass WebcamUtils {\n  static async checkStatus() {\n    const isPopup = getEnvironmentType() === ENVIRONMENT_TYPE_POPUP;\n    const isFirefoxOrBrave =\n      getPlatform() === (PLATFORM_FIREFOX || PLATFORM_BRAVE);\n\n    const devices = await window.navigator.mediaDevices.enumerateDevices();\n    const webcams = devices.filter((device) => device.kind === 'videoinput');\n    const hasWebcam = webcams.length > 0;\n    // A non-empty-string label implies that the webcam has been granted permission, as\n    // otherwise the label is kept blank to prevent fingerprinting\n    const hasWebcamPermissions = webcams.some(\n      (webcam) => webcam.label && webcam.label.length > 0,\n    );\n\n    if (hasWebcam) {\n      let environmentReady = true;\n      if ((isFirefoxOrBrave && isPopup) || (isPopup && !hasWebcamPermissions)) {\n        environmentReady = false;\n      }\n      return {\n        permissions: hasWebcamPermissions,\n        environmentReady,\n      };\n    }\n    const error = new Error('No webcam found');\n    error.type = 'NO_WEBCAM_FOUND';\n    throw error;\n  }\n}\n\nexport default WebcamUtils;\n","export const openWindow = (url: string, target: string) => {\n  window.open(url, target || '_blank', 'noopener');\n};\n","import { useCallback, useContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setBridgeFeatureFlags } from '../../ducks/bridge/actions';\nimport {\n  getCurrentChainId,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  getCurrentKeyring,\n  getDataCollectionForMarketing,\n  getIsBridgeChain,\n  getIsBridgeEnabled,\n  getMetaMetricsId,\n  getParticipateInMetaMetrics,\n  SwapsEthToken,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../selectors';\nimport { MetaMetricsContext } from '../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../shared/constants/metametrics';\n\nimport {\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  CROSS_CHAIN_SWAP_ROUTE,\n  PREPARE_SWAP_ROUTE,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../helpers/constants/routes';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { isHardwareKeyring } from '../../helpers/utils/hardware';\nimport { getPortfolioUrl } from '../../helpers/utils/portfolio';\nimport { setSwapsFromToken } from '../../ducks/swaps/swaps';\nimport { SwapsTokenObject } from '../../../shared/constants/swaps';\n///: END:ONLY_INCLUDE_IF\n\nconst useBridging = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const metaMetricsId = useSelector(getMetaMetricsId);\n  const isMetaMetricsEnabled = useSelector(getParticipateInMetaMetrics);\n  const isMarketingEnabled = useSelector(getDataCollectionForMarketing);\n  const chainId = useSelector(getCurrentChainId);\n  const keyring = useSelector(getCurrentKeyring);\n  const usingHardwareWallet = isHardwareKeyring(keyring.type);\n\n  const isBridgeSupported = useSelector(getIsBridgeEnabled);\n  const isBridgeChain = useSelector(getIsBridgeChain);\n\n  useEffect(() => {\n    dispatch(setBridgeFeatureFlags());\n  }, [dispatch, setBridgeFeatureFlags]);\n\n  const openBridgeExperience = useCallback(\n    (\n      location: string,\n      token: SwapsTokenObject | SwapsEthToken,\n      portfolioUrlSuffix?: string,\n    ) => {\n      if (!isBridgeChain) {\n        return;\n      }\n\n      if (isBridgeSupported) {\n        trackEvent({\n          event: MetaMetricsEventName.BridgeLinkClicked,\n          category: MetaMetricsEventCategory.Navigation,\n          properties: {\n            token_symbol: token.symbol,\n            location,\n            text: 'Bridge',\n            chain_id: chainId,\n          },\n        });\n        dispatch(\n          setSwapsFromToken({ ...token, address: token.address.toLowerCase() }),\n        );\n        if (usingHardwareWallet && global.platform.openExtensionInBrowser) {\n          global.platform.openExtensionInBrowser(\n            PREPARE_SWAP_ROUTE,\n            null,\n            false,\n          );\n        } else {\n          history.push(CROSS_CHAIN_SWAP_ROUTE + PREPARE_SWAP_ROUTE);\n        }\n      } else {\n        const portfolioUrl = getPortfolioUrl(\n          'bridge',\n          'ext_bridge_button',\n          metaMetricsId,\n          isMetaMetricsEnabled,\n          isMarketingEnabled,\n        );\n        global.platform.openTab({\n          url: `${portfolioUrl}${\n            portfolioUrlSuffix ?? `&token=${token.address}`\n          }`,\n        });\n        trackEvent({\n          category: MetaMetricsEventCategory.Navigation,\n          event: MetaMetricsEventName.BridgeLinkClicked,\n          properties: {\n            location,\n            text: 'Bridge',\n            url: portfolioUrl,\n            chain_id: chainId,\n            token_symbol: token.symbol,\n          },\n        });\n      }\n    },\n    [\n      isBridgeSupported,\n      isBridgeChain,\n      chainId,\n      setSwapsFromToken,\n      dispatch,\n      usingHardwareWallet,\n      history,\n      metaMetricsId,\n      trackEvent,\n      isMetaMetricsEnabled,\n      isMarketingEnabled,\n    ],\n  );\n\n  return { openBridgeExperience };\n};\n\nexport default useBridging;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsMetamaskNotificationsEnabled,\n  selectIsFeatureAnnouncementsEnabled,\n  getFeatureAnnouncementsReadCount,\n  getFeatureAnnouncementsUnreadCount,\n  getOnChainMetamaskNotificationsReadCount,\n  getOnChainMetamaskNotificationsUnreadCount,\n} from '../../selectors/metamask-notifications/metamask-notifications';\nimport {\n  getReadNotificationsCount,\n  getUnreadNotificationsCount,\n} from '../../selectors';\n\nconst useSnapNotificationdCount = () => {\n  const unreadSnapNotificationsCount = useSelector(getUnreadNotificationsCount);\n  const readSnapNotificationsCount = useSelector(getReadNotificationsCount);\n  return { unreadSnapNotificationsCount, readSnapNotificationsCount };\n};\n\nconst useFeatureAnnouncementCount = () => {\n  const isFeatureAnnouncementsEnabled = useSelector(\n    selectIsFeatureAnnouncementsEnabled,\n  );\n\n  const featureAnnouncementsUnreadCount = useSelector(\n    getFeatureAnnouncementsUnreadCount,\n  );\n\n  const featureAnnouncementsReadCount = useSelector(\n    getFeatureAnnouncementsReadCount,\n  );\n\n  return isFeatureAnnouncementsEnabled\n    ? { featureAnnouncementsUnreadCount, featureAnnouncementsReadCount }\n    : { featureAnnouncementsUnreadCount: 0, featureAnnouncementsReadCount: 0 };\n};\n\nconst useWalletNotificationCount = () => {\n  const isMetamaskNotificationsEnabled = useSelector(\n    selectIsMetamaskNotificationsEnabled,\n  );\n\n  const onChainMetamaskNotificationsUnreadCount = useSelector(\n    getOnChainMetamaskNotificationsUnreadCount,\n  );\n\n  const onChainMetamaskNotificationsReadCount = useSelector(\n    getOnChainMetamaskNotificationsReadCount,\n  );\n\n  return isMetamaskNotificationsEnabled\n    ? {\n        onChainMetamaskNotificationsUnreadCount,\n        onChainMetamaskNotificationsReadCount,\n      }\n    : {\n        onChainMetamaskNotificationsUnreadCount: 0,\n        onChainMetamaskNotificationsReadCount: 0,\n      };\n};\n\nexport function useUnreadNotificationsCounter() {\n  const { unreadSnapNotificationsCount } = useSnapNotificationdCount();\n  const { featureAnnouncementsUnreadCount } = useFeatureAnnouncementCount();\n  const { onChainMetamaskNotificationsUnreadCount } =\n    useWalletNotificationCount();\n\n  const notificationsUnreadCount =\n    unreadSnapNotificationsCount +\n    featureAnnouncementsUnreadCount +\n    onChainMetamaskNotificationsUnreadCount;\n\n  return {\n    notificationsUnreadCount,\n  };\n}\n\nexport function useReadNotificationsCounter() {\n  const { readSnapNotificationsCount } = useSnapNotificationdCount();\n  const { featureAnnouncementsReadCount } = useFeatureAnnouncementCount();\n  const { onChainMetamaskNotificationsReadCount } =\n    useWalletNotificationCount();\n\n  const notificationsReadCount =\n    readSnapNotificationsCount +\n    featureAnnouncementsReadCount +\n    onChainMetamaskNotificationsReadCount;\n\n  return {\n    notificationsReadCount,\n  };\n}\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport log from 'loglevel';\nimport {\n  selectIsSignedIn,\n  selectParticipateInMetaMetrics,\n} from '../../selectors/metamask-notifications/authentication';\nimport { selectIsProfileSyncingEnabled } from '../../selectors/metamask-notifications/profile-syncing';\nimport { performSignIn, disableProfileSyncing } from '../../store/actions';\n\n/**\n * Custom hook to manage the creation of a session based on the user's authentication status,\n * profile syncing preference, and participation in MetaMetrics.\n *\n * This hook encapsulates the logic for initiating a sign-in process if the user is not already signed in\n * and either profile syncing or MetaMetrics participation is enabled. It handles loading state and errors\n * during the sign-in process.\n *\n * @returns An object containing:\n * - `createSession`: A function to initiate the session creation process.\n */\nexport function useCreateSession(): {\n  createSession: () => Promise<void>;\n} {\n  const dispatch = useDispatch();\n\n  const isSignedIn = useSelector(selectIsSignedIn);\n  const isProfileSyncingEnabled = useSelector(selectIsProfileSyncingEnabled);\n  const isParticipateInMetaMetrics = useSelector(\n    selectParticipateInMetaMetrics,\n  );\n\n  const createSession = useCallback(async () => {\n    // If the user is already signed in, no need to create a new session\n    if (isSignedIn) {\n      return;\n    }\n\n    // If profile syncing and MetaMetrics participation are disabled, no need to create a session\n    if (!isProfileSyncingEnabled && !isParticipateInMetaMetrics) {\n      return;\n    }\n\n    // Perform sign-in process if profile syncing or MetaMetrics participation is enabled\n    if (isProfileSyncingEnabled || isParticipateInMetaMetrics) {\n      try {\n        await dispatch(performSignIn());\n      } catch (e) {\n        // If an error occurs during the sign-in process, disable profile syncing\n        await dispatch(disableProfileSyncing());\n        const errorMessage =\n          e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        log.error(errorMessage);\n      }\n    }\n  }, [\n    dispatch,\n    isSignedIn,\n    isProfileSyncingEnabled,\n    isParticipateInMetaMetrics,\n  ]);\n\n  return {\n    createSession,\n  };\n}\n","import { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport log from 'loglevel';\nimport { selectIsSignedIn } from '../../selectors/metamask-notifications/authentication';\nimport { selectIsProfileSyncingEnabled } from '../../selectors/metamask-notifications/profile-syncing';\nimport {\n  performSignOut,\n  performSignIn,\n  setParticipateInMetaMetrics,\n  showLoadingIndication,\n  hideLoadingIndication,\n} from '../../store/actions';\n\n/**\n * Provides a hook to enable MetaMetrics tracking.\n * This hook handles user sign-in if not already signed in and sets participation in MetaMetrics to true.\n *\n * @returns An object containing the `enableMetametrics` function, a `loading` boolean indicating the operation status, and an `error` string for error messages.\n */\nexport function useEnableMetametrics(): {\n  enableMetametrics: () => Promise<void>;\n  loading: boolean;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n  const isProfileSyncingEnabled = useSelector(selectIsProfileSyncingEnabled);\n  const isUserSignedIn = useSelector(selectIsSignedIn);\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const enableMetametrics = useCallback(async () => {\n    setLoading(true);\n    dispatch(showLoadingIndication());\n    setError(null);\n\n    try {\n      if (isProfileSyncingEnabled && !isUserSignedIn) {\n        await dispatch(performSignIn());\n      }\n\n      await dispatch(setParticipateInMetaMetrics(true));\n    } catch (e) {\n      setError(e instanceof Error ? e.message : 'An unexpected error occurred');\n      log.error(e);\n      throw e;\n    } finally {\n      setLoading(false);\n      dispatch(hideLoadingIndication());\n    }\n\n    dispatch(hideLoadingIndication());\n  }, [dispatch, isUserSignedIn]);\n\n  return {\n    enableMetametrics,\n    loading,\n    error,\n  };\n}\n\n/**\n * Provides a hook to disable MetaMetrics tracking.\n * This hook handles user sign-out if profile syncing is not enabled and sets participation in MetaMetrics to false.\n *\n * @returns An object containing the `disableMetametrics` function, a `loading` boolean indicating the operation status, and an `error` string for error messages.\n */\nexport function useDisableMetametrics(): {\n  disableMetametrics: () => Promise<void>;\n  loading: boolean;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n  const isProfileSyncingEnabled = useSelector(selectIsProfileSyncingEnabled);\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const disableMetametrics = useCallback(async () => {\n    setLoading(true);\n    dispatch(showLoadingIndication());\n    setError(null);\n\n    try {\n      if (isProfileSyncingEnabled) {\n        await dispatch(performSignOut());\n      }\n      await dispatch(setParticipateInMetaMetrics(false));\n    } catch (e) {\n      setError(e instanceof Error ? e.message : 'An unexpected error occurred');\n      throw e;\n    } finally {\n      setLoading(false);\n      dispatch(hideLoadingIndication());\n    }\n\n    dispatch(hideLoadingIndication());\n  }, [dispatch, isProfileSyncingEnabled]);\n\n  return {\n    disableMetametrics,\n    loading,\n    error,\n  };\n}\n","import { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport type { InternalAccount } from '@metamask/keyring-api';\nimport type { NotificationServicesController } from '@metamask/notification-services-controller';\nimport log from 'loglevel';\n\nimport {\n  createOnChainTriggers,\n  fetchAndUpdateMetamaskNotifications,\n  markMetamaskNotificationsAsRead,\n  enableMetamaskNotifications,\n  disableMetamaskNotifications,\n} from '../../store/actions';\n\ntype Notification = NotificationServicesController.Types.INotification;\ntype MarkAsReadNotificationsParam =\n  NotificationServicesController.Types.MarkAsReadNotificationsParam;\n\n// Define KeyringType interface\ntype KeyringType = {\n  type: string;\n};\n\n// Define AccountType interface\nexport type AccountType = InternalAccount & {\n  balance: string;\n  keyring: KeyringType;\n  label: string;\n};\n\n/**\n * Custom hook to fetch and update the list of notifications.\n * Manages loading and error states internally.\n *\n * @returns An object containing the `listNotifications` function, loading state, and error state.\n */\nexport function useListNotifications(): {\n  listNotifications: () => Promise<Notification[] | undefined>;\n  notificationsData?: Notification[];\n  isLoading: boolean;\n  error?: unknown;\n} {\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<unknown>(null);\n  const [notificationsData, setNotificationsData] = useState<\n    Notification[] | undefined\n  >(undefined);\n\n  const listNotifications = useCallback(async (): Promise<\n    Notification[] | undefined\n  > => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await dispatch(fetchAndUpdateMetamaskNotifications());\n      setNotificationsData(data as unknown as Notification[]);\n      return data as unknown as Notification[];\n    } catch (e) {\n      log.error(e);\n      setError(e instanceof Error ? e.message : 'An unexpected error occurred');\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  }, [dispatch]);\n\n  return {\n    listNotifications,\n    notificationsData,\n    isLoading: loading,\n    error,\n  };\n}\n\n/**\n * Custom hook to enable notifications by creating on-chain triggers.\n * It manages loading and error states internally.\n *\n * @returns An object containing the `enableNotifications` function, loading state, and error state.\n */\nexport function useCreateNotifications(): {\n  createNotifications: () => Promise<void>;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n  const [error, setError] = useState<string | null>(null);\n\n  const createNotifications = useCallback(async () => {\n    setError(null);\n\n    try {\n      await dispatch(createOnChainTriggers());\n    } catch (e) {\n      setError(e instanceof Error ? e.message : 'An unexpected error occurred');\n      log.error(e);\n      throw e;\n    }\n  }, [dispatch]);\n\n  return {\n    createNotifications,\n    error,\n  };\n}\n\n/**\n * Custom hook to enable MetaMask notifications.\n * This hook encapsulates the logic for enabling notifications, handling loading and error states.\n * It uses Redux to dispatch actions related to notifications.\n *\n * @returns An object containing:\n * - `enableNotifications`: A function that triggers the enabling of notifications.\n * - `loading`: A boolean indicating if the enabling process is ongoing.\n * - `error`: A string or null value representing any error that occurred during the process.\n */\nexport function useEnableNotifications(): {\n  enableNotifications: () => Promise<void>;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<string | null>(null);\n\n  const enableNotifications = useCallback(async () => {\n    setError(null);\n\n    try {\n      await dispatch(enableMetamaskNotifications());\n    } catch (e) {\n      setError(e instanceof Error ? e.message : 'An unexpected error occurred');\n      log.error(e);\n      throw e;\n    }\n  }, [dispatch]);\n\n  return {\n    enableNotifications,\n    error,\n  };\n}\n\n/**\n * Custom hook to disable notifications by deleting on-chain triggers associated with accounts.\n * It also disables snap and feature announcements. Manages loading and error states internally.\n *\n * @returns An object containing the `disableNotifications` function, loading state, and error state.\n */\nexport function useDisableNotifications(): {\n  disableNotifications: () => Promise<void>;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<string | null>(null);\n\n  const disableNotifications = useCallback(async () => {\n    setError(null);\n\n    try {\n      await dispatch(disableMetamaskNotifications());\n    } catch (e) {\n      setError(e instanceof Error ? e.message : 'An unexpected error occurred');\n      log.error(e);\n      throw e;\n    }\n  }, [dispatch]);\n\n  return {\n    disableNotifications,\n    error,\n  };\n}\n\n/**\n * Provides a function to mark notifications as read. This hook does not take parameters itself,\n * but returns a function that accepts the notification parameters when called.\n *\n * @returns An object containing the `markNotificationAsRead` function which takes a `notifications`\n * parameter of type `MarkAsReadNotificationsParam` and marks those notifications as read.\n */\nexport function useMarkNotificationAsRead(): {\n  markNotificationAsRead: (\n    notifications: MarkAsReadNotificationsParam,\n  ) => Promise<void>;\n} {\n  const dispatch = useDispatch();\n\n  const markNotificationAsRead = useCallback(\n    async (notifications: MarkAsReadNotificationsParam) => {\n      try {\n        dispatch(markMetamaskNotificationsAsRead(notifications));\n      } catch (e) {\n        log.error(e);\n        throw e;\n      }\n    },\n    [dispatch],\n  );\n\n  return {\n    markNotificationAsRead,\n  };\n}\n","import { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport type { InternalAccount } from '@metamask/keyring-api';\nimport log from 'loglevel';\nimport {\n  disableProfileSyncing as disableProfileSyncingAction,\n  enableProfileSyncing as enableProfileSyncingAction,\n  setIsProfileSyncingEnabled as setIsProfileSyncingEnabledAction,\n  hideLoadingIndication,\n  syncInternalAccountsWithUserStorage,\n} from '../../store/actions';\n\nimport { selectIsSignedIn } from '../../selectors/metamask-notifications/authentication';\nimport { selectIsProfileSyncingEnabled } from '../../selectors/metamask-notifications/profile-syncing';\nimport { getUseExternalServices } from '../../selectors';\nimport { getIsUnlocked } from '../../ducks/metamask/metamask';\n\n// Define KeyringType interface\nexport type KeyringType = {\n  type: string;\n};\n\n// Define AccountType interface\nexport type AccountType = InternalAccount & {\n  balance: string;\n  keyring: KeyringType;\n  label: string;\n};\n\n/**\n * Custom hook to enable profile syncing. This hook handles the process of signing in\n * and enabling profile syncing via dispatch actions.\n *\n * @returns An object containing the `enableProfileSyncing` function, loading state, and error state.\n */\nexport function useEnableProfileSyncing(): {\n  enableProfileSyncing: () => Promise<void>;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<string | null>(null);\n\n  const enableProfileSyncing = useCallback(async () => {\n    setError(null);\n\n    try {\n      // set profile syncing to true\n      await dispatch(enableProfileSyncingAction());\n    } catch (e) {\n      const errorMessage =\n        e instanceof Error ? e.message : JSON.stringify(e ?? '');\n      log.error(errorMessage);\n      setError(errorMessage);\n    }\n  }, [dispatch]);\n\n  return { enableProfileSyncing, error };\n}\n\n/**\n * Custom hook to disable profile syncing. This hook handles the process of disabling notifications,\n * disabling profile syncing, and signing out if MetaMetrics participation is not enabled.\n *\n * @returns An object containing the `disableProfileSyncing` function, current profile syncing state,\n * loading state, and error state.\n */\nexport function useDisableProfileSyncing(): {\n  disableProfileSyncing: () => Promise<void>;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<string | null>(null);\n\n  const disableProfileSyncing = useCallback(async () => {\n    setError(null);\n\n    try {\n      // disable profile syncing\n      await dispatch(disableProfileSyncingAction());\n    } catch (e) {\n      const errorMessage =\n        e instanceof Error ? e.message : JSON.stringify(e ?? '');\n      setError(errorMessage);\n      log.error(errorMessage);\n    } finally {\n      dispatch(hideLoadingIndication());\n    }\n  }, [dispatch]);\n\n  return { disableProfileSyncing, error };\n}\n\nexport function useSetIsProfileSyncingEnabled(): {\n  setIsProfileSyncingEnabled: (state: boolean) => Promise<void>;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<string | null>(null);\n\n  const setIsProfileSyncingEnabled = useCallback(\n    async (state: boolean) => {\n      setError(null);\n\n      try {\n        await dispatch(setIsProfileSyncingEnabledAction(state));\n      } catch (e) {\n        const errorMessage =\n          e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        setError(errorMessage);\n        log.error(errorMessage);\n      }\n    },\n    [dispatch],\n  );\n\n  return { setIsProfileSyncingEnabled, error };\n}\n\n/**\n * Custom hook to dispatch account syncing.\n *\n * @returns An object containing the `dispatchAccountSyncing` function, boolean `shouldDispatchAccountSyncing`,\n * and error state.\n */\nexport const useAccountSyncing = () => {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<unknown>(null);\n\n  const isProfileSyncingEnabled = useSelector(selectIsProfileSyncingEnabled);\n  const basicFunctionality = useSelector(getUseExternalServices);\n  const isUnlocked = useSelector(getIsUnlocked);\n  const isSignedIn = useSelector(selectIsSignedIn);\n\n  const shouldDispatchAccountSyncing = useMemo(\n    () =>\n      basicFunctionality && isProfileSyncingEnabled && isUnlocked && isSignedIn,\n    [basicFunctionality, isProfileSyncingEnabled, isUnlocked, isSignedIn],\n  );\n\n  const dispatchAccountSyncing = useCallback(async () => {\n    setError(null);\n\n    try {\n      if (!shouldDispatchAccountSyncing) {\n        return;\n      }\n      await dispatch(syncInternalAccountsWithUserStorage());\n    } catch (e) {\n      log.error(e);\n      setError(e instanceof Error ? e.message : 'An unexpected error occurred');\n    }\n  }, [dispatch, shouldDispatchAccountSyncing]);\n\n  return {\n    dispatchAccountSyncing,\n    shouldDispatchAccountSyncing,\n    error,\n  };\n};\n\n/**\n * Custom hook to apply account syncing effect.\n */\nexport const useAccountSyncingEffect = () => {\n  const { dispatchAccountSyncing } = useAccountSyncing();\n\n  useEffect(() => {\n    dispatchAccountSyncing();\n  }, [dispatchAccountSyncing]);\n};\n","import { useState, useCallback, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport log from 'loglevel';\nimport {\n  setFeatureAnnouncementsEnabled,\n  checkAccountsPresence,\n  deleteOnChainTriggersByAccount,\n  updateOnChainTriggersByAccount,\n  hideLoadingIndication,\n} from '../../store/actions';\nimport { getIsUpdatingMetamaskNotificationsAccount } from '../../selectors/metamask-notifications/metamask-notifications';\n\nexport function useSwitchFeatureAnnouncementsChange(): {\n  onChange: (state: boolean) => Promise<void>;\n  error: null | string;\n} {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<null | string>(null);\n\n  const onChange = useCallback(\n    async (state: boolean) => {\n      setError(null);\n\n      try {\n        await dispatch(setFeatureAnnouncementsEnabled(state));\n      } catch (e) {\n        const errorMessage =\n          e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        setError(errorMessage);\n        throw e;\n      }\n    },\n    [dispatch],\n  );\n\n  return {\n    onChange,\n    error,\n  };\n}\n\nexport type UseSwitchAccountNotificationsData = { [address: string]: boolean };\n\nexport function useSwitchAccountNotifications(): {\n  switchAccountNotifications: (\n    accounts: string[],\n  ) => Promise<UseSwitchAccountNotificationsData | undefined>;\n  isLoading: boolean;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const switchAccountNotifications = useCallback(\n    async (\n      accounts: string[],\n    ): Promise<UseSwitchAccountNotificationsData | undefined> => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const data = await dispatch(checkAccountsPresence(accounts));\n        return data as unknown as UseSwitchAccountNotificationsData;\n      } catch (e) {\n        const errorMessage =\n          e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        setError(errorMessage);\n        log.error(errorMessage);\n        throw e;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [dispatch],\n  );\n\n  return { switchAccountNotifications, isLoading, error };\n}\n\nexport function useSwitchAccountNotificationsChange(): {\n  onChange: (addresses: string[], state: boolean) => Promise<void>;\n  error: string | null;\n} {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<string | null>(null);\n\n  const onChange = useCallback(\n    async (addresses: string[], state: boolean) => {\n      setError(null);\n\n      try {\n        if (state) {\n          await dispatch(updateOnChainTriggersByAccount(addresses));\n        } else {\n          await dispatch(deleteOnChainTriggersByAccount(addresses));\n        }\n      } catch (e) {\n        const errorMessage =\n          e instanceof Error ? e.message : JSON.stringify(e ?? '');\n        log.error(errorMessage);\n        setError(errorMessage);\n        throw e;\n      }\n      dispatch(hideLoadingIndication());\n    },\n    [dispatch],\n  );\n\n  return {\n    onChange,\n    error,\n  };\n}\n\nfunction useRefetchAccountSettings() {\n  const dispatch = useDispatch();\n\n  const getAccountSettings = useCallback(async (accounts: string[]) => {\n    try {\n      const result = (await dispatch(\n        checkAccountsPresence(accounts),\n      )) as unknown as UseSwitchAccountNotificationsData;\n\n      return result;\n    } catch {\n      return {};\n    }\n  }, []);\n\n  return getAccountSettings;\n}\n\n/**\n * Account Settings Hook.\n * Gets initial loading states, and returns enable/disable account states.\n * Also exposes an update() method so each switch can be manually updated.\n *\n * @param accounts - the accounts we are checking to see if notifications are enabled/disabled\n * @returns props for settings page\n */\nexport function useAccountSettingsProps(accounts: string[]) {\n  const accountsBeingUpdated = useSelector(\n    getIsUpdatingMetamaskNotificationsAccount,\n  );\n  const fetchAccountSettings = useRefetchAccountSettings();\n  const [data, setData] = useState<UseSwitchAccountNotificationsData>({});\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Memoize the accounts array to avoid unnecessary re-fetching\n  const jsonAccounts = useMemo(() => JSON.stringify(accounts), [accounts]);\n\n  const update = useCallback(async (addresses: string[]) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await fetchAccountSettings(addresses);\n      setData(res);\n    } catch {\n      setError('Failed to get account settings');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Effect - async get if accounts are enabled/disabled\n  useEffect(() => {\n    try {\n      const memoAccounts: string[] = JSON.parse(jsonAccounts);\n      update(memoAccounts);\n    } catch {\n      setError('Failed to get account settings');\n    } finally {\n      setLoading(false);\n    }\n  }, [jsonAccounts, fetchAccountSettings]);\n\n  return {\n    data,\n    initialLoading: loading,\n    error,\n    accountsBeingUpdated,\n    update,\n  };\n}\n","import { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CaipChainId } from '@metamask/utils';\nimport { ChainId } from '../../../../shared/constants/network';\nimport {\n  getCurrentChainId,\n  getDataCollectionForMarketing,\n  getMetaMetricsId,\n  getParticipateInMetaMetrics,\n} from '../../../selectors';\n\ntype IUseRamps = {\n  openBuyCryptoInPdapp: (chainId?: ChainId | CaipChainId) => void;\n  getBuyURI: (chainId: ChainId | CaipChainId) => string;\n};\n\nexport enum RampsMetaMaskEntry {\n  BuySellButton = 'ext_buy_sell_button',\n  NftBanner = 'ext_buy_banner_nfts',\n  TokensBanner = 'ext_buy_banner_tokens',\n  ActivityBanner = 'ext_buy_banner_activity',\n  BtcBanner = 'ext_buy_banner_btc',\n}\n\nconst portfolioUrl = process.env.PORTFOLIO_URL;\nconst useRamps = (\n  metamaskEntry: RampsMetaMaskEntry = RampsMetaMaskEntry.BuySellButton,\n): IUseRamps => {\n  const chainId = useSelector(getCurrentChainId);\n  const metaMetricsId = useSelector(getMetaMetricsId);\n  const isMetaMetricsEnabled = useSelector(getParticipateInMetaMetrics);\n  const isMarketingEnabled = useSelector(getDataCollectionForMarketing);\n\n  const getBuyURI = useCallback(\n    (_chainId: ChainId | CaipChainId) => {\n      const params = new URLSearchParams();\n      params.set('metamaskEntry', metamaskEntry);\n      params.set('chainId', _chainId);\n      if (metaMetricsId) {\n        params.set('metametricsId', metaMetricsId);\n      }\n      params.set('metricsEnabled', String(isMetaMetricsEnabled));\n      if (isMarketingEnabled) {\n        params.set('marketingEnabled', String(isMarketingEnabled));\n      }\n\n      return `${portfolioUrl}/buy?${params.toString()}`;\n    },\n    [metaMetricsId],\n  );\n\n  const openBuyCryptoInPdapp = useCallback(\n    (_chainId?: ChainId | CaipChainId) => {\n      const buyUrl = getBuyURI(_chainId || chainId);\n      global.platform.openTab({\n        url: buyUrl,\n      });\n    },\n    [chainId],\n  );\n\n  return { openBuyCryptoInPdapp, getBuyURI };\n};\n\nexport default useRamps;\n","import { useSelector } from 'react-redux';\nimport { SeverityLevel } from '@metamask/snaps-sdk';\nimport { getSnapInsights } from '../../selectors';\n\nexport function useInsightSnaps(id) {\n  const insight = useSelector((state) => getSnapInsights(state, id));\n\n  const data = insight ? Object.values(insight) : [];\n\n  const warnings = data.filter(\n    (result) => result.severity === SeverityLevel.Critical,\n  );\n\n  return { data, warnings };\n}\n","import { useState, useEffect, useRef } from 'react';\n\nconst useIsOverflowing = () => {\n  const contentRef = useRef(null);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n\n  useEffect(() => {\n    setIsOverflowing(\n      contentRef.current &&\n        contentRef.current.offsetHeight < contentRef.current.scrollHeight,\n    );\n  }, [contentRef]);\n\n  return { contentRef, isOverflowing };\n};\n\nexport default useIsOverflowing;\n","import { useEffect, useState } from 'react';\nimport { PhishingDetectorResult } from '@metamask/phishing-controller';\nimport { getPhishingResult } from '../../store/actions';\n\n/**\n * Perform a phishing check on the provided link.\n *\n * @param website - The website to check.\n * @returns The safe website URL or nothing if it's a phishing website.\n */\nexport const useSafeWebsite = (website: string) => {\n  const [safeWebsite, setSafeWebsite] = useState<URL>();\n\n  useEffect(() => {\n    const performPhishingCheck = async () => {\n      const phishingResult = (await getPhishingResult(\n        website,\n      )) as PhishingDetectorResult;\n\n      if (!phishingResult.result) {\n        setSafeWebsite(new URL(website));\n      }\n    };\n    if (website) {\n      performPhishingCheck();\n    }\n  }, [website]);\n\n  return safeWebsite;\n};\n","import { shallowEqual, useSelector } from 'react-redux';\nimport {\n  getAllTokens,\n  getCurrentChainId,\n  getCurrentCurrency,\n  getMetaMaskCachedBalances,\n  getTokenExchangeRates,\n  getNativeCurrencyImage,\n  getTokenList,\n} from '../selectors';\nimport {\n  getValueFromWeiHex,\n  getWeiHexFromDecimalValue,\n  sumDecimals,\n} from '../../shared/modules/conversion.utils';\nimport {\n  getConversionRate,\n  getNativeCurrency,\n} from '../ducks/metamask/metamask';\nimport { formatCurrency } from '../helpers/utils/confirm-tx.util';\nimport { getTokenFiatAmount } from '../helpers/utils/token-util';\nimport { isEqualCaseInsensitive } from '../../shared/modules/string-utils';\nimport { useTokenTracker } from './useTokenTracker';\n\nexport const useAccountTotalFiatBalance = (\n  account,\n  shouldHideZeroBalanceTokens,\n) => {\n  const currentChainId = useSelector(getCurrentChainId);\n  const conversionRate = useSelector(getConversionRate);\n  const currentCurrency = useSelector(getCurrentCurrency);\n\n  const contractExchangeRates = useSelector(\n    getTokenExchangeRates,\n    shallowEqual,\n  );\n\n  const cachedBalances = useSelector(getMetaMaskCachedBalances);\n  const balance = cachedBalances?.[account?.address] ?? 0;\n  const nativeFiat = getValueFromWeiHex({\n    value: balance,\n    toCurrency: currentCurrency,\n    conversionRate,\n    numberOfDecimals: 2,\n  });\n\n  const detectedTokens = useSelector(getAllTokens);\n  const tokens = detectedTokens?.[currentChainId]?.[account?.address] ?? [];\n  // This selector returns all the tokens, we need it to get the image of token\n  const allTokenList = useSelector(getTokenList);\n  const allTokenListValues = Object.values(allTokenList);\n  const primaryTokenImage = useSelector(getNativeCurrencyImage);\n  const nativeCurrency = useSelector(getNativeCurrency);\n\n  const { loading, tokensWithBalances } = useTokenTracker({\n    tokens,\n    address: account?.address,\n    includeFailedTokens: true,\n    hideZeroBalanceTokens: shouldHideZeroBalanceTokens,\n  });\n\n  // Create fiat values for token balances\n  const tokenFiatBalances = tokensWithBalances.map((token) => {\n    const contractExchangeTokenKey = Object.keys(contractExchangeRates).find(\n      (key) => isEqualCaseInsensitive(key, token.address),\n    );\n    const tokenExchangeRate =\n      (contractExchangeTokenKey &&\n        contractExchangeRates[contractExchangeTokenKey]) ??\n      0;\n\n    const totalFiatValue = getTokenFiatAmount(\n      tokenExchangeRate,\n      conversionRate,\n      currentCurrency,\n      token.string,\n      token.symbol,\n      false,\n      false,\n    );\n\n    return totalFiatValue;\n  });\n\n  // Create an object with native token info. NOTE: Native token info is fetched from a separate controller\n  const nativeTokenValues = {\n    iconUrl: primaryTokenImage,\n    symbol: nativeCurrency,\n    fiatBalance: nativeFiat,\n  };\n\n  // To match the list of detected tokens with the entire token list to find the image for tokens\n  const findMatchingTokens = (array1, array2) => {\n    const result = [];\n\n    array2.forEach((token2) => {\n      const matchingToken = array1.find(\n        (token1) => token1.symbol === token2.symbol,\n      );\n\n      if (matchingToken) {\n        result.push({\n          ...matchingToken,\n          balance: token2.balance,\n          string: token2.string,\n          balanceError: token2.balanceError,\n        });\n      }\n    });\n\n    return result;\n  };\n\n  const matchingTokens = findMatchingTokens(\n    allTokenListValues,\n    tokensWithBalances,\n  );\n\n  // Combine native token, detected token with image in an array\n  const allTokensWithFiatValues = [\n    nativeTokenValues,\n    ...matchingTokens.map((item, index) => ({\n      ...item,\n      fiatBalance: tokenFiatBalances[index],\n    })),\n  ];\n\n  // Order of the tokens in this array is in decreasing order based on their fiatBalance\n  const orderedTokenList = allTokensWithFiatValues.sort(\n    (a, b) => parseFloat(b.fiatBalance) - parseFloat(a.fiatBalance),\n  );\n\n  // Total native and token fiat balance as a string (ex: \"8.90\")\n  const totalFiatBalance = sumDecimals(\n    nativeFiat,\n    ...tokenFiatBalances,\n  ).toString(10);\n\n  // Fiat balance formatted in user's desired currency (ex: \"$8.90\")\n  const formattedFiat = formatCurrency(totalFiatBalance, currentCurrency);\n\n  // WEI Number which can be used with UserPreferencedCurrencyDisplay component\n  let totalWeiBalance = getWeiHexFromDecimalValue({\n    value: totalFiatBalance,\n    fromCurrency: currentCurrency,\n    conversionRate,\n    invertConversionRate: true,\n  });\n\n  // If we have a totalFiatBalance of \"0\" and conversionRate of \"0\",\n  // getWeiHexFromDecimalValue responds with \"NaN\"\n  if (totalWeiBalance === 'NaN') {\n    totalWeiBalance = '0x0';\n  }\n\n  return {\n    formattedFiat,\n    totalWeiBalance,\n    totalFiatBalance,\n    tokensWithBalances,\n    loading,\n    orderedTokenList,\n  };\n};\n","import { useSelector } from 'react-redux';\n\nimport { toChecksumHexAddress } from '../../shared/modules/hexstring-utils';\nimport {\n  getAddressBook,\n  getInternalAccounts,\n  getTokenList,\n} from '../selectors';\nimport { shortenAddress } from '../helpers/utils/util';\n\nconst useAddressDetails = (toAddress) => {\n  const addressBook = useSelector(getAddressBook);\n  const accounts = useSelector(getInternalAccounts);\n  const tokenList = useSelector(getTokenList);\n  const checksummedAddress = toChecksumHexAddress(toAddress);\n\n  if (!toAddress) {\n    return {};\n  }\n  const toAccount = accounts.find(\n    (account) => toChecksumHexAddress(account.address) === checksummedAddress,\n  );\n\n  const addressBookEntryObject = addressBook.find(\n    (entry) => entry.address === checksummedAddress,\n  );\n  if (addressBookEntryObject?.name) {\n    return { toName: addressBookEntryObject.name, isTrusted: true };\n  }\n  if (toAccount) {\n    return { toName: toAccount.metadata.name, isTrusted: true };\n  }\n  if (tokenList[toAddress?.toLowerCase()]?.name) {\n    return {\n      toName: tokenList[toAddress?.toLowerCase()].name,\n      isTrusted: true,\n    };\n  }\n  return {\n    toName: shortenAddress(checksummedAddress),\n    isTrusted: false,\n  };\n};\n\nexport default useAddressDetails;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useCallback } from 'react';\nimport {\n  AlertsState,\n  selectAlerts,\n  selectConfirmedAlertKeys,\n  selectFieldAlerts,\n  selectGeneralAlerts,\n} from '../selectors/alerts';\nimport {\n  Alert,\n  setAlertConfirmed as setAlertConfirmedAction,\n} from '../ducks/confirm-alerts/confirm-alerts';\nimport { Severity } from '../helpers/constants/design-system';\n\nconst useAlerts = (ownerId: string) => {\n  const dispatch = useDispatch();\n\n  const alerts: Alert[] = useSelector((state) =>\n    selectAlerts(state as AlertsState, ownerId),\n  );\n\n  const confirmedAlertKeys = useSelector((state) =>\n    selectConfirmedAlertKeys(state as AlertsState, ownerId),\n  );\n\n  const generalAlerts = useSelector((state) =>\n    selectGeneralAlerts(state as AlertsState, ownerId),\n  );\n\n  const fieldAlerts = useSelector((state) =>\n    selectFieldAlerts(state as AlertsState, ownerId),\n  );\n\n  const getFieldAlerts = useCallback(\n    (field: string | undefined) => {\n      if (!field) {\n        return [];\n      }\n\n      return alerts.filter((alert) => alert.field === field);\n    },\n    [alerts],\n  );\n\n  const setAlertConfirmed = useCallback(\n    (alertKey: string, isConfirmed: boolean) => {\n      dispatch(setAlertConfirmedAction(ownerId, alertKey, isConfirmed));\n    },\n    [dispatch, setAlertConfirmedAction, ownerId],\n  );\n\n  const isAlertConfirmed = useCallback(\n    (alertKey: string) => {\n      return confirmedAlertKeys.includes(alertKey);\n    },\n    [confirmedAlertKeys],\n  );\n\n  const unconfirmedDangerAlerts = alerts.filter(\n    (alert) =>\n      !isAlertConfirmed(alert.key) && alert.severity === Severity.Danger,\n  );\n  const hasAlerts = alerts.length > 0;\n  const dangerAlerts = alerts.filter(\n    (alert) => alert.severity === Severity.Danger,\n  );\n  const hasUnconfirmedDangerAlerts = unconfirmedDangerAlerts.length > 0;\n\n  return {\n    alerts,\n    fieldAlerts,\n    generalAlerts,\n    getFieldAlerts,\n    hasAlerts,\n    dangerAlerts,\n    hasDangerAlerts: dangerAlerts?.length > 0,\n    hasUnconfirmedDangerAlerts,\n    isAlertConfirmed,\n    setAlertConfirmed,\n    unconfirmedDangerAlerts,\n  };\n};\n\nexport default useAlerts;\n","import { useState, DependencyList, useEffect } from 'react';\n\n/**\n * Represents the result of an asynchronous function where errors\n * are thrown to be handled by an error boundary.\n */\nexport type AsyncResultNoError<T> =\n  | { pending: true; value?: never } // pending\n  | { pending: false; value: T }; // success\n\n/**\n * Represents the result of an asynchronous function with the\n * possibility of an error\n */\nexport type AsyncResult<T> =\n  | (AsyncResultNoError<T> & { error?: never })\n  | { pending: false; value?: never; error: Error }; // error\n\n/**\n * Hook that executes an asynchronous function and returns its result\n * or an error (errors are caught and returned as part of the result).\n *\n * @param asyncFn\n * @param dependencies\n */\nexport function useAsyncResult<T>(\n  asyncFn: () => Promise<T>,\n  dependencies: DependencyList = [],\n): AsyncResult<T> {\n  const [result, setResult] = useState<AsyncResult<T>>({\n    pending: true,\n  });\n\n  useEffect(() => {\n    setResult({ pending: true });\n    let cancelled = false;\n    asyncFn()\n      .then((value) => {\n        if (!cancelled) {\n          setResult({ pending: false, value });\n        }\n      })\n      .catch((error) => {\n        if (!cancelled) {\n          setResult({ pending: false, error: error as Error });\n        }\n      });\n    return () => {\n      cancelled = true;\n    };\n  }, dependencies);\n\n  return result;\n}\n\n/**\n * Hook that executes an asynchronous function and returns its result\n * or throws an error to be handled by an error boundary.\n *\n * @param asyncFn\n * @param deps\n * @returns\n */\nexport function useAsyncResultOrThrow<T>(\n  asyncFn: () => Promise<T>,\n  deps: DependencyList = [],\n): AsyncResultNoError<T> {\n  const result = useAsyncResult(asyncFn, deps);\n\n  if (result.error) {\n    // Error is thrown from render phase to be handled by an error boundary.\n    throw result.error;\n  }\n\n  return result;\n}\n","import { useState, useCallback } from 'react';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { MINUTE } from '../../shared/constants/time';\nimport { COPY_OPTIONS } from '../../shared/constants/copy';\nimport { useTimeout } from './useTimeout';\n\n/**\n * useCopyToClipboard\n *\n * @param {number} [delay=3000] - delay in ms\n * @returns {[boolean, Function]}\n */\nconst DEFAULT_DELAY = MINUTE;\n\n/**\n * @param delay - delay in ms\n * @returns {[boolean, (text: string) => void]}\n */\nexport function useCopyToClipboard(delay = DEFAULT_DELAY) {\n  const [copied, setCopied] = useState(false);\n  const startTimeout = useTimeout(\n    () => {\n      copyToClipboard(' ', COPY_OPTIONS);\n      setCopied(false);\n    },\n    delay,\n    false,\n  );\n\n  const handleCopy = useCallback(\n    (text) => {\n      setCopied(true);\n      startTimeout();\n      copyToClipboard(text, COPY_OPTIONS);\n    },\n    [startTimeout],\n  );\n\n  return [copied, handleCopy];\n}\n","import { useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { formatCurrency } from '../helpers/utils/confirm-tx.util';\nimport {\n  getMultichainCurrentCurrency,\n  getMultichainIsEvm,\n  getMultichainNativeCurrency,\n  getMultichainConversionRate,\n} from '../selectors/multichain';\n\nimport { getValueFromWeiHex } from '../../shared/modules/conversion.utils';\nimport { TEST_NETWORK_TICKER_MAP } from '../../shared/constants/network';\nimport { Numeric } from '../../shared/modules/Numeric';\nimport { EtherDenomination } from '../../shared/constants/common';\nimport { getTokenFiatAmount } from '../helpers/utils/token-util';\nimport { useMultichainSelector } from './useMultichainSelector';\n\n// The smallest non-zero amount that can be displayed.\nexport const MIN_AMOUNT = 0.000001;\n\n// The string to display when 0 < amount < MIN_AMOUNT.\n// TODO(dbrans): Localize this string using Intl.NumberFormatter.\nconst MIN_AMOUNT_DISPLAY = `<${MIN_AMOUNT}`;\n\n// The default precision for displaying currency values.\n// It set to the number of decimal places in the minimum amount.\nexport const DEFAULT_PRECISION = new BigNumber(MIN_AMOUNT).decimalPlaces();\n\nfunction formatEthCurrencyDisplay({\n  isNativeCurrency,\n  isUserPreferredCurrency,\n  currency,\n  nativeCurrency,\n  inputValue,\n  conversionRate,\n  denomination,\n  numberOfDecimals,\n}) {\n  if (isNativeCurrency || (!isUserPreferredCurrency && !nativeCurrency)) {\n    const ethDisplayValue = new Numeric(inputValue, 16, EtherDenomination.WEI)\n      .toDenomination(denomination || EtherDenomination.ETH)\n      .round(numberOfDecimals || DEFAULT_PRECISION)\n      .toBase(10)\n      .toString();\n\n    return ethDisplayValue === '0' && inputValue && Number(inputValue) !== 0\n      ? MIN_AMOUNT_DISPLAY\n      : ethDisplayValue;\n  } else if (isUserPreferredCurrency && conversionRate) {\n    return formatCurrency(\n      getValueFromWeiHex({\n        value: inputValue,\n        fromCurrency: nativeCurrency,\n        toCurrency: currency,\n        conversionRate,\n        numberOfDecimals: numberOfDecimals || 2,\n        toDenomination: denomination,\n      }),\n      currency,\n    );\n  }\n  return null;\n}\n\nfunction formatBtcCurrencyDisplay({\n  isNativeCurrency,\n  isUserPreferredCurrency,\n  currency,\n  currentCurrency,\n  nativeCurrency,\n  inputValue,\n  conversionRate,\n}) {\n  if (isNativeCurrency || (!isUserPreferredCurrency && !nativeCurrency)) {\n    // NOTE: We use the value coming from the BalancesController here (and thus, the non-EVM\n    // account Snap).\n    // We use `Numeric` here, so we handle those amount the same way than for EVMs (it's worth\n    // noting that if `inputValue` is not properly defined, the amount will be set to '0', see\n    // `Numeric` constructor for that)\n    return new Numeric(inputValue, 10).toString(); // BTC usually uses 10 digits\n  } else if (isUserPreferredCurrency && conversionRate) {\n    const amount =\n      getTokenFiatAmount(\n        1, // coin to native conversion rate is 1:1\n        Number(conversionRate), // native to fiat conversion rate\n        currentCurrency,\n        inputValue,\n        'BTC',\n        false,\n        false,\n      ) ?? '0'; // if the conversion fails, return 0\n    return formatCurrency(amount, currency);\n  }\n  return null;\n}\n\n/**\n * Defines the shape of the options parameter for useCurrencyDisplay\n *\n * @typedef {object} UseCurrencyOptions\n * @property {string} [displayValue] - When present is used in lieu of formatting the inputValue\n * @property {string} [prefix] - String to prepend to the final result\n * @property {number} [numberOfDecimals] - Number of significant decimals to display\n * @property {string} [denomination] - Denomination (wei, gwei) to convert to for display\n * @property {string} [currency] - Currency type to convert to. Will override nativeCurrency\n * @property {boolean} [hideLabel] – hide the currency label\n */\n\n/**\n * Defines the return shape of the second value in the tuple\n *\n * @typedef {object} CurrencyDisplayParts\n * @property {string} [prefix] - string to prepend to the value for display\n * @property {string} value - string representing the value, formatted for display\n * @property {string} [suffix] - string to append to the value for display\n */\n\n/**\n * useCurrencyDisplay hook\n *\n * Given a hexadecimal encoded value string and an object of parameters used for formatting the\n * display, produce both a fully formed string and the pieces of that string used for displaying\n * the currency to the user\n *\n * @param {string} inputValue - The value to format for display\n * @param {UseCurrencyOptions} opts - An object for options to format the inputValue\n * @returns {[string, CurrencyDisplayParts]}\n */\nexport function useCurrencyDisplay(\n  inputValue,\n  {\n    account,\n    displayValue,\n    prefix,\n    numberOfDecimals,\n    denomination,\n    currency,\n    ...opts\n  },\n) {\n  const isEvm = useMultichainSelector(getMultichainIsEvm, account);\n  const currentCurrency = useMultichainSelector(\n    getMultichainCurrentCurrency,\n    account,\n  );\n  const nativeCurrency = useMultichainSelector(\n    getMultichainNativeCurrency,\n    account,\n  );\n  const conversionRate = useMultichainSelector(\n    getMultichainConversionRate,\n    account,\n  );\n  const isUserPreferredCurrency = currency === currentCurrency;\n  const isNativeCurrency = currency === nativeCurrency;\n\n  const value = useMemo(() => {\n    if (displayValue) {\n      return displayValue;\n    }\n\n    if (!isEvm) {\n      // TODO: We would need to update this for other non-EVM coins\n      return formatBtcCurrencyDisplay({\n        isNativeCurrency,\n        isUserPreferredCurrency,\n        currency,\n        currentCurrency,\n        nativeCurrency,\n        inputValue,\n        conversionRate,\n      });\n    }\n\n    return formatEthCurrencyDisplay({\n      isNativeCurrency,\n      isUserPreferredCurrency,\n      currency,\n      nativeCurrency,\n      inputValue,\n      conversionRate,\n      denomination,\n      numberOfDecimals,\n    });\n  }, [\n    displayValue,\n    isEvm,\n    isNativeCurrency,\n    isUserPreferredCurrency,\n    currency,\n    nativeCurrency,\n    inputValue,\n    conversionRate,\n    denomination,\n    numberOfDecimals,\n    currentCurrency,\n  ]);\n\n  let suffix;\n\n  if (!opts.hideLabel) {\n    // if the currency we are displaying is the native currency of one of our preloaded test-nets (goerli, sepolia etc.)\n    // then we allow lowercase characters, otherwise we force to uppercase any suffix passed as a currency\n    const currencyTickerSymbol = Object.values(\n      TEST_NETWORK_TICKER_MAP,\n    ).includes(currency)\n      ? currency\n      : currency?.toUpperCase();\n\n    suffix = opts.suffix || currencyTickerSymbol;\n  }\n\n  return [\n    `${prefix || ''}${value}${suffix ? ` ${suffix}` : ''}`,\n    { prefix, value, suffix },\n  ];\n}\n","import { useSelector } from 'react-redux';\nimport {\n  getSelectedNetworkClientId,\n  getUseCurrencyRateCheck,\n} from '../selectors';\nimport {\n  currencyRateStartPollingByNetworkClientId,\n  currencyRateStopPollingByPollingToken,\n} from '../store/actions';\nimport { getCompletedOnboarding } from '../ducks/metamask/metamask';\nimport usePolling from './usePolling';\n\nconst useCurrencyRatePolling = (networkClientId?: string) => {\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n  const completedOnboarding = useSelector(getCompletedOnboarding);\n  const selectedNetworkClientId = useSelector(getSelectedNetworkClientId);\n\n  usePolling({\n    startPollingByNetworkClientId: currencyRateStartPollingByNetworkClientId,\n    stopPollingByPollingToken: currencyRateStopPollingByPollingToken,\n    networkClientId: networkClientId ?? selectedNetworkClientId,\n    enabled: useCurrencyRateCheck && completedOnboarding,\n  });\n};\n\nexport default useCurrencyRatePolling;\n","import { useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { getTokens } from '../ducks/metamask/metamask';\nimport { getCurrentChainId } from '../selectors';\nimport { ASSET_ROUTE } from '../helpers/constants/routes';\nimport {\n  SWAPS_CHAINID_DEFAULT_TOKEN_MAP,\n  ETH_SWAPS_TOKEN_OBJECT,\n} from '../../shared/constants/swaps';\nimport { isEqualCaseInsensitive } from '../../shared/modules/string-utils';\n\n/**\n * Returns a token object for the asset that is currently being viewed.\n * Will return the default token object for the current chain when the\n * user is viewing either the primary, unfiltered, activity list or the\n * default token asset page.\n *\n * @returns {import('./useTokenDisplayValue').Token}\n */\nexport function useCurrentAsset() {\n  // To determine which primary currency to display for swaps transactions we need to be aware\n  // of which asset, if any, we are viewing at present\n  const match = useRouteMatch({\n    path: `${ASSET_ROUTE}/:asset`,\n    exact: true,\n    strict: true,\n  });\n  const tokenAddress = match?.params?.asset;\n  const knownTokens = useSelector(getTokens);\n  const token =\n    tokenAddress &&\n    knownTokens.find(({ address }) =>\n      isEqualCaseInsensitive(address, tokenAddress),\n    );\n  const chainId = useSelector(getCurrentChainId);\n\n  return (\n    token ??\n    (SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId] || ETH_SWAPS_TOKEN_OBJECT)\n  );\n}\n","import { NameType } from '@metamask/name-controller';\nimport { useSelector } from 'react-redux';\nimport { getRemoteTokens } from '../selectors';\nimport { getNftContractsByAddressOnCurrentChain } from '../selectors/nft';\nimport { useNames } from './useName';\nimport { useFirstPartyContractNames } from './useFirstPartyContractName';\n\nexport type UseDisplayNameRequest = {\n  value: string;\n  type: NameType;\n  preferContractSymbol?: boolean;\n};\n\nexport type UseDisplayNameResponse = {\n  name: string | null;\n  hasPetname: boolean;\n  contractDisplayName?: string;\n};\n\nexport function useDisplayNames(\n  requests: UseDisplayNameRequest[],\n): UseDisplayNameResponse[] {\n  const nameRequests = requests.map(({ value, type }) => ({\n    value,\n    type,\n  }));\n\n  const nameEntries = useNames(nameRequests);\n  const firstPartyContractNames = useFirstPartyContractNames(nameRequests);\n  const values = requests.map(({ value }) => value);\n\n  const contractInfo = useSelector((state) =>\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (getRemoteTokens as any)(state, values),\n  );\n\n  const watchedNftNames = useSelector(getNftContractsByAddressOnCurrentChain);\n\n  return requests.map(({ value, preferContractSymbol }, index) => {\n    const nameEntry = nameEntries[index];\n    const firstPartyContractName = firstPartyContractNames[index];\n    const singleContractInfo = contractInfo[index];\n    const watchedNftName = watchedNftNames[value.toLowerCase()]?.name;\n\n    const contractDisplayName =\n      preferContractSymbol && singleContractInfo?.symbol\n        ? singleContractInfo.symbol\n        : singleContractInfo?.name;\n\n    const name =\n      nameEntry?.name ||\n      firstPartyContractName ||\n      contractDisplayName ||\n      watchedNftName ||\n      null;\n\n    const hasPetname = Boolean(nameEntry?.name);\n\n    return {\n      name,\n      hasPetname,\n      contractDisplayName,\n    };\n  });\n}\n\n/**\n * Attempts to resolve the name for the given parameters.\n *\n * @param value\n * @param type\n * @param preferContractSymbol - Applies to recognized contracts when no petname is saved:\n * If true the contract symbol (e.g. WBTC) will be used instead of the contract name.\n * @returns An object with two properties:\n * - `name` {string|null} - The display name, if it can be resolved, otherwise null.\n * - `hasPetname` {boolean} - True if there is a petname for the given address.\n */\nexport function useDisplayName(\n  value: string,\n  type: NameType,\n  preferContractSymbol: boolean = false,\n): UseDisplayNameResponse {\n  return useDisplayNames([{ value, type, preferContractSymbol }])[0];\n}\n","import { useState, useLayoutEffect } from 'react';\n\nimport { isEqual } from 'lodash';\n\n/**\n * Given a value and a function to determine equality, return a\n * referentially equal value if the equality function returns true.\n * This hook is helpful in avoiding re-renders and effects running\n * based on an object or value that always changes references but\n * infrequently changes it's value. By default, uses isEqual from\n * lodash. This is typically only useful with objects and arrays.\n *\n * @param {T} value - any value to check equality of\n * @param {(T, T) => boolean} equalityFn - A function to determine equality\n * @returns {T}\n */\nexport function useEqualityCheck(value, equalityFn = isEqual) {\n  const [computedValue, setComputedValue] = useState(value);\n\n  useLayoutEffect(() => {\n    if (!equalityFn(value, computedValue)) {\n      setComputedValue(value);\n    }\n  }, [value, equalityFn, computedValue]);\n\n  return computedValue;\n}\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getCurrentCurrency, getShouldShowFiat } from '../selectors';\nimport { formatCurrency } from '../helpers/utils/confirm-tx.util';\nimport { getConversionRate } from '../ducks/metamask/metamask';\nimport { decEthToConvertedCurrency } from '../../shared/modules/conversion.utils';\n\n/**\n * Get an Eth amount converted to fiat and formatted for display\n *\n * @param {string} [ethAmount] - The eth amount to convert\n * @param {object} [overrides] - A configuration object that allows the called to explicitly\n *                              ensure fiat is shown even if the property is not set in state.\n * @param {boolean} [overrides.showFiat] - If truthy, ensures the fiat value is shown even if the showFiat value from state is falsey\n * @param {boolean} hideCurrencySymbol - Indicates whether the returned formatted amount should include the trailing currency symbol\n * @returns {string} The formatted token amount in the user's chosen fiat currency\n */\nexport function useEthFiatAmount(\n  ethAmount,\n  overrides = {},\n  hideCurrencySymbol,\n) {\n  const conversionRate = useSelector(getConversionRate);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const userPrefersShownFiat = useSelector(getShouldShowFiat);\n  const showFiat = overrides.showFiat ?? userPrefersShownFiat;\n  const formattedFiat = useMemo(\n    () => decEthToConvertedCurrency(ethAmount, currentCurrency, conversionRate),\n    [conversionRate, currentCurrency, ethAmount],\n  );\n\n  if (\n    !showFiat ||\n    currentCurrency.toUpperCase() === 'ETH' ||\n    conversionRate <= 0 ||\n    ethAmount === undefined\n  ) {\n    return undefined;\n  }\n\n  return hideCurrencySymbol\n    ? formatCurrency(formattedFiat, currentCurrency)\n    : `${formatCurrency(\n        formattedFiat,\n        currentCurrency,\n      )} ${currentCurrency.toUpperCase()}`;\n}\n","import { useSelector } from 'react-redux';\nimport { getIntlLocale } from '../ducks/locale/locale';\nimport { getCurrentCurrency } from '../selectors';\nimport { shortenString } from '../helpers/utils/util';\n\n/**\n * Returns a function that formats a fiat amount as a localized string.\n * The hook takes an optional options object to configure the formatting.\n *\n * Example usage:\n *\n * ```\n * const formatFiat = useFiatFormatter();\n * const formattedAmount = formatFiat(1000);\n *\n * const shorteningFiatFormatter = useFiatFormatter();\n * const shortenedAmount = shorteningFiatFormatter(100000000000000000, { shorten: true });\n * ```\n *\n * @returns A function that takes a fiat amount as a number and returns a formatted string.\n */\n\nconst TRUNCATED_CHAR_LIMIT_FOR_SHORTENED_FIAT = 15;\nconst TRUNCATED_START_CHARS_FOR_SHORTENED_FIAT = 12;\n\ntype FiatFormatterOptions = {\n  shorten?: boolean;\n};\n\ntype FiatFormatter = (\n  fiatAmount: number,\n  options?: FiatFormatterOptions,\n) => string;\n\nexport const useFiatFormatter = (): FiatFormatter => {\n  const locale = useSelector(getIntlLocale);\n  const fiatCurrency = useSelector(getCurrentCurrency);\n\n  return (fiatAmount: number, options: FiatFormatterOptions = {}) => {\n    const { shorten } = options;\n\n    try {\n      const formatter = new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency: fiatCurrency,\n      });\n\n      if (!shorten) {\n        return formatter.format(fiatAmount);\n      }\n\n      const parts = formatter.formatToParts(fiatAmount);\n\n      let currencySymbol = '';\n      let numberString = '';\n\n      parts.forEach((part) => {\n        if (part.type === 'currency') {\n          currencySymbol += part.value;\n        } else {\n          numberString += part.value;\n        }\n      });\n\n      // Shorten the number part while preserving commas\n      const shortenedNumberString = shortenString(numberString, {\n        truncatedCharLimit: TRUNCATED_CHAR_LIMIT_FOR_SHORTENED_FIAT,\n        truncatedStartChars: TRUNCATED_START_CHARS_FOR_SHORTENED_FIAT,\n        truncatedEndChars: 0,\n        skipCharacterInEnd: true,\n      });\n\n      // Determine the position of the currency symbol\n      const currencyBeforeNumber =\n        parts.findIndex((part) => part.type === 'currency') <\n        parts.findIndex((part) => part.type === 'integer');\n\n      // Reassemble the formatted string\n      return currencyBeforeNumber\n        ? `${currencySymbol}${shortenedNumberString}`\n        : `${shortenedNumberString}${currencySymbol}`;\n    } catch (error) {\n      // Fallback for unknown or unsupported currencies\n      const formattedNumber = new Intl.NumberFormat(locale).format(fiatAmount);\n      const shortenedNumberString = shortenString(formattedNumber, {\n        truncatedCharLimit: TRUNCATED_CHAR_LIMIT_FOR_SHORTENED_FIAT,\n        truncatedStartChars: TRUNCATED_START_CHARS_FOR_SHORTENED_FIAT,\n        truncatedEndChars: 0,\n        skipCharacterInEnd: true,\n      });\n\n      if (shorten) {\n        return `${shortenedNumberString} ${fiatCurrency}`;\n      }\n      return `${formattedNumber} ${fiatCurrency}`;\n    }\n  };\n};\n","import { NameType } from '@metamask/name-controller';\nimport { useSelector } from 'react-redux';\nimport { getCurrentChainId } from '../selectors';\nimport {\n  EXPERIENCES_TYPE,\n  FIRST_PARTY_CONTRACT_NAMES,\n} from '../../shared/constants/first-party-contracts';\n\nexport type UseFirstPartyContractNameRequest = {\n  value: string;\n  type: NameType;\n  variation?: string;\n};\n\nexport function useFirstPartyContractNames(\n  requests: UseFirstPartyContractNameRequest[],\n): (string | null)[] {\n  const currentChainId = useSelector(getCurrentChainId);\n\n  return requests.map(({ type, value, variation }) => {\n    if (type !== NameType.ETHEREUM_ADDRESS) {\n      return null;\n    }\n\n    const chainId = variation ?? currentChainId;\n    const normalizedValue = value.toLowerCase();\n\n    return (\n      Object.keys(FIRST_PARTY_CONTRACT_NAMES).find(\n        (name) =>\n          FIRST_PARTY_CONTRACT_NAMES[name as EXPERIENCES_TYPE]?.[\n            chainId\n          ]?.toLowerCase() === normalizedValue,\n      ) ?? null\n    );\n  });\n}\n\nexport function useFirstPartyContractName(\n  value: string,\n  type: NameType,\n  variation?: string,\n): string | null {\n  return useFirstPartyContractNames([{ value, type, variation }])[0];\n}\n","import isEqual from 'lodash/isEqual';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  getGasEstimateTypeByChainId,\n  getGasFeeEstimatesByChainId,\n  getIsGasEstimatesLoadingByChainId,\n  getIsNetworkBusyByChainId,\n} from '../ducks/metamask/metamask';\nimport {\n  gasFeeStartPollingByNetworkClientId,\n  gasFeeStopPollingByPollingToken,\n  getNetworkConfigurationByNetworkClientId,\n} from '../store/actions';\nimport { getSelectedNetworkClientId } from '../selectors';\nimport usePolling from './usePolling';\n\n/**\n * @typedef {object} GasEstimates\n * @property {import(\n *   '@metamask/gas-fee-controller'\n * ).GasFeeState['gasFeeEstimates']} gasFeeEstimates - The estimate object\n * @property {object} gasEstimateType - The type of estimate provided\n * @property {boolean} isGasEstimateLoading - indicates whether the gas\n *  estimates are currently loading.\n * @property {boolean} isNetworkBusy - indicates whether the network is busy.\n */\n\n/**\n * Gets the current gasFeeEstimates from state and begins polling for new\n * estimates. When this hook is removed from the tree it will signal to the\n * GasFeeController that it is done requiring new gas estimates. Also checks\n * the returned gas estimate for validity on the current network.\n *\n * @param _networkClientId - The optional network client ID to get gas fee estimates for. Defaults to the currently selected network.\n * @returns {GasEstimates} GasEstimates object\n */\nexport function useGasFeeEstimates(_networkClientId) {\n  const selectedNetworkClientId = useSelector(getSelectedNetworkClientId);\n  const networkClientId = _networkClientId ?? selectedNetworkClientId;\n\n  const [chainId, setChainId] = useState('');\n\n  const gasEstimateType = useSelector((state) =>\n    getGasEstimateTypeByChainId(state, chainId),\n  );\n  const gasFeeEstimates = useSelector(\n    (state) => getGasFeeEstimatesByChainId(state, chainId),\n    isEqual,\n  );\n  const isGasEstimatesLoading = useSelector((state) =>\n    getIsGasEstimatesLoadingByChainId(state, {\n      chainId,\n      networkClientId,\n    }),\n  );\n  const isNetworkBusy = useSelector((state) =>\n    getIsNetworkBusyByChainId(state, chainId),\n  );\n\n  useEffect(() => {\n    let isMounted = true;\n    getNetworkConfigurationByNetworkClientId(networkClientId).then(\n      (networkConfig) => {\n        if (networkConfig && isMounted) {\n          setChainId(networkConfig.chainId);\n        }\n      },\n    );\n\n    return () => {\n      isMounted = false;\n    };\n  }, [networkClientId]);\n\n  usePolling({\n    startPollingByNetworkClientId: gasFeeStartPollingByNetworkClientId,\n    stopPollingByPollingToken: gasFeeStopPollingByPollingToken,\n    networkClientId,\n  });\n\n  return {\n    gasFeeEstimates,\n    gasEstimateType,\n    isGasEstimatesLoading,\n    isNetworkBusy,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport { getAssetImageURL } from '../helpers/utils/util';\n\nconst useGetAssetImageUrl = (image: string | null, ipfsGateway: string) => {\n  const [imageUrl, setImageUrl] = useState<string>('');\n\n  useEffect(() => {\n    const getAssetImgUrl = async () => {\n      const assetImageUrl = await getAssetImageURL(image, ipfsGateway);\n      setImageUrl(assetImageUrl);\n    };\n\n    getAssetImgUrl();\n  }, [image, ipfsGateway]);\n\n  return imageUrl;\n};\n\nexport default useGetAssetImageUrl;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport fetchWithCache from '../../shared/lib/fetch-with-cache';\nimport {\n  CHAIN_ID_TO_CURRENCY_SYMBOL_MAP,\n  CHAIN_ID_TO_CURRENCY_SYMBOL_MAP_NETWORK_COLLISION,\n} from '../../shared/constants/network';\nimport { DAY } from '../../shared/constants/time';\nimport { useSafeChainsListValidationSelector } from '../selectors';\nimport {\n  getMultichainIsEvm,\n  getMultichainCurrentNetwork,\n} from '../selectors/multichain';\nimport { getValidUrl } from '../../app/scripts/lib/util';\n\nexport function useIsOriginalNativeTokenSymbol(\n  chainId,\n  ticker,\n  type,\n  rpcUrl = '',\n) {\n  const [isOriginalNativeSymbol, setIsOriginalNativeSymbol] = useState(false);\n  const useSafeChainsListValidation = useSelector(\n    useSafeChainsListValidationSelector,\n  );\n\n  const isLocalhost = (urlString) => {\n    const url = getValidUrl(urlString);\n\n    return (\n      url !== null &&\n      (url.hostname === 'localhost' || url.hostname === '127.0.0.1')\n    );\n  };\n\n  const isEvm = useSelector(getMultichainIsEvm);\n  const providerConfig = useSelector(getMultichainCurrentNetwork);\n\n  useEffect(() => {\n    async function getNativeTokenSymbol(networkId) {\n      if (!isEvm) {\n        setIsOriginalNativeSymbol(ticker === providerConfig?.ticker);\n        return;\n      }\n\n      try {\n        if (!useSafeChainsListValidation) {\n          setIsOriginalNativeSymbol(true);\n          return;\n        }\n\n        // exclude local dev network\n        if (isLocalhost(rpcUrl)) {\n          setIsOriginalNativeSymbol(true);\n          return;\n        }\n\n        const mappedCurrencySymbol = CHAIN_ID_TO_CURRENCY_SYMBOL_MAP[chainId];\n        if (mappedCurrencySymbol) {\n          setIsOriginalNativeSymbol(mappedCurrencySymbol === ticker);\n          return;\n        }\n\n        const mappedAsNetworkCollision =\n          CHAIN_ID_TO_CURRENCY_SYMBOL_MAP_NETWORK_COLLISION[chainId];\n\n        const isMappedCollision =\n          mappedAsNetworkCollision &&\n          mappedAsNetworkCollision.some(\n            (network) => network.currencySymbol === ticker,\n          );\n\n        if (isMappedCollision) {\n          setIsOriginalNativeSymbol(true);\n          return;\n        }\n\n        const safeChainsList = await fetchWithCache({\n          url: 'https://chainid.network/chains.json',\n          cacheOptions: { cacheRefreshTime: DAY },\n          functionName: 'getSafeChainsList',\n        });\n\n        const matchedChain = safeChainsList.find(\n          (network) => network.chainId === parseInt(networkId, 16),\n        );\n\n        const symbol = matchedChain?.nativeCurrency?.symbol ?? null;\n\n        setIsOriginalNativeSymbol(symbol === ticker);\n      } catch (err) {\n        setIsOriginalNativeSymbol(false);\n      }\n    }\n\n    getNativeTokenSymbol(chainId);\n  }, [\n    isOriginalNativeSymbol,\n    chainId,\n    ticker,\n    type,\n    rpcUrl,\n    useSafeChainsListValidation,\n  ]);\n\n  return isOriginalNativeSymbol;\n}\n","// TODO: reconsider this approach altogether\n// checking against on-chain data to see if a user has changed a token symbol is not ideal\n// we should just keep track of the original symbol in state, or better yet, rely on the address instead of the symbol\n// see: https://github.com/MetaMask/metamask-extension/pull/21610 (original PR)\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getTokenSymbol } from '../store/actions';\nimport { getTokenList } from '../selectors';\n\n/**\n * This hook determines whether a token uses the original symbol based on data not influenced by the user.\n *\n * @param {string} tokenAddress - the address of the token\n * @param {string} tokenSymbol - the local symbol of the token\n * @returns a boolean indicating whether the token uses the original symbol\n */\nexport function useIsOriginalTokenSymbol(tokenAddress, tokenSymbol) {\n  const [isOriginalNativeSymbol, setIsOriginalNativeSymbol] = useState(null);\n\n  const tokens = useSelector(getTokenList);\n\n  useEffect(() => {\n    async function getTokenSymbolForToken(address) {\n      // attempt to fetch from cache first\n      let trueSymbol = tokens[address?.toLowerCase()]?.symbol;\n\n      // if tokens aren't available, fetch from the blockchain\n      if (!trueSymbol) {\n        trueSymbol = await getTokenSymbol(address);\n      }\n\n      // if the symbol is the same as the tokenSymbol, it's the original\n      setIsOriginalNativeSymbol(\n        trueSymbol?.toLowerCase() === tokenSymbol?.toLowerCase(),\n      );\n    }\n\n    getTokenSymbolForToken(tokenAddress);\n    // no need to wait for tokens to load, since we'd fetch without them if they aren't available\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tokenAddress, tokenSymbol]);\n\n  return isOriginalNativeSymbol;\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { hideModal } from '../store/actions';\n\ntype ModalProps = {\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: Record<string, any>;\n  hideModal: () => void;\n};\n\nexport function useModalProps(): ModalProps {\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const modalProps = useSelector((state: any) => {\n    return state.appState.modal.modalState?.props;\n  });\n\n  const dispatch = useDispatch();\n  const onHideModal = () => dispatch(hideModal());\n\n  return { props: modalProps, hideModal: onHideModal };\n}\n","import { useSelector } from 'react-redux';\nimport { InternalAccount, isEvmAccountType } from '@metamask/keyring-api';\nimport {\n  getMultichainCurrencyImage,\n  getMultichainBalances,\n  getMultichainNetwork,\n  getMultichainCurrentCurrency,\n  getMultichainConversionRate,\n} from '../selectors/multichain';\nimport { formatCurrency } from '../helpers/utils/confirm-tx.util';\nimport { MULTICHAIN_NATIVE_CURRENCY_TO_CAIP19 } from '../../shared/constants/multichain/assets';\nimport { getTokenFiatAmount } from '../helpers/utils/token-util';\nimport { useMultichainSelector } from './useMultichainSelector';\nimport { useAccountTotalFiatBalance } from './useAccountTotalFiatBalance';\n\nexport const EMPTY_VALUES = {\n  formattedFiat: '0',\n  totalFiatBalance: '0',\n  totalWeiBalance: '0',\n  tokensWithBalances: [],\n  loading: false,\n  orderedTokenList: [],\n};\n\nexport const useMultichainAccountTotalFiatBalance = (\n  account: InternalAccount,\n  shouldHideZeroBalanceTokens: boolean = false,\n): {\n  formattedFiat: string;\n  totalFiatBalance: string;\n  tokensWithBalances: {\n    address: string;\n    symbol: string;\n    decimals: string;\n    isERC721: boolean;\n    image: string;\n  }[];\n  totalWeiBalance?: string;\n  totalBalance?: string;\n  loading: boolean;\n  orderedTokenList: { iconUrl: string; symbol: string; fiatBalance: string }[];\n} => {\n  if (isEvmAccountType(account.type)) {\n    return useAccountTotalFiatBalance(account, shouldHideZeroBalanceTokens);\n  }\n\n  const currentCurrency = useMultichainSelector(\n    getMultichainCurrentCurrency,\n    account,\n  );\n  const { network } = useMultichainSelector(getMultichainNetwork, account);\n  const { ticker } = network;\n  const conversionRate = useMultichainSelector(\n    getMultichainConversionRate,\n    account,\n  );\n  const nativeCurrencyImage: string = useMultichainSelector(\n    getMultichainCurrencyImage,\n    account,\n  );\n\n  const balances = useSelector(getMultichainBalances);\n  // TODO: find dynamic way to ensure balance is the highest denomination.\n  const asset =\n    MULTICHAIN_NATIVE_CURRENCY_TO_CAIP19[\n      ticker as keyof typeof MULTICHAIN_NATIVE_CURRENCY_TO_CAIP19\n    ];\n\n  if (!balances[account.id]?.[asset]) {\n    // FIXME: We might try to get the balance for a created account, but the\n    // BalancesController might not have updated it yet!\n    return EMPTY_VALUES;\n  }\n  const { amount: balance } = balances[account.id][asset];\n\n  const totalFiatBalance =\n    getTokenFiatAmount(\n      1, // coin to native conversion rate is 1:1\n      Number(conversionRate), // native to fiat conversion rate\n      currentCurrency,\n      balance,\n      ticker,\n      false,\n      false,\n    ) ?? '0'; // if the conversion fails, return 0\n\n  // Create an object with native token info. NOTE: Native token info is fetched from a separate controller\n  const nativeTokenValues = {\n    iconUrl: nativeCurrencyImage,\n    symbol: ticker,\n    fiatBalance: totalFiatBalance,\n  };\n\n  // Fiat balance formatted in user's desired currency (ex: \"$8.90\")\n  const formattedFiat = formatCurrency(totalFiatBalance, currentCurrency);\n\n  return {\n    formattedFiat,\n    totalFiatBalance,\n    totalBalance: balance,\n    tokensWithBalances: [], // TODO: support tokens\n    loading: false, // TODO: support tokens\n    orderedTokenList: [nativeTokenValues], // TODO: support tokens\n  };\n};\n","import { useSelector, DefaultRootState } from 'react-redux';\nimport { InternalAccount } from '@metamask/keyring-api';\nimport { getSelectedInternalAccount } from '../selectors';\n\nexport function useMultichainSelector<\n  TState = DefaultRootState,\n  TSelected = unknown,\n>(\n  selector: (state: TState, account?: InternalAccount) => TSelected,\n  account?: InternalAccount,\n) {\n  return useSelector((state: TState) => {\n    // We either pass an account or fallback to the currently selected one\n    return selector(state, account || getSelectedInternalAccount(state));\n  });\n}\n","import {\n  FALLBACK_VARIATION,\n  NameEntry,\n  NameType,\n} from '@metamask/name-controller';\nimport { useSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport { getCurrentChainId, getNames } from '../selectors';\n\nexport type UseNameRequest = {\n  value: string;\n  type: NameType;\n  variation?: string;\n};\n\nexport function useName(\n  value: string,\n  type: NameType,\n  variation?: string,\n): NameEntry {\n  return useNames([{ value, type, variation }])[0];\n}\n\nexport function useNames(requests: UseNameRequest[]): NameEntry[] {\n  const names = useSelector(getNames, isEqual);\n  const chainId = useSelector(getCurrentChainId);\n\n  return requests.map(({ value, type, variation }) => {\n    const normalizedValue = normalizeValue(value, type);\n    const typeVariationKey = getVariationKey(type, chainId);\n    const variationKey = variation ?? typeVariationKey;\n    const variationsToNameEntries = names[type]?.[normalizedValue] ?? {};\n    const variationEntry = variationsToNameEntries[variationKey];\n    const fallbackEntry = variationsToNameEntries[FALLBACK_VARIATION];\n\n    const entry =\n      !variationEntry?.name && fallbackEntry\n        ? fallbackEntry\n        : variationEntry ?? {};\n\n    const {\n      name = null,\n      sourceId = null,\n      origin = null,\n      proposedNames = {},\n    } = entry;\n\n    return {\n      name,\n      sourceId,\n      proposedNames,\n      origin,\n    };\n  });\n}\n\nfunction normalizeValue(value: string, type: string): string {\n  switch (type) {\n    case NameType.ETHEREUM_ADDRESS:\n      return value.toLowerCase();\n\n    default:\n      return value;\n  }\n}\n\nfunction getVariationKey(type: string, chainId: string): string {\n  switch (type) {\n    case NameType.ETHEREUM_ADDRESS:\n      return chainId;\n\n    default:\n      return '';\n  }\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport { getNfts, getNftContracts } from '../ducks/metamask/metamask';\nimport { getCurrentChainId, getSelectedInternalAccount } from '../selectors';\nimport { usePrevious } from './usePrevious';\nimport { useI18nContext } from './useI18nContext';\n\nexport function useNftsCollections() {\n  const t = useI18nContext();\n  const previouslyOwnedText = t('nftsPreviouslyOwned');\n  const unknownCollectionText = t('unknownCollection');\n\n  const [collections, setCollections] = useState({});\n  const [previouslyOwnedCollection, setPreviouslyOwnedCollection] = useState({\n    collectionName: previouslyOwnedText,\n    nfts: [],\n  });\n  const nfts = useSelector(getNfts);\n  const [nftsLoading, setNftsLoading] = useState(() => nfts?.length >= 0);\n  const { address: selectedAddress } = useSelector(getSelectedInternalAccount);\n  const chainId = useSelector(getCurrentChainId);\n  const nftContracts = useSelector(getNftContracts);\n  const prevNfts = usePrevious(nfts);\n  const prevChainId = usePrevious(chainId);\n  const prevSelectedAddress = usePrevious(selectedAddress);\n\n  useEffect(() => {\n    const getCollections = () => {\n      setNftsLoading(true);\n      if (selectedAddress === undefined || chainId === undefined) {\n        return;\n      }\n      const newCollections = {};\n      const newPreviouslyOwnedCollections = {\n        collectionName: previouslyOwnedText,\n        nfts: [],\n      };\n\n      nfts.forEach((nft) => {\n        if (nft?.isCurrentlyOwned === false) {\n          newPreviouslyOwnedCollections.nfts.push(nft);\n        } else if (newCollections[nft.address]) {\n          newCollections[nft.address].nfts.push(nft);\n        } else {\n          const collectionContract = nftContracts.find(\n            ({ address }) => address === nft.address,\n          );\n          newCollections[nft.address] = {\n            collectionName: collectionContract?.name || unknownCollectionText,\n            collectionImage: collectionContract?.logo || nft.image,\n            nfts: [nft],\n          };\n        }\n      });\n      setCollections(newCollections);\n      setPreviouslyOwnedCollection(newPreviouslyOwnedCollections);\n      setNftsLoading(false);\n    };\n\n    if (\n      !isEqual(prevNfts, nfts) ||\n      !isEqual(prevSelectedAddress, selectedAddress) ||\n      !isEqual(prevChainId, chainId)\n    ) {\n      getCollections();\n    }\n  }, [\n    nfts,\n    prevNfts,\n    nftContracts,\n    setNftsLoading,\n    chainId,\n    prevChainId,\n    selectedAddress,\n    prevSelectedAddress,\n    previouslyOwnedText,\n    unknownCollectionText,\n  ]);\n\n  return { nftsLoading, collections, previouslyOwnedCollection };\n}\n","import { SubjectType } from '@metamask/permission-controller';\nimport { useSelector } from 'react-redux';\nimport { getTargetSubjectMetadata } from '../selectors';\n\n/**\n * @typedef {object} OriginMetadata\n * @property {string} hostname - The hostname of the origin (host + port)\n * @property {string} origin - The original origin string itself\n * @property {string} [iconUrl] - The origin's site icon URL, if available\n * @property {string} [name] - The registered name of the origin if available\n */\n\n/**\n * Gets origin metadata from redux and formats it appropriately.\n *\n * @param {string} origin - The fully formed url of the site interacting with\n * MetaMask\n * @returns {OriginMetadata | null} The origin metadata available for the\n * current origin\n */\nexport function useOriginMetadata(origin) {\n  const targetSubjectMetadata = useSelector((state) =>\n    getTargetSubjectMetadata(state, origin),\n  );\n\n  if (!origin) {\n    return null;\n  }\n\n  let minimumOriginMetadata = null;\n  try {\n    const url = new URL(origin);\n    minimumOriginMetadata = {\n      host: url.host,\n      hostname: url.hostname,\n      origin,\n      subjectType: SubjectType.Unknown,\n    };\n  } catch (_) {\n    // do nothing\n  }\n\n  if (targetSubjectMetadata && minimumOriginMetadata) {\n    return {\n      ...minimumOriginMetadata,\n      ...targetSubjectMetadata,\n    };\n  } else if (targetSubjectMetadata) {\n    return targetSubjectMetadata;\n  }\n\n  return minimumOriginMetadata;\n}\n","import { useStore } from 'react-redux';\nimport { getPetnamesEnabled } from '../selectors';\n\nexport function usePetnamesEnabled(): boolean {\n  return getPetnamesEnabled(useStore().getState());\n}\n","import { useEffect, useRef } from 'react';\n\ntype UsePollingOptions = {\n  callback?: (pollingToken: string) => (pollingToken: string) => void;\n  startPollingByNetworkClientId: (\n    networkClientId: string,\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    options: any,\n  ) => Promise<string>;\n  stopPollingByPollingToken: (pollingToken: string) => void;\n  networkClientId: string;\n  // TODO: Replace `any` with type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  options?: any;\n  enabled?: boolean;\n};\n\nconst usePolling = (usePollingOptions: UsePollingOptions) => {\n  const pollTokenRef = useRef<null | string>(null);\n  const cleanupRef = useRef<null | ((pollingToken: string) => void)>(null);\n  let isMounted = false;\n  useEffect(() => {\n    if (usePollingOptions.enabled === false) {\n      return () => {\n        // noop\n      };\n    }\n\n    isMounted = true;\n\n    const cleanup = () => {\n      if (pollTokenRef.current) {\n        usePollingOptions.stopPollingByPollingToken(pollTokenRef.current);\n        cleanupRef.current?.(pollTokenRef.current);\n      }\n    };\n\n    // Start polling when the component mounts\n    usePollingOptions\n      .startPollingByNetworkClientId(\n        usePollingOptions.networkClientId,\n        usePollingOptions.options,\n      )\n      .then((pollToken) => {\n        pollTokenRef.current = pollToken;\n        cleanupRef.current = usePollingOptions.callback?.(pollToken) || null;\n        if (!isMounted) {\n          cleanup();\n        }\n      });\n\n    // Return a cleanup function to stop polling when the component unmounts\n    return () => {\n      isMounted = false;\n      cleanup();\n    };\n  }, [\n    usePollingOptions.networkClientId,\n    usePollingOptions.options &&\n      JSON.stringify(\n        usePollingOptions.options,\n        Object.keys(usePollingOptions.options).sort(),\n      ),\n    usePollingOptions.enabled,\n  ]);\n};\n\nexport default usePolling;\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T | undefined>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { debounce } from 'lodash';\nimport { usePrevious } from './usePrevious';\n\n/**\n * Utility hook for requiring users to scroll through content.\n * Returns an object containing state and helpers to accomplish this.\n *\n * The hook expects both the `ref` and the `onScroll` handler to be passed to the scrolling element.\n *\n * @param dependencies - Any optional hook dependencies for updating the scroll state.\n * @param opt\n * @param {number} opt.offsetPxFromBottom\n * @returns Flags for isScrollable and isScrollToBottom, a ref to use for the scrolling content, a scrollToBottom function and a onScroll handler.\n */\nexport const useScrollRequired = (\n  dependencies = [],\n  { offsetPxFromBottom = 16 } = {},\n) => {\n  const ref = useRef(null);\n  const prevOffsetHeight = usePrevious(ref.current?.offsetHeight);\n\n  const [hasScrolledToBottomState, setHasScrolledToBottom] = useState(false);\n  const [isScrollableState, setIsScrollable] = useState(false);\n  const [isScrolledToBottomState, setIsScrolledToBottom] = useState(false);\n\n  const update = () => {\n    if (!ref.current) {\n      return;\n    }\n\n    const isScrollable =\n      ref.current && ref.current.scrollHeight > ref.current.clientHeight;\n\n    const isScrolledToBottom =\n      isScrollable &&\n      // Add 16px to the actual scroll position to trigger setIsScrolledToBottom sooner.\n      // This avoids the problem where a user has scrolled down to the bottom and it's not detected.\n      Math.round(ref.current.scrollTop) +\n        ref.current.offsetHeight +\n        offsetPxFromBottom >=\n        ref.current.scrollHeight;\n\n    if (isScrollable !== isScrollableState) {\n      setHasScrolledToBottom(false);\n      setIsScrollable(isScrollable);\n    }\n\n    setIsScrolledToBottom(!isScrollable || isScrolledToBottom);\n\n    if (!isScrollable || isScrolledToBottom) {\n      setHasScrolledToBottom(true);\n    }\n  };\n\n  useEffect(update, [ref, ...dependencies]);\n\n  useEffect(() => {\n    if (prevOffsetHeight !== ref.current?.offsetHeight) {\n      update();\n    }\n  }, [ref.current?.offsetHeight]);\n\n  const scrollToBottom = () => {\n    setIsScrolledToBottom(true);\n    setHasScrolledToBottom(true);\n\n    if (ref.current) {\n      ref.current.scrollTo({\n        top: ref.current.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  return {\n    isScrollable: isScrollableState,\n    isScrolledToBottom: isScrolledToBottomState,\n    hasScrolledToBottom: hasScrolledToBottomState,\n    scrollToBottom,\n    setHasScrolledToBottom,\n    ref,\n    onScroll: debounce(update, 25),\n  };\n};\n","import { useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { PATH_NAME_MAP } from '../helpers/constants/routes';\nimport { txDataSelector } from '../selectors';\n\nconst PATHS_TO_CHECK = Object.keys(PATH_NAME_MAP);\n\n/**\n * Returns the current page if it matches our route map, as well as the origin\n * if there is a confirmation that was triggered by a dapp. These values are\n * not required but add valuable context to events, and should be included in\n * the context object on the event payload.\n *\n * @returns {{\n *  page?: MetaMetricsPageObject\n *  referrer?: MetaMetricsReferrerObject\n * }}\n */\nexport function useSegmentContext() {\n  const match = useRouteMatch({\n    path: PATHS_TO_CHECK,\n    exact: true,\n    strict: true,\n  });\n  const txData = useSelector(txDataSelector) || {};\n  const confirmTransactionOrigin = txData.origin;\n\n  const referrer = confirmTransactionOrigin\n    ? {\n        url: confirmTransactionOrigin,\n      }\n    : undefined;\n\n  const page = match\n    ? {\n        path: match.path,\n        title: PATH_NAME_MAP[match.path],\n        url: match.path,\n      }\n    : undefined;\n\n  return {\n    page,\n    referrer,\n  };\n}\n","import { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\n\nimport {\n  getGasLoadingAnimationIsShowing,\n  toggleGasLoadingAnimation,\n} from '../ducks/app/app';\nimport { useGasFeeEstimates } from './useGasFeeEstimates';\n\nexport function useShouldAnimateGasEstimations() {\n  const { isGasEstimatesLoading, gasFeeEstimates } = useGasFeeEstimates();\n  const dispatch = useDispatch();\n\n  const isGasLoadingAnimationActive = useSelector(\n    getGasLoadingAnimationIsShowing,\n  );\n\n  // Do the animation only when gas prices have changed...\n  const lastGasEstimates = useRef(gasFeeEstimates);\n  const gasEstimatesChanged = !isEqual(\n    lastGasEstimates.current,\n    gasFeeEstimates,\n  );\n\n  // ... and only if gas didn't just load\n  // Removing this line will cause the initial loading screen to stay empty\n  const gasJustLoaded = isEqual(lastGasEstimates.current, {});\n\n  if (gasEstimatesChanged) {\n    lastGasEstimates.current = gasFeeEstimates;\n  }\n\n  const showLoadingAnimation =\n    isGasEstimatesLoading || (gasEstimatesChanged && !gasJustLoaded);\n\n  useEffect(() => {\n    if (\n      isGasLoadingAnimationActive === false &&\n      showLoadingAnimation === true\n    ) {\n      dispatch(toggleGasLoadingAnimation(true));\n    }\n  }, [dispatch, isGasLoadingAnimationActive, showLoadingAnimation]);\n\n  useEffect(() => {\n    let timer;\n\n    if (isGasLoadingAnimationActive && !showLoadingAnimation) {\n      timer = setTimeout(() => {\n        dispatch(toggleGasLoadingAnimation(false));\n      }, 2000);\n    }\n\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [dispatch, isGasLoadingAnimationActive, showLoadingAnimation]);\n}\n","import { useEffect, useState } from 'react';\nimport { SECOND } from '../../shared/constants/time';\n\n/**\n * Evaluates whether the transaction is eligible to be sped up, and registers\n * an effect to check the logic again after the transaction has surpassed 5 seconds\n * of queue time.\n *\n * @param {object} transactionGroup - the transaction group to check against\n * @param {boolean} isEarliestNonce - Whether this group is currently the earliest nonce\n */\nexport function useShouldShowSpeedUp(transactionGroup, isEarliestNonce) {\n  const { transactions, hasRetried } = transactionGroup;\n  const [earliestTransaction = {}] = transactions;\n  const { submittedTime } = earliestTransaction;\n  const [speedUpEnabled, setSpeedUpEnabled] = useState(() => {\n    return Date.now() - submittedTime > 5000 && isEarliestNonce && !hasRetried;\n  });\n  useEffect(() => {\n    // because this hook is optimized to only run on changes we have to\n    // key into the changing time delta between submittedTime and now()\n    // and if the status of the transaction changes based on that difference\n    // trigger a setState call to tell react to re-render. This effect will\n    // also immediately set retryEnabled and not create a timeout if the\n    // condition is already met. This effect will run anytime the variables\n    // for determining enabled status change\n    let timeoutId;\n    if (!hasRetried && isEarliestNonce && !speedUpEnabled) {\n      if (Date.now() - submittedTime > SECOND * 5) {\n        setSpeedUpEnabled(true);\n      } else {\n        timeoutId = setTimeout(() => {\n          setSpeedUpEnabled(true);\n          clearTimeout(timeoutId);\n        }, 5001 - (Date.now() - submittedTime));\n      }\n    }\n    // Anytime the effect is re-ran, make sure to remove a previously set timeout\n    // so as to avoid multiple timers potentially overlapping\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [submittedTime, speedUpEnabled, hasRetried, isEarliestNonce]);\n\n  return speedUpEnabled;\n}\n","import { useSelector } from 'react-redux';\nimport { TransactionType } from '@metamask/transaction-controller';\nimport { getSwapsTokensReceivedFromTxMeta } from '../../shared/lib/transactions-controller-utils';\nimport {\n  isSwapsDefaultTokenAddress,\n  isSwapsDefaultTokenSymbol,\n} from '../../shared/modules/swaps.utils';\nimport { getCurrentChainId } from '../selectors';\nimport { useTokenFiatAmount } from './useTokenFiatAmount';\n\n/**\n * @typedef {object} SwappedTokenValue\n * @property {string} swapTokenValue - a primary currency string formatted for display\n * @property {string} swapTokenFiatAmount - a secondary currency string formatted for display\n * @property {boolean} isViewingReceivedTokenFromSwap - true if user is on the asset page for the\n *                                                      destination/received asset in a swap.\n */\n\n/**\n * A Swap transaction group's primaryTransaction contains details of the swap,\n * including the source (from) and destination (to) token type (ETH, DAI, etc..)\n * When viewing an asset page that is not for the current chain's default token, we\n * need to determine if that asset is the token that was received (destination) from\n * the swap. In that circumstance we would want to show the primaryCurrency in the\n * activity list that is most relevant for that token (- 1000 DAI, for example, when\n * swapping DAI for ETH).\n *\n * @param {import('../selectors').transactionGroup} transactionGroup - Group of transactions by nonce\n * @param {import('./useTokenDisplayValue').Token} currentAsset - The current asset the user is looking at\n * @returns {SwappedTokenValue}\n */\nexport function useSwappedTokenValue(transactionGroup, currentAsset) {\n  const { symbol, decimals, address } = currentAsset;\n  const { primaryTransaction, initialTransaction } = transactionGroup;\n  const { type } = initialTransaction;\n  const { from: senderAddress } = initialTransaction.txParams || {};\n  const chainId = useSelector(getCurrentChainId);\n\n  const isViewingReceivedTokenFromSwap =\n    type === TransactionType.swap &&\n    (currentAsset?.symbol === primaryTransaction.destinationTokenSymbol ||\n      (isSwapsDefaultTokenAddress(currentAsset.address, chainId) &&\n        isSwapsDefaultTokenSymbol(\n          primaryTransaction.destinationTokenSymbol,\n          chainId,\n        )));\n\n  const swapTokenValue =\n    [TransactionType.swap].includes(type) && isViewingReceivedTokenFromSwap\n      ? getSwapsTokensReceivedFromTxMeta(\n          primaryTransaction.destinationTokenSymbol,\n          initialTransaction,\n          address,\n          senderAddress,\n          decimals,\n          null,\n          chainId,\n        )\n      : [TransactionType.swap, TransactionType.swapAndSend].includes(type) &&\n        primaryTransaction.swapTokenValue;\n\n  const isNegative =\n    typeof swapTokenValue === 'string'\n      ? Math.sign(swapTokenValue) === -1\n      : false;\n\n  const _swapTokenFiatAmount = useTokenFiatAmount(\n    address,\n    swapTokenValue || '',\n    symbol,\n  );\n  const _swapAndSendTokenFiatAmount = useTokenFiatAmount(\n    primaryTransaction.sourceTokenAddress,\n    swapTokenValue,\n    primaryTransaction.sourceTokenSymbol,\n  );\n\n  let swapTokenFiatAmount;\n  if (swapTokenValue) {\n    if (isViewingReceivedTokenFromSwap) {\n      swapTokenFiatAmount = _swapTokenFiatAmount;\n    } else if (type === TransactionType.swapAndSend) {\n      swapTokenFiatAmount = _swapAndSendTokenFiatAmount;\n    }\n  }\n\n  return {\n    swapTokenValue,\n    swapTokenFiatAmount,\n    isViewingReceivedTokenFromSwap,\n    isNegative,\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getTheme } from '../selectors';\nimport { ThemeType } from '../../shared/constants/preferences';\n\n/**\n * List of valid themes. Should return an array with only the values ThemeType.light and ThemeType.dark\n * unless there is a future we add more themes.\n */\nconst validThemes = Object.values(ThemeType).filter((theme) => {\n  return theme !== ThemeType.os;\n});\n\n/**\n * Returns the current theme based on the user's theme setting.\n *\n * @returns theme\n */\nexport function useTheme() {\n  const settingTheme = useSelector(getTheme);\n  const [theme, setTheme] = useState(settingTheme);\n\n  useEffect(() => {\n    const result =\n      !settingTheme || settingTheme === ThemeType.os\n        ? document.documentElement.getAttribute('data-theme')\n        : settingTheme;\n    const isValidTheme = validThemes.includes(\n      result as ThemeType.light | ThemeType.dark,\n    );\n\n    if (!isValidTheme) {\n      console.warn(\n        `useTheme: Invalid theme resolved to \"${result}\". Defaulting to \"${ThemeType.light}\".`,\n      );\n      setTheme(ThemeType.light);\n    }\n\n    setTheme(result);\n  }, [settingTheme]);\n\n  return theme;\n}\n","import { useState, useEffect, useRef, useCallback } from 'react';\n\n/**\n * useTimeout\n *\n * @param {Function} cb - callback function inside setTimeout\n * @param {number} delay - delay in ms\n * @param {boolean} [immediate] - determines whether the timeout is invoked immediately\n * @returns {Function|undefined}\n */\nexport function useTimeout(cb, delay, immediate = true) {\n  const saveCb = useRef();\n  const [timeoutId, setTimeoutId] = useState(null);\n\n  useEffect(() => {\n    saveCb.current = cb;\n  }, [cb]);\n\n  useEffect(() => {\n    if (timeoutId !== 'start') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => {\n      saveCb.current();\n    }, delay);\n\n    setTimeoutId(id);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [delay, timeoutId]);\n\n  const startTimeout = useCallback(() => {\n    clearTimeout(timeoutId);\n    setTimeoutId('start');\n  }, [timeoutId]);\n\n  if (immediate) {\n    startTimeout();\n  }\n\n  return startTimeout;\n}\n","import { useMemo } from 'react';\nimport { parseStandardTokenTransactionData } from '../../shared/modules/transaction.utils';\n\n/**\n * useTokenData\n * Given the data string from txParams return a decoded object of the details of the\n * transaction data.\n *\n * @param {string} [transactionData] - Raw data string from token transaction\n * @param {boolean} [isTokenTransaction] - Due to the nature of hooks, it isn't possible\n *                                         to conditionally call this hook. This flag will\n *                                         force this hook to return null if it set as false\n *                                         which indicates the transaction is not associated\n *                                         with a token.\n * @returns {object} Decoded token data\n */\nexport function useTokenData(transactionData, isTokenTransaction = true) {\n  return useMemo(() => {\n    if (!isTokenTransaction || !transactionData) {\n      return null;\n    }\n    return parseStandardTokenTransactionData(transactionData);\n  }, [isTokenTransaction, transactionData]);\n}\n","import { useMemo } from 'react';\nimport { getTokenValueParam } from '../../shared/lib/metamask-controller-utils';\nimport { calcTokenAmount } from '../../shared/lib/transactions-controller-utils';\nimport { useTokenData } from './useTokenData';\n\n/**\n * Defines the shape for the Token input parameter for useTokenDisplayValue\n *\n * @typedef {object} Token\n * @property {string} symbol - The string to use as a suffix for the token (eg. DAI)\n * @property {number} decimals - The number of decimals to show when displaying this type of token\n */\n\n/**\n * useTokenDisplayValue\n * Given the data string from txParams and a token object with symbol and decimals, return\n * a displayValue that represents a string representing that token amount as a string. Also\n * return a tokenData object for downstream usage and the suffix for the token to use as props\n * for other hooks and/or components\n *\n * @param {string} [transactionData] - Raw data string from token transaction\n * @param {Token} [token] - The token associated with this transaction\n * @param {boolean} [isTokenTransaction] - Due to the nature of hooks, it isn't possible\n *                                         to conditionally call this hook. This flag will\n *                                         force this hook to return null if it set as false\n *                                         which indicates the transaction is not associated\n *                                         with a token.\n * @returns {string} The computed displayValue of the provided transactionData and token\n */\nexport function useTokenDisplayValue(\n  transactionData,\n  token,\n  isTokenTransaction = true,\n) {\n  const tokenData = useTokenData(transactionData, isTokenTransaction);\n  const tokenValue = getTokenValueParam(tokenData);\n\n  const shouldCalculateTokenValue = Boolean(\n    // If we are currently processing a token transaction\n    isTokenTransaction &&\n      // and raw transaction data string is provided\n      transactionData &&\n      // and a token object has been provided\n      token &&\n      // and the provided token object contains a defined decimal value we need to calculate amount\n      token.decimals !== null &&\n      token.decimals !== undefined &&\n      // and we are able to parse the token detail we to calculate amount from the raw data\n      tokenValue,\n  );\n\n  const displayValue = useMemo(() => {\n    if (!shouldCalculateTokenValue) {\n      return null;\n    }\n\n    return calcTokenAmount(tokenValue, token.decimals).toString(10);\n  }, [shouldCalculateTokenValue, tokenValue, token]);\n\n  return displayValue;\n}\n","import { useMemo } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport {\n  getTokenExchangeRates,\n  getCurrentCurrency,\n  getShouldShowFiat,\n  getConfirmationExchangeRates,\n} from '../selectors';\nimport { getTokenFiatAmount } from '../helpers/utils/token-util';\nimport { getConversionRate } from '../ducks/metamask/metamask';\nimport { isEqualCaseInsensitive } from '../../shared/modules/string-utils';\n\n/**\n * Get the token balance converted to fiat and formatted for display\n *\n * @param {string} [tokenAddress] - The token address\n * @param {string} [tokenAmount] - The token balance\n * @param {string} [tokenSymbol] - The token symbol\n * @param {object} [overrides] - A configuration object that allows the caller to explicitly pass an exchange rate or\n *                              ensure fiat is shown even if the property is not set in state.\n * @param {number} [overrides.exchangeRate] -  An exhchange rate to use instead of the one selected from state\n * @param {boolean} [overrides.showFiat] - If truthy, ensures the fiat value is shown even if the showFiat value from state is falsey\n * @param {boolean} hideCurrencySymbol - Indicates whether the returned formatted amount should include the trailing currency symbol\n * @returns {string} The formatted token amount in the user's chosen fiat currency\n */\nexport function useTokenFiatAmount(\n  tokenAddress,\n  tokenAmount,\n  tokenSymbol,\n  overrides = {},\n  hideCurrencySymbol,\n) {\n  const contractExchangeRates = useSelector(\n    getTokenExchangeRates,\n    shallowEqual,\n  );\n  const confirmationExchangeRates = useSelector(getConfirmationExchangeRates);\n  const mergedRates = {\n    ...contractExchangeRates,\n    ...confirmationExchangeRates,\n  };\n  const conversionRate = useSelector(getConversionRate);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const userPrefersShownFiat = useSelector(getShouldShowFiat);\n  const showFiat = overrides.showFiat ?? userPrefersShownFiat;\n  const contractExchangeTokenKey = Object.keys(mergedRates).find((key) =>\n    isEqualCaseInsensitive(key, tokenAddress),\n  );\n  const tokenExchangeRate =\n    overrides.exchangeRate ??\n    (contractExchangeTokenKey && mergedRates[contractExchangeTokenKey]);\n  const formattedFiat = useMemo(\n    () =>\n      getTokenFiatAmount(\n        tokenExchangeRate,\n        conversionRate,\n        currentCurrency,\n        tokenAmount,\n        tokenSymbol,\n        true,\n        hideCurrencySymbol,\n      ),\n    [\n      tokenExchangeRate,\n      conversionRate,\n      currentCurrency,\n      tokenAmount,\n      tokenSymbol,\n      hideCurrencySymbol,\n    ],\n  );\n\n  if (!showFiat || currentCurrency.toUpperCase() === tokenSymbol) {\n    return undefined;\n  }\n\n  return formattedFiat;\n}\n","import { useState, useEffect, useRef, useCallback } from 'react';\nimport TokenTracker from '@metamask/eth-token-tracker';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { getSelectedInternalAccount } from '../selectors';\nimport { SECOND } from '../../shared/constants/time';\nimport { isEqualCaseInsensitive } from '../../shared/modules/string-utils';\nimport { getProviderConfig } from '../ducks/metamask/metamask';\nimport { useEqualityCheck } from './useEqualityCheck';\n\nexport function useTokenTracker({\n  tokens,\n  address,\n  includeFailedTokens = false,\n  hideZeroBalanceTokens = false,\n}) {\n  const { chainId, rpcUrl } = useSelector(getProviderConfig);\n  const { address: selectedAddress } = useSelector(\n    getSelectedInternalAccount,\n    shallowEqual,\n  );\n\n  const userAddress = address ?? selectedAddress;\n\n  const [loading, setLoading] = useState(() => tokens?.length >= 0);\n  const [tokensWithBalances, setTokensWithBalances] = useState([]);\n  const [error, setError] = useState(null);\n  const tokenTracker = useRef(null);\n  const memoizedTokens = useEqualityCheck(tokens);\n\n  const updateBalances = useCallback(\n    (tokenWithBalances) => {\n      const matchingTokens = hideZeroBalanceTokens\n        ? tokenWithBalances.filter((token) => Number(token.balance) > 0)\n        : tokenWithBalances;\n      // TODO: improve this pattern for adding this field when we improve support for\n      // EIP721 tokens.\n      const matchingTokensWithIsERC721Flag = matchingTokens.map((token) => {\n        const additionalTokenData = memoizedTokens.find((t) =>\n          isEqualCaseInsensitive(t.address, token.address),\n        );\n        return {\n          ...token,\n          isERC721: additionalTokenData?.isERC721,\n          image: additionalTokenData?.image,\n        };\n      });\n      setTokensWithBalances(matchingTokensWithIsERC721Flag);\n      setLoading(false);\n      setError(null);\n    },\n    [hideZeroBalanceTokens, memoizedTokens],\n  );\n\n  const showError = useCallback((err) => {\n    setError(err);\n    setLoading(false);\n  }, []);\n\n  const teardownTracker = useCallback(() => {\n    if (tokenTracker.current) {\n      tokenTracker.current.stop();\n      tokenTracker.current.removeAllListeners('update');\n      tokenTracker.current.removeAllListeners('error');\n      tokenTracker.current = null;\n    }\n  }, []);\n\n  const buildTracker = useCallback(\n    (usersAddress, tokenList) => {\n      // clear out previous tracker, if it exists.\n      teardownTracker();\n      tokenTracker.current = new TokenTracker({\n        userAddress: usersAddress,\n        provider: global.ethereumProvider,\n        tokens: tokenList,\n        includeFailedTokens,\n        pollingInterval: SECOND * 8,\n        balanceDecimals: 5,\n      });\n\n      tokenTracker.current.on('update', updateBalances);\n      tokenTracker.current.on('error', showError);\n      tokenTracker.current.updateBalances();\n    },\n    [updateBalances, includeFailedTokens, showError, teardownTracker],\n  );\n\n  // Effect to remove the tracker when the component is removed from DOM\n  // Do not overload this effect with additional dependencies. teardownTracker\n  // is the only dependency here, which itself has no dependencies and will\n  // never update. The lack of dependencies that change is what confirms\n  // that this effect only runs on mount/unmount\n  useEffect(() => {\n    return teardownTracker;\n  }, [teardownTracker]);\n\n  // Effect to set loading state and initialize tracker when values change\n  useEffect(() => {\n    // This effect will only run initially and when:\n    // 1. chainId is updated,\n    // 2. rpc url is changd,\n    // 3. userAddress is changed,\n    // 4. token list is updated and not equal to previous list\n    // in any of these scenarios, we should indicate to the user that their token\n    // values are in the process of updating by setting loading state.\n    setLoading(true);\n\n    if (!userAddress || chainId === undefined || !global.ethereumProvider) {\n      // If we do not have enough information to build a TokenTracker, we exit early\n      // When the values above change, the effect will be restarted. We also teardown\n      // tracker because inevitably this effect will run again momentarily.\n      teardownTracker();\n      return;\n    }\n\n    if (memoizedTokens.length === 0) {\n      // sets loading state to false and token list to empty\n      updateBalances([]);\n    }\n\n    buildTracker(userAddress, memoizedTokens);\n  }, [\n    userAddress,\n    teardownTracker,\n    chainId,\n    rpcUrl,\n    memoizedTokens,\n    updateBalances,\n    buildTracker,\n  ]);\n\n  return { loading, tokensWithBalances, error };\n}\n","import { useMemo } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport { isEqual, uniqBy } from 'lodash';\nimport { formatIconUrlWithProxy } from '@metamask/assets-controllers';\nimport { getTokenFiatAmount } from '../helpers/utils/token-util';\nimport {\n  getTokenExchangeRates,\n  getCurrentCurrency,\n  getSwapsDefaultToken,\n  getCurrentChainId,\n  getTokenList,\n} from '../selectors';\nimport { getConversionRate } from '../ducks/metamask/metamask';\n\nimport { getSwapsTokens } from '../ducks/swaps/swaps';\nimport { isSwapsDefaultTokenSymbol } from '../../shared/modules/swaps.utils';\nimport { toChecksumHexAddress } from '../../shared/modules/hexstring-utils';\nimport { TokenBucketPriority } from '../../shared/constants/swaps';\nimport { CHAIN_IDS, CURRENCY_SYMBOLS } from '../../shared/constants/network';\nimport { useEqualityCheck } from './useEqualityCheck';\n\nexport function getRenderableTokenData(\n  token,\n  contractExchangeRates,\n  conversionRate,\n  currentCurrency,\n  chainId,\n  tokenList,\n) {\n  const { symbol, name, address, iconUrl, string, balance, decimals } = token;\n  let contractExchangeRate;\n  if (isSwapsDefaultTokenSymbol(symbol, chainId)) {\n    contractExchangeRate = 1;\n  } else if (string && conversionRate > 0) {\n    // This condition improves performance significantly, because it only gets a contract exchange rate\n    // if a token amount is truthy and conversion rate is higher than 0.\n    contractExchangeRate = contractExchangeRates[toChecksumHexAddress(address)];\n  }\n  const formattedFiat =\n    getTokenFiatAmount(\n      contractExchangeRate,\n      conversionRate,\n      currentCurrency,\n      string,\n      symbol,\n      true,\n    ) || '';\n  const rawFiat = formattedFiat\n    ? getTokenFiatAmount(\n        contractExchangeRate,\n        conversionRate,\n        currentCurrency,\n        string,\n        symbol,\n        false,\n      )\n    : '';\n\n  const chainIdForTokenIcons =\n    chainId === CHAIN_IDS.SEPOLIA ? CHAIN_IDS.MAINNET : chainId;\n\n  const tokenIconUrl =\n    (symbol === CURRENCY_SYMBOLS.ETH && chainId === CHAIN_IDS.MAINNET) ||\n    (symbol === CURRENCY_SYMBOLS.ETH && chainId === CHAIN_IDS.SEPOLIA) ||\n    (symbol === CURRENCY_SYMBOLS.BNB && chainId === CHAIN_IDS.BSC) ||\n    (symbol === CURRENCY_SYMBOLS.MATIC && chainId === CHAIN_IDS.POLYGON) ||\n    (symbol === CURRENCY_SYMBOLS.AVALANCHE &&\n      chainId === CHAIN_IDS.AVALANCHE) ||\n    (symbol === CURRENCY_SYMBOLS.ETH && chainId === CHAIN_IDS.OPTIMISM) ||\n    (symbol === CURRENCY_SYMBOLS.ETH && chainId === CHAIN_IDS.ARBITRUM) ||\n    (symbol === CURRENCY_SYMBOLS.ETH && chainId === CHAIN_IDS.LINEA_MAINNET) ||\n    (symbol === CURRENCY_SYMBOLS.ETH && chainId === CHAIN_IDS.ZKSYNC_ERA) ||\n    (symbol === CURRENCY_SYMBOLS.ETH && chainId === CHAIN_IDS.BASE)\n      ? iconUrl\n      : formatIconUrlWithProxy({\n          chainId: chainIdForTokenIcons,\n          tokenAddress: address || '',\n        });\n  const usedIconUrl = tokenIconUrl || token?.image;\n\n  return {\n    ...token,\n    primaryLabel: symbol,\n    secondaryLabel: name || tokenList[address?.toLowerCase()]?.name,\n    rightPrimaryLabel:\n      string && `${new BigNumber(string).round(6).toString()} ${symbol}`,\n    rightSecondaryLabel: formattedFiat,\n    iconUrl: usedIconUrl,\n    identiconAddress: usedIconUrl ? null : address,\n    balance,\n    decimals,\n    name: name || tokenList[address?.toLowerCase()]?.name,\n    rawFiat,\n  };\n}\n\nexport function useTokensToSearch({\n  usersTokens = [],\n  topTokens = {},\n  shuffledTokensList,\n  tokenBucketPriority = TokenBucketPriority.owned,\n}) {\n  const chainId = useSelector(getCurrentChainId);\n  const tokenConversionRates = useSelector(getTokenExchangeRates, isEqual);\n  const conversionRate = useSelector(getConversionRate);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const defaultSwapsToken = useSelector(getSwapsDefaultToken, shallowEqual);\n  const tokenList = useSelector(getTokenList, isEqual);\n\n  const memoizedTopTokens = useEqualityCheck(topTokens);\n  const memoizedUsersToken = useEqualityCheck(usersTokens);\n\n  const defaultToken = getRenderableTokenData(\n    defaultSwapsToken,\n    tokenConversionRates,\n    conversionRate,\n    currentCurrency,\n    chainId,\n    tokenList,\n  );\n  const memoizedDefaultToken = useEqualityCheck(defaultToken);\n\n  const swapsTokens = useSelector(getSwapsTokens, isEqual) || [];\n\n  const tokensToSearch = swapsTokens.length\n    ? swapsTokens\n    : [\n        memoizedDefaultToken,\n        ...shuffledTokensList.filter(\n          (token) => token.symbol !== memoizedDefaultToken.symbol,\n        ),\n      ];\n\n  const memoizedTokensToSearch = useEqualityCheck(tokensToSearch);\n  return useMemo(() => {\n    const usersTokensAddressMap = memoizedUsersToken.reduce(\n      (acc, token) => ({ ...acc, [token.address.toLowerCase()]: token }),\n      {},\n    );\n\n    const tokensToSearchBuckets = {\n      owned: [],\n      top: [],\n      others: [],\n    };\n\n    const memoizedSwapsAndUserTokensWithoutDuplicities = uniqBy(\n      [memoizedDefaultToken, ...memoizedTokensToSearch, ...memoizedUsersToken],\n      (token) => token.address.toLowerCase(),\n    );\n\n    memoizedSwapsAndUserTokensWithoutDuplicities.forEach((token) => {\n      const renderableDataToken = getRenderableTokenData(\n        { ...usersTokensAddressMap[token.address.toLowerCase()], ...token },\n        tokenConversionRates,\n        conversionRate,\n        currentCurrency,\n        chainId,\n        tokenList,\n      );\n      if (tokenBucketPriority === TokenBucketPriority.owned) {\n        if (\n          isSwapsDefaultTokenSymbol(renderableDataToken.symbol, chainId) ||\n          usersTokensAddressMap[token.address.toLowerCase()]\n        ) {\n          tokensToSearchBuckets.owned.push(renderableDataToken);\n        } else if (memoizedTopTokens[token.address.toLowerCase()]) {\n          tokensToSearchBuckets.top[\n            memoizedTopTokens[token.address.toLowerCase()].index\n          ] = renderableDataToken;\n        } else {\n          tokensToSearchBuckets.others.push(renderableDataToken);\n        }\n      } else if (memoizedTopTokens[token.address.toLowerCase()]) {\n        tokensToSearchBuckets.top[\n          memoizedTopTokens[token.address.toLowerCase()].index\n        ] = renderableDataToken;\n      } else if (\n        isSwapsDefaultTokenSymbol(renderableDataToken.symbol, chainId) ||\n        usersTokensAddressMap[token.address.toLowerCase()]\n      ) {\n        tokensToSearchBuckets.owned.push(renderableDataToken);\n      } else {\n        tokensToSearchBuckets.others.push(renderableDataToken);\n      }\n    });\n\n    tokensToSearchBuckets.owned = tokensToSearchBuckets.owned.sort(\n      ({ rawFiat }, { rawFiat: secondRawFiat }) => {\n        return new BigNumber(rawFiat || 0).gt(secondRawFiat || 0) ? -1 : 1;\n      },\n    );\n    tokensToSearchBuckets.top = tokensToSearchBuckets.top.filter(Boolean);\n    if (tokenBucketPriority === TokenBucketPriority.owned) {\n      return [\n        ...tokensToSearchBuckets.owned,\n        ...tokensToSearchBuckets.top,\n        ...tokensToSearchBuckets.others,\n      ];\n    }\n    return [\n      ...tokensToSearchBuckets.top,\n      ...tokensToSearchBuckets.owned,\n      ...tokensToSearchBuckets.others,\n    ];\n  }, [\n    memoizedTokensToSearch,\n    memoizedUsersToken,\n    memoizedTopTokens,\n    tokenConversionRates,\n    conversionRate,\n    currentCurrency,\n    memoizedDefaultToken,\n    chainId,\n    tokenList,\n    tokenBucketPriority,\n  ]);\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  TransactionStatus,\n  TransactionType,\n} from '@metamask/transaction-controller';\nimport {\n  getDetectedTokensInCurrentNetwork,\n  getKnownMethodData,\n  getTokenList,\n} from '../selectors/selectors';\nimport {\n  getStatusKey,\n  getTransactionTypeTitle,\n} from '../helpers/utils/transactions.util';\nimport { camelCaseToCapitalize } from '../helpers/utils/common.util';\nimport { PRIMARY, SECONDARY } from '../helpers/constants/common';\nimport {\n  getAssetDetails,\n  getTokenAddressParam,\n  getTokenIdParam,\n} from '../helpers/utils/token-util';\nimport {\n  formatDateWithYearContext,\n  shortenAddress,\n  stripHttpSchemes,\n} from '../helpers/utils/util';\n\nimport {\n  PENDING_STATUS_HASH,\n  TOKEN_CATEGORY_HASH,\n} from '../helpers/constants/transactions';\nimport { getNfts, getTokens } from '../ducks/metamask/metamask';\nimport { TransactionGroupCategory } from '../../shared/constants/transaction';\nimport { captureSingleException } from '../store/actions';\nimport { isEqualCaseInsensitive } from '../../shared/modules/string-utils';\nimport { getTokenValueParam } from '../../shared/lib/metamask-controller-utils';\nimport { useI18nContext } from './useI18nContext';\nimport { useTokenFiatAmount } from './useTokenFiatAmount';\nimport { useUserPreferencedCurrency } from './useUserPreferencedCurrency';\nimport { useCurrencyDisplay } from './useCurrencyDisplay';\nimport { useTokenDisplayValue } from './useTokenDisplayValue';\nimport { useTokenData } from './useTokenData';\nimport { useSwappedTokenValue } from './useSwappedTokenValue';\nimport { useCurrentAsset } from './useCurrentAsset';\n\n/**\n *  There are seven types of transaction entries that are currently differentiated in the design:\n *  1. Signature request\n *  2. Send (sendEth sendTokens)\n *  3. Deposit\n *  4. Site interaction\n *  5. Approval\n *  6. Swap\n *  7. Swap Approval\n */\nconst signatureTypes = [\n  null,\n  undefined,\n  TransactionType.sign,\n  TransactionType.personalSign,\n  TransactionType.signTypedData,\n  TransactionType.ethDecrypt,\n  TransactionType.ethGetEncryptionPublicKey,\n];\n\n/**\n * @typedef {(import('../../selectors/transactions').TransactionGroup} TransactionGroup\n */\n\n/**\n * @typedef {object} TransactionDisplayData\n * @property {string} category - the transaction category that will be used for rendering the icon in the activity list\n * @property {string} primaryCurrency - the currency string to display in the primary position\n * @property {string} recipientAddress - the Ethereum address of the recipient\n * @property {string} senderAddress - the Ethereum address of the sender\n * @property {string} status - the status of the transaction\n * @property {string} subtitle - the supporting text describing the transaction\n * @property {boolean} subtitleContainsOrigin - true if the subtitle includes the origin of the tx\n * @property {string} title - the primary title of the tx that will be displayed in the activity list\n * @property {string} [secondaryCurrency] - the currency string to display in the secondary position\n */\n\n/**\n * Get computed values used for displaying transaction data to a user\n *\n * The goal of this method is to perform all of the necessary computation and\n * state access required to take a transactionGroup and derive from it a shape\n * of data that can power all views related to a transaction. Presently the main\n * case is for shared logic between transaction-list-item and transaction-detail-view\n *\n * @param {TransactionGroup} transactionGroup - group of transactions of the same nonce\n * @returns {TransactionDisplayData}\n */\nexport function useTransactionDisplayData(transactionGroup) {\n  // To determine which primary currency to display for swaps transactions we need to be aware\n  // of which asset, if any, we are viewing at present\n  const dispatch = useDispatch();\n  const currentAsset = useCurrentAsset();\n  const knownTokens = useSelector(getTokens);\n  const knownNfts = useSelector(getNfts);\n  const detectedTokens = useSelector(getDetectedTokensInCurrentNetwork) || [];\n  const tokenList = useSelector(getTokenList);\n  const t = useI18nContext();\n\n  const { initialTransaction, primaryTransaction } = transactionGroup;\n  // initialTransaction contains the data we need to derive the primary purpose of this transaction group\n  const { type } = initialTransaction;\n  const { from: senderAddress, to } = initialTransaction.txParams || {};\n\n  // for smart contract interactions, methodData can be used to derive the name of the action being taken\n  const methodData =\n    useSelector((state) =>\n      getKnownMethodData(state, initialTransaction?.txParams?.data),\n    ) || {};\n\n  const displayedStatusKey = getStatusKey(primaryTransaction);\n  const isPending = displayedStatusKey in PENDING_STATUS_HASH;\n  const isSubmitted = displayedStatusKey === TransactionStatus.submitted;\n  const mounted = useRef(true);\n\n  const primaryValue = primaryTransaction.txParams?.value;\n  const date = formatDateWithYearContext(initialTransaction.time);\n\n  let prefix = '-';\n  let subtitle;\n  let subtitleContainsOrigin = false;\n  let recipientAddress = to;\n\n  // This value is used to determine whether we should look inside txParams.data\n  // to pull out and render token related information\n  const isTokenCategory = TOKEN_CATEGORY_HASH[type];\n  // these values are always instantiated because they are either\n  // used by or returned from hooks. Hooks must be called at the top level,\n  // so as an additional safeguard against inappropriately associating token\n  // transfers, we pass an additional argument to these hooks that will be\n  // false for non-token transactions. This additional argument forces the\n  // hook to return null\n  let token = null;\n  const [currentAssetDetails, setCurrentAssetDetails] = useState(null);\n\n  if (isTokenCategory) {\n    token =\n      knownTokens.find(({ address }) =>\n        isEqualCaseInsensitive(address, recipientAddress),\n      ) ||\n      detectedTokens.find(({ address }) =>\n        isEqualCaseInsensitive(address, recipientAddress),\n      ) ||\n      tokenList[recipientAddress.toLowerCase()];\n  }\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    async function getAndSetAssetDetails() {\n      if (isTokenCategory && !token) {\n        const assetDetails = await getAssetDetails(\n          to,\n          senderAddress,\n          initialTransaction?.txParams?.data,\n          knownNfts,\n        );\n        if (mounted.current === true) {\n          setCurrentAssetDetails(assetDetails);\n        }\n      }\n    }\n    getAndSetAssetDetails();\n  }, [\n    isTokenCategory,\n    token,\n    recipientAddress,\n    senderAddress,\n    initialTransaction?.txParams?.data,\n    knownNfts,\n    to,\n    mounted,\n  ]);\n  if (currentAssetDetails) {\n    token = {\n      address: currentAssetDetails.toAddress,\n      symbol: currentAssetDetails.symbol,\n      decimals: currentAssetDetails.decimals,\n    };\n  }\n\n  const tokenData = useTokenData(\n    initialTransaction?.txParams?.data,\n    isTokenCategory,\n  );\n\n  // Sometimes the tokenId value is parsed as \"_value\" param. Not seeing this often any more, but still occasionally:\n  // i.e. call approve() on BAYC contract - https://etherscan.io/token/0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d#writeContract, and tokenId shows up as _value,\n  // not sure why since it doesn't match the ERC721 ABI spec we use to parse these transactions - https://github.com/MetaMask/metamask-eth-abis/blob/d0474308a288f9252597b7c93a3a8deaad19e1b2/src/abis/abiERC721.ts#L62.\n  const transactionDataTokenId =\n    getTokenIdParam(tokenData) ?? getTokenValueParam(tokenData);\n\n  const nft =\n    isTokenCategory &&\n    knownNfts.find(\n      ({ address, tokenId }) =>\n        isEqualCaseInsensitive(address, recipientAddress) &&\n        tokenId === transactionDataTokenId,\n    );\n\n  const tokenDisplayValue = useTokenDisplayValue(\n    primaryTransaction?.txParams?.data,\n    token,\n    isTokenCategory,\n  );\n  const tokenFiatAmount = useTokenFiatAmount(\n    token?.address,\n    tokenDisplayValue,\n    token?.symbol,\n  );\n\n  const origin = stripHttpSchemes(\n    initialTransaction.origin || initialTransaction.msgParams?.origin || '',\n  );\n\n  // used to append to the primary display value. initialized to either token.symbol or undefined\n  // but can later be modified if dealing with a swap\n  let primarySuffix = isTokenCategory ? token?.symbol : undefined;\n  // used to display the primary value of tx. initialized to either tokenDisplayValue or undefined\n  // but can later be modified if dealing with a swap\n  let primaryDisplayValue = isTokenCategory ? tokenDisplayValue : undefined;\n  // used to display fiat amount of tx. initialized to either tokenFiatAmount or undefined\n  // but can later be modified if dealing with a swap\n  let secondaryDisplayValue = isTokenCategory ? tokenFiatAmount : undefined;\n\n  let category;\n  let title;\n\n  const {\n    swapTokenValue,\n    isNegative,\n    swapTokenFiatAmount,\n    isViewingReceivedTokenFromSwap,\n  } = useSwappedTokenValue(transactionGroup, currentAsset);\n\n  if (signatureTypes.includes(type)) {\n    category = TransactionGroupCategory.signatureRequest;\n    title = t('signatureRequest');\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n  } else if (type === TransactionType.swap) {\n    category = TransactionGroupCategory.swap;\n    title = t('swapTokenToToken', [\n      initialTransaction.sourceTokenSymbol,\n      initialTransaction.destinationTokenSymbol,\n    ]);\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n    primarySuffix = isViewingReceivedTokenFromSwap\n      ? currentAsset.symbol\n      : initialTransaction.sourceTokenSymbol;\n    primaryDisplayValue = swapTokenValue;\n    secondaryDisplayValue = swapTokenFiatAmount;\n    if (isNegative) {\n      prefix = '';\n    } else if (isViewingReceivedTokenFromSwap) {\n      prefix = '+';\n    } else {\n      prefix = '-';\n    }\n  } else if (type === TransactionType.swapAndSend) {\n    const isSenderTokenRecipient =\n      initialTransaction.swapAndSendRecipient === senderAddress;\n\n    recipientAddress = initialTransaction.swapAndSendRecipient;\n\n    category = TransactionGroupCategory.swapAndSend;\n    title = t('sendTokenAsToken', [\n      initialTransaction.sourceTokenSymbol,\n      initialTransaction.destinationTokenSymbol,\n    ]);\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n    primarySuffix =\n      isViewingReceivedTokenFromSwap && isSenderTokenRecipient\n        ? currentAsset.symbol\n        : initialTransaction.sourceTokenSymbol;\n    primaryDisplayValue = swapTokenValue;\n    secondaryDisplayValue = swapTokenFiatAmount;\n\n    if (isNegative) {\n      prefix = '';\n    } else if (isViewingReceivedTokenFromSwap && isSenderTokenRecipient) {\n      prefix = '+';\n    } else {\n      prefix = '-';\n    }\n  } else if (type === TransactionType.swapApproval) {\n    category = TransactionGroupCategory.approval;\n    title = t('swapApproval', [primaryTransaction.sourceTokenSymbol]);\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n    primarySuffix = primaryTransaction.sourceTokenSymbol;\n  } else if (type === TransactionType.tokenMethodApprove) {\n    category = TransactionGroupCategory.approval;\n    prefix = '';\n    title = t('approveSpendingCap', [\n      token?.symbol || t('token').toLowerCase(),\n    ]);\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n  } else if (type === TransactionType.tokenMethodSetApprovalForAll) {\n    category = TransactionGroupCategory.approval;\n    prefix = '';\n    title = t('setApprovalForAllTitle', [token?.symbol || t('token')]);\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n  } else if (type === TransactionType.tokenMethodIncreaseAllowance) {\n    category = TransactionGroupCategory.approval;\n    prefix = '';\n    title = t('approveIncreaseAllowance', [token?.symbol || t('token')]);\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n  } else if (type === TransactionType.contractInteraction) {\n    category = TransactionGroupCategory.interaction;\n    const transactionTypeTitle = getTransactionTypeTitle(t, type);\n    title =\n      (methodData?.name && camelCaseToCapitalize(methodData.name)) ||\n      transactionTypeTitle;\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n  } else if (type === TransactionType.deployContract) {\n    // @todo Should perhaps be a separate group?\n    category = TransactionGroupCategory.interaction;\n    title = getTransactionTypeTitle(t, type);\n    subtitle = origin;\n    subtitleContainsOrigin = true;\n  } else if (type === TransactionType.incoming) {\n    category = TransactionGroupCategory.receive;\n    title = t('receive');\n    prefix = '';\n    subtitle = t('fromAddress', [shortenAddress(senderAddress)]);\n  } else if (\n    type === TransactionType.tokenMethodTransferFrom ||\n    type === TransactionType.tokenMethodTransfer\n  ) {\n    category = TransactionGroupCategory.send;\n    title = t('sendSpecifiedTokens', [\n      token?.symbol || nft?.name || t('token'),\n    ]);\n    recipientAddress = getTokenAddressParam(tokenData);\n    subtitle = t('toAddress', [shortenAddress(recipientAddress)]);\n  } else if (type === TransactionType.tokenMethodSafeTransferFrom) {\n    category = TransactionGroupCategory.send;\n    title = t('safeTransferFrom');\n    recipientAddress = getTokenAddressParam(tokenData);\n    subtitle = t('toAddress', [shortenAddress(recipientAddress)]);\n  } else if (type === TransactionType.simpleSend) {\n    category = TransactionGroupCategory.send;\n    title = t('send');\n    subtitle = t('toAddress', [shortenAddress(recipientAddress)]);\n  } else {\n    dispatch(\n      captureSingleException(\n        `useTransactionDisplayData does not recognize transaction type. Type received is: ${type}`,\n      ),\n    );\n  }\n\n  const primaryCurrencyPreferences = useUserPreferencedCurrency(PRIMARY);\n  const secondaryCurrencyPreferences = useUserPreferencedCurrency(SECONDARY);\n\n  const [primaryCurrency] = useCurrencyDisplay(primaryValue, {\n    prefix,\n    displayValue: primaryDisplayValue,\n    suffix: primarySuffix,\n    ...primaryCurrencyPreferences,\n  });\n\n  const [secondaryCurrency] = useCurrencyDisplay(primaryValue, {\n    prefix,\n    displayValue: secondaryDisplayValue,\n    hideLabel: isTokenCategory || Boolean(swapTokenValue),\n    ...secondaryCurrencyPreferences,\n  });\n\n  return {\n    title,\n    category,\n    date,\n    subtitle,\n    subtitleContainsOrigin,\n    primaryCurrency:\n      type === TransactionType.swap && isPending ? '' : primaryCurrency,\n    senderAddress,\n    recipientAddress,\n    secondaryCurrency:\n      (isTokenCategory && !tokenFiatAmount) ||\n      ([TransactionType.swap, TransactionType.swapAndSend].includes(type) &&\n        !swapTokenFiatAmount)\n        ? undefined\n        : secondaryCurrency,\n    displayedStatusKey,\n    isPending,\n    isSubmitted,\n  };\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { TransactionType } from '@metamask/transaction-controller';\nimport { Tab } from '../components/ui/tabs';\nimport DropdownTab from '../components/ui/tabs/snaps/dropdown-tab';\nimport { SnapInsight } from '../components/app/snaps/snap-insight/snap-insight';\nimport {\n  getInsightSnapIds,\n  getInsightSnaps,\n  getSnapsMetadata,\n} from '../selectors';\nimport { deleteInterface } from '../store/actions';\nimport { getSnapName } from '../helpers/utils/util';\nimport { useInsightSnaps } from './snaps/useInsightSnaps';\n\nconst isAllowedTransactionTypes = (transactionType) =>\n  transactionType === TransactionType.contractInteraction ||\n  transactionType === TransactionType.simpleSend ||\n  transactionType === TransactionType.tokenMethodSafeTransferFrom ||\n  transactionType === TransactionType.tokenMethodTransferFrom ||\n  transactionType === TransactionType.tokenMethodTransfer;\n\n// A hook was needed to return JSX here as the way Tabs work JSX has to be included in\n// https://github.com/MetaMask/metamask-extension/blob/develop/ui/components/app/confirm-page-container/confirm-page-container-content/confirm-page-container-content.component.js#L129\n// Thus it is not possible to use React Component here\nconst useTransactionInsights = ({ txData }) => {\n  const dispatch = useDispatch();\n  const insightSnaps = useSelector(getInsightSnaps);\n  const insightSnapIds = useSelector(getInsightSnapIds);\n  const snapsMetadata = useSelector(getSnapsMetadata);\n\n  const snapsNameGetter = getSnapName(snapsMetadata);\n\n  const [selectedInsightSnapId, setSelectedInsightSnapId] = useState(\n    insightSnaps[0]?.id,\n  );\n\n  const { data, warnings } = useInsightSnaps(txData.id);\n\n  useEffect(() => {\n    if (insightSnapIds.length > 0 && !selectedInsightSnapId) {\n      setSelectedInsightSnapId(insightSnapIds[0]);\n    }\n  }, [insightSnapIds, selectedInsightSnapId, setSelectedInsightSnapId]);\n\n  useEffect(() => {\n    return () => {\n      data?.map(\n        ({ response }) =>\n          response?.id && dispatch(deleteInterface(response.id)),\n      );\n    };\n  }, [data]);\n\n  if (!isAllowedTransactionTypes(txData.type) || !insightSnaps.length) {\n    return null;\n  }\n\n  const selectedSnap = insightSnaps.find(\n    ({ id }) => id === selectedInsightSnapId,\n  );\n\n  // TODO(hbmalik88): refactor this into another component once we've redone\n  // the logic inside of tabs.component.js is re-done to account for nested tabs\n  let insightComponent;\n\n  if (insightSnaps.length === 1) {\n    insightComponent = (\n      <Tab\n        className=\"confirm-page-container-content__tab\"\n        name={snapsNameGetter(selectedSnap.id)}\n      >\n        <SnapInsight snapId={selectedInsightSnapId} data={data?.[0]} />\n      </Tab>\n    );\n  } else if (insightSnaps.length > 1) {\n    const dropdownOptions = insightSnaps?.map(({ id }) => {\n      const name = snapsNameGetter(id);\n      return {\n        value: id,\n        name,\n      };\n    });\n\n    const selectedSnapData = data?.find(\n      (result) => result?.snapId === selectedInsightSnapId,\n    );\n\n    insightComponent = (\n      <DropdownTab\n        className=\"confirm-page-container-content__tab\"\n        options={dropdownOptions}\n        selectedOption={selectedInsightSnapId}\n        onChange={(snapId) => setSelectedInsightSnapId(snapId)}\n      >\n        <SnapInsight snapId={selectedInsightSnapId} data={selectedSnapData} />\n      </DropdownTab>\n    );\n  }\n\n  return { insightComponent, warnings };\n};\n\nexport default useTransactionInsights;\n","import { shallowEqual, useSelector } from 'react-redux';\nimport { getPreferences, getSelectedInternalAccount } from '../selectors';\nimport {\n  getMultichainNativeCurrency,\n  getMultichainCurrentCurrency,\n  getMultichainShouldShowFiat,\n} from '../selectors/multichain';\n\nimport { PRIMARY, SECONDARY } from '../helpers/constants/common';\nimport { EtherDenomination } from '../../shared/constants/common';\nimport { ETH_DEFAULT_DECIMALS } from '../constants';\nimport { useMultichainSelector } from './useMultichainSelector';\n\n/**\n * Defines the shape of the options parameter for useUserPreferencedCurrency\n *\n * @typedef {object} UseUserPreferencedCurrencyOptions\n * @property {number} [numberOfDecimals] - Number of significant decimals to display\n * @property {number} [ethNumberOfDecimals] - Number of significant decimals to display\n *                                             when using ETH\n * @property {number} [fiatNumberOfDecimals] - Number of significant decimals to display\n *                                            when using fiat\n */\n\n/**\n * Defines the return shape of useUserPreferencedCurrency\n *\n * @typedef {object} UserPreferredCurrency\n * @property {string} currency - the currency type to use (eg: 'ETH', 'usd')\n * @property {number} numberOfDecimals - Number of significant decimals to display\n */\n\n/**\n * useUserPreferencedCurrency\n *\n * returns an object that contains what currency to use for displaying values based\n * on the user's preference settings, as well as the significant number of decimals\n * to display based on the currency\n *\n * @param {\"PRIMARY\" | \"SECONDARY\"} type - what display type is being rendered\n * @param {UseUserPreferencedCurrencyOptions} opts - options to override default values\n * @returns {UserPreferredCurrency}\n */\nexport function useUserPreferencedCurrency(type, opts = {}) {\n  const selectedAccount = useSelector(getSelectedInternalAccount);\n  const account = opts.account ?? selectedAccount;\n  const nativeCurrency = useMultichainSelector(\n    getMultichainNativeCurrency,\n    account,\n  );\n\n  const { useNativeCurrencyAsPrimaryCurrency } = useSelector(\n    getPreferences,\n    shallowEqual,\n  );\n  const showFiat = useMultichainSelector(getMultichainShouldShowFiat, account);\n  const currentCurrency = useMultichainSelector(\n    getMultichainCurrentCurrency,\n    account,\n  );\n\n  const fiatReturn = {\n    currency: currentCurrency,\n    numberOfDecimals: opts.numberOfDecimals || opts.fiatNumberOfDecimals || 2,\n  };\n\n  const nativeReturn = {\n    currency: nativeCurrency || EtherDenomination.ETH,\n    numberOfDecimals:\n      opts.numberOfDecimals || opts.ethNumberOfDecimals || ETH_DEFAULT_DECIMALS,\n  };\n\n  if (opts.showNativeOverride) {\n    return nativeReturn;\n  } else if (opts.showFiatOverride) {\n    return fiatReturn;\n  } else if (\n    !showFiat ||\n    (type === PRIMARY && useNativeCurrencyAsPrimaryCurrency) ||\n    (type === SECONDARY && !useNativeCurrencyAsPrimaryCurrency)\n  ) {\n    return nativeReturn;\n  }\n  return fiatReturn;\n}\n","import { promisify } from 'util';\nimport copyToClipboard from 'copy-to-clipboard';\nimport log from 'loglevel';\nimport { clone } from 'lodash';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport browser from 'webextension-polyfill';\n\nimport { getEnvironmentType } from '../app/scripts/lib/util';\nimport { AlertTypes } from '../shared/constants/alerts';\nimport { maskObject } from '../shared/modules/object.utils';\nimport { SENTRY_UI_STATE } from '../app/scripts/constants/sentry-state';\nimport { ENVIRONMENT_TYPE_POPUP } from '../shared/constants/app';\nimport { COPY_OPTIONS } from '../shared/constants/copy';\nimport switchDirection from '../shared/lib/switch-direction';\nimport { setupLocale } from '../shared/lib/error-utils';\nimport { trace, TraceName } from '../shared/lib/trace';\nimport * as actions from './store/actions';\nimport configureStore from './store/store';\nimport {\n  getOriginOfCurrentTab,\n  getPermittedAccountsForCurrentTab,\n  getSelectedInternalAccount,\n  getUnapprovedTransactions,\n  getNetworkToAutomaticallySwitchTo,\n  getSwitchedNetworkDetails,\n  getUseRequestQueue,\n  getCurrentChainId,\n} from './selectors';\nimport { ALERT_STATE } from './ducks/alerts';\nimport {\n  getUnconnectedAccountAlertEnabledness,\n  getUnconnectedAccountAlertShown,\n} from './ducks/metamask/metamask';\nimport Root from './pages';\nimport txHelper from './helpers/utils/tx-helper';\nimport { setBackgroundConnection } from './store/background-connection';\n\nlog.setLevel(global.METAMASK_DEBUG ? 'debug' : 'warn', false);\n\nlet reduxStore;\n\n/**\n * Method to update backgroundConnection object use by UI\n *\n * @param backgroundConnection - connection object to background\n */\nexport const updateBackgroundConnection = (backgroundConnection) => {\n  setBackgroundConnection(backgroundConnection);\n  backgroundConnection.onNotification((data) => {\n    if (data.method === 'sendUpdate') {\n      reduxStore.dispatch(actions.updateMetamaskState(data.params[0]));\n    } else {\n      throw new Error(\n        `Internal JSON-RPC Notification Not Handled:\\n\\n ${JSON.stringify(\n          data,\n        )}`,\n      );\n    }\n  });\n};\n\nexport default async function launchMetamaskUi(opts) {\n  const { backgroundConnection, traceContext } = opts;\n\n  const metamaskState = await trace(\n    { name: TraceName.GetState, parentContext: traceContext },\n    () => promisify(backgroundConnection.getState.bind(backgroundConnection))(),\n  );\n\n  const store = await startApp(metamaskState, backgroundConnection, opts);\n\n  await promisify(\n    backgroundConnection.startPatches.bind(backgroundConnection),\n  )();\n\n  setupStateHooks(store);\n\n  return store;\n}\n\n/**\n * Method to setup initial redux store for the ui application\n *\n * @param {*} metamaskState - flatten background state\n * @param {*} backgroundConnection - rpc client connecting to the background process\n * @param {*} activeTab - active browser tab\n * @returns redux store\n */\nexport async function setupInitialStore(\n  metamaskState,\n  backgroundConnection,\n  activeTab,\n) {\n  // parse opts\n  if (!metamaskState.featureFlags) {\n    metamaskState.featureFlags = {};\n  }\n\n  const { currentLocaleMessages, enLocaleMessages } = await setupLocale(\n    metamaskState.currentLocale,\n  );\n\n  if (metamaskState.textDirection === 'rtl') {\n    switchDirection('rtl');\n  }\n\n  const draftInitialState = {\n    activeTab,\n\n    // metamaskState represents the cross-tab state\n    metamask: metamaskState,\n\n    // appState represents the current tab's popup state\n    appState: {},\n\n    localeMessages: {\n      currentLocale: metamaskState.currentLocale,\n      current: currentLocaleMessages,\n      en: enLocaleMessages,\n    },\n  };\n\n  updateBackgroundConnection(backgroundConnection);\n\n  if (getEnvironmentType() === ENVIRONMENT_TYPE_POPUP) {\n    const { origin } = draftInitialState.activeTab;\n    const permittedAccountsForCurrentTab =\n      getPermittedAccountsForCurrentTab(draftInitialState);\n    const selectedAddress =\n      getSelectedInternalAccount(draftInitialState)?.address ?? '';\n    const unconnectedAccountAlertShownOrigins =\n      getUnconnectedAccountAlertShown(draftInitialState);\n    const unconnectedAccountAlertIsEnabled =\n      getUnconnectedAccountAlertEnabledness(draftInitialState);\n\n    if (\n      origin &&\n      unconnectedAccountAlertIsEnabled &&\n      !unconnectedAccountAlertShownOrigins[origin] &&\n      permittedAccountsForCurrentTab.length > 0 &&\n      !permittedAccountsForCurrentTab.includes(selectedAddress)\n    ) {\n      draftInitialState[AlertTypes.unconnectedAccount] = {\n        state: ALERT_STATE.OPEN,\n      };\n      actions.setUnconnectedAccountAlertShown(origin);\n    }\n  }\n\n  const store = configureStore(draftInitialState);\n  reduxStore = store;\n\n  const unapprovedTxs = getUnapprovedTransactions(metamaskState);\n\n  // if unconfirmed txs, start on txConf page\n  const unapprovedTxsAll = txHelper(\n    unapprovedTxs,\n    metamaskState.unapprovedPersonalMsgs,\n    metamaskState.unapprovedDecryptMsgs,\n    metamaskState.unapprovedEncryptionPublicKeyMsgs,\n    metamaskState.unapprovedTypedMessages,\n    metamaskState.networkId,\n    getCurrentChainId({ metamask: metamaskState }),\n  );\n  const numberOfUnapprovedTx = unapprovedTxsAll.length;\n  if (numberOfUnapprovedTx > 0) {\n    store.dispatch(\n      actions.showConfTxPage({\n        id: unapprovedTxsAll[0].id,\n      }),\n    );\n  }\n\n  return store;\n}\n\nasync function startApp(metamaskState, backgroundConnection, opts) {\n  const { traceContext } = opts;\n\n  const store = await trace(\n    { name: TraceName.SetupStore, parentContext: traceContext },\n    () =>\n      setupInitialStore(metamaskState, backgroundConnection, opts.activeTab),\n  );\n\n  // global metamask api - used by tooling\n  global.metamask = {\n    updateCurrentLocale: (code) => {\n      store.dispatch(actions.updateCurrentLocale(code));\n    },\n    setFeatureFlag: (key, value) => {\n      store.dispatch(actions.setFeatureFlag(key, value));\n    },\n  };\n\n  await trace(\n    { name: TraceName.InitialActions, parentContext: traceContext },\n    () => runInitialActions(store),\n  );\n\n  trace({ name: TraceName.FirstRender, parentContext: traceContext }, () =>\n    render(<Root store={store} />, opts.container),\n  );\n\n  return store;\n}\n\nasync function runInitialActions(store) {\n  const state = store.getState();\n\n  // This block autoswitches chains based on the last chain used\n  // for a given dapp, when there are no pending confimrations\n  // This allows the user to be connected on one chain\n  // for one dapp, and automatically change for another\n  const networkIdToSwitchTo = getNetworkToAutomaticallySwitchTo(state);\n\n  if (networkIdToSwitchTo) {\n    await store.dispatch(\n      actions.automaticallySwitchNetwork(\n        networkIdToSwitchTo,\n        getOriginOfCurrentTab(state),\n      ),\n    );\n  } else if (getSwitchedNetworkDetails(state)) {\n    // It's possible that old details could exist if the user\n    // opened the toast but then didn't close it\n    // Clear out any existing switchedNetworkDetails\n    // if the user didn't just change the dapp network\n    await store.dispatch(actions.clearSwitchedNetworkDetails());\n  }\n\n  // Register this window as the current popup\n  // and set in background state\n  if (\n    getUseRequestQueue(state) &&\n    getEnvironmentType() === ENVIRONMENT_TYPE_POPUP\n  ) {\n    const thisPopupId = Date.now();\n    global.metamask.id = thisPopupId;\n    await store.dispatch(actions.setCurrentExtensionPopupId(thisPopupId));\n  }\n}\n\n/**\n * Setup functions on `window.stateHooks`. Some of these support\n * application features, and some are just for debugging or testing.\n *\n * @param {object} store - The Redux store.\n */\nfunction setupStateHooks(store) {\n  if (\n    process.env.METAMASK_DEBUG ||\n    process.env.IN_TEST ||\n    process.env.ENABLE_SETTINGS_PAGE_DEV_OPTIONS\n  ) {\n    /**\n     * The following stateHook is a method intended to throw an error, used in\n     * our E2E test to ensure that errors are attempted to be sent to sentry.\n     *\n     * @param {string} [msg] - The error message to throw, defaults to 'Test Error'\n     */\n    window.stateHooks.throwTestError = async function (msg = 'Test Error') {\n      const error = new Error(msg);\n      error.name = 'TestError';\n      throw error;\n    };\n    /**\n     * The following stateHook is a method intended to throw an error in the\n     * background, used in our E2E test to ensure that errors are attempted to be\n     * sent to sentry.\n     *\n     * @param {string} [msg] - The error message to throw, defaults to 'Test Error'\n     */\n    window.stateHooks.throwTestBackgroundError = async function (\n      msg = 'Test Error',\n    ) {\n      await actions.throwTestBackgroundError(msg);\n    };\n  }\n\n  window.stateHooks.getCleanAppState = async function () {\n    const state = clone(store.getState());\n    // we use the manifest.json version from getVersion and not\n    // `process.env.METAMASK_VERSION` as they can be different (see `getVersion`\n    // for more info)\n    state.version = global.platform.getVersion();\n    state.browser = window.navigator.userAgent;\n    state.completeTxList = await actions.getTransactions({\n      filterToCurrentNetwork: false,\n    });\n    return state;\n  };\n  window.stateHooks.getSentryAppState = function () {\n    const reduxState = store.getState();\n    return maskObject(reduxState, SENTRY_UI_STATE);\n  };\n  window.stateHooks.getLogs = function () {\n    // These logs are logged by LoggingController\n    const reduxState = store.getState();\n    const { logs } = reduxState.metamask;\n\n    const logsArray = Object.values(logs).sort((a, b) => {\n      return a.timestamp - b.timestamp;\n    });\n\n    return logsArray;\n  };\n}\n\nwindow.logStateString = async function (cb) {\n  const state = await window.stateHooks.getCleanAppState();\n  const logs = window.stateHooks.getLogs();\n  browser.runtime\n    .getPlatformInfo()\n    .then((platform) => {\n      state.platform = platform;\n      state.logs = logs;\n      const stateString = JSON.stringify(state, null, 2);\n      cb(null, stateString);\n    })\n    .catch((err) => {\n      cb(err);\n    });\n};\n\nwindow.logState = function (toClipboard) {\n  return window.logStateString((err, result) => {\n    if (err) {\n      console.error(err.message);\n    } else if (toClipboard) {\n      copyToClipboard(result, COPY_OPTIONS);\n      console.log('State log copied');\n    } else {\n      console.log(result);\n    }\n  });\n};\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\nimport NftDetails from '../../components/app/assets/nfts/nft-details/nft-details';\nimport {\n  getNativeCurrency,\n  getNfts,\n  getTokens,\n} from '../../ducks/metamask/metamask';\nimport { DEFAULT_ROUTE } from '../../helpers/constants/routes';\n\nimport NativeAsset from './components/native-asset';\nimport TokenAsset from './components/token-asset';\n\n/** A page representing a native, token, or NFT asset */\nconst Asset = () => {\n  const nativeCurrency = useSelector(getNativeCurrency);\n  const tokens = useSelector(getTokens);\n  const nfts = useSelector(getNfts);\n  const { asset, id } = useParams<{ asset: string; id: string }>();\n\n  const token = tokens.find(({ address }: { address: string }) =>\n    isEqualCaseInsensitive(address, asset),\n  );\n\n  const nft = nfts.find(\n    ({ address, tokenId }: { address: string; tokenId: string }) =>\n      isEqualCaseInsensitive(address, asset) && id === tokenId.toString(),\n  );\n\n  useEffect(() => {\n    const el = document.querySelector('.app');\n    el?.scroll(0, 0);\n  }, []);\n\n  let content;\n  if (nft) {\n    content = <NftDetails nft={nft} />;\n  } else if (token) {\n    content = <TokenAsset token={token} />;\n  } else if (asset === nativeCurrency) {\n    content = <NativeAsset />;\n  } else {\n    content = <Redirect to={{ pathname: DEFAULT_ROUTE }} />;\n  }\n  return <div className=\"main-container asset__container\">{content}</div>;\n};\n\nexport default Asset;\n","import React, { useContext, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { Menu, MenuItem } from '../../../components/ui/menu';\nimport { getBlockExplorerLinkText } from '../../../selectors';\nimport { NETWORKS_ROUTE } from '../../../helpers/constants/routes';\nimport {\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n} from '../../../components/component-library';\nimport { Color } from '../../../helpers/constants/design-system';\n\nconst AssetOptions = ({\n  onRemove,\n  onClickBlockExplorer,\n  onViewTokenDetails,\n  tokenSymbol,\n  isNativeAsset,\n}) => {\n  const t = useContext(I18nContext);\n  const [assetOptionsOpen, setAssetOptionsOpen] = useState(false);\n  const history = useHistory();\n  const blockExplorerLinkText = useSelector(getBlockExplorerLinkText);\n  const ref = useRef(false);\n\n  const routeToAddBlockExplorerUrl = () => {\n    history.push(`${NETWORKS_ROUTE}#blockExplorerUrl`);\n  };\n\n  const openBlockExplorer = () => {\n    setAssetOptionsOpen(false);\n    onClickBlockExplorer();\n  };\n\n  return (\n    <div ref={ref}>\n      <ButtonIcon\n        className=\"asset-options__button\"\n        data-testid=\"asset-options__button\"\n        onClick={() => setAssetOptionsOpen(true)}\n        ariaLabel={t('assetOptions')}\n        iconName={IconName.MoreVertical}\n        color={Color.textDefault}\n        size={ButtonIconSize.Sm}\n      />\n      {assetOptionsOpen ? (\n        <Menu\n          anchorElement={ref.current}\n          onHide={() => setAssetOptionsOpen(false)}\n        >\n          <MenuItem\n            iconName={IconName.Export}\n            data-testid=\"asset-options__etherscan\"\n            onClick={\n              blockExplorerLinkText.firstPart === 'addBlockExplorer'\n                ? routeToAddBlockExplorerUrl\n                : openBlockExplorer\n            }\n          >\n            {t(\n              blockExplorerLinkText.firstPart,\n              blockExplorerLinkText.secondPart === ''\n                ? null\n                : [t('blockExplorerAssetAction')],\n            )}\n          </MenuItem>\n          {isNativeAsset ? null : (\n            <MenuItem\n              iconName={IconName.Trash}\n              data-testid=\"asset-options__hide\"\n              onClick={() => {\n                setAssetOptionsOpen(false);\n                onRemove();\n              }}\n            >\n              {t('hideTokenSymbol', [tokenSymbol])}\n            </MenuItem>\n          )}\n          {isNativeAsset || !onViewTokenDetails ? null : (\n            <MenuItem\n              iconName={IconName.Info}\n              data-testid=\"asset-options__token-details\"\n              onClick={() => {\n                setAssetOptionsOpen(false);\n                onViewTokenDetails();\n              }}\n            >\n              {t('tokenDetails')}\n            </MenuItem>\n          )}\n        </Menu>\n      ) : null}\n    </div>\n  );\n};\n\nconst isNotFunc = (p) => {\n  return typeof p !== 'function';\n};\n\nAssetOptions.propTypes = {\n  isNativeAsset: PropTypes.bool,\n  onClickBlockExplorer: PropTypes.func.isRequired,\n  onRemove: (props) => {\n    if (props.isNativeAsset === false && isNotFunc(props.onRemove)) {\n      throw new Error(\n        'When isNativeAsset is true, onRemove is a required prop',\n      );\n    }\n  },\n  onViewTokenDetails: PropTypes.func,\n  tokenSymbol: (props) => {\n    if (\n      props.isNativeAsset === false &&\n      typeof props.tokenSymbol !== 'string'\n    ) {\n      throw new Error(\n        'When isNativeAsset is true, tokenSymbol is a required prop',\n      );\n    }\n  },\n};\n\nexport default AssetOptions;\n","import React, { ReactNode } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\nimport { EthMethod } from '@metamask/keyring-api';\nimport { isEqual } from 'lodash';\nimport {\n  getCurrentCurrency,\n  getIsBridgeChain,\n  getIsSwapsChain,\n  getSelectedInternalAccount,\n  getSwapsDefaultToken,\n  getTokensMarketData,\n} from '../../../selectors';\nimport {\n  Display,\n  FlexDirection,\n  IconColor,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  Box,\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n  Text,\n} from '../../../components/component-library';\nimport { formatCurrency } from '../../../helpers/utils/confirm-tx.util';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  AddressCopyButton,\n  TokenListItem,\n} from '../../../components/multichain';\nimport { AssetType } from '../../../../shared/constants/transaction';\nimport TokenCell from '../../../components/app/assets/token-cell';\nimport TransactionList from '../../../components/app/transaction-list';\nimport { getPricePrecision, localizeLargeNumber } from '../util';\nimport { DEFAULT_ROUTE } from '../../../helpers/constants/routes';\nimport { getConversionRate } from '../../../ducks/metamask/metamask';\nimport { toChecksumHexAddress } from '../../../../shared/modules/hexstring-utils';\nimport CoinButtons from '../../../components/app/wallet-overview/coin-buttons';\nimport { getIsNativeTokenBuyable } from '../../../ducks/ramps';\nimport AssetChart from './chart/asset-chart';\nimport TokenButtons from './token-buttons';\n\n/** Information about a native or token asset */\nexport type Asset = (\n  | {\n      type: AssetType.native;\n      /** Whether the symbol has been verified to match the chain */\n      isOriginalNativeSymbol: boolean;\n    }\n  | {\n      type: AssetType.token;\n      /** The token's contract address */\n      address: string;\n      /** The number of decimal places to move left when displaying balances */\n      decimals: number;\n      /** An array of token list sources the asset appears in, e.g. [1inch,Sushiswap]  */\n      aggregators?: [];\n    }\n) & {\n  /** The hexadecimal chain id */\n  chainId: `0x${string}`;\n  /** The asset's symbol, e.g. 'ETH' */\n  symbol: string;\n  /** The asset's name, e.g. 'Ethereum' */\n  name?: string;\n  /** A URL to the asset's image */\n  image: string;\n  balance: {\n    /**\n     * A decimal representation of the balance before applying\n     * decimals e.g. '12300000000000000' for 0.0123 ETH\n     */\n    value: string;\n    /**\n     * A displayable representation of the balance after applying\n     * decimals e.g. '0.0123' for 12300000000000000 WEI\n     */\n    display: string;\n    /** The balance's localized value in fiat e.g. '$12.34' or '56,78 €' */\n    fiat?: string;\n  };\n  /** True if the asset implements ERC721 */\n  isERC721?: boolean;\n};\n\n// A page representing a native or token asset\nconst AssetPage = ({\n  asset,\n  optionsButton,\n}: {\n  asset: Asset;\n  optionsButton: React.ReactNode;\n}) => {\n  const t = useI18nContext();\n  const history = useHistory();\n  const currency = useSelector(getCurrentCurrency);\n  const conversionRate = useSelector(getConversionRate);\n  const allMarketData = useSelector(getTokensMarketData);\n  const isBridgeChain = useSelector(getIsBridgeChain);\n  const isBuyableChain = useSelector(getIsNativeTokenBuyable);\n  const defaultSwapsToken = useSelector(getSwapsDefaultToken, isEqual);\n  const account = useSelector(getSelectedInternalAccount, isEqual);\n  const isSwapsChain = useSelector(getIsSwapsChain);\n  const isSigningEnabled =\n    account.methods.includes(EthMethod.SignTransaction) ||\n    account.methods.includes(EthMethod.SignUserOperation);\n\n  const { chainId, type, symbol, name, image, balance } = asset;\n\n  const address =\n    type === AssetType.token\n      ? toChecksumHexAddress(asset.address)\n      : '0x0000000000000000000000000000000000000000';\n\n  const marketData = allMarketData?.[address];\n\n  const currentPrice =\n    conversionRate !== undefined && marketData?.price !== undefined\n      ? conversionRate * marketData.price\n      : undefined;\n\n  return (\n    <Box\n      marginLeft=\"auto\"\n      marginRight=\"auto\"\n      marginTop={4}\n      className=\"asset__content\"\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        justifyContent={JustifyContent.spaceBetween}\n        paddingLeft={2}\n        paddingRight={4}\n        paddingBottom={1}\n      >\n        <Box display={Display.Flex}>\n          <ButtonIcon\n            color={IconColor.iconAlternative}\n            marginRight={1}\n            size={ButtonIconSize.Sm}\n            ariaLabel={t('back')}\n            iconName={IconName.ArrowLeft}\n            onClick={() => history.push(DEFAULT_ROUTE)}\n          />\n          <Text data-testid=\"asset-name\" color={TextColor.textAlternative}>\n            {name && symbol && name !== symbol\n              ? `${name} (${symbol})`\n              : name ?? symbol}\n          </Text>\n        </Box>\n        {optionsButton}\n      </Box>\n      <AssetChart\n        chainId={chainId}\n        address={address}\n        currentPrice={currentPrice}\n        currency={currency}\n      />\n      <Box marginTop={4}>\n        {type === AssetType.native ? (\n          <CoinButtons\n            {...{\n              trackingLocation: 'asset-page',\n              isBuyableChain,\n              isSigningEnabled,\n              isSwapsChain,\n              isBridgeChain,\n              chainId,\n              defaultSwapsToken,\n            }}\n          />\n        ) : (\n          <TokenButtons token={asset} />\n        )}\n      </Box>\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        paddingTop={5}\n      >\n        <Text variant={TextVariant.headingMd} paddingBottom={2} paddingLeft={4}>\n          {t('yourBalance')}\n        </Text>\n        {type === AssetType.native ? (\n          <TokenListItem\n            title={symbol}\n            tokenSymbol={symbol}\n            primary={`${balance.display} ${symbol}`}\n            secondary={balance.fiat}\n            tokenImage={image}\n            isOriginalTokenSymbol={asset.isOriginalNativeSymbol}\n            isNativeCurrency={true}\n          />\n        ) : (\n          <TokenCell\n            address={address}\n            image={image}\n            symbol={symbol}\n            string={balance.display}\n          />\n        )}\n        <Box\n          marginTop={2}\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          gap={7}\n        >\n          {type === AssetType.token && (\n            <Box\n              display={Display.Flex}\n              flexDirection={FlexDirection.Column}\n              paddingLeft={4}\n              paddingRight={4}\n            >\n              <Text variant={TextVariant.headingMd} paddingBottom={4}>\n                {t('tokenDetails')}\n              </Text>\n              {renderRow(\n                t('contractAddress'),\n                <AddressCopyButton address={address} shorten />,\n              )}\n              <Box\n                display={Display.Flex}\n                flexDirection={FlexDirection.Column}\n                gap={2}\n              >\n                {asset.decimals !== undefined &&\n                  renderRow(t('tokenDecimal'), <Text>{asset.decimals}</Text>)}\n                {asset.aggregators && asset.aggregators?.length > 0 && (\n                  <Box>\n                    <Text\n                      color={TextColor.textAlternative}\n                      variant={TextVariant.bodyMdMedium}\n                    >\n                      {t('tokenList')}\n                    </Text>\n                    <Text>{asset.aggregators?.join(', ')}</Text>\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          )}\n          {conversionRate > 0 &&\n            (marketData?.marketCap > 0 ||\n              marketData?.totalVolume > 0 ||\n              marketData?.circulatingSupply > 0 ||\n              marketData?.allTimeHigh > 0 ||\n              marketData?.allTimeLow > 0) && (\n              <Box paddingLeft={4} paddingRight={4}>\n                <Text variant={TextVariant.headingMd} paddingBottom={4}>\n                  {t('marketDetails')}\n                </Text>\n                <Box\n                  display={Display.Flex}\n                  flexDirection={FlexDirection.Column}\n                  gap={2}\n                >\n                  {marketData?.marketCap > 0 &&\n                    renderRow(\n                      t('marketCap'),\n                      <Text data-testid=\"asset-market-cap\">\n                        {localizeLargeNumber(\n                          t,\n                          conversionRate * marketData.marketCap,\n                        )}\n                      </Text>,\n                    )}\n                  {marketData?.totalVolume > 0 &&\n                    renderRow(\n                      t('totalVolume'),\n                      <Text>\n                        {localizeLargeNumber(\n                          t,\n                          conversionRate * marketData.totalVolume,\n                        )}\n                      </Text>,\n                    )}\n                  {marketData?.circulatingSupply > 0 &&\n                    renderRow(\n                      t('circulatingSupply'),\n                      <Text>\n                        {localizeLargeNumber(t, marketData.circulatingSupply)}\n                      </Text>,\n                    )}\n                  {marketData?.allTimeHigh > 0 &&\n                    renderRow(\n                      t('allTimeHigh'),\n                      <Text>\n                        {formatCurrency(\n                          `${conversionRate * marketData.allTimeHigh}`,\n                          currency,\n                          getPricePrecision(\n                            conversionRate * marketData.allTimeHigh,\n                          ),\n                        )}\n                      </Text>,\n                    )}\n                  {marketData?.allTimeLow > 0 &&\n                    renderRow(\n                      t('allTimeLow'),\n                      <Text>\n                        {formatCurrency(\n                          `${conversionRate * marketData.allTimeLow}`,\n                          currency,\n                          getPricePrecision(\n                            conversionRate * marketData.allTimeLow,\n                          ),\n                        )}\n                      </Text>,\n                    )}\n                </Box>\n              </Box>\n            )}\n          <Box marginBottom={8}>\n            <Text\n              paddingLeft={4}\n              paddingRight={4}\n              variant={TextVariant.headingMd}\n            >\n              {t('yourActivity')}\n            </Text>\n            {type === AssetType.native ? (\n              <TransactionList hideTokenTransactions />\n            ) : (\n              <TransactionList tokenAddress={address} />\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nfunction renderRow(leftColumn: string, rightColumn: ReactNode) {\n  return (\n    <Box display={Display.Flex} justifyContent={JustifyContent.spaceBetween}>\n      <Text\n        color={TextColor.textAlternative}\n        variant={TextVariant.bodyMdMedium}\n      >\n        {leftColumn}\n      </Text>\n      {rightColumn}\n    </Box>\n  );\n}\n\nexport default AssetPage;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport {\n  BackgroundColor,\n  BorderRadius,\n  Display,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { Box, Text } from '../../../components/component-library';\nimport { formatCurrency } from '../../../helpers/utils/confirm-tx.util';\nimport {\n  getPricePrecision,\n  loadingOpacity,\n  getShortDateFormatter,\n} from '../util';\n\nconst chartUp = (\n  <svg\n    className=\"chart-up\"\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9.75 3.8125L6.25 7.4875L4.91667 5.3875L2.25 8.1875\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M8.08398 3.8125H9.75065V5.5625\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\nconst chartDown = (\n  <svg\n    className=\"chart-down\"\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9.75 8.1875L6.25 4.5125L4.91667 6.6125L2.25 3.8125\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M8.08398 8.1875H9.75065V6.4375\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n// A component that shows the price of an asset at a\n// certain time, along with the delta from a previous price.\nconst AssetPrice = forwardRef(\n  (\n    props: {\n      loading: boolean;\n      currency: string;\n      price?: number;\n      date: number;\n      comparePrice?: number;\n    },\n    ref,\n  ) => {\n    const [{ price, date }, setPrice] = useState({\n      price: props.price,\n      date: props.date,\n    });\n    useImperativeHandle(ref, () => ({ setPrice }));\n\n    const { loading, currency, comparePrice } = props;\n    const priceDelta =\n      price !== undefined && comparePrice !== undefined\n        ? price - comparePrice\n        : undefined;\n\n    return (\n      <Box marginLeft={4} marginRight={4}>\n        <Text\n          data-testid=\"asset-hovered-price\"\n          style={{ width: '100px' }}\n          variant={TextVariant.headingLg}\n          borderRadius={BorderRadius.LG}\n          marginBottom={1}\n          backgroundColor={\n            loading && !price\n              ? BackgroundColor.backgroundAlternative\n              : BackgroundColor.transparent\n          }\n        >\n          {price\n            ? formatCurrency(`${price}`, currency, getPricePrecision(price))\n            : '\\u00A0'}\n        </Text>\n        <Box>\n          {priceDelta !== undefined && comparePrice !== undefined ? (\n            <Box style={{ opacity: loading ? loadingOpacity : 1 }}>\n              {priceDelta >= 0 ? chartUp : chartDown}\n              <Text\n                display={Display.InlineBlock}\n                variant={TextVariant.bodyMdMedium}\n                marginLeft={1}\n                marginRight={1}\n                color={\n                  priceDelta >= 0\n                    ? TextColor.successDefault\n                    : TextColor.errorDefault\n                }\n              >\n                {formatCurrency(\n                  `${Math.abs(priceDelta)}`,\n                  currency,\n                  getPricePrecision(priceDelta),\n                )}{' '}\n                ({priceDelta >= 0 ? '+' : ''}\n                {(100 * (priceDelta / comparePrice)).toFixed(2)}%)\n              </Text>\n              <Text\n                display={Display.InlineBlock}\n                variant={TextVariant.bodyMdMedium}\n                color={TextColor.textAlternative}\n              >\n                {getShortDateFormatter().format(date)}\n              </Text>\n            </Box>\n          ) : (\n            <Text\n              style={{ width: '200px' }}\n              backgroundColor={\n                loading\n                  ? BackgroundColor.backgroundAlternative\n                  : BackgroundColor.transparent\n              }\n              borderRadius={BorderRadius.LG}\n              variant={TextVariant.bodyMdMedium}\n            >\n              {'\\u00A0'}\n            </Text>\n          )}\n        </Box>\n      </Box>\n    );\n  },\n);\n\nexport default AssetPrice;\n","import React, { useRef, useState } from 'react';\nimport {\n  Chart,\n  LineElement,\n  LinearScale,\n  PointElement,\n  Filler,\n  ChartOptions,\n  Decimation,\n  Point,\n  // @ts-expect-error suppress CommonJS vs ECMAScript error\n} from 'chart.js';\n// @ts-expect-error suppress CommonJS vs ECMAScript error\nimport { Line } from 'react-chartjs-2';\nimport classnames from 'classnames';\nimport { brandColor } from '@metamask/design-tokens';\nimport { useTheme } from '../../../../hooks/useTheme';\nimport {\n  BackgroundColor,\n  Display,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n  BorderRadius,\n  FlexDirection,\n} from '../../../../helpers/constants/design-system';\nimport {\n  Box,\n  ButtonBase,\n  ButtonBaseSize,\n} from '../../../../components/component-library';\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { TimeRange, useHistoricalPrices } from '../../useHistoricalPrices';\nimport { loadingOpacity } from '../../util';\nimport AssetPrice from '../asset-price';\nimport ChartTooltip from './chart-tooltip';\nimport { CrosshairPlugin } from './crosshair-plugin';\n\nChart.register(\n  LinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Decimation,\n  CrosshairPlugin,\n);\n\nconst initialChartOptions: ChartOptions<'line'> & { fill: boolean } = {\n  normalized: true,\n  parsing: false,\n  aspectRatio: 2.9,\n  layout: { autoPadding: false, padding: 0 },\n  animation: { duration: 0 },\n  fill: true,\n  backgroundColor: ({ chart }) => {\n    const gradient = chart.ctx.createLinearGradient(0, 0, 0, chart.height);\n    gradient.addColorStop(0, `${chart.options.borderColor}60`);\n    gradient.addColorStop(1, `${chart.options.borderColor}00`);\n    return gradient;\n  },\n  elements: {\n    line: { borderWidth: 2 },\n    point: { pointStyle: false },\n  },\n  plugins: {\n    // Downsample to a maximum number of points\n    decimation: {\n      algorithm: 'lttb',\n      samples: 150,\n      threshold: 150,\n      enabled: true,\n    },\n  },\n};\n\n// A chart showing historic prices for a native or token asset\nconst AssetChart = ({\n  chainId,\n  address,\n  currentPrice,\n  currency,\n}: {\n  chainId: `0x${string}`;\n  address: string;\n  currentPrice?: number;\n  currency: string;\n}) => {\n  const t = useI18nContext();\n  const theme = useTheme();\n\n  const [timeRange, setTimeRange] = useState<TimeRange>('1D');\n\n  const chartRef = useRef<Chart<'line', Point[]>>();\n  const priceRef = useRef<{\n    setPrice: (_: { price?: number; date?: number }) => void;\n  }>();\n\n  const {\n    loading,\n    data: { prices, edges },\n  } = useHistoricalPrices({\n    chainId,\n    address,\n    currency,\n    timeRange,\n  });\n\n  const { xMin, xMax, yMin, yMax } = edges ?? {};\n  const options = {\n    ...initialChartOptions,\n    borderColor: theme === 'dark' ? brandColor.blue400 : brandColor.blue500,\n    scales: {\n      x: { min: xMin?.x, max: xMax?.x, display: false, type: 'linear' },\n      y: { min: yMin?.y, max: yMax?.y, display: false },\n    },\n  } as const;\n\n  if (!currentPrice || (!loading && !prices)) {\n    return null;\n  }\n\n  return (\n    <Box borderRadius={BorderRadius.LG}>\n      <AssetPrice\n        ref={priceRef}\n        loading={loading}\n        currency={currency}\n        price={currentPrice}\n        date={Date.now()}\n        comparePrice={prices?.[0]?.y}\n      />\n      <Box\n        data-testid=\"asset-price-chart\"\n        marginTop={4}\n        borderRadius={BorderRadius.LG}\n        backgroundColor={\n          loading && !prices\n            ? BackgroundColor.backgroundAlternative\n            : BackgroundColor.transparent\n        }\n      >\n        <Box style={{ opacity: loading && prices ? loadingOpacity : 1 }}>\n          <ChartTooltip point={yMax} {...edges} currency={currency} />\n          <Box\n            style={{ aspectRatio: `${options.aspectRatio}` }}\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n            justifyContent={\n              currentPrice ? JustifyContent.flexEnd : JustifyContent.flexStart\n            }\n          >\n            <Line\n              ref={chartRef}\n              data={{ datasets: [{ data: prices }] }}\n              options={options}\n              updateMode=\"none\"\n              // Update the price display on chart hover\n              onMouseMove={(event) => {\n                const data = chartRef?.current?.data?.datasets?.[0]?.data;\n                if (data) {\n                  const target = event.target as HTMLElement;\n                  const index = Math.max(\n                    0,\n                    Math.min(\n                      data.length - 1,\n                      Math.round(\n                        (event.nativeEvent.offsetX / target.clientWidth) *\n                          data.length,\n                      ),\n                    ),\n                  );\n                  const point = data[index];\n                  if (point) {\n                    priceRef?.current?.setPrice({\n                      price: point.y,\n                      date: point.x,\n                    });\n                  }\n                }\n              }}\n              // Revert to current price when not hovering\n              onMouseOut={() => {\n                priceRef?.current?.setPrice({\n                  price: currentPrice,\n                  date: Date.now(),\n                });\n              }}\n            />\n          </Box>\n          <ChartTooltip point={yMin} {...edges} currency={currency} />\n        </Box>\n\n        <Box\n          style={prices ? undefined : { visibility: `hidden` }}\n          display={Display.Flex}\n          justifyContent={JustifyContent.spaceBetween}\n          marginTop={4}\n          marginLeft={4}\n          marginRight={4}\n        >\n          {((buttons: [string, TimeRange][]) =>\n            buttons.map(([label, range]) => (\n              <ButtonBase\n                key={range}\n                className={classnames('time-range-button', {\n                  'time-range-button__selected': range === timeRange,\n                })}\n                onClick={() => setTimeRange(range)}\n                variant={TextVariant.bodySmMedium}\n                size={ButtonBaseSize.Sm}\n                backgroundColor={BackgroundColor.transparent}\n                color={TextColor.textAlternative}\n              >\n                {label}\n              </ButtonBase>\n            )))([\n            [t('oneDayAbbreviation'), '1D'],\n            [t('oneWeekAbbreviation'), '7D'],\n            [t('oneMonthAbbreviation'), '1M'],\n            [t('threeMonthsAbbreviation'), '3M'],\n            [t('oneYearAbbreviation'), '1Y'],\n            [t('all'), '1000Y'],\n          ])}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AssetChart;\n","import React from 'react';\n// @ts-expect-error suppress CommonJS vs ECMAScript error\nimport { Point } from 'chart.js';\nimport {\n  Box,\n  Text,\n  TextDirection,\n} from '../../../../components/component-library';\nimport { formatCurrency } from '../../../../helpers/utils/confirm-tx.util';\nimport {\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { getPricePrecision } from '../../util';\n\n// A label indicating the minimum or maximum price on the chart\nconst ChartTooltip = ({\n  point,\n  xMin,\n  xMax,\n  currency,\n}: {\n  point?: Point;\n  xMin?: Point;\n  xMax?: Point;\n  currency: string;\n}) => {\n  const xAxisPercent =\n    point && xMin && xMax ? (point.x - xMin.x) / (xMax.x - xMin.x) : 0;\n\n  return (\n    <Box\n      style={{\n        ...(xAxisPercent < 0.5\n          ? { paddingRight: `${100 - 2 * 100 * xAxisPercent}%` }\n          : { paddingLeft: `${100 - 2 * (100 - 100 * xAxisPercent)}%` }),\n        direction:\n          xAxisPercent < 0.5\n            ? TextDirection.LeftToRight\n            : TextDirection.RightToLeft,\n      }}\n    >\n      <Text\n        variant={TextVariant.bodySmMedium}\n        color={TextColor.textAlternative}\n        textAlign={TextAlign.Center}\n      >\n        {point?.y === undefined\n          ? '\\u00A0'\n          : formatCurrency(\n              `${point?.y}`,\n              currency,\n              getPricePrecision(point?.y),\n            )}\n      </Text>\n    </Box>\n  );\n};\n\nexport default ChartTooltip;\n","// @ts-expect-error suppress CommonJS vs ECMAScript error\nimport { Chart, Point, ChartEvent } from 'chart.js';\n\ntype CrosshairChart = Chart & { crosshairX?: number };\n\n/** A Chart.js plugin that draws a vertical crosshair on hover */\nexport const CrosshairPlugin = {\n  id: 'crosshair',\n  afterEvent(chart: CrosshairChart, { event }: { event: ChartEvent }) {\n    chart.crosshairX =\n      event.type === 'mouseout' ? undefined : event.x ?? undefined;\n    chart.draw();\n  },\n  afterDraw(chart: CrosshairChart) {\n    if (chart.crosshairX !== undefined) {\n      const data = chart.data.datasets[0].data as Point[];\n      const index = Math.max(\n        0,\n        Math.min(\n          data.length - 1,\n          Math.round((chart.crosshairX / chart.width) * data.length),\n        ),\n      );\n\n      const point = data[index];\n      if (point) {\n        const { x: xAxis, y: yAxis } = chart.scales;\n        const x = xAxis.getPixelForValue(point.x);\n        const y = yAxis.getPixelForValue(point.y);\n\n        chart.ctx.lineWidth = 1;\n        chart.ctx.strokeStyle = '#BBC0C5';\n        chart.ctx.beginPath();\n        chart.ctx.moveTo(x, 0);\n        chart.ctx.lineTo(x, chart.height);\n        chart.ctx.stroke();\n\n        chart.ctx.beginPath();\n        chart.ctx.arc(x, y, 3, 0, 2 * Math.PI);\n        chart.ctx.fillStyle = chart.options.borderColor as string;\n        chart.ctx.fill();\n      }\n    }\n  },\n};\n","import React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAccountLink } from '@metamask/etherscan-link';\nimport {\n  getCurrentChainId,\n  getCurrentCurrency,\n  getNativeCurrencyImage,\n  getRpcPrefsForCurrentProvider,\n  getSelectedAccountCachedBalance,\n  getSelectedInternalAccount,\n  getShouldShowFiat,\n} from '../../../selectors';\nimport { useCurrencyDisplay } from '../../../hooks/useCurrencyDisplay';\nimport {\n  getNativeCurrency,\n  getProviderConfig,\n} from '../../../ducks/metamask/metamask';\nimport { AssetType } from '../../../../shared/constants/transaction';\nimport { useIsOriginalNativeTokenSymbol } from '../../../hooks/useIsOriginalNativeTokenSymbol';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport { getURLHostName } from '../../../helpers/utils/util';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport { hexToDecimal } from '../../../../shared/modules/conversion.utils';\nimport AssetOptions from './asset-options';\nimport AssetPage from './asset-page';\n\nconst NativeAsset = () => {\n  const nativeCurrency = useSelector(getNativeCurrency);\n  const balance = useSelector(getSelectedAccountCachedBalance);\n  const image = useSelector(getNativeCurrencyImage);\n  const showFiat = useSelector(getShouldShowFiat);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const chainId = useSelector(getCurrentChainId);\n  const { ticker, type } = useSelector(getProviderConfig) ?? {};\n  const { address } = useSelector(getSelectedInternalAccount);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider);\n\n  const accountLink = getAccountLink(address, chainId, rpcPrefs);\n  const trackEvent = useContext(MetaMetricsContext);\n  const isOriginalNativeSymbol = useIsOriginalNativeTokenSymbol(\n    chainId,\n    ticker,\n    type,\n  );\n\n  const [, { value: balanceDisplay }] = useCurrencyDisplay(balance, {\n    currency: nativeCurrency,\n  });\n  const [fiatDisplay] = useCurrencyDisplay(balance, {\n    currency: currentCurrency,\n  });\n\n  return (\n    <AssetPage\n      asset={{\n        chainId,\n        type: AssetType.native,\n        symbol: nativeCurrency,\n        image,\n        balance: {\n          value: hexToDecimal(balance),\n          display: balanceDisplay,\n          fiat: showFiat && isOriginalNativeSymbol ? fiatDisplay : undefined,\n        },\n        isOriginalNativeSymbol: isOriginalNativeSymbol === true,\n      }}\n      optionsButton={\n        <AssetOptions\n          isNativeAsset={true}\n          onClickBlockExplorer={() => {\n            trackEvent({\n              event: 'Clicked Block Explorer Link',\n              category: MetaMetricsEventCategory.Navigation,\n              properties: {\n                link_type: 'Account Tracker',\n                action: 'Asset Options',\n                block_explorer_domain: getURLHostName(accountLink),\n              },\n            });\n            global.platform.openTab({\n              url: accountLink,\n            });\n          }}\n        />\n      }\n    />\n  );\n};\n\nexport default NativeAsset;\n","import React, { useContext } from 'react';\nimport { Token } from '@metamask/assets-controllers';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTokenTrackerLink } from '@metamask/etherscan-link';\nimport { useHistory } from 'react-router-dom';\nimport {\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n  getSelectedInternalAccount,\n  getTokenList,\n} from '../../../selectors';\nimport { isEqualCaseInsensitive } from '../../../../shared/modules/string-utils';\nimport { useTokenTracker } from '../../../hooks/useTokenTracker';\nimport { AssetType } from '../../../../shared/constants/transaction';\nimport { useTokenFiatAmount } from '../../../hooks/useTokenFiatAmount';\nimport {\n  getURLHostName,\n  roundToDecimalPlacesRemovingExtraZeroes,\n} from '../../../helpers/utils/util';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport { showModal } from '../../../store/actions';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport AssetOptions from './asset-options';\nimport AssetPage from './asset-page';\n\nconst TokenAsset = ({ token }: { token: Token }) => {\n  const { address, symbol, isERC721 } = token;\n\n  const tokenList = useSelector(getTokenList);\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider);\n  const { address: walletAddress } = useSelector(getSelectedInternalAccount);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const { name, iconUrl, aggregators } =\n    Object.values(tokenList).find(\n      (t) =>\n        isEqualCaseInsensitive(t.symbol, symbol) &&\n        isEqualCaseInsensitive(t.address, address),\n    ) ?? {};\n\n  const {\n    tokensWithBalances,\n  }: { tokensWithBalances: { string: string; balance: string }[] } =\n    useTokenTracker({ tokens: [token], address: undefined });\n\n  const balance = tokensWithBalances?.[0];\n  const fiat = useTokenFiatAmount(address, balance?.string, symbol, {}, false);\n\n  const tokenTrackerLink = getTokenTrackerLink(\n    token.address,\n    chainId,\n    '',\n    walletAddress,\n    rpcPrefs,\n  );\n\n  return (\n    <AssetPage\n      asset={{\n        chainId,\n        type: AssetType.token,\n        address,\n        symbol,\n        name,\n        decimals: token.decimals,\n        image: iconUrl,\n        aggregators,\n        balance: {\n          value: balance?.balance,\n          display: `${roundToDecimalPlacesRemovingExtraZeroes(\n            balance?.string,\n            5,\n          )}`,\n          fiat,\n        },\n        isERC721,\n      }}\n      optionsButton={\n        <AssetOptions\n          isNativeAsset={false}\n          onRemove={() =>\n            dispatch(\n              showModal({ name: 'HIDE_TOKEN_CONFIRMATION', token, history }),\n            )\n          }\n          onClickBlockExplorer={() => {\n            trackEvent({\n              event: 'Clicked Block Explorer Link',\n              category: MetaMetricsEventCategory.Navigation,\n              properties: {\n                link_type: 'Token Tracker',\n                action: 'Token Options',\n                block_explorer_domain: getURLHostName(tokenTrackerLink),\n              },\n            });\n            global.platform.openTab({ url: tokenTrackerLink });\n          }}\n          tokenSymbol={token.symbol}\n        />\n      }\n    />\n  );\n};\n\nexport default TokenAsset;\n","import React, { useContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport {\n  SEND_ROUTE,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  BUILD_QUOTE_ROUTE,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../../helpers/constants/routes';\nimport { startNewDraftTransaction } from '../../../ducks/send';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { isHardwareKeyring } from '../../../helpers/utils/hardware';\nimport { setSwapsFromToken } from '../../../ducks/swaps/swaps';\nimport useRamps from '../../../hooks/ramps/useRamps/useRamps';\n///: END:ONLY_INCLUDE_IF\nimport {\n  getIsSwapsChain,\n  getCurrentChainId,\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  getIsBridgeChain,\n  getCurrentKeyring,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../../selectors';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport useBridging from '../../../hooks/bridge/useBridging';\n///: END:ONLY_INCLUDE_IF\n\nimport { INVALID_ASSET_TYPE } from '../../../helpers/constants/error-keys';\nimport { showModal } from '../../../store/actions';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n  MetaMetricsSwapsEventSource,\n} from '../../../../shared/constants/metametrics';\nimport { AssetType } from '../../../../shared/constants/transaction';\nimport {\n  Display,\n  IconColor,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\nimport IconButton from '../../../components/ui/icon-button/icon-button';\nimport { Box, Icon, IconName } from '../../../components/component-library';\n///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\nimport { getIsNativeTokenBuyable } from '../../../ducks/ramps';\n///: END:ONLY_INCLUDE_IF\nimport { Asset } from './asset-page';\n\nconst TokenButtons = ({\n  token,\n}: {\n  token: Asset & { type: AssetType.token };\n}) => {\n  const dispatch = useDispatch();\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n  const history = useHistory();\n\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  const keyring = useSelector(getCurrentKeyring);\n  const usingHardwareWallet = isHardwareKeyring(keyring.type);\n  ///: END:ONLY_INCLUDE_IF\n\n  const chainId = useSelector(getCurrentChainId);\n  const isSwapsChain = useSelector(getIsSwapsChain);\n  ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n  const isBridgeChain = useSelector(getIsBridgeChain);\n  const isBuyableChain = useSelector(getIsNativeTokenBuyable);\n  const { openBuyCryptoInPdapp } = useRamps();\n  const { openBridgeExperience } = useBridging();\n  ///: END:ONLY_INCLUDE_IF\n\n\n  useEffect(() => {\n    if (token.isERC721) {\n      dispatch(\n        showModal({\n          name: 'CONVERT_TOKEN_TO_NFT',\n          tokenAddress: token.address,\n        }),\n      );\n    }\n  }, [token.isERC721, token.address, dispatch]);\n\n  return (\n    <Box display={Display.Flex} justifyContent={JustifyContent.spaceEvenly}>\n      {\n        ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n        <IconButton\n          className=\"token-overview__button\"\n          Icon={\n            <Icon name={IconName.PlusMinus} color={IconColor.primaryInverse} />\n          }\n          label={t('buyAndSell')}\n          data-testid=\"token-overview-buy\"\n          onClick={() => {\n            openBuyCryptoInPdapp();\n            trackEvent({\n              event: MetaMetricsEventName.NavBuyButtonClicked,\n              category: MetaMetricsEventCategory.Navigation,\n              properties: {\n                location: 'Token Overview',\n                text: 'Buy',\n                chain_id: chainId,\n                token_symbol: token.symbol,\n              },\n            });\n          }}\n          disabled={token.isERC721 || !isBuyableChain}\n          tooltipRender={null}\n        />\n        ///: END:ONLY_INCLUDE_IF\n      }\n\n      {\n      }\n\n      <IconButton\n        className=\"token-overview__button\"\n        onClick={async () => {\n          trackEvent(\n            {\n              event: MetaMetricsEventName.NavSendButtonClicked,\n              category: MetaMetricsEventCategory.Navigation,\n              properties: {\n                token_symbol: token.symbol,\n                location: MetaMetricsSwapsEventSource.TokenView,\n                text: 'Send',\n                chain_id: chainId,\n              },\n            },\n            { excludeMetaMetricsId: false },\n          );\n          try {\n            await dispatch(\n              startNewDraftTransaction({\n                type: AssetType.token,\n                details: token,\n              }),\n            );\n            history.push(SEND_ROUTE);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          } catch (err: any) {\n            if (!err.message.includes(INVALID_ASSET_TYPE)) {\n              throw err;\n            }\n          }\n        }}\n        Icon={\n          <Icon\n            name={IconName.Arrow2UpRight}\n            color={IconColor.primaryInverse}\n          />\n        }\n        label={t('send')}\n        data-testid=\"eth-overview-send\"\n        disabled={token.isERC721}\n        tooltipRender={null}\n      />\n      {isSwapsChain && (\n        <IconButton\n          className=\"token-overview__button\"\n          Icon={\n            <Icon\n              name={IconName.SwapHorizontal}\n              color={IconColor.primaryInverse}\n            />\n          }\n          onClick={() => {\n\n            ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n            trackEvent({\n              event: MetaMetricsEventName.NavSwapButtonClicked,\n              category: MetaMetricsEventCategory.Swaps,\n              properties: {\n                token_symbol: token.symbol,\n                location: MetaMetricsSwapsEventSource.TokenView,\n                text: 'Swap',\n                chain_id: chainId,\n              },\n            });\n            dispatch(\n              setSwapsFromToken({\n                ...token,\n                address: token.address.toLowerCase(),\n                iconUrl: token.image,\n                balance: token.balance.value,\n                string: token.balance.display,\n              }),\n            );\n            if (usingHardwareWallet) {\n              global.platform.openExtensionInBrowser?.(\n                BUILD_QUOTE_ROUTE,\n                undefined,\n                false,\n              );\n            } else {\n              history.push(BUILD_QUOTE_ROUTE);\n            }\n            ///: END:ONLY_INCLUDE_IF\n          }}\n          label={t('swap')}\n          tooltipRender={null}\n        />\n      )}\n\n      {\n        ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n        isBridgeChain && (\n          <IconButton\n            className=\"token-overview__button\"\n            data-testid=\"token-overview-bridge\"\n            Icon={\n              <Icon name={IconName.Bridge} color={IconColor.primaryInverse} />\n            }\n            label={t('bridge')}\n            onClick={() => {\n              openBridgeExperience(MetaMetricsSwapsEventSource.TokenView, {\n                ...token,\n                iconUrl: token.image,\n                balance: token.balance.value,\n                string: token.balance.display,\n                name: token.name ?? '',\n              });\n            }}\n            tooltipRender={null}\n          />\n        )\n        ///: END:ONLY_INCLUDE_IF\n      }\n    </Box>\n  );\n};\n\nexport default TokenButtons;\n","export { default } from './asset';\n","import { useEffect, useState } from 'react';\n// @ts-expect-error suppress CommonJS vs ECMAScript error\nimport { Point } from 'chart.js';\nimport { useSelector } from 'react-redux';\nimport fetchWithCache from '../../../shared/lib/fetch-with-cache';\nimport { MINUTE } from '../../../shared/constants/time';\nimport { getShouldShowFiat } from '../../selectors';\nimport { chainSupportsPricing } from './util';\n\n/** Time range units supported by the price API */\nexport type TimeRange = `${number}D` | `${number}M` | `${number}Y`;\nexport type HistoricalPrices = {\n  prices?: Point[];\n  edges?: { xMin: Point; xMax: Point; yMin: Point; yMax: Point };\n};\n\nexport const useHistoricalPrices = ({\n  chainId,\n  address,\n  currency,\n  timeRange,\n}: {\n  chainId: `0x${string}`;\n  address: string;\n  currency: string;\n  timeRange: TimeRange;\n}) => {\n  const showFiat = useSelector(getShouldShowFiat);\n  const chainSupported = showFiat && chainSupportsPricing(chainId);\n\n  const [loading, setLoading] = useState<boolean>(chainSupported);\n  const [data, setData] = useState<HistoricalPrices>({});\n\n  if (chainSupported) {\n    useEffect(() => {\n      setLoading(true);\n      fetchWithCache({\n        url: `https://price.api.cx.metamask.io/v1/chains/${chainId}/historical-prices/${address}?vsCurrency=${currency}&timePeriod=${timeRange}`,\n        cacheOptions: { cacheRefreshTime: 5 * MINUTE },\n        functionName: 'GetAssetHistoricalPrices',\n        fetchOptions: { headers: { 'X-Client-Id': 'extension' } },\n      })\n        .catch(() => ({}))\n        .then((resp?: { prices?: number[][] }) => {\n          const prices = resp?.prices?.map((p) => ({ x: p?.[0], y: p?.[1] }));\n\n          let edges;\n          if (prices && prices.length > 0) {\n            let [xMin, xMax, yMin, yMax]: Point[] = [];\n            for (const p of prices) {\n              xMin = !xMin || p.x < xMin.x ? p : xMin;\n              xMax = !xMax || p.x > xMax.x ? p : xMax;\n              yMin = !yMin || p.y < yMin.y ? p : yMin;\n              yMax = !yMax || p.y > yMax.y ? p : yMax;\n            }\n            edges = { xMin, xMax, yMin, yMax };\n          }\n\n          setData({ prices, edges });\n          setLoading(false);\n        });\n    }, [chainId, address, currency, timeRange]);\n  }\n  return { loading, data };\n};\n","import { SUPPORTED_CHAIN_IDS } from '@metamask/assets-controllers';\n\n/** Formats a datetime in a short human readable format like 'Feb 8, 12:11 PM' */\nexport const getShortDateFormatter = () =>\n  Intl.DateTimeFormat(navigator.language, {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  });\n\n/** Formats a datetime in a short human readable format like 'Feb 8, 2030' */\nexport const getShortDateFormatterV2 = () =>\n  Intl.DateTimeFormat(navigator.language, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n\n/**\n * Formats a potentially large number to the nearest unit.\n * e.g. 1T for trillions, 2.3B for billions, 4.56M for millions, 7,890 for thousands, etc.\n *\n * @param t - An I18nContext translator.\n * @param number - The number to format.\n * @returns A localized string of the formatted number + unit.\n */\n// eslint-disable-next-line\nexport const localizeLargeNumber = (t: any, number: number) => {\n  if (number >= 1000000000000) {\n    return `${(number / 1000000000000).toFixed(2)}${t('trillionAbbreviation')}`;\n  } else if (number >= 1000000000) {\n    return `${(number / 1000000000).toFixed(2)}${t('billionAbbreviation')}`;\n  } else if (number >= 1000000) {\n    return `${(number / 1000000).toFixed(2)}${t('millionAbbreviation')}`;\n  }\n  return number.toFixed(2);\n};\n\n/**\n * Returns the number of decimals the fiat price should be formatted to.\n * This tells `currency-formatter` to render prices < 1 cent like $0.00001234\n *\n * @param price - The fiat price to determine formatting precision.\n */\nexport const getPricePrecision = (price: number) => {\n  if (price === 0) {\n    return 1;\n  }\n  let precision = 2;\n  for (let p = Math.abs(price); p < 1; precision++) {\n    p *= 10;\n  }\n  return precision;\n};\n\n/**\n * Returns true if the price api supports the chain id.\n *\n * @param chainId - The hexadecimal chain id.\n */\nexport const chainSupportsPricing = (chainId: `0x${string}`) =>\n  (SUPPORTED_CHAIN_IDS as readonly string[]).includes(chainId);\n\n/** The opacity components should set during transition */\nexport const loadingOpacity = 0.2;\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, useHistory } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { I18nContext } from '../../contexts/i18n';\n\nimport { clearSwapsState } from '../../ducks/swaps/swaps';\nimport {\n  DEFAULT_ROUTE,\n  SWAPS_MAINTENANCE_ROUTE,\n  PREPARE_SWAP_ROUTE,\n  CROSS_CHAIN_SWAP_ROUTE,\n} from '../../helpers/constants/routes';\n\nimport { resetBackgroundSwapsState } from '../../store/actions';\n\nimport FeatureToggledRoute from '../../helpers/higher-order-components/feature-toggled-route';\nimport {\n  Box,\n  Icon,\n  IconName,\n  IconSize,\n} from '../../components/component-library';\nimport {\n  JustifyContent,\n  IconColor,\n  Display,\n  BlockSize,\n} from '../../helpers/constants/design-system';\nimport { getIsBridgeEnabled } from '../../selectors';\nimport { PrepareBridgePage } from './prepare/prepare-bridge-page';\n\nconst CrossChainSwap = () => {\n  const t = useContext(I18nContext);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isBridgeEnabled = useSelector(getIsBridgeEnabled);\n\n  const redirectToDefaultRoute = async () => {\n    history.push({\n      pathname: DEFAULT_ROUTE,\n      // @ts-expect-error - property 'state' does not exist on type PartialPath.\n      state: { stayOnHomePage: true },\n    });\n    dispatch(clearSwapsState());\n    await dispatch(resetBackgroundSwapsState());\n  };\n\n  return (\n    <div className=\"bridge\">\n      <div className=\"bridge__container\">\n        <div className=\"bridge__header\">\n          <Box\n            display={Display.Flex}\n            justifyContent={JustifyContent.center}\n            marginLeft={4}\n            width={BlockSize.OneTwelfth}\n            tabIndex={0}\n            onKeyUp={(e: React.KeyboardEvent<HTMLInputElement>) => {\n              if (e.key === 'Enter') {\n                redirectToDefaultRoute();\n              }\n            }}\n          >\n            <Icon\n              name={IconName.Arrow2Left}\n              size={IconSize.Lg}\n              color={IconColor.iconAlternative}\n              onClick={redirectToDefaultRoute}\n              style={{ cursor: 'pointer' }}\n              title={t('cancel')}\n            />\n          </Box>\n\n          <div className=\"bridge__title\">{t('bridge')}</div>\n        </div>\n        <div\n          className={classnames(\n            'bridge__content',\n            'bridge__content--redesign-enabled',\n          )}\n        >\n          <Switch>\n            <FeatureToggledRoute\n              redirectRoute={SWAPS_MAINTENANCE_ROUTE}\n              flag={isBridgeEnabled}\n              path={CROSS_CHAIN_SWAP_ROUTE + PREPARE_SWAP_ROUTE}\n              render={() => {\n                return <PrepareBridgePage />;\n              }}\n            />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CrossChainSwap;\n","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { isEqual, shuffle } from 'lodash';\nimport PrepareSwapPage from '../../swaps/prepare-swap-page/prepare-swap-page';\nimport { getSelectedAccount, getTokenList } from '../../../selectors';\n\nexport const PrepareBridgePage = () => {\n  const selectedAccount = useSelector(getSelectedAccount, shallowEqual);\n  const { balance: ethBalance, address: selectedAccountAddress } =\n    selectedAccount;\n\n  const tokenList = useSelector(getTokenList, isEqual);\n  const shuffledTokensList = shuffle(Object.values(tokenList));\n\n  return (\n    <div>\n      <PrepareSwapPage\n        ethBalance={ethBalance}\n        selectedAccountAddress={selectedAccountAddress}\n        shuffledTokensList={shuffledTokensList}\n      />\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ethErrors, serializeError } from 'eth-rpc-errors';\nimport { getTokenTrackerLink } from '@metamask/etherscan-link';\nimport classnames from 'classnames';\nimport { PageContainerFooter } from '../../components/ui/page-container';\nimport { I18nContext } from '../../contexts/i18n';\nimport { MetaMetricsContext } from '../../contexts/metametrics';\nimport { getMostRecentOverviewPage } from '../../ducks/history/history';\nimport {\n  resolvePendingApproval,\n  rejectPendingApproval,\n} from '../../store/actions';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n  MetaMetricsTokenEventSource,\n} from '../../../shared/constants/metametrics';\nimport { AssetType } from '../../../shared/constants/transaction';\nimport {\n  BUTTON_SIZES,\n  ButtonIcon,\n  ButtonIconSize,\n  ButtonLink,\n  IconName,\n  Box,\n  Text,\n} from '../../components/component-library';\nimport {\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n  getSuggestedNfts,\n  getIpfsGateway,\n  getNetworkIdentifier,\n  getSelectedInternalAccount,\n  getSelectedAccountCachedBalance,\n  getAddressBookEntryOrAccountName,\n} from '../../selectors';\nimport NftDefaultImage from '../../components/app/assets/nfts/nft-default-image/nft-default-image';\nimport { getAssetImageURL, shortenAddress } from '../../helpers/utils/util';\nimport {\n  AlignItems,\n  BorderRadius,\n  Display,\n  FlexDirection,\n  FlexWrap,\n  IconColor,\n  JustifyContent,\n  TextAlign,\n  TextVariant,\n  BlockSize,\n  TextColor,\n} from '../../helpers/constants/design-system';\nimport NetworkAccountBalanceHeader from '../../components/app/network-account-balance-header/network-account-balance-header';\nimport { NETWORK_TO_NAME_MAP } from '../../../shared/constants/network';\nimport SiteOrigin from '../../components/ui/site-origin/site-origin';\nimport { PRIMARY } from '../../helpers/constants/common';\nimport { useUserPreferencedCurrency } from '../../hooks/useUserPreferencedCurrency';\nimport { useCurrencyDisplay } from '../../hooks/useCurrencyDisplay';\nimport { useOriginMetadata } from '../../hooks/useOriginMetadata';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\n\nconst ConfirmAddSuggestedNFT = () => {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const mostRecentOverviewPage = useSelector(getMostRecentOverviewPage);\n  const suggestedNftsNotSorted = useSelector(getSuggestedNfts);\n  const suggestedNfts = suggestedNftsNotSorted.sort(\n    (a, b) => a.requestData.asset.tokenId - b.requestData.asset.tokenId,\n  );\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider);\n  const chainId = useSelector(getCurrentChainId);\n  const ipfsGateway = useSelector(getIpfsGateway);\n  const trackEvent = useContext(MetaMetricsContext);\n  const networkIdentifier = useSelector(getNetworkIdentifier);\n  const { address: selectedAddress } = useSelector(getSelectedInternalAccount);\n  const selectedAccountBalance = useSelector(getSelectedAccountCachedBalance);\n  const accountName = useSelector((state) =>\n    getAddressBookEntryOrAccountName(state, selectedAddress),\n  );\n  const [suggestedNftsWithImages, setSuggestedNftsWithImages] = useState([]);\n\n  const networkName = NETWORK_TO_NAME_MAP[chainId] || networkIdentifier;\n\n  const {\n    currency: primaryCurrency,\n    numberOfDecimals: primaryNumberOfDecimals,\n  } = useUserPreferencedCurrency(PRIMARY, { ethNumberOfDecimals: 4 });\n\n  const [primaryCurrencyValue] = useCurrencyDisplay(selectedAccountBalance, {\n    numberOfDecimals: primaryNumberOfDecimals,\n    currency: primaryCurrency,\n  });\n\n  const originMetadata = useOriginMetadata(suggestedNfts[0]?.origin) || {};\n\n  const handleAddNftsClick = useCallback(async () => {\n    await Promise.all(\n      suggestedNfts.map(async ({ requestData: { asset }, id }) => {\n        await dispatch(resolvePendingApproval(id, null));\n\n        trackEvent({\n          event: MetaMetricsEventName.NftAdded,\n          category: MetaMetricsEventCategory.Wallet,\n          sensitiveProperties: {\n            token_contract_address: asset.address,\n            token_symbol: asset.symbol,\n            token_id: asset.tokenId,\n            token_standard: asset.standard,\n            asset_type: AssetType.NFT,\n            source: MetaMetricsTokenEventSource.Dapp,\n          },\n        });\n      }),\n    );\n    history.push(mostRecentOverviewPage);\n  }, [dispatch, history, trackEvent, mostRecentOverviewPage, suggestedNfts]);\n\n  const handleCancelNftClick = useCallback(async () => {\n    await Promise.all(\n      suggestedNfts.map(async ({ id }) => {\n        return dispatch(\n          rejectPendingApproval(\n            id,\n            serializeError(ethErrors.provider.userRejectedRequest()),\n          ),\n        );\n      }),\n    );\n    history.push(mostRecentOverviewPage);\n  }, [dispatch, history, mostRecentOverviewPage, suggestedNfts]);\n\n  useEffect(() => {\n    const goBackIfNoSuggestedNftsOnFirstRender = () => {\n      if (!suggestedNfts.length) {\n        history.push(mostRecentOverviewPage);\n      }\n    };\n    goBackIfNoSuggestedNftsOnFirstRender();\n  }, [history, mostRecentOverviewPage, suggestedNfts]);\n\n  let origin;\n  let link;\n  if (suggestedNfts.length) {\n    try {\n      const url = new URL(suggestedNfts[0].origin);\n      origin = url.host;\n      link = url.href;\n    } catch {\n      origin = 'dapp';\n    }\n  }\n\n  useEffect(() => {\n    const addImageUrlToSuggestedNFTs = async () => {\n      const suggestedNftWithImages = await Promise.all(\n        suggestedNfts.map(async (item) => {\n          const imgUrl = await getAssetImageURL(\n            item.requestData.asset.image,\n            ipfsGateway,\n          );\n          return {\n            ...item,\n            requestData: {\n              ...item.requestData,\n              asset: {\n                ...item.requestData.asset,\n                assetImageUrl: imgUrl,\n              },\n            },\n          };\n        }),\n      );\n      setSuggestedNftsWithImages(suggestedNftWithImages);\n    };\n\n    addImageUrlToSuggestedNFTs();\n  }, []); // Empty dependency array to run only on mount\n\n  return (\n    <Box\n      height={BlockSize.Full}\n      width={BlockSize.Full}\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n    >\n      <Box paddingBottom={2} className=\"confirm-add-suggested-nft__header\">\n        <NetworkAccountBalanceHeader\n          accountName={accountName}\n          accountBalance={primaryCurrencyValue}\n          accountAddress={selectedAddress}\n          networkName={networkName}\n          chainId={chainId}\n        />\n        <Box\n          paddingTop={4}\n          paddingRight={4}\n          paddingLeft={4}\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n        >\n          <SiteOrigin\n            chip\n            siteOrigin={originMetadata.origin}\n            title={originMetadata.origin}\n            iconSrc={originMetadata.iconUrl}\n            iconName={originMetadata.hostname}\n          />\n        </Box>\n        <Text\n          variant={TextVariant.headingLg}\n          textAlign={TextAlign.Center}\n          margin={2}\n        >\n          {t('addSuggestedNFTs')}\n        </Text>\n        <Text variant={TextVariant.bodyMd} textAlign={TextAlign.Center}>\n          {t('wantsToAddThisAsset', [\n            origin === 'dapp' ? (\n              <Text key={origin} variant={TextVariant.bodyMd} fontWeight=\"bold\">\n                {origin}\n              </Text>\n            ) : (\n              <ButtonLink\n                key={origin}\n                size={BUTTON_SIZES.INHERIT}\n                href={link}\n                target=\"_blank\"\n              >\n                {origin}\n              </ButtonLink>\n            ),\n          ])}\n        </Text>\n      </Box>\n      <Box className=\"confirm-add-suggested-nft__content\">\n        <Box\n          className=\"confirm-add-suggested-nft__card\"\n          padding={2}\n          borderRadius={BorderRadius.MD}\n        >\n          <Box\n            className={classnames({\n              'confirm-add-suggested-nft__nft-list': suggestedNfts.length > 1,\n            })}\n          >\n            {suggestedNfts.map(\n              ({\n                id,\n                requestData: {\n                  asset: { address, tokenId, symbol, name },\n                },\n              }) => {\n                const found = suggestedNftsWithImages.find(\n                  (elm) =>\n                    elm.requestData.asset.tokenId === tokenId &&\n                    isEqualCaseInsensitive(\n                      elm.requestData.asset.address,\n                      address,\n                    ),\n                );\n\n                const nftImageURL = found\n                  ? found.requestData.asset.assetImageUrl\n                  : '';\n\n                const blockExplorerLink = getTokenTrackerLink(\n                  address,\n                  chainId,\n                  null,\n                  null,\n                  {\n                    blockExplorerUrl: rpcPrefs?.blockExplorerUrl ?? null,\n                  },\n                );\n\n                if (suggestedNfts.length === 1) {\n                  return (\n                    <Box\n                      className=\"confirm-add-suggested-nft__nft-single\"\n                      key={`confirm-add-suggested-nft__nft-single-${id}`}\n                      borderRadius={BorderRadius.MD}\n                      margin={0}\n                      padding={0}\n                    >\n                      {nftImageURL ? (\n                        <img\n                          className=\"confirm-add-suggested-nft__nft-single-image\"\n                          src={nftImageURL}\n                          alt={name || tokenId}\n                        />\n                      ) : (\n                        <NftDefaultImage\n                          className=\"confirm-add-suggested-nft__nft-single-image-default\"\n                          tokenId={tokenId}\n                          name={name || symbol || shortenAddress(address)}\n                        />\n                      )}\n                      <Box\n                        padding={1}\n                        display={Display.Flex}\n                        flexDirection={FlexDirection.Row}\n                        justifyContent={JustifyContent.spaceBetween}\n                        alignItems={AlignItems.Center}\n                      >\n                        <Box\n                          display={Display.Flex}\n                          flexDirection={FlexDirection.Column}\n                          justifyContent={JustifyContent.spaceEvenly}\n                          flexWrap={FlexWrap.NoWrap}\n                          width={BlockSize.Full}\n                          className=\"confirm-add-suggested-nft__nft-single-sub-details\"\n                        >\n                          {rpcPrefs.blockExplorerUrl ? (\n                            <ButtonLink\n                              className=\"confirm-add-suggested-nft__nft-name\"\n                              href={blockExplorerLink}\n                              title={address}\n                              target=\"_blank\"\n                              size={BUTTON_SIZES.INHERIT}\n                            >\n                              {name || symbol || shortenAddress(address)}\n                            </ButtonLink>\n                          ) : (\n                            <Text\n                              variant={TextVariant.bodyMd}\n                              className=\"confirm-add-suggested-nft__nft-name\"\n                              title={address}\n                            >\n                              {name || symbol || shortenAddress(address)}\n                            </Text>\n                          )}\n                          <Text\n                            variant={TextVariant.bodyMd}\n                            color={TextColor.textAlternative}\n                            className=\"confirm-add-suggested-nft__nft-tokenId\"\n                          >\n                            #{tokenId}\n                          </Text>\n                        </Box>\n                      </Box>\n                    </Box>\n                  );\n                }\n                return (\n                  <Box\n                    display={Display.Flex}\n                    flexDirection={FlexDirection.Row}\n                    flexWrap={FlexWrap.NoWrap}\n                    alignItems={AlignItems.Center}\n                    justifyContent={JustifyContent.spaceBetween}\n                    marginBottom={4}\n                    className=\"confirm-add-suggested-nft__nft-list-item\"\n                    key={`${address}-${tokenId}`}\n                  >\n                    <Box\n                      display={Display.Flex}\n                      flexDirection={FlexDirection.Row}\n                      flexWrap={FlexWrap.NoWrap}\n                      alignItems={AlignItems.Center}\n                      justifyContent={JustifyContent.spaceBetween}\n                    >\n                      {nftImageURL ? (\n                        <img\n                          className=\"confirm-add-suggested-nft__nft-image\"\n                          src={nftImageURL}\n                          alt={name || tokenId}\n                        />\n                      ) : (\n                        <NftDefaultImage className=\"confirm-add-suggested-nft__nft-image-default\" />\n                      )}\n                      <Box\n                        display={Display.Flex}\n                        flexDirection={FlexDirection.Column}\n                        justifyContent={JustifyContent.spaceEvenly}\n                        flexWrap={FlexWrap.NoWrap}\n                        width={BlockSize.Full}\n                        className=\"confirm-add-suggested-nft__nft-sub-details\"\n                      >\n                        {rpcPrefs.blockExplorerUrl ? (\n                          <ButtonLink\n                            className=\"confirm-add-suggested-nft__nft-name\"\n                            href={blockExplorerLink}\n                            title={address}\n                            target=\"_blank\"\n                            size={BUTTON_SIZES.INHERIT}\n                          >\n                            {name || symbol || shortenAddress(address)}\n                          </ButtonLink>\n                        ) : (\n                          <Text\n                            variant={TextVariant.bodySm}\n                            className=\"confirm-add-suggested-nft__nft-name\"\n                            title={address}\n                          >\n                            {name || symbol || shortenAddress(address)}\n                          </Text>\n                        )}\n                        <Text\n                          variant={TextVariant.bodySm}\n                          color={TextColor.textAlternative}\n                          className=\"confirm-add-suggested-nft__nft-tokenId\"\n                        >\n                          #{tokenId}\n                        </Text>\n                      </Box>\n                    </Box>\n                    <ButtonIcon\n                      className=\"confirm-add-suggested-nft__nft-remove\"\n                      data-testid={`confirm-add-suggested-nft__nft-remove-${id}`}\n                      iconName={IconName.Close}\n                      size={ButtonIconSize.Sm}\n                      color={IconColor.iconMuted}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        dispatch(\n                          rejectPendingApproval(\n                            id,\n                            serializeError(\n                              ethErrors.provider.userRejectedRequest(),\n                            ),\n                          ),\n                        );\n                      }}\n                    />\n                  </Box>\n                );\n              },\n            )}\n          </Box>\n        </Box>\n      </Box>\n      <PageContainerFooter\n        cancelText={t('cancel')}\n        submitText={suggestedNfts.length === 1 ? t('addNft') : t('addNfts')}\n        onCancel={handleCancelNftClick}\n        onSubmit={handleAddNftsClick}\n      />\n    </Box>\n  );\n};\n\nexport default ConfirmAddSuggestedNFT;\n","export { default } from './confirm-add-suggested-nft';\n","import React, { useCallback, useContext, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ethErrors, serializeError } from 'eth-rpc-errors';\nimport {\n  BannerAlert,\n  Button,\n  ButtonLinkSize,\n  ButtonVariant,\n} from '../../components/component-library';\nimport Identicon from '../../components/ui/identicon';\nimport TokenBalance from '../../components/ui/token-balance';\nimport { PageContainerFooter } from '../../components/ui/page-container';\nimport { I18nContext } from '../../contexts/i18n';\nimport { MetaMetricsContext } from '../../contexts/metametrics';\nimport { getMostRecentOverviewPage } from '../../ducks/history/history';\nimport { getTokens } from '../../ducks/metamask/metamask';\nimport ZENDESK_URLS from '../../helpers/constants/zendesk-url';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\nimport {\n  resolvePendingApproval,\n  rejectPendingApproval,\n} from '../../store/actions';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n  MetaMetricsTokenEventSource,\n} from '../../../shared/constants/metametrics';\nimport {\n  AssetType,\n  TokenStandard,\n} from '../../../shared/constants/transaction';\nimport { getSuggestedTokens } from '../../selectors';\nimport { Severity } from '../../helpers/constants/design-system';\n\nfunction getTokenName(name, symbol) {\n  return name === undefined ? symbol : `${name} (${symbol})`;\n}\n\n/**\n * @param {Array} suggestedTokens - an array of assets suggested to add to the user's wallet\n * via the RPC method `wallet_watchAsset`\n * @param {Array} tokens - the list of tokens currently tracked in state\n * @returns {boolean} Returns true when the list of suggestedTokens contains an entry with\n *          an address that matches an existing token.\n */\nfunction hasDuplicateAddress(suggestedTokens, tokens) {\n  const duplicate = suggestedTokens.find(({ requestData: { asset } }) => {\n    const dupe = tokens.find(({ address }) => {\n      return isEqualCaseInsensitive(address, asset?.address);\n    });\n    return Boolean(dupe);\n  });\n  return Boolean(duplicate);\n}\n\n/**\n * @param {Array} suggestedTokens - a list of assets suggested to add to the user's wallet\n * via RPC method `wallet_watchAsset`\n * @param {Array} tokens - the list of tokens currently tracked in state\n * @returns {boolean} Returns true when the list of suggestedTokens contains an entry with both\n *          1. a symbol that matches an existing token\n *          2. an address that does not match an existing token\n */\nfunction hasDuplicateSymbolAndDiffAddress(suggestedTokens, tokens) {\n  const duplicate = suggestedTokens.find(({ requestData: { asset } }) => {\n    const dupe = tokens.find((token) => {\n      return (\n        isEqualCaseInsensitive(token.symbol, asset?.symbol) &&\n        !isEqualCaseInsensitive(token.address, asset?.address)\n      );\n    });\n    return Boolean(dupe);\n  });\n  return Boolean(duplicate);\n}\n\nconst ConfirmAddSuggestedToken = () => {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const mostRecentOverviewPage = useSelector(getMostRecentOverviewPage);\n  const suggestedTokens = useSelector(getSuggestedTokens);\n  const tokens = useSelector(getTokens);\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const knownTokenBannerAlert = useMemo(() => {\n    return (\n      hasDuplicateAddress(suggestedTokens, tokens) && (\n        <BannerAlert severity={Severity.Warning} marginTop={4}>\n          {t('knownTokenWarning', [\n            <Button\n              variant={ButtonVariant.Link}\n              key=\"confirm-add-suggested-token-duplicate-warning\"\n              className=\"confirm-add-suggested-token__link\"\n              externalLink\n              size={ButtonLinkSize.Inherit}\n              href={ZENDESK_URLS.TOKEN_SAFETY_PRACTICES}\n            >\n              {t('learnScamRisk')}\n            </Button>,\n          ])}\n        </BannerAlert>\n      )\n    );\n  }, [suggestedTokens, tokens, t]);\n\n  const reusedTokenNameBannerAlert = useMemo(() => {\n    return (\n      hasDuplicateSymbolAndDiffAddress(suggestedTokens, tokens) && (\n        <BannerAlert\n          marginTop={4}\n          severity={Severity.Warning}\n          description={t('reusedTokenNameWarning')}\n        />\n      )\n    );\n  }, [suggestedTokens, tokens, t]);\n\n  const handleAddTokensClick = useCallback(async () => {\n    await Promise.all(\n      suggestedTokens.map(async ({ requestData: { asset }, id }) => {\n        await dispatch(resolvePendingApproval(id, null));\n\n        trackEvent({\n          event: MetaMetricsEventName.TokenAdded,\n          category: MetaMetricsEventCategory.Wallet,\n          sensitiveProperties: {\n            token_symbol: asset.symbol,\n            token_contract_address: asset.address,\n            token_decimal_precision: asset.decimals,\n            unlisted: asset.unlisted,\n            source: MetaMetricsTokenEventSource.Dapp,\n            token_standard: TokenStandard.ERC20,\n            asset_type: AssetType.token,\n          },\n        });\n      }),\n    );\n    history.push(mostRecentOverviewPage);\n  }, [dispatch, history, trackEvent, mostRecentOverviewPage, suggestedTokens]);\n\n  const handleCancelTokenClick = useCallback(async () => {\n    await Promise.all(\n      suggestedTokens.map(({ id }) =>\n        dispatch(\n          rejectPendingApproval(\n            id,\n            serializeError(ethErrors.provider.userRejectedRequest()),\n          ),\n        ),\n      ),\n    );\n    history.push(mostRecentOverviewPage);\n  }, [dispatch, history, mostRecentOverviewPage, suggestedTokens]);\n\n  const goBackIfNoSuggestedTokensOnFirstRender = () => {\n    if (!suggestedTokens.length) {\n      history.push(mostRecentOverviewPage);\n    }\n  };\n\n  useEffect(() => {\n    goBackIfNoSuggestedTokensOnFirstRender();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"page-container__header\">\n        <div className=\"page-container__title\">{t('addSuggestedTokens')}</div>\n        <div className=\"page-container__subtitle\">\n          {t('likeToImportTokens')}\n        </div>\n        {knownTokenBannerAlert}\n        {reusedTokenNameBannerAlert}\n      </div>\n      <div className=\"page-container__content\">\n        <div className=\"confirm-add-suggested-token\">\n          <div className=\"confirm-add-suggested-token__header\">\n            <div className=\"confirm-add-suggested-token__token\">\n              {t('token')}\n            </div>\n            <div className=\"confirm-add-suggested-token__balance\">\n              {t('balance')}\n            </div>\n          </div>\n          <div className=\"confirm-add-suggested-token__token-list\">\n            {suggestedTokens.map(({ requestData: { asset } }) => {\n              return (\n                <div\n                  className=\"confirm-add-suggested-token__token-list-item\"\n                  key={asset.address}\n                >\n                  <div className=\"confirm-add-suggested-token__token confirm-add-suggested-token__data\">\n                    <Identicon\n                      className=\"confirm-add-suggested-token__token-icon\"\n                      diameter={48}\n                      address={asset.address}\n                      image={asset.image}\n                    />\n                    <div className=\"confirm-add-suggested-token__name\">\n                      {getTokenName(asset.name, asset.symbol)}\n                    </div>\n                  </div>\n                  <div className=\"confirm-add-suggested-token__balance\">\n                    <TokenBalance token={asset} />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <PageContainerFooter\n        cancelText={t('cancel')}\n        submitText={t('addToken')}\n        onCancel={handleCancelTokenClick}\n        onSubmit={handleAddTokensClick}\n        disabled={suggestedTokens.length === 0}\n      />\n    </div>\n  );\n};\n\nexport default ConfirmAddSuggestedToken;\n","export { default } from './confirm-add-suggested-token';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport classnames from 'classnames';\nimport log from 'loglevel';\n\nimport AccountListItem from '../../components/app/account-list-item';\nimport Identicon from '../../components/ui/identicon';\nimport Tooltip from '../../components/ui/tooltip';\nimport { PageContainerFooter } from '../../components/ui/page-container';\n\nimport { MetaMetricsEventCategory } from '../../../shared/constants/metametrics';\nimport { SECOND } from '../../../shared/constants/time';\nimport { Numeric } from '../../../shared/modules/Numeric';\nimport { EtherDenomination } from '../../../shared/constants/common';\nimport { Icon, IconName } from '../../components/component-library';\nimport { IconColor } from '../../helpers/constants/design-system';\nimport { formatCurrency } from '../../helpers/utils/confirm-tx.util';\nimport { getValueFromWeiHex } from '../../../shared/modules/conversion.utils';\nimport { COPY_OPTIONS } from '../../../shared/constants/copy';\n\nexport default class ConfirmDecryptMessage extends Component {\n  static contextTypes = {\n    t: PropTypes.func.isRequired,\n    trackEvent: PropTypes.func.isRequired,\n  };\n\n  static propTypes = {\n    fromAccount: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      balance: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    clearConfirmTransaction: PropTypes.func.isRequired,\n    cancelDecryptMessage: PropTypes.func.isRequired,\n    decryptMessage: PropTypes.func.isRequired,\n    decryptMessageInline: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired,\n    mostRecentOverviewPage: PropTypes.string.isRequired,\n    requesterAddress: PropTypes.string,\n    txData: PropTypes.object,\n    subjectMetadata: PropTypes.object,\n    nativeCurrency: PropTypes.string.isRequired,\n    currentCurrency: PropTypes.string.isRequired,\n    conversionRate: PropTypes.number,\n  };\n\n  state = {\n    copyToClipboardPressed: false,\n    hasCopied: false,\n  };\n\n  copyMessage = () => {\n    copyToClipboard(this.state.rawMessage, COPY_OPTIONS);\n    this.context.trackEvent({\n      category: MetaMetricsEventCategory.Messages,\n      event: 'Copy',\n      properties: {\n        action: 'Decrypt Message Copy',\n        legacy_event: true,\n      },\n    });\n    this.setState({ hasCopied: true });\n    setTimeout(() => this.setState({ hasCopied: false }), SECOND * 3);\n  };\n\n  renderHeader = () => {\n    return (\n      <div className=\"request-decrypt-message__header\">\n        <div className=\"request-decrypt-message__header-background\" />\n\n        <div className=\"request-decrypt-message__header__text\">\n          {this.context.t('decryptRequest')}\n        </div>\n\n        <div className=\"request-decrypt-message__header__tip-container\">\n          <div className=\"request-decrypt-message__header__tip\" />\n        </div>\n      </div>\n    );\n  };\n\n  renderAccount = () => {\n    const { fromAccount } = this.props;\n    const { t } = this.context;\n\n    return (\n      <div className=\"request-decrypt-message__account\">\n        <div className=\"request-decrypt-message__account-text\">\n          {`${t('account')}:`}\n        </div>\n\n        <div className=\"request-decrypt-message__account-item\">\n          <AccountListItem account={fromAccount} />\n        </div>\n      </div>\n    );\n  };\n\n  renderBalance = () => {\n    const {\n      conversionRate,\n      nativeCurrency,\n      currentCurrency,\n      fromAccount: { balance },\n    } = this.props;\n    const { t } = this.context;\n\n    const nativeCurrencyBalance = conversionRate\n      ? formatCurrency(\n          getValueFromWeiHex({\n            value: balance,\n            fromCurrency: nativeCurrency,\n            toCurrency: currentCurrency,\n            conversionRate,\n            numberOfDecimals: 6,\n            toDenomination: EtherDenomination.ETH,\n          }),\n          currentCurrency,\n        )\n      : new Numeric(balance, 16, EtherDenomination.WEI)\n          .toDenomination(EtherDenomination.ETH)\n          .round(6)\n          .toBase(10)\n          .toString();\n\n    return (\n      <div className=\"request-decrypt-message__balance\">\n        <div className=\"request-decrypt-message__balance-text\">\n          {`${t('balance')}:`}\n        </div>\n        <div className=\"request-decrypt-message__balance-value\">\n          {`${nativeCurrencyBalance} ${\n            conversionRate ? currentCurrency?.toUpperCase() : nativeCurrency\n          }`}\n        </div>\n      </div>\n    );\n  };\n\n  renderRequestIcon = () => {\n    const { requesterAddress } = this.props;\n\n    return (\n      <div className=\"request-decrypt-message__request-icon\">\n        <Identicon diameter={40} address={requesterAddress} />\n      </div>\n    );\n  };\n\n  renderAccountInfo = () => {\n    return (\n      <div className=\"request-decrypt-message__account-info\">\n        {this.renderAccount()}\n        {this.renderRequestIcon()}\n        {this.renderBalance()}\n      </div>\n    );\n  };\n\n  renderBody = () => {\n    const { decryptMessageInline, subjectMetadata, txData } = this.props;\n    const { t } = this.context;\n\n    const targetSubjectMetadata = subjectMetadata[txData.msgParams.origin];\n    const name = targetSubjectMetadata?.name || txData.msgParams.origin;\n    const notice = t('decryptMessageNotice', [txData.msgParams.origin]);\n\n    const {\n      hasCopied,\n      hasDecrypted,\n      hasError,\n      rawMessage,\n      errorMessage,\n      copyToClipboardPressed,\n    } = this.state;\n\n    return (\n      <div className=\"request-decrypt-message__body\">\n        {this.renderAccountInfo()}\n        <div className=\"request-decrypt-message__visual\">\n          <section>\n            {targetSubjectMetadata?.iconUrl ? (\n              <img\n                className=\"request-decrypt-message__visual-identicon\"\n                src={targetSubjectMetadata.iconUrl}\n                alt=\"\"\n              />\n            ) : (\n              <i className=\"request-decrypt-message__visual-identicon--default\">\n                {name.charAt(0).toUpperCase()}\n              </i>\n            )}\n            <div className=\"request-decrypt-message__notice\">{notice}</div>\n          </section>\n        </div>\n        <div className=\"request-decrypt-message__message\">\n          <div className=\"request-decrypt-message__message-text\">\n            {!hasDecrypted && !hasError ? txData.msgParams.data : rawMessage}\n            {hasError ? errorMessage : ''}\n          </div>\n          <div\n            className={classnames('request-decrypt-message__message-cover', {\n              'request-decrypt-message__message-lock--pressed':\n                hasDecrypted || hasError,\n            })}\n          />\n          <div\n            className={classnames('request-decrypt-message__message-lock', {\n              'request-decrypt-message__message-lock--pressed':\n                hasDecrypted || hasError,\n            })}\n            onClick={(event) => {\n              decryptMessageInline(txData, event).then((result) => {\n                if (result.error) {\n                  this.setState({\n                    hasError: true,\n                    errorMessage: this.context.t('decryptInlineError', [\n                      result.error,\n                    ]),\n                  });\n                } else {\n                  this.setState({\n                    hasDecrypted: true,\n                    rawMessage: result.rawSig,\n                  });\n                }\n              });\n            }}\n          >\n            <div className=\"request-decrypt-message__message-lock__container\">\n              <i className=\"fa fa-lock fa-lg request-decrypt-message__message-lock__container__icon\" />\n              <div className=\"request-decrypt-message__message-lock__container__text\">\n                {t('decryptMetamask')}\n              </div>\n            </div>\n          </div>\n        </div>\n        {hasDecrypted ? (\n          <div\n            className={classnames({\n              'request-decrypt-message__message-copy': true,\n              'request-decrypt-message__message-copy--pressed':\n                copyToClipboardPressed,\n            })}\n            onClick={() => this.copyMessage()}\n            onMouseDown={() => this.setState({ copyToClipboardPressed: true })}\n            onMouseUp={() => this.setState({ copyToClipboardPressed: false })}\n          >\n            <Tooltip\n              position=\"bottom\"\n              title={hasCopied ? t('copiedExclamation') : t('copyToClipboard')}\n              wrapperClassName=\"request-decrypt-message__message-copy-tooltip\"\n              style={{ display: 'flex', alignItems: 'center' }}\n            >\n              <div className=\"request-decrypt-message__message-copy-text\">\n                {t('decryptCopy')}\n              </div>\n              <Icon\n                name={hasCopied ? IconName.CopySuccess : IconName.Copy}\n                color={IconColor.primaryDefault}\n              />\n            </Tooltip>\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  };\n\n  renderFooter = () => {\n    const {\n      cancelDecryptMessage,\n      clearConfirmTransaction,\n      decryptMessage,\n      history,\n      mostRecentOverviewPage,\n      txData,\n    } = this.props;\n    const { trackEvent, t } = this.context;\n\n    return (\n      <PageContainerFooter\n        cancelText={t('cancel')}\n        submitText={t('decrypt')}\n        onCancel={async (event) => {\n          await cancelDecryptMessage(txData, event);\n          trackEvent({\n            category: MetaMetricsEventCategory.Messages,\n            event: 'Cancel',\n            properties: {\n              action: 'Decrypt Message Request',\n              legacy_event: true,\n            },\n          });\n          clearConfirmTransaction();\n          history.push(mostRecentOverviewPage);\n        }}\n        onSubmit={async (event) => {\n          await decryptMessage(txData, event);\n          trackEvent({\n            category: MetaMetricsEventCategory.Messages,\n            event: 'Confirm',\n            properties: {\n              action: 'Decrypt Message Request',\n              legacy_event: true,\n            },\n          });\n          clearConfirmTransaction();\n          history.push(mostRecentOverviewPage);\n        }}\n      />\n    );\n  };\n\n  render = () => {\n    if (!this.props.txData) {\n      log.warn('ConfirmDecryptMessage Page: Missing txData prop.');\n      return null;\n    }\n\n    return (\n      <div className=\"request-decrypt-message__container\">\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </div>\n    );\n  };\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { cloneDeep } from 'lodash';\n\nimport {\n  goHome,\n  decryptMsg,\n  cancelDecryptMsg,\n  decryptMsgInline,\n} from '../../store/actions';\nimport {\n  conversionRateSelector,\n  getCurrentCurrency,\n  getPreferences,\n  getTargetAccountWithSendEtherInfo,\n  unconfirmedTransactionsListSelector,\n} from '../../selectors';\nimport { clearConfirmTransaction } from '../../ducks/confirm-transaction/confirm-transaction.duck';\nimport { getMostRecentOverviewPage } from '../../ducks/history/history';\nimport { getNativeCurrency } from '../../ducks/metamask/metamask';\nimport ConfirmDecryptMessage from './confirm-decrypt-message.component';\n\nfunction mapStateToProps(state) {\n  const {\n    metamask: { subjectMetadata = {} },\n  } = state;\n\n  const { useNativeCurrencyAsPrimaryCurrency } = getPreferences(state);\n\n  const unconfirmedTransactions = unconfirmedTransactionsListSelector(state);\n\n  const txData = cloneDeep(unconfirmedTransactions[0]);\n\n  const fromAccount = getTargetAccountWithSendEtherInfo(\n    state,\n    txData?.msgParams?.from,\n  );\n\n  return {\n    txData,\n    subjectMetadata,\n    fromAccount,\n    requester: null,\n    requesterAddress: null,\n    conversionRate: useNativeCurrencyAsPrimaryCurrency\n      ? null\n      : conversionRateSelector(state),\n    mostRecentOverviewPage: getMostRecentOverviewPage(state),\n    nativeCurrency: getNativeCurrency(state),\n    currentCurrency: getCurrentCurrency(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    goHome: () => dispatch(goHome()),\n    clearConfirmTransaction: () => dispatch(clearConfirmTransaction()),\n    decryptMessage: (msgData, event) => {\n      const params = msgData.msgParams;\n      params.metamaskId = msgData.id;\n      event.stopPropagation(event);\n      return dispatch(decryptMsg(params));\n    },\n    cancelDecryptMessage: (msgData, event) => {\n      event.stopPropagation(event);\n      return dispatch(cancelDecryptMsg(msgData));\n    },\n    decryptMessageInline: (msgData, event) => {\n      const params = msgData.msgParams;\n      params.metamaskId = msgData.id;\n      event.stopPropagation(event);\n      return dispatch(decryptMsgInline(params));\n    },\n  };\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps),\n)(ConfirmDecryptMessage);\n","export { default } from './confirm-decrypt-message.container';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport log from 'loglevel';\n\nimport AccountListItem from '../../components/app/account-list-item';\nimport Identicon from '../../components/ui/identicon';\nimport { PageContainerFooter } from '../../components/ui/page-container';\n\nimport { MetaMetricsEventCategory } from '../../../shared/constants/metametrics';\nimport SiteOrigin from '../../components/ui/site-origin';\nimport { Numeric } from '../../../shared/modules/Numeric';\nimport { EtherDenomination } from '../../../shared/constants/common';\nimport { formatCurrency } from '../../helpers/utils/confirm-tx.util';\nimport { getValueFromWeiHex } from '../../../shared/modules/conversion.utils';\n\nexport default class ConfirmEncryptionPublicKey extends Component {\n  static contextTypes = {\n    t: PropTypes.func.isRequired,\n    trackEvent: PropTypes.func.isRequired,\n  };\n\n  static propTypes = {\n    fromAccount: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      balance: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    clearConfirmTransaction: PropTypes.func.isRequired,\n    cancelEncryptionPublicKey: PropTypes.func.isRequired,\n    encryptionPublicKey: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired,\n    requesterAddress: PropTypes.string,\n    txData: PropTypes.object,\n    subjectMetadata: PropTypes.object,\n    mostRecentOverviewPage: PropTypes.string.isRequired,\n    nativeCurrency: PropTypes.string.isRequired,\n    currentCurrency: PropTypes.string.isRequired,\n    conversionRate: PropTypes.number,\n  };\n\n  renderHeader = () => {\n    return (\n      <div className=\"request-encryption-public-key__header\">\n        <div className=\"request-encryption-public-key__header-background\" />\n\n        <div className=\"request-encryption-public-key__header__text\">\n          {this.context.t('encryptionPublicKeyRequest')}\n        </div>\n\n        <div className=\"request-encryption-public-key__header__tip-container\">\n          <div className=\"request-encryption-public-key__header__tip\" />\n        </div>\n      </div>\n    );\n  };\n\n  renderAccount = () => {\n    const { fromAccount } = this.props;\n    const { t } = this.context;\n\n    return (\n      <div className=\"request-encryption-public-key__account\">\n        <div className=\"request-encryption-public-key__account-text\">\n          {`${t('account')}:`}\n        </div>\n\n        <div className=\"request-encryption-public-key__account-item\">\n          <AccountListItem account={fromAccount} />\n        </div>\n      </div>\n    );\n  };\n\n  renderBalance = () => {\n    const {\n      conversionRate,\n      nativeCurrency,\n      currentCurrency,\n      fromAccount: { balance },\n    } = this.props;\n    const { t } = this.context;\n\n    const nativeCurrencyBalance = conversionRate\n      ? formatCurrency(\n          getValueFromWeiHex({\n            value: balance,\n            fromCurrency: nativeCurrency,\n            toCurrency: currentCurrency,\n            conversionRate,\n            numberOfDecimals: 6,\n            toDenomination: EtherDenomination.ETH,\n          }),\n          currentCurrency,\n        )\n      : new Numeric(balance, 16, EtherDenomination.WEI)\n          .toDenomination(EtherDenomination.ETH)\n          .round(6)\n          .toBase(10)\n          .toString();\n\n    return (\n      <div className=\"request-encryption-public-key__balance\">\n        <div className=\"request-encryption-public-key__balance-text\">\n          {`${t('balance')}:`}\n        </div>\n        <div className=\"request-encryption-public-key__balance-value\">\n          {`${nativeCurrencyBalance} ${\n            conversionRate ? currentCurrency?.toUpperCase() : nativeCurrency\n          }`}\n        </div>\n      </div>\n    );\n  };\n\n  renderRequestIcon = () => {\n    const { requesterAddress } = this.props;\n\n    return (\n      <div className=\"request-encryption-public-key__request-icon\">\n        <Identicon diameter={40} address={requesterAddress} />\n      </div>\n    );\n  };\n\n  renderAccountInfo = () => {\n    return (\n      <div className=\"request-encryption-public-key__account-info\">\n        {this.renderAccount()}\n        {this.renderRequestIcon()}\n        {this.renderBalance()}\n      </div>\n    );\n  };\n\n  renderBody = () => {\n    const { subjectMetadata, txData } = this.props;\n    const { t } = this.context;\n\n    const targetSubjectMetadata = subjectMetadata[txData.origin];\n    const notice = t('encryptionPublicKeyNotice', [\n      <SiteOrigin siteOrigin={txData.origin} key={txData.origin} />,\n    ]);\n    const name = targetSubjectMetadata?.hostname || txData.origin;\n\n    return (\n      <div className=\"request-encryption-public-key__body\">\n        {this.renderAccountInfo()}\n        <div className=\"request-encryption-public-key__visual\">\n          <section>\n            {targetSubjectMetadata?.iconUrl ? (\n              <img\n                className=\"request-encryption-public-key__visual-identicon\"\n                src={targetSubjectMetadata.iconUrl}\n                alt=\"\"\n              />\n            ) : (\n              <i className=\"request-encryption-public-key__visual-identicon--default\">\n                {name.charAt(0).toUpperCase()}\n              </i>\n            )}\n            <div className=\"request-encryption-public-key__notice\">\n              {notice}\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  };\n\n  renderFooter = () => {\n    const {\n      cancelEncryptionPublicKey,\n      clearConfirmTransaction,\n      encryptionPublicKey,\n      history,\n      mostRecentOverviewPage,\n      txData,\n    } = this.props;\n    const { t, trackEvent } = this.context;\n\n    return (\n      <PageContainerFooter\n        cancelText={t('cancel')}\n        submitText={t('provide')}\n        onCancel={async (event) => {\n          await cancelEncryptionPublicKey(txData, event);\n          trackEvent({\n            category: MetaMetricsEventCategory.Messages,\n            event: 'Cancel',\n            properties: {\n              action: 'Encryption public key Request',\n              legacy_event: true,\n            },\n          });\n          clearConfirmTransaction();\n          history.push(mostRecentOverviewPage);\n        }}\n        onSubmit={async (event) => {\n          await encryptionPublicKey(txData, event);\n          this.context.trackEvent({\n            category: MetaMetricsEventCategory.Messages,\n            event: 'Confirm',\n            properties: {\n              action: 'Encryption public key Request',\n              legacy_event: true,\n            },\n          });\n          clearConfirmTransaction();\n          history.push(mostRecentOverviewPage);\n        }}\n      />\n    );\n  };\n\n  render = () => {\n    if (!this.props.txData) {\n      log.warn('ConfirmEncryptionPublicKey Page: Missing txData prop.');\n      return null;\n    }\n\n    return (\n      <div className=\"request-encryption-public-key__container\">\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </div>\n    );\n  };\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  goHome,\n  encryptionPublicKeyMsg,\n  cancelEncryptionPublicKeyMsg,\n} from '../../store/actions';\n\nimport {\n  conversionRateSelector,\n  unconfirmedTransactionsListSelector,\n  getTargetAccountWithSendEtherInfo,\n  getPreferences,\n  getCurrentCurrency,\n} from '../../selectors';\n\nimport { clearConfirmTransaction } from '../../ducks/confirm-transaction/confirm-transaction.duck';\nimport { getMostRecentOverviewPage } from '../../ducks/history/history';\nimport { getNativeCurrency } from '../../ducks/metamask/metamask';\nimport ConfirmEncryptionPublicKey from './confirm-encryption-public-key.component';\n\nfunction mapStateToProps(state) {\n  const {\n    metamask: { subjectMetadata = {} },\n  } = state;\n\n  const { useNativeCurrencyAsPrimaryCurrency } = getPreferences(state);\n\n  const unconfirmedTransactions = unconfirmedTransactionsListSelector(state);\n\n  const txData = unconfirmedTransactions[0];\n\n  const fromAccount = getTargetAccountWithSendEtherInfo(\n    state,\n    txData?.msgParams,\n  );\n\n  return {\n    txData,\n    subjectMetadata,\n    fromAccount,\n    requester: null,\n    requesterAddress: null,\n    conversionRate: useNativeCurrencyAsPrimaryCurrency\n      ? null\n      : conversionRateSelector(state),\n    mostRecentOverviewPage: getMostRecentOverviewPage(state),\n    nativeCurrency: getNativeCurrency(state),\n    currentCurrency: getCurrentCurrency(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    goHome: () => dispatch(goHome()),\n    clearConfirmTransaction: () => dispatch(clearConfirmTransaction()),\n    encryptionPublicKey: (msgData, event) => {\n      const params = { data: msgData.msgParams, metamaskId: msgData.id };\n      event.stopPropagation();\n      return dispatch(encryptionPublicKeyMsg(params));\n    },\n    cancelEncryptionPublicKey: (msgData, event) => {\n      event.stopPropagation();\n      return dispatch(cancelEncryptionPublicKeyMsg(msgData));\n    },\n  };\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps),\n)(ConfirmEncryptionPublicKey);\n","export { default } from './confirm-encryption-public-key.container';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { I18nContext } from '../../../../contexts/i18n';\nimport FormField from '../../../../components/ui/form-field';\nimport { getGasFormErrorText } from '../../../../helpers/constants/gas';\n\nexport default function AdvancedGasControls({\n  onManualChange,\n  gasLimit,\n  setGasLimit,\n  gasPrice,\n  setGasPrice,\n  gasErrors,\n  minimumGasLimit,\n}) {\n  const t = useContext(I18nContext);\n\n  return (\n    <div className=\"advanced-gas-controls\">\n      <FormField\n        titleText={t('gasLimit')}\n        error={\n          gasErrors?.gasLimit\n            ? getGasFormErrorText(gasErrors.gasLimit, t, { minimumGasLimit })\n            : null\n        }\n        onChange={(value) => {\n          onManualChange?.();\n          setGasLimit(value);\n        }}\n        tooltipText={t('editGasLimitTooltip')}\n        value={gasLimit}\n        allowDecimals={false}\n        numeric\n      />\n      <>\n        <FormField\n          titleText={t('advancedGasPriceTitle')}\n          titleUnit=\"(GWEI)\"\n          onChange={(value) => {\n            onManualChange?.();\n            setGasPrice(value);\n          }}\n          tooltipText={t('editGasPriceTooltip')}\n          value={gasPrice}\n          numeric\n          allowDecimals\n          error={\n            gasErrors?.gasPrice\n              ? getGasFormErrorText(gasErrors.gasPrice, t)\n              : null\n          }\n        />\n      </>\n    </div>\n  );\n}\n\nAdvancedGasControls.propTypes = {\n  onManualChange: PropTypes.func,\n  gasLimit: PropTypes.number,\n  setGasLimit: PropTypes.func,\n  gasPrice: PropTypes.string,\n  setGasPrice: PropTypes.func,\n  minimumGasLimit: PropTypes.string,\n  gasErrors: PropTypes.object,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { capitalize } from 'lodash';\nimport { useTransactionEventFragment } from '../../../hooks/useTransactionEventFragment';\nimport { EditGasModes } from '../../../../../../shared/constants/gas';\n\nimport {\n  Display,\n  FlexDirection,\n} from '../../../../../helpers/constants/design-system';\nimport {\n  getAdvancedGasFeeValues,\n  getCurrentChainId,\n  getNetworkIdentifier,\n} from '../../../../../selectors';\nimport { setAdvancedGasFee } from '../../../../../store/actions';\nimport { useGasFeeContext } from '../../../../../contexts/gasFee';\nimport { useAdvancedGasFeePopoverContext } from '../context';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { Checkbox, Box } from '../../../../../components/component-library';\nimport { Numeric } from '../../../../../../shared/modules/Numeric';\n\nconst AdvancedGasFeeDefaults = () => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const {\n    gasErrors,\n    maxBaseFee: maxBaseFeeNumber,\n    maxPriorityFeePerGas: maxPriorityFeePerGasNumber,\n  } = useAdvancedGasFeePopoverContext();\n  const maxBaseFee = new Numeric(maxBaseFeeNumber, 10).toString();\n  const maxPriorityFeePerGas = new Numeric(\n    maxPriorityFeePerGasNumber,\n    10,\n  ).toString();\n  const advancedGasFeeValues = useSelector(getAdvancedGasFeeValues);\n  // This will need to use a different chainId in multinetwork\n  const chainId = useSelector(getCurrentChainId);\n  const networkIdentifier = useSelector(getNetworkIdentifier);\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n  const { editGasMode } = useGasFeeContext();\n  const [isDefaultSettingsSelected, setDefaultSettingsSelected] = useState(\n    Boolean(advancedGasFeeValues) &&\n      advancedGasFeeValues.maxBaseFee === maxBaseFee &&\n      advancedGasFeeValues.priorityFee === maxPriorityFeePerGas,\n  );\n\n  useEffect(() => {\n    setDefaultSettingsSelected(\n      Boolean(advancedGasFeeValues) &&\n        advancedGasFeeValues.maxBaseFee === maxBaseFee &&\n        advancedGasFeeValues.priorityFee === maxPriorityFeePerGas,\n    );\n  }, [advancedGasFeeValues, maxBaseFee, maxPriorityFeePerGas]);\n\n  const handleUpdateDefaultSettings = () => {\n    if (isDefaultSettingsSelected) {\n      dispatch(setAdvancedGasFee({ chainId, gasFeePreferences: undefined }));\n      setDefaultSettingsSelected(false);\n      updateTransactionEventFragment({\n        properties: {\n          advanced_gas_defaults_updated_maxbasefee: null,\n          advanced_gas_defaults_updated_priorityfee: null,\n        },\n      });\n    } else {\n      dispatch(\n        setAdvancedGasFee({\n          chainId,\n          gasFeePreferences: {\n            maxBaseFee,\n            priorityFee: maxPriorityFeePerGas,\n          },\n        }),\n      );\n      updateTransactionEventFragment({\n        properties: {\n          advanced_gas_defaults_updated_maxbasefee: maxBaseFee,\n          advanced_gas_defaults_updated_priorityfee: maxPriorityFeePerGas,\n        },\n      });\n    }\n  };\n\n  if (editGasMode === EditGasModes.swaps) {\n    return null;\n  }\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      marginTop={4}\n      marginLeft={2}\n      marginRight={2}\n      paddingTop={4}\n      paddingBottom={4}\n      className=\"advanced-gas-fee-defaults\"\n    >\n      <Checkbox\n        isChecked={isDefaultSettingsSelected}\n        onChange={handleUpdateDefaultSettings}\n        isDisabled={gasErrors.maxFeePerGas || gasErrors.maxPriorityFeePerGas}\n        label={t('advancedGasFeeDefaultOptIn', [capitalize(networkIdentifier)])}\n      />\n    </Box>\n  );\n};\n\nexport default AdvancedGasFeeDefaults;\n","export { default } from './advanced-gas-fee-defaults';\n","import React, { useEffect, useState } from 'react';\n\nimport { useGasFeeContext } from '../../../../../contexts/gasFee';\nimport { bnGreaterThan, bnLessThan } from '../../../../../helpers/utils/util';\nimport { TextVariant } from '../../../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport { MAX_GAS_LIMIT_DEC } from '../../../send/send.constants';\nimport Button from '../../../../../components/ui/button';\nimport FormField from '../../../../../components/ui/form-field';\n\nimport { useAdvancedGasFeePopoverContext } from '../context';\nimport { Text } from '../../../../../components/component-library';\nimport { IGNORE_GAS_LIMIT_CHAIN_IDS } from '../../../constants';\nimport { hexToDecimal } from '../../../../../../shared/modules/conversion.utils';\n\nconst validateGasLimit = (gasLimit, minGasLimit, maxGasLimit) =>\n  bnLessThan(gasLimit, minGasLimit) || bnGreaterThan(gasLimit, maxGasLimit)\n    ? 'editGasLimitOutOfBoundsV2'\n    : null;\n\nconst AdvancedGasFeeGasLimit = () => {\n  const t = useI18nContext();\n  const { setGasLimit: setGasLimitInContext, setErrorValue } =\n    useAdvancedGasFeePopoverContext();\n  const {\n    gasLimit: gasLimitInTransaction,\n    minimumGasLimitDec,\n    transaction: { chainId, originalGasEstimate },\n  } = useGasFeeContext();\n  const originalGasEstimateDec =\n    originalGasEstimate !== undefined && hexToDecimal(originalGasEstimate);\n  const [maxGasLimit, setMaxGasLimit] = useState(\n    originalGasEstimateDec\n      ? Math.max(MAX_GAS_LIMIT_DEC, originalGasEstimateDec)\n      : MAX_GAS_LIMIT_DEC,\n  );\n  const [isEditing, setEditing] = useState(false);\n  const [gasLimit, setGasLimit] = useState(gasLimitInTransaction);\n  const [gasLimitError, setGasLimitError] = useState();\n\n  const updateGasLimit = (value) => {\n    setGasLimit(value);\n  };\n\n  useEffect(() => {\n    setGasLimitInContext(gasLimit);\n    if (IGNORE_GAS_LIMIT_CHAIN_IDS.includes(chainId)) {\n      return;\n    }\n    const error = validateGasLimit(gasLimit, minimumGasLimitDec, maxGasLimit);\n    setGasLimitError(error);\n    setEditing(isEditing === true ? isEditing : error !== null);\n    setErrorValue('gasLimit', error === 'editGasLimitOutOfBoundsV2');\n  }, [\n    chainId,\n    gasLimit,\n    minimumGasLimitDec,\n    setGasLimitInContext,\n    setErrorValue,\n    maxGasLimit,\n    isEditing,\n    t,\n  ]);\n\n  useEffect(() => {\n    if (originalGasEstimateDec) {\n      setMaxGasLimit(Math.max(MAX_GAS_LIMIT_DEC, originalGasEstimateDec));\n    }\n  }, [minimumGasLimitDec, originalGasEstimateDec, setMaxGasLimit]);\n\n  if (isEditing) {\n    return (\n      <FormField\n        dataTestId=\"gas-limit-input\"\n        error={\n          gasLimitError\n            ? t(gasLimitError, [minimumGasLimitDec - 1, maxGasLimit])\n            : ''\n        }\n        onChange={updateGasLimit}\n        titleText={t('gasLimitV2')}\n        value={gasLimit}\n        allowDecimals={false}\n        numeric\n      />\n    );\n  }\n\n  return (\n    <Text\n      tag={TextVariant.bodyMd}\n      variant={TextVariant.bodySm}\n      as=\"h6\"\n      className=\"advanced-gas-fee-gas-limit\"\n      marginTop={4}\n      marginLeft={2}\n      marginRight={2}\n    >\n      <strong>{t('gasLimitV2')}</strong>\n      <span>{gasLimit}</span>\n      <Button\n        data-testid=\"advanced-gas-fee-edit\"\n        className=\"advanced-gas-fee-gas-limit__edit-link\"\n        onClick={() => setEditing(true)}\n        type=\"link\"\n      >\n        {t('edit')}\n      </Button>\n    </Text>\n  );\n};\n\nexport default AdvancedGasFeeGasLimit;\n","export { default } from './advanced-gas-fee-gas-limit';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { isNullish } from '../../../../../helpers/utils/util';\nimport { formatGasFeeOrFeeRange } from '../../../../../helpers/utils/gas';\nimport { I18nContext } from '../../../../../contexts/i18n';\nimport Box from '../../../../../components/ui/box';\nimport LoadingHeartBeat from '../../../../../components/ui/loading-heartbeat';\n\nfunction determineTrendInfo(trend, t) {\n  switch (trend) {\n    case 'up':\n      return {\n        className: 'fa-arrow-up advanced-gas-fee-input-subtext__up',\n        color: 'var(--color-success-default)',\n        title: t('upArrow'),\n      };\n    case 'down':\n      return {\n        className: 'fa-arrow-down advanced-gas-fee-input-subtext__down',\n        color: 'var(--color-error-default)',\n        title: t('downArrow'),\n      };\n    case 'level':\n      return {\n        className: 'fa-arrow-right advanced-gas-fee-input-subtext__level',\n        color: 'var(--color-icon-alternative)',\n        title: t('levelArrow'),\n      };\n    default:\n      return null;\n  }\n}\n\nconst AdvancedGasFeeInputSubtext = ({ latest, historical, trend }) => {\n  const t = useContext(I18nContext);\n  const trendInfo = determineTrendInfo(trend, t);\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      gap={4}\n      className=\"advanced-gas-fee-input-subtext\"\n    >\n      {isNullish(latest) ? null : (\n        <Box display=\"flex\" alignItems=\"center\" data-testid=\"latest\">\n          <span className=\"advanced-gas-fee-input-subtext__label\">\n            {t('currentTitle')}\n          </span>\n          <span className=\"advanced-gas-fee-input-subtext__value\">\n            <LoadingHeartBeat />\n            {formatGasFeeOrFeeRange(latest)}\n          </span>\n          {trendInfo === null ? null : (\n            <span className=\"advanced-gas-fee-input-subtext__icon\">\n              <i\n                className={classnames('fa', trendInfo.className)}\n                style={{ color: trendInfo.color }}\n                title={trendInfo.title}\n                data-testid=\"fee-arrow\"\n              />\n            </span>\n          )}\n        </Box>\n      )}\n      {isNullish(historical) ? null : (\n        <Box>\n          <span\n            className=\"advanced-gas-fee-input-subtext__label\"\n            data-testid=\"historical\"\n          >\n            {t('twelveHrTitle')}\n          </span>\n          <span className=\"advanced-gas-fee-input-subtext__value\">\n            <LoadingHeartBeat />\n            {formatGasFeeOrFeeRange(historical)}\n          </span>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nAdvancedGasFeeInputSubtext.propTypes = {\n  latest: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  historical: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  trend: PropTypes.oneOf(['up', 'down', 'level']),\n};\n\nexport default AdvancedGasFeeInputSubtext;\n","export { default } from './advanced-gas-fee-input-subtext';\n","import React from 'react';\n\nimport Box from '../../../../../components/ui/box';\nimport BaseFeeInput from './base-fee-input';\nimport PriorityFeeInput from './priority-fee-input';\n\nconst AdvancedGasFeeInputs = () => {\n  return (\n    <Box className=\"advanced-gas-fee-inputs\">\n      <BaseFeeInput />\n      <PriorityFeeInput />\n    </Box>\n  );\n};\n\nexport default AdvancedGasFeeInputs;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { HIGH_FEE_WARNING_MULTIPLIER } from '../../../../send/send.constants';\nimport {\n  EditGasModes,\n  PriorityLevels,\n} from '../../../../../../../shared/constants/gas';\nimport { PRIMARY } from '../../../../../../helpers/constants/common';\nimport { getAdvancedGasFeeValues } from '../../../../../../selectors';\nimport { useGasFeeContext } from '../../../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { useUserPreferencedCurrency } from '../../../../../../hooks/useUserPreferencedCurrency';\nimport { useCurrencyDisplay } from '../../../../../../hooks/useCurrencyDisplay';\nimport Box from '../../../../../../components/ui/box';\nimport FormField from '../../../../../../components/ui/form-field';\n\nimport { useAdvancedGasFeePopoverContext } from '../../context';\nimport AdvancedGasFeeInputSubtext from '../../advanced-gas-fee-input-subtext';\nimport { decGWEIToHexWEI } from '../../../../../../../shared/modules/conversion.utils';\nimport { Numeric } from '../../../../../../../shared/modules/Numeric';\nimport { IGNORE_GAS_LIMIT_CHAIN_IDS } from '../../../../constants';\n\nconst validateBaseFee = (\n  value,\n  gasFeeEstimates,\n  maxPriorityFeePerGas,\n  chainId,\n) => {\n  const baseFeeValue = new Numeric(value, 10);\n  if (new Numeric(maxPriorityFeePerGas, 10).greaterThan(baseFeeValue)) {\n    return 'editGasMaxBaseFeeGWEIImbalance';\n  }\n  if (\n    gasFeeEstimates?.low &&\n    baseFeeValue.lessThan(gasFeeEstimates.low.suggestedMaxFeePerGas, 10) &&\n    IGNORE_GAS_LIMIT_CHAIN_IDS.includes(chainId)\n  ) {\n    return 'editGasMaxBaseFeeLow';\n  }\n  if (\n    gasFeeEstimates?.high &&\n    baseFeeValue.greaterThan(\n      gasFeeEstimates.high.suggestedMaxFeePerGas * HIGH_FEE_WARNING_MULTIPLIER,\n      10,\n    )\n  ) {\n    return 'editGasMaxBaseFeeHigh';\n  }\n  return null;\n};\n\nconst BaseFeeInput = () => {\n  const t = useI18nContext();\n\n  const {\n    gasFeeEstimates,\n    estimateUsed,\n    maxFeePerGas: maxBaseFeeNumber,\n    editGasMode,\n    transaction: { chainId },\n  } = useGasFeeContext();\n  const maxFeePerGas = new Numeric(maxBaseFeeNumber, 10).toString();\n  const {\n    gasLimit,\n    maxPriorityFeePerGas,\n    setErrorValue,\n    setMaxFeePerGas,\n    setMaxBaseFee,\n  } = useAdvancedGasFeePopoverContext();\n\n  const { estimatedBaseFee, historicalBaseFeeRange, baseFeeTrend } =\n    gasFeeEstimates ?? {};\n\n  const [baseFeeError, setBaseFeeError] = useState();\n  const { currency, numberOfDecimals } = useUserPreferencedCurrency(PRIMARY);\n\n  const advancedGasFeeValues = useSelector(getAdvancedGasFeeValues);\n\n  const defaultBaseFee =\n    estimateUsed !== PriorityLevels.custom &&\n    advancedGasFeeValues?.maxBaseFee &&\n    editGasMode !== EditGasModes.swaps\n      ? advancedGasFeeValues.maxBaseFee\n      : maxFeePerGas;\n\n  const [baseFee, setBaseFee] = useState(\n    defaultBaseFee > 0 ? defaultBaseFee : undefined,\n  );\n  useEffect(() => {\n    if (baseFee === undefined && defaultBaseFee > 0) {\n      setBaseFee(defaultBaseFee);\n    }\n  }, [baseFee, defaultBaseFee, setBaseFee]);\n\n  const [baseFeeInPrimaryCurrency] = useCurrencyDisplay(\n    decGWEIToHexWEI(baseFee * gasLimit),\n    { currency, numberOfDecimals },\n  );\n\n  const updateBaseFee = useCallback(\n    (value) => {\n      setBaseFee(value);\n    },\n    [setBaseFee],\n  );\n\n  useEffect(() => {\n    setMaxFeePerGas(baseFee);\n    const error = validateBaseFee(\n      baseFee,\n      gasFeeEstimates,\n      maxPriorityFeePerGas,\n      chainId,\n    );\n\n    setBaseFeeError(error);\n    setErrorValue('maxFeePerGas', error === 'editGasMaxBaseFeeGWEIImbalance');\n    setMaxBaseFee(baseFee);\n  }, [\n    baseFee,\n    chainId,\n    gasFeeEstimates,\n    maxPriorityFeePerGas,\n    setBaseFeeError,\n    setErrorValue,\n    setMaxFeePerGas,\n    setMaxBaseFee,\n  ]);\n\n  return (\n    <Box className=\"base-fee-input\" marginLeft={2} marginRight={2}>\n      <FormField\n        dataTestId=\"base-fee-input\"\n        error={baseFeeError ? t(baseFeeError) : ''}\n        onChange={updateBaseFee}\n        titleText={t('maxBaseFee')}\n        titleUnit={`(${t('gwei')})`}\n        tooltipText={t('advancedBaseGasFeeToolTip')}\n        value={baseFee}\n        detailText={`≈ ${baseFeeInPrimaryCurrency}`}\n        allowDecimals\n        numeric\n      />\n      <AdvancedGasFeeInputSubtext\n        latest={estimatedBaseFee}\n        historical={historicalBaseFeeRange}\n        trend={baseFeeTrend}\n      />\n    </Box>\n  );\n};\n\nexport default BaseFeeInput;\n","export { default } from './base-fee-input';\n","export { default } from './advanced-gas-fee-inputs';\n","export { default } from './priority-fee-input';\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { HIGH_FEE_WARNING_MULTIPLIER } from '../../../../send/send.constants';\nimport {\n  EditGasModes,\n  PriorityLevels,\n} from '../../../../../../../shared/constants/gas';\nimport { PRIMARY } from '../../../../../../helpers/constants/common';\nimport { getAdvancedGasFeeValues } from '../../../../../../selectors';\nimport { useCurrencyDisplay } from '../../../../../../hooks/useCurrencyDisplay';\nimport { useGasFeeContext } from '../../../../../../contexts/gasFee';\nimport { useI18nContext } from '../../../../../../hooks/useI18nContext';\nimport { useUserPreferencedCurrency } from '../../../../../../hooks/useUserPreferencedCurrency';\nimport FormField from '../../../../../../components/ui/form-field';\nimport Box from '../../../../../../components/ui/box';\n\nimport { useAdvancedGasFeePopoverContext } from '../../context';\nimport AdvancedGasFeeInputSubtext from '../../advanced-gas-fee-input-subtext';\nimport { decGWEIToHexWEI } from '../../../../../../../shared/modules/conversion.utils';\nimport { Numeric } from '../../../../../../../shared/modules/Numeric';\nimport { IGNORE_GAS_LIMIT_CHAIN_IDS } from '../../../../constants';\n\nconst validatePriorityFee = (value, gasFeeEstimates, chainId) => {\n  const priorityFeeValue = new Numeric(value, 10);\n  if (priorityFeeValue.lessThan(0, 10)) {\n    return 'editGasMaxPriorityFeeBelowMinimumV2';\n  }\n  if (\n    gasFeeEstimates?.low &&\n    priorityFeeValue.lessThan(\n      gasFeeEstimates.low.suggestedMaxPriorityFeePerGas,\n      10,\n    ) &&\n    IGNORE_GAS_LIMIT_CHAIN_IDS.includes(chainId)\n  ) {\n    return 'editGasMaxPriorityFeeLowV2';\n  }\n  if (\n    gasFeeEstimates?.high &&\n    priorityFeeValue.greaterThan(\n      gasFeeEstimates.high.suggestedMaxPriorityFeePerGas *\n        HIGH_FEE_WARNING_MULTIPLIER,\n      10,\n    )\n  ) {\n    return 'editGasMaxPriorityFeeHighV2';\n  }\n  return null;\n};\n\nconst PriorityFeeInput = () => {\n  const t = useI18nContext();\n  const advancedGasFeeValues = useSelector(getAdvancedGasFeeValues);\n  const { gasLimit, setErrorValue, setMaxPriorityFeePerGas } =\n    useAdvancedGasFeePopoverContext();\n  const {\n    editGasMode,\n    estimateUsed,\n    gasFeeEstimates,\n    maxPriorityFeePerGas: maxPriorityFeePerGasNumber,\n    transaction: { chainId },\n  } = useGasFeeContext();\n  const maxPriorityFeePerGas = new Numeric(\n    maxPriorityFeePerGasNumber,\n    10,\n  ).toString();\n  const {\n    latestPriorityFeeRange,\n    historicalPriorityFeeRange,\n    priorityFeeTrend,\n  } = gasFeeEstimates ?? {};\n  const [priorityFeeError, setPriorityFeeError] = useState();\n\n  const defaultPriorityFee =\n    estimateUsed !== PriorityLevels.custom &&\n    advancedGasFeeValues?.priorityFee &&\n    editGasMode !== EditGasModes.swaps\n      ? advancedGasFeeValues.priorityFee\n      : maxPriorityFeePerGas;\n\n  const [priorityFee, setPriorityFee] = useState(\n    defaultPriorityFee > 0 ? defaultPriorityFee : undefined,\n  );\n  useEffect(() => {\n    if (priorityFee === undefined && defaultPriorityFee > 0) {\n      setPriorityFee(defaultPriorityFee);\n    }\n  }, [priorityFee, defaultPriorityFee, setPriorityFee]);\n\n  const { currency, numberOfDecimals } = useUserPreferencedCurrency(PRIMARY);\n\n  const [priorityFeeInPrimaryCurrency] = useCurrencyDisplay(\n    decGWEIToHexWEI(priorityFee * gasLimit),\n    { currency, numberOfDecimals },\n  );\n\n  const updatePriorityFee = (value) => {\n    setPriorityFee(value);\n  };\n\n  useEffect(() => {\n    setMaxPriorityFeePerGas(priorityFee);\n    const error = validatePriorityFee(priorityFee, gasFeeEstimates, chainId);\n    setErrorValue(\n      'maxPriorityFeePerGas',\n      error === 'editGasMaxPriorityFeeBelowMinimumV2',\n    );\n    setPriorityFeeError(error);\n  }, [\n    chainId,\n    gasFeeEstimates,\n    priorityFee,\n    setErrorValue,\n    setMaxPriorityFeePerGas,\n    setPriorityFeeError,\n  ]);\n\n  return (\n    <Box\n      marginTop={4}\n      marginLeft={2}\n      marginRight={2}\n      className=\"priority-fee-input\"\n    >\n      <FormField\n        dataTestId=\"priority-fee-input\"\n        error={priorityFeeError ? t(priorityFeeError) : ''}\n        onChange={updatePriorityFee}\n        titleText={t('priorityFeeProperCase')}\n        titleUnit={`(${t('gwei')})`}\n        tooltipText={t('advancedPriorityFeeToolTip')}\n        value={priorityFee}\n        detailText={`≈ ${priorityFeeInPrimaryCurrency}`}\n        allowDecimals\n        numeric\n      />\n      <AdvancedGasFeeInputSubtext\n        latest={latestPriorityFeeRange}\n        historical={historicalPriorityFeeRange}\n        trend={priorityFeeTrend}\n      />\n    </Box>\n  );\n};\n\nexport default PriorityFeeInput;\n","import React from 'react';\n\nimport { useI18nContext } from '../../../../hooks/useI18nContext';\nimport { useTransactionModalContext } from '../../../../contexts/transaction-modal';\nimport Box from '../../../../components/ui/box';\nimport Popover from '../../../../components/ui/popover';\n\nimport { AdvancedGasFeePopoverContextProvider } from './context';\nimport AdvancedGasFeeInputs from './advanced-gas-fee-inputs';\nimport AdvancedGasFeeGasLimit from './advanced-gas-fee-gas-limit';\nimport AdvancedGasFeeSaveButton from './advanced-gas-fee-save';\nimport AdvancedGasFeeDefaults from './advanced-gas-fee-defaults';\n\nconst AdvancedGasFeePopover = () => {\n  const t = useI18nContext();\n  const { closeAllModals, currentModal } = useTransactionModalContext();\n\n  if (currentModal !== 'advancedGasFee') {\n    return null;\n  }\n\n  return (\n    <AdvancedGasFeePopoverContextProvider>\n      <Popover\n        className=\"advanced-gas-fee-popover\"\n        title={t('advancedGasFeeModalTitle')}\n        onClose={closeAllModals}\n        footer={<AdvancedGasFeeSaveButton />}\n      >\n        <Box margin={4}>\n          <AdvancedGasFeeInputs />\n          <AdvancedGasFeeDefaults />\n          <AdvancedGasFeeGasLimit />\n        </Box>\n      </Popover>\n    </AdvancedGasFeePopoverContextProvider>\n  );\n};\n\nexport default AdvancedGasFeePopover;\n","import React from 'react';\n\nimport { PriorityLevels } from '../../../../../../shared/constants/gas';\nimport { decGWEIToHexWEI } from '../../../../../../shared/modules/conversion.utils';\nimport { useTransactionModalContext } from '../../../../../contexts/transaction-modal';\nimport { useGasFeeContext } from '../../../../../contexts/gasFee';\nimport { useTransactionEventFragment } from '../../../hooks/useTransactionEventFragment';\nimport { useI18nContext } from '../../../../../hooks/useI18nContext';\nimport Button from '../../../../../components/ui/button';\n\nimport { useAdvancedGasFeePopoverContext } from '../context';\n\nconst AdvancedGasFeeSaveButton = () => {\n  const { closeModal } = useTransactionModalContext();\n  const { updateTransactionEventFragment } = useTransactionEventFragment();\n  const { updateTransaction } = useGasFeeContext();\n  const t = useI18nContext();\n  const { gasLimit, hasErrors, maxFeePerGas, maxPriorityFeePerGas } =\n    useAdvancedGasFeePopoverContext();\n\n  const onSave = () => {\n    updateTransaction({\n      estimateUsed: PriorityLevels.custom,\n      maxFeePerGas: decGWEIToHexWEI(maxFeePerGas),\n      maxPriorityFeePerGas: decGWEIToHexWEI(maxPriorityFeePerGas),\n      gasLimit,\n    });\n    updateTransactionEventFragment({\n      properties: {\n        gas_edit_type: 'advanced',\n      },\n    });\n    closeModal(['advancedGasFee', 'editGasFee']);\n  };\n\n  return (\n    <Button type=\"primary\" disabled={hasErrors} onClick={onSave}>\n      {t('save')}\n    </Button>\n  );\n};\n\nexport default AdvancedGasFeeSaveButton;\n","export { default } from './advanced-gas-fee-save';\n","import React, { createContext, useCallback, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AdvancedGasFeePopoverContext = createContext({});\n\nexport const AdvancedGasFeePopoverContextProvider = ({ children }) => {\n  const [gasLimit, setGasLimit] = useState();\n  const [maxFeePerGas, setMaxFeePerGas] = useState();\n  const [maxPriorityFeePerGas, setMaxPriorityFeePerGas] = useState();\n  const [errors, setErrors] = useState({\n    maxFeePerGas: false,\n    maxPriorityFeePerGas: false,\n    gasLimit: false,\n  });\n\n  const setErrorValue = useCallback(\n    (field, value) => {\n      if (errors[field] !== value) {\n        setErrors({ ...errors, [field]: value });\n      }\n    },\n    [errors, setErrors],\n  );\n  const [maxBaseFee, setMaxBaseFee] = useState();\n\n  return (\n    <AdvancedGasFeePopoverContext.Provider\n      value={{\n        gasLimit,\n        hasErrors:\n          errors.maxFeePerGas || errors.maxPriorityFeePerGas || errors.gasLimit,\n        gasErrors: errors,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        setErrorValue,\n        maxBaseFee,\n        setGasLimit,\n        setMaxPriorityFeePerGas,\n        setMaxFeePerGas,\n        setMaxBaseFee,\n      }}\n    >\n      {children}\n    </AdvancedGasFeePopoverContext.Provider>\n  );\n};\n\nexport function useAdvancedGasFeePopoverContext() {\n  return useContext(AdvancedGasFeePopoverContext);\n}\n\nAdvancedGasFeePopoverContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export * from './advancedGasFeePopover';\n","export { default } from './advanced-gas-fee-popover';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Box from '../../../../components/ui/box/box';\nimport Button from '../../../../components/ui/button';\nimport { Text } from '../../../../components/component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  Display,\n  FlexDirection,\n  FontWeight,\n  JustifyContent,\n  TextAlign,\n  TextColor,\n  TextVariant,\n} from '../../../../helpers/constants/design-system';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport { ConfirmGasDisplay } from '../confirm-gas-display';\nimport { formatCurrency } from '../../../../helpers/utils/confirm-tx.util';\nimport { parseStandardTokenTransactionData } from '../../../../../shared/modules/transaction.utils';\n\nexport default function ApproveContentCard({\n  showHeader = true,\n  symbol,\n  title,\n  showEdit,\n  showAdvanceGasFeeOptions = false,\n  onEditClick,\n  footer,\n  noBorder,\n  supportsEIP1559,\n  renderTransactionDetailsContent,\n  renderDataContent,\n  ethTransactionTotal,\n  nativeCurrency,\n  fiatTransactionTotal,\n  currentCurrency,\n  isSetApproveForAll,\n  isApprovalOrRejection,\n  data,\n  userAcknowledgedGasMissing,\n  renderSimulationFailureWarning,\n  useCurrencyRateCheck,\n}) {\n  const t = useContext(I18nContext);\n\n  const tokenData = parseStandardTokenTransactionData(data);\n  const functionName = tokenData?.name;\n  const capitalizedFnName =\n    functionName?.charAt(0).toUpperCase() + functionName?.slice(1);\n\n  return (\n    <Box\n      className={classnames({\n        'approve-content-card-container__card': !noBorder,\n        'approve-content-card-container__card--no-border': noBorder,\n      })}\n    >\n      {showHeader && (\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Row}\n          alignItems={AlignItems.center}\n          justifyContent={JustifyContent.flexEnd}\n          className=\"approve-content-card-container__card-header\"\n        >\n          {supportsEIP1559 && title === t('transactionFee') ? null : (\n            <>\n              <Box className=\"approve-content-card-container__card-header__symbol\">\n                {symbol}\n              </Box>\n              <Box\n                marginLeft={4}\n                className=\"approve-content-card-container__card-header__title\"\n              >\n                <Text variant={TextVariant.bodySmBold} as=\"h6\">\n                  {title}\n                </Text>\n              </Box>\n            </>\n          )}\n          {showEdit && (!showAdvanceGasFeeOptions || !supportsEIP1559) && (\n            <Box width={BlockSize.OneSixth}>\n              <Button type=\"link\" onClick={() => onEditClick()}>\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.primaryDefault}\n                  as=\"h6\"\n                >\n                  {t('edit')}\n                </Text>\n              </Button>\n            </Box>\n          )}\n        </Box>\n      )}\n      <Box\n        marginTop={1}\n        marginBottom={3}\n        className=\"approve-content-card-container__card-content\"\n      >\n        {renderTransactionDetailsContent &&\n          (supportsEIP1559 && !renderSimulationFailureWarning ? (\n            <ConfirmGasDisplay\n              userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n            />\n          ) : (\n            <Box\n              display={Display.Flex}\n              flexDirection={FlexDirection.Row}\n              justifyContent={JustifyContent.spaceBetween}\n            >\n              <Box>\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.textAlternative}\n                  as=\"h6\"\n                >\n                  {t('feeAssociatedRequest')}\n                </Text>\n              </Box>\n              <Box\n                display={Display.Flex}\n                flexDirection={FlexDirection.Column}\n                alignItems={AlignItems.flexEnd}\n                textAlign={TextAlign.Right}\n              >\n                {useCurrencyRateCheck && (\n                  <Box>\n                    <Text\n                      variant={TextVariant.headingSm}\n                      fontWeight={FontWeight.Bold}\n                      color={TextColor.textDefault}\n                      as=\"h4\"\n                    >\n                      {formatCurrency(fiatTransactionTotal, currentCurrency)}\n                    </Text>\n                  </Box>\n                )}\n                <Box>\n                  <Text\n                    variant={TextVariant.bodySm}\n                    fontWeight={FontWeight.Normal}\n                    color={TextColor.textMuted}\n                    as=\"h6\"\n                  >\n                    {`${ethTransactionTotal} ${nativeCurrency}`}\n                  </Text>\n                </Box>\n              </Box>\n            </Box>\n          ))}\n        {renderDataContent && (\n          <Box display={Display.Flex} flexDirection={FlexDirection.Column}>\n            <Box>\n              <Text\n                variant={TextVariant.bodySm}\n                color={TextColor.textAlternative}\n                as=\"h6\"\n              >\n                {`${t('function', [capitalizedFnName])}`}\n              </Text>\n            </Box>\n            {isSetApproveForAll && isApprovalOrRejection !== undefined ? (\n              <Box>\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.textAlternative}\n                  as=\"h6\"\n                >\n                  {`${t('parameters')}: ${isApprovalOrRejection}`}\n                </Text>\n              </Box>\n            ) : null}\n            <Box\n              marginRight={4}\n              className=\"approve-content-card-container__data__data-block\"\n            >\n              <Text\n                variant={TextVariant.bodySm}\n                color={TextColor.textAlternative}\n                as=\"h6\"\n              >\n                {data}\n              </Text>\n            </Box>\n          </Box>\n        )}\n      </Box>\n      {footer}\n    </Box>\n  );\n}\n\nApproveContentCard.propTypes = {\n  /**\n   * Whether to show header including icon, transaction fee text and edit button\n   */\n  showHeader: PropTypes.bool,\n  /**\n   * Symbol icon\n   */\n  symbol: PropTypes.node,\n  /**\n   * Title to be included in the header\n   */\n  title: PropTypes.string,\n  /**\n   * Whether to show edit button or not\n   */\n  showEdit: PropTypes.bool,\n  /**\n   * Whether to show advanced gas fee options or not\n   */\n  showAdvanceGasFeeOptions: PropTypes.bool,\n  /**\n   * Should open customize gas modal when edit button is clicked\n   */\n  onEditClick: PropTypes.func,\n  /**\n   * Footer to be shown\n   */\n  footer: PropTypes.node,\n  /**\n   * Whether to include border-bottom or not\n   */\n  noBorder: PropTypes.bool,\n  /**\n   * Is enhanced gas fee enabled or not\n   */\n  supportsEIP1559: PropTypes.bool,\n  /**\n   * Whether to render transaction details content or not\n   */\n  renderTransactionDetailsContent: PropTypes.bool,\n  /**\n   * Whether to render data content or not\n   */\n  renderDataContent: PropTypes.bool,\n  /**\n   * Total sum of the transaction in native currency\n   */\n  ethTransactionTotal: PropTypes.string,\n  /**\n   * Current native currency\n   */\n  nativeCurrency: PropTypes.string,\n  /**\n   * Total sum of the transaction in fiat currency\n   */\n  fiatTransactionTotal: PropTypes.string,\n  /**\n   * Current fiat currency\n   */\n  currentCurrency: PropTypes.string,\n  /**\n   * Is set approve for all or not\n   */\n  isSetApproveForAll: PropTypes.bool,\n  /**\n   * Whether a current set approval for all transaction will approve or revoke access\n   */\n  isApprovalOrRejection: PropTypes.bool,\n  /**\n   * Current transaction data\n   */\n  data: PropTypes.string,\n  /**\n   * User acknowledge gas is missing or not\n   */\n  userAcknowledgedGasMissing: PropTypes.bool,\n  /**\n   * Render simulation failure warning\n   */\n  renderSimulationFailureWarning: PropTypes.bool,\n  /**\n   * Fiat conversion control\n   */\n  useCurrencyRateCheck: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { TransactionEnvelopeType } from '@metamask/transaction-controller';\nimport {\n  checkNetworkAndAccountSupports1559,\n  txDataSelector,\n} from '../../../../selectors';\nimport { isLegacyTransaction } from '../../../../helpers/utils/transactions.util';\nimport GasDetailsItem from '../gas-details-item';\nimport { getCurrentDraftTransaction } from '../../../../ducks/send';\nimport { ConfirmLegacyGasDisplay } from './confirm-legacy-gas-display';\n\nconst ConfirmGasDisplay = ({ userAcknowledgedGasMissing = false }) => {\n  const { txParams } = useSelector((state) => txDataSelector(state));\n\n  const draftTransaction = useSelector(getCurrentDraftTransaction);\n  const transactionType = draftTransaction?.transactionType;\n  let isLegacyTxn;\n  if (transactionType) {\n    isLegacyTxn = transactionType === TransactionEnvelopeType.legacy;\n  } else {\n    isLegacyTxn = isLegacyTransaction(txParams);\n  }\n\n  const networkAndAccountSupports1559 = useSelector(\n    checkNetworkAndAccountSupports1559,\n  );\n  const supportsEIP1559 = networkAndAccountSupports1559 && !isLegacyTxn;\n  const dataTestId = 'confirm-gas-display';\n\n  return supportsEIP1559 ? (\n    <GasDetailsItem\n      data-testid={dataTestId}\n      userAcknowledgedGasMissing={userAcknowledgedGasMissing}\n    />\n  ) : (\n    <ConfirmLegacyGasDisplay data-testid={dataTestId} />\n  );\n};\n\nConfirmGasDisplay.propTypes = {\n  userAcknowledgedGasMissing: PropTypes.bool,\n};\n\nexport default ConfirmGasDisplay;\n"]}