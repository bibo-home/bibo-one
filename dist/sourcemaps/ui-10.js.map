{"version":3,"sources":["ui/pages/settings/settings-tab/settings-tab.component.js","ui/pages/settings/settings-tab/settings-tab.container.js","ui/pages/settings/settings.component.js","ui/pages/settings/settings.container.js","ui/pages/smart-transactions/components/smart-transactions-opt-in-modal.tsx","ui/pages/smart-transactions/smart-transaction-status-page/index.ts","ui/pages/smart-transactions/smart-transaction-status-page/smart-transaction-status-page.tsx","ui/pages/snap-account-redirect/components/index.ts","ui/pages/snap-account-redirect/components/redirect-url-icon.tsx","ui/pages/snap-account-redirect/components/snap-account-redirect-context.tsx","ui/pages/snap-account-redirect/components/snap-account-redirect-message.tsx","ui/pages/snap-account-redirect/components/url-display-box.tsx","ui/pages/snap-account-redirect/index.ts","ui/pages/snap-account-redirect/snap-account-redirect.tsx","ui/pages/snap-account-transaction-loading-screen/snap-account-transaction-loading-screen.tsx","ui/pages/snaps/snap-view/constants.ts","ui/pages/snaps/snap-view/index.js","ui/pages/snaps/snap-view/snap-home.js","ui/pages/snaps/snap-view/snap-settings.js","ui/pages/snaps/snap-view/snap-view.js","ui/pages/snaps/snaps-list/index.js","ui/pages/snaps/snaps-list/snap-list.js","ui/pages/swaps/awaiting-signatures/awaiting-signatures.js","ui/pages/swaps/awaiting-signatures/index.js","ui/pages/swaps/awaiting-signatures/swap-step-icon.js","ui/pages/swaps/awaiting-swap/awaiting-swap.js","ui/pages/swaps/awaiting-swap/index.js","ui/pages/swaps/awaiting-swap/quotes-timeout-icon.js","ui/pages/swaps/awaiting-swap/swap-failure-icon.js","ui/pages/swaps/awaiting-swap/swap-success-icon.js","ui/pages/swaps/build-quote/build-quote.js","ui/pages/swaps/build-quote/index.js","ui/pages/swaps/countdown-timer/countdown-timer.js","ui/pages/swaps/countdown-timer/index.js","ui/pages/swaps/create-new-swap/create-new-swap.js","ui/pages/swaps/create-new-swap/index.js","ui/pages/swaps/dropdown-input-pair/dropdown-input-pair.js","ui/pages/swaps/dropdown-input-pair/index.js","ui/pages/swaps/dropdown-search-list/dropdown-search-list.js","ui/pages/swaps/dropdown-search-list/index.js","ui/pages/swaps/exchange-rate-display/exchange-rate-display.js","ui/pages/swaps/exchange-rate-display/index.js","ui/pages/swaps/fee-card/fee-card.js","ui/pages/swaps/fee-card/index.js","ui/pages/swaps/hooks/useUpdateSwapsState.ts","ui/pages/swaps/import-token/import-token.js","ui/pages/swaps/import-token/index.js","ui/pages/swaps/index.js","ui/pages/swaps/list-with-search/list-with-search.js","ui/pages/swaps/loading-swaps-quotes/background-animation.js","ui/pages/swaps/loading-swaps-quotes/index.js","ui/pages/swaps/loading-swaps-quotes/loading-swaps-quotes.js","ui/pages/swaps/main-quote-summary/index.js","ui/pages/swaps/main-quote-summary/main-quote-summary.js","ui/pages/swaps/mascot-background-animation/mascot-background-animation.js","ui/pages/swaps/notification-page/notification-page.js","ui/pages/swaps/prepare-swap-page/prepare-swap-page.js","ui/pages/swaps/prepare-swap-page/quotes-loading-animation.js","ui/pages/swaps/prepare-swap-page/review-quote.js","ui/pages/swaps/prepare-swap-page/slippage-notification-modal.tsx","ui/pages/swaps/prepare-swap-page/view-quote-price-difference.js","ui/pages/swaps/searchable-item-list/index.js","ui/pages/swaps/searchable-item-list/item-list/index.js","ui/pages/swaps/searchable-item-list/item-list/item-list.component.js","ui/pages/swaps/searchable-item-list/list-item-search/index.js","ui/pages/swaps/searchable-item-list/list-item-search/list-item-search.component.js","ui/pages/swaps/searchable-item-list/searchable-item-list.js","ui/pages/swaps/select-quote-popover/index.js","ui/pages/swaps/select-quote-popover/quote-details/index.js","ui/pages/swaps/select-quote-popover/quote-details/quote-details.js","ui/pages/swaps/select-quote-popover/select-quote-popover-constants.js","ui/pages/swaps/select-quote-popover/select-quote-popover.js","ui/pages/swaps/select-quote-popover/sort-list/index.js","ui/pages/swaps/select-quote-popover/sort-list/sort-list.js","ui/pages/swaps/selected-token/selected-token.js","ui/pages/swaps/slippage-buttons/index.js","ui/pages/swaps/slippage-buttons/slippage-buttons.js","ui/pages/swaps/smart-transaction-status/arrow-icon.js","ui/pages/swaps/smart-transaction-status/canceled-icon.js","ui/pages/swaps/smart-transaction-status/index.js","ui/pages/swaps/smart-transaction-status/reverted-icon.js","ui/pages/swaps/smart-transaction-status/smart-transaction-status.js","ui/pages/swaps/smart-transaction-status/success-icon.js","ui/pages/swaps/smart-transaction-status/timer-icon.js","ui/pages/swaps/smart-transaction-status/unknown-icon.js","ui/pages/swaps/swaps-banner-alert/swaps-banner-alert.js","ui/pages/swaps/swaps-footer/index.js","ui/pages/swaps/swaps-footer/swaps-footer.js","ui/pages/swaps/transaction-settings/transaction-settings.js","ui/pages/swaps/view-on-block-explorer/index.js","ui/pages/swaps/view-on-block-explorer/view-on-block-explorer.js","ui/pages/swaps/view-quote/index.js","ui/pages/swaps/view-quote/view-quote-price-difference.js","ui/pages/swaps/view-quote/view-quote.js","ui/pages/token-details/index.js","ui/pages/token-details/token-details-page.js","ui/pages/unlock-page/index.js","ui/pages/unlock-page/unlock-page.component.js","ui/pages/unlock-page/unlock-page.container.js","ui/pages/unlock-page/unlock-page.util.js","ui/selectors/account-abstraction.ts","ui/selectors/accounts.ts","ui/selectors/alerts.ts","ui/selectors/metamask-notifications/authentication.ts","ui/selectors/metamask-notifications/metamask-notifications.ts","ui/selectors/metamask-notifications/profile-syncing.ts","ui/selectors/nft.ts","ui/selectors/signatures.ts"],"names":["_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_classnames","_availableConversions","_designSystem","_dropdown","_toggleButton","_index","_jazzicon","_blockieIdenticon","_metametrics","_settingsSearch","_preferences","_componentLibrary","obj","WeakMap","_defineProperty","key","value","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","currencyOptions","sort","b","name","toLocaleLowerCase","localeCompare","map","code","toUpperCase","localeOptions","locale","SettingsTab","PureComponent","constructor","args","super","this","Array","getNumberOfSettingRoutesInTab","context","fill","createRef","componentDidUpdate","handleSettingsRefs","settingsRefs","componentDidMount","renderCurrentConversion","currentCurrency","setCurrentCurrency","lastFetchedConversionDate","props","createElement","Box","ref","className","display","Display","Flex","flexDirection","FlexDirection","Column","Date","toString","id","options","selectedOption","onChange","newCurrency","trackEvent","category","MetaMetricsEventCategory","Settings","event","MetaMetricsEventName","CurrentCurrency","properties","current_currency","renderCurrentLocale","updateCurrentLocale","currentLocale","currentLocaleMeta","find","currentLocaleName","async","newLocale","renderHideZeroBalanceTokensOptIn","hideZeroBalanceTokens","setHideZeroBalanceTokens","Row","justifyContent","JustifyContent","spaceBetween","alignItems","AlignItems","center","onToggle","offLabel","onLabel","renderBlockieOptIn","useBlockie","setUseBlockie","selectedAddress","tokenList","Text","variant","TextVariant","bodyMd","as","color","TextColor","textDefault","onClick","address","diameter","style","borderRadius","width","height","bodySm","marginTop","marginRight","marginBottom","marginLeft","renderUsePrimaryCurrencyOptions","getPrimaryCurrencySettingForMetrics","UseNativeCurrencyAsPrimaryCurrency","use_native_currency_as_primary_currency","nativeCurrency","setUseNativeCurrencyAsPrimaryCurrencyPreference","useNativeCurrencyAsPrimaryCurrency","type","checked","Boolean","htmlFor","renderTheme","theme","setTheme","themesOptions","ThemeType","light","dark","os","newTheme","theme_selected","render","warning","exports","func","metricsEvent","string","bool","number","object","_reactRedux","_actions","_selectors","_metamask","_settingsTab","connect","state","ownProps","appState","metamask","ticker","getProviderConfig","getSelectedInternalAccount","getPreferences","getTokenList","getTheme","dispatch","currency","setParticipateInMetaMetrics","val","_reactRouterDom","_tabBar","_routes","_metafoxLogo","_util","_app","_alertsTab","_advancedTab","_infoTab","_securityTab","_contactListTab","_experimentalTab","_settingsSearch2","_settingsSearchList","_extends","assign","bind","target","arguments","length","source","apply","SettingsPage","isSearchList","searchResults","searchText","handleConversionDate","conversionDate","setState","handleClickSetting","setting","history","push","route","backRoute","currentPath","mostRecentOverviewPage","addNewNetwork","isPopup","getEnvironmentType","ENVIRONMENT_TYPE_POPUP","SETTINGS_ROUTE","padding","paddingBottom","Fragment","unsetIconHeight","DEFAULT_ROUTE","None","ButtonIcon","ariaLabel","iconName","IconName","ArrowLeft","Color","iconDefault","size","ButtonIconSize","Sm","renderTitle","Block","onSearch","searchQuery","results","settingsRoutesList","getSettingsRoutes","onClickSetting","Close","NETWORKS_ROUTE","renderTabs","renderSubHeader","renderContent","pathnameI18nKey","addressName","titleText","headingMd","isAddressEntryPage","initialBreadCrumbRoute","breadCrumbTextKey","initialBreadCrumbKey","subheaderText","startsWith","paddingLeft","paddingRight","headingSm","tabs","content","icon","Icon","Setting","GENERAL_ROUTE","ADVANCED_ROUTE","Book","CONTACT_LIST_ROUTE","SECURITY_ROUTE","Notification","ALERTS_ROUTE","Flask","EXPERIMENTAL_ROUTE","Info","ABOUT_US_ROUTE","isActive","includes","matchPath","exact","path","onSelect","Switch","Route","routeProps","component","ADD_NETWORK_ROUTE","toggleNetworkMenu","isAddingNewNetwork","Redirect","to","pathname","ADD_POPULAR_CUSTOM_NETWORK","CONTACT_ADD_ROUTE","CONTACT_EDIT_ROUTE","CONTACT_VIEW_ROUTE","isRequired","_redux","_history","_hexstringUtils","_settings","ROUTES_TO_I18N_KEYS","DEVELOPER_OPTIONS_ROUTE","NETWORKS_FORM_ROUTE","compose","withRouter","_currencyRates$ticker","location","currencyRates","pathNameTail","match","isAddContactPage","isEditContactPage","isNetworksFormPage","isAddPopularCustomNetwork","getAddressBookEntryOrAccountName","isBurnAddress","isValidHexAddress","mixedCaseUseChecksum","getMostRecentOverviewPage","payload","isOpen","hideWhatsNewPopup","_useI18nContext","useI18nContext","useDispatch","handleEnableButtonClick","useCallback","setSmartTransactionsOptInStatus","handleNoThanksLinkClick","useEffect","Modal","onClose","isClosedOnOutsideClick","isClosedOnEscapeKey","autoFocus","ModalOverlay","ModalContent","ModalHeader","Benefits","Description","EnableSmartTransactionsButton","NoThanksLink","_smartTransactions","LearnMoreLink","ButtonLink","ButtonLinkSize","Inherit","textProps","flexStart","href","SMART_TRANSACTIONS_LEARN_MORE_URL","rel","Button","ButtonVariant","Primary","BlockSize","Full","Link","textAlternative","Benefit","text","textAlign","TextAlign","Center","IconColor","primaryDefault","fontWeight","FontWeight","Medium","Confirmation","Coin","Clock","_smartTransactionStatusPage","_types","_selectors2","_urls","_conversion","_simulationDetails","_notifications","showRemainingTimeInMinAndSec","remainingTimeInSec","isInteger","Math","floor","padStart","Deadline","isSmartTransactionPending","stxDeadline","timeLeftForPendingStxInSec","description","PortfolioSmartTransactionStatusUrl","portfolioSmartTransactionStatusUrl","onCloseExtension","handleViewTransactionLinkClick","isWiderThanNotificationWidth","window","innerWidth","NOTIFICATION_WIDTH","global","platform","openTab","url","CloseExtensionButton","isDapp","ButtonSecondary","FooterText","ViewActivityButton","onViewActivity","SmartTransactionsStatusPageFooter","Title","title","Bold","SmartTransactionsStatusIcon","iconColor","fontSize","IconSize","SmartTransactionStatusPage","requestState","_smartTransaction$sta","_featureFlags$smartTr","_featureFlags$smartTr2","_fullTxData$simulatio","_fullTxData$simulatio2","smartTransaction","txId","status","SmartTransactionStatuses","PENDING","isSmartTransactionSuccess","SUCCESS","isSmartTransactionCancelled","CANCELLED","featureFlags","useSelector","getFeatureFlagsByChainId","stxEstimatedDeadline","smartTransactions","expectedDeadline","FALLBACK_SMART_TRANSACTIONS_EXPECTED_DEADLINE","stxMaxDeadline","maxDeadline","FALLBACK_SMART_TRANSACTIONS_MAX_DEADLINE","isSmartTransactionTakingTooLong","setTimeLeftForPendingStxInSec","useState","setIsSmartTransactionTakingTooLong","calculateRemainingTime","secondsAfterStxSubmission","creationTime","round","now","intervalId","setInterval","clearInterval","useRemainingTime","chainId","getCurrentChainId","fullTxData","getFullTxData","countdown","InlineBlock","successDefault","Danger","errorDefault","getDisplayValues","hideLoadingIndication","canShowSimulationDetails","simulationData","tokenBalanceChanges","nativeBalanceChange","uuid","BaseUrl","Portfolio","hexToDecimal","borderStyle","BorderStyle","none","flexGrow","SimulationDetails","transactionId","_snapAccountRedirectContext","RedirectUrlIcon","onSubmit","Export","memo","_snapAccountRedirectMessage","snapName","isBlockedUrl","message","paddingTop","gap","headingLg","BannerAlert","severity","BannerAlertSeverity","ButtonSize","_snapDelineator","_urlDisplayBox","SnapAccountRedirectMessage","SnapDelineator","_redirectUrlIcon","UrlDisplayBox","InlineFlex","backgroundColor","BackgroundColor","backgroundDefault","borderWidth","BorderRadius","SM","borderColor","BorderColor","borderDefault","_snapAccountRedirect","_snapAuthorshipHeader","_components","snapId","SnapAccountRedirectContent","_metametrics2","internalAccount","useContext","MetaMetricsContext","_internalAccount$meta","_internalAccount$meta2","SnapAccountTransactionLoadingViewed","Transactions","snap_id","metadata","snap","snap_name","account_type","MetaMetricsEventAccountType","Snap","KeyringSnapRemovalResultStatus","Success","Failed","_snapView","_snapHomeRenderer","SnapHome","SnapHomeRenderer","propTypes","_semver","_snapAuthorshipExpanded","_snapRemoveWarning","_connectedSitesList","_keyringSnapRemovalWarning","_snapPermissionsList","_snaps","_snapUpdateAlert","_showMore","_snaps2","_constants","SnapSettings","initRemove","resetInitRemove","useHistory","snaps","getSnaps","entries","_","snapState","isShowingRemoveWarning","setIsShowingRemoveWarning","isRemovingKeyringSnap","setIsRemovingKeyringSnap","keyringAccounts","setKeyringAccounts","internalAccounts","getMemoizedMetaMaskInternalAccounts","connectedSubjects","getSubjectsWithSnapPermission","permissions","getPermissions","getSnapMetadata","isKeyringSnap","snap_manageAccounts","addresses","getSnapAccountsById","snapIdentities","values","filter","toLowerCase","latestRegistryVersion","getSnapLatestVersion","isUpdateAvailable","gt","version","onUpdateClick","snapToInstall","approvalId","updateSnap","CONNECT_ROUTE","bannerAlertProps","DelineatorType","ShowMore","buttonBackground","bodyLgMedium","showOptions","showAllPermissions","every","subject","isSnapId","origin","some","onDisconnect","connectedOrigin","disconnectOriginFromSnap","danger","Secondary","Lg","disabled","preinstalled","removable","inherit","flexWrap","FlexWrap","NoWrap","ellipsis","overflow","onCancel","removeSnap","snapUrl","onBack","showKeyringSnapRemovalModal","result","_utils","_page","_snapHomeMenu","_snapSettings","_snapHome","useLocation","decodeURIComponent","SNAPS_ROUTE","hasHomePage","hasProperty","showSettings","setShowSettings","setInitRemove","handleBackClick","hidden","boxShadow","Page","hideSnapBranding","showInfo","startAccessory","Md","endAccessory","onSettingsClick","onRemoveClick","isSettingsAvailable","Content","_snapList","_snapListItem","settingsRef","useRef","snapsList","getSnapsList","snapUpdateMap","getAllSnapAvailableUpdates","Header","packageName","getSnapRoute","showUpdateDot","Wrap","Snaps","iconMuted","textMuted","align","Min","flexEnd","BannerTip","logoType","BannerTipLogoType","Greeting","descriptionProps","Size","auto","endIconName","_i18n","I18nContext","fetchParams","_swaps","getFetchParams","_isEqual","destinationTokenInfo","sourceTokenInfo","metaData","approveTxParams","getApproveTxParams","shallowEqual","hardwareWalletUsed","isHardwareWallet","hardwareWalletType","getHardwareWalletType","smartTransactionsOptInStatus","getSmartTransactionsOptInStatus","smartTransactionsEnabled","getSmartTransactionsEnabled","currentSmartTransactionsEnabled","getCurrentSmartTransactionsEnabled","needsTwoConfirmations","Swaps","sensitiveProperties","needs_two_confirmations","token_from","symbol","token_from_amount","token_to","request_type","balanceError","slippage","custom_slippage","is_hardware_wallet","hardware_wallet_type","stx_enabled","current_stx_enabled","stx_user_opt_in","headerText","_box","BLOCK_SIZES","FULL","DISPLAY","FLEX","_pulseLoader","bodyMdBold","_swapStepIcon","stepNumber","variation","_swapsFooter","prepareToLeaveSwaps","BUILD_QUOTE_ROUTE","submitText","hideCancel","_awaitingSignatures","SwapStepIcon","viewBox","xmlns","cx","cy","stroke","strokeWidth","d","_events","_etherscanLink","_mascot","_swaps2","_swaps3","_swaps4","_createNewSwap","_viewOnBlockExplorer","_uiUtils","_swapFailureIcon","_swapSuccessIcon","_quotesTimeoutIcon","AwaitingSwap","swapComplete","errorKey","txHash","tokensReceived","submittingSwap","animationEventEmitter","swapMetaData","fromTokenInputValue","getFromTokenInputValue","maxSlippage","getMaxSlippage","usedQuote","getUsedQuote","swapsGasPrice","getUsedSwapsGasPrice","getCurrentCurrency","usdConversionRate","getUSDConversionRate","rpcPrefs","getRpcPrefsForCurrentProvider","trackedQuotesExpiredEvent","setTrackedQuotesExpiredEvent","feeinUnformattedFiat","_usedQuote$trade","getRenderableNetworkFeesForQuote","tradeGas","gasEstimateWithRefund","averageGas","approveGas","gas","gasPrice","conversionRate","tradeValue","trade","sourceSymbol","sourceAmount","rawNetworkFees","gas_fees","baseNetworkUrl","blockExplorerUrl","SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP","getBlockExplorerLink","hash","statusImage","descriptionText","OFFLINE_FOR_MAINTENANCE","SWAP_FAILED_ERROR","SUPPORT_LINK","SupportLinkClicked","contextPropsIntoEventProperties","MetaMetricsContextProp","PageTitle","URL","hostname","sensitiveTrackingProperties","QUOTES_EXPIRED_ERROR","ERROR_FETCHING_QUOTES","QUOTES_NOT_AVAILABLE_ERROR","CONTRACT_DATA_DISABLED_ERROR","stopPollingForQuotes","current","prepareForRetryGetQuotes","fetchQuotesAndSetQuoteState","navigateBackToBuildQuote","isSwapsDefaultTokenSymbol","setDefaultHomeActiveTabName","oneOf","_awaitingSwap","_bignumber","_lodash","_useTokensToSearch","_useEqualityCheck","_dropdownInputPair","_dropdownSearchList","_slippageButtons","_infoTooltip","_actionableMessage","_usePrevious","_useTokenTracker","_useTokenFiatAmount","_useEthFiatAmount","_stringUtils","_transactionsControllerUtils","_tokenUtil","_swapsUtils","fuseSearchKeys","weight","timeoutIdForQuotesPrefetching","BuildQuote","ethBalance","selectedAccountAddress","shuffledTokensList","_SWAPS_CHAINID_DEFAUL","fetchedTokenExchangeRate","setFetchedTokenExchangeRate","verificationClicked","setVerificationClicked","isFeatureFlagLoaded","getIsFeatureFlagLoaded","getBalanceError","isEqual","tokens","getTokens","topAssets","getTopAssets","fromToken","getFromToken","fromTokenError","getFromTokenError","toToken","getToToken","defaultSwapsToken","getSwapsDefaultToken","quotes","getQuotes","areQuotesPresent","keys","latestAddedTokenTo","getLatestAddedTokenTo","tokenConversionRates","getTokenExchangeRates","getConversionRate","useCurrencyRateCheck","getUseCurrencyRateCheck","smartTransactionFees","getSmartTransactionFees","fetchParamsFromToken","loading","tokensWithBalances","useTokenTracker","fromTokenArray","balance","usersTokens","uniqBy","memoizedUsersTokens","useEqualityCheck","selectedFromToken","getRenderableTokenData","tokensToSearchSwapFrom","useTokensToSearch","topTokens","tokenBucketPriority","TokenBucketPriority","owned","tokensToSearchSwapTo","top","selectedToToken","isEqualCaseInsensitive","toTokenIsNotDefault","isSwapsDefaultTokenAddress","occurrences","occurances","fromTokenAddress","fromTokenSymbol","fromTokenString","decimals","fromTokenDecimals","rawFromTokenBalance","toTokenAddress","fromTokenBalance","calcTokenAmount","prevFromTokenBalance","usePrevious","swapFromTokenFiatValue","useTokenFiatAmount","showFiat","swapFromEthFiatValue","useEthFiatAmount","swapFromFiatValue","onInputChange","newInputValue","setFromTokenInputValue","newBalanceError","setBalanceError","setFromTokenError","countDecimals","onFromSelect","token","fetchTokenPrice","then","rate","usersToken","fetchTokenBalance","ethereumProvider","fetchedBalance","balanceAsDecString","userTokenBalance","setSwapsFromToken","blockExplorerTokenLink","getTokenTrackerLink","blockExplorerLabel","getURLHostName","toAddress","onToSelect","ignoreTokens","tokensToIgnore","dontShowLoadingIndicator","setSwapToToken","hideDropdownItemIf","item","tokensWithBalancesFromToken","previousTokensWithBalancesFromToken","notDefault","addressesAreTheSame","balanceHasChanged","getValueFromWeiHex","numberOfDecimals","toDenomination","trackBuildQuotePageLoadedEvent","resetSwapsPostFetchState","setReviewSwapClickedTimestamp","tradeTxFees","clearSmartTransactionFees","BlockExplorerLink","ExternalLinkClicked","link_type","MetaMetricsEventLinkType","TokenTracker","url_domain","tokenVerificationDescription","swapYourTokenBalance","SWAPS_CHAINID_DEFAULT_TOKEN_MAP","isDirectWrappingEnabled","shouldEnableDirectWrapping","isReviewSwapButtonDisabled","MAX_ALLOWED_SLIPPAGE","clearSwapsQuotes","setTimeout","prefetchQuotesWithoutRedirecting","clearTimeout","itemsToSearch","inputValue","leftValue","selectedItem","maxListItems","selectPlaceHolderText","hideItemIf","listContainerClassName","startingItem","externallySelectedItem","hideRightLabels","defaultToAll","shouldSearchForImports","primaryAction","label","withRightButton","infoTooltipText","action","block_explorer_domain","position","contentText","containerClassName","newSlippage","setMaxSlippage","maxAllowedSlippage","currentSlippage","VIEW_QUOTE_ROUTE","setBackgroundSwapRouteState","LOADING_QUOTES_ROUTE","showTermsOfService","array","_buildQuote","_luxon","_time","getNewTimer","currentTime","timeStarted","timeBaseStart","decreaseTimerByOne","timer","max","SECOND","timeBelowWarningTime","warningTime","warningTimeMinutes","warningTimeSeconds","split","CountdownTimer","timeOnly","timerBase","labelKey","infoTooltipLabelKey","intervalRef","initialTimeStartedRef","swapsQuoteRefreshTime","getSwapsQuoteRefreshTime","swapsQuotePrefetchingRefreshTime","getSwapsQuotePrefetchingRefreshTime","refreshTime","timerStart","setCurrentTime","setTimer","newCurrentTime","formattedTimer","Duration","fromMillis","toFormat","time","_countdownTimer","CreateNewSwap","_textField","characterWidthMap","getInputWidth","reduce","inputWidth","_char","DropdownInputPair","SearchListPlaceholder","setIsOpen","inputRef","applyTwoLineStyle","setApplyTwoLineStyle","_inputRef$current","getBoundingClientRect","onOpen","selectorClosedClassName","placeholder","stopPropagation","valueToUse","test","fullWidth","margin","oneOfType","_searchableItemList","_urlIcon","_importToken","DropdownSearchList","searchListClassName","isImportTokenModalOpen","setIsImportTokenModalOpen","setSelectedItem","tokenForImport","setTokenForImport","setSearchQuery","close","onClickItem","onClickSelector","prevExternallySelectedItemRef","prevExternallySelectedItem","blockExplorerLink","blockExplorerHostName","importTokenProps","onImportTokenCloseClick","onImportTokenClick","chain_id","onKeyUp","tabIndex","iconUrl","ArrowDown","Xs","Placeholder","searchPlaceholderText","onOpenImportTokenModalClick","arrayOf","shape","ExchangeRateDisplay","primaryTokenValue","primaryTokenDecimals","primaryTokenSymbol","secondaryTokenValue","secondaryTokenDecimals","secondaryTokenSymbol","boldSymbols","showIconForSwappingTokens","onQuotesClick","showPrimaryToSecondary","setShowPrimaryToSecondary","primaryTokenAmount","secondaryTokenAmount","conversionRateFromPrimaryToSecondary","div","conversionRateFromSecondaryToPrimary","baseSymbol","ratiodSymbol","rateToDisplay","comparisonSymbol","lt","formatSwapsValueForDisplay","quoteRateClassName","quoteRateColor","SwapHorizontal","iconAlternative","cursor","instanceOf","_exchangeRateDisplay","_zendeskUrl","_transactionDetail","_transactionDetailItem","FeeCard","primaryFee","secondaryFee","hideTokenApprovalRow","tokenApprovalSourceTokenSymbol","onTokenApprovalClick","metaMaskFee","numberOfQuotes","tokenApprovalTextComponent","disableEditGasFeeButton","rows","detailTitle","GAS_FEES","externalLink","wrapperClassName","detailText","fee","detailTotal","subText","maxFee","_feeCard","isSwapsChain","getIsSwapsChain","networkAndAccountSupports1559","checkNetworkAndAccountSupports1559","isBasicFunctionality","getUseExternalServices","fetchTokens","setSwapsTokens","catch","error","console","fetchTopAssets","setTopAssets","fetchAggregatorMetadata","newAggregatorMetadata","setAggregatorMetadata","fetchAndSetSwapsGasPriceInfo","_deprecated","_deprecated2","_deprecated3","ImportToken","modalDialogProps","Severity","AvatarToken","src","AvatarTokenSize","Xl","FormTextField","inputProps","readOnly","BUTTON_VARIANT","SECONDARY","block","BUTTON_SIZES","LG","PRIMARY","_approveTxData$txRece","_tradeTxData$txReceip","_fetchParams$destinat3","_fetchParams$sourceTo3","isAwaitingSwapRoute","AWAITING_SWAP_ROUTE","isAwaitingSignaturesRoute","AWAITING_SIGNATURES_ROUTE","isSwapsErrorRoute","SWAPS_ERROR_ROUTE","isLoadingQuotesRoute","isSmartTransactionStatusRoute","SMART_TRANSACTION_STATUS_ROUTE","isViewQuoteRoute","isPrepareSwapRoute","PREPARE_SWAP_ROUTE","currentStxErrorTracked","setCurrentStxErrorTracked","routeState","getBackgroundSwapRouteState","selectedAccount","getSelectedAccount","txList","getCurrentNetworkTransactions","tradeTxId","getTradeTxId","approveTxId","getApproveTxId","aggregatorMetadata","getAggregatorMetadata","fetchingQuotes","getFetchingQuotes","swapsErrorKey","getSwapsErrorKey","swapsEnabled","getSwapsFeatureIsLive","shuffle","reviewSwapClickedTimestamp","getReviewSwapClickedTimestamp","pendingSmartTransactions","getPendingSmartTransactions","reviewSwapClicked","_selectors3","swapRedesignEnabled","getSwapRedesignEnabled","currentSmartTransactionsError","getCurrentSmartTransactionsError","leaveSwaps","_useGasFeeEstimates","useGasFeeEstimates","approveTxData","tradeTxData","txReceipt","getSwapsTokensReceivedFromTxMeta","tradeConfirmed","_transactionController","TransactionStatus","confirmed","approveError","failed","tradeError","conversionError","clearTemporaryTokenRef","_useUpdateSwapsState","exitEventRef","_fetchParams$sourceTo","_fetchParams$destinat","current_screen","fetchSwapsLivenessAndFeatureFlags","fetchSwapsLivenessAndFeatureFlagsWrapper","beforeUnloadEventAddedRef","fn","addEventListener","removeEventListener","trackErrorStxEvent","_fetchParams$sourceTo2","_fetchParams$destinat2","stx_error","redirectToDefaultRoute","stayOnHomePage","clearSwapsState","resetBackgroundSwapsState","FRACTIONS","ONE_TWELFTH","Arrow2Left","setTransactionSettingsOpened","_featureToggledRoute","redirectRoute","SWAPS_MAINTENANCE_ROUTE","flag","_prepareSwapPage","_viewQuote","submittedTime","SWAPS_NOTIFICATION_ROUTE","_notificationPage","notificationKey","_loadingSwapsQuotes","loadingComplete","onDone","setSwapsErrorKey","_smartTransactionStatus","_loglevel","_itemList","timeoutIdForSearch","ListWithSearch","listTitle","itemListRef","items","setItems","handleSearch","newSearchQuery","trimmedNewSearchQuery","trim","trimmedNewSearchQueryUpperCase","trimmedNewSearchQueryLowerCase","validHexAddress","filteredItems","foundItem","fetchToken","contractAddress","primaryLabel","secondaryLabel","notImported","handleSearchTokenForImport","gridColumnStart","gridColumnEnd","TextFieldSearch","clearButtonOnClick","containerRef","x1","y1","x2","y2","gradientUnits","stopColor","offset","_backgroundAnimation","LoadingSwapsQuotes","quotesFetchStartTime","getQuotesFetchStartTime","quotesRequestCancelledEventConfig","response_time","aggregatorNames","mascotContainer","currentMascotContainer","quoteCount","updateQuoteCount","midPointTarget","setMidpointTarget","timeoutLength","random","quoteCountTimeout","left","x","y","bodyXs","min","textTransform","TextTransform","Capitalize","lookAtTarget","objectOf","_mainQuoteSummary","_tooltip","MainQuoteSummary","sourceValue","sourceDecimals","sourceIconUrl","destinationValue","destinationSymbol","destinationDecimals","destinationIconUrl","toPrecisionWithoutTrailingZeros","destinationAmount","amountToDisplay","amountDigitLength","join","numberFontSize","lineHeight","fontSizeScore","ellipsedAmountToDisplay","slice","fallbackClassName","interactive","html","arrowColor","followMouse","NotificationPage","buttonText","FLEX_DIRECTION","COLUMN","TEXT_ALIGN","CENTER","Warning","_portfolio","_actionConstants","_transactionSettings","_swapsBannerAlert","_selectedToken","_listWithSearch","_quotesLoadingAnimation","_reviewQuote","PrepareSwapPage","receiveToAmount","setReceiveToAmount","isSwapToOpen","setIsSwapToOpen","onSwapToClose","isSwapFromOpen","setIsSwapFromOpen","onSwapFromClose","swapFromSearchQuery","setSwapFromSearchQuery","swapToSearchQuery","setSwapToSearchQuery","prefetchingQuotes","setPrefetchingQuotes","rotateSwitchTokens","setRotateSwitchTokens","transactionSettingsOpened","getTransactionSettingsOpened","numberOfAggregators","isBridgeChain","getIsBridgeChain","metaMetricsId","getMetaMetricsId","isSmartTransaction","isMetaMetricsEnabled","getParticipateInMetaMetrics","isMarketingEnabled","getDataCollectionForMarketing","onQuotesLoadingDone","trackPrepareSwapPageLoadedEvent","yourTokenFromBalance","yourTokenToBalance","mainButtonText","SET_SMART_TRANSACTIONS_ERROR","hideSwapToTokenIf","hideSwapFromTokenIf","showReviewQuote","showQuotesLoadingAnimation","showNotEnoughTokenMessage","showCrossChainSwapsLink","tokenVerifiedOn1Source","receiveToAmountFormatted","receiveToAmountClassName","fromTokenAmountClassName","getClassNameForCharLength","showMaxBalanceLink","selectedToken","testId","TextField","TextFieldSize","truncate","stretch","bodySmBold","Arrow2Down","endIconProps","Normal","portfolioUrl","getPortfolioUrl","BridgeLinkClicked","token_symbol","SEVERITIES","WARNING","DANGER","titleProps","preventDefault","onModalClose","_mascotBackgroundAnimation","QuotesLoadingAnimation","_browser","_selectQuotePopover","_useGasFeeInputs","_confirmApprove","_gas","_transaction","_metamaskControllerUtils","_useRamps","_viewQuotePriceDifference","_slippageNotificationModal","ReviewQuote","_usedQuote$priceSlipp","_usedQuote$priceSlipp2","_usedQuote$priceSlipp3","_usedQuote$priceSlipp4","_usedQuote$priceSlipp5","submitClicked","setSubmitClicked","selectQuotePopoverShown","setSelectQuotePopoverShown","warningHidden","originalApproveAmount","setOriginalApproveAmount","multiLayerL1FeeTotal","setMultiLayerL1FeeTotal","multiLayerL1ApprovalFeeTotal","setMultiLayerL1ApprovalFeeTotal","currentTimestamp","openBuyCryptoInPdapp","acknowledgedPriceDifference","setAcknowledgedPriceDifference","slippageNotificationModalOpened","setSlippageNotificationModalOpened","priceDifferenceRiskyBuckets","GasRecommendations","high","medium","quotesLastFetched","getQuotesLastFetched","prevQuotesLastFetched","customMaxGas","getCustomSwapsGas","customMaxFeePerGas","getCustomMaxFeePerGas","customMaxPriorityFeePerGas","getCustomMaxPriorityFeePerGas","swapsUserFeeLevel","getSwapsUserFeeLevel","memoizedTokenConversionRates","conversionRateSelector","USDConversionRate","swapsTokens","selectedQuote","getSelectedQuote","topQuote","getTopQuote","nativeCurrencySymbol","getNativeCurrency","swapsSTXLoading","getSwapsSTXLoading","smartTransactionsError","getSmartTransactionsError","swapsNetworkConfig","getSwapsNetworkConfig","unsignedTransaction","slippageErrorKey","SLIPPAGE_LOW_ERROR","SLIPPAGE_HIGH_ERROR","gasFeeInputs","useGasFeeInputs","userFeeLevel","fetchParamsSourceToken","sourceToken","additionalTrackingParams","reg_tx_fee_in_usd","reg_tx_fee_in_eth","reg_tx_max_fee_in_usd","reg_tx_max_fee_in_eth","stx_fee_in_usd","stx_fee_in_eth","stx_max_fee_in_usd","stx_max_fee_in_eth","usedGasLimit","decimalToHex","maxGasLimit","calculateMaxGasLimit","gasEstimate","gasMultiplier","maxGas","maxFeePerGas","maxPriorityFeePerGas","baseAndPriorityFeePerGas","suggestedMaxFeePerGas","suggestedMaxPriorityFeePerGas","gasFeeEstimates","estimatedBaseFee","decGWEIToHexWEI","addHexes","gasTotalInWeiHex","calcGasTotal","sumHexes","includeFailedTokens","balanceToken","tokenBalance","toFixed","tokenBalanceUnavailable","approveData","parseStandardTokenTransactionData","data","approveValue","getTokenValueParam","approveAmount","renderablePopoverData","useMemo","quotesToRenderableData","smartTransactionEstimatedGas","renderableDataForUsedQuote","renderablePopoverDatum","aggId","aggregator","destinationTokenDecimals","destinationTokenSymbol","destinationTokenValue","sourceTokenDecimals","sourceTokenSymbol","sourceTokenValue","feeInFiat","feeInEth","rawEthFee","feeInUsd","renderableMaxFees","maxFeeInFiat","maxFeeInEth","maxRawEthFee","maxFeeInUsd","_smartTransactionFees","_smartTransactionFees2","stxEstimatedFeeInWeiDec","feeEstimate","approvalTxFees","stxMaxFeeInWeiDec","maxFeeEstimate","getFeeForSmartTransaction","feeInWeiDec","estimated_gas","gasLimit","tokenCost","ethCost","plus","insufficientTokens","insufficientEth","tokenBalanceNeeded","minus","ethBalanceNeeded","ethBalanceNeededStx","balanceNeededWei","decWEIToDecETH","currentBalanceWei","prevEthBalanceNeededStx","destinationToken","getDestinationTokenInfo","showInsufficientWarning","bestQuoteReviewedEventSent","eventObjectBase","token_to_amount","responseTime","best_quote_source","available_quotes","trackBestQuoteReviewedEvent","network_fees","trackViewQuotePageLoadedEvent","dep","additionalBalanceNeeded","SwapError","error_type","MetaMetricsEventErrorType","InsufficientGas","additional_balance_needed","onFeeCardTokenApprovalClick","custom_spend_limit_set","custom_spend_limit_amount","showModal","setCustomAmount","newCustomPermissionAmount","customPermissionAmount","newData","getCustomTxParamsData","setCustomApproveTxData","tokenAmount","customTokenAmount","tokenSymbol","requiredMinimum","needsMoreGas","actionableBalanceErrorMessage","priceSlippageBucket","priceSlippage","bucket","lastPriceDifferenceBucket","viewQuotePriceDifferenceWarning","priceSlippageFromSource","sourceAmountInETH","priceSlippageFromDestination","destinationAmountInETH","priceSlippageUnknownFiatValue","calculationError","priceDifferencePercentage","ratio","parseFloat","times","prevPriceDifferencePercentage","shouldShowPriceDifferenceWarning","onAcknowledgementClick","acknowledged","isShowingWarning","isSwapButtonDisabled","unsignedTx","from","fetchSwapsSmartTransactionFees","fallbackOnNotEnoughFunds","stxGetTransactionsRefreshTime","setSwapsQuotesPollingLimitEnabled","multiLayerL1TradeFeeTotal","l1ApprovalFeeTotal","getLayer1GasFee","transactionParams","addHexPrefix","l1FeeTotal","captureException","getEstimatedL1Fees","calcTokenValue","onSwapSubmit","acknowledgedSlippage","ASSET_ROUTE","signAndSendSwapsSmartTransaction","signAndSendTransactions","quoteDataRows","swapsQuoteSelected","swapToSymbol","initialAggId","onQuoteDetailsIsOpened","other_quote_selected","other_quote_selected_source","hideEstimatedGasFee","actionButtonLabel","actionButtonOnClick","SIX_TWELFTHS","EIGHT_TWELFTHS","RIGHT","FOUR_TWELFTHS","showTopBorder","submitting","setSubmitting","primaryButtonText","showTransactionSettingsLink","ButtonPrimary","ViewQuotePriceDifference","priceDifferenceTitle","priceDifferenceMessage","priceDifferenceClass","_identicon","_button","ItemList","hasTokenForImport","hasBalance","blocked","identiconAddress","selected","rightPrimaryLabel","rightSecondaryLabel","IconComponent","Element","_listItemSearch","_fuse","_InputAdornment","_searchIcon","renderAdornment","ListItemSearch","listToSearch","fuseRef","fuseSearchResult","search","shouldSort","threshold","distance","maxPatternLength","minMatchCharLength","previousListToSearch","setCollection","startAdornment","autoComplete","SearchableItemList","itemSelectorError","initialResultsState","setResults","newResults","_quoteDetails","QuoteDetails","liquiditySourceKey","minimumAmountReceived","networkFees","alt","QUOTE_DATA_ROWS_PROPTYPES_SHAPE","amountReceiving","isBestQuote","quoteSource","_popover","_sortList","_selectQuotePopoverConstants","SelectQuotePopover","sortDirection","setSortDirection","sortColumn","setSortColumn","selectedAggId","setSelectedAggId","contentView","setContentView","viewingAgg","setViewingAgg","onSubmitClick","closeQuoteDetails","onRowClick","onCaretClick","agg","quote","CustomBackground","footer","subtitle","footerClassName","_sunCheckIcon","ToggleArrows","SortList","noRowHover","setRowNowHover","onColumnHeaderClick","nextSortColumn","sortedRows","rowDataA","rowDataB","aHex","bHex","selectedRow","findIndex","reverseColors","onMouseEnter","onMouseLeave","SelectedToken","hasIcon","_buttonGroup","SlippageButtons","customValue","setCustomValue","Slippage","enteringCustomValue","setEnteringCustomValue","activeButtonIndex","setActiveButtonIndex","open","setOpen","setInputRef","errorText","customValueText","document","activeElement","focus","defaultActiveButtonIndex","newActiveButtonIndex","isNaN","maxLength","onBlur","fillRule","clipRule","_latestSmartTransacti4","_latestSmartTransacti5","_latestSmartTransacti6","_latestSmartTransacti8","_latestSmartTransacti11","_latestSmartTransacti12","_latestSmartTransacti13","_latestSmartTransacti14","_latestSmartTransacti15","cancelSwapLinkClicked","setCancelSwapLinkClicked","fetchParamsDestinationTokenInfo","fetchParamsSourceTokenInfo","currentSmartTransactions","getCurrentSmartTransactions","latestSmartTransactionUuid","cancellationFeeWei","smartTransactionStatus","SmartTransactionStatus","pending","latestSmartTransaction","_latestSmartTransacti","_latestSmartTransacti2","_latestSmartTransacti3","statusMetadata","stxStatusDeadline","swapTokenValue","_latestSmartTransacti7","toPrecision","showCloseButtonOnly","success","minedHash","subDescription","_latestSmartTransacti9","_latestSmartTransacti10","_successIcon","minedTx","cancelled","_canceledIcon","_unknownIcon","_revertedIcon","showCancelSwapLink","cancellable","CancelSwap","cancelSwapsSmartTransaction","BLOCK","_arrowIcon","_timerIcon","cancelText","_bannerAlert","SwapsBannerAlert","transactionSettingsLink","SLIPPAGE_VERY_HIGH_ERROR","SLIPPAGE_NEGATIVE_ERROR","_pageContainerFooter","SwapsFooter","footerButtonClassName","_typography","TransactionSettings","setNewSlippage","didFormChange","notificationText","notificationTitle","notificationSeverity","INFO","isDangerSeverity","TypographyVariant","H6","boxProps","iconFillColor","onKeyDown","ViewOnBlockExplorer","TransactionBlockExplorer","priceDifferenceAcknowledgementText","dispatchedSafeRefetch","setDispatchedSafeRefetch","setWarningHidden","sourceTokenIconUrl","stxMaxFeeMultiplier","timeSinceLastFetched","safeRefetchQuotes","isNotStxAndEthBalanceIsNeeded","isStxAndEthBalanceIsNeeded","trackEditSpendLimitOpened","viewQuotePriceDifferenceComponent","disableSubmissionDueToPriceWarning","maxPriorityFeePerGasDecGWEI","hexWEIToDecGWEI","maxFeePerGasDecGWEI","_tokenDetailsPage","_tokenMetadata$aggreg","_tokensWithBalances$","tokenAddress","useParams","tokenMetadata","aggregators","tokenCurrencyBalance","nickname","networkType","copied","handleCopy","_useCopyToClipboard","useCopyToClipboard","image","overflowWrap","OverflowWrap","BreakWord","CopySuccess","Copy","_network","NETWORK_TYPES","RPC","_unlockPage","_buildTypes","UnlockPage","Component","password","EventEmitter","forceUpdateMetamaskState","Navigation","AppUnlocked","failed_attempts","isNewVisit","AppUnlockedFailed","reason","UNSAFE_componentWillMount","isUnlocked","handleInputChange","element","boundingRect","coordinates","getCaretCoordinates","selectionEnd","emit","scrollLeft","scrollTop","renderSubmitButton","handleSubmit","onRestore","needHelpText","isBeta","tryUnlockMetamask","markPasswordForgotten","stateProps","dispatchProps","restDispatchProps","ownPropsSubmit","restOwnProps","RESTORE_VAULT_ROUTE","openExtensionInBrowser","body","appendChild","computed","getComputedStyle","textContent","span","offsetTop","parseInt","borderTopWidth","offsetLeft","borderLeftWidth","removeChild","_userOperation$userOp","userOperation","getUserOperation","paymasterData","paymasterAndData","_reselect","getUserOperations","userOperations","selectUserOperationMetadata","createSelector","_state","userOperationId","_state$confirmTransac","currentTransaction","confirmTransaction","txData","isUserOperation","selectPaymasterData","userOperationMetadata","_userOperationMetadat","selectPaymasterAddress","hasCreatedBtcAccount","_multichain","isBtcMainnetAddress","isBtcTestnetAddress","isBtcAccount","account","Eoa","Erc4337","_keyringApi","EthAccountType","P2wpkh","BtcAccountType","isAddressCallback","getInternalAccounts","ownerId","confirmAlerts","ownerConfirmed","selectAlerts","alerts","selectGeneralAlerts","alert","field","selectFieldAlerts","getMetamask","selectIsSignedIn","isSignedIn","selectParticipateInMetaMetrics","participateInMetaMetrics","selectSessionData","sessionData","_notificationServicesController","TRIGGER_TYPES","NotificationServicesController","Constants","getMetamaskNotifications","metamaskNotificationsList","getMetamaskNotificationById","createDeepEqualSelector","notifications","notification","getMetamaskNotificationsReadList","metamaskNotificationsReadList","getMetamaskNotificationsUnreadCount","isRead","getFeatureAnnouncementsUnreadCount","FEATURES_ANNOUNCEMENT","getFeatureAnnouncementsReadCount","getOnChainMetamaskNotificationsUnreadCount","getOnChainMetamaskNotificationsReadCount","selectIsMetamaskNotificationsFeatureSeen","isMetamaskNotificationsFeatureSeen","selectIsMetamaskNotificationsEnabled","isNotificationServicesEnabled","selectIsFeatureAnnouncementsEnabled","isFeatureAnnouncementsEnabled","getIsUpdatingMetamaskNotifications","isUpdatingMetamaskNotifications","isFetchingMetamaskNotifications","getIsUpdatingMetamaskNotificationsAccount","isUpdatingMetamaskNotificationsAccount","getIsCheckingAccountsPresence","isCheckingAccountsPresence","selectIsProfileSyncingEnabled","isProfileSyncingEnabled","selectIsProfileSyncingUpdateLoading","isProfileSyncingUpdateLoading","getNftContractsByAddressByChain","allNftContracts","nftContractsByChainByAccount","contract","flat","acc","chainIdContracts","getNftContractsByAddressOnCurrentChain","getMemoizedCurrentChainId","nftContractsByAddressByChain","currentChainId","_transactions","selectUnapprovedMessages","unapprovedPersonalMsgsSelector","unapprovedTypedMessagesSelector","personalMsgs","typedMessages","internalSelectUnapprovedMessage","messageId","messages","selectUnapprovedMessage"],"mappings":"+vBAAA,IAAAA,EA2BkE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA3BlEY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAI,EAAAF,EAAAF,EAAA,0DACAK,EAAAL,EAAA,4CAQAM,EAAAJ,EAAAF,EAAA,oCACAO,EAAAL,EAAAF,EAAA,yCACAQ,EAAAN,EAAAF,EAAA,wCACAS,EAAAP,EAAAF,EAAA,oCACAU,EAAAR,EAAAF,EAAA,sDACAW,EAAAX,EAAA,4CAKAY,EAAAZ,EAAA,0CAIAa,EAAAb,EAAA,4CACAc,EAAAd,EAAA,yCAAkE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAsC,EAAAF,EAAAG,EAAAC,GAAA,OAAAD,EAAA,SAAAE,GAAA,IAAAF,EAAA,SAAAG,EAAAC,GAAA,oBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,GAAAF,IAAAG,UAAA,KAAAC,EAAAJ,EAAA3B,KAAAyB,EAAAC,GAAA,+BAAAK,EAAA,OAAAA,EAAA,UAAAC,UAAA,kEAAAN,EAAAO,OAAAC,QAAAT,EAAA,CAAAU,CAAAX,EAAA,iCAAAF,IAAAW,OAAAX,EAAA,CAAAc,CAAAd,MAAAH,EAAAzB,OAAAC,eAAAwB,EAAAG,EAAA,CAAAC,QAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAG,GAAAC,EAAAJ,CAAA,CAElE,MAIMqB,EAJmBhC,EAAAtB,QAAoBuD,MAAK,CAAChD,EAAGiD,IAC7CjD,EAAEkD,KAAKC,oBAAoBC,cAAcH,EAAEC,KAAKC,uBAGhBE,KAAI,EAAGC,OAAMJ,WAC7C,CACLA,KAAM,GAAGI,EAAKC,mBAAmBL,IACjCpB,MAAOwB,MAILE,EAAgBrC,EAAA1B,QAAQ4D,KAAKI,IAC1B,CACLP,KAAM,GAAGO,EAAOP,OAChBpB,MAAO2B,EAAOH,SAIH,MAAMI,UAAoBrE,EAAAsE,cAAc,WAAAC,IAAAC,GAAAC,SAAAD,GAAAjC,EAAAmC,KAAA,eA2BtCC,OACb,EAAAzC,EAAA0C,+BAA8BF,KAAKG,QAAQxE,EAAGqE,KAAKG,QAAQxE,EAAE,aAE5DyE,KAAK9B,WACLgB,KAAI,IACIhE,EAAAI,QAAM2E,cACb,CAEJ,kBAAAC,GACE,MAAM3E,EAAEA,GAAMqE,KAAKG,SACnB,EAAA3C,EAAA+C,oBAAmB5E,EAAGA,EAAE,WAAYqE,KAAKQ,aAC3C,CAEA,iBAAAC,GACE,MAAM9E,EAAEA,GAAMqE,KAAKG,SACnB,EAAA3C,EAAA+C,oBAAmB5E,EAAGA,EAAE,WAAYqE,KAAKQ,aAC3C,CAEA,uBAAAE,GACE,MAAM/E,EAAEA,GAAMqE,KAAKG,SACbQ,gBAAEA,EAAeC,mBAAEA,EAAkBC,0BAAEA,GAC3Cb,KAAKc,MAEP,OACExF,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFC,IAAKjB,KAAKQ,aAAa,GACvBU,UAAU,6BACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,QAE7BlG,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,YAAOpF,EAAE,uBACTL,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,sCACbL,EACGlF,EAAE,kBAAmB,CACnB,IAAI8F,KAAiC,IAA5BZ,GAAkCa,aAE7C/F,EAAE,+BAGVL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAC7D,EAAAxB,QAAQ,CACP,cAAY,kBACZiG,GAAG,kBACHC,QAAS5C,EACT6C,eAAgBlB,EAChBmB,SAAWC,IACTnB,EAAmBmB,GACnB/B,KAAKG,QAAQ6B,WAAW,CACtBC,SAAU1E,EAAA2E,yBAAyBC,SACnCC,MAAO7E,EAAA8E,qBAAqBC,gBAC5BC,WAAY,CACVC,iBAAkBT,IAEpB,MAOhB,CAEA,mBAAAU,GACE,MAAM9G,EAAEA,GAAMqE,KAAKG,SACbuC,oBAAEA,EAAmBC,cAAEA,GAAkB3C,KAAKc,MAC9C8B,EAAoBxF,EAAA1B,QAAQmH,MAC/BnD,GAAWA,EAAOH,OAASoD,IAExBG,EAAoBF,EAAoBA,EAAkBzD,KAAO,GAEvE,OACE7D,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFC,IAAKjB,KAAKQ,aAAa,GACvBU,UAAU,6BACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,QAE7BlG,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,gCACbvF,EAAE,oBAELL,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,sCACb4B,IAGLxH,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAC7D,EAAAxB,QAAQ,CACP,cAAY,gBACZiG,GAAG,gBACHC,QAASnC,EACToC,eAAgBc,EAChBb,SAAUiB,SAAqBL,EAAoBM,OAM/D,CAEA,gCAAAC,GACE,MAAMtH,EAAEA,GAAMqE,KAAKG,SACb+C,sBAAEA,EAAqBC,yBAAEA,GAA6BnD,KAAKc,MAEjE,OACExF,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFC,IAAKjB,KAAKQ,aAAa,GACvBU,UAAU,6BACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAc6B,IAC7BC,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAWC,OACvB/B,GAAG,uBAEHrG,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,YAAOpF,EAAE,2BAGXL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAC5D,EAAAzB,QAAY,CACXqC,MAAOmF,EACPS,SAAW5F,GAAUoF,GAA0BpF,GAC/C6F,SAAUjI,EAAE,OACZkI,QAASlI,EAAE,SAKrB,CAEA,kBAAAmI,GACE,MAAMnI,EAAEA,GAAMqE,KAAKG,SACb4D,WAAEA,EAAUC,cAAEA,EAAaC,gBAAEA,EAAeC,UAAEA,GAClDlE,KAAKc,MASP,OACExF,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFC,IAAKjB,KAAKQ,aAAa,GACvBU,UAAU,6BACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BG,GAAG,iBAEHrG,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBC,GAAG,KACHC,MAAOvH,EAAAwH,UAAUC,aAEhB/I,EAAE,qBAELL,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,4CACbvF,EAAE,oBAELL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,0CACb5F,EAAAI,QAAAqF,cAAA,UACE,cAAY,YACZ4D,QAAS,IAAMX,GAAc,GAC7B9C,UAAU,gDAEV5F,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,qDACA,CACE,8DACGqI,KAIPzI,EAAAI,QAAAqF,cAAC1D,EAAA3B,QAAQ,CACPiG,GAAG,WACHiD,QAASX,EACTY,SAAU,GACVX,UAAWA,EACXY,MA9CQ,CACpB3D,QAAS,QACT4D,aAAc,OACdC,MAAO,OACPC,OAAQ,WA6CA3J,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUC,YACjBN,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHY,UAAW,EACXC,YAAa,GACbC,aAAc,EACdC,WAAY,GAEX3J,EAAE,eAGPL,EAAAI,QAAAqF,cAAA,UACE,cAAY,eACZ4D,QAAS,IAAMX,GAAc,GAC7B9C,UAAU,gDAEV5F,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,qDACA,CACE,6DACEqI,KAINzI,EAAAI,QAAAqF,cAACzD,EAAA5B,QAAgB,CACfiG,GAAG,WACHiD,QAASX,EACTY,SAAU,GACVE,aAAa,SAGjBzJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUC,YACjBN,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHY,UAAW,EACXC,YAAa,EACbC,aAAc,EACdC,WAAY,GAEX3J,EAAE,gBAOjB,CAEA,+BAAA4J,GACE,MAAM5J,EAAEA,GAAMqE,KAAKG,QACbqF,EAAuCzD,IAC3C/B,KAAKG,QAAQ6B,WAAW,CACtBC,SAAU1E,EAAA2E,yBAAyBC,SACnCC,MAAO7E,EAAA8E,qBAAqBoD,mCAC5BlD,WAAY,CACVmD,wCAAyC3D,IAE3C,GAEE4D,eACJA,EAAcC,gDACdA,EAA+CC,mCAC/CA,GACE7F,KAAKc,MACT,OACExF,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFC,IAAKjB,KAAKQ,aAAa,GACvBU,UAAU,6BACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,QAE7BlG,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,YAAOpF,EAAE,2BACTL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACZvF,EAAE,uCAGPL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,8BACb5F,EAAAI,QAAAqF,cAAA,SACE+E,KAAK,QACL,cAAY,yBACZnE,GAAG,0BACHG,SAAU,KACR8D,GAAgD,GAChDJ,GAAoC,EAAK,EAE3CO,QAASC,QAAQH,KAEnBvK,EAAAI,QAAAqF,cAAA,SACEkF,QAAQ,0BACR/E,UAAU,6BAETyE,IAGLrK,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,8BACb5F,EAAAI,QAAAqF,cAAA,SACE+E,KAAK,QACL,cAAY,uBACZnE,GAAG,wBACHG,SAAU,KACR8D,GAAgD,GAChDJ,GAAoC,EAAM,EAE5CO,SAAUF,IAEZvK,EAAAI,QAAAqF,cAAA,SACEkF,QAAQ,wBACR/E,UAAU,6BAETvF,EAAE,aAQnB,CAEA,WAAAuK,GACE,MAAMvK,EAAEA,GAAMqE,KAAKG,SACbgG,MAAEA,EAAKC,SAAEA,GAAapG,KAAKc,MAE3BuF,EAAgB,CACpB,CACElH,KAAMxD,EAAE,cACRoC,MAAON,EAAA6I,UAAUC,OAEnB,CACEpH,KAAMxD,EAAE,aACRoC,MAAON,EAAA6I,UAAUE,MAEnB,CACErH,KAAMxD,EAAE,WACRoC,MAAON,EAAA6I,UAAUG,KAerB,OACEnL,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFC,IAAKjB,KAAKQ,aAAa,GACvBU,UAAU,6BACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,QAE7BlG,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,YAAOf,KAAKG,QAAQxE,EAAE,UACtBL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACZlB,KAAKG,QAAQxE,EAAE,sBAGpBL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAC7D,EAAAxB,QAAQ,CACPiG,GAAG,eACHC,QAASyE,EACTxE,eAAgBsE,EAChBrE,SA9BQ4E,IAChB1G,KAAKG,QAAQ6B,WAAW,CACtBC,SAAU1E,EAAA2E,yBAAyBC,SACnCC,MAAO,gBACPG,WAAY,CACVoE,eAAgBD,KAGpBN,EAASM,EAAS,MA4BtB,CAEA,MAAAE,GACE,MAAMC,QAAEA,GAAY7G,KAAKc,MAEzB,OACExF,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uBACZ2F,EAAUvL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uBAAuB2F,GAAiB,KACjE7G,KAAKU,0BACLV,KAAKuF,kCACLvF,KAAKyC,sBACLzC,KAAKkG,cACLlG,KAAK8D,qBACL9D,KAAKiD,mCAGZ,EACD6D,EAAApL,QAAAiE,EAAA9B,EA3ZoB8B,EAAW,eACR,CACpBhE,EAAGkB,EAAAnB,QAAUqL,KACbC,aAAcnK,EAAAnB,QAAUqL,KACxB/E,WAAYnF,EAAAnB,QAAUqL,OACvBlJ,EALkB8B,EAAW,YAOX,CACjBqE,cAAenH,EAAAnB,QAAUqL,KACzBnG,mBAAoB/D,EAAAnB,QAAUqL,KAC9BF,QAAShK,EAAAnB,QAAUuL,OACnBvE,oBAAqB7F,EAAAnB,QAAUqL,KAC/BpE,cAAe9F,EAAAnB,QAAUuL,OACzBlD,WAAYlH,EAAAnB,QAAUwL,KACtBvG,gBAAiB9D,EAAAnB,QAAUuL,OAC3BtB,eAAgB9I,EAAAnB,QAAUuL,OAC1BpB,mCAAoChJ,EAAAnB,QAAUwL,KAC9CtB,gDAAiD/I,EAAAnB,QAAUqL,KAC3D7D,sBAAuBrG,EAAAnB,QAAUwL,KACjC/D,yBAA0BtG,EAAAnB,QAAUqL,KACpClG,0BAA2BhE,EAAAnB,QAAUyL,OACrClD,gBAAiBpH,EAAAnB,QAAUuL,OAC3B/C,UAAWrH,EAAAnB,QAAU0L,OACrBjB,MAAOtJ,EAAAnB,QAAUuL,OACjBb,SAAUvJ,EAAAnB,QAAUqL,M,qaCvExB,IAiBmDpJ,EAjBnD0J,EAAAzK,EAAA,eACA0K,EAAA1K,EAAA,0BASA2K,EAAA3K,EAAA,sBAMA4K,EAAA5K,EAAA,oCACA6K,GAAmD9J,EAAnDf,EAAA,8BAAmDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GA6CjDmJ,EAAApL,SAEa,EAAA2L,EAAAK,UA7CS,CAACC,EAAOC,KAC9B,MACEC,UAAUhB,QAAEA,GAASiB,SACrBA,GACEH,GACEhH,gBAAEA,EAAeoD,WAAEA,EAAUpB,cAAEA,GAAkBmF,GAC/CC,OAAQpC,IAAmB,EAAA6B,EAAAQ,mBAAkBL,IAC7C/C,QAASX,IAAoB,EAAAsD,EAAAU,4BAA2BN,IAC1D9B,mCAAEA,EAAkC3C,sBAAEA,IAC1C,EAAAqE,EAAAW,gBAAeP,IAEX9G,0BAAEA,GAA8B+G,EAGtC,MAAO,CACLf,UACAlE,gBACAhC,kBACAgF,iBACA5B,aACA8B,qCACA3C,wBACArC,4BACAoD,kBACAC,WAZgB,EAAAqD,EAAAY,cAAaR,GAa7BxB,OAAO,EAAAoB,EAAAa,UAAST,GACjB,IAGyBU,IACnB,CACLzH,mBAAqB0H,GAAaD,GAAS,EAAAf,EAAA1G,oBAAmB0H,IAC9DtE,cAAgBjG,GAAUsK,GAAS,EAAAf,EAAAtD,eAAcjG,IACjD2E,oBAAsB5E,GAAQuK,GAAS,EAAAf,EAAA5E,qBAAoB5E,IAC3D8H,gDAAkD7H,GACzCsK,GAAS,EAAAf,EAAA1B,iDAAgD7H,IAElEwK,4BAA8BC,GAC5BH,GAAS,EAAAf,EAAAiB,6BAA4BC,IACvCrF,yBAA2BpF,GACzBsK,GAAS,EAAAf,EAAAnE,0BAAyBpF,IACpCqI,SAAWoC,GAAQH,GAAS,EAAAf,EAAAlB,UAASoC,OAI1B,CAA6Cf,EAAA/L,Q,s4BChE5D,IAAAJ,EAqDwD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CArDxDY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACA6L,EAAA7L,EAAA,oBACAG,EAAAD,EAAAF,EAAA,eACA8L,EAAA5L,EAAAF,EAAA,iCAEA+L,EAAA/L,EAAA,kCAmBAY,EAAAZ,EAAA,uCACAc,EAAAd,EAAA,sCAQAK,EAAAL,EAAA,yCAOAgM,EAAA9L,EAAAF,EAAA,qCACAiM,EAAAjM,EAAA,iCACAkM,EAAAlM,EAAA,iCACA6K,EAAA3K,EAAAF,EAAA,mBACAmM,EAAAjM,EAAAF,EAAA,iBACAoM,EAAAlM,EAAAF,EAAA,mBACAqM,EAAAnM,EAAAF,EAAA,eACAsM,EAAApM,EAAAF,EAAA,mBACAuM,EAAArM,EAAAF,EAAA,uBAEAwM,GADAtM,EAAAF,EAAA,4BACAE,EAAAF,EAAA,wBACAyM,EAAAvM,EAAAF,EAAA,sBACA0M,EAAAxM,EAAAF,EAAA,2BAAwD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAgO,IAAA,OAAAA,EAAArN,OAAAsN,OAAAtN,OAAAsN,OAAAC,OAAA,SAAAC,GAAA,QAAAjN,EAAA,EAAAA,EAAAkN,UAAAC,OAAAnN,IAAA,KAAAoN,EAAAF,UAAAlN,GAAA,QAAAqB,KAAA+L,EAAA3N,OAAAI,UAAAC,eAAAC,KAAAqN,EAAA/L,KAAA4L,EAAA5L,GAAA+L,EAAA/L,GAAA,QAAA4L,CAAA,EAAAH,EAAAO,MAAA9J,KAAA2J,UAAA,UAAA9L,EAAAF,EAAAG,EAAAC,GAAA,OAAAD,EAAA,SAAAE,GAAA,IAAAF,EAAA,SAAAG,EAAAC,GAAA,oBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,GAAAF,IAAAG,UAAA,KAAAC,EAAAJ,EAAA3B,KAAAyB,EAAAC,GAAA,+BAAAK,EAAA,OAAAA,EAAA,UAAAC,UAAA,kEAAAN,EAAAO,OAAAC,QAAAT,EAAA,CAAAU,CAAAX,EAAA,iCAAAF,IAAAW,OAAAX,EAAA,CAAAc,CAAAd,MAAAH,EAAAzB,OAAAC,eAAAwB,EAAAG,EAAA,CAAAC,QAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAG,GAAAC,EAAAJ,CAAA,CAExD,MAAMoM,UAAqBzO,EAAAsE,cAAc,WAAAC,IAAAC,GAAAC,SAAAD,GAAAjC,EAAAmC,KAAA,QAsB/B,CACNgK,cAAc,EACdnJ,0BAA2B,KAC3BoJ,cAAe,GACfC,WAAY,IACb,CAED,iBAAAzJ,GACET,KAAKmK,sBACP,CAEA,kBAAA7J,GACEN,KAAKmK,sBACP,CAEA,oBAAAA,GACE,MAAMC,eAAEA,GAAmBpK,KAAKc,MACT,OAAnBsJ,GACFpK,KAAKqK,SAAS,CAAExJ,0BAA2BuJ,GAE/C,CAEA,kBAAAE,CAAmBC,GACjB,MAAMC,QAAEA,GAAYxK,KAAKc,MACzB0J,EAAQC,KAAKF,EAAQG,OACrB1K,KAAKqK,SAAS,CACZL,aAAc,GACdC,cAAe,IAEnB,CAEA,MAAArD,GACE,MAAM4D,QACJA,EAAOG,UACPA,EAASC,YACTA,EAAWC,uBACXA,EAAsBC,cACtBA,GACE9K,KAAKc,OAEHmJ,cAAEA,EAAaD,aAAEA,EAAYE,WAAEA,GAAelK,KAAK2H,OACnDhM,EAAEA,GAAMqE,KAAKG,QACb4K,GAAU,EAAAlC,EAAAmC,wBAAyBlC,EAAAmC,uBAEzC,OACE3P,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,+BAAgC,CACpD,0BAA2BkP,IAAgBjC,EAAAuC,kBAG7C5P,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,wBACViK,QAAS,EACTC,cAAe,CAAC,EAAG,IAEnB9P,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,0CACZ6J,GACCzP,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACGT,IAAgBjC,EAAAuC,eACf5P,EAAAI,QAAAqF,cAAC6H,EAAAlN,QAAW,CACVwF,UAAU,wDACVoK,iBAAe,EACf3G,QAAS5B,SAAYyH,EAAQC,KAAK9B,EAAA4C,eAClCpK,QAAS,CAAClE,EAAAmE,QAAQC,KAAMpE,EAAAmE,QAAQoK,QAGlClQ,EAAAI,QAAAqF,cAACrD,EAAA+N,WAAU,CACTC,UAAW/P,EAAE,QACbgQ,SAAUjO,EAAAkO,SAASC,UACnB3K,UAAU,sDACVsD,MAAOvH,EAAA6O,MAAMC,YACbpH,QAAS,IAAM6F,EAAQC,KAAKE,GAC5BxJ,QAAS,CAAClE,EAAAmE,QAAQC,KAAMpE,EAAAmE,QAAQoK,MAChCQ,KAAMtO,EAAAuO,eAAeC,MAK5BlM,KAAKmM,cACN7Q,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,iDACVC,QAAS,CAAClE,EAAAmE,QAAQgL,QAElB9Q,EAAAI,QAAAqF,cAACsI,EAAA3N,QAAc,CACb2Q,SAAU,EAAGC,cAAc,GAAIC,UAAU,OACvCvM,KAAKqK,SAAS,CACZL,aAA8B,KAAhBsC,EACdrC,cAAesC,EACfrC,WAAYoC,GACZ,EAEJE,oBAAoB,EAAAhP,EAAAiP,uBAErBzC,GAAgBE,EAAWN,QAAU,GACpCtO,EAAAI,QAAAqF,cAACuI,EAAA5N,QAAkB,CACjB6Q,QAAStC,EACTyC,eAAiBnC,GAAYvK,KAAKsK,mBAAmBC,MAI3DjP,EAAAI,QAAAqF,cAACrD,EAAA+N,WAAU,CACTvK,UAAU,uDACVyK,SAAUjO,EAAAkO,SAASe,MACnBjB,UAAW/P,EAAE,SACbgJ,QAAS,KACHmG,EACFN,EAAQC,KAAK9B,EAAAiE,gBAEbpC,EAAQC,KAAKI,EACf,EAEFmB,KAAMtO,EAAAuO,eAAeC,GACrB5G,WAAW,WAKjBhK,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,0BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACZlB,KAAK6M,cAERvR,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACZlB,KAAK8M,kBACL9M,KAAK+M,kBAKhB,CAEA,WAAAZ,GACE,MAAMxQ,EAAEA,GAAMqE,KAAKG,SACb4K,QAAEA,EAAOiC,gBAAEA,EAAeC,YAAEA,GAAgBjN,KAAKc,MACvD,IAAIoM,EASJ,OAPEA,EAAYvR,EADVoP,GAAWkC,EACC,UACLD,GAAmBjC,EACdiC,EAEA,YAId1R,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iDACb5F,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAY8I,WAAYD,GAG7C,CAEA,eAAAJ,GACE,MAAMnR,EAAEA,GAAMqE,KAAKG,SACbyK,YACJA,EAAWG,QACXA,EAAOqC,mBACPA,EAAkBJ,gBAClBA,EAAeC,YACfA,EAAWI,uBACXA,EAAsBC,kBACtBA,EAAiB9C,QACjBA,EAAO+C,qBACPA,GACEvN,KAAKc,MAET,IAAI0M,EAYJ,OATEA,EAAgB7R,EADdoP,GAAWqC,EACK,WACTA,EACS,WACTG,IAGSP,GAAmB,aAIpCpC,EAAY6C,WAAW9E,EAAAiE,iBACtBtR,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,2BACViK,QAAS,EACTuC,YAAa,EACbC,aAAc,EACdxM,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAc6B,IAC7BI,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHjD,WAAW,EAAAnE,EAAArB,SAAW,CACpB,iCAAkC2R,IAEpCjJ,QAASnH,EAAAoH,YAAYuJ,UACrBjJ,QAAS,IACP0I,GAA0B7C,EAAQC,KAAK4C,IAGxCG,GAEFF,GACChS,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAA,YAAO,OACNpF,EAAE2R,IAGNF,GACC9R,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAA,YAAO,OACNkM,GAMb,CAEA,UAAAJ,GACE,MAAMrC,QAAEA,EAAOI,YAAEA,GAAgB5K,KAAKc,OAChCnF,EAAEA,GAAMqE,KAAKG,QAEb0N,EAAO,CACX,CACEC,QAASnS,EAAE,WACXoS,KAAMzS,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAASqC,UAC3BnQ,IAAK6K,EAAAuF,eAEP,CACEJ,QAASnS,EAAE,YACXoS,KAAMzS,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,qBACnBpD,IAAK6K,EAAAwF,gBAEP,CACEL,QAASnS,EAAE,YACXoS,KAAMzS,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAASwC,OAC3BtQ,IAAK6K,EAAA0F,oBAEP,CACEP,QAASnS,EAAE,sBACXoS,KAAMzS,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,eACnBpD,IAAK6K,EAAA2F,gBAEP,CACER,QAASnS,EAAE,UACXoS,KAAMzS,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAAS2C,eAC3BzQ,IAAK6K,EAAA6F,cAEP,CACEV,QAASnS,EAAE,gBACXoS,KAAMzS,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAAS6C,QAC3B3Q,IAAK6K,EAAA+F,oBAEP,CACEZ,QAASnS,EAAE,SACXoS,KAAMzS,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAAS+C,OAC3B7Q,IAAK6K,EAAAiG,iBAYT,OACEtT,EAAAI,QAAAqF,cAAC2H,EAAAhN,QAAM,CACLmS,KAAMA,EACNgB,SAAW/Q,GACLA,IAAQ6K,EAAAuF,eAAiBtD,IAAgBjC,EAAAuC,mBAI3CpN,IAAQ6K,EAAA0F,qBACRzD,EAAYkE,SAASnG,EAAA0F,uBAIhB,EAAA5F,EAAAsG,WAAUnE,EAAa,CAAEoE,OAAO,EAAMC,KAAMnR,KAErDoR,SAAWpR,GAAQ0M,EAAQC,KAAK3M,IAGtC,CAEA,aAAAiP,GACE,OACEzR,EAAAI,QAAAqF,cAAC0H,EAAA0G,OAAM,KACL7T,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJJ,OAAK,EACLC,KAAMtG,EAAAuF,cACNtH,OAASyI,GACP/T,EAAAI,QAAAqF,cAAC0G,EAAA/L,QAAW6N,EAAA,GACN8F,EAAU,CACdxO,0BAA2Bb,KAAK2H,MAAM9G,+BAI5CvF,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CAACJ,OAAK,EAACC,KAAMtG,EAAAiG,eAAgBU,UAAWrG,EAAAvN,UAC9CJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CAACJ,OAAK,EAACC,KAAMtG,EAAAwF,eAAgBmB,UAAWtG,EAAAtN,UAC9CJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CAACJ,OAAK,EAACC,KAAMtG,EAAA6F,aAAcc,UAAWvG,EAAArN,UAC5CJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJJ,OAAK,EACLC,KAAMtG,EAAA4G,kBACN3I,OAAQ,KACN5G,KAAKc,MAAM0O,kBAAkB,CAAEC,oBAAoB,IAC5CnU,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA4C,oBAGrCjQ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJJ,OAAK,EACLC,KAAMtG,EAAAiE,eACNhG,OAAQ,KACN5G,KAAKc,MAAM0O,oBACJlU,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA4C,oBAGrCjQ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJJ,OAAK,EACLC,KAAMtG,EAAAkH,2BACNjJ,OAAQ,KACN5G,KAAKc,MAAM0O,oBACJlU,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA4C,oBAGrCjQ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CAACJ,OAAK,EAACC,KAAMtG,EAAA2F,eAAgBgB,UAAWpG,EAAAxN,UAC9CJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CAACJ,OAAK,EAACC,KAAMtG,EAAA+F,mBAAoBY,UAAWlG,EAAA1N,WACjD,EAODJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CAACJ,OAAK,EAACC,KAAMtG,EAAA0F,mBAAoBiB,UAAWnG,EAAAzN,UAClDJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CAACJ,OAAK,EAACC,KAAMtG,EAAAmH,kBAAmBR,UAAWnG,EAAAzN,UACjDJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJJ,OAAK,EACLC,KAAM,GAAGtG,EAAAoH,yBACTT,UAAWnG,EAAAzN,UAEbJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJJ,OAAK,EACLC,KAAM,GAAGtG,EAAAqH,yBACTV,UAAWnG,EAAAzN,UAEbJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJxI,OAASyI,GACP/T,EAAAI,QAAAqF,cAAC0G,EAAA/L,QAAW6N,EAAA,GACN8F,EAAU,CACdxO,0BAA2Bb,KAAK2H,MAAM9G,+BAMlD,EACDhD,EA1XKkM,EAAY,YACG,CACjBe,cAAejO,EAAAnB,QAAUwL,KACzB+F,YAAapQ,EAAAnB,QAAUuL,OACvB0D,UAAW9N,EAAAnB,QAAUuL,OACrBqG,kBAAmBzQ,EAAAnB,QAAUuL,OAC7BmD,eAAgBvN,EAAAnB,QAAUyL,OAC1ByD,YAAa/N,EAAAnB,QAAUuL,OACvBuD,QAAS3N,EAAAnB,QAAU0L,OACnBmG,qBAAsB1Q,EAAAnB,QAAUuL,OAChCoG,uBAAwBxQ,EAAAnB,QAAUuL,OAClCmG,mBAAoBvQ,EAAAnB,QAAUwL,KAC9B6D,QAASlO,EAAAnB,QAAUwL,KACnB2D,uBAAwBhO,EAAAnB,QAAUuL,OAAOgJ,WACzCjD,gBAAiBnQ,EAAAnB,QAAUuL,OAC3BuI,kBAAmB3S,EAAAnB,QAAUqL,KAAKkJ,aACnCpS,EAhBGkM,EAAY,eAkBM,CACpBpO,EAAGkB,EAAAnB,QAAUqL,OACdD,EAAApL,QAwWYqO,C,2mBCnbf,IAgC4CpM,EAhC5CuS,EAAAtT,EAAA,SACAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACA2K,EAAA3K,EAAA,mBACAkM,EAAAlM,EAAA,iCACAiM,EAAAjM,EAAA,iCACAuT,EAAAvT,EAAA,+BACAwT,EAAAxT,EAAA,2CAKA+L,EAAA/L,EAAA,kCAkBA4K,EAAA5K,EAAA,iCACA0K,EAAA1K,EAAA,uBACAyT,GAA4C1S,EAA5Cf,EAAA,0BAA4Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GAE5C,MAAM2S,EAAsB,CAC1B,CAAC3H,EAAAiG,gBAAiB,QAClB,CAACjG,EAAA4G,mBAAoB,WACrB,CAAC5G,EAAAkH,4BAA6B,aAC9B,CAAClH,EAAAwF,gBAAiB,WAClB,CAACxF,EAAA6F,cAAe,SAChB,CAAC7F,EAAAmH,mBAAoB,aACrB,CAACnH,EAAAoH,oBAAqB,cACtB,CAACpH,EAAA0F,oBAAqB,WACtB,CAAC1F,EAAAqH,oBAAqB,cACtB,CAACrH,EAAA4H,yBAA0B,mBAC3B,CAAC5H,EAAA+F,oBAAqB,eACtB,CAAC/F,EAAAuF,eAAgB,UACjB,CAACvF,EAAA6H,qBAAsB,WACvB,CAAC7H,EAAAiE,gBAAiB,WAClB,CAACjE,EAAA2F,gBAAiB,sBAqEnBxH,EAAApL,SAEc,EAAAwU,EAAAO,SACbhI,EAAAiI,YACA,EAAArJ,EAAAK,UAtEsB,CAACC,EAAOC,KAAa,IAAA+I,EAC3C,MAAMC,SAAEA,GAAahJ,GACfgI,SAAEA,GAAagB,GACf7I,OAAEA,IAAW,EAAAP,EAAAQ,mBAAkBL,IAEnCG,UAAU+I,cAAEA,IACVlJ,EAEEyC,EAAsC,QAAxBuG,EAAGE,EAAc9I,UAAO,IAAA4I,OAAA,EAArBA,EAAuBvG,eAExC0G,EAAelB,EAASmB,MAAM,WAAW,GACzC3D,EAAqB0D,EAAahC,SAAS,MAC3CkC,EAAmBhL,QAAQ4J,EAASmB,MAAMpI,EAAAmH,oBAC1CmB,EAAoBjL,QAAQ4J,EAASmB,MAAMpI,EAAAoH,qBAC3CmB,EACJlL,QAAQ4J,EAASmB,MAAMpI,EAAA6H,uBACvBxK,QAAQ4J,EAASmB,MAAMpI,EAAA4G,oBACnBzE,EAAgB9E,QAAQ4J,EAASmB,MAAMpI,EAAA4G,oBACvC4B,EAA4BnL,QAChC4J,EAASmB,MAAMpI,EAAAkH,6BAGX9E,GAAU,EAAAlC,EAAAmC,wBAAyBlC,EAAAmC,uBACnC+B,EAAkBsD,EAAoBV,GAE5C,IAAIjF,EAAYhC,EAAAuC,eACZ+F,EACFtG,EAAY,GAAGhC,EAAAqH,sBAAsBc,IAC5B1D,GAAsB4D,EAC/BrG,EAAYhC,EAAA0F,oBACH6C,GAEAC,KADTxG,EAAYhC,EAAAiE,gBAgBd,MAAO,CACL9B,gBACAmC,aAVkB,EAAA1F,EAAA6J,kCAClBzJ,IACC,EAAAyI,EAAAiB,eAAcP,KACb,EAAAV,EAAAkB,mBAAkBR,EAAc,CAAES,sBAAsB,IACtDT,EACA,IAMJnG,YACAP,iBACAQ,YAAagF,EACbrC,qBAhBEA,UAiBFF,uBAlBEA,UAmBFD,qBACArC,UACAF,wBAAwB,EAAAsF,EAAAqB,2BAA0B7J,GAClDqF,kBACD,IAGH,SAA4B3E,GAC1B,MAAO,CACLmH,kBAAoBiC,GAAYpJ,GAAS,EAAAf,EAAAkI,mBAAkBiC,IAE/D,IAEe,CAGbpB,EAAA3U,Q,8eCqCa,UAAqCgW,OAClDA,EAAMC,kBACNA,IAEA,MAAMhW,GAAI,EAAAiW,EAAAC,kBACJxJ,GAAW,EAAAhB,EAAAyK,eAEXC,GAA0B,EAAAzW,EAAA0W,cAAY,KAC1C3J,GAAS,EAAAf,EAAA2K,kCAAgC,GAAM,GAC9C,CAAC5J,IAEE6J,GAA0B,EAAA5W,EAAA0W,cAAY,KAE1C3J,GAAS,EAAAf,EAAA2K,kCAAgC,GAAO,GAC/C,CAAC5J,IAWJ,OATA,EAAA/M,EAAA6W,YAAU,KACHT,GAKLC,GAAmB,GAClB,CAACD,EAAQC,IAGVrW,EAAAI,QAAAqF,cAACrD,EAAA0U,MAAK,CACJV,OAAQA,EACRW,QAASN,EACTO,wBAAwB,EACxBC,qBAAqB,EACrBrR,UAAU,gEACVsR,WAAW,GAEXlX,EAAAI,QAAAqF,cAACrD,EAAA+U,aAAY,MACbnX,EAAAI,QAAAqF,cAACrD,EAAAgV,aAAY,KACXpX,EAAAI,QAAAqF,cAACrD,EAAAiV,YAAW,CACVnP,WAAYvG,EAAAwG,WAAWC,OACvBL,eAAgBpG,EAAAqG,eAAeI,QAE9B/H,EAAE,qCAELL,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BkM,YAAa,EACbC,aAAc,GAEdrS,EAAAI,QAAAqF,cAAC6R,EAAQ,MACTtX,EAAAI,QAAAqF,cAAC8R,EAAW,MACZvX,EAAAI,QAAAqF,cAAC+R,EAA6B,CAC5Bf,wBAAyBA,IAE3BzW,EAAAI,QAAAqF,cAACgS,EAAY,CAACb,wBAAyBA,MAKjD,EA1NA,IAAA5W,EA+BmG,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA/BnGY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eAEAgV,EAAAhV,EAAA,iCACAK,EAAAL,EAAA,4CAYAc,EAAAd,EAAA,yCAcA0K,EAAA1K,EAAA,0BACAoW,EAAApW,EAAA,kDAAmG,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAOnG,MAAM0X,EAAgB,KACpB,MAAMtX,GAAI,EAAAiW,EAAAC,kBACV,OACEvW,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTlH,KAAMtO,EAAAyV,eAAeC,QACrBC,UAAW,CACTjP,QAASnH,EAAAoH,YAAYC,OACrBd,WAAYvG,EAAAwG,WAAW6P,WAEzB/O,GAAG,IACHgP,KAAMP,EAAAQ,kCACN9J,OAAO,SACP+J,IAAI,uBAEH9X,EAAE,6BACQ,EAIXmX,EAAgC,EACpCf,8BAIA,MAAMpW,GAAI,EAAAiW,EAAAC,kBACV,OACEvW,EAAAI,QAAAqF,cAACrD,EAAAgW,OAAM,CACLvO,UAAW,EACXf,QAAS1G,EAAAiW,cAAcC,QACvBjP,QAASoN,EACT/M,MAAO/H,EAAA4W,UAAUC,MAEhBnY,EAAE,UACI,EAIPoX,EAAe,EACnBb,8BAIA,MAAMvW,GAAI,EAAAiW,EAAAC,kBACV,OACEvW,EAAAI,QAAAqF,cAACrD,EAAAgW,OAAM,CACLvO,UAAW,EACXW,KAAK,OACL1B,QAAS1G,EAAAiW,cAAcI,KACvBvP,MAAOvH,EAAAwH,UAAUuP,gBACjBrP,QAASuN,EACTlN,MAAO/H,EAAA4W,UAAUC,KACjB5S,UAAU,sDAETvF,EAAE,YACI,EAIPkX,EAAc,KAClB,MAAMlX,GAAI,EAAAiW,EAAAC,kBACV,OACEvW,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACG,QAASlE,EAAAmE,QAAQC,KAAMC,cAAerE,EAAAsE,cAAcC,QACvDlG,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQa,UAAW,GAC3CxJ,EAAE,iCAELL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQa,UAAW,GAC3CxJ,EAAE,gCAAiC,CAACL,EAAAI,QAAAqF,cAACkS,EAAa,SAEjD,EAIJgB,EAAU,EAAGC,OAAMvI,cAErBrQ,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BN,UAAU,8CACViT,UAAWlX,EAAAmX,UAAUC,OACrB7Q,WAAYvG,EAAAwG,WAAWC,OACvBL,eAAgBpG,EAAAqG,eAAegQ,WAE/BhY,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMwM,EACNnH,MAAOvH,EAAAqX,UAAUC,eACjBrT,UAAU,6CAEZ5F,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBsP,WAAYvX,EAAAwX,WAAWC,OACvBvP,UAAW,GAEV+O,IAMHtB,EAAW,KACf,MAAMjX,GAAI,EAAAiW,EAAAC,kBACV,OACEvW,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAc6B,IAC7BC,eAAgBpG,EAAAqG,eAAeI,OAC/ByB,UAAW,EACXuI,YAAa,EACbC,aAAc,GAEdrS,EAAAI,QAAAqF,cAACkT,EAAO,CACNC,KAAMvY,EAAE,6BACRgQ,SAAUjO,EAAAkO,SAAS+I,eAErBrZ,EAAAI,QAAAqF,cAACkT,EAAO,CAACC,KAAMvY,EAAE,6BAA8BgQ,SAAUjO,EAAAkO,SAASgJ,OAClEtZ,EAAAI,QAAAqF,cAACkT,EAAO,CACNC,KAAMvY,EAAE,6BACRgQ,SAAUjO,EAAAkO,SAASiJ,QAEjB,C,iaC5JV,IAAwFlX,EAAxFmX,GAAwFnX,EAAxFf,EAAA,qCAAwFe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,m5BCAxF,IAAArC,EAyCgF,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAzChFY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAmY,EAAAnY,EAAA,sDAKAc,EAAAd,EAAA,yCAUAK,EAAAL,EAAA,4CAaAgV,EAAAhV,EAAA,iCACA2K,EAAA3K,EAAA,sBACAoY,EAAApY,EAAA,wCACAqY,EAAArY,EAAA,qCACAoW,EAAApW,EAAA,kDAIA0K,EAAA1K,EAAA,0BACAsY,EAAAtY,EAAA,+CACAuY,EAAAvY,EAAA,qDACAwY,EAAAxY,EAAA,8CAAgF,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAczE,MAAM8Z,EACXC,IAEA,IAAK5W,OAAO6W,UAAUD,GACpB,MAAO,OAIT,MAAO,GAFSE,KAAKC,MAAMH,EAAqB,QAChCA,EAAqB,IACR5T,WAAWgU,SAAS,EAAG,MAAM,EAC1D5O,EAAAuO,+BAEF,MA+GMM,EAAW,EACfC,4BACAC,cACAC,gCAMKF,EAIHta,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,OACvBsB,MAAO/H,EAAA4W,UAAUC,MAEjBxY,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wDACb5F,EAAAI,QAAAqF,cAAA,OACEG,UAAU,6CACV4D,MAAO,CACLE,MACG,IAAM6Q,GAAgBA,EAAcC,GADhC,SAbR,KAuBLjD,EAAc,EAAGkD,iBAChBA,EAKHza,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,OACvBxC,UAAU,8CAEV5F,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHgB,UAAW,EACXX,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYa,QAEpB6Q,IAfE,KAqBLC,EAAqC,EACzCC,qCACAL,4BACAM,uBAMA,MAAMva,GAAI,EAAAiW,EAAAC,kBACV,IAAKoE,EACH,OAAO,KAET,MAAME,GAAiC,EAAA7a,EAAA0W,cAAY,KACjD,MAAMoE,EAA+BC,OAAOC,WAAalB,EAAAmB,mBACpDX,IAA6BQ,GAChCF,IAEFM,OAAOC,SAASC,QAAQ,CACtBC,IAAKV,GACL,GACD,CACDL,EACAM,EACAD,IAEF,OACE3a,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7B2D,UAAW,GAEX7J,EAAAI,QAAAqF,cAACrD,EAAAgW,OAAM,CACL5N,KAAK,OACL1B,QAAS1G,EAAAiW,cAAcI,KACvBpP,QAASwR,GAERxa,EAAE,oBAED,EAIJib,EAAuB,EAC3BC,SACAX,uBAKA,MAAMva,GAAI,EAAAiW,EAAAC,kBACV,OAAKgF,EAIHvb,EAAAI,QAAAqF,cAACrD,EAAAoZ,gBAAe,CACd,cAAY,oDACZnS,QAASuR,EACTlR,MAAO/H,EAAA4W,UAAUC,KACjB3O,UAAW,GAEVxJ,EAAE,mBATE,IAUW,EAIhBob,EAAa,EACjBF,SACAjB,gCAKA,MAAMja,GAAI,EAAAiW,EAAAC,kBACV,OAAKgF,GAAWjB,EAIdta,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHgB,UAAW,EACXX,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYa,QAEpBvJ,EAAE,uBARE,IASA,EAILqb,EAAqB,EACzBH,SACAI,qBAKA,MAAMtb,GAAI,EAAAiW,EAAAC,kBACV,OAAIgF,EACK,KAGPvb,EAAAI,QAAAqF,cAACrD,EAAAoZ,gBAAe,CACd,cAAY,oDACZnS,QAASsS,EACTjS,MAAO/H,EAAA4W,UAAUC,KACjB3O,UAAW,GAEVxJ,EAAE,gBACa,EAIhBub,EAAoC,EACxCL,SACAjB,4BACAM,mBACAe,oBAQE3b,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,wCACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BwD,MAAO/H,EAAA4W,UAAUC,KACjB3I,QAAS,EACTC,cAAe,GAEf9P,EAAAI,QAAAqF,cAACgW,EAAU,CACTF,OAAQA,EACRjB,0BAA2BA,IAE7Bta,EAAAI,QAAAqF,cAAC6V,EAAoB,CACnBC,OAAQA,EACRX,iBAAkBA,IAEpB5a,EAAAI,QAAAqF,cAACiW,EAAkB,CAACH,OAAQA,EAAQI,eAAgBA,KAKpDE,EAAQ,EAAGC,WAEb9b,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUC,YACjBN,QAASnH,EAAAoH,YAAY8I,UACrB5I,GAAG,KACHiQ,WAAYvX,EAAAwX,WAAW4C,MAEtBD,GAKDE,EAA8B,EAClC3L,WACA4L,eAMEjc,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACG,QAASlE,EAAAmE,QAAQC,KAAMyD,MAAO,CAAE0S,SAAU,SAC7Clc,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMwM,EACNnH,MAAO+S,EACPvL,KAAMtO,EAAA+Z,SAASrE,QACf/N,aAAc,KAMTqS,EAA6B,EACxCC,eACAzB,mBACAe,qBACqC,IAAAW,EAAAC,EAAAC,EAAAC,EAAAC,EACrC,MAAMrc,GAAI,EAAAiW,EAAAC,kBACJxJ,GAAW,EAAAhB,EAAAyK,gBACXmG,iBAAEA,EAAgBpB,OAAEA,EAAMqB,KAAEA,GAASP,EACrC/B,GACHqC,GACDA,EAAiBE,SAAWpD,EAAAqD,yBAAyBC,QACjDC,GACJL,aAAgB,EAAhBA,EAAkBE,UAAWpD,EAAAqD,yBAAyBG,QAClDC,EAA8BxS,QAClCiS,SAAwB,QAARL,EAAhBK,EAAkBE,cAAM,IAAAP,OAAA,EAAxBA,EAA0BnK,WAAWsH,EAAAqD,yBAAyBK,YAE1DC,GAKK,EAAArR,EAAAsR,aAAY3D,EAAA4D,0BACjBC,GACJH,SAA+B,QAAnBb,EAAZa,EAAcI,yBAAiB,IAAAjB,OAAA,EAA/BA,EAAiCkB,mBACjC/F,EAAAgG,8CACIC,GACJP,SAA+B,QAAnBZ,EAAZY,EAAcI,yBAAiB,IAAAhB,OAAA,EAA/BA,EAAiCoB,cACjClG,EAAAmG,0CACIrD,2BACJA,EAA0BsD,gCAC1BA,EAA+BvD,YAC/BA,GAlUqB,GACvBD,4BACAqC,mBACAgB,iBACAJ,2BAOA,MAAO/C,EAA4BuD,IACjC,EAAA/d,EAAAge,UAAS,IACJF,EAAiCG,IACtC,EAAAje,EAAAge,WAAS,GACLzD,EAAcuD,EAChBH,EACAJ,EAmCJ,OAjCA,EAAAvd,EAAA6W,YAAU,KACR,IAAKyD,EACH,OAGF,MAAM4D,EAAyB,KAC7B,MAAMC,EAA4BxB,WAAkByB,aAChDlE,KAAKmE,OAAOlY,KAAKmY,MAAQ3B,EAAiByB,cAAgB,KAC1D,EAEJ,GAAID,EAA4B5D,EAK9B,OAJAwD,EAA8B,QACzBD,GACHG,GAAmC,IAKvCF,EAA8BxD,EAAc4D,EAA0B,EAGlEI,EAAaC,YAAYN,EAAwB,KAIvD,OAHAA,IAGO,IAAMO,cAAcF,EAAW,GACrC,CACDjE,EACAwD,EACAnB,aAAgB,EAAhBA,EAAkByB,aAClB7D,IAGK,CACLC,6BACAsD,kCACAvD,cACD,EA2QGmE,CAAiB,CACnBpE,4BACAqC,mBACAgB,iBACAJ,yBAEIoB,GAAkB,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBAG9BC,GAAa,EAAA9S,EAAAsR,cAAahR,IAAU,EAAAJ,EAAA6S,eAAczS,EAAOuQ,MAAU,CAAC,EAEpEmC,EAAYzE,EAChBta,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHhD,QAASlE,EAAAmE,QAAQkZ,YACjBnG,UAAWlX,EAAAmX,UAAUC,OACrB7P,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYa,OACrBhE,UAAU,4CAETmU,EAA6BS,IAE9BxX,WAEE8Y,MAAEA,EAAKrB,YAAEA,EAAWpK,SAAEA,EAAQ4L,UAAEA,GA9Yf,GACvB5b,IACA0e,YACAzE,4BACAwD,kCACAd,4BACAE,iCASI5C,GAA6BwD,EACxB,CACLhC,MAAOzb,EAAE,iCACToa,YAAapa,EAAE,2CAA4C,CAAC0e,IAC5D1O,SAAUjO,EAAAkO,SAASiJ,MACnB0C,UAAWta,EAAAqX,UAAUC,gBAEdqB,EACF,CACLwB,MAAOzb,EAAE,2BACToa,YAAapa,EAAE,yBAA0B,CAAC0e,IAC1C1O,SAAUjO,EAAAkO,SAASiJ,MACnB0C,UAAWta,EAAAqX,UAAUC,gBAEd+D,EACF,CACLlB,MAAOzb,EAAE,2BACTgQ,SAAUjO,EAAAkO,SAAS+I,aACnB4C,UAAWta,EAAAqX,UAAUiG,gBAEd/B,EACF,CACLpB,MAAOzb,EAAE,6BACToa,YAAapa,EAAE,uCAAwC,CAAC0e,IACxD1O,SAAUjO,EAAAkO,SAAS4O,OACnBjD,UAAWta,EAAAqX,UAAUmG,cAIlB,CACLrD,MAAOzb,EAAE,yBACToa,YAAapa,EAAE,oCACfgQ,SAAUjO,EAAAkO,SAAS4O,OACnBjD,UAAWta,EAAAqX,UAAUmG,cA8V6BC,CAAiB,CACnE/e,IACA0e,YACAzE,4BACAwD,kCACAd,4BACAE,iCAGF,EAAAld,EAAA6W,YAAU,KACR9J,GAAS,EAAAf,EAAAqT,yBAAwB,GAChC,IAEH,MAAMC,GACqB,QAAzB7C,EAAAoC,EAAWU,sBAAc,IAAA9C,GAAqB,QAArBA,EAAzBA,EAA2B+C,2BAAmB,IAAA/C,OAAA,EAA9CA,EAAgDnO,QAAS,IAChC,QADiCoO,EAC1DmC,EAAWU,sBAAc,IAAA7C,OAAA,EAAzBA,EAA2B+C,qBACvBC,EAAO/C,aAAgB,EAAhBA,EAAkB+C,KACzB/E,EACJ+E,GAAQf,EACJ,GAAGhF,EAAAgG,QAAQC,sBAAsBxc,QAC/B,EAAAwW,EAAAiG,cAAalB,0BACSe,IACxB1c,UAEN,OACEhD,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,gCACV+D,OAAQhI,EAAA4W,UAAUC,KAClB9O,MAAO/H,EAAA4W,UAAUC,KACjB3S,QAASlE,EAAAmE,QAAQC,KACjB+Z,YAAane,EAAAoe,YAAYC,KACzBha,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,OACvB2B,aAAc,GAEd/J,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,OACvBL,eAAgBpG,EAAAqG,eAAeI,OAC/BgK,YAAa,EACbC,aAAc,EACd3I,MAAO/H,EAAA4W,UAAUC,KACjBhP,MAAO,CAAEyW,SAAU,IAEnBjgB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,OACvBgK,YAAa,EACbC,aAAc,EACd3I,MAAO/H,EAAA4W,UAAUC,MAEjBxY,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFmE,UAAW,EACXjE,UAAU,iHAEZ5F,EAAAI,QAAAqF,cAACuW,EAA2B,CAC1B3L,SAAUA,EACV4L,UAAWA,IAEbjc,EAAAI,QAAAqF,cAACoW,EAAK,CAACC,MAAOA,IACd9b,EAAAI,QAAAqF,cAAC4U,EAAQ,CACPC,0BAA2BA,EAC3BC,YAAaA,EACbC,2BAA4BA,IAE9Bxa,EAAAI,QAAAqF,cAAC8R,EAAW,CAACkD,YAAaA,IAC1Bza,EAAAI,QAAAqF,cAACiV,EAAkC,CACjCC,mCACEA,EAEFL,0BAA2BA,EAC3BM,iBAAkBA,KAGrB0E,GACCtf,EAAAI,QAAAqF,cAACoU,EAAAqG,kBAAiB,CAChBX,eAAgBV,EAAWU,eAC3BY,cAAetB,EAAWxY,KAG9BrG,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFmE,UAAW,EACXjE,UAAU,qHAGd5F,EAAAI,QAAAqF,cAACmW,EAAiC,CAChCL,OAAQA,EACRjB,0BAA2BA,EAC3BM,iBAAkBA,EAClBe,eAAgBA,IAEd,EAERnQ,EAAA4Q,6BAAA5Q,EAAApL,QAEagc,C,kbCjjBf,IAAwF/Z,EAAxF+d,GAAwF/d,EAAxFf,EAAA,qCAAwFe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,oXCAxF,IAMqEA,EANrErC,GAMqEqC,EANrEf,EAAA,WAMqEe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GALrED,EAAAd,EAAA,yCAKAK,EAAAL,EAAA,4CAOA,MAAM+e,EAAkB,EAAGhF,MAAKiF,cAE5BtgB,EAAAI,QAAAqF,cAACrD,EAAA+N,WAAU,CACT,cAAY,iCACZ9G,QAAS,KACP6R,OAAOC,SAASC,QAAQ,CAAEC,QAC1BiF,YAAY,EAEdjQ,SAAUjO,EAAAkO,SAASiQ,OACnBrX,MAAOvH,EAAAqX,UAAUC,eACjBvI,KAAMtO,EAAAuO,eAAeC,GACrBR,UAAU,KAGd5E,EAAApL,QAEaJ,EAAAI,QAAMogB,KAAKH,E,6cC7B1B,IAAArgB,EAAAwB,EAAAF,EAAA,UACAc,EAAAd,EAAA,yCAUAK,EAAAL,EAAA,4CAQAgV,EAAAhV,EAAA,iCACAmf,EAAAjf,EAAAF,EAAA,oCAAyE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CA8EvEmJ,EAAApL,QA5EiC,EACjCib,MACAqF,WACAC,eACAC,UACAN,eAEA,MAAMjgB,GAAI,EAAAiW,EAAAC,kBAIV,OACEvW,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAc6B,IAC7BC,eAAgBpG,EAAAqG,eAAeC,aAC/B4Y,WAAY,GAEZ7gB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFob,IAAK,EACLjb,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACH,cAAY,sCACZgQ,UAAWlX,EAAAmX,UAAUC,OACrBjQ,QAASnH,EAAAoH,YAAYgY,WAEpB1gB,EAAE,0CAEJsgB,EACC3gB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACG,QAASlE,EAAAmE,QAAQC,KAAMqM,YAAa,EAAGC,aAAc,GACxDrS,EAAAI,QAAAqF,cAACrD,EAAA4e,YAAW,CACVC,SAAU7e,EAAA8e,oBAAoBhC,OAC9B,cAAY,oDAEZlf,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,KACFxI,EAAE,mBAAoB,CACrBL,EAAAI,QAAAqF,cAACrD,EAAAgW,OAAM,CACLtP,QAAS1G,EAAAiW,cAAcI,KACvB/H,KAAMtO,EAAA+e,WAAWrJ,QACjBzO,QAAS,IACP6R,OAAOC,SAASC,QAAQ,CACtBC,IAnCpB,uGAsCgB7Y,IAAK,yCAEJnC,EAAE,mBAMX,MACc,IAAjBsgB,EACC3gB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACH,cAAY,4CACZgQ,UAAWlX,EAAAmX,UAAUC,OACrBjQ,QAASnH,EAAAoH,YAAYC,QAEpB3I,EAAE,qCAAsC,CAACqgB,KAE1C,MACFrF,EAAI/M,OAAS,GAAKsS,EAAQtS,OAAS,KAAuB,IAAjBqS,EACzC3gB,EAAAI,QAAAqF,cAACgb,EAAArgB,QAA0B,CACzBsgB,SAAUA,EACVrF,IAAKA,EACLuF,QAASA,EACTN,SAAUA,IAEV,MAEF,C,2dChGV,IAAAtgB,EAAAwB,EAAAF,EAAA,UACAK,EAAAL,EAAA,4CACAc,EAAAd,EAAA,yCAEA8f,EAAA9f,EAAA,iDACA+f,EAAA7f,EAAAF,EAAA,sBAA8C,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAE9C,MAAMif,EAA6B,EACjCZ,WACArF,MACAuF,UACAN,cAOEtgB,EAAAI,QAAAqF,cAAC2b,EAAAG,eAAc,CACb,cAAY,0CACZb,SAAUA,GAEG,KAAZE,EACC5gB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrB,cAAY,iCAEX4X,GAED,KACHvF,EAAI/M,OAAS,EACZtO,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACmb,WAAY,EAAGhb,QAASlE,EAAAmE,QAAQC,MACnC/F,EAAAI,QAAAqF,cAAC4b,EAAAjhB,QAAa,CAACib,IAAKA,EAAKiF,SAAUA,KAEnC,MAGR9U,EAAApL,QAEaJ,EAAAI,QAAMogB,KAAKc,E,waCvC1B,IAAAthB,EAAAwB,EAAAF,EAAA,UAEAK,EAAAL,EAAA,4CASAc,EAAAd,EAAA,yCACAkgB,EAAAhgB,EAAAF,EAAA,wBAAkD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAElD,MAAMof,EAAgB,EACpBpG,MACAiF,cAGEtgB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQ4b,WACjBC,gBAAiBhgB,EAAAigB,gBAAgBC,kBACjC3Z,WAAYvG,EAAAwG,WAAWC,OACvB0Z,YAAa,EACbrY,aAAc9H,EAAAogB,aAAaC,GAC3BC,YAAatgB,EAAAugB,YAAYC,cACzB9P,aAAc,GAEdrS,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACH,cAAY,wCACZgH,QAAS,EACT/G,QAASnH,EAAAoH,YAAYC,OACrBE,MAAOvH,EAAAwH,UAAU8P,gBAEhBoC,GAEHrb,EAAAI,QAAAqF,cAAC+b,EAAAphB,QAAe,CAACib,IAAKA,EAAKiF,SAAUA,KAGzC9U,EAAApL,QAEaJ,EAAAI,QAAMogB,KAAKiB,E,qYCzC1B,IAAyEpf,EAAzE+f,GAAyE/f,EAAzEf,EAAA,6BAAyEe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,gbCAzE,IAAArC,EAAAwB,EAAAF,EAAA,UACAc,EAAAd,EAAA,sCACAK,EAAAL,EAAA,yCAOA+gB,EAAA7gB,EAAAF,EAAA,sDACAghB,EAAAhhB,EAAA,gBAA0D,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAgDxDmJ,EAAApL,QArC0B,EAC1Bib,MACAkH,SACA7B,WACAC,eACAC,UACAN,cAGEtgB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,2BACV+D,OAAQhI,EAAA4W,UAAUC,KAClB9O,MAAO/H,EAAA4W,UAAUC,KACjBsH,YAAane,EAAAoe,YAAYC,KACzBha,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAAC4c,EAAAjiB,QAAoB,CAACmiB,OAAQA,IAC9BviB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,OACvBuB,OAAQhI,EAAA4W,UAAUC,KAClBpG,YAAa,EACbC,aAAc,GAEdrS,EAAAI,QAAAqF,cAAC6c,EAAAE,2BAA0B,CACzBnH,IAAKA,EACLiF,SAAUA,EACViC,OAAQA,EACR7B,SAAUA,EACVC,aAAcA,EACdC,QAASA,K,8YCrDnB,IAAA5gB,EAQ+C,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAR/CY,CAAAC,EAAA,UAEAgV,EAAAhV,EAAA,8BACAW,EAAAX,EAAA,8BACAmhB,EAAAnhB,EAAA,yCAI+C,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAuB7CuL,EAAApL,QArB0C,EAC1CsiB,sBAIA,MAAMriB,GAAI,EAAAiW,EAAAC,kBACJ7P,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,oBAc9B,OAZA,EAAA5iB,EAAA6W,YAAU,KAAM,IAAAgM,EAAAC,EACdpc,EAAW,CACTI,MAAO2b,EAAA1b,qBAAqBgc,oCAC5Bpc,SAAU8b,EAAA7b,yBAAyBoc,aACnC/b,WAAY,CACVgc,QAASP,SAA8B,QAAfG,EAAfH,EAAiBQ,SAASC,YAAI,IAAAN,OAAA,EAA9BA,EAAgCxc,GACzC+c,UAAWV,SAA8B,QAAfI,EAAfJ,EAAiBQ,SAASC,YAAI,IAAAL,OAAA,EAA9BA,EAAgCjf,KAC3Cwf,aAAcZ,EAAAa,4BAA4BC,OAE5C,GACD,IAEIvjB,EAAAI,QAAAqF,cAAA,YAAOpF,EAAE,4BAAmC,C,8UC9BVmL,EAAAgY,+BAAG,CAC5CC,QAAS,UACTC,OAAQ,SACRxT,KAAM,O,qVCHR,IAAsC7N,EAAtCshB,GAAsCthB,EAAtCf,EAAA,iBAAsCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,4bCAtC,IAAArC,EAAAwB,EAAAF,EAAA,UACAC,EAAAC,EAAAF,EAAA,eAEAsiB,EAAAtiB,EAAA,mEACAc,EAAAd,EAAA,yCACAK,EAAAL,EAAA,4CAA8E,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAE9E,SAASwhB,GAAStB,OAAEA,IAClB,OACEviB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACG,QAASlE,EAAAmE,QAAQC,KAAM4D,OAAQhI,EAAA4W,UAAUC,MAC5CxY,EAAAI,QAAAqF,cAACme,EAAAE,iBAAgB,CAACvB,OAAQA,IAGhC,CAEAsB,EAASE,UAAY,CACnBxB,OAAQhhB,EAAAnB,QAAUuL,OAAOgJ,YACzBnJ,EAAApL,QAEayjB,C,wlCCnBf,IAAA7jB,EAuD6D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAvD7DY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACA6L,EAAA7L,EAAA,oBACA0iB,EAAAxiB,EAAAF,EAAA,WACAgV,EAAAhV,EAAA,iCACAK,EAAAL,EAAA,4CASA2iB,EAAAziB,EAAAF,EAAA,2DACA4iB,EAAA1iB,EAAAF,EAAA,sDACA6iB,EAAA3iB,EAAAF,EAAA,iDAEA8iB,EAAA5iB,EAAAF,EAAA,+DAEA0K,EAAA1K,EAAA,0BASA2K,EAAA3K,EAAA,sBAUAc,EAAAd,EAAA,yCAOA+iB,EAAA7iB,EAAAF,EAAA,wDACA8f,EAAA9f,EAAA,iDACAgjB,EAAAhjB,EAAA,oCACAijB,EAAA/iB,EAAAF,EAAA,oDACA+L,EAAA/L,EAAA,qCACAkjB,EAAAljB,EAAA,2CACAmjB,EAAAnjB,EAAA,gCAEAojB,EAAApjB,EAAA,eAA6D,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAG7D,SAAS0kB,GAAapC,OAAEA,EAAMqC,WAAEA,EAAUC,gBAAEA,IAC1C,MAAM3V,GAAU,EAAA/B,EAAA2X,cACVzkB,GAAI,EAAAiW,EAAAC,kBACJwO,GAAQ,EAAAhZ,EAAAsR,aAAYpR,EAAA+Y,UACpBjY,GAAW,EAAAhB,EAAAyK,eAEX2M,EAAOviB,OAAOqkB,QAAQF,GACzB/gB,KAAI,EAAEkhB,EAAGC,KAAeA,IACxB5d,MAAM4d,GAAcA,EAAU9e,KAAOkc,KAEjC6C,EAAwBC,IAA6B,EAAArlB,EAAAge,WAAS,IAE9DsH,EAAuBC,IAA4B,EAAAvlB,EAAAge,WAAS,IAG5DwH,EAAiBC,IAAsB,EAAAzlB,EAAAge,UAAS,IAEjD0H,GAAmB,EAAA3Z,EAAAsR,aAAYpR,EAAA0Z,qCAG/BC,GAAoB,EAAA7Z,EAAAsR,cAAahR,IACrC,EAAAJ,EAAA4Z,+BAA8BxZ,EAAO8W,aAAI,EAAJA,EAAM9c,MAEvCyf,GAAc,EAAA/Z,EAAAsR,cACjBhR,GAAU8W,IAAQ,EAAAlX,EAAA8Z,gBAAe1Z,EAAO8W,EAAK9c,OAGxCxC,KAAM6c,EAAQjG,YAAEA,IAAgB,EAAA1O,EAAAsR,cAAahR,IACnD,EAAAJ,EAAA+Z,iBAAgB3Z,EAAOkW,KAGzB,IAAI0D,GAAgB,EAEpBA,EAAgBvb,QAAQob,aAAW,EAAXA,EAAaI,sBAErC,EAAAlmB,EAAA6W,YAAU,KACJoP,GACF,WACE,MAAME,QAAkB,EAAAna,EAAAoa,qBAAoBjD,EAAK9c,IAC3CggB,EAAiBzlB,OAAO0lB,OAAOZ,GAAkBa,QACpD7D,GACCyD,EAAU3S,SAASkP,EAAgBpZ,QAAQkd,iBAE/Cf,EAAmBY,EACpB,EAPD,EAQF,GACC,CAAClD,aAAI,EAAJA,EAAM9c,GAAIqf,EAAkBO,IAGhC,MAIMQ,GAAwB,EAAA1a,EAAAsR,cAAahR,GACzC8W,GAAO,EAAAlX,EAAAya,sBAAqBra,EAAO8W,aAAI,EAAJA,EAAM9c,IAAM,OAG3CsgB,IAAoBF,GACtBzC,EAAA5jB,QAAOwmB,GAAGH,EAAuBtD,EAAK0D,SAgC1C,OAPA,EAAA7mB,EAAA6W,YAAU,KACJ+N,IACFS,GAA0B,GAC1BR,IACF,GACC,CAACD,EAAYC,IAGd7kB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,KACDihB,GACC3mB,EAAAI,QAAAqF,cAAC8e,EAAAnkB,QAAe,CACdsgB,SAAUA,EACVoG,cAlCarf,UACnB,MAAMsf,EAAgB,CACpB,CAAC5D,EAAK9c,IAAK,CACTwgB,QAASJ,IAGPO,QAAmBja,GAAS,EAAAf,EAAAib,YAAW,WAAYF,IAErDC,GACF9X,EAAQC,KAAK,GAAG9B,EAAA6Z,iBAAiBF,IACnC,EAyBMG,iBAAkB,CAAEpd,aAAc,KAGtC/J,EAAAI,QAAAqF,cAACwe,EAAA7jB,QAAsB,CAACmiB,OAAQY,EAAK9c,GAAI8c,KAAMA,IAC/CnjB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACE,UAAU,kCAAkCiE,UAAW,CAAC,EAAG,IAC9D7J,EAAAI,QAAAqF,cAAC2b,EAAAG,eAAc,CAAC/W,KAAM8Z,EAAA8C,eAAe7P,YAAamJ,SAAUA,GAC1D1gB,EAAAI,QAAAqF,cAAC+e,EAAA6C,SAAQ,CAACC,iBAAkB3lB,EAAAigB,gBAAgBC,mBAC1C7hB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,KAAE4R,MAIbza,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACE,UAAU,kCAAkCiE,UAAW,IAC1D7J,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYwe,aAAcxd,aAAc,GACpD1J,EAAE,gBAELL,EAAAI,QAAAqF,cAAC4e,EAAAjkB,QAAmB,CAClBmiB,OAAQA,EACR7B,SAAUA,EACVoF,YAAaA,GAAe,CAAC,EAC7B0B,aAAW,EACXC,oBAAkB,KAGtBznB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACE,UAAU,sCAAsCiE,UAAW,IAC9D7J,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYwe,aAAcxd,aAAc,GA7CvD6b,EAAkB8B,OAAOC,IAAY,EAAAlD,EAAAmD,UAASD,EAAQE,UACjDxnB,EAAE,kBACAulB,EAAkBkC,MAAMH,IAAY,EAAAlD,EAAAmD,UAASD,EAAQE,UACvDxnB,EAAE,0BAEJA,EAAE,mBA2CLL,EAAAI,QAAAqF,cAAC0e,EAAA/jB,QAAkB,CACjBwlB,kBAAmBA,EACnBmC,aAAeF,IA5EDG,QA6ECH,EAAQ1E,EAAK9c,GA5ElC0G,GAAS,EAAAf,EAAAic,0BAAyBD,EAAiB7E,EAAK9c,IA4EnB,KAInCrG,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACE,UAAU,6BAA6BiE,UAAW,IACrD7J,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYwe,aAAcre,MAAOvH,EAAAwH,UAAUC,aACvD/I,EAAE,eAELL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQE,MAAOvH,EAAAwH,UAAUC,aACjD/I,EAAE,0BAELL,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFmE,UAAW,EACXhE,QAASlE,EAAAmE,QAAQC,KACjBgC,eAAgBpG,EAAAqG,eAAeI,QAE/BpI,EAAAI,QAAAqF,cAACrD,EAAAgW,OAAM,CACLxS,UAAU,oCACVsiB,OAAO,OACPpf,QAAS1G,EAAAiW,cAAc8P,UACvBze,MAAO/H,EAAA4W,UAAUC,KACjB9H,KAAMtO,EAAA+e,WAAWiH,GACjB/e,QAAS,IAAMgc,GAA0B,GACzC,cAAY,qBACZgD,SAAUlF,EAAKmF,eAAmC,IAAnBnF,EAAKoF,WAEpCvoB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUqf,QACjB1f,QAASnH,EAAAoH,YAAYC,OACrByf,SAAU9mB,EAAA+mB,SAASC,OACnBC,UAAQ,EACRpf,MAAO,CAAEqf,SAAU,UACnBhI,WAAY,EACZ/Q,cAAe,GAEd,GAAGzP,EAAE,aAAaqgB,MAGvB1gB,EAAAI,QAAAqF,cAACye,EAAA9jB,QAAiB,CAChBgW,OACEgP,KACEa,GAA4C,IAA3BT,EAAgBlX,UAClCgX,EAEHwD,SAAU,IAAMzD,GAA0B,GAC1C/E,SAAU7Y,gBACFsF,GAAS,EAAAf,EAAA+c,YAAW5F,EAAK9c,IAAI,EAErCqa,SAAUA,IAIV1gB,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAAC2e,EAAAhkB,QAAyB,CACxB+iB,KAAMA,EACNqC,gBAAiBA,EACjBwD,QAAS7F,EAAK9H,IACdyN,SAAU,IAAMzD,GAA0B,GAC1CtO,QAAS,IAAMsO,GAA0B,GACzC4D,OAAQ,IAAM5D,GAA0B,GACxC/E,SAAU7Y,UACR,IACE8d,GAAyB,SACnBxY,GAAS,EAAAf,EAAA+c,YAAW5F,EAAK9c,KAC/Bgf,GAA0B,GAC1BtY,GACE,EAAAf,EAAAkd,6BAA4B,CAC1BxI,WACAyI,OAAQzE,EAAAlB,+BAA+BC,UAG7C,CAAE,MACA4B,GAA0B,GAC1BtY,GACE,EAAAf,EAAAkd,6BAA4B,CAC1BxI,WACAyI,OAAQzE,EAAAlB,+BAA+BE,SAG7C,CAAC,QACC6B,GAAyB,EAC3B,GAEFnP,OACEgP,GACAa,GACAT,EAAgBlX,OAAS,OAU3C,CAEAqW,EAAaZ,UAAY,CACvBxB,OAAQhhB,EAAAnB,QAAUuL,OAAOgJ,WACzBiQ,WAAYrjB,EAAAnB,QAAUwL,KACtBiZ,gBAAiBtjB,EAAAnB,QAAUqL,MAC3BD,EAAApL,QAEaukB,C,2rBChSf,IAAA3kB,EAqBmC,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CArBnCY,CAAAC,EAAA,UACA6L,EAAA7L,EAAA,oBACAyK,EAAAzK,EAAA,eACA8nB,EAAA9nB,EAAA,mBACAK,EAAAL,EAAA,4CAMA+L,EAAA/L,EAAA,qCACA2K,EAAA3K,EAAA,sBACAc,EAAAd,EAAA,yCAKA+nB,EAAA/nB,EAAA,6CACA+gB,EAAA7gB,EAAAF,EAAA,yDACAgoB,EAAA9nB,EAAAF,EAAA,iDACAioB,EAAA/nB,EAAAF,EAAA,oBACAkoB,EAAAhoB,EAAAF,EAAA,gBAAmC,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAkHlCuL,EAAApL,QAhHD,WACE,MAAM8O,GAAU,EAAA/B,EAAA2X,cACVxP,GAAW,EAAAnI,EAAAsc,gBACXnV,SAAEA,GAAagB,EAEfiN,EAASmH,mBAAmBpV,EAASmB,MAAM,WAAW,IACtDsP,GAAQ,EAAAhZ,EAAAsR,aAAYpR,EAAA+Y,UACpB7B,EAAOviB,OAAOqkB,QAAQF,GACzB/gB,KAAI,EAAEkhB,EAAGC,KAAeA,IACxB5d,MAAM4d,GAAcA,EAAU9e,KAAOkc,KAExC,EAAAviB,EAAA6W,YAAU,KACHsM,GACHjU,EAAQC,KAAK9B,EAAAsc,YACf,GACC,CAACza,EAASiU,IAEb,MAAM2C,GAAc,EAAA/Z,EAAAsR,cACjBhR,GAAU8W,IAAQ,EAAAlX,EAAA8Z,gBAAe1Z,EAAO8W,EAAK9c,MAG1CujB,EACJ9D,IAAe,EAAAsD,EAAAS,aAAY/D,EAAa,wBACnCgE,EAAcC,IAAmB,EAAA/pB,EAAAge,WAAU4L,IAC3ChF,EAAYoF,IAAiB,EAAAhqB,EAAAge,WAAS,GAE7C,IAAKmF,EACH,OAAO,KAGT,MAaM8G,EAAkB,KAClB9G,EAAKmF,cAAgBnF,EAAK+G,OAC5Bhb,EAAQC,KAAK9B,EAAA4C,eACJ6Z,GAAgBF,EACzBG,GAAgB,GAEhB7a,EAAQC,KAAK9B,EAAAsc,YACf,EAoBF,OACE3pB,EAAAI,QAAAqF,cAAA,OACEG,UAAU,YACV4D,MAAO,CACL2gB,UAAW,sDAGbnqB,EAAAI,QAAAqF,cAAC4jB,EAAAe,KAAI,CAACzI,gBAAiBhgB,EAAAigB,gBAAgBC,oBACnCsB,EAAKkH,kBACLrqB,EAAAI,QAAAqF,cAAC4c,EAAAjiB,QAAoB,CACnBmiB,OAAQA,EACR+H,UAAU,EACVC,eA3BNvqB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBgC,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAA+N,WAAU,CACTC,UAAU,OACVC,SAAS,aACTK,KAAMtO,EAAAuO,eAAe6Z,GACrBnhB,QAAS4gB,KAmBPQ,aACEzqB,EAAAI,QAAAqF,cAAC6jB,EAAAlpB,QAAY,CACXmiB,OAAQA,EACRmI,gBAxDc,KAC1BX,GAAgB,EAAK,EAwDTY,cArDW,KACvBX,GAAc,GACdD,GAAgB,EAAK,EAoDTa,qBAAsBzH,EAAKmF,iBAKnCtoB,EAAAI,QAAAqF,cAAC4jB,EAAAwB,QAAO,CACNlJ,gBAAiBhgB,EAAAigB,gBAAgBC,kBACjCjc,UAAU,qBACViE,UAAWigB,EAAe,EAAI,EAC9Bja,QAASia,EAAe,EAAI,GAE3BA,EACC9pB,EAAAI,QAAAqF,cAAC8jB,EAAAnpB,QAAY,CACXmiB,OAAQA,EACRqC,WAAYA,EACZC,gBAhEY,KACtBmF,GAAc,EAAM,IAkEZhqB,EAAAI,QAAAqF,cAAC+jB,EAAAppB,QAAQ,CAACmiB,OAAQA,MAM9B,C,qVCvIA,IAAsClgB,EAAtCyoB,GAAsCzoB,EAAtCf,EAAA,iBAAsCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,6qBCAtC,IAsC2DA,EAtC3DrC,EAsC2D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAtC3DY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACAypB,GAmC2D1oB,EAnC3Df,EAAA,kDAmC2De,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GAlC3DiU,EAAAhV,EAAA,iCACAK,EAAAL,EAAA,4CAcA+L,EAAA/L,EAAA,qCACA2K,EAAA3K,EAAA,sBACAY,EAAAZ,EAAA,0CACAc,EAAAd,EAAA,yCAWA+nB,EAAA/nB,EAAA,6CAKAiM,EAAAjM,EAAA,+BAA2D,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAoIzDuL,EAAApL,QAlIe,KACf,MAAMC,GAAI,EAAAiW,EAAAC,kBACJrH,GAAU,EAAA/B,EAAA2X,cACVkG,GAAc,EAAAhrB,EAAAirB,WAKpB,EAAAjrB,EAAA6W,YAAU,MACR,EAAA3U,EAAA+C,oBAAmB5E,EAAGA,EAAE,SAAU2qB,EAAY,GAC7C,CAACA,EAAa3qB,IAEjB,MAAM6qB,GAAY,EAAAnf,EAAAsR,aAAYpR,EAAAkf,cACxBC,GAAgB,EAAArf,EAAAsR,aAAYpR,EAAAof,4BAElC,OACErrB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,SACb5F,EAAAI,QAAAqF,cAAC4jB,EAAAe,KAAI,CAACzI,gBAAiBhgB,EAAAigB,gBAAgBC,mBACrC7hB,EAAAI,QAAAqF,cAAC4jB,EAAAiC,OAAM,CACL3J,gBAAiBhgB,EAAAigB,gBAAgBC,kBACjC0I,eACEvqB,EAAAI,QAAAqF,cAACrD,EAAA+N,WAAU,CACTC,UAAU,OACVC,SAAS,aACTK,KAAK,KACLrH,QAAS,IAAM6F,EAAQC,KAAK9B,EAAA4C,kBAI/B5P,EAAE,UAELL,EAAAI,QAAAqF,cAAC4jB,EAAAwB,QAAO,CACNlJ,gBAAiBhgB,EAAAigB,gBAAgBC,kBACjCjc,UAAU,kBAEV5F,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,uBACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7ByD,OAAQhI,EAAA4W,UAAUC,MAEjB0S,EAAU5c,OAAS,GAClBtO,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,8BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACZslB,EAAUlnB,KAAKmf,GAEZnjB,EAAAI,QAAAqF,cAACslB,EAAA3qB,QAAY,CACXwF,UAAU,4BACVpD,IAAK2gB,EAAK3gB,IACV+oB,YAAapI,EAAKoI,YAClB1nB,KAAMsf,EAAKtf,KACXwF,QAAS,KA/Cd8Z,KACfjU,EAAQC,MAAK,EAAA5B,EAAAie,cAAarI,EAAK9c,IAAI,EA+CbgD,CAAQ8Z,EAAK,EAEfZ,OAAQY,EAAK9c,GACbolB,cAAeL,EAAc5qB,IAAI2iB,EAAK9c,UAOjD6kB,EAAU5c,QAAU,GACnBtO,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjB4D,OAAQhI,EAAA4W,UAAUC,KAClBxS,cAAerE,EAAAsE,cAAc6B,IAC7B2gB,SAAU9mB,EAAA+mB,SAASgD,KACnB3jB,eAAgBpG,EAAAqG,eAAeI,OAC/BxC,UAAU,uDAETslB,EAAU5c,OAAS,GAClBtO,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,kDACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7B6B,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMzB,EAAAkO,SAASqb,MACfziB,MAAOvH,EAAAqX,UAAU4S,UACjBhmB,UAAU,sCACV8K,KAAMtO,EAAA+Z,SAASrE,UAEjB9X,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAA6O,MAAMqb,UACbC,MAAOnqB,EAAAmX,UAAUC,OACjBlP,UAAW,GAEVxJ,EAAE,aAITL,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjB2D,MAAO/H,EAAA4W,UAAUC,KACjB7O,OAAQhI,EAAA4W,UAAUwT,MAEpB/rB,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFE,UAAU,uDACVC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7B6B,eAAgBpG,EAAAqG,eAAegkB,QAC/B5Z,YAAa,EACbC,aAAc,EACdvC,cAAe,GAEf9P,EAAAI,QAAAqF,cAACrD,EAAA6pB,UAAS,CACRC,SAAU9pB,EAAA+pB,kBAAkBC,SAC5B3R,YAAapa,EAAE,yBACfgsB,iBAAkB,CAAEvjB,QAASnH,EAAAoH,YAAYC,SAEzChJ,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTlH,KAAM/O,EAAA2qB,KAAKC,KACXtU,KAAK,6BACL7J,OAAO,SACPoe,YAAapqB,EAAAkO,SAASiQ,QAErB,GAAGlgB,EAAE,0BASlB,C,4yBCjIK,WACb,MAAMA,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfxd,GAAU,EAAA/B,EAAA2X,cACV/X,GAAW,EAAAhB,EAAAyK,eACXmW,GAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgBC,EAAA1sB,UAC1C2sB,qBAAEA,EAAoBC,gBAAEA,IAAoBL,aAAW,EAAXA,EAAaM,WAAY,CAAC,EACtEC,GAAkB,EAAAnhB,EAAAsR,aAAYuP,EAAAO,mBAAoBphB,EAAAqhB,cAClDC,GAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,GAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBACjCC,GAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,GAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCC,GAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIC,EAAwBrjB,QAAQwiB,GAChCxmB,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,qBAE9B,EAAA5iB,EAAA6W,YAAU,KACRnQ,EAAW,CACTI,MAAO,uCACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,CACnBC,wBAAyBH,EACzBI,WAAYnB,aAAe,EAAfA,EAAiBoB,OAC7BC,kBAAmB1B,aAAW,EAAXA,EAAalqB,MAChC6rB,SAAUvB,aAAoB,EAApBA,EAAsBqB,OAChCG,aAAc5B,WAAa6B,aAAe,QAAU,QACpDC,SAAU9B,aAAW,EAAXA,EAAa8B,SACvBC,gBAA2C,KAA1B/B,aAAW,EAAXA,EAAa8B,UAC9BE,mBAAoBtB,EACpBuB,qBAAsBrB,EACtBsB,YAAalB,EACbmB,oBAAqBjB,EACrBkB,gBAAiBtB,IAEnB,GAED,IAEH,MAAMuB,EACF3uB,EADe0tB,EACb,sBACA,2BAEN,OACE/tB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uBACb5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFgS,YAAa,EACbC,aAAc,EACd1I,OAAQhI,EAAAutB,YAAYC,KACpBpnB,eAAgBpG,EAAAqG,eAAeI,OAC/BvC,QAASlE,EAAAytB,QAAQC,KACjBzpB,UAAU,gCAEV5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,EAAGE,aAAc,GAC/B/J,EAAAI,QAAAqF,cAAC6pB,EAAAlvB,QAAW,OAEdJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUC,YACjBN,QAASnH,EAAAoH,YAAY8I,UACrB5I,GAAG,MAEF+lB,GAEFjB,GACC/tB,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYwmB,WAAY1lB,UAAW,GAC/CxJ,EAAE,8BAELL,EAAAI,QAAAqF,cAAA,MAAIG,UAAU,8BACZ5F,EAAAI,QAAAqF,cAAA,UACEzF,EAAAI,QAAAqF,cAAC+pB,EAAApvB,QAAY,CAACqvB,WAAY,IACzBpvB,EAAE,sBAAuB,CACxBL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHI,GAAG,OACHH,QAASnH,EAAAoH,YAAYwmB,WACrB/sB,IAAI,cAEHuqB,aAAoB,EAApBA,EAAsBqB,WAI7BpuB,EAAAI,QAAAqF,cAAA,UACEzF,EAAAI,QAAAqF,cAAC+pB,EAAApvB,QAAY,CAACqvB,WAAY,IACzBpvB,EAAE,aAAc,CACfL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHI,GAAG,OACHH,QAASnH,EAAAoH,YAAYwmB,WACrB/sB,IAAI,aAEHwqB,aAAe,EAAfA,EAAiBoB,QAEpBpuB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHI,GAAG,OACHymB,UAAW/tB,EAAAoH,YAAYwmB,WACvB/sB,IAAI,WAEHuqB,aAAoB,EAApBA,EAAsBqB,YAK/BpuB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,QAAS3I,EAAE,uBAI5CL,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACVkgB,SAAU7Y,gBACFsF,GAAS,EAAA6f,EAAAgD,wBAGf1gB,EAAQC,KAAK9B,EAAA4C,eACbf,EAAQC,KAAK9B,EAAAwiB,kBAAkB,EAEjCC,WAAYzvB,EAAE,UACd0vB,YAAU,IAIlB,EA/JA,IAAA/vB,EAqC4C,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CArC5CY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACAwrB,EAAAtrB,EAAAF,EAAA,mBAEAmrB,EAAAnrB,EAAA,0BACAsrB,EAAAtrB,EAAA,8BAMA2K,EAAA3K,EAAA,gCAIAoY,EAAApY,EAAA,wCAIA+L,EAAA/L,EAAA,qCAIAguB,EAAA9tB,EAAAF,EAAA,wCACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAOAquB,EAAAnuB,EAAAF,EAAA,oBACAW,EAAAX,EAAA,iCACAmhB,EAAAnhB,EAAA,4CACAc,EAAAd,EAAA,yCACAkuB,EAAAhuB,EAAAF,EAAA,qBAA4C,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,C,mXCrC5C,IAAgDoC,EAAhD2tB,GAAgD3tB,EAAhDf,EAAA,2BAAgDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,6RCAhD,IAAArC,EAAAwB,EAAAF,EAAA,UACAC,EAAAC,EAAAF,EAAA,eAAmC,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAEpB,SAAS4tB,GAAaR,WAAEA,EAAa,IAClD,OAAQA,GACN,KAAK,EACH,OACEzvB,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,UACE2qB,GAAG,IACHC,GAAG,IACHnwB,EAAE,OACFowB,OAAO,+BACPC,YAAY,QAEdvwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,+DACF1rB,KAAK,kCAIb,KAAK,EACH,OACE9E,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,UACE2qB,GAAG,IACHC,GAAG,IACHnwB,EAAE,OACFowB,OAAO,+BACPC,YAAY,QAEdvwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,isCACF1rB,KAAK,kCAIb,QACE,OAAO9B,UAEb,CAEAitB,EAAalM,UAAY,CACvB0L,WAAYluB,EAAAnB,QAAUyL,O,8jCCvDxB,IAAA4kB,EAAAjvB,EAAAF,EAAA,WACAtB,EAoEsD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CApEtDY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACA6L,EAAA7L,EAAA,oBACAwrB,EAAAtrB,EAAAF,EAAA,mBACAovB,EAAApvB,EAAA,4BACAmrB,EAAAnrB,EAAA,0BACAW,EAAAX,EAAA,iCACAmhB,EAAAnhB,EAAA,4CAMA2K,EAAA3K,EAAA,sBASAoY,EAAApY,EAAA,wCAKAsrB,EAAAtrB,EAAA,8BAaAqvB,EAAAnvB,EAAAF,EAAA,kCACAsvB,EAAAtvB,EAAA,sCASAuvB,EAAAvvB,EAAA,0CACAguB,EAAA9tB,EAAAF,EAAA,wCAEA+L,EAAA/L,EAAA,qCACA0K,EAAA1K,EAAA,0BAKAwvB,EAAAxvB,EAAA,iBACAquB,EAAAnuB,EAAAF,EAAA,oBAEAyvB,EAAAvvB,EAAAF,EAAA,uBACA0vB,EAAAxvB,EAAAF,EAAA,8BACA2vB,EAAA3vB,EAAA,mCACA4vB,EAAA1vB,EAAAF,EAAA,wBACA6vB,EAAA3vB,EAAAF,EAAA,wBACA8vB,EAAA5vB,EAAAF,EAAA,0BAAsD,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAuB,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAEvC,SAASgvB,GAAaC,aACnCA,EAAYC,SACZA,EAAQC,OACRA,EAAMC,eACNA,EAAcC,eACdA,EAAc9U,KACdA,IAEA,MAAMvc,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfhmB,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,oBACxB1T,GAAU,EAAA/B,EAAA2X,cACV/X,GAAW,EAAAhB,EAAAyK,eACXmb,GAAwB,EAAA3xB,EAAAirB,QAAO,IAAIwF,EAAArwB,UACnCwxB,aAAEA,IACN,EAAA7lB,EAAAsR,cAAahR,IAAU,EAAAJ,EAAA6S,eAAczS,EAAOuQ,MAAU,CAAC,EACnD+P,GAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgBC,EAAA1sB,SAC1CyxB,GAAsB,EAAA9lB,EAAAsR,aAAYuP,EAAAkF,wBAClCC,GAAc,EAAAhmB,EAAAsR,aAAYuP,EAAAoF,gBAC1BC,GAAY,EAAAlmB,EAAAsR,aAAYuP,EAAAsF,aAAcpF,EAAA1sB,SACtC8sB,GAAkB,EAAAnhB,EAAAsR,aAAYuP,EAAAO,mBAAoBphB,EAAAqhB,cAClD+E,GAAgB,EAAApmB,EAAAsR,aAAYuP,EAAAwF,sBAC5B/sB,GAAkB,EAAA0G,EAAAsR,aAAYpR,EAAAomB,oBAC9BC,GAAoB,EAAAvmB,EAAAsR,aAAYpR,EAAAsmB,sBAChC5T,GAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtB4T,GAAW,EAAAzmB,EAAAsR,aAAYpR,EAAAwmB,8BAA+B1mB,EAAAqhB,eACrDsF,EAA2BC,IAChC,EAAA3yB,EAAAge,WAAS,GAEX,IAAI4U,EAEJ,GAAIX,GAAaE,EAAe,KAAAU,EAY9BD,GAX8B,EAAA9B,EAAAgC,kCAAiC,CAC7DC,SAAUd,EAAUe,uBAAyBf,EAAUgB,WACvDC,YAAYhG,aAAe,EAAfA,EAAiBiG,MAAO,MACpCC,SAAUjB,EACV9sB,kBACAguB,eAAgBf,EAChBgB,WAAYrB,SAAgB,QAAPY,EAATZ,EAAWsB,aAAK,IAAAV,OAAA,EAAhBA,EAAkBpwB,MAC9B+wB,aAAc5B,aAAY,EAAZA,EAAczD,WAC5BsF,aAAcxB,EAAUwB,aACxB9U,YAE2C+U,cAC/C,CAEA,MAAMrG,GAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,GAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBACjCC,IAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,IAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCC,IAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIG,GAAsB,CAC1BE,WAAYyD,aAAY,EAAZA,EAAczD,WAC1BE,kBAAmBuD,aAAY,EAAZA,EAAcvD,kBACjCC,SAAUsD,aAAY,EAAZA,EAActD,SACxBC,aAAc5B,WAAa6B,aAAe,QAAU,QACpDC,SAAUmD,aAAY,EAAZA,EAAcnD,SACxBC,gBAA4C,KAA3BkD,aAAY,EAAZA,EAAcnD,UAC/BkF,SAAUf,EACVjE,mBAAoBtB,EACpBuB,qBAAsBrB,EACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,IAGbmG,GACJpB,EAASqB,kBACTjD,EAAAkD,6CAA6CnV,IAC7C,KACIkV,IAAmB,EAAAnD,EAAAqD,sBACvB,CAAEC,KAAMxC,EAAQ7S,WAChB,CAAEkV,iBAAkBD,KAGtB,IAAI5E,GACAiF,GACAC,GACApE,GACAtd,GAuHJ,OArHI+e,IAAaX,EAAAuD,yBACfnF,GAAa3uB,EAAE,yBACf6zB,GAAkB7zB,EAAE,mCACpByvB,GAAazvB,EAAE,SACf4zB,GAAcj0B,EAAAI,QAAAqF,cAACyrB,EAAA9wB,QAAe,OACrBmxB,IAAaX,EAAAwD,mBACtBpF,GAAa3uB,EAAE,wBACf6zB,GAAkB7zB,EAAE,4CAA6C,CAC/DL,EAAAI,QAAAqF,cAAA,KACEG,UAAU,8BACVpD,IAAI,6BACJyV,KAAMgZ,EAAAoD,aACNjmB,OAAO,SACP+J,IAAI,sBACJ9O,QAAS,KACP3C,EACE,CACEC,SAAU8b,EAAA7b,yBAAyBonB,MACnClnB,MAAO2b,EAAA1b,qBAAqButB,mBAC5BrtB,WAAY,CACVoU,IAAK4V,EAAAoD,eAGT,CACEE,gCAAiC,CAC/B9R,EAAA+R,uBAAuBC,YAG5B,GAGF,IAAIC,IAAIzD,EAAAoD,cAAcM,YAG3B7E,GAAazvB,EAAE,YACf4zB,GAAcj0B,EAAAI,QAAAqF,cAACyrB,EAAA9wB,QAAe,MAC9BoS,GAAUqhB,IACR7zB,EAAAI,QAAAqF,cAACurB,EAAA5wB,QAAmB,CAClByzB,iBAAkBA,GAClBe,4BAA6B3G,MAGxBsD,IAAaX,EAAAiE,sBACtB7F,GAAa3uB,EAAE,+BACf6zB,GAAkB7zB,EAAE,qCACpByvB,GAAazvB,EAAE,YACf4zB,GAAcj0B,EAAAI,QAAAqF,cAAC2rB,EAAAhxB,QAAiB,MAE3BsyB,IACHC,GAA6B,GAC7BjsB,EAAW,CACTI,MAAO,mBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,2BAGKsD,IAAaX,EAAAkE,uBACtB9F,GAAa3uB,EAAE,gCACf6zB,GAAkB7zB,EAAE,sCACpByvB,GAAazvB,EAAE,QACf4zB,GAAcj0B,EAAAI,QAAAqF,cAACyrB,EAAA9wB,QAAe,OACrBmxB,IAAaX,EAAAmE,4BACtB/F,GAAa3uB,EAAE,oCACf6zB,GAAkB7zB,EAAE,0CACpByvB,GAAazvB,EAAE,YACf4zB,GAAcj0B,EAAAI,QAAAqF,cAACyrB,EAAA9wB,QAAe,OACrBmxB,IAAaX,EAAAoE,8BACtBhG,GAAa3uB,EAAE,sCACf6zB,GAAkB7zB,EAAE,4CACpByvB,GAAazvB,EAAE,YACf4zB,GAAcj0B,EAAAI,QAAAqF,cAACyrB,EAAA9wB,QAAe,OACpBmxB,GAAaD,GAmBbC,GAAYD,IACtBtC,GAAa3uB,EAAE,2BACf4zB,GAAcj0B,EAAAI,QAAAqF,cAAC0rB,EAAA/wB,QAAe,MAC9B0vB,GAAazvB,EAAE,SACf6zB,GAAkB7zB,EAAE,qBAAsB,CACxCL,EAAAI,QAAAqF,cAAA,QACEjD,IAAI,uBACJoD,UAAU,oCAET,GAAG6rB,GAAkB,MAAMG,aAAY,EAAZA,EAActD,cAG9C9b,GAAUqhB,IACR7zB,EAAAI,QAAAqF,cAACurB,EAAA5wB,QAAmB,CAClByzB,iBAAkBA,GAClBe,4BAA6B3G,OAjCjCe,GAAa3uB,EAAE,kBACf4zB,GAAcj0B,EAAAI,QAAAqF,cAAC6pB,EAAAlvB,QAAW,MAC1B0vB,GAAazvB,EAAE,uBACf6zB,GAAkB7zB,EAAE,gCAAiC,CACnDL,EAAAI,QAAAqF,cAAA,QACEjD,IAAI,kCACJoD,UAAU,mCACV,cAAY,mCAEXgsB,aAAY,EAAZA,EAActD,YAGnB9b,GAAUqhB,IACR7zB,EAAAI,QAAAqF,cAACurB,EAAA5wB,QAAmB,CAClByzB,iBAAkBA,GAClBe,4BAA6B3G,OAuBnC,EAAAjuB,EAAA6W,YAAU,KACJ0a,GAEFxkB,GAAS,EAAAf,EAAAipB,wBACX,GACC,CAACloB,EAAUwkB,IAGZvxB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,4BACV0rB,GAAgBC,IACjBvxB,EAAAI,QAAAqF,cAACkrB,EAAAvwB,QAAM,CACLuxB,sBAAuBA,EAAsBuD,QAC7CxrB,MAAM,KACNC,OAAO,OAGX3J,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BAA+BquB,IAC9Cj0B,EAAAI,QAAAqF,cAAA,OACEG,UAAU,wBACV,cAAY,wBAEXopB,IAEHhvB,EAAAI,QAAAqF,cAAA,OACEG,UAAU,kCACV,cAAY,kCAEXsuB,IAEF1hB,KAED+e,GAAYD,EACZtxB,EAAAI,QAAAqF,cAACsrB,EAAA3wB,QAAa,CAACw0B,4BAA6B3G,KAC1C,KACJjuB,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACVkgB,SAAU7Y,UAEJ8pB,IAAaX,EAAAuD,+BACTpnB,GAAS,EAAA6f,EAAAgD,wBACf1gB,EAAQC,KAAK9B,EAAA4C,gBACJshB,IAAaX,EAAAiE,sBACtB9nB,GAAS,EAAA6f,EAAAuI,mCACHpoB,GACJ,EAAA6f,EAAAwI,6BACElmB,EACA2iB,EACAE,EACArrB,KAGK6qB,QACHxkB,GAAS,EAAA6f,EAAAyI,0BAAyBnmB,MAExC,EAAA2hB,EAAAyE,2BAA0B1D,aAAY,EAAZA,EAActD,SAAU3P,IAClD2S,SAIMvkB,GAAS,EAAAf,EAAAupB,6BAA4B,aAF3CrmB,EAAQC,KAAK9B,EAAA4C,eAIf,EAEF6Y,SAAUrhB,eAAkBsF,GAAS,EAAA6f,EAAAyI,0BAAyBnmB,IAC9D4gB,WAAYA,GACZzH,SAAUqJ,EACV3B,WAAYwB,IAAaX,EAAAiE,uBAIjC,CAEAxD,EAAatN,UAAY,CACvBuN,aAAc/vB,EAAAnB,QAAUwL,KACxB4lB,OAAQjwB,EAAAnB,QAAUuL,OAClB8lB,eAAgBlwB,EAAAnB,QAAUuL,OAC1B4lB,SAAUhwB,EAAAnB,QAAUo1B,MAAM,CACxB5E,EAAAiE,qBACAjE,EAAAwD,kBACAxD,EAAAkE,sBACAlE,EAAAmE,2BACAnE,EAAAuD,wBACAvD,EAAAoE,+BAEFtD,eAAgBnwB,EAAAnB,QAAUwL,KAC1BgR,KAAMrb,EAAAnB,QAAUuL,O,iWC9VlB,IAA0CtJ,EAA1CozB,GAA0CpzB,EAA1Cf,EAAA,qBAA0Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,mQCE3B,WACb,OACErC,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,mpBACF1rB,KAAK,iCAIb,EAjBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,iRCEX,WACb,OACErC,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,6MACF1rB,KAAK,+BAIb,EAjBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,+QCEX,WACb,OACErC,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,m4BACF1rB,KAAK,iCAIb,EAjBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,8iDCA1B,IAAArC,EAwGqD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAxGrDY,CAAAC,EAAA,UACAo0B,EAAAl0B,EAAAF,EAAA,iBACAC,EAAAC,EAAAF,EAAA,eACAyK,EAAAzK,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAq0B,EAAAr0B,EAAA,UACA6L,EAAA7L,EAAA,oBACAovB,EAAApvB,EAAA,4BACAW,EAAAX,EAAA,iCACAs0B,EAAAt0B,EAAA,oCAIAu0B,EAAAv0B,EAAA,mCACAmrB,EAAAnrB,EAAA,0BACAw0B,EAAAt0B,EAAAF,EAAA,2BACAy0B,EAAAv0B,EAAAF,EAAA,4BACA00B,EAAAx0B,EAAAF,EAAA,wBACA4K,EAAA5K,EAAA,oCACA20B,EAAAz0B,EAAAF,EAAA,wCACA40B,EAAA10B,EAAAF,EAAA,iEACA+L,EAAA/L,EAAA,qCAKAsrB,EAAAtrB,EAAA,8BAuBA2K,EAAA3K,EAAA,sBAWAoY,EAAApY,EAAA,wCAKAiM,EAAAjM,EAAA,+BACA60B,EAAA70B,EAAA,8BACA80B,EAAA90B,EAAA,kCACA+0B,EAAA/0B,EAAA,qCACAg1B,EAAAh1B,EAAA,mCAEAsvB,EAAAtvB,EAAA,0CAIAmhB,EAAAnhB,EAAA,4CAKAuvB,EAAAvvB,EAAA,sCAOA0K,EAAA1K,EAAA,0BAQAwvB,EAAAxvB,EAAA,iBACAquB,EAAAnuB,EAAAF,EAAA,oBACAi1B,EAAAj1B,EAAA,2CACAk1B,EAAAl1B,EAAA,wDACAm1B,EAAAn1B,EAAA,qCACAo1B,EAAAp1B,EAAA,sCACAsY,EAAAtY,EAAA,+CAGqD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAErD,MAAM02B,EAAiB,CACrB,CAAE9yB,KAAM,OAAQ+yB,OAAQ,MACxB,CAAE/yB,KAAM,SAAU+yB,OAAQ,MAC1B,CAAE/yB,KAAM,UAAW+yB,OAAQ,OAG7B,IAAIC,EAEW,SAASC,GAAWC,WACjCA,EAAUC,uBACVA,EAAsBC,mBACtBA,IACC,IAAAC,EACD,MAAM72B,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACf3f,GAAW,EAAAhB,EAAAyK,eACXtH,GAAU,EAAA/B,EAAA2X,cACVpe,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,qBAEvBuU,EAA0BC,IAC/B,EAAAp3B,EAAAge,UAAShb,YACJq0B,EAAqBC,IAA0B,EAAAt3B,EAAAge,WAAS,GAEzDuZ,GAAsB,EAAAxrB,EAAAsR,aAAYuP,EAAA4K,wBAClChJ,GAAe,EAAAziB,EAAAsR,aAAYuP,EAAA6K,iBAC3B9K,GAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgB8I,EAAA+B,UAC1C1K,gBAAEA,GAAkB,CAAC,EAACD,qBAAEA,GAAuB,CAAC,IACpDJ,aAAW,EAAXA,EAAaM,WAAY,CAAC,EACtB0K,IAAS,EAAA5rB,EAAAsR,aAAYnR,EAAA0rB,UAAWjC,EAAA+B,SAChCG,IAAY,EAAA9rB,EAAAsR,aAAYuP,EAAAkL,aAAcnC,EAAA+B,SACtCK,IAAY,EAAAhsB,EAAAsR,aAAYuP,EAAAoL,aAAcrC,EAAA+B,SACtC7F,IAAsB,EAAA9lB,EAAAsR,aAAYuP,EAAAkF,wBAClCmG,IAAiB,EAAAlsB,EAAAsR,aAAYuP,EAAAsL,mBAC7BnG,IAAc,EAAAhmB,EAAAsR,aAAYuP,EAAAoF,gBAC1BmG,IAAU,EAAApsB,EAAAsR,aAAYuP,EAAAwL,WAAYzC,EAAA+B,UAAY3K,GAC9CsL,IAAoB,EAAAtsB,EAAAsR,aAAYpR,EAAAqsB,qBAAsB3C,EAAA+B,SACtD/Y,IAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtB4T,IAAW,EAAAzmB,EAAAsR,aAAYpR,EAAAwmB,8BAA+B1mB,EAAAqhB,cACtDxkB,IAAY,EAAAmD,EAAAsR,aAAYpR,EAAAY,aAAc8oB,EAAA+B,SACtCa,IAAS,EAAAxsB,EAAAsR,aAAYuP,EAAA4L,UAAW7C,EAAA+B,SAChCe,GAAmB73B,OAAO83B,KAAKH,IAAQjqB,OAAS,EAChDqqB,IAAqB,EAAA5sB,EAAAsR,aAAYuP,EAAAgM,sBAAuBjD,EAAA+B,SAExDmB,IAAuB,EAAA9sB,EAAAsR,aAAYpR,EAAA6sB,sBAAuBnD,EAAA+B,SAC1DrE,IAAiB,EAAAtnB,EAAAsR,aAAYnR,EAAA6sB,mBAC7BC,IAAuB,EAAAjtB,EAAAsR,aAAYpR,EAAAgtB,yBACnC5L,IAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,IAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBACjCC,IAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,IAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCC,IAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIoL,IAAuB,EAAAntB,EAAAsR,aAAYuP,EAAAuM,yBACnC9zB,IAAkB,EAAA0G,EAAAsR,aAAYpR,EAAAomB,oBAE9B+G,IAAuB,EAAAxI,EAAA0E,2BAC3BtI,cAAe,EAAfA,GAAiBoB,OACjBzP,IAEE0Z,GACArL,IAEEqM,QAAEA,GAAOC,mBAAEA,KAAuB,EAAAlD,EAAAmD,iBAAgB,CAAE5B,YAKpD6B,KACH,EAAA5I,EAAA0E,2BAA0ByC,cAAS,EAATA,GAAW3J,OAAQzP,KAA9C,MAA0DoZ,OAAW0B,QACjE,CAAC1B,IACD,GACA2B,IAAc,EAAA/D,EAAAgE,QAClB,IAAIL,MAAuB3B,MAAW6B,IACtC,WAEII,IAAsB,EAAA/D,EAAAgE,kBAAiBH,IAEvCI,IAAoB,EAAAlE,EAAAmE,wBACxBhC,IAAaqB,GACbP,GACAxF,GACAhuB,GACAsZ,GACA/V,IAGIoxB,IAAyB,EAAApE,EAAAqE,mBAAkB,CAC/CP,YAAaE,GACbM,UAAWrC,GACXZ,qBACAkD,oBAAqBtJ,EAAAuJ,oBAAoBC,QAErCC,IAAuB,EAAA1E,EAAAqE,mBAAkB,CAC7CP,YAAaE,GACbM,UAAWrC,GACXZ,qBACAkD,oBAAqBtJ,EAAAuJ,oBAAoBG,MAErCC,GACJR,GAAuBzyB,MAAK,EAAG+B,cAC7B,EAAAitB,EAAAkE,wBAAuBnxB,EAAS6uB,cAAO,EAAPA,GAAS7uB,YACtC6uB,GACDuC,IACJF,cAAe,EAAfA,GAAiBlxB,YAChB,EAAAsnB,EAAA+J,4BAA2BH,cAAe,EAAfA,GAAiBlxB,QAASqV,IAClDic,GAAcx3B,QAClBo3B,cAAe,EAAfA,GAAiBK,cAAcL,cAAe,EAAfA,GAAiBI,cAAe,IAG/DtxB,QAASwxB,GACT1M,OAAQ2M,GACRpvB,OAAQqvB,GACRC,SAAUC,GACVzB,QAAS0B,IACPrB,IAAqB,CAAC,GAClBxwB,QAAS8xB,IAAmBZ,IAAmB,CAAC,EAElDa,GACJF,KACA,EAAA3E,EAAA8E,iBAAgBH,GAAqBD,IAAmB90B,SAAS,IAE7Dm1B,IAAuB,EAAApF,EAAAqF,aAAYH,IAEnCI,IAAyB,EAAApF,EAAAqF,oBAC7BZ,GACAjJ,IAAuB,EACvBkJ,GACA,CACEY,SAAU3C,KAEZ,GAEI4C,IAAuB,EAAAtF,EAAAuF,kBAC3BhK,IAAuB,EACvB,CAAE8J,SAAU3C,KACZ,GAEI8C,IAAoB,EAAAlL,EAAA0E,2BAA0ByF,GAAiBpc,IACjEid,GACAH,GAEEM,IAAgB,EAAA/7B,EAAA0W,cACpB,CAACslB,EAAevC,KACd1sB,GAAS,EAAA6f,EAAAqP,wBAAuBD,IAChC,MAAME,EAAkB,IAAIxG,EAAAt1B,QAAU47B,GAAiB,GAAGpV,GACxD6S,GAAW,GAGTjL,IAAiB0N,GACnBnvB,GAAS,EAAA6f,EAAAuP,iBAAgBD,IAE3BnvB,GACE,EAAA6f,EAAAwP,mBACErE,KAAa,EAAAjH,EAAAuL,eAAcL,GAAiBjE,GAAUkD,SAClD,kBACA,MAEP,GAEH,CAACluB,EAAUgrB,GAAWvJ,IAGlB8N,GAAgBC,IAElBA,WAAOjzB,UACNwyB,IAC4B,OAA7B3E,GAEA,EAAArG,EAAA0L,iBAAgBD,EAAMjzB,SAASmzB,MAAMC,IACtB,OAATA,GAAiBA,IAAS15B,WAC5Bo0B,EAA4BsF,EAC9B,IAGFtF,EAA4B,MAG5BmF,WAAOjzB,UACNswB,GAAoBryB,MAAMo1B,IACzB,EAAApG,EAAAkE,wBAAuBkC,EAAWrzB,QAASizB,EAAMjzB,aAGnD,EAAAmtB,EAAAmG,mBACEL,EAAMjzB,QACN0tB,EACA9b,OAAO2hB,kBACPJ,MAAMK,IACN,GAAIA,WAAgBrD,QAAS,CAC3B,MAAMsD,EAAqBD,EAAerD,QAAQrzB,SAAS,IACrD42B,GAAmB,EAAAxG,EAAA8E,iBACvByB,EACAR,EAAMtB,UAERluB,GACE,EAAA6f,EAAAqQ,mBAAkB,IACbV,EACH5wB,OAAQqxB,EAAiB52B,SAAS,IAClCqzB,QAASsD,IAGf,KAGJhwB,GAAS,EAAA6f,EAAAqQ,mBAAkBV,IAC3BR,GACEQ,WAAOjzB,QAAUuoB,GAAsB,GACvC0K,EAAM5wB,OACN4wB,EAAMtB,SACP,EAGGiC,IAAyB,EAAAxM,EAAAyM,qBAC7B3C,GAAgBlxB,QAChBqV,GACA,KACA,KACA,CACEkV,iBACEhD,EAAAiD,6CAA6CnV,KAAY,OAIzDye,GAAqB5K,GAASqB,kBAChC,EAAAtmB,EAAA8vB,gBAAeH,IACf78B,EAAE,cAEEiJ,QAASg0B,IAAcnF,IAAW,CAAC,EACrCoF,IAAa,EAAAv9B,EAAA0W,cAChB6lB,IACK5D,IAAsB4D,EAAMjzB,UAAYg0B,IAC1CvwB,GACE,EAAAf,EAAAwxB,cAAa,CACXC,eAAgBH,GAChBI,0BAA0B,KAIhC3wB,GAAS,EAAA6f,EAAA+Q,gBAAepB,IACxBjF,GAAuB,EAAM,GAE/B,CAACvqB,EAAU4rB,GAAoB2E,KAG3BM,IAAqB,EAAA59B,EAAA0W,cACxBmnB,IAAS,EAAAtH,EAAAkE,wBAAuBoD,EAAKv0B,QAASwxB,KAC/C,CAACA,KAGGgD,GAA8BxE,GAAmB/xB,MAAMg1B,IAC3D,EAAAhG,EAAAkE,wBAAuB8B,EAAMjzB,QAASyuB,cAAS,EAATA,GAAWzuB,WAE7Cy0B,IAAsC,EAAA5H,EAAAqF,aAC1CsC,KAGF,EAAA99B,EAAA6W,YAAU,KACR,MAAMmnB,IAAc,EAAApN,EAAA+J,4BAClBmD,cAA2B,EAA3BA,GAA6Bx0B,QAC7BqV,IAEIsf,GAAsB,EAAA1H,EAAAkE,wBAC1BqD,cAA2B,EAA3BA,GAA6Bx0B,QAC7By0B,cAAmC,EAAnCA,GAAqCz0B,SAEjC40B,GACJJ,cAA2B,EAA3BA,GAA6BrE,YAC7BsE,cAAmC,EAAnCA,GAAqCtE,SACnCuE,GAAcC,GAAuBC,GACvCnxB,GACE,EAAA6f,EAAAqQ,mBAAkB,IACblF,GACH0B,QAASqE,cAA2B,EAA3BA,GAA6BrE,QACtC9tB,OAAQmyB,cAA2B,EAA3BA,GAA6BnyB,SAG3C,GACC,CACDoB,EACA+wB,GACAC,GACAhG,GACApZ,MAIF,EAAA3e,EAAA6W,YAAU,MAEN,EAAA+Z,EAAA+J,4BAA2B5C,cAAS,EAATA,GAAWzuB,QAASqV,MAC/CoZ,cAAS,EAATA,GAAW0B,YAAY,EAAA7f,EAAAiG,cAAakX,IAEpChqB,GACE,EAAA6f,EAAAqQ,mBAAkB,IACblF,GACH0B,SAAS,EAAA7f,EAAAiG,cAAakX,GACtBprB,QAAQ,EAAAiO,EAAAukB,oBAAmB,CACzB17B,MAAOs0B,EACPqH,iBAAkB,EAClBC,eAAgB,UAIxB,GACC,CAACtxB,EAAUgrB,GAAWhB,EAAYpY,MAErC,EAAA3e,EAAA6W,YAAU,KACJ0kB,KAAyBF,IAC3BU,GAAclK,GAAqBwJ,GACrC,GACC,CACDU,GACAR,GACA1J,GACAwJ,KAGF,MAAMiD,IAAiC,EAAAt+B,EAAA0W,cAAY,KACjDhQ,EAAW,CACTI,MAAO,0BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,CACnBU,mBAAoBtB,GACpBuB,qBAAsBrB,GACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,KAEnB,GACD,CACD/mB,EACA2mB,GACAE,GACAI,GACAE,GACAJ,MAGF,EAAAztB,EAAA6W,YAAU,KACR9J,GAAS,EAAAf,EAAAuyB,6BACTxxB,GAAS,EAAA6f,EAAA4R,kCACTF,IAAgC,GAC/B,CAACvxB,EAAUuxB,MAEd,EAAAt+B,EAAA6W,YAAU,KACJ8W,UAA4BuL,OAAsBuF,cAEpD,EAAAzyB,EAAA0yB,4BACF,GACC,CAAC/Q,GAA0BuL,KAE9B,MAAMyF,GAAoB,IAEtB3+B,EAAAI,QAAAqF,cAAA,KACEG,UAAU,2DACVpD,IAAI,6BACJ6G,QAAS,KAEP3C,EAAW,CACTI,MAAO2b,EAAA1b,qBAAqB63B,oBAC5Bj4B,SAAU8b,EAAA7b,yBAAyBonB,MACnC/mB,WAAY,CACV43B,UAAWpc,EAAAqc,yBAAyBC,aACpCzpB,SAAU,qBACV0pB,YAAY,EAAAzxB,EAAA8vB,gBAAeH,OAG/BhiB,OAAOC,SAASC,QAAQ,CACtBC,IAAK6hB,IACL,EAEJ9uB,OAAO,SACP+J,IAAI,uBAEHilB,IAKP,IAAI6B,GAA+B,GAC/B/B,KACkB,IAAhBtC,GACFqE,GAA+B5+B,EAAE,oBAAqB,CACpDL,EAAAI,QAAAqF,cAACk5B,GAAiB,CAACn8B,IAAI,0BAEA,IAAhBo4B,KACTqE,GAA+B5+B,EAAE,+BAAgC,CAC/DL,EAAAI,QAAAqF,cAACk5B,GAAiB,CAACn8B,IAAI,4BAK7B,MAAM08B,GAAuB7+B,EAAE,uBAAwB,CACrD26B,IAAmB,IACnBD,KAA2D,QAA5C7D,EAAIrG,EAAAsO,gCAAgCxgB,WAAQ,IAAAuY,OAAA,EAAxCA,EAA0C9I,SAAU,KAGnEgR,IAA0B,EAAA1I,EAAA2I,4BAC9B1gB,GACAmc,GACAN,GAAgBlxB,SAEZg2B,GACJrH,KACCV,IACAn0B,OAAOyuB,OACP2I,aAAiBlxB,WACjBwxB,IACD13B,OAAO2uB,IAAe,GACtB3uB,OAAO2uB,IAAelB,EAAA0O,sBACrB7E,IAAuBE,GAAc,IAAMvD,EAwC9C,OArCA,EAAAr3B,EAAA6W,YAAU,KACR9J,GAAS,EAAAf,EAAAwzB,qBACTzyB,GAAS,EAAAf,EAAAipB,yBAsBT,OAPA4B,EAAgC4I,YAAW,KACzC5I,EAAgC,KAC3ByI,IAhBkC73B,iBAEjCsF,GACJ,EAAA6f,EAAAwI,6BACElmB,EACA2iB,GACAE,GACArrB,GAN4B,GAS/B,EAQCg5B,EACF,GACC,KACI,IAAMC,aAAa9I,EAA8B,GACvD,CACD9pB,EACAmC,EACA6iB,GACArrB,EACA44B,GACAzN,GACAiJ,GACAM,GACA3N,KAIAztB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,eACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,2CACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,4BAA4BvF,EAAE,mBAC3C,EAAAuwB,EAAA0E,2BAA0ByF,GAAiBpc,KAC3C3e,EAAAI,QAAAqF,cAAA,OACEG,UAAU,0BACV,cAAY,0BACZyD,QAAS,IACP0yB,GAAcV,IAAoB,IAAKA,KAGxCh7B,EAAE,SAITL,EAAAI,QAAAqF,cAACqwB,EAAA11B,QAAiB,CAChBwT,SAAU0oB,GACVsD,cAAe5F,GACf+B,cAAgBt5B,IAEds5B,GAAct5B,EAAO44B,GAAiB,EAExCwE,WAAYhO,GACZiO,UAAWjO,IAAuBiK,GAClCiE,aAAcjG,GACdkG,aAAc,GACd3G,QACEA,OACEW,aAAwB1rB,UACvBupB,KACAj3B,OAAO83B,KAAKb,IAAWvpB,QAE5B2xB,sBAAuB5/B,EAAE,cACzB6/B,WAAarC,IACX,EAAAtH,EAAAkE,wBAAuBoD,EAAKv0B,QAASkxB,cAAe,EAAfA,GAAiBlxB,SAExD62B,uBAAuB,6BACvBjpB,WAAS,IAEXlX,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,+BAAgC,CACpD,sCACEouB,GAAgByJ,OAGlBA,KACCzJ,GACDuM,IACAmE,IACAjH,IAAkBzJ,GAAgBuM,IAClC/6B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yCACZvF,EAAE,sBAAuB,CAAC06B,MAE7B/6B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,0CACZs5B,KAINjH,IACCj4B,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,2BACZvF,EAAE,2BAA4B,CAC7B06B,GACAG,MAGJl7B,EAAAI,QAAAqF,cAAA,WAAMy5B,MAIZl/B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACb5F,EAAAI,QAAAqF,cAAA,UACEG,UAAU,2BACV,cAAY,2BACZyD,QAAS,KACPk0B,GAAWzD,IACXwC,GAAa9B,GAAgB,GAG/Bx6B,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,iBAAiBkW,MAAOzb,EAAE,oBACvCL,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,mBAAmBkW,MAAOzb,EAAE,sBAG7CL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,4BAA4BvF,EAAE,gBAE/CL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+CACb5F,EAAAI,QAAAqF,cAACswB,EAAA31B,QAAkB,CACjBggC,aAAc5F,GACdoF,cAAetF,GACf3D,eAAgBA,EAChBsJ,sBAAuB5/B,EAAE,oBACzB2/B,aAAc,GACdpsB,SAAU2pB,GACVlE,QACEA,OACEiB,aAAsBhsB,UACrBupB,KACAj3B,OAAO83B,KAAKb,IAAWvpB,QAE5B+xB,uBAAwB7F,GACxB0F,WAAYtC,GACZuC,uBAAuB,gCACvBG,iBAAe,EACfC,cAAY,EACZC,wBAAsB,KAGzB9F,KACEE,GAAc,EACb56B,EAAAI,QAAAqF,cAACywB,EAAA91B,QAAiB,CAChBoK,KAAsB,IAAhBowB,GAAoB,UAAY,SACtCha,QACE5gB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mDACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qBAETvF,EADa,IAAhBu6B,GACK,qCACA,uCAER56B,EAAAI,QAAAqF,cAAA,WAAMw5B,KAGVwB,cAEEpJ,EACI,KACA,CACEqJ,MAAOrgC,EAAE,YACTgJ,QAAS,IAAMiuB,GAAuB,IAG9CqJ,iBAAe,EACfC,gBACE1D,IACA78B,EAAE,6BAA8B,CAAC+8B,OAIrCp9B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,8BACb5F,EAAAI,QAAAqF,cAAA,QACEG,UAAU,oBACVpD,IAAI,gCAEHnC,EAAE,+BAAgC,CAACu6B,MAErCsC,IACCl9B,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACG1P,EAAE,+BAAgC,CACjCL,EAAAI,QAAAqF,cAAA,KACEG,UAAU,oCACVpD,IAAI,6BACJ6G,QAAS,KAEP3C,EAAW,CACTI,MAAO,8BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnC/mB,WAAY,CACV43B,UAAW,gBACXgC,OAAQ,qBACRC,uBAAuB,EAAAvzB,EAAA8vB,gBACrBH,OAINhiB,OAAOC,SAASC,QAAQ,CACtBC,IAAK6hB,IACL,EAEJ9uB,OAAO,SACP+J,IAAI,uBAEHilB,MAGLp9B,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,MACTC,YAAa3gC,EAAE,6BAA8B,CAC3C+8B,KAEF6D,mBAAmB,uCACnBz+B,IAAI,wCAMd48B,IACAp/B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,2CACb5F,EAAAI,QAAAqF,cAACuwB,EAAA51B,QAAe,CACdwT,SAAWstB,IACTn0B,GAAS,EAAA6f,EAAAuU,gBAAeD,GAAa,EAEvCE,mBAAoBvQ,EAAA0O,qBACpB8B,gBAAiBtP,GACjBqN,wBAAyBA,OAKjCp/B,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACVkgB,SAEE7Y,UAEEsF,GAAS,EAAA6f,EAAA4R,+BAA8Br4B,KAAKmY,QAGxCuY,GACF8I,aAAa9I,GACb9pB,GACE,EAAA6f,EAAAwI,6BACElmB,EACA2iB,GACAE,GACArrB,KAGK+xB,GAETvpB,EAAQC,KAAK9B,EAAAi0B,yBAGPv0B,GAAS,EAAAf,EAAAu1B,6BAA4B,YAC3CryB,EAAQC,KAAK9B,EAAAm0B,sBACf,EAGJ1R,WAAYzvB,EAAE,kBACdgoB,SAAUiX,GACVvP,YAAU,EACV0R,oBAAkB,IAI1B,CAEA3K,EAAW/S,UAAY,CACrBgT,WAAYx1B,EAAAnB,QAAUuL,OACtBqrB,uBAAwBz1B,EAAAnB,QAAUuL,OAClCsrB,mBAAoB11B,EAAAnB,QAAUshC,M,2VC9xBhC,IAAwCr/B,EAAxCs/B,GAAwCt/B,EAAxCf,EAAA,mBAAwCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,udCAxC,IAAArC,EAW2D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAX3DY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAsgC,EAAAtgC,EAAA,SACAmrB,EAAAnrB,EAAA,0BACA20B,EAAAz0B,EAAAF,EAAA,wCACAsrB,EAAAtrB,EAAA,8BAIAugC,EAAAvgC,EAAA,qCAA2D,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAM3D,SAAS6hC,EAAYC,EAAaC,EAAaC,GAE7C,OAAOA,GADoBF,EAAcC,EAE3C,CAEA,SAASE,EAAmBC,GAC1B,OAAOjoB,KAAKkoB,IAAID,EAAQN,EAAAQ,OAAQ,EAClC,CAEA,SAASC,EAAqBH,EAAOI,GACnC,MAAOC,EAAoBC,GAAsBF,EAAYG,MAAM,KACnE,OACEP,IAC8B,GAA7B/+B,OAAOo/B,GAA2Bp/B,OAAOq/B,IAAuBZ,EAAAQ,MAErE,CAEe,SAASM,GAAeX,YACrCA,EAAWY,SACXA,EAAQC,UACRA,EAASN,YACTA,EAAWO,SACXA,EAAQC,oBACRA,IAEA,MAAM1iC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfsW,GAAc,EAAAhjC,EAAAirB,UACdgY,GAAwB,EAAAjjC,EAAAirB,UAExBiY,GAAwB,EAAAn3B,EAAAsR,aAAYuP,EAAAuW,0BACpCC,GAAmC,EAAAr3B,EAAAsR,aACvCuP,EAAAyW,qCAEIC,EAAcL,EAAsB/N,QACtCgO,EACAE,EACEG,EAAangC,OAAOy/B,IAAcS,GAEjCvB,EAAayB,IAAkB,EAAAxjC,EAAAge,WAAS,IAAM7X,KAAKmY,SACnD6jB,EAAOsB,IAAY,EAAAzjC,EAAAge,WAAS,IACjC8jB,EAAYC,EAAaC,EAAauB,MAGxC,EAAAvjC,EAAA6W,YAAU,KACJmsB,EAAY9N,UAAYlyB,YAC1BggC,EAAY9N,QAAU1W,aAAY,KAChCilB,EAASvB,EAAmB,GAC3BL,EAAAQ,SAGE,WACL5jB,cAAcukB,EAAY9N,QAC5B,IACC,KAGH,EAAAl1B,EAAA6W,YAAU,KAKR,GAJKosB,EAAsB/N,UACzB+N,EAAsB/N,QAAU8M,GAAe77B,KAAKmY,OAGxC,IAAV6jB,GAAeH,IAAgBiB,EAAsB/N,QAAS,CAChE+N,EAAsB/N,QAAU8M,EAChC,MAAM0B,EAAiBv9B,KAAKmY,MAC5BklB,EAAeE,GACfD,EAAS3B,EAAY4B,EAAgB1B,EAAauB,IAElD9kB,cAAcukB,EAAY9N,SAC1B8N,EAAY9N,QAAU1W,aAAY,KAChCilB,EAASvB,EAAmB,GAC3BL,EAAAQ,OACL,IACC,CAACL,EAAaG,EAAOoB,IAExB,MAAMI,EAAiB/B,EAAAgC,SAASC,WAAW1B,GAAO2B,SAAS,QAC3D,IAAIC,EAWJ,OAVInB,EACFmB,EAAO/jC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yBAAyB+9B,GACtCb,IACTiB,EAAO1jC,EAAEyiC,EAAU,CACjB9iC,EAAAI,QAAAqF,cAAA,OAAKjD,IAAI,mBAAmBoD,UAAU,yBACnC+9B,MAML3jC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mBACb5F,EAAAI,QAAAqF,cAAA,OACE,cAAY,mCACZG,WAAW,EAAAnE,EAAArB,SAAW,mCAAoC,CACxD,4CACEmiC,GAAeD,EAAqBH,EAAOI,MAG9CwB,IAEDnB,GAAYG,EACZ/iC,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CAAC2gC,SAAS,SAASC,YAAa3gC,EAAE0iC,KAC5C,KAGV,CAEAJ,EAAe5e,UAAY,CAKzBie,YAAazgC,EAAAnB,QAAUyL,OAMvB+2B,SAAUrhC,EAAAnB,QAAUwL,KAKpBi3B,UAAWthC,EAAAnB,QAAUyL,OAMrB02B,YAAahhC,EAAAnB,QAAUuL,OAMvBm3B,SAAUvhC,EAAAnB,QAAUuL,OAMpBo3B,oBAAqBxhC,EAAAnB,QAAUuL,O,uWC3JjC,IAA4CtJ,EAA5C2hC,GAA4C3hC,EAA5Cf,EAAA,uBAA4Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,olBCA5C,IAAArC,EAe0D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAf1DY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACA6L,EAAA7L,EAAA,oBACAwrB,EAAAtrB,EAAAF,EAAA,mBAEA2tB,EAAAztB,EAAAF,EAAA,+BACAmrB,EAAAnrB,EAAA,0BACAW,EAAAX,EAAA,iCACAmhB,EAAAnhB,EAAA,4CACAsrB,EAAAtrB,EAAA,8BAIA+L,EAAA/L,EAAA,qCACA2K,EAAA3K,EAAA,sBAA0D,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAE3C,SAASgkC,GAAcrP,4BAAEA,IACtC,MAAMv0B,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfhmB,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,oBACxB7V,GAAW,EAAAhB,EAAAyK,eACXtH,GAAU,EAAA/B,EAAA2X,cACVuT,GAAoB,EAAAtsB,EAAAsR,aAAYpR,EAAAqsB,qBAAsBxL,EAAA1sB,SAE5D,OACEJ,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAAC2J,aAAc,EAAGnE,UAAU,mBAC9B5F,EAAAI,QAAAqF,cAAA,UACE4D,QAAS5B,UACPf,EAAW,CACTI,MAAO,oBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB2G,IAEvB1lB,EAAQC,KAAK9B,EAAA4C,qBACPlD,GAAS,EAAA6f,EAAAyI,0BAAyBnmB,IACxCnC,GAAS,EAAA6f,EAAAqQ,mBAAkB5E,GAAmB,GAG/Ch4B,EAAE,oBAIX,CAEA4jC,EAAclgB,UAAY,CACxB6Q,4BAA6BrzB,EAAAnB,QAAU0L,OAAO6I,W,uWC7ChD,IAA4CtS,EAA5C0uB,GAA4C1uB,EAA5Cf,EAAA,uBAA4Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,iXCA5C,IAAArC,EAI0D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAJ1DY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAy0B,EAAAv0B,EAAAF,EAAA,4BACA4iC,EAAA1iC,EAAAF,EAAA,sCAA0D,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAE1D,MAAMkkC,EAAoB,CACxB,EAAG,KACH,EAAG,MACH,EAAG,MACH,EAAG,KACH,EAAG,GACH,EAAG,MACH,EAAG,KACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,IAAK,MAGDC,EAAiB3hC,GACDU,OAAOV,GACGigC,MAAM,IACnB2B,QACf,CAACC,EAAYC,IAAUD,EAAaH,EAAkBI,IACtD,IAGW,SAASC,GAAkB5E,cACxCA,EAAgB,GAAE7D,cAClBA,EAAa8D,WACbA,EAAa,GAAEjsB,SACfA,EAAQksB,UACRA,EAASC,aACTA,EAAY0E,sBACZA,EAAqBzE,aACrBA,EAAYC,sBACZA,EAAqB5G,QACrBA,EAAO6G,WACPA,EAAUC,uBACVA,EAAsBjpB,UACtBA,IAEA,MAAOd,EAAQsuB,IAAa,EAAA1kC,EAAAge,WAAS,GAG/B2mB,GAAW,EAAA3kC,EAAAirB,WAiBV2Z,EAAmBC,IAAwB,EAAA7kC,EAAAge,UAAS,MAS3D,OARA,EAAAhe,EAAA6W,YAAU,KAAM,IAAAiuB,EACdD,IACGF,SAAiB,QAATG,EAARH,EAAUzP,eAAO,IAAA4P,GAAyB,QAAzBA,EAAjBA,EAAmBC,+BAAuB,IAAAD,OAAA,EAA1CA,EAA4Cp7B,QAAS,GACpD06B,EAAcvE,GAAc,IAC5B,IACH,GACA,CAACA,EAAY8E,IAGd3kC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uBACb5F,EAAAI,QAAAqF,cAACswB,EAAA31B,QAAkB,CACjBw/B,cAAeA,EACf6E,sBAAuBA,EACvB9N,eAAgB,CACd,CAAE9yB,KAAM,OAAQ+yB,OAAQ,MACxB,CAAE/yB,KAAM,SAAU+yB,OAAQ,MAC1B,CAAE/yB,KAAM,UAAW+yB,OAAQ,OAE7BoJ,aAAcA,EACdgF,OAvCO,IAAMN,GAAU,GAwCvB3tB,QAvCQ,IAAM2tB,GAAU,GAwCxB9wB,SAAUA,EACVhO,UAAWwQ,EAAS,wCAA0C,GAC9DiqB,uBAAwBN,EACxBE,sBAAuBA,EACvBgF,wBAAwB,wCACxB9E,uBAAwBA,EACxB9G,QAASA,EACT6G,WAAYA,EACZK,cAAY,KAEZnqB,GACApW,EAAAI,QAAAqF,cAACy+B,EAAA9jC,QAAS,CACRwF,WAAW,EAAAnE,EAAArB,SAAW,6BAA8B,CAClD,sCAAuCwkC,IAEzCp6B,KAAK,OACL06B,YAAY,IACZ1+B,SAvDmBM,IACzBA,EAAMq+B,kBAEN,MAAMC,EAAoC,MAAvBt+B,EAAMsH,OAAO3L,MAAgB,KAAOqE,EAAMsH,OAAO3L,MAKjD,KAAf2iC,GAFW,+BAEiBC,KAAKD,GACnCrJ,EAAcqJ,GAIdrJ,EAAc8D,GAAc,GAC9B,EA0CMyF,WAAS,EACTC,OAAO,QACP9iC,MAAOo9B,EACP3oB,UAAWA,KAGbd,GAAU0pB,GACV9/B,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,kCAAmC,CACvD,6CAA8CwkC,IAEhDj/B,IAAKg/B,GACN,KACI7E,GAKb,CAEA0E,EAAkBzgB,UAAY,CAI5B6b,cAAer+B,EAAAnB,QAAUshC,MAIzB3F,cAAex6B,EAAAnB,QAAUqL,KAIzBo0B,WAAYt+B,EAAAnB,QAAUolC,UAAU,CAACjkC,EAAAnB,QAAUyL,OAAQtK,EAAAnB,QAAUuL,SAI7DiI,SAAUrS,EAAAnB,QAAUqL,KAIpBq0B,UAAWv+B,EAAAnB,QAAUuL,OAIrBo0B,aAAcx+B,EAAAnB,QAAU0L,OAIxB24B,sBAAuBljC,EAAAnB,QAAUqL,KAIjCu0B,aAAcz+B,EAAAnB,QAAUyL,OAIxBo0B,sBAAuB1+B,EAAAnB,QAAUuL,OAIjC0tB,QAAS93B,EAAAnB,QAAUwL,KAInBs0B,WAAY3+B,EAAAnB,QAAUqL,KAItB00B,uBAAwB5+B,EAAAnB,QAAUuL,OAIlCuL,UAAW3V,EAAAnB,QAAUwL,K,mXC/KvB,IAAgDvJ,EAAhDyzB,GAAgDzzB,EAAhDf,EAAA,2BAAgDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,u3BCAhD,IAAArC,EAoCoF,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CApCpFY,CAAAC,EAAA,UAOAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAq0B,EAAAr0B,EAAA,UACAmrB,EAAAnrB,EAAA,0BACAmkC,EAAAjkC,EAAAF,EAAA,4BACAguB,EAAA9tB,EAAAF,EAAA,wCACAokC,EAAAlkC,EAAAF,EAAA,oCACAc,EAAAd,EAAA,yCAKA40B,EAAA10B,EAAAF,EAAA,iEACAqkC,EAAAnkC,EAAAF,EAAA,oBACA2K,EAAA3K,EAAA,gCAMAoY,EAAApY,EAAA,wCAIAsrB,EAAAtrB,EAAA,sCACAiM,EAAAjM,EAAA,+BACAsvB,EAAAtvB,EAAA,8BACAW,EAAAX,EAAA,iCACAmhB,EAAAnhB,EAAA,4CAAoF,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAgO,IAAA,OAAAA,EAAArN,OAAAsN,OAAAtN,OAAAsN,OAAAC,OAAA,SAAAC,GAAA,QAAAjN,EAAA,EAAAA,EAAAkN,UAAAC,OAAAnN,IAAA,KAAAoN,EAAAF,UAAAlN,GAAA,QAAAqB,KAAA+L,EAAA3N,OAAAI,UAAAC,eAAAC,KAAAqN,EAAA/L,KAAA4L,EAAA5L,GAAA+L,EAAA/L,GAAA,QAAA4L,CAAA,EAAAH,EAAAO,MAAA9J,KAAA2J,UAAA,CAErE,SAASu3B,GAAmBC,oBACzCA,EAAmBjG,cACnBA,EAAaK,sBACbA,EAAqBtJ,eACrBA,EAAc4J,aACdA,EAAYP,aACZA,EAAYpsB,SACZA,EAAQwsB,aACRA,EAAY4E,OACZA,EAAMjuB,QACNA,EAAOnR,UACPA,EAAY,GAAEy6B,uBACdA,EAAsB4E,wBACtBA,EAAuB5L,QACvBA,EAAOiH,gBACPA,EAAeJ,WACfA,EAAUC,uBACVA,EAAsBK,uBACtBA,IAEA,MAAMngC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,cACdtW,EAAQsuB,IAAa,EAAA1kC,EAAAge,WAAS,IAC9B8nB,EAAwBC,IAA6B,EAAA/lC,EAAAge,WAAS,IAC9D+hB,EAAciG,IAAmB,EAAAhmC,EAAAge,UAASoiB,IAC1C6F,EAAgBC,IAAqB,EAAAlmC,EAAAge,UAAS,OAC9ChN,EAAam1B,IAAkB,EAAAnmC,EAAAge,UAAS,IAEzCqP,GAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,GAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBACjC7O,GAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtB4T,GAAW,EAAAzmB,EAAAsR,aAAYpR,EAAAwmB,+BACvBhF,GAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,GAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCC,IAAkC,EAAA9hB,EAAAsR,aACtCuT,EAAA9C,oCAGIpnB,IAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,oBAExBwjB,IAAQ,EAAApmC,EAAA0W,cAAY,KACxBguB,GAAU,GACV3tB,YAAW,GACV,CAACA,IAEEsvB,IAAc,EAAArmC,EAAA0W,cACjBmnB,IACCjqB,WAAWiqB,GACXmI,EAAgBnI,GAChBuI,IAAO,GAET,CAACxyB,EAAUwyB,KAoCPE,IAAkB,EAAAtmC,EAAA0W,cAAY,KAC7BN,IACHsuB,GAAU,GACVM,aACF,GACC,CAAC5uB,EAAQ4uB,IAENuB,IAAgC,EAAAvmC,EAAAirB,WACtC,EAAAjrB,EAAA6W,YAAU,KACR0vB,GAA8BrR,QAAUmL,CAAsB,IAEhE,MAAMmG,GAA6BD,GAA8BrR,SAEjE,EAAAl1B,EAAA6W,YAAU,KAENwpB,KACC,EAAA1K,EAAA+B,SAAQ2I,EAAwBN,GAEjCiG,EAAgB3F,GACPmG,KAA+BnG,GACxC2F,EAAgB,KAClB,GACC,CAAC3F,EAAwBN,EAAcyG,KAE1C,MAQMC,GACJjU,EAASqB,kBACTjH,EAAAkH,6CAA6CnV,IAC7C,KAEI+nB,IAAwB,EAAAn5B,EAAA8vB,gBAAeoJ,IAEvCE,GAAmB,CACvBC,wBA7C8B,KAC9Bb,GAA0B,GAC1BK,IAAO,EA4CPS,mBApEyB,KACzBngC,GAAW,CACTI,MAAO,iBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,CACnBG,OAAQ6X,aAAc,EAAdA,EAAgB7X,OACxB9kB,QAAS28B,aAAc,EAAdA,EAAgB38B,QACzBw9B,SAAUnoB,EACVgQ,mBAAoBtB,EACpBuB,qBAAsBrB,EACtBsB,YAAalB,EACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,KAIrB7Z,WAAWqyB,GACXD,EAAgBC,GAChBC,EAAkB,MAClBE,IAAO,EAkDPL,4BACAE,kBAGF,OACEjmC,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,uBAAwBwF,GAC9C,cAAY,uBACZyD,QAASi9B,GACTS,QA3Ba9mC,IACD,WAAVA,EAAEuC,IACJ4jC,KACmB,UAAVnmC,EAAEuC,KACX8jC,GAAgBrmC,EAClB,EAuBE+mC,SAAS,KAERf,GAAkBH,GACjB9lC,EAAAI,QAAAqF,cAACkgC,EAAAvlC,QAAW6N,EAAA,CAACmI,QAAM,GAAKuwB,MAExBvwB,GACApW,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,kDACA6kC,IAGFjlC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,0CACZm6B,aAAY,EAAZA,EAAckH,UACbjnC,EAAAI,QAAAqF,cAACigC,EAAAtlC,QAAO,CACNib,IAAK0kB,EAAakH,QAClBrhC,UAAU,6CACV/B,KAAMk8B,aAAY,EAAZA,EAAc3R,WAGtB2R,WAAckH,UACdjnC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gDAEjB5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qCACb5F,EAAAI,QAAAqF,cAAA,QACEG,WAAW,EAAAnE,EAAArB,SACT,6CACA,CACE,yCACG2/B,WAAc3R,YAIpB2R,aAAY,EAAZA,EAAc3R,SAAU6R,MAKjCjgC,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAAS42B,UAAWx2B,KAAMtO,EAAA+Z,SAASgrB,GAAIr9B,YAAa,KAGnEsM,GACCpW,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAACggC,EAAArlC,QAAkB,CACjBw/B,cAAevG,EAAU,GAAKuG,EAC9BwH,YAAa,IAEX/N,EACEr5B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACb5F,EAAAI,QAAAqF,cAAC6pB,EAAAlvB,QAAW,MACZJ,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qDACb5F,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,2CACbvF,EAAE,yBAKTL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qCACZvF,EAAE,gCAAiC,CAAC2Q,IACpCy1B,IACCzmC,EAAAI,QAAAqF,cAAA,OACEuhC,SAAS,IACTphC,UAAU,mEACVpD,IAAI,kCAEJxC,EAAAI,QAAAqF,cAACywB,EAAA91B,QAAiB,CAChBwgB,QAASvgB,EAAE,4BAA6B,CACtCL,EAAAI,QAAAqF,cAAA,KACEjD,IAAI,uCACJ6G,QAAS,KACP3C,GAAW,CACTI,MAAO,8BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnC/mB,WAAY,CACV43B,UAAW,gBACXgC,OAAQ,0BACRC,sBAAuB4F,MAG3BxrB,OAAOC,SAASC,QAAQ,CACtBC,IAAKorB,IACL,EAEJr4B,OAAO,SACP+J,IAAI,uBAEHuuB,UASjBW,sBAAuBhnC,EAAE,2BACzBs2B,eAAgBA,EAChB4J,aAAcA,EACd8F,YAAaA,GACbiB,4BAzL2BzJ,IACnCqI,EAAkBrI,GAClBkI,GAA0B,EAAK,EAwLvB/F,aAAcA,EACdp6B,WAAW,EAAAnE,EAAArB,SACT,wCACAylC,EACA,CACE,6BAA8BzvB,IAGlCkqB,gBAAiBA,EACjBJ,WAAYA,EACZC,uBAAwBA,EACxBK,uBAAwBA,EACxBxvB,YAAaA,EACbm1B,eAAgBA,IAElBnmC,EAAAI,QAAAqF,cAAA,OACEG,UAAU,mCACV,cAAY,mCACZyD,QAAUvC,IACRA,EAAMq+B,kBACNT,GAAU,GACV3tB,YAAW,KAOzB,CAEA6uB,EAAmB7hB,UAAY,CAC7B6b,cAAer+B,EAAAnB,QAAUshC,MACzB9tB,SAAUrS,EAAAnB,QAAUqL,KACpBo6B,oBAAqBtkC,EAAAnB,QAAUuL,OAC/BgrB,eAAgBp1B,EAAAnB,QAAUmnC,QACxBhmC,EAAAnB,QAAUonC,MAAM,CACd3jC,KAAMtC,EAAAnB,QAAUuL,OAChBirB,OAAQr1B,EAAAnB,QAAUyL,UAGtB00B,aAAch/B,EAAAnB,QAAUwL,KACxBo0B,aAAcz+B,EAAAnB,QAAUyL,OACxBu0B,aAAc7+B,EAAAnB,QAAU0L,OACxBk5B,OAAQzjC,EAAAnB,QAAUqL,KAClBsL,QAASxV,EAAAnB,QAAUqL,KACnB7F,UAAWrE,EAAAnB,QAAUuL,OACrB00B,uBAAwB9+B,EAAAnB,QAAU0L,OAClCutB,QAAS93B,EAAAnB,QAAUwL,KACnBq0B,sBAAuB1+B,EAAAnB,QAAUuL,OACjCs5B,wBAAyB1jC,EAAAnB,QAAUuL,OACnC20B,gBAAiB/+B,EAAAnB,QAAUwL,KAC3Bs0B,WAAY3+B,EAAAnB,QAAUqL,KACtB00B,uBAAwB5+B,EAAAnB,QAAUuL,OAClC60B,uBAAwBj/B,EAAAnB,QAAUwL,K,sXC5UpC,IAAiDvJ,EAAjD0zB,GAAiD1zB,EAAjDf,EAAA,4BAAiDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,gjBCAjD,IAAArC,EAeqD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAfrDY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAo0B,EAAAl0B,EAAAF,EAAA,iBACAG,EAAAD,EAAAF,EAAA,eACAsrB,EAAAtrB,EAAA,iBACAk1B,EAAAl1B,EAAA,wDACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAOAc,EAAAd,EAAA,yCACAmrB,EAAAnrB,EAAA,0BAAqD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEtC,SAASwnC,GAAoBC,kBAC1CA,EAAiBC,qBACjBA,EAAuB,GAAEC,mBACzBA,EAAkBC,oBAClBA,EAAmBC,uBACnBA,EAAyB,GAAEC,qBAC3BA,EAAoBC,YACpBA,GAAc,EAAIC,0BAClBA,GAA4B,EAAIriC,UAChCA,EAASsiC,cACTA,IAEA,MAAOC,EAAwBC,IAA6B,EAAApoC,EAAAge,WAAS,GAC/D3d,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aAEf2b,GAAqB,EAAA7R,EAAA8E,iBACzBoM,EACAC,GAEIW,GAAuB,EAAA9R,EAAA8E,iBAC3BuM,EACAC,GAGIS,EAAuC,IAAI7S,EAAAt1B,QAC/CkoC,GAECE,IAAIH,GACJhqB,MAAM,GACNjY,SAAS,IACNqiC,EAAuC,IAAI/S,EAAAt1B,QAAUioC,GACxDG,IAAIF,GACJjqB,MAAM,GACNjY,SAAS,IAENsiC,EAAaP,EACfP,EACAG,EACEY,EAAeR,EACjBJ,EACAH,EAEElL,EAAOyL,EACTI,EACAE,EACJ,IAAIG,EACAC,EAAmB,IAEnB,IAAInT,EAAAt1B,QAAUs8B,EAAM,IAAIoM,GAAG,aAAc,KAC3CF,EAAgB,cAChBC,EAAmB,KAEnBD,EADS,IAAIlT,EAAAt1B,QAAUs8B,EAAM,IAAIoM,GAAG,WAAY,IAChCpM,GAEA,EAAA9P,EAAAmc,4BAA2BrM,GAG7C,MAAMsM,EAAqBd,EACvB,oCACA,6CACEe,EAAiBf,EACnBvmC,EAAAwH,UAAU8P,eACVtX,EAAAwH,UAAUC,YAEd,OACEpJ,EAAAI,QAAAqF,cAAA,OAAKG,WAAW,EAAAnE,EAAArB,SAAW,wBAAyBwF,IAClD5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,OACvBiB,QAAS6+B,EACTh/B,MAAO+/B,EACPrjC,UAAWojC,EACXloB,IAAK,EACL,cAAY,oCAEZ9gB,EAAAI,QAAAqF,cAAA,YAAM,KACNzF,EAAAI,QAAAqF,cAAA,QACEG,WAAW,EAAAnE,EAAArB,SAAW,CAAE,8BAA+B4nC,IACvD,cAAY,qCAEXU,GAEH1oC,EAAAI,QAAAqF,cAAA,YAAOojC,GACP7oC,EAAAI,QAAAqF,cAAA,YAAOmjC,GACP5oC,EAAAI,QAAAqF,cAAA,QACEG,WAAW,EAAAnE,EAAArB,SAAW,CAAE,8BAA+B4nC,KAEtDW,IAGJV,GACCjoC,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMzB,EAAAkO,SAAS44B,eACf7/B,QAAS,KACP++B,GAA2BD,EAAuB,EAEpDj/B,MAAOvH,EAAAqX,UAAUmwB,gBACjB3/B,MAAO,CAAE4/B,OAAQ,WACjBttB,MAAOzb,EAAE,UACT,cAAY,iCAKtB,CAEAonC,EAAoB1jB,UAAY,CAC9B2jB,kBAAmBnmC,EAAAnB,QAAUolC,UAAU,CACrCjkC,EAAAnB,QAAUuL,OACVpK,EAAAnB,QAAUipC,WAAW3T,EAAAt1B,WACpBuU,WACHgzB,qBAAsBpmC,EAAAnB,QAAUolC,UAAU,CACxCjkC,EAAAnB,QAAUuL,OACVpK,EAAAnB,QAAUyL,SAEZ+7B,mBAAoBrmC,EAAAnB,QAAUuL,OAAOgJ,WACrCkzB,oBAAqBtmC,EAAAnB,QAAUolC,UAAU,CACvCjkC,EAAAnB,QAAUuL,OACVpK,EAAAnB,QAAUipC,WAAW3T,EAAAt1B,WACpBuU,WACHmzB,uBAAwBvmC,EAAAnB,QAAUolC,UAAU,CAC1CjkC,EAAAnB,QAAUuL,OACVpK,EAAAnB,QAAUyL,SAEZk8B,qBAAsBxmC,EAAAnB,QAAUuL,OAAOgJ,WACvC/O,UAAWrE,EAAAnB,QAAUuL,OACrBq8B,YAAazmC,EAAAnB,QAAUwL,KACvBq8B,0BAA2B1mC,EAAAnB,QAAUwL,KACrCs8B,cAAe3mC,EAAAnB,QAAUqL,K,yXClJ3B,IAAkDpJ,EAAlDinC,GAAkDjnC,EAAlDf,EAAA,6BAAkDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,2yBCAlD,IAAArC,EAoB+C,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CApB/CY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAioC,EAAA/nC,EAAAF,EAAA,2CACAmrB,EAAAnrB,EAAA,0BACA20B,EAAAz0B,EAAAF,EAAA,wCACAkoC,EAAAhoC,EAAAF,EAAA,mFACAmoC,EAAAjoC,EAAAF,EAAA,6FACAK,EAAAL,EAAA,4CAKAW,EAAAX,EAAA,iCACAmhB,EAAAnhB,EAAA,4CACA2K,EAAA3K,EAAA,sBACAc,EAAAd,EAAA,yCAI+C,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEhC,SAASypC,GAAQC,WAC9BA,EAAUC,aACVA,EAAYC,qBACZA,EAAoBC,+BACpBA,EAA8BC,qBAC9BA,EAAoBC,YACpBA,EAAWC,eACXA,EAAc/B,cACdA,IAEA,MAAM7nC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfsM,GAAuB,EAAAjtB,EAAAsR,aAAYpR,EAAAgtB,yBAEnCvyB,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,oBAExBsnB,EACJlqC,EAAAI,QAAAqF,cAAA,QAAMjD,IAAI,0BAA0BoD,UAAU,kBAC3CvF,EAAE,cAAe,CAACypC,KAIvB,OACE9pC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,YACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,kBACb5F,EAAAI,QAAAqF,cAAC+jC,EAAAppC,QAAiB,CAChB+pC,yBAAuB,EACvBC,KAAM,CACJpqC,EAAAI,QAAAqF,cAACgkC,EAAArpC,QAAqB,CACpBoC,IAAI,oBACJ6nC,YACErqC,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACG1P,EAAE,+BACHL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,MACTC,YACEhhC,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,oCACVvF,EAAE,yBAA0B,CAC3BL,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTlH,KAAMtO,EAAAyV,eAAeC,QACrBG,KAAMsxB,EAAAnpC,QAAakqC,SACnBl8B,OAAO,SACP+J,IAAI,sBACJoyB,cAAY,EACZ/nC,IAAI,sBACJ6G,QAAS,KACP3C,EAAW,CACTI,MAAO,sCACPH,SAAU8b,EAAA7b,yBAAyBonB,OACnC,GAGH3tB,EAAE,sCAKX4gC,mBAAmB,2CACnBuJ,iBAAiB,0DAIvBC,WAAYd,EAAWe,IACvBC,YAAa3R,GAAwB4Q,EAAac,IAClDE,UACGhB,aAAY,EAAZA,EAAciB,UAAW7nC,YACxB2mC,aAAU,EAAVA,EAAYkB,UAAW7nC,YACvBhD,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHI,GAAG,OACHiQ,WAAYvX,EAAAwX,WAAW4C,KACvB7S,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYa,QAEpBvJ,EAAE,WAEJ24B,EACG,KAAK4Q,EAAaiB,SAClB,KAAKlB,EAAWkB,gBAO9BhB,GACA7pC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,6BACZvF,EAAE,6BAA8B,CAAC6pC,IAClClqC,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,MACTC,YAAa3gC,EAAE,wBAAyB,CACtCypC,IAEF7I,mBAAmB,uCAIzBjhC,EAAAI,QAAAqF,cAAA,OACEG,UAAU,iBACVyD,QAAS,IAAM0gC,KAEd1pC,EAAE,mBAITL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,6BACZqkC,EAAiB,GAChBjqC,EAAAI,QAAAqF,cAAA,QACE4D,QAAS6+B,EACTtiC,UAAU,6BAETvF,EAAE,qBAAsB,CAAC4pC,KAG7B5pC,EAAE,oBAAqB,CAAC2pC,IACzBhqC,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,MACTC,YAAa3gC,EAAE,6BAA8B,CAAC2pC,IAC9CQ,iBAAiB,yCAQjC,CAEAd,EAAQ3lB,UAAY,CAClB4lB,WAAYpoC,EAAAnB,QAAUonC,MAAM,CAC1BkD,IAAKnpC,EAAAnB,QAAUuL,OAAOgJ,WACtBk2B,OAAQtpC,EAAAnB,QAAUuL,OAAOgJ,aACxBA,WACHi1B,aAAcroC,EAAAnB,QAAUonC,MAAM,CAC5BkD,IAAKnpC,EAAAnB,QAAUuL,OAAOgJ,WACtBk2B,OAAQtpC,EAAAnB,QAAUuL,OAAOgJ,aAE3Bk1B,qBAAsBtoC,EAAAnB,QAAUwL,KAAK+I,WACrCm1B,+BAAgCvoC,EAAAnB,QAAUuL,OAC1Co+B,qBAAsBxoC,EAAAnB,QAAUqL,KAChCu+B,YAAazoC,EAAAnB,QAAUuL,OAAOgJ,WAC9BuzB,cAAe3mC,EAAAnB,QAAUqL,KAAKkJ,WAC9Bs1B,eAAgB1oC,EAAAnB,QAAUyL,OAAO8I,W,kVCvKnC,IAAqCtS,EAArCyoC,GAAqCzoC,EAArCf,EAAA,gBAAqCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,gYCqBtB,WACb,MAAM0K,GAAW,EAAAhB,EAAAyK,eAEXmI,GAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtBmsB,GAAe,EAAAh/B,EAAAsR,aAAYpR,EAAA++B,iBAC3BC,GAAgC,EAAAl/B,EAAAsR,aACpCpR,EAAAi/B,oCAGIC,GAAuB,EAAAp/B,EAAAsR,aAAYpR,EAAAm/B,yBAEzC,EAAAprC,EAAA6W,YAAU,IACHk0B,GAAiBI,IAItB,EAAAve,EAAAye,aAAY1sB,GACT8d,MAAM9E,IACL5qB,GAAS,EAAAf,EAAAs/B,gBAAe3T,GAAQ,IAEjC4T,OAAOC,GAAUC,QAAQD,MAAMA,MAElC,EAAA5e,EAAA8e,gBAAe/sB,GAAS8d,MAAM5E,IAC5B9qB,GAAS,EAAA6jB,EAAA+a,cAAa9T,GAAW,KAGnC,EAAAjL,EAAAgf,yBAAwBjtB,GAAS8d,MAAMoP,IACrC9+B,GAAS,EAAA6jB,EAAAkb,uBAAsBD,GAAuB,IAGnDZ,GACHl+B,GAAS,EAAA6jB,EAAAmb,iCAGJ,KACLh/B,GAAS,EAAA6jB,EAAAhB,uBAAsB,GAtBxB5sB,WAwBR,CACD+J,EACA4R,EACAssB,EACAF,EACAI,GAEJ,EAjEA,IAAAnrC,EAAAsB,EAAA,SACAyK,EAAAzK,EAAA,eACAsrB,EAAAtrB,EAAA,iBAKAsvB,EAAAtvB,EAAA,8BAMA0K,EAAA1K,EAAA,0BACA2K,EAAA3K,EAAA,qB,2mBCdA,IA0B4Fe,EA1B5FrC,EA0B4F,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA1B5FY,CAAAC,EAAA,UACAC,GAyB4Fc,EAzB5Ff,EAAA,gBAyB4Fe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GAxB5FoqB,EAAAnrB,EAAA,0BACAK,EAAAL,EAAA,4CASAc,EAAAd,EAAA,yCAYA0qC,EAAA1qC,EAAA,oEACA2qC,EAAA3qC,EAAA,kEACA4qC,EAAA5qC,EAAA,iEAA4F,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAE7E,SAASksC,GAAYvF,wBAClCA,EAAuBC,mBACvBA,EAAkBd,0BAClBA,EAAyBE,eACzBA,EAAc7vB,OACdA,IAEA,MAAM/V,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACrB,OACE1sB,EAAAI,QAAAqF,cAACrD,EAAA0U,MAAK,CAACV,OAAQA,EAAQW,QAAS,IAAMgvB,GAA0B,IAC9D/lC,EAAAI,QAAAqF,cAACrD,EAAA+U,aAAY,MACbnX,EAAAI,QAAAqF,cAACwmC,EAAA70B,aAAY,CACXg1B,iBAAkB,CAChBvmC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7BgC,WAAYvG,EAAAwG,WAAWC,OACvB0Y,IAAK,IAGP9gB,EAAAI,QAAAqF,cAACymC,EAAA70B,YAAW,CACVN,QAAS,IAAMgvB,GAA0B,GACzCr8B,MAAO/H,EAAA4W,UAAUC,MAEhBnY,EAAE,wBAELL,EAAAI,QAAAqF,cAACrD,EAAA4e,YAAW,CACVC,SAAUtf,EAAA0qC,SAASntB,OACnBzE,YAAapa,EAAE,wBAEjBL,EAAAI,QAAAqF,cAACrD,EAAAkqC,YAAW,CACVC,IAAKtG,EAAegB,QACpBpjC,KAAMoiC,EAAe7X,OACrB1d,KAAMtO,EAAAoqC,gBAAgBC,KAExBzsC,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYuJ,UAAWrJ,GAAG,MACtCg9B,EAAepiC,MAAQ,IAE1B7D,EAAAI,QAAAqF,cAACumC,EAAAU,cAAa,CACZhM,MAAOrgC,EAAE,YACTgG,GAAG,sBACHsmC,WAAY,CAAE7jC,QAASnH,EAAAoH,YAAYa,QACnCgjC,UAAQ,EACRnqC,MAAOwjC,EAAe38B,SAAW,GACjCI,MAAO/H,EAAA4W,UAAUC,OAEnBxY,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAc6B,IAC7BgZ,IAAK,EACLpX,MAAO/H,EAAA4W,UAAUC,MAEjBxY,EAAAI,QAAAqF,cAACrD,EAAAgW,OAAM,CACLtP,QAAS1G,EAAAyqC,eAAeC,UACxBC,OAAK,EACLr8B,KAAMtO,EAAA4qC,aAAaC,GACnB5jC,QAASu9B,GAERvmC,EAAE,WAELL,EAAAI,QAAAqF,cAACrD,EAAAgW,OAAM,CACLtP,QAAS1G,EAAAyqC,eAAeK,QACxBH,OAAK,EACLr8B,KAAMtO,EAAA4qC,aAAaC,GACnB5jC,QAASw9B,EACT,cAAY,+BAEXxmC,EAAE,aAMf,CAEA8rC,EAAYpoB,UAAY,CACtB6iB,wBAAyBrlC,EAAAnB,QAAUqL,KACnCo7B,mBAAoBtlC,EAAAnB,QAAUqL,KAC9Bs6B,0BAA2BxkC,EAAAnB,QAAUqL,KACrCw6B,eAAgB1kC,EAAAnB,QAAU0L,OAC1BsK,OAAQ7U,EAAAnB,QAAUwL,K,8VC3GpB,IAAyCvJ,EAAzCsjC,GAAyCtjC,EAAzCf,EAAA,oBAAyCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,qvCC0G1B,WAAgB,IAAA8qC,EAAAC,EAAAC,EAAAC,EAC7B,MAAMjtC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfxd,GAAU,EAAA/B,EAAA2X,cACV/X,GAAW,EAAAhB,EAAAyK,eACX9P,GAAa,EAAA1G,EAAA2iB,YAAWF,EAAAG,qBAExBtO,SAAEA,IAAa,EAAAnH,EAAAsc,eACf8jB,EAAsBj5B,IAAajH,EAAAmgC,oBACnCC,EAA4Bn5B,IAAajH,EAAAqgC,0BACzCC,EAAoBr5B,IAAajH,EAAAugC,kBACjCC,EAAuBv5B,IAAajH,EAAAm0B,qBACpCsM,EACJx5B,IAAajH,EAAA0gC,+BACTC,EAAmB15B,IAAajH,EAAAi0B,iBAChC2M,EAAqB35B,IAAajH,EAAA6gC,oBAEjCC,EAAwBC,IAA6B,EAAApuC,EAAAge,WAAS,GAC/D2O,GAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgB8I,EAAA+B,UAC1C3K,qBAAEA,EAAuB,CAAC,IAAMJ,aAAW,EAAXA,EAAaM,WAAY,CAAC,EAE1DohB,GAAa,EAAAtiC,EAAAsR,aAAYuP,EAAA0hB,6BACzBC,GAAkB,EAAAxiC,EAAAsR,aAAYpR,EAAAuiC,mBAAoBziC,EAAAqhB,cAClDmL,GAAS,EAAAxsB,EAAAsR,aAAYuP,EAAA4L,UAAW7C,EAAA+B,SAChCiB,IAAqB,EAAA5sB,EAAAsR,aAAYuP,EAAAgM,sBAAuBjD,EAAA+B,SACxD+W,IAAS,EAAA1iC,EAAAsR,aAAY3D,EAAAg1B,8BAA+B3iC,EAAAqhB,cACpDuhB,IAAY,EAAA5iC,EAAAsR,aAAYuP,EAAAgiB,cACxBC,IAAc,EAAA9iC,EAAAsR,aAAYuP,EAAAkiB,gBAC1BC,IAAqB,EAAAhjC,EAAAsR,aAAYuP,EAAAoiB,sBAAuBjjC,EAAAqhB,cACxD6hB,IAAiB,EAAAljC,EAAAsR,aAAYuP,EAAAsiB,mBACnC,IAAIC,IAAgB,EAAApjC,EAAAsR,aAAYuP,EAAAwiB,kBAChC,MAAMC,IAAe,EAAAtjC,EAAAsR,aAAYuP,EAAA0iB,uBAC3B3wB,IAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtBmsB,IAAe,EAAAh/B,EAAAsR,aAAYpR,EAAA++B,iBAC3BpiC,IAAY,EAAAmD,EAAAsR,aAAYpR,EAAAY,aAAc8oB,EAAA+B,SACtCT,IAAqB,EAAAtB,EAAA4Z,SAAQ3uC,OAAO0lB,OAAO1d,KAC3C4mC,IAA6B,EAAAzjC,EAAAsR,aAAYuP,EAAA6iB,+BACzCC,IAA2B,EAAA3jC,EAAAsR,aAAYuP,EAAA+iB,6BACvCC,GAAoBllC,QAAQ8kC,IAC5B/hB,IAA+B,EAAA1hB,EAAAsR,aACnCwyB,EAAAniB,iCAEIC,IAA2B,EAAA5hB,EAAAsR,aAAYwyB,EAAAjiB,6BACvCC,IAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIgiB,IAAsB,EAAA/jC,EAAAsR,aAAYuP,EAAAmjB,wBAClCC,IAAgC,EAAAjkC,EAAAsR,aACpCuP,EAAAqjB,mCAGF,EAAAjwC,EAAA6W,YAAU,KAQHk0B,IAPctjC,iBACXsF,GAAS,EAAA6f,EAAAgD,wBAGf1gB,EAAQC,KAAK9B,EAAA4C,cAAc,EAI3BigC,EACF,GACC,CAACnF,GAAch+B,EAAUmC,KAG5B,EAAAihC,EAAAC,sBAEA,MAAQ3W,QAAS1C,GAAYztB,QAAS0tB,IACpCuX,EAEI8B,GACJxB,IAAeJ,GAAOlnC,MAAK,EAAGlB,QAASwoC,KAAgBxoC,IACnDiqC,GAAc3B,IAAaF,GAAOlnC,MAAK,EAAGlB,QAASsoC,KAActoC,IACjEorB,IACJ6e,cAAW,EAAXA,GAAaC,aACb,EAAA/Z,EAAAga,kCACEzjB,aAAoB,EAApBA,EAAsBqB,OACtBkiB,GACAvjB,aAAoB,EAApBA,EAAsBzjB,QACtB0tB,GACAjK,aAAoB,EAApBA,EAAsBkO,SACtBoV,GACA1xB,IAEE8xB,IAAiBH,cAAW,EAAXA,GAAazzB,UAAW6zB,EAAAC,kBAAkBC,UAC3DC,IACJR,cAAa,EAAbA,GAAexzB,UAAW6zB,EAAAC,kBAAkBG,QACP,SAArCT,UAAwB,QAAXlD,EAAbkD,GAAeE,iBAAS,IAAApD,OAAA,EAAxBA,EAA0BtwB,QACtBk0B,IACJT,cAAW,EAAXA,GAAazzB,UAAW6zB,EAAAC,kBAAkBG,QACP,SAAnCR,UAAsB,QAAXlD,EAAXkD,GAAaC,iBAAS,IAAAnD,OAAA,EAAtBA,EAAwBvwB,QACpBm0B,GAAkBH,IAAgBE,GAEpCC,IAAmB7B,KAAkBve,EAAAoE,+BACvCma,GAAgBve,EAAAwD,mBAGlB,MAAM6c,IAAyB,EAAAjxC,EAAAirB,WAC/B,EAAAjrB,EAAA6W,YAAU,KACRo6B,GAAuB/b,QAAU,MAC3ByD,IAAwB4U,IAAuByD,IACjDjkC,GACE,EAAAf,EAAAwxB,cAAa,CACXC,eAAgB9E,GAChB+E,0BAA0B,IAGhC,CACD,GACA,CACDsT,GACAjkC,EACA4rB,GACA5L,EACAJ,EACA4gB,KAEF,EAAAvtC,EAAA6W,YAAU,IACD,KACLo6B,GAAuB/b,SAAS,GAEjC,KAEH,EAAAgc,EAAA9wC,WAEA,MAAMitB,IAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,IAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBAqBjC2jB,IAAe,EAAAnxC,EAAAirB,WACrB,EAAAjrB,EAAA6W,YAAU,KACRs6B,GAAajc,QAAU,KAtBK,IAAMkc,EAAAC,EAClC3qC,EAAW,CACTI,MAAO,eACPH,SAAU1E,EAAA2E,yBAAyBonB,MACnCC,oBAAqB,CACnBE,WAAYxB,SAA4B,QAAjBykB,EAAXzkB,EAAaK,uBAAe,IAAAokB,OAAA,EAA5BA,EAA8BhjB,OAC1CC,kBAAmB1B,aAAW,EAAXA,EAAalqB,MAChC8rB,aAAc5B,aAAW,EAAXA,EAAa6B,aAC3BF,SAAU3B,SAAiC,QAAtB0kB,EAAX1kB,EAAaI,4BAAoB,IAAAskB,OAAA,EAAjCA,EAAmCjjB,OAC7CK,SAAU9B,aAAW,EAAXA,EAAa8B,SACvBC,gBAA2C,KAA1B/B,aAAW,EAAXA,EAAa8B,UAC9B6iB,eAAgBh9B,EAASmB,MAAM,kBAAkB,GACjDkZ,mBAAoBtB,GACpBuB,qBAAsBrB,GACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,KAOI,CACxB,KAGH,EAAAztB,EAAA6W,YAAU,KACyCpP,iBACzCsF,GAAS,EAAA6f,EAAA2kB,qCAAoC,EAErDC,GACO,KACLL,GAAajc,SAAS,IAEvB,CAACnoB,KAEJ,EAAA/M,EAAA6W,YAAU,KAGJs4B,KAAkBxB,GAAqBiC,IACzC1gC,EAAQC,KAAK9B,EAAAugC,kBACf,GACC,CAAC1+B,EAASigC,GAAexB,EAAmBiC,KAE/C,MAAM6B,IAA4B,EAAAzxC,EAAAirB,WAClC,EAAAjrB,EAAA6W,YAAU,KACR,MAAM66B,EAAK,KACTT,GAAuB/b,UACnB2Y,GACF9gC,GAAS,EAAA6f,EAAAgD,wBAEJ,MAMT,OAJIie,IAAyB4D,GAA0Bvc,UACrDuc,GAA0Bvc,SAAU,EACpCna,OAAO42B,iBAAiB,eAAgBD,IAEnC,IAAM32B,OAAO62B,oBAAoB,eAAgBF,EAAG,GAC1D,CAAC3kC,EAAU8gC,IAEd,MAAMgE,IAAqB,EAAA7xC,EAAA0W,cAAY,KAAM,IAAAo7B,EAAAC,EAC3CrrC,EAAW,CACTI,MAAO,2BACPH,SAAU1E,EAAA2E,yBAAyBonB,MACnCC,oBAAqB,CACnBE,WAAYxB,SAA4B,QAAjBmlB,EAAXnlB,EAAaK,uBAAe,IAAA8kB,OAAA,EAA5BA,EAA8B1jB,OAC1CC,kBAAmB1B,aAAW,EAAXA,EAAalqB,MAChC8rB,aAAc5B,aAAW,EAAXA,EAAa6B,aAC3BF,SAAU3B,SAAiC,QAAtBolB,EAAXplB,EAAaI,4BAAoB,IAAAglB,OAAA,EAAjCA,EAAmC3jB,OAC7CK,SAAU9B,aAAW,EAAXA,EAAa8B,SACvBC,gBAA2C,KAA1B/B,aAAW,EAAXA,EAAa8B,UAC9B6iB,eAAgBh9B,EAASmB,MAAM,kBAAkB,GACjDkZ,mBAAoBtB,GACpBuB,qBAAsBrB,GACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,GACjBukB,UAAWhC,KAEb,GACD,CACDA,GACAniB,GACAnnB,EACAimB,aAAW,EAAXA,EAAa6B,aACb7B,SAAiC,QAAtB0gB,EAAX1gB,EAAaI,4BAAoB,IAAAsgB,OAAA,EAAjCA,EAAmCjf,OACnCzB,aAAW,EAAXA,EAAa8B,SACb9B,SAA4B,QAAjB2gB,EAAX3gB,EAAaK,uBAAe,IAAAsgB,OAAA,EAA5BA,EAA8Blf,OAC9BzB,aAAW,EAAXA,EAAalqB,MACb8qB,GACAF,GACA/Y,EACAqZ,GACAF,KAcF,IAXA,EAAAztB,EAAA6W,YAAU,KACJm5B,KAAkC7B,IACpCC,GAA0B,GAC1ByD,KACF,GACC,CACD7B,GACA6B,GACA1D,KAGGpD,GAGH,OAAO/qC,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,MAGT,MAAMkiC,GAAyBxqC,UAC7BwpC,GAAuB/b,UACvBhmB,EAAQC,KAAK,CACXmF,SAAUjH,EAAA4C,cACV5D,MAAO,CAAE6lC,gBAAgB,KAE3BnlC,GAAS,EAAA6f,EAAAulB,0BACHplC,GAAS,EAAAf,EAAAomC,6BAA4B,EAG7C,OACEpyC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,SACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,oBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,kBACXkqC,IACA9vC,EAAAI,QAAAqF,cAAA,OACEG,UAAU,qBACVyD,QAAS5B,gBACDsF,GAAS,EAAA6f,EAAAyI,0BAAyBnmB,GAAS,GAGlD8+B,GAAoB3tC,EAAE,SAG1ByvC,IACC9vC,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeI,OAC/B4B,WAAY,EACZN,MAAO/H,EAAA0wC,UAAUC,YACjBtL,SAAS,IACTD,QAAU9mC,IACM,UAAVA,EAAEuC,KACJyvC,IACF,IAGA1E,IACCE,IACAK,GACC9tC,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMzB,EAAAkO,SAASiiC,WACf7hC,KAAMtO,EAAA+Z,SAASiM,GACflf,MAAOvH,EAAAqX,UAAUmwB,gBACjB9/B,QAAS4oC,GACTzoC,MAAO,CAAE4/B,OAAQ,WACjBttB,MAAOzb,EAAE,aAKnBL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gBAAgBvF,EAAE,UAC/ByvC,IACA9vC,EAAAI,QAAAqF,cAAA,OACEG,UAAU,uBACVyD,QAAS5B,UACPwpC,GAAuB/b,UACvBnoB,GAAS,EAAA6f,EAAAulB,0BACHplC,GAAS,EAAAf,EAAAomC,8BACfljC,EAAQC,KAAK9B,EAAA4C,cAAc,IAG3Bs9B,IACCE,IACAK,GACDztC,EAAE,WAGPyvC,IACC9vC,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeI,OAC/B0B,YAAa,EACbJ,MAAO/H,EAAA0wC,UAAUC,YACjBtL,SAAS,IACTD,QAAU9mC,IACM,UAAVA,EAAEuC,KACJuK,GAAS,EAAA6f,EAAA4lB,+BAA6B,GACxC,GAGDvE,GACCjuC,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMzB,EAAAkO,SAASqC,QACfjC,KAAMtO,EAAA+Z,SAASiM,GACflf,MAAOvH,EAAAqX,UAAUmwB,gBACjB9/B,QAAS,KACP0D,GAAS,EAAA6f,EAAA4lB,+BAA6B,GAAM,EAE9ChpC,MAAO,CAAE4/B,OAAQ,WACjBttB,MAAOzb,EAAE,2BAMnBL,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,iBAAkB,CACtC,mCAAoC0vC,MAGtC9vC,EAAAI,QAAAqF,cAAC0H,EAAA0G,OAAM,KACL7T,EAAAI,QAAAqF,cAACgtC,EAAAryC,QAAmB,CAClBsyC,cAAerlC,EAAAslC,wBACfC,KAAMvD,GACN17B,KAAMtG,EAAAwiB,kBACNnc,OAAK,EACLpI,OAAQ,IACFwkC,GACK9vC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA6gC,sBAE/BoC,KAAgBU,GACXhxC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAmgC,uBACxB8C,IAAejC,EACjBruC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAugC,qBACT,YAAfS,GAA4BU,GAC9B/uC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAm0B,wBAIjCxhC,EAAAI,QAAAqF,cAACk8B,EAAAvhC,QAAU,CACT22B,WAAYA,GACZC,uBAAwBA,GACxBC,mBAAoBA,OAK5Bj3B,EAAAI,QAAAqF,cAACgtC,EAAAryC,QAAmB,CAClBsyC,cAAerlC,EAAAslC,wBACfC,KAAMvD,GACN17B,KAAMtG,EAAA6gC,mBACNx6B,OAAK,EACLpI,OAAQ,IACDwkC,GAKH9vC,EAAAI,QAAAqF,cAACotC,EAAAzyC,QAAe,CACd22B,WAAYA,GACZC,uBAAwBA,GACxBC,mBAAoBA,KAPfj3B,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAwiB,uBAYvC7vB,EAAAI,QAAAqF,cAACgtC,EAAAryC,QAAmB,CAClBsyC,cAAerlC,EAAAslC,wBACfC,KAAMvD,GACN17B,KAAMtG,EAAAi0B,iBACN5tB,OAAK,EACLpI,OAAQ,IAEJokC,GAAyBphC,OAAS,GACnB,2BAAf+/B,EAGEruC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CACPC,GAAI,CAAEC,SAAUjH,EAAA0gC,kCAIlB+B,GACK9vC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA6gC,sBAE/BttC,OAAO0lB,OAAOiS,GAAQjqB,OAEtBtO,EAAAI,QAAAqF,cAACqtC,EAAA1yC,QAAS,CAAC6pC,eAAgBrpC,OAAO0lB,OAAOiS,GAAQjqB,SAE1Cqe,EACF3sB,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAugC,qBAE5B5tC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAwiB,uBAGrC7vB,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJH,KAAMtG,EAAAugC,kBACNl6B,OAAK,EACLpI,OAAQ,IACF6jC,GAEAnvC,EAAAI,QAAAqF,cAACgwB,EAAAr1B,QAAY,CACXkxB,cAAc,EACdC,SAAU4d,GACV3d,OAAQ8e,cAAW,EAAXA,GAAatc,KACrBpX,KAAM0zB,cAAW,EAAXA,GAAajqC,GACnB0sC,cAAezC,cAAW,EAAXA,GAAayC,gBAI3B/yC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAwiB,uBAGrC7vB,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJH,KAAMtG,EAAA2lC,yBACNt/B,OAAK,EACLpI,OAAQ,IACD6jC,GAGEnvC,EAAAI,QAAAqF,cAACwtC,EAAA7yC,QAAgB,CAAC8yC,gBAAiB/D,KAFjCnvC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA6gC,wBAKvCluC,EAAAI,QAAAqF,cAACgtC,EAAAryC,QAAmB,CAClBsyC,cAAerlC,EAAAslC,wBACfC,KAAMvD,GACN17B,KAAMtG,EAAAm0B,qBACN9tB,OAAK,EACLpI,OAAQ,IACCyjC,GACL/uC,EAAAI,QAAAqF,cAAC0tC,EAAA/yC,QAAY,CACXgzC,iBACGnE,IAAkBvkC,QAAQ9J,OAAO0lB,OAAOiS,GAAQjqB,QAEnD+kC,OAAQ5rC,gBACAsF,GAAS,EAAAf,EAAAu1B,6BAA4B,KAEzC4N,KAAkBve,EAAAkE,uBAClBqa,KAAkBve,EAAAmE,4BAElBhoB,GAAS,EAAAf,EAAAsnC,kBAAiB1iB,EAAAmE,6BAC1B7lB,EAAQC,KAAK9B,EAAAugC,oBAEb1+B,EAAQC,KAAK9B,EAAAi0B,iBACf,EAEFyN,mBAAoBA,KAGtB/uC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAwiB,uBAIhC7vB,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJH,KAAMtG,EAAAslC,wBACNj/B,OAAK,EACLpI,OAAQ,KACkB,IAAjB+jC,GACLrvC,EAAAI,QAAAqF,cAACgwB,EAAAr1B,QAAY,CAACmxB,SAAUX,EAAAuD,0BAExBn0B,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAAwiB,uBAIhC7vB,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJH,KAAMtG,EAAAqgC,0BACNh6B,OAAK,EACLpI,OAAQ,IACCtL,EAAAI,QAAAqF,cAACuqB,EAAA5vB,QAAkB,QAG9BJ,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJH,KAAMtG,EAAA0gC,+BACNr6B,OAAK,EACLpI,OAAQ,IACCtL,EAAAI,QAAAqF,cAAC8tC,EAAAnzC,QAAsB,CAACwc,KAAM0zB,cAAW,EAAXA,GAAajqC,OAGtDrG,EAAAI,QAAAqF,cAAC0H,EAAA2G,MAAK,CACJH,KAAMtG,EAAAmgC,oBACN95B,OAAK,EACLpI,OAAQ,IACgB,aAAf+iC,GAA6BiC,GAClCtwC,EAAAI,QAAAqF,cAACgwB,EAAAr1B,QAAY,CACXkxB,aAAcmf,GACdjf,OAAQ8e,cAAW,EAAXA,GAAatc,KACrBvC,eAAgBA,GAChB7U,KAAM0zB,cAAW,EAAXA,GAAajqC,GACnBqrB,eACiB,aAAf2c,KAA+BQ,IAAeF,MAIlD3uC,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA4C,sBAS5C,EArnBA,IAAAjQ,EAwGqC,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAxGrCY,CAAAC,EAAA,UAOAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBAOAq0B,EAAAr0B,EAAA,UACAG,EAAAD,EAAAF,EAAA,eACAovC,EAAApvC,EAAA,oCACAmrB,EAAAnrB,EAAA,uBAEA2K,EAAA3K,EAAA,6BAQAsrB,EAAAtrB,EAAA,2BAsBAoY,EAAApY,EAAA,mBACAuuC,EAAAvuC,EAAA,qCAIA+L,EAAA/L,EAAA,kCAaAsvB,EAAAtvB,EAAA,mCAQA0K,EAAA1K,EAAA,uBAOA6uC,EAAA7uC,EAAA,kCACAmxC,EAAAjxC,EAAAF,EAAA,gEACAW,EAAAX,EAAA,yCACAmhB,EAAAnhB,EAAA,8BACAk1B,EAAAl1B,EAAA,qDACAc,EAAAd,EAAA,sCACA2tB,EAAAztB,EAAAF,EAAA,4BACAK,EAAAL,EAAA,yCAMA4vC,EAAA1vC,EAAAF,EAAA,gCACA0uB,EAAAxuB,EAAAF,EAAA,0BACAiyC,EAAA/xC,EAAAF,EAAA,+BACAm0B,EAAAj0B,EAAAF,EAAA,oBACA6xC,EAAA3xC,EAAAF,EAAA,2BACAqgC,EAAAngC,EAAAF,EAAA,kBACAuxC,EAAArxC,EAAAF,EAAA,0CACA2xC,EAAAzxC,EAAAF,EAAA,0CACAwxC,EAAAtxC,EAAAF,EAAA,iBAAqC,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,C,irBCxGrC,IAAAD,EAqBiE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CArBjEY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAq0B,EAAAr0B,EAAA,UACAkyC,EAAAhyC,EAAAF,EAAA,aAEA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAQAc,EAAAd,EAAA,yCACA0qC,EAAA1qC,EAAA,sEACAmyC,EAAAjyC,EAAAF,EAAA,sCACAwT,EAAAxT,EAAA,8CACAmrB,EAAAnrB,EAAA,0BACAsrB,EAAAtrB,EAAA,iBACA2K,EAAA3K,EAAA,gCAAiE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEjE,IAAIyzC,EAEW,SAASC,GAAe/T,cACrCA,EAAgB,GAAEgU,UAClBA,EAAS5T,aACTA,EAAYqG,YACZA,EAAWiB,4BACXA,EAA2B9G,uBAC3BA,EAAsB4G,YACtBA,EAAW9G,gBACXA,EAAeJ,WACfA,EAAUC,uBACVA,EAAsBnvB,YACtBA,EAAWm1B,eACXA,IAEA,MAAM0N,GAAc,EAAA7zC,EAAAirB,UACd5qB,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,cAEdonB,EAAOC,IAAY,EAAA/zC,EAAAge,UAAS4hB,GAC7BjhB,GAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBAuBtBo1B,EAAevsC,UACnB0+B,EAAe8N,GACXP,GACF/T,aAAa+T,GAEfA,EAAqBjU,YAAWh4B,UAC9BisC,EAAqB,KACrB,MAAMQ,EAAwBD,EAAeE,OACvCC,EACJF,EAAsBhwC,cAClBmwC,EACJH,EAAsB1tB,cACxB,IAAK0tB,EAEH,YADAH,EAASnU,GAGX,MAAM0U,GAAkB,EAAAx/B,EAAAkB,mBAAkBk+B,GAC1C,IAAIK,EAAgB,GACpB,GAAID,EAAiB,CAEnB,MAAME,EAAY5U,EAAcr4B,MAAMs2B,GAC7BA,EAAKv0B,UAAY+qC,IAEtBG,GACFD,EAAcplC,KAAKqlC,EAEvB,MACED,GAAgB,EAAA5e,EAAApP,QAAOqZ,GAAe,SAAU/B,GAC9C,OAAOA,EAAKzP,OAAO5a,SAAS4gC,EAC9B,IAEF,MAAMnjC,EAA6B,KAAnBgjC,EAAwBrU,EAAgB2U,EACpD/T,GAA6C,IAAnBvvB,EAAQ3C,QAAgBgmC,OAhDvB7sC,WACjC,IACE,MAAM80B,QAAc,EAAA3P,EAAA6nB,YAAWC,EAAiB/1B,GAChD,GAAI4d,EAKF,OAJAA,EAAMoY,aAAepY,EAAMnO,OAC3BmO,EAAMqY,eAAiBrY,EAAM14B,KAC7B04B,EAAMsY,aAAc,OACpBd,EAAS,CAACxX,GAGd,CAAE,MAAOt8B,GACPuzC,EAAApzC,QAAIorC,MAAM,mCAAoCvrC,EAChD,CACA8zC,EAAS,GAAG,EAoCFe,CAA2BZ,GAGnCH,EAAS9iC,EAAQ,GAChB,IAAI,GAGT,EAAAjR,EAAA6W,YAAU,KACRm9B,EAAahjC,EAAY,GACxB,CAACA,IAMJ,OACEhR,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACwF,UAAU,mBAAmB8D,MAAO/H,EAAA4W,UAAUC,KAAMwuB,SAAS,KAChEhnC,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFoJ,MAAO,CAAEurC,gBAAiB,EAAGC,cAAe,GAC5CnvC,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,QAE7BlG,EAAAI,QAAAqF,cAACumC,EAAAiJ,gBAAe,CACd5uC,GAAG,gCACH0D,aAAc,EACdvD,SAAWvG,GAAM+zC,EAAa/zC,EAAEmO,OAAO3L,OACvCyyC,mBAfc,KACpB/O,EAAe,GAAG,EAeZ1jC,MAAOuO,EACPk0B,YAAa7kC,EAAE,2BACfssC,WAAY,CAAE7iC,YAAa,GAC3BlE,UAAU,gCACVsR,WAAS,EACT8vB,SAAS,QAGZ8M,aAAK,EAALA,EAAOxlC,QAAS,GACftO,EAAAI,QAAAqF,cAACguC,EAAArzC,QAAQ,CACP4Q,YAAaA,EACbC,QAAS6iC,EACTzN,YAAaA,EACbiB,4BAA6BA,EAC7BF,YAAaA,EACbwM,UAAWA,EACX5T,aAAcA,EACdmV,aAActB,EACdvT,gBAAiBA,EACjBJ,WAAYA,EACZC,uBAAwBA,IAGT,KAAlB2T,aAAK,EAALA,EAAOxlC,SACNtO,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyJ,UAAW,EACXE,aAAc,EACdlE,QAASlE,EAAAmE,QAAQC,KACjBgC,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,wBAAyB,CAAC2Q,MAMzC,CAEA2iC,EAAe5vB,UAAY,CACzB6b,cAAer+B,EAAAnB,QAAUshC,MACzB2E,YAAa9kC,EAAAnB,QAAUqL,KACvB67B,4BAA6B/lC,EAAAnB,QAAUqL,KACvC27B,YAAa7lC,EAAAnB,QAAUqL,KACvBmoC,UAAWryC,EAAAnB,QAAUuL,OACrBq0B,aAAcz+B,EAAAnB,QAAUyL,OACxBy0B,gBAAiB/+B,EAAAnB,QAAUwL,KAC3B40B,uBAAwBj/B,EAAAnB,QAAUwL,KAClCs0B,WAAY3+B,EAAAnB,QAAUqL,KACtB00B,uBAAwB5+B,EAAAnB,QAAUuL,OAClCqF,YAAazP,EAAAnB,QAAUuL,OACvBw6B,eAAgB5kC,EAAAnB,QAAUqL,K,iRC/Kb,WACb,OACEzL,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAAA,OACEG,UAAU,qCACV,cAAY,qCAEZ5F,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,MACNC,OAAO,MACPumB,QAAQ,cACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,yrBACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,isBACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,iNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,+MACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,oNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,kNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,iNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,YACEzF,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,QACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,QACHC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,SACHC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,gBAKnCz1C,EAAAI,QAAAqF,cAAA,OACEG,UAAU,qCACV,cAAY,qCAEZ5F,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,MACNC,OAAO,MACPumB,QAAQ,cACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,2cACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,+cACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gdACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gdACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,kgBACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,8fACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,YACEzF,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,YAAYD,UAAU,YACnCz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,gBAOzC,EApNA,IAA0BpzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,sXCD1B,IAAiDA,EAAjD8wC,GAAiD9wC,EAAjDf,EAAA,4BAAiDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,mxBCAjD,IAAAouB,EAAAjvB,EAAAF,EAAA,WACAtB,EAkCyD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAlCzDY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAq0B,EAAAr0B,EAAA,UACA6L,EAAA7L,EAAA,oBACAwrB,EAAAtrB,EAAAF,EAAA,mBACAsrB,EAAAtrB,EAAA,8BAMA2K,EAAA3K,EAAA,gCAIAoY,EAAApY,EAAA,wCAIAmrB,EAAAnrB,EAAA,0BACAW,EAAAX,EAAA,iCACAqvB,EAAAnvB,EAAAF,EAAA,kCACAmhB,EAAAnhB,EAAA,4CACAquB,EAAAnuB,EAAAF,EAAA,oBACAc,EAAAd,EAAA,yCACAK,EAAAL,EAAA,4CAQAq0C,EAAAn0C,EAAAF,EAAA,2BAAyD,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAuB,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAE1C,SAASuzC,GAAmB7G,mBACzCA,EAAkBqE,gBAClBA,EAAeC,OACfA,IACC,IAAAjC,EAAAC,EACD,MAAMhxC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfhmB,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,oBACxB7V,GAAW,EAAAhB,EAAAyK,eACXtH,GAAU,EAAA/B,EAAA2X,cACV6M,GAAwB,EAAA3xB,EAAAirB,QAAO,IAAIwF,EAAArwB,SAEnCusB,GAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgBC,EAAA1sB,SAC1Cy1C,GAAuB,EAAA9pC,EAAAsR,aAAYuP,EAAAkpB,yBACnCzoB,GAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,GAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBACjCC,GAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,GAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCC,GAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIioB,EAAoC,CACxCjvC,MAAO,2BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,CACnBE,WAAYxB,SAA4B,QAAjBykB,EAAXzkB,EAAaK,uBAAe,IAAAokB,OAAA,EAA5BA,EAA8BhjB,OAC1CC,kBAAmB1B,aAAW,EAAXA,EAAalqB,MAChC8rB,aAAc5B,aAAW,EAAXA,EAAa6B,aAC3BF,SAAU3B,SAAiC,QAAtB0kB,EAAX1kB,EAAaI,4BAAoB,IAAAskB,OAAA,EAAjCA,EAAmCjjB,OAC7CK,SAAU9B,aAAW,EAAXA,EAAa8B,SACvBC,gBAA2C,KAA1B/B,aAAW,EAAXA,EAAa8B,UAC9BunB,cAAe7vC,KAAKmY,MAAQu3B,EAC5BlnB,mBAAoBtB,EACpBuB,qBAAsBrB,EACtBsB,YAAalB,EACbmB,oBAAqBjB,EACrBkB,gBAAiBtB,KAIdwoB,IAAmB,EAAAj2C,EAAAge,WAAS,KACjC,EAAA2X,EAAA4Z,SAAQ3uC,OAAO83B,KAAKqW,MAEhB9E,EAAiBgM,EAAgB3nC,OACjC4nC,GAAkB,EAAAl2C,EAAAirB,UAClBkrB,EAAyBD,EAAgBhhB,SAExCkhB,EAAYC,IAAoB,EAAAr2C,EAAAge,UAAS,IACzCs4B,EAAgBC,IAAqB,EAAAv2C,EAAAge,UAAS,MAuCrD,OArCA,EAAAhe,EAAA6W,YAAU,KACR,IAAI2/B,EAQFA,EAFEpD,EAEc,GAIA,IAAMl5B,KAAKC,MAAsB,KAAhBD,KAAKu8B,UAExC,MAAMC,EAAoBjX,YAAW,KAC/B2W,EAAanM,EACfoM,EAAiBD,EAAa,GACrBA,IAAenM,GAAkBmJ,GAC1CC,GACF,GACCmD,GAEH,OAAO,WACL7W,aAAa+W,EACf,CAAC,GACA,CAACN,EAAYhD,EAAiBC,EAAQpJ,KAEzC,EAAAjqC,EAAA6W,YAAU,KACR,GAAIs/B,EAAwB,CAC1B,MAAM5b,IAAEA,EAAGoc,KAAEA,EAAIjtC,MAAEA,EAAKC,OAAEA,GACxBwsC,EAAuBpR,wBAEzBwR,EADe,CAAEK,EAAGD,EAAOjtC,EAAQ,EAAGmtC,EAAGtc,EAAM5wB,EAAS,GAE1D,IACC,CAACwsC,IAGFn2C,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACb5F,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAY+tC,OACrB,cAAY,qCACZ5tC,MAAOvH,EAAAwH,UAAUuP,gBACjB7O,UAAW,EACXhE,QAASlE,EAAAmE,QAAQC,KACjBgC,eAAgBpG,EAAAqG,eAAeI,OAC/BsB,MAAO/H,EAAA4W,UAAUC,KACjBzO,aAAc,GAEd/J,EAAAI,QAAAqF,cAAA,YACGpF,EAAE,wBAAyB,CAC1B6Z,KAAK68B,IAAIX,EAAa,EAAGnM,GACzBA,MAINjqC,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYuJ,UACrB,cAAY,wCACZpJ,MAAOvH,EAAAwH,UAAUC,YACjBvD,QAASlE,EAAAmE,QAAQC,KACjBgC,eAAgBpG,EAAAqG,eAAeI,OAC/BsB,MAAO/H,EAAA4W,UAAUC,KACjBw+B,cAAer1C,EAAAs1C,cAAcC,YAE7Bl3C,EAAAI,QAAAqF,cAAA,YAAOpF,EAAE,wBAEXL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+CACb5F,EAAAI,QAAAqF,cAAA,OACEG,UAAU,oCACV4D,MAAO,CACLE,MAAW,IAAMugC,EAAkBmM,EAA5B,SAKfp2C,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAACkwC,EAAAv1C,QAAmB,MACpBJ,EAAAI,QAAAqF,cAAA,OACEG,UAAU,yCACVD,IAAKuwC,GAELl2C,EAAAI,QAAAqF,cAACkrB,EAAAvwB,QAAM,CACLuxB,sBAAuBA,EAAsBuD,QAC7CxrB,MAAM,KACNC,OAAO,KACPwtC,aAAcb,OAKtBt2C,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACV0vB,WAAYzvB,EAAE,QACdigB,SAAU7Y,UACRf,EAAWqvC,SACLhpC,GAAS,EAAA6f,EAAAyI,0BAAyBnmB,GAAS,EAEnD6gB,YAAU,IAIlB,CAEA6lB,EAAmB7xB,UAAY,CAC7BqvB,gBAAiB7xC,EAAAnB,QAAUwL,KAAK+I,WAChC0+B,OAAQ9xC,EAAAnB,QAAUqL,KAAKkJ,WACvBo6B,mBAAoBxtC,EAAAnB,QAAUg3C,SAC5B71C,EAAAnB,QAAUonC,MAAM,CACd1rB,MAAOva,EAAAnB,QAAUuL,OACjBzC,MAAO3H,EAAAnB,QAAUuL,OACjB8G,KAAMlR,EAAAnB,QAAUuL,U,oXCxMtB,IAA+CtJ,EAA/Cg1C,GAA+Ch1C,EAA/Cf,EAAA,0BAA+Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,8eCA/C,IAAArC,EAAAwB,EAAAF,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAo0B,EAAAl0B,EAAAF,EAAA,iBACAg2C,EAAA91C,EAAAF,EAAA,mCACAokC,EAAAlkC,EAAAF,EAAA,oCACAgoC,EAAA9nC,EAAAF,EAAA,6BACAsrB,EAAAtrB,EAAA,iBACAk1B,EAAAl1B,EAAA,wDAG8D,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,CAY/C,SAASk1C,GAAiBC,YACvCA,EAAWhkB,aACXA,EAAYikB,eACZA,EAAcC,cACdA,EAAaC,iBACbA,EAAgBC,kBAChBA,EAAiBC,oBACjBA,EAAmBC,mBACnBA,IAEA,MAAMrkB,GAAe,EAAA+C,EAAAuhB,kCACnB,EAAAvhB,EAAA8E,iBAAgBkc,EAAaC,GAAgBrxC,SAAS,IACtD,IAEI4xC,GAAoB,EAAAxhB,EAAA8E,iBACxBqc,EACAE,GAGII,GAAkB,EAAArrB,EAAAmc,4BAA2BiP,GAC7CE,EAAoBD,EAAgBxiC,MAAM,SAAS0iC,KAAK,IAAI7pC,QAC3D8pC,EAAgBC,IA/BWC,EAgCLJ,IA/BR,EACZ,CAAC,GAAI,IAEVI,GAAiB,GACZ,CAAC,GAAI,IAEP,CAAC,GAAI,IAPd,IAAoCA,EAiClC,IAAIC,EAA0BN,EAM9B,OAJIC,EAAoB,KACtBK,EAA0B,GAAGN,EAAgBO,MAAM,EAAG,UAItDx4C,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yCACb5F,EAAAI,QAAAqF,cAAA,OACEG,UAAU,iCACV,cAAY,kCAEZ5F,EAAAI,QAAAqF,cAAA,QACEG,UAAU,uCACVkW,OAAO,EAAA8Q,EAAAmc,4BAA2BtV,KAEjC,EAAA7G,EAAAmc,4BAA2BtV,IAE9BzzB,EAAAI,QAAAqF,cAACigC,EAAAtlC,QAAO,CACNib,IAAKq8B,EACL9xC,UAAU,2BACV/B,KAAM2vB,EACNilB,kBAAkB,sCAEpBz4C,EAAAI,QAAAqF,cAAA,QACEG,UAAU,wCACVkW,MAAO0X,GAENA,IAGLxzB,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,oDACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uCACb5F,EAAAI,QAAAqF,cAACigC,EAAAtlC,QAAO,CACNib,IAAKy8B,EACLlyC,UAAU,2BACV/B,KAAM+zC,EACNa,kBAAkB,sCAEpBz4C,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,8CACbgyC,IAGL53C,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAC6xC,EAAAl3C,QAAO,CACNs4C,aAAW,EACX3X,SAAS,SACT4X,KAAMV,EACN5vB,SAAUkwB,IAA4BN,GAEtCj4C,EAAAI,QAAAqF,cAAA,QACEG,UAAU,yCACV4D,MAAO,CACL0S,SAAUk8B,EACVC,WAAY,GAAGA,QAGhB,GAAGE,QAKZv4C,EAAAI,QAAAqF,cAAA,OACEG,UAAU,8CACV,cAAY,+CAEZ5F,EAAAI,QAAAqF,cAAC6jC,EAAAlpC,QAAmB,CAClBsnC,kBAAmB8P,EACnB7P,qBAAsB8P,EACtB7P,mBAAoBpU,EACpBqU,oBAAqB8P,EACrB7P,uBAAwB+P,EACxB9P,qBAAsB6P,EACtBgB,WAAW,+BACX5Q,aAAa,EACbpiC,UAAU,gDAMtB,CAEA2xC,EAAiBxzB,UAAY,CAK3ByzB,YAAaj2C,EAAAnB,QAAUolC,UAAU,CAC/BjkC,EAAAnB,QAAUuL,OACVpK,EAAAnB,QAAUipC,WAAW3T,EAAAt1B,WACpBuU,WAKH8iC,eAAgBl2C,EAAAnB,QAAUolC,UAAU,CAACjkC,EAAAnB,QAAUuL,OAAQpK,EAAAnB,QAAUyL,SAKjE2nB,aAAcjyB,EAAAnB,QAAUuL,OAAOgJ,WAM/BgjC,iBAAkBp2C,EAAAnB,QAAUolC,UAAU,CACpCjkC,EAAAnB,QAAUuL,OACVpK,EAAAnB,QAAUipC,WAAW3T,EAAAt1B,WACpBuU,WAKHkjC,oBAAqBt2C,EAAAnB,QAAUolC,UAAU,CACvCjkC,EAAAnB,QAAUuL,OACVpK,EAAAnB,QAAUyL,SAMZ+rC,kBAAmBr2C,EAAAnB,QAAUuL,OAAOgJ,WAKpC+iC,cAAen2C,EAAAnB,QAAUuL,OAKzBmsC,mBAAoBv2C,EAAAnB,QAAUuL,O,sUC9KjB,WACb,MAAMgmB,GAAwB,EAAA3xB,EAAAirB,QAAO,IAAIwF,EAAArwB,SAEzC,OACEJ,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,0CACb5F,EAAAI,QAAAqF,cAAA,OACEG,UAAU,4CACV,cAAY,4CAEZ5F,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,MACNC,OAAO,MACPumB,QAAQ,cACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,yrBACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,isBACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,iNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,+MACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,oNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,kNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,iNACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,YACEzF,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,QACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,QACHC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,SACHC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,gBAKnCz1C,EAAAI,QAAAqF,cAAA,OACEG,UAAU,4CACV,cAAY,4CAEZ5F,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,MACNC,OAAO,MACPumB,QAAQ,cACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,2cACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,+cACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gdACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gdACF1rB,KAAK,wBAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,kgBACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,8fACF1rB,KAAK,YAEP9E,EAAAI,QAAAqF,cAAA,YACEzF,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,aAE7Bz1C,EAAAI,QAAAqF,cAAA,kBACEY,GAAG,gBACH+uC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,SACHC,cAAc,kBAEdx1C,EAAAI,QAAAqF,cAAA,QAAMgwC,UAAU,YAChBz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,YAAYD,UAAU,YACnCz1C,EAAAI,QAAAqF,cAAA,QAAMiwC,OAAO,IAAID,UAAU,gBAKnCz1C,EAAAI,QAAAqF,cAAA,OACEG,UAAU,gDACV,cAAY,gDAEZ5F,EAAAI,QAAAqF,cAACkrB,EAAAvwB,QAAM,CACLuxB,sBAAuBA,EAAsBuD,QAC7CxrB,MAAM,KACNC,OAAO,KACPkvC,aAAa,KAKvB,EApOA,IAAApoB,EAAAjvB,EAAAF,EAAA,WACAtB,EAEmD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAFnDY,CAAAC,EAAA,UAEAqvB,EAAAnvB,EAAAF,EAAA,kCAAmD,SAAAhB,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAuB,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,C,2oBCJnD,IAAArC,EAmB0E,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAnB1EY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACAC,EAAAC,EAAAF,EAAA,eAEAmrB,EAAAnrB,EAAA,0BACA0K,EAAA1K,EAAA,0BACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAQAc,EAAAd,EAAA,yCACA+L,EAAA/L,EAAA,qCACAquB,EAAAnuB,EAAAF,EAAA,oBACAsrB,EAAAtrB,EAAA,sCAA0E,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAE3D,SAAS64C,GAAiB5F,gBAAEA,IACzC,MAAM7yC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfxd,GAAU,EAAA/B,EAAA2X,cACV/X,GAAW,EAAAhB,EAAAyK,eAGjB,IAAIsF,EAAQ,GACRrB,EAAc,GACds+B,EAAa,GAQjB,OANI7F,IAAoBtmB,EAAAiI,uBACtB/Y,EAAQzb,EAAE,wBACVoa,EAAcpa,EAAE,mCAChB04C,EAAa14C,EAAE,yBAIfL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qBACb5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACF8H,WAAYvG,EAAAwG,WAAWC,OACvBvC,QAASlE,EAAAytB,QAAQC,KACjBrpB,cAAerE,EAAAq3C,eAAeC,OAC9BpvC,UAAW,GACXG,WAAY,EACZF,YAAa,EACb+O,UAAWlX,EAAAu3C,WAAWC,OACtBvzC,UAAU,8BAEV5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,EAAGE,aAAc,GAC/B/J,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMzB,EAAAkO,SAAS8oC,QACflwC,MAAOvH,EAAAqX,UAAU4S,UACjBhmB,UAAU,qCAGd5F,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYwe,aAActe,GAAG,MACzC6S,GAEH9b,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnCwR,IAGLza,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACVkgB,SAAU7Y,gBACFsF,GAAS,EAAAf,EAAAsnC,kBAAiB,KAChCpkC,EAAQC,KAAK9B,EAAA6gC,mBAAmB,EAElCpe,WAAYipB,EACZhpB,YAAU,EACV0R,oBAAkB,IAI1B,CAEAqX,EAAiB/0B,UAAY,CAC3BmvB,gBAAiB3xC,EAAAnB,QAAUo1B,MAAM,CAAC5I,EAAAiI,uB,28DC7EpC,IAAA70B,EA+IyC,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA/IzCY,CAAAC,EAAA,UACAo0B,EAAAl0B,EAAAF,EAAA,iBACAC,EAAAC,EAAAF,EAAA,eACAyK,EAAAzK,EAAA,eACAq0B,EAAAr0B,EAAA,UACA6L,EAAA7L,EAAA,oBACAovB,EAAApvB,EAAA,4BACAG,EAAAD,EAAAF,EAAA,eAEAW,EAAAX,EAAA,iCACAs0B,EAAAt0B,EAAA,oCAIAu0B,EAAAv0B,EAAA,mCACAmrB,EAAAnrB,EAAA,0BACA4K,EAAA5K,EAAA,oCACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAUAsrB,EAAAtrB,EAAA,8BA2BA2K,EAAA3K,EAAA,sBAcAoY,EAAApY,EAAA,wCAIAsY,EAAAtY,EAAA,+CAIAiM,EAAAjM,EAAA,+BACA+3C,EAAA/3C,EAAA,oCACA60B,EAAA70B,EAAA,8BACA80B,EAAA90B,EAAA,kCACA+0B,EAAA/0B,EAAA,qCACAg1B,EAAAh1B,EAAA,mCACAsvB,EAAAtvB,EAAA,0CAIAmhB,EAAAnhB,EAAA,4CAKAuvB,EAAAvvB,EAAA,sCAQA0K,EAAA1K,EAAA,0BASAg4C,EAAAh4C,EAAA,kCACAwvB,EAAAxvB,EAAA,iBAMAm1B,EAAAn1B,EAAA,qCACAi1B,EAAAj1B,EAAA,2CACAk1B,EAAAl1B,EAAA,wDACAo1B,EAAAp1B,EAAA,sCACAc,EAAAd,EAAA,yCAaA0qC,EAAA1qC,EAAA,kEACA2qC,EAAA3qC,EAAA,iEACA+L,EAAA/L,EAAA,qCACAqkC,EAAAnkC,EAAAF,EAAA,oBACAi4C,EAAA/3C,EAAAF,EAAA,iDACAk4C,EAAAh4C,EAAAF,EAAA,6CACAquB,EAAAnuB,EAAAF,EAAA,oBACAm4C,EAAAj4C,EAAAF,EAAA,qCACAo4C,EAAAl4C,EAAAF,EAAA,yCACAq4C,EAAAn4C,EAAAF,EAAA,+BACAs4C,EAAAp4C,EAAAF,EAAA,mBAAyC,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAgO,IAAA,OAAAA,EAAArN,OAAAsN,OAAAtN,OAAAsN,OAAAC,OAAA,SAAAC,GAAA,QAAAjN,EAAA,EAAAA,EAAAkN,UAAAC,OAAAnN,IAAA,KAAAoN,EAAAF,UAAAlN,GAAA,QAAAqB,KAAA+L,EAAA3N,OAAAI,UAAAC,eAAAC,KAAAqN,EAAA/L,KAAA4L,EAAA5L,GAAA+L,EAAA/L,GAAA,QAAA4L,CAAA,EAAAH,EAAAO,MAAA9J,KAAA2J,UAAA,CAEzC,IAAIwoB,EAEW,SAASgjB,IAAgB9iB,WACtCA,EAAUC,uBACVA,EAAsBC,mBACtBA,IAEA,MAAM52B,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACf3f,GAAW,EAAAhB,EAAAyK,eACXtH,GAAU,EAAA/B,EAAA2X,cACVpe,IAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,qBAEvBuU,GAA0BC,KAC/B,EAAAp3B,EAAAge,UAAShb,YACJq0B,GAAqBC,KAA0B,EAAAt3B,EAAAge,WAAS,IACxD87B,GAAiBC,KAAsB,EAAA/5C,EAAAge,aACvCg8B,GAAcC,KAAmB,EAAAj6C,EAAAge,WAAS,GAE3Ck8B,GAAgB,IAAMD,IAAgB,IACrCE,GAAgBC,KAAqB,EAAAp6C,EAAAge,WAAS,GAE/Cq8B,GAAkB,IAAMD,IAAkB,IACzCtU,GAAwBC,KAA6B,EAAA/lC,EAAAge,WAAS,IAC9DioB,GAAgBC,KAAqB,EAAAlmC,EAAAge,UAAS,OAC9Cs8B,GAAqBC,KAA0B,EAAAv6C,EAAAge,UAAS,KACxDw8B,GAAmBC,KAAwB,EAAAz6C,EAAAge,UAAS,KACpDo4B,GAAYC,KAAoB,EAAAr2C,EAAAge,UAAS,IACzC08B,GAAmBC,KAAwB,EAAA36C,EAAAge,WAAS,IACpD48B,GAAoBC,KAAyB,EAAA76C,EAAAge,WAAS,GAEvDuZ,IAAsB,EAAAxrB,EAAAsR,aAAYuP,EAAA4K,wBAClChJ,IAAe,EAAAziB,EAAAsR,aAAYuP,EAAA6K,iBAC3B9K,IAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgB8I,EAAA+B,UAC1C1K,gBAAEA,GAAkB,CAAC,EAACD,qBAAEA,GAAuB,CAAC,IACpDJ,cAAW,EAAXA,GAAaM,WAAY,CAAC,EACtB0K,IAAS,EAAA5rB,EAAAsR,aAAYnR,EAAA0rB,UAAWjC,EAAA+B,SAChCG,IAAY,EAAA9rB,EAAAsR,aAAYuP,EAAAkL,aAAcnC,EAAA+B,SACtCK,IAAY,EAAAhsB,EAAAsR,aAAYuP,EAAAoL,aAAcrC,EAAA+B,SACtC7F,IAAsB,EAAA9lB,EAAAsR,aAAYuP,EAAAkF,wBAClCmG,IAAiB,EAAAlsB,EAAAsR,aAAYuP,EAAAsL,mBAC7BnG,IAAc,EAAAhmB,EAAAsR,aAAYuP,EAAAoF,gBAC1BmG,IAAU,EAAApsB,EAAAsR,aAAYuP,EAAAwL,WAAYzC,EAAA+B,UAAY3K,GAC9CsL,IAAoB,EAAAtsB,EAAAsR,aAAYpR,EAAAqsB,qBAAsB3C,EAAA+B,SACtD/Y,IAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtB4T,IAAW,EAAAzmB,EAAAsR,aAAYpR,EAAAwmB,8BAA+B1mB,EAAAqhB,cACtDxkB,IAAY,EAAAmD,EAAAsR,aAAYpR,EAAAY,aAAc8oB,EAAA+B,SACtCa,IAAS,EAAAxsB,EAAAsR,aAAYuP,EAAA4L,UAAW7C,EAAA+B,SAChCiB,IAAqB,EAAA5sB,EAAAsR,aAAYuP,EAAAgM,sBAAuBjD,EAAA+B,SACxDuS,GAAiBrpC,OAAO83B,KAAKH,IAAQjqB,OACrCmqB,GAAmBwR,GAAiB,EACpCkF,IAAgB,EAAApjC,EAAAsR,aAAYuP,EAAAwiB,kBAC5BL,IAAqB,EAAAhjC,EAAAsR,aAAYuP,EAAAoiB,sBAAuBjjC,EAAAqhB,cACxD0tB,IAA4B,EAAA/uC,EAAAsR,aAChCuP,EAAAmuB,6BACAhvC,EAAAqhB,cAEI4tB,GAAsBjM,GACxBnuC,OAAO83B,KAAKqW,IAAoBzgC,OAChC,EACE2sC,IAAgB,EAAAlvC,EAAAsR,aAAYpR,EAAAivC,kBAC5BC,IAAgB,EAAApvC,EAAAsR,aAAYpR,EAAAmvC,kBAE5BviB,IAAuB,EAAA9sB,EAAAsR,aAAYpR,EAAA6sB,sBAAuBnD,EAAA+B,SAC1DrE,IAAiB,EAAAtnB,EAAAsR,aAAYnR,EAAA6sB,mBAC7B1L,IAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,IAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBACjCC,IAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,IAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCC,IAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIutB,GACJxtB,IAAmCJ,GAC/BpoB,IAAkB,EAAA0G,EAAAsR,aAAYpR,EAAAomB,oBAC9B4c,IAAiB,EAAAljC,EAAAsR,aAAYuP,EAAAsiB,mBAC7BkE,IAAmBnE,IAAkBxW,GACrC6iB,IAAuB,EAAAvvC,EAAAsR,aAAYpR,EAAAsvC,6BACnCC,IAAqB,EAAAzvC,EAAAsR,aAAYpR,EAAAwvC,+BAEjCriB,IAAuB,EAAAxI,EAAA0E,2BAC3BtI,cAAe,EAAfA,GAAiBoB,OACjBzP,IAEE0Z,GACArL,IAEEsM,mBAAEA,KAAuB,EAAAlD,EAAAmD,iBAAgB,CAAE5B,YAK3C6B,KACH,EAAA5I,EAAA0E,2BAA0ByC,cAAS,EAATA,GAAW3J,OAAQzP,KAA9C,MAA0DoZ,OAAW0B,QACjE,CAAC1B,IACD,GACA2B,IAAc,EAAA/D,EAAAgE,QAClB,IAAIL,MAAuB3B,MAAW6B,IACtC,WAEII,IAAsB,EAAA/D,EAAAgE,kBAAiBH,IAEvCI,IAAoB,EAAAlE,EAAAmE,wBACxBhC,IAAaqB,GACbP,GACAxF,GACAhuB,GACAsZ,GACA/V,IAGIoxB,IAAyB,EAAApE,EAAAqE,mBAAkB,CAC/CP,YAAaE,GACbM,UAAWrC,GACXZ,qBACAkD,oBAAqBtJ,EAAAuJ,oBAAoBC,QAErCC,IAAuB,EAAA1E,EAAAqE,mBAAkB,CAC7CP,YAAaE,GACbM,UAAWrC,GACXZ,qBACAkD,oBAAqBtJ,EAAAuJ,oBAAoBG,MAErCC,GACJR,GAAuBzyB,MAAK,EAAG+B,cAC7B,EAAAitB,EAAAkE,wBAAuBnxB,EAAS6uB,cAAO,EAAPA,GAAS7uB,YACtC6uB,GACDuC,IACJF,cAAe,EAAfA,GAAiBlxB,YAChB,EAAAsnB,EAAA+J,4BAA2BH,cAAe,EAAfA,GAAiBlxB,QAASqV,IAClDic,GAAcx3B,QAClBo3B,cAAe,EAAfA,GAAiBK,cAAcL,cAAe,EAAfA,GAAiBI,cAAe,IAG/DtxB,QAASwxB,GACT1M,OAAQ2M,GACRpvB,OAAQqvB,GACRC,SAAUC,GACVzB,QAAS0B,IACPrB,IAAqB,CAAC,GAClBxwB,QAAS8xB,IAAmBZ,IAAmB,CAAC,EAElDa,GACJF,KACA,EAAA3E,EAAA8E,iBAAgBH,GAAqBD,IAAmB90B,SAAS,IAE7Dm1B,IAAuB,EAAApF,EAAAqF,aAAYH,IAEnCI,IAAyB,EAAApF,EAAAqF,oBAC7BZ,GACAjJ,IAAuB,EACvBkJ,GACA,CACEY,UAAU,IAEZ,GAEIC,IAAuB,EAAAtF,EAAAuF,kBAC3BhK,IAAuB,EACvB,CAAE8J,UAAU,IACZ,GAEIG,IAAoB,EAAAlL,EAAA0E,2BAA0ByF,GAAiBpc,IACjEid,GACAH,GAEEM,IAAgB,EAAA/7B,EAAA0W,cACpB,CAACslB,EAAevC,KACd1sB,GAAS,EAAA6f,EAAAqP,wBAAuBD,IAChC,MAAME,EAAkB,IAAIxG,EAAAt1B,QAAU47B,GAAiB,GAAGpV,GACxD6S,GAAW,GAGTjL,KAAiB0N,GACnBnvB,GAAS,EAAA6f,EAAAuP,iBAAgBD,IAE3BnvB,GACE,EAAA6f,EAAAwP,mBACErE,KAAa,EAAAjH,EAAAuL,eAAcL,GAAiBjE,GAAUkD,SAClD,kBACA,MAEP,GAEH,CAACluB,EAAUgrB,GAAWvJ,MAGxB,EAAAxuB,EAAA6W,YAAU,KACR,IAAI2/B,EAEJ,IAAKkE,GAEH,YADArE,GAAiB,GAqBjBG,EAFEpD,GAEc,GAIA,IAAMl5B,KAAKC,MAAsB,KAAhBD,KAAKu8B,UAExC,MAAMC,EAAoBjX,YAAW,KAC/B2W,GAAa4E,GACf3E,GAAiBD,GAAa,GACrBA,KAAe4E,IAAuB5H,IA1BvB3rC,iBACpBsF,GAAS,EAAAf,EAAAu1B,6BAA4B,KAC3CoZ,IAAqB,GAEnBxL,KAAkBte,EAAAiE,uBAClBqa,KAAkBte,EAAAkE,4BAElBhoB,GAAS,EAAAf,EAAAsnC,kBAAiBziB,EAAAkE,4BAC5B,EAmBE2mB,EACF,GACClF,GAGH,OAAO,WACL7W,aAAa+W,EACf,CAAC,GACA,CACDzH,GACAmH,GACAhD,GACAnJ,GACAl9B,EACAmC,EACAigC,GACA6L,GACAN,KAGF,MAAMpe,GAAgBC,IAElBA,WAAOjzB,UACNwyB,IAC4B,OAA7B3E,IAEA,EAAArG,EAAA0L,iBAAgBD,EAAMjzB,SAASmzB,MAAMC,IACtB,OAATA,GAAiBA,IAAS15B,WAC5Bo0B,GAA4BsF,EAC9B,IAGFtF,GAA4B,MAG5BmF,WAAOjzB,UACNswB,GAAoBryB,MAAMo1B,IACzB,EAAApG,EAAAkE,wBAAuBkC,EAAWrzB,QAASizB,EAAMjzB,aAGnD,EAAAmtB,EAAAmG,mBACEL,EAAMjzB,QACN0tB,EACA9b,OAAO2hB,kBACPJ,MAAMK,IACN,GAAIA,WAAgBrD,QAAS,CAC3B,MAAMsD,EAAqBD,EAAerD,QAAQrzB,SAAS,IACrD42B,GAAmB,EAAAxG,EAAA8E,iBACvByB,EACAR,EAAMtB,UAERluB,GACE,EAAA6f,EAAAqQ,mBAAkB,IACbV,EACH5wB,OAAQqxB,EAAiB52B,SAAS,IAClCqzB,QAASsD,IAGf,KAGJhwB,GAAS,EAAA6f,EAAAqQ,mBAAkBV,IAC3BR,GAAclK,GAAqB0K,EAAM5wB,OAAQ4wB,EAAMtB,SAAS,EAG5DiC,IAAyB,EAAAxM,EAAAyM,qBAC7B3C,GAAgBlxB,QAChBqV,GACA,KACA,KACA,CACEkV,iBACEhD,EAAAiD,6CAA6CnV,KAAY,OAIzDye,GAAqB5K,GAASqB,kBAChC,EAAAtmB,EAAA8vB,gBAAeH,IACf78B,EAAE,cAEEiJ,QAASg0B,IAAcnF,IAAW,CAAC,EACrCoF,IAAa,EAAAv9B,EAAA0W,cAChB6lB,IACK5D,IAAsB4D,EAAMjzB,UAAYg0B,IAC1CvwB,GACE,EAAAf,EAAAwxB,cAAa,CACXC,eAAgBH,GAChBI,0BAA0B,KAIhC3wB,GAAS,EAAA6f,EAAA+Q,gBAAepB,IACxBjF,IAAuB,EAAM,GAE/B,CAACvqB,EAAU4rB,GAAoB2E,KAG3BQ,GAA8BxE,GAAmB/xB,MAAMg1B,IAC3D,EAAAhG,EAAAkE,wBAAuB8B,EAAMjzB,QAASyuB,cAAS,EAATA,GAAWzuB,WAE7Cy0B,IAAsC,EAAA5H,EAAAqF,aAC1CsC,KAGF,EAAA99B,EAAA6W,YAAU,KACR,MAAMmnB,IAAc,EAAApN,EAAA+J,4BAClBmD,cAA2B,EAA3BA,GAA6Bx0B,QAC7BqV,IAEIsf,GAAsB,EAAA1H,EAAAkE,wBAC1BqD,cAA2B,EAA3BA,GAA6Bx0B,QAC7By0B,cAAmC,EAAnCA,GAAqCz0B,SAEjC40B,GACJJ,cAA2B,EAA3BA,GAA6BrE,YAC7BsE,cAAmC,EAAnCA,GAAqCtE,SACnCuE,GAAcC,GAAuBC,GACvCnxB,GACE,EAAA6f,EAAAqQ,mBAAkB,IACblF,GACH0B,QAASqE,cAA2B,EAA3BA,GAA6BrE,QACtC9tB,OAAQmyB,cAA2B,EAA3BA,GAA6BnyB,SAG3C,GACC,CACDoB,EACA+wB,GACAC,GACAhG,GACApZ,MAIF,EAAA3e,EAAA6W,YAAU,MAEN,EAAA+Z,EAAA+J,4BAA2B5C,cAAS,EAATA,GAAWzuB,QAASqV,MAC/CoZ,cAAS,EAATA,GAAW0B,YAAY,EAAA7f,EAAAiG,cAAakX,IAEpChqB,GACE,EAAA6f,EAAAqQ,mBAAkB,IACblF,GACH0B,SAAS,EAAA7f,EAAAiG,cAAakX,GACtBprB,QAAQ,EAAAiO,EAAAukB,oBAAmB,CACzB17B,MAAOs0B,EACPqH,iBAAkB,EAClBC,eAAgB,UAIxB,GACC,CAACtxB,EAAUgrB,GAAWhB,EAAYpY,MAErC,EAAA3e,EAAA6W,YAAU,KACHkhB,aAAW3J,QAAWgL,aAAsBhL,QAC/CrhB,GAAS,EAAA6f,EAAAqQ,mBAAkB5E,IAC7B,GAEC,KAEH,EAAAr4B,EAAA6W,YAAU,KACJ0kB,KAAyBF,IAC3BU,GAAclK,GAAqBwJ,GACrC,GACC,CACDU,GACAR,GACA1J,GACAwJ,KAGF,MAAMsgB,IAAkC,EAAA37C,EAAA0W,cAAY,KAClDhQ,GAAW,CACTI,MAAO,2BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,CACnBU,mBAAoBtB,GACpBuB,qBAAsBrB,GACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,KAEnB,GACD,CACD/mB,GACA2mB,GACAE,GACAI,GACAE,GACAJ,MAGF,EAAAztB,EAAA6W,YAAU,KACR9J,GAAS,EAAAf,EAAAuyB,6BACTxxB,GAAS,EAAA6f,EAAA4R,kCACTmd,IAAiC,GAChC,CAAC5uC,EAAU4uC,KAEd,MAAMhd,GAAoB,IAEtB3+B,EAAAI,QAAAqF,cAAA,KACEG,UAAU,0CACVpD,IAAI,mCACJ6G,QAAS,KAEP3C,GAAW,CACTI,MAAO2b,EAAA1b,qBAAqB63B,oBAC5Bj4B,SAAU8b,EAAA7b,yBAAyBonB,MACnC/mB,WAAY,CACV43B,UAAWpc,EAAAqc,yBAAyBC,aACpCzpB,SAAU,qBACV0pB,YAAY,EAAAzxB,EAAA8vB,gBAAeH,OAG/BhiB,OAAOC,SAASC,QAAQ,CACtBC,IAAK6hB,IACL,EAEJ9uB,OAAO,SACP+J,IAAI,uBAEHilB,IAKDwe,GAAuB,GAAGv7C,EAAE,eAAe26B,IAAmB,MAC9D6gB,GAAqB,GAAGx7C,EAAE,gBAC9Bm6B,cAAe,EAAfA,GAAiB7uB,SAAU,MAGvByzB,IAA0B,EAAA1I,EAAA2I,4BAC9B1gB,GACAmc,GACAN,GAAgBlxB,SAEZg2B,GACJrH,KACCV,KACAn0B,OAAOyuB,OACP2I,aAAiBlxB,WACjBwxB,IACD13B,OAAO2uB,IAAe,GACtB3uB,OAAO2uB,IAAelB,EAAA0O,sBACrB7E,IAAuBE,GAAc,IAAMvD,GAkD9C,IAAIykB,IA/CJ,EAAA97C,EAAA6W,YAAU,KACR9J,GAAS,EAAAf,EAAAwzB,qBACTzyB,GAAS,EAAAf,EAAAipB,yBA8BT,OAdA4B,EAAgC4I,YAAW,KACzC5I,EAAgC,KAC3ByI,KACC+b,MACF,EAAArvC,EAAA0yB,6BACA3xB,EAAS,CACPvC,KAAM8uC,EAAAyC,6BACN5lC,QAAS,QAtBwB1O,WACvCkzC,IAAqB,SAEf5tC,GACJ,EAAA6f,EAAAwI,6BACElmB,EACA2iB,GACAE,GACArrB,IAN4B,GAS/B,EAeCg5B,GACF,GACC,KACI,IAAMC,aAAa9I,EAA8B,GACvD,CACD9pB,EACAmC,EACA6iB,GACArrB,GACA44B,GACAzN,GACAiJ,GACAM,GACA3N,GACA4tB,KAMAS,GADE3M,IAAiBA,KAAkBte,EAAAkE,2BACpB10B,EAAE,oCACTi/B,GAEA9E,aAAiBlxB,SAAYwxB,GAGtBz6B,EAAE,mBAFFA,EAAE,mBAFFA,EAAE,sBAOrB,MAiBM27C,IAAoB,EAAAh8C,EAAA0W,cACvBmnB,IAAS,EAAAtH,EAAAkE,wBAAuBoD,EAAKv0B,QAASwxB,KAC/C,CAACA,KAGGmhB,IAAsB,EAAAj8C,EAAA0W,cACzBmnB,IAAS,EAAAtH,EAAAkE,wBAAuBoD,EAAKv0B,QAASkxB,cAAe,EAAfA,GAAiBlxB,UAChE,CAACkxB,cAAe,EAAfA,GAAiBlxB,UAGd4yC,IACH/M,KAAkB7P,IAA8B7G,GAC7C0jB,IACHhN,KAAkB7P,KAA+B7G,GAC9C2jB,IACHnkB,IAAkBzJ,IAAgBuM,GAC/BshB,GACJpB,KACCiB,KACAC,KACA1jB,GAEG6jB,GAAyC,IAAhB1hB,IAE/B,EAAA56B,EAAA6W,YAAU,KACJs4B,KAAkBte,EAAAgE,sBACpB3lB,EAAQC,KAAK9B,EAAA2lC,yBACf,GACC,CAAC7D,GAAejgC,KAEnB,EAAAlP,EAAA6W,YAAU,KACJslC,IACFpC,GAAmB,GACrB,GACC,CAACoC,KAEJ,MAgCMxV,GAAmB,CACvBC,wBAL8B,KAC9Bb,IAA0B,EAAM,EAKhCc,mBA1ByB,KACzBngC,GAAW,CACTI,MAAO,iBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,CACnBG,OAAQ6X,cAAc,EAAdA,GAAgB7X,OACxB9kB,QAAS28B,cAAc,EAAdA,GAAgB38B,QACzBw9B,SAAUnoB,GACVgQ,mBAAoBtB,GACpBuB,qBAAsBrB,GACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,MAIrB8P,aAAa0I,IACbC,GAAkB,KAAK,EAUvBH,6BACAE,mBAGF,IAAIsW,GACAC,GACAC,GAGA3C,KAAoBxa,KACtBid,IAA2B,EAAAzrB,EAAAiY,4BAA2B+Q,IACtD0C,IAA2B,EAAA1rB,EAAA4rB,2BACzBH,GACA,sCAGA1qB,KACF4qB,IAA2B,EAAA3rB,EAAA4rB,2BACzB7qB,GACA,yCAIJ,MAAM8qB,GACJ5hB,MACC,EAAAnK,EAAA0E,2BAA0ByF,GAAiBpc,KAC5Cwc,GAAsB,EAExB,OACEn7B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,8BACZqgC,IAAkBH,IACjB9lC,EAAAI,QAAAqF,cAACkgC,EAAAvlC,QAAW6N,EAAA,CAACmI,QAAM,GAAKuwB,KAE1B3mC,EAAAI,QAAAqF,cAACrD,EAAA0U,MAAK,CACJC,QAASmjC,GACT9jC,OAAQ4jC,GACRhjC,wBAAsB,EACtBC,qBAAmB,EACnBrR,UAAU,8BAEV5F,EAAAI,QAAAqF,cAACrD,EAAA+U,aAAY,MACbnX,EAAAI,QAAAqF,cAACumC,EAAA50B,aAAY,KACXpX,EAAAI,QAAAqF,cAACwmC,EAAA50B,YAAW,CAACN,QAASmjC,IAAgB75C,EAAE,eACxCL,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFygB,WAAY,GACZxO,aAAc,EACdvC,cAAe,EACfsC,YAAa,EACbvM,QAASlE,EAAAytB,QAAQC,MAEjBrvB,EAAAI,QAAAqF,cAACi0C,EAAAt5C,QAAc,CACb2/B,aAAcvF,GACdoF,cAAetF,GACf+L,YAAcxI,IACZN,aAAaM,GACbqc,IAAe,EAEjBla,aAAc,GACdhvB,YAAawpC,GACbrU,eAAgBsU,GAChBva,WAAY8b,GACZxb,wBAAsB,EACtB8G,4BAlGuBzJ,IACnCqI,GAAkBrI,GAClBkI,IAA0B,GAC1BmU,KACAO,GAAqB,GAAG,OAmGpBz6C,EAAAI,QAAAqF,cAACrD,EAAA0U,MAAK,CACJC,QAASsjC,GACTjkC,OAAQ+jC,GACRnjC,wBAAsB,EACtBC,qBAAmB,EACnBrR,UAAU,8BAEV5F,EAAAI,QAAAqF,cAACrD,EAAA+U,aAAY,MACbnX,EAAAI,QAAAqF,cAACumC,EAAA50B,aAAY,KACXpX,EAAAI,QAAAqF,cAACwmC,EAAA50B,YAAW,CAACN,QAASsjC,IACnBh6C,EAAE,iBAELL,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFygB,WAAY,GACZxO,aAAc,EACdvC,cAAe,EACfsC,YAAa,EACbvM,QAASlE,EAAAytB,QAAQC,MAEjBrvB,EAAAI,QAAAqF,cAACi0C,EAAAt5C,QAAc,CACb2/B,aAAcjG,GACd8F,cAAe5F,GACfqM,YAAcxI,IACZvB,aAAeuB,GACfwc,IAAiB,EAEnBra,aAAc,GACdhvB,YAAaspC,GACbnU,eAAgBoU,GAChBra,WAAY+b,QAMpBj8C,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wCACb5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACg0C,EAAAr5C,QAAa,CACZiJ,QAlsBW,IAAM+wC,IAAkB,GAmsBnCrjC,QAASsjC,GACTuC,cAAe9iB,GACf+iB,OAAO,gCAET78C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAMnnB,WAAYvG,EAAAwG,WAAWC,QACjDpI,EAAAI,QAAAqF,cAACrD,EAAA06C,UAAS,CACRl3C,WAAW,EAAAnE,EAAArB,SAAW,uCAAwC,CAC5Dq8C,CAACA,IAA2BA,KAE9B/rC,KAAMtO,EAAA26C,cAAcnsC,GACpBs0B,YAAY,IACZ1+B,SAlNaM,IACzBA,EAAMq+B,kBAEN,MAAMC,EAAoC,MAAvBt+B,EAAMsH,OAAO3L,MAAgB,KAAOqE,EAAMsH,OAAO3L,MAKjD,KAAf2iC,GAFW,+BAEiBC,KAAKD,GACnCrJ,GAAcqJ,EAAY/J,IAI1BU,GAAclK,IAAuB,GAAIwJ,GAC3C,EAqMY54B,MAAOovB,GACPmrB,UAAU,EACVH,OAAO,0CAIb78C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAW80C,SAEvBj9C,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACZm1B,IAAmB6gB,GACnBe,IACC38C,EAAAI,QAAAqF,cAAA,OACEG,UAAU,iCACV,cAAY,gCACZyD,QAAS,IACP0yB,GAAcV,IAAoB,IAAKA,KAGxCh7B,EAAE,SAIRwxB,IAAuBiK,IACtB97B,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAegkB,QAC/B9jB,WAAYvG,EAAAwG,WAAW6jB,SAEvBhsB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBV,MAAOvH,EAAAwH,UAAUuP,iBAEhBojB,MAKRsgB,IACCp8C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAegQ,WAE/BhY,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYm0C,WACrBh0C,MAAOvH,EAAAwH,UAAUuP,gBACjB7O,UAAW,GAEVxJ,EAAE,sBAAuB,CAAC06B,OAIhC9C,IACCj4B,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAegQ,WAE/BhY,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYm0C,WACrBh0C,MAAOvH,EAAAwH,UAAUuP,gBACjB7O,UAAW,GAEVxJ,EAAE,2BAA4B,CAC7B06B,GACAG,OAKRl7B,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAMtnB,eAAgBpG,EAAAqG,eAAeI,QACzDpI,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,mCAAoC,CACxD,2CAA4Cw6C,GAC5C,6CACEuB,KAEJ,cAAY,kCACZ9yC,QAAS,KAEF8yC,KACH5e,GAAWzD,IACXwC,GAAa9B,IACbqgB,IAAuBD,IACzB,EAEF9+B,MAAOzb,EAAE,mBAETL,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAAS6sC,WAAYzsC,KAAMtO,EAAA+Z,SAASiM,QAItDpoB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACb5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACg0C,EAAAr5C,QAAa,CACZiJ,QAtzBS,IAAM4wC,IAAgB,GAuzB/BljC,QAASmjC,GACT0C,cAAepiB,GACfqiB,OAAO,8BAET78C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBnnB,WAAYvG,EAAAwG,WAAWC,OACvB4B,WAAY,EACZpE,UAAU,+CAEV5F,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHI,GAAG,KACH,cAAY,mCACZrD,WAAW,EAAAnE,EAAArB,SAAW,oCAAqC,CACzDo8C,CAACA,IAA2BA,MAG7BD,MAIPv8C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAW80C,SAEvBj9C,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uCACZ40B,cAAe,EAAfA,GAAiB7uB,SAAUkwC,MAIjCQ,IACCr8C,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACT4U,YAAapqB,EAAAkO,SAASiQ,OACtB68B,aAAc,CACZ1sC,KAAMtO,EAAA+Z,SAASgrB,IAEjBr+B,QAASnH,EAAAoH,YAAYa,OACrBC,UAAW,EACXqP,WAAYvX,EAAAwX,WAAWkkC,OACvBh0C,QAAS,KACP,MAAMi0C,GAAe,EAAAjE,EAAAkE,iBACnB,SACA,+BACApC,GACAG,GACAE,IAGFtgC,OAAOC,SAASC,QAAQ,CACtBC,IAAK,GAAGiiC,WAAsBxiB,OAGhCp0B,GAAW,CACTC,SAAU8b,EAAA7b,yBAAyBonB,MACnClnB,MAAO2b,EAAA1b,qBAAqBy2C,kBAC5Bv2C,WAAY,CACVqO,SAAU,QACVsD,KAAM,+CACNkuB,SAAUnoB,GACV8+B,aAAc1iB,KAEhB,EAEJ3sB,OAAO,SACP,cAAY,4CAEX/N,EAAE,yBAGL67C,IAAmBxhB,IAAuBE,GAAc,GACxD56B,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAMxlB,UAAW,GACrC7J,EAAAI,QAAAqF,cAACrD,EAAA4e,YAAW,CACVC,SACEq7B,GAAyB36C,EAAA+7C,WAAWC,QAAUh8C,EAAA+7C,WAAWE,OAE3D9hC,MAEMzb,EADJi8C,GACM,kCACA,+BAERuB,WAAY,CACV,cAAe,sBAEjBn0C,MAAO/H,EAAAutB,YAAYC,MAEnBnvB,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,KACFJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBC,GAAG,KACH,cAAY,qCAEXqzC,GACGj8C,EAAE,wCAAyC,CACzCm6B,cAAe,EAAfA,GAAiBpM,OACjBpuB,EAAAI,QAAAqF,cAACk5B,GAAiB,CAACn8B,IAAI,0BAEzBnC,EAAE,oCAAqC,CACrCL,EAAAI,QAAAqF,cAACk5B,GAAiB,CAACn8B,IAAI,4BAG7B60B,IACAr3B,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTlH,KAAMtO,EAAAyV,eAAeC,QACrBC,UAAW,CACTjP,QAASnH,EAAAoH,YAAYC,OACrBd,WAAYvG,EAAAwG,WAAW6P,WAEzB3O,QAAUpJ,IACRA,EAAE69C,iBACFxmB,IAAuB,EAAK,GAG7Bj3B,EAAE,4BAOd8uC,IACCnvC,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAMxlB,UAAW,GACrC7J,EAAAI,QAAAqF,cAAC+zC,EAAAp5C,QAAgB,CACf+uC,cAAeA,GACf9N,gBAAiBtP,MAItB+oB,KAA8B1b,IAC7Bp/B,EAAAI,QAAAqF,cAAC8zC,EAAAn5C,QAAmB,CAClBwT,SAAWstB,IACTn0B,GAAS,EAAA6f,EAAAuU,gBAAeD,GAAa,EAEvCE,mBAAoBvQ,EAAA0O,qBACpB8B,gBAAiBtP,GACjBqN,wBAAyBA,GACzB2e,aAAc,KACZhxC,GAAS,EAAA6f,EAAA4lB,+BAA6B,GAAO,IAIlD2J,IACCn8C,EAAAI,QAAAqF,cAACk0C,EAAAv5C,QAAsB,CACrBg2C,WAAYA,GACZ4E,oBAAqBA,KAGxBkB,IACCl8C,EAAAI,QAAAqF,cAACm0C,EAAAx5C,QAAW,CAAC25C,mBAAoBA,OAGnCthB,IACAz4B,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACV0vB,WAAYgsB,GACZzzB,UAAQ,EACR0H,YAAU,EACV0R,oBAAkB,IAK5B,CAEAoY,GAAgB91B,UAAY,CAC1BgT,WAAYx1B,EAAAnB,QAAUuL,OACtBqrB,uBAAwBz1B,EAAAnB,QAAUuL,OAClCsrB,mBAAoB11B,EAAAnB,QAAUshC,M,sgBC/nChC,IAAA1hC,EAcmG,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAdnGY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eAEAmrB,EAAAnrB,EAAA,0BACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAQAc,EAAAd,EAAA,yCACA08C,EAAAx8C,EAAAF,EAAA,+DAAmG,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEpF,SAASg+C,EAAuBz4C,GAC7C,MAAM4wC,WAAEA,EAAU4E,oBAAEA,GAAwBx1C,EAEtCnF,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aAErB,OACE1sB,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyJ,UAAW,EACXhE,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,OACvBpC,cAAerE,EAAAq3C,eAAeC,QAE9Bj5C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBC,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,gBACjB1O,WAAY,EACZF,YAAa,GAEZzJ,EAAE,sBAELL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYwmB,WACrBtmB,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,iBAEhBrY,EAAE,gBAAiB,CAClB6Z,KAAK68B,IAAIX,EAAa,EAAG4E,GACzBA,MAINh7C,EAAAI,QAAAqF,cAACu4C,EAAA59C,QAAyB,MAGhC,CAEA69C,EAAuBl6B,UAAY,CACjCqyB,WAAY70C,EAAAnB,QAAUyL,OAAO8I,WAC7BqmC,oBAAqBz5C,EAAAnB,QAAUyL,OAAO8I,W,m3DC7DxC,IAAA3U,EAgJsE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAhJtEY,CAAAC,EAAA,UAQAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACAo0B,EAAAl0B,EAAAF,EAAA,iBACAq0B,EAAAr0B,EAAA,UACAG,EAAAD,EAAAF,EAAA,eACA48C,EAAA58C,EAAA,mBACAC,EAAAC,EAAAF,EAAA,eACAioC,EAAA/nC,EAAAF,EAAA,2CACAmrB,EAAAnrB,EAAA,0BACA68C,EAAA38C,EAAAF,EAAA,4BACAg1B,EAAAh1B,EAAA,mCACAu0B,EAAAv0B,EAAA,mCACA60B,EAAA70B,EAAA,8BACA88C,EAAA98C,EAAA,6CACAW,EAAAX,EAAA,iCACAsrB,EAAAtrB,EAAA,8BA4BA2K,EAAA3K,EAAA,sBAYAoY,EAAApY,EAAA,wCAIA4K,EAAA5K,EAAA,oCACA0K,EAAA1K,EAAA,0BAMA+L,EAAA/L,EAAA,qCAMAsY,EAAAtY,EAAA,+CAOA+8C,EAAA/8C,EAAA,4DACAsvB,EAAAtvB,EAAA,iBAMA80B,EAAA90B,EAAA,kCACAuvB,EAAAvvB,EAAA,sCAKAg9C,EAAAh9C,EAAA,oCACA0iC,EAAAxiC,EAAAF,EAAA,uBACAquB,EAAAnuB,EAAAF,EAAA,oBACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAYAc,EAAAd,EAAA,yCAMAmhB,EAAAnhB,EAAA,4CAKAi1B,EAAAj1B,EAAA,2CACAi9C,EAAAj9C,EAAA,gDACAk9C,EAAAl9C,EAAA,oDACAk1B,EAAAl1B,EAAA,wDAKAiM,EAAAjM,EAAA,oCACAo1B,EAAAp1B,EAAA,sCAIAgoC,EAAA9nC,EAAAF,EAAA,6BACA20B,EAAAz0B,EAAAF,EAAA,wCACAm9C,EAAAj9C,EAAAF,EAAA,2CACAo9C,EAAAl9C,EAAAF,EAAA,kCACAq9C,EAAAn9C,EAAAF,EAAA,kCAAsE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEtE,IAAIse,EAEW,SAASqgC,GAAY7E,mBAAEA,IAAsB,IAAAlnB,EAAAgsB,EAAAC,EAAAC,EAAAC,EAAAC,EAC1D,MAAM/vC,GAAU,EAAA/B,EAAA2X,cACV/X,GAAW,EAAAhB,EAAAyK,eACXnW,IAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfhmB,IAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,qBAEvBs8B,GAAeC,KAAoB,EAAAn/C,EAAAge,WAAS,IAC5CohC,GAAyBC,KAA8B,EAAAr/C,EAAAge,WAAS,IAChEshC,KAAiB,EAAAt/C,EAAAge,WAAS,IAC1BuhC,GAAuBC,KAA4B,EAAAx/C,EAAAge,UAAS,OAC5DyhC,GAAsBC,KAA2B,EAAA1/C,EAAAge,UAAS,OAC1D2hC,GAA8BC,KACnC,EAAA5/C,EAAAge,UAAS,OAEJ6hC,KAAoB,EAAA7/C,EAAAge,UAAS7X,KAAKmY,QACnCwhC,qBAAEA,KAAyB,EAAArB,EAAAr+C,YAE1B2/C,GAA6BC,KAClC,EAAAhgD,EAAAge,WAAS,IACJiiC,GAAiCC,KACtC,EAAAlgD,EAAAge,WAAS,GACLmiC,GAA8B,CAClC7B,EAAA8B,mBAAmBC,KACnB/B,EAAA8B,mBAAmBE,QAGfjS,IAAa,EAAAtiC,EAAAsR,aAAYuP,EAAA0hB,6BACzB/V,IAAS,EAAAxsB,EAAAsR,aAAYuP,EAAA4L,UAAW7C,EAAA+B,UACtC,EAAA13B,EAAA6W,YAAU,KACHjW,OAAO0lB,OAAOiS,IAAQjqB,OAED,aAAf+/B,IACTn/B,EAAQC,KAAK9B,EAAAmgC,qBAFbt+B,EAAQC,KAAK9B,EAAA6gC,mBAGf,GACC,CAACh/B,EAASqpB,GAAQ8V,KAErB,MAAMkS,IAAoB,EAAAx0C,EAAAsR,aAAYuP,EAAA4zB,sBAChCC,IAAwB,EAAAtqB,EAAAqF,aAAY+kB,IAGpCntB,IAAW,EAAArnB,EAAAsR,aAAYuP,EAAAwF,sBACvBsuB,IAAe,EAAA30C,EAAAsR,aAAYuP,EAAA+zB,mBAC3BC,IAAqB,EAAA70C,EAAAsR,aAAYuP,EAAAi0B,uBACjCC,IAA6B,EAAA/0C,EAAAsR,aAAYuP,EAAAm0B,+BACzCC,IAAoB,EAAAj1C,EAAAsR,aAAYuP,EAAAq0B,sBAChCpoB,IAAuB,EAAA9sB,EAAAsR,aAAYpR,EAAA6sB,sBAAuBnD,EAAA+B,SAC1DwpB,IAA+B,EAAArrB,EAAAgE,kBAAiBhB,KAC9CY,QAAS1C,KAAe,EAAAhrB,EAAAsR,aAAYpR,EAAAuiC,mBAAoBziC,EAAAqhB,cAC1DiG,IAAiB,EAAAtnB,EAAAsR,aAAYpR,EAAAk1C,wBAC7BC,IAAoB,EAAAr1C,EAAAsR,aAAYpR,EAAAsmB,sBAChCltB,IAAkB,EAAA0G,EAAAsR,aAAYpR,EAAAomB,oBAC9BgvB,IAAc,EAAAt1C,EAAAsR,aAAYnR,EAAA0rB,UAAWjC,EAAA+B,SACrCuT,IAAgC,EAAAl/B,EAAAsR,aACpCpR,EAAAi/B,oCAEI1c,IAAe,EAAAziB,EAAAsR,aAAYuP,EAAA6K,iBAC3B9K,IAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgB8I,EAAA+B,SAC1CxK,IAAkB,EAAAnhB,EAAAsR,aAAYuP,EAAAO,mBAAoBphB,EAAAqhB,cAClDk0B,IAAgB,EAAAv1C,EAAAsR,aAAYuP,EAAA20B,iBAAkB5rB,EAAA+B,SAC9C8pB,IAAW,EAAAz1C,EAAAsR,aAAYuP,EAAA60B,YAAa9rB,EAAA+B,SACpCzF,GAAYqvB,IAAiBE,GAC7BluB,IAAarB,UAAgB,QAAPY,EAATZ,GAAWsB,aAAK,IAAAV,OAAA,EAAhBA,EAAkBpwB,QAAS,MACxC41B,IAAoB,EAAAtsB,EAAAsR,aAAYpR,EAAAqsB,qBAAsB3C,EAAA+B,SACtD/Y,IAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtB8iC,IAAuB,EAAA31C,EAAAsR,aAAYnR,EAAAy1C,mBACnCnS,IAA6B,EAAAzjC,EAAAsR,aAAYuP,EAAA6iB,+BACzChiB,IAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,IAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCg0B,IAAkB,EAAA71C,EAAAsR,aAAYuP,EAAAi1B,oBAC9B7R,IAAgC,EAAAjkC,EAAAsR,aACpCuP,EAAAqjB,kCAEI6R,IAAyB,EAAA/1C,EAAAsR,aAAYuP,EAAAm1B,2BACrCl0B,IAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIoL,IAAuB,EAAAntB,EAAAsR,aAAYuP,EAAAuM,wBAAyBxD,EAAA+B,SAC5DsqB,IAAqB,EAAAj2C,EAAAsR,aAAYuP,EAAAq1B,sBAAuBl2C,EAAAqhB,cACxD80B,GAAsBjwB,GAAUsB,MAChC8nB,GACJxtB,IAAmCJ,IAE9B00B,KAAoB,EAAAniD,EAAAge,WAAS,KAClC,MAAMyQ,EAAWrrB,OAAOupB,cAAW,EAAXA,GAAa8B,UACrC,OAAIA,EAAW,GAAKA,GAAY,EACvBoC,EAAAuxB,mBACE3zB,GAAY,GAAKA,GAAYoC,EAAA0O,qBAC/B1O,EAAAwxB,oBAEF,EAAE,IAGX,IAAIC,GACArX,KAGFqX,IAAe,EAAAlE,EAAAmE,iBAAgBjE,EAAA8B,mBAAmBC,KAAM,CACtDmC,aAAcxB,IAAqB1C,EAAA8B,mBAAmBC,QAI1D,MAAMoC,GAAyB91B,cAAW,EAAXA,GAAa+1B,YAEtCC,GAA2B,CAC/BC,kBAAmB5/C,UACnB6/C,kBAAmB7/C,UACnB8/C,sBAAuB9/C,UACvB+/C,sBAAuB//C,UACvBggD,eAAgBhgD,UAChBigD,eAAgBjgD,UAChBkgD,mBAAoBlgD,UACpBmgD,mBAAoBngD,WAGhBogD,IACJnxB,cAAS,EAATA,GAAWe,wBACX,MAAK,EAAApZ,EAAAypC,eAAapxB,cAAS,EAATA,GAAWgB,aAAc,KAEvCqwB,IAAc,EAAA5sB,EAAA6sB,sBAClBtxB,cAAS,EAATA,GAAWuxB,YACXvxB,cAAS,EAATA,GAAWwxB,cACXxxB,cAAS,EAATA,GAAWyxB,OACXhD,IAGF,IAAIiD,GACAC,GACAC,GAGJ,GAAI5Y,GAA+B,CACjC,MACE0Y,aAAcG,EACdF,qBAAsBG,EACtBC,iBAAiBC,iBAAEA,EAAmB,KAAQ,CAAC,GAC7C3B,GACJqB,GAAe/C,KAAsB,EAAAhnC,EAAAsqC,iBAAgBJ,GACrDF,GACE9C,KACA,EAAAlnC,EAAAsqC,iBAAgBH,GAClBF,IAA2B,EAAAjqC,EAAAuqC,WACzB,EAAAvqC,EAAAsqC,iBAAgBD,GAChBL,GAEJ,CACA,IAAIQ,IAAmB,EAAA5tB,EAAA6tB,cAAaf,GAAaK,IAAgBvwB,IACpC,OAAzBqsB,KACF2E,IAAmB,EAAAxqC,EAAA0qC,UACjBF,IAAoB,MACpB3E,IAAwB,QAI5B,MAAMnmB,mBAAEA,KAAuB,EAAAlD,EAAAmD,iBAAgB,CAC7C5B,OAAQ0pB,GACRkD,qBAAqB,IAEjBC,GACJ/B,KAA2BpqB,GAAkB/uB,QACzC+uB,GACAiB,GAAmB/xB,MAAK,EAAG+B,cACzB,EAAAitB,EAAAkE,wBAAuBnxB,EAASm5C,MAGlC3oB,GAAoB0qB,IAAgBvyB,GAAUjF,gBAC9Cy3B,IACJnrB,cAAkB,EAAlBA,GAAoBhrB,UACpB,EAAAkoB,EAAA8E,iBACExB,GAAkBL,SAAW,MAC7BK,GAAkBmB,UAClBypB,QAAQ,GACNC,GACJrrB,IAAsBkrB,KAAiBxhD,UAEnC4hD,IAAc,EAAArG,EAAAsG,mCAAkC33B,cAAe,EAAfA,GAAiB43B,MACjEC,GAAeH,KAAe,EAAApG,EAAAwG,oBAAmBJ,IACjDK,GACJF,KACAjrB,cAAiB,EAAjBA,GAAmBmB,YAAaj4B,YAChC,EAAAwzB,EAAA8E,iBAAgBypB,GAAcjrB,GAAkBmB,UAAUypB,QAAQ,GAC9DxxB,GAAahG,cAAe,EAAfA,GAAiBiG,IAE9B+xB,IAAwB,EAAAllD,EAAAmlD,UAAQ,KAC7B,EAAAv0B,EAAAw0B,wBAAuB,CAC5B7sB,UACAnF,SAAU6X,GACN4Y,GACAzwB,GACJC,kBACAhuB,mBACA6tB,cACA2F,qBAAsBqoB,GACtBviC,WACA0mC,6BACE13B,IACAF,KACAyL,cAAoB,EAApBA,GAAsBuF,aACxBijB,wBACA/B,mCAED,CACDpnB,GACAnF,GACAywB,GACA5Y,GACA5X,GACAhuB,GACA6tB,GACAguB,GACAviC,GACAua,cAAoB,EAApBA,GAAsBuF,YACtBijB,GACA/zB,GACAF,GACAkyB,KAGI2F,GAA6BJ,GAAsB39C,MACtDg+C,GACCA,EAAuBC,QAAUvzB,GAAUwzB,cAGzCC,yBACJA,GAAwBC,uBACxBA,GAAsBC,sBACtBA,GAAqBC,oBACrBA,GAAmBC,kBACnBA,GAAiBC,iBACjBA,IACET,GAEJ,IAAIU,UAAEA,GAASC,SAAEA,GAAQC,UAAEA,GAASC,SAAEA,KACpC,EAAAv1B,EAAAkC,kCAAiC,CAC/BC,SAAUqwB,GACVlwB,cACAE,SAAU6X,GACN4Y,GACAzwB,GACJ/tB,mBACAguB,kBACA+tB,qBACA9tB,cACAE,aAAcsyB,GACdryB,aAAcxB,GAAUwB,aACxB9U,WACA+iC,wBACAjC,0BAEJkD,GAAyBC,kBAAoBx/C,OAAO+iD,IACpDxD,GAAyBE,kBAAoBz/C,OAAO8iD,IAEpD,MAAME,IAAoB,EAAAx1B,EAAAkC,kCAAiC,CACzDC,SAAUuwB,GACVpwB,cACAE,SAAUuwB,IAAgBvwB,GAC1B/tB,mBACAguB,kBACA+tB,qBACA9tB,cACAE,aAAcsyB,GACdryB,aAAcxB,GAAUwB,aACxB9U,WACA+iC,wBACAjC,0BAEF,IACEuG,UAAWK,GACXJ,SAAUK,GACVJ,UAAWK,GACXJ,SAAUK,IACRJ,GAIJ,GAHAzD,GAAyBG,sBAAwB1/C,OAAOojD,IACxD7D,GAAyBI,sBAAwB3/C,OAAOmjD,IAEpDlL,UAAsBniB,OAAsBuF,YAAa,KAAAgoB,GAAAC,GAC3D,MAAMC,GACJztB,cAAoB,EAApBA,GAAsBuF,YAAYmoB,eACjC1tB,UAAoC,QAAhButB,GAApBvtB,GAAsB2tB,sBAAc,IAAAJ,QAAA,EAApCA,GAAsCG,cAAe,GAClDE,GACJ5tB,cAAoB,EAApBA,GAAsBuF,YAAYsoB,kBACjC7tB,UAAoC,QAAhBwtB,GAApBxtB,GAAsB2tB,sBAAc,IAAAH,QAAA,EAApCA,GAAsCK,iBAAkB,KAExDf,aAAWC,YAAUC,aAAWC,cAAa,EAAAv1B,EAAAo2B,2BAA0B,CACxEroC,WACAtZ,mBACAguB,kBACA+tB,qBACAM,wBACAuF,YAAaN,KAEfhE,GAAyBK,eAAiB5/C,OAAO+iD,IACjDxD,GAAyBM,eAAiB7/C,OAAO8iD,IACjDvD,GAAyBuE,cACvBhuB,cAAoB,EAApBA,GAAsBuF,YAAY0oB,WAElCnB,UAAWK,GACXJ,SAAUK,GACVJ,UAAWK,GACXJ,SAAUK,KACR,EAAA51B,EAAAo2B,2BAA0B,CAC5BroC,WACAtZ,mBACAguB,kBACA+tB,qBACAM,wBACAuF,YAAaH,KAEfnE,GAAyBO,mBAAqB9/C,OAAOojD,IACrD7D,GAAyBQ,mBAAqB//C,OAAOmjD,GACvD,CAEA,MAAMa,GAAY,IAAI1xB,EAAAt1B,QAAU6xB,GAAUwB,cACpC4zB,GAAU,IAAI3xB,EAAAt1B,QAAU6xB,GAAUsB,MAAM9wB,OAAS,EAAG,IAAI6kD,KAC5D,IAAI5xB,EAAAt1B,QAAUgkD,GAAkB,KAG5BmD,KACHjuB,cAAkB,EAAlBA,GAAoBhrB,SAAUkgB,KAC/B44B,GAAUxgC,GAAG,IAAI8O,EAAAt1B,QAAU05B,GAAkBL,SAAW,QAEpD+tB,GAAkBH,GAAQzgC,GAAG,IAAI8O,EAAAt1B,QAAU22B,IAAc,QAEzD0wB,GAAqBF,IACvB,EAAA/wB,EAAAuhB,kCACE,EAAAvhB,EAAA8E,iBAAgB8rB,GAAWttB,GAAkBmB,UAC1CysB,MAAMjD,IACNr+C,SAAS,IACZ,GAEF,KAEEuhD,GAAmBH,IACrB,EAAAhxB,EAAAuhB,iCACEsP,GACGK,MAAM3wB,GAAY,IAClByR,IAAI,sBAAuB,IAC3BpiC,SAAS,IACZ,GAEF,KAEJ,IAAIwhD,GACAvM,UAAsByG,OAAwB+F,mBAChDD,IAAsB,EAAAhuC,EAAAkuC,gBACpBhG,GAAuB+F,iBACrB/F,GAAuBiG,oBAG7B,MAAMC,IAA0B,EAAA7xB,EAAAqF,aAAYosB,IAEtCK,IAAmB,EAAAl8C,EAAAsR,aAAYuP,EAAAs7B,wBAAyBvyB,EAAA+B,UAC9D,EAAA13B,EAAA6W,YAAU,KACJwkC,GACEkM,GACFx6C,GAAS,EAAA6f,EAAAuP,kBAAgB,IAChB3N,KAAiB+4B,IAC1Bx6C,GAAS,EAAA6f,EAAAuP,kBAAgB,IAElBorB,IAAsBC,GAC/Bz6C,GAAS,EAAA6f,EAAAuP,kBAAgB,KAChB3N,IAAiB+4B,IAAuBC,IACjDz6C,GAAS,EAAA6f,EAAAuP,kBAAgB,GAC3B,GACC,CACDorB,GACAC,GACAz6C,EACAsuC,GACA7sB,MAGF,EAAAxuB,EAAA6W,YAAU,MACH0oC,IAAyB0F,IAC5BzF,GAAyByF,GAC3B,GACC,CAAC1F,GAAuB0F,KAG3B,MAMMkD,IACH35B,IACCi5B,KARmCpM,IAAsBsM,IAG1BtM,IAAsBuM,MAQtDtI,GAEGjyB,IAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,IAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBAEjCyc,GAAiBrpC,OAAO0lB,OAAOiS,IAAQjqB,OACvC85C,IAA6B,EAAApoD,EAAAirB,UAC7Bo9B,IAAkB,EAAAroD,EAAAmlD,UAAQ,KACvB,CACLh3B,WAAY23B,GACZz3B,kBAAmB03B,GACnBz3B,SAAUq3B,GACV2C,gBAAiB1C,GACjBr3B,aAAc5B,cAAW,EAAXA,GAAa6B,aAC3BC,SAAU9B,cAAW,EAAXA,GAAa8B,SACvBC,gBAA2C,KAA1B/B,cAAW,EAAXA,GAAa8B,UAC9BunB,cAAerpB,cAAW,EAAXA,GAAa47B,aAC5BC,kBAAmBhH,cAAQ,EAARA,GAAUiE,WAC7BgD,iBAAkBxe,GAClBtb,mBAAoBtB,GACpBuB,qBAAsBrB,GACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,MAElB,CACDq4B,GACAC,GACAJ,GACAC,GACAj5B,cAAW,EAAXA,GAAa6B,aACb7B,cAAW,EAAXA,GAAa8B,SACb9B,cAAW,EAAXA,GAAa47B,aACb/G,cAAQ,EAARA,GAAUiE,WACVxb,GACA5c,GACAE,GACAI,GACAE,GACAJ,KA2CIi7B,IAA8B,EAAA1oD,EAAA0W,cAAY,KAC9ChQ,GAAW,CACTI,MAAO,sBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACHM,aAAc3C,KAEhB,GACD,CAACt/C,GAAY2hD,GAAiBrC,KAC3B4C,IAAgC,EAAA5oD,EAAA0W,cAAY,KAChDhQ,GAAW,CACTI,MAAO,gCACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACHrS,cAAe6J,GAAmBrQ,KAEpC,GACD,CACD9oC,GACA2hD,GACAxI,GACArQ,MAGF,EAAAxvC,EAAA6W,YAAU,MAELuxC,GAA2BlzB,SAC5B,CACE4wB,GACAC,GACAJ,GACAC,GACAj5B,GACA60B,GACAvX,GACA+b,IACAt+B,OAAOmhC,GAAgB,OAARA,GAAgBA,IAAQ7lD,cAEzColD,GAA2BlzB,SAAU,EACrCwzB,KACF,GACC,CACD/7B,GACA60B,GACAvX,GACA+b,GACAL,GACAC,GACAE,GACAC,GACA2C,MAGF,EAAA1oD,EAAA6W,YAAU,KACR,IACIwkC,IAAsB2M,KACrB3M,KACHkF,KAAsBE,GAEtB,OAEF,IAAIqI,EACJ,GAAIzN,IAAsBuM,GACxBkB,EAA0BlB,OACrB,IAAKvM,KAAsBsM,GAGhC,OAFAmB,EAA0BnB,EAG5B,CACAjhD,GAAW,CACTI,MAAO2b,EAAA1b,qBAAqBgiD,UAC5BpiD,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACHW,WAAYvmC,EAAAwmC,0BAA0BC,gBACtCC,0BAA2BL,IAE7B,GACD,CACDvI,GACAE,GACAmH,GACAvM,GACA30C,GACAshD,GACAL,GACAU,KAGF,MAAMre,GAAc/X,GAAUyY,IAGxB0e,GAA8B,KAzGlC1iD,GAAW,CACTI,MAAO,0BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACHgB,uBAAwB9J,KAA0B0F,GAClDqE,0BACE/J,KAA0B0F,GAAgB,KAAOA,MAoGvDl4C,GACE,EAAAf,EAAAu9C,WAAU,CACR1lD,KAAM,2BACNo3B,SAAUnB,GAAkBmB,SAC5BpT,OAAQ,WACR2hC,gBAAkBC,IAChB,MAAMC,EAC0B,KAA9BD,EACIlK,GACAkK,EACAE,GAAU,EAAAtL,EAAAuL,uBAAsB18B,GAAgB43B,KAAM,CAC1D4E,yBACAzuB,SAAUnB,GAAkBmB,WAI5ByuB,WAAwBp7C,QACxB4e,GAAgB43B,OAAS6E,GAEzB58C,GAAS,EAAAf,EAAA69C,wBAAuBF,GAClC,EAEFG,YAAavK,GACbwK,kBACExK,KAA0B0F,GAAgB,KAAOA,GACnDR,gBACAuF,YAAalwB,GAAkB1L,OAC/B67B,iBAAiB,EAAAzzB,EAAA8E,iBACfrJ,GAAUwB,aACVqG,GAAkBmB,YAGvB,EAGGivB,GAAex/C,QAAQk9C,IAAuBD,IAE9CwC,GAAgCxF,GAClCtkD,GAAE,8BAA+B,CAACylD,KAClCzlD,GAAE,4BAA6B,CAC7BL,EAAAI,QAAAqF,cAAA,QAAMjD,IAAI,+BACPilD,IAAsBG,IAAuBD,IAEhDF,IAAwB3B,KAAsBztB,GAAkBjK,OAC5D03B,GACAztB,GAAkBjK,SAItBg8B,GAAsBn4B,UAAwB,QAAf4sB,EAAT5sB,GAAWo4B,qBAAa,IAAAxL,OAAA,EAAxBA,EAA0ByL,OAChDC,IAA4B,EAAAp0B,EAAAqF,aAAY4uB,KAG9C,EAAApqD,EAAA6W,YAAU,KAENkpC,IACAwK,KAA8BjM,EAAA8B,mBAAmBE,QACjD8J,KAAwB9L,EAAA8B,mBAAmBC,MAE3CL,IAA+B,EACjC,GACC,CACDoK,GACArK,GACAwK,KAGF,IAAIC,GAAkC,KACtC,MAAMC,IAA0B,EAAAn0B,EAAAuF,mBAC9B5J,UAAwB,QAAf6sB,EAAT7sB,GAAWo4B,qBAAa,IAAAvL,OAAA,EAAxBA,EAA0B4L,oBAAqB,EAC/C,CAAE/uB,UAAU,IAERgvB,IAA+B,EAAAr0B,EAAAuF,mBACnC5J,UAAwB,QAAf8sB,EAAT9sB,GAAWo4B,qBAAa,IAAAtL,OAAA,EAAxBA,EAA0B6L,yBAA0B,EACpD,CAAEjvB,UAAU,IAKRkvB,IACHJ,KACAE,IACDjgD,QAAQunB,UAAwB,QAAf+sB,EAAT/sB,GAAWo4B,qBAAa,IAAArL,OAAA,EAAxBA,EAA0B8L,kBAEpC,IAAIC,GAA4B,EAC5B94B,UAAwB,QAAfgtB,EAAThtB,GAAWo4B,qBAAa,IAAApL,GAAxBA,EAA0B+L,QAC5BD,GAA4BE,WAC1B,IAAIv1B,EAAAt1B,QAAU6xB,GAAUo4B,cAAcW,MAAO,IAC1CtD,MAAM,EAAG,IACTwD,MAAM,IAAK,IACXxG,QAAQ,GACX,KAGJ,MAAMyG,IAAgC,EAAAh1B,EAAAqF,aAAYuvB,IAE5CK,IACHzG,KACAwD,IACDl2B,KACCkuB,GAA4B3sC,SAAS42C,KACpCS,IAEAO,KACFZ,GACExqD,EAAAI,QAAAqF,cAACi5C,EAAAt+C,QAAwB,CACvB6xB,UAAWA,GACX8zB,iBAAkBA,GAClBH,sBAAuBA,GACvB6E,wBAAyBA,GACzBE,6BAA8BA,GAC9BI,0BAA2BA,GAC3BF,8BAA+BA,GAC/BQ,uBAAwB,KACtBrL,IAA+B,EAAK,EAEtCsL,aAAcvL,MAKpB,MAGMwL,GACJpD,IAA2BiD,GAEvBI,GAAuB9gD,QAC3Bw0C,IACE1wB,IACAm2B,IARFyG,KAAqCrL,IAUlC9U,IACC4Y,KAA6B7gD,YAC7BioC,KACc,OAAb7X,IAAqBA,KAAapwB,YACpC6qB,KACEmiB,IAAiC8R,KACnCj0B,IACCJ,MACCyL,aAAsBuF,eAG7B,EAAAz+B,EAAA6W,YAAU,KAENu0C,IACArL,IACAQ,KAAsBE,IACtBsK,KAA8BI,IAG9BnL,IAA+B,EACjC,GACC,CACDD,GACAU,GACAF,GACA6K,GACAL,GACAI,MAGF,EAAAnrD,EAAA6W,YAAU,KACR,GAAIwkC,KAAuBkM,GAAoB,CAC7C,MAAMkE,EAAa,CACjBC,KAAMxJ,GAAoBwJ,KAC1Br3C,GAAI6tC,GAAoB7tC,GACxB5R,MAAOy/C,GAAoBz/C,MAC3BqiD,KAAM5C,GAAoB4C,KAC1B3xB,IAAK+uB,GAAoB/uB,IACzBxU,YAEFJ,EAAaC,aAAY,KAClBojC,IACH70C,GACE,EAAA6f,EAAA++B,gCAA+B,CAC7BzJ,oBAAqBuJ,EACrBv+B,mBACA0+B,0BAA0B,IAGhC,GACC5J,GAAmB6J,+BACtB9+C,GACE,EAAA6f,EAAA++B,gCAA+B,CAC7BzJ,oBAAqBuJ,EACrBv+B,mBACA0+B,0BAA0B,IAGhC,MAAWrtC,GACTE,cAAcF,GAEhB,MAAO,IAAME,cAAcF,EAAW,GAErC,CACDxR,EACAsuC,GACA6G,GAAoB4C,KACpB5C,GAAoBwJ,KACpBxJ,GAAoBz/C,MACpBy/C,GAAoB/uB,IACpB+uB,GAAoB7tC,GACpBsK,GACAqjC,GAAmB6J,8BACnBtE,MAGF,EAAAvnD,EAAA6W,YAAU,KAER9J,GAAS,EAAAf,EAAA8/C,oCAAkC,IACvCtc,IACFoZ,IACF,GACC,CAAC77C,EAAU67C,GAA+BpZ,MAE7C,EAAAxvC,EAAA6W,YAAU,OAEJgX,IACAmiB,IACAkP,IACD7D,KAAuBuG,IAAmB1C,KAE3CC,IAAiB,EACnB,GACC,CACDtxB,GACAmiB,GACAqL,GACAuG,GACA1C,MAGF,EAAAl/C,EAAA6W,YAAU,KACR,GAAKob,cAAW85B,0BACd,OAEyBtkD,WACzB,IACE,IAAIukD,EAAqB,MACrB9+B,KACF8+B,QAA2Bj/C,GACzB,EAAAf,EAAAigD,iBAAgB,CACdC,kBAAmB,IACdh/B,GACHkG,UAAU,EAAA7lB,EAAA4+C,cAAaj/B,GAAgBkG,UACvC3wB,MAAO,OAETkc,cAGJihC,GAAgCoM,IAElC,MAAMI,GAAa,EAAAxyC,EAAA0qC,UACjBryB,GAAU85B,0BACVC,GAEFtM,GAAwB0M,EAC1B,CAAE,MAAOnsD,IACP,EAAAi+C,EAAAmO,kBAAiBpsD,GACjBy/C,GAAwB,MACxBE,GAAgC,KAClC,GAEF0M,EAAoB,GACnB,CAACpK,GAAqBh1B,GAAiBvO,GAASsT,KAEnD,MAAM0lB,IAAmB,EAAAjhB,EAAA61B,gBACvB3G,GACAF,IAEI1N,IAAoB,EAAAxhB,EAAA8E,iBACxBqc,GACA+N,IAEIzN,IAAkB,EAAArnB,EAAAmY,4BAA2BiP,IAC7CE,GAAoBD,GAAgBxiC,MAAM,SAAS0iC,KAAK,IAAI7pC,OAClE,IAAIiqC,GAA0BN,GAE1BC,GAAoB,KACtBK,GAA0B,GAAGN,GAAgBO,MAAM,EAAG,WAExD,EAAAx4C,EAAA6W,YAAU,KACRkjC,EAAmBxB,GAAwB,GAC1C,CAACA,GAAyBwB,IAE7B,MAAMlQ,IACH3c,IAAoBsB,KAAiB8wB,GAGlCpV,GACJlqC,EAAAI,QAAAqF,cAAA,QAAMjD,IAAI,0BAA0BoD,UAAU,kBAC3CvF,GAAE,cAAe,CAACylD,MAIjB0G,GAAe,EAAGC,wBAAuB,OACzCtK,IAAqBsK,GAIzBtN,IAAiB,GACZ3wB,GAmBMy5B,GAAiB75B,SAAWiK,GAAkBjK,OACvDlf,EAAQC,KAAK9B,EAAA4C,eAEbf,EAAQC,KAAK,GAAG9B,EAAAq/C,eAAezE,GAAiB3+C,WArB5C+xC,UAAsBniB,OAAsBuF,YAC9C1xB,GACE,EAAA6f,EAAA+/B,kCAAiC,CAC/BzK,uBACAx7C,cACAwI,UACAyzC,+BAIJ51C,GACE,EAAA6f,EAAAggC,yBACE19C,EACAxI,GACAi8C,MAnBNzC,IAAmC,EA2BrC,EAGF,OACElgD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yBACb5F,EAAAI,QAAAqF,cAACk5C,EAAAv+C,QAAyB,CACxBgW,OAAQ6pC,GACRC,mCACEA,GAEFiC,iBAAkBA,GAClBqK,aAAcA,GACdnrB,gBAAiB1U,cAAW,EAAXA,GAAa8B,WAI9B2wB,IACEp/C,EAAAI,QAAAqF,cAAC04C,EAAA/9C,QAAkB,CACjBysD,cAAe3H,GACfnuC,QAAS,IAAMsoC,IAA2B,GAC1C/+B,SAAWklC,GAAUz4C,GAAS,EAAA6f,EAAAkgC,oBAAmBtH,IACjDuH,aAAcpH,GACdqH,aAAc/6B,GAAUwzB,WACxBwH,uBAvdoB,KAC9BvmD,GAAW,CACTI,MAAO,uBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACH6E,sBAAsBj7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAC1D0H,6BACEl7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAChC,KACAxzB,cAAS,EAATA,GAAWwzB,aAEnB,EA4cQ2H,oBACEz/B,IAA4BF,KAKnC89B,IACCvrD,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACGy6C,IACCrC,IAA2BxD,KAC3B3kD,EAAAI,QAAAqF,cAACrD,EAAA4e,YAAW,CACVlF,MAAOzb,GAAE,oBACTw9C,WAAY,CAAE,cAAe,sBAC7B58B,SAAUtf,EAAA0qC,SAASh5B,KACnBoH,YAAa0vC,GACb99B,iBAAkB,CAChB,cAAe,qCAEjBghC,kBACEnD,GACI7pD,GAAE,eAAgB,CAACqhD,KACnB1+C,UAENsqD,oBACEpD,GAAe,IAAMpK,KAAyB98C,UAEhD6G,UAAW,KAMnB7J,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,2CACb5F,EAAAI,QAAAqF,cAACu+B,EAAA5jC,QAAc,CACb4hC,YAAaue,GACbhe,YAAY,OACZO,SAAS,oBAIb9iC,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyJ,UAAW,EACXE,aAAc,EACdlE,QAASlE,EAAAytB,QAAQC,KACjBrpB,cAAerE,EAAAsE,cAAcC,OAC7BN,UAAU,0BAEV5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBc,YAAa,EACbZ,MAAOvH,EAAAwH,UAAUuP,iBAEhBrY,GAAE,cAELL,EAAAI,QAAAqF,cAAC6jC,EAAAlpC,QAAmB,CAClBsnC,mBAAmB,EAAAhR,EAAA61B,gBACjBxG,GACAF,IAEFle,qBAAsBke,GACtBje,mBAAoBke,GACpBje,oBAAqB8P,GACrB7P,uBAAwB4d,GACxB3d,qBAAsB4d,GACtB3d,aAAa,EACbpiC,UAAU,4CACVqiC,2BAA2B,KAG/BjoC,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAW80C,SAEvBj9C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBnnB,WAAYvG,EAAAwG,WAAWC,OACvBsB,MAAO/H,EAAA0wC,UAAUkb,cAEjBvtD,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBC,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,gBACjB5O,YAAa,GAEZzJ,GAAE,gCAELL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,OACTC,YACEhhC,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,oCACVvF,GAAE,yBAA0B,CAC3BL,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTpV,IAAI,sBACJkO,KAAMtO,EAAAyV,eAAeC,QACrBG,KAAMsxB,EAAAnpC,QAAakqC,SACnBl8B,OAAO,SACP+J,IAAI,sBACJoyB,cAAY,EACZlhC,QAAS,KACP3C,GAAW,CACTI,MAAO,sCACPH,SAAU8b,EAAA7b,yBAAyBonB,OACnC,GAGH3tB,GAAE,yCAOfL,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBnnB,WAAYvG,EAAAwG,WAAW6jB,QACvBtiB,MAAO/H,EAAA0wC,UAAUkb,cAEjBvtD,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBC,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,gBACjBhP,MAAO/H,EAAA0wC,UAAUmb,eACjB30C,UAAWlX,EAAAu3C,WAAWuU,MACtBp7C,aAAc,GAEb4zC,IAEHjmD,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYwmB,WACrBtmB,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,gBACjB,cAAY,+BACZhP,MAAO/H,EAAA0wC,UAAUqb,cACjB70C,UAAWlX,EAAAu3C,WAAWuU,OAErB,IAAIzH,SAITK,IAAgBC,KAChBtmD,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,MACpBrvB,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAM3lB,MAAO/H,EAAA0wC,UAAUkb,eAC7CvtD,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAegkB,QAC/BtiB,MAAO/H,EAAA0wC,UAAUkb,cAEjBvtD,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBV,MAAOvH,EAAAwH,UAAUuP,gBACjBhP,MAAO/H,EAAA0wC,UAAUmb,eACjBn7C,aAAc,EACdwG,UAAWlX,EAAAu3C,WAAWuU,OAErB,GAAGptD,GAAE,eAERL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBV,MAAOvH,EAAAwH,UAAUuP,gBACjBhP,MAAO/H,EAAA0wC,UAAUqb,cACjB70C,UAAWlX,EAAAu3C,WAAWuU,OAErBpH,IAAgBC,OAKvBzc,IACA7pC,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,cAE/BjI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBC,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,gBACjB5O,YAAa,GAEZzJ,GAAE,6BAA8B,CAAC6pC,MAEpClqC,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,QACzBhJ,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTvO,QAAS,IAAM+/C,KACf14C,KAAM/O,EAAA2qB,KAAK9D,QACX5iB,UAAU,4BAETvF,GAAE,oBAKXL,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBxlB,UAAW,EACX9B,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYa,OAAQV,MAAOvH,EAAAwH,UAAUC,aACjD/I,GAAE,uCAAwC,CACzC2pC,GACAhqC,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTpV,IAAI,kBACJ,cAAY,+BACZ6G,QAEE,KAxrBhB3C,GAAW,CACTI,MAAO,8BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACH6E,sBAAsBj7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAC1D0H,6BACEl7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAChC,KACAxzB,cAAS,EAATA,GAAWwzB,cAirBHpG,IAA2B,EAAK,EAGpC3uC,KAAM/O,EAAA2qB,KAAK9D,SAEVnoB,GAAE,wBAOfL,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACVkgB,SAAUksC,GACV18B,WAC0CzvB,GAAxCg7C,IAAsBuG,GAAoB,gBAAqB,QAEjE7xB,YAAU,EACV1H,SAAUmjC,GACV5lD,WAAW,EAAAnE,EAAArB,SAAW,uBAAwB,CAC5C,kCAAmCmrD,KAErCoC,eAAa,EACblsB,oBAAkB,IAI1B,CAEAmd,EAAY76B,UAAY,CACtBg2B,mBAAoBx4C,EAAAnB,QAAUqL,KAAKkJ,W,8mBC/vCtB,UAAmCyB,OAChDA,EAAM+rC,iBACNA,EAAgBjC,mCAChBA,EAAkCsM,aAClCA,EAAYnrB,gBACZA,IAEA,MAAMhhC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,cACdkhC,EAAYC,IAAiB,EAAA7tD,EAAAge,WAAS,GAWvC8vC,EAAiCztD,EAAbutD,EAAe,gBAAqB,cAE9D,OACE5tD,EAAAI,QAAAqF,cAACrD,EAAA0U,MAAK,CACJC,QAAS,IAAMmpC,GAAmC,GAClD9pC,OAAQA,EACRY,wBAAsB,EACtBC,qBAAmB,EACnBrR,UAAU,8BAEV5F,EAAAI,QAAAqF,cAACrD,EAAA+U,aAAY,MACbnX,EAAAI,QAAAqF,cAACumC,EAAA50B,aAAY,KACXpX,EAAAI,QAAAqF,cAACwmC,EAAA50B,YAAW,CAACN,QAAS,IAAMmpC,GAAmC,IApB/DiC,IAAqBv1B,EAAAy1B,oBAChBhiD,EAAE,oBACA8hD,IAAqBv1B,EAAAw1B,mBACvB/hD,EAAE,mBAEJ,IAkBHL,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CACFG,QAASlE,EAAAmE,QAAQC,KACjBC,cAAerE,EAAAsE,cAAcC,OAC7B6B,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAW80C,QACvBr3C,UAAU,yBACViE,UAAW,GAEX7J,EAAAI,QAAAqF,cAAC+zC,EAAAp5C,QAAgB,CACf+uC,cAAegT,EACf4L,6BAA2B,EAC3B1sB,gBAAiBA,IAEnBrhC,EAAAI,QAAAqF,cAACrD,EAAAsD,IAAG,CAACmE,UAAW,GACd7J,EAAAI,QAAAqF,cAACrD,EAAA4rD,cAAa,CACZ3kD,QAAS,KACPwkD,GAAc,GACdrB,EAAa,CAAEC,sBAAsB,GAAO,EAE9C1f,OAAK,EACL,cAAY,gCACZ1kB,SAAUulC,GAETE,MAOf,EA/FA,IAqBwEzrD,EArBxErC,EAqBwE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CArBxEY,CAAAC,EAAA,UAEAmrB,EAAAnrB,EAAA,0BACAK,EAAAL,EAAA,4CAMAc,EAAAd,EAAA,yCAMA0qC,EAAA1qC,EAAA,kEACA2qC,EAAA3qC,EAAA,iEACAsrB,EAAAtrB,EAAA,sCAIAk4C,GAAwEn3C,EAAxEf,EAAA,8CAAwEe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GAAA,SAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,C,ufCrBxE,IAAAD,EAkB+C,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAlB/CY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eAEAmrB,EAAAnrB,EAAA,0BACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAOAg9C,EAAAh9C,EAAA,oCACAc,EAAAd,EAAA,yCAK+C,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEhC,SAASguD,EAAyBzoD,GAC/C,MAAMysB,UACJA,EAAS8zB,iBACTA,EAAgBH,sBAChBA,EAAqByF,uBACrBA,EAAsBC,aACtBA,EAAYb,wBACZA,EAAuBE,6BACvBA,EAA4BI,0BAC5BA,EAAyBF,8BACzBA,GACErlD,EAEEnF,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aAErB,IAAIwhC,EAAuB7tD,EAAE,6BACzB8tD,EAAyB9tD,EAAE,mCAC3B+tD,EAAuB9P,EAAA8B,mBAAmBC,KACzCwK,IACHqD,EAAuB7tD,EAAE,2BAA4B,CACnD0qD,IAEFoD,EAAyB9tD,EAAE,sBAAuB,CAChD0lD,EACA9zB,EAAUjF,gBAAgBoB,OAC1Bq8B,EACA7E,EACA3zB,EAAUlF,qBAAqBqB,OAC/Bu8B,IAEFyD,EAAuBn8B,EAAUo4B,cAAcC,QAEjD,MAAMrpC,EACJmtC,IAAyB9P,EAAA8B,mBAAmBC,KACxC1+C,EAAA+7C,WAAWE,OACXj8C,EAAA+7C,WAAWC,QAEjB,OACE39C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAMxlB,UAAW,GACrC7J,EAAAI,QAAAqF,cAACrD,EAAA4e,YAAW,CACVlF,MAAOoyC,EACPrQ,WAAY,CAAE,cAAe,sBAC7B58B,SAAUA,EACVvX,MAAO/H,EAAAutB,YAAYC,KACnB,cAAY,mBAEZnvB,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,KACFJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYC,OACrBC,GAAG,KACH,cAAY,qCAEXklD,IAED7C,GACAtrD,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTlH,KAAMtO,EAAAyV,eAAeC,QACrBC,UAAW,CACTjP,QAASnH,EAAAoH,YAAYC,OACrBd,WAAYvG,EAAAwG,WAAW6P,WAEzB3O,QAASgiD,GAERhrD,EAAE,iBAOjB,CAEA4tD,EAAyBlqC,UAAY,CACnCkO,UAAW1wB,EAAAnB,QAAU0L,OACrBi6C,iBAAkBxkD,EAAAnB,QAAUuL,OAC5Bi6C,sBAAuBrkD,EAAAnB,QAAUuL,OACjC0/C,uBAAwB9pD,EAAAnB,QAAUqL,KAClC6/C,aAAc/pD,EAAAnB,QAAUwL,KACxB6+C,wBAAyBlpD,EAAAnB,QAAUuL,OACnCg/C,6BAA8BppD,EAAAnB,QAAUuL,OACxCo/C,0BAA2BxpD,EAAAnB,QAAUyL,OACrCg/C,8BAA+BtpD,EAAAnB,QAAUwL,K,0XCrG3C,IAAiDvJ,EAAjDojC,GAAiDpjC,EAAjDf,EAAA,4BAAiDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,sWCAjD,IAAgDA,EAAhDoxC,GAAgDpxC,EAAhDf,EAAA,2BAAgDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,2vBCAhD,IAAArC,EAiBsE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAjBtEY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACA+sD,EAAA7sD,EAAAF,EAAA,wCACAokC,EAAAlkC,EAAAF,EAAA,uCACAgtD,EAAA9sD,EAAAF,EAAA,qCACA40B,EAAA10B,EAAAF,EAAA,oEACAmrB,EAAAnrB,EAAA,6BACA2K,EAAA3K,EAAA,yBAKAW,EAAAX,EAAA,+CACAsrB,EAAAtrB,EAAA,yCACAiM,EAAAjM,EAAA,kCACAmhB,EAAAnhB,EAAA,oCAAsE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEvD,SAASsuD,GAASt9C,QAC/BA,EAAU,GAAEo1B,YACZA,EAAWiB,4BACXA,EAA2BF,YAC3BA,EAAWwM,UACXA,EAAS5T,aACTA,EAAe,EAAChvB,YAChBA,EAAc,GAAEmkC,aAChBA,EAAY7U,gBACZA,EAAeJ,WACfA,EAAUC,uBACVA,IAEA,MAAM9/B,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACf/N,GAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBAEtB6nB,GADW,EAAA16B,EAAAsR,aAAYpR,EAAAwmB,+BAElBoB,kBACTjH,EAAAkH,6CAA6CnV,IAC7C,KACIqa,GAAuB,EAAAjtB,EAAAsR,aAAYpR,EAAAgtB,yBACnCyN,GAAwB,EAAAn5B,EAAA8vB,gBAAeoJ,GACvC//B,GAAa,EAAA1G,EAAA2iB,YAAWF,EAAAG,oBAGxB4rC,EAAuC,IAAnBv9C,EAAQ3C,QAAgB2C,EAAQ,GAAG4jC,YACvD3P,EAAckC,EAClBpnC,EAAAI,QAAAqF,cAAC2hC,EAAW,CAACp2B,YAAaA,IACxB,KACJ,OAA0B,IAAnBC,EAAQ3C,OACb42B,EAEAllC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wBACZguC,EACC5zC,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+BAA+BguC,GAC5C,KACJ5zC,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,uCACA+/B,GAEFx6B,IAAKwvC,EACL,cAAY,uCAEXlkC,EAAQunC,MAAM,EAAGxY,GAAch8B,KAAI,CAACmlB,EAAQhoB,KAC3C,GAAI++B,WAAa/W,GACf,OAAO,KAET,MAAMslC,EAAatlC,EAAOsQ,QAAU,EACpC,GAAItQ,EAAOulC,UAAYD,IAAez9C,EACpC,OAAO,KAGT,MAAM3H,EAAU,KACV8f,EAAOulC,UAGPvlC,EAAO0rB,YACTvN,EAA4Bne,GAE5Bkd,WAAcld,GAChB,GAEI8d,QACJA,EAAO0nB,iBACPA,EAAgBC,SAChBA,EAAQF,QACRA,EAAO/Z,aACPA,EAAYC,eACZA,EAAcia,kBACdA,EAAiBC,oBACjBA,EAAmBC,cACnBA,GACE5lC,EACJ,OACEnpB,EAAAI,QAAAqF,cAAA,OACEuhC,SAAS,IACTphC,WAAW,EAAAnE,EAAArB,SAAW,6BAA8B,CAClD,uCAAwCwuD,EACxC,uCAAwCF,IAE1C,cAAY,6BACZrlD,QAASA,EACT09B,QAAU9mC,GAAgB,UAAVA,EAAEuC,KAAmB6G,IACrC7G,IAAK,6BAA6BrB,IAClC2a,MAAO4yC,EAAUruD,EAAE,yBAA2B,MAE7C4mC,GAAW0N,EACV30C,EAAAI,QAAAqF,cAACigC,EAAAtlC,QAAO,CAACib,IAAK4rB,EAASpjC,KAAM8wC,IAC3B,KACD1N,GAAW0N,IAAiBga,EAI3B,KAHF3uD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAC4oD,EAAAjuD,QAAS,CAACkJ,QAASqlD,EAAkBplD,SAAU,MAGnDwlD,EAAgB/uD,EAAAI,QAAAqF,cAACspD,EAAa,MAAM,KACrC/uD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qCACZ+uC,EACC30C,EAAAI,QAAAqF,cAAA,QACEG,UAAU,sCACV,cAAY,sCAEX+uC,GAED,KACHC,EACC50C,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,yCACbgvC,GAED,MAEJtU,IACDuuB,IAAqBC,EAalB,KAZF9uD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACZipD,EACC7uD,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,6CACbipD,GAED,KACHC,GAAuB91B,EACtBh5B,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,+CACbkpD,GAED,OAIT3lC,EAAO0rB,aACN70C,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLoK,KAAK,UACLnB,QAASA,EACT,cAAY,sCAEXhJ,EAAE,WAGH,KAGRmuD,GAAqB/nB,GACrBzmC,EAAAI,QAAAqF,cAAA,OACEuhC,SAAS,IACTphC,UAAU,mEACVpD,IAAI,kCAEJxC,EAAAI,QAAAqF,cAACywB,EAAA91B,QAAiB,CAChBwgB,QAASvgB,EAAE,4BAA6B,CACtCL,EAAAI,QAAAqF,cAAA,KACEjD,IAAI,uCACJ6G,QAAS,KAEP3C,EAAW,CACTI,MAAO,8BACPH,SAAU1E,EAAA2E,yBAAyBonB,MACnC/mB,WAAY,CACV43B,UAAW,gBACXgC,OAAQ,0BACRC,sBAAuB4F,KAG3BxrB,OAAOC,SAASC,QAAQ,CACtBC,IAAKorB,GACL,EAEJr4B,OAAO,SACP+J,IAAI,uBAEHuuB,SASnB,CAEA6nB,EAASxqC,UAAY,CACnB9S,QAAS1P,EAAAnB,QAAUmnC,QACjBhmC,EAAAnB,QAAUonC,MAAM,CACdP,QAAS1lC,EAAAnB,QAAUuL,OACnBijD,SAAUrtD,EAAAnB,QAAUwL,KACpB8iD,QAASntD,EAAAnB,QAAUwL,KACnB+oC,aAAcpzC,EAAAnB,QAAUuL,OACxBipC,eAAgBrzC,EAAAnB,QAAUuL,OAC1BkjD,kBAAmBttD,EAAAnB,QAAUuL,OAC7BmjD,oBAAqBvtD,EAAAnB,QAAUuL,UAGnC06B,YAAa9kC,EAAAnB,QAAUqL,KACvB67B,4BAA6B/lC,EAAAnB,QAAUqL,KACvC27B,YAAa7lC,EAAAnB,QAAUqL,KACvBmoC,UAAWryC,EAAAnB,QAAUuL,OACrBq0B,aAAcz+B,EAAAnB,QAAUyL,OACxBmF,YAAazP,EAAAnB,QAAUuL,OACvBwpC,aAAc5zC,EAAAnB,QAAUonC,MAAM,CAC5BtS,QAAS3zB,EAAAnB,QAAUipC,WAAWtuB,OAAOi0C,WAEvC1uB,gBAAiB/+B,EAAAnB,QAAUwL,KAC3Bs0B,WAAY3+B,EAAAnB,QAAUqL,KACtB00B,uBAAwB5+B,EAAAnB,QAAUuL,O,qYC7NpC,IAAuDtJ,EAAvD4sD,GAAuD5sD,EAAvDf,EAAA,kCAAuDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,6nBCAvD,IAAArC,EAWoE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAXpEY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACA4tD,EAAA1tD,EAAAF,EAAA,YACAkyC,EAAAhyC,EAAAF,EAAA,aACA6tD,EAAA3tD,EAAAF,EAAA,qCACA4iC,EAAA1iC,EAAAF,EAAA,yCACA60B,EAAA70B,EAAA,iCACAwT,EAAAxT,EAAA,iDACAsrB,EAAAtrB,EAAA,oBACA2K,EAAA3K,EAAA,mCACA8tD,EAAA5tD,EAAAF,EAAA,+CAAoE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEpE,MAAMovD,EAAkB,IACtBrvD,EAAAI,QAAAqF,cAAC0pD,EAAA/uD,QAAc,CAAC2gC,SAAS,QAAQv3B,MAAO,CAAEM,YAAa,SACrD9J,EAAAI,QAAAqF,cAAC2pD,EAAAhvD,QAAU,CAACsQ,KAAM,GAAIxH,MAAM,6BAIhC,IAAIwqC,EAEW,SAAS4b,GAAev+C,SACrCA,EAAQy6B,MACRA,EAAK+jB,aACLA,EAAe,GAAE54B,eACjBA,EAAc0Q,sBACdA,EAAqB9G,aACrBA,EAAYC,uBACZA,EAAsBxvB,YACtBA,EAAWm1B,eACXA,IAEA,MAAMqpB,GAAU,EAAAxvD,EAAAirB,UACVtM,GAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBA6BtBo1B,EAAevsC,UACnB0+B,EAAe8N,GACXP,GACF/T,aAAa+T,GAEfA,EAAqBjU,YAAWh4B,UAC9BisC,EAAqB,KACrB,MAAMQ,EAAwBD,EAAeE,OACvCG,GAAkB,EAAAx/B,EAAAkB,mBAAkBk+B,GACpCub,EAAmBD,EAAQt6B,QAAQw6B,OAAOzb,GAC1ChjC,EACJsvB,GAAmC,KAAnB0T,EAAwBsb,EAAeE,EACrDjvB,GAA6C,IAAnBvvB,EAAQ3C,QAAgBgmC,OAlCvB7sC,WACjC,IACE,MAAM80B,QAAc,EAAA3P,EAAA6nB,YAAWC,EAAiB/1B,GAChD,GAAI4d,EAQF,OAPAA,EAAMoY,aAAepY,EAAMnO,OAC3BmO,EAAMqY,eAAiBrY,EAAM14B,KAC7B04B,EAAMsY,aAAc,OACpB9jC,EAAS,CACPC,YAAa0jC,EACbzjC,QAAS,CAACsrB,IAIhB,CAAE,MAAOt8B,GACPuzC,EAAApzC,QAAIorC,MAAM,mCAAoCvrC,EAChD,CACA8Q,EAAS,CACPC,YAAa0jC,EACbzjC,QAAS,IACT,EAgBQ6jC,CAA2BZ,GAGnCnjC,EAAS,CACPC,YAAaijC,EACbhjC,WACA,GACD,IAAI,GAGT,EAAAjR,EAAA6W,YAAU,IACD,IAAM8oB,aAAa+T,IACzB,KAEH,EAAA1zC,EAAA6W,YAAU,KACH24C,EAAQt6B,UACXs6B,EAAQt6B,QAAU,IAAIg6B,EAAA9uD,QAAKmvD,EAAc,CACvCI,YAAY,EACZC,UAAW,IACXt6C,SAAU,EACVu6C,SAAU,IACVC,iBAAkB,GAClBC,mBAAoB,EACpBr3B,KAAM/B,IAEV,GACC,CAACA,EAAgB44B,IAEpB,MAAMS,GAAuB,EAAA75B,EAAAqF,aAAY+zB,GAAgB,IAazD,OAZA,EAAAvvD,EAAA6W,YAAU,KACR,GACE24C,EAAQt6B,SACRlkB,GACAg/C,IAAyBT,EACzB,CACAC,EAAQt6B,QAAQ+6B,cAAcV,GAC9B,MAAME,EAAmBD,EAAQt6B,QAAQw6B,OAAO1+C,GAChDD,EAAS,CAAEC,cAAaC,QAASw+C,GACnC,IACC,CAACF,EAAcv+C,EAAaD,EAAUi/C,IAGvChwD,EAAAI,QAAAqF,cAACy+B,EAAA9jC,QAAS,CACR,cAAY,oBACZwF,UAAU,+BACVs/B,YAAamC,EACb78B,KAAK,OACL/H,MAAOuO,EACPxK,SAAWvG,GAAM+zC,EAAa/zC,EAAEmO,OAAO3L,OACvC+oC,MAAOA,EACPlG,WAAS,EACT4qB,eAAgBb,IAChBc,aAAa,MACbj5C,WAAS,GAGf,CAEAo4C,EAAevrC,UAAY,CACzBhT,SAAUxP,EAAAnB,QAAUqL,KACpB+/B,MAAOjqC,EAAAnB,QAAUuL,OACjB4jD,aAAchuD,EAAAnB,QAAUshC,MAAM/sB,WAC9BgiB,eAAgBp1B,EAAAnB,QAAUmnC,QAAQhmC,EAAAnB,QAAU0L,QAAQ6I,WACpD0yB,sBAAuB9lC,EAAAnB,QAAUuL,OACjC40B,aAAch/B,EAAAnB,QAAUwL,KACxB40B,uBAAwBj/B,EAAAnB,QAAUwL,KAClCoF,YAAazP,EAAAnB,QAAUuL,OACvBw6B,eAAgB5kC,EAAAnB,QAAUqL,K,iXC9I5B,IAAAzL,EAGgD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAHhDY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAmyC,EAAAjyC,EAAAF,EAAA,gBACA2tD,EAAAztD,EAAAF,EAAA,uBAAgD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEjC,SAASmwD,GAAmBxqD,UACzCA,EAAS26B,aACTA,EAAY5J,eACZA,EAAc05B,kBACdA,EAAiBzwB,cACjBA,EAAgB,GAAEgU,UAClBA,EAAS5T,aACTA,EAAYqG,YACZA,EAAWiB,4BACXA,EAA2BF,YAC3BA,EAAWC,sBACXA,EAAqB/G,gBACrBA,EAAeJ,WACfA,EAAUC,uBACVA,EAAsBK,uBACtBA,EAAsBxvB,YACtBA,EAAWm1B,eACXA,IAEA,MAAM0N,GAAc,EAAA7zC,EAAAirB,UAEdqlC,GAAsB,EAAAtwD,EAAAmlD,UAAQ,IAC3B5kB,EAAeX,EAAgB,IACrC,CAACW,EAAcX,KACX3uB,EAASs/C,IAAc,EAAAvwD,EAAAge,UAASsyC,GASvC,OARA,EAAAtwD,EAAA6W,YAAU,KACH7F,GAEHu/C,EAAWD,EACb,GAEC,CAACA,EAAoBhiD,OAAQ0C,IAG9BhR,EAAAI,QAAAqF,cAAA,OAAKG,UAAWA,GACd5F,EAAAI,QAAAqF,cAACwpD,EAAA7uD,QAAc,CACbmvD,aAAc3vB,EACdjJ,eAAgBA,EAChB5lB,SAAU,EACRC,YAAaijC,EAAiB,GAC9BhjC,QAASu/C,EAAa,OAEtBrqB,EAAe8N,GACfsc,EAAWC,EAAW,EAExBhlB,MAAO6kB,EACPhpB,sBAAuBA,EACvB9G,aAAcA,EACdC,uBAAwBA,EACxBxvB,YAAaA,EACbm1B,eAAgBA,IAElBnmC,EAAAI,QAAAqF,cAACguC,EAAArzC,QAAQ,CACP4Q,YAAaA,EACbC,QAASA,EACTo1B,YAAaA,EACbiB,4BAA6BA,EAC7BF,YAAaA,EACbwM,UAAWA,EACX5T,aAAcA,EACdmV,aAActB,EACdvT,gBAAiBA,EACjBJ,WAAYA,EACZC,uBAAwBA,IAIhC,CAEAiwB,EAAmBrsC,UAAY,CAC7BssC,kBAAmB9uD,EAAAnB,QAAUuL,OAC7Bi0B,cAAer+B,EAAAnB,QAAUshC,MACzB2E,YAAa9kC,EAAAnB,QAAUqL,KACvB67B,4BAA6B/lC,EAAAnB,QAAUqL,KACvC27B,YAAa7lC,EAAAnB,QAAUqL,KACvB7F,UAAWrE,EAAAnB,QAAUuL,OACrB07B,sBAAuB9lC,EAAAnB,QAAUuL,OACjCgrB,eAAgBp1B,EAAAnB,QAAUmnC,QACxBhmC,EAAAnB,QAAUonC,MAAM,CACd3jC,KAAMtC,EAAAnB,QAAUuL,OAChBirB,OAAQr1B,EAAAnB,QAAUyL,UAGtB+nC,UAAWryC,EAAAnB,QAAUuL,OACrB40B,aAAch/B,EAAAnB,QAAUwL,KACxBo0B,aAAcz+B,EAAAnB,QAAUyL,OACxBy0B,gBAAiB/+B,EAAAnB,QAAUwL,KAC3Bs0B,WAAY3+B,EAAAnB,QAAUqL,KACtB00B,uBAAwB5+B,EAAAnB,QAAUuL,OAClC60B,uBAAwBj/B,EAAAnB,QAAUwL,KAClCoF,YAAazP,EAAAnB,QAAUuL,OACvBw6B,eAAgB5kC,EAAAnB,QAAUqL,K,sXChG5B,IAAiDpJ,EAAjD87C,GAAiD97C,EAAjDf,EAAA,4BAAiDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,gWCAjD,IAA0CA,EAA1CouD,GAA0CpuD,EAA1Cf,EAAA,qBAA0Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,mdCA1C,IAAArC,EAMgE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CANhEY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAmrB,EAAAnrB,EAAA,6BACA20B,EAAAz0B,EAAAF,EAAA,2CACAgoC,EAAA9nC,EAAAF,EAAA,gCACA2K,EAAA3K,EAAA,yBAAgE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEhE,MAAMywD,EAAe,EACnBjiC,WACAs3B,mBACAD,oBACAF,wBACAD,yBACAgL,qBACAC,wBACA3K,WACA4K,cACA7mB,cACAojB,0BAEA,MAAM/sD,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfsM,GAAuB,EAAAjtB,EAAAsR,aAAYpR,EAAAgtB,yBAEzC,OACEj5B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCAAgCvF,EAAE,aACjDL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACb5F,EAAAI,QAAAqF,cAAC6jC,EAAAlpC,QAAmB,CAClBsnC,kBAAmBqe,EACnBpe,qBAAsB,EACtBC,mBAAoBke,EACpBje,oBAAqB+d,EACrB9d,uBAAwB,EACxBC,qBAAsB4d,MAI5B3lD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACZvF,EAAE,mBACHL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,SACTC,YAAa3gC,EAAE,0BAGnBL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCAAiC,GAAG6oB,OAErDzuB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACZvF,EAAE,sBACHL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,SACTC,YAAa3gC,EAAE,6BAGnBL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACb5F,EAAAI,QAAAqF,cAAA,YAAOmrD,GACP5wD,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,uBAAuB,IAAI+/C,QAG7CyH,GACAptD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACZvF,EAAE,4BACHL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,SACTC,YAAa3gC,EAAE,mCAGnBL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACb5F,EAAAI,QAAAqF,cAAA,YAAOwgD,GACPjmD,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,6BACbozB,GAAwB,KAAK63B,QAKtC7wD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sBACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACZvF,EAAE,cACHL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,SACTC,YAAa3gC,EAAE,8BAGnBL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACZvF,EAAEswD,KAGP3wD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,+CACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gCACb5F,EAAAI,QAAAqF,cAAA,OACE8mC,IAAI,iCACJ3mC,UAAU,8BACVkrD,IAAI,KAELzwD,EAAE,oBAELL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACZvF,EAAE,6BAA8B,CAAC2pC,MAGlC,EAIV0mB,EAAa3sC,UAAY,CACvB0K,SAAUltB,EAAAnB,QAAUyL,OAAO8I,WAC3BoxC,iBAAkBxkD,EAAAnB,QAAUuL,OAAOgJ,WACnCmxC,kBAAmBvkD,EAAAnB,QAAUuL,OAAOgJ,WACpCixC,sBAAuBrkD,EAAAnB,QAAUuL,OAAOgJ,WACxCgxC,uBAAwBpkD,EAAAnB,QAAUuL,OAAOgJ,WACzCg8C,mBAAoBpvD,EAAAnB,QAAUuL,OAAOgJ,WACrCi8C,sBAAuBrvD,EAAAnB,QAAUuL,OAAOgJ,WACxCsxC,SAAU1kD,EAAAnB,QAAUuL,OAAOgJ,WAC3Bk8C,YAAatvD,EAAAnB,QAAUuL,OAAOgJ,WAC9Bq1B,YAAazoC,EAAAnB,QAAUyL,OAAO8I,WAC9By4C,oBAAqB7rD,EAAAnB,QAAUwL,MAC/BJ,EAAApL,QAEaswD,C,sUC1Hf,IAAmCruD,EAAnCd,GAAmCc,EAAnCf,EAAA,gBAAmCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GAESmJ,EAAAulD,gCAAGxvD,EAAAnB,QAAUonC,MAAM,CAC7Dge,MAAOjkD,EAAAnB,QAAUuL,OAAOgJ,WACxBq8C,gBAAiBzvD,EAAAnB,QAAUuL,OAAOgJ,WAClC+wC,yBAA0BnkD,EAAAnB,QAAUyL,OAAO8I,WAC3CgxC,uBAAwBpkD,EAAAnB,QAAUuL,OAAOgJ,WACzCixC,sBAAuBrkD,EAAAnB,QAAUuL,OAAOgJ,WACxCs8C,YAAa1vD,EAAAnB,QAAUwL,KACvBilD,YAAatvD,EAAAnB,QAAUuL,OAAOgJ,WAC9Bu8C,YAAa3vD,EAAAnB,QAAUuL,OAAOgJ,WAC9B+e,eAAgBnyB,EAAAnB,QAAUuL,OAAOgJ,WACjC8Z,SAAUltB,EAAAnB,QAAUyL,OAAO8I,WAC3BkxC,oBAAqBtkD,EAAAnB,QAAUyL,OAAO8I,WACtCmxC,kBAAmBvkD,EAAAnB,QAAUuL,OAAOgJ,WACpCoxC,iBAAkBxkD,EAAAnB,QAAUuL,OAAOgJ,Y,ufCfrC,IAAA3U,EAOmF,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAPnFY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAmrB,EAAAnrB,EAAA,0BACA6vD,EAAA3vD,EAAAF,EAAA,mCACAgtD,EAAA9sD,EAAAF,EAAA,kCACAmvD,EAAAjvD,EAAAF,EAAA,oBACA8vD,EAAA5vD,EAAAF,EAAA,gBACA+vD,EAAA/vD,EAAA,oCAAmF,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAgO,IAAA,OAAAA,EAAArN,OAAAsN,OAAAtN,OAAAsN,OAAAC,OAAA,SAAAC,GAAA,QAAAjN,EAAA,EAAAA,EAAAkN,UAAAC,OAAAnN,IAAA,KAAAoN,EAAAF,UAAAlN,GAAA,QAAAqB,KAAA+L,EAAA3N,OAAAI,UAAAC,eAAAC,KAAAqN,EAAA/L,KAAA4L,EAAA5L,GAAA+L,EAAA/L,GAAA,QAAA4L,CAAA,EAAAH,EAAAO,MAAA9J,KAAA2J,UAAA,CAEnF,MAAMijD,EAAqB,EACzBzE,gBAAgB,GAChB91C,UAAU,KACVuJ,WAAW,KACXysC,eACAC,eACAC,yBACAG,0BAEA,MAAM/sD,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,cAEd6kC,EAAeC,IAAoB,EAAAxxD,EAAAge,UAAS,IAC5CyzC,EAAYC,IAAiB,EAAA1xD,EAAAge,UAAS,OAEtC2zC,EAAeC,IAAoB,EAAA5xD,EAAAge,UAASgvC,IAC5C6E,EAAaC,IAAkB,EAAA9xD,EAAAge,UAAS,aACxC+zC,EAAYC,IAAiB,EAAAhyD,EAAAge,UAAS,MAEvCi0C,GAAgB,EAAAjyD,EAAA0W,cAAY,KAChC4J,EAASqxC,GACT56C,GAAS,GACR,CAAC46C,EAAe56C,EAASuJ,IAEtB4xC,GAAoB,EAAAlyD,EAAA0W,cAAY,KACpCs7C,EAAc,MACdF,EAAe,WAAW,GACzB,IAEGK,GAAa,EAAAnyD,EAAA0W,cAChB8uC,GAAUoM,EAAiBpM,IAC5B,CAACoM,IAGGQ,GAAe,EAAApyD,EAAA0W,cAClB8uC,IACC,MAAM6M,EAAMxF,EAActlD,MAAM+qD,GAAUA,EAAM9M,QAAUA,IAC1DsM,EAAe,gBACf7E,IACA+E,EAAcK,EAAI,GAEpB,CAACxF,EAAeI,IAGZsF,GAAmB,EAAAvyD,EAAA0W,cACvB,IACE1W,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCAAmCyD,QAAS0N,KAE7D,CAACA,IAEGy7C,EACJxyD,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLoK,KAAK,YACL5E,UAAU,6DACVyD,QAAS0N,GAER1W,EAAE,UAGLL,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLoK,KAAK,UACL5E,UAAU,6DACVyD,QAAS4oD,GAER5xD,EAAE,gBAKT,OACEL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wBACb5F,EAAAI,QAAAqF,cAAC0rD,EAAA/wD,QAAO,CACN0b,MAEMzb,EADY,iBAAhBwxD,EACM,mBACA,oBAERY,SACkB,aAAhBZ,EACIxxD,EAAE,qCACF,KAEN0W,QAASA,EACTw7C,iBAAkBA,EAClB3sD,UAAU,qCACV8sD,gBAAgB,gBAChBF,OAAwB,iBAAhBX,EAAiC,KAAOW,EAChDvpC,OAAwB,iBAAhB4oC,EAAiCK,EAAoB,MAE5C,aAAhBL,GACC7xD,EAAAI,QAAAqF,cAAC2rD,EAAAhxD,QAAQ,CACPysD,cAAeA,EACf8E,cAAeA,EACf/9C,SAAUu+C,EACVC,aAAcA,EACdrF,aAAcA,EACdwE,cAAeA,EACfC,iBAAkBA,EAClBC,WAAYA,EACZC,cAAeA,EACftE,oBAAqBA,IAGR,iBAAhByE,GAAkCE,GACjC/xD,EAAAI,QAAAqF,cAACgrD,EAAArwD,QAAY6N,EAAA,GACP8jD,EAAU,CACd3E,oBAAqBA,MAIvB,EAIVkE,EAAmBvtC,UAAY,CAC7BhN,QAASxV,EAAAnB,QAAUqL,KACnB6U,SAAU/e,EAAAnB,QAAUqL,KACpBshD,aAAcxrD,EAAAnB,QAAUuL,OACxBkhD,cAAetrD,EAAAnB,QAAUmnC,QAAQ8pB,EAAAN,iCACjC/D,aAAczrD,EAAAnB,QAAUuL,OACxBshD,uBAAwB1rD,EAAAnB,QAAUqL,KAClC2hD,oBAAqB7rD,EAAAnB,QAAUwL,KAAK+I,YACpCnJ,EAAApL,QAEakxD,C,2WCrIf,IAAsCjvD,EAAtC+uD,GAAsC/uD,EAAtCf,EAAA,iBAAsCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,mjBCAtC,IAAArC,EASgE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAThEY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAo0B,EAAAl0B,EAAAF,EAAA,iBACAqxD,EAAAnxD,EAAAF,EAAA,4DACAmrB,EAAAnrB,EAAA,6BACA+vD,EAAA/vD,EAAA,qCACA20B,EAAAz0B,EAAAF,EAAA,2CACA2K,EAAA3K,EAAA,yBAAgE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEhE,MAAM2yD,EAAe,IACnB5yD,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,IACNC,OAAO,IACPumB,QAAQ,UACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,4ZACF1rB,KAAK,kCAKI,SAAS+tD,GAAShG,cAC/BA,EAAa8E,cACbA,EAAa/9C,SACbA,EAAQw+C,aACRA,EAAYrF,aACZA,EAAYwE,cACZA,EAAaC,iBACbA,EAAgBC,WAChBA,EAAa,KAAIC,cACjBA,EAAatE,oBACbA,IAEA,MAAM/sD,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,cACdomC,EAAYC,IAAkB,EAAA/yD,EAAAge,WAAS,GACxCgb,GAAuB,EAAAjtB,EAAAsR,aAAYpR,EAAAgtB,yBAEnC+5B,EAAuBC,IACvBA,IAAmBxB,EACrBD,GAAkC,EAAjBD,GAEjBG,EAAcuB,EAChB,EAQIC,GAAa,EAAAlzD,EAAAmlD,UAAQ,IAClB,IAAI0H,GAAelpD,MAAK,CAACwvD,EAAUC,KACxC,GAAmB,OAAf3B,GAAuB0B,EAASlC,YAClC,OAAQ,EACH,GAAmB,OAAfQ,GAAuB2B,EAASnC,YACzC,OAAO,EACF,GAAmB,OAAfQ,EAAqB,CAE9B,MAAM4B,EAAO,IAAI39B,EAAAt1B,QAAU+yD,EAASvN,uBAAuBx/C,SAAS,IAC9DktD,EAAO,IAAI59B,EAAAt1B,QAAUgzD,EAASxN,uBAAuBx/C,SAAS,IACpE,OAAOitD,EAAKA,EAAK/kD,OAAS,GAAKglD,EAAKA,EAAKhlD,OAAS,IAAM,EAAI,CAC9D,CAAO,MAAmB,gBAAfmjD,EACF0B,EAAS1B,GAAc2B,EAAS3B,IAClB,EAAjBF,EACAA,EAEC,IAAI77B,EAAAt1B,QAAU+yD,EAAS1B,IAAa7qC,GAAGwsC,EAAS3B,KAClC,EAAjBF,EACAA,CAAa,KAElB,CAAC1E,EAAe4E,EAAYF,IACzBgC,EAAcL,EAAWM,WAC7B,EAAGhO,WAAYmM,IAAkBnM,IAGnC,OACExlD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wCACb5F,EAAAI,QAAAqF,cAAA,OACEG,UAAU,sEACV,cAAY,kCACZyD,QAAS,IAAM2pD,EAAoB,0BAEnChzD,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,0CACbmnD,GAEH/sD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yCACb5F,EAAAI,QAAAqF,cAAA,YAAOpF,EAAE,kBACTL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,SACTC,YAAa3gC,EAAE,8BAEjBL,EAAAI,QAAAqF,cAACmtD,EAAY,QAGjB5yD,EAAAI,QAAAqF,cAAA,OACEG,UAAU,mHACV,cAAY,4CACZyD,QAAS,IAAM2pD,EAAoB,oBAEjC5F,GAAuBp0B,GACvBh5B,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAAA,YAAOpF,EAAE,6BACTL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,SACTC,YAAa3gC,EAAE,kCAEjBL,EAAAI,QAAAqF,cAACmtD,EAAY,QAInB5yD,EAAAI,QAAAqF,cAAA,OACEG,UAAU,yEACV,cAAY,qCACZyD,QAAS,IAAM2pD,EAAoB,gBAElC3yD,EAAE,mBACHL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,6CACb5F,EAAAI,QAAAqF,cAACmtD,EAAY,SAIlBM,EAAWlvD,KACV,EAEI4hD,wBACAiL,cACAI,cACAC,cACA1L,SAEFrkD,IAEAnB,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,4BAA6B,CACjD,sCAAuCmzD,IAAgBpyD,EACvD,sCAAuC2xD,IAEzCzpD,QAAS,IAAMuK,EAAS4xC,GACxBhjD,IAAK,4BAA4BrB,IACjC,cAAa,4BAA4BA,KAEzCnB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yCACZqrD,GACCjxD,EAAAI,QAAAqF,cAACktD,EAAAvyD,QAAY,CAACqzD,cAAeF,IAAgBpyD,IAE/CnB,EAAAI,QAAAqF,cAAA,OACEG,UAAU,6CACVkW,MAAO8pC,GAENA,IAGY,QAAhBsL,GACClxD,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,uCACbvF,EAAE,sBAITL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uCACXwnD,GAAuBp0B,GAAwB63B,GAEnD7wD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACb5F,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,2CACA,CACE,kDACkB,QAAhB8wD,EACF,mDACkB,QAAhBA,EACF,iDACkB,QAAhBA,KAILA,IAGLlxD,EAAAI,QAAAqF,cAAA,OACEG,UAAU,oCACV,cAAa,qCAAqCzE,IAClDkI,QAAUvC,IACRA,EAAMq+B,kBACNitB,EAAa5M,EAAM,EAErBkO,aAAc,IAAMX,GAAe,GACnCY,aAAc,IAAMZ,GAAe,IAEnC/yD,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,uBAO3B,CAEAitD,EAAS9uC,UAAY,CACnB4tC,cAAepwD,EAAAnB,QAAUuL,OAAOgJ,WAChCf,SAAUrS,EAAAnB,QAAUqL,KAAKkJ,WACzBy9C,aAAc7wD,EAAAnB,QAAUqL,KAAKkJ,WAC7Bo4C,aAAcxrD,EAAAnB,QAAUuL,OAAOgJ,WAC/Bk4C,cAAetrD,EAAAnB,QAAUmnC,QAAQ8pB,EAAAN,iCAAiCp8C,WAClE48C,cAAehwD,EAAAnB,QAAUyL,OAAO8I,WAChC68C,iBAAkBjwD,EAAAnB,QAAUqL,KAAKkJ,WACjC88C,WAAYlwD,EAAAnB,QAAUuL,OACtB+lD,cAAenwD,EAAAnB,QAAUqL,KAAKkJ,WAC9By4C,oBAAqB7rD,EAAAnB,QAAUwL,KAAK+I,W,8dCtNtC,IAAA3U,EAWqD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAXrDY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eAEAc,EAAAd,EAAA,yCAKAK,EAAAL,EAAA,4CACAokC,EAAAlkC,EAAAF,EAAA,oCACAmrB,EAAAnrB,EAAA,0BAAqD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEtC,SAAS2zD,GAAcvqD,QACpCA,EAAO0N,QACPA,EAAO6lC,cACPA,EAAaC,OACbA,IAEA,MAAMx8C,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfmnC,GAAUjX,aAAa,EAAbA,EAAe3V,WAAW2V,aAAa,EAAbA,EAAexuB,QAUzD,OACEpuB,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,uBACA,kDACA,yCAEF,cAAY,uBACZ4mC,SAAS,IACT39B,QAASA,EACT09B,QAlBa9mC,IACD,WAAVA,EAAEuC,IACJuU,IACmB,UAAV9W,EAAEuC,KACX6G,EAAQpJ,EACV,GAeED,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yCACZiuD,GACC7zD,EAAAI,QAAAqF,cAACigC,EAAAtlC,QAAO,CACNib,IAAKuhC,EAAc3V,QACnBrhC,UAAU,6CACV/B,KAAM+4C,aAAa,EAAbA,EAAexuB,SAGzBpuB,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,+BAAgC,CACpD,0CAA2CyzD,KAG7C7zD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,qCACb5F,EAAAI,QAAAqF,cAAA,QACE,cAAao3C,EACbj3C,WAAW,EAAAnE,EAAArB,SACT,6CACA,CACE,yCACGw8C,WAAexuB,YAIrBwuB,aAAa,EAAbA,EAAexuB,SAAU/tB,EAAE,wBAKpCL,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CACH7O,KAAMzB,EAAAkO,SAAS42B,UACfx2B,KAAMtO,EAAA+Z,SAASgrB,GACfr9B,YAAa,EACbZ,MAAOvH,EAAAqX,UAAUmwB,kBAIzB,CAEAyqB,EAAc7vC,UAAY,CACxB1a,QAAS9H,EAAAnB,QAAUqL,KAAKkJ,WACxBoC,QAASxV,EAAAnB,QAAUqL,KAAKkJ,WACxBioC,cAAer7C,EAAAnB,QAAU0L,OAAO6I,WAChCkoC,OAAQt7C,EAAAnB,QAAUuL,O,sWCrFpB,IAA6CtJ,EAA7C2zB,GAA6C3zB,EAA7Cf,EAAA,wBAA6Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,0kBCA7C,IAAArC,EAYkD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAZlDY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAmrB,EAAAnrB,EAAA,0BACAwyD,EAAAtyD,EAAAF,EAAA,wCACAgtD,EAAA9sD,EAAAF,EAAA,kCACA20B,EAAAz0B,EAAAF,EAAA,wCACAsrB,EAAAtrB,EAAA,sCACAc,EAAAd,EAAA,yCACAK,EAAAL,EAAA,4CAGkD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEnC,SAAS8zD,GAAgBngD,SACtCA,EAAQwtB,mBACRA,EAAkBC,gBAClBA,EAAejC,wBACfA,IAEA,MAAM/+B,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,cACdsnC,EAAaC,IAAkB,EAAAj0D,EAAAge,WAAS,IAEhB,iBAApBqjB,GACNzgC,OAAO0lB,OAAOsG,EAAAsnC,UAAU1gD,SAAS6tB,GAI7B,GAFEA,EAAgBj7B,cAIpB+tD,EAAqBC,IAA0B,EAAAp0D,EAAAge,WAAS,IACxDq2C,EAAmBC,IAAwB,EAAAt0D,EAAAge,WAAS,IACrDqjB,IAAoBzU,EAAAsnC,SAAS7T,KACxB,EACEhf,IAAoBzU,EAAAsnC,SAAS9zD,QAC/B,EAC6B,iBAApBihC,EACT,EAEF,KAEFkzB,EAAMC,IAAW,EAAAx0D,EAAAge,WAAS,IACxBqjB,IAAoBzU,EAAAsnC,SAAS9zD,WAE/BukC,EAAU8vB,IAAe,EAAAz0D,EAAAge,UAAS,MAEzC,IAAI02C,EAAY,GACZV,IAEE5wD,OAAO4wD,GAAe,EACxBU,EAAYr0D,EAAE,wBACL+C,OAAO4wD,GAAe,GAAK5wD,OAAO4wD,IAAgB,EAG3DU,EAAYr0D,EAAE,wBAEd+C,OAAO4wD,IAAgB,GACvB5wD,OAAO4wD,IAAgB5yB,EAEvBszB,EAAYr0D,EAAE,2BACL+C,OAAO4wD,GAAe5yB,IAC/BszB,EAAYr0D,EAAE,mCAIlB,MAAMs0D,EAAkBX,GAAe3zD,EAAE,cAYzC,OAVA,EAAAL,EAAA6W,YAAU,KAEN8tB,GACAwvB,GACAp5C,OAAO65C,SAASC,gBAAkBlwB,GAElCA,EAASmwB,OACX,GACC,CAACnwB,EAAUwvB,IAGZn0D,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,oBACb5F,EAAAI,QAAAqF,cAAA,UACE4D,QAAS,IAAMmrD,GAASD,GACxB3uD,WAAW,EAAAnE,EAAArB,SAAW,2BAA4B,CAChD,iCAAkCm0D,KAGpCv0D,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYm0C,WACrBpzC,YAAa,EACbZ,MAAOvH,EAAAwH,UAAU8P,eACjBhQ,GAAG,QAEF5I,EAAE,yBAEJk0D,EACCv0D,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,mBAEb5F,EAAAI,QAAAqF,cAAA,KAAGG,UAAU,sBAGjB5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,6BACZ2uD,GACCv0D,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,MACIqvB,GACAp/B,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sCACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,oCACb5F,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYm0C,WACrBpzC,YAAa,EACbZ,MAAOvH,EAAAwH,UAAUC,aAEhB/I,EAAE,qBAELL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,MACTC,YAAa3gC,EAAE,0BAGnBL,EAAAI,QAAAqF,cAACquD,EAAA1zD,QAAW,CACV20D,yBACwB,IAAtBV,GAA4BL,EAExBK,EADA,EAGNvrD,QAAQ,aACRksD,qBAAsBX,EACtBzuD,WAAW,EAAAnE,EAAArB,SACT,eACA,mCAGFJ,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLiJ,QAAS,KACP4qD,EAAe,IACfG,GAAuB,GACvBE,EAAqB,GACrB1gD,EAASgZ,EAAAsnC,SAAS9zD,QAAQ,GAG3BC,EAAE,sBAAuB,CAACusB,EAAAsnC,SAAS9zD,WAEtCJ,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLiJ,QAAS,KACP4qD,EAAe,IACfG,GAAuB,GACvBE,EAAqB,GACrB1gD,EAASgZ,EAAAsnC,SAAS7T,KAAK,GAGxBhgD,EAAE,sBAAuB,CAACusB,EAAAsnC,SAAS7T,QAEtCrgD,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLwF,WAAW,EAAAnE,EAAArB,SACT,+CACA,CACE,uBAAwBs0D,IAG5BrrD,QAAS,KACPirD,EAAqB,GACrBF,GAAuB,EAAK,GAG7BD,EACCn0D,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,iCACA,CACE,yCAA0Cs0D,KAI9C10D,EAAAI,QAAAqF,cAAA,SACE,cAAY,oCACZe,SAAWM,IACT,MAAMrE,MAAEA,GAAUqE,EAAMsH,QACA6mD,MAAM7xD,OAAOX,MAEnCwxD,EAAexxD,GACfmR,EAASxQ,OAAOX,IAClB,EAEF+H,KAAK,OACL0qD,UAAU,IACVvvD,IAAK8uD,EACLU,OAAQ,KACNf,GAAuB,EAAM,EAE/B3xD,MAAOuxD,GAAe,MAI1BW,GAEAX,GAAeG,IACfn0D,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uCAAsC,SAUlE8uD,GACC10D,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAY+tC,OACrB5tC,MAAOvH,EAAAwH,UAAUgW,aACjBtV,UAAW,GAEV6qD,IAMb,CAEAX,EAAgBhwC,UAAY,CAC1BnQ,SAAUrS,EAAAnB,QAAUqL,KAAKkJ,WACzBysB,mBAAoB7/B,EAAAnB,QAAUyL,OAAO8I,WACrC0sB,gBAAiB9/B,EAAAnB,QAAUyL,OAC3BuzB,wBAAyB79B,EAAAnB,QAAUwL,K,iRC5NtB,WACb,OACE5L,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,wfACF1rB,KAAK,4BAIb,EAjBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,mRCEX,WACb,OACErC,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,gsCACF1rB,KAAK,iCAEP9E,EAAAI,QAAAqF,cAAA,QACE2vD,SAAS,UACTC,SAAS,UACT7kC,EAAE,kHACF1rB,KAAK,iCAIb,EAvBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,uXCA1B,IAAqDA,EAArDkxC,GAAqDlxC,EAArDf,EAAA,gCAAqDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,8QCEtC,WACb,OACErC,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,isCACF1rB,KAAK,+BAEP9E,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,iNACF1rB,KAAK,+BAIb,EArBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,orCC+DX,WAAsC,IAAAizD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnD,MAAOC,EAAuBC,IAA4B,EAAAh2D,EAAAge,WAAS,GAC7D3d,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfxd,GAAU,EAAA/B,EAAA2X,cACV/X,GAAW,EAAAhB,EAAAyK,eACXmW,GAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgB8I,EAAA+B,UAAY,CAAC,GAE3D3K,qBAAsBkpC,EAAkC,CAAC,EACzDjpC,gBAAiBkpC,EAA6B,CAAC,IAC7CvpC,aAAW,EAAXA,EAAaM,WAAY,CAAC,EACxBI,GAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,GAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBAEjC8zB,GAAgB,EAAAv1C,EAAAsR,aAAYuP,EAAA20B,iBAAkB5rB,EAAA+B,SAC9C8pB,GAAW,EAAAz1C,EAAAsR,aAAYuP,EAAA60B,YAAa9rB,EAAA+B,SACpCzF,EAAYqvB,GAAiBE,EAC7B2U,GAA2B,EAAApqD,EAAAsR,aAC/BuP,EAAAwpC,4BACAzgC,EAAA+B,SAEIjK,GAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEI/O,IAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtB4T,IAAW,EAAAzmB,EAAAsR,aAAYpR,EAAAwmB,8BAA+B1mB,EAAAqhB,cACtD40B,IAAqB,EAAAj2C,EAAAsR,aAAYuP,EAAAq1B,sBAAuBl2C,EAAAqhB,cACxDO,IAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCC,IAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEI8F,GACJpB,GAASqB,kBACTjD,EAAAkD,6CAA6CnV,KAC7C,KAEF,IAEI03C,GACAC,GAHAC,GAAyBhY,EAAAiY,uBAAuBC,QAChDC,GAAyB,CAAC,EAI9B,GAAIP,GAA4BA,EAAyB7nD,OAAS,EAAG,KAAAqoD,GAAAC,GAAAC,GACnEH,GACEP,EAAyBA,EAAyB7nD,OAAS,GAC7D+nD,GAAmD,QAAzBM,GAAGD,UAAsB,IAAAC,QAAA,EAAtBA,GAAwBj3C,KACrD62C,IACwB,QAAtBK,GAAAF,UAAsB,IAAAE,QAAA,EAAtBA,GAAwB/5C,SAAU0hC,EAAAiY,uBAAuBC,QAC3DH,GACwB,QADNO,GAChBH,UAAsB,IAAAG,IAAgB,QAAhBA,GAAtBA,GAAwBC,sBAAc,IAAAD,QAAA,EAAtCA,GAAwCP,kBAC5C,CACA,MAAO97C,GAA4BuD,KAAiC,EAAA/d,EAAAge,UAClEgkC,GAAmB+U,mBAGf9oC,GAAsB,CAC1BC,yBA1C4B,EA2C5BC,WACE+nC,EAA2B9nC,SACL,QADWknC,EACjCoB,UAAsB,IAAApB,OAAA,EAAtBA,EAAwBxP,mBAC1Bz3B,mBACE1B,aAAW,EAAXA,EAAalqB,SAA+B,QAA1B8yD,EAAImB,UAAsB,IAAAnB,OAAA,EAAtBA,EAAwByB,gBAChD1oC,SACE2nC,EAAgC7nC,SACV,QADgBonC,EACtCkB,UAAsB,IAAAlB,OAAA,EAAtBA,EAAwB7P,wBAC1Bp3B,aAAc5B,WAAa6B,aAAe,QAAU,QACpDC,SAAU9B,aAAW,EAAXA,EAAa8B,SACvBC,gBAA2C,KAA1B/B,aAAW,EAAXA,EAAa8B,UAC9BE,mBAAoBtB,EACpBuB,qBAAsBrB,EACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,GAGnB,IAAIkqB,GAC8B,IAAAsf,GAA9BhlC,WAAW+lB,oBACbL,IAAmB,EAAAnhB,EAAA8E,iBACjBrJ,aAAS,EAATA,EAAW+lB,kBACXie,EAAgCh7B,WACR,QADgBg8B,GACtCP,UAAsB,IAAAO,QAAA,EAAtBA,GAAwBvR,2BAC1BwR,YAAY,IAEhB,MAAMxwD,IAAa,EAAA1G,EAAA2iB,YAAWF,EAAAG,oBAExBtI,GACJi8C,KAA2BhY,EAAAiY,uBAAuBC,QAC9CU,GACJ78C,IACAi8C,KAA2BhY,EAAAiY,uBAAuBY,QAC9C5lC,GAA+B,QAAzBikC,EAAGiB,UAAsB,IAAAjB,GAAgB,QAAhBA,EAAtBA,EAAwBqB,sBAAc,IAAArB,OAAA,EAAtCA,EAAwC4B,WAEvD,EAAAr3D,EAAA6W,YAAU,KACRnQ,GAAW,CACTI,MAAO,yBACPH,SAAU1E,EAAA2E,yBAAyBonB,MACnCC,wBACA,GAED,KAEH,EAAAjuB,EAAA6W,YAAU,KACR,IAAI0H,EACJ,GAAIjE,IAA6B+7C,GAA4B,CAC3D,MAAMn4C,EAAyB,KAC7B,MAAMC,EAA4BjE,KAAKmE,OACpClY,KAAKmY,MAAQo4C,GAAuB3yB,MAAQ,KAE/C,GAAI5lB,EAA4B6jC,GAAmB+U,kBAGjD,OAFAh5C,GAA8B,QAC9BU,cAAcF,GAGhBR,GACEikC,GAAmB+U,kBAAoB54C,EACxC,EAEHI,EAAaC,YAAYN,EAAwB,KACjDA,GACF,CAEA,MAAO,IAAMO,cAAcF,EAAW,GACrC,CACDxR,EACAuN,GACA+7C,GACAK,GAAuB3yB,KACvBie,GAAmB+U,qBAGrB,EAAA/2D,EAAA6W,YAAU,KACR9J,GAAS,EAAAf,EAAAu1B,6BAA4B,2BACrC9B,YAAW,KAET1yB,GAAS,EAAAf,EAAAipB,wBAAuB,GAC/B,IAAK,GACP,CAACloB,IAEJ,IACI0N,GACA68C,GACA7kD,GACAohB,GAJA7E,GAAa3uB,EAAE,qCAKfia,KACEy7C,EACF/mC,GAAa3uB,EAAE,qBACNi2D,GAAqB,IAC9BtnC,GAAa3uB,EAAE,sCAGnB,GAAIk2D,KAA2BhY,EAAAiY,uBAAuBY,QAAS,KAAAG,GAK3DC,GAHF,GADAxoC,GAAa3uB,EAAE,cAEb41D,EAAgC7nC,QACV,QADgBmpC,GACtCb,UAAsB,IAAAa,IAAtBA,GAAwB5R,uBAExBlrC,GAAcpa,EAAE,wBAAyB,CACvC41D,EAAgC7nC,SACR,QADcopC,GACpCd,UAAsB,IAAAc,QAAA,EAAtBA,GAAwB7R,0BAG9BlzC,GAAOzS,EAAAI,QAAAqF,cAACgyD,EAAAr3D,QAAW,KACrB,KAC6B,6BAA3Bm2D,KACsB,QAAtBb,EAAAgB,UAAsB,IAAAhB,GAAgB,QAAhBA,EAAtBA,EAAwBoB,sBAAc,IAAApB,OAAA,EAAtCA,EAAwCgC,WACtCnZ,EAAAiY,uBAAuBmB,WAEzB3oC,GAAa3uB,EAAE,oBACfoa,GAAcpa,EAAE,+BAChBoS,GAAOzS,EAAAI,QAAAqF,cAACmyD,EAAAx3D,QAAY,OAEpBm2D,GAAuBpkD,WAAW,cAClCokD,GAAuB/iD,SAAS,oBAEhCwb,GAAa3uB,EAAE,gBACfoa,GAAcpa,EAAE,2BAChBi3D,GAAiBj3D,EAAE,8BACnBoS,GAAOzS,EAAAI,QAAAqF,cAACmyD,EAAAx3D,QAAY,OACgB,YAA3Bm2D,IACTvnC,GAAa3uB,EAAE,cACfoa,GAAcpa,EAAE,yBAChBoS,GAAOzS,EAAAI,QAAAqF,cAACoyD,EAAAz3D,QAAW,OACiB,aAA3Bm2D,KACTvnC,GAAa3uB,EAAE,cACfoa,GAAcpa,EAAE,wBAAyB,CACvCL,EAAAI,QAAAqF,cAAA,KACEG,UAAU,yCACVpD,IAAI,wCACJyV,KAAK,8BACL7J,OAAO,SACP+J,IAAI,uBAEH9X,EAAE,sBAGPoS,GAAOzS,EAAAI,QAAAqF,cAACqyD,EAAA13D,QAAY,OAElBoxB,IAAU6kC,KACZxiC,IAAmB,EAAAnD,EAAAqD,sBACjB,CAAEC,KAAMxC,GAAQ7S,YAChB,CAAEkV,iBAAkBD,MAIxB,MAAMmkC,GACJrB,GAAuBsB,cAAgBjC,EAEnCkC,GAAa,IAEfj4D,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAAC2J,aAAc,GACjB/J,EAAAI,QAAAqF,cAAA,KACEG,UAAU,6CACVqS,KAAK,IACL5O,QAAUpJ,IACRA,WAAG69C,iBACHkY,GAAyB,GACzBtvD,GAAW,CACTI,MAAO,aACPH,SAAU1E,EAAA2E,yBAAyBonB,MACnCC,yBAEFlhB,GAAS,EAAA6f,EAAAsrC,6BAA4B7B,IAA4B,GAGlEh2D,EAAE,gCAMX,OACEL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,4BACb5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFgS,YAAa,EACbC,aAAc,EACd1I,OAAQhI,EAAAutB,YAAYC,KACpBpnB,eAAgBpG,EAAAqG,eAAegQ,UAC/BnS,QAASlE,EAAAytB,QAAQC,KACjBzpB,UAAU,qCAEV5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyJ,UAAW,GACXE,aAAc,EACdlE,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,MAEF,IAAG0jB,aAAW,EAAXA,EAAalqB,QAASW,OAAOupB,EAAYlqB,OAAOiiD,QAAQ,OAE9D1kD,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYm0C,WACrBj0C,GAAG,KACHe,WAAY,EACZF,YAAa,GAEZosD,EAA2B9nC,SACJ,QADUunC,EAChCe,UAAsB,IAAAf,OAAA,EAAtBA,EAAwB7P,oBAE3BoQ,EAA2BjvB,QAC1BjnC,EAAAI,QAAAqF,cAACigC,EAAAtlC,QAAO,CACNib,IAAK66C,EAA2BjvB,QAChCrhC,UAAU,2BACV/B,KACEqyD,EAA2B9nC,SACL,QADWwnC,EACjCc,UAAsB,IAAAd,OAAA,EAAtBA,EAAwBjQ,wBAE1BlN,kBAAkB,sCAElB,KACJz4C,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQ+oC,MAAOnuD,WAAY,EAAGF,YAAa,GACvD9J,EAAAI,QAAAqF,cAAC2yD,EAAAh4D,QAAS,OAEX61D,EAAgChvB,QAC/BjnC,EAAAI,QAAAqF,cAACigC,EAAAtlC,QAAO,CACNib,IAAK46C,EAAgChvB,QACrCrhC,UAAU,2BACV/B,KACEoyD,EAAgC7nC,SACV,QADgBynC,EACtCa,UAAsB,IAAAb,OAAA,EAAtBA,EAAwBlQ,wBAE1BlN,kBAAkB,sCAElB,KACJz4C,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHe,WAAY,GAEX,IAAI2tC,IAAoBv0C,OAAOu0C,IAAkB+M,QAAQ,OAE5D1kD,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYm0C,WACrBj0C,GAAG,KACHe,WAAY,GAEXisD,EAAgC7nC,SACT,QADe0nC,EACrCY,UAAsB,IAAAZ,OAAA,EAAtBA,EAAwBnQ,0BAG9B3lD,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyJ,UAAW,EACXjE,UAAU,uGAEX6M,IACCzS,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,EAAGE,aAAc,GAC9B0I,IAGJ6H,IACCta,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyJ,UAAW,EACXE,aAAc,EACdlE,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeI,OAC/BF,WAAYvG,EAAAwG,WAAWC,QAEvBpI,EAAAI,QAAAqF,cAAC4yD,EAAAj4D,QAAS,MACVJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHe,WAAY,GAEX,GAAG3J,EAAE,yBAERL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUuP,gBACjB5P,QAASnH,EAAAoH,YAAYm0C,WACrBj0C,GAAG,KACHe,WAAY,EACZpE,UAAU,6CAET,EAAAirB,EAAA9W,8BAA6BS,MAIpCxa,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHK,MAAOvH,EAAAwH,UAAUC,YACjBN,QAASnH,EAAAoH,YAAYuJ,UACrBrJ,GAAG,KACHiQ,WAAYvX,EAAAwX,WAAW4C,MAEtBiT,IAEF1U,IACCta,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,mDACb5F,EAAAI,QAAAqF,cAAA,OACEG,UAAU,wCACV4D,MAAO,CACLE,MACG,IAAMs4C,GAAmB+U,mBACzB/U,GAAmB+U,kBAClBv8C,IAHG,QASdC,IACCza,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHY,UAAWgqB,IAAoB,EAC/B3qB,MAAOvH,EAAAwH,UAAUuP,iBAEhB+B,IAGJoZ,IACC7zB,EAAAI,QAAAqF,cAACurB,EAAA5wB,QAAmB,CAClByzB,iBAAkBA,GAClBe,4BAA6B3G,KAGjCjuB,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyJ,UAAW,EACXjE,UAAU,0GAEX0xD,IACCt3D,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHY,UAAW,EACXX,MAAOvH,EAAAwH,UAAUuP,iBAEhB4+C,KAINS,IACC1B,IACA/7C,IAA6Bta,EAAAI,QAAAqF,cAACwyD,GAAU,MACzC1B,KAA2BhY,EAAAiY,uBAAuBY,QACjDp3D,EAAAI,QAAAqF,cAACsrB,EAAA3wB,QAAa,CAACw0B,4BAA6B3G,KAC1C,KACJjuB,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACVkgB,SAAU7Y,UACJ0vD,UACIpqD,GAAS,EAAA6f,EAAAgD,wBACf1gB,EAAQC,KAAK9B,EAAA4C,gBAEbf,EAAQC,KAAK9B,EAAAwiB,kBACf,EAEF/G,SAAUrhB,gBACFsF,GAAS,EAAA6f,EAAAgD,wBACf1gB,EAAQC,KAAK9B,EAAA4C,cAAc,EAE7B6f,WAAkCzvB,EAAtB82D,GAAwB,QAAa,YACjDpnC,WAAYonC,GACZmB,WAAYj4D,EAAE,SACduF,UAAU,2CAIlB,EApeA,IAAA5F,EA6DqC,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA7DrCY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACAovB,EAAApvB,EAAA,4BACAq0B,EAAAr0B,EAAA,UACAmrB,EAAAnrB,EAAA,0BACAsrB,EAAAtrB,EAAA,8BAUA2K,EAAA3K,EAAA,sBAMAoY,EAAApY,EAAA,wCAIAsvB,EAAAtvB,EAAA,sCACA+L,EAAA/L,EAAA,qCAIAc,EAAAd,EAAA,yCACA2tB,EAAAztB,EAAAF,EAAA,+BACAokC,EAAAlkC,EAAAF,EAAA,oCACAK,EAAAL,EAAA,4CASA0K,EAAA1K,EAAA,0BAIAW,EAAAX,EAAA,4CACAi9C,EAAAj9C,EAAA,4CAEAquB,EAAAnuB,EAAAF,EAAA,oBACAuvB,EAAAvvB,EAAA,iBACAmhB,EAAAnhB,EAAA,iCACAyvB,EAAAvvB,EAAAF,EAAA,uBACA0vB,EAAAxvB,EAAAF,EAAA,8BACAk1B,EAAAl1B,EAAA,wDACAm2D,EAAAj2D,EAAAF,EAAA,mBACAw2D,EAAAt2D,EAAAF,EAAA,oBACAs2D,EAAAp2D,EAAAF,EAAA,oBACAu2D,EAAAr2D,EAAAF,EAAA,mBACA82D,EAAA52D,EAAAF,EAAA,iBACA+2D,EAAA72D,EAAAF,EAAA,iBAAqC,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,C,iSC3DtB,WACb,OACED,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,25BACF1rB,KAAK,iCAIb,EAjBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,qRCEX,WACb,OACErC,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,2uBACF1rB,KAAK,iCAIb,EAjBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,mRCEX,WACb,OACErC,EAAAI,QAAAqF,cAAA,OACEiE,MAAM,KACNC,OAAO,KACPumB,QAAQ,YACRprB,KAAK,OACLqrB,MAAM,8BAENnwB,EAAAI,QAAAqF,cAAA,UACE2qB,GAAG,UACHC,GAAG,UACHnwB,EAAE,OACFowB,OAAO,+BACPC,YAAY,QAEdvwB,EAAAI,QAAAqF,cAAA,QACE+qB,EAAE,oyDACF1rB,KAAK,iCAIb,EAxBA,IAA0BzC,EAA1BrC,GAA0BqC,EAA1Bf,EAAA,WAA0Be,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,+lBCA1B,IAAArC,EA8B0E,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA9B1EY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eAEAmrB,EAAAnrB,EAAA,0BACAi3D,EAAAj3D,EAAA,sDACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAKAc,EAAAd,EAAA,yCAMAsrB,EAAAtrB,EAAA,sCAYAsvB,EAAAtvB,EAAA,8BAA0E,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAE3D,SAASu4D,GAAiBrpB,cACvCA,EAAa4e,4BACbA,EAA2B1sB,gBAC3BA,IAEA,MAAMhhC,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACf3f,GAAW,EAAAhB,EAAAyK,eACjB,IACIsF,EACArB,EAFAwG,EAAWtf,EAAA+7C,WAAWE,OAI1B,MAAM6a,EACJz4D,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,QACzBhJ,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTvO,QAAUpJ,IACRA,EAAE69C,iBACF/wC,GAAS,EAAA6jB,EAAA4hB,+BAA6B,GAAM,EAE9C9hC,KAAMtO,EAAAyV,eAAeC,SAEpBzX,EAAE,wBAKT,OAAQ8uC,GACN,KAAKviB,EAAA8rC,yBACH58C,EAAQzb,EAAE,8BACVoa,EACEza,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,KACFJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,qCAEJo4D,GAGL,MACF,KAAK7rC,EAAAy1B,oBACHphC,EAAWtf,EAAA+7C,WAAWC,QACtB7hC,EAAQzb,EAAE,yBACVoa,EACEza,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,KACFJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,8BAA+B,CAACghC,KAEpC0sB,GAA+B0K,GAGpC,MACF,KAAK7rC,EAAAw1B,mBACHnhC,EAAWtf,EAAA+7C,WAAWC,QACtB7hC,EAAQzb,EAAE,wBACVoa,EACEza,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,KACFJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,6BAA8B,CAACghC,KAEnC0sB,GAA+B0K,GAGpC,MACF,KAAK7rC,EAAA+rC,wBACH78C,EAAQzb,EAAE,6BACVoa,EACEza,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,KACFJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,oCAEJo4D,GAGL,MACF,KAAK7rC,EAAAmI,2BACHjZ,EAAQzb,EAAE,oCACVoa,EACEza,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,KACFJ,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,sCAELL,EAAAI,QAAAqF,cAACrD,EAAAwV,WAAU,CACTlH,KAAMtO,EAAAyV,eAAeC,QACrBC,UAAW,CACTjP,QAASnH,EAAAoH,YAAYC,OACrBd,WAAYvG,EAAAwG,WAAW6P,WAEzB/O,GAAG,IACHgP,KAAK,4DACL7J,OAAO,SACP+J,IAAI,uBAEH9X,EAAE,mBAIT,MACF,KAAKusB,EAAAkI,sBACHhZ,EAAQzb,EAAE,gCACVoa,EACEza,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,uCAGP,MACF,KAAKusB,EAAAoI,6BACHlZ,EAAQzb,EAAE,sCACVoa,EACEza,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,6CAGP,MACF,KAAKusB,EAAAiI,qBACH/Y,EAAQzb,EAAE,+BACVoa,EACEza,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,sCAGP,MACF,KAAKusB,EAAAuH,wBACHrY,EAAQzb,EAAE,yBACVoa,EACEza,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CAACC,QAASnH,EAAAoH,YAAYC,OAAQC,GAAG,MACnC5I,EAAE,oCAGP,MACF,KAAKusB,EAAAwH,kBACHtY,EAAQzb,EAAE,wBAKd,OACEL,EAAAI,QAAAqF,cAAC8yD,EAAAv3C,YAAW,CACVC,SAAUA,EACVnF,MAAOA,EACP+hC,WAAY,CAAE,cAAe,uBAE5BpjC,EAGP,CAEA+9C,EAAiBz0C,UAAY,CAC3BorB,cAAe5tC,EAAAnB,QAAUuL,OACzBoiD,4BAA6BxsD,EAAAnB,QAAUwL,KACvCy1B,gBAAiB9/B,EAAAnB,QAAUyL,O,0WCnL7B,IAAyCxJ,EAAzCstB,GAAyCttB,EAAzCf,EAAA,oBAAyCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,uYCAzC,IAAArC,EAK8F,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAL9FY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAmrB,EAAAnrB,EAAA,0BAEAs3D,EAAAp3D,EAAAF,EAAA,gEAA8F,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAE/E,SAAS44D,GAAY/vC,SAClCA,EAAQiH,WACRA,EAAUzP,SACVA,EAAQwP,WACRA,EAAUzH,SACVA,EAAQoZ,mBACRA,EAAkBksB,cAClBA,EAAa/nD,UACbA,EAAY,GAAE0yD,WACdA,IAEA,MAAMj4D,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aAErB,OACE1sB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,gBACb5F,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,wBAAyBwF,EAAW,CACxD,gCAAiC+nD,KAGnC3tD,EAAAI,QAAAqF,cAACmzD,EAAAx4D,QAAmB,CAClB0oB,SAAUA,EACViH,WAAYA,EACZuoC,WAAYA,GAAcj4D,EAAE,QAC5BigB,SAAUA,EACVwP,WAAYA,EACZ4iC,iBAAiB,EAAAjxD,EAAArB,SACf,mDACAwF,GAEFkzD,uBAAuB,EAAAr3D,EAAArB,SACrB,0DACA,CACE,kEACE2vB,IAGN1H,SAAUA,KAGboZ,GACCzhC,EAAAI,QAAAqF,cAAA,OACEG,UAAU,4BACVyD,QAAS,IACP6R,OAAOC,SAASC,QAAQ,CAAEC,IAAK,oCAGhChb,EAAE,mBAKb,CAEAw4D,EAAY90C,UAAY,CACtB+E,SAAUvnB,EAAAnB,QAAUqL,KACpBskB,WAAYxuB,EAAAnB,QAAUwL,KACtB0U,SAAU/e,EAAAnB,QAAUqL,KACpBqkB,WAAYvuB,EAAAnB,QAAUuL,OACtB0c,SAAU9mB,EAAAnB,QAAUwL,KACpB61B,mBAAoBlgC,EAAAnB,QAAUwL,KAC9B+hD,cAAepsD,EAAAnB,QAAUwL,KACzBhG,UAAWrE,EAAAnB,QAAUuL,OACrB2sD,WAAY/2D,EAAAnB,QAAUuL,O,s3BCtExB,IAAA3L,EAiC8D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAjC9DY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eAEAmrB,EAAAnrB,EAAA,0BACAwyD,EAAAtyD,EAAAF,EAAA,wCACAgtD,EAAA9sD,EAAAF,EAAA,kCACA20B,EAAAz0B,EAAAF,EAAA,wCACA2tB,EAAAztB,EAAAF,EAAA,+BACAy3D,EAAAv3D,EAAAF,EAAA,sCACAK,EAAAL,EAAA,4CAQAsrB,EAAAtrB,EAAA,sCAKAc,EAAAd,EAAA,yCAMA0qC,EAAA1qC,EAAA,kEACA2qC,EAAA3qC,EAAA,iEACA0K,EAAA1K,EAAA,0BACAsvB,EAAAtvB,EAAA,8BAA8D,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAE/C,SAAS+4D,GAAoBplD,SAC1CA,EAAQmqC,aACRA,EAAY3c,mBACZA,EAAkBC,gBAClBA,EAAejC,wBACfA,IAEA,MAAM/+B,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACf3f,GAAW,EAAAhB,EAAAyK,eACX24B,GAAgB,EAAApjC,EAAAsR,aAAYuT,EAAAwe,mBAC3B4kB,EAAaC,IAAkB,EAAAj0D,EAAAge,WAAS,IAEhB,iBAApBqjB,GACNzgC,OAAO0lB,OAAOsG,EAAAsnC,UAAU1gD,SAAS6tB,GAI7B,GAFEA,EAAgBj7B,cAIpB+tD,EAAqBC,IAA0B,EAAAp0D,EAAAge,WAAS,IACxDq2C,EAAmBC,IAAwB,EAAAt0D,EAAAge,WAAS,IACrDqjB,IAAoBzU,EAAAsnC,SAAS7T,KACxB,EACEhf,IAAoBzU,EAAAsnC,SAAS9zD,QAC/B,EAC6B,iBAApBihC,EACT,EAEF,KAEFsD,EAAU8vB,IAAe,EAAAz0D,EAAAge,UAAS,OAClCkjB,EAAa+3B,IAAkB,EAAAj5D,EAAAge,UAASqjB,GAEzC63B,EAAgBh4B,IAAgBG,EAQtC,IAAI83B,EAAmB,GACnBC,EAAoB,GACpBC,EAAuB13D,EAAA+7C,WAAW4b,KAClCtF,IAEE5wD,OAAO4wD,GAAe,GACxBqF,EAAuB13D,EAAA+7C,WAAWE,OAClCub,EAAmB94D,EAAE,mCACrB+4D,EAAoB/4D,EAAE,6BACtB0M,GAAS,EAAAf,EAAAsnC,kBAAiB1mB,EAAA+rC,2BACjBv1D,OAAO4wD,GAAe,GAAK5wD,OAAO4wD,IAAgB,GAG3DqF,EAAuB13D,EAAA+7C,WAAWC,QAClCwb,EAAmB94D,EAAE,6BAA8B,CAAC6gC,IACpDk4B,EAAoB/4D,EAAE,yBAEtB+C,OAAO4wD,IAAgB,GACvB5wD,OAAO4wD,IAAgB5yB,GAEvBi4B,EAAuB13D,EAAA+7C,WAAWC,QAClCwb,EAAmB94D,EAAE,8BAA+B,CAAC6gC,IACrDk4B,EAAoB/4D,EAAE,0BACb+C,OAAO4wD,GAAe5yB,GAC/Bi4B,EAAuB13D,EAAA+7C,WAAWE,OAClCub,EAAmB94D,EAAE,oCACrB+4D,EAAoB/4D,EAAE,8BACtB0M,GAAS,EAAAf,EAAAsnC,kBAAiB1mB,EAAA8rC,4BACO,IAAxBt1D,OAAO4wD,IAChBqF,EAAuB13D,EAAA+7C,WAAW4b,KAClCH,EAAmB94D,EAAE,+BACrB+4D,EAAoB/4D,EAAE,0BACb8uC,GACTpiC,GAAS,EAAAf,EAAAsnC,kBAAiB,MAG9B,MAAMimB,EAAmBF,IAAyB13D,EAAA+7C,WAAWE,OAEvD+W,EAAkBX,GAAe3zD,EAAE,cAmBzC,OAjBA,EAAAL,EAAA6W,YAAU,KAEN8tB,GACAwvB,GACAp5C,OAAO65C,SAASC,gBAAkBlwB,GAElCA,EAASmwB,OACX,GACC,CAACnwB,EAAUwvB,KAEd,EAAAn0D,EAAA6W,YAAU,KACkB,IAAtBw9C,GAEFtnD,GAAS,EAAAf,EAAAsnC,kBAAiB,IAC5B,GACC,CAACvmC,EAAUsnD,IAGZr0D,EAAAI,QAAAqF,cAACrD,EAAA0U,MAAK,CACJC,QAASgnC,EACT3nC,QAAM,EACNY,wBAAwB,EACxBC,qBAAmB,EACnBrR,UAAU,8BAEV5F,EAAAI,QAAAqF,cAACrD,EAAA+U,aAAY,MACbnX,EAAAI,QAAAqF,cAACumC,EAAA50B,aAAY,KACXpX,EAAAI,QAAAqF,cAACwmC,EAAA50B,YAAW,CAACN,QAASgnC,GACnB19C,EAAE,wBAELL,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBrpB,cAAerE,EAAAsE,cAAcC,OAC7B6B,eAAgBpG,EAAAqG,eAAeC,aAC/BC,WAAYvG,EAAAwG,WAAW80C,QACvBr3C,UAAU,iCAEV5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,EAAGE,aAAc,GAC/B/J,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,MACIqvB,GACAp/B,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAMnnB,WAAYvG,EAAAwG,WAAWC,QACjDpI,EAAAI,QAAAqF,cAACszD,EAAA34D,QAAU,CACT0I,QAASnH,EAAA63D,kBAAkBC,GAC3BC,SAAU,CAAErnD,aAAc,IAEzBhS,EAAE,qBAELL,EAAAI,QAAAqF,cAACwwB,EAAA71B,QAAW,CACV2gC,SAAS,MACT44B,cAAc,0BACd34B,YAAa3gC,EAAE,0BAGnBL,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,MACpBrvB,EAAAI,QAAAqF,cAACquD,EAAA1zD,QAAW,CACV20D,yBACwB,IAAtBV,GAA4BL,EAExBK,EADA,EAGNvrD,QAAQ,aACRksD,qBAAsBX,EACtBzuD,WAAW,EAAAnE,EAAArB,SACT,eACA,uCAGFJ,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLiJ,QAAS,KACP4qD,EAAe,IACfG,GAAuB,GACvBE,EAAqB,GACrB2E,EAAersC,EAAAsnC,SAAS9zD,QAAQ,GAGjCC,EAAE,sBAAuB,CAACusB,EAAAsnC,SAAS9zD,WAEtCJ,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLiJ,QAAS,KACP4qD,EAAe,IACfG,GAAuB,GACvBE,EAAqB,GACrB2E,EAAersC,EAAAsnC,SAAS7T,KAAK,GAG9BhgD,EAAE,sBAAuB,CAACusB,EAAAsnC,SAAS7T,QAEtCrgD,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLwF,WAAW,EAAAnE,EAAArB,SACT,mDACA,CACE,uBAAwBm5D,IAG5BlwD,QAAS,KACPirD,EAAqB,GACrBF,GAAuB,EAAK,GAG7BD,EACCn0D,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,qCACA,CACE,6CACEm5D,KAINv5D,EAAAI,QAAAqF,cAAA,SACE,cAAY,uCACZe,SAAWM,IACT,MAAMrE,MAAEA,GAAUqE,EAAMsH,QACA6mD,MAAM7xD,OAAOX,MAEnCwxD,EAAexxD,GACfw2D,EAAe71D,OAAOX,IACxB,EAEF+H,KAAK,OACL0qD,UAAU,IACVvvD,IAAK8uD,EACLU,OAAQ,KACNf,GAAuB,EAAM,EAE/BwF,UAAY9yD,IACQ,UAAdA,EAAMtE,KACR4xD,GAAuB,EACzB,EAEF3xD,MAAOuxD,GAAe,MAI1BW,GAEAX,GAAeG,IACfn0D,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,2CAA0C,UAUtEuzD,GACCn5D,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,GACd7J,EAAAI,QAAAqF,cAACrD,EAAA4e,YAAW,CACVC,SAAUo4C,EACVv9C,MAAOs9C,EACPvb,WAAY,CAAE,cAAe,uBAE7B79C,EAAAI,QAAAqF,cAACszD,EAAA34D,QAAU,CACT0I,QAASnH,EAAA63D,kBAAkBC,GAC3B5c,OAAO,qCAENsc,MAMXn5D,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,GACd7J,EAAAI,QAAAqF,cAACrD,EAAA4rD,cAAa,CACZ3kD,QAAS,KApNf63B,IAAgBG,GAClBztB,EAASstB,GAqNC6c,GAAc,EAEhBhR,OAAK,EACL1kB,UAAW6wC,EACX,cAAY,sCAEX74D,EAAE,cAOjB,CAEA24D,EAAoBj1C,UAAY,CAC9BnQ,SAAUrS,EAAAnB,QAAUqL,KAAKkJ,WACzBopC,aAAcx8C,EAAAnB,QAAUqL,KAAKkJ,WAC7BysB,mBAAoB7/B,EAAAnB,QAAUyL,OAAO8I,WACrC0sB,gBAAiB9/B,EAAAnB,QAAUyL,OAC3BuzB,wBAAyB79B,EAAAnB,QAAUwL,K,wXCjTrC,IAAmDvJ,EAAnD2uB,GAAmD3uB,EAAnDf,EAAA,8BAAmDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,wdCAnD,IAAArC,EAWkD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAXlDY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eAEA2tB,EAAAztB,EAAAF,EAAA,+BACAmrB,EAAAnrB,EAAA,0BACAiM,EAAAjM,EAAA,+BACAW,EAAAX,EAAA,iCACAmhB,EAAAnhB,EAAA,4CAIkD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEnC,SAAS45D,GAAoBhmC,iBAC1CA,EAAgBe,4BAChBA,IAEA,MAAMv0B,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfhmB,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,oBACxB8jB,GAAwB,EAAAn5B,EAAA8vB,gBAAexJ,GAE7C,OACE7zB,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,EAAGjE,UAAU,0BAC3B5F,EAAAI,QAAAqF,cAAA,UACE4D,QAAS,KACP3C,EAAW,CACTI,MAAO2b,EAAA1b,qBAAqB63B,oBAC5Bj4B,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB2G,EACrB3tB,WAAY,CACV43B,UAAWpc,EAAAqc,yBAAyBg7B,yBACpCxkD,SAAU,mBACV0pB,WAAY0H,KAGhBxrB,OAAOC,SAASC,QAAQ,CAAEC,IAAKwY,GAAmB,GAGnDxzB,EAAE,4BAA6B,CAC9BA,EAAE,2BACFqmC,KAKV,CAEAmzB,EAAoB91C,UAAY,CAC9B8P,iBAAkBtyB,EAAAnB,QAAUuL,OAAOgJ,WACnCigB,4BAA6BrzB,EAAAnB,QAAU0L,OAAO6I,W,gXCjDhD,IAAuCtS,EAAvCywC,GAAuCzwC,EAAvCf,EAAA,kBAAuCe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,mlBCAvC,IAAArC,EAcuE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAdvEY,CAAAC,EAAA,UAEAC,EAAAC,EAAAF,EAAA,eACAG,EAAAD,EAAAF,EAAA,eACAmrB,EAAAnrB,EAAA,0BAEA40B,EAAA10B,EAAAF,EAAA,iEACAg2C,EAAA91C,EAAAF,EAAA,mCACA2tB,EAAAztB,EAAAF,EAAA,+BACAK,EAAAL,EAAA,4CAIAg9C,EAAAh9C,EAAA,oCACAc,EAAAd,EAAA,yCAAuE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAExD,SAASguD,EAAyBzoD,GAC/C,MAAMysB,UACJA,EAAS8zB,iBACTA,EAAgBH,sBAChBA,EAAqByF,uBACrBA,EAAsBC,aACtBA,EAAYb,wBACZA,EAAuBE,6BACvBA,EAA4BI,0BAC5BA,EAAyBF,8BACzBA,GACErlD,EAEEnF,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aAErB,IAAIwhC,EAAuB,GACvBC,EAAyB,GACzBC,EAAuB,GACvB2L,EAAqC,GAuBzC,OAtBIlP,GAEFqD,EAAuB7tD,EAAE,6BACzB8tD,EAAyB9tD,EAAE,mCAC3B+tD,EAAuB9P,EAAA8B,mBAAmBC,KAC1C0Z,EAAqC15D,EAAE,0BAEvC6tD,EAAuB7tD,EAAE,2BAA4B,CACnD0qD,IAEFoD,EAAyB9tD,EAAE,sBAAuB,CAChD0lD,EACA9zB,EAAUjF,gBAAgBoB,OAC1Bq8B,EACA7E,EACA3zB,EAAUlF,qBAAqBqB,OAC/Bu8B,IAEFyD,EAAuBn8B,EAAUo4B,cAAcC,OAC/CyP,EAAqC15D,EAAE,yBAIvCL,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SACT,+CACAguD,IAGFpuD,EAAAI,QAAAqF,cAACywB,EAAA91B,QAAiB,CAChBwgB,QACE5gB,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iDACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sDACb5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CACFyF,QAASlE,EAAAytB,QAAQC,KACjBtnB,eAAgBpG,EAAAqG,eAAeC,aAC/B6H,cAAe,GAEf9P,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uDACZsoD,GAEHluD,EAAAI,QAAAqF,cAAC6xC,EAAAl3C,QAAO,CAAC2gC,SAAS,SAASjlB,MAAOzb,EAAE,2BAClCL,EAAAI,QAAAqF,cAACrD,EAAAsQ,KAAI,CAAC7O,KAAMzB,EAAAkO,SAAS+C,SAGxB86C,GACC7C,GACAtrD,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yDACb5F,EAAAI,QAAAqF,cAAA,UACE4D,QAAS,KACPgiD,GAAwB,GAGzB0O,QAUrB,CAEA9L,EAAyBlqC,UAAY,CACnCkO,UAAW1wB,EAAAnB,QAAU0L,OACrBi6C,iBAAkBxkD,EAAAnB,QAAUuL,OAC5Bi6C,sBAAuBrkD,EAAAnB,QAAUuL,OACjC0/C,uBAAwB9pD,EAAAnB,QAAUqL,KAClC6/C,aAAc/pD,EAAAnB,QAAUwL,KACxB6+C,wBAAyBlpD,EAAAnB,QAAUuL,OACnCg/C,6BAA8BppD,EAAAnB,QAAUuL,OACxCo/C,0BAA2BxpD,EAAAnB,QAAUyL,OACrCg/C,8BAA+BtpD,EAAAnB,QAAUwL,K,uvDCiB5B,WAAqB,IAAAinB,EAAAgsB,EAAAC,EAAAC,EAAAC,EAAAC,EAClC,MAAM/vC,GAAU,EAAA/B,EAAA2X,cACV/X,GAAW,EAAAhB,EAAAyK,eACXnW,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfhmB,GAAa,EAAA1G,EAAA2iB,YAAW1gB,EAAA2gB,qBAEvBo3C,EAAuBC,KAA4B,EAAAj6D,EAAAge,WAAS,IAC5DkhC,GAAeC,KAAoB,EAAAn/C,EAAAge,WAAS,IAC5CohC,GAAyBC,KAA8B,EAAAr/C,EAAAge,WAAS,IAChEshC,GAAe4a,KAAoB,EAAAl6D,EAAAge,WAAS,IAC5CuhC,GAAuBC,KAA4B,EAAAx/C,EAAAge,UAAS,OAC5DyhC,GAAsBC,KAA2B,EAAA1/C,EAAAge,UAAS,OAC1D2hC,GAA8BC,KACnC,EAAA5/C,EAAAge,UAAS,OAEJ6hC,KAAoB,EAAA7/C,EAAAge,UAAS7X,KAAKmY,QAElCyhC,GAA6BC,KAClC,EAAAhgD,EAAAge,WAAS,GACLmiC,GAA8B,CAClC7B,EAAA8B,mBAAmBC,KACnB/B,EAAA8B,mBAAmBE,QAGfjS,IAAa,EAAAtiC,EAAAsR,aAAYuP,EAAA0hB,6BACzB/V,IAAS,EAAAxsB,EAAAsR,aAAYuP,EAAA4L,UAAW7C,EAAA+B,UACtC,EAAA13B,EAAA6W,YAAU,KACHjW,OAAO0lB,OAAOiS,IAAQjqB,OAED,aAAf+/B,IACTn/B,EAAQC,KAAK9B,EAAAmgC,qBAFbt+B,EAAQC,KAAK9B,EAAAwiB,kBAGf,GACC,CAAC3gB,EAASqpB,GAAQ8V,KAErB,MAAMkS,IAAoB,EAAAx0C,EAAAsR,aAAYuP,EAAA4zB,sBAGhCptB,IAAW,EAAArnB,EAAAsR,aAAYuP,EAAAwF,sBACvBsuB,IAAe,EAAA30C,EAAAsR,aAAYuP,EAAA+zB,mBAC3BC,IAAqB,EAAA70C,EAAAsR,aAAYuP,EAAAi0B,uBACjCC,IAA6B,EAAA/0C,EAAAsR,aAAYuP,EAAAm0B,+BACzCC,IAAoB,EAAAj1C,EAAAsR,aAAYuP,EAAAq0B,sBAChCpoB,IAAuB,EAAA9sB,EAAAsR,aAAYpR,EAAA6sB,sBAAuBnD,EAAA+B,SAC1DwpB,IAA+B,EAAArrB,EAAAgE,kBAAiBhB,KAC9CY,QAAS1C,KAAe,EAAAhrB,EAAAsR,aAAYpR,EAAAuiC,mBAAoBziC,EAAAqhB,cAC1DiG,IAAiB,EAAAtnB,EAAAsR,aAAYpR,EAAAk1C,wBAC7BC,IAAoB,EAAAr1C,EAAAsR,aAAYpR,EAAAsmB,sBAChCltB,IAAkB,EAAA0G,EAAAsR,aAAYpR,EAAAomB,oBAC9BgvB,IAAc,EAAAt1C,EAAAsR,aAAYnR,EAAA0rB,UAAWjC,EAAA+B,SACrCuT,IAAgC,EAAAl/B,EAAAsR,aACpCpR,EAAAi/B,oCAEI1c,IAAe,EAAAziB,EAAAsR,aAAYuP,EAAA6K,iBAC3B9K,IAAc,EAAA5gB,EAAAsR,aAAYuP,EAAAC,eAAgB8I,EAAA+B,SAC1CxK,IAAkB,EAAAnhB,EAAAsR,aAAYuP,EAAAO,mBAAoBphB,EAAAqhB,cAClDk0B,IAAgB,EAAAv1C,EAAAsR,aAAYuP,EAAA20B,iBAAkB5rB,EAAA+B,SAC9C8pB,IAAW,EAAAz1C,EAAAsR,aAAYuP,EAAA60B,YAAa9rB,EAAA+B,SACpCzF,GAAYqvB,IAAiBE,GAC7BluB,IAAarB,UAAgB,QAAPY,EAATZ,GAAWsB,aAAK,IAAAV,OAAA,EAAhBA,EAAkBpwB,QAAS,MACxCygC,IAAwB,EAAAn3B,EAAAsR,aAAYuP,EAAAuW,0BACpC9K,IAAoB,EAAAtsB,EAAAsR,aAAYpR,EAAAqsB,qBAAsB3C,EAAA+B,SACtD/Y,IAAU,EAAA5S,EAAAsR,aAAYpR,EAAA2S,mBACtB8iC,IAAuB,EAAA31C,EAAAsR,aAAYnR,EAAAy1C,mBACnCnS,IAA6B,EAAAzjC,EAAAsR,aAAYuP,EAAA6iB,+BACzChiB,IAA+B,EAAA1hB,EAAAsR,aACnC3D,EAAAgU,iCAEIC,IAA2B,EAAA5hB,EAAAsR,aAAY3D,EAAAkU,6BACvCg0B,IAAkB,EAAA71C,EAAAsR,aAAYuP,EAAAi1B,oBAC9B7R,IAAgC,EAAAjkC,EAAAsR,aACpCuP,EAAAqjB,kCAEI6R,IAAyB,EAAA/1C,EAAAsR,aAAYuP,EAAAm1B,2BACrC7oB,IAAuB,EAAAntB,EAAAsR,aAAYuP,EAAAuM,wBAAyBxD,EAAA+B,SAC5D7J,IAAkC,EAAA9hB,EAAAsR,aACtCuP,EAAAkB,oCAEIk0B,IAAqB,EAAAj2C,EAAAsR,aAAYuP,EAAAq1B,sBAAuBl2C,EAAAqhB,cACxD80B,GAAsBjwB,GAAUsB,MAChC8nB,GACJxtB,IAAmCJ,GAErC,IAAI60B,GACArX,KAGFqX,IAAe,EAAAlE,EAAAmE,iBAAgBjE,EAAA8B,mBAAmBC,KAAM,CACtDmC,aAAcxB,IAAqB1C,EAAA8B,mBAAmBC,QAI1D,MAAMoC,GAAyB91B,cAAW,EAAXA,GAAa+1B,YAEtCC,GAA2B,CAC/BC,kBAAmB5/C,UACnB6/C,kBAAmB7/C,UACnB8/C,sBAAuB9/C,UACvB+/C,sBAAuB//C,UACvBggD,eAAgBhgD,UAChBigD,eAAgBjgD,UAChBkgD,mBAAoBlgD,UACpBmgD,mBAAoBngD,WAGhBogD,IACJnxB,cAAS,EAATA,GAAWe,wBACX,MAAK,EAAApZ,EAAAypC,eAAapxB,cAAS,EAATA,GAAWgB,aAAc,KAEvCqwB,IAAc,EAAA5sB,EAAA6sB,sBAClBtxB,cAAS,EAATA,GAAWuxB,YACXvxB,cAAS,EAATA,GAAWwxB,cACXxxB,cAAS,EAATA,GAAWyxB,OACXhD,IAGF,IAAIiD,GACAC,GACAC,GAGJ,GAAI5Y,GAA+B,CACjC,MACE0Y,aAAcG,EACdF,qBAAsBG,EAA6BC,gBACnDA,GACE1B,GACE2B,GAAmBD,aAAe,EAAfA,EAAiBC,mBAAoB,IAC9DN,GAAe/C,KAAsB,EAAAhnC,EAAAsqC,iBAAgBJ,GACrDF,GACE9C,KACA,EAAAlnC,EAAAsqC,iBAAgBH,GAClBF,IAA2B,EAAAjqC,EAAAuqC,WACzB,EAAAvqC,EAAAsqC,iBAAgBD,GAChBL,GAEJ,CACA,IAAIQ,IAAmB,EAAA5tB,EAAA6tB,cAAaf,GAAaK,IAAgBvwB,IACpC,OAAzBqsB,KACF2E,IAAmB,EAAAxqC,EAAA0qC,UACjBF,IAAoB,MACpB3E,IAAwB,QAI5B,MAAMnmB,mBAAEA,KAAuB,EAAAlD,EAAAmD,iBAAgB,CAC7C5B,OAAQ0pB,GACRkD,qBAAqB,IAEjBC,GACJ/B,KAA2BpqB,GAAkB/uB,QACzC+uB,GACAiB,GAAmB/xB,MAAK,EAAG+B,cACzB,EAAAitB,EAAAkE,wBAAuBnxB,EAASm5C,MAGlC3oB,GAAoB0qB,IAAgBvyB,GAAUjF,gBAC9Cy3B,IACJnrB,cAAkB,EAAlBA,GAAoBhrB,UACpB,EAAAkoB,EAAA8E,iBACExB,GAAkBL,SAAW,MAC7BK,GAAkBmB,UAClBypB,QAAQ,GACNC,GACJrrB,IAAsBkrB,KAAiBxhD,UAEnC4hD,IAAc,EAAArG,EAAAsG,mCAAkC33B,cAAe,EAAfA,GAAiB43B,MACjEC,GAAeH,KAAe,EAAApG,EAAAwG,oBAAmBJ,IACjDK,GACJF,KACAjrB,cAAiB,EAAjBA,GAAmBmB,YAAaj4B,YAChC,EAAAwzB,EAAA8E,iBAAgBypB,GAAcjrB,GAAkBmB,UAAUypB,QAAQ,GAC9DxxB,GAAahG,cAAe,EAAfA,GAAiBiG,IAE9B+xB,IAAwB,EAAAllD,EAAAmlD,UAAQ,KAC7B,EAAAv0B,EAAAw0B,wBAAuB,CAC5B7sB,UACAnF,SAAU6X,GACN4Y,GACAzwB,GACJC,kBACAhuB,mBACA6tB,cACA2F,qBAAsBqoB,GACtBviC,WACA0mC,6BACE13B,IACAF,KACAyL,cAAoB,EAApBA,GAAsBuF,aACxBijB,wBACA/B,mCAED,CACDpnB,GACAnF,GACAywB,GACA5Y,GACA5X,GACAhuB,GACA6tB,GACAguB,GACAviC,GACAua,cAAoB,EAApBA,GAAsBuF,YACtBijB,GACA/zB,GACAF,GACAkyB,KAGI2F,GAA6BJ,GAAsB39C,MACtDg+C,GACCA,EAAuBC,QAAUvzB,GAAUwzB,cAGzCC,yBACJA,GAAwBC,uBACxBA,GAAsBC,sBACtBA,GAAqB9N,mBACrBA,GAAkB+N,oBAClBA,GAAmBC,kBACnBA,GAAiBC,iBACjBA,GAAgBoU,mBAChBA,IACE7U,GAEJ,IAAIU,UAAEA,GAASC,SAAEA,GAAQC,UAAEA,GAASC,SAAEA,KACpC,EAAAv1B,EAAAkC,kCAAiC,CAC/BC,SAAUqwB,GACVlwB,cACAE,SAAU6X,GACN4Y,GACAzwB,GACJ/tB,mBACAguB,kBACA+tB,qBACA9tB,cACAE,aAAcsyB,GACdryB,aAAcxB,GAAUwB,aACxB9U,WACA+iC,wBACAjC,0BAEJkD,GAAyBC,kBAAoBx/C,OAAO+iD,IACpDxD,GAAyBE,kBAAoBz/C,OAAO8iD,IAEpD,MAAME,IAAoB,EAAAx1B,EAAAkC,kCAAiC,CACzDC,SAAUuwB,GACVpwB,cACAE,SAAUuwB,IAAgBvwB,GAC1B/tB,mBACAguB,kBACA+tB,qBACA9tB,cACAE,aAAcsyB,GACdryB,aAAcxB,GAAUwB,aACxB9U,WACA+iC,wBACAjC,0BAEF,IACEuG,UAAWK,GACXJ,SAAUK,GACVJ,UAAWK,GACXJ,SAAUK,IACRJ,GAIJ,GAHAzD,GAAyBG,sBAAwB1/C,OAAOojD,IACxD7D,GAAyBI,sBAAwB3/C,OAAOmjD,IAGtD14B,IACAJ,IADAI,MAEAqL,OAAsBuF,YACtB,KAAAgoB,GACA,MAAME,GACJztB,cAAoB,EAApBA,GAAsBuF,YAAYmoB,eACjC1tB,UAAoC,QAAhButB,GAApBvtB,GAAsB2tB,sBAAc,IAAAJ,QAAA,EAApCA,GAAsCG,cAAe,GAClDE,EACJH,EAA0B3E,GAAmBoY,sBAC5CpU,aAAWC,YAAUC,aAAWC,cAAa,EAAAv1B,EAAAo2B,2BAA0B,CACxEroC,WACAtZ,mBACAguB,kBACA+tB,qBACAM,wBACAuF,YAAaN,KAEfhE,GAAyBK,eAAiB5/C,OAAO+iD,IACjDxD,GAAyBM,eAAiB7/C,OAAO8iD,IACjDvD,GAAyBuE,cACvBhuB,cAAoB,EAApBA,GAAsBuF,YAAY0oB,WAElCnB,UAAWK,GACXJ,SAAUK,GACVJ,UAAWK,GACXJ,SAAUK,KACR,EAAA51B,EAAAo2B,2BAA0B,CAC5BroC,WACAtZ,mBACAguB,kBACA+tB,qBACAM,wBACAuF,YAAaH,KAEfnE,GAAyBO,mBAAqB9/C,OAAOojD,IACrD7D,GAAyBQ,mBAAqB//C,OAAOmjD,GACvD,CAEA,MAAMa,GAAY,IAAI1xB,EAAAt1B,QAAU6xB,GAAUwB,cACpC4zB,GAAU,IAAI3xB,EAAAt1B,QAAU6xB,GAAUsB,MAAM9wB,OAAS,EAAG,IAAI6kD,KAC5D,IAAI5xB,EAAAt1B,QAAUgkD,GAAkB,KAG5BmD,KACHjuB,cAAkB,EAAlBA,GAAoBhrB,SAAUkgB,KAC/B44B,GAAUxgC,GAAG,IAAI8O,EAAAt1B,QAAU05B,GAAkBL,SAAW,QAEpD+tB,GAAkBH,GAAQzgC,GAAG,IAAI8O,EAAAt1B,QAAU22B,IAAc,QAEzD0wB,GAAqBF,IACvB,EAAA/wB,EAAAuhB,kCACE,EAAAvhB,EAAA8E,iBAAgB8rB,GAAWttB,GAAkBmB,UAC1CysB,MAAMjD,IACNr+C,SAAS,IACZ,GAEF,KAEEuhD,GAAmBH,IACrB,EAAAhxB,EAAAuhB,iCACEsP,GACGK,MAAM3wB,GAAY,IAClByR,IAAI,sBAAuB,IAC3BpiC,SAAS,IACZ,GAEF,KAEJ,IAAIwhD,GACAvM,UAAsByG,OAAwB+F,mBAChDD,IAAsB,EAAAhuC,EAAAkuC,gBACpBhG,GAAuB+F,iBACrB/F,GAAuBiG,oBAI7B,MAAME,IAAmB,EAAAl8C,EAAAsR,aAAYuP,EAAAs7B,wBAAyBvyB,EAAA+B,UAC9D,EAAA13B,EAAA6W,YAAU,KACJwkC,GACEkM,GACFx6C,GAAS,EAAA6f,EAAAuP,kBAAgB,IAChB3N,KAAiB+4B,IAC1Bx6C,GAAS,EAAA6f,EAAAuP,kBAAgB,IAElBorB,IAAsBC,GAC/Bz6C,GAAS,EAAA6f,EAAAuP,kBAAgB,KAChB3N,IAAiB+4B,IAAuBC,IACjDz6C,GAAS,EAAA6f,EAAAuP,kBAAgB,GAC3B,GACC,CACDorB,GACAC,GACAh5B,GACAzhB,EACAsuC,MAGF,EAAAr7C,EAAA6W,YAAU,KACR,MACMwjD,EADcl0D,KAAKmY,MACkBiiC,GAEzC8Z,EAAuBn3B,KACtB82B,GAEDC,IAAyB,GACzBltD,GAAS,EAAAf,EAAAsuD,uBACAD,EAAuBn3B,KAChCn2B,GAAS,EAAAf,EAAAsnC,kBAAiBziB,EAAAgE,uBAC1B3lB,EAAQC,KAAK9B,EAAAugC,mBACf,GACC,CACD2S,GACAyZ,EACAjtD,EACAmC,EACAg0B,MAGF,EAAAljC,EAAA6W,YAAU,MACH0oC,IAAyB0F,IAC5BzF,GAAyByF,GAC3B,GACC,CAAC1F,GAAuB0F,KAG3B,MAAMsV,KACF1sC,KAAoCJ,KACtCk6B,GAGI6S,GAA6Bnf,IAAsBuM,GAGnDO,IACH35B,IACCi5B,IACA8S,IACAC,MACDlb,GAEGjyB,IAAqB,EAAAthB,EAAAsR,aAAYpR,EAAAqhB,kBACjCC,IAAqB,EAAAxhB,EAAAsR,aAAYpR,EAAAuhB,uBAEjCyc,GAAiBrpC,OAAO0lB,OAAOiS,IAAQjqB,OACvC85C,IAA6B,EAAApoD,EAAAirB,UAC7Bo9B,IAAkB,EAAAroD,EAAAmlD,UAAQ,KACvB,CACLh3B,WAAY23B,GACZz3B,kBAAmB03B,GACnBz3B,SAAUq3B,GACV2C,gBAAiB1C,GACjBr3B,aAAc5B,cAAW,EAAXA,GAAa6B,aAC3BC,SAAU9B,cAAW,EAAXA,GAAa8B,SACvBC,gBAA2C,KAA1B/B,cAAW,EAAXA,GAAa8B,UAC9BunB,cAAerpB,cAAW,EAAXA,GAAa47B,aAC5BC,kBAAmBhH,cAAQ,EAARA,GAAUiE,WAC7BgD,iBAAkBxe,GAClBtb,mBAAoBtB,GACpBuB,qBAAsBrB,GACtBsB,YAAalB,GACbmB,oBAAqBjB,GACrBkB,gBAAiBtB,MAElB,CACDq4B,GACAC,GACAJ,GACAC,GACAj5B,cAAW,EAAXA,GAAa6B,aACb7B,cAAW,EAAXA,GAAa8B,SACb9B,cAAW,EAAXA,GAAa47B,aACb/G,cAAQ,EAARA,GAAUiE,WACVxb,GACA5c,GACAE,GACAI,GACAE,GACAJ,KA+BIgtC,GAA4B,KAChC/zD,EAAW,CACTI,MAAO,0BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACHgB,uBAAwB9J,KAA0B0F,GAClDqE,0BACE/J,KAA0B0F,GAAgB,KAAOA,KAErD,EAEEyD,IAA8B,EAAA1oD,EAAA0W,cAAY,KAC9ChQ,EAAW,CACTI,MAAO,sBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACHM,aAAc3C,KAEhB,GACD,CAACt/C,EAAY2hD,GAAiBrC,KAC3B4C,IAAgC,EAAA5oD,EAAA0W,cAAY,KAChDhQ,EAAW,CACTI,MAAO,yBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACHrS,cAAe6J,GAAmBrQ,KAEpC,GACD,CACD9oC,EACA2hD,GACAxI,GACArQ,MAGF,EAAAxvC,EAAA6W,YAAU,MAELuxC,GAA2BlzB,SAC5B,CACE4wB,GACAC,GACAJ,GACAC,GACAj5B,GACA60B,GACAvX,GACA+b,IACAt+B,OAAOmhC,GAAgB,OAARA,GAAgBA,IAAQ7lD,cAEzColD,GAA2BlzB,SAAU,EACrCwzB,KACF,GACC,CACD/7B,GACA60B,GACAvX,GACA+b,GACAL,GACAC,GACAE,GACAC,GACA2C,KAGF,MAAM1e,GAAc/X,GAAUyY,IAuCxByf,GAAgCxF,GAClCtkD,EAAE,8BAA+B,CAACylD,KAClCzlD,EAAE,4BAA6B,CAC7BL,EAAAI,QAAAqF,cAAA,QAAMjD,IAAI,8BAA8BoD,UAAU,oBAC/C6hD,IAAsBG,IAAuBD,IAEhDF,IAAwB3B,KAAsBztB,GAAkBjK,OAC5D03B,GACAztB,GAAkBjK,SAItBg8B,GAAsBn4B,UAAwB,QAAf4sB,EAAT5sB,GAAWo4B,qBAAa,IAAAxL,OAAA,EAAxBA,EAA0ByL,OAChDC,IAA4B,EAAAp0B,EAAAqF,aAAY4uB,KAG9C,EAAApqD,EAAA6W,YAAU,KAENkpC,IACAwK,KAA8BjM,EAAA8B,mBAAmBE,QACjD8J,KAAwB9L,EAAA8B,mBAAmBC,MAE3CL,IAA+B,EACjC,GACC,CACDoK,GACArK,GACAwK,KAGF,IAAImQ,GAAoC,KACxC,MAAMjQ,IAA0B,EAAAn0B,EAAAuF,mBAC9B5J,UAAwB,QAAf6sB,EAAT7sB,GAAWo4B,qBAAa,IAAAvL,OAAA,EAAxBA,EAA0B4L,oBAAqB,EAC/C,CAAE/uB,UAAU,IAERgvB,IAA+B,EAAAr0B,EAAAuF,mBACnC5J,UAAwB,QAAf8sB,EAAT9sB,GAAWo4B,qBAAa,IAAAtL,OAAA,EAAxBA,EAA0B6L,yBAA0B,EACpD,CAAEjvB,UAAU,IAKRkvB,IACHJ,KACAE,IACDjgD,QAAQunB,UAAwB,QAAf+sB,EAAT/sB,GAAWo4B,qBAAa,IAAArL,OAAA,EAAxBA,EAA0B8L,kBAEpC,IAAIC,GAA4B,EAC5B94B,UAAwB,QAAfgtB,EAAThtB,GAAWo4B,qBAAa,IAAApL,GAAxBA,EAA0B+L,QAC5BD,GAA4BE,WAC1B,IAAIv1B,EAAAt1B,QAAU6xB,GAAUo4B,cAAcW,MAAO,IAC1CtD,MAAM,EAAG,IACTwD,MAAM,IAAK,IACXxG,QAAQ,GACX,KAIJ,MAAM0G,IACHzG,KACAwD,IACDl2B,KACCkuB,GAA4B3sC,SAAS42C,KACpCS,IAEAO,KACFsP,GACE16D,EAAAI,QAAAqF,cAACi5C,EAAAt+C,QAAwB,CACvB6xB,UAAWA,GACX8zB,iBAAkBA,GAClBH,sBAAuBA,GACvB6E,wBAAyBA,GACzBE,6BAA8BA,GAC9BI,0BAA2BA,GAC3BF,8BAA+BA,GAC/BQ,uBAAwB,KACtBrL,IAA+B,EAAK,EAEtCsL,aAAcvL,MAKpB,MAAM4a,GACJvP,KAAqCrL,GAEjCwL,GACJpD,IAA2BiD,GAEvBI,GAAuB9gD,QAC3Bw0C,IACE1wB,IACAm2B,IACAgW,IACC1vB,IACC4Y,KAA6B7gD,YAC7BioC,KACc,OAAb7X,IAAqBA,KAAapwB,YACpC6qB,KACEmiB,IAAiC8R,KACnCj0B,IACCJ,MACCyL,aAAsBuF,cAyH7B,OAtHA,EAAAz+B,EAAA6W,YAAU,KACR,GACEgX,IACAJ,KACC85B,GACD,CACA,MAAMkE,EAAa,CACjBC,KAAMxJ,GAAoBwJ,KAC1Br3C,GAAI6tC,GAAoB7tC,GACxB5R,MAAOy/C,GAAoBz/C,MAC3BqiD,KAAM5C,GAAoB4C,KAC1B3xB,IAAK+uB,GAAoB/uB,IACzBxU,YAEFJ,EAAaC,aAAY,KAClBojC,IACH70C,GACE,EAAA6f,EAAA++B,gCAA+B,CAC7BzJ,oBAAqBuJ,EACrBv+B,mBACA0+B,0BAA0B,IAGhC,GACC5J,GAAmB6J,+BACtB9+C,GACE,EAAA6f,EAAA++B,gCAA+B,CAC7BzJ,oBAAqBuJ,EACrBv+B,mBACA0+B,0BAA0B,IAGhC,MAAWrtC,GACTE,cAAcF,GAEhB,MAAO,IAAME,cAAcF,EAAW,GAErC,CACDxR,EACA8gB,GACAJ,GACAy0B,GAAoB4C,KACpB5C,GAAoBwJ,KACpBxJ,GAAoBz/C,MACpBy/C,GAAoB/uB,IACpB+uB,GAAoB7tC,GACpBsK,GACAqjC,GAAmB6J,8BACnBtE,MAGF,EAAAvnD,EAAA6W,YAAU,KAER9J,GAAS,EAAAf,EAAA8/C,oCAAkC,IACvCtc,IACFoZ,IACF,GACC,CAAC77C,EAAU67C,GAA+BpZ,MAE7C,EAAAxvC,EAAA6W,YAAU,MAGLgX,IACDmiB,IACAkP,IAEAC,IAAiB,EACnB,GACC,CACDtxB,GACAmiB,GACAkP,MAGF,EAAAl/C,EAAA6W,YAAU,KACR,GAAKob,cAAW85B,0BACd,OAEyBtkD,WACzB,IACE,IAAIukD,EAAqB,MACrB9+B,KACF8+B,QAA2Bj/C,GACzB,EAAAf,EAAAigD,iBAAgB,CACdC,kBAAmB,IACdh/B,GACHkG,UAAU,EAAA7lB,EAAA4+C,cAAaj/B,GAAgBkG,UACvC3wB,MAAO,OAETkc,cAGJihC,GAAgCoM,IAElC,MAAMI,GAAa,EAAAxyC,EAAA0qC,UACjBryB,GAAU85B,0BACVC,GAEFtM,GAAwB0M,EAC1B,CAAE,MAAOnsD,IACP,EAAAi+C,EAAAmO,kBAAiBpsD,GACjBy/C,GAAwB,MACxBE,GAAgC,KAClC,GAEF0M,EAAoB,GACnB,CAACpK,GAAqBh1B,GAAiBvO,GAASsT,MAEnD,EAAAjyB,EAAA6W,YAAU,KACJwkC,IAEFtuC,EAAS,CACPvC,KAAM8uC,EAAAyC,6BACN5lC,QAAS,MAEb,GACC,CAACklC,GAAoBtuC,IAGtB/M,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,cACb5F,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,sBAAuB,CAC3C,4BAA6Bu6D,MAK7Bvb,IACEp/C,EAAAI,QAAAqF,cAAC04C,EAAA/9C,QAAkB,CACjBysD,cAAe3H,GACfnuC,QAAS,IAAMsoC,IAA2B,GAC1C/+B,SAAWklC,GAAUz4C,GAAS,EAAA6f,EAAAkgC,oBAAmBtH,IACjDuH,aAAcpH,GACdqH,aAAc/6B,GAAUwzB,WACxBwH,uBAvWoB,KAC9BvmD,EAAW,CACTI,MAAO,uBACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACH6E,sBAAsBj7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAC1D0H,6BACEl7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAChC,KACAxzB,cAAS,EAATA,GAAWwzB,aAEnB,EA4VQ2H,oBACEz/B,IAA4BF,KAMpCztB,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,8BAA+B,CACnD,qCAAsCmrD,MAGvCmP,IACCvS,IAA2BxD,KAC3B3kD,EAAAI,QAAAqF,cAACywB,EAAA91B,QAAiB,CAChBwgB,QAASupC,GACTpzC,QAEE,IAAMmjD,IAAiB,MAK/Bl6D,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,yCACb5F,EAAAI,QAAAqF,cAACu+B,EAAA5jC,QAAc,CACb4hC,YAAaue,GACbhe,YAAY,OACZO,SAAS,oBAGb9iC,EAAAI,QAAAqF,cAAC4xC,EAAAj3C,QAAgB,CACfo3C,aAAa,EAAA9gB,EAAA61B,gBAAexG,GAAkBF,IAC9CpO,eAAgBoO,GAChBryB,aAAcsyB,GACdnO,kBAAkB,EAAAjhB,EAAA61B,gBAChB3G,GACAF,IAEF7N,oBAAqB6N,GACrB9N,kBAAmB+N,GACnBjO,cAAeyiB,GACfriB,mBAAoBA,KAErBjqB,IACCJ,MACCyL,aAAsBuF,eACtB0pB,IACCnoD,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,EAAGE,aAAc,IAC/B/J,EAAAI,QAAAqF,cAAC6pB,EAAAlvB,QAAW,SAGfytB,KACAJ,KACDyL,cAAoB,EAApBA,GAAsBuF,eACtBz+B,EAAAI,QAAAqF,cAAA,OACEG,WAAW,EAAAnE,EAAArB,SAAW,iCAAkC,CACtD,6CACE8sB,MAAqBsB,IAAgB8wB,OAGzCt/C,EAAAI,QAAAqF,cAACqlC,EAAA1qC,QAAO,CACNupC,WAAY,CACVe,IAAKub,GACLpb,OAAQyb,IAEV1c,aAAc,CACZc,IAAKsb,GACLnb,OAAQwb,IAEVxc,sBACG3c,IAAoBsB,KAAiB8wB,GAExCxV,+BAAgCgc,GAChC/b,qBA7VwB,KAClC0wB,KACA1tD,GACE,EAAAf,EAAAu9C,WAAU,CACR1lD,KAAM,2BACNo3B,SAAUnB,GAAkBmB,SAC5BpT,OAAQ,WACR2hC,gBAAkBC,IAChB,MAAMC,EAC0B,KAA9BD,EACIlK,GACAkK,EACAE,GAAU,EAAAtL,EAAAuL,uBAAsB18B,GAAgB43B,KAAM,CAC1D4E,yBACAzuB,SAAUnB,GAAkBmB,WAI5ByuB,WAAwBp7C,QACxB4e,GAAgB43B,OAAS6E,GAEzB58C,GAAS,EAAAf,EAAA69C,wBAAuBF,GAClC,EAEFG,YAAavK,GACbwK,kBACExK,KAA0B0F,GAAgB,KAAOA,GACnDR,gBACAuF,YAAalwB,GAAkB1L,OAC/B67B,iBAAiB,EAAAzzB,EAAA8E,iBACfrJ,GAAUwB,aACVqG,GAAkBmB,YAGvB,EA4TS+O,YAAa7mC,OAAO6mC,IACpBC,eAAgBrpC,OAAO0lB,OAAOiS,IAAQjqB,OACtC45B,cAEE,KAncZxhC,EAAW,CACTI,MAAO,8BACPH,SAAU8b,EAAA7b,yBAAyBonB,MACnCC,oBAAqB,IAChBo6B,GACH6E,sBAAsBj7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAC1D0H,6BACEl7B,cAAS,EAATA,GAAWwzB,eAAejE,cAAQ,EAARA,GAAUiE,YAChC,KACAxzB,cAAS,EAATA,GAAWwzB,cA4bPpG,IAA2B,EAAK,EAGpCub,6BAA6B,EAAAhhD,EAAAihD,iBAC3BjX,IAEFkX,qBAAqB,EAAAlhD,EAAAihD,iBAAgBlX,QAK7C3jD,EAAAI,QAAAqF,cAACkqB,EAAAvvB,QAAW,CACVkgB,SAC6B,KACzB6+B,IAAiB,GACZ3wB,GAuBMy5B,GAAiB75B,SAAWiK,GAAkBjK,OACvDlf,EAAQC,KAAK9B,EAAA4C,eAEbf,EAAQC,KAAK,GAAG9B,EAAAq/C,eAAezE,GAAiB3+C,WAxB9CukB,IACAJ,IADAI,MAEAqL,OAAsBuF,YAEtB1xB,GACE,EAAA6f,EAAA+/B,kCAAiC,CAC/BzK,uBACAx7C,aACAwI,UACAyzC,+BAIJ51C,GACE,EAAA6f,EAAAggC,yBACE19C,EACAxI,EACAi8C,IAQR,EAGJ7yB,WAIMzvB,EAHJwtB,IACAJ,IACAm0B,GACM,gBACA,QAER7xB,YAAU,EACV1H,SAAUmjC,GACV5lD,UAAW2lD,GAAmB,gCAAkC,GAChEoC,eAAa,IAIrB,EA/jCA,IAAA3tD,EA0HqE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA1HrEY,CAAAC,EAAA,UAQAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACAo0B,EAAAl0B,EAAAF,EAAA,iBACAq0B,EAAAr0B,EAAA,UACAG,EAAAD,EAAAF,EAAA,eACA48C,EAAA58C,EAAA,mBAEAmrB,EAAAnrB,EAAA,0BACA68C,EAAA38C,EAAAF,EAAA,4BACAg1B,EAAAh1B,EAAA,mCACAu0B,EAAAv0B,EAAA,mCACA60B,EAAA70B,EAAA,8BACA88C,EAAA98C,EAAA,6CACAW,EAAAX,EAAA,iCACAwpC,EAAAtpC,EAAAF,EAAA,gBACAsrB,EAAAtrB,EAAA,8BA6BA2K,EAAA3K,EAAA,sBAYAoY,EAAApY,EAAA,wCAIA4K,EAAA5K,EAAA,oCACA0K,EAAA1K,EAAA,0BAQAg4C,EAAAh4C,EAAA,kCACA+L,EAAA/L,EAAA,qCAOA+1C,EAAA71C,EAAAF,EAAA,0BACA+8C,EAAA/8C,EAAA,4DACA40B,EAAA10B,EAAAF,EAAA,iEACAsvB,EAAAtvB,EAAA,iBAKA80B,EAAA90B,EAAA,kCACAuvB,EAAAvvB,EAAA,sCACAg9C,EAAAh9C,EAAA,oCACA0iC,EAAAxiC,EAAAF,EAAA,uBACAquB,EAAAnuB,EAAAF,EAAA,oBACAguB,EAAA9tB,EAAAF,EAAA,wCACA2tB,EAAAztB,EAAAF,EAAA,+BACAmhB,EAAAnhB,EAAA,4CACAi1B,EAAAj1B,EAAA,2CACAi9C,EAAAj9C,EAAA,gDACAk9C,EAAAl9C,EAAA,oDACAk1B,EAAAl1B,EAAA,wDAKAiM,EAAAjM,EAAA,oCACAo1B,EAAAp1B,EAAA,sCAIAsY,EAAAtY,EAAA,+CAQAo9C,EAAAl9C,EAAAF,EAAA,kCAAqE,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAErE,IAAIse,C,gWC5HJ,IAA+Clc,EAA/C04D,GAA+C14D,EAA/Cf,EAAA,0BAA+Ce,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,E,o2BCiChC,WAA4B,IAAA24D,EAAAC,EACzC,MAAMluD,GAAW,EAAAhB,EAAAyK,eACXtH,GAAU,EAAA/B,EAAA2X,cACVzkB,GAAI,EAAAL,EAAA2iB,YAAW8J,EAAAC,aACfiL,GAAS,EAAA5rB,EAAAsR,aAAYnR,EAAA0rB,WACrBhvB,GAAY,EAAAmD,EAAAsR,aAAYpR,EAAAY,eACtBvD,QAAS4xD,IAAiB,EAAA/tD,EAAAguD,aAC5BC,EAAgBxyD,EAAUsyD,EAAa10C,eACvC60C,EAAcD,SAA0B,QAAbJ,EAAbI,EAAeC,mBAAW,IAAAL,OAAA,EAA1BA,EAA4B7iB,KAAK,MAE/C5b,EAAQ5E,EAAOpwB,MAAK,EAAG+B,cAC3B,EAAAitB,EAAAkE,wBAAuBnxB,EAAS4xD,MAM5B5hC,mBAAEA,IAAuB,EAAAlD,EAAAmD,iBAAgB,CAC7C5B,OAAQ4E,EAAQ,CAACA,GAAS,KAEtBkoB,EAAoC,QAAxBwW,EAAG3hC,EAAmB,UAAE,IAAA2hC,OAAA,EAArBA,EAAuBtvD,OAEtC2vD,GAAuB,EAAAjlC,EAAAqF,oBAC3Ba,aAAK,EAALA,EAAOjzB,QACPm7C,EACAloB,aAAK,EAALA,EAAOnO,SAGHmtC,SAAEA,EAAU/wD,KAAMgxD,IAAgB,EAAAzvD,EAAAsR,aAAYnR,EAAAQ,oBAE7C+uD,EAAQC,IAAc,EAAAC,EAAAC,sBAE7B,IAAKr/B,EACH,OAAOv8B,EAAAI,QAAAqF,cAAC0H,EAAAiH,SAAQ,CAACC,GAAI,CAAEC,SAAUjH,EAAA4C,iBAEnC,OACEjQ,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACwF,UAAU,gCACb5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAAC4J,WAAY,EAAGF,YAAa,GAC/B9J,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHqQ,WAAYvX,EAAAwX,WAAW4C,KACvBwpB,OAAQ,EACR17B,UAAW,EACXf,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHC,MAAOvH,EAAAwH,UAAUC,YACjBxD,UAAU,wBAETvF,EAAE,gBACHL,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLoK,KAAK,OACLnB,QAAS,IAAM6F,EAAQC,KAAK,GAAG9B,EAAAq/C,eAAenwB,EAAMjzB,WACpD1D,UAAU,gCAGd5F,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,KAAMxlB,UAAW,GACrC7J,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHijB,MAAOnqB,EAAAmX,UAAUC,OACjBG,WAAYvX,EAAAwX,WAAW4C,KACvBwpB,OAAQ,EACRz7B,YAAa,EACbhB,QAASnH,EAAAoH,YAAYuJ,UACrBrJ,GAAG,KACHC,MAAOvH,EAAAwH,UAAUC,YACjBxD,UAAU,8BAET6+C,GAAgB,IAEnBzkD,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyJ,UAAW,GACd7J,EAAAI,QAAAqF,cAAC4oD,EAAAjuD,QAAS,CACRmJ,SAAU,GACVD,QAASizB,EAAMjzB,QACfuyD,MAAOT,EAAgBA,EAAcn0B,QAAU1K,EAAMs/B,UAI3D77D,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACH08B,OAAQ,EACR17B,UAAW,EACXf,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,iBAEhB4iD,GAAwB,IAE3Bt7D,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACH08B,OAAQ,EACR17B,UAAW,EACXf,QAASnH,EAAAoH,YAAY+tC,OACrB7tC,GAAG,KACHC,MAAOvH,EAAAwH,UAAUuP,gBACjBQ,WAAYvX,EAAAwX,WAAW4C,MAEtB1b,EAAE,yBAELL,EAAAI,QAAAqF,cAACwpB,EAAA7uB,QAAG,CAACyF,QAASlE,EAAAytB,QAAQC,MACpBrvB,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHs8B,OAAQ,EACR17B,UAAW,EACXX,MAAOvH,EAAAwH,UAAUC,YACjB0yD,aAAcn6D,EAAAo6D,aAAaC,UAC3Bp2D,UAAU,gCAET22B,EAAMjzB,SAETtJ,EAAAI,QAAAqF,cAAC6xC,EAAAl3C,QAAO,CACN2gC,SAAS,SACTjlB,MAAgBzb,EAATo7D,EAAW,oBAAyB,mBAC3Cx6B,mBAAmB,4BAEnBjhC,EAAAI,QAAAqF,cAACrD,EAAA+N,WAAU,CACTC,UAAU,OACVvM,KAAM43D,EAASr5D,EAAAkO,SAAS2rD,YAAc75D,EAAAkO,SAAS4rD,KAC/Ct2D,UAAU,0BACVyD,QAAS,IAAMqyD,EAAWn/B,EAAMjzB,SAChCJ,MAAOvH,EAAAqX,UAAUC,eACjBvI,KAAMtO,EAAAuO,eAAeC,OAI3B5Q,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAY+tC,OACrB7tC,GAAG,KACHs8B,OAAQ,EACR17B,UAAW,EACXX,MAAOvH,EAAAwH,UAAUuP,gBACjBQ,WAAYvX,EAAAwX,WAAW4C,MAEtB1b,EAAE,sBAELL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHs8B,OAAQ,EACR17B,UAAW,EACXX,MAAOvH,EAAAwH,UAAUC,aAEhBmzB,EAAMtB,UAETj7B,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAY+tC,OACrB7tC,GAAG,KACHs8B,OAAQ,EACR17B,UAAW,EACXX,MAAOvH,EAAAwH,UAAUuP,gBACjBQ,WAAYvX,EAAAwX,WAAW4C,MAEtB1b,EAAE,YAELL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHs8B,OAAQ,EACR17B,UAAW,EACXX,MAAOvH,EAAAwH,UAAUC,aAEhBoyD,IAAgBW,EAAAC,cAAcC,IAC3Bd,GAAYl7D,EAAE,kBACdA,EAAEm7D,IAEPH,GACCr7D,EAAAI,QAAAqF,cAAAzF,EAAAI,QAAA2P,SAAA,KACE/P,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAY+tC,OACrB7tC,GAAG,KACHs8B,OAAQ,EACR17B,UAAW,EACXX,MAAOvH,EAAAwH,UAAUuP,gBACjBQ,WAAYvX,EAAAwX,WAAW4C,MAEtB1b,EAAE,aAAa,KAElBL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHs8B,OAAQ,EACR17B,UAAW,EACXX,MAAOvH,EAAAwH,UAAUC,aAEhB,GAAGiyD,OAIVr7D,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLoK,KAAK,YACL5E,UAAU,mCACVyD,QAAS,KACP0D,GACE,EAAAf,EAAAu9C,WAAU,CAAE1lD,KAAM,0BAA2B04B,QAAOrtB,YACrD,GAGHlP,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACHC,QAASnH,EAAAoH,YAAYa,OACrBX,GAAG,KACHC,MAAOvH,EAAAwH,UAAU8P,gBAEhB5Y,EAAE,gBAMf,EA7OA,IAAAL,EA+B4C,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CA/B5CY,CAAAC,EAAA,UACAyK,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACA4K,EAAA5K,EAAA,iCACA2K,EAAA3K,EAAA,mBACAq6D,EAAAr6D,EAAA,kCACA+sD,EAAA7sD,EAAAF,EAAA,kCACAmrB,EAAAnrB,EAAA,uBACA80B,EAAA90B,EAAA,+BACA+0B,EAAA/0B,EAAA,kCACA0K,EAAA1K,EAAA,uBACA66D,EAAA76D,EAAA,qCACA+L,EAAA/L,EAAA,kCACAg2C,EAAA91C,EAAAF,EAAA,gCACAgtD,EAAA9sD,EAAAF,EAAA,+BACA2tB,EAAAztB,EAAAF,EAAA,4BACAK,EAAAL,EAAA,yCASAi1B,EAAAj1B,EAAA,wCACAc,EAAAd,EAAA,sCAK4C,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,C,qSC/B5C,IAAiDoC,EAAjDi6D,GAAiDj6D,EAAjDf,EAAA,6BAAiDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GAAAmJ,EAAApL,QAElCk8D,EAAAl8D,O,ypBCFf,IAAAqwB,EAAAnvB,EAAA,UACAtB,EAeyD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,KAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,KAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,MAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,KAAAe,IAAAnB,EAAAQ,IAAA,CAfzDY,CAAAC,EAAA,UACAC,EAAAC,EAAAF,EAAA,eACAc,EAAAd,EAAA,sCACAK,EAAAL,EAAA,yCACAgtD,EAAA9sD,EAAAF,EAAA,+BACA4iC,EAAA1iC,EAAAF,EAAA,mCACAqvB,EAAAnvB,EAAAF,EAAA,+BACA+L,EAAA/L,EAAA,kCACAW,EAAAX,EAAA,yCAKA2vB,EAAA3vB,EAAA,gCACAi7D,EAAAj7D,EAAA,mCACAg7D,EAAAh7D,EAAA,sBAAyD,SAAAE,EAAAa,GAAA,OAAAA,KAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,EAAA,UAAA/B,EAAAL,GAAA,sBAAAqC,QAAA,gBAAApC,EAAA,IAAAoC,QAAAjC,EAAA,IAAAiC,QAAA,OAAAhC,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAsC,EAAAF,EAAAG,EAAAC,GAAA,OAAAD,EAAA,SAAAE,GAAA,IAAAF,EAAA,SAAAG,EAAAC,GAAA,oBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,GAAAF,IAAAG,UAAA,KAAAC,EAAAJ,EAAA3B,KAAAyB,EAAAC,GAAA,+BAAAK,EAAA,OAAAA,EAAA,UAAAC,UAAA,kEAAAN,EAAAO,OAAAC,QAAAT,EAAA,CAAAU,CAAAX,EAAA,iCAAAF,IAAAW,OAAAX,EAAA,CAAAc,CAAAd,MAAAH,EAAAzB,OAAAC,eAAAwB,EAAAG,EAAA,CAAAC,QAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAG,GAAAC,EAAAJ,CAAA,CAE1C,MAAMm6D,UAAmBx8D,EAAAy8D,UAAU,WAAAl4D,IAAAC,GAAAC,SAAAD,GAAAjC,EAAAmC,KAAA,QA6BxC,CACNg4D,SAAU,GACVlxB,MAAO,OACRjpC,EAAAmC,KAAA,cAEY,GAAKnC,EAAAmC,KAAA,kBAEA,GAACnC,EAAAmC,KAAA,wBAEK,IAAI+rB,EAAAksC,cAAcp6D,EAAAmC,KAAA,gBAU3B+C,UACbX,EAAMg3C,iBACNh3C,EAAMq+B,kBAEN,MAAMu3B,SAAEA,GAAah4D,KAAK2H,OACpBiU,SAAEA,EAAQs8C,yBAAEA,GAA6Bl4D,KAAKc,MAEpD,GAAiB,KAAbk3D,IAAmBh4D,KAAKkpD,WAA5B,CAIAlpD,KAAKqK,SAAS,CAAEy8B,MAAO,OACvB9mC,KAAKkpD,YAAa,EAElB,UACQttC,EAASo8C,GACfh4D,KAAKG,QAAQ6B,WACX,CACEC,SAAU1E,EAAA2E,yBAAyBi2D,WACnC/1D,MAAO7E,EAAA8E,qBAAqB+1D,YAC5B71D,WAAY,CACV81D,gBAAiBr4D,KAAKq4D,kBAG1B,CACEC,YAAY,GAGlB,CAAE,OAAOp8C,QAAEA,IACTlc,KAAKq4D,iBAAmB,EAER,uBAAZn8C,UACIg8C,IACNl4D,KAAKG,QAAQ6B,WAAW,CACtBC,SAAU1E,EAAA2E,yBAAyBi2D,WACnC/1D,MAAO7E,EAAA8E,qBAAqBk2D,kBAC5Bh2D,WAAY,CACVi2D,OAAQ,qBACRH,gBAAiBr4D,KAAKq4D,oBAK5Br4D,KAAKqK,SAAS,CAAEy8B,MAAO5qB,IACvBlc,KAAKkpD,YAAa,CACpB,CApCA,CAoCA,GACD,CAtDD,yBAAAuP,GACE,MAAMC,WAAEA,EAAUluD,QAAEA,GAAYxK,KAAKc,MAEjC43D,GACFluD,EAAQC,KAAK9B,EAAA4C,cAEjB,CAkDA,iBAAAotD,EAAkBjvD,OAAEA,IAGlB,GAFA1J,KAAKqK,SAAS,CAAE2tD,SAAUtuD,EAAO3L,MAAO+oC,MAAO,OAE3Cp9B,EAAO22B,sBAAuB,CAChC,MAAMu4B,EAAUlvD,EACVmvD,EAAeD,EAAQv4B,wBACvBy4B,GAAc,EAAAlB,EAAAmB,qBAAoBH,EAASA,EAAQI,cACzDh5D,KAAKitB,sBAAsBgsC,KAAK,QAAS,CACvC/mB,EAAG2mB,EAAa5mB,KAAO6mB,EAAY7mB,KAAO2mB,EAAQM,WAClD/mB,EAAG0mB,EAAahjC,IAAMijC,EAAYjjC,IAAM+iC,EAAQO,WAEpD,CACF,CAEA,kBAAAC,GAWE,OACE99D,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLoK,KAAK,SACL,cAAY,gBACZhB,MAdU,CACZmY,gBAAiB,+BACjBzY,MAAO,+BACPW,UAAW,OACXF,OAAQ,OACRuP,WAAY,MACZiR,UAAW,OACX1gB,aAAc,SAQZ4e,UAAW3jB,KAAK2H,MAAMqwD,SACtB5zD,QAAQ,YACR4H,KAAK,QACLrH,QAAS3E,KAAKq5D,cAEbr5D,KAAKG,QAAQxE,EAAE,UAGtB,CAEA,MAAAiL,GACE,MAAMoxD,SAAEA,EAAQlxB,MAAEA,GAAU9mC,KAAK2H,OAC3BhM,EAAEA,GAAMqE,KAAKG,SACbm5D,UAAEA,GAAct5D,KAAKc,MAE3B,IAAIy4D,EAAe59D,EAAE,cAMrB,OAHA49D,EAAe59D,EAAE,oBAIfL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,0BACb5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,cAAc,cAAY,eACvC5F,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,iCACb5F,EAAAI,QAAAqF,cAACkrB,EAAAvwB,QAAM,CACLuxB,sBAAuBjtB,KAAKitB,sBAC5BjoB,MAAM,MACNC,OAAO,SAER,EAAA4yD,EAAA2B,UACCl+D,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,uCACZvF,EAAE,SAEH,MAENL,EAAAI,QAAAqF,cAACrD,EAAAyG,KAAI,CACH,cAAY,oBACZI,GAAG,KACHH,QAASnH,EAAAoH,YAAYgY,UACrBlX,UAAW,EACXX,MAAOvH,EAAAwH,UAAUuP,iBAEhBrY,EAAE,gBAELL,EAAAI,QAAAqF,cAAA,WAAMpF,EAAE,kBACRL,EAAAI,QAAAqF,cAAA,QAAMG,UAAU,oBAAoB0a,SAAU5b,KAAKq5D,cACjD/9D,EAAAI,QAAAqF,cAACy+B,EAAA9jC,QAAS,CACRiG,GAAG,WACH,cAAY,kBACZq6B,MAAOrgC,EAAE,YACTmK,KAAK,WACL/H,MAAOi6D,EACPl2D,SAAWM,GAAUpC,KAAK24D,kBAAkBv2D,GAC5C0kC,MAAOA,EACPt0B,WAAS,EACTi5C,aAAa,mBACbtlD,MAAM,WACNy6B,WAAS,KAGZ5gC,KAAKo5D,qBACN99D,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,sBACb5F,EAAAI,QAAAqF,cAAC6oD,EAAAluD,QAAM,CACLoK,KAAK,OACLhI,IAAI,iBACJoD,UAAU,oBACVyD,QAAS,IAAM20D,KAEd39D,EAAE,oBAGPL,EAAAI,QAAAqF,cAAA,OAAKG,UAAU,wBACZvF,EAAE,WAAY,CACbL,EAAAI,QAAAqF,cAAA,KACEwS,KAAMgZ,EAAAoD,aACNjmB,OAAO,SACP+J,IAAI,sBACJ3V,IAAI,iBACJ6G,QAAS,KACP3E,KAAKG,QAAQ6B,WACX,CACEC,SAAU1E,EAAA2E,yBAAyBi2D,WACnC/1D,MAAO7E,EAAA8E,qBAAqButB,mBAC5BrtB,WAAY,CACVoU,IAAK4V,EAAAoD,eAGT,CACEE,gCAAiC,CAC/BtyB,EAAAuyB,uBAAuBC,YAG5B,GAGFwpC,OAOf,EACDzyD,EAAApL,QAAAo8D,EAAAj6D,EAtOoBi6D,EAAU,eACP,CACpB91D,WAAYnF,EAAAnB,QAAUqL,KACtBpL,EAAGkB,EAAAnB,QAAUqL,OACdlJ,EAJkBi6D,EAAU,YAMV,CAIjBttD,QAAS3N,EAAAnB,QAAU0L,OAAO6I,WAI1ByoD,WAAY77D,EAAAnB,QAAUwL,KAItBoyD,UAAWz8D,EAAAnB,QAAUqL,KAIrB6U,SAAU/e,EAAAnB,QAAUqL,KAIpBmxD,yBAA0Br7D,EAAAnB,QAAUqL,M,seC5CxC,IAciDpJ,EAdjD0J,EAAAzK,EAAA,eACA6L,EAAA7L,EAAA,oBACAsT,EAAAtT,EAAA,SACAiM,EAAAjM,EAAA,iCACAkM,EAAAlM,EAAA,iCACA+L,EAAA/L,EAAA,kCAIA0K,EAAA1K,EAAA,uBAKAg7D,GAAiDj6D,EAAjDf,EAAA,6BAAiDe,EAAAlC,WAAAkC,EAAA,CAAAjC,QAAAiC,GAmD/CmJ,EAAApL,SAEa,EAAAwU,EAAAO,SACbhI,EAAAiI,YACA,EAAArJ,EAAAK,UArDuBC,IACvB,MACEG,UAAU4wD,WAAEA,IACV/wD,EACJ,MAAO,CACL+wD,aACD,IAGyBrwD,IACnB,CACLoxD,kBAAoBzB,GAAa3vD,GAAS,EAAAf,EAAAmyD,mBAAkBzB,IAC5D0B,sBAAuB,IAAMrxD,GAAS,EAAAf,EAAAoyD,0BACtCxB,yBAA0B,KAAM,EAAA5wD,EAAA4wD,0BAAyB7vD,OAI1C,CAACsxD,EAAYC,EAAehyD,KAC7C,MAAM8xD,sBAEJA,EAAqBD,kBAErBA,KACGI,GACDD,GACEpvD,QAAEA,EAASoR,SAAUk+C,KAAmBC,GAAiBnyD,EAgB/D,MAAO,IACF+xD,KACAE,KACAE,EACHT,UAlBev2D,gBACT22D,IACNlvD,EAAQC,KAAK9B,EAAAqxD,sBAET,EAAAnxD,EAAAmC,wBAAyBlC,EAAAmC,wBAC3BuL,OAAOC,SAASwjD,uBAAuBtxD,EAAAqxD,oBACzC,EAaAp+C,SAAUk+C,GAVK/2D,iBACT02D,EAAkBzB,GACxBxtD,EAAQC,KAAK9B,EAAA4C,cAAc,GAS3Bf,UACD,IAGY,CAGbotD,EAAAl8D,Q,6QCtEK,SAA6Bk9D,EAASv8B,GAC3C,MAAMyH,EAAMosB,SAASnvD,cAAc,OACnC+iC,EAAIniC,GAAK,sBACTuuD,SAASgK,KAAKC,YAAYr2B,GAC1B,MAAMs2B,EAAW/jD,OAAOgkD,iBAAiBzB,GACzC90B,EAAIw2B,YAAc,IAAIr6D,MAAMo8B,EAAW,GAAGoX,KAAK,KAC/C,MAAM8mB,EAAOrK,SAASnvD,cAAc,QACpCw5D,EAAKD,YAAc,IACnBx2B,EAAIq2B,YAAYI,GAEhB,MAAMzB,EAAc,CAClBjjC,IAAK0kC,EAAKC,UAAYC,SAASL,EAASM,eAAgB,IACxDzoB,KAAMsoB,EAAKI,WAAaF,SAASL,EAASQ,gBAAiB,KAG7D,OADA1K,SAASgK,KAAKW,YAAY/2B,GACnBg1B,CACT,C,qRCqBO,SAA6BnxD,GAAgC,IAAAmzD,EAClE,MAAMC,EAAgBC,EAAiBrzD,GAEvC,IAAKozD,EACH,OAAO,EAGT,MAAME,EAA2C,QAA9BH,EAAGC,EAAcA,qBAAa,IAAAD,OAAA,EAA3BA,EAA6BI,iBAEnD,OAAOl1D,QAAQi1D,aAAa,EAAbA,EAAerxD,SAA6B,OAAlBqxD,CAC3C,E,+HA7CA,IAAAE,EAAAv+D,EAAA,YAOO,SAASw+D,EAAkBzzD,GAChC,OAAOA,EAAMG,SAASuzD,gBAAkB,CAAC,CAC3C,CAEO,MAAMC,EAA2Bx0D,EAAAw0D,6BAAG,EAAAH,EAAAI,gBACzCH,GACA,CAACI,EAAiCC,IAA4BA,IAC9D,CAACJ,EAAgBI,IAAoBJ,EAAeI,KAG/C,SAAST,EAAiBrzD,GAAgC,IAAA+zD,EAC/D,MAAMC,EAA6C,QAA3BD,EAAG/zD,EAAMi0D,0BAAkB,IAAAF,OAAA,EAAxBA,EAA0BG,OAErD,IAAKF,EACH,OAAOr9D,UAGT,MAAMqD,GAAEA,EAAEm6D,gBAAEA,GAAoBH,EAEhC,IAAKG,EACH,OAAOx9D,UAKT,OAFuB88D,EAAkBzzD,GAEnBhG,EACxB,CAcO,MAAMo6D,EAAmBj1D,EAAAi1D,qBAAG,EAAAZ,EAAAI,gBACjCD,GACCU,IAA0B,IAAAC,EACzB,MAAMf,EACJc,SAAoC,QAAfC,EAArBD,EAAuBjB,qBAAa,IAAAkB,OAAA,EAApCA,EAAsCf,iBAExC,MAA4B,OAArBA,EAA4B58D,UAAY48D,CAAgB,IAIhCp0D,EAAAo1D,wBAAG,EAAAf,EAAAI,gBACpCQ,GACCd,GACQA,aAAa,EAAbA,EAAennB,MAAM,EAAG,K,6VCnB5B,SAAqCnsC,GAC1C,OAAOw0D,EAAqBx0D,EAAOy0D,EAAAC,oBACrC,E,8BAEO,SAAqC10D,GAC1C,OAAOw0D,EAAqBx0D,EAAOy0D,EAAAE,oBACrC,E,+BApBO,SAAsC30D,GAC3C,OAAO40D,GAAa,EAAAh1D,EAAAU,4BAA2BN,GACjD,E,+BATO,SAAsCA,GAC3C,MAAM60D,GAAU,EAAAj1D,EAAAU,4BAA2BN,IACrC80D,IAAEA,EAAGC,QAAEA,GAAYC,EAAAC,eAEzB,OAAO52D,QAAQw2D,IAAYA,EAAQ12D,OAAS22D,GAAOD,EAAQ12D,OAAS42D,GACtE,EA3BA,IAAAC,EAAA//D,EAAA,yBAMAw/D,EAAAx/D,EAAA,+BAIA2K,EAAA3K,EAAA,eAMA,SAAS2/D,EAAaC,GACpB,MAAMK,OAAEA,GAAWF,EAAAG,eAEnB,OAAO92D,QAAQw2D,GAAWA,EAAQ12D,OAAS+2D,EAC7C,CAaA,SAASV,EACPx0D,EACAo1D,GAGA,OADiB,EAAAx1D,EAAAy1D,qBAAoBr1D,GACrByb,MAAMo5C,GACbD,EAAaC,IAAYO,EAAkBP,EAAQ53D,UAE9D,C,2RCjBO,SACL+C,EACAs1D,GAEA,MAAM/wB,UAAEA,GAAcvkC,EAAMu1D,cACtBC,EAAiBjxB,EAAU+wB,IAAY,CAAC,EAC9C,OAAO/gE,OAAO83B,KAAKmpC,GAAgBt7C,QAAQ/jB,GAAQq/D,EAAer/D,IACpE,E,iDA/BA,IAAAq9D,EAAAv+D,EAAA,YAUO,SAASwgE,EAAaz1D,EAAoBs1D,GAC/C,OAAOt1D,EAAMu1D,cAAcG,OAAOJ,IAAY,EAChD,CAEgCn2D,EAAAw2D,qBAAG,EAAAnC,EAAAI,iBACjC,CAAC5zD,EAAoBs1D,IAAoBG,EAAaz1D,EAAOs1D,KAC5DI,GAAWA,EAAOx7C,QAAQ07C,IAAWA,EAAMC,UAGhB12D,EAAA22D,mBAAG,EAAAtC,EAAAI,iBAC/B,CAAC5zD,EAAoBs1D,IAAoBG,EAAaz1D,EAAOs1D,KAC5DI,GAAWA,EAAOx7C,QAAQ07C,GAAUA,EAAMC,S,4TCrB7C,IAAArC,EAAAv+D,EAAA,YASA,MAAM8gE,EAAe/1D,GAAoBA,EAAMG,SAWlBhB,EAAA62D,kBAAG,EAAAxC,EAAAI,gBAC9B,CAACmC,IACA51D,GAAaA,EAAS81D,aAYkB92D,EAAA+2D,gCAAG,EAAA1C,EAAAI,gBAC5C,CAACmC,IACA51D,GAAaA,EAASg2D,2BAYKh3D,EAAAi3D,mBAAG,EAAA5C,EAAAI,gBAC/B,CAACmC,IACA51D,GAAaA,EAASk2D,a,i4BClDzB,IAAA7C,EAAAv+D,EAAA,YACAqhE,EAAArhE,EAAA,8CACAiM,EAAAjM,EAAA,WAEA,MAAMshE,cAAEA,GAAkBD,EAAAE,+BAA+BC,UAQnDV,EAAe/1D,GAAoBA,EAAMG,SAQlCu2D,EAAwBv3D,EAAAu3D,0BAAG,EAAAlD,EAAAI,gBACtC,CAACmC,IACA51D,GAAaA,EAASw2D,4BAoBzBx3D,EAAAy3D,4BAT4C58D,IACnC,EAAAkH,EAAA21D,yBACL,CAACH,IACAI,GACQA,EAAc57D,MAAM67D,GAAiBA,EAAa/8D,KAAOA,MAWzBmF,EAAA63D,kCAAG,EAAAxD,EAAAI,gBAC9C,CAACmC,IACA51D,GAAaA,EAAS82D,gCASuB93D,EAAA+3D,qCAAG,EAAA1D,EAAAI,gBACjD,CAAC8C,IACAI,GACQA,EACHA,EAAc58C,QAAQ68C,IAAkBA,EAAaI,SAAQl1D,OAC7D,IAUuC9C,EAAAi4D,oCAAG,EAAA5D,EAAAI,gBAChD,CAAC8C,IACAI,GACQA,EACHA,EAAc58C,QACX68C,IACEA,EAAaI,QACdJ,EAAa54D,OAASo4D,EAAcc,wBACtCp1D,OACF,IAUqC9C,EAAAm4D,kCAAG,EAAA9D,EAAAI,gBAC9C,CAAC8C,IACAI,GACQA,EACHA,EAAc58C,QACX68C,GACCA,EAAaI,QACbJ,EAAa54D,OAASo4D,EAAcc,wBACtCp1D,OACF,IAU+C9C,EAAAo4D,4CAAG,EAAA/D,EAAAI,gBACxD,CAAC8C,IACAI,GACQA,EACHA,EAAc58C,QACX68C,IACEA,EAAaI,QACdJ,EAAa54D,OAASo4D,EAAcc,wBACtCp1D,OACF,IAU6C9C,EAAAq4D,0CAAG,EAAAhE,EAAAI,gBACtD,CAAC8C,IACAI,GACQA,EACHA,EAAc58C,QACX68C,GACCA,EAAaI,QACbJ,EAAa54D,OAASo4D,EAAcc,wBACtCp1D,OACF,IAU6C9C,EAAAs4D,0CAAG,EAAAjE,EAAAI,gBACtD,CAACmC,IACA51D,GAAaA,EAASu3D,qCASwBv4D,EAAAw4D,sCAAG,EAAAnE,EAAAI,gBAClD,CAACmC,IACA51D,GAAaA,EAASy3D,gCASuBz4D,EAAA04D,qCAAG,EAAArE,EAAAI,gBACjD,CAACmC,IACA51D,GAAaA,EAAS23D,gCAYsB34D,EAAA44D,oCAAG,EAAAvE,EAAAI,gBAChD,CAACmC,IACA51D,GAAaA,EAAS63D,kCAYmB74D,EAAA84D,iCAAG,EAAAzE,EAAAI,gBAC7C,CAACmC,IACA51D,GAAaA,EAAS83D,kCAY6B94D,EAAA+4D,2CAAG,EAAA1E,EAAAI,gBACvD,CAACmC,IACA51D,GACQA,EAASg4D,yCAasBh5D,EAAAi5D,+BAAG,EAAA5E,EAAAI,gBAC3C,CAACmC,IACA51D,GAAaA,EAASk4D,4B,iWCxOzB,IAAA7E,EAAAv+D,EAAA,YAOA,MAAM8gE,EAAe/1D,GAAoBA,EAAMG,SAWLhB,EAAAm5D,+BAAG,EAAA9E,EAAAI,gBAC3C,CAACmC,IACA51D,GAAaA,EAASo4D,0BAYuBp5D,EAAAq5D,qCAAG,EAAAhF,EAAAI,gBACjD,CAACmC,IACA51D,GACQA,EAASs4D,+B,kXClCpB,IAAAjF,EAAAv+D,EAAA,YACA2K,EAAA3K,EAAA,eAgBO,MAAMyjE,EAA+Bv5D,EAAAu5D,iCAAG,EAAAlF,EAAAI,iBAJ/C,SAAyC5zD,GACvC,OAAOA,EAAMG,SAASw4D,iBAAmB,CAAC,CAC5C,IAIGC,GACsBrkE,OAAO83B,KAAKusC,GAG9BjhE,KAAKk9D,GACJtgE,OAAO83B,KAAKusC,EAA6B/D,IAAUl9D,KAAK2a,GACtDsmD,EAA6B/D,GAASviD,GAAS3a,KAAKkhE,IAAQ,IACvDA,EACHvmD,kBAILwmD,OACAA,OAEoB9gC,QAAO,CAAC+gC,EAAKF,KAClC,MAAMvmD,QAAEA,KAAYmmC,GAASogB,EAEvBG,EAAmBD,EAAIzmD,IAAY,CAAC,EAK1C,OAJAymD,EAAIzmD,GAAW0mD,EAEfA,EAAiBvgB,EAAKx7C,QAAQkd,eAAiBs+B,EAExCsgB,CAAG,GACT,CAAC,KAI2C55D,EAAA85D,wCAAG,EAAAzF,EAAAI,gBACpD8E,EACA94D,EAAAs5D,2BACA,CAACC,EAA8BC,IACtBD,EAA6BC,IAAmB,CAAC,G,0UCpD5D,IAAA5F,EAAAv+D,EAAA,YAEAokE,EAAApkE,EAAA,kBAIAiM,EAAAjM,EAAA,UAEO,MAAMqkE,EAAwBn6D,EAAAm6D,0BAAG,EAAA9F,EAAAI,gBACtCyF,EAAAE,+BACAF,EAAAG,iCACA,CAACC,EAAcC,KAAa,IACvBD,KACAC,MAIDC,GAAkC,EAAAnG,EAAAI,gBACtC0F,GACA,CAACzF,EAA0B+F,IAAsBA,IACjD,CAACC,EAAUD,IAAcC,EAASD,KAGAz6D,EAAA26D,yBAAG,EAAA54D,EAAA21D,yBACrC8C,GACCplD,GAAYA,G","file":"../metamask/ui-10.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport availableCurrencies from '../../../helpers/constants/available-conversions.json';\nimport {\n  TextVariant,\n  TextColor,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  AlignItems,\n} from '../../../helpers/constants/design-system';\nimport Dropdown from '../../../components/ui/dropdown';\nimport ToggleButton from '../../../components/ui/toggle-button';\nimport locales from '../../../../app/_locales/index.json';\nimport Jazzicon from '../../../components/ui/jazzicon';\nimport BlockieIdenticon from '../../../components/ui/identicon/blockieIdenticon';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\n\nimport {\n  getNumberOfSettingRoutesInTab,\n  handleSettingsRefs,\n} from '../../../helpers/utils/settings-search';\nimport { ThemeType } from '../../../../shared/constants/preferences';\nimport { Text, Box } from '../../../components/component-library';\n\nconst sortedCurrencies = availableCurrencies.sort((a, b) => {\n  return a.name.toLocaleLowerCase().localeCompare(b.name.toLocaleLowerCase());\n});\n\nconst currencyOptions = sortedCurrencies.map(({ code, name }) => {\n  return {\n    name: `${code.toUpperCase()} - ${name}`,\n    value: code,\n  };\n});\n\nconst localeOptions = locales.map((locale) => {\n  return {\n    name: `${locale.name}`,\n    value: locale.code,\n  };\n});\n\nexport default class SettingsTab extends PureComponent {\n  static contextTypes = {\n    t: PropTypes.func,\n    metricsEvent: PropTypes.func,\n    trackEvent: PropTypes.func,\n  };\n\n  static propTypes = {\n    setUseBlockie: PropTypes.func,\n    setCurrentCurrency: PropTypes.func,\n    warning: PropTypes.string,\n    updateCurrentLocale: PropTypes.func,\n    currentLocale: PropTypes.string,\n    useBlockie: PropTypes.bool,\n    currentCurrency: PropTypes.string,\n    nativeCurrency: PropTypes.string,\n    useNativeCurrencyAsPrimaryCurrency: PropTypes.bool,\n    setUseNativeCurrencyAsPrimaryCurrencyPreference: PropTypes.func,\n    hideZeroBalanceTokens: PropTypes.bool,\n    setHideZeroBalanceTokens: PropTypes.func,\n    lastFetchedConversionDate: PropTypes.number,\n    selectedAddress: PropTypes.string,\n    tokenList: PropTypes.object,\n    theme: PropTypes.string,\n    setTheme: PropTypes.func,\n  };\n\n  settingsRefs = Array(\n    getNumberOfSettingRoutesInTab(this.context.t, this.context.t('general')),\n  )\n    .fill(undefined)\n    .map(() => {\n      return React.createRef();\n    });\n\n  componentDidUpdate() {\n    const { t } = this.context;\n    handleSettingsRefs(t, t('general'), this.settingsRefs);\n  }\n\n  componentDidMount() {\n    const { t } = this.context;\n    handleSettingsRefs(t, t('general'), this.settingsRefs);\n  }\n\n  renderCurrentConversion() {\n    const { t } = this.context;\n    const { currentCurrency, setCurrentCurrency, lastFetchedConversionDate } =\n      this.props;\n\n    return (\n      <Box\n        ref={this.settingsRefs[0]}\n        className=\"settings-page__content-row\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n      >\n        <div className=\"settings-page__content-item\">\n          <span>{t('currencyConversion')}</span>\n          <span className=\"settings-page__content-description\">\n            {lastFetchedConversionDate\n              ? t('updatedWithDate', [\n                  new Date(lastFetchedConversionDate * 1000).toString(),\n                ])\n              : t('noConversionDateAvailable')}\n          </span>\n        </div>\n        <div className=\"settings-page__content-item\">\n          <div className=\"settings-page__content-item-col\">\n            <Dropdown\n              data-testid=\"currency-select\"\n              id=\"select-currency\"\n              options={currencyOptions}\n              selectedOption={currentCurrency}\n              onChange={(newCurrency) => {\n                setCurrentCurrency(newCurrency);\n                this.context.trackEvent({\n                  category: MetaMetricsEventCategory.Settings,\n                  event: MetaMetricsEventName.CurrentCurrency,\n                  properties: {\n                    current_currency: newCurrency,\n                  },\n                });\n              }}\n            />\n          </div>\n        </div>\n      </Box>\n    );\n  }\n\n  renderCurrentLocale() {\n    const { t } = this.context;\n    const { updateCurrentLocale, currentLocale } = this.props;\n    const currentLocaleMeta = locales.find(\n      (locale) => locale.code === currentLocale,\n    );\n    const currentLocaleName = currentLocaleMeta ? currentLocaleMeta.name : '';\n\n    return (\n      <Box\n        ref={this.settingsRefs[2]}\n        className=\"settings-page__content-row\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n      >\n        <div className=\"settings-page__content-item\">\n          <span className=\"settings-page__content-label\">\n            {t('currentLanguage')}\n          </span>\n          <span className=\"settings-page__content-description\">\n            {currentLocaleName}\n          </span>\n        </div>\n        <div className=\"settings-page__content-item\">\n          <div className=\"settings-page__content-item-col\">\n            <Dropdown\n              data-testid=\"locale-select\"\n              id=\"select-locale\"\n              options={localeOptions}\n              selectedOption={currentLocale}\n              onChange={async (newLocale) => updateCurrentLocale(newLocale)}\n            />\n          </div>\n        </div>\n      </Box>\n    );\n  }\n\n  renderHideZeroBalanceTokensOptIn() {\n    const { t } = this.context;\n    const { hideZeroBalanceTokens, setHideZeroBalanceTokens } = this.props;\n\n    return (\n      <Box\n        ref={this.settingsRefs[5]}\n        className=\"settings-page__content-row\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Row}\n        justifyContent={JustifyContent.spaceBetween}\n        alignItems={AlignItems.center}\n        id=\"toggle-zero-balance\"\n      >\n        <div className=\"settings-page__content-item\">\n          <span>{t('hideZeroBalanceTokens')}</span>\n        </div>\n\n        <div className=\"settings-page__content-item-col\">\n          <ToggleButton\n            value={hideZeroBalanceTokens}\n            onToggle={(value) => setHideZeroBalanceTokens(!value)}\n            offLabel={t('off')}\n            onLabel={t('on')}\n          />\n        </div>\n      </Box>\n    );\n  }\n\n  renderBlockieOptIn() {\n    const { t } = this.context;\n    const { useBlockie, setUseBlockie, selectedAddress, tokenList } =\n      this.props;\n\n    const getIconStyles = () => ({\n      display: 'block',\n      borderRadius: '16px',\n      width: '32px',\n      height: '32px',\n    });\n\n    return (\n      <Box\n        ref={this.settingsRefs[4]}\n        className=\"settings-page__content-row\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        id=\"blockie-optin\"\n      >\n        <div className=\"settings-page__content-item\">\n          <Text\n            variant={TextVariant.bodyMd}\n            as=\"h5\"\n            color={TextColor.textDefault}\n          >\n            {t('accountIdenticon')}\n          </Text>\n          <span className=\"settings-page__content-item__description\">\n            {t('jazzAndBlockies')}\n          </span>\n          <div className=\"settings-page__content-item__identicon\">\n            <button\n              data-testid=\"jazz_icon\"\n              onClick={() => setUseBlockie(false)}\n              className=\"settings-page__content-item__identicon__item\"\n            >\n              <div\n                className={classnames(\n                  'settings-page__content-item__identicon__item__icon',\n                  {\n                    'settings-page__content-item__identicon__item__icon--active':\n                      !useBlockie,\n                  },\n                )}\n              >\n                <Jazzicon\n                  id=\"jazzicon\"\n                  address={selectedAddress}\n                  diameter={32}\n                  tokenList={tokenList}\n                  style={getIconStyles()}\n                />\n              </div>\n              <Text\n                color={TextColor.textDefault}\n                variant={TextVariant.bodySm}\n                as=\"h6\"\n                marginTop={0}\n                marginRight={12}\n                marginBottom={0}\n                marginLeft={3}\n              >\n                {t('jazzicons')}\n              </Text>\n            </button>\n            <button\n              data-testid=\"blockie_icon\"\n              onClick={() => setUseBlockie(true)}\n              className=\"settings-page__content-item__identicon__item\"\n            >\n              <div\n                className={classnames(\n                  'settings-page__content-item__identicon__item__icon',\n                  {\n                    'settings-page__content-item__identicon__item__icon--active':\n                      useBlockie,\n                  },\n                )}\n              >\n                <BlockieIdenticon\n                  id=\"blockies\"\n                  address={selectedAddress}\n                  diameter={32}\n                  borderRadius=\"50%\"\n                />\n              </div>\n              <Text\n                color={TextColor.textDefault}\n                variant={TextVariant.bodySm}\n                as=\"h6\"\n                marginTop={3}\n                marginRight={0}\n                marginBottom={3}\n                marginLeft={3}\n              >\n                {t('blockies')}\n              </Text>\n            </button>\n          </div>\n        </div>\n      </Box>\n    );\n  }\n\n  renderUsePrimaryCurrencyOptions() {\n    const { t } = this.context;\n    const getPrimaryCurrencySettingForMetrics = (newCurrency) => {\n      this.context.trackEvent({\n        category: MetaMetricsEventCategory.Settings,\n        event: MetaMetricsEventName.UseNativeCurrencyAsPrimaryCurrency,\n        properties: {\n          use_native_currency_as_primary_currency: newCurrency,\n        },\n      });\n    };\n    const {\n      nativeCurrency,\n      setUseNativeCurrencyAsPrimaryCurrencyPreference,\n      useNativeCurrencyAsPrimaryCurrency,\n    } = this.props;\n    return (\n      <Box\n        ref={this.settingsRefs[1]}\n        className=\"settings-page__content-row\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n      >\n        <div className=\"settings-page__content-item\">\n          <span>{t('primaryCurrencySetting')}</span>\n          <div className=\"settings-page__content-description\">\n            {t('primaryCurrencySettingDescription')}\n          </div>\n        </div>\n        <div className=\"settings-page__content-item\">\n          <div className=\"settings-page__content-item-col\">\n            <div className=\"settings-tab__radio-buttons\">\n              <div className=\"settings-tab__radio-button\">\n                <input\n                  type=\"radio\"\n                  data-testid=\"toggle-native-currency\"\n                  id=\"native-primary-currency\"\n                  onChange={() => {\n                    setUseNativeCurrencyAsPrimaryCurrencyPreference(true);\n                    getPrimaryCurrencySettingForMetrics(true);\n                  }}\n                  checked={Boolean(useNativeCurrencyAsPrimaryCurrency)}\n                />\n                <label\n                  htmlFor=\"native-primary-currency\"\n                  className=\"settings-tab__radio-label\"\n                >\n                  {nativeCurrency}\n                </label>\n              </div>\n              <div className=\"settings-tab__radio-button\">\n                <input\n                  type=\"radio\"\n                  data-testid=\"toggle-fiat-currency\"\n                  id=\"fiat-primary-currency\"\n                  onChange={() => {\n                    setUseNativeCurrencyAsPrimaryCurrencyPreference(false);\n                    getPrimaryCurrencySettingForMetrics(false);\n                  }}\n                  checked={!useNativeCurrencyAsPrimaryCurrency}\n                />\n                <label\n                  htmlFor=\"fiat-primary-currency\"\n                  className=\"settings-tab__radio-label\"\n                >\n                  {t('fiat')}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Box>\n    );\n  }\n\n  renderTheme() {\n    const { t } = this.context;\n    const { theme, setTheme } = this.props;\n\n    const themesOptions = [\n      {\n        name: t('lightTheme'),\n        value: ThemeType.light,\n      },\n      {\n        name: t('darkTheme'),\n        value: ThemeType.dark,\n      },\n      {\n        name: t('osTheme'),\n        value: ThemeType.os,\n      },\n    ];\n\n    const onChange = (newTheme) => {\n      this.context.trackEvent({\n        category: MetaMetricsEventCategory.Settings,\n        event: 'Theme Changed',\n        properties: {\n          theme_selected: newTheme,\n        },\n      });\n      setTheme(newTheme);\n    };\n\n    return (\n      <Box\n        ref={this.settingsRefs[3]}\n        className=\"settings-page__content-row\"\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n      >\n        <div className=\"settings-page__content-item\">\n          <span>{this.context.t('theme')}</span>\n          <div className=\"settings-page__content-description\">\n            {this.context.t('themeDescription')}\n          </div>\n        </div>\n        <div className=\"settings-page__content-item\">\n          <div className=\"settings-page__content-item-col\">\n            <Dropdown\n              id=\"select-theme\"\n              options={themesOptions}\n              selectedOption={theme}\n              onChange={onChange}\n            />\n          </div>\n        </div>\n      </Box>\n    );\n  }\n\n  render() {\n    const { warning } = this.props;\n\n    return (\n      <div className=\"settings-page__body\">\n        {warning ? <div className=\"settings-tab__error\">{warning}</div> : null}\n        {this.renderCurrentConversion()}\n        {this.renderUsePrimaryCurrencyOptions()}\n        {this.renderCurrentLocale()}\n        {this.renderTheme()}\n        {this.renderBlockieOptIn()}\n        {this.renderHideZeroBalanceTokensOptIn()}\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport {\n  setCurrentCurrency,\n  setUseBlockie,\n  updateCurrentLocale,\n  setUseNativeCurrencyAsPrimaryCurrencyPreference,\n  setHideZeroBalanceTokens,\n  setParticipateInMetaMetrics,\n  setTheme,\n} from '../../../store/actions';\nimport {\n  getTokenList,\n  getPreferences,\n  getTheme,\n  getSelectedInternalAccount,\n} from '../../../selectors';\nimport { getProviderConfig } from '../../../ducks/metamask/metamask';\nimport SettingsTab from './settings-tab.component';\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    appState: { warning },\n    metamask,\n  } = state;\n  const { currentCurrency, useBlockie, currentLocale } = metamask;\n  const { ticker: nativeCurrency } = getProviderConfig(state);\n  const { address: selectedAddress } = getSelectedInternalAccount(state);\n  const { useNativeCurrencyAsPrimaryCurrency, hideZeroBalanceTokens } =\n    getPreferences(state);\n\n  const { lastFetchedConversionDate } = ownProps;\n  const tokenList = getTokenList(state);\n\n  return {\n    warning,\n    currentLocale,\n    currentCurrency,\n    nativeCurrency,\n    useBlockie,\n    useNativeCurrencyAsPrimaryCurrency,\n    hideZeroBalanceTokens,\n    lastFetchedConversionDate,\n    selectedAddress,\n    tokenList,\n    theme: getTheme(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentCurrency: (currency) => dispatch(setCurrentCurrency(currency)),\n    setUseBlockie: (value) => dispatch(setUseBlockie(value)),\n    updateCurrentLocale: (key) => dispatch(updateCurrentLocale(key)),\n    setUseNativeCurrencyAsPrimaryCurrencyPreference: (value) => {\n      return dispatch(setUseNativeCurrencyAsPrimaryCurrencyPreference(value));\n    },\n    setParticipateInMetaMetrics: (val) =>\n      dispatch(setParticipateInMetaMetrics(val)),\n    setHideZeroBalanceTokens: (value) =>\n      dispatch(setHideZeroBalanceTokens(value)),\n    setTheme: (val) => dispatch(setTheme(val)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsTab);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, matchPath, Redirect } from 'react-router-dom';\nimport classnames from 'classnames';\nimport TabBar from '../../components/app/tab-bar';\n\nimport {\n  ALERTS_ROUTE,\n  ADVANCED_ROUTE,\n  SECURITY_ROUTE,\n  GENERAL_ROUTE,\n  ABOUT_US_ROUTE,\n  SETTINGS_ROUTE,\n  NETWORKS_ROUTE,\n  CONTACT_LIST_ROUTE,\n  CONTACT_ADD_ROUTE,\n  CONTACT_EDIT_ROUTE,\n  CONTACT_VIEW_ROUTE,\n  DEVELOPER_OPTIONS_ROUTE,\n  EXPERIMENTAL_ROUTE,\n  ADD_NETWORK_ROUTE,\n  ADD_POPULAR_CUSTOM_NETWORK,\n  DEFAULT_ROUTE,\n} from '../../helpers/constants/routes';\n\nimport { getSettingsRoutes } from '../../helpers/utils/settings-search';\nimport {\n  ButtonIcon,\n  ButtonIconSize,\n  Icon,\n  IconName,\n  Box,\n  Text,\n} from '../../components/component-library';\nimport {\n  AlignItems,\n  Color,\n  Display,\n  FlexDirection,\n  TextVariant,\n} from '../../helpers/constants/design-system';\nimport MetafoxLogo from '../../components/ui/metafox-logo';\nimport { getEnvironmentType } from '../../../app/scripts/lib/util';\nimport { ENVIRONMENT_TYPE_POPUP } from '../../../shared/constants/app';\nimport SettingsTab from './settings-tab';\nimport AlertsTab from './alerts-tab';\nimport AdvancedTab from './advanced-tab';\nimport InfoTab from './info-tab';\nimport SecurityTab from './security-tab';\nimport ContactListTab from './contact-list-tab';\nimport DeveloperOptionsTab from './developer-options-tab';\nimport ExperimentalTab from './experimental-tab';\nimport SettingsSearch from './settings-search';\nimport SettingsSearchList from './settings-search-list';\n\nclass SettingsPage extends PureComponent {\n  static propTypes = {\n    addNewNetwork: PropTypes.bool,\n    addressName: PropTypes.string,\n    backRoute: PropTypes.string,\n    breadCrumbTextKey: PropTypes.string,\n    conversionDate: PropTypes.number,\n    currentPath: PropTypes.string,\n    history: PropTypes.object,\n    initialBreadCrumbKey: PropTypes.string,\n    initialBreadCrumbRoute: PropTypes.string,\n    isAddressEntryPage: PropTypes.bool,\n    isPopup: PropTypes.bool,\n    mostRecentOverviewPage: PropTypes.string.isRequired,\n    pathnameI18nKey: PropTypes.string,\n    toggleNetworkMenu: PropTypes.func.isRequired,\n  };\n\n  static contextTypes = {\n    t: PropTypes.func,\n  };\n\n  state = {\n    isSearchList: false,\n    lastFetchedConversionDate: null,\n    searchResults: [],\n    searchText: '',\n  };\n\n  componentDidMount() {\n    this.handleConversionDate();\n  }\n\n  componentDidUpdate() {\n    this.handleConversionDate();\n  }\n\n  handleConversionDate() {\n    const { conversionDate } = this.props;\n    if (conversionDate !== null) {\n      this.setState({ lastFetchedConversionDate: conversionDate });\n    }\n  }\n\n  handleClickSetting(setting) {\n    const { history } = this.props;\n    history.push(setting.route);\n    this.setState({\n      isSearchList: '',\n      searchResults: '',\n    });\n  }\n\n  render() {\n    const {\n      history,\n      backRoute,\n      currentPath,\n      mostRecentOverviewPage,\n      addNewNetwork,\n    } = this.props;\n\n    const { searchResults, isSearchList, searchText } = this.state;\n    const { t } = this.context;\n    const isPopup = getEnvironmentType() === ENVIRONMENT_TYPE_POPUP;\n\n    return (\n      <div\n        className={classnames('main-container settings-page', {\n          'settings-page--selected': currentPath !== SETTINGS_ROUTE,\n        })}\n      >\n        <Box\n          className=\"settings-page__header\"\n          padding={4}\n          paddingBottom={[2, 4]}\n        >\n          <div className=\"settings-page__header__title-container\">\n            {isPopup && (\n              <>\n                {currentPath === SETTINGS_ROUTE ? (\n                  <MetafoxLogo\n                    className=\"settings-page__header__title-container__metamask-logo\"\n                    unsetIconHeight\n                    onClick={async () => history.push(DEFAULT_ROUTE)}\n                    display={[Display.Flex, Display.None]}\n                  />\n                ) : (\n                  <ButtonIcon\n                    ariaLabel={t('back')}\n                    iconName={IconName.ArrowLeft}\n                    className=\"settings-page__header__title-container__back-button\"\n                    color={Color.iconDefault}\n                    onClick={() => history.push(backRoute)}\n                    display={[Display.Flex, Display.None]}\n                    size={ButtonIconSize.Sm}\n                  />\n                )}\n              </>\n            )}\n            {this.renderTitle()}\n            <Box\n              className=\"settings-page__header__title-container__search\"\n              display={[Display.Block]}\n            >\n              <SettingsSearch\n                onSearch={({ searchQuery = '', results = [] }) => {\n                  this.setState({\n                    isSearchList: searchQuery !== '',\n                    searchResults: results,\n                    searchText: searchQuery,\n                  });\n                }}\n                settingsRoutesList={getSettingsRoutes()}\n              />\n              {isSearchList && searchText.length >= 3 && (\n                <SettingsSearchList\n                  results={searchResults}\n                  onClickSetting={(setting) => this.handleClickSetting(setting)}\n                />\n              )}\n            </Box>\n            <ButtonIcon\n              className=\"settings-page__header__title-container__close-button\"\n              iconName={IconName.Close}\n              ariaLabel={t('close')}\n              onClick={() => {\n                if (addNewNetwork) {\n                  history.push(NETWORKS_ROUTE);\n                } else {\n                  history.push(mostRecentOverviewPage);\n                }\n              }}\n              size={ButtonIconSize.Sm}\n              marginLeft=\"auto\"\n            />\n          </div>\n        </Box>\n\n        <div className=\"settings-page__content\">\n          <div className=\"settings-page__content__tabs\">\n            {this.renderTabs()}\n          </div>\n          <div className=\"settings-page__content__modules\">\n            {this.renderSubHeader()}\n            {this.renderContent()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderTitle() {\n    const { t } = this.context;\n    const { isPopup, pathnameI18nKey, addressName } = this.props;\n    let titleText;\n    if (isPopup && addressName) {\n      titleText = t('details');\n    } else if (pathnameI18nKey && isPopup) {\n      titleText = t(pathnameI18nKey);\n    } else {\n      titleText = t('settings');\n    }\n\n    return (\n      <div className=\"settings-page__header__title-container__title\">\n        <Text variant={TextVariant.headingMd}>{titleText}</Text>\n      </div>\n    );\n  }\n\n  renderSubHeader() {\n    const { t } = this.context;\n    const {\n      currentPath,\n      isPopup,\n      isAddressEntryPage,\n      pathnameI18nKey,\n      addressName,\n      initialBreadCrumbRoute,\n      breadCrumbTextKey,\n      history,\n      initialBreadCrumbKey,\n    } = this.props;\n\n    let subheaderText;\n\n    if (isPopup && isAddressEntryPage) {\n      subheaderText = t('settings');\n    } else if (isAddressEntryPage) {\n      subheaderText = t('contacts');\n    } else if (initialBreadCrumbKey) {\n      subheaderText = t(initialBreadCrumbKey);\n    } else {\n      subheaderText = t(pathnameI18nKey || 'general');\n    }\n\n    return (\n      !currentPath.startsWith(NETWORKS_ROUTE) && (\n        <Box\n          className=\"settings-page__subheader\"\n          padding={4}\n          paddingLeft={6}\n          paddingRight={6}\n          display={Display.Flex}\n          flexDirection={FlexDirection.Row}\n          alignItems={AlignItems.center}\n        >\n          <Text\n            className={classnames({\n              'settings-page__subheader--link': initialBreadCrumbRoute,\n            })}\n            variant={TextVariant.headingSm}\n            onClick={() =>\n              initialBreadCrumbRoute && history.push(initialBreadCrumbRoute)\n            }\n          >\n            {subheaderText}\n          </Text>\n          {breadCrumbTextKey && (\n            <div className=\"settings-page__subheader--break\">\n              <span>{' > '}</span>\n              {t(breadCrumbTextKey)}\n            </div>\n          )}\n          {isAddressEntryPage && (\n            <div className=\"settings-page__subheader--break\">\n              <span>{' > '}</span>\n              {addressName}\n            </div>\n          )}\n        </Box>\n      )\n    );\n  }\n\n  renderTabs() {\n    const { history, currentPath } = this.props;\n    const { t } = this.context;\n\n    const tabs = [\n      {\n        content: t('general'),\n        icon: <Icon name={IconName.Setting} />,\n        key: GENERAL_ROUTE,\n      },\n      {\n        content: t('advanced'),\n        icon: <i className=\"fas fa-sliders-h\" />,\n        key: ADVANCED_ROUTE,\n      },\n      {\n        content: t('contacts'),\n        icon: <Icon name={IconName.Book} />,\n        key: CONTACT_LIST_ROUTE,\n      },\n      {\n        content: t('securityAndPrivacy'),\n        icon: <i className=\"fa fa-lock\" />,\n        key: SECURITY_ROUTE,\n      },\n      {\n        content: t('alerts'),\n        icon: <Icon name={IconName.Notification} />,\n        key: ALERTS_ROUTE,\n      },\n      {\n        content: t('experimental'),\n        icon: <Icon name={IconName.Flask} />,\n        key: EXPERIMENTAL_ROUTE,\n      },\n      {\n        content: t('about'),\n        icon: <Icon name={IconName.Info} />,\n        key: ABOUT_US_ROUTE,\n      },\n    ];\n\n    if (process.env.ENABLE_SETTINGS_PAGE_DEV_OPTIONS) {\n      tabs.splice(-1, 0, {\n        content: t('developerOptions'),\n        icon: <Icon name={IconName.CodeCircle} />,\n        key: DEVELOPER_OPTIONS_ROUTE,\n      });\n    }\n\n    return (\n      <TabBar\n        tabs={tabs}\n        isActive={(key) => {\n          if (key === GENERAL_ROUTE && currentPath === SETTINGS_ROUTE) {\n            return true;\n          }\n          if (\n            key === CONTACT_LIST_ROUTE &&\n            currentPath.includes(CONTACT_LIST_ROUTE)\n          ) {\n            return true;\n          }\n          return matchPath(currentPath, { exact: true, path: key });\n        }}\n        onSelect={(key) => history.push(key)}\n      />\n    );\n  }\n\n  renderContent() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path={GENERAL_ROUTE}\n          render={(routeProps) => (\n            <SettingsTab\n              {...routeProps}\n              lastFetchedConversionDate={this.state.lastFetchedConversionDate}\n            />\n          )}\n        />\n        <Route exact path={ABOUT_US_ROUTE} component={InfoTab} />\n        <Route exact path={ADVANCED_ROUTE} component={AdvancedTab} />\n        <Route exact path={ALERTS_ROUTE} component={AlertsTab} />\n        <Route\n          exact\n          path={ADD_NETWORK_ROUTE}\n          render={() => {\n            this.props.toggleNetworkMenu({ isAddingNewNetwork: true });\n            return <Redirect to={{ pathname: DEFAULT_ROUTE }} />;\n          }}\n        />\n        <Route\n          exact\n          path={NETWORKS_ROUTE}\n          render={() => {\n            this.props.toggleNetworkMenu();\n            return <Redirect to={{ pathname: DEFAULT_ROUTE }} />;\n          }}\n        />\n        <Route\n          exact\n          path={ADD_POPULAR_CUSTOM_NETWORK}\n          render={() => {\n            this.props.toggleNetworkMenu();\n            return <Redirect to={{ pathname: DEFAULT_ROUTE }} />;\n          }}\n        />\n        <Route exact path={SECURITY_ROUTE} component={SecurityTab} />\n        <Route exact path={EXPERIMENTAL_ROUTE} component={ExperimentalTab} />\n        {process.env.ENABLE_SETTINGS_PAGE_DEV_OPTIONS && (\n          <Route\n            exact\n            path={DEVELOPER_OPTIONS_ROUTE}\n            component={DeveloperOptionsTab}\n          />\n        )}\n        <Route exact path={CONTACT_LIST_ROUTE} component={ContactListTab} />\n        <Route exact path={CONTACT_ADD_ROUTE} component={ContactListTab} />\n        <Route\n          exact\n          path={`${CONTACT_EDIT_ROUTE}/:id`}\n          component={ContactListTab}\n        />\n        <Route\n          exact\n          path={`${CONTACT_VIEW_ROUTE}/:id`}\n          component={ContactListTab}\n        />\n        <Route\n          render={(routeProps) => (\n            <SettingsTab\n              {...routeProps}\n              lastFetchedConversionDate={this.state.lastFetchedConversionDate}\n            />\n          )}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default SettingsPage;\n","import { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getAddressBookEntryOrAccountName } from '../../selectors';\nimport { ENVIRONMENT_TYPE_POPUP } from '../../../shared/constants/app';\nimport { getEnvironmentType } from '../../../app/scripts/lib/util';\nimport { getMostRecentOverviewPage } from '../../ducks/history/history';\nimport {\n  isValidHexAddress,\n  isBurnAddress,\n} from '../../../shared/modules/hexstring-utils';\n\nimport {\n  ABOUT_US_ROUTE,\n  ADVANCED_ROUTE,\n  ALERTS_ROUTE,\n  CONTACT_LIST_ROUTE,\n  CONTACT_ADD_ROUTE,\n  CONTACT_EDIT_ROUTE,\n  CONTACT_VIEW_ROUTE,\n  DEVELOPER_OPTIONS_ROUTE,\n  GENERAL_ROUTE,\n  NETWORKS_FORM_ROUTE,\n  NETWORKS_ROUTE,\n  SECURITY_ROUTE,\n  SETTINGS_ROUTE,\n  EXPERIMENTAL_ROUTE,\n  ADD_NETWORK_ROUTE,\n  ADD_POPULAR_CUSTOM_NETWORK,\n} from '../../helpers/constants/routes';\nimport { getProviderConfig } from '../../ducks/metamask/metamask';\nimport { toggleNetworkMenu } from '../../store/actions';\nimport Settings from './settings.component';\n\nconst ROUTES_TO_I18N_KEYS = {\n  [ABOUT_US_ROUTE]: 'about',\n  [ADD_NETWORK_ROUTE]: 'networks',\n  [ADD_POPULAR_CUSTOM_NETWORK]: 'addNetwork',\n  [ADVANCED_ROUTE]: 'advanced',\n  [ALERTS_ROUTE]: 'alerts',\n  [CONTACT_ADD_ROUTE]: 'newContact',\n  [CONTACT_EDIT_ROUTE]: 'editContact',\n  [CONTACT_LIST_ROUTE]: 'contacts',\n  [CONTACT_VIEW_ROUTE]: 'viewContact',\n  [DEVELOPER_OPTIONS_ROUTE]: 'developerOptions',\n  [EXPERIMENTAL_ROUTE]: 'experimental',\n  [GENERAL_ROUTE]: 'general',\n  [NETWORKS_FORM_ROUTE]: 'networks',\n  [NETWORKS_ROUTE]: 'networks',\n  [SECURITY_ROUTE]: 'securityAndPrivacy',\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { location } = ownProps;\n  const { pathname } = location;\n  const { ticker } = getProviderConfig(state);\n  const {\n    metamask: { currencyRates },\n  } = state;\n\n  const conversionDate = currencyRates[ticker]?.conversionDate;\n\n  const pathNameTail = pathname.match(/[^/]+$/u)[0];\n  const isAddressEntryPage = pathNameTail.includes('0x');\n  const isAddContactPage = Boolean(pathname.match(CONTACT_ADD_ROUTE));\n  const isEditContactPage = Boolean(pathname.match(CONTACT_EDIT_ROUTE));\n  const isNetworksFormPage =\n    Boolean(pathname.match(NETWORKS_FORM_ROUTE)) ||\n    Boolean(pathname.match(ADD_NETWORK_ROUTE));\n  const addNewNetwork = Boolean(pathname.match(ADD_NETWORK_ROUTE));\n  const isAddPopularCustomNetwork = Boolean(\n    pathname.match(ADD_POPULAR_CUSTOM_NETWORK),\n  );\n\n  const isPopup = getEnvironmentType() === ENVIRONMENT_TYPE_POPUP;\n  const pathnameI18nKey = ROUTES_TO_I18N_KEYS[pathname];\n\n  let backRoute = SETTINGS_ROUTE;\n  if (isEditContactPage) {\n    backRoute = `${CONTACT_VIEW_ROUTE}/${pathNameTail}`;\n  } else if (isAddressEntryPage || isAddContactPage) {\n    backRoute = CONTACT_LIST_ROUTE;\n  } else if (isNetworksFormPage) {\n    backRoute = NETWORKS_ROUTE;\n  } else if (isAddPopularCustomNetwork) {\n    backRoute = NETWORKS_ROUTE;\n  }\n\n  let initialBreadCrumbRoute;\n  let initialBreadCrumbKey;\n\n  const addressName = getAddressBookEntryOrAccountName(\n    state,\n    !isBurnAddress(pathNameTail) &&\n      isValidHexAddress(pathNameTail, { mixedCaseUseChecksum: true })\n      ? pathNameTail\n      : '',\n  );\n\n  return {\n    addNewNetwork,\n    addressName,\n    backRoute,\n    conversionDate,\n    currentPath: pathname,\n    initialBreadCrumbKey,\n    initialBreadCrumbRoute,\n    isAddressEntryPage,\n    isPopup,\n    mostRecentOverviewPage: getMostRecentOverviewPage(state),\n    pathnameI18nKey,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggleNetworkMenu: (payload) => dispatch(toggleNetworkMenu(payload)),\n  };\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps),\n)(Settings);\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  TextColor,\n  Display,\n  FlexDirection,\n  BlockSize,\n  AlignItems,\n  TextAlign,\n  JustifyContent,\n  TextVariant,\n  IconColor,\n  FontWeight,\n} from '../../../helpers/constants/design-system';\nimport {\n  Modal,\n  ModalOverlay,\n  Text,\n  Box,\n  Button,\n  ButtonVariant,\n  ModalHeader,\n  ModalContent,\n  ButtonLink,\n  ButtonLinkSize,\n  Icon,\n  IconName,\n} from '../../../components/component-library';\nimport { setSmartTransactionsOptInStatus } from '../../../store/actions';\nimport { SMART_TRANSACTIONS_LEARN_MORE_URL } from '../../../../shared/constants/smartTransactions';\n\nexport type SmartTransactionsOptInModalProps = {\n  isOpen: boolean;\n  hideWhatsNewPopup: () => void;\n};\n\nconst LearnMoreLink = () => {\n  const t = useI18nContext();\n  return (\n    <ButtonLink\n      size={ButtonLinkSize.Inherit}\n      textProps={{\n        variant: TextVariant.bodyMd,\n        alignItems: AlignItems.flexStart,\n      }}\n      as=\"a\"\n      href={SMART_TRANSACTIONS_LEARN_MORE_URL}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t('learnMoreUpperCaseWithDot')}\n    </ButtonLink>\n  );\n};\n\nconst EnableSmartTransactionsButton = ({\n  handleEnableButtonClick,\n}: {\n  handleEnableButtonClick: () => void;\n}) => {\n  const t = useI18nContext();\n  return (\n    <Button\n      marginTop={8}\n      variant={ButtonVariant.Primary}\n      onClick={handleEnableButtonClick}\n      width={BlockSize.Full}\n    >\n      {t('enable')}\n    </Button>\n  );\n};\n\nconst NoThanksLink = ({\n  handleNoThanksLinkClick,\n}: {\n  handleNoThanksLinkClick: () => void;\n}) => {\n  const t = useI18nContext();\n  return (\n    <Button\n      marginTop={2}\n      type=\"link\"\n      variant={ButtonVariant.Link}\n      color={TextColor.textAlternative}\n      onClick={handleNoThanksLinkClick}\n      width={BlockSize.Full}\n      className=\"mm-smart-transactions-opt-in-modal__no-thanks-link\"\n    >\n      {t('noThanks')}\n    </Button>\n  );\n};\n\nconst Description = () => {\n  const t = useI18nContext();\n  return (\n    <Box display={Display.Flex} flexDirection={FlexDirection.Column}>\n      <Text variant={TextVariant.bodyMd} marginTop={4}>\n        {t('smartTransactionsDescription')}\n      </Text>\n      <Text variant={TextVariant.bodyMd} marginTop={4}>\n        {t('smartTransactionsDescription2', [<LearnMoreLink />])}\n      </Text>\n    </Box>\n  );\n};\n\nconst Benefit = ({ text, iconName }: { text: string; iconName: IconName }) => {\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      className=\"mm-smart-transactions-opt-in-modal__benefit\"\n      textAlign={TextAlign.Center}\n      alignItems={AlignItems.center}\n      justifyContent={JustifyContent.flexStart}\n    >\n      <Icon\n        name={iconName}\n        color={IconColor.primaryDefault}\n        className=\"mm-smart-transactions-opt-in-modal__icon\"\n      />\n      <Text\n        variant={TextVariant.bodySm}\n        fontWeight={FontWeight.Medium}\n        marginTop={1}\n      >\n        {text}\n      </Text>\n    </Box>\n  );\n};\n\nconst Benefits = () => {\n  const t = useI18nContext();\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      justifyContent={JustifyContent.center}\n      marginTop={4}\n      paddingLeft={5}\n      paddingRight={5}\n    >\n      <Benefit\n        text={t('smartTransactionsBenefit1')}\n        iconName={IconName.Confirmation}\n      />\n      <Benefit text={t('smartTransactionsBenefit2')} iconName={IconName.Coin} />\n      <Benefit\n        text={t('smartTransactionsBenefit3')}\n        iconName={IconName.Clock}\n      />\n    </Box>\n  );\n};\n\nexport default function SmartTransactionsOptInModal({\n  isOpen,\n  hideWhatsNewPopup,\n}: SmartTransactionsOptInModalProps) {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n\n  const handleEnableButtonClick = useCallback(() => {\n    dispatch(setSmartTransactionsOptInStatus(true));\n  }, [dispatch]);\n\n  const handleNoThanksLinkClick = useCallback(() => {\n    // Set the Smart Transactions opt-in status to false, so the opt-in modal is not shown again.\n    dispatch(setSmartTransactionsOptInStatus(false));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n    // If the Smart Transactions Opt-In modal is open, hide the What's New popup,\n    // because we don't want to show 2 modals at the same time.\n    hideWhatsNewPopup();\n  }, [isOpen, hideWhatsNewPopup]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleEnableButtonClick}\n      isClosedOnOutsideClick={false}\n      isClosedOnEscapeKey={false}\n      className=\"mm-modal__custom-scrollbar mm-smart-transactions-opt-in-modal\"\n      autoFocus={false}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader\n          alignItems={AlignItems.center}\n          justifyContent={JustifyContent.center}\n        >\n          {t('smartTransactionsOptItModalTitle')}\n        </ModalHeader>\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          paddingLeft={4}\n          paddingRight={4}\n        >\n          <Benefits />\n          <Description />\n          <EnableSmartTransactionsButton\n            handleEnableButtonClick={handleEnableButtonClick}\n          />\n          <NoThanksLink handleNoThanksLinkClick={handleNoThanksLinkClick} />\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n","export { default as SmartTransactionStatusPage } from './smart-transaction-status-page';\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  SmartTransactionStatuses,\n  SmartTransaction,\n} from '@metamask/smart-transactions-controller/dist/types';\n\nimport {\n  Box,\n  Text,\n  Icon,\n  IconName,\n  IconSize,\n  Button,\n  ButtonVariant,\n  ButtonSecondary,\n} from '../../../components/component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  BorderStyle,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextVariant,\n  TextColor,\n  FontWeight,\n  IconColor,\n  TextAlign,\n} from '../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport { getCurrentChainId, getFullTxData } from '../../../selectors';\nimport { getFeatureFlagsByChainId } from '../../../../shared/modules/selectors';\nimport { BaseUrl } from '../../../../shared/constants/urls';\nimport {\n  FALLBACK_SMART_TRANSACTIONS_EXPECTED_DEADLINE,\n  FALLBACK_SMART_TRANSACTIONS_MAX_DEADLINE,\n} from '../../../../shared/constants/smartTransactions';\nimport { hideLoadingIndication } from '../../../store/actions';\nimport { hexToDecimal } from '../../../../shared/modules/conversion.utils';\nimport { SimulationDetails } from '../../confirmations/components/simulation-details';\nimport { NOTIFICATION_WIDTH } from '../../../../shared/constants/notifications';\n\ntype RequestState = {\n  smartTransaction?: SmartTransaction;\n  isDapp: boolean;\n  txId?: string;\n};\n\nexport type SmartTransactionStatusPageProps = {\n  requestState: RequestState;\n  onCloseExtension: () => void;\n  onViewActivity: () => void;\n};\n\nexport const showRemainingTimeInMinAndSec = (\n  remainingTimeInSec: number,\n): string => {\n  if (!Number.isInteger(remainingTimeInSec)) {\n    return '0:00';\n  }\n  const minutes = Math.floor(remainingTimeInSec / 60);\n  const seconds = remainingTimeInSec % 60;\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\n\nconst getDisplayValues = ({\n  t,\n  countdown,\n  isSmartTransactionPending,\n  isSmartTransactionTakingTooLong,\n  isSmartTransactionSuccess,\n  isSmartTransactionCancelled,\n}: {\n  t: ReturnType<typeof useI18nContext>;\n  countdown: JSX.Element | undefined;\n  isSmartTransactionPending: boolean;\n  isSmartTransactionTakingTooLong: boolean;\n  isSmartTransactionSuccess: boolean;\n  isSmartTransactionCancelled: boolean;\n}) => {\n  if (isSmartTransactionPending && isSmartTransactionTakingTooLong) {\n    return {\n      title: t('smartTransactionTakingTooLong'),\n      description: t('smartTransactionTakingTooLongDescription', [countdown]),\n      iconName: IconName.Clock,\n      iconColor: IconColor.primaryDefault,\n    };\n  } else if (isSmartTransactionPending) {\n    return {\n      title: t('smartTransactionPending'),\n      description: t('stxEstimatedCompletion', [countdown]),\n      iconName: IconName.Clock,\n      iconColor: IconColor.primaryDefault,\n    };\n  } else if (isSmartTransactionSuccess) {\n    return {\n      title: t('smartTransactionSuccess'),\n      iconName: IconName.Confirmation,\n      iconColor: IconColor.successDefault,\n    };\n  } else if (isSmartTransactionCancelled) {\n    return {\n      title: t('smartTransactionCancelled'),\n      description: t('smartTransactionCancelledDescription', [countdown]),\n      iconName: IconName.Danger,\n      iconColor: IconColor.errorDefault,\n    };\n  }\n  // E.g. reverted or unknown statuses.\n  return {\n    title: t('smartTransactionError'),\n    description: t('smartTransactionErrorDescription'),\n    iconName: IconName.Danger,\n    iconColor: IconColor.errorDefault,\n  };\n};\n\nconst useRemainingTime = ({\n  isSmartTransactionPending,\n  smartTransaction,\n  stxMaxDeadline,\n  stxEstimatedDeadline,\n}: {\n  isSmartTransactionPending: boolean;\n  smartTransaction?: SmartTransaction;\n  stxMaxDeadline: number;\n  stxEstimatedDeadline: number;\n}) => {\n  const [timeLeftForPendingStxInSec, setTimeLeftForPendingStxInSec] =\n    useState(0);\n  const [isSmartTransactionTakingTooLong, setIsSmartTransactionTakingTooLong] =\n    useState(false);\n  const stxDeadline = isSmartTransactionTakingTooLong\n    ? stxMaxDeadline\n    : stxEstimatedDeadline;\n\n  useEffect(() => {\n    if (!isSmartTransactionPending) {\n      return;\n    }\n\n    const calculateRemainingTime = () => {\n      const secondsAfterStxSubmission = smartTransaction?.creationTime\n        ? Math.round((Date.now() - smartTransaction.creationTime) / 1000)\n        : 0;\n\n      if (secondsAfterStxSubmission > stxDeadline) {\n        setTimeLeftForPendingStxInSec(0);\n        if (!isSmartTransactionTakingTooLong) {\n          setIsSmartTransactionTakingTooLong(true);\n        }\n        return;\n      }\n\n      setTimeLeftForPendingStxInSec(stxDeadline - secondsAfterStxSubmission);\n    };\n\n    const intervalId = setInterval(calculateRemainingTime, 1000);\n    calculateRemainingTime();\n\n    // eslint-disable-next-line consistent-return\n    return () => clearInterval(intervalId);\n  }, [\n    isSmartTransactionPending,\n    isSmartTransactionTakingTooLong,\n    smartTransaction?.creationTime,\n    stxDeadline,\n  ]);\n\n  return {\n    timeLeftForPendingStxInSec,\n    isSmartTransactionTakingTooLong,\n    stxDeadline,\n  };\n};\n\nconst Deadline = ({\n  isSmartTransactionPending,\n  stxDeadline,\n  timeLeftForPendingStxInSec,\n}: {\n  isSmartTransactionPending: boolean;\n  stxDeadline: number;\n  timeLeftForPendingStxInSec: number;\n}) => {\n  if (!isSmartTransactionPending) {\n    return null;\n  }\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.center}\n      width={BlockSize.Full}\n    >\n      <div className=\"smart-transaction-status-page__loading-bar-container\">\n        <div\n          className=\"smart-transaction-status-page__loading-bar\"\n          style={{\n            width: `${\n              (100 / stxDeadline) * (stxDeadline - timeLeftForPendingStxInSec)\n            }%`,\n          }}\n        />\n      </div>\n    </Box>\n  );\n};\n\nconst Description = ({ description }: { description: string | undefined }) => {\n  if (!description) {\n    return null;\n  }\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.center}\n      className=\"smart-transaction-status-page__description\"\n    >\n      <Text\n        marginTop={2}\n        color={TextColor.textAlternative}\n        variant={TextVariant.bodySm}\n      >\n        {description}\n      </Text>\n    </Box>\n  );\n};\n\nconst PortfolioSmartTransactionStatusUrl = ({\n  portfolioSmartTransactionStatusUrl,\n  isSmartTransactionPending,\n  onCloseExtension,\n}: {\n  portfolioSmartTransactionStatusUrl?: string;\n  isSmartTransactionPending: boolean;\n  onCloseExtension: () => void;\n}) => {\n  const t = useI18nContext();\n  if (!portfolioSmartTransactionStatusUrl) {\n    return null;\n  }\n  const handleViewTransactionLinkClick = useCallback(() => {\n    const isWiderThanNotificationWidth = window.innerWidth > NOTIFICATION_WIDTH;\n    if (!isSmartTransactionPending || isWiderThanNotificationWidth) {\n      onCloseExtension();\n    }\n    global.platform.openTab({\n      url: portfolioSmartTransactionStatusUrl,\n    });\n  }, [\n    isSmartTransactionPending,\n    onCloseExtension,\n    portfolioSmartTransactionStatusUrl,\n  ]);\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      marginTop={2}\n    >\n      <Button\n        type=\"link\"\n        variant={ButtonVariant.Link}\n        onClick={handleViewTransactionLinkClick}\n      >\n        {t('viewTransaction')}\n      </Button>\n    </Box>\n  );\n};\n\nconst CloseExtensionButton = ({\n  isDapp,\n  onCloseExtension,\n}: {\n  isDapp: boolean;\n  onCloseExtension: () => void;\n}) => {\n  const t = useI18nContext();\n  if (!isDapp) {\n    return null;\n  }\n  return (\n    <ButtonSecondary\n      data-testid=\"smart-transaction-status-page-footer-close-button\"\n      onClick={onCloseExtension}\n      width={BlockSize.Full}\n      marginTop={3}\n    >\n      {t('closeExtension')}\n    </ButtonSecondary>\n  );\n};\n\nconst FooterText = ({\n  isDapp,\n  isSmartTransactionPending,\n}: {\n  isDapp: boolean;\n  isSmartTransactionPending: boolean;\n}) => {\n  const t = useI18nContext();\n  if (!isDapp || !isSmartTransactionPending) {\n    return null;\n  }\n  return (\n    <Text\n      marginTop={2}\n      color={TextColor.textAlternative}\n      variant={TextVariant.bodySm}\n    >\n      {t('closeWindowAnytime')}\n    </Text>\n  );\n};\n\nconst ViewActivityButton = ({\n  isDapp,\n  onViewActivity,\n}: {\n  isDapp: boolean;\n  onViewActivity: () => void;\n}) => {\n  const t = useI18nContext();\n  if (isDapp) {\n    return null;\n  }\n  return (\n    <ButtonSecondary\n      data-testid=\"smart-transaction-status-page-footer-close-button\"\n      onClick={onViewActivity}\n      width={BlockSize.Full}\n      marginTop={3}\n    >\n      {t('viewActivity')}\n    </ButtonSecondary>\n  );\n};\n\nconst SmartTransactionsStatusPageFooter = ({\n  isDapp,\n  isSmartTransactionPending,\n  onCloseExtension,\n  onViewActivity,\n}: {\n  isDapp: boolean;\n  isSmartTransactionPending: boolean;\n  onCloseExtension: () => void;\n  onViewActivity: () => void;\n}) => {\n  return (\n    <Box\n      className=\"smart-transaction-status-page__footer\"\n      display={Display.Flex}\n      flexDirection={FlexDirection.Column}\n      width={BlockSize.Full}\n      padding={4}\n      paddingBottom={0}\n    >\n      <FooterText\n        isDapp={isDapp}\n        isSmartTransactionPending={isSmartTransactionPending}\n      />\n      <CloseExtensionButton\n        isDapp={isDapp}\n        onCloseExtension={onCloseExtension}\n      />\n      <ViewActivityButton isDapp={isDapp} onViewActivity={onViewActivity} />\n    </Box>\n  );\n};\n\nconst Title = ({ title }: { title: string }) => {\n  return (\n    <Text\n      color={TextColor.textDefault}\n      variant={TextVariant.headingMd}\n      as=\"h4\"\n      fontWeight={FontWeight.Bold}\n    >\n      {title}\n    </Text>\n  );\n};\n\nconst SmartTransactionsStatusIcon = ({\n  iconName,\n  iconColor,\n}: {\n  iconName: IconName;\n  iconColor: IconColor;\n}) => {\n  return (\n    <Box display={Display.Flex} style={{ fontSize: '48px' }}>\n      <Icon\n        name={iconName}\n        color={iconColor}\n        size={IconSize.Inherit}\n        marginBottom={4}\n      />\n    </Box>\n  );\n};\n\nexport const SmartTransactionStatusPage = ({\n  requestState,\n  onCloseExtension,\n  onViewActivity,\n}: SmartTransactionStatusPageProps) => {\n  const t = useI18nContext();\n  const dispatch = useDispatch();\n  const { smartTransaction, isDapp, txId } = requestState;\n  const isSmartTransactionPending =\n    !smartTransaction ||\n    smartTransaction.status === SmartTransactionStatuses.PENDING;\n  const isSmartTransactionSuccess =\n    smartTransaction?.status === SmartTransactionStatuses.SUCCESS;\n  const isSmartTransactionCancelled = Boolean(\n    smartTransaction?.status?.startsWith(SmartTransactionStatuses.CANCELLED),\n  );\n  const featureFlags: {\n    smartTransactions?: {\n      expectedDeadline?: number;\n      maxDeadline?: number;\n    };\n  } | null = useSelector(getFeatureFlagsByChainId);\n  const stxEstimatedDeadline =\n    featureFlags?.smartTransactions?.expectedDeadline ||\n    FALLBACK_SMART_TRANSACTIONS_EXPECTED_DEADLINE;\n  const stxMaxDeadline =\n    featureFlags?.smartTransactions?.maxDeadline ||\n    FALLBACK_SMART_TRANSACTIONS_MAX_DEADLINE;\n  const {\n    timeLeftForPendingStxInSec,\n    isSmartTransactionTakingTooLong,\n    stxDeadline,\n  } = useRemainingTime({\n    isSmartTransactionPending,\n    smartTransaction,\n    stxMaxDeadline,\n    stxEstimatedDeadline,\n  });\n  const chainId: string = useSelector(getCurrentChainId);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: This same selector is used in the awaiting-swap component.\n  const fullTxData = useSelector((state) => getFullTxData(state, txId)) || {};\n\n  const countdown = isSmartTransactionPending ? (\n    <Text\n      display={Display.InlineBlock}\n      textAlign={TextAlign.Center}\n      color={TextColor.textAlternative}\n      variant={TextVariant.bodySm}\n      className=\"smart-transaction-status-page__countdown\"\n    >\n      {showRemainingTimeInMinAndSec(timeLeftForPendingStxInSec)}\n    </Text>\n  ) : undefined;\n\n  const { title, description, iconName, iconColor } = getDisplayValues({\n    t,\n    countdown,\n    isSmartTransactionPending,\n    isSmartTransactionTakingTooLong,\n    isSmartTransactionSuccess,\n    isSmartTransactionCancelled,\n  });\n\n  useEffect(() => {\n    dispatch(hideLoadingIndication());\n  }, []);\n\n  const canShowSimulationDetails =\n    fullTxData.simulationData?.tokenBalanceChanges?.length > 0 ||\n    fullTxData.simulationData?.nativeBalanceChange;\n  const uuid = smartTransaction?.uuid;\n  const portfolioSmartTransactionStatusUrl =\n    uuid && chainId\n      ? `${BaseUrl.Portfolio}/networks/${Number(\n          hexToDecimal(chainId),\n        )}/smart-transactions/${uuid}`\n      : undefined;\n\n  return (\n    <Box\n      className=\"smart-transaction-status-page\"\n      height={BlockSize.Full}\n      width={BlockSize.Full}\n      display={Display.Flex}\n      borderStyle={BorderStyle.none}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.center}\n      marginBottom={0}\n    >\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={AlignItems.center}\n        justifyContent={JustifyContent.center}\n        paddingLeft={4}\n        paddingRight={4}\n        width={BlockSize.Full}\n        style={{ flexGrow: 1 }}\n      >\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          alignItems={AlignItems.center}\n          paddingLeft={6}\n          paddingRight={6}\n          width={BlockSize.Full}\n        >\n          <Box\n            marginTop={3}\n            className=\"smart-transaction-status-page__background-animation smart-transaction-status-page__background-animation--top\"\n          />\n          <SmartTransactionsStatusIcon\n            iconName={iconName}\n            iconColor={iconColor}\n          />\n          <Title title={title} />\n          <Deadline\n            isSmartTransactionPending={isSmartTransactionPending}\n            stxDeadline={stxDeadline}\n            timeLeftForPendingStxInSec={timeLeftForPendingStxInSec}\n          />\n          <Description description={description} />\n          <PortfolioSmartTransactionStatusUrl\n            portfolioSmartTransactionStatusUrl={\n              portfolioSmartTransactionStatusUrl\n            }\n            isSmartTransactionPending={isSmartTransactionPending}\n            onCloseExtension={onCloseExtension}\n          />\n        </Box>\n        {canShowSimulationDetails && (\n          <SimulationDetails\n            simulationData={fullTxData.simulationData}\n            transactionId={fullTxData.id}\n          />\n        )}\n        <Box\n          marginTop={3}\n          className=\"smart-transaction-status-page__background-animation smart-transaction-status-page__background-animation--bottom\"\n        />\n      </Box>\n      <SmartTransactionsStatusPageFooter\n        isDapp={isDapp}\n        isSmartTransactionPending={isSmartTransactionPending}\n        onCloseExtension={onCloseExtension}\n        onViewActivity={onViewActivity}\n      />\n    </Box>\n  );\n};\n\nexport default SmartTransactionStatusPage;\n","export { default as SnapAccountRedirectContent } from './snap-account-redirect-context';\n","import React from 'react';\nimport {\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n} from '../../../components/component-library';\nimport { IconColor } from '../../../helpers/constants/design-system';\n\ntype RedirectUrlIconProps = {\n  url: string;\n  onSubmit?: () => void;\n};\n\nconst RedirectUrlIcon = ({ url, onSubmit }: RedirectUrlIconProps) => {\n  return (\n    <ButtonIcon\n      data-testid=\"snap-account-redirect-url-icon\"\n      onClick={() => {\n        global.platform.openTab({ url });\n        onSubmit?.();\n      }}\n      iconName={IconName.Export}\n      color={IconColor.primaryDefault}\n      size={ButtonIconSize.Sm}\n      ariaLabel=\"\"\n    />\n  );\n};\n\nexport default React.memo(RedirectUrlIcon);\n","import React from 'react';\nimport {\n  BannerAlert,\n  BannerAlertSeverity,\n  Box,\n  Button,\n  ButtonSize,\n  ButtonVariant,\n  Text,\n} from '../../../components/component-library';\nimport { SnapAccountRedirectProps } from '../snap-account-redirect';\nimport {\n  AlignItems,\n  Display,\n  FlexDirection,\n  JustifyContent,\n  TextAlign,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport SnapAccountRedirectMessage from './snap-account-redirect-message';\n\nconst SnapAccountRedirectContent = ({\n  url,\n  snapName,\n  isBlockedUrl,\n  message,\n  onSubmit,\n}: SnapAccountRedirectProps) => {\n  const t = useI18nContext();\n  const learnMoreAboutBlockedUrls =\n    'https://support.metamask.io/troubleshooting/deceptive-site-ahead-when-trying-to-connect-to-a-site/';\n\n  return (\n    <Box\n      display={Display.Flex}\n      flexDirection={FlexDirection.Row}\n      justifyContent={JustifyContent.spaceBetween}\n      paddingTop={4}\n    >\n      <Box\n        gap={4}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={AlignItems.center}\n      >\n        <Text\n          data-testid=\"snap-account-redirect-content-title\"\n          textAlign={TextAlign.Center}\n          variant={TextVariant.headingLg}\n        >\n          {t('snapAccountRedirectFinishSigningTitle')}\n        </Text>\n        {isBlockedUrl ? (\n          <Box display={Display.Flex} paddingLeft={4} paddingRight={4}>\n            <BannerAlert\n              severity={BannerAlertSeverity.Danger}\n              data-testid=\"snap-account-redirect-content-blocked-url-banner\"\n            >\n              <Text>\n                {t('snapUrlIsBlocked', [\n                  <Button\n                    variant={ButtonVariant.Link}\n                    size={ButtonSize.Inherit}\n                    onClick={() =>\n                      global.platform.openTab({\n                        url: learnMoreAboutBlockedUrls,\n                      })\n                    }\n                    key={`snap-url-is-blocked-learn-more-button`}\n                  >\n                    {t('learnMore')}\n                  </Button>,\n                ])}\n              </Text>\n            </BannerAlert>\n          </Box>\n        ) : null}\n        {isBlockedUrl === false ? (\n          <Text\n            data-testid=\"snap-account-redirect-content-description\"\n            textAlign={TextAlign.Center}\n            variant={TextVariant.bodyMd}\n          >\n            {t('snapAccountRedirectSiteDescription', [snapName])}\n          </Text>\n        ) : null}\n        {(url.length > 0 || message.length > 0) && isBlockedUrl === false ? (\n          <SnapAccountRedirectMessage\n            snapName={snapName}\n            url={url}\n            message={message}\n            onSubmit={onSubmit}\n          />\n        ) : null}\n      </Box>\n    </Box>\n  );\n};\n\nexport default SnapAccountRedirectContent;\n","import React from 'react';\nimport { Display, TextVariant } from '../../../helpers/constants/design-system';\nimport { Box, Text } from '../../../components/component-library';\nimport { SnapAccountRedirectProps } from '../snap-account-redirect';\nimport { SnapDelineator } from '../../../components/app/snaps/snap-delineator';\nimport UrlDisplayBox from './url-display-box';\n\nconst SnapAccountRedirectMessage = ({\n  snapName,\n  url,\n  message,\n  onSubmit,\n}: Pick<\n  SnapAccountRedirectProps,\n  'snapName' | 'url' | 'message' | 'onSubmit'\n>) => {\n  /* eslint-disable no-negated-condition */\n  return (\n    <SnapDelineator\n      data-testid=\"snap-account-redirect-message-container\"\n      snapName={snapName}\n    >\n      {message !== '' ? (\n        <Text\n          variant={TextVariant.bodyMd}\n          data-testid=\"snap-account-redirect-message\"\n        >\n          {message}\n        </Text>\n      ) : null}\n      {url.length > 0 ? (\n        <Box paddingTop={2} display={Display.Flex}>\n          <UrlDisplayBox url={url} onSubmit={onSubmit} />\n        </Box>\n      ) : null}\n    </SnapDelineator>\n  );\n};\n\nexport default React.memo(SnapAccountRedirectMessage);\n","import React from 'react';\nimport { SnapAccountRedirectProps } from '../snap-account-redirect';\nimport {\n  AlignItems,\n  BackgroundColor,\n  BorderRadius,\n  BorderColor,\n  Display,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { Box, Text } from '../../../components/component-library';\nimport RedirectUrlIcon from './redirect-url-icon';\n\nconst UrlDisplayBox = ({\n  url,\n  onSubmit,\n}: Pick<SnapAccountRedirectProps, 'url' | 'onSubmit'>) => {\n  return (\n    <Box\n      display={Display.InlineFlex}\n      backgroundColor={BackgroundColor.backgroundDefault}\n      alignItems={AlignItems.center}\n      borderWidth={1}\n      borderRadius={BorderRadius.SM}\n      borderColor={BorderColor.borderDefault}\n      paddingRight={4}\n    >\n      <Text\n        data-testid=\"snap-account-redirect-url-display-box\"\n        padding={2}\n        variant={TextVariant.bodyMd}\n        color={TextColor.primaryDefault}\n      >\n        {url}\n      </Text>\n      <RedirectUrlIcon url={url} onSubmit={onSubmit} />\n    </Box>\n  );\n};\n\nexport default React.memo(UrlDisplayBox);\n","export { default as SnapAccountRedirect } from './snap-account-redirect';\n","import React from 'react';\nimport { Box } from '../../components/component-library';\nimport {\n  AlignItems,\n  BlockSize,\n  BorderStyle,\n  Display,\n  FlexDirection,\n} from '../../helpers/constants/design-system';\nimport SnapAuthorshipHeader from '../../components/app/snaps/snap-authorship-header';\nimport { SnapAccountRedirectContent } from './components';\n\nexport type SnapAccountRedirectProps = {\n  url: string;\n  snapId: string;\n  snapName: string;\n  isBlockedUrl: boolean;\n  message: string;\n  onSubmit?: () => void;\n};\n\nconst SnapAccountRedirect = ({\n  url,\n  snapId,\n  snapName,\n  isBlockedUrl,\n  message,\n  onSubmit,\n}: SnapAccountRedirectProps) => {\n  return (\n    <Box\n      className=\"create-snap-account-page\"\n      height={BlockSize.Full}\n      width={BlockSize.Full}\n      borderStyle={BorderStyle.none}\n      flexDirection={FlexDirection.Column}\n      alignItems={AlignItems.center}\n    >\n      <SnapAuthorshipHeader snapId={snapId} />\n      <Box\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n        alignItems={AlignItems.center}\n        height={BlockSize.Full}\n        paddingLeft={4}\n        paddingRight={4}\n      >\n        <SnapAccountRedirectContent\n          url={url}\n          onSubmit={onSubmit}\n          snapId={snapId}\n          snapName={snapName}\n          isBlockedUrl={isBlockedUrl}\n          message={message}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SnapAccountRedirect;\n","import React, { useContext, useEffect } from 'react';\nimport { InternalAccount } from '@metamask/keyring-api';\nimport { useI18nContext } from '../../hooks/useI18nContext';\nimport { MetaMetricsContext } from '../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n  MetaMetricsEventAccountType,\n} from '../../../shared/constants/metametrics';\n\nconst SnapAccountTransactionLoadingScreen = ({\n  internalAccount,\n}: {\n  internalAccount: InternalAccount;\n}) => {\n  const t = useI18nContext();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  useEffect(() => {\n    trackEvent({\n      event: MetaMetricsEventName.SnapAccountTransactionLoadingViewed,\n      category: MetaMetricsEventCategory.Transactions,\n      properties: {\n        snap_id: internalAccount?.metadata.snap?.id,\n        snap_name: internalAccount?.metadata.snap?.name,\n        account_type: MetaMetricsEventAccountType.Snap,\n      },\n    });\n  }, []);\n\n  return <span>{t('loadingScreenSnapMessage')}</span>;\n};\n\nexport default SnapAccountTransactionLoadingScreen;\n","export const KeyringSnapRemovalResultStatus = {\n  Success: 'success',\n  Failed: 'failed',\n  None: 'none',\n};\n","export { default } from './snap-view';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SnapHomeRenderer } from '../../../components/app/snaps/snap-home-page/snap-home-renderer';\nimport { Box } from '../../../components/component-library';\nimport { BlockSize, Display } from '../../../helpers/constants/design-system';\n\nfunction SnapHome({ snapId }) {\n  return (\n    <Box display={Display.Flex} height={BlockSize.Full}>\n      <SnapHomeRenderer snapId={snapId} />\n    </Box>\n  );\n}\n\nSnapHome.propTypes = {\n  snapId: PropTypes.string.isRequired,\n};\n\nexport default SnapHome;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport semver from 'semver';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  BackgroundColor,\n  BlockSize,\n  Display,\n  FlexWrap,\n  JustifyContent,\n  TextColor,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport SnapAuthorshipExpanded from '../../../components/app/snaps/snap-authorship-expanded';\nimport SnapRemoveWarning from '../../../components/app/snaps/snap-remove-warning';\nimport ConnectedSitesList from '../../../components/app/connected-sites-list';\n///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\nimport KeyringSnapRemovalWarning from '../../../components/app/snaps/keyring-snap-removal-warning';\n///: END:ONLY_INCLUDE_IF\nimport {\n  removeSnap,\n  disconnectOriginFromSnap,\n  updateSnap,\n  ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n  showKeyringSnapRemovalModal,\n  getSnapAccountsById,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../../store/actions';\nimport {\n  getSnaps,\n  getSubjectsWithSnapPermission,\n  getPermissions,\n  getSnapLatestVersion,\n  getSnapMetadata,\n  ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n  getMemoizedMetaMaskInternalAccounts,\n  ///: END:ONLY_INCLUDE_IF\n} from '../../../selectors';\nimport {\n  Box,\n  Button,\n  ButtonSize,\n  ButtonVariant,\n  Text,\n} from '../../../components/component-library';\nimport SnapPermissionsList from '../../../components/app/snaps/snap-permissions-list';\nimport { SnapDelineator } from '../../../components/app/snaps/snap-delineator';\nimport { DelineatorType } from '../../../helpers/constants/snaps';\nimport SnapUpdateAlert from '../../../components/app/snaps/snap-update-alert';\nimport { CONNECT_ROUTE } from '../../../helpers/constants/routes';\nimport { ShowMore } from '../../../components/app/snaps/show-more';\nimport { isSnapId } from '../../../helpers/utils/snaps';\n///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\nimport { KeyringSnapRemovalResultStatus } from './constants';\n///: END:ONLY_INCLUDE_IF\n\nfunction SnapSettings({ snapId, initRemove, resetInitRemove }) {\n  const history = useHistory();\n  const t = useI18nContext();\n  const snaps = useSelector(getSnaps);\n  const dispatch = useDispatch();\n\n  const snap = Object.entries(snaps)\n    .map(([_, snapState]) => snapState)\n    .find((snapState) => snapState.id === snapId);\n\n  const [isShowingRemoveWarning, setIsShowingRemoveWarning] = useState(false);\n  // eslint-disable-next-line no-unused-vars -- Main build does not use setIsRemovingKeyringSnap\n  const [isRemovingKeyringSnap, setIsRemovingKeyringSnap] = useState(false);\n\n  // eslint-disable-next-line no-unused-vars -- Main build does not use setKeyringAccounts\n  const [keyringAccounts, setKeyringAccounts] = useState([]);\n  ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n  const internalAccounts = useSelector(getMemoizedMetaMaskInternalAccounts);\n  ///: END:ONLY_INCLUDE_IF\n\n  const connectedSubjects = useSelector((state) =>\n    getSubjectsWithSnapPermission(state, snap?.id),\n  );\n  const permissions = useSelector(\n    (state) => snap && getPermissions(state, snap.id),\n  );\n\n  const { name: snapName, description } = useSelector((state) =>\n    getSnapMetadata(state, snapId),\n  );\n\n  let isKeyringSnap = false;\n  ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n  isKeyringSnap = Boolean(permissions?.snap_manageAccounts);\n\n  useEffect(() => {\n    if (isKeyringSnap) {\n      (async () => {\n        const addresses = await getSnapAccountsById(snap.id);\n        const snapIdentities = Object.values(internalAccounts).filter(\n          (internalAccount) =>\n            addresses.includes(internalAccount.address.toLowerCase()),\n        );\n        setKeyringAccounts(snapIdentities);\n      })();\n    }\n  }, [snap?.id, internalAccounts, isKeyringSnap]);\n  ///: END:ONLY_INCLUDE_IF\n\n  const onDisconnect = (connectedOrigin) => {\n    dispatch(disconnectOriginFromSnap(connectedOrigin, snap.id));\n  };\n\n  const latestRegistryVersion = useSelector((state) =>\n    snap ? getSnapLatestVersion(state, snap?.id) : null,\n  );\n\n  const isUpdateAvailable = latestRegistryVersion\n    ? semver.gt(latestRegistryVersion, snap.version)\n    : false;\n\n  const handleUpdate = async () => {\n    const snapToInstall = {\n      [snap.id]: {\n        version: latestRegistryVersion,\n      },\n    };\n    const approvalId = await dispatch(updateSnap('MetaMask', snapToInstall));\n\n    if (approvalId) {\n      history.push(`${CONNECT_ROUTE}/${approvalId}`);\n    }\n  };\n\n  const connectedTitle = () => {\n    if (connectedSubjects.every((subject) => isSnapId(subject.origin))) {\n      return t('connectedSnaps');\n    } else if (connectedSubjects.some((subject) => isSnapId(subject.origin))) {\n      return t('connectedSitesAndSnaps');\n    }\n    return t('connectedSites');\n  };\n\n  useEffect(() => {\n    if (initRemove) {\n      setIsShowingRemoveWarning(true);\n      resetInitRemove();\n    }\n  }, [initRemove, resetInitRemove]);\n\n  return (\n    <Box>\n      {isUpdateAvailable && (\n        <SnapUpdateAlert\n          snapName={snapName}\n          onUpdateClick={handleUpdate}\n          bannerAlertProps={{ marginBottom: 4 }}\n        />\n      )}\n      <SnapAuthorshipExpanded snapId={snap.id} snap={snap} />\n      <Box className=\"snap-view__content__description\" marginTop={[4, 7]}>\n        <SnapDelineator type={DelineatorType.Description} snapName={snapName}>\n          <ShowMore buttonBackground={BackgroundColor.backgroundDefault}>\n            <Text>{description}</Text>\n          </ShowMore>\n        </SnapDelineator>\n      </Box>\n      <Box className=\"snap-view__content__permissions\" marginTop={12}>\n        <Text variant={TextVariant.bodyLgMedium} marginBottom={1}>\n          {t('permissions')}\n        </Text>\n        <SnapPermissionsList\n          snapId={snapId}\n          snapName={snapName}\n          permissions={permissions ?? {}}\n          showOptions\n          showAllPermissions\n        />\n      </Box>\n      <Box className=\"snap-view__content__connected-sites\" marginTop={12}>\n        <Text variant={TextVariant.bodyLgMedium} marginBottom={2}>\n          {connectedTitle()}\n        </Text>\n        <ConnectedSitesList\n          connectedSubjects={connectedSubjects}\n          onDisconnect={(origin) => {\n            onDisconnect(origin, snap.id);\n          }}\n        />\n      </Box>\n      <Box className=\"snap-view__content__remove\" marginTop={12}>\n        <Text variant={TextVariant.bodyLgMedium} color={TextColor.textDefault}>\n          {t('removeSnap')}\n        </Text>\n        <Text variant={TextVariant.bodyMd} color={TextColor.textDefault}>\n          {t('removeSnapDescription')}\n        </Text>\n        <Box\n          marginTop={4}\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n        >\n          <Button\n            className=\"snap-view__content__remove-button\"\n            danger=\"true\"\n            variant={ButtonVariant.Secondary}\n            width={BlockSize.Full}\n            size={ButtonSize.Lg}\n            onClick={() => setIsShowingRemoveWarning(true)}\n            data-testid=\"remove-snap-button\"\n            disabled={snap.preinstalled && snap.removable === false}\n          >\n            <Text\n              color={TextColor.inherit}\n              variant={TextVariant.bodyMd}\n              flexWrap={FlexWrap.NoWrap}\n              ellipsis\n              style={{ overflow: 'hidden' }}\n              paddingTop={3}\n              paddingBottom={3}\n            >\n              {`${t('remove')} ${snapName}`}\n            </Text>\n          </Button>\n          <SnapRemoveWarning\n            isOpen={\n              isShowingRemoveWarning &&\n              (!isKeyringSnap || keyringAccounts.length === 0) &&\n              !isRemovingKeyringSnap\n            }\n            onCancel={() => setIsShowingRemoveWarning(false)}\n            onSubmit={async () => {\n              await dispatch(removeSnap(snap.id));\n            }}\n            snapName={snapName}\n          />\n          {\n            ///: BEGIN:ONLY_INCLUDE_IF(keyring-snaps)\n            <>\n              <KeyringSnapRemovalWarning\n                snap={snap}\n                keyringAccounts={keyringAccounts}\n                snapUrl={snap.url}\n                onCancel={() => setIsShowingRemoveWarning(false)}\n                onClose={() => setIsShowingRemoveWarning(false)}\n                onBack={() => setIsShowingRemoveWarning(false)}\n                onSubmit={async () => {\n                  try {\n                    setIsRemovingKeyringSnap(true);\n                    await dispatch(removeSnap(snap.id));\n                    setIsShowingRemoveWarning(false);\n                    dispatch(\n                      showKeyringSnapRemovalModal({\n                        snapName,\n                        result: KeyringSnapRemovalResultStatus.Success,\n                      }),\n                    );\n                  } catch {\n                    setIsShowingRemoveWarning(false);\n                    dispatch(\n                      showKeyringSnapRemovalModal({\n                        snapName,\n                        result: KeyringSnapRemovalResultStatus.Failed,\n                      }),\n                    );\n                  } finally {\n                    setIsRemovingKeyringSnap(false);\n                  }\n                }}\n                isOpen={\n                  isShowingRemoveWarning &&\n                  isKeyringSnap &&\n                  keyringAccounts.length > 0\n                }\n              />\n            </>\n            ///: END:ONLY_INCLUDE_IF\n          }\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nSnapSettings.propTypes = {\n  snapId: PropTypes.string.isRequired,\n  initRemove: PropTypes.bool,\n  resetInitRemove: PropTypes.func,\n};\n\nexport default SnapSettings;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { hasProperty } from '@metamask/utils';\nimport {\n  AlignItems,\n  BackgroundColor,\n  Display,\n  JustifyContent,\n} from '../../../helpers/constants/design-system';\nimport { DEFAULT_ROUTE, SNAPS_ROUTE } from '../../../helpers/constants/routes';\nimport { getSnaps, getPermissions } from '../../../selectors';\nimport {\n  ButtonIcon,\n  Box,\n  ButtonIconSize,\n} from '../../../components/component-library';\nimport { Content, Page } from '../../../components/multichain/pages/page';\nimport SnapAuthorshipHeader from '../../../components/app/snaps/snap-authorship-header';\nimport SnapHomeMenu from '../../../components/app/snaps/snap-home-menu';\nimport SnapSettings from './snap-settings';\nimport SnapHome from './snap-home';\n\nfunction SnapView() {\n  const history = useHistory();\n  const location = useLocation();\n  const { pathname } = location;\n  // The snap ID is in URI-encoded form in the last path segment of the URL.\n  const snapId = decodeURIComponent(pathname.match(/[^/]+$/u)[0]);\n  const snaps = useSelector(getSnaps);\n  const snap = Object.entries(snaps)\n    .map(([_, snapState]) => snapState)\n    .find((snapState) => snapState.id === snapId);\n\n  useEffect(() => {\n    if (!snap) {\n      history.push(SNAPS_ROUTE);\n    }\n  }, [history, snap]);\n\n  const permissions = useSelector(\n    (state) => snap && getPermissions(state, snap.id),\n  );\n\n  const hasHomePage =\n    permissions && hasProperty(permissions, 'endowment:page-home');\n  const [showSettings, setShowSettings] = useState(!hasHomePage);\n  const [initRemove, setInitRemove] = useState(false);\n\n  if (!snap) {\n    return null;\n  }\n\n  const handleSettingsClick = () => {\n    setShowSettings(true);\n  };\n\n  const handleSnapRemove = () => {\n    setInitRemove(true);\n    setShowSettings(true);\n  };\n\n  const resetInitRemove = () => {\n    setInitRemove(false);\n  };\n\n  const handleBackClick = () => {\n    if (snap.preinstalled && snap.hidden) {\n      history.push(DEFAULT_ROUTE);\n    } else if (showSettings && hasHomePage) {\n      setShowSettings(false);\n    } else {\n      history.push(SNAPS_ROUTE);\n    }\n  };\n\n  const renderBackButton = () => {\n    return (\n      <Box\n        display={Display.Flex}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n      >\n        <ButtonIcon\n          ariaLabel=\"Back\"\n          iconName=\"arrow-left\"\n          size={ButtonIconSize.Md}\n          onClick={handleBackClick}\n        />\n      </Box>\n    );\n  };\n\n  return (\n    <div\n      className=\"snap-view\"\n      style={{\n        boxShadow: 'var(--shadow-size-md) var(--color-shadow-default)',\n      }}\n    >\n      <Page backgroundColor={BackgroundColor.backgroundDefault}>\n        {!snap.hideSnapBranding && (\n          <SnapAuthorshipHeader\n            snapId={snapId}\n            showInfo={false}\n            startAccessory={renderBackButton()}\n            endAccessory={\n              <SnapHomeMenu\n                snapId={snapId}\n                onSettingsClick={handleSettingsClick}\n                onRemoveClick={handleSnapRemove}\n                isSettingsAvailable={!snap.preinstalled}\n              />\n            }\n          />\n        )}\n        <Content\n          backgroundColor={BackgroundColor.backgroundDefault}\n          className=\"snap-view__content\"\n          marginTop={showSettings ? 4 : 0}\n          padding={showSettings ? 4 : 0}\n        >\n          {showSettings ? (\n            <SnapSettings\n              snapId={snapId}\n              initRemove={initRemove}\n              resetInitRemove={resetInitRemove}\n            />\n          ) : (\n            <SnapHome snapId={snapId} />\n          )}\n        </Content>\n      </Page>\n    </div>\n  );\n}\n\nexport default SnapView;\n","export { default } from './snap-list';\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport SnapListItem from '../../../components/app/snaps/snap-list-item';\nimport { useI18nContext } from '../../../hooks/useI18nContext';\nimport {\n  JustifyContent,\n  AlignItems,\n  IconColor,\n  Color,\n  TextAlign,\n  FlexDirection,\n  Size,\n  Display,\n  BlockSize,\n  FlexWrap,\n  TextVariant,\n  BackgroundColor,\n} from '../../../helpers/constants/design-system';\nimport { DEFAULT_ROUTE } from '../../../helpers/constants/routes';\nimport { getAllSnapAvailableUpdates, getSnapsList } from '../../../selectors';\nimport { handleSettingsRefs } from '../../../helpers/utils/settings-search';\nimport {\n  Box,\n  BannerTip,\n  BannerTipLogoType,\n  ButtonLink,\n  Icon,\n  IconName,\n  IconSize,\n  Text,\n  ButtonIcon,\n} from '../../../components/component-library';\nimport {\n  Content,\n  Header,\n  Page,\n} from '../../../components/multichain/pages/page';\nimport { getSnapRoute } from '../../../helpers/utils/util';\n\nconst SnapList = () => {\n  const t = useI18nContext();\n  const history = useHistory();\n  const settingsRef = useRef();\n  const onClick = (snap) => {\n    history.push(getSnapRoute(snap.id));\n  };\n\n  useEffect(() => {\n    handleSettingsRefs(t, t('snaps'), settingsRef);\n  }, [settingsRef, t]);\n\n  const snapsList = useSelector(getSnapsList);\n  const snapUpdateMap = useSelector(getAllSnapAvailableUpdates);\n\n  return (\n    <div className=\"snaps\">\n      <Page backgroundColor={BackgroundColor.backgroundDefault}>\n        <Header\n          backgroundColor={BackgroundColor.backgroundDefault}\n          startAccessory={\n            <ButtonIcon\n              ariaLabel=\"Back\"\n              iconName=\"arrow-left\"\n              size=\"sm\"\n              onClick={() => history.push(DEFAULT_ROUTE)}\n            />\n          }\n        >\n          {t('snaps')}\n        </Header>\n        <Content\n          backgroundColor={BackgroundColor.backgroundDefault}\n          className=\"snaps__content\"\n        >\n          <Box\n            className=\"snaps__content__list\"\n            display={Display.Flex}\n            flexDirection={FlexDirection.Column}\n            height={BlockSize.Full}\n          >\n            {snapsList.length > 0 && (\n              <div className=\"snaps__content__list__body\">\n                <div className=\"snaps__content__list__wrapper\">\n                  {snapsList.map((snap) => {\n                    return (\n                      <SnapListItem\n                        className=\"snaps__content__list-item\"\n                        key={snap.key}\n                        packageName={snap.packageName}\n                        name={snap.name}\n                        onClick={() => {\n                          onClick(snap);\n                        }}\n                        snapId={snap.id}\n                        showUpdateDot={snapUpdateMap.get(snap.id)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {snapsList.length <= 5 && (\n              <Box\n                display={Display.Flex}\n                height={BlockSize.Full}\n                flexDirection={FlexDirection.Row}\n                flexWrap={FlexWrap.Wrap}\n                justifyContent={JustifyContent.center}\n                className=\"snaps__content__list__container--snaps-info-content\"\n              >\n                {snapsList.length < 1 && (\n                  <Box\n                    className=\"snaps__content__list__container--no-snaps_inner\"\n                    display={Display.Flex}\n                    flexDirection={FlexDirection.Column}\n                    justifyContent={JustifyContent.center}\n                    alignItems={AlignItems.center}\n                  >\n                    <Icon\n                      name={IconName.Snaps}\n                      color={IconColor.iconMuted}\n                      className=\"snaps__content__list__no-snaps_icon\"\n                      size={IconSize.Inherit}\n                    />\n                    <Text\n                      color={Color.textMuted}\n                      align={TextAlign.Center}\n                      marginTop={4}\n                    >\n                      {t('noSnaps')}\n                    </Text>\n                  </Box>\n                )}\n                <Box\n                  display={Display.Flex}\n                  width={BlockSize.Full}\n                  height={BlockSize.Min}\n                ></Box>\n                <Box\n                  className=\"snaps__content__list__container--no-snaps_banner-tip\"\n                  display={Display.Flex}\n                  flexDirection={FlexDirection.Column}\n                  justifyContent={JustifyContent.flexEnd}\n                  paddingLeft={4}\n                  paddingRight={4}\n                  paddingBottom={4}\n                >\n                  <BannerTip\n                    logoType={BannerTipLogoType.Greeting}\n                    description={t('extendWalletWithSnaps')}\n                    descriptionProps={{ variant: TextVariant.bodyMd }}\n                  >\n                    <ButtonLink\n                      size={Size.auto}\n                      href=\"https://snaps.metamask.io/\"\n                      target=\"_blank\"\n                      endIconName={IconName.Export}\n                    >\n                      {`${t('discoverSnaps')}`}\n                    </ButtonLink>\n                  </BannerTip>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </Content>\n      </Page>\n    </div>\n  );\n};\n\nexport default SnapList;\n","import React, { useContext, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport isEqual from 'lodash/isEqual';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport {\n  getFetchParams,\n  getApproveTxParams,\n  prepareToLeaveSwaps,\n  getCurrentSmartTransactionsEnabled,\n} from '../../../ducks/swaps/swaps';\nimport {\n  isHardwareWallet,\n  getHardwareWalletType,\n} from '../../../selectors/selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\nimport {\n  DEFAULT_ROUTE,\n  BUILD_QUOTE_ROUTE,\n} from '../../../helpers/constants/routes';\nimport PulseLoader from '../../../components/ui/pulse-loader';\nimport Box from '../../../components/ui/box';\nimport {\n  BLOCK_SIZES,\n  TextVariant,\n  JustifyContent,\n  DISPLAY,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport SwapsFooter from '../swaps-footer';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport { Text } from '../../../components/component-library';\nimport SwapStepIcon from './swap-step-icon';\n\nexport default function AwaitingSignatures() {\n  const t = useContext(I18nContext);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const { destinationTokenInfo, sourceTokenInfo } = fetchParams?.metaData || {};\n  const approveTxParams = useSelector(getApproveTxParams, shallowEqual);\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const needsTwoConfirmations = Boolean(approveTxParams);\n  const trackEvent = useContext(MetaMetricsContext);\n\n  useEffect(() => {\n    trackEvent({\n      event: 'Awaiting Signature(s) on a HW wallet',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        needs_two_confirmations: needsTwoConfirmations,\n        token_from: sourceTokenInfo?.symbol,\n        token_from_amount: fetchParams?.value,\n        token_to: destinationTokenInfo?.symbol,\n        request_type: fetchParams?.balanceError ? 'Quote' : 'Order',\n        slippage: fetchParams?.slippage,\n        custom_slippage: fetchParams?.slippage === 2,\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n      },\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const headerText = needsTwoConfirmations\n    ? t('swapTwoTransactions')\n    : t('swapConfirmWithHwWallet');\n\n  return (\n    <div className=\"awaiting-signatures\">\n      <Box\n        paddingLeft={8}\n        paddingRight={8}\n        height={BLOCK_SIZES.FULL}\n        justifyContent={JustifyContent.center}\n        display={DISPLAY.FLEX}\n        className=\"awaiting-signatures__content\"\n      >\n        <Box marginTop={3} marginBottom={4}>\n          <PulseLoader />\n        </Box>\n        <Text\n          color={TextColor.textDefault}\n          variant={TextVariant.headingMd}\n          as=\"h3\"\n        >\n          {headerText}\n        </Text>\n        {needsTwoConfirmations && (\n          <>\n            <Text variant={TextVariant.bodyMdBold} marginTop={2}>\n              {t('swapToConfirmWithHwWallet')}\n            </Text>\n            <ul className=\"awaiting-signatures__steps\">\n              <li>\n                <SwapStepIcon stepNumber={1} />\n                {t('swapAllowSwappingOf', [\n                  <Text\n                    as=\"span\"\n                    variant={TextVariant.bodyMdBold}\n                    key=\"allowToken\"\n                  >\n                    {destinationTokenInfo?.symbol}\n                  </Text>,\n                ])}\n              </li>\n              <li>\n                <SwapStepIcon stepNumber={2} />\n                {t('swapFromTo', [\n                  <Text\n                    as=\"span\"\n                    variant={TextVariant.bodyMdBold}\n                    key=\"tokenFrom\"\n                  >\n                    {sourceTokenInfo?.symbol}\n                  </Text>,\n                  <Text\n                    as=\"span\"\n                    variation={TextVariant.bodyMdBold}\n                    key=\"tokenTo\"\n                  >\n                    {destinationTokenInfo?.symbol}\n                  </Text>,\n                ])}\n              </li>\n            </ul>\n            <Text variant={TextVariant.bodyMd}>{t('swapGasFeesSplit')}</Text>\n          </>\n        )}\n      </Box>\n      <SwapsFooter\n        onSubmit={async () => {\n          await dispatch(prepareToLeaveSwaps());\n          // Go to the default route and then to the build quote route in order to clean up\n          // the `inputValue` local state in `pages/swaps/index.js`\n          history.push(DEFAULT_ROUTE);\n          history.push(BUILD_QUOTE_ROUTE);\n        }}\n        submitText={t('cancel')}\n        hideCancel\n      />\n    </div>\n  );\n}\n","export { default } from './awaiting-signatures';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function SwapStepIcon({ stepNumber = 1 }) {\n  switch (stepNumber) {\n    case 1:\n      return (\n        <svg\n          width=\"14\"\n          height=\"14\"\n          viewBox=\"0 0 14 14\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle\n            cx=\"7\"\n            cy=\"7\"\n            r=\"6.25\"\n            stroke=\"var(--color-primary-default)\"\n            strokeWidth=\"1.5\"\n          />\n          <path\n            d=\"M6.50983 5.192H5.27783L6.14183 4H7.71783V9.68H6.50983V5.192Z\"\n            fill=\"var(--color-primary-default)\"\n          />\n        </svg>\n      );\n    case 2:\n      return (\n        <svg\n          width=\"14\"\n          height=\"14\"\n          viewBox=\"0 0 14 14\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle\n            cx=\"7\"\n            cy=\"7\"\n            r=\"6.25\"\n            stroke=\"var(--color-primary-default)\"\n            strokeWidth=\"1.5\"\n          />\n          <path\n            d=\"M8.92 9.776H5V9.368C5 9.048 5.056 8.77067 5.168 8.536C5.28 8.296 5.42133 8.08533 5.592 7.904C5.768 7.71733 5.96267 7.54933 6.176 7.4C6.39467 7.25067 6.608 7.10133 6.816 6.952C6.928 6.872 7.03467 6.78933 7.136 6.704C7.24267 6.61867 7.33333 6.53067 7.408 6.44C7.488 6.34933 7.552 6.256 7.6 6.16C7.648 6.064 7.672 5.96533 7.672 5.864C7.672 5.67733 7.616 5.52 7.504 5.392C7.39733 5.25867 7.22933 5.192 7 5.192C6.88267 5.192 6.776 5.21333 6.68 5.256C6.584 5.29333 6.50133 5.344 6.432 5.408C6.368 5.472 6.31733 5.54667 6.28 5.632C6.248 5.71733 6.232 5.808 6.232 5.904H5.024C5.024 5.62667 5.07467 5.37067 5.176 5.136C5.27733 4.90133 5.41867 4.70133 5.6 4.536C5.78133 4.36533 5.99467 4.23467 6.24 4.144C6.48533 4.048 6.752 4 7.04 4C7.28 4 7.50933 4.03733 7.728 4.112C7.952 4.18667 8.14933 4.29867 8.32 4.448C8.49067 4.59733 8.62667 4.784 8.728 5.008C8.82933 5.22667 8.88 5.48267 8.88 5.776C8.88 6.032 8.85067 6.25867 8.792 6.456C8.73333 6.648 8.65067 6.824 8.544 6.984C8.44267 7.13867 8.32 7.28 8.176 7.408C8.032 7.536 7.87733 7.66133 7.712 7.784C7.64267 7.832 7.55733 7.888 7.456 7.952C7.36 8.016 7.26133 8.08267 7.16 8.152C7.064 8.22133 6.97333 8.29333 6.888 8.368C6.80267 8.44267 6.74133 8.51467 6.704 8.584H8.92V9.776Z\"\n            fill=\"var(--color-primary-default)\"\n          />\n        </svg>\n      );\n    default:\n      return undefined; // Don't return any SVG if a step number is not supported.\n  }\n}\n\nSwapStepIcon.propTypes = {\n  stepNumber: PropTypes.number,\n};\n","import EventEmitter from 'events';\nimport React, { useContext, useRef, useState, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport isEqual from 'lodash/isEqual';\nimport { getBlockExplorerLink } from '@metamask/etherscan-link';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsContextProp,\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\n\nimport {\n  getCurrentChainId,\n  getCurrentCurrency,\n  getRpcPrefsForCurrentProvider,\n  getUSDConversionRate,\n  isHardwareWallet,\n  getHardwareWalletType,\n  getFullTxData,\n} from '../../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\n\nimport {\n  getUsedQuote,\n  getFetchParams,\n  getApproveTxParams,\n  getUsedSwapsGasPrice,\n  fetchQuotesAndSetQuoteState,\n  navigateBackToBuildQuote,\n  prepareForRetryGetQuotes,\n  prepareToLeaveSwaps,\n  getCurrentSmartTransactionsEnabled,\n  getFromTokenInputValue,\n  getMaxSlippage,\n} from '../../../ducks/swaps/swaps';\nimport Mascot from '../../../components/ui/mascot';\nimport {\n  QUOTES_EXPIRED_ERROR,\n  SWAP_FAILED_ERROR,\n  ERROR_FETCHING_QUOTES,\n  QUOTES_NOT_AVAILABLE_ERROR,\n  CONTRACT_DATA_DISABLED_ERROR,\n  OFFLINE_FOR_MAINTENANCE,\n  SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP,\n} from '../../../../shared/constants/swaps';\nimport { isSwapsDefaultTokenSymbol } from '../../../../shared/modules/swaps.utils';\nimport PulseLoader from '../../../components/ui/pulse-loader';\n\nimport { DEFAULT_ROUTE } from '../../../helpers/constants/routes';\nimport {\n  stopPollingForQuotes,\n  setDefaultHomeActiveTabName,\n} from '../../../store/actions';\n\nimport { getRenderableNetworkFeesForQuote } from '../swaps.util';\nimport SwapsFooter from '../swaps-footer';\n\nimport CreateNewSwap from '../create-new-swap';\nimport ViewOnBlockExplorer from '../view-on-block-explorer';\nimport { SUPPORT_LINK } from '../../../../shared/lib/ui-utils';\nimport SwapFailureIcon from './swap-failure-icon';\nimport SwapSuccessIcon from './swap-success-icon';\nimport QuotesTimeoutIcon from './quotes-timeout-icon';\n\nexport default function AwaitingSwap({\n  swapComplete,\n  errorKey,\n  txHash,\n  tokensReceived,\n  submittingSwap,\n  txId,\n}) {\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const animationEventEmitter = useRef(new EventEmitter());\n  const { swapMetaData } =\n    useSelector((state) => getFullTxData(state, txId)) || {};\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const fromTokenInputValue = useSelector(getFromTokenInputValue);\n  const maxSlippage = useSelector(getMaxSlippage);\n  const usedQuote = useSelector(getUsedQuote, isEqual);\n  const approveTxParams = useSelector(getApproveTxParams, shallowEqual);\n  const swapsGasPrice = useSelector(getUsedSwapsGasPrice);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const usdConversionRate = useSelector(getUSDConversionRate);\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider, shallowEqual);\n  const [trackedQuotesExpiredEvent, setTrackedQuotesExpiredEvent] =\n    useState(false);\n\n  let feeinUnformattedFiat;\n\n  if (usedQuote && swapsGasPrice) {\n    const renderableNetworkFees = getRenderableNetworkFeesForQuote({\n      tradeGas: usedQuote.gasEstimateWithRefund || usedQuote.averageGas,\n      approveGas: approveTxParams?.gas || '0x0',\n      gasPrice: swapsGasPrice,\n      currentCurrency,\n      conversionRate: usdConversionRate,\n      tradeValue: usedQuote?.trade?.value,\n      sourceSymbol: swapMetaData?.token_from,\n      sourceAmount: usedQuote.sourceAmount,\n      chainId,\n    });\n    feeinUnformattedFiat = renderableNetworkFees.rawNetworkFees;\n  }\n\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const sensitiveProperties = {\n    token_from: swapMetaData?.token_from,\n    token_from_amount: swapMetaData?.token_from_amount,\n    token_to: swapMetaData?.token_to,\n    request_type: fetchParams?.balanceError ? 'Quote' : 'Order',\n    slippage: swapMetaData?.slippage,\n    custom_slippage: swapMetaData?.slippage === 2,\n    gas_fees: feeinUnformattedFiat,\n    is_hardware_wallet: hardwareWalletUsed,\n    hardware_wallet_type: hardwareWalletType,\n    stx_enabled: smartTransactionsEnabled,\n    current_stx_enabled: currentSmartTransactionsEnabled,\n    stx_user_opt_in: smartTransactionsOptInStatus,\n  };\n\n  const baseNetworkUrl =\n    rpcPrefs.blockExplorerUrl ??\n    SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP[chainId] ??\n    null;\n  const blockExplorerUrl = getBlockExplorerLink(\n    { hash: txHash, chainId },\n    { blockExplorerUrl: baseNetworkUrl },\n  );\n\n  let headerText;\n  let statusImage;\n  let descriptionText;\n  let submitText;\n  let content;\n\n  if (errorKey === OFFLINE_FOR_MAINTENANCE) {\n    headerText = t('offlineForMaintenance');\n    descriptionText = t('metamaskSwapsOfflineDescription');\n    submitText = t('close');\n    statusImage = <SwapFailureIcon />;\n  } else if (errorKey === SWAP_FAILED_ERROR) {\n    headerText = t('swapFailedErrorTitle');\n    descriptionText = t('swapFailedErrorDescriptionWithSupportLink', [\n      <a\n        className=\"awaiting-swap__support-link\"\n        key=\"awaiting-swap-support-link\"\n        href={SUPPORT_LINK}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={() => {\n          trackEvent(\n            {\n              category: MetaMetricsEventCategory.Swaps,\n              event: MetaMetricsEventName.SupportLinkClicked,\n              properties: {\n                url: SUPPORT_LINK,\n              },\n            },\n            {\n              contextPropsIntoEventProperties: [\n                MetaMetricsContextProp.PageTitle,\n              ],\n            },\n          );\n        }}\n      >\n        {new URL(SUPPORT_LINK).hostname}\n      </a>,\n    ]);\n    submitText = t('tryAgain');\n    statusImage = <SwapFailureIcon />;\n    content = blockExplorerUrl && (\n      <ViewOnBlockExplorer\n        blockExplorerUrl={blockExplorerUrl}\n        sensitiveTrackingProperties={sensitiveProperties}\n      />\n    );\n  } else if (errorKey === QUOTES_EXPIRED_ERROR) {\n    headerText = t('swapQuotesExpiredErrorTitle');\n    descriptionText = t('swapQuotesExpiredErrorDescription');\n    submitText = t('tryAgain');\n    statusImage = <QuotesTimeoutIcon />;\n\n    if (!trackedQuotesExpiredEvent) {\n      setTrackedQuotesExpiredEvent(true);\n      trackEvent({\n        event: 'Quotes Timed Out',\n        category: MetaMetricsEventCategory.Swaps,\n        sensitiveProperties,\n      });\n    }\n  } else if (errorKey === ERROR_FETCHING_QUOTES) {\n    headerText = t('swapFetchingQuotesErrorTitle');\n    descriptionText = t('swapFetchingQuotesErrorDescription');\n    submitText = t('back');\n    statusImage = <SwapFailureIcon />;\n  } else if (errorKey === QUOTES_NOT_AVAILABLE_ERROR) {\n    headerText = t('swapQuotesNotAvailableErrorTitle');\n    descriptionText = t('swapQuotesNotAvailableErrorDescription');\n    submitText = t('tryAgain');\n    statusImage = <SwapFailureIcon />;\n  } else if (errorKey === CONTRACT_DATA_DISABLED_ERROR) {\n    headerText = t('swapContractDataDisabledErrorTitle');\n    descriptionText = t('swapContractDataDisabledErrorDescription');\n    submitText = t('tryAgain');\n    statusImage = <SwapFailureIcon />;\n  } else if (!errorKey && !swapComplete) {\n    headerText = t('swapProcessing');\n    statusImage = <PulseLoader />;\n    submitText = t('swapsViewInActivity');\n    descriptionText = t('swapOnceTransactionHasProcess', [\n      <span\n        key=\"swapOnceTransactionHasProcess-1\"\n        className=\"awaiting-swap__amount-and-symbol\"\n        data-testid=\"awaiting-swap-amount-and-symbol\"\n      >\n        {swapMetaData?.token_to}\n      </span>,\n    ]);\n    content = blockExplorerUrl && (\n      <ViewOnBlockExplorer\n        blockExplorerUrl={blockExplorerUrl}\n        sensitiveTrackingProperties={sensitiveProperties}\n      />\n    );\n  } else if (!errorKey && swapComplete) {\n    headerText = t('swapTransactionComplete');\n    statusImage = <SwapSuccessIcon />;\n    submitText = t('close');\n    descriptionText = t('swapTokenAvailable', [\n      <span\n        key=\"swapTokenAvailable-2\"\n        className=\"awaiting-swap__amount-and-symbol\"\n      >\n        {`${tokensReceived || ''} ${swapMetaData?.token_to}`}\n      </span>,\n    ]);\n    content = blockExplorerUrl && (\n      <ViewOnBlockExplorer\n        blockExplorerUrl={blockExplorerUrl}\n        sensitiveTrackingProperties={sensitiveProperties}\n      />\n    );\n  }\n\n  useEffect(() => {\n    if (errorKey) {\n      // If there was an error, stop polling for quotes.\n      dispatch(stopPollingForQuotes());\n    }\n  }, [dispatch, errorKey]);\n\n  return (\n    <div className=\"awaiting-swap\">\n      <div className=\"awaiting-swap__content\">\n        {!(swapComplete || errorKey) && (\n          <Mascot\n            animationEventEmitter={animationEventEmitter.current}\n            width=\"90\"\n            height=\"90\"\n          />\n        )}\n        <div className=\"awaiting-swap__status-image\">{statusImage}</div>\n        <div\n          className=\"awaiting-swap__header\"\n          data-testid=\"awaiting-swap-header\"\n        >\n          {headerText}\n        </div>\n        <div\n          className=\"awaiting-swap__main-description\"\n          data-testid=\"awaiting-swap-main-description\"\n        >\n          {descriptionText}\n        </div>\n        {content}\n      </div>\n      {!errorKey && swapComplete ? (\n        <CreateNewSwap sensitiveTrackingProperties={sensitiveProperties} />\n      ) : null}\n      <SwapsFooter\n        onSubmit={async () => {\n          /* istanbul ignore next */\n          if (errorKey === OFFLINE_FOR_MAINTENANCE) {\n            await dispatch(prepareToLeaveSwaps());\n            history.push(DEFAULT_ROUTE);\n          } else if (errorKey === QUOTES_EXPIRED_ERROR) {\n            dispatch(prepareForRetryGetQuotes());\n            await dispatch(\n              fetchQuotesAndSetQuoteState(\n                history,\n                fromTokenInputValue,\n                maxSlippage,\n                trackEvent,\n              ),\n            );\n          } else if (errorKey) {\n            await dispatch(navigateBackToBuildQuote(history));\n          } else if (\n            isSwapsDefaultTokenSymbol(swapMetaData?.token_to, chainId) ||\n            swapComplete\n          ) {\n            history.push(DEFAULT_ROUTE);\n          } else {\n            await dispatch(setDefaultHomeActiveTabName('activity'));\n            history.push(DEFAULT_ROUTE);\n          }\n        }}\n        onCancel={async () => await dispatch(navigateBackToBuildQuote(history))}\n        submitText={submitText}\n        disabled={submittingSwap}\n        hideCancel={errorKey !== QUOTES_EXPIRED_ERROR}\n      />\n    </div>\n  );\n}\n\nAwaitingSwap.propTypes = {\n  swapComplete: PropTypes.bool,\n  txHash: PropTypes.string,\n  tokensReceived: PropTypes.string,\n  errorKey: PropTypes.oneOf([\n    QUOTES_EXPIRED_ERROR,\n    SWAP_FAILED_ERROR,\n    ERROR_FETCHING_QUOTES,\n    QUOTES_NOT_AVAILABLE_ERROR,\n    OFFLINE_FOR_MAINTENANCE,\n    CONTRACT_DATA_DISABLED_ERROR,\n  ]),\n  submittingSwap: PropTypes.bool,\n  txId: PropTypes.string,\n};\n","export { default } from './awaiting-swap';\n","import React from 'react';\n\nexport default function QuotesTimeoutIcon() {\n  return (\n    <svg\n      width=\"44\"\n      height=\"44\"\n      viewBox=\"0 0 44 44\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M22 0C9.96768 0 0.178406 9.78928 0.178406 21.8216C0.178406 33.8539 9.96768 43.6432 22 43.6432C34.0323 43.6432 43.8216 33.8539 43.8216 21.8216C43.8216 9.78929 34.0323 0 22 0ZM22 3.27324C32.2633 3.27324 40.5484 11.5583 40.5484 21.8216C40.5484 32.0849 32.2633 40.3699 22 40.3699C11.7367 40.3699 3.45164 32.0849 3.45164 21.8216C3.45164 11.5583 11.7367 3.27324 22 3.27324ZM22 6.00094C21.0961 6.00094 20.3634 6.73371 20.3634 7.63756V21.8216C20.3634 22.4269 20.6932 22.9534 21.1817 23.2366L32.5187 29.783C33.3014 30.235 34.3001 29.9692 34.752 29.1864C35.2039 28.4036 34.938 27.405 34.1553 26.953L23.6366 20.8839V7.63756C23.6366 6.73371 22.9039 6.00094 22 6.00094Z\"\n        fill=\"var(--color-primary-default)\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function SwapFailureIcon() {\n  return (\n    <svg\n      width=\"45\"\n      height=\"39\"\n      viewBox=\"0 0 45 39\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M22.203 0.424438L0.285706 38.2816H44.1203L22.203 0.424438ZM22.203 8.39436L37.2064 34.2966H7.19961L22.203 8.39436ZM20.2105 16.3643V24.3342H24.1955V16.3643H20.2105ZM20.2105 28.3192V32.3041H24.1955V28.3192\"\n        fill=\"var(--color-error-default)\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function SwapSuccessIcon() {\n  return (\n    <svg\n      width=\"38\"\n      height=\"38\"\n      viewBox=\"0 0 38 38\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M34.1429 19C34.1429 23.0161 32.5474 26.8678 29.7076 29.7076C26.8678 32.5474 23.0161 34.1428 19 34.1428C14.9839 34.1428 11.1322 32.5474 8.29238 29.7076C5.45254 26.8678 3.85714 23.0161 3.85714 19C3.85714 14.9838 5.45254 11.1322 8.29238 8.29237C11.1322 5.45253 14.9839 3.85713 19 3.85713C20.4386 3.85713 21.8393 4.06534 23.1643 4.44391L26.1361 1.47213C23.9404 0.563554 21.5364 0.0714111 19 0.0714111C16.5143 0.0714111 14.0529 0.561013 11.7563 1.51226C9.45983 2.46351 7.37316 3.85778 5.61548 5.61546C2.06568 9.16526 0.0714264 13.9798 0.0714264 19C0.0714264 24.0201 2.06568 28.8347 5.61548 32.3845C7.37316 34.1422 9.45983 35.5364 11.7563 36.4877C14.0529 37.4389 16.5143 37.9286 19 37.9286C24.0202 37.9286 28.8347 35.9343 32.3845 32.3845C35.9343 28.8347 37.9286 24.0201 37.9286 19H34.1429ZM11.2582 15.3657L8.58928 18.0536L17.1071 26.5714L36.0357 7.64284L33.3668 4.95498L17.1071 21.2146L11.2582 15.3657Z\"\n        fill=\"var(--color-success-default)\"\n      />\n    </svg>\n  );\n}\n","import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport { uniqBy, isEqual } from 'lodash';\nimport { useHistory } from 'react-router-dom';\nimport { getTokenTrackerLink } from '@metamask/etherscan-link';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  useTokensToSearch,\n  getRenderableTokenData,\n} from '../../../hooks/useTokensToSearch';\nimport { useEqualityCheck } from '../../../hooks/useEqualityCheck';\nimport { I18nContext } from '../../../contexts/i18n';\nimport DropdownInputPair from '../dropdown-input-pair';\nimport DropdownSearchList from '../dropdown-search-list';\nimport SlippageButtons from '../slippage-buttons';\nimport { getTokens, getConversionRate } from '../../../ducks/metamask/metamask';\nimport InfoTooltip from '../../../components/ui/info-tooltip';\nimport ActionableMessage from '../../../components/ui/actionable-message/actionable-message';\nimport {\n  VIEW_QUOTE_ROUTE,\n  LOADING_QUOTES_ROUTE,\n} from '../../../helpers/constants/routes';\n\nimport {\n  fetchQuotesAndSetQuoteState,\n  setSwapsFromToken,\n  setSwapToToken,\n  getFromToken,\n  getToToken,\n  getBalanceError,\n  getTopAssets,\n  getFetchParams,\n  getQuotes,\n  setBalanceError,\n  setFromTokenInputValue,\n  setFromTokenError,\n  setMaxSlippage,\n  setReviewSwapClickedTimestamp,\n  getCurrentSmartTransactionsEnabled,\n  getFromTokenInputValue,\n  getFromTokenError,\n  getMaxSlippage,\n  getIsFeatureFlagLoaded,\n  getSmartTransactionFees,\n  getLatestAddedTokenTo,\n} from '../../../ducks/swaps/swaps';\nimport {\n  getSwapsDefaultToken,\n  getTokenExchangeRates,\n  getCurrentCurrency,\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n  getTokenList,\n  isHardwareWallet,\n  getHardwareWalletType,\n  getUseCurrencyRateCheck,\n} from '../../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\n\nimport { getURLHostName } from '../../../helpers/utils/util';\nimport { usePrevious } from '../../../hooks/usePrevious';\nimport { useTokenTracker } from '../../../hooks/useTokenTracker';\nimport { useTokenFiatAmount } from '../../../hooks/useTokenFiatAmount';\nimport { useEthFiatAmount } from '../../../hooks/useEthFiatAmount';\n\nimport {\n  isSwapsDefaultTokenAddress,\n  isSwapsDefaultTokenSymbol,\n} from '../../../../shared/modules/swaps.utils';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventLinkType,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport {\n  SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP,\n  SWAPS_CHAINID_DEFAULT_TOKEN_MAP,\n  TokenBucketPriority,\n  MAX_ALLOWED_SLIPPAGE,\n} from '../../../../shared/constants/swaps';\n\nimport {\n  resetSwapsPostFetchState,\n  ignoreTokens,\n  setBackgroundSwapRouteState,\n  clearSwapsQuotes,\n  stopPollingForQuotes,\n  clearSmartTransactionFees,\n} from '../../../store/actions';\nimport { countDecimals, fetchTokenPrice } from '../swaps.util';\nimport SwapsFooter from '../swaps-footer';\nimport { isEqualCaseInsensitive } from '../../../../shared/modules/string-utils';\nimport { calcTokenAmount } from '../../../../shared/lib/transactions-controller-utils';\nimport { fetchTokenBalance } from '../../../../shared/lib/token-util';\nimport { shouldEnableDirectWrapping } from '../../../../shared/lib/swaps-utils';\nimport {\n  getValueFromWeiHex,\n  hexToDecimal,\n} from '../../../../shared/modules/conversion.utils';\n\nconst fuseSearchKeys = [\n  { name: 'name', weight: 0.499 },\n  { name: 'symbol', weight: 0.499 },\n  { name: 'address', weight: 0.002 },\n];\n\nlet timeoutIdForQuotesPrefetching;\n\nexport default function BuildQuote({\n  ethBalance,\n  selectedAccountAddress,\n  shuffledTokensList,\n}) {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const [fetchedTokenExchangeRate, setFetchedTokenExchangeRate] =\n    useState(undefined);\n  const [verificationClicked, setVerificationClicked] = useState(false);\n\n  const isFeatureFlagLoaded = useSelector(getIsFeatureFlagLoaded);\n  const balanceError = useSelector(getBalanceError);\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const { sourceTokenInfo = {}, destinationTokenInfo = {} } =\n    fetchParams?.metaData || {};\n  const tokens = useSelector(getTokens, isEqual);\n  const topAssets = useSelector(getTopAssets, isEqual);\n  const fromToken = useSelector(getFromToken, isEqual);\n  const fromTokenInputValue = useSelector(getFromTokenInputValue);\n  const fromTokenError = useSelector(getFromTokenError);\n  const maxSlippage = useSelector(getMaxSlippage);\n  const toToken = useSelector(getToToken, isEqual) || destinationTokenInfo;\n  const defaultSwapsToken = useSelector(getSwapsDefaultToken, isEqual);\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider, shallowEqual);\n  const tokenList = useSelector(getTokenList, isEqual);\n  const quotes = useSelector(getQuotes, isEqual);\n  const areQuotesPresent = Object.keys(quotes).length > 0;\n  const latestAddedTokenTo = useSelector(getLatestAddedTokenTo, isEqual);\n\n  const tokenConversionRates = useSelector(getTokenExchangeRates, isEqual);\n  const conversionRate = useSelector(getConversionRate);\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const smartTransactionFees = useSelector(getSmartTransactionFees);\n  const currentCurrency = useSelector(getCurrentCurrency);\n\n  const fetchParamsFromToken = isSwapsDefaultTokenSymbol(\n    sourceTokenInfo?.symbol,\n    chainId,\n  )\n    ? defaultSwapsToken\n    : sourceTokenInfo;\n\n  const { loading, tokensWithBalances } = useTokenTracker({ tokens });\n\n  // If the fromToken was set in a call to `onFromSelect` (see below), and that from token has a balance\n  // but is not in tokensWithBalances or tokens, then we want to add it to the usersTokens array so that\n  // the balance of the token can appear in the from token selection dropdown\n  const fromTokenArray =\n    !isSwapsDefaultTokenSymbol(fromToken?.symbol, chainId) && fromToken?.balance\n      ? [fromToken]\n      : [];\n  const usersTokens = uniqBy(\n    [...tokensWithBalances, ...tokens, ...fromTokenArray],\n    'address',\n  );\n  const memoizedUsersTokens = useEqualityCheck(usersTokens);\n\n  const selectedFromToken = getRenderableTokenData(\n    fromToken || fetchParamsFromToken,\n    tokenConversionRates,\n    conversionRate,\n    currentCurrency,\n    chainId,\n    tokenList,\n  );\n\n  const tokensToSearchSwapFrom = useTokensToSearch({\n    usersTokens: memoizedUsersTokens,\n    topTokens: topAssets,\n    shuffledTokensList,\n    tokenBucketPriority: TokenBucketPriority.owned,\n  });\n  const tokensToSearchSwapTo = useTokensToSearch({\n    usersTokens: memoizedUsersTokens,\n    topTokens: topAssets,\n    shuffledTokensList,\n    tokenBucketPriority: TokenBucketPriority.top,\n  });\n  const selectedToToken =\n    tokensToSearchSwapFrom.find(({ address }) =>\n      isEqualCaseInsensitive(address, toToken?.address),\n    ) || toToken;\n  const toTokenIsNotDefault =\n    selectedToToken?.address &&\n    !isSwapsDefaultTokenAddress(selectedToToken?.address, chainId);\n  const occurrences = Number(\n    selectedToToken?.occurances || selectedToToken?.occurrences || 0,\n  );\n  const {\n    address: fromTokenAddress,\n    symbol: fromTokenSymbol,\n    string: fromTokenString,\n    decimals: fromTokenDecimals,\n    balance: rawFromTokenBalance,\n  } = selectedFromToken || {};\n  const { address: toTokenAddress } = selectedToToken || {};\n\n  const fromTokenBalance =\n    rawFromTokenBalance &&\n    calcTokenAmount(rawFromTokenBalance, fromTokenDecimals).toString(10);\n\n  const prevFromTokenBalance = usePrevious(fromTokenBalance);\n\n  const swapFromTokenFiatValue = useTokenFiatAmount(\n    fromTokenAddress,\n    fromTokenInputValue || 0,\n    fromTokenSymbol,\n    {\n      showFiat: useCurrencyRateCheck,\n    },\n    true,\n  );\n  const swapFromEthFiatValue = useEthFiatAmount(\n    fromTokenInputValue || 0,\n    { showFiat: useCurrencyRateCheck },\n    true,\n  );\n  const swapFromFiatValue = isSwapsDefaultTokenSymbol(fromTokenSymbol, chainId)\n    ? swapFromEthFiatValue\n    : swapFromTokenFiatValue;\n\n  const onInputChange = useCallback(\n    (newInputValue, balance) => {\n      dispatch(setFromTokenInputValue(newInputValue));\n      const newBalanceError = new BigNumber(newInputValue || 0).gt(\n        balance || 0,\n      );\n      // \"setBalanceError\" is just a warning, a user can still click on the \"Review swap\" button.\n      if (balanceError !== newBalanceError) {\n        dispatch(setBalanceError(newBalanceError));\n      }\n      dispatch(\n        setFromTokenError(\n          fromToken && countDecimals(newInputValue) > fromToken.decimals\n            ? 'tooManyDecimals'\n            : null,\n        ),\n      );\n    },\n    [dispatch, fromToken, balanceError],\n  );\n\n  const onFromSelect = (token) => {\n    if (\n      token?.address &&\n      !swapFromFiatValue &&\n      fetchedTokenExchangeRate !== null\n    ) {\n      fetchTokenPrice(token.address).then((rate) => {\n        if (rate !== null && rate !== undefined) {\n          setFetchedTokenExchangeRate(rate);\n        }\n      });\n    } else {\n      setFetchedTokenExchangeRate(null);\n    }\n    if (\n      token?.address &&\n      !memoizedUsersTokens.find((usersToken) =>\n        isEqualCaseInsensitive(usersToken.address, token.address),\n      )\n    ) {\n      fetchTokenBalance(\n        token.address,\n        selectedAccountAddress,\n        global.ethereumProvider,\n      ).then((fetchedBalance) => {\n        if (fetchedBalance?.balance) {\n          const balanceAsDecString = fetchedBalance.balance.toString(10);\n          const userTokenBalance = calcTokenAmount(\n            balanceAsDecString,\n            token.decimals,\n          );\n          dispatch(\n            setSwapsFromToken({\n              ...token,\n              string: userTokenBalance.toString(10),\n              balance: balanceAsDecString,\n            }),\n          );\n        }\n      });\n    }\n    dispatch(setSwapsFromToken(token));\n    onInputChange(\n      token?.address ? fromTokenInputValue : '',\n      token.string,\n      token.decimals,\n    );\n  };\n\n  const blockExplorerTokenLink = getTokenTrackerLink(\n    selectedToToken.address,\n    chainId,\n    null, // no networkId\n    null, // no holderAddress\n    {\n      blockExplorerUrl:\n        SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP[chainId] ?? null,\n    },\n  );\n\n  const blockExplorerLabel = rpcPrefs.blockExplorerUrl\n    ? getURLHostName(blockExplorerTokenLink)\n    : t('etherscan');\n\n  const { address: toAddress } = toToken || {};\n  const onToSelect = useCallback(\n    (token) => {\n      if (latestAddedTokenTo && token.address !== toAddress) {\n        dispatch(\n          ignoreTokens({\n            tokensToIgnore: toAddress,\n            dontShowLoadingIndicator: true,\n          }),\n        );\n      }\n      dispatch(setSwapToToken(token));\n      setVerificationClicked(false);\n    },\n    [dispatch, latestAddedTokenTo, toAddress],\n  );\n\n  const hideDropdownItemIf = useCallback(\n    (item) => isEqualCaseInsensitive(item.address, fromTokenAddress),\n    [fromTokenAddress],\n  );\n\n  const tokensWithBalancesFromToken = tokensWithBalances.find((token) =>\n    isEqualCaseInsensitive(token.address, fromToken?.address),\n  );\n  const previousTokensWithBalancesFromToken = usePrevious(\n    tokensWithBalancesFromToken,\n  );\n\n  useEffect(() => {\n    const notDefault = !isSwapsDefaultTokenAddress(\n      tokensWithBalancesFromToken?.address,\n      chainId,\n    );\n    const addressesAreTheSame = isEqualCaseInsensitive(\n      tokensWithBalancesFromToken?.address,\n      previousTokensWithBalancesFromToken?.address,\n    );\n    const balanceHasChanged =\n      tokensWithBalancesFromToken?.balance !==\n      previousTokensWithBalancesFromToken?.balance;\n    if (notDefault && addressesAreTheSame && balanceHasChanged) {\n      dispatch(\n        setSwapsFromToken({\n          ...fromToken,\n          balance: tokensWithBalancesFromToken?.balance,\n          string: tokensWithBalancesFromToken?.string,\n        }),\n      );\n    }\n  }, [\n    dispatch,\n    tokensWithBalancesFromToken,\n    previousTokensWithBalancesFromToken,\n    fromToken,\n    chainId,\n  ]);\n\n  // If the eth balance changes while on build quote, we update the selected from token\n  useEffect(() => {\n    if (\n      isSwapsDefaultTokenAddress(fromToken?.address, chainId) &&\n      fromToken?.balance !== hexToDecimal(ethBalance)\n    ) {\n      dispatch(\n        setSwapsFromToken({\n          ...fromToken,\n          balance: hexToDecimal(ethBalance),\n          string: getValueFromWeiHex({\n            value: ethBalance,\n            numberOfDecimals: 4,\n            toDenomination: 'ETH',\n          }),\n        }),\n      );\n    }\n  }, [dispatch, fromToken, ethBalance, chainId]);\n\n  useEffect(() => {\n    if (prevFromTokenBalance !== fromTokenBalance) {\n      onInputChange(fromTokenInputValue, fromTokenBalance);\n    }\n  }, [\n    onInputChange,\n    prevFromTokenBalance,\n    fromTokenInputValue,\n    fromTokenBalance,\n  ]);\n\n  const trackBuildQuotePageLoadedEvent = useCallback(() => {\n    trackEvent({\n      event: 'Build Quote Page Loaded',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n      },\n    });\n  }, [\n    trackEvent,\n    hardwareWalletUsed,\n    hardwareWalletType,\n    smartTransactionsEnabled,\n    currentSmartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n  ]);\n\n  useEffect(() => {\n    dispatch(resetSwapsPostFetchState());\n    dispatch(setReviewSwapClickedTimestamp());\n    trackBuildQuotePageLoadedEvent();\n  }, [dispatch, trackBuildQuotePageLoadedEvent]);\n\n  useEffect(() => {\n    if (smartTransactionsEnabled && smartTransactionFees?.tradeTxFees) {\n      // We want to clear STX fees, because we only want to use fresh ones on the View Quote page.\n      clearSmartTransactionFees();\n    }\n  }, [smartTransactionsEnabled, smartTransactionFees]);\n\n  const BlockExplorerLink = () => {\n    return (\n      <a\n        className=\"build-quote__token-etherscan-link build-quote__underline\"\n        key=\"build-quote-etherscan-link\"\n        onClick={() => {\n          /* istanbul ignore next */\n          trackEvent({\n            event: MetaMetricsEventName.ExternalLinkClicked,\n            category: MetaMetricsEventCategory.Swaps,\n            properties: {\n              link_type: MetaMetricsEventLinkType.TokenTracker,\n              location: 'Swaps Confirmation',\n              url_domain: getURLHostName(blockExplorerTokenLink),\n            },\n          });\n          global.platform.openTab({\n            url: blockExplorerTokenLink,\n          });\n        }}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {blockExplorerLabel}\n      </a>\n    );\n  };\n\n  let tokenVerificationDescription = '';\n  if (blockExplorerTokenLink) {\n    if (occurrences === 1) {\n      tokenVerificationDescription = t('verifyThisTokenOn', [\n        <BlockExplorerLink key=\"block-explorer-link\" />,\n      ]);\n    } else if (occurrences === 0) {\n      tokenVerificationDescription = t('verifyThisUnconfirmedTokenOn', [\n        <BlockExplorerLink key=\"block-explorer-link\" />,\n      ]);\n    }\n  }\n\n  const swapYourTokenBalance = t('swapYourTokenBalance', [\n    fromTokenString || '0',\n    fromTokenSymbol || SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId]?.symbol || '',\n  ]);\n\n  const isDirectWrappingEnabled = shouldEnableDirectWrapping(\n    chainId,\n    fromTokenAddress,\n    selectedToToken.address,\n  );\n  const isReviewSwapButtonDisabled =\n    fromTokenError ||\n    !isFeatureFlagLoaded ||\n    !Number(fromTokenInputValue) ||\n    !selectedToToken?.address ||\n    !fromTokenAddress ||\n    Number(maxSlippage) < 0 ||\n    Number(maxSlippage) > MAX_ALLOWED_SLIPPAGE ||\n    (toTokenIsNotDefault && occurrences < 2 && !verificationClicked);\n\n  // It's triggered every time there is a change in form values (token from, token to, amount and slippage).\n  useEffect(() => {\n    dispatch(clearSwapsQuotes());\n    dispatch(stopPollingForQuotes());\n    const prefetchQuotesWithoutRedirecting = async () => {\n      const pageRedirectionDisabled = true;\n      await dispatch(\n        fetchQuotesAndSetQuoteState(\n          history,\n          fromTokenInputValue,\n          maxSlippage,\n          trackEvent,\n          pageRedirectionDisabled,\n        ),\n      );\n    };\n    // Delay fetching quotes until a user is done typing an input value. If they type a new char in less than a second,\n    // we will cancel previous setTimeout call and start running a new one.\n    timeoutIdForQuotesPrefetching = setTimeout(() => {\n      timeoutIdForQuotesPrefetching = null;\n      if (!isReviewSwapButtonDisabled) {\n        // Only do quotes prefetching if the Review swap button is enabled.\n        prefetchQuotesWithoutRedirecting();\n      }\n    }, 1000);\n    return () => clearTimeout(timeoutIdForQuotesPrefetching);\n  }, [\n    dispatch,\n    history,\n    maxSlippage,\n    trackEvent,\n    isReviewSwapButtonDisabled,\n    fromTokenInputValue,\n    fromTokenAddress,\n    toTokenAddress,\n    smartTransactionsOptInStatus,\n  ]);\n\n  return (\n    <div className=\"build-quote\">\n      <div className=\"build-quote__content\">\n        <div className=\"build-quote__dropdown-input-pair-header\">\n          <div className=\"build-quote__input-label\">{t('swapSwapFrom')}</div>\n          {!isSwapsDefaultTokenSymbol(fromTokenSymbol, chainId) && (\n            <div\n              className=\"build-quote__max-button\"\n              data-testid=\"build-quote__max-button\"\n              onClick={() =>\n                onInputChange(fromTokenBalance || '0', fromTokenBalance)\n              }\n            >\n              {t('max')}\n            </div>\n          )}\n        </div>\n        <DropdownInputPair\n          onSelect={onFromSelect}\n          itemsToSearch={tokensToSearchSwapFrom}\n          onInputChange={(value) => {\n            /* istanbul ignore next */\n            onInputChange(value, fromTokenBalance);\n          }}\n          inputValue={fromTokenInputValue}\n          leftValue={fromTokenInputValue && swapFromFiatValue}\n          selectedItem={selectedFromToken}\n          maxListItems={30}\n          loading={\n            loading &&\n            (!tokensToSearchSwapFrom?.length ||\n              !topAssets ||\n              !Object.keys(topAssets).length)\n          }\n          selectPlaceHolderText={t('swapSelect')}\n          hideItemIf={(item) =>\n            isEqualCaseInsensitive(item.address, selectedToToken?.address)\n          }\n          listContainerClassName=\"build-quote__open-dropdown\"\n          autoFocus\n        />\n        <div\n          className={classnames('build-quote__balance-message', {\n            'build-quote__balance-message--error':\n              balanceError || fromTokenError,\n          })}\n        >\n          {!fromTokenError &&\n            !balanceError &&\n            fromTokenSymbol &&\n            swapYourTokenBalance}\n          {!fromTokenError && balanceError && fromTokenSymbol && (\n            <div className=\"build-quite__insufficient-funds\">\n              <div className=\"build-quite__insufficient-funds-first\">\n                {t('swapsNotEnoughForTx', [fromTokenSymbol])}\n              </div>\n              <div className=\"build-quite__insufficient-funds-second\">\n                {swapYourTokenBalance}\n              </div>\n            </div>\n          )}\n          {fromTokenError && (\n            <>\n              <div className=\"build-quote__form-error\">\n                {t('swapTooManyDecimalsError', [\n                  fromTokenSymbol,\n                  fromTokenDecimals,\n                ])}\n              </div>\n              <div>{swapYourTokenBalance}</div>\n            </>\n          )}\n        </div>\n        <div className=\"build-quote__swap-arrows-row\">\n          <button\n            className=\"build-quote__swap-arrows\"\n            data-testid=\"build-quote__swap-arrows\"\n            onClick={() => {\n              onToSelect(selectedFromToken);\n              onFromSelect(selectedToToken);\n            }}\n          >\n            <i className=\"fa fa-arrow-up\" title={t('swapSwapSwitch')} />\n            <i className=\"fa fa-arrow-down\" title={t('swapSwapSwitch')} />\n          </button>\n        </div>\n        <div className=\"build-quote__dropdown-swap-to-header\">\n          <div className=\"build-quote__input-label\">{t('swapSwapTo')}</div>\n        </div>\n        <div className=\"dropdown-input-pair dropdown-input-pair__to\">\n          <DropdownSearchList\n            startingItem={selectedToToken}\n            itemsToSearch={tokensToSearchSwapTo}\n            fuseSearchKeys={fuseSearchKeys}\n            selectPlaceHolderText={t('swapSelectAToken')}\n            maxListItems={30}\n            onSelect={onToSelect}\n            loading={\n              loading &&\n              (!tokensToSearchSwapTo?.length ||\n                !topAssets ||\n                !Object.keys(topAssets).length)\n            }\n            externallySelectedItem={selectedToToken}\n            hideItemIf={hideDropdownItemIf}\n            listContainerClassName=\"build-quote__open-to-dropdown\"\n            hideRightLabels\n            defaultToAll\n            shouldSearchForImports\n          />\n        </div>\n        {toTokenIsNotDefault &&\n          (occurrences < 2 ? (\n            <ActionableMessage\n              type={occurrences === 1 ? 'warning' : 'danger'}\n              message={\n                <div className=\"build-quote__token-verification-warning-message\">\n                  <div className=\"build-quote__bold\">\n                    {occurrences === 1\n                      ? t('swapTokenVerificationOnlyOneSource')\n                      : t('swapTokenVerificationAddedManually')}\n                  </div>\n                  <div>{tokenVerificationDescription}</div>\n                </div>\n              }\n              primaryAction={\n                /* istanbul ignore next */\n                verificationClicked\n                  ? null\n                  : {\n                      label: t('continue'),\n                      onClick: () => setVerificationClicked(true),\n                    }\n              }\n              withRightButton\n              infoTooltipText={\n                blockExplorerTokenLink &&\n                t('swapVerifyTokenExplanation', [blockExplorerLabel])\n              }\n            />\n          ) : (\n            <div className=\"build-quote__token-message\">\n              <span\n                className=\"build-quote__bold\"\n                key=\"token-verification-bold-text\"\n              >\n                {t('swapTokenVerificationSources', [occurrences])}\n              </span>\n              {blockExplorerTokenLink && (\n                <>\n                  {t('swapTokenVerificationMessage', [\n                    <a\n                      className=\"build-quote__token-etherscan-link\"\n                      key=\"build-quote-etherscan-link\"\n                      onClick={() => {\n                        /* istanbul ignore next */\n                        trackEvent({\n                          event: 'Clicked Block Explorer Link',\n                          category: MetaMetricsEventCategory.Swaps,\n                          properties: {\n                            link_type: 'Token Tracker',\n                            action: 'Swaps Confirmation',\n                            block_explorer_domain: getURLHostName(\n                              blockExplorerTokenLink,\n                            ),\n                          },\n                        });\n                        global.platform.openTab({\n                          url: blockExplorerTokenLink,\n                        });\n                      }}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {blockExplorerLabel}\n                    </a>,\n                  ])}\n                  <InfoTooltip\n                    position=\"top\"\n                    contentText={t('swapVerifyTokenExplanation', [\n                      blockExplorerLabel,\n                    ])}\n                    containerClassName=\"build-quote__token-tooltip-container\"\n                    key=\"token-verification-info-tooltip\"\n                  />\n                </>\n              )}\n            </div>\n          ))}\n        {!isDirectWrappingEnabled && (\n          <div className=\"build-quote__slippage-buttons-container\">\n            <SlippageButtons\n              onSelect={(newSlippage) => {\n                dispatch(setMaxSlippage(newSlippage));\n              }}\n              maxAllowedSlippage={MAX_ALLOWED_SLIPPAGE}\n              currentSlippage={maxSlippage}\n              isDirectWrappingEnabled={isDirectWrappingEnabled}\n            />\n          </div>\n        )}\n      </div>\n      <SwapsFooter\n        onSubmit={\n          /* istanbul ignore next */\n          async () => {\n            // We need this to know how long it took to go from clicking on the Review swap button to rendered View Quote page.\n            dispatch(setReviewSwapClickedTimestamp(Date.now()));\n            // In case that quotes prefetching is waiting to be executed, but hasn't started yet,\n            // we want to cancel it and fetch quotes from here.\n            if (timeoutIdForQuotesPrefetching) {\n              clearTimeout(timeoutIdForQuotesPrefetching);\n              dispatch(\n                fetchQuotesAndSetQuoteState(\n                  history,\n                  fromTokenInputValue,\n                  maxSlippage,\n                  trackEvent,\n                ),\n              );\n            } else if (areQuotesPresent) {\n              // If there are prefetched quotes already, go directly to the View Quote page.\n              history.push(VIEW_QUOTE_ROUTE);\n            } else {\n              // If the \"Review swap\" button was clicked while quotes are being fetched, go to the Loading Quotes page.\n              await dispatch(setBackgroundSwapRouteState('loading'));\n              history.push(LOADING_QUOTES_ROUTE);\n            }\n          }\n        }\n        submitText={t('swapReviewSwap')}\n        disabled={isReviewSwapButtonDisabled}\n        hideCancel\n        showTermsOfService\n      />\n    </div>\n  );\n}\n\nBuildQuote.propTypes = {\n  ethBalance: PropTypes.string,\n  selectedAccountAddress: PropTypes.string,\n  shuffledTokensList: PropTypes.array,\n};\n","export { default } from './build-quote';\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Duration } from 'luxon';\nimport { I18nContext } from '../../../contexts/i18n';\nimport InfoTooltip from '../../../components/ui/info-tooltip';\nimport {\n  getSwapsQuoteRefreshTime,\n  getSwapsQuotePrefetchingRefreshTime,\n} from '../../../ducks/swaps/swaps';\nimport { SECOND } from '../../../../shared/constants/time';\n\n// Return the mm:ss start time of the countdown timer.\n// If time has elapsed between `timeStarted` the time current time,\n// then that elapsed time will be subtracted from the timer before\n// rendering\nfunction getNewTimer(currentTime, timeStarted, timeBaseStart) {\n  const timeAlreadyElapsed = currentTime - timeStarted;\n  return timeBaseStart - timeAlreadyElapsed;\n}\n\nfunction decreaseTimerByOne(timer) {\n  return Math.max(timer - SECOND, 0);\n}\n\nfunction timeBelowWarningTime(timer, warningTime) {\n  const [warningTimeMinutes, warningTimeSeconds] = warningTime.split(':');\n  return (\n    timer <=\n    (Number(warningTimeMinutes) * 60 + Number(warningTimeSeconds)) * SECOND\n  );\n}\n\nexport default function CountdownTimer({\n  timeStarted,\n  timeOnly,\n  timerBase,\n  warningTime,\n  labelKey,\n  infoTooltipLabelKey,\n}) {\n  const t = useContext(I18nContext);\n  const intervalRef = useRef();\n  const initialTimeStartedRef = useRef();\n\n  const swapsQuoteRefreshTime = useSelector(getSwapsQuoteRefreshTime);\n  const swapsQuotePrefetchingRefreshTime = useSelector(\n    getSwapsQuotePrefetchingRefreshTime,\n  );\n  const refreshTime = initialTimeStartedRef.current\n    ? swapsQuoteRefreshTime\n    : swapsQuotePrefetchingRefreshTime;\n  const timerStart = Number(timerBase) || refreshTime;\n\n  const [currentTime, setCurrentTime] = useState(() => Date.now());\n  const [timer, setTimer] = useState(() =>\n    getNewTimer(currentTime, timeStarted, timerStart),\n  );\n\n  useEffect(() => {\n    if (intervalRef.current === undefined) {\n      intervalRef.current = setInterval(() => {\n        setTimer(decreaseTimerByOne);\n      }, SECOND);\n    }\n\n    return function cleanup() {\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  // Reset the timer that timer has hit '0:00' and the timeStarted prop has changed\n  useEffect(() => {\n    if (!initialTimeStartedRef.current) {\n      initialTimeStartedRef.current = timeStarted || Date.now();\n    }\n\n    if (timer === 0 && timeStarted !== initialTimeStartedRef.current) {\n      initialTimeStartedRef.current = timeStarted;\n      const newCurrentTime = Date.now();\n      setCurrentTime(newCurrentTime);\n      setTimer(getNewTimer(newCurrentTime, timeStarted, timerStart));\n\n      clearInterval(intervalRef.current);\n      intervalRef.current = setInterval(() => {\n        setTimer(decreaseTimerByOne);\n      }, SECOND);\n    }\n  }, [timeStarted, timer, timerStart]);\n\n  const formattedTimer = Duration.fromMillis(timer).toFormat('m:ss');\n  let time;\n  if (timeOnly) {\n    time = <div className=\"countdown-timer__time\">{formattedTimer}</div>;\n  } else if (labelKey) {\n    time = t(labelKey, [\n      <div key=\"countdown-time-1\" className=\"countdown-timer__time\">\n        {formattedTimer}\n      </div>,\n    ]);\n  }\n\n  return (\n    <div className=\"countdown-timer\">\n      <div\n        data-testid=\"countdown-timer__timer-container\"\n        className={classnames('countdown-timer__timer-container', {\n          'countdown-timer__timer-container--warning':\n            warningTime && timeBelowWarningTime(timer, warningTime),\n        })}\n      >\n        {time}\n      </div>\n      {!timeOnly && infoTooltipLabelKey ? (\n        <InfoTooltip position=\"bottom\" contentText={t(infoTooltipLabelKey)} />\n      ) : null}\n    </div>\n  );\n}\n\nCountdownTimer.propTypes = {\n  /**\n   * Unix timestamp that indicates the time at which this timer has started\n   * running.\n   */\n  timeStarted: PropTypes.number,\n\n  /**\n   * Boolean indicating whether to display only the time (`true`) or to also\n   * display a label (`false`), given by the `labelKey` parameter.\n   */\n  timeOnly: PropTypes.bool,\n\n  /**\n   * The duration of this timer in milliseconds.\n   */\n  timerBase: PropTypes.number,\n\n  /**\n   * The time at which this timer should turn red, indicating it has almost run\n   * out of time. Given in the format `mm:ss`.\n   */\n  warningTime: PropTypes.string,\n\n  /**\n   * The key of the label to display next to the timer, defined in\n   * `app/_locales/`.\n   */\n  labelKey: PropTypes.string,\n\n  /**\n   * The key of the label to display in the tooltip when hovering over the info\n   * icon, defined in `app/_locales/`.\n   */\n  infoTooltipLabelKey: PropTypes.string,\n};\n","export { default } from './countdown-timer';\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport isEqual from 'lodash/isEqual';\n\nimport Box from '../../../components/ui/box';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport {\n  navigateBackToBuildQuote,\n  setSwapsFromToken,\n} from '../../../ducks/swaps/swaps';\nimport { DEFAULT_ROUTE } from '../../../helpers/constants/routes';\nimport { getSwapsDefaultToken } from '../../../selectors';\n\nexport default function CreateNewSwap({ sensitiveTrackingProperties }) {\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const defaultSwapsToken = useSelector(getSwapsDefaultToken, isEqual);\n\n  return (\n    <Box marginBottom={3} className=\"create-new-swap\">\n      <button\n        onClick={async () => {\n          trackEvent({\n            event: 'Make Another Swap',\n            category: MetaMetricsEventCategory.Swaps,\n            sensitiveProperties: sensitiveTrackingProperties,\n          });\n          history.push(DEFAULT_ROUTE); // It cleans up Swaps state.\n          await dispatch(navigateBackToBuildQuote(history));\n          dispatch(setSwapsFromToken(defaultSwapsToken));\n        }}\n      >\n        {t('makeAnotherSwap')}\n      </button>\n    </Box>\n  );\n}\n\nCreateNewSwap.propTypes = {\n  sensitiveTrackingProperties: PropTypes.object.isRequired,\n};\n","export { default } from './create-new-swap';\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DropdownSearchList from '../dropdown-search-list';\nimport TextField from '../../../components/ui/text-field';\n\nconst characterWidthMap = {\n  1: 5.86,\n  2: 10.05,\n  3: 10.45,\n  4: 11.1,\n  5: 10,\n  6: 10.06,\n  7: 9.17,\n  8: 10.28,\n  9: 10.06,\n  0: 11.22,\n  '.': 4.55,\n};\n\nconst getInputWidth = (value) => {\n  const valueString = String(value);\n  const charArray = valueString.split('');\n  return charArray.reduce(\n    (inputWidth, _char) => inputWidth + characterWidthMap[_char],\n    12,\n  );\n};\nexport default function DropdownInputPair({\n  itemsToSearch = [],\n  onInputChange,\n  inputValue = '',\n  onSelect,\n  leftValue,\n  selectedItem,\n  SearchListPlaceholder,\n  maxListItems,\n  selectPlaceHolderText,\n  loading,\n  hideItemIf,\n  listContainerClassName,\n  autoFocus,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n  const inputRef = useRef();\n  const onTextFieldChange = (event) => {\n    event.stopPropagation();\n    // Automatically prefix value with 0. if user begins typing .\n    const valueToUse = event.target.value === '.' ? '0.' : event.target.value;\n\n    // Regex that validates strings with only numbers, 'x.', '.x', and 'x.x'\n    const regexp = /^(\\.\\d+|\\d+(\\.\\d+)?|\\d+\\.)$/u;\n    // If the value is either empty or contains only numbers and '.' and only has one '.', update input to match\n    if (valueToUse === '' || regexp.test(valueToUse)) {\n      onInputChange(valueToUse);\n    } else {\n      // otherwise, use the previously set inputValue (effectively denying the user from inputting the last char)\n      // or an empty string if we do not yet have an inputValue\n      onInputChange(inputValue || '');\n    }\n  };\n  const [applyTwoLineStyle, setApplyTwoLineStyle] = useState(null);\n  useEffect(() => {\n    setApplyTwoLineStyle(\n      (inputRef?.current?.getBoundingClientRect()?.width || 0) +\n        getInputWidth(inputValue || '') >\n        137,\n    );\n  }, [inputValue, inputRef]);\n\n  return (\n    <div className=\"dropdown-input-pair\">\n      <DropdownSearchList\n        itemsToSearch={itemsToSearch}\n        SearchListPlaceholder={SearchListPlaceholder}\n        fuseSearchKeys={[\n          { name: 'name', weight: 0.499 },\n          { name: 'symbol', weight: 0.499 },\n          { name: 'address', weight: 0.002 },\n        ]}\n        maxListItems={maxListItems}\n        onOpen={open}\n        onClose={close}\n        onSelect={onSelect}\n        className={isOpen ? 'dropdown-input-pair__list--full-width' : ''}\n        externallySelectedItem={selectedItem}\n        selectPlaceHolderText={selectPlaceHolderText}\n        selectorClosedClassName=\"dropdown-input-pair__selector--closed\"\n        listContainerClassName={listContainerClassName}\n        loading={loading}\n        hideItemIf={hideItemIf}\n        defaultToAll\n      />\n      {!isOpen && (\n        <TextField\n          className={classnames('dropdown-input-pair__input', {\n            'dropdown-input-pair__two-line-input': applyTwoLineStyle,\n          })}\n          type=\"text\"\n          placeholder=\"0\"\n          onChange={onTextFieldChange}\n          fullWidth\n          margin=\"dense\"\n          value={inputValue}\n          autoFocus={autoFocus}\n        />\n      )}\n      {!isOpen && leftValue && (\n        <div\n          className={classnames('dropdown-input-pair__left-value', {\n            'dropdown-input-pair__left-value--two-lines': applyTwoLineStyle,\n          })}\n          ref={inputRef}\n        >\n          ≈ {leftValue}\n        </div>\n      )}\n    </div>\n  );\n}\n\nDropdownInputPair.propTypes = {\n  /**\n   * Give items data for the component\n   */\n  itemsToSearch: PropTypes.array,\n  /**\n   * Handler for input change\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Show input value content\n   */\n  inputValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Handler for onSelect\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Set value to left\n   */\n  leftValue: PropTypes.string,\n  /**\n   * Show selected item\n   */\n  selectedItem: PropTypes.object,\n  /**\n   * Doesn't look like this is used\n   */\n  SearchListPlaceholder: PropTypes.func,\n  /**\n   * Define maximum item per list\n   */\n  maxListItems: PropTypes.number,\n  /**\n   * Show select placeholder text\n   */\n  selectPlaceHolderText: PropTypes.string,\n  /**\n   * Check if the component is loading\n   */\n  loading: PropTypes.bool,\n  /**\n   * Handler for hide item\n   */\n  hideItemIf: PropTypes.func,\n  /**\n   * Add custom CSS class for list container\n   */\n  listContainerClassName: PropTypes.string,\n  /**\n   * Check if the component is auto focus\n   */\n  autoFocus: PropTypes.bool,\n};\n","export { default } from './dropdown-input-pair';\n","import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useContext,\n  useRef,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { isEqual } from 'lodash';\nimport { I18nContext } from '../../../contexts/i18n';\nimport SearchableItemList from '../searchable-item-list';\nimport PulseLoader from '../../../components/ui/pulse-loader';\nimport UrlIcon from '../../../components/ui/url-icon';\nimport {\n  Icon,\n  IconName,\n  IconSize,\n} from '../../../components/component-library';\nimport ActionableMessage from '../../../components/ui/actionable-message/actionable-message';\nimport ImportToken from '../import-token';\nimport {\n  isHardwareWallet,\n  getHardwareWalletType,\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n} from '../../../selectors/selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\nimport { SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP } from '../../../../shared/constants/swaps';\nimport { getURLHostName } from '../../../helpers/utils/util';\nimport { getCurrentSmartTransactionsEnabled } from '../../../ducks/swaps/swaps';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\n\nexport default function DropdownSearchList({\n  searchListClassName,\n  itemsToSearch,\n  selectPlaceHolderText,\n  fuseSearchKeys,\n  defaultToAll,\n  maxListItems,\n  onSelect,\n  startingItem,\n  onOpen,\n  onClose,\n  className = '',\n  externallySelectedItem,\n  selectorClosedClassName,\n  loading,\n  hideRightLabels,\n  hideItemIf,\n  listContainerClassName,\n  shouldSearchForImports,\n}) {\n  const t = useContext(I18nContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isImportTokenModalOpen, setIsImportTokenModalOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(startingItem);\n  const [tokenForImport, setTokenForImport] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const close = useCallback(() => {\n    setIsOpen(false);\n    onClose?.();\n  }, [onClose]);\n\n  const onClickItem = useCallback(\n    (item) => {\n      onSelect?.(item);\n      setSelectedItem(item);\n      close();\n    },\n    [onSelect, close],\n  );\n\n  const onOpenImportTokenModalClick = (item) => {\n    setTokenForImport(item);\n    setIsImportTokenModalOpen(true);\n  };\n\n  /* istanbul ignore next */\n  const onImportTokenClick = () => {\n    trackEvent({\n      event: 'Token Imported',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        symbol: tokenForImport?.symbol,\n        address: tokenForImport?.address,\n        chain_id: chainId,\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n      },\n    });\n    // Only when a user confirms import of a token, we add it and show it in a dropdown.\n    onSelect?.(tokenForImport);\n    setSelectedItem(tokenForImport);\n    setTokenForImport(null);\n    close();\n  };\n\n  const onImportTokenCloseClick = () => {\n    setIsImportTokenModalOpen(false);\n    close();\n  };\n\n  const onClickSelector = useCallback(() => {\n    if (!isOpen) {\n      setIsOpen(true);\n      onOpen?.();\n    }\n  }, [isOpen, onOpen]);\n\n  const prevExternallySelectedItemRef = useRef();\n  useEffect(() => {\n    prevExternallySelectedItemRef.current = externallySelectedItem;\n  });\n  const prevExternallySelectedItem = prevExternallySelectedItemRef.current;\n\n  useEffect(() => {\n    if (\n      externallySelectedItem &&\n      !isEqual(externallySelectedItem, selectedItem)\n    ) {\n      setSelectedItem(externallySelectedItem);\n    } else if (prevExternallySelectedItem && !externallySelectedItem) {\n      setSelectedItem(null);\n    }\n  }, [externallySelectedItem, selectedItem, prevExternallySelectedItem]);\n\n  const onKeyUp = (e) => {\n    if (e.key === 'Escape') {\n      close();\n    } else if (e.key === 'Enter') {\n      onClickSelector(e);\n    }\n  };\n\n  const blockExplorerLink =\n    rpcPrefs.blockExplorerUrl ??\n    SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP[chainId] ??\n    null;\n\n  const blockExplorerHostName = getURLHostName(blockExplorerLink);\n\n  const importTokenProps = {\n    onImportTokenCloseClick,\n    onImportTokenClick,\n    setIsImportTokenModalOpen,\n    tokenForImport,\n  };\n\n  return (\n    <div\n      className={classnames('dropdown-search-list', className)}\n      data-testid=\"dropdown-search-list\"\n      onClick={onClickSelector}\n      onKeyUp={onKeyUp}\n      tabIndex=\"0\"\n    >\n      {tokenForImport && isImportTokenModalOpen && (\n        <ImportToken isOpen {...importTokenProps} />\n      )}\n      {!isOpen && (\n        <div\n          className={classnames(\n            'dropdown-search-list__selector-closed-container',\n            selectorClosedClassName,\n          )}\n        >\n          <div className=\"dropdown-search-list__selector-closed\">\n            {selectedItem?.iconUrl && (\n              <UrlIcon\n                url={selectedItem.iconUrl}\n                className=\"dropdown-search-list__selector-closed-icon\"\n                name={selectedItem?.symbol}\n              />\n            )}\n            {!selectedItem?.iconUrl && (\n              <div className=\"dropdown-search-list__default-dropdown-icon\" />\n            )}\n            <div className=\"dropdown-search-list__labels\">\n              <div className=\"dropdown-search-list__item-labels\">\n                <span\n                  className={classnames(\n                    'dropdown-search-list__closed-primary-label',\n                    {\n                      'dropdown-search-list__select-default':\n                        !selectedItem?.symbol,\n                    },\n                  )}\n                >\n                  {selectedItem?.symbol || selectPlaceHolderText}\n                </span>\n              </div>\n            </div>\n          </div>\n          <Icon name={IconName.ArrowDown} size={IconSize.Xs} marginRight={3} />\n        </div>\n      )}\n      {isOpen && (\n        <>\n          <SearchableItemList\n            itemsToSearch={loading ? [] : itemsToSearch}\n            Placeholder={() =>\n              /* istanbul ignore next */\n              loading ? (\n                <div className=\"dropdown-search-list__loading-item\">\n                  <PulseLoader />\n                  <div className=\"dropdown-search-list__loading-item-text-container\">\n                    <span className=\"dropdown-search-list__loading-item-text\">\n                      {t('swapFetchingTokens')}\n                    </span>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"dropdown-search-list__placeholder\">\n                  {t('swapBuildQuotePlaceHolderText', [searchQuery])}\n                  {blockExplorerLink && (\n                    <div\n                      tabIndex=\"0\"\n                      className=\"searchable-item-list__item searchable-item-list__item--add-token\"\n                      key=\"searchable-item-list-item-last\"\n                    >\n                      <ActionableMessage\n                        message={t('addTokenByContractAddress', [\n                          <a\n                            key=\"dropdown-search-list__etherscan-link\"\n                            onClick={() => {\n                              trackEvent({\n                                event: 'Clicked Block Explorer Link',\n                                category: MetaMetricsEventCategory.Swaps,\n                                properties: {\n                                  link_type: 'Token Tracker',\n                                  action: 'Verify Contract Address',\n                                  block_explorer_domain: blockExplorerHostName,\n                                },\n                              });\n                              global.platform.openTab({\n                                url: blockExplorerLink,\n                              });\n                            }}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {blockExplorerHostName}\n                          </a>,\n                        ])}\n                      />\n                    </div>\n                  )}\n                </div>\n              )\n            }\n            searchPlaceholderText={t('swapSearchNameOrAddress')}\n            fuseSearchKeys={fuseSearchKeys}\n            defaultToAll={defaultToAll}\n            onClickItem={onClickItem}\n            onOpenImportTokenModalClick={onOpenImportTokenModalClick}\n            maxListItems={maxListItems}\n            className={classnames(\n              'dropdown-search-list__token-container',\n              searchListClassName,\n              {\n                'dropdown-search-list--open': isOpen,\n              },\n            )}\n            hideRightLabels={hideRightLabels}\n            hideItemIf={hideItemIf}\n            listContainerClassName={listContainerClassName}\n            shouldSearchForImports={shouldSearchForImports}\n            searchQuery={searchQuery}\n            setSearchQuery={setSearchQuery}\n          />\n          <div\n            className=\"dropdown-search-list__close-area\"\n            data-testid=\"dropdown-search-list__close-area\"\n            onClick={(event) => {\n              event.stopPropagation();\n              setIsOpen(false);\n              onClose?.();\n            }}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nDropdownSearchList.propTypes = {\n  itemsToSearch: PropTypes.array,\n  onSelect: PropTypes.func,\n  searchListClassName: PropTypes.string,\n  fuseSearchKeys: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      weight: PropTypes.number,\n    }),\n  ),\n  defaultToAll: PropTypes.bool,\n  maxListItems: PropTypes.number,\n  startingItem: PropTypes.object,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  className: PropTypes.string,\n  externallySelectedItem: PropTypes.object,\n  loading: PropTypes.bool,\n  selectPlaceHolderText: PropTypes.string,\n  selectorClosedClassName: PropTypes.string,\n  hideRightLabels: PropTypes.bool,\n  hideItemIf: PropTypes.func,\n  listContainerClassName: PropTypes.string,\n  shouldSearchForImports: PropTypes.bool,\n};\n","export { default } from './dropdown-search-list';\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport classnames from 'classnames';\nimport { formatSwapsValueForDisplay } from '../swaps.util';\nimport { calcTokenAmount } from '../../../../shared/lib/transactions-controller-utils';\nimport Box from '../../../components/ui/box';\nimport {\n  JustifyContent,\n  DISPLAY,\n  AlignItems,\n  IconColor,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport { Icon, IconName } from '../../../components/component-library';\nimport { I18nContext } from '../../../contexts/i18n';\n\nexport default function ExchangeRateDisplay({\n  primaryTokenValue,\n  primaryTokenDecimals = 18,\n  primaryTokenSymbol,\n  secondaryTokenValue,\n  secondaryTokenDecimals = 18,\n  secondaryTokenSymbol,\n  boldSymbols = true,\n  showIconForSwappingTokens = true,\n  className,\n  onQuotesClick,\n}) {\n  const [showPrimaryToSecondary, setShowPrimaryToSecondary] = useState(true);\n  const t = useContext(I18nContext);\n\n  const primaryTokenAmount = calcTokenAmount(\n    primaryTokenValue,\n    primaryTokenDecimals,\n  );\n  const secondaryTokenAmount = calcTokenAmount(\n    secondaryTokenValue,\n    secondaryTokenDecimals,\n  );\n\n  const conversionRateFromPrimaryToSecondary = new BigNumber(\n    secondaryTokenAmount,\n  )\n    .div(primaryTokenAmount)\n    .round(9)\n    .toString(10);\n  const conversionRateFromSecondaryToPrimary = new BigNumber(primaryTokenAmount)\n    .div(secondaryTokenAmount)\n    .round(9)\n    .toString(10);\n\n  const baseSymbol = showPrimaryToSecondary\n    ? primaryTokenSymbol\n    : secondaryTokenSymbol;\n  const ratiodSymbol = showPrimaryToSecondary\n    ? secondaryTokenSymbol\n    : primaryTokenSymbol;\n\n  const rate = showPrimaryToSecondary\n    ? conversionRateFromPrimaryToSecondary\n    : conversionRateFromSecondaryToPrimary;\n  let rateToDisplay;\n  let comparisonSymbol = '=';\n\n  if (new BigNumber(rate, 10).lt('0.00000001', 10)) {\n    rateToDisplay = '0.000000001';\n    comparisonSymbol = '<';\n  } else if (new BigNumber(rate, 10).lt('0.000001', 10)) {\n    rateToDisplay = rate;\n  } else {\n    rateToDisplay = formatSwapsValueForDisplay(rate);\n  }\n\n  const quoteRateClassName = onQuotesClick\n    ? 'exchange-rate-display__quote-rate'\n    : 'exchange-rate-display__quote-rate--no-link';\n  const quoteRateColor = onQuotesClick\n    ? TextColor.primaryDefault\n    : TextColor.textDefault;\n\n  return (\n    <div className={classnames('exchange-rate-display', className)}>\n      <Box\n        display={DISPLAY.FLEX}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n        onClick={onQuotesClick}\n        color={quoteRateColor}\n        className={quoteRateClassName}\n        gap={1}\n        data-testid=\"exchange-rate-display-quote-rate\"\n      >\n        <span>1</span>\n        <span\n          className={classnames({ 'exchange-rate-display__bold': boldSymbols })}\n          data-testid=\"exchange-rate-display-base-symbol\"\n        >\n          {baseSymbol}\n        </span>\n        <span>{comparisonSymbol}</span>\n        <span>{rateToDisplay}</span>\n        <span\n          className={classnames({ 'exchange-rate-display__bold': boldSymbols })}\n        >\n          {ratiodSymbol}\n        </span>\n      </Box>\n      {showIconForSwappingTokens && (\n        <Icon\n          name={IconName.SwapHorizontal}\n          onClick={() => {\n            setShowPrimaryToSecondary(!showPrimaryToSecondary);\n          }}\n          color={IconColor.iconAlternative}\n          style={{ cursor: 'pointer' }}\n          title={t('switch')}\n          data-testid=\"exchange-rate-display-switch\"\n        />\n      )}\n    </div>\n  );\n}\n\nExchangeRateDisplay.propTypes = {\n  primaryTokenValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(BigNumber),\n  ]).isRequired,\n  primaryTokenDecimals: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  primaryTokenSymbol: PropTypes.string.isRequired,\n  secondaryTokenValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(BigNumber),\n  ]).isRequired,\n  secondaryTokenDecimals: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  secondaryTokenSymbol: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  boldSymbols: PropTypes.bool,\n  showIconForSwappingTokens: PropTypes.bool,\n  onQuotesClick: PropTypes.func,\n};\n","export { default } from './exchange-rate-display';\n","import React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ZENDESK_URLS from '../../../helpers/constants/zendesk-url';\nimport { I18nContext } from '../../../contexts/i18n';\nimport InfoTooltip from '../../../components/ui/info-tooltip';\nimport TransactionDetail from '../../confirmations/components/transaction-detail/transaction-detail.component';\nimport TransactionDetailItem from '../../confirmations/components/transaction-detail-item/transaction-detail-item.component';\nimport {\n  TextColor,\n  TextVariant,\n  FontWeight,\n} from '../../../helpers/constants/design-system';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport { getUseCurrencyRateCheck } from '../../../selectors';\nimport {\n  Text,\n  ButtonLink,\n  ButtonLinkSize,\n} from '../../../components/component-library';\n\nexport default function FeeCard({\n  primaryFee,\n  secondaryFee,\n  hideTokenApprovalRow,\n  tokenApprovalSourceTokenSymbol,\n  onTokenApprovalClick,\n  metaMaskFee,\n  numberOfQuotes,\n  onQuotesClick,\n}) {\n  const t = useContext(I18nContext);\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const tokenApprovalTextComponent = (\n    <span key=\"fee-card-approve-symbol\" className=\"fee-card__bold\">\n      {t('enableToken', [tokenApprovalSourceTokenSymbol])}\n    </span>\n  );\n\n  return (\n    <div className=\"fee-card\">\n      <div className=\"fee-card__main\">\n        <TransactionDetail\n          disableEditGasFeeButton\n          rows={[\n            <TransactionDetailItem\n              key=\"fee-card-gas-item\"\n              detailTitle={\n                <>\n                  {t('transactionDetailGasHeading')}\n                  <InfoTooltip\n                    position=\"top\"\n                    contentText={\n                      <p className=\"fee-card__info-tooltip-paragraph\">\n                        {t('swapGasFeesExplanation', [\n                          <ButtonLink\n                            size={ButtonLinkSize.Inherit}\n                            href={ZENDESK_URLS.GAS_FEES}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            externalLink\n                            key=\"gas-fees-learn-more\"\n                            onClick={() => {\n                              trackEvent({\n                                event: 'Clicked \"Gas Fees: Learn More\" Link',\n                                category: MetaMetricsEventCategory.Swaps,\n                              });\n                            }}\n                          >\n                            {t('swapGasFeesExplanationLinkText')}\n                          </ButtonLink>,\n                        ])}\n                      </p>\n                    }\n                    containerClassName=\"fee-card__info-tooltip-content-container\"\n                    wrapperClassName=\"fee-card__row-label fee-card__info-tooltip-container\"\n                  />\n                </>\n              }\n              detailText={primaryFee.fee}\n              detailTotal={useCurrencyRateCheck && secondaryFee.fee}\n              subText={\n                (secondaryFee?.maxFee !== undefined ||\n                  primaryFee?.maxFee !== undefined) && (\n                  <>\n                    <Text\n                      as=\"span\"\n                      fontWeight={FontWeight.Bold}\n                      color={TextColor.textAlternative}\n                      variant={TextVariant.bodySm}\n                    >\n                      {t('maxFee')}\n                    </Text>\n                    {useCurrencyRateCheck\n                      ? `: ${secondaryFee.maxFee}`\n                      : `: ${primaryFee.maxFee}`}\n                  </>\n                )\n              }\n            />,\n          ]}\n        />\n        {!hideTokenApprovalRow && (\n          <div className=\"fee-card__row-header\">\n            <div className=\"fee-card__row-label\">\n              <div className=\"fee-card__row-header-text\">\n                {t('swapEnableTokenForSwapping', [tokenApprovalTextComponent])}\n                <InfoTooltip\n                  position=\"top\"\n                  contentText={t('swapEnableDescription', [\n                    tokenApprovalSourceTokenSymbol,\n                  ])}\n                  containerClassName=\"fee-card__info-tooltip-container\"\n                />\n              </div>\n            </div>\n            <div\n              className=\"fee-card__link\"\n              onClick={() => onTokenApprovalClick()}\n            >\n              {t('swapEditLimit')}\n            </div>\n          </div>\n        )}\n        <div className=\"fee-card__row-header\">\n          <div className=\"fee-card__row-label\">\n            <div className=\"fee-card__row-header-text\">\n              {numberOfQuotes > 1 && (\n                <span\n                  onClick={onQuotesClick}\n                  className=\"fee-card__quote-link-text\"\n                >\n                  {t('swapNQuotesWithDot', [numberOfQuotes])}\n                </span>\n              )}\n              {t('swapIncludesMMFee', [metaMaskFee])}\n              <InfoTooltip\n                position=\"top\"\n                contentText={t('swapMetaMaskFeeDescription', [metaMaskFee])}\n                wrapperClassName=\"fee-card__info-tooltip-container\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFeeCard.propTypes = {\n  primaryFee: PropTypes.shape({\n    fee: PropTypes.string.isRequired,\n    maxFee: PropTypes.string.isRequired,\n  }).isRequired,\n  secondaryFee: PropTypes.shape({\n    fee: PropTypes.string.isRequired,\n    maxFee: PropTypes.string.isRequired,\n  }),\n  hideTokenApprovalRow: PropTypes.bool.isRequired,\n  tokenApprovalSourceTokenSymbol: PropTypes.string,\n  onTokenApprovalClick: PropTypes.func,\n  metaMaskFee: PropTypes.string.isRequired,\n  onQuotesClick: PropTypes.func.isRequired,\n  numberOfQuotes: PropTypes.number.isRequired,\n};\n","export { default } from './fee-card';\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchTokens,\n  fetchTopAssets,\n  fetchAggregatorMetadata,\n} from '../swaps.util';\nimport {\n  fetchAndSetSwapsGasPriceInfo,\n  prepareToLeaveSwaps,\n  setAggregatorMetadata,\n  setTopAssets,\n} from '../../../ducks/swaps/swaps';\nimport { setSwapsTokens } from '../../../store/actions';\nimport {\n  checkNetworkAndAccountSupports1559,\n  getCurrentChainId,\n  getIsSwapsChain,\n  getUseExternalServices,\n} from '../../../selectors';\n\nexport default function useUpdateSwapsState() {\n  const dispatch = useDispatch();\n\n  const chainId = useSelector(getCurrentChainId);\n  const isSwapsChain = useSelector(getIsSwapsChain);\n  const networkAndAccountSupports1559 = useSelector(\n    checkNetworkAndAccountSupports1559,\n  );\n\n  const isBasicFunctionality = useSelector(getUseExternalServices);\n\n  useEffect(() => {\n    if (!isSwapsChain || !isBasicFunctionality) {\n      return undefined;\n    }\n\n    fetchTokens(chainId)\n      .then((tokens) => {\n        dispatch(setSwapsTokens(tokens));\n      })\n      .catch((error) => console.error(error));\n\n    fetchTopAssets(chainId).then((topAssets) => {\n      dispatch(setTopAssets(topAssets));\n    });\n\n    fetchAggregatorMetadata(chainId).then((newAggregatorMetadata) => {\n      dispatch(setAggregatorMetadata(newAggregatorMetadata));\n    });\n\n    if (!networkAndAccountSupports1559) {\n      dispatch(fetchAndSetSwapsGasPriceInfo());\n    }\n\n    return () => {\n      dispatch(prepareToLeaveSwaps());\n    };\n  }, [\n    dispatch,\n    chainId,\n    networkAndAccountSupports1559,\n    isSwapsChain,\n    isBasicFunctionality,\n  ]);\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { I18nContext } from '../../../contexts/i18n';\nimport {\n  TextVariant,\n  AlignItems,\n  Display,\n  Severity,\n  FlexDirection,\n  BlockSize,\n} from '../../../helpers/constants/design-system';\n\nimport {\n  Text,\n  Box,\n  BannerAlert,\n  Button,\n  BUTTON_VARIANT,\n  Modal,\n  AvatarToken,\n  AvatarTokenSize,\n  BUTTON_SIZES,\n  ModalOverlay,\n} from '../../../components/component-library';\nimport { FormTextField } from '../../../components/component-library/form-text-field/deprecated';\nimport { ModalContent } from '../../../components/component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../components/component-library/modal-header/deprecated';\n\nexport default function ImportToken({\n  onImportTokenCloseClick,\n  onImportTokenClick,\n  setIsImportTokenModalOpen,\n  tokenForImport,\n  isOpen,\n}) {\n  const t = useContext(I18nContext);\n  return (\n    <Modal isOpen={isOpen} onClose={() => setIsImportTokenModalOpen(false)}>\n      <ModalOverlay />\n      <ModalContent\n        modalDialogProps={{\n          display: Display.Flex,\n          flexDirection: FlexDirection.Column,\n          alignItems: AlignItems.center,\n          gap: 4,\n        }}\n      >\n        <ModalHeader\n          onClose={() => setIsImportTokenModalOpen(false)}\n          width={BlockSize.Full}\n        >\n          {t('importTokenQuestion')}\n        </ModalHeader>\n        <BannerAlert\n          severity={Severity.Danger}\n          description={t('importTokenWarning')}\n        />\n        <AvatarToken\n          src={tokenForImport.iconUrl}\n          name={tokenForImport.symbol}\n          size={AvatarTokenSize.Xl}\n        />\n        <Text variant={TextVariant.headingSm} as=\"h4\">\n          {tokenForImport.name || ''}\n        </Text>\n        <FormTextField\n          label={t('contract')}\n          id=\"import-tokens-input\"\n          inputProps={{ variant: TextVariant.bodySm }}\n          readOnly\n          value={tokenForImport.address || ''}\n          width={BlockSize.Full}\n        />\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Row}\n          gap={4}\n          width={BlockSize.Full}\n        >\n          <Button\n            variant={BUTTON_VARIANT.SECONDARY}\n            block\n            size={BUTTON_SIZES.LG}\n            onClick={onImportTokenCloseClick}\n          >\n            {t('cancel')}\n          </Button>\n          <Button\n            variant={BUTTON_VARIANT.PRIMARY}\n            block\n            size={BUTTON_SIZES.LG}\n            onClick={onImportTokenClick}\n            data-testid=\"import-tokens-import-button\"\n          >\n            {t('import')}\n          </Button>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nImportToken.propTypes = {\n  onImportTokenCloseClick: PropTypes.func,\n  onImportTokenClick: PropTypes.func,\n  setIsImportTokenModalOpen: PropTypes.func,\n  tokenForImport: PropTypes.object,\n  isOpen: PropTypes.bool,\n};\n","export { default } from './import-token';\n","import React, {\n  useEffect,\n  useRef,\n  useContext,\n  useState,\n  useCallback,\n} from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useHistory,\n  Redirect,\n} from 'react-router-dom';\nimport { shuffle, isEqual } from 'lodash';\nimport classnames from 'classnames';\nimport { TransactionStatus } from '@metamask/transaction-controller';\nimport { I18nContext } from '../../contexts/i18n';\n\nimport {\n  getSelectedAccount,\n  getCurrentChainId,\n  getIsSwapsChain,\n  isHardwareWallet,\n  getHardwareWalletType,\n  getTokenList,\n} from '../../selectors/selectors';\nimport {\n  getQuotes,\n  clearSwapsState,\n  getTradeTxId,\n  getApproveTxId,\n  getFetchingQuotes,\n  getFetchParams,\n  getAggregatorMetadata,\n  getBackgroundSwapRouteState,\n  getSwapsErrorKey,\n  getSwapsFeatureIsLive,\n  prepareToLeaveSwaps,\n  fetchSwapsLivenessAndFeatureFlags,\n  getReviewSwapClickedTimestamp,\n  getPendingSmartTransactions,\n  getCurrentSmartTransactionsEnabled,\n  getCurrentSmartTransactionsError,\n  navigateBackToBuildQuote,\n  getSwapRedesignEnabled,\n  setTransactionSettingsOpened,\n  getLatestAddedTokenTo,\n} from '../../ducks/swaps/swaps';\nimport { getCurrentNetworkTransactions } from '../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../shared/modules/selectors';\nimport {\n  AWAITING_SIGNATURES_ROUTE,\n  AWAITING_SWAP_ROUTE,\n  SMART_TRANSACTION_STATUS_ROUTE,\n  BUILD_QUOTE_ROUTE,\n  VIEW_QUOTE_ROUTE,\n  LOADING_QUOTES_ROUTE,\n  SWAPS_ERROR_ROUTE,\n  DEFAULT_ROUTE,\n  SWAPS_MAINTENANCE_ROUTE,\n  PREPARE_SWAP_ROUTE,\n  SWAPS_NOTIFICATION_ROUTE,\n} from '../../helpers/constants/routes';\nimport {\n  ERROR_FETCHING_QUOTES,\n  QUOTES_NOT_AVAILABLE_ERROR,\n  SWAP_FAILED_ERROR,\n  CONTRACT_DATA_DISABLED_ERROR,\n  OFFLINE_FOR_MAINTENANCE,\n} from '../../../shared/constants/swaps';\n\nimport {\n  resetBackgroundSwapsState,\n  ignoreTokens,\n  setBackgroundSwapRouteState,\n  setSwapsErrorKey,\n} from '../../store/actions';\n\nimport { useGasFeeEstimates } from '../../hooks/useGasFeeEstimates';\nimport FeatureToggledRoute from '../../helpers/higher-order-components/feature-toggled-route';\nimport { MetaMetricsEventCategory } from '../../../shared/constants/metametrics';\nimport { MetaMetricsContext } from '../../contexts/metametrics';\nimport { getSwapsTokensReceivedFromTxMeta } from '../../../shared/lib/transactions-controller-utils';\nimport { Icon, IconName, IconSize } from '../../components/component-library';\nimport Box from '../../components/ui/box';\nimport {\n  DISPLAY,\n  JustifyContent,\n  IconColor,\n  FRACTIONS,\n} from '../../helpers/constants/design-system';\nimport useUpdateSwapsState from './hooks/useUpdateSwapsState';\nimport AwaitingSignatures from './awaiting-signatures';\nimport SmartTransactionStatus from './smart-transaction-status';\nimport AwaitingSwap from './awaiting-swap';\nimport LoadingQuote from './loading-swaps-quotes';\nimport BuildQuote from './build-quote';\nimport PrepareSwapPage from './prepare-swap-page/prepare-swap-page';\nimport NotificationPage from './notification-page/notification-page';\nimport ViewQuote from './view-quote';\n\nexport default function Swap() {\n  const t = useContext(I18nContext);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const { pathname } = useLocation();\n  const isAwaitingSwapRoute = pathname === AWAITING_SWAP_ROUTE;\n  const isAwaitingSignaturesRoute = pathname === AWAITING_SIGNATURES_ROUTE;\n  const isSwapsErrorRoute = pathname === SWAPS_ERROR_ROUTE;\n  const isLoadingQuotesRoute = pathname === LOADING_QUOTES_ROUTE;\n  const isSmartTransactionStatusRoute =\n    pathname === SMART_TRANSACTION_STATUS_ROUTE;\n  const isViewQuoteRoute = pathname === VIEW_QUOTE_ROUTE;\n  const isPrepareSwapRoute = pathname === PREPARE_SWAP_ROUTE;\n\n  const [currentStxErrorTracked, setCurrentStxErrorTracked] = useState(false);\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const { destinationTokenInfo = {} } = fetchParams?.metaData || {};\n\n  const routeState = useSelector(getBackgroundSwapRouteState);\n  const selectedAccount = useSelector(getSelectedAccount, shallowEqual);\n  const quotes = useSelector(getQuotes, isEqual);\n  const latestAddedTokenTo = useSelector(getLatestAddedTokenTo, isEqual);\n  const txList = useSelector(getCurrentNetworkTransactions, shallowEqual);\n  const tradeTxId = useSelector(getTradeTxId);\n  const approveTxId = useSelector(getApproveTxId);\n  const aggregatorMetadata = useSelector(getAggregatorMetadata, shallowEqual);\n  const fetchingQuotes = useSelector(getFetchingQuotes);\n  let swapsErrorKey = useSelector(getSwapsErrorKey);\n  const swapsEnabled = useSelector(getSwapsFeatureIsLive);\n  const chainId = useSelector(getCurrentChainId);\n  const isSwapsChain = useSelector(getIsSwapsChain);\n  const tokenList = useSelector(getTokenList, isEqual);\n  const shuffledTokensList = shuffle(Object.values(tokenList));\n  const reviewSwapClickedTimestamp = useSelector(getReviewSwapClickedTimestamp);\n  const pendingSmartTransactions = useSelector(getPendingSmartTransactions);\n  const reviewSwapClicked = Boolean(reviewSwapClickedTimestamp);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const swapRedesignEnabled = useSelector(getSwapRedesignEnabled);\n  const currentSmartTransactionsError = useSelector(\n    getCurrentSmartTransactionsError,\n  );\n\n  useEffect(() => {\n    const leaveSwaps = async () => {\n      await dispatch(prepareToLeaveSwaps());\n      // We need to wait until \"prepareToLeaveSwaps\" is done, because otherwise\n      // a user would be redirected from DEFAULT_ROUTE back to Swaps.\n      history.push(DEFAULT_ROUTE);\n    };\n\n    if (!isSwapsChain) {\n      leaveSwaps();\n    }\n  }, [isSwapsChain, dispatch, history]);\n\n  // This will pre-load gas fees before going to the View Quote page.\n  useGasFeeEstimates();\n\n  const { balance: ethBalance, address: selectedAccountAddress } =\n    selectedAccount;\n\n  const approveTxData =\n    approveTxId && txList.find(({ id }) => approveTxId === id);\n  const tradeTxData = tradeTxId && txList.find(({ id }) => tradeTxId === id);\n  const tokensReceived =\n    tradeTxData?.txReceipt &&\n    getSwapsTokensReceivedFromTxMeta(\n      destinationTokenInfo?.symbol,\n      tradeTxData,\n      destinationTokenInfo?.address,\n      selectedAccountAddress,\n      destinationTokenInfo?.decimals,\n      approveTxData,\n      chainId,\n    );\n  const tradeConfirmed = tradeTxData?.status === TransactionStatus.confirmed;\n  const approveError =\n    approveTxData?.status === TransactionStatus.failed ||\n    approveTxData?.txReceipt?.status === '0x0';\n  const tradeError =\n    tradeTxData?.status === TransactionStatus.failed ||\n    tradeTxData?.txReceipt?.status === '0x0';\n  const conversionError = approveError || tradeError;\n\n  if (conversionError && swapsErrorKey !== CONTRACT_DATA_DISABLED_ERROR) {\n    swapsErrorKey = SWAP_FAILED_ERROR;\n  }\n\n  const clearTemporaryTokenRef = useRef();\n  useEffect(() => {\n    clearTemporaryTokenRef.current = () => {\n      if (latestAddedTokenTo && (!isAwaitingSwapRoute || conversionError)) {\n        dispatch(\n          ignoreTokens({\n            tokensToIgnore: latestAddedTokenTo,\n            dontShowLoadingIndicator: true,\n          }),\n        );\n      }\n    };\n  }, [\n    conversionError,\n    dispatch,\n    latestAddedTokenTo,\n    destinationTokenInfo,\n    fetchParams,\n    isAwaitingSwapRoute,\n  ]);\n  useEffect(() => {\n    return () => {\n      clearTemporaryTokenRef.current();\n    };\n  }, []);\n\n  useUpdateSwapsState();\n\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const trackExitedSwapsEvent = () => {\n    trackEvent({\n      event: 'Exited Swaps',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        token_from: fetchParams?.sourceTokenInfo?.symbol,\n        token_from_amount: fetchParams?.value,\n        request_type: fetchParams?.balanceError,\n        token_to: fetchParams?.destinationTokenInfo?.symbol,\n        slippage: fetchParams?.slippage,\n        custom_slippage: fetchParams?.slippage !== 2,\n        current_screen: pathname.match(/\\/swaps\\/(.+)/u)[1],\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n      },\n    });\n  };\n  const exitEventRef = useRef();\n  useEffect(() => {\n    exitEventRef.current = () => {\n      trackExitedSwapsEvent();\n    };\n  });\n\n  useEffect(() => {\n    const fetchSwapsLivenessAndFeatureFlagsWrapper = async () => {\n      await dispatch(fetchSwapsLivenessAndFeatureFlags());\n    };\n    fetchSwapsLivenessAndFeatureFlagsWrapper();\n    return () => {\n      exitEventRef.current();\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    // If there is a swapsErrorKey and reviewSwapClicked is false, there was an error in silent quotes prefetching\n    // and we don't want to show the error page in that case, because another API call for quotes can be successful.\n    if (swapsErrorKey && !isSwapsErrorRoute && reviewSwapClicked) {\n      history.push(SWAPS_ERROR_ROUTE);\n    }\n  }, [history, swapsErrorKey, isSwapsErrorRoute, reviewSwapClicked]);\n\n  const beforeUnloadEventAddedRef = useRef();\n  useEffect(() => {\n    const fn = () => {\n      clearTemporaryTokenRef.current();\n      if (isLoadingQuotesRoute) {\n        dispatch(prepareToLeaveSwaps());\n      }\n      return null;\n    };\n    if (isLoadingQuotesRoute && !beforeUnloadEventAddedRef.current) {\n      beforeUnloadEventAddedRef.current = true;\n      window.addEventListener('beforeunload', fn);\n    }\n    return () => window.removeEventListener('beforeunload', fn);\n  }, [dispatch, isLoadingQuotesRoute]);\n\n  const trackErrorStxEvent = useCallback(() => {\n    trackEvent({\n      event: 'Error Smart Transactions',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        token_from: fetchParams?.sourceTokenInfo?.symbol,\n        token_from_amount: fetchParams?.value,\n        request_type: fetchParams?.balanceError,\n        token_to: fetchParams?.destinationTokenInfo?.symbol,\n        slippage: fetchParams?.slippage,\n        custom_slippage: fetchParams?.slippage !== 2,\n        current_screen: pathname.match(/\\/swaps\\/(.+)/u)[1],\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n        stx_error: currentSmartTransactionsError,\n      },\n    });\n  }, [\n    currentSmartTransactionsError,\n    currentSmartTransactionsEnabled,\n    trackEvent,\n    fetchParams?.balanceError,\n    fetchParams?.destinationTokenInfo?.symbol,\n    fetchParams?.slippage,\n    fetchParams?.sourceTokenInfo?.symbol,\n    fetchParams?.value,\n    hardwareWalletType,\n    hardwareWalletUsed,\n    pathname,\n    smartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n  ]);\n\n  useEffect(() => {\n    if (currentSmartTransactionsError && !currentStxErrorTracked) {\n      setCurrentStxErrorTracked(true);\n      trackErrorStxEvent();\n    }\n  }, [\n    currentSmartTransactionsError,\n    trackErrorStxEvent,\n    currentStxErrorTracked,\n  ]);\n\n  if (!isSwapsChain) {\n    // A user is being redirected outside of Swaps via the async \"leaveSwaps\" function above. In the meantime\n    // we have to prevent the code below this condition, which wouldn't work on an unsupported chain.\n    return <></>;\n  }\n\n  const redirectToDefaultRoute = async () => {\n    clearTemporaryTokenRef.current();\n    history.push({\n      pathname: DEFAULT_ROUTE,\n      state: { stayOnHomePage: true },\n    });\n    dispatch(clearSwapsState());\n    await dispatch(resetBackgroundSwapsState());\n  };\n\n  return (\n    <div className=\"swaps\">\n      <div className=\"swaps__container\">\n        <div className=\"swaps__header\">\n          {!swapRedesignEnabled && (\n            <div\n              className=\"swaps__header-edit\"\n              onClick={async () => {\n                await dispatch(navigateBackToBuildQuote(history));\n              }}\n            >\n              {isViewQuoteRoute && t('edit')}\n            </div>\n          )}\n          {swapRedesignEnabled && (\n            <Box\n              display={DISPLAY.FLEX}\n              justifyContent={JustifyContent.center}\n              marginLeft={4}\n              width={FRACTIONS.ONE_TWELFTH}\n              tabIndex=\"0\"\n              onKeyUp={(e) => {\n                if (e.key === 'Enter') {\n                  redirectToDefaultRoute();\n                }\n              }}\n            >\n              {!isAwaitingSwapRoute &&\n                !isAwaitingSignaturesRoute &&\n                !isSmartTransactionStatusRoute && (\n                  <Icon\n                    name={IconName.Arrow2Left}\n                    size={IconSize.Lg}\n                    color={IconColor.iconAlternative}\n                    onClick={redirectToDefaultRoute}\n                    style={{ cursor: 'pointer' }}\n                    title={t('cancel')}\n                  />\n                )}\n            </Box>\n          )}\n          <div className=\"swaps__title\">{t('swap')}</div>\n          {!swapRedesignEnabled && (\n            <div\n              className=\"swaps__header-cancel\"\n              onClick={async () => {\n                clearTemporaryTokenRef.current();\n                dispatch(clearSwapsState());\n                await dispatch(resetBackgroundSwapsState());\n                history.push(DEFAULT_ROUTE);\n              }}\n            >\n              {!isAwaitingSwapRoute &&\n                !isAwaitingSignaturesRoute &&\n                !isSmartTransactionStatusRoute &&\n                t('cancel')}\n            </div>\n          )}\n          {swapRedesignEnabled && (\n            <Box\n              display={DISPLAY.FLEX}\n              justifyContent={JustifyContent.center}\n              marginRight={4}\n              width={FRACTIONS.ONE_TWELFTH}\n              tabIndex=\"0\"\n              onKeyUp={(e) => {\n                if (e.key === 'Enter') {\n                  dispatch(setTransactionSettingsOpened(true));\n                }\n              }}\n            >\n              {isPrepareSwapRoute && (\n                <Icon\n                  name={IconName.Setting}\n                  size={IconSize.Lg}\n                  color={IconColor.iconAlternative}\n                  onClick={() => {\n                    dispatch(setTransactionSettingsOpened(true));\n                  }}\n                  style={{ cursor: 'pointer' }}\n                  title={t('transactionSettings')}\n                />\n              )}\n            </Box>\n          )}\n        </div>\n        <div\n          className={classnames('swaps__content', {\n            'swaps__content--redesign-enabled': swapRedesignEnabled,\n          })}\n        >\n          <Switch>\n            <FeatureToggledRoute\n              redirectRoute={SWAPS_MAINTENANCE_ROUTE}\n              flag={swapsEnabled}\n              path={BUILD_QUOTE_ROUTE}\n              exact\n              render={() => {\n                if (swapRedesignEnabled) {\n                  return <Redirect to={{ pathname: PREPARE_SWAP_ROUTE }} />;\n                }\n                if (tradeTxData && !conversionError) {\n                  return <Redirect to={{ pathname: AWAITING_SWAP_ROUTE }} />;\n                } else if (tradeTxData && routeState) {\n                  return <Redirect to={{ pathname: SWAPS_ERROR_ROUTE }} />;\n                } else if (routeState === 'loading' && aggregatorMetadata) {\n                  return <Redirect to={{ pathname: LOADING_QUOTES_ROUTE }} />;\n                }\n\n                return (\n                  <BuildQuote\n                    ethBalance={ethBalance}\n                    selectedAccountAddress={selectedAccountAddress}\n                    shuffledTokensList={shuffledTokensList}\n                  />\n                );\n              }}\n            />\n            <FeatureToggledRoute\n              redirectRoute={SWAPS_MAINTENANCE_ROUTE}\n              flag={swapsEnabled}\n              path={PREPARE_SWAP_ROUTE}\n              exact\n              render={() => {\n                if (!swapRedesignEnabled) {\n                  return <Redirect to={{ pathname: BUILD_QUOTE_ROUTE }} />;\n                }\n\n                return (\n                  <PrepareSwapPage\n                    ethBalance={ethBalance}\n                    selectedAccountAddress={selectedAccountAddress}\n                    shuffledTokensList={shuffledTokensList}\n                  />\n                );\n              }}\n            />\n            <FeatureToggledRoute\n              redirectRoute={SWAPS_MAINTENANCE_ROUTE}\n              flag={swapsEnabled}\n              path={VIEW_QUOTE_ROUTE}\n              exact\n              render={() => {\n                if (\n                  pendingSmartTransactions.length > 0 &&\n                  routeState === 'smartTransactionStatus'\n                ) {\n                  return (\n                    <Redirect\n                      to={{ pathname: SMART_TRANSACTION_STATUS_ROUTE }}\n                    />\n                  );\n                }\n                if (swapRedesignEnabled) {\n                  return <Redirect to={{ pathname: PREPARE_SWAP_ROUTE }} />;\n                }\n                if (Object.values(quotes).length) {\n                  return (\n                    <ViewQuote numberOfQuotes={Object.values(quotes).length} />\n                  );\n                } else if (fetchParams) {\n                  return <Redirect to={{ pathname: SWAPS_ERROR_ROUTE }} />;\n                }\n                return <Redirect to={{ pathname: BUILD_QUOTE_ROUTE }} />;\n              }}\n            />\n            <Route\n              path={SWAPS_ERROR_ROUTE}\n              exact\n              render={() => {\n                if (swapsErrorKey) {\n                  return (\n                    <AwaitingSwap\n                      swapComplete={false}\n                      errorKey={swapsErrorKey}\n                      txHash={tradeTxData?.hash}\n                      txId={tradeTxData?.id}\n                      submittedTime={tradeTxData?.submittedTime}\n                    />\n                  );\n                }\n                return <Redirect to={{ pathname: BUILD_QUOTE_ROUTE }} />;\n              }}\n            />\n            <Route\n              path={SWAPS_NOTIFICATION_ROUTE}\n              exact\n              render={() => {\n                if (!swapsErrorKey) {\n                  return <Redirect to={{ pathname: PREPARE_SWAP_ROUTE }} />;\n                }\n                return <NotificationPage notificationKey={swapsErrorKey} />;\n              }}\n            />\n            <FeatureToggledRoute\n              redirectRoute={SWAPS_MAINTENANCE_ROUTE}\n              flag={swapsEnabled}\n              path={LOADING_QUOTES_ROUTE}\n              exact\n              render={() => {\n                return aggregatorMetadata ? (\n                  <LoadingQuote\n                    loadingComplete={\n                      !fetchingQuotes && Boolean(Object.values(quotes).length)\n                    }\n                    onDone={async () => {\n                      await dispatch(setBackgroundSwapRouteState(''));\n                      if (\n                        swapsErrorKey === ERROR_FETCHING_QUOTES ||\n                        swapsErrorKey === QUOTES_NOT_AVAILABLE_ERROR\n                      ) {\n                        dispatch(setSwapsErrorKey(QUOTES_NOT_AVAILABLE_ERROR));\n                        history.push(SWAPS_ERROR_ROUTE);\n                      } else {\n                        history.push(VIEW_QUOTE_ROUTE);\n                      }\n                    }}\n                    aggregatorMetadata={aggregatorMetadata}\n                  />\n                ) : (\n                  <Redirect to={{ pathname: BUILD_QUOTE_ROUTE }} />\n                );\n              }}\n            />\n            <Route\n              path={SWAPS_MAINTENANCE_ROUTE}\n              exact\n              render={() => {\n                return swapsEnabled === false ? (\n                  <AwaitingSwap errorKey={OFFLINE_FOR_MAINTENANCE} />\n                ) : (\n                  <Redirect to={{ pathname: BUILD_QUOTE_ROUTE }} />\n                );\n              }}\n            />\n            <Route\n              path={AWAITING_SIGNATURES_ROUTE}\n              exact\n              render={() => {\n                return <AwaitingSignatures />;\n              }}\n            />\n            <Route\n              path={SMART_TRANSACTION_STATUS_ROUTE}\n              exact\n              render={() => {\n                return <SmartTransactionStatus txId={tradeTxData?.id} />;\n              }}\n            />\n            <Route\n              path={AWAITING_SWAP_ROUTE}\n              exact\n              render={() => {\n                return routeState === 'awaiting' || tradeTxData ? (\n                  <AwaitingSwap\n                    swapComplete={tradeConfirmed}\n                    txHash={tradeTxData?.hash}\n                    tokensReceived={tokensReceived}\n                    txId={tradeTxData?.id}\n                    submittingSwap={\n                      routeState === 'awaiting' && !(approveTxId || tradeTxId)\n                    }\n                  />\n                ) : (\n                  <Redirect to={{ pathname: DEFAULT_ROUTE }} />\n                );\n              }}\n            />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filter } from 'lodash';\nimport log from 'loglevel';\n\nimport Box from '../../../components/ui/box';\nimport {\n  Display,\n  FlexDirection,\n  JustifyContent,\n  AlignItems,\n  TextVariant,\n  BlockSize,\n} from '../../../helpers/constants/design-system';\nimport { Text } from '../../../components/component-library';\nimport { TextFieldSearch } from '../../../components/component-library/text-field-search/deprecated';\nimport ItemList from '../searchable-item-list/item-list';\nimport { isValidHexAddress } from '../../../../shared/modules/hexstring-utils';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { fetchToken } from '../swaps.util';\nimport { getCurrentChainId } from '../../../selectors/selectors';\n\nlet timeoutIdForSearch;\n\nexport default function ListWithSearch({\n  itemsToSearch = [],\n  listTitle,\n  maxListItems,\n  onClickItem,\n  onOpenImportTokenModalClick,\n  shouldSearchForImports,\n  Placeholder,\n  hideRightLabels,\n  hideItemIf,\n  listContainerClassName,\n  searchQuery,\n  setSearchQuery,\n}) {\n  const itemListRef = useRef();\n  const t = useContext(I18nContext);\n\n  const [items, setItems] = useState(itemsToSearch);\n  const chainId = useSelector(getCurrentChainId);\n\n  /**\n   * Search a custom token for import based on a contract address.\n   *\n   * @param {string} contractAddress\n   */\n  const handleSearchTokenForImport = async (contractAddress) => {\n    try {\n      const token = await fetchToken(contractAddress, chainId);\n      if (token) {\n        token.primaryLabel = token.symbol;\n        token.secondaryLabel = token.name;\n        token.notImported = true;\n        setItems([token]);\n        return;\n      }\n    } catch (e) {\n      log.error('Token not found, show 0 results.', e);\n    }\n    setItems([]); // No token for import found.\n  };\n\n  const handleSearch = async (newSearchQuery) => {\n    setSearchQuery(newSearchQuery);\n    if (timeoutIdForSearch) {\n      clearTimeout(timeoutIdForSearch);\n    }\n    timeoutIdForSearch = setTimeout(async () => {\n      timeoutIdForSearch = null;\n      const trimmedNewSearchQuery = newSearchQuery.trim();\n      const trimmedNewSearchQueryUpperCase =\n        trimmedNewSearchQuery.toUpperCase();\n      const trimmedNewSearchQueryLowerCase =\n        trimmedNewSearchQuery.toLowerCase();\n      if (!trimmedNewSearchQuery) {\n        setItems(itemsToSearch);\n        return;\n      }\n      const validHexAddress = isValidHexAddress(trimmedNewSearchQuery);\n      let filteredItems = [];\n      if (validHexAddress) {\n        // E.g. DAI token: 0x6b175474e89094c44da98b954eedeac495271D0f\n        const foundItem = itemsToSearch.find((item) => {\n          return item.address === trimmedNewSearchQueryLowerCase;\n        });\n        if (foundItem) {\n          filteredItems.push(foundItem);\n        }\n      } else {\n        filteredItems = filter(itemsToSearch, function (item) {\n          return item.symbol.includes(trimmedNewSearchQueryUpperCase);\n        });\n      }\n      const results = newSearchQuery === '' ? itemsToSearch : filteredItems;\n      if (shouldSearchForImports && results.length === 0 && validHexAddress) {\n        await handleSearchTokenForImport(trimmedNewSearchQuery);\n        return;\n      }\n      setItems(results);\n    }, 350);\n  };\n\n  useEffect(() => {\n    handleSearch(searchQuery);\n  }, [searchQuery]);\n\n  const handleOnClear = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <Box className=\"list-with-search\" width={BlockSize.Full} tabIndex=\"0\">\n      <Box\n        style={{ gridColumnStart: 1, gridColumnEnd: 3 }}\n        display={Display.Flex}\n        flexDirection={FlexDirection.Column}\n      >\n        <TextFieldSearch\n          id=\"list-with-search__text-search\"\n          marginBottom={4}\n          onChange={(e) => handleSearch(e.target.value)}\n          clearButtonOnClick={handleOnClear}\n          value={searchQuery}\n          placeholder={t('enterTokenNameOrAddress')}\n          inputProps={{ marginRight: 0 }}\n          className=\"list-with-search__text-search\"\n          autoFocus\n          tabIndex=\"0\"\n        />\n      </Box>\n      {items?.length > 0 && (\n        <ItemList\n          searchQuery={searchQuery}\n          results={items}\n          onClickItem={onClickItem}\n          onOpenImportTokenModalClick={onOpenImportTokenModalClick}\n          Placeholder={Placeholder}\n          listTitle={listTitle}\n          maxListItems={maxListItems}\n          containerRef={itemListRef}\n          hideRightLabels={hideRightLabels}\n          hideItemIf={hideItemIf}\n          listContainerClassName={listContainerClassName}\n        />\n      )}\n      {items?.length === 0 && (\n        <Box\n          marginTop={1}\n          marginBottom={5}\n          display={Display.Flex}\n          justifyContent={JustifyContent.center}\n          alignItems={AlignItems.center}\n        >\n          <Text variant={TextVariant.bodyMd} as=\"h6\">\n            {t('swapNoTokensAvailable', [searchQuery])}\n          </Text>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nListWithSearch.propTypes = {\n  itemsToSearch: PropTypes.array,\n  onClickItem: PropTypes.func,\n  onOpenImportTokenModalClick: PropTypes.func,\n  Placeholder: PropTypes.func,\n  listTitle: PropTypes.string,\n  maxListItems: PropTypes.number,\n  hideRightLabels: PropTypes.bool,\n  shouldSearchForImports: PropTypes.bool,\n  hideItemIf: PropTypes.func,\n  listContainerClassName: PropTypes.string,\n  searchQuery: PropTypes.string,\n  setSearchQuery: PropTypes.func,\n};\n","/* eslint-disable @metamask/design-tokens/color-no-hex*/\nimport React from 'react';\n\nexport default function BackgroundAnimation() {\n  return (\n    <>\n      <div\n        className=\"loading-swaps-quotes__background-1\"\n        data-testid=\"loading-swaps-quotes-background-1\"\n      >\n        <svg\n          width=\"193\"\n          height=\"190\"\n          viewBox=\"0 0 193 190\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M153.753 53.876C153.595 53.9493 153.419 54.0161 153.25 54.0651C151.081 54.7451 148.777 53.538 148.086 51.3768C147.763 50.3298 147.851 49.2109 148.361 48.2363C148.87 47.2618 149.732 46.5374 150.78 46.2144C151.828 45.8913 152.948 45.9781 153.923 46.4865C154.898 46.9949 155.622 47.8557 155.944 48.9027C156.567 50.918 155.592 53.0243 153.753 53.876ZM150.817 47.5708C150.245 47.8359 149.782 48.2721 149.495 48.8334C149.144 49.5127 149.073 50.2843 149.303 51.0047C149.774 52.4998 151.375 53.3384 152.877 52.8787C154.374 52.4069 155.215 50.8063 154.756 49.3056C154.526 48.5852 154.027 47.9888 153.36 47.6334C152.68 47.2836 151.908 47.213 151.187 47.4437C151.049 47.4636 150.927 47.52 150.817 47.5708Z\"\n            fill=\"#86E29B\"\n          />\n          <path\n            d=\"M18.3624 73.9241C18.3015 73.9523 18.2407 73.9805 18.1798 74.0087C17.0495 74.4733 15.8073 74.4728 14.6751 74.0078C12.3517 73.0461 11.2387 70.3567 12.2031 68.0341C13.1676 65.7115 15.8598 64.5971 18.1833 65.5589C19.3155 66.0239 20.1951 66.9013 20.6591 68.0304C21.123 69.1595 21.1215 70.4008 20.6552 71.5326C20.2207 72.6053 19.4093 73.4391 18.3624 73.9241ZM15.0433 66.7921C14.3129 67.1305 13.713 67.7186 13.3766 68.5243C12.6776 70.207 13.4834 72.1377 15.1666 72.8348C15.9849 73.1647 16.8786 73.1789 17.6933 72.831C18.5136 72.4952 19.1388 71.8659 19.4818 71.0424C19.8126 70.2245 19.8276 69.3313 19.4801 68.5175C19.1448 67.6981 18.5155 67.0739 17.6917 66.7319C16.8144 66.3703 15.8589 66.4142 15.0433 66.7921Z\"\n            fill=\"#FFB0EB\"\n          />\n          <path\n            d=\"M116.617 37.3839C117.397 37.0226 117.736 36.0982 117.375 35.3192C117.015 34.5402 116.09 34.2016 115.31 34.5629C114.53 34.9243 114.19 35.8487 114.551 36.6277C114.912 37.4067 115.837 37.7453 116.617 37.3839Z\"\n            fill=\"url(#paint0_linear)\"\n          />\n          <path\n            d=\"M55.1317 91.7213C55.9116 91.36 56.2512 90.4356 55.8903 89.6566C55.5294 88.8776 54.6046 88.539 53.8247 88.9003C53.0448 89.2617 52.7052 90.1861 53.0661 90.9651C53.427 91.7441 54.3518 92.0827 55.1317 91.7213Z\"\n            fill=\"url(#paint1_linear)\"\n          />\n          <path\n            d=\"M31.9932 126.235C32.7731 125.874 33.1127 124.95 32.7518 124.171C32.3909 123.392 31.4661 123.053 30.6863 123.414C29.9064 123.776 29.5667 124.7 29.9277 125.479C30.2886 126.258 31.2134 126.597 31.9932 126.235Z\"\n            fill=\"url(#paint2_linear)\"\n          />\n          <path\n            d=\"M119.43 132.589C120.21 132.228 120.55 131.304 120.189 130.525C119.828 129.746 118.903 129.407 118.123 129.768C117.344 130.13 117.004 131.054 117.365 131.833C117.726 132.612 118.651 132.951 119.43 132.589Z\"\n            fill=\"url(#paint3_linear)\"\n          />\n          <path\n            d=\"M44.7469 47.3835C46.0108 46.7979 46.5612 45.2997 45.9763 44.0372C45.3914 42.7747 43.8926 42.2259 42.6286 42.8115C41.3647 43.3971 40.8143 44.8953 41.3992 46.1578C41.9841 47.4203 43.4829 47.9691 44.7469 47.3835Z\"\n            fill=\"url(#paint4_linear)\"\n          />\n          <path\n            d=\"M105.107 90.7857C106.371 90.2001 106.922 88.702 106.337 87.4394C105.752 86.1769 104.253 85.6282 102.989 86.2137C101.725 86.7993 101.175 88.2975 101.76 89.56C102.344 90.8226 103.843 91.3713 105.107 90.7857Z\"\n            fill=\"url(#paint5_linear)\"\n          />\n          <path\n            d=\"M95.5179 172.376C96.7818 171.791 97.3322 170.293 96.7473 169.03C96.1624 167.767 94.6636 167.219 93.3996 167.804C92.1357 168.39 91.5853 169.888 92.1702 171.151C92.7551 172.413 94.2539 172.962 95.5179 172.376Z\"\n            fill=\"url(#paint6_linear)\"\n          />\n          <path\n            d=\"M165.098 102.367C166.362 101.781 166.912 100.283 166.327 99.0205C165.742 97.758 164.244 97.2092 162.98 97.7948C161.716 98.3804 161.165 99.8786 161.75 101.141C162.335 102.404 163.834 102.952 165.098 102.367Z\"\n            fill=\"url(#paint7_linear)\"\n          />\n          <defs>\n            <linearGradient\n              id=\"paint0_linear\"\n              x1=\"114.554\"\n              y1=\"36.6326\"\n              x2=\"117.379\"\n              y2=\"35.3237\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint1_linear\"\n              x1=\"53.0688\"\n              y1=\"90.97\"\n              x2=\"55.8937\"\n              y2=\"89.6611\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint2_linear\"\n              x1=\"29.9283\"\n              y1=\"125.483\"\n              x2=\"32.7532\"\n              y2=\"124.174\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint3_linear\"\n              x1=\"117.365\"\n              y1=\"131.837\"\n              x2=\"120.19\"\n              y2=\"130.528\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint4_linear\"\n              x1=\"41.4394\"\n              y1=\"46.2402\"\n              x2=\"45.947\"\n              y2=\"43.9537\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint5_linear\"\n              x1=\"101.8\"\n              y1=\"89.6425\"\n              x2=\"106.307\"\n              y2=\"87.356\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint6_linear\"\n              x1=\"92.2104\"\n              y1=\"171.233\"\n              x2=\"96.718\"\n              y2=\"168.947\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint7_linear\"\n              x1=\"161.79\"\n              y1=\"101.224\"\n              x2=\"166.298\"\n              y2=\"98.937\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n          </defs>\n        </svg>\n      </div>\n      <div\n        className=\"loading-swaps-quotes__background-2\"\n        data-testid=\"loading-swaps-quotes-background-2\"\n      >\n        <svg\n          width=\"195\"\n          height=\"205\"\n          viewBox=\"0 0 195 205\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M29.84 121.982C30.0408 121.969 30.245 122.01 30.4258 122.106L46.4233 130.275C46.8125 130.478 47.0536 130.893 47.0402 131.324C47.0143 131.768 46.7423 132.148 46.3356 132.308L24.5484 140.937C24.1417 141.097 23.6789 141.005 23.3642 140.702C23.0495 140.4 22.9398 139.937 23.0753 139.525L28.8651 122.727C28.9671 122.426 29.2065 122.169 29.5086 122.056C29.614 122.023 29.7194 121.989 29.84 121.982ZM43.1981 131.148L30.5607 124.689L25.9884 137.96L43.1981 131.148Z\"\n            fill=\"#75C4FD\"\n          />\n          <path\n            d=\"M168.214 54.3381C168.442 54.3238 168.674 54.3764 168.869 54.485C169.217 54.6781 169.44 55.0266 169.465 55.4145L170.59 68.4358C170.631 68.8763 170.416 69.3061 170.041 69.5444C169.666 69.7827 169.182 69.7862 168.805 69.5681L156.14 62.2246C155.763 62.0065 155.535 61.5911 155.548 61.1472C155.56 60.7033 155.818 60.3112 156.209 60.1122L167.75 54.4343C167.908 54.3841 168.067 54.3473 168.214 54.3381ZM168.027 66.3674L167.248 57.3661L159.267 61.2902L168.027 66.3674Z\"\n            fill=\"#FFB0EB\"\n          />\n          <path\n            d=\"M88.6283 16.6885C88.8694 16.6734 89.1154 16.7385 89.3255 16.873L100.21 24.1133C100.561 24.3464 100.762 24.7635 100.708 25.1832C100.653 25.6028 100.381 25.969 99.9864 26.1146L86.3391 31.4276C85.9449 31.5731 85.5106 31.5064 85.1842 31.2314C84.8712 30.9556 84.7239 30.5352 84.8192 30.1264L87.5815 17.5731C87.666 17.2053 87.9162 16.9076 88.2702 16.7646C88.3882 16.7169 88.5078 16.696 88.6283 16.6885ZM97.1342 24.7894L89.4471 19.6718L87.5021 28.5349L97.1342 24.7894Z\"\n            fill=\"url(#paint0_linear)\"\n          />\n          <path\n            d=\"M117.145 183.156C116.944 183.289 116.698 183.356 116.449 183.344L103.402 182.517C102.982 182.49 102.6 182.229 102.437 181.839C102.274 181.448 102.327 180.995 102.596 180.671L111.758 169.247C112.027 168.923 112.436 168.764 112.856 168.839C113.265 168.921 113.603 169.212 113.725 169.614L117.609 181.866C117.72 182.227 117.652 182.61 117.417 182.911C117.339 183.011 117.246 183.089 117.145 183.156ZM105.728 180.393L114.944 180.981L112.197 172.333L105.728 180.393Z\"\n            fill=\"url(#paint1_linear)\"\n          />\n          <path\n            d=\"M38.0816 74.0208C38.1217 74.0183 38.1485 74.0166 38.1887 74.0141C42.3831 73.805 45.9744 77.0577 46.1831 81.2474C46.3919 85.4371 43.1484 89.0241 38.9407 89.234C34.7463 89.4431 31.1549 86.1904 30.9462 82.0007C30.7391 77.8377 33.9307 74.2809 38.0816 74.0208ZM38.9104 87.2486C41.9767 87.0565 44.3523 84.4236 44.1997 81.3448C44.0455 78.2393 41.3949 75.8407 38.2859 75.9952C35.1761 76.1364 32.7753 78.7977 32.9296 81.9033C33.0838 85.0088 35.7344 87.4073 38.8434 87.2528C38.8568 87.252 38.8836 87.2503 38.9104 87.2486Z\"\n            fill=\"#86E29B\"\n          />\n          <path\n            d=\"M162.178 97.8401C162.218 97.8376 162.245 97.8359 162.285 97.8334C166.48 97.6243 170.071 100.877 170.28 105.067C170.489 109.256 167.245 112.843 163.037 113.053C158.843 113.262 155.252 110.01 155.043 105.82C154.836 101.657 158.027 98.1002 162.178 97.8401ZM163.007 111.068C166.073 110.876 168.449 108.243 168.296 105.164C168.142 102.059 165.492 99.6601 162.383 99.8146C159.273 99.9557 156.872 102.617 157.026 105.723C157.181 108.828 159.831 111.227 162.94 111.072C162.953 111.071 162.98 111.07 163.007 111.068Z\"\n            fill=\"#86E29B\"\n          />\n          <defs>\n            <linearGradient\n              id=\"paint0_linear\"\n              x1=\"100.609\"\n              y1=\"23.2611\"\n              x2=\"84.4152\"\n              y2=\"24.2757\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#FFE466\" />\n              <stop offset=\"1\" stopColor=\"#FFAFEA\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint1_linear\"\n              x1=\"103.812\"\n              y1=\"183.939\"\n              x2=\"116.959\"\n              y2=\"174.66\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"0.0928503\" stopColor=\"#81C2F6\" />\n              <stop offset=\"1\" stopColor=\"#F0B8BD\" />\n            </linearGradient>\n          </defs>\n        </svg>\n      </div>\n    </>\n  );\n}\n","export { default } from './loading-swaps-quotes';\n","import EventEmitter from 'events';\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { shuffle } from 'lodash';\nimport { useHistory } from 'react-router-dom';\nimport isEqual from 'lodash/isEqual';\nimport {\n  navigateBackToBuildQuote,\n  getFetchParams,\n  getQuotesFetchStartTime,\n  getCurrentSmartTransactionsEnabled,\n} from '../../../ducks/swaps/swaps';\nimport {\n  isHardwareWallet,\n  getHardwareWalletType,\n} from '../../../selectors/selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport Mascot from '../../../components/ui/mascot';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport SwapsFooter from '../swaps-footer';\nimport { Text } from '../../../components/component-library';\nimport {\n  TextVariant,\n  TextColor,\n  BlockSize,\n  Display,\n  JustifyContent,\n  TextTransform,\n} from '../../../helpers/constants/design-system';\nimport BackgroundAnimation from './background-animation';\n\nexport default function LoadingSwapsQuotes({\n  aggregatorMetadata,\n  loadingComplete,\n  onDone,\n}) {\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const animationEventEmitter = useRef(new EventEmitter());\n\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const quotesFetchStartTime = useSelector(getQuotesFetchStartTime);\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const quotesRequestCancelledEventConfig = {\n    event: 'Quotes Request Cancelled',\n    category: MetaMetricsEventCategory.Swaps,\n    sensitiveProperties: {\n      token_from: fetchParams?.sourceTokenInfo?.symbol,\n      token_from_amount: fetchParams?.value,\n      request_type: fetchParams?.balanceError,\n      token_to: fetchParams?.destinationTokenInfo?.symbol,\n      slippage: fetchParams?.slippage,\n      custom_slippage: fetchParams?.slippage !== 2,\n      response_time: Date.now() - quotesFetchStartTime,\n      is_hardware_wallet: hardwareWalletUsed,\n      hardware_wallet_type: hardwareWalletType,\n      stx_enabled: smartTransactionsEnabled,\n      current_stx_enabled: currentSmartTransactionsEnabled,\n      stx_user_opt_in: smartTransactionsOptInStatus,\n    },\n  };\n\n  const [aggregatorNames] = useState(() =>\n    shuffle(Object.keys(aggregatorMetadata)),\n  );\n  const numberOfQuotes = aggregatorNames.length;\n  const mascotContainer = useRef();\n  const currentMascotContainer = mascotContainer.current;\n\n  const [quoteCount, updateQuoteCount] = useState(0);\n  const [midPointTarget, setMidpointTarget] = useState(null);\n\n  useEffect(() => {\n    let timeoutLength;\n\n    // The below logic simulates a sequential loading of the aggregator quotes, even though we are fetching them all with a single call.\n    // This is to give the user a sense of progress. The callback passed to `setTimeout` updates the quoteCount and therefore causes\n    // a new logo to be shown, the fox to look at that logo, the logo bar and aggregator name to update.\n\n    if (loadingComplete) {\n      // If loading is complete, but the quoteCount is not, we quickly display the remaining logos/names/fox looks. 0.2s each\n      timeoutLength = 20;\n    } else {\n      // If loading is not complete, we display remaining logos/names/fox looks at random intervals between 0.5s and 2s, to simulate the\n      // sort of loading a user would experience in most async scenarios\n      timeoutLength = 500 + Math.floor(Math.random() * 1500);\n    }\n    const quoteCountTimeout = setTimeout(() => {\n      if (quoteCount < numberOfQuotes) {\n        updateQuoteCount(quoteCount + 1);\n      } else if (quoteCount === numberOfQuotes && loadingComplete) {\n        onDone();\n      }\n    }, timeoutLength);\n\n    return function cleanup() {\n      clearTimeout(quoteCountTimeout);\n    };\n  }, [quoteCount, loadingComplete, onDone, numberOfQuotes]);\n\n  useEffect(() => {\n    if (currentMascotContainer) {\n      const { top, left, width, height } =\n        currentMascotContainer.getBoundingClientRect();\n      const center = { x: left + width / 2, y: top + height / 2 };\n      setMidpointTarget(center);\n    }\n  }, [currentMascotContainer]);\n\n  return (\n    <div className=\"loading-swaps-quotes\">\n      <div className=\"loading-swaps-quotes__content\">\n        <>\n          <Text\n            variant={TextVariant.bodyXs}\n            data-testid=\"loading-swaps-quotes-quote-counter\"\n            color={TextColor.textAlternative}\n            marginTop={1}\n            display={Display.Flex}\n            justifyContent={JustifyContent.center}\n            width={BlockSize.Full}\n            marginBottom={1}\n          >\n            <span>\n              {t('swapFetchingQuoteNofN', [\n                Math.min(quoteCount + 1, numberOfQuotes),\n                numberOfQuotes,\n              ])}\n            </span>\n          </Text>\n          <Text\n            variant={TextVariant.headingSm}\n            data-testid=\"loading-swaps-quotes-quote-name-check\"\n            color={TextColor.textDefault}\n            display={Display.Flex}\n            justifyContent={JustifyContent.center}\n            width={BlockSize.Full}\n            textTransform={TextTransform.Capitalize}\n          >\n            <span>{t('swapFetchingQuotes')}</span>\n          </Text>\n          <div className=\"loading-swaps-quotes__loading-bar-container\">\n            <div\n              className=\"loading-swaps-quotes__loading-bar\"\n              style={{\n                width: `${(100 / numberOfQuotes) * quoteCount}%`,\n              }}\n            />\n          </div>\n        </>\n        <div className=\"loading-swaps-quotes__animation\">\n          <BackgroundAnimation />\n          <div\n            className=\"loading-swaps-quotes__mascot-container\"\n            ref={mascotContainer}\n          >\n            <Mascot\n              animationEventEmitter={animationEventEmitter.current}\n              width=\"90\"\n              height=\"90\"\n              lookAtTarget={midPointTarget}\n            />\n          </div>\n        </div>\n      </div>\n      <SwapsFooter\n        submitText={t('back')}\n        onSubmit={async () => {\n          trackEvent(quotesRequestCancelledEventConfig);\n          await dispatch(navigateBackToBuildQuote(history));\n        }}\n        hideCancel\n      />\n    </div>\n  );\n}\n\nLoadingSwapsQuotes.propTypes = {\n  loadingComplete: PropTypes.bool.isRequired,\n  onDone: PropTypes.func.isRequired,\n  aggregatorMetadata: PropTypes.objectOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      color: PropTypes.string,\n      icon: PropTypes.string,\n    }),\n  ),\n};\n","export { default } from './main-quote-summary';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport Tooltip from '../../../components/ui/tooltip';\nimport UrlIcon from '../../../components/ui/url-icon';\nimport ExchangeRateDisplay from '../exchange-rate-display';\nimport { formatSwapsValueForDisplay } from '../swaps.util';\nimport {\n  calcTokenAmount,\n  toPrecisionWithoutTrailingZeros,\n} from '../../../../shared/lib/transactions-controller-utils';\n\nfunction getFontSizesAndLineHeights(fontSizeScore) {\n  if (fontSizeScore <= 9) {\n    return [50, 48];\n  }\n  if (fontSizeScore <= 13) {\n    return [40, 32];\n  }\n  return [26, 15];\n}\n\nexport default function MainQuoteSummary({\n  sourceValue,\n  sourceSymbol,\n  sourceDecimals,\n  sourceIconUrl,\n  destinationValue,\n  destinationSymbol,\n  destinationDecimals,\n  destinationIconUrl,\n}) {\n  const sourceAmount = toPrecisionWithoutTrailingZeros(\n    calcTokenAmount(sourceValue, sourceDecimals).toString(10),\n    12,\n  );\n  const destinationAmount = calcTokenAmount(\n    destinationValue,\n    destinationDecimals,\n  );\n\n  const amountToDisplay = formatSwapsValueForDisplay(destinationAmount);\n  const amountDigitLength = amountToDisplay.match(/\\d+/gu).join('').length;\n  const [numberFontSize, lineHeight] =\n    getFontSizesAndLineHeights(amountDigitLength);\n  let ellipsedAmountToDisplay = amountToDisplay;\n\n  if (amountDigitLength > 20) {\n    ellipsedAmountToDisplay = `${amountToDisplay.slice(0, 20)}...`;\n  }\n\n  return (\n    <div className=\"main-quote-summary\">\n      <div className=\"main-quote-summary__details\">\n        <div className=\"main-quote-summary__quote-details-top\">\n          <div\n            className=\"main-quote-summary__source-row\"\n            data-testid=\"main-quote-summary__source-row\"\n          >\n            <span\n              className=\"main-quote-summary__source-row-value\"\n              title={formatSwapsValueForDisplay(sourceAmount)}\n            >\n              {formatSwapsValueForDisplay(sourceAmount)}\n            </span>\n            <UrlIcon\n              url={sourceIconUrl}\n              className=\"main-quote-summary__icon\"\n              name={sourceSymbol}\n              fallbackClassName=\"main-quote-summary__icon-fallback\"\n            />\n            <span\n              className=\"main-quote-summary__source-row-symbol\"\n              title={sourceSymbol}\n            >\n              {sourceSymbol}\n            </span>\n          </div>\n          <i className=\"fa fa-arrow-down main-quote-summary__down-arrow\" />\n          <div className=\"main-quote-summary__destination-row\">\n            <UrlIcon\n              url={destinationIconUrl}\n              className=\"main-quote-summary__icon\"\n              name={destinationSymbol}\n              fallbackClassName=\"main-quote-summary__icon-fallback\"\n            />\n            <span className=\"main-quote-summary__destination-row-symbol\">\n              {destinationSymbol}\n            </span>\n          </div>\n          <div className=\"main-quote-summary__quote-large\">\n            <Tooltip\n              interactive\n              position=\"bottom\"\n              html={amountToDisplay}\n              disabled={ellipsedAmountToDisplay === amountToDisplay}\n            >\n              <span\n                className=\"main-quote-summary__quote-large-number\"\n                style={{\n                  fontSize: numberFontSize,\n                  lineHeight: `${lineHeight}px`,\n                }}\n              >\n                {`${ellipsedAmountToDisplay}`}\n              </span>\n            </Tooltip>\n          </div>\n        </div>\n        <div\n          className=\"main-quote-summary__exchange-rate-container\"\n          data-testid=\"main-quote-summary__exchange-rate-container\"\n        >\n          <ExchangeRateDisplay\n            primaryTokenValue={sourceValue}\n            primaryTokenDecimals={sourceDecimals}\n            primaryTokenSymbol={sourceSymbol}\n            secondaryTokenValue={destinationValue}\n            secondaryTokenDecimals={destinationDecimals}\n            secondaryTokenSymbol={destinationSymbol}\n            arrowColor=\"var(--color-primary-default)\"\n            boldSymbols={false}\n            className=\"main-quote-summary__exchange-rate-display\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMainQuoteSummary.propTypes = {\n  /**\n   * The amount that will be sent in the smallest denomination.\n   * For example, wei is the smallest denomination for ether.\n   */\n  sourceValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(BigNumber),\n  ]).isRequired,\n\n  /**\n   * Maximum number of decimal places for the source token.\n   */\n  sourceDecimals: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The ticker symbol for the source token.\n   */\n  sourceSymbol: PropTypes.string.isRequired,\n\n  /**\n   * The amount that will be received in the smallest denomination.\n   * For example, wei is the smallest denomination for ether.\n   */\n  destinationValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(BigNumber),\n  ]).isRequired,\n\n  /**\n   * Maximum number of decimal places for the destination token.\n   */\n  destinationDecimals: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n\n  /**\n   * The ticker symbol for the destination token.\n   */\n  destinationSymbol: PropTypes.string.isRequired,\n\n  /**\n   * The location of the source token icon file.\n   */\n  sourceIconUrl: PropTypes.string,\n\n  /**\n   * The location of the destination token icon file.\n   */\n  destinationIconUrl: PropTypes.string,\n};\n","/* eslint-disable @metamask/design-tokens/color-no-hex*/\nimport EventEmitter from 'events';\nimport React, { useRef } from 'react';\n\nimport Mascot from '../../../components/ui/mascot';\n\nexport default function MascotBackgroundAnimation() {\n  const animationEventEmitter = useRef(new EventEmitter());\n\n  return (\n    <div className=\"mascot-background-animation__animation\">\n      <div\n        className=\"mascot-background-animation__background-1\"\n        data-testid=\"mascot-background-animation-background-1\"\n      >\n        <svg\n          width=\"193\"\n          height=\"190\"\n          viewBox=\"0 0 193 190\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M153.753 53.876C153.595 53.9493 153.419 54.0161 153.25 54.0651C151.081 54.7451 148.777 53.538 148.086 51.3768C147.763 50.3298 147.851 49.2109 148.361 48.2363C148.87 47.2618 149.732 46.5374 150.78 46.2144C151.828 45.8913 152.948 45.9781 153.923 46.4865C154.898 46.9949 155.622 47.8557 155.944 48.9027C156.567 50.918 155.592 53.0243 153.753 53.876ZM150.817 47.5708C150.245 47.8359 149.782 48.2721 149.495 48.8334C149.144 49.5127 149.073 50.2843 149.303 51.0047C149.774 52.4998 151.375 53.3384 152.877 52.8787C154.374 52.4069 155.215 50.8063 154.756 49.3056C154.526 48.5852 154.027 47.9888 153.36 47.6334C152.68 47.2836 151.908 47.213 151.187 47.4437C151.049 47.4636 150.927 47.52 150.817 47.5708Z\"\n            fill=\"#86E29B\"\n          />\n          <path\n            d=\"M18.3624 73.9241C18.3015 73.9523 18.2407 73.9805 18.1798 74.0087C17.0495 74.4733 15.8073 74.4728 14.6751 74.0078C12.3517 73.0461 11.2387 70.3567 12.2031 68.0341C13.1676 65.7115 15.8598 64.5971 18.1833 65.5589C19.3155 66.0239 20.1951 66.9013 20.6591 68.0304C21.123 69.1595 21.1215 70.4008 20.6552 71.5326C20.2207 72.6053 19.4093 73.4391 18.3624 73.9241ZM15.0433 66.7921C14.3129 67.1305 13.713 67.7186 13.3766 68.5243C12.6776 70.207 13.4834 72.1377 15.1666 72.8348C15.9849 73.1647 16.8786 73.1789 17.6933 72.831C18.5136 72.4952 19.1388 71.8659 19.4818 71.0424C19.8126 70.2245 19.8276 69.3313 19.4801 68.5175C19.1448 67.6981 18.5155 67.0739 17.6917 66.7319C16.8144 66.3703 15.8589 66.4142 15.0433 66.7921Z\"\n            fill=\"#FFB0EB\"\n          />\n          <path\n            d=\"M116.617 37.3839C117.397 37.0226 117.736 36.0982 117.375 35.3192C117.015 34.5402 116.09 34.2016 115.31 34.5629C114.53 34.9243 114.19 35.8487 114.551 36.6277C114.912 37.4067 115.837 37.7453 116.617 37.3839Z\"\n            fill=\"url(#paint0_linear)\"\n          />\n          <path\n            d=\"M55.1317 91.7213C55.9116 91.36 56.2512 90.4356 55.8903 89.6566C55.5294 88.8776 54.6046 88.539 53.8247 88.9003C53.0448 89.2617 52.7052 90.1861 53.0661 90.9651C53.427 91.7441 54.3518 92.0827 55.1317 91.7213Z\"\n            fill=\"url(#paint1_linear)\"\n          />\n          <path\n            d=\"M31.9932 126.235C32.7731 125.874 33.1127 124.95 32.7518 124.171C32.3909 123.392 31.4661 123.053 30.6863 123.414C29.9064 123.776 29.5667 124.7 29.9277 125.479C30.2886 126.258 31.2134 126.597 31.9932 126.235Z\"\n            fill=\"url(#paint2_linear)\"\n          />\n          <path\n            d=\"M119.43 132.589C120.21 132.228 120.55 131.304 120.189 130.525C119.828 129.746 118.903 129.407 118.123 129.768C117.344 130.13 117.004 131.054 117.365 131.833C117.726 132.612 118.651 132.951 119.43 132.589Z\"\n            fill=\"url(#paint3_linear)\"\n          />\n          <path\n            d=\"M44.7469 47.3835C46.0108 46.7979 46.5612 45.2997 45.9763 44.0372C45.3914 42.7747 43.8926 42.2259 42.6286 42.8115C41.3647 43.3971 40.8143 44.8953 41.3992 46.1578C41.9841 47.4203 43.4829 47.9691 44.7469 47.3835Z\"\n            fill=\"url(#paint4_linear)\"\n          />\n          <path\n            d=\"M105.107 90.7857C106.371 90.2001 106.922 88.702 106.337 87.4394C105.752 86.1769 104.253 85.6282 102.989 86.2137C101.725 86.7993 101.175 88.2975 101.76 89.56C102.344 90.8226 103.843 91.3713 105.107 90.7857Z\"\n            fill=\"url(#paint5_linear)\"\n          />\n          <path\n            d=\"M95.5179 172.376C96.7818 171.791 97.3322 170.293 96.7473 169.03C96.1624 167.767 94.6636 167.219 93.3996 167.804C92.1357 168.39 91.5853 169.888 92.1702 171.151C92.7551 172.413 94.2539 172.962 95.5179 172.376Z\"\n            fill=\"url(#paint6_linear)\"\n          />\n          <path\n            d=\"M165.098 102.367C166.362 101.781 166.912 100.283 166.327 99.0205C165.742 97.758 164.244 97.2092 162.98 97.7948C161.716 98.3804 161.165 99.8786 161.75 101.141C162.335 102.404 163.834 102.952 165.098 102.367Z\"\n            fill=\"url(#paint7_linear)\"\n          />\n          <defs>\n            <linearGradient\n              id=\"paint0_linear\"\n              x1=\"114.554\"\n              y1=\"36.6326\"\n              x2=\"117.379\"\n              y2=\"35.3237\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint1_linear\"\n              x1=\"53.0688\"\n              y1=\"90.97\"\n              x2=\"55.8937\"\n              y2=\"89.6611\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint2_linear\"\n              x1=\"29.9283\"\n              y1=\"125.483\"\n              x2=\"32.7532\"\n              y2=\"124.174\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint3_linear\"\n              x1=\"117.365\"\n              y1=\"131.837\"\n              x2=\"120.19\"\n              y2=\"130.528\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint4_linear\"\n              x1=\"41.4394\"\n              y1=\"46.2402\"\n              x2=\"45.947\"\n              y2=\"43.9537\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint5_linear\"\n              x1=\"101.8\"\n              y1=\"89.6425\"\n              x2=\"106.307\"\n              y2=\"87.356\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint6_linear\"\n              x1=\"92.2104\"\n              y1=\"171.233\"\n              x2=\"96.718\"\n              y2=\"168.947\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint7_linear\"\n              x1=\"161.79\"\n              y1=\"101.224\"\n              x2=\"166.298\"\n              y2=\"98.937\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"1\" stopColor=\"#75C3FC\" />\n            </linearGradient>\n          </defs>\n        </svg>\n      </div>\n      <div\n        className=\"mascot-background-animation__background-2\"\n        data-testid=\"mascot-background-animation-background-2\"\n      >\n        <svg\n          width=\"195\"\n          height=\"205\"\n          viewBox=\"0 0 195 205\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M29.84 121.982C30.0408 121.969 30.245 122.01 30.4258 122.106L46.4233 130.275C46.8125 130.478 47.0536 130.893 47.0402 131.324C47.0143 131.768 46.7423 132.148 46.3356 132.308L24.5484 140.937C24.1417 141.097 23.6789 141.005 23.3642 140.702C23.0495 140.4 22.9398 139.937 23.0753 139.525L28.8651 122.727C28.9671 122.426 29.2065 122.169 29.5086 122.056C29.614 122.023 29.7194 121.989 29.84 121.982ZM43.1981 131.148L30.5607 124.689L25.9884 137.96L43.1981 131.148Z\"\n            fill=\"#75C4FD\"\n          />\n          <path\n            d=\"M168.214 54.3381C168.442 54.3238 168.674 54.3764 168.869 54.485C169.217 54.6781 169.44 55.0266 169.465 55.4145L170.59 68.4358C170.631 68.8763 170.416 69.3061 170.041 69.5444C169.666 69.7827 169.182 69.7862 168.805 69.5681L156.14 62.2246C155.763 62.0065 155.535 61.5911 155.548 61.1472C155.56 60.7033 155.818 60.3112 156.209 60.1122L167.75 54.4343C167.908 54.3841 168.067 54.3473 168.214 54.3381ZM168.027 66.3674L167.248 57.3661L159.267 61.2902L168.027 66.3674Z\"\n            fill=\"#FFB0EB\"\n          />\n          <path\n            d=\"M88.6283 16.6885C88.8694 16.6734 89.1154 16.7385 89.3255 16.873L100.21 24.1133C100.561 24.3464 100.762 24.7635 100.708 25.1832C100.653 25.6028 100.381 25.969 99.9864 26.1146L86.3391 31.4276C85.9449 31.5731 85.5106 31.5064 85.1842 31.2314C84.8712 30.9556 84.7239 30.5352 84.8192 30.1264L87.5815 17.5731C87.666 17.2053 87.9162 16.9076 88.2702 16.7646C88.3882 16.7169 88.5078 16.696 88.6283 16.6885ZM97.1342 24.7894L89.4471 19.6718L87.5021 28.5349L97.1342 24.7894Z\"\n            fill=\"url(#paint0_linear)\"\n          />\n          <path\n            d=\"M117.145 183.156C116.944 183.289 116.698 183.356 116.449 183.344L103.402 182.517C102.982 182.49 102.6 182.229 102.437 181.839C102.274 181.448 102.327 180.995 102.596 180.671L111.758 169.247C112.027 168.923 112.436 168.764 112.856 168.839C113.265 168.921 113.603 169.212 113.725 169.614L117.609 181.866C117.72 182.227 117.652 182.61 117.417 182.911C117.339 183.011 117.246 183.089 117.145 183.156ZM105.728 180.393L114.944 180.981L112.197 172.333L105.728 180.393Z\"\n            fill=\"url(#paint1_linear)\"\n          />\n          <path\n            d=\"M38.0816 74.0208C38.1217 74.0183 38.1485 74.0166 38.1887 74.0141C42.3831 73.805 45.9744 77.0577 46.1831 81.2474C46.3919 85.4371 43.1484 89.0241 38.9407 89.234C34.7463 89.4431 31.1549 86.1904 30.9462 82.0007C30.7391 77.8377 33.9307 74.2809 38.0816 74.0208ZM38.9104 87.2486C41.9767 87.0565 44.3523 84.4236 44.1997 81.3448C44.0455 78.2393 41.3949 75.8407 38.2859 75.9952C35.1761 76.1364 32.7753 78.7977 32.9296 81.9033C33.0838 85.0088 35.7344 87.4073 38.8434 87.2528C38.8568 87.252 38.8836 87.2503 38.9104 87.2486Z\"\n            fill=\"#86E29B\"\n          />\n          <path\n            d=\"M162.178 97.8401C162.218 97.8376 162.245 97.8359 162.285 97.8334C166.48 97.6243 170.071 100.877 170.28 105.067C170.489 109.256 167.245 112.843 163.037 113.053C158.843 113.262 155.252 110.01 155.043 105.82C154.836 101.657 158.027 98.1002 162.178 97.8401ZM163.007 111.068C166.073 110.876 168.449 108.243 168.296 105.164C168.142 102.059 165.492 99.6601 162.383 99.8146C159.273 99.9557 156.872 102.617 157.026 105.723C157.181 108.828 159.831 111.227 162.94 111.072C162.953 111.071 162.98 111.07 163.007 111.068Z\"\n            fill=\"#86E29B\"\n          />\n          <defs>\n            <linearGradient\n              id=\"paint0_linear\"\n              x1=\"100.609\"\n              y1=\"23.2611\"\n              x2=\"84.4152\"\n              y2=\"24.2757\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#FFE466\" />\n              <stop offset=\"1\" stopColor=\"#FFAFEA\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint1_linear\"\n              x1=\"103.812\"\n              y1=\"183.939\"\n              x2=\"116.959\"\n              y2=\"174.66\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#75C3FC\" />\n              <stop offset=\"0.0928503\" stopColor=\"#81C2F6\" />\n              <stop offset=\"1\" stopColor=\"#F0B8BD\" />\n            </linearGradient>\n          </defs>\n        </svg>\n      </div>\n      <div\n        className=\"mascot-background-animation__mascot-container\"\n        data-testid=\"mascot-background-animation-mascot-container\"\n      >\n        <Mascot\n          animationEventEmitter={animationEventEmitter.current}\n          width=\"42\"\n          height=\"42\"\n          followMouse={false}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport { setSwapsErrorKey } from '../../../store/actions';\nimport Box from '../../../components/ui/box';\nimport {\n  DISPLAY,\n  AlignItems,\n  TextVariant,\n  FLEX_DIRECTION,\n  TEXT_ALIGN,\n  IconColor,\n} from '../../../helpers/constants/design-system';\nimport { Icon, IconName, Text } from '../../../components/component-library';\nimport { PREPARE_SWAP_ROUTE } from '../../../helpers/constants/routes';\nimport SwapsFooter from '../swaps-footer';\nimport { QUOTES_EXPIRED_ERROR } from '../../../../shared/constants/swaps';\n\nexport default function NotificationPage({ notificationKey }) {\n  const t = useContext(I18nContext);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // TODO: Either add default values or redirect a user out if a notificationKey value is not supported.\n  let title = '';\n  let description = '';\n  let buttonText = '';\n\n  if (notificationKey === QUOTES_EXPIRED_ERROR) {\n    title = t('swapAreYouStillThere');\n    description = t('swapAreYouStillThereDescription');\n    buttonText = t('swapShowLatestQuotes');\n  }\n\n  return (\n    <div className=\"notification-page\">\n      <Box\n        alignItems={AlignItems.center}\n        display={DISPLAY.FLEX}\n        flexDirection={FLEX_DIRECTION.COLUMN}\n        marginTop={10}\n        marginLeft={4}\n        marginRight={4}\n        textAlign={TEXT_ALIGN.CENTER}\n        className=\"notification-page__content\"\n      >\n        <Box marginTop={8} marginBottom={4}>\n          <Icon\n            name={IconName.Warning}\n            color={IconColor.iconMuted}\n            className=\"notification-page__warning-icon\"\n          />\n        </Box>\n        <Text variant={TextVariant.bodyLgMedium} as=\"h2\">\n          {title}\n        </Text>\n        <Text variant={TextVariant.bodyMd} as=\"h6\">\n          {description}\n        </Text>\n      </Box>\n      <SwapsFooter\n        onSubmit={async () => {\n          await dispatch(setSwapsErrorKey(''));\n          history.push(PREPARE_SWAP_ROUTE);\n        }}\n        submitText={buttonText}\n        hideCancel\n        showTermsOfService\n      />\n    </div>\n  );\n}\n\nNotificationPage.propTypes = {\n  notificationKey: PropTypes.oneOf([QUOTES_EXPIRED_ERROR]),\n};\n","import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { uniqBy, isEqual } from 'lodash';\nimport { useHistory } from 'react-router-dom';\nimport { getTokenTrackerLink } from '@metamask/etherscan-link';\nimport classnames from 'classnames';\n\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  useTokensToSearch,\n  getRenderableTokenData,\n} from '../../../hooks/useTokensToSearch';\nimport { useEqualityCheck } from '../../../hooks/useEqualityCheck';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { getTokens, getConversionRate } from '../../../ducks/metamask/metamask';\nimport Box from '../../../components/ui/box';\nimport {\n  DISPLAY,\n  TextColor,\n  JustifyContent,\n  AlignItems,\n  SEVERITIES,\n  TextVariant,\n  BLOCK_SIZES,\n  FontWeight,\n} from '../../../helpers/constants/design-system';\nimport {\n  fetchQuotesAndSetQuoteState,\n  setSwapsFromToken,\n  setSwapToToken,\n  getFromToken,\n  getToToken,\n  getBalanceError,\n  getTopAssets,\n  getFetchParams,\n  getQuotes,\n  setBalanceError,\n  setFromTokenInputValue,\n  setFromTokenError,\n  setMaxSlippage,\n  setReviewSwapClickedTimestamp,\n  getCurrentSmartTransactionsEnabled,\n  getFromTokenInputValue,\n  getFromTokenError,\n  getMaxSlippage,\n  getIsFeatureFlagLoaded,\n  getFetchingQuotes,\n  getSwapsErrorKey,\n  getAggregatorMetadata,\n  getTransactionSettingsOpened,\n  setTransactionSettingsOpened,\n  getLatestAddedTokenTo,\n} from '../../../ducks/swaps/swaps';\nimport {\n  getSwapsDefaultToken,\n  getTokenExchangeRates,\n  getCurrentCurrency,\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n  getTokenList,\n  isHardwareWallet,\n  getHardwareWalletType,\n  getIsBridgeChain,\n  getMetaMetricsId,\n  getParticipateInMetaMetrics,\n  getDataCollectionForMarketing,\n} from '../../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\nimport {\n  getValueFromWeiHex,\n  hexToDecimal,\n} from '../../../../shared/modules/conversion.utils';\nimport { getURLHostName } from '../../../helpers/utils/util';\nimport { getPortfolioUrl } from '../../../helpers/utils/portfolio';\nimport { usePrevious } from '../../../hooks/usePrevious';\nimport { useTokenTracker } from '../../../hooks/useTokenTracker';\nimport { useTokenFiatAmount } from '../../../hooks/useTokenFiatAmount';\nimport { useEthFiatAmount } from '../../../hooks/useEthFiatAmount';\nimport {\n  isSwapsDefaultTokenAddress,\n  isSwapsDefaultTokenSymbol,\n} from '../../../../shared/modules/swaps.utils';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventLinkType,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\nimport {\n  SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP,\n  TokenBucketPriority,\n  ERROR_FETCHING_QUOTES,\n  QUOTES_NOT_AVAILABLE_ERROR,\n  QUOTES_EXPIRED_ERROR,\n  MAX_ALLOWED_SLIPPAGE,\n} from '../../../../shared/constants/swaps';\nimport {\n  resetSwapsPostFetchState,\n  ignoreTokens,\n  clearSwapsQuotes,\n  stopPollingForQuotes,\n  clearSmartTransactionFees,\n  setSwapsErrorKey,\n  setBackgroundSwapRouteState,\n} from '../../../store/actions';\nimport { SET_SMART_TRANSACTIONS_ERROR } from '../../../store/actionConstants';\nimport {\n  countDecimals,\n  fetchTokenPrice,\n  formatSwapsValueForDisplay,\n  getClassNameForCharLength,\n} from '../swaps.util';\nimport { fetchTokenBalance } from '../../../../shared/lib/token-util';\nimport { isEqualCaseInsensitive } from '../../../../shared/modules/string-utils';\nimport { calcTokenAmount } from '../../../../shared/lib/transactions-controller-utils';\nimport { shouldEnableDirectWrapping } from '../../../../shared/lib/swaps-utils';\nimport {\n  Icon,\n  IconName,\n  IconSize,\n  ButtonLink,\n  ButtonLinkSize,\n  Modal,\n  ModalOverlay,\n  BannerAlert,\n  Text,\n  TextField,\n  TextFieldSize,\n} from '../../../components/component-library';\nimport { ModalContent } from '../../../components/component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../components/component-library/modal-header/deprecated';\nimport { SWAPS_NOTIFICATION_ROUTE } from '../../../helpers/constants/routes';\nimport ImportToken from '../import-token';\nimport TransactionSettings from '../transaction-settings/transaction-settings';\nimport SwapsBannerAlert from '../swaps-banner-alert/swaps-banner-alert';\nimport SwapsFooter from '../swaps-footer';\nimport SelectedToken from '../selected-token/selected-token';\nimport ListWithSearch from '../list-with-search/list-with-search';\nimport QuotesLoadingAnimation from './quotes-loading-animation';\nimport ReviewQuote from './review-quote';\n\nlet timeoutIdForQuotesPrefetching;\n\nexport default function PrepareSwapPage({\n  ethBalance,\n  selectedAccountAddress,\n  shuffledTokensList,\n}) {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const [fetchedTokenExchangeRate, setFetchedTokenExchangeRate] =\n    useState(undefined);\n  const [verificationClicked, setVerificationClicked] = useState(false);\n  const [receiveToAmount, setReceiveToAmount] = useState();\n  const [isSwapToOpen, setIsSwapToOpen] = useState(false);\n  const onSwapToOpen = () => setIsSwapToOpen(true);\n  const onSwapToClose = () => setIsSwapToOpen(false);\n  const [isSwapFromOpen, setIsSwapFromOpen] = useState(false);\n  const onSwapFromOpen = () => setIsSwapFromOpen(true);\n  const onSwapFromClose = () => setIsSwapFromOpen(false);\n  const [isImportTokenModalOpen, setIsImportTokenModalOpen] = useState(false);\n  const [tokenForImport, setTokenForImport] = useState(null);\n  const [swapFromSearchQuery, setSwapFromSearchQuery] = useState('');\n  const [swapToSearchQuery, setSwapToSearchQuery] = useState('');\n  const [quoteCount, updateQuoteCount] = useState(0);\n  const [prefetchingQuotes, setPrefetchingQuotes] = useState(false);\n  const [rotateSwitchTokens, setRotateSwitchTokens] = useState(false);\n\n  const isFeatureFlagLoaded = useSelector(getIsFeatureFlagLoaded);\n  const balanceError = useSelector(getBalanceError);\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const { sourceTokenInfo = {}, destinationTokenInfo = {} } =\n    fetchParams?.metaData || {};\n  const tokens = useSelector(getTokens, isEqual);\n  const topAssets = useSelector(getTopAssets, isEqual);\n  const fromToken = useSelector(getFromToken, isEqual);\n  const fromTokenInputValue = useSelector(getFromTokenInputValue);\n  const fromTokenError = useSelector(getFromTokenError);\n  const maxSlippage = useSelector(getMaxSlippage);\n  const toToken = useSelector(getToToken, isEqual) || destinationTokenInfo;\n  const defaultSwapsToken = useSelector(getSwapsDefaultToken, isEqual);\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider, shallowEqual);\n  const tokenList = useSelector(getTokenList, isEqual);\n  const quotes = useSelector(getQuotes, isEqual);\n  const latestAddedTokenTo = useSelector(getLatestAddedTokenTo, isEqual);\n  const numberOfQuotes = Object.keys(quotes).length;\n  const areQuotesPresent = numberOfQuotes > 0;\n  const swapsErrorKey = useSelector(getSwapsErrorKey);\n  const aggregatorMetadata = useSelector(getAggregatorMetadata, shallowEqual);\n  const transactionSettingsOpened = useSelector(\n    getTransactionSettingsOpened,\n    shallowEqual,\n  );\n  const numberOfAggregators = aggregatorMetadata\n    ? Object.keys(aggregatorMetadata).length\n    : 0;\n  const isBridgeChain = useSelector(getIsBridgeChain);\n  const metaMetricsId = useSelector(getMetaMetricsId);\n\n  const tokenConversionRates = useSelector(getTokenExchangeRates, isEqual);\n  const conversionRate = useSelector(getConversionRate);\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const isSmartTransaction =\n    currentSmartTransactionsEnabled && smartTransactionsOptInStatus;\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const fetchingQuotes = useSelector(getFetchingQuotes);\n  const loadingComplete = !fetchingQuotes && areQuotesPresent;\n  const isMetaMetricsEnabled = useSelector(getParticipateInMetaMetrics);\n  const isMarketingEnabled = useSelector(getDataCollectionForMarketing);\n\n  const fetchParamsFromToken = isSwapsDefaultTokenSymbol(\n    sourceTokenInfo?.symbol,\n    chainId,\n  )\n    ? defaultSwapsToken\n    : sourceTokenInfo;\n\n  const { tokensWithBalances } = useTokenTracker({ tokens });\n\n  // If the fromToken was set in a call to `onFromSelect` (see below), and that from token has a balance\n  // but is not in tokensWithBalances or tokens, then we want to add it to the usersTokens array so that\n  // the balance of the token can appear in the from token selection dropdown\n  const fromTokenArray =\n    !isSwapsDefaultTokenSymbol(fromToken?.symbol, chainId) && fromToken?.balance\n      ? [fromToken]\n      : [];\n  const usersTokens = uniqBy(\n    [...tokensWithBalances, ...tokens, ...fromTokenArray],\n    'address',\n  );\n  const memoizedUsersTokens = useEqualityCheck(usersTokens);\n\n  const selectedFromToken = getRenderableTokenData(\n    fromToken || fetchParamsFromToken,\n    tokenConversionRates,\n    conversionRate,\n    currentCurrency,\n    chainId,\n    tokenList,\n  );\n\n  const tokensToSearchSwapFrom = useTokensToSearch({\n    usersTokens: memoizedUsersTokens,\n    topTokens: topAssets,\n    shuffledTokensList,\n    tokenBucketPriority: TokenBucketPriority.owned,\n  });\n  const tokensToSearchSwapTo = useTokensToSearch({\n    usersTokens: memoizedUsersTokens,\n    topTokens: topAssets,\n    shuffledTokensList,\n    tokenBucketPriority: TokenBucketPriority.top,\n  });\n  const selectedToToken =\n    tokensToSearchSwapFrom.find(({ address }) =>\n      isEqualCaseInsensitive(address, toToken?.address),\n    ) || toToken;\n  const toTokenIsNotDefault =\n    selectedToToken?.address &&\n    !isSwapsDefaultTokenAddress(selectedToToken?.address, chainId);\n  const occurrences = Number(\n    selectedToToken?.occurances || selectedToToken?.occurrences || 0,\n  );\n  const {\n    address: fromTokenAddress,\n    symbol: fromTokenSymbol,\n    string: fromTokenString,\n    decimals: fromTokenDecimals,\n    balance: rawFromTokenBalance,\n  } = selectedFromToken || {};\n  const { address: toTokenAddress } = selectedToToken || {};\n\n  const fromTokenBalance =\n    rawFromTokenBalance &&\n    calcTokenAmount(rawFromTokenBalance, fromTokenDecimals).toString(10);\n\n  const prevFromTokenBalance = usePrevious(fromTokenBalance);\n\n  const swapFromTokenFiatValue = useTokenFiatAmount(\n    fromTokenAddress,\n    fromTokenInputValue || 0,\n    fromTokenSymbol,\n    {\n      showFiat: true,\n    },\n    true,\n  );\n  const swapFromEthFiatValue = useEthFiatAmount(\n    fromTokenInputValue || 0,\n    { showFiat: true },\n    true,\n  );\n  const swapFromFiatValue = isSwapsDefaultTokenSymbol(fromTokenSymbol, chainId)\n    ? swapFromEthFiatValue\n    : swapFromTokenFiatValue;\n\n  const onInputChange = useCallback(\n    (newInputValue, balance) => {\n      dispatch(setFromTokenInputValue(newInputValue));\n      const newBalanceError = new BigNumber(newInputValue || 0).gt(\n        balance || 0,\n      );\n      // \"setBalanceError\" is just a warning, a user can still click on the \"Review swap\" button.\n      if (balanceError !== newBalanceError) {\n        dispatch(setBalanceError(newBalanceError));\n      }\n      dispatch(\n        setFromTokenError(\n          fromToken && countDecimals(newInputValue) > fromToken.decimals\n            ? 'tooManyDecimals'\n            : null,\n        ),\n      );\n    },\n    [dispatch, fromToken, balanceError],\n  );\n\n  useEffect(() => {\n    let timeoutLength;\n\n    if (!prefetchingQuotes) {\n      updateQuoteCount(0);\n      return;\n    }\n\n    const onQuotesLoadingDone = async () => {\n      await dispatch(setBackgroundSwapRouteState(''));\n      setPrefetchingQuotes(false);\n      if (\n        swapsErrorKey === ERROR_FETCHING_QUOTES ||\n        swapsErrorKey === QUOTES_NOT_AVAILABLE_ERROR\n      ) {\n        dispatch(setSwapsErrorKey(QUOTES_NOT_AVAILABLE_ERROR));\n      }\n    };\n\n    // The below logic simulates a sequential loading of the aggregator quotes, even though we are fetching them all with a single call.\n    // This is to give the user a sense of progress. The callback passed to `setTimeout` updates the quoteCount and therefore causes\n    // a new logo to be shown, the fox to look at that logo, the logo bar and aggregator name to update.\n\n    if (loadingComplete) {\n      // If loading is complete, but the quoteCount is not, we quickly display the remaining logos/names/fox looks. 0.2s each\n      timeoutLength = 20;\n    } else {\n      // If loading is not complete, we display remaining logos/names/fox looks at random intervals between 0.5s and 2s, to simulate the\n      // sort of loading a user would experience in most async scenarios\n      timeoutLength = 500 + Math.floor(Math.random() * 1500);\n    }\n    const quoteCountTimeout = setTimeout(() => {\n      if (quoteCount < numberOfAggregators) {\n        updateQuoteCount(quoteCount + 1);\n      } else if (quoteCount === numberOfAggregators && loadingComplete) {\n        onQuotesLoadingDone();\n      }\n    }, timeoutLength);\n\n    // eslint-disable-next-line consistent-return\n    return function cleanup() {\n      clearTimeout(quoteCountTimeout);\n    };\n  }, [\n    fetchingQuotes,\n    quoteCount,\n    loadingComplete,\n    numberOfQuotes,\n    dispatch,\n    history,\n    swapsErrorKey,\n    numberOfAggregators,\n    prefetchingQuotes,\n  ]);\n\n  const onFromSelect = (token) => {\n    if (\n      token?.address &&\n      !swapFromFiatValue &&\n      fetchedTokenExchangeRate !== null\n    ) {\n      fetchTokenPrice(token.address).then((rate) => {\n        if (rate !== null && rate !== undefined) {\n          setFetchedTokenExchangeRate(rate);\n        }\n      });\n    } else {\n      setFetchedTokenExchangeRate(null);\n    }\n    if (\n      token?.address &&\n      !memoizedUsersTokens.find((usersToken) =>\n        isEqualCaseInsensitive(usersToken.address, token.address),\n      )\n    ) {\n      fetchTokenBalance(\n        token.address,\n        selectedAccountAddress,\n        global.ethereumProvider,\n      ).then((fetchedBalance) => {\n        if (fetchedBalance?.balance) {\n          const balanceAsDecString = fetchedBalance.balance.toString(10);\n          const userTokenBalance = calcTokenAmount(\n            balanceAsDecString,\n            token.decimals,\n          );\n          dispatch(\n            setSwapsFromToken({\n              ...token,\n              string: userTokenBalance.toString(10),\n              balance: balanceAsDecString,\n            }),\n          );\n        }\n      });\n    }\n    dispatch(setSwapsFromToken(token));\n    onInputChange(fromTokenInputValue, token.string, token.decimals);\n  };\n\n  const blockExplorerTokenLink = getTokenTrackerLink(\n    selectedToToken.address,\n    chainId,\n    null, // no networkId\n    null, // no holderAddress\n    {\n      blockExplorerUrl:\n        SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP[chainId] ?? null,\n    },\n  );\n\n  const blockExplorerLabel = rpcPrefs.blockExplorerUrl\n    ? getURLHostName(blockExplorerTokenLink)\n    : t('etherscan');\n\n  const { address: toAddress } = toToken || {};\n  const onToSelect = useCallback(\n    (token) => {\n      if (latestAddedTokenTo && token.address !== toAddress) {\n        dispatch(\n          ignoreTokens({\n            tokensToIgnore: toAddress,\n            dontShowLoadingIndicator: true,\n          }),\n        );\n      }\n      dispatch(setSwapToToken(token));\n      setVerificationClicked(false);\n    },\n    [dispatch, latestAddedTokenTo, toAddress],\n  );\n\n  const tokensWithBalancesFromToken = tokensWithBalances.find((token) =>\n    isEqualCaseInsensitive(token.address, fromToken?.address),\n  );\n  const previousTokensWithBalancesFromToken = usePrevious(\n    tokensWithBalancesFromToken,\n  );\n\n  useEffect(() => {\n    const notDefault = !isSwapsDefaultTokenAddress(\n      tokensWithBalancesFromToken?.address,\n      chainId,\n    );\n    const addressesAreTheSame = isEqualCaseInsensitive(\n      tokensWithBalancesFromToken?.address,\n      previousTokensWithBalancesFromToken?.address,\n    );\n    const balanceHasChanged =\n      tokensWithBalancesFromToken?.balance !==\n      previousTokensWithBalancesFromToken?.balance;\n    if (notDefault && addressesAreTheSame && balanceHasChanged) {\n      dispatch(\n        setSwapsFromToken({\n          ...fromToken,\n          balance: tokensWithBalancesFromToken?.balance,\n          string: tokensWithBalancesFromToken?.string,\n        }),\n      );\n    }\n  }, [\n    dispatch,\n    tokensWithBalancesFromToken,\n    previousTokensWithBalancesFromToken,\n    fromToken,\n    chainId,\n  ]);\n\n  // If the eth balance changes while on build quote, we update the selected from token\n  useEffect(() => {\n    if (\n      isSwapsDefaultTokenAddress(fromToken?.address, chainId) &&\n      fromToken?.balance !== hexToDecimal(ethBalance)\n    ) {\n      dispatch(\n        setSwapsFromToken({\n          ...fromToken,\n          balance: hexToDecimal(ethBalance),\n          string: getValueFromWeiHex({\n            value: ethBalance,\n            numberOfDecimals: 4,\n            toDenomination: 'ETH',\n          }),\n        }),\n      );\n    }\n  }, [dispatch, fromToken, ethBalance, chainId]);\n\n  useEffect(() => {\n    if (!fromToken?.symbol && !fetchParamsFromToken?.symbol) {\n      dispatch(setSwapsFromToken(defaultSwapsToken));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (prevFromTokenBalance !== fromTokenBalance) {\n      onInputChange(fromTokenInputValue, fromTokenBalance);\n    }\n  }, [\n    onInputChange,\n    prevFromTokenBalance,\n    fromTokenInputValue,\n    fromTokenBalance,\n  ]);\n\n  const trackPrepareSwapPageLoadedEvent = useCallback(() => {\n    trackEvent({\n      event: 'Prepare Swap Page Loaded',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n      },\n    });\n  }, [\n    trackEvent,\n    hardwareWalletUsed,\n    hardwareWalletType,\n    smartTransactionsEnabled,\n    currentSmartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n  ]);\n\n  useEffect(() => {\n    dispatch(resetSwapsPostFetchState());\n    dispatch(setReviewSwapClickedTimestamp());\n    trackPrepareSwapPageLoadedEvent();\n  }, [dispatch, trackPrepareSwapPageLoadedEvent]);\n\n  const BlockExplorerLink = () => {\n    return (\n      <a\n        className=\"prepare-swap-page__token-etherscan-link\"\n        key=\"prepare-swap-page-etherscan-link\"\n        onClick={() => {\n          /* istanbul ignore next */\n          trackEvent({\n            event: MetaMetricsEventName.ExternalLinkClicked,\n            category: MetaMetricsEventCategory.Swaps,\n            properties: {\n              link_type: MetaMetricsEventLinkType.TokenTracker,\n              location: 'Swaps Confirmation',\n              url_domain: getURLHostName(blockExplorerTokenLink),\n            },\n          });\n          global.platform.openTab({\n            url: blockExplorerTokenLink,\n          });\n        }}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {blockExplorerLabel}\n      </a>\n    );\n  };\n\n  const yourTokenFromBalance = `${t('balance')}: ${fromTokenString || '0'}`;\n  const yourTokenToBalance = `${t('balance')}: ${\n    selectedToToken?.string || '0'\n  }`;\n\n  const isDirectWrappingEnabled = shouldEnableDirectWrapping(\n    chainId,\n    fromTokenAddress,\n    selectedToToken.address,\n  );\n  const isReviewSwapButtonDisabled =\n    fromTokenError ||\n    !isFeatureFlagLoaded ||\n    !Number(fromTokenInputValue) ||\n    !selectedToToken?.address ||\n    !fromTokenAddress ||\n    Number(maxSlippage) < 0 ||\n    Number(maxSlippage) > MAX_ALLOWED_SLIPPAGE ||\n    (toTokenIsNotDefault && occurrences < 2 && !verificationClicked);\n\n  // It's triggered every time there is a change in form values (token from, token to, amount and slippage).\n  useEffect(() => {\n    dispatch(clearSwapsQuotes());\n    dispatch(stopPollingForQuotes());\n    const prefetchQuotesWithoutRedirecting = async () => {\n      setPrefetchingQuotes(true);\n      const pageRedirectionDisabled = true;\n      await dispatch(\n        fetchQuotesAndSetQuoteState(\n          history,\n          fromTokenInputValue,\n          maxSlippage,\n          trackEvent,\n          pageRedirectionDisabled,\n        ),\n      );\n    };\n    // Delay fetching quotes until a user is done typing an input value. If they type a new char in less than a second,\n    // we will cancel previous setTimeout call and start running a new one.\n    timeoutIdForQuotesPrefetching = setTimeout(() => {\n      timeoutIdForQuotesPrefetching = null;\n      if (!isReviewSwapButtonDisabled) {\n        if (isSmartTransaction) {\n          clearSmartTransactionFees(); // Clean up STX fees eery time there is a form change.\n          dispatch({\n            type: SET_SMART_TRANSACTIONS_ERROR,\n            payload: null,\n          });\n        }\n        // Only do quotes prefetching if the Review swap button is enabled.\n        prefetchQuotesWithoutRedirecting();\n      }\n    }, 1000);\n    return () => clearTimeout(timeoutIdForQuotesPrefetching);\n  }, [\n    dispatch,\n    history,\n    maxSlippage,\n    trackEvent,\n    isReviewSwapButtonDisabled,\n    fromTokenInputValue,\n    fromTokenAddress,\n    toTokenAddress,\n    smartTransactionsOptInStatus,\n    isSmartTransaction,\n  ]);\n\n  // Set text for the main button based on different conditions.\n  let mainButtonText;\n  if (swapsErrorKey && swapsErrorKey === QUOTES_NOT_AVAILABLE_ERROR) {\n    mainButtonText = t('swapQuotesNotAvailableErrorTitle');\n  } else if (!isReviewSwapButtonDisabled) {\n    mainButtonText = t('swapFetchingQuotes');\n  } else if (!selectedToToken?.address || !fromTokenAddress) {\n    mainButtonText = t('swapSelectToken');\n  } else {\n    mainButtonText = t('swapEnterAmount');\n  }\n\n  const onTextFieldChange = (event) => {\n    event.stopPropagation();\n    // Automatically prefix value with 0. if user begins typing .\n    const valueToUse = event.target.value === '.' ? '0.' : event.target.value;\n\n    // Regex that validates strings with only numbers, 'x.', '.x', and 'x.x'\n    const regexp = /^(\\.\\d+|\\d+(\\.\\d+)?|\\d+\\.)$/u;\n    // If the value is either empty or contains only numbers and '.' and only has one '.', update input to match\n    if (valueToUse === '' || regexp.test(valueToUse)) {\n      onInputChange(valueToUse, fromTokenBalance);\n    } else {\n      // otherwise, use the previously set inputValue (effectively denying the user from inputting the last char)\n      // or an empty string if we do not yet have an inputValue\n      onInputChange(fromTokenInputValue || '', fromTokenBalance);\n    }\n  };\n\n  const hideSwapToTokenIf = useCallback(\n    (item) => isEqualCaseInsensitive(item.address, fromTokenAddress),\n    [fromTokenAddress],\n  );\n\n  const hideSwapFromTokenIf = useCallback(\n    (item) => isEqualCaseInsensitive(item.address, selectedToToken?.address),\n    [selectedToToken?.address],\n  );\n\n  const showReviewQuote =\n    !swapsErrorKey && !isReviewSwapButtonDisabled && areQuotesPresent;\n  const showQuotesLoadingAnimation =\n    !swapsErrorKey && !isReviewSwapButtonDisabled && !areQuotesPresent;\n  const showNotEnoughTokenMessage =\n    !fromTokenError && balanceError && fromTokenSymbol;\n  const showCrossChainSwapsLink =\n    isBridgeChain &&\n    !showReviewQuote &&\n    !showQuotesLoadingAnimation &&\n    !areQuotesPresent;\n\n  const tokenVerifiedOn1Source = occurrences === 1;\n\n  useEffect(() => {\n    if (swapsErrorKey === QUOTES_EXPIRED_ERROR) {\n      history.push(SWAPS_NOTIFICATION_ROUTE);\n    }\n  }, [swapsErrorKey, history]);\n\n  useEffect(() => {\n    if (showQuotesLoadingAnimation) {\n      setReceiveToAmount('');\n    }\n  }, [showQuotesLoadingAnimation]);\n\n  const onOpenImportTokenModalClick = (item) => {\n    setTokenForImport(item);\n    setIsImportTokenModalOpen(true);\n    onSwapToClose();\n    setSwapToSearchQuery('');\n  };\n\n  /* istanbul ignore next */\n  const onImportTokenClick = () => {\n    trackEvent({\n      event: 'Token Imported',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        symbol: tokenForImport?.symbol,\n        address: tokenForImport?.address,\n        chain_id: chainId,\n        is_hardware_wallet: hardwareWalletUsed,\n        hardware_wallet_type: hardwareWalletType,\n        stx_enabled: smartTransactionsEnabled,\n        current_stx_enabled: currentSmartTransactionsEnabled,\n        stx_user_opt_in: smartTransactionsOptInStatus,\n      },\n    });\n    // Only when a user confirms import of a token, we add it and show it in a dropdown.\n    onToSelect?.(tokenForImport);\n    setTokenForImport(null);\n  };\n\n  const onImportTokenCloseClick = () => {\n    setIsImportTokenModalOpen(false);\n  };\n\n  const importTokenProps = {\n    onImportTokenCloseClick,\n    onImportTokenClick,\n    setIsImportTokenModalOpen,\n    tokenForImport,\n  };\n\n  let receiveToAmountFormatted;\n  let receiveToAmountClassName;\n  let fromTokenAmountClassName;\n\n  // TODO: Do this only when these variables change, not on every re-render.\n  if (receiveToAmount && !isReviewSwapButtonDisabled) {\n    receiveToAmountFormatted = formatSwapsValueForDisplay(receiveToAmount);\n    receiveToAmountClassName = getClassNameForCharLength(\n      receiveToAmountFormatted,\n      'prepare-swap-page__receive-amount',\n    );\n  }\n  if (fromTokenInputValue) {\n    fromTokenAmountClassName = getClassNameForCharLength(\n      fromTokenInputValue,\n      'prepare-swap-page__from-token-amount',\n    );\n  }\n\n  const showMaxBalanceLink =\n    fromTokenSymbol &&\n    !isSwapsDefaultTokenSymbol(fromTokenSymbol, chainId) &&\n    rawFromTokenBalance > 0;\n\n  return (\n    <div className=\"prepare-swap-page\">\n      <div className=\"prepare-swap-page__content\">\n        {tokenForImport && isImportTokenModalOpen && (\n          <ImportToken isOpen {...importTokenProps} />\n        )}\n        <Modal\n          onClose={onSwapToClose}\n          isOpen={isSwapToOpen}\n          isClosedOnOutsideClick\n          isClosedOnEscapeKey\n          className=\"mm-modal__custom-scrollbar\"\n        >\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader onClose={onSwapToClose}>{t('swapSwapTo')}</ModalHeader>\n            <Box\n              paddingTop={10}\n              paddingRight={0}\n              paddingBottom={0}\n              paddingLeft={0}\n              display={DISPLAY.FLEX}\n            >\n              <ListWithSearch\n                selectedItem={selectedToToken}\n                itemsToSearch={tokensToSearchSwapTo}\n                onClickItem={(item) => {\n                  onToSelect?.(item);\n                  onSwapToClose();\n                }}\n                maxListItems={30}\n                searchQuery={swapToSearchQuery}\n                setSearchQuery={setSwapToSearchQuery}\n                hideItemIf={hideSwapToTokenIf}\n                shouldSearchForImports\n                onOpenImportTokenModalClick={onOpenImportTokenModalClick}\n              />\n            </Box>\n          </ModalContent>\n        </Modal>\n        <Modal\n          onClose={onSwapFromClose}\n          isOpen={isSwapFromOpen}\n          isClosedOnOutsideClick\n          isClosedOnEscapeKey\n          className=\"mm-modal__custom-scrollbar\"\n        >\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader onClose={onSwapFromClose}>\n              {t('swapSwapFrom')}\n            </ModalHeader>\n            <Box\n              paddingTop={10}\n              paddingRight={0}\n              paddingBottom={0}\n              paddingLeft={0}\n              display={DISPLAY.FLEX}\n            >\n              <ListWithSearch\n                selectedItem={selectedFromToken}\n                itemsToSearch={tokensToSearchSwapFrom}\n                onClickItem={(item) => {\n                  onFromSelect?.(item);\n                  onSwapFromClose();\n                }}\n                maxListItems={30}\n                searchQuery={swapFromSearchQuery}\n                setSearchQuery={setSwapFromSearchQuery}\n                hideItemIf={hideSwapFromTokenIf}\n              />\n            </Box>\n          </ModalContent>\n        </Modal>\n\n        <div className=\"prepare-swap-page__swap-from-content\">\n          <Box\n            display={DISPLAY.FLEX}\n            justifyContent={JustifyContent.spaceBetween}\n            alignItems={AlignItems.center}\n          >\n            <SelectedToken\n              onClick={onSwapFromOpen}\n              onClose={onSwapFromClose}\n              selectedToken={selectedFromToken}\n              testId=\"prepare-swap-page-swap-from\"\n            />\n            <Box display={DISPLAY.FLEX} alignItems={AlignItems.center}>\n              <TextField\n                className={classnames('prepare-swap-page__from-token-amount', {\n                  [fromTokenAmountClassName]: fromTokenAmountClassName,\n                })}\n                size={TextFieldSize.Sm}\n                placeholder=\"0\"\n                onChange={onTextFieldChange}\n                value={fromTokenInputValue}\n                truncate={false}\n                testId=\"prepare-swap-page-from-token-amount\"\n              />\n            </Box>\n          </Box>\n          <Box\n            display={DISPLAY.FLEX}\n            justifyContent={JustifyContent.spaceBetween}\n            alignItems={AlignItems.stretch}\n          >\n            <div className=\"prepare-swap-page__balance-message\">\n              {fromTokenSymbol && yourTokenFromBalance}\n              {showMaxBalanceLink && (\n                <div\n                  className=\"prepare-swap-page__max-balance\"\n                  data-testid=\"prepare-swap-page-max-balance\"\n                  onClick={() =>\n                    onInputChange(fromTokenBalance || '0', fromTokenBalance)\n                  }\n                >\n                  {t('max')}\n                </div>\n              )}\n            </div>\n            {fromTokenInputValue && swapFromFiatValue && (\n              <Box\n                display={DISPLAY.FLEX}\n                justifyContent={JustifyContent.flexEnd}\n                alignItems={AlignItems.flexEnd}\n              >\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.textAlternative}\n                >\n                  {swapFromFiatValue}\n                </Text>\n              </Box>\n            )}\n          </Box>\n          {showNotEnoughTokenMessage && (\n            <Box\n              display={DISPLAY.FLEX}\n              justifyContent={JustifyContent.flexStart}\n            >\n              <Text\n                variant={TextVariant.bodySmBold}\n                color={TextColor.textAlternative}\n                marginTop={0}\n              >\n                {t('swapsNotEnoughToken', [fromTokenSymbol])}\n              </Text>\n            </Box>\n          )}\n          {fromTokenError && (\n            <Box\n              display={DISPLAY.FLEX}\n              justifyContent={JustifyContent.flexStart}\n            >\n              <Text\n                variant={TextVariant.bodySmBold}\n                color={TextColor.textAlternative}\n                marginTop={0}\n              >\n                {t('swapTooManyDecimalsError', [\n                  fromTokenSymbol,\n                  fromTokenDecimals,\n                ])}\n              </Text>\n            </Box>\n          )}\n          <Box display={DISPLAY.FLEX} justifyContent={JustifyContent.center}>\n            <div\n              className={classnames('prepare-swap-page__switch-tokens', {\n                'prepare-swap-page__switch-tokens--rotate': rotateSwitchTokens,\n                'prepare-swap-page__switch-tokens--disabled':\n                  showQuotesLoadingAnimation,\n              })}\n              data-testid=\"prepare-swap-page-switch-tokens\"\n              onClick={() => {\n                // If quotes are being loaded, disable the switch button.\n                if (!showQuotesLoadingAnimation) {\n                  onToSelect(selectedFromToken);\n                  onFromSelect(selectedToToken);\n                  setRotateSwitchTokens(!rotateSwitchTokens);\n                }\n              }}\n              title={t('swapSwapSwitch')}\n            >\n              <Icon name={IconName.Arrow2Down} size={IconSize.Lg} />\n            </div>\n          </Box>\n        </div>\n        <div className=\"prepare-swap-page__swap-to-content\">\n          <Box\n            display={DISPLAY.FLEX}\n            justifyContent={JustifyContent.spaceBetween}\n            alignItems={AlignItems.center}\n          >\n            <SelectedToken\n              onClick={onSwapToOpen}\n              onClose={onSwapToClose}\n              selectedToken={selectedToToken}\n              testId=\"prepare-swap-page-swap-to\"\n            />\n            <Box\n              display={DISPLAY.FLEX}\n              alignItems={AlignItems.center}\n              marginLeft={2}\n              className=\"prepare-swap-page__receive-amount-container\"\n            >\n              <Text\n                as=\"h6\"\n                data-testid=\"prepare-swap-page-receive-amount\"\n                className={classnames('prepare-swap-page__receive-amount', {\n                  [receiveToAmountClassName]: receiveToAmountClassName,\n                })}\n              >\n                {receiveToAmountFormatted}\n              </Text>\n            </Box>\n          </Box>\n          <Box\n            display={DISPLAY.FLEX}\n            justifyContent={JustifyContent.spaceBetween}\n            alignItems={AlignItems.stretch}\n          >\n            <div className=\"prepare-swap-page__balance-message\">\n              {selectedToToken?.string && yourTokenToBalance}\n            </div>\n          </Box>\n        </div>\n        {showCrossChainSwapsLink && (\n          <ButtonLink\n            endIconName={IconName.Export}\n            endIconProps={{\n              size: IconSize.Xs,\n            }}\n            variant={TextVariant.bodySm}\n            marginTop={2}\n            fontWeight={FontWeight.Normal}\n            onClick={() => {\n              const portfolioUrl = getPortfolioUrl(\n                'bridge',\n                'ext_bridge_prepare_swap_link',\n                metaMetricsId,\n                isMetaMetricsEnabled,\n                isMarketingEnabled,\n              );\n\n              global.platform.openTab({\n                url: `${portfolioUrl}&token=${fromTokenAddress}`,\n              });\n\n              trackEvent({\n                category: MetaMetricsEventCategory.Swaps,\n                event: MetaMetricsEventName.BridgeLinkClicked,\n                properties: {\n                  location: 'Swaps',\n                  text: 'Swap across networks with MetaMask Portfolio',\n                  chain_id: chainId,\n                  token_symbol: fromTokenSymbol,\n                },\n              });\n            }}\n            target=\"_blank\"\n            data-testid=\"prepare-swap-page-cross-chain-swaps-link\"\n          >\n            {t('crossChainSwapsLink')}\n          </ButtonLink>\n        )}\n        {!showReviewQuote && toTokenIsNotDefault && occurrences < 2 && (\n          <Box display={DISPLAY.FLEX} marginTop={2}>\n            <BannerAlert\n              severity={\n                tokenVerifiedOn1Source ? SEVERITIES.WARNING : SEVERITIES.DANGER\n              }\n              title={\n                tokenVerifiedOn1Source\n                  ? t('swapTokenVerifiedOn1SourceTitle')\n                  : t('swapTokenAddedManuallyTitle')\n              }\n              titleProps={{\n                'data-testid': 'swaps-banner-title',\n              }}\n              width={BLOCK_SIZES.FULL}\n            >\n              <Box>\n                <Text\n                  variant={TextVariant.bodyMd}\n                  as=\"h6\"\n                  data-testid=\"mm-banner-alert-notification-text\"\n                >\n                  {tokenVerifiedOn1Source\n                    ? t('swapTokenVerifiedOn1SourceDescription', [\n                        selectedToToken?.symbol,\n                        <BlockExplorerLink key=\"block-explorer-link\" />,\n                      ])\n                    : t('swapTokenAddedManuallyDescription', [\n                        <BlockExplorerLink key=\"block-explorer-link\" />,\n                      ])}\n                </Text>\n                {!verificationClicked && (\n                  <ButtonLink\n                    size={ButtonLinkSize.Inherit}\n                    textProps={{\n                      variant: TextVariant.bodyMd,\n                      alignItems: AlignItems.flexStart,\n                    }}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      setVerificationClicked(true);\n                    }}\n                  >\n                    {t('swapContinueSwapping')}\n                  </ButtonLink>\n                )}\n              </Box>\n            </BannerAlert>\n          </Box>\n        )}\n        {swapsErrorKey && (\n          <Box display={DISPLAY.FLEX} marginTop={2}>\n            <SwapsBannerAlert\n              swapsErrorKey={swapsErrorKey}\n              currentSlippage={maxSlippage}\n            />\n          </Box>\n        )}\n        {transactionSettingsOpened && !isDirectWrappingEnabled && (\n          <TransactionSettings\n            onSelect={(newSlippage) => {\n              dispatch(setMaxSlippage(newSlippage));\n            }}\n            maxAllowedSlippage={MAX_ALLOWED_SLIPPAGE}\n            currentSlippage={maxSlippage}\n            isDirectWrappingEnabled={isDirectWrappingEnabled}\n            onModalClose={() => {\n              dispatch(setTransactionSettingsOpened(false));\n            }}\n          />\n        )}\n        {showQuotesLoadingAnimation && (\n          <QuotesLoadingAnimation\n            quoteCount={quoteCount}\n            numberOfAggregators={numberOfAggregators}\n          />\n        )}\n        {showReviewQuote && (\n          <ReviewQuote setReceiveToAmount={setReceiveToAmount} />\n        )}\n      </div>\n      {!areQuotesPresent && (\n        <SwapsFooter\n          submitText={mainButtonText}\n          disabled\n          hideCancel\n          showTermsOfService\n        />\n      )}\n    </div>\n  );\n}\n\nPrepareSwapPage.propTypes = {\n  ethBalance: PropTypes.string,\n  selectedAccountAddress: PropTypes.string,\n  shuffledTokensList: PropTypes.array,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport Box from '../../../components/ui/box';\nimport {\n  DISPLAY,\n  FLEX_DIRECTION,\n  TextColor,\n  JustifyContent,\n  AlignItems,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport { Text } from '../../../components/component-library';\nimport MascotBackgroundAnimation from '../mascot-background-animation/mascot-background-animation';\n\nexport default function QuotesLoadingAnimation(props) {\n  const { quoteCount, numberOfAggregators } = props;\n\n  const t = useContext(I18nContext);\n\n  return (\n    <Box\n      marginTop={4}\n      display={DISPLAY.FLEX}\n      justifyContent={JustifyContent.center}\n      alignItems={AlignItems.center}\n      flexDirection={FLEX_DIRECTION.COLUMN}\n    >\n      <Box\n        display={DISPLAY.FLEX}\n        justifyContent={JustifyContent.center}\n        alignItems={AlignItems.center}\n      >\n        <Text\n          variant={TextVariant.bodyMd}\n          as=\"h6\"\n          color={TextColor.textAlternative}\n          marginLeft={1}\n          marginRight={1}\n        >\n          {t('swapFetchingQuote')}\n        </Text>\n        <Text\n          variant={TextVariant.bodyMdBold}\n          as=\"h6\"\n          color={TextColor.textAlternative}\n        >\n          {t('swapQuoteNofM', [\n            Math.min(quoteCount + 1, numberOfAggregators),\n            numberOfAggregators,\n          ])}\n        </Text>\n      </Box>\n      <MascotBackgroundAnimation />\n    </Box>\n  );\n}\n\nQuotesLoadingAnimation.propTypes = {\n  quoteCount: PropTypes.number.isRequired,\n  numberOfAggregators: PropTypes.number.isRequired,\n};\n","import React, {\n  useState,\n  useContext,\n  useMemo,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { isEqual } from 'lodash';\nimport classnames from 'classnames';\nimport { captureException } from '@sentry/browser';\nimport PropTypes from 'prop-types';\nimport ZENDESK_URLS from '../../../helpers/constants/zendesk-url';\nimport { I18nContext } from '../../../contexts/i18n';\nimport SelectQuotePopover from '../select-quote-popover';\nimport { useEthFiatAmount } from '../../../hooks/useEthFiatAmount';\nimport { useEqualityCheck } from '../../../hooks/useEqualityCheck';\nimport { usePrevious } from '../../../hooks/usePrevious';\nimport { useGasFeeInputs } from '../../confirmations/hooks/useGasFeeInputs';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  getQuotes,\n  getSelectedQuote,\n  getApproveTxParams,\n  getFetchParams,\n  setBalanceError,\n  getQuotesLastFetched,\n  getBalanceError,\n  getCustomSwapsGas, // Gas limit.\n  getCustomMaxFeePerGas,\n  getCustomMaxPriorityFeePerGas,\n  getSwapsUserFeeLevel,\n  getDestinationTokenInfo,\n  getUsedSwapsGasPrice,\n  getTopQuote,\n  signAndSendTransactions,\n  getBackgroundSwapRouteState,\n  swapsQuoteSelected,\n  getReviewSwapClickedTimestamp,\n  signAndSendSwapsSmartTransaction,\n  getSwapsNetworkConfig,\n  getSmartTransactionsError,\n  getCurrentSmartTransactionsError,\n  getSwapsSTXLoading,\n  fetchSwapsSmartTransactionFees,\n  getSmartTransactionFees,\n  getCurrentSmartTransactionsEnabled,\n} from '../../../ducks/swaps/swaps';\nimport {\n  conversionRateSelector,\n  getSelectedAccount,\n  getCurrentCurrency,\n  getTokenExchangeRates,\n  getSwapsDefaultToken,\n  getCurrentChainId,\n  isHardwareWallet,\n  getHardwareWalletType,\n  checkNetworkAndAccountSupports1559,\n  getUSDConversionRate,\n} from '../../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\nimport { getNativeCurrency, getTokens } from '../../../ducks/metamask/metamask';\nimport {\n  setCustomApproveTxData,\n  showModal,\n  setSwapsQuotesPollingLimitEnabled,\n  getLayer1GasFee,\n} from '../../../store/actions';\nimport {\n  ASSET_ROUTE,\n  DEFAULT_ROUTE,\n  AWAITING_SWAP_ROUTE,\n  PREPARE_SWAP_ROUTE,\n} from '../../../helpers/constants/routes';\nimport {\n  addHexes,\n  decGWEIToHexWEI,\n  decimalToHex,\n  decWEIToDecETH,\n  sumHexes,\n} from '../../../../shared/modules/conversion.utils';\nimport { getCustomTxParamsData } from '../../confirmations/confirm-approve/confirm-approve.util';\nimport {\n  quotesToRenderableData,\n  getRenderableNetworkFeesForQuote,\n  getFeeForSmartTransaction,\n  formatSwapsValueForDisplay,\n} from '../swaps.util';\nimport { useTokenTracker } from '../../../hooks/useTokenTracker';\nimport {\n  SLIPPAGE_HIGH_ERROR,\n  SLIPPAGE_LOW_ERROR,\n  MAX_ALLOWED_SLIPPAGE,\n} from '../../../../shared/constants/swaps';\nimport { GasRecommendations } from '../../../../shared/constants/gas';\nimport CountdownTimer from '../countdown-timer';\nimport SwapsFooter from '../swaps-footer';\nimport Box from '../../../components/ui/box';\nimport {\n  TextColor,\n  JustifyContent,\n  DISPLAY,\n  AlignItems,\n  TextVariant,\n  FRACTIONS,\n  TEXT_ALIGN,\n  Size,\n  FlexDirection,\n  Severity,\n} from '../../../helpers/constants/design-system';\nimport {\n  BannerAlert,\n  ButtonLink,\n  ButtonLinkSize,\n  Text,\n} from '../../../components/component-library';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n  MetaMetricsEventErrorType,\n} from '../../../../shared/constants/metametrics';\nimport { isEqualCaseInsensitive } from '../../../../shared/modules/string-utils';\nimport { parseStandardTokenTransactionData } from '../../../../shared/modules/transaction.utils';\nimport { getTokenValueParam } from '../../../../shared/lib/metamask-controller-utils';\nimport {\n  calcGasTotal,\n  calcTokenAmount,\n  toPrecisionWithoutTrailingZeros,\n} from '../../../../shared/lib/transactions-controller-utils';\nimport { addHexPrefix } from '../../../../app/scripts/lib/util';\nimport {\n  calcTokenValue,\n  calculateMaxGasLimit,\n} from '../../../../shared/lib/swaps-utils';\nimport ExchangeRateDisplay from '../exchange-rate-display';\nimport InfoTooltip from '../../../components/ui/info-tooltip';\nimport useRamps from '../../../hooks/ramps/useRamps/useRamps';\nimport ViewQuotePriceDifference from './view-quote-price-difference';\nimport SlippageNotificationModal from './slippage-notification-modal';\n\nlet intervalId;\n\nexport default function ReviewQuote({ setReceiveToAmount }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [selectQuotePopoverShown, setSelectQuotePopoverShown] = useState(false);\n  const [warningHidden] = useState(false); // TODO: Check when to use setWarningHidden\n  const [originalApproveAmount, setOriginalApproveAmount] = useState(null);\n  const [multiLayerL1FeeTotal, setMultiLayerL1FeeTotal] = useState(null);\n  const [multiLayerL1ApprovalFeeTotal, setMultiLayerL1ApprovalFeeTotal] =\n    useState(null);\n  // We need to have currentTimestamp in state, otherwise it would change with each rerender.\n  const [currentTimestamp] = useState(Date.now());\n  const { openBuyCryptoInPdapp } = useRamps();\n\n  const [acknowledgedPriceDifference, setAcknowledgedPriceDifference] =\n    useState(false);\n  const [slippageNotificationModalOpened, setSlippageNotificationModalOpened] =\n    useState(false);\n  const priceDifferenceRiskyBuckets = [\n    GasRecommendations.high,\n    GasRecommendations.medium,\n  ];\n\n  const routeState = useSelector(getBackgroundSwapRouteState);\n  const quotes = useSelector(getQuotes, isEqual);\n  useEffect(() => {\n    if (!Object.values(quotes).length) {\n      history.push(PREPARE_SWAP_ROUTE);\n    } else if (routeState === 'awaiting') {\n      history.push(AWAITING_SWAP_ROUTE);\n    }\n  }, [history, quotes, routeState]);\n\n  const quotesLastFetched = useSelector(getQuotesLastFetched);\n  const prevQuotesLastFetched = usePrevious(quotesLastFetched);\n\n  // Select necessary data\n  const gasPrice = useSelector(getUsedSwapsGasPrice);\n  const customMaxGas = useSelector(getCustomSwapsGas);\n  const customMaxFeePerGas = useSelector(getCustomMaxFeePerGas);\n  const customMaxPriorityFeePerGas = useSelector(getCustomMaxPriorityFeePerGas);\n  const swapsUserFeeLevel = useSelector(getSwapsUserFeeLevel);\n  const tokenConversionRates = useSelector(getTokenExchangeRates, isEqual);\n  const memoizedTokenConversionRates = useEqualityCheck(tokenConversionRates);\n  const { balance: ethBalance } = useSelector(getSelectedAccount, shallowEqual);\n  const conversionRate = useSelector(conversionRateSelector);\n  const USDConversionRate = useSelector(getUSDConversionRate);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const swapsTokens = useSelector(getTokens, isEqual);\n  const networkAndAccountSupports1559 = useSelector(\n    checkNetworkAndAccountSupports1559,\n  );\n  const balanceError = useSelector(getBalanceError);\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const approveTxParams = useSelector(getApproveTxParams, shallowEqual);\n  const selectedQuote = useSelector(getSelectedQuote, isEqual);\n  const topQuote = useSelector(getTopQuote, isEqual);\n  const usedQuote = selectedQuote || topQuote;\n  const tradeValue = usedQuote?.trade?.value ?? '0x0';\n  const defaultSwapsToken = useSelector(getSwapsDefaultToken, isEqual);\n  const chainId = useSelector(getCurrentChainId);\n  const nativeCurrencySymbol = useSelector(getNativeCurrency);\n  const reviewSwapClickedTimestamp = useSelector(getReviewSwapClickedTimestamp);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const swapsSTXLoading = useSelector(getSwapsSTXLoading);\n  const currentSmartTransactionsError = useSelector(\n    getCurrentSmartTransactionsError,\n  );\n  const smartTransactionsError = useSelector(getSmartTransactionsError);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const smartTransactionFees = useSelector(getSmartTransactionFees, isEqual);\n  const swapsNetworkConfig = useSelector(getSwapsNetworkConfig, shallowEqual);\n  const unsignedTransaction = usedQuote.trade;\n  const isSmartTransaction =\n    currentSmartTransactionsEnabled && smartTransactionsOptInStatus;\n\n  const [slippageErrorKey] = useState(() => {\n    const slippage = Number(fetchParams?.slippage);\n    if (slippage > 0 && slippage <= 1) {\n      return SLIPPAGE_LOW_ERROR;\n    } else if (slippage >= 5 && slippage <= MAX_ALLOWED_SLIPPAGE) {\n      return SLIPPAGE_HIGH_ERROR;\n    }\n    return '';\n  });\n\n  let gasFeeInputs;\n  if (networkAndAccountSupports1559) {\n    // For Swaps we want to get 'high' estimations by default.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    gasFeeInputs = useGasFeeInputs(GasRecommendations.high, {\n      userFeeLevel: swapsUserFeeLevel || GasRecommendations.high,\n    });\n  }\n\n  const fetchParamsSourceToken = fetchParams?.sourceToken;\n\n  const additionalTrackingParams = {\n    reg_tx_fee_in_usd: undefined,\n    reg_tx_fee_in_eth: undefined,\n    reg_tx_max_fee_in_usd: undefined,\n    reg_tx_max_fee_in_eth: undefined,\n    stx_fee_in_usd: undefined,\n    stx_fee_in_eth: undefined,\n    stx_max_fee_in_usd: undefined,\n    stx_max_fee_in_eth: undefined,\n  };\n\n  const usedGasLimit =\n    usedQuote?.gasEstimateWithRefund ||\n    `0x${decimalToHex(usedQuote?.averageGas || 0)}`;\n\n  const maxGasLimit = calculateMaxGasLimit(\n    usedQuote?.gasEstimate,\n    usedQuote?.gasMultiplier,\n    usedQuote?.maxGas,\n    customMaxGas,\n  );\n\n  let maxFeePerGas;\n  let maxPriorityFeePerGas;\n  let baseAndPriorityFeePerGas;\n\n  // EIP-1559 gas fees.\n  if (networkAndAccountSupports1559) {\n    const {\n      maxFeePerGas: suggestedMaxFeePerGas,\n      maxPriorityFeePerGas: suggestedMaxPriorityFeePerGas,\n      gasFeeEstimates: { estimatedBaseFee = '0' } = {},\n    } = gasFeeInputs;\n    maxFeePerGas = customMaxFeePerGas || decGWEIToHexWEI(suggestedMaxFeePerGas);\n    maxPriorityFeePerGas =\n      customMaxPriorityFeePerGas ||\n      decGWEIToHexWEI(suggestedMaxPriorityFeePerGas);\n    baseAndPriorityFeePerGas = addHexes(\n      decGWEIToHexWEI(estimatedBaseFee),\n      maxPriorityFeePerGas,\n    );\n  }\n  let gasTotalInWeiHex = calcGasTotal(maxGasLimit, maxFeePerGas || gasPrice);\n  if (multiLayerL1FeeTotal !== null) {\n    gasTotalInWeiHex = sumHexes(\n      gasTotalInWeiHex || '0x0',\n      multiLayerL1FeeTotal || '0x0',\n    );\n  }\n\n  const { tokensWithBalances } = useTokenTracker({\n    tokens: swapsTokens,\n    includeFailedTokens: true,\n  });\n  const balanceToken =\n    fetchParamsSourceToken === defaultSwapsToken.address\n      ? defaultSwapsToken\n      : tokensWithBalances.find(({ address }) =>\n          isEqualCaseInsensitive(address, fetchParamsSourceToken),\n        );\n\n  const selectedFromToken = balanceToken || usedQuote.sourceTokenInfo;\n  const tokenBalance =\n    tokensWithBalances?.length &&\n    calcTokenAmount(\n      selectedFromToken.balance || '0x0',\n      selectedFromToken.decimals,\n    ).toFixed(9);\n  const tokenBalanceUnavailable =\n    tokensWithBalances && balanceToken === undefined;\n\n  const approveData = parseStandardTokenTransactionData(approveTxParams?.data);\n  const approveValue = approveData && getTokenValueParam(approveData);\n  const approveAmount =\n    approveValue &&\n    selectedFromToken?.decimals !== undefined &&\n    calcTokenAmount(approveValue, selectedFromToken.decimals).toFixed(9);\n  const approveGas = approveTxParams?.gas;\n\n  const renderablePopoverData = useMemo(() => {\n    return quotesToRenderableData({\n      quotes,\n      gasPrice: networkAndAccountSupports1559\n        ? baseAndPriorityFeePerGas\n        : gasPrice,\n      conversionRate,\n      currentCurrency,\n      approveGas,\n      tokenConversionRates: memoizedTokenConversionRates,\n      chainId,\n      smartTransactionEstimatedGas:\n        smartTransactionsEnabled &&\n        smartTransactionsOptInStatus &&\n        smartTransactionFees?.tradeTxFees,\n      nativeCurrencySymbol,\n      multiLayerL1ApprovalFeeTotal,\n    });\n  }, [\n    quotes,\n    gasPrice,\n    baseAndPriorityFeePerGas,\n    networkAndAccountSupports1559,\n    conversionRate,\n    currentCurrency,\n    approveGas,\n    memoizedTokenConversionRates,\n    chainId,\n    smartTransactionFees?.tradeTxFees,\n    nativeCurrencySymbol,\n    smartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n    multiLayerL1ApprovalFeeTotal,\n  ]);\n\n  const renderableDataForUsedQuote = renderablePopoverData.find(\n    (renderablePopoverDatum) =>\n      renderablePopoverDatum.aggId === usedQuote.aggregator,\n  );\n\n  const {\n    destinationTokenDecimals,\n    destinationTokenSymbol,\n    destinationTokenValue,\n    sourceTokenDecimals,\n    sourceTokenSymbol,\n    sourceTokenValue,\n  } = renderableDataForUsedQuote;\n\n  let { feeInFiat, feeInEth, rawEthFee, feeInUsd } =\n    getRenderableNetworkFeesForQuote({\n      tradeGas: usedGasLimit,\n      approveGas,\n      gasPrice: networkAndAccountSupports1559\n        ? baseAndPriorityFeePerGas\n        : gasPrice,\n      currentCurrency,\n      conversionRate,\n      USDConversionRate,\n      tradeValue,\n      sourceSymbol: sourceTokenSymbol,\n      sourceAmount: usedQuote.sourceAmount,\n      chainId,\n      nativeCurrencySymbol,\n      multiLayerL1FeeTotal,\n    });\n  additionalTrackingParams.reg_tx_fee_in_usd = Number(feeInUsd);\n  additionalTrackingParams.reg_tx_fee_in_eth = Number(rawEthFee);\n\n  const renderableMaxFees = getRenderableNetworkFeesForQuote({\n    tradeGas: maxGasLimit,\n    approveGas,\n    gasPrice: maxFeePerGas || gasPrice,\n    currentCurrency,\n    conversionRate,\n    USDConversionRate,\n    tradeValue,\n    sourceSymbol: sourceTokenSymbol,\n    sourceAmount: usedQuote.sourceAmount,\n    chainId,\n    nativeCurrencySymbol,\n    multiLayerL1FeeTotal,\n  });\n  let {\n    feeInFiat: maxFeeInFiat,\n    feeInEth: maxFeeInEth,\n    rawEthFee: maxRawEthFee,\n    feeInUsd: maxFeeInUsd,\n  } = renderableMaxFees;\n  additionalTrackingParams.reg_tx_max_fee_in_usd = Number(maxFeeInUsd);\n  additionalTrackingParams.reg_tx_max_fee_in_eth = Number(maxRawEthFee);\n\n  if (isSmartTransaction && smartTransactionFees?.tradeTxFees) {\n    const stxEstimatedFeeInWeiDec =\n      smartTransactionFees?.tradeTxFees.feeEstimate +\n      (smartTransactionFees?.approvalTxFees?.feeEstimate || 0);\n    const stxMaxFeeInWeiDec =\n      smartTransactionFees?.tradeTxFees.maxFeeEstimate +\n      (smartTransactionFees?.approvalTxFees?.maxFeeEstimate || 0);\n\n    ({ feeInFiat, feeInEth, rawEthFee, feeInUsd } = getFeeForSmartTransaction({\n      chainId,\n      currentCurrency,\n      conversionRate,\n      USDConversionRate,\n      nativeCurrencySymbol,\n      feeInWeiDec: stxEstimatedFeeInWeiDec,\n    }));\n    additionalTrackingParams.stx_fee_in_usd = Number(feeInUsd);\n    additionalTrackingParams.stx_fee_in_eth = Number(rawEthFee);\n    additionalTrackingParams.estimated_gas =\n      smartTransactionFees?.tradeTxFees.gasLimit;\n    ({\n      feeInFiat: maxFeeInFiat,\n      feeInEth: maxFeeInEth,\n      rawEthFee: maxRawEthFee,\n      feeInUsd: maxFeeInUsd,\n    } = getFeeForSmartTransaction({\n      chainId,\n      currentCurrency,\n      conversionRate,\n      USDConversionRate,\n      nativeCurrencySymbol,\n      feeInWeiDec: stxMaxFeeInWeiDec,\n    }));\n    additionalTrackingParams.stx_max_fee_in_usd = Number(maxFeeInUsd);\n    additionalTrackingParams.stx_max_fee_in_eth = Number(maxRawEthFee);\n  }\n\n  const tokenCost = new BigNumber(usedQuote.sourceAmount);\n  const ethCost = new BigNumber(usedQuote.trade.value || 0, 10).plus(\n    new BigNumber(gasTotalInWeiHex, 16),\n  );\n\n  const insufficientTokens =\n    (tokensWithBalances?.length || balanceError) &&\n    tokenCost.gt(new BigNumber(selectedFromToken.balance || '0x0'));\n\n  const insufficientEth = ethCost.gt(new BigNumber(ethBalance || '0x0'));\n\n  const tokenBalanceNeeded = insufficientTokens\n    ? toPrecisionWithoutTrailingZeros(\n        calcTokenAmount(tokenCost, selectedFromToken.decimals)\n          .minus(tokenBalance)\n          .toString(10),\n        6,\n      )\n    : null;\n\n  const ethBalanceNeeded = insufficientEth\n    ? toPrecisionWithoutTrailingZeros(\n        ethCost\n          .minus(ethBalance, 16)\n          .div('1000000000000000000', 10)\n          .toString(10),\n        6,\n      )\n    : null;\n\n  let ethBalanceNeededStx;\n  if (isSmartTransaction && smartTransactionsError?.balanceNeededWei) {\n    ethBalanceNeededStx = decWEIToDecETH(\n      smartTransactionsError.balanceNeededWei -\n        smartTransactionsError.currentBalanceWei,\n    );\n  }\n  const prevEthBalanceNeededStx = usePrevious(ethBalanceNeededStx);\n\n  const destinationToken = useSelector(getDestinationTokenInfo, isEqual);\n  useEffect(() => {\n    if (isSmartTransaction) {\n      if (insufficientTokens) {\n        dispatch(setBalanceError(true));\n      } else if (balanceError && !insufficientTokens) {\n        dispatch(setBalanceError(false));\n      }\n    } else if (insufficientTokens || insufficientEth) {\n      dispatch(setBalanceError(true));\n    } else if (balanceError && !insufficientTokens && !insufficientEth) {\n      dispatch(setBalanceError(false));\n    }\n  }, [\n    insufficientTokens,\n    insufficientEth,\n    dispatch,\n    isSmartTransaction,\n    balanceError,\n  ]);\n\n  useEffect(() => {\n    if (!originalApproveAmount && approveAmount) {\n      setOriginalApproveAmount(approveAmount);\n    }\n  }, [originalApproveAmount, approveAmount]);\n\n  // If it's not a Smart Transaction and ETH balance is needed, we want to show a warning.\n  const isNotStxAndEthBalanceIsNeeded = !isSmartTransaction && ethBalanceNeeded;\n\n  // If it's a Smart Transaction and ETH balance is needed, we want to show a warning.\n  const isStxAndEthBalanceIsNeeded = isSmartTransaction && ethBalanceNeededStx;\n\n  // Indicates if we should show to a user a warning about insufficient funds for swapping.\n  const showInsufficientWarning =\n    (balanceError ||\n      tokenBalanceNeeded ||\n      isNotStxAndEthBalanceIsNeeded ||\n      isStxAndEthBalanceIsNeeded) &&\n    !warningHidden;\n\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n\n  const numberOfQuotes = Object.values(quotes).length;\n  const bestQuoteReviewedEventSent = useRef();\n  const eventObjectBase = useMemo(() => {\n    return {\n      token_from: sourceTokenSymbol,\n      token_from_amount: sourceTokenValue,\n      token_to: destinationTokenSymbol,\n      token_to_amount: destinationTokenValue,\n      request_type: fetchParams?.balanceError,\n      slippage: fetchParams?.slippage,\n      custom_slippage: fetchParams?.slippage !== 2,\n      response_time: fetchParams?.responseTime,\n      best_quote_source: topQuote?.aggregator,\n      available_quotes: numberOfQuotes,\n      is_hardware_wallet: hardwareWalletUsed,\n      hardware_wallet_type: hardwareWalletType,\n      stx_enabled: smartTransactionsEnabled,\n      current_stx_enabled: currentSmartTransactionsEnabled,\n      stx_user_opt_in: smartTransactionsOptInStatus,\n    };\n  }, [\n    sourceTokenSymbol,\n    sourceTokenValue,\n    destinationTokenSymbol,\n    destinationTokenValue,\n    fetchParams?.balanceError,\n    fetchParams?.slippage,\n    fetchParams?.responseTime,\n    topQuote?.aggregator,\n    numberOfQuotes,\n    hardwareWalletUsed,\n    hardwareWalletType,\n    smartTransactionsEnabled,\n    currentSmartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n  ]);\n\n  const trackAllAvailableQuotesOpened = () => {\n    trackEvent({\n      event: 'All Available Quotes Opened',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        other_quote_selected: usedQuote?.aggregator !== topQuote?.aggregator,\n        other_quote_selected_source:\n          usedQuote?.aggregator === topQuote?.aggregator\n            ? null\n            : usedQuote?.aggregator,\n      },\n    });\n  };\n  const trackQuoteDetailsOpened = () => {\n    trackEvent({\n      event: 'Quote Details Opened',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        other_quote_selected: usedQuote?.aggregator !== topQuote?.aggregator,\n        other_quote_selected_source:\n          usedQuote?.aggregator === topQuote?.aggregator\n            ? null\n            : usedQuote?.aggregator,\n      },\n    });\n  };\n  const trackEditSpendLimitOpened = () => {\n    trackEvent({\n      event: 'Edit Spend Limit Opened',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        custom_spend_limit_set: originalApproveAmount === approveAmount,\n        custom_spend_limit_amount:\n          originalApproveAmount === approveAmount ? null : approveAmount,\n      },\n    });\n  };\n  const trackBestQuoteReviewedEvent = useCallback(() => {\n    trackEvent({\n      event: 'Best Quote Reviewed',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        network_fees: feeInFiat,\n      },\n    });\n  }, [trackEvent, eventObjectBase, feeInFiat]);\n  const trackViewQuotePageLoadedEvent = useCallback(() => {\n    trackEvent({\n      event: 'Review Quote Component Loaded',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        response_time: currentTimestamp - reviewSwapClickedTimestamp,\n      },\n    });\n  }, [\n    trackEvent,\n    eventObjectBase,\n    currentTimestamp,\n    reviewSwapClickedTimestamp,\n  ]);\n\n  useEffect(() => {\n    if (\n      !bestQuoteReviewedEventSent.current &&\n      [\n        sourceTokenSymbol,\n        sourceTokenValue,\n        destinationTokenSymbol,\n        destinationTokenValue,\n        fetchParams,\n        topQuote,\n        numberOfQuotes,\n        feeInFiat,\n      ].every((dep) => dep !== null && dep !== undefined)\n    ) {\n      bestQuoteReviewedEventSent.current = true;\n      trackBestQuoteReviewedEvent();\n    }\n  }, [\n    fetchParams,\n    topQuote,\n    numberOfQuotes,\n    feeInFiat,\n    destinationTokenSymbol,\n    destinationTokenValue,\n    sourceTokenSymbol,\n    sourceTokenValue,\n    trackBestQuoteReviewedEvent,\n  ]);\n\n  useEffect(() => {\n    if (\n      ((isSmartTransaction && prevEthBalanceNeededStx) ||\n        !isSmartTransaction) &&\n      quotesLastFetched === prevQuotesLastFetched\n    ) {\n      return;\n    }\n    let additionalBalanceNeeded;\n    if (isSmartTransaction && ethBalanceNeededStx) {\n      additionalBalanceNeeded = ethBalanceNeededStx;\n    } else if (!isSmartTransaction && ethBalanceNeeded) {\n      additionalBalanceNeeded = ethBalanceNeeded;\n    } else {\n      return; // A user has enough balance for a gas fee, so we don't need to track it.\n    }\n    trackEvent({\n      event: MetaMetricsEventName.SwapError,\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        error_type: MetaMetricsEventErrorType.InsufficientGas,\n        additional_balance_needed: additionalBalanceNeeded,\n      },\n    });\n  }, [\n    quotesLastFetched,\n    prevQuotesLastFetched,\n    ethBalanceNeededStx,\n    isSmartTransaction,\n    trackEvent,\n    prevEthBalanceNeededStx,\n    ethBalanceNeeded,\n    eventObjectBase,\n  ]);\n\n  const metaMaskFee = usedQuote.fee;\n\n  /* istanbul ignore next */\n  const onFeeCardTokenApprovalClick = () => {\n    trackEditSpendLimitOpened();\n    dispatch(\n      showModal({\n        name: 'EDIT_APPROVAL_PERMISSION',\n        decimals: selectedFromToken.decimals,\n        origin: 'MetaMask',\n        setCustomAmount: (newCustomPermissionAmount) => {\n          const customPermissionAmount =\n            newCustomPermissionAmount === ''\n              ? originalApproveAmount\n              : newCustomPermissionAmount;\n          const newData = getCustomTxParamsData(approveTxParams.data, {\n            customPermissionAmount,\n            decimals: selectedFromToken.decimals,\n          });\n\n          if (\n            customPermissionAmount?.length &&\n            approveTxParams.data !== newData\n          ) {\n            dispatch(setCustomApproveTxData(newData));\n          }\n        },\n        tokenAmount: originalApproveAmount,\n        customTokenAmount:\n          originalApproveAmount === approveAmount ? null : approveAmount,\n        tokenBalance,\n        tokenSymbol: selectedFromToken.symbol,\n        requiredMinimum: calcTokenAmount(\n          usedQuote.sourceAmount,\n          selectedFromToken.decimals,\n        ),\n      }),\n    );\n  };\n\n  const needsMoreGas = Boolean(ethBalanceNeededStx || ethBalanceNeeded);\n\n  const actionableBalanceErrorMessage = tokenBalanceUnavailable\n    ? t('swapTokenBalanceUnavailable', [sourceTokenSymbol])\n    : t('swapApproveNeedMoreTokens', [\n        <span key=\"swapApproveNeedMoreTokens-1\">\n          {tokenBalanceNeeded || ethBalanceNeededStx || ethBalanceNeeded}\n        </span>,\n        tokenBalanceNeeded && !(sourceTokenSymbol === defaultSwapsToken.symbol)\n          ? sourceTokenSymbol\n          : defaultSwapsToken.symbol,\n      ]);\n\n  // Price difference warning\n  const priceSlippageBucket = usedQuote?.priceSlippage?.bucket;\n  const lastPriceDifferenceBucket = usePrevious(priceSlippageBucket);\n\n  // If the user agreed to a different bucket of risk, make them agree again\n  useEffect(() => {\n    if (\n      acknowledgedPriceDifference &&\n      lastPriceDifferenceBucket === GasRecommendations.medium &&\n      priceSlippageBucket === GasRecommendations.high\n    ) {\n      setAcknowledgedPriceDifference(false);\n    }\n  }, [\n    priceSlippageBucket,\n    acknowledgedPriceDifference,\n    lastPriceDifferenceBucket,\n  ]);\n\n  let viewQuotePriceDifferenceWarning = null;\n  const priceSlippageFromSource = useEthFiatAmount(\n    usedQuote?.priceSlippage?.sourceAmountInETH || 0,\n    { showFiat: true },\n  );\n  const priceSlippageFromDestination = useEthFiatAmount(\n    usedQuote?.priceSlippage?.destinationAmountInETH || 0,\n    { showFiat: true },\n  );\n\n  // We cannot present fiat value if there is a calculation error or no slippage\n  // from source or destination\n  const priceSlippageUnknownFiatValue =\n    !priceSlippageFromSource ||\n    !priceSlippageFromDestination ||\n    Boolean(usedQuote?.priceSlippage?.calculationError);\n\n  let priceDifferencePercentage = 0;\n  if (usedQuote?.priceSlippage?.ratio) {\n    priceDifferencePercentage = parseFloat(\n      new BigNumber(usedQuote.priceSlippage.ratio, 10)\n        .minus(1, 10)\n        .times(100, 10)\n        .toFixed(2),\n      10,\n    );\n  }\n  const prevPriceDifferencePercentage = usePrevious(priceDifferencePercentage);\n\n  const shouldShowPriceDifferenceWarning =\n    !tokenBalanceUnavailable &&\n    !showInsufficientWarning &&\n    usedQuote &&\n    (priceDifferenceRiskyBuckets.includes(priceSlippageBucket) ||\n      priceSlippageUnknownFiatValue);\n\n  if (shouldShowPriceDifferenceWarning) {\n    viewQuotePriceDifferenceWarning = (\n      <ViewQuotePriceDifference\n        usedQuote={usedQuote}\n        sourceTokenValue={sourceTokenValue}\n        destinationTokenValue={destinationTokenValue}\n        priceSlippageFromSource={priceSlippageFromSource}\n        priceSlippageFromDestination={priceSlippageFromDestination}\n        priceDifferencePercentage={priceDifferencePercentage}\n        priceSlippageUnknownFiatValue={priceSlippageUnknownFiatValue}\n        onAcknowledgementClick={() => {\n          setAcknowledgedPriceDifference(true);\n        }}\n        acknowledged={acknowledgedPriceDifference}\n      />\n    );\n  }\n\n  const disableSubmissionDueToPriceWarning =\n    shouldShowPriceDifferenceWarning && !acknowledgedPriceDifference;\n\n  const isShowingWarning =\n    showInsufficientWarning || shouldShowPriceDifferenceWarning;\n\n  const isSwapButtonDisabled = Boolean(\n    submitClicked ||\n      balanceError ||\n      tokenBalanceUnavailable ||\n      disableSubmissionDueToPriceWarning ||\n      (networkAndAccountSupports1559 &&\n        baseAndPriorityFeePerGas === undefined) ||\n      (!networkAndAccountSupports1559 &&\n        (gasPrice === null || gasPrice === undefined)) ||\n      (currentSmartTransactionsEnabled &&\n        (currentSmartTransactionsError || smartTransactionsError)) ||\n      (currentSmartTransactionsEnabled &&\n        smartTransactionsOptInStatus &&\n        !smartTransactionFees?.tradeTxFees),\n  );\n\n  useEffect(() => {\n    if (\n      shouldShowPriceDifferenceWarning &&\n      acknowledgedPriceDifference &&\n      quotesLastFetched !== prevQuotesLastFetched &&\n      priceDifferencePercentage !== prevPriceDifferencePercentage\n    ) {\n      // Reset price difference acknowledgement if price diff % changed.\n      setAcknowledgedPriceDifference(false);\n    }\n  }, [\n    acknowledgedPriceDifference,\n    prevQuotesLastFetched,\n    quotesLastFetched,\n    shouldShowPriceDifferenceWarning,\n    priceDifferencePercentage,\n    prevPriceDifferencePercentage,\n  ]);\n\n  useEffect(() => {\n    if (isSmartTransaction && !insufficientTokens) {\n      const unsignedTx = {\n        from: unsignedTransaction.from,\n        to: unsignedTransaction.to,\n        value: unsignedTransaction.value,\n        data: unsignedTransaction.data,\n        gas: unsignedTransaction.gas,\n        chainId,\n      };\n      intervalId = setInterval(() => {\n        if (!swapsSTXLoading) {\n          dispatch(\n            fetchSwapsSmartTransactionFees({\n              unsignedTransaction: unsignedTx,\n              approveTxParams,\n              fallbackOnNotEnoughFunds: false,\n            }),\n          );\n        }\n      }, swapsNetworkConfig.stxGetTransactionsRefreshTime);\n      dispatch(\n        fetchSwapsSmartTransactionFees({\n          unsignedTransaction: unsignedTx,\n          approveTxParams,\n          fallbackOnNotEnoughFunds: false,\n        }),\n      );\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n    return () => clearInterval(intervalId);\n    // eslint-disable-next-line\n  }, [\n    dispatch,\n    isSmartTransaction,\n    unsignedTransaction.data,\n    unsignedTransaction.from,\n    unsignedTransaction.value,\n    unsignedTransaction.gas,\n    unsignedTransaction.to,\n    chainId,\n    swapsNetworkConfig.stxGetTransactionsRefreshTime,\n    insufficientTokens,\n  ]);\n\n  useEffect(() => {\n    // Thanks to the next line we will only do quotes polling 3 times before showing a Quote Timeout modal.\n    dispatch(setSwapsQuotesPollingLimitEnabled(true));\n    if (reviewSwapClickedTimestamp) {\n      trackViewQuotePageLoadedEvent();\n    }\n  }, [dispatch, trackViewQuotePageLoadedEvent, reviewSwapClickedTimestamp]);\n\n  useEffect(() => {\n    if (\n      (!currentSmartTransactionsEnabled &&\n        currentSmartTransactionsError &&\n        submitClicked) ||\n      (isSmartTransaction && !swapsSTXLoading && submitClicked)\n    ) {\n      setSubmitClicked(false);\n    }\n  }, [\n    currentSmartTransactionsEnabled,\n    currentSmartTransactionsError,\n    isSmartTransaction,\n    swapsSTXLoading,\n    submitClicked,\n  ]);\n\n  useEffect(() => {\n    if (!usedQuote?.multiLayerL1TradeFeeTotal) {\n      return;\n    }\n    const getEstimatedL1Fees = async () => {\n      try {\n        let l1ApprovalFeeTotal = '0x0';\n        if (approveTxParams) {\n          l1ApprovalFeeTotal = await dispatch(\n            getLayer1GasFee({\n              transactionParams: {\n                ...approveTxParams,\n                gasPrice: addHexPrefix(approveTxParams.gasPrice),\n                value: '0x0', // For approval txs we need to use \"0x0\" here.\n              },\n              chainId,\n            }),\n          );\n          setMultiLayerL1ApprovalFeeTotal(l1ApprovalFeeTotal);\n        }\n        const l1FeeTotal = sumHexes(\n          usedQuote.multiLayerL1TradeFeeTotal,\n          l1ApprovalFeeTotal,\n        );\n        setMultiLayerL1FeeTotal(l1FeeTotal);\n      } catch (e) {\n        captureException(e);\n        setMultiLayerL1FeeTotal(null);\n        setMultiLayerL1ApprovalFeeTotal(null);\n      }\n    };\n    getEstimatedL1Fees();\n  }, [unsignedTransaction, approveTxParams, chainId, usedQuote]);\n\n  const destinationValue = calcTokenValue(\n    destinationTokenValue,\n    destinationTokenDecimals,\n  );\n  const destinationAmount = calcTokenAmount(\n    destinationValue,\n    destinationTokenDecimals,\n  );\n  const amountToDisplay = formatSwapsValueForDisplay(destinationAmount);\n  const amountDigitLength = amountToDisplay.match(/\\d+/gu).join('').length;\n  let ellipsedAmountToDisplay = amountToDisplay;\n\n  if (amountDigitLength > 20) {\n    ellipsedAmountToDisplay = `${amountToDisplay.slice(0, 20)}...`;\n  }\n  useEffect(() => {\n    setReceiveToAmount(ellipsedAmountToDisplay);\n  }, [ellipsedAmountToDisplay, setReceiveToAmount]);\n\n  const hideTokenApprovalRow =\n    !approveTxParams || (balanceError && !warningHidden);\n\n  // TODO: use the <Text> component for this.\n  const tokenApprovalTextComponent = (\n    <span key=\"fee-card-approve-symbol\" className=\"fee-card__bold\">\n      {t('enableToken', [sourceTokenSymbol])}\n    </span>\n  );\n\n  const onSwapSubmit = ({ acknowledgedSlippage = false }) => {\n    if (slippageErrorKey && !acknowledgedSlippage) {\n      setSlippageNotificationModalOpened(true);\n      return;\n    }\n    setSubmitClicked(true);\n    if (!balanceError) {\n      if (isSmartTransaction && smartTransactionFees?.tradeTxFees) {\n        dispatch(\n          signAndSendSwapsSmartTransaction({\n            unsignedTransaction,\n            trackEvent,\n            history,\n            additionalTrackingParams,\n          }),\n        );\n      } else {\n        dispatch(\n          signAndSendTransactions(\n            history,\n            trackEvent,\n            additionalTrackingParams,\n          ),\n        );\n      }\n    } else if (destinationToken.symbol === defaultSwapsToken.symbol) {\n      history.push(DEFAULT_ROUTE);\n    } else {\n      history.push(`${ASSET_ROUTE}/${destinationToken.address}`);\n    }\n  };\n\n  return (\n    <div className=\"review-quote\">\n      <div className=\"review-quote__content\">\n        <SlippageNotificationModal\n          isOpen={slippageNotificationModalOpened}\n          setSlippageNotificationModalOpened={\n            setSlippageNotificationModalOpened\n          }\n          slippageErrorKey={slippageErrorKey}\n          onSwapSubmit={onSwapSubmit}\n          currentSlippage={fetchParams?.slippage}\n        />\n        {\n          /* istanbul ignore next */\n          selectQuotePopoverShown && (\n            <SelectQuotePopover\n              quoteDataRows={renderablePopoverData}\n              onClose={() => setSelectQuotePopoverShown(false)}\n              onSubmit={(aggId) => dispatch(swapsQuoteSelected(aggId))}\n              swapToSymbol={destinationTokenSymbol}\n              initialAggId={usedQuote.aggregator}\n              onQuoteDetailsIsOpened={trackQuoteDetailsOpened}\n              hideEstimatedGasFee={\n                smartTransactionsEnabled && smartTransactionsOptInStatus\n              }\n            />\n          )\n        }\n        {isShowingWarning && (\n          <>\n            {viewQuotePriceDifferenceWarning}\n            {(showInsufficientWarning || tokenBalanceUnavailable) && (\n              <BannerAlert\n                title={t('notEnoughBalance')}\n                titleProps={{ 'data-testid': 'swaps-banner-title' }}\n                severity={Severity.Info}\n                description={actionableBalanceErrorMessage}\n                descriptionProps={{\n                  'data-testid': 'mm-banner-alert-notification-text',\n                }}\n                actionButtonLabel={\n                  needsMoreGas\n                    ? t('buyMoreAsset', [nativeCurrencySymbol])\n                    : undefined\n                }\n                actionButtonOnClick={\n                  needsMoreGas ? () => openBuyCryptoInPdapp() : undefined\n                }\n                marginTop={2}\n              />\n            )}\n          </>\n        )}\n\n        <div className=\"review-quote__countdown-timer-container\">\n          <CountdownTimer\n            timeStarted={quotesLastFetched}\n            warningTime=\"0:10\"\n            labelKey=\"swapNewQuoteIn\"\n          />\n        </div>\n\n        <Box\n          marginTop={1}\n          marginBottom={0}\n          display={DISPLAY.FLEX}\n          flexDirection={FlexDirection.Column}\n          className=\"review-quote__overview\"\n        >\n          <Box\n            display={DISPLAY.FLEX}\n            justifyContent={JustifyContent.spaceBetween}\n            alignItems={AlignItems.center}\n          >\n            <Text\n              variant={TextVariant.bodyMd}\n              marginRight={1}\n              color={TextColor.textAlternative}\n            >\n              {t('quoteRate')}\n            </Text>\n            <ExchangeRateDisplay\n              primaryTokenValue={calcTokenValue(\n                sourceTokenValue,\n                sourceTokenDecimals,\n              )}\n              primaryTokenDecimals={sourceTokenDecimals}\n              primaryTokenSymbol={sourceTokenSymbol}\n              secondaryTokenValue={destinationValue}\n              secondaryTokenDecimals={destinationTokenDecimals}\n              secondaryTokenSymbol={destinationTokenSymbol}\n              boldSymbols={false}\n              className=\"main-quote-summary__exchange-rate-display\"\n              showIconForSwappingTokens={false}\n            />\n          </Box>\n          <Box\n            display={DISPLAY.FLEX}\n            justifyContent={JustifyContent.spaceBetween}\n            alignItems={AlignItems.stretch}\n          >\n            <Box\n              display={DISPLAY.FLEX}\n              alignItems={AlignItems.center}\n              width={FRACTIONS.SIX_TWELFTHS}\n            >\n              <Text\n                variant={TextVariant.bodyMd}\n                as=\"h6\"\n                color={TextColor.textAlternative}\n                marginRight={1}\n              >\n                {t('transactionDetailGasHeading')}\n              </Text>\n              <InfoTooltip\n                position=\"left\"\n                contentText={\n                  <p className=\"fee-card__info-tooltip-paragraph\">\n                    {t('swapGasFeesExplanation', [\n                      <ButtonLink\n                        key=\"learn-more-gas-link\"\n                        size={ButtonLinkSize.Inherit}\n                        href={ZENDESK_URLS.GAS_FEES}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        externalLink\n                        onClick={() => {\n                          trackEvent({\n                            event: 'Clicked \"Gas Fees: Learn More\" Link',\n                            category: MetaMetricsEventCategory.Swaps,\n                          });\n                        }}\n                      >\n                        {t('swapGasFeesExplanationLinkText')}\n                      </ButtonLink>,\n                    ])}\n                  </p>\n                }\n              />\n            </Box>\n            <Box\n              display={DISPLAY.FLEX}\n              alignItems={AlignItems.flexEnd}\n              width={FRACTIONS.SIX_TWELFTHS}\n            >\n              <Text\n                variant={TextVariant.bodyMd}\n                as=\"h6\"\n                color={TextColor.textAlternative}\n                width={FRACTIONS.EIGHT_TWELFTHS}\n                textAlign={TEXT_ALIGN.RIGHT}\n                paddingRight={1}\n              >\n                {feeInEth}\n              </Text>\n              <Text\n                variant={TextVariant.bodyMdBold}\n                as=\"h6\"\n                color={TextColor.textAlternative}\n                data-testid=\"review-quote-gas-fee-in-fiat\"\n                width={FRACTIONS.FOUR_TWELFTHS}\n                textAlign={TEXT_ALIGN.RIGHT}\n              >\n                {` ${feeInFiat}`}\n              </Text>\n            </Box>\n          </Box>\n          {(maxFeeInFiat || maxFeeInEth) && (\n            <Box display={DISPLAY.FLEX}>\n              <Box display={DISPLAY.FLEX} width={FRACTIONS.SIX_TWELFTHS}></Box>\n              <Box\n                display={DISPLAY.FLEX}\n                justifyContent={JustifyContent.flexEnd}\n                width={FRACTIONS.SIX_TWELFTHS}\n              >\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.textAlternative}\n                  width={FRACTIONS.EIGHT_TWELFTHS}\n                  paddingRight={1}\n                  textAlign={TEXT_ALIGN.RIGHT}\n                >\n                  {`${t('maxFee')}: `}\n                </Text>\n                <Text\n                  variant={TextVariant.bodySm}\n                  color={TextColor.textAlternative}\n                  width={FRACTIONS.FOUR_TWELFTHS}\n                  textAlign={TEXT_ALIGN.RIGHT}\n                >\n                  {maxFeeInFiat || maxFeeInEth}\n                </Text>\n              </Box>\n            </Box>\n          )}\n          {!hideTokenApprovalRow && (\n            <Box\n              display={DISPLAY.FLEX}\n              justifyContent={JustifyContent.spaceBetween}\n            >\n              <Text\n                variant={TextVariant.bodyMd}\n                as=\"h6\"\n                color={TextColor.textAlternative}\n                marginRight={1}\n              >\n                {t('swapEnableTokenForSwapping', [tokenApprovalTextComponent])}\n              </Text>\n              <Text variant={TextVariant.bodyMd}>\n                <ButtonLink\n                  onClick={() => onFeeCardTokenApprovalClick()}\n                  size={Size.inherit}\n                  className=\"review-quote__edit-limit\"\n                >\n                  {t('swapEditLimit')}\n                </ButtonLink>\n              </Text>\n            </Box>\n          )}\n          <Box\n            display={DISPLAY.FLEX}\n            marginTop={3}\n            justifyContent={JustifyContent.center}\n            alignItems={AlignItems.center}\n          >\n            <Text variant={TextVariant.bodySm} color={TextColor.textDefault}>\n              {t('swapIncludesMetaMaskFeeViewAllQuotes', [\n                metaMaskFee,\n                <ButtonLink\n                  key=\"view-all-quotes\"\n                  data-testid=\"review-quote-view-all-quotes\"\n                  onClick={\n                    /* istanbul ignore next */\n                    () => {\n                      trackAllAvailableQuotesOpened();\n                      setSelectQuotePopoverShown(true);\n                    }\n                  }\n                  size={Size.inherit}\n                >\n                  {t('viewAllQuotes')}\n                </ButtonLink>,\n              ])}\n            </Text>\n          </Box>\n        </Box>\n      </div>\n      <SwapsFooter\n        onSubmit={onSwapSubmit}\n        submitText={\n          isSmartTransaction && swapsSTXLoading ? t('preparingSwap') : t('swap')\n        }\n        hideCancel\n        disabled={isSwapButtonDisabled}\n        className={classnames('review-quote__footer', {\n          'review-quote__thin-swaps-footer': isShowingWarning,\n        })}\n        showTopBorder\n        showTermsOfService\n      />\n    </div>\n  );\n}\n\nReviewQuote.propTypes = {\n  setReceiveToAmount: PropTypes.func.isRequired,\n};\n","import React, { useContext, useState } from 'react';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport {\n  FlexDirection,\n  Display,\n  JustifyContent,\n  AlignItems,\n} from '../../../helpers/constants/design-system';\nimport {\n  Modal,\n  ModalOverlay,\n  Box,\n  ButtonPrimary,\n} from '../../../components/component-library';\nimport { ModalContent } from '../../../components/component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../components/component-library/modal-header/deprecated';\nimport {\n  SLIPPAGE_HIGH_ERROR,\n  SLIPPAGE_LOW_ERROR,\n} from '../../../../shared/constants/swaps';\nimport SwapsBannerAlert from '../swaps-banner-alert/swaps-banner-alert';\n\ntype Props = {\n  isOpen: boolean;\n  slippageErrorKey: string;\n  setSlippageNotificationModalOpened: (isOpen: boolean) => void;\n  onSwapSubmit: (opts: { acknowledgedSlippage: boolean }) => void;\n  currentSlippage: number;\n};\n\nexport default function SlippageNotificationModal({\n  isOpen,\n  slippageErrorKey,\n  setSlippageNotificationModalOpened,\n  onSwapSubmit,\n  currentSlippage,\n}: Props) {\n  const t = useContext(I18nContext);\n  const [submitting, setSubmitting] = useState(false);\n\n  const getSlippageModalTitle = () => {\n    if (slippageErrorKey === SLIPPAGE_HIGH_ERROR) {\n      return t('swapHighSlippage');\n    } else if (slippageErrorKey === SLIPPAGE_LOW_ERROR) {\n      return t('swapLowSlippage');\n    }\n    return '';\n  };\n\n  const primaryButtonText = submitting ? t('preparingSwap') : t('swapAnyway');\n\n  return (\n    <Modal\n      onClose={() => setSlippageNotificationModalOpened(false)}\n      isOpen={isOpen}\n      isClosedOnOutsideClick\n      isClosedOnEscapeKey\n      className=\"mm-modal__custom-scrollbar\"\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader onClose={() => setSlippageNotificationModalOpened(false)}>\n          {getSlippageModalTitle()}\n        </ModalHeader>\n        <Box\n          display={Display.Flex}\n          flexDirection={FlexDirection.Column}\n          justifyContent={JustifyContent.spaceBetween}\n          alignItems={AlignItems.stretch}\n          className=\"high-slippage__content\"\n          marginTop={7}\n        >\n          <SwapsBannerAlert\n            swapsErrorKey={slippageErrorKey}\n            showTransactionSettingsLink\n            currentSlippage={currentSlippage}\n          />\n          <Box marginTop={5}>\n            <ButtonPrimary\n              onClick={() => {\n                setSubmitting(true);\n                onSwapSubmit({ acknowledgedSlippage: true });\n              }}\n              block\n              data-testid=\"high-slippage-continue-anyway\"\n              disabled={submitting}\n            >\n              {primaryButtonText}\n            </ButtonPrimary>\n          </Box>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport Box from '../../../components/ui/box';\nimport {\n  DISPLAY,\n  AlignItems,\n  SEVERITIES,\n  TextVariant,\n  BLOCK_SIZES,\n} from '../../../helpers/constants/design-system';\nimport { GasRecommendations } from '../../../../shared/constants/gas';\nimport {\n  BannerAlert,\n  ButtonLink,\n  ButtonLinkSize,\n  Text,\n} from '../../../components/component-library';\n\nexport default function ViewQuotePriceDifference(props) {\n  const {\n    usedQuote,\n    sourceTokenValue,\n    destinationTokenValue,\n    onAcknowledgementClick,\n    acknowledged,\n    priceSlippageFromSource,\n    priceSlippageFromDestination,\n    priceDifferencePercentage,\n    priceSlippageUnknownFiatValue,\n  } = props;\n\n  const t = useContext(I18nContext);\n\n  let priceDifferenceTitle = t('swapPriceUnavailableTitle');\n  let priceDifferenceMessage = t('swapPriceUnavailableDescription');\n  let priceDifferenceClass = GasRecommendations.high;\n  if (!priceSlippageUnknownFiatValue) {\n    priceDifferenceTitle = t('swapPriceDifferenceTitle', [\n      priceDifferencePercentage,\n    ]);\n    priceDifferenceMessage = t('swapPriceDifference', [\n      sourceTokenValue, // Number of source token to swap\n      usedQuote.sourceTokenInfo.symbol, // Source token symbol\n      priceSlippageFromSource, // Source tokens total value\n      destinationTokenValue, // Number of destination tokens in return\n      usedQuote.destinationTokenInfo.symbol, // Destination token symbol,\n      priceSlippageFromDestination, // Destination tokens total value\n    ]);\n    priceDifferenceClass = usedQuote.priceSlippage.bucket;\n  }\n  const severity =\n    priceDifferenceClass === GasRecommendations.high\n      ? SEVERITIES.DANGER\n      : SEVERITIES.WARNING;\n\n  return (\n    <Box display={DISPLAY.FLEX} marginTop={2}>\n      <BannerAlert\n        title={priceDifferenceTitle}\n        titleProps={{ 'data-testid': 'swaps-banner-title' }}\n        severity={severity}\n        width={BLOCK_SIZES.FULL}\n        data-testid=\"mm-banner-alert\"\n      >\n        <Box>\n          <Text\n            variant={TextVariant.bodyMd}\n            as=\"h6\"\n            data-testid=\"mm-banner-alert-notification-text\"\n          >\n            {priceDifferenceMessage}\n          </Text>\n          {!acknowledged && (\n            <ButtonLink\n              size={ButtonLinkSize.Inherit}\n              textProps={{\n                variant: TextVariant.bodyMd,\n                alignItems: AlignItems.flexStart,\n              }}\n              onClick={onAcknowledgementClick}\n            >\n              {t('swapAnyway')}\n            </ButtonLink>\n          )}\n        </Box>\n      </BannerAlert>\n    </Box>\n  );\n}\n\nViewQuotePriceDifference.propTypes = {\n  usedQuote: PropTypes.object,\n  sourceTokenValue: PropTypes.string,\n  destinationTokenValue: PropTypes.string,\n  onAcknowledgementClick: PropTypes.func,\n  acknowledged: PropTypes.bool,\n  priceSlippageFromSource: PropTypes.string,\n  priceSlippageFromDestination: PropTypes.string,\n  priceDifferencePercentage: PropTypes.number,\n  priceSlippageUnknownFiatValue: PropTypes.bool,\n};\n","export { default } from './searchable-item-list';\n","export { default } from './item-list.component';\n","import React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Identicon from '../../../../components/ui/identicon';\nimport UrlIcon from '../../../../components/ui/url-icon';\nimport Button from '../../../../components/ui/button';\nimport ActionableMessage from '../../../../components/ui/actionable-message/actionable-message';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport {\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n  getUseCurrencyRateCheck,\n} from '../../../../selectors';\nimport { MetaMetricsEventCategory } from '../../../../../shared/constants/metametrics';\nimport { SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP } from '../../../../../shared/constants/swaps';\nimport { getURLHostName } from '../../../../helpers/utils/util';\nimport { MetaMetricsContext } from '../../../../contexts/metametrics';\n\nexport default function ItemList({\n  results = [],\n  onClickItem,\n  onOpenImportTokenModalClick,\n  Placeholder,\n  listTitle,\n  maxListItems = 6,\n  searchQuery = '',\n  containerRef,\n  hideRightLabels,\n  hideItemIf,\n  listContainerClassName,\n}) {\n  const t = useContext(I18nContext);\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider);\n  const blockExplorerLink =\n    rpcPrefs.blockExplorerUrl ??\n    SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP[chainId] ??\n    null;\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n  const blockExplorerHostName = getURLHostName(blockExplorerLink);\n  const trackEvent = useContext(MetaMetricsContext);\n\n  // If there is a token for import based on a contract address, it's the only one in the list.\n  const hasTokenForImport = results.length === 1 && results[0].notImported;\n  const placeholder = Placeholder ? (\n    <Placeholder searchQuery={searchQuery} />\n  ) : null;\n  return results.length === 0 ? (\n    placeholder\n  ) : (\n    <div className=\"searchable-item-list\">\n      {listTitle ? (\n        <div className=\"searchable-item-list__title\">{listTitle}</div>\n      ) : null}\n      <div\n        className={classnames(\n          'searchable-item-list__list-container',\n          listContainerClassName,\n        )}\n        ref={containerRef}\n        data-testid=\"searchable-item-list-list-container\"\n      >\n        {results.slice(0, maxListItems).map((result, i) => {\n          if (hideItemIf?.(result)) {\n            return null;\n          }\n          const hasBalance = result.balance > 0;\n          if (result.blocked && !hasBalance && !searchQuery) {\n            return null;\n          }\n\n          const onClick = () => {\n            if (result.blocked) {\n              return;\n            }\n            if (result.notImported) {\n              onOpenImportTokenModalClick(result);\n            } else {\n              onClickItem?.(result);\n            }\n          };\n          const {\n            iconUrl,\n            identiconAddress,\n            selected,\n            blocked,\n            primaryLabel,\n            secondaryLabel,\n            rightPrimaryLabel,\n            rightSecondaryLabel,\n            IconComponent,\n          } = result;\n          return (\n            <div\n              tabIndex=\"0\"\n              className={classnames('searchable-item-list__item', {\n                'searchable-item-list__item--selected': selected,\n                'searchable-item-list__item--disabled': blocked,\n              })}\n              data-testid=\"searchable-item-list__item\"\n              onClick={onClick}\n              onKeyUp={(e) => e.key === 'Enter' && onClick()}\n              key={`searchable-item-list-item-${i}`}\n              title={blocked ? t('swapTokenNotAvailable') : null}\n            >\n              {iconUrl || primaryLabel ? (\n                <UrlIcon url={iconUrl} name={primaryLabel} />\n              ) : null}\n              {!(iconUrl || primaryLabel) && identiconAddress ? (\n                <div className=\"searchable-item-list__identicon\">\n                  <Identicon address={identiconAddress} diameter={24} />\n                </div>\n              ) : null}\n              {IconComponent ? <IconComponent /> : null}\n              <div className=\"searchable-item-list__labels\">\n                <div className=\"searchable-item-list__item-labels\">\n                  {primaryLabel ? (\n                    <span\n                      className=\"searchable-item-list__primary-label\"\n                      data-testid=\"searchable-item-list-primary-label\"\n                    >\n                      {primaryLabel}\n                    </span>\n                  ) : null}\n                  {secondaryLabel ? (\n                    <span className=\"searchable-item-list__secondary-label\">\n                      {secondaryLabel}\n                    </span>\n                  ) : null}\n                </div>\n                {!hideRightLabels &&\n                (rightPrimaryLabel || rightSecondaryLabel) ? (\n                  <div className=\"searchable-item-list__right-labels\">\n                    {rightPrimaryLabel ? (\n                      <span className=\"searchable-item-list__right-primary-label\">\n                        {rightPrimaryLabel}\n                      </span>\n                    ) : null}\n                    {rightSecondaryLabel && useCurrencyRateCheck ? (\n                      <span className=\"searchable-item-list__right-secondary-label\">\n                        {rightSecondaryLabel}\n                      </span>\n                    ) : null}\n                  </div>\n                ) : null}\n              </div>\n              {result.notImported && (\n                <Button\n                  type=\"primary\"\n                  onClick={onClick}\n                  data-testid=\"searchable-item-list-import-button\"\n                >\n                  {t('import')}\n                </Button>\n              )}\n            </div>\n          );\n        })}\n        {!hasTokenForImport && blockExplorerLink && (\n          <div\n            tabIndex=\"0\"\n            className=\"searchable-item-list__item searchable-item-list__item--add-token\"\n            key=\"searchable-item-list-item-last\"\n          >\n            <ActionableMessage\n              message={t('addTokenByContractAddress', [\n                <a\n                  key=\"searchable-item-list__etherscan-link\"\n                  onClick={() => {\n                    /* istanbul ignore next */\n                    trackEvent({\n                      event: 'Clicked Block Explorer Link',\n                      category: MetaMetricsEventCategory.Swaps,\n                      properties: {\n                        link_type: 'Token Tracker',\n                        action: 'Verify Contract Address',\n                        block_explorer_domain: blockExplorerHostName,\n                      },\n                    });\n                    global.platform.openTab({\n                      url: blockExplorerLink,\n                    });\n                  }}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {blockExplorerHostName}\n                </a>,\n              ])}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nItemList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      iconUrl: PropTypes.string,\n      selected: PropTypes.bool,\n      blocked: PropTypes.bool,\n      primaryLabel: PropTypes.string,\n      secondaryLabel: PropTypes.string,\n      rightPrimaryLabel: PropTypes.string,\n      rightSecondaryLabel: PropTypes.string,\n    }),\n  ),\n  onClickItem: PropTypes.func,\n  onOpenImportTokenModalClick: PropTypes.func,\n  Placeholder: PropTypes.func,\n  listTitle: PropTypes.string,\n  maxListItems: PropTypes.number,\n  searchQuery: PropTypes.string,\n  containerRef: PropTypes.shape({\n    current: PropTypes.instanceOf(window.Element),\n  }),\n  hideRightLabels: PropTypes.bool,\n  hideItemIf: PropTypes.func,\n  listContainerClassName: PropTypes.string,\n};\n","export { default } from './list-item-search.component';\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Fuse from 'fuse.js';\nimport log from 'loglevel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '../../../../components/ui/text-field';\nimport { usePrevious } from '../../../../hooks/usePrevious';\nimport { isValidHexAddress } from '../../../../../shared/modules/hexstring-utils';\nimport { fetchToken } from '../../swaps.util';\nimport { getCurrentChainId } from '../../../../selectors/selectors';\nimport SearchIcon from '../../../../components/ui/icon/search-icon';\n\nconst renderAdornment = () => (\n  <InputAdornment position=\"start\" style={{ marginRight: '12px' }}>\n    <SearchIcon size={20} color=\"var(--color-icon-muted)\" />\n  </InputAdornment>\n);\n\nlet timeoutIdForSearch;\n\nexport default function ListItemSearch({\n  onSearch,\n  error,\n  listToSearch = [],\n  fuseSearchKeys,\n  searchPlaceholderText,\n  defaultToAll,\n  shouldSearchForImports,\n  searchQuery,\n  setSearchQuery,\n}) {\n  const fuseRef = useRef();\n  const chainId = useSelector(getCurrentChainId);\n\n  /**\n   * Search a custom token for import based on a contract address.\n   *\n   * @param {string} contractAddress\n   */\n  const handleSearchTokenForImport = async (contractAddress) => {\n    try {\n      const token = await fetchToken(contractAddress, chainId);\n      if (token) {\n        token.primaryLabel = token.symbol;\n        token.secondaryLabel = token.name;\n        token.notImported = true;\n        onSearch({\n          searchQuery: contractAddress,\n          results: [token],\n        });\n        return;\n      }\n    } catch (e) {\n      log.error('Token not found, show 0 results.', e);\n    }\n    onSearch({\n      searchQuery: contractAddress,\n      results: [], // No token for import found.\n    });\n  };\n\n  const handleSearch = async (newSearchQuery) => {\n    setSearchQuery(newSearchQuery);\n    if (timeoutIdForSearch) {\n      clearTimeout(timeoutIdForSearch);\n    }\n    timeoutIdForSearch = setTimeout(async () => {\n      timeoutIdForSearch = null;\n      const trimmedNewSearchQuery = newSearchQuery.trim();\n      const validHexAddress = isValidHexAddress(trimmedNewSearchQuery);\n      const fuseSearchResult = fuseRef.current.search(newSearchQuery);\n      const results =\n        defaultToAll && newSearchQuery === '' ? listToSearch : fuseSearchResult;\n      if (shouldSearchForImports && results.length === 0 && validHexAddress) {\n        await handleSearchTokenForImport(trimmedNewSearchQuery);\n        return;\n      }\n      onSearch({\n        searchQuery: newSearchQuery,\n        results,\n      });\n    }, 350);\n  };\n\n  useEffect(() => {\n    return () => clearTimeout(timeoutIdForSearch);\n  }, []);\n\n  useEffect(() => {\n    if (!fuseRef.current) {\n      fuseRef.current = new Fuse(listToSearch, {\n        shouldSort: true,\n        threshold: 0.45,\n        location: 0,\n        distance: 100,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: fuseSearchKeys,\n      });\n    }\n  }, [fuseSearchKeys, listToSearch]);\n\n  const previousListToSearch = usePrevious(listToSearch ?? []);\n  useEffect(() => {\n    if (\n      fuseRef.current &&\n      searchQuery &&\n      previousListToSearch !== listToSearch\n    ) {\n      fuseRef.current.setCollection(listToSearch);\n      const fuseSearchResult = fuseRef.current.search(searchQuery);\n      onSearch({ searchQuery, results: fuseSearchResult });\n    }\n  }, [listToSearch, searchQuery, onSearch, previousListToSearch]);\n\n  return (\n    <TextField\n      data-testid=\"search-list-items\"\n      className=\"searchable-item-list__search\"\n      placeholder={searchPlaceholderText}\n      type=\"text\"\n      value={searchQuery}\n      onChange={(e) => handleSearch(e.target.value)}\n      error={error}\n      fullWidth\n      startAdornment={renderAdornment()}\n      autoComplete=\"off\"\n      autoFocus\n    />\n  );\n}\n\nListItemSearch.propTypes = {\n  onSearch: PropTypes.func,\n  error: PropTypes.string,\n  listToSearch: PropTypes.array.isRequired,\n  fuseSearchKeys: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchPlaceholderText: PropTypes.string,\n  defaultToAll: PropTypes.bool,\n  shouldSearchForImports: PropTypes.bool,\n  searchQuery: PropTypes.string,\n  setSearchQuery: PropTypes.func,\n};\n","import React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemList from './item-list';\nimport ListItemSearch from './list-item-search';\n\nexport default function SearchableItemList({\n  className,\n  defaultToAll,\n  fuseSearchKeys,\n  itemSelectorError,\n  itemsToSearch = [],\n  listTitle,\n  maxListItems,\n  onClickItem,\n  onOpenImportTokenModalClick,\n  Placeholder,\n  searchPlaceholderText,\n  hideRightLabels,\n  hideItemIf,\n  listContainerClassName,\n  shouldSearchForImports,\n  searchQuery,\n  setSearchQuery,\n}) {\n  const itemListRef = useRef();\n\n  const initialResultsState = useMemo(() => {\n    return defaultToAll ? itemsToSearch : [];\n  }, [defaultToAll, itemsToSearch]);\n  const [results, setResults] = useState(initialResultsState);\n  useEffect(() => {\n    if (!searchQuery) {\n      // Only if there is no searchQuery we want to show all tokens.\n      setResults(initialResultsState);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialResultsState.length, searchQuery]);\n\n  return (\n    <div className={className}>\n      <ListItemSearch\n        listToSearch={itemsToSearch}\n        fuseSearchKeys={fuseSearchKeys}\n        onSearch={({\n          searchQuery: newSearchQuery = '',\n          results: newResults = [],\n        }) => {\n          setSearchQuery(newSearchQuery);\n          setResults(newResults);\n        }}\n        error={itemSelectorError}\n        searchPlaceholderText={searchPlaceholderText}\n        defaultToAll={defaultToAll}\n        shouldSearchForImports={shouldSearchForImports}\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n      />\n      <ItemList\n        searchQuery={searchQuery}\n        results={results}\n        onClickItem={onClickItem}\n        onOpenImportTokenModalClick={onOpenImportTokenModalClick}\n        Placeholder={Placeholder}\n        listTitle={listTitle}\n        maxListItems={maxListItems}\n        containerRef={itemListRef}\n        hideRightLabels={hideRightLabels}\n        hideItemIf={hideItemIf}\n        listContainerClassName={listContainerClassName}\n      />\n    </div>\n  );\n}\n\nSearchableItemList.propTypes = {\n  itemSelectorError: PropTypes.string,\n  itemsToSearch: PropTypes.array,\n  onClickItem: PropTypes.func,\n  onOpenImportTokenModalClick: PropTypes.func,\n  Placeholder: PropTypes.func,\n  className: PropTypes.string,\n  searchPlaceholderText: PropTypes.string,\n  fuseSearchKeys: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      weight: PropTypes.number,\n    }),\n  ),\n  listTitle: PropTypes.string,\n  defaultToAll: PropTypes.bool,\n  maxListItems: PropTypes.number,\n  hideRightLabels: PropTypes.bool,\n  hideItemIf: PropTypes.func,\n  listContainerClassName: PropTypes.string,\n  shouldSearchForImports: PropTypes.bool,\n  searchQuery: PropTypes.string,\n  setSearchQuery: PropTypes.func,\n};\n","export { default } from './select-quote-popover';\n","export { default } from './quote-details';\n","import React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport InfoTooltip from '../../../../components/ui/info-tooltip';\nimport ExchangeRateDisplay from '../../exchange-rate-display';\nimport { getUseCurrencyRateCheck } from '../../../../selectors';\n\nconst QuoteDetails = ({\n  slippage,\n  sourceTokenValue,\n  sourceTokenSymbol,\n  destinationTokenValue,\n  destinationTokenSymbol,\n  liquiditySourceKey,\n  minimumAmountReceived,\n  feeInEth,\n  networkFees,\n  metaMaskFee,\n  hideEstimatedGasFee,\n}) => {\n  const t = useContext(I18nContext);\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n\n  return (\n    <div className=\"quote-details\">\n      <div className=\"quote-details__row\">\n        <div className=\"quote-details__detail-header\">{t('swapRate')}</div>\n        <div className=\"quote-details__detail-content\">\n          <ExchangeRateDisplay\n            primaryTokenValue={sourceTokenValue}\n            primaryTokenDecimals={1}\n            primaryTokenSymbol={sourceTokenSymbol}\n            secondaryTokenValue={destinationTokenValue}\n            secondaryTokenDecimals={1}\n            secondaryTokenSymbol={destinationTokenSymbol}\n          />\n        </div>\n      </div>\n      <div className=\"quote-details__row\">\n        <div className=\"quote-details__detail-header\">\n          {t('swapMaxSlippage')}\n          <InfoTooltip\n            position=\"bottom\"\n            contentText={t('swapSlippageTooltip')}\n          />\n        </div>\n        <div className=\"quote-details__detail-content\">{`${slippage}%`}</div>\n      </div>\n      <div className=\"quote-details__row\">\n        <div className=\"quote-details__detail-header\">\n          {t('swapAmountReceived')}\n          <InfoTooltip\n            position=\"bottom\"\n            contentText={t('swapAmountReceivedInfo')}\n          />\n        </div>\n        <div className=\"quote-details__detail-content\">\n          <span>{minimumAmountReceived}</span>\n          <span className=\"quote-details__bold\">{` ${destinationTokenSymbol}`}</span>\n        </div>\n      </div>\n      {!hideEstimatedGasFee && (\n        <div className=\"quote-details__row\">\n          <div className=\"quote-details__detail-header\">\n            {t('swapEstimatedNetworkFees')}\n            <InfoTooltip\n              position=\"bottom\"\n              contentText={t('swapEstimatedNetworkFeesInfo')}\n            />\n          </div>\n          <div className=\"quote-details__detail-content\">\n            <span>{feeInEth}</span>\n            <span className=\"quote-details__light-grey\">\n              {useCurrencyRateCheck && ` (${networkFees})`}\n            </span>\n          </div>\n        </div>\n      )}\n      <div className=\"quote-details__row\">\n        <div className=\"quote-details__detail-header\">\n          {t('swapSource')}\n          <InfoTooltip\n            position=\"bottom\"\n            contentText={t('swapLiquiditySourceInfo')}\n          />\n        </div>\n        <div className=\"quote-details__detail-content\">\n          {t(liquiditySourceKey)}\n        </div>\n      </div>\n      <div className=\"quote-details__row quote-details__row--high\">\n        <div className=\"quote-details__detail-header\">\n          <img\n            src=\"./images/logo/metamask-fox.svg\"\n            className=\"quote-details__metafox-logo\"\n            alt=\"\"\n          />\n          {t('swapMetaMaskFee')}\n        </div>\n        <div className=\"quote-details__detail-content\">\n          {t('swapMetaMaskFeeDescription', [metaMaskFee])}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nQuoteDetails.propTypes = {\n  slippage: PropTypes.number.isRequired,\n  sourceTokenValue: PropTypes.string.isRequired,\n  sourceTokenSymbol: PropTypes.string.isRequired,\n  destinationTokenValue: PropTypes.string.isRequired,\n  destinationTokenSymbol: PropTypes.string.isRequired,\n  liquiditySourceKey: PropTypes.string.isRequired,\n  minimumAmountReceived: PropTypes.string.isRequired,\n  feeInEth: PropTypes.string.isRequired,\n  networkFees: PropTypes.string.isRequired,\n  metaMaskFee: PropTypes.number.isRequired,\n  hideEstimatedGasFee: PropTypes.bool,\n};\n\nexport default QuoteDetails;\n","import PropTypes from 'prop-types';\n\nexport const QUOTE_DATA_ROWS_PROPTYPES_SHAPE = PropTypes.shape({\n  aggId: PropTypes.string.isRequired,\n  amountReceiving: PropTypes.string.isRequired,\n  destinationTokenDecimals: PropTypes.number.isRequired,\n  destinationTokenSymbol: PropTypes.string.isRequired,\n  destinationTokenValue: PropTypes.string.isRequired,\n  isBestQuote: PropTypes.bool,\n  networkFees: PropTypes.string.isRequired,\n  quoteSource: PropTypes.string.isRequired,\n  rawNetworkFees: PropTypes.string.isRequired,\n  slippage: PropTypes.number.isRequired,\n  sourceTokenDecimals: PropTypes.number.isRequired,\n  sourceTokenSymbol: PropTypes.string.isRequired,\n  sourceTokenValue: PropTypes.string.isRequired,\n});\n","import React, { useState, useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { I18nContext } from '../../../contexts/i18n';\nimport Popover from '../../../components/ui/popover';\nimport Button from '../../../components/ui/button';\nimport QuoteDetails from './quote-details';\nimport SortList from './sort-list';\nimport { QUOTE_DATA_ROWS_PROPTYPES_SHAPE } from './select-quote-popover-constants';\n\nconst SelectQuotePopover = ({\n  quoteDataRows = [],\n  onClose = null,\n  onSubmit = null,\n  swapToSymbol,\n  initialAggId,\n  onQuoteDetailsIsOpened,\n  hideEstimatedGasFee,\n}) => {\n  const t = useContext(I18nContext);\n\n  const [sortDirection, setSortDirection] = useState(1);\n  const [sortColumn, setSortColumn] = useState(null);\n\n  const [selectedAggId, setSelectedAggId] = useState(initialAggId);\n  const [contentView, setContentView] = useState('sortList');\n  const [viewingAgg, setViewingAgg] = useState(null);\n\n  const onSubmitClick = useCallback(() => {\n    onSubmit(selectedAggId);\n    onClose();\n  }, [selectedAggId, onClose, onSubmit]);\n\n  const closeQuoteDetails = useCallback(() => {\n    setViewingAgg(null);\n    setContentView('sortList');\n  }, []);\n\n  const onRowClick = useCallback(\n    (aggId) => setSelectedAggId(aggId),\n    [setSelectedAggId],\n  );\n\n  const onCaretClick = useCallback(\n    (aggId) => {\n      const agg = quoteDataRows.find((quote) => quote.aggId === aggId);\n      setContentView('quoteDetails');\n      onQuoteDetailsIsOpened();\n      setViewingAgg(agg);\n    },\n    [quoteDataRows, onQuoteDetailsIsOpened],\n  );\n\n  const CustomBackground = useCallback(\n    () => (\n      <div className=\"select-quote-popover__popover-bg\" onClick={onClose} />\n    ),\n    [onClose],\n  );\n  const footer = (\n    <>\n      <Button\n        type=\"secondary\"\n        className=\"page-container__footer-button select-quote-popover__button\"\n        onClick={onClose}\n      >\n        {t('close')}\n      </Button>\n\n      <Button\n        type=\"primary\"\n        className=\"page-container__footer-button select-quote-popover__button\"\n        onClick={onSubmitClick}\n      >\n        {t('swapSelect')}\n      </Button>\n    </>\n  );\n\n  return (\n    <div className=\"select-quote-popover\">\n      <Popover\n        title={\n          contentView === 'quoteDetails'\n            ? t('swapSelectAQuote')\n            : t('swapQuoteDetails')\n        }\n        subtitle={\n          contentView === 'sortList'\n            ? t('swapSelectQuotePopoverDescription')\n            : null\n        }\n        onClose={onClose}\n        CustomBackground={CustomBackground}\n        className=\"select-quote-popover__popover-wrap\"\n        footerClassName=\"swaps__footer\"\n        footer={contentView === 'quoteDetails' ? null : footer}\n        onBack={contentView === 'quoteDetails' ? closeQuoteDetails : null}\n      >\n        {contentView === 'sortList' && (\n          <SortList\n            quoteDataRows={quoteDataRows}\n            selectedAggId={selectedAggId}\n            onSelect={onRowClick}\n            onCaretClick={onCaretClick}\n            swapToSymbol={swapToSymbol}\n            sortDirection={sortDirection}\n            setSortDirection={setSortDirection}\n            sortColumn={sortColumn}\n            setSortColumn={setSortColumn}\n            hideEstimatedGasFee={hideEstimatedGasFee}\n          />\n        )}\n        {contentView === 'quoteDetails' && viewingAgg && (\n          <QuoteDetails\n            {...viewingAgg}\n            hideEstimatedGasFee={hideEstimatedGasFee}\n          />\n        )}\n      </Popover>\n    </div>\n  );\n};\n\nSelectQuotePopover.propTypes = {\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func,\n  swapToSymbol: PropTypes.string,\n  quoteDataRows: PropTypes.arrayOf(QUOTE_DATA_ROWS_PROPTYPES_SHAPE),\n  initialAggId: PropTypes.string,\n  onQuoteDetailsIsOpened: PropTypes.func,\n  hideEstimatedGasFee: PropTypes.bool.isRequired,\n};\n\nexport default SelectQuotePopover;\n","export { default } from './sort-list';\n","import React, { useState, useContext, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport BigNumber from 'bignumber.js';\nimport SunCheckIcon from '../../../../components/ui/icon/sun-check-icon.component';\nimport { I18nContext } from '../../../../contexts/i18n';\nimport { QUOTE_DATA_ROWS_PROPTYPES_SHAPE } from '../select-quote-popover-constants';\nimport InfoTooltip from '../../../../components/ui/info-tooltip';\nimport { getUseCurrencyRateCheck } from '../../../../selectors';\n\nconst ToggleArrows = () => (\n  <svg\n    width=\"6\"\n    height=\"9\"\n    viewBox=\"0 0 6 9\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.7948 4.96973C0.365112 4.96973 0.150269 5.47754 0.462769 5.77051L2.78699 8.09473C2.96277 8.29004 3.25574 8.29004 3.45105 8.09473L5.77527 5.77051C6.06824 5.47754 5.85339 4.96973 5.44324 4.96973H0.7948ZM5.77527 2.91895L3.45105 0.594727C3.25574 0.418945 2.96277 0.418945 2.78699 0.594727L0.462769 2.91895C0.150269 3.23145 0.365112 3.71973 0.7948 3.71973H5.44324C5.85339 3.71973 6.06824 3.23145 5.77527 2.91895Z\"\n      fill=\"var(--color-primary-default)\"\n    />\n  </svg>\n);\n\nexport default function SortList({\n  quoteDataRows,\n  selectedAggId,\n  onSelect,\n  onCaretClick,\n  swapToSymbol,\n  sortDirection,\n  setSortDirection,\n  sortColumn = null,\n  setSortColumn,\n  hideEstimatedGasFee,\n}) {\n  const t = useContext(I18nContext);\n  const [noRowHover, setRowNowHover] = useState(false);\n  const useCurrencyRateCheck = useSelector(getUseCurrencyRateCheck);\n\n  const onColumnHeaderClick = (nextSortColumn) => {\n    if (nextSortColumn === sortColumn) {\n      setSortDirection(sortDirection * -1);\n    } else {\n      setSortColumn(nextSortColumn);\n    }\n  };\n\n  // This sort aims to do the following:\n  // If there is no selected sort column, then the best quotes should be first in the list\n  // If there is no selected sort column, then quotes that are not the best quotes should be in random order, after the first in the list\n  // If the sort column is 'quoteSource', sort alphabetically by 'quoteSource'\n  // Otherwise, sort in either ascending or descending numerical order on the selected column\n  const sortedRows = useMemo(() => {\n    return [...quoteDataRows].sort((rowDataA, rowDataB) => {\n      if (sortColumn === null && rowDataA.isBestQuote) {\n        return -1;\n      } else if (sortColumn === null && rowDataB.isBestQuote) {\n        return 1;\n      } else if (sortColumn === null) {\n        // Here, the last character in the destinationTokenValue is used as a source of randomness for sorting\n        const aHex = new BigNumber(rowDataA.destinationTokenValue).toString(16);\n        const bHex = new BigNumber(rowDataB.destinationTokenValue).toString(16);\n        return aHex[aHex.length - 1] < bHex[bHex.length - 1] ? -1 : 1;\n      } else if (sortColumn === 'quoteSource') {\n        return rowDataA[sortColumn] > rowDataB[sortColumn]\n          ? sortDirection * -1\n          : sortDirection;\n      }\n      return new BigNumber(rowDataA[sortColumn]).gt(rowDataB[sortColumn])\n        ? sortDirection * -1\n        : sortDirection;\n    });\n  }, [quoteDataRows, sortColumn, sortDirection]);\n  const selectedRow = sortedRows.findIndex(\n    ({ aggId }) => selectedAggId === aggId,\n  );\n\n  return (\n    <div className=\"select-quote-popover__sort-list\">\n      <div className=\"select-quote-popover__column-headers\">\n        <div\n          className=\"select-quote-popover__column-header select-quote-popover__receiving\"\n          data-testid=\"select-quote-popover__receiving\"\n          onClick={() => onColumnHeaderClick('destinationTokenValue')}\n        >\n          <span className=\"select-quote-popover__receiving-symbol\">\n            {swapToSymbol}\n          </span>\n          <div className=\"select-quote-popover__receiving-label\">\n            <span>{t('swapReceiving')}</span>\n            <InfoTooltip\n              position=\"bottom\"\n              contentText={t('swapReceivingInfoTooltip')}\n            />\n            <ToggleArrows />\n          </div>\n        </div>\n        <div\n          className=\"select-quote-popover__column-header select-quote-popover__network-fees select-quote-popover__network-fees-header\"\n          data-testid=\"select-quote-popover__network-fees-header\"\n          onClick={() => onColumnHeaderClick('rawNetworkFees')}\n        >\n          {!hideEstimatedGasFee && useCurrencyRateCheck && (\n            <>\n              <span>{t('swapEstimatedNetworkFees')}</span>\n              <InfoTooltip\n                position=\"bottom\"\n                contentText={t('swapEstimatedNetworkFeesInfo')}\n              />\n              <ToggleArrows />\n            </>\n          )}\n        </div>\n        <div\n          className=\"select-quote-popover__column-header select-quote-popover__quote-source\"\n          data-testid=\"select-quote-popover__quote-source\"\n          onClick={() => onColumnHeaderClick('quoteSource')}\n        >\n          {t('swapQuoteSource')}\n          <div className=\"select-quote-popover__quote-source-toggle\">\n            <ToggleArrows />\n          </div>\n        </div>\n      </div>\n      {sortedRows.map(\n        (\n          {\n            destinationTokenValue,\n            networkFees,\n            isBestQuote,\n            quoteSource,\n            aggId,\n          },\n          i,\n        ) => (\n          <div\n            className={classnames('select-quote-popover__row', {\n              'select-quote-popover__row--selected': selectedRow === i,\n              'select-quote-popover__row--no-hover': noRowHover,\n            })}\n            onClick={() => onSelect(aggId)}\n            key={`select-quote-popover-row-${i}`}\n            data-testid={`select-quote-popover-row-${i}`}\n          >\n            <div className=\"select-quote-popover__receiving\">\n              <div className=\"select-quote-popover__receiving-value\">\n                {isBestQuote && (\n                  <SunCheckIcon reverseColors={selectedRow !== i} />\n                )}\n                <div\n                  className=\"select-quote-popover__receiving-value-text\"\n                  title={destinationTokenValue}\n                >\n                  {destinationTokenValue}\n                </div>\n              </div>\n              {quoteSource === 'RFQ' && (\n                <span className=\"select-quote-popover__zero-slippage\">\n                  {t('swapZeroSlippage')}\n                </span>\n              )}\n            </div>\n            <div className=\"select-quote-popover__network-fees\">\n              {!hideEstimatedGasFee && useCurrencyRateCheck && networkFees}\n            </div>\n            <div className=\"select-quote-popover__quote-source\">\n              <div\n                className={classnames(\n                  'select-quote-popover__quote-source-label',\n                  {\n                    'select-quote-popover__quote-source-label--green':\n                      quoteSource === 'AGG',\n                    'select-quote-popover__quote-source-label--orange':\n                      quoteSource === 'RFQ',\n                    'select-quote-popover__quote-source-label--blue':\n                      quoteSource === 'DEX',\n                  },\n                )}\n              >\n                {quoteSource}\n              </div>\n            </div>\n            <div\n              className=\"select-quote-popover__caret-right\"\n              data-testid={`select-quote-popover__caret-right-${i}`}\n              onClick={(event) => {\n                event.stopPropagation();\n                onCaretClick(aggId);\n              }}\n              onMouseEnter={() => setRowNowHover(true)}\n              onMouseLeave={() => setRowNowHover(false)}\n            >\n              <i className=\"fa fa-angle-up\" />\n            </div>\n          </div>\n        ),\n      )}\n    </div>\n  );\n}\n\nSortList.propTypes = {\n  selectedAggId: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onCaretClick: PropTypes.func.isRequired,\n  swapToSymbol: PropTypes.string.isRequired,\n  quoteDataRows: PropTypes.arrayOf(QUOTE_DATA_ROWS_PROPTYPES_SHAPE).isRequired,\n  sortDirection: PropTypes.number.isRequired,\n  setSortDirection: PropTypes.func.isRequired,\n  sortColumn: PropTypes.string,\n  setSortColumn: PropTypes.func.isRequired,\n  hideEstimatedGasFee: PropTypes.bool.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport {\n  Icon,\n  IconName,\n  IconSize,\n} from '../../../components/component-library';\nimport { IconColor } from '../../../helpers/constants/design-system';\nimport UrlIcon from '../../../components/ui/url-icon';\nimport { I18nContext } from '../../../contexts/i18n';\n\nexport default function SelectedToken({\n  onClick,\n  onClose,\n  selectedToken,\n  testId,\n}) {\n  const t = useContext(I18nContext);\n  const hasIcon = selectedToken?.iconUrl && selectedToken?.symbol;\n\n  const onKeyUp = (e) => {\n    if (e.key === 'Escape') {\n      onClose();\n    } else if (e.key === 'Enter') {\n      onClick(e);\n    }\n  };\n\n  return (\n    <div\n      className={classnames(\n        'dropdown-search-list',\n        'dropdown-search-list__selector-closed-container',\n        'dropdown-input-pair__selector--closed',\n      )}\n      data-testid=\"dropdown-search-list\"\n      tabIndex=\"0\"\n      onClick={onClick}\n      onKeyUp={onKeyUp}\n    >\n      <div className=\"dropdown-search-list__selector-closed\">\n        {hasIcon && (\n          <UrlIcon\n            url={selectedToken.iconUrl}\n            className=\"dropdown-search-list__selector-closed-icon\"\n            name={selectedToken?.symbol}\n          />\n        )}\n        <div\n          className={classnames('dropdown-search-list__labels', {\n            'dropdown-search-list__labels--with-icon': hasIcon,\n          })}\n        >\n          <div className=\"dropdown-search-list__item-labels\">\n            <span\n              data-testid={testId}\n              className={classnames(\n                'dropdown-search-list__closed-primary-label',\n                {\n                  'dropdown-search-list__select-default':\n                    !selectedToken?.symbol,\n                },\n              )}\n            >\n              {selectedToken?.symbol || t('swapSelectAToken')}\n            </span>\n          </div>\n        </div>\n      </div>\n      <Icon\n        name={IconName.ArrowDown}\n        size={IconSize.Xs}\n        marginRight={3}\n        color={IconColor.iconAlternative}\n      />\n    </div>\n  );\n}\n\nSelectedToken.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  selectedToken: PropTypes.object.isRequired,\n  testId: PropTypes.string,\n};\n","export { default } from './slippage-buttons';\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { I18nContext } from '../../../contexts/i18n';\nimport ButtonGroup from '../../../components/ui/button-group';\nimport Button from '../../../components/ui/button';\nimport InfoTooltip from '../../../components/ui/info-tooltip';\nimport { Slippage } from '../../../../shared/constants/swaps';\nimport { Text } from '../../../components/component-library';\nimport {\n  TextVariant,\n  TextColor,\n} from '../../../helpers/constants/design-system';\n\nexport default function SlippageButtons({\n  onSelect,\n  maxAllowedSlippage,\n  currentSlippage,\n  isDirectWrappingEnabled,\n}) {\n  const t = useContext(I18nContext);\n  const [customValue, setCustomValue] = useState(() => {\n    if (\n      typeof currentSlippage === 'number' &&\n      !Object.values(Slippage).includes(currentSlippage)\n    ) {\n      return currentSlippage.toString();\n    }\n    return '';\n  });\n  const [enteringCustomValue, setEnteringCustomValue] = useState(false);\n  const [activeButtonIndex, setActiveButtonIndex] = useState(() => {\n    if (currentSlippage === Slippage.high) {\n      return 1; // 3% slippage.\n    } else if (currentSlippage === Slippage.default) {\n      return 0; // 2% slippage.\n    } else if (typeof currentSlippage === 'number') {\n      return 2; // Custom slippage.\n    }\n    return 0;\n  });\n  const [open, setOpen] = useState(() => {\n    return currentSlippage !== Slippage.default; // Only open Advanced options by default if it's not default slippage.\n  });\n  const [inputRef, setInputRef] = useState(null);\n\n  let errorText = '';\n  if (customValue) {\n    // customValue is a string, e.g. '0'\n    if (Number(customValue) < 0) {\n      errorText = t('swapSlippageNegative');\n    } else if (Number(customValue) > 0 && Number(customValue) <= 1) {\n      // We will not show this warning for 0% slippage, because we will only\n      // return non-slippage quotes from off-chain makers.\n      errorText = t('swapLowSlippageError');\n    } else if (\n      Number(customValue) >= 5 &&\n      Number(customValue) <= maxAllowedSlippage\n    ) {\n      errorText = t('swapHighSlippageWarning');\n    } else if (Number(customValue) > maxAllowedSlippage) {\n      errorText = t('swapsExcessiveSlippageWarning');\n    }\n  }\n\n  const customValueText = customValue || t('swapCustom');\n\n  useEffect(() => {\n    if (\n      inputRef &&\n      enteringCustomValue &&\n      window.document.activeElement !== inputRef\n    ) {\n      inputRef.focus();\n    }\n  }, [inputRef, enteringCustomValue]);\n\n  return (\n    <div className=\"slippage-buttons\">\n      <button\n        onClick={() => setOpen(!open)}\n        className={classnames('slippage-buttons__header', {\n          'slippage-buttons__header--open': open,\n        })}\n      >\n        <Text\n          variant={TextVariant.bodySmBold}\n          marginRight={2}\n          color={TextColor.primaryDefault}\n          as=\"span\"\n        >\n          {t('swapsAdvancedOptions')}\n        </Text>\n        {open ? (\n          <i className=\"fa fa-angle-up\" />\n        ) : (\n          <i className=\"fa fa-angle-down\" />\n        )}\n      </button>\n      <div className=\"slippage-buttons__content\">\n        {open && (\n          <>\n            {!isDirectWrappingEnabled && (\n              <div className=\"slippage-buttons__dropdown-content\">\n                <div className=\"slippage-buttons__buttons-prefix\">\n                  <Text\n                    variant={TextVariant.bodySmBold}\n                    marginRight={1}\n                    color={TextColor.textDefault}\n                  >\n                    {t('swapsMaxSlippage')}\n                  </Text>\n                  <InfoTooltip\n                    position=\"top\"\n                    contentText={t('swapSlippageTooltip')}\n                  />\n                </div>\n                <ButtonGroup\n                  defaultActiveButtonIndex={\n                    activeButtonIndex === 2 && !customValue\n                      ? 1\n                      : activeButtonIndex\n                  }\n                  variant=\"radiogroup\"\n                  newActiveButtonIndex={activeButtonIndex}\n                  className={classnames(\n                    'button-group',\n                    'slippage-buttons__button-group',\n                  )}\n                >\n                  <Button\n                    onClick={() => {\n                      setCustomValue('');\n                      setEnteringCustomValue(false);\n                      setActiveButtonIndex(0);\n                      onSelect(Slippage.default);\n                    }}\n                  >\n                    {t('swapSlippagePercent', [Slippage.default])}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setCustomValue('');\n                      setEnteringCustomValue(false);\n                      setActiveButtonIndex(1);\n                      onSelect(Slippage.high);\n                    }}\n                  >\n                    {t('swapSlippagePercent', [Slippage.high])}\n                  </Button>\n                  <Button\n                    className={classnames(\n                      'slippage-buttons__button-group-custom-button',\n                      {\n                        'radio-button--danger': errorText,\n                      },\n                    )}\n                    onClick={() => {\n                      setActiveButtonIndex(2);\n                      setEnteringCustomValue(true);\n                    }}\n                  >\n                    {enteringCustomValue ? (\n                      <div\n                        className={classnames(\n                          'slippage-buttons__custom-input',\n                          {\n                            'slippage-buttons__custom-input--danger': errorText,\n                          },\n                        )}\n                      >\n                        <input\n                          data-testid=\"slippage-buttons__custom-slippage\"\n                          onChange={(event) => {\n                            const { value } = event.target;\n                            const isValueNumeric = !isNaN(Number(value));\n                            if (isValueNumeric) {\n                              setCustomValue(value);\n                              onSelect(Number(value));\n                            }\n                          }}\n                          type=\"text\"\n                          maxLength=\"4\"\n                          ref={setInputRef}\n                          onBlur={() => {\n                            setEnteringCustomValue(false);\n                          }}\n                          value={customValue || ''}\n                        />\n                      </div>\n                    ) : (\n                      customValueText\n                    )}\n                    {(customValue || enteringCustomValue) && (\n                      <div className=\"slippage-buttons__percentage-suffix\">\n                        %\n                      </div>\n                    )}\n                  </Button>\n                </ButtonGroup>\n              </div>\n            )}\n          </>\n        )}\n        {errorText && (\n          <Text\n            variant={TextVariant.bodyXs}\n            color={TextColor.errorDefault}\n            marginTop={2}\n          >\n            {errorText}\n          </Text>\n        )}\n      </div>\n    </div>\n  );\n}\n\nSlippageButtons.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  maxAllowedSlippage: PropTypes.number.isRequired,\n  currentSlippage: PropTypes.number,\n  isDirectWrappingEnabled: PropTypes.bool,\n};\n","import React from 'react';\n\nexport default function ArrowIcon() {\n  return (\n    <svg\n      width=\"15\"\n      height=\"13\"\n      viewBox=\"0 0 15 13\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.4946 6.14779C14.4863 5.93594 14.3991 5.69108 14.2539 5.53666L9.51334 0.49958C9.1921 0.21091 8.57613 0.0917437 8.21709 0.425509C7.86344 0.754237 7.87396 1.39178 8.22627 1.72181L11.5595 5.25889L1.1618 5.25889C0.670919 5.25889 0.272949 5.65687 0.272949 6.14779C0.272949 6.6387 0.670919 7.03668 1.1618 7.03668L11.5595 7.03668L8.22627 10.5738C7.92297 10.8776 7.86691 11.5376 8.21709 11.8701C8.56718 12.2025 9.20529 12.0963 9.51334 11.796L14.2539 6.75891C14.4161 6.58653 14.4952 6.38428 14.4946 6.14779Z\"\n        fill=\"var(--color-text-muted)\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function CanceledIcon() {\n  return (\n    <svg\n      width=\"41\"\n      height=\"39\"\n      viewBox=\"0 0 41 39\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M34.5805 6.55143C36.1394 8.11033 37.3994 9.91222 38.3237 11.8681C38.7066 12.6782 39.0318 13.5148 39.2968 14.3714L39.3242 14.4606C39.4816 14.9785 39.6171 15.5037 39.73 16.0347C40.6511 20.3654 40.0335 24.9029 37.9511 28.8509C35.6001 33.308 31.5749 36.6487 26.7609 38.138C24.3773 38.8754 21.8717 39.1361 19.3873 38.9052C16.9029 38.6743 14.4883 37.9563 12.2813 36.7922C10.2608 35.7264 8.52045 34.3588 7.08333 32.7636C5.61245 31.1448 4.43054 29.2824 3.59178 27.2574C3.32329 26.6092 2.89685 25.2767 2.89685 25.2767H6.89583C7.68667 27.4068 8.96033 29.362 10.6288 30.9609L10.6318 30.96C11.5096 31.8005 12.501 32.5516 13.595 33.1786C15.8742 34.483 18.4736 35.1864 21.1455 35.1864C25.1768 35.1864 29.0429 33.585 31.8935 30.7345C34.744 27.8839 36.3455 24.0177 36.3455 19.9865C36.3455 18.7267 36.1891 17.483 35.8871 16.2814C35.8206 16.017 35.7471 15.7546 35.6666 15.4945C34.4752 11.6432 31.8027 8.42306 28.237 6.54231C24.6713 4.66156 20.5045 4.27429 16.6533 5.46571C12.8837 6.63189 9.71868 9.21706 7.82253 12.6699L12.8961 15.307L3.28331 18.3447L0.245605 8.73191L4.45005 10.9171C6.81537 6.56278 10.7905 3.30177 15.5303 1.83546C17.3658 1.26761 19.2587 0.986653 21.1455 0.986694C26.1846 0.986694 31.0173 2.98824 34.5805 6.55143Z\"\n        fill=\"var(--color-primary-default)\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.1252 22.1036L14.7107 18.689L12.0926 21.3257L18.1252 27.3584L30.2322 15.2515L27.614 12.6148L18.1252 22.1036Z\"\n        fill=\"var(--color-primary-default)\"\n      />\n    </svg>\n  );\n}\n","export { default } from './smart-transaction-status';\n","import React from 'react';\n\nexport default function RevertedIcon() {\n  return (\n    <svg\n      width=\"41\"\n      height=\"39\"\n      viewBox=\"0 0 41 39\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M34.6806 6.55143C36.2395 8.11033 37.4995 9.91222 38.4238 11.8681C38.8067 12.6782 39.1319 13.5148 39.3969 14.3714L39.4243 14.4606C39.5817 14.9785 39.7172 15.5037 39.8301 16.0347C40.7512 20.3654 40.1336 24.9029 38.0512 28.8509C35.7002 33.308 31.675 36.6487 26.861 38.138C24.4773 38.8754 21.9718 39.1361 19.4874 38.9052C17.003 38.6743 14.5884 37.9563 12.3814 36.7922C10.3609 35.7264 8.62055 34.3588 7.18343 32.7636C5.71254 31.1448 4.53064 29.2824 3.69188 27.2574C3.42339 26.6092 2.99695 25.2767 2.99695 25.2767H6.99592C7.78677 27.4068 9.06042 29.362 10.7289 30.9609L10.7319 30.96C11.6097 31.8005 12.6011 32.5516 13.6951 33.1786C15.9743 34.483 18.5737 35.1864 21.2456 35.1864C25.2769 35.1864 29.143 33.585 31.9936 30.7345C34.8441 27.8839 36.4456 24.0177 36.4456 19.9865C36.4456 18.7267 36.2892 17.483 35.9872 16.2814C35.9207 16.017 35.8471 15.7546 35.7667 15.4945C34.5753 11.6432 31.9028 8.42306 28.3371 6.54231C24.7714 4.66156 20.6046 4.27429 16.7534 5.46571C12.9838 6.63189 9.81878 9.21706 7.92263 12.6699L12.9962 15.307L3.3834 18.3447L0.345703 8.73191L4.55015 10.9171C6.91547 6.56278 10.8906 3.30177 15.6304 1.83546C17.4659 1.26761 19.3588 0.986653 21.2456 0.986694C26.2847 0.986694 31.1174 2.98824 34.6806 6.55143Z\"\n        fill=\"var(--color-error-default)\"\n      />\n      <path\n        d=\"M18.5849 19.9869L15.1454 23.4264L17.9845 26.2655L21.424 22.826L24.8635 26.2655L27.7026 23.4264L24.2631 19.9869L27.7026 16.5473L24.8635 13.7082L21.424 17.1478L17.9845 13.7082L15.1454 16.5473L18.5849 19.9869Z\"\n        fill=\"var(--color-error-default)\"\n      />\n    </svg>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getBlockExplorerLink } from '@metamask/etherscan-link';\nimport { isEqual } from 'lodash';\nimport { I18nContext } from '../../../contexts/i18n';\nimport {\n  getFetchParams,\n  prepareToLeaveSwaps,\n  getCurrentSmartTransactions,\n  getSelectedQuote,\n  getTopQuote,\n  getCurrentSmartTransactionsEnabled,\n  getSwapsNetworkConfig,\n  cancelSwapsSmartTransaction,\n} from '../../../ducks/swaps/swaps';\nimport {\n  isHardwareWallet,\n  getHardwareWalletType,\n  getCurrentChainId,\n  getRpcPrefsForCurrentProvider,\n} from '../../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\nimport { SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP } from '../../../../shared/constants/swaps';\nimport {\n  DEFAULT_ROUTE,\n  BUILD_QUOTE_ROUTE,\n} from '../../../helpers/constants/routes';\nimport { Text } from '../../../components/component-library';\nimport Box from '../../../components/ui/box';\nimport UrlIcon from '../../../components/ui/url-icon';\nimport {\n  BLOCK_SIZES,\n  TextVariant,\n  JustifyContent,\n  DISPLAY,\n  FontWeight,\n  AlignItems,\n  TextColor,\n} from '../../../helpers/constants/design-system';\nimport {\n  stopPollingForQuotes,\n  setBackgroundSwapRouteState,\n} from '../../../store/actions';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport { SmartTransactionStatus } from '../../../../shared/constants/transaction';\n\nimport SwapsFooter from '../swaps-footer';\nimport { showRemainingTimeInMinAndSec } from '../swaps.util';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport CreateNewSwap from '../create-new-swap';\nimport ViewOnBlockExplorer from '../view-on-block-explorer';\nimport { calcTokenAmount } from '../../../../shared/lib/transactions-controller-utils';\nimport SuccessIcon from './success-icon';\nimport RevertedIcon from './reverted-icon';\nimport CanceledIcon from './canceled-icon';\nimport UnknownIcon from './unknown-icon';\nimport ArrowIcon from './arrow-icon';\nimport TimerIcon from './timer-icon';\n\nexport default function SmartTransactionStatusPage() {\n  const [cancelSwapLinkClicked, setCancelSwapLinkClicked] = useState(false);\n  const t = useContext(I18nContext);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const fetchParams = useSelector(getFetchParams, isEqual) || {};\n  const {\n    destinationTokenInfo: fetchParamsDestinationTokenInfo = {},\n    sourceTokenInfo: fetchParamsSourceTokenInfo = {},\n  } = fetchParams?.metaData || {};\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n  const needsTwoConfirmations = true;\n  const selectedQuote = useSelector(getSelectedQuote, isEqual);\n  const topQuote = useSelector(getTopQuote, isEqual);\n  const usedQuote = selectedQuote || topQuote;\n  const currentSmartTransactions = useSelector(\n    getCurrentSmartTransactions,\n    isEqual,\n  );\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const chainId = useSelector(getCurrentChainId);\n  const rpcPrefs = useSelector(getRpcPrefsForCurrentProvider, shallowEqual);\n  const swapsNetworkConfig = useSelector(getSwapsNetworkConfig, shallowEqual);\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const baseNetworkUrl =\n    rpcPrefs.blockExplorerUrl ??\n    SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP[chainId] ??\n    null;\n\n  let smartTransactionStatus = SmartTransactionStatus.pending;\n  let latestSmartTransaction = {};\n  let latestSmartTransactionUuid;\n  let cancellationFeeWei;\n\n  if (currentSmartTransactions && currentSmartTransactions.length > 0) {\n    latestSmartTransaction =\n      currentSmartTransactions[currentSmartTransactions.length - 1];\n    latestSmartTransactionUuid = latestSmartTransaction?.uuid;\n    smartTransactionStatus =\n      latestSmartTransaction?.status || SmartTransactionStatus.pending;\n    cancellationFeeWei =\n      latestSmartTransaction?.statusMetadata?.cancellationFeeWei;\n  }\n  const [timeLeftForPendingStxInSec, setTimeLeftForPendingStxInSec] = useState(\n    swapsNetworkConfig.stxStatusDeadline,\n  );\n\n  const sensitiveProperties = {\n    needs_two_confirmations: needsTwoConfirmations,\n    token_from:\n      fetchParamsSourceTokenInfo.symbol ??\n      latestSmartTransaction?.sourceTokenSymbol,\n    token_from_amount:\n      fetchParams?.value ?? latestSmartTransaction?.swapTokenValue,\n    token_to:\n      fetchParamsDestinationTokenInfo.symbol ??\n      latestSmartTransaction?.destinationTokenSymbol,\n    request_type: fetchParams?.balanceError ? 'Quote' : 'Order',\n    slippage: fetchParams?.slippage,\n    custom_slippage: fetchParams?.slippage === 2,\n    is_hardware_wallet: hardwareWalletUsed,\n    hardware_wallet_type: hardwareWalletType,\n    stx_enabled: smartTransactionsEnabled,\n    current_stx_enabled: currentSmartTransactionsEnabled,\n    stx_user_opt_in: smartTransactionsOptInStatus,\n  };\n\n  let destinationValue;\n  if (usedQuote?.destinationAmount) {\n    destinationValue = calcTokenAmount(\n      usedQuote?.destinationAmount,\n      fetchParamsDestinationTokenInfo.decimals ??\n        latestSmartTransaction?.destinationTokenDecimals,\n    ).toPrecision(8);\n  }\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const isSmartTransactionPending =\n    smartTransactionStatus === SmartTransactionStatus.pending;\n  const showCloseButtonOnly =\n    isSmartTransactionPending ||\n    smartTransactionStatus === SmartTransactionStatus.success;\n  const txHash = latestSmartTransaction?.statusMetadata?.minedHash;\n\n  useEffect(() => {\n    trackEvent({\n      event: 'STX Status Page Loaded',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties,\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    let intervalId;\n    if (isSmartTransactionPending && latestSmartTransactionUuid) {\n      const calculateRemainingTime = () => {\n        const secondsAfterStxSubmission = Math.round(\n          (Date.now() - latestSmartTransaction.time) / 1000,\n        );\n        if (secondsAfterStxSubmission > swapsNetworkConfig.stxStatusDeadline) {\n          setTimeLeftForPendingStxInSec(0);\n          clearInterval(intervalId);\n          return;\n        }\n        setTimeLeftForPendingStxInSec(\n          swapsNetworkConfig.stxStatusDeadline - secondsAfterStxSubmission,\n        );\n      };\n      intervalId = setInterval(calculateRemainingTime, 1000);\n      calculateRemainingTime();\n    }\n\n    return () => clearInterval(intervalId);\n  }, [\n    dispatch,\n    isSmartTransactionPending,\n    latestSmartTransactionUuid,\n    latestSmartTransaction.time,\n    swapsNetworkConfig.stxStatusDeadline,\n  ]);\n\n  useEffect(() => {\n    dispatch(setBackgroundSwapRouteState('smartTransactionStatus'));\n    setTimeout(() => {\n      // We don't need to poll for quotes on the status page.\n      dispatch(stopPollingForQuotes());\n    }, 1000); // Stop polling for quotes after 1s.\n  }, [dispatch]);\n\n  let headerText = t('stxPendingPrivatelySubmittingSwap');\n  let description;\n  let subDescription;\n  let icon;\n  let blockExplorerUrl;\n  if (isSmartTransactionPending) {\n    if (cancelSwapLinkClicked) {\n      headerText = t('stxTryingToCancel');\n    } else if (cancellationFeeWei > 0) {\n      headerText = t('stxPendingPubliclySubmittingSwap');\n    }\n  }\n  if (smartTransactionStatus === SmartTransactionStatus.success) {\n    headerText = t('stxSuccess');\n    if (\n      fetchParamsDestinationTokenInfo.symbol ||\n      latestSmartTransaction?.destinationTokenSymbol\n    ) {\n      description = t('stxSuccessDescription', [\n        fetchParamsDestinationTokenInfo.symbol ??\n          latestSmartTransaction?.destinationTokenSymbol,\n      ]);\n    }\n    icon = <SuccessIcon />;\n  } else if (\n    smartTransactionStatus === 'cancelled_user_cancelled' ||\n    latestSmartTransaction?.statusMetadata?.minedTx ===\n      SmartTransactionStatus.cancelled\n  ) {\n    headerText = t('stxUserCancelled');\n    description = t('stxUserCancelledDescription');\n    icon = <CanceledIcon />;\n  } else if (\n    smartTransactionStatus.startsWith('cancelled') ||\n    smartTransactionStatus.includes('deadline_missed')\n  ) {\n    headerText = t('stxCancelled');\n    description = t('stxCancelledDescription');\n    subDescription = t('stxCancelledSubDescription');\n    icon = <CanceledIcon />;\n  } else if (smartTransactionStatus === 'unknown') {\n    headerText = t('stxUnknown');\n    description = t('stxUnknownDescription');\n    icon = <UnknownIcon />;\n  } else if (smartTransactionStatus === 'reverted') {\n    headerText = t('stxFailure');\n    description = t('stxFailureDescription', [\n      <a\n        className=\"smart-transaction-status__support-link\"\n        key=\"smart-transaction-status-support-link\"\n        href=\"https://support.metamask.io\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {t('customerSupport')}\n      </a>,\n    ]);\n    icon = <RevertedIcon />;\n  }\n  if (txHash && latestSmartTransactionUuid) {\n    blockExplorerUrl = getBlockExplorerLink(\n      { hash: txHash, chainId },\n      { blockExplorerUrl: baseNetworkUrl },\n    );\n  }\n\n  const showCancelSwapLink =\n    latestSmartTransaction.cancellable && !cancelSwapLinkClicked;\n\n  const CancelSwap = () => {\n    return (\n      <Box marginBottom={0}>\n        <a\n          className=\"smart-transaction-status__cancel-swap-link\"\n          href=\"#\"\n          onClick={(e) => {\n            e?.preventDefault();\n            setCancelSwapLinkClicked(true); // We want to hide it after a user clicks on it.\n            trackEvent({\n              event: 'Cancel STX',\n              category: MetaMetricsEventCategory.Swaps,\n              sensitiveProperties,\n            });\n            dispatch(cancelSwapsSmartTransaction(latestSmartTransactionUuid));\n          }}\n        >\n          {t('attemptToCancelSwapForFree')}\n        </a>\n      </Box>\n    );\n  };\n\n  return (\n    <div className=\"smart-transaction-status\">\n      <Box\n        paddingLeft={8}\n        paddingRight={8}\n        height={BLOCK_SIZES.FULL}\n        justifyContent={JustifyContent.flexStart}\n        display={DISPLAY.FLEX}\n        className=\"smart-transaction-status__content\"\n      >\n        <Box\n          marginTop={10}\n          marginBottom={0}\n          display={DISPLAY.FLEX}\n          justifyContent={JustifyContent.center}\n          alignItems={AlignItems.center}\n        >\n          <Text\n            color={TextColor.textAlternative}\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n          >\n            {`${fetchParams?.value && Number(fetchParams.value).toFixed(5)} `}\n          </Text>\n          <Text\n            color={TextColor.textAlternative}\n            variant={TextVariant.bodySmBold}\n            as=\"h6\"\n            marginLeft={1}\n            marginRight={2}\n          >\n            {fetchParamsSourceTokenInfo.symbol ??\n              latestSmartTransaction?.sourceTokenSymbol}\n          </Text>\n          {fetchParamsSourceTokenInfo.iconUrl ? (\n            <UrlIcon\n              url={fetchParamsSourceTokenInfo.iconUrl}\n              className=\"main-quote-summary__icon\"\n              name={\n                fetchParamsSourceTokenInfo.symbol ??\n                latestSmartTransaction?.destinationTokenSymbol\n              }\n              fallbackClassName=\"main-quote-summary__icon-fallback\"\n            />\n          ) : null}\n          <Box display={DISPLAY.BLOCK} marginLeft={2} marginRight={2}>\n            <ArrowIcon />\n          </Box>\n          {fetchParamsDestinationTokenInfo.iconUrl ? (\n            <UrlIcon\n              url={fetchParamsDestinationTokenInfo.iconUrl}\n              className=\"main-quote-summary__icon\"\n              name={\n                fetchParamsDestinationTokenInfo.symbol ??\n                latestSmartTransaction?.destinationTokenSymbol\n              }\n              fallbackClassName=\"main-quote-summary__icon-fallback\"\n            />\n          ) : null}\n          <Text\n            color={TextColor.textAlternative}\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            marginLeft={2}\n          >\n            {`~${destinationValue && Number(destinationValue).toFixed(5)} `}\n          </Text>\n          <Text\n            color={TextColor.textAlternative}\n            variant={TextVariant.bodySmBold}\n            as=\"h6\"\n            marginLeft={1}\n          >\n            {fetchParamsDestinationTokenInfo.symbol ??\n              latestSmartTransaction?.destinationTokenSymbol}\n          </Text>\n        </Box>\n        <Box\n          marginTop={3}\n          className=\"smart-transaction-status__background-animation smart-transaction-status__background-animation--top\"\n        />\n        {icon && (\n          <Box marginTop={3} marginBottom={2}>\n            {icon}\n          </Box>\n        )}\n        {isSmartTransactionPending && (\n          <Box\n            marginTop={7}\n            marginBottom={1}\n            display={DISPLAY.FLEX}\n            justifyContent={JustifyContent.center}\n            alignItems={AlignItems.center}\n          >\n            <TimerIcon />\n            <Text\n              color={TextColor.textAlternative}\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              marginLeft={1}\n            >\n              {`${t('stxSwapCompleteIn')} `}\n            </Text>\n            <Text\n              color={TextColor.textAlternative}\n              variant={TextVariant.bodySmBold}\n              as=\"h6\"\n              marginLeft={1}\n              className=\"smart-transaction-status__remaining-time\"\n            >\n              {showRemainingTimeInMinAndSec(timeLeftForPendingStxInSec)}\n            </Text>\n          </Box>\n        )}\n        <Text\n          color={TextColor.textDefault}\n          variant={TextVariant.headingSm}\n          as=\"h4\"\n          fontWeight={FontWeight.Bold}\n        >\n          {headerText}\n        </Text>\n        {isSmartTransactionPending && (\n          <div className=\"smart-transaction-status__loading-bar-container\">\n            <div\n              className=\"smart-transaction-status__loading-bar\"\n              style={{\n                width: `${\n                  (100 / swapsNetworkConfig.stxStatusDeadline) *\n                  (swapsNetworkConfig.stxStatusDeadline -\n                    timeLeftForPendingStxInSec)\n                }%`,\n              }}\n            />\n          </div>\n        )}\n        {description && (\n          <Text\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            marginTop={blockExplorerUrl && 1}\n            color={TextColor.textAlternative}\n          >\n            {description}\n          </Text>\n        )}\n        {blockExplorerUrl && (\n          <ViewOnBlockExplorer\n            blockExplorerUrl={blockExplorerUrl}\n            sensitiveTrackingProperties={sensitiveProperties}\n          />\n        )}\n        <Box\n          marginTop={3}\n          className=\"smart-transaction-status__background-animation smart-transaction-status__background-animation--bottom\"\n        />\n        {subDescription && (\n          <Text\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            marginTop={8}\n            color={TextColor.textAlternative}\n          >\n            {subDescription}\n          </Text>\n        )}\n      </Box>\n      {showCancelSwapLink &&\n        latestSmartTransactionUuid &&\n        isSmartTransactionPending && <CancelSwap />}\n      {smartTransactionStatus === SmartTransactionStatus.success ? (\n        <CreateNewSwap sensitiveTrackingProperties={sensitiveProperties} />\n      ) : null}\n      <SwapsFooter\n        onSubmit={async () => {\n          if (showCloseButtonOnly) {\n            await dispatch(prepareToLeaveSwaps());\n            history.push(DEFAULT_ROUTE);\n          } else {\n            history.push(BUILD_QUOTE_ROUTE);\n          }\n        }}\n        onCancel={async () => {\n          await dispatch(prepareToLeaveSwaps());\n          history.push(DEFAULT_ROUTE);\n        }}\n        submitText={showCloseButtonOnly ? t('close') : t('tryAgain')}\n        hideCancel={showCloseButtonOnly}\n        cancelText={t('close')}\n        className=\"smart-transaction-status__swaps-footer\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function SuccessIcon() {\n  return (\n    <svg\n      width=\"39\"\n      height=\"39\"\n      viewBox=\"0 0 39 39\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M34.5457 19.8983C34.5457 23.9296 32.9443 27.7958 30.0937 30.6463C27.2432 33.4969 23.377 35.0983 19.3457 35.0983C15.3144 35.0983 11.4482 33.4969 8.59768 30.6463C5.74713 27.7958 4.1457 23.9296 4.1457 19.8983C4.1457 15.867 5.74713 12.0008 8.59768 9.15029C11.4482 6.29974 15.3144 4.69832 19.3457 4.69832C20.7897 4.69832 22.1957 4.90732 23.5257 5.28732L26.5087 2.30432C24.3047 1.39232 21.8917 0.898315 19.3457 0.898315C16.8506 0.898315 14.3799 1.38977 12.0747 2.3446C9.76953 3.29944 7.67499 4.69897 5.91067 6.46329C2.34748 10.0265 0.345703 14.8592 0.345703 19.8983C0.345703 24.9374 2.34748 29.7702 5.91067 33.3333C7.67499 35.0977 9.76953 36.4972 12.0747 37.452C14.3799 38.4069 16.8506 38.8983 19.3457 38.8983C24.3848 38.8983 29.2175 36.8965 32.7807 33.3333C36.3439 29.7702 38.3457 24.9374 38.3457 19.8983H34.5457ZM11.5747 16.2503L8.8957 18.9483L17.4457 27.4983L36.4457 8.49832L33.7667 5.80032L17.4457 22.1213L11.5747 16.2503Z\"\n        fill=\"var(--color-success-default)\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function TimerIcon() {\n  return (\n    <svg\n      width=\"15\"\n      height=\"14\"\n      viewBox=\"0 0 15 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.36621 0.0810547C3.62012 0.0810547 0.584961 3.11621 0.584961 6.8623C0.584961 10.6084 3.62012 13.6436 7.36621 13.6436C11.1123 13.6436 14.1475 10.6084 14.1475 6.8623C14.1475 3.11621 11.1123 0.0810547 7.36621 0.0810547ZM7.36621 12.3311C4.33105 12.3311 1.89746 9.89746 1.89746 6.8623C1.89746 3.85449 4.33105 1.39355 7.36621 1.39355C10.374 1.39355 12.835 3.85449 12.835 6.8623C12.835 9.89746 10.374 12.3311 7.36621 12.3311ZM9.03418 9.4873C9.19824 9.59668 9.38965 9.56934 9.49902 9.40527L10.0186 8.72168C10.1279 8.55762 10.1006 8.36621 9.93652 8.25684L8.13184 6.91699V3.03418C8.13184 2.87012 7.96777 2.70605 7.80371 2.70605H6.92871C6.7373 2.70605 6.60059 2.87012 6.60059 3.03418V7.5459C6.60059 7.62793 6.62793 7.7373 6.70996 7.79199L9.03418 9.4873Z\"\n        fill=\"var(--color-primary-default)\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function UnknownIcon() {\n  return (\n    <svg\n      width=\"39\"\n      height=\"39\"\n      viewBox=\"0 0 39 39\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        cx=\"19.1533\"\n        cy=\"19.2715\"\n        r=\"17.1\"\n        stroke=\"var(--color-primary-default)\"\n        strokeWidth=\"3.8\"\n      />\n      <path\n        d=\"M16.712 21.5034C16.712 20.7834 16.88 20.1834 17.216 19.7034C17.568 19.2074 18.08 18.7274 18.752 18.2634C19.008 18.0874 19.264 17.9274 19.52 17.7834C19.776 17.6394 20 17.4874 20.192 17.3274C20.4 17.1514 20.56 16.9674 20.672 16.7754C20.8 16.5674 20.864 16.3194 20.864 16.0314C20.864 15.5354 20.688 15.1594 20.336 14.9034C20 14.6474 19.592 14.5194 19.112 14.5194C18.616 14.5194 18.16 14.6794 17.744 14.9994C17.344 15.3034 17.144 15.7674 17.144 16.3914H13.52C13.52 15.6394 13.664 14.9354 13.952 14.2794C14.24 13.6074 14.632 13.0314 15.128 12.5514C15.64 12.0554 16.232 11.6634 16.904 11.3754C17.592 11.0874 18.328 10.9434 19.112 10.9434C19.896 10.9434 20.616 11.0794 21.272 11.3514C21.944 11.6234 22.512 11.9834 22.976 12.4314C23.456 12.8794 23.824 13.3994 24.08 13.9914C24.352 14.5674 24.488 15.1754 24.488 15.8154C24.488 16.2314 24.456 16.6234 24.392 16.9914C24.344 17.3594 24.24 17.7114 24.08 18.0474C23.936 18.3834 23.728 18.7114 23.456 19.0314C23.184 19.3514 22.84 19.6634 22.424 19.9674C21.784 20.4474 21.272 20.8234 20.888 21.0954C20.52 21.3674 20.336 21.6474 20.336 21.9354V21.9594H16.712V21.5034ZM18.512 28.4634C18.16 28.4634 17.824 28.3994 17.504 28.2714C17.2 28.1274 16.928 27.9434 16.688 27.7194C16.464 27.4794 16.28 27.2074 16.136 26.9034C16.008 26.5834 15.944 26.2474 15.944 25.8954C15.944 25.5434 16.008 25.2154 16.136 24.9114C16.28 24.5914 16.464 24.3194 16.688 24.0954C16.928 23.8554 17.2 23.6714 17.504 23.5434C17.824 23.3994 18.16 23.3274 18.512 23.3274C18.864 23.3274 19.192 23.3994 19.496 23.5434C19.816 23.6714 20.088 23.8554 20.312 24.0954C20.552 24.3194 20.736 24.5914 20.864 24.9114C21.008 25.2154 21.08 25.5434 21.08 25.8954C21.08 26.2474 21.008 26.5834 20.864 26.9034C20.736 27.2074 20.552 27.4794 20.312 27.7194C20.088 27.9434 19.816 28.1274 19.496 28.2714C19.192 28.3994 18.864 28.4634 18.512 28.4634Z\"\n        fill=\"var(--color-primary-default)\"\n      />\n    </svg>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport { BannerAlert } from '../../../components/component-library/banner-alert';\nimport Box from '../../../components/ui/box';\nimport {\n  AlignItems,\n  SEVERITIES,\n  TextVariant,\n} from '../../../helpers/constants/design-system';\nimport {\n  ButtonLink,\n  ButtonLinkSize,\n  Text,\n} from '../../../components/component-library';\n\nimport {\n  QUOTES_EXPIRED_ERROR,\n  SWAP_FAILED_ERROR,\n  ERROR_FETCHING_QUOTES,\n  QUOTES_NOT_AVAILABLE_ERROR,\n  CONTRACT_DATA_DISABLED_ERROR,\n  OFFLINE_FOR_MAINTENANCE,\n  SLIPPAGE_VERY_HIGH_ERROR,\n  SLIPPAGE_HIGH_ERROR,\n  SLIPPAGE_LOW_ERROR,\n  SLIPPAGE_NEGATIVE_ERROR,\n} from '../../../../shared/constants/swaps';\nimport { setTransactionSettingsOpened } from '../../../ducks/swaps/swaps';\n\nexport default function SwapsBannerAlert({\n  swapsErrorKey,\n  showTransactionSettingsLink,\n  currentSlippage,\n}) {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  let severity = SEVERITIES.DANGER;\n  let title;\n  let description;\n\n  const transactionSettingsLink = (\n    <Text variant={TextVariant.bodyMd}>\n      <ButtonLink\n        onClick={(e) => {\n          e.preventDefault();\n          dispatch(setTransactionSettingsOpened(true));\n        }}\n        size={ButtonLinkSize.Inherit}\n      >\n        {t('swapAdjustSlippage')}\n      </ButtonLink>\n    </Text>\n  );\n\n  switch (swapsErrorKey) {\n    case SLIPPAGE_VERY_HIGH_ERROR:\n      title = t('swapSlippageOverLimitTitle');\n      description = (\n        <Box>\n          <Text variant={TextVariant.bodyMd} as=\"h6\">\n            {t('swapSlippageOverLimitDescription')}\n          </Text>\n          {transactionSettingsLink}\n        </Box>\n      );\n      break;\n    case SLIPPAGE_HIGH_ERROR:\n      severity = SEVERITIES.WARNING;\n      title = t('swapSlippageHighTitle');\n      description = (\n        <Box>\n          <Text variant={TextVariant.bodyMd} as=\"h6\">\n            {t('swapSlippageHighDescription', [currentSlippage])}\n          </Text>\n          {showTransactionSettingsLink && transactionSettingsLink}\n        </Box>\n      );\n      break;\n    case SLIPPAGE_LOW_ERROR:\n      severity = SEVERITIES.WARNING;\n      title = t('swapSlippageLowTitle');\n      description = (\n        <Box>\n          <Text variant={TextVariant.bodyMd} as=\"h6\">\n            {t('swapSlippageLowDescription', [currentSlippage])}\n          </Text>\n          {showTransactionSettingsLink && transactionSettingsLink}\n        </Box>\n      );\n      break;\n    case SLIPPAGE_NEGATIVE_ERROR:\n      title = t('swapSlippageNegativeTitle');\n      description = (\n        <Box>\n          <Text variant={TextVariant.bodyMd} as=\"h6\">\n            {t('swapSlippageNegativeDescription')}\n          </Text>\n          {transactionSettingsLink}\n        </Box>\n      );\n      break;\n    case QUOTES_NOT_AVAILABLE_ERROR:\n      title = t('swapQuotesNotAvailableErrorTitle');\n      description = (\n        <Box>\n          <Text variant={TextVariant.bodyMd} as=\"h6\">\n            {t('swapQuotesNotAvailableDescription')}\n          </Text>\n          <ButtonLink\n            size={ButtonLinkSize.Inherit}\n            textProps={{\n              variant: TextVariant.bodyMd,\n              alignItems: AlignItems.flexStart,\n            }}\n            as=\"a\"\n            href=\"https://support.metamask.io/token-swaps/user-guide-swaps/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('swapLearnMore')}\n          </ButtonLink>\n        </Box>\n      );\n      break;\n    case ERROR_FETCHING_QUOTES:\n      title = t('swapFetchingQuotesErrorTitle');\n      description = (\n        <Text variant={TextVariant.bodyMd} as=\"h6\">\n          {t('swapFetchingQuotesErrorDescription')}\n        </Text>\n      );\n      break;\n    case CONTRACT_DATA_DISABLED_ERROR:\n      title = t('swapContractDataDisabledErrorTitle');\n      description = (\n        <Text variant={TextVariant.bodyMd} as=\"h6\">\n          {t('swapContractDataDisabledErrorDescription')}\n        </Text>\n      );\n      break;\n    case QUOTES_EXPIRED_ERROR:\n      title = t('swapQuotesExpiredErrorTitle');\n      description = (\n        <Text variant={TextVariant.bodyMd} as=\"h6\">\n          {t('swapQuotesExpiredErrorDescription')}\n        </Text>\n      );\n      break;\n    case OFFLINE_FOR_MAINTENANCE:\n      title = t('offlineForMaintenance');\n      description = (\n        <Text variant={TextVariant.bodyMd} as=\"h6\">\n          {t('metamaskSwapsOfflineDescription')}\n        </Text>\n      );\n      break;\n    case SWAP_FAILED_ERROR:\n      title = t('swapFailedErrorTitle');\n      break;\n    default:\n  }\n\n  return (\n    <BannerAlert\n      severity={severity}\n      title={title}\n      titleProps={{ 'data-testid': 'swaps-banner-title' }}\n    >\n      {description}\n    </BannerAlert>\n  );\n}\n\nSwapsBannerAlert.propTypes = {\n  swapsErrorKey: PropTypes.string,\n  showTransactionSettingsLink: PropTypes.bool,\n  currentSlippage: PropTypes.number,\n};\n","export { default } from './swaps-footer';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { I18nContext } from '../../../contexts/i18n';\n\nimport PageContainerFooter from '../../../components/ui/page-container/page-container-footer';\n\nexport default function SwapsFooter({\n  onCancel,\n  hideCancel,\n  onSubmit,\n  submitText,\n  disabled,\n  showTermsOfService,\n  showTopBorder,\n  className = '',\n  cancelText,\n}) {\n  const t = useContext(I18nContext);\n\n  return (\n    <div className=\"swaps-footer\">\n      <div\n        className={classnames('swaps-footer__buttons', className, {\n          'swaps-footer__buttons--border': showTopBorder,\n        })}\n      >\n        <PageContainerFooter\n          onCancel={onCancel}\n          hideCancel={hideCancel}\n          cancelText={cancelText || t('back')}\n          onSubmit={onSubmit}\n          submitText={submitText}\n          footerClassName={classnames(\n            'swaps-footer__custom-page-container-footer-class',\n            className,\n          )}\n          footerButtonClassName={classnames(\n            'swaps-footer__custom-page-container-footer-button-class',\n            {\n              'swaps-footer__custom-page-container-footer-button-class--single':\n                hideCancel,\n            },\n          )}\n          disabled={disabled}\n        />\n      </div>\n      {showTermsOfService && (\n        <div\n          className=\"swaps-footer__bottom-text\"\n          onClick={() =>\n            global.platform.openTab({ url: 'https://metamask.io/terms.html' })\n          }\n        >\n          {t('termsOfService')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nSwapsFooter.propTypes = {\n  onCancel: PropTypes.func,\n  hideCancel: PropTypes.bool,\n  onSubmit: PropTypes.func,\n  submitText: PropTypes.string,\n  disabled: PropTypes.bool,\n  showTermsOfService: PropTypes.bool,\n  showTopBorder: PropTypes.bool,\n  className: PropTypes.string,\n  cancelText: PropTypes.string,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport ButtonGroup from '../../../components/ui/button-group';\nimport Button from '../../../components/ui/button';\nimport InfoTooltip from '../../../components/ui/info-tooltip';\nimport Box from '../../../components/ui/box';\nimport Typography from '../../../components/ui/typography';\nimport {\n  TypographyVariant,\n  AlignItems,\n  JustifyContent,\n  DISPLAY,\n  SEVERITIES,\n  FlexDirection,\n} from '../../../helpers/constants/design-system';\nimport {\n  Slippage,\n  SLIPPAGE_VERY_HIGH_ERROR,\n  SLIPPAGE_NEGATIVE_ERROR,\n} from '../../../../shared/constants/swaps';\nimport {\n  BannerAlert,\n  Modal,\n  ModalOverlay,\n  ButtonPrimary,\n} from '../../../components/component-library';\nimport { ModalContent } from '../../../components/component-library/modal-content/deprecated';\nimport { ModalHeader } from '../../../components/component-library/modal-header/deprecated';\nimport { setSwapsErrorKey } from '../../../store/actions';\nimport { getSwapsErrorKey } from '../../../ducks/swaps/swaps';\n\nexport default function TransactionSettings({\n  onSelect,\n  onModalClose,\n  maxAllowedSlippage,\n  currentSlippage,\n  isDirectWrappingEnabled,\n}) {\n  const t = useContext(I18nContext);\n  const dispatch = useDispatch();\n  const swapsErrorKey = useSelector(getSwapsErrorKey);\n  const [customValue, setCustomValue] = useState(() => {\n    if (\n      typeof currentSlippage === 'number' &&\n      !Object.values(Slippage).includes(currentSlippage)\n    ) {\n      return currentSlippage.toString();\n    }\n    return '';\n  });\n  const [enteringCustomValue, setEnteringCustomValue] = useState(false);\n  const [activeButtonIndex, setActiveButtonIndex] = useState(() => {\n    if (currentSlippage === Slippage.high) {\n      return 1; // 3% slippage.\n    } else if (currentSlippage === Slippage.default) {\n      return 0; // 2% slippage.\n    } else if (typeof currentSlippage === 'number') {\n      return 2; // Custom slippage.\n    }\n    return 0;\n  });\n  const [inputRef, setInputRef] = useState(null);\n  const [newSlippage, setNewSlippage] = useState(currentSlippage);\n\n  const didFormChange = newSlippage !== currentSlippage;\n\n  const updateTransactionSettings = () => {\n    if (newSlippage !== currentSlippage) {\n      onSelect(newSlippage);\n    }\n  };\n\n  let notificationText = '';\n  let notificationTitle = '';\n  let notificationSeverity = SEVERITIES.INFO;\n  if (customValue) {\n    // customValue is a string, e.g. '0'\n    if (Number(customValue) < 0) {\n      notificationSeverity = SEVERITIES.DANGER;\n      notificationText = t('swapSlippageNegativeDescription');\n      notificationTitle = t('swapSlippageNegativeTitle');\n      dispatch(setSwapsErrorKey(SLIPPAGE_NEGATIVE_ERROR));\n    } else if (Number(customValue) > 0 && Number(customValue) <= 1) {\n      // We will not show this warning for 0% slippage, because we will only\n      // return non-slippage quotes from off-chain makers.\n      notificationSeverity = SEVERITIES.WARNING;\n      notificationText = t('swapSlippageLowDescription', [newSlippage]);\n      notificationTitle = t('swapSlippageLowTitle');\n    } else if (\n      Number(customValue) >= 5 &&\n      Number(customValue) <= maxAllowedSlippage\n    ) {\n      notificationSeverity = SEVERITIES.WARNING;\n      notificationText = t('swapSlippageHighDescription', [newSlippage]);\n      notificationTitle = t('swapSlippageHighTitle');\n    } else if (Number(customValue) > maxAllowedSlippage) {\n      notificationSeverity = SEVERITIES.DANGER;\n      notificationText = t('swapSlippageOverLimitDescription');\n      notificationTitle = t('swapSlippageOverLimitTitle');\n      dispatch(setSwapsErrorKey(SLIPPAGE_VERY_HIGH_ERROR));\n    } else if (Number(customValue) === 0) {\n      notificationSeverity = SEVERITIES.INFO;\n      notificationText = t('swapSlippageZeroDescription');\n      notificationTitle = t('swapSlippageZeroTitle');\n    } else if (swapsErrorKey) {\n      dispatch(setSwapsErrorKey(''));\n    }\n  }\n  const isDangerSeverity = notificationSeverity === SEVERITIES.DANGER;\n\n  const customValueText = customValue || t('swapCustom');\n\n  useEffect(() => {\n    if (\n      inputRef &&\n      enteringCustomValue &&\n      window.document.activeElement !== inputRef\n    ) {\n      inputRef.focus();\n    }\n  }, [inputRef, enteringCustomValue]);\n\n  useEffect(() => {\n    if (activeButtonIndex !== 2) {\n      // If it's not a custom slippage, remove an error key.\n      dispatch(setSwapsErrorKey(''));\n    }\n  }, [dispatch, activeButtonIndex]);\n\n  return (\n    <Modal\n      onClose={onModalClose}\n      isOpen\n      isClosedOnOutsideClick={false}\n      isClosedOnEscapeKey\n      className=\"mm-modal__custom-scrollbar\"\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader onClose={onModalClose}>\n          {t('transactionSettings')}\n        </ModalHeader>\n        <Box\n          display={DISPLAY.FLEX}\n          flexDirection={FlexDirection.Column}\n          justifyContent={JustifyContent.spaceBetween}\n          alignItems={AlignItems.stretch}\n          className=\"transaction-settings__content\"\n        >\n          <Box marginTop={7} marginBottom={5}>\n            <>\n              {!isDirectWrappingEnabled && (\n                <>\n                  <Box display={DISPLAY.FLEX} alignItems={AlignItems.center}>\n                    <Typography\n                      variant={TypographyVariant.H6}\n                      boxProps={{ paddingRight: 2 }}\n                    >\n                      {t('swapsMaxSlippage')}\n                    </Typography>\n                    <InfoTooltip\n                      position=\"top\"\n                      iconFillColor=\"var(--color-icon-muted)\"\n                      contentText={t('swapSlippageTooltip')}\n                    />\n                  </Box>\n                  <Box display={DISPLAY.FLEX}>\n                    <ButtonGroup\n                      defaultActiveButtonIndex={\n                        activeButtonIndex === 2 && !customValue\n                          ? 1\n                          : activeButtonIndex\n                      }\n                      variant=\"radiogroup\"\n                      newActiveButtonIndex={activeButtonIndex}\n                      className={classnames(\n                        'button-group',\n                        'transaction-settings__button-group',\n                      )}\n                    >\n                      <Button\n                        onClick={() => {\n                          setCustomValue('');\n                          setEnteringCustomValue(false);\n                          setActiveButtonIndex(0);\n                          setNewSlippage(Slippage.default);\n                        }}\n                      >\n                        {t('swapSlippagePercent', [Slippage.default])}\n                      </Button>\n                      <Button\n                        onClick={() => {\n                          setCustomValue('');\n                          setEnteringCustomValue(false);\n                          setActiveButtonIndex(1);\n                          setNewSlippage(Slippage.high);\n                        }}\n                      >\n                        {t('swapSlippagePercent', [Slippage.high])}\n                      </Button>\n                      <Button\n                        className={classnames(\n                          'transaction-settings__button-group-custom-button',\n                          {\n                            'radio-button--danger': isDangerSeverity,\n                          },\n                        )}\n                        onClick={() => {\n                          setActiveButtonIndex(2);\n                          setEnteringCustomValue(true);\n                        }}\n                      >\n                        {enteringCustomValue ? (\n                          <div\n                            className={classnames(\n                              'transaction-settings__custom-input',\n                              {\n                                'transaction-settings__custom-input--danger':\n                                  isDangerSeverity,\n                              },\n                            )}\n                          >\n                            <input\n                              data-testid=\"transaction-settings-custom-slippage\"\n                              onChange={(event) => {\n                                const { value } = event.target;\n                                const isValueNumeric = !isNaN(Number(value));\n                                if (isValueNumeric) {\n                                  setCustomValue(value);\n                                  setNewSlippage(Number(value));\n                                }\n                              }}\n                              type=\"text\"\n                              maxLength=\"4\"\n                              ref={setInputRef}\n                              onBlur={() => {\n                                setEnteringCustomValue(false);\n                              }}\n                              onKeyDown={(event) => {\n                                if (event.key === 'Enter') {\n                                  setEnteringCustomValue(false);\n                                }\n                              }}\n                              value={customValue || ''}\n                            />\n                          </div>\n                        ) : (\n                          customValueText\n                        )}\n                        {(customValue || enteringCustomValue) && (\n                          <div className=\"transaction-settings__percentage-suffix\">\n                            %\n                          </div>\n                        )}\n                      </Button>\n                    </ButtonGroup>\n                  </Box>\n                </>\n              )}\n            </>\n            {notificationText && (\n              <Box marginTop={5}>\n                <BannerAlert\n                  severity={notificationSeverity}\n                  title={notificationTitle}\n                  titleProps={{ 'data-testid': 'swaps-banner-title' }}\n                >\n                  <Typography\n                    variant={TypographyVariant.H6}\n                    testId=\"mm-banner-alert-notification-text\"\n                  >\n                    {notificationText}\n                  </Typography>\n                </BannerAlert>\n              </Box>\n            )}\n          </Box>\n          <Box marginTop={5}>\n            <ButtonPrimary\n              onClick={() => {\n                updateTransactionSettings();\n                onModalClose();\n              }}\n              block\n              disabled={!didFormChange}\n              data-testid=\"update-transaction-settings-button\"\n            >\n              {t('update')}\n            </ButtonPrimary>\n          </Box>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nTransactionSettings.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  onModalClose: PropTypes.func.isRequired,\n  maxAllowedSlippage: PropTypes.number.isRequired,\n  currentSlippage: PropTypes.number,\n  isDirectWrappingEnabled: PropTypes.bool,\n};\n","export { default } from './view-on-block-explorer';\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '../../../components/ui/box';\nimport { I18nContext } from '../../../contexts/i18n';\nimport { getURLHostName } from '../../../helpers/utils/util';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport {\n  MetaMetricsEventCategory,\n  MetaMetricsEventLinkType,\n  MetaMetricsEventName,\n} from '../../../../shared/constants/metametrics';\n\nexport default function ViewOnBlockExplorer({\n  blockExplorerUrl,\n  sensitiveTrackingProperties,\n}) {\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n  const blockExplorerHostName = getURLHostName(blockExplorerUrl);\n\n  return (\n    <Box marginTop={6} className=\"view-on-block-explorer\">\n      <button\n        onClick={() => {\n          trackEvent({\n            event: MetaMetricsEventName.ExternalLinkClicked,\n            category: MetaMetricsEventCategory.Swaps,\n            sensitiveProperties: sensitiveTrackingProperties,\n            properties: {\n              link_type: MetaMetricsEventLinkType.TransactionBlockExplorer,\n              location: 'Swap Transaction',\n              url_domain: blockExplorerHostName,\n            },\n          });\n          global.platform.openTab({ url: blockExplorerUrl });\n        }}\n      >\n        {t('viewOnCustomBlockExplorer', [\n          t('blockExplorerSwapAction'),\n          blockExplorerHostName,\n        ])}\n      </button>\n    </Box>\n  );\n}\n\nViewOnBlockExplorer.propTypes = {\n  blockExplorerUrl: PropTypes.string.isRequired,\n  sensitiveTrackingProperties: PropTypes.object.isRequired,\n};\n","export { default } from './view-quote';\n","import React, { useContext } from 'react';\n\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { I18nContext } from '../../../contexts/i18n';\n\nimport ActionableMessage from '../../../components/ui/actionable-message/actionable-message';\nimport Tooltip from '../../../components/ui/tooltip';\nimport Box from '../../../components/ui/box';\nimport {\n  JustifyContent,\n  DISPLAY,\n} from '../../../helpers/constants/design-system';\nimport { GasRecommendations } from '../../../../shared/constants/gas';\nimport { Icon, IconName } from '../../../components/component-library';\n\nexport default function ViewQuotePriceDifference(props) {\n  const {\n    usedQuote,\n    sourceTokenValue,\n    destinationTokenValue,\n    onAcknowledgementClick,\n    acknowledged,\n    priceSlippageFromSource,\n    priceSlippageFromDestination,\n    priceDifferencePercentage,\n    priceSlippageUnknownFiatValue,\n  } = props;\n\n  const t = useContext(I18nContext);\n\n  let priceDifferenceTitle = '';\n  let priceDifferenceMessage = '';\n  let priceDifferenceClass = '';\n  let priceDifferenceAcknowledgementText = '';\n  if (priceSlippageUnknownFiatValue) {\n    // A calculation error signals we cannot determine dollar value\n    priceDifferenceTitle = t('swapPriceUnavailableTitle');\n    priceDifferenceMessage = t('swapPriceUnavailableDescription');\n    priceDifferenceClass = GasRecommendations.high;\n    priceDifferenceAcknowledgementText = t('tooltipApproveButton');\n  } else {\n    priceDifferenceTitle = t('swapPriceDifferenceTitle', [\n      priceDifferencePercentage,\n    ]);\n    priceDifferenceMessage = t('swapPriceDifference', [\n      sourceTokenValue, // Number of source token to swap\n      usedQuote.sourceTokenInfo.symbol, // Source token symbol\n      priceSlippageFromSource, // Source tokens total value\n      destinationTokenValue, // Number of destination tokens in return\n      usedQuote.destinationTokenInfo.symbol, // Destination token symbol,\n      priceSlippageFromDestination, // Destination tokens total value\n    ]);\n    priceDifferenceClass = usedQuote.priceSlippage.bucket;\n    priceDifferenceAcknowledgementText = t('tooltipApproveButton');\n  }\n\n  return (\n    <div\n      className={classnames(\n        'view-quote__price-difference-warning-wrapper',\n        priceDifferenceClass,\n      )}\n    >\n      <ActionableMessage\n        message={\n          <div className=\"view-quote__price-difference-warning-contents\">\n            <div className=\"view-quote__price-difference-warning-contents-text\">\n              <Box\n                display={DISPLAY.FLEX}\n                justifyContent={JustifyContent.spaceBetween}\n                paddingBottom={2}\n              >\n                <div className=\"view-quote__price-difference-warning-contents-title\">\n                  {priceDifferenceTitle}\n                </div>\n                <Tooltip position=\"bottom\" title={t('swapPriceImpactTooltip')}>\n                  <Icon name={IconName.Info} />\n                </Tooltip>\n              </Box>\n              {priceDifferenceMessage}\n              {!acknowledged && (\n                <div className=\"view-quote__price-difference-warning-contents-actions\">\n                  <button\n                    onClick={() => {\n                      onAcknowledgementClick();\n                    }}\n                  >\n                    {priceDifferenceAcknowledgementText}\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        }\n      />\n    </div>\n  );\n}\n\nViewQuotePriceDifference.propTypes = {\n  usedQuote: PropTypes.object,\n  sourceTokenValue: PropTypes.string,\n  destinationTokenValue: PropTypes.string,\n  onAcknowledgementClick: PropTypes.func,\n  acknowledged: PropTypes.bool,\n  priceSlippageFromSource: PropTypes.string,\n  priceSlippageFromDestination: PropTypes.string,\n  priceDifferencePercentage: PropTypes.number,\n  priceSlippageUnknownFiatValue: PropTypes.bool,\n};\n","import React, {\n  useState,\n  useContext,\n  useMemo,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { isEqual } from 'lodash';\nimport classnames from 'classnames';\nimport { captureException } from '@sentry/browser';\n\nimport { I18nContext } from '../../../contexts/i18n';\nimport SelectQuotePopover from '../select-quote-popover';\nimport { useEthFiatAmount } from '../../../hooks/useEthFiatAmount';\nimport { useEqualityCheck } from '../../../hooks/useEqualityCheck';\nimport { usePrevious } from '../../../hooks/usePrevious';\nimport { useGasFeeInputs } from '../../confirmations/hooks/useGasFeeInputs';\nimport { MetaMetricsContext } from '../../../contexts/metametrics';\nimport FeeCard from '../fee-card';\nimport {\n  getQuotes,\n  getSelectedQuote,\n  getApproveTxParams,\n  getFetchParams,\n  setBalanceError,\n  getQuotesLastFetched,\n  getBalanceError,\n  getCustomSwapsGas, // Gas limit.\n  getCustomMaxFeePerGas,\n  getCustomMaxPriorityFeePerGas,\n  getSwapsUserFeeLevel,\n  getDestinationTokenInfo,\n  getUsedSwapsGasPrice,\n  getTopQuote,\n  signAndSendTransactions,\n  getBackgroundSwapRouteState,\n  swapsQuoteSelected,\n  getSwapsQuoteRefreshTime,\n  getReviewSwapClickedTimestamp,\n  signAndSendSwapsSmartTransaction,\n  getSwapsNetworkConfig,\n  getSmartTransactionsError,\n  getCurrentSmartTransactionsError,\n  getSwapsSTXLoading,\n  fetchSwapsSmartTransactionFees,\n  getSmartTransactionFees,\n  getCurrentSmartTransactionsEnabled,\n} from '../../../ducks/swaps/swaps';\nimport {\n  conversionRateSelector,\n  getSelectedAccount,\n  getCurrentCurrency,\n  getTokenExchangeRates,\n  getSwapsDefaultToken,\n  getCurrentChainId,\n  isHardwareWallet,\n  getHardwareWalletType,\n  checkNetworkAndAccountSupports1559,\n  getUSDConversionRate,\n} from '../../../selectors';\nimport {\n  getSmartTransactionsOptInStatus,\n  getSmartTransactionsEnabled,\n} from '../../../../shared/modules/selectors';\nimport { getNativeCurrency, getTokens } from '../../../ducks/metamask/metamask';\nimport {\n  getLayer1GasFee,\n  safeRefetchQuotes,\n  setCustomApproveTxData,\n  setSwapsErrorKey,\n  showModal,\n  setSwapsQuotesPollingLimitEnabled,\n} from '../../../store/actions';\nimport { SET_SMART_TRANSACTIONS_ERROR } from '../../../store/actionConstants';\nimport {\n  ASSET_ROUTE,\n  BUILD_QUOTE_ROUTE,\n  DEFAULT_ROUTE,\n  SWAPS_ERROR_ROUTE,\n  AWAITING_SWAP_ROUTE,\n} from '../../../helpers/constants/routes';\nimport MainQuoteSummary from '../main-quote-summary';\nimport { getCustomTxParamsData } from '../../confirmations/confirm-approve/confirm-approve.util';\nimport ActionableMessage from '../../../components/ui/actionable-message/actionable-message';\nimport {\n  quotesToRenderableData,\n  getRenderableNetworkFeesForQuote,\n  getFeeForSmartTransaction,\n} from '../swaps.util';\nimport { useTokenTracker } from '../../../hooks/useTokenTracker';\nimport { QUOTES_EXPIRED_ERROR } from '../../../../shared/constants/swaps';\nimport { GasRecommendations } from '../../../../shared/constants/gas';\nimport CountdownTimer from '../countdown-timer';\nimport SwapsFooter from '../swaps-footer';\nimport PulseLoader from '../../../components/ui/pulse-loader'; // TODO: Replace this with a different loading component.\nimport Box from '../../../components/ui/box';\nimport { MetaMetricsEventCategory } from '../../../../shared/constants/metametrics';\nimport { isEqualCaseInsensitive } from '../../../../shared/modules/string-utils';\nimport { parseStandardTokenTransactionData } from '../../../../shared/modules/transaction.utils';\nimport { getTokenValueParam } from '../../../../shared/lib/metamask-controller-utils';\nimport {\n  calcGasTotal,\n  calcTokenAmount,\n  toPrecisionWithoutTrailingZeros,\n} from '../../../../shared/lib/transactions-controller-utils';\nimport { addHexPrefix } from '../../../../app/scripts/lib/util';\nimport {\n  calcTokenValue,\n  calculateMaxGasLimit,\n} from '../../../../shared/lib/swaps-utils';\nimport {\n  addHexes,\n  decGWEIToHexWEI,\n  decimalToHex,\n  decWEIToDecETH,\n  hexWEIToDecGWEI,\n  sumHexes,\n} from '../../../../shared/modules/conversion.utils';\nimport ViewQuotePriceDifference from './view-quote-price-difference';\n\nlet intervalId;\n\nexport default function ViewQuote() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const t = useContext(I18nContext);\n  const trackEvent = useContext(MetaMetricsContext);\n\n  const [dispatchedSafeRefetch, setDispatchedSafeRefetch] = useState(false);\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [selectQuotePopoverShown, setSelectQuotePopoverShown] = useState(false);\n  const [warningHidden, setWarningHidden] = useState(false);\n  const [originalApproveAmount, setOriginalApproveAmount] = useState(null);\n  const [multiLayerL1FeeTotal, setMultiLayerL1FeeTotal] = useState(null);\n  const [multiLayerL1ApprovalFeeTotal, setMultiLayerL1ApprovalFeeTotal] =\n    useState(null);\n  // We need to have currentTimestamp in state, otherwise it would change with each rerender.\n  const [currentTimestamp] = useState(Date.now());\n\n  const [acknowledgedPriceDifference, setAcknowledgedPriceDifference] =\n    useState(false);\n  const priceDifferenceRiskyBuckets = [\n    GasRecommendations.high,\n    GasRecommendations.medium,\n  ];\n\n  const routeState = useSelector(getBackgroundSwapRouteState);\n  const quotes = useSelector(getQuotes, isEqual);\n  useEffect(() => {\n    if (!Object.values(quotes).length) {\n      history.push(BUILD_QUOTE_ROUTE);\n    } else if (routeState === 'awaiting') {\n      history.push(AWAITING_SWAP_ROUTE);\n    }\n  }, [history, quotes, routeState]);\n\n  const quotesLastFetched = useSelector(getQuotesLastFetched);\n\n  // Select necessary data\n  const gasPrice = useSelector(getUsedSwapsGasPrice);\n  const customMaxGas = useSelector(getCustomSwapsGas);\n  const customMaxFeePerGas = useSelector(getCustomMaxFeePerGas);\n  const customMaxPriorityFeePerGas = useSelector(getCustomMaxPriorityFeePerGas);\n  const swapsUserFeeLevel = useSelector(getSwapsUserFeeLevel);\n  const tokenConversionRates = useSelector(getTokenExchangeRates, isEqual);\n  const memoizedTokenConversionRates = useEqualityCheck(tokenConversionRates);\n  const { balance: ethBalance } = useSelector(getSelectedAccount, shallowEqual);\n  const conversionRate = useSelector(conversionRateSelector);\n  const USDConversionRate = useSelector(getUSDConversionRate);\n  const currentCurrency = useSelector(getCurrentCurrency);\n  const swapsTokens = useSelector(getTokens, isEqual);\n  const networkAndAccountSupports1559 = useSelector(\n    checkNetworkAndAccountSupports1559,\n  );\n  const balanceError = useSelector(getBalanceError);\n  const fetchParams = useSelector(getFetchParams, isEqual);\n  const approveTxParams = useSelector(getApproveTxParams, shallowEqual);\n  const selectedQuote = useSelector(getSelectedQuote, isEqual);\n  const topQuote = useSelector(getTopQuote, isEqual);\n  const usedQuote = selectedQuote || topQuote;\n  const tradeValue = usedQuote?.trade?.value ?? '0x0';\n  const swapsQuoteRefreshTime = useSelector(getSwapsQuoteRefreshTime);\n  const defaultSwapsToken = useSelector(getSwapsDefaultToken, isEqual);\n  const chainId = useSelector(getCurrentChainId);\n  const nativeCurrencySymbol = useSelector(getNativeCurrency);\n  const reviewSwapClickedTimestamp = useSelector(getReviewSwapClickedTimestamp);\n  const smartTransactionsOptInStatus = useSelector(\n    getSmartTransactionsOptInStatus,\n  );\n  const smartTransactionsEnabled = useSelector(getSmartTransactionsEnabled);\n  const swapsSTXLoading = useSelector(getSwapsSTXLoading);\n  const currentSmartTransactionsError = useSelector(\n    getCurrentSmartTransactionsError,\n  );\n  const smartTransactionsError = useSelector(getSmartTransactionsError);\n  const smartTransactionFees = useSelector(getSmartTransactionFees, isEqual);\n  const currentSmartTransactionsEnabled = useSelector(\n    getCurrentSmartTransactionsEnabled,\n  );\n  const swapsNetworkConfig = useSelector(getSwapsNetworkConfig, shallowEqual);\n  const unsignedTransaction = usedQuote.trade;\n  const isSmartTransaction =\n    currentSmartTransactionsEnabled && smartTransactionsOptInStatus;\n\n  let gasFeeInputs;\n  if (networkAndAccountSupports1559) {\n    // For Swaps we want to get 'high' estimations by default.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    gasFeeInputs = useGasFeeInputs(GasRecommendations.high, {\n      userFeeLevel: swapsUserFeeLevel || GasRecommendations.high,\n    });\n  }\n\n  const fetchParamsSourceToken = fetchParams?.sourceToken;\n\n  const additionalTrackingParams = {\n    reg_tx_fee_in_usd: undefined,\n    reg_tx_fee_in_eth: undefined,\n    reg_tx_max_fee_in_usd: undefined,\n    reg_tx_max_fee_in_eth: undefined,\n    stx_fee_in_usd: undefined,\n    stx_fee_in_eth: undefined,\n    stx_max_fee_in_usd: undefined,\n    stx_max_fee_in_eth: undefined,\n  };\n\n  const usedGasLimit =\n    usedQuote?.gasEstimateWithRefund ||\n    `0x${decimalToHex(usedQuote?.averageGas || 0)}`;\n\n  const maxGasLimit = calculateMaxGasLimit(\n    usedQuote?.gasEstimate,\n    usedQuote?.gasMultiplier,\n    usedQuote?.maxGas,\n    customMaxGas,\n  );\n\n  let maxFeePerGas;\n  let maxPriorityFeePerGas;\n  let baseAndPriorityFeePerGas;\n\n  // EIP-1559 gas fees.\n  if (networkAndAccountSupports1559) {\n    const {\n      maxFeePerGas: suggestedMaxFeePerGas,\n      maxPriorityFeePerGas: suggestedMaxPriorityFeePerGas,\n      gasFeeEstimates,\n    } = gasFeeInputs;\n    const estimatedBaseFee = gasFeeEstimates?.estimatedBaseFee ?? '0';\n    maxFeePerGas = customMaxFeePerGas || decGWEIToHexWEI(suggestedMaxFeePerGas);\n    maxPriorityFeePerGas =\n      customMaxPriorityFeePerGas ||\n      decGWEIToHexWEI(suggestedMaxPriorityFeePerGas);\n    baseAndPriorityFeePerGas = addHexes(\n      decGWEIToHexWEI(estimatedBaseFee),\n      maxPriorityFeePerGas,\n    );\n  }\n  let gasTotalInWeiHex = calcGasTotal(maxGasLimit, maxFeePerGas || gasPrice);\n  if (multiLayerL1FeeTotal !== null) {\n    gasTotalInWeiHex = sumHexes(\n      gasTotalInWeiHex || '0x0',\n      multiLayerL1FeeTotal || '0x0',\n    );\n  }\n\n  const { tokensWithBalances } = useTokenTracker({\n    tokens: swapsTokens,\n    includeFailedTokens: true,\n  });\n  const balanceToken =\n    fetchParamsSourceToken === defaultSwapsToken.address\n      ? defaultSwapsToken\n      : tokensWithBalances.find(({ address }) =>\n          isEqualCaseInsensitive(address, fetchParamsSourceToken),\n        );\n\n  const selectedFromToken = balanceToken || usedQuote.sourceTokenInfo;\n  const tokenBalance =\n    tokensWithBalances?.length &&\n    calcTokenAmount(\n      selectedFromToken.balance || '0x0',\n      selectedFromToken.decimals,\n    ).toFixed(9);\n  const tokenBalanceUnavailable =\n    tokensWithBalances && balanceToken === undefined;\n\n  const approveData = parseStandardTokenTransactionData(approveTxParams?.data);\n  const approveValue = approveData && getTokenValueParam(approveData);\n  const approveAmount =\n    approveValue &&\n    selectedFromToken?.decimals !== undefined &&\n    calcTokenAmount(approveValue, selectedFromToken.decimals).toFixed(9);\n  const approveGas = approveTxParams?.gas;\n\n  const renderablePopoverData = useMemo(() => {\n    return quotesToRenderableData({\n      quotes,\n      gasPrice: networkAndAccountSupports1559\n        ? baseAndPriorityFeePerGas\n        : gasPrice,\n      conversionRate,\n      currentCurrency,\n      approveGas,\n      tokenConversionRates: memoizedTokenConversionRates,\n      chainId,\n      smartTransactionEstimatedGas:\n        smartTransactionsEnabled &&\n        smartTransactionsOptInStatus &&\n        smartTransactionFees?.tradeTxFees,\n      nativeCurrencySymbol,\n      multiLayerL1ApprovalFeeTotal,\n    });\n  }, [\n    quotes,\n    gasPrice,\n    baseAndPriorityFeePerGas,\n    networkAndAccountSupports1559,\n    conversionRate,\n    currentCurrency,\n    approveGas,\n    memoizedTokenConversionRates,\n    chainId,\n    smartTransactionFees?.tradeTxFees,\n    nativeCurrencySymbol,\n    smartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n    multiLayerL1ApprovalFeeTotal,\n  ]);\n\n  const renderableDataForUsedQuote = renderablePopoverData.find(\n    (renderablePopoverDatum) =>\n      renderablePopoverDatum.aggId === usedQuote.aggregator,\n  );\n\n  const {\n    destinationTokenDecimals,\n    destinationTokenSymbol,\n    destinationTokenValue,\n    destinationIconUrl,\n    sourceTokenDecimals,\n    sourceTokenSymbol,\n    sourceTokenValue,\n    sourceTokenIconUrl,\n  } = renderableDataForUsedQuote;\n\n  let { feeInFiat, feeInEth, rawEthFee, feeInUsd } =\n    getRenderableNetworkFeesForQuote({\n      tradeGas: usedGasLimit,\n      approveGas,\n      gasPrice: networkAndAccountSupports1559\n        ? baseAndPriorityFeePerGas\n        : gasPrice,\n      currentCurrency,\n      conversionRate,\n      USDConversionRate,\n      tradeValue,\n      sourceSymbol: sourceTokenSymbol,\n      sourceAmount: usedQuote.sourceAmount,\n      chainId,\n      nativeCurrencySymbol,\n      multiLayerL1FeeTotal,\n    });\n  additionalTrackingParams.reg_tx_fee_in_usd = Number(feeInUsd);\n  additionalTrackingParams.reg_tx_fee_in_eth = Number(rawEthFee);\n\n  const renderableMaxFees = getRenderableNetworkFeesForQuote({\n    tradeGas: maxGasLimit,\n    approveGas,\n    gasPrice: maxFeePerGas || gasPrice,\n    currentCurrency,\n    conversionRate,\n    USDConversionRate,\n    tradeValue,\n    sourceSymbol: sourceTokenSymbol,\n    sourceAmount: usedQuote.sourceAmount,\n    chainId,\n    nativeCurrencySymbol,\n    multiLayerL1FeeTotal,\n  });\n  let {\n    feeInFiat: maxFeeInFiat,\n    feeInEth: maxFeeInEth,\n    rawEthFee: maxRawEthFee,\n    feeInUsd: maxFeeInUsd,\n  } = renderableMaxFees;\n  additionalTrackingParams.reg_tx_max_fee_in_usd = Number(maxFeeInUsd);\n  additionalTrackingParams.reg_tx_max_fee_in_eth = Number(maxRawEthFee);\n\n  if (\n    currentSmartTransactionsEnabled &&\n    smartTransactionsOptInStatus &&\n    smartTransactionFees?.tradeTxFees\n  ) {\n    const stxEstimatedFeeInWeiDec =\n      smartTransactionFees?.tradeTxFees.feeEstimate +\n      (smartTransactionFees?.approvalTxFees?.feeEstimate || 0);\n    const stxMaxFeeInWeiDec =\n      stxEstimatedFeeInWeiDec * swapsNetworkConfig.stxMaxFeeMultiplier;\n    ({ feeInFiat, feeInEth, rawEthFee, feeInUsd } = getFeeForSmartTransaction({\n      chainId,\n      currentCurrency,\n      conversionRate,\n      USDConversionRate,\n      nativeCurrencySymbol,\n      feeInWeiDec: stxEstimatedFeeInWeiDec,\n    }));\n    additionalTrackingParams.stx_fee_in_usd = Number(feeInUsd);\n    additionalTrackingParams.stx_fee_in_eth = Number(rawEthFee);\n    additionalTrackingParams.estimated_gas =\n      smartTransactionFees?.tradeTxFees.gasLimit;\n    ({\n      feeInFiat: maxFeeInFiat,\n      feeInEth: maxFeeInEth,\n      rawEthFee: maxRawEthFee,\n      feeInUsd: maxFeeInUsd,\n    } = getFeeForSmartTransaction({\n      chainId,\n      currentCurrency,\n      conversionRate,\n      USDConversionRate,\n      nativeCurrencySymbol,\n      feeInWeiDec: stxMaxFeeInWeiDec,\n    }));\n    additionalTrackingParams.stx_max_fee_in_usd = Number(maxFeeInUsd);\n    additionalTrackingParams.stx_max_fee_in_eth = Number(maxRawEthFee);\n  }\n\n  const tokenCost = new BigNumber(usedQuote.sourceAmount);\n  const ethCost = new BigNumber(usedQuote.trade.value || 0, 10).plus(\n    new BigNumber(gasTotalInWeiHex, 16),\n  );\n\n  const insufficientTokens =\n    (tokensWithBalances?.length || balanceError) &&\n    tokenCost.gt(new BigNumber(selectedFromToken.balance || '0x0'));\n\n  const insufficientEth = ethCost.gt(new BigNumber(ethBalance || '0x0'));\n\n  const tokenBalanceNeeded = insufficientTokens\n    ? toPrecisionWithoutTrailingZeros(\n        calcTokenAmount(tokenCost, selectedFromToken.decimals)\n          .minus(tokenBalance)\n          .toString(10),\n        6,\n      )\n    : null;\n\n  const ethBalanceNeeded = insufficientEth\n    ? toPrecisionWithoutTrailingZeros(\n        ethCost\n          .minus(ethBalance, 16)\n          .div('1000000000000000000', 10)\n          .toString(10),\n        6,\n      )\n    : null;\n\n  let ethBalanceNeededStx;\n  if (isSmartTransaction && smartTransactionsError?.balanceNeededWei) {\n    ethBalanceNeededStx = decWEIToDecETH(\n      smartTransactionsError.balanceNeededWei -\n        smartTransactionsError.currentBalanceWei,\n    );\n  }\n\n  const destinationToken = useSelector(getDestinationTokenInfo, isEqual);\n  useEffect(() => {\n    if (isSmartTransaction) {\n      if (insufficientTokens) {\n        dispatch(setBalanceError(true));\n      } else if (balanceError && !insufficientTokens) {\n        dispatch(setBalanceError(false));\n      }\n    } else if (insufficientTokens || insufficientEth) {\n      dispatch(setBalanceError(true));\n    } else if (balanceError && !insufficientTokens && !insufficientEth) {\n      dispatch(setBalanceError(false));\n    }\n  }, [\n    insufficientTokens,\n    insufficientEth,\n    balanceError,\n    dispatch,\n    isSmartTransaction,\n  ]);\n\n  useEffect(() => {\n    const currentTime = Date.now();\n    const timeSinceLastFetched = currentTime - quotesLastFetched;\n    if (\n      timeSinceLastFetched > swapsQuoteRefreshTime &&\n      !dispatchedSafeRefetch\n    ) {\n      setDispatchedSafeRefetch(true);\n      dispatch(safeRefetchQuotes());\n    } else if (timeSinceLastFetched > swapsQuoteRefreshTime) {\n      dispatch(setSwapsErrorKey(QUOTES_EXPIRED_ERROR));\n      history.push(SWAPS_ERROR_ROUTE);\n    }\n  }, [\n    quotesLastFetched,\n    dispatchedSafeRefetch,\n    dispatch,\n    history,\n    swapsQuoteRefreshTime,\n  ]);\n\n  useEffect(() => {\n    if (!originalApproveAmount && approveAmount) {\n      setOriginalApproveAmount(approveAmount);\n    }\n  }, [originalApproveAmount, approveAmount]);\n\n  // If it's not a Smart Transaction and ETH balance is needed, we want to show a warning.\n  const isNotStxAndEthBalanceIsNeeded =\n    (!currentSmartTransactionsEnabled || !smartTransactionsOptInStatus) &&\n    ethBalanceNeeded;\n\n  // If it's a Smart Transaction and ETH balance is needed, we want to show a warning.\n  const isStxAndEthBalanceIsNeeded = isSmartTransaction && ethBalanceNeededStx;\n\n  // Indicates if we should show to a user a warning about insufficient funds for swapping.\n  const showInsufficientWarning =\n    (balanceError ||\n      tokenBalanceNeeded ||\n      isNotStxAndEthBalanceIsNeeded ||\n      isStxAndEthBalanceIsNeeded) &&\n    !warningHidden;\n\n  const hardwareWalletUsed = useSelector(isHardwareWallet);\n  const hardwareWalletType = useSelector(getHardwareWalletType);\n\n  const numberOfQuotes = Object.values(quotes).length;\n  const bestQuoteReviewedEventSent = useRef();\n  const eventObjectBase = useMemo(() => {\n    return {\n      token_from: sourceTokenSymbol,\n      token_from_amount: sourceTokenValue,\n      token_to: destinationTokenSymbol,\n      token_to_amount: destinationTokenValue,\n      request_type: fetchParams?.balanceError,\n      slippage: fetchParams?.slippage,\n      custom_slippage: fetchParams?.slippage !== 2,\n      response_time: fetchParams?.responseTime,\n      best_quote_source: topQuote?.aggregator,\n      available_quotes: numberOfQuotes,\n      is_hardware_wallet: hardwareWalletUsed,\n      hardware_wallet_type: hardwareWalletType,\n      stx_enabled: smartTransactionsEnabled,\n      current_stx_enabled: currentSmartTransactionsEnabled,\n      stx_user_opt_in: smartTransactionsOptInStatus,\n    };\n  }, [\n    sourceTokenSymbol,\n    sourceTokenValue,\n    destinationTokenSymbol,\n    destinationTokenValue,\n    fetchParams?.balanceError,\n    fetchParams?.slippage,\n    fetchParams?.responseTime,\n    topQuote?.aggregator,\n    numberOfQuotes,\n    hardwareWalletUsed,\n    hardwareWalletType,\n    smartTransactionsEnabled,\n    currentSmartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n  ]);\n\n  const trackAllAvailableQuotesOpened = () => {\n    trackEvent({\n      event: 'All Available Quotes Opened',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        other_quote_selected: usedQuote?.aggregator !== topQuote?.aggregator,\n        other_quote_selected_source:\n          usedQuote?.aggregator === topQuote?.aggregator\n            ? null\n            : usedQuote?.aggregator,\n      },\n    });\n  };\n  const trackQuoteDetailsOpened = () => {\n    trackEvent({\n      event: 'Quote Details Opened',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        other_quote_selected: usedQuote?.aggregator !== topQuote?.aggregator,\n        other_quote_selected_source:\n          usedQuote?.aggregator === topQuote?.aggregator\n            ? null\n            : usedQuote?.aggregator,\n      },\n    });\n  };\n  const trackEditSpendLimitOpened = () => {\n    trackEvent({\n      event: 'Edit Spend Limit Opened',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        custom_spend_limit_set: originalApproveAmount === approveAmount,\n        custom_spend_limit_amount:\n          originalApproveAmount === approveAmount ? null : approveAmount,\n      },\n    });\n  };\n  const trackBestQuoteReviewedEvent = useCallback(() => {\n    trackEvent({\n      event: 'Best Quote Reviewed',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        network_fees: feeInFiat,\n      },\n    });\n  }, [trackEvent, eventObjectBase, feeInFiat]);\n  const trackViewQuotePageLoadedEvent = useCallback(() => {\n    trackEvent({\n      event: 'View Quote Page Loaded',\n      category: MetaMetricsEventCategory.Swaps,\n      sensitiveProperties: {\n        ...eventObjectBase,\n        response_time: currentTimestamp - reviewSwapClickedTimestamp,\n      },\n    });\n  }, [\n    trackEvent,\n    eventObjectBase,\n    currentTimestamp,\n    reviewSwapClickedTimestamp,\n  ]);\n\n  useEffect(() => {\n    if (\n      !bestQuoteReviewedEventSent.current &&\n      [\n        sourceTokenSymbol,\n        sourceTokenValue,\n        destinationTokenSymbol,\n        destinationTokenValue,\n        fetchParams,\n        topQuote,\n        numberOfQuotes,\n        feeInFiat,\n      ].every((dep) => dep !== null && dep !== undefined)\n    ) {\n      bestQuoteReviewedEventSent.current = true;\n      trackBestQuoteReviewedEvent();\n    }\n  }, [\n    fetchParams,\n    topQuote,\n    numberOfQuotes,\n    feeInFiat,\n    destinationTokenSymbol,\n    destinationTokenValue,\n    sourceTokenSymbol,\n    sourceTokenValue,\n    trackBestQuoteReviewedEvent,\n  ]);\n\n  const metaMaskFee = usedQuote.fee;\n\n  /* istanbul ignore next */\n  const onFeeCardTokenApprovalClick = () => {\n    trackEditSpendLimitOpened();\n    dispatch(\n      showModal({\n        name: 'EDIT_APPROVAL_PERMISSION',\n        decimals: selectedFromToken.decimals,\n        origin: 'MetaMask',\n        setCustomAmount: (newCustomPermissionAmount) => {\n          const customPermissionAmount =\n            newCustomPermissionAmount === ''\n              ? originalApproveAmount\n              : newCustomPermissionAmount;\n          const newData = getCustomTxParamsData(approveTxParams.data, {\n            customPermissionAmount,\n            decimals: selectedFromToken.decimals,\n          });\n\n          if (\n            customPermissionAmount?.length &&\n            approveTxParams.data !== newData\n          ) {\n            dispatch(setCustomApproveTxData(newData));\n          }\n        },\n        tokenAmount: originalApproveAmount,\n        customTokenAmount:\n          originalApproveAmount === approveAmount ? null : approveAmount,\n        tokenBalance,\n        tokenSymbol: selectedFromToken.symbol,\n        requiredMinimum: calcTokenAmount(\n          usedQuote.sourceAmount,\n          selectedFromToken.decimals,\n        ),\n      }),\n    );\n  };\n  const actionableBalanceErrorMessage = tokenBalanceUnavailable\n    ? t('swapTokenBalanceUnavailable', [sourceTokenSymbol])\n    : t('swapApproveNeedMoreTokens', [\n        <span key=\"swapApproveNeedMoreTokens-1\" className=\"view-quote__bold\">\n          {tokenBalanceNeeded || ethBalanceNeededStx || ethBalanceNeeded}\n        </span>,\n        tokenBalanceNeeded && !(sourceTokenSymbol === defaultSwapsToken.symbol)\n          ? sourceTokenSymbol\n          : defaultSwapsToken.symbol,\n      ]);\n\n  // Price difference warning\n  const priceSlippageBucket = usedQuote?.priceSlippage?.bucket;\n  const lastPriceDifferenceBucket = usePrevious(priceSlippageBucket);\n\n  // If the user agreed to a different bucket of risk, make them agree again\n  useEffect(() => {\n    if (\n      acknowledgedPriceDifference &&\n      lastPriceDifferenceBucket === GasRecommendations.medium &&\n      priceSlippageBucket === GasRecommendations.high\n    ) {\n      setAcknowledgedPriceDifference(false);\n    }\n  }, [\n    priceSlippageBucket,\n    acknowledgedPriceDifference,\n    lastPriceDifferenceBucket,\n  ]);\n\n  let viewQuotePriceDifferenceComponent = null;\n  const priceSlippageFromSource = useEthFiatAmount(\n    usedQuote?.priceSlippage?.sourceAmountInETH || 0,\n    { showFiat: true },\n  );\n  const priceSlippageFromDestination = useEthFiatAmount(\n    usedQuote?.priceSlippage?.destinationAmountInETH || 0,\n    { showFiat: true },\n  );\n\n  // We cannot present fiat value if there is a calculation error or no slippage\n  // from source or destination\n  const priceSlippageUnknownFiatValue =\n    !priceSlippageFromSource ||\n    !priceSlippageFromDestination ||\n    Boolean(usedQuote?.priceSlippage?.calculationError);\n\n  let priceDifferencePercentage = 0;\n  if (usedQuote?.priceSlippage?.ratio) {\n    priceDifferencePercentage = parseFloat(\n      new BigNumber(usedQuote.priceSlippage.ratio, 10)\n        .minus(1, 10)\n        .times(100, 10)\n        .toFixed(2),\n      10,\n    );\n  }\n\n  const shouldShowPriceDifferenceWarning =\n    !tokenBalanceUnavailable &&\n    !showInsufficientWarning &&\n    usedQuote &&\n    (priceDifferenceRiskyBuckets.includes(priceSlippageBucket) ||\n      priceSlippageUnknownFiatValue);\n\n  if (shouldShowPriceDifferenceWarning) {\n    viewQuotePriceDifferenceComponent = (\n      <ViewQuotePriceDifference\n        usedQuote={usedQuote}\n        sourceTokenValue={sourceTokenValue}\n        destinationTokenValue={destinationTokenValue}\n        priceSlippageFromSource={priceSlippageFromSource}\n        priceSlippageFromDestination={priceSlippageFromDestination}\n        priceDifferencePercentage={priceDifferencePercentage}\n        priceSlippageUnknownFiatValue={priceSlippageUnknownFiatValue}\n        onAcknowledgementClick={() => {\n          setAcknowledgedPriceDifference(true);\n        }}\n        acknowledged={acknowledgedPriceDifference}\n      />\n    );\n  }\n\n  const disableSubmissionDueToPriceWarning =\n    shouldShowPriceDifferenceWarning && !acknowledgedPriceDifference;\n\n  const isShowingWarning =\n    showInsufficientWarning || shouldShowPriceDifferenceWarning;\n\n  const isSwapButtonDisabled = Boolean(\n    submitClicked ||\n      balanceError ||\n      tokenBalanceUnavailable ||\n      disableSubmissionDueToPriceWarning ||\n      (networkAndAccountSupports1559 &&\n        baseAndPriorityFeePerGas === undefined) ||\n      (!networkAndAccountSupports1559 &&\n        (gasPrice === null || gasPrice === undefined)) ||\n      (currentSmartTransactionsEnabled &&\n        (currentSmartTransactionsError || smartTransactionsError)) ||\n      (currentSmartTransactionsEnabled &&\n        smartTransactionsOptInStatus &&\n        !smartTransactionFees?.tradeTxFees),\n  );\n\n  useEffect(() => {\n    if (\n      currentSmartTransactionsEnabled &&\n      smartTransactionsOptInStatus &&\n      !insufficientTokens\n    ) {\n      const unsignedTx = {\n        from: unsignedTransaction.from,\n        to: unsignedTransaction.to,\n        value: unsignedTransaction.value,\n        data: unsignedTransaction.data,\n        gas: unsignedTransaction.gas,\n        chainId,\n      };\n      intervalId = setInterval(() => {\n        if (!swapsSTXLoading) {\n          dispatch(\n            fetchSwapsSmartTransactionFees({\n              unsignedTransaction: unsignedTx,\n              approveTxParams,\n              fallbackOnNotEnoughFunds: false,\n            }),\n          );\n        }\n      }, swapsNetworkConfig.stxGetTransactionsRefreshTime);\n      dispatch(\n        fetchSwapsSmartTransactionFees({\n          unsignedTransaction: unsignedTx,\n          approveTxParams,\n          fallbackOnNotEnoughFunds: false,\n        }),\n      );\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n    return () => clearInterval(intervalId);\n    // eslint-disable-next-line\n  }, [\n    dispatch,\n    currentSmartTransactionsEnabled,\n    smartTransactionsOptInStatus,\n    unsignedTransaction.data,\n    unsignedTransaction.from,\n    unsignedTransaction.value,\n    unsignedTransaction.gas,\n    unsignedTransaction.to,\n    chainId,\n    swapsNetworkConfig.stxGetTransactionsRefreshTime,\n    insufficientTokens,\n  ]);\n\n  useEffect(() => {\n    // Thanks to the next line we will only do quotes polling 3 times before showing a Quote Timeout modal.\n    dispatch(setSwapsQuotesPollingLimitEnabled(true));\n    if (reviewSwapClickedTimestamp) {\n      trackViewQuotePageLoadedEvent();\n    }\n  }, [dispatch, trackViewQuotePageLoadedEvent, reviewSwapClickedTimestamp]);\n\n  useEffect(() => {\n    // if smart transaction error is turned off, reset submit clicked boolean\n    if (\n      !currentSmartTransactionsEnabled &&\n      currentSmartTransactionsError &&\n      submitClicked\n    ) {\n      setSubmitClicked(false);\n    }\n  }, [\n    currentSmartTransactionsEnabled,\n    currentSmartTransactionsError,\n    submitClicked,\n  ]);\n\n  useEffect(() => {\n    if (!usedQuote?.multiLayerL1TradeFeeTotal) {\n      return;\n    }\n    const getEstimatedL1Fees = async () => {\n      try {\n        let l1ApprovalFeeTotal = '0x0';\n        if (approveTxParams) {\n          l1ApprovalFeeTotal = await dispatch(\n            getLayer1GasFee({\n              transactionParams: {\n                ...approveTxParams,\n                gasPrice: addHexPrefix(approveTxParams.gasPrice),\n                value: '0x0', // For approval txs we need to use \"0x0\" here.\n              },\n              chainId,\n            }),\n          );\n          setMultiLayerL1ApprovalFeeTotal(l1ApprovalFeeTotal);\n        }\n        const l1FeeTotal = sumHexes(\n          usedQuote.multiLayerL1TradeFeeTotal,\n          l1ApprovalFeeTotal,\n        );\n        setMultiLayerL1FeeTotal(l1FeeTotal);\n      } catch (e) {\n        captureException(e);\n        setMultiLayerL1FeeTotal(null);\n        setMultiLayerL1ApprovalFeeTotal(null);\n      }\n    };\n    getEstimatedL1Fees();\n  }, [unsignedTransaction, approveTxParams, chainId, usedQuote]);\n\n  useEffect(() => {\n    if (isSmartTransaction) {\n      // Removes a smart transactions error when the component loads.\n      dispatch({\n        type: SET_SMART_TRANSACTIONS_ERROR,\n        payload: null,\n      });\n    }\n  }, [isSmartTransaction, dispatch]);\n\n  return (\n    <div className=\"view-quote\">\n      <div\n        className={classnames('view-quote__content', {\n          'view-quote__content_modal': disableSubmissionDueToPriceWarning,\n        })}\n      >\n        {\n          /* istanbul ignore next */\n          selectQuotePopoverShown && (\n            <SelectQuotePopover\n              quoteDataRows={renderablePopoverData}\n              onClose={() => setSelectQuotePopoverShown(false)}\n              onSubmit={(aggId) => dispatch(swapsQuoteSelected(aggId))}\n              swapToSymbol={destinationTokenSymbol}\n              initialAggId={usedQuote.aggregator}\n              onQuoteDetailsIsOpened={trackQuoteDetailsOpened}\n              hideEstimatedGasFee={\n                smartTransactionsEnabled && smartTransactionsOptInStatus\n              }\n            />\n          )\n        }\n\n        <div\n          className={classnames('view-quote__warning-wrapper', {\n            'view-quote__warning-wrapper--thin': !isShowingWarning,\n          })}\n        >\n          {viewQuotePriceDifferenceComponent}\n          {(showInsufficientWarning || tokenBalanceUnavailable) && (\n            <ActionableMessage\n              message={actionableBalanceErrorMessage}\n              onClose={\n                /* istanbul ignore next */\n                () => setWarningHidden(true)\n              }\n            />\n          )}\n        </div>\n        <div className=\"view-quote__countdown-timer-container\">\n          <CountdownTimer\n            timeStarted={quotesLastFetched}\n            warningTime=\"0:10\"\n            labelKey=\"swapNewQuoteIn\"\n          />\n        </div>\n        <MainQuoteSummary\n          sourceValue={calcTokenValue(sourceTokenValue, sourceTokenDecimals)}\n          sourceDecimals={sourceTokenDecimals}\n          sourceSymbol={sourceTokenSymbol}\n          destinationValue={calcTokenValue(\n            destinationTokenValue,\n            destinationTokenDecimals,\n          )}\n          destinationDecimals={destinationTokenDecimals}\n          destinationSymbol={destinationTokenSymbol}\n          sourceIconUrl={sourceTokenIconUrl}\n          destinationIconUrl={destinationIconUrl}\n        />\n        {currentSmartTransactionsEnabled &&\n          smartTransactionsOptInStatus &&\n          !smartTransactionFees?.tradeTxFees &&\n          !showInsufficientWarning && (\n            <Box marginTop={0} marginBottom={10}>\n              <PulseLoader />\n            </Box>\n          )}\n        {(!currentSmartTransactionsEnabled ||\n          !smartTransactionsOptInStatus ||\n          smartTransactionFees?.tradeTxFees) && (\n          <div\n            className={classnames('view-quote__fee-card-container', {\n              'view-quote__fee-card-container--three-rows':\n                approveTxParams && (!balanceError || warningHidden),\n            })}\n          >\n            <FeeCard\n              primaryFee={{\n                fee: feeInEth,\n                maxFee: maxFeeInEth,\n              }}\n              secondaryFee={{\n                fee: feeInFiat,\n                maxFee: maxFeeInFiat,\n              }}\n              hideTokenApprovalRow={\n                !approveTxParams || (balanceError && !warningHidden)\n              }\n              tokenApprovalSourceTokenSymbol={sourceTokenSymbol}\n              onTokenApprovalClick={onFeeCardTokenApprovalClick}\n              metaMaskFee={String(metaMaskFee)}\n              numberOfQuotes={Object.values(quotes).length}\n              onQuotesClick={\n                /* istanbul ignore next */\n                () => {\n                  trackAllAvailableQuotesOpened();\n                  setSelectQuotePopoverShown(true);\n                }\n              }\n              maxPriorityFeePerGasDecGWEI={hexWEIToDecGWEI(\n                maxPriorityFeePerGas,\n              )}\n              maxFeePerGasDecGWEI={hexWEIToDecGWEI(maxFeePerGas)}\n            />\n          </div>\n        )}\n      </div>\n      <SwapsFooter\n        onSubmit={\n          /* istanbul ignore next */ () => {\n            setSubmitClicked(true);\n            if (!balanceError) {\n              if (\n                currentSmartTransactionsEnabled &&\n                smartTransactionsOptInStatus &&\n                smartTransactionFees?.tradeTxFees\n              ) {\n                dispatch(\n                  signAndSendSwapsSmartTransaction({\n                    unsignedTransaction,\n                    trackEvent,\n                    history,\n                    additionalTrackingParams,\n                  }),\n                );\n              } else {\n                dispatch(\n                  signAndSendTransactions(\n                    history,\n                    trackEvent,\n                    additionalTrackingParams,\n                  ),\n                );\n              }\n            } else if (destinationToken.symbol === defaultSwapsToken.symbol) {\n              history.push(DEFAULT_ROUTE);\n            } else {\n              history.push(`${ASSET_ROUTE}/${destinationToken.address}`);\n            }\n          }\n        }\n        submitText={\n          currentSmartTransactionsEnabled &&\n          smartTransactionsOptInStatus &&\n          swapsSTXLoading\n            ? t('preparingSwap')\n            : t('swap')\n        }\n        hideCancel\n        disabled={isSwapButtonDisabled}\n        className={isShowingWarning ? 'view-quote__thin-swaps-footer' : ''}\n        showTopBorder\n      />\n    </div>\n  );\n}\n","export { default } from './token-details-page';\n","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\nimport { getProviderConfig, getTokens } from '../../ducks/metamask/metamask';\nimport { getTokenList } from '../../selectors';\nimport { useCopyToClipboard } from '../../hooks/useCopyToClipboard';\nimport Identicon from '../../components/ui/identicon';\nimport { I18nContext } from '../../contexts/i18n';\nimport { useTokenTracker } from '../../hooks/useTokenTracker';\nimport { useTokenFiatAmount } from '../../hooks/useTokenFiatAmount';\nimport { showModal } from '../../store/actions';\nimport { NETWORK_TYPES } from '../../../shared/constants/network';\nimport { ASSET_ROUTE, DEFAULT_ROUTE } from '../../helpers/constants/routes';\nimport Tooltip from '../../components/ui/tooltip';\nimport Button from '../../components/ui/button';\nimport Box from '../../components/ui/box';\nimport {\n  TextVariant,\n  FontWeight,\n  DISPLAY,\n  TextAlign,\n  OverflowWrap,\n  TextColor,\n  IconColor,\n} from '../../helpers/constants/design-system';\nimport { isEqualCaseInsensitive } from '../../../shared/modules/string-utils';\nimport {\n  ButtonIcon,\n  ButtonIconSize,\n  IconName,\n  Text,\n} from '../../components/component-library';\n\nexport default function TokenDetailsPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const t = useContext(I18nContext);\n  const tokens = useSelector(getTokens);\n  const tokenList = useSelector(getTokenList);\n  const { address: tokenAddress } = useParams();\n  const tokenMetadata = tokenList[tokenAddress.toLowerCase()];\n  const aggregators = tokenMetadata?.aggregators?.join(', ');\n\n  const token = tokens.find(({ address }) =>\n    isEqualCaseInsensitive(address, tokenAddress),\n  );\n\n  // When the user did not import the token\n  // the token variable will be undefined.\n  // In that case we want to call useTokenTracker with [] instead of [undefined]\n  const { tokensWithBalances } = useTokenTracker({\n    tokens: token ? [token] : [],\n  });\n  const tokenBalance = tokensWithBalances[0]?.string;\n\n  const tokenCurrencyBalance = useTokenFiatAmount(\n    token?.address,\n    tokenBalance,\n    token?.symbol,\n  );\n\n  const { nickname, type: networkType } = useSelector(getProviderConfig);\n\n  const [copied, handleCopy] = useCopyToClipboard();\n\n  if (!token) {\n    return <Redirect to={{ pathname: DEFAULT_ROUTE }} />;\n  }\n  return (\n    <Box className=\"page-container token-details\">\n      <Box marginLeft={5} marginRight={6}>\n        <Text\n          fontWeight={FontWeight.Bold}\n          margin={0}\n          marginTop={4}\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          color={TextColor.textDefault}\n          className=\"token-details__title\"\n        >\n          {t('tokenDetails')}\n          <Button\n            type=\"link\"\n            onClick={() => history.push(`${ASSET_ROUTE}/${token.address}`)}\n            className=\"token-details__closeButton\"\n          />\n        </Text>\n        <Box display={DISPLAY.FLEX} marginTop={4}>\n          <Text\n            align={TextAlign.Center}\n            fontWeight={FontWeight.Bold}\n            margin={0}\n            marginRight={5}\n            variant={TextVariant.headingSm}\n            as=\"h4\"\n            color={TextColor.textDefault}\n            className=\"token-details__token-value\"\n          >\n            {tokenBalance || ''}\n          </Text>\n          <Box marginTop={1}>\n            <Identicon\n              diameter={32}\n              address={token.address}\n              image={tokenMetadata ? tokenMetadata.iconUrl : token.image}\n            />\n          </Box>\n        </Box>\n        <Text\n          margin={0}\n          marginTop={4}\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          color={TextColor.textAlternative}\n        >\n          {tokenCurrencyBalance || ''}\n        </Text>\n        <Text\n          margin={0}\n          marginTop={6}\n          variant={TextVariant.bodyXs}\n          as=\"h6\"\n          color={TextColor.textAlternative}\n          fontWeight={FontWeight.Bold}\n        >\n          {t('tokenContractAddress')}\n        </Text>\n        <Box display={DISPLAY.FLEX}>\n          <Text\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            margin={0}\n            marginTop={2}\n            color={TextColor.textDefault}\n            overflowWrap={OverflowWrap.BreakWord}\n            className=\"token-details__token-address\"\n          >\n            {token.address}\n          </Text>\n          <Tooltip\n            position=\"bottom\"\n            title={copied ? t('copiedExclamation') : t('copyToClipboard')}\n            containerClassName=\"token-details__copy-icon\"\n          >\n            <ButtonIcon\n              ariaLabel=\"copy\"\n              name={copied ? IconName.CopySuccess : IconName.Copy}\n              className=\"token-details__copyIcon\"\n              onClick={() => handleCopy(token.address)}\n              color={IconColor.primaryDefault}\n              size={ButtonIconSize.Sm}\n            />\n          </Tooltip>\n        </Box>\n        <Text\n          variant={TextVariant.bodyXs}\n          as=\"h6\"\n          margin={0}\n          marginTop={4}\n          color={TextColor.textAlternative}\n          fontWeight={FontWeight.Bold}\n        >\n          {t('tokenDecimalTitle')}\n        </Text>\n        <Text\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          margin={0}\n          marginTop={1}\n          color={TextColor.textDefault}\n        >\n          {token.decimals}\n        </Text>\n        <Text\n          variant={TextVariant.bodyXs}\n          as=\"h6\"\n          margin={0}\n          marginTop={4}\n          color={TextColor.textAlternative}\n          fontWeight={FontWeight.Bold}\n        >\n          {t('network')}\n        </Text>\n        <Text\n          variant={TextVariant.bodySm}\n          as=\"h6\"\n          margin={1}\n          marginTop={0}\n          color={TextColor.textDefault}\n        >\n          {networkType === NETWORK_TYPES.RPC\n            ? nickname ?? t('privateNetwork')\n            : t(networkType)}\n        </Text>\n        {aggregators && (\n          <>\n            <Text\n              variant={TextVariant.bodyXs}\n              as=\"h6\"\n              margin={0}\n              marginTop={4}\n              color={TextColor.textAlternative}\n              fontWeight={FontWeight.Bold}\n            >\n              {t('tokenList')}:\n            </Text>\n            <Text\n              variant={TextVariant.bodySm}\n              as=\"h6\"\n              margin={0}\n              marginTop={1}\n              color={TextColor.textDefault}\n            >\n              {`${aggregators}.`}\n            </Text>\n          </>\n        )}\n        <Button\n          type=\"secondary\"\n          className=\"token-details__hide-token-button\"\n          onClick={() => {\n            dispatch(\n              showModal({ name: 'HIDE_TOKEN_CONFIRMATION', token, history }),\n            );\n          }}\n        >\n          <Text\n            variant={TextVariant.bodySm}\n            as=\"h6\"\n            color={TextColor.primaryDefault}\n          >\n            {t('hideToken')}\n          </Text>\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import UnlockPage from './unlock-page.container';\n\nexport default UnlockPage;\n","import { EventEmitter } from 'events';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '../../components/component-library';\nimport { TextVariant, TextColor } from '../../helpers/constants/design-system';\nimport Button from '../../components/ui/button';\nimport TextField from '../../components/ui/text-field';\nimport Mascot from '../../components/ui/mascot';\nimport { DEFAULT_ROUTE } from '../../helpers/constants/routes';\nimport {\n  MetaMetricsContextProp,\n  MetaMetricsEventCategory,\n  MetaMetricsEventName,\n} from '../../../shared/constants/metametrics';\nimport { SUPPORT_LINK } from '../../../shared/lib/ui-utils';\nimport { isBeta } from '../../helpers/utils/build-types';\nimport { getCaretCoordinates } from './unlock-page.util';\n\nexport default class UnlockPage extends Component {\n  static contextTypes = {\n    trackEvent: PropTypes.func,\n    t: PropTypes.func,\n  };\n\n  static propTypes = {\n    /**\n     * History router for redirect after action\n     */\n    history: PropTypes.object.isRequired,\n    /**\n     * If isUnlocked is true will redirect to most recent route in history\n     */\n    isUnlocked: PropTypes.bool,\n    /**\n     * onClick handler for \"Forgot password?\" link\n     */\n    onRestore: PropTypes.func,\n    /**\n     * onSubmit handler when form is submitted\n     */\n    onSubmit: PropTypes.func,\n    /**\n     * Force update metamask data state\n     */\n    forceUpdateMetamaskState: PropTypes.func,\n  };\n\n  state = {\n    password: '',\n    error: null,\n  };\n\n  submitting = false;\n\n  failed_attempts = 0;\n\n  animationEventEmitter = new EventEmitter();\n\n  UNSAFE_componentWillMount() {\n    const { isUnlocked, history } = this.props;\n\n    if (isUnlocked) {\n      history.push(DEFAULT_ROUTE);\n    }\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { password } = this.state;\n    const { onSubmit, forceUpdateMetamaskState } = this.props;\n\n    if (password === '' || this.submitting) {\n      return;\n    }\n\n    this.setState({ error: null });\n    this.submitting = true;\n\n    try {\n      await onSubmit(password);\n      this.context.trackEvent(\n        {\n          category: MetaMetricsEventCategory.Navigation,\n          event: MetaMetricsEventName.AppUnlocked,\n          properties: {\n            failed_attempts: this.failed_attempts,\n          },\n        },\n        {\n          isNewVisit: true,\n        },\n      );\n    } catch ({ message }) {\n      this.failed_attempts += 1;\n\n      if (message === 'Incorrect password') {\n        await forceUpdateMetamaskState();\n        this.context.trackEvent({\n          category: MetaMetricsEventCategory.Navigation,\n          event: MetaMetricsEventName.AppUnlockedFailed,\n          properties: {\n            reason: 'incorrect_password',\n            failed_attempts: this.failed_attempts,\n          },\n        });\n      }\n\n      this.setState({ error: message });\n      this.submitting = false;\n    }\n  };\n\n  handleInputChange({ target }) {\n    this.setState({ password: target.value, error: null });\n    // tell mascot to look at page action\n    if (target.getBoundingClientRect) {\n      const element = target;\n      const boundingRect = element.getBoundingClientRect();\n      const coordinates = getCaretCoordinates(element, element.selectionEnd);\n      this.animationEventEmitter.emit('point', {\n        x: boundingRect.left + coordinates.left - element.scrollLeft,\n        y: boundingRect.top + coordinates.top - element.scrollTop,\n      });\n    }\n  }\n\n  renderSubmitButton() {\n    const style = {\n      backgroundColor: 'var(--color-primary-default)',\n      color: 'var(--color-primary-inverse)',\n      marginTop: '20px',\n      height: '60px',\n      fontWeight: '400',\n      boxShadow: 'none',\n      borderRadius: '100px',\n    };\n\n    return (\n      <Button\n        type=\"submit\"\n        data-testid=\"unlock-submit\"\n        style={style}\n        disabled={!this.state.password}\n        variant=\"contained\"\n        size=\"large\"\n        onClick={this.handleSubmit}\n      >\n        {this.context.t('unlock')}\n      </Button>\n    );\n  }\n\n  render() {\n    const { password, error } = this.state;\n    const { t } = this.context;\n    const { onRestore } = this.props;\n\n    let needHelpText = t('appNameMmi');\n\n    ///: BEGIN:ONLY_INCLUDE_IF(build-main,build-beta,build-flask)\n    needHelpText = t('needHelpLinkText');\n    ///: END:ONLY_INCLUDE_IF\n\n    return (\n      <div className=\"unlock-page__container\">\n        <div className=\"unlock-page\" data-testid=\"unlock-page\">\n          <div className=\"unlock-page__mascot-container\">\n            <Mascot\n              animationEventEmitter={this.animationEventEmitter}\n              width=\"120\"\n              height=\"120\"\n            />\n            {isBeta() ? (\n              <div className=\"unlock-page__mascot-container__beta\">\n                {t('beta')}\n              </div>\n            ) : null}\n          </div>\n          <Text\n            data-testid=\"unlock-page-title\"\n            as=\"h1\"\n            variant={TextVariant.headingLg}\n            marginTop={1}\n            color={TextColor.textAlternative}\n          >\n            {t('welcomeBack')}\n          </Text>\n          <div>{t('unlockMessage')}</div>\n          <form className=\"unlock-page__form\" onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"password\"\n              data-testid=\"unlock-password\"\n              label={t('password')}\n              type=\"password\"\n              value={password}\n              onChange={(event) => this.handleInputChange(event)}\n              error={error}\n              autoFocus\n              autoComplete=\"current-password\"\n              theme=\"material\"\n              fullWidth\n            />\n          </form>\n          {this.renderSubmitButton()}\n          <div className=\"unlock-page__links\">\n            <Button\n              type=\"link\"\n              key=\"import-account\"\n              className=\"unlock-page__link\"\n              onClick={() => onRestore()}\n            >\n              {t('forgotPassword')}\n            </Button>\n          </div>\n          <div className=\"unlock-page__support\">\n            {t('needHelp', [\n              <a\n                href={SUPPORT_LINK}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                key=\"need-help-link\"\n                onClick={() => {\n                  this.context.trackEvent(\n                    {\n                      category: MetaMetricsEventCategory.Navigation,\n                      event: MetaMetricsEventName.SupportLinkClicked,\n                      properties: {\n                        url: SUPPORT_LINK,\n                      },\n                    },\n                    {\n                      contextPropsIntoEventProperties: [\n                        MetaMetricsContextProp.PageTitle,\n                      ],\n                    },\n                  );\n                }}\n              >\n                {needHelpText}\n              </a>,\n            ])}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getEnvironmentType } from '../../../app/scripts/lib/util';\nimport { ENVIRONMENT_TYPE_POPUP } from '../../../shared/constants/app';\nimport {\n  DEFAULT_ROUTE,\n  RESTORE_VAULT_ROUTE,\n} from '../../helpers/constants/routes';\nimport {\n  tryUnlockMetamask,\n  markPasswordForgotten,\n  forceUpdateMetamaskState,\n} from '../../store/actions';\nimport UnlockPage from './unlock-page.component';\n\nconst mapStateToProps = (state) => {\n  const {\n    metamask: { isUnlocked },\n  } = state;\n  return {\n    isUnlocked,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    tryUnlockMetamask: (password) => dispatch(tryUnlockMetamask(password)),\n    markPasswordForgotten: () => dispatch(markPasswordForgotten()),\n    forceUpdateMetamaskState: () => forceUpdateMetamaskState(dispatch),\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    // eslint-disable-next-line no-shadow\n    markPasswordForgotten,\n    // eslint-disable-next-line no-shadow\n    tryUnlockMetamask,\n    ...restDispatchProps\n  } = dispatchProps;\n  const { history, onSubmit: ownPropsSubmit, ...restOwnProps } = ownProps;\n\n  const onImport = async () => {\n    await markPasswordForgotten();\n    history.push(RESTORE_VAULT_ROUTE);\n\n    if (getEnvironmentType() === ENVIRONMENT_TYPE_POPUP) {\n      global.platform.openExtensionInBrowser(RESTORE_VAULT_ROUTE);\n    }\n  };\n\n  const onSubmit = async (password) => {\n    await tryUnlockMetamask(password);\n    history.push(DEFAULT_ROUTE);\n  };\n\n  return {\n    ...stateProps,\n    ...restDispatchProps,\n    ...restOwnProps,\n    onRestore: onImport,\n    onSubmit: ownPropsSubmit || onSubmit,\n    history,\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps, mergeProps),\n)(UnlockPage);\n","export function getCaretCoordinates(element, position) {\n  const div = document.createElement('div');\n  div.id = 'password-mirror-div';\n  document.body.appendChild(div);\n  const computed = window.getComputedStyle(element);\n  div.textContent = new Array(position + 1).join('•');\n  const span = document.createElement('span');\n  span.textContent = '•';\n  div.appendChild(span);\n\n  const coordinates = {\n    top: span.offsetTop + parseInt(computed.borderTopWidth, 10),\n    left: span.offsetLeft + parseInt(computed.borderLeftWidth, 10),\n  };\n  document.body.removeChild(div);\n  return coordinates;\n}\n","import { TransactionMeta } from '@metamask/transaction-controller';\nimport { UserOperationControllerState } from '@metamask/user-operation-controller';\nimport { createSelector } from 'reselect';\n\nexport type AccountAbstractionState = {\n  confirmTransaction?: { txData?: TransactionMeta };\n  metamask: UserOperationControllerState;\n};\n\nexport function getUserOperations(state: AccountAbstractionState) {\n  return state.metamask.userOperations || {};\n}\n\nexport const selectUserOperationMetadata = createSelector(\n  getUserOperations,\n  (_state: AccountAbstractionState, userOperationId: string) => userOperationId,\n  (userOperations, userOperationId) => userOperations[userOperationId],\n);\n\nexport function getUserOperation(state: AccountAbstractionState) {\n  const currentTransaction = state.confirmTransaction?.txData;\n\n  if (!currentTransaction) {\n    return undefined;\n  }\n\n  const { id, isUserOperation } = currentTransaction;\n\n  if (!isUserOperation) {\n    return undefined;\n  }\n\n  const userOperations = getUserOperations(state);\n\n  return userOperations[id];\n}\n\nexport function getIsUsingPaymaster(state: AccountAbstractionState) {\n  const userOperation = getUserOperation(state);\n\n  if (!userOperation) {\n    return false;\n  }\n\n  const paymasterData = userOperation.userOperation?.paymasterAndData;\n\n  return Boolean(paymasterData?.length) && paymasterData !== '0x';\n}\n\nexport const selectPaymasterData = createSelector(\n  selectUserOperationMetadata,\n  (userOperationMetadata) => {\n    const paymasterAndData =\n      userOperationMetadata?.userOperation?.paymasterAndData;\n\n    return paymasterAndData === '0x' ? undefined : paymasterAndData;\n  },\n);\n\nexport const selectPaymasterAddress = createSelector(\n  selectPaymasterData,\n  (paymasterData) => {\n    return paymasterData?.slice(0, 42);\n  },\n);\n","import {\n  EthAccountType,\n  BtcAccountType,\n  InternalAccount,\n} from '@metamask/keyring-api';\nimport { AccountsControllerState } from '@metamask/accounts-controller';\nimport {\n  isBtcMainnetAddress,\n  isBtcTestnetAddress,\n} from '../../shared/lib/multichain';\nimport { getSelectedInternalAccount, getInternalAccounts } from './selectors';\n\nexport type AccountsState = {\n  metamask: AccountsControllerState;\n};\n\nfunction isBtcAccount(account: InternalAccount) {\n  const { P2wpkh } = BtcAccountType;\n\n  return Boolean(account && account.type === P2wpkh);\n}\n\nexport function isSelectedInternalAccountEth(state: AccountsState) {\n  const account = getSelectedInternalAccount(state);\n  const { Eoa, Erc4337 } = EthAccountType;\n\n  return Boolean(account && (account.type === Eoa || account.type === Erc4337));\n}\n\nexport function isSelectedInternalAccountBtc(state: AccountsState) {\n  return isBtcAccount(getSelectedInternalAccount(state));\n}\n\nfunction hasCreatedBtcAccount(\n  state: AccountsState,\n  isAddressCallback: (address: string) => boolean,\n) {\n  const accounts = getInternalAccounts(state);\n  return accounts.some((account) => {\n    return isBtcAccount(account) && isAddressCallback(account.address);\n  });\n}\n\nexport function hasCreatedBtcMainnetAccount(state: AccountsState) {\n  return hasCreatedBtcAccount(state, isBtcMainnetAddress);\n}\n\nexport function hasCreatedBtcTestnetAccount(state: AccountsState) {\n  return hasCreatedBtcAccount(state, isBtcTestnetAddress);\n}\n","import { createSelector } from 'reselect';\nimport {\n  Alert,\n  ConfirmAlertsState,\n} from '../ducks/confirm-alerts/confirm-alerts';\n\nexport type AlertsState = {\n  confirmAlerts: ConfirmAlertsState;\n};\n\nexport function selectAlerts(state: AlertsState, ownerId: string): Alert[] {\n  return state.confirmAlerts.alerts[ownerId] ?? [];\n}\n\nexport const selectGeneralAlerts = createSelector(\n  (state: AlertsState, ownerId: string) => selectAlerts(state, ownerId),\n  (alerts) => alerts.filter((alert) => !alert.field),\n);\n\nexport const selectFieldAlerts = createSelector(\n  (state: AlertsState, ownerId: string) => selectAlerts(state, ownerId),\n  (alerts) => alerts.filter((alert) => alert.field),\n);\n\nexport function selectConfirmedAlertKeys(\n  state: AlertsState,\n  ownerId: string,\n): string[] {\n  const { confirmed } = state.confirmAlerts;\n  const ownerConfirmed = confirmed[ownerId] || {};\n  return Object.keys(ownerConfirmed).filter((key) => ownerConfirmed[key]);\n}\n","import { createSelector } from 'reselect';\nimport type { AuthenticationController } from '@metamask/profile-sync-controller';\n\ntype AppState = {\n  metamask: AuthenticationController.AuthenticationControllerState & {\n    participateInMetaMetrics: boolean;\n  };\n};\n\nconst getMetamask = (state: AppState) => state.metamask;\n\n/**\n * Selector to determine if the user is signed in.\n *\n * This selector retrieves the `isSignedIn` property from the `metamask` state using the `createSelector` function from 'reselect'.\n * It provides a memoized selector that returns the sign-in status of the user.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if the user is signed in, false otherwise.\n */\nexport const selectIsSignedIn = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isSignedIn,\n);\n\n/**\n * Selector to determine if the user participates in MetaMetrics.\n *\n * This selector accesses the `participateInMetaMetrics` property from the `metamask` state using the `createSelector` function.\n * It provides a memoized selector that returns whether the user has opted into MetaMetrics.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if the user participates in MetaMetrics, false otherwise.\n */\nexport const selectParticipateInMetaMetrics = createSelector(\n  [getMetamask],\n  (metamask) => metamask.participateInMetaMetrics,\n);\n\n/**\n * Selector to retrieve session data.\n *\n * This selector fetches the `sessionData` from the `metamask` state using the `createSelector` function.\n * It provides a memoized selector that returns the session data stored in the MetaMask state.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {any} Returns the session data associated with the current user session.\n */\nexport const selectSessionData = createSelector(\n  [getMetamask],\n  (metamask) => metamask.sessionData,\n);\n","import { createSelector } from 'reselect';\nimport { NotificationServicesController } from '@metamask/notification-services-controller';\nimport { createDeepEqualSelector } from '../util';\n\nconst { TRIGGER_TYPES } = NotificationServicesController.Constants;\n\ntype Notification = NotificationServicesController.Types.INotification;\n\ntype AppState = {\n  metamask: NotificationServicesController.NotificationServicesControllerState;\n};\n\nconst getMetamask = (state: AppState) => state.metamask;\n\n/**\n * Selector to get the list of MetaMask notifications.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {Notification[]} An array of notifications.\n */\nexport const getMetamaskNotifications = createSelector(\n  [getMetamask],\n  (metamask) => metamask.metamaskNotificationsList,\n);\n\n/**\n * Factory function to create a selector that retrieves a specific MetaMask notification by ID.\n *\n * This function returns a selector that is tailored to fetch a notification by its ID.\n *\n * @param id - The ID of the notification to retrieve.\n * @returns A selector function that takes the AppState and returns the notification.\n */\nexport const getMetamaskNotificationById = (id: string) => {\n  return createDeepEqualSelector(\n    [getMetamaskNotifications],\n    (notifications: Notification[]): Notification | undefined => {\n      return notifications.find((notification) => notification.id === id);\n    },\n  );\n};\n\n/**\n * Selector to get the list of read MetaMask notifications.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {Notification[]} An array of notifications that have been read.\n */\nexport const getMetamaskNotificationsReadList = createSelector(\n  [getMetamask],\n  (metamask) => metamask.metamaskNotificationsReadList,\n);\n\n/**\n * Selector to get the count of unread MetaMask notifications.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {number} The count of notifications that have not been read.\n */\nexport const getMetamaskNotificationsUnreadCount = createSelector(\n  [getMetamaskNotifications],\n  (notifications: Notification[]) => {\n    return notifications\n      ? notifications.filter((notification) => !notification.isRead).length\n      : 0;\n  },\n);\n\n/**\n * Selector to get the count of unread feature announcement notifications.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {number} The count of unread feature announcement notifications.\n */\nexport const getFeatureAnnouncementsUnreadCount = createSelector(\n  [getMetamaskNotifications],\n  (notifications: Notification[]) => {\n    return notifications\n      ? notifications.filter(\n          (notification) =>\n            !notification.isRead &&\n            notification.type === TRIGGER_TYPES.FEATURES_ANNOUNCEMENT,\n        ).length\n      : 0;\n  },\n);\n\n/**\n * Selector to get the count of read feature announcement notifications.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {number} The count of read feature announcement notifications.\n */\nexport const getFeatureAnnouncementsReadCount = createSelector(\n  [getMetamaskNotifications],\n  (notifications: Notification[]) => {\n    return notifications\n      ? notifications.filter(\n          (notification) =>\n            notification.isRead &&\n            notification.type === TRIGGER_TYPES.FEATURES_ANNOUNCEMENT,\n        ).length\n      : 0;\n  },\n);\n\n/**\n * Selector to get the count of unread non-feature announcement notifications.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {number} The count of unread non-feature announcement notifications.\n */\nexport const getOnChainMetamaskNotificationsUnreadCount = createSelector(\n  [getMetamaskNotifications],\n  (notifications: Notification[]) => {\n    return notifications\n      ? notifications.filter(\n          (notification) =>\n            !notification.isRead &&\n            notification.type !== TRIGGER_TYPES.FEATURES_ANNOUNCEMENT,\n        ).length\n      : 0;\n  },\n);\n\n/**\n * Selector to get the count of read non-feature announcement notifications.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {number} The count of read non-feature announcement notifications.\n */\nexport const getOnChainMetamaskNotificationsReadCount = createSelector(\n  [getMetamaskNotifications],\n  (notifications: Notification[]) => {\n    return notifications\n      ? notifications.filter(\n          (notification) =>\n            notification.isRead &&\n            notification.type !== TRIGGER_TYPES.FEATURES_ANNOUNCEMENT,\n        ).length\n      : 0;\n  },\n);\n\n/**\n * Selector to determine if the MetaMask notifications feature has been seen by the user.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if the MetaMask notifications feature has been seen, false otherwise.\n */\nexport const selectIsMetamaskNotificationsFeatureSeen = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isMetamaskNotificationsFeatureSeen,\n);\n\n/**\n * Selector to determine if MetaMask notifications are enabled.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if MetaMask notifications are enabled, false otherwise.\n */\nexport const selectIsMetamaskNotificationsEnabled = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isNotificationServicesEnabled,\n);\n\n/**\n * Selector to determine if feature announcements are enabled.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if feature announcements are enabled, false otherwise.\n */\nexport const selectIsFeatureAnnouncementsEnabled = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isFeatureAnnouncementsEnabled,\n);\n\n/**\n * Selector to determine if MetaMask notifications are currently being created.\n *\n * This selector checks the `isUpdatingMetamaskNotifications` property of the `metamask` state to see if the notifications are in the process of being created.\n * It uses the `createSelector` function from 'reselect' for memoization, improving performance by avoiding unnecessary recalculations.\n *\n * @param state - The current state of the Redux store.\n * @returns Returns true if MetaMask notifications are being created, false otherwise.\n */\nexport const getIsUpdatingMetamaskNotifications = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isUpdatingMetamaskNotifications,\n);\n\n/**\n * Selector to determine if MetaMask notifications are currently being fetched.\n *\n * This selector accesses the `isFetchingMetamaskNotifications` property from the `metamask` state to check if the notifications are currently being fetched.\n * It leverages the `createSelector` function for memoization, which helps in optimizing the performance by caching the result until the input selectors' outputs change.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if MetaMask notifications are being fetched, false otherwise.\n */\nexport const isFetchingMetamaskNotifications = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isFetchingMetamaskNotifications,\n);\n\n/**\n * Selector to determine if the MetaMask notifications account is currently being updated.\n *\n * This selector checks the `isUpdatingMetamaskNotificationsAccount` property of the `metamask` state to see if the account associated with MetaMask notifications is in the process of being updated.\n * It uses the `createSelector` function from 'reselect' for memoization, improving performance by avoiding unnecessary recalculations.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if the MetaMask notifications account is being updated, false otherwise.\n */\nexport const getIsUpdatingMetamaskNotificationsAccount = createSelector(\n  [getMetamask],\n  (metamask) => {\n    return metamask.isUpdatingMetamaskNotificationsAccount;\n  },\n);\n\n/**\n * Selector to determine if the presence of accounts is currently being checked.\n *\n * This selector accesses the `isCheckingAccountsPresence` property from the `metamask` state to check if the system is currently verifying the presence of accounts.\n * It leverages the `createSelector` function for memoization, which helps in optimizing performance by caching the result until the input selectors' outputs change.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if the account presence check is ongoing, false otherwise.\n */\nexport const getIsCheckingAccountsPresence = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isCheckingAccountsPresence,\n);\n","import { createSelector } from 'reselect';\nimport type { UserStorageController } from '@metamask/profile-sync-controller';\n\ntype AppState = {\n  metamask: UserStorageController.UserStorageControllerState;\n};\n\nconst getMetamask = (state: AppState) => state.metamask;\n\n/**\n * Selector to determine if profile syncing is enabled.\n *\n * This selector uses the `createSelector` function from 'reselect' to compute whether profile syncing is enabled,\n * based on the `isProfileSyncingEnabled` property of the `metamask` object in the Redux store.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if profile syncing is enabled, false otherwise.\n */\nexport const selectIsProfileSyncingEnabled = createSelector(\n  [getMetamask],\n  (metamask) => metamask.isProfileSyncingEnabled,\n);\n\n/**\n * Selector to determine if the profile syncing update is currently loading.\n *\n * This selector uses the `createSelector` function from 'reselect' to compute whether the update process for profile syncing is currently in a loading state,\n * based on the `isProfileSyncingUpdateLoading` property of the `metamask` object in the Redux store.\n *\n * @param {AppState} state - The current state of the Redux store.\n * @returns {boolean} Returns true if the profile syncing update is loading, false otherwise.\n */\nexport const selectIsProfileSyncingUpdateLoading = createSelector(\n  [getMetamask],\n  (metamask) => {\n    return metamask.isProfileSyncingUpdateLoading;\n  },\n);\n","import { NftContract } from '@metamask/assets-controllers';\nimport { createSelector } from 'reselect';\nimport { getMemoizedCurrentChainId } from './selectors';\n\ntype NftState = {\n  metamask: {\n    allNftContracts: {\n      [account: string]: {\n        [chainId: string]: NftContract[];\n      };\n    };\n  };\n};\n\nfunction getNftContractsByChainByAccount(state: NftState) {\n  return state.metamask.allNftContracts ?? {};\n}\n\nexport const getNftContractsByAddressByChain = createSelector(\n  getNftContractsByChainByAccount,\n  (nftContractsByChainByAccount) => {\n    const userAccounts = Object.keys(nftContractsByChainByAccount);\n\n    const allNftContracts = userAccounts\n      .map((account) =>\n        Object.keys(nftContractsByChainByAccount[account]).map((chainId) =>\n          nftContractsByChainByAccount[account][chainId].map((contract) => ({\n            ...contract,\n            chainId,\n          })),\n        ),\n      )\n      .flat()\n      .flat();\n\n    return allNftContracts.reduce((acc, contract) => {\n      const { chainId, ...data } = contract;\n\n      const chainIdContracts = acc[chainId] ?? {};\n      acc[chainId] = chainIdContracts;\n\n      chainIdContracts[data.address.toLowerCase()] = data;\n\n      return acc;\n    }, {} as { [chainId: string]: { [address: string]: NftContract } });\n  },\n);\n\nexport const getNftContractsByAddressOnCurrentChain = createSelector(\n  getNftContractsByAddressByChain,\n  getMemoizedCurrentChainId,\n  (nftContractsByAddressByChain, currentChainId) => {\n    return nftContractsByAddressByChain[currentChainId] ?? {};\n  },\n);\n","import { createSelector } from 'reselect';\nimport { DefaultRootState } from 'react-redux';\nimport {\n  unapprovedPersonalMsgsSelector,\n  unapprovedTypedMessagesSelector,\n} from './transactions';\nimport { createDeepEqualSelector } from './util';\n\nexport const selectUnapprovedMessages = createSelector(\n  unapprovedPersonalMsgsSelector,\n  unapprovedTypedMessagesSelector,\n  (personalMsgs, typedMessages) => ({\n    ...personalMsgs,\n    ...typedMessages,\n  }),\n);\n\nconst internalSelectUnapprovedMessage = createSelector(\n  selectUnapprovedMessages,\n  (_state: DefaultRootState, messageId: string) => messageId,\n  (messages, messageId) => messages[messageId],\n);\n\nexport const selectUnapprovedMessage = createDeepEqualSelector(\n  internalSelectUnapprovedMessage,\n  (message) => message,\n);\n"]}